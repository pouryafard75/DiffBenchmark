{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private Tag tag;",
      "right" : "private Tag tag;",
      "info" : "FieldDeclaration[597-613]:FieldDeclaration[597-613]"
    }, {
      "left" : "public Element(Tag tag, String baseUri, Attributes attributes)",
      "right" : "public Element(Tag tag, String baseUri, Attributes attributes)",
      "info" : "MethodDeclaration[618-1079]:MethodDeclaration[618-1079]"
    }, {
      "left" : "public Element(Tag tag, String baseUri)",
      "right" : "public Element(Tag tag, String baseUri)",
      "info" : "MethodDeclaration[1089-1464]:MethodDeclaration[1089-1464]"
    }, {
      "left" : "public String nodeName()",
      "right" : "public String nodeName()",
      "info" : "MethodDeclaration[1470-1546]:MethodDeclaration[1470-1546]"
    }, {
      "left" : "public String tagName()",
      "right" : "public String tagName()",
      "info" : "MethodDeclaration[1552-1731]:MethodDeclaration[1552-1731]"
    }, {
      "left" : "public Element tagName(String tagName)",
      "right" : "public Element tagName(String tagName)",
      "info" : "MethodDeclaration[1737-2160]:MethodDeclaration[1737-2160]"
    }, {
      "left" : "public Tag tag()",
      "right" : "public Tag tag()",
      "info" : "MethodDeclaration[2166-2301]:MethodDeclaration[2166-2301]"
    }, {
      "left" : "public boolean isBlock()",
      "right" : "public boolean isBlock()",
      "info" : "MethodDeclaration[2311-2591]:MethodDeclaration[2311-2591]"
    }, {
      "left" : "public String id()",
      "right" : "public String id()",
      "info" : "MethodDeclaration[2597-2841]:MethodDeclaration[2597-2841]"
    }, {
      "left" : "public Element attr(String attributeKey, String attributeValue)",
      "right" : "public Element attr(String attributeKey, String attributeValue)",
      "info" : "MethodDeclaration[2847-3209]:MethodDeclaration[2847-3209]"
    }, {
      "left" : "public Map<String, String> dataset()",
      "right" : "public Map<String, String> dataset()",
      "info" : "MethodDeclaration[3215-3985]:MethodDeclaration[3215-3985]"
    }, {
      "left" : "public final Element parent()",
      "right" : "public final Element parent()",
      "info" : "MethodDeclaration[3991-4079]:MethodDeclaration[3991-4079]"
    }, {
      "left" : "public Elements parents()",
      "right" : "public Elements parents()",
      "info" : "MethodDeclaration[4085-4379]:MethodDeclaration[4085-4379]"
    }, {
      "left" : "private static void accumulateParents(Element el, Elements parents)",
      "right" : "private static void accumulateParents(Element el, Elements parents)",
      "info" : "MethodDeclaration[4385-4656]:MethodDeclaration[4385-4656]"
    }, {
      "left" : "public Element child(int index)",
      "right" : "public Element child(int index)",
      "info" : "MethodDeclaration[4662-5254]:MethodDeclaration[4662-5254]"
    }, {
      "left" : "public Elements children()",
      "right" : "public Elements children()",
      "info" : "MethodDeclaration[5260-5941]:MethodDeclaration[5260-5941]"
    }, {
      "left" : "public List<TextNode> textNodes()",
      "right" : "public List<TextNode> textNodes()",
      "info" : "MethodDeclaration[5947-7135]:MethodDeclaration[5947-7135]"
    }, {
      "left" : "public List<DataNode> dataNodes()",
      "right" : "public List<DataNode> dataNodes()",
      "info" : "MethodDeclaration[7141-7784]:MethodDeclaration[7141-7784]"
    }, {
      "left" : "public Elements select(String cssQuery)",
      "right" : "public Elements select(String cssQuery)",
      "info" : "MethodDeclaration[7790-8761]:MethodDeclaration[7790-8761]"
    }, {
      "left" : "public Element appendChild(Node child)",
      "right" : "public Element appendChild(Node child)",
      "info" : "MethodDeclaration[8771-9254]:MethodDeclaration[8771-9254]"
    }, {
      "left" : "public Element prependChild(Node child)",
      "right" : "public Element prependChild(Node child)",
      "info" : "MethodDeclaration[9260-9596]:MethodDeclaration[9260-9596]"
    }, {
      "left" : "public Element insertChildren(int index, Collection<? extends Node> children)",
      "right" : "public Element insertChildren(int index, Collection<? extends Node> children)",
      "info" : "MethodDeclaration[9603-10641]:MethodDeclaration[9603-10641]"
    }, {
      "left" : "public Element appendElement(String tagName)",
      "right" : "public Element appendElement(String tagName)",
      "info" : "MethodDeclaration[10651-11134]:MethodDeclaration[10651-11134]"
    }, {
      "left" : "public Element prependElement(String tagName)",
      "right" : "public Element prependElement(String tagName)",
      "info" : "MethodDeclaration[11144-11631]:MethodDeclaration[11144-11631]"
    }, {
      "left" : "public Element appendText(String text)",
      "right" : "public Element appendText(String text)",
      "info" : "MethodDeclaration[11641-11944]:MethodDeclaration[11641-11944]"
    }, {
      "left" : "public Element prependText(String text)",
      "right" : "public Element prependText(String text)",
      "info" : "MethodDeclaration[11954-12260]:MethodDeclaration[11954-12260]"
    }, {
      "left" : "public Element append(String html)",
      "right" : "public Element append(String html)",
      "info" : "MethodDeclaration[12270-12768]:MethodDeclaration[12270-12768]"
    }, {
      "left" : "public Element prepend(String html)",
      "right" : "public Element prepend(String html)",
      "info" : "MethodDeclaration[12778-13304]:MethodDeclaration[12778-13304]"
    }, {
      "left" : "public Element before(String html)",
      "right" : "public Element before(String html)",
      "info" : "MethodDeclaration[13310-13646]:MethodDeclaration[13310-13646]"
    }, {
      "left" : "public Element before(Node node)",
      "right" : "public Element before(Node node)",
      "info" : "MethodDeclaration[13652-13969]:MethodDeclaration[13652-13969]"
    }, {
      "left" : "public Element after(String html)",
      "right" : "public Element after(String html)",
      "info" : "MethodDeclaration[13975-14308]:MethodDeclaration[13975-14308]"
    }, {
      "left" : "public Element after(Node node)",
      "right" : "public Element after(Node node)",
      "info" : "MethodDeclaration[14314-14628]:MethodDeclaration[14314-14628]"
    }, {
      "left" : "public Element empty()",
      "right" : "public Element empty()",
      "info" : "MethodDeclaration[14634-14836]:MethodDeclaration[14634-14836]"
    }, {
      "left" : "public Element wrap(String html)",
      "right" : "public Element wrap(String html)",
      "info" : "MethodDeclaration[14842-15173]:MethodDeclaration[14842-15173]"
    }, {
      "left" : "public String cssSelector()",
      "right" : "public String cssSelector()",
      "info" : "MethodDeclaration[15179-16334]:MethodDeclaration[15179-16334]"
    }, {
      "left" : "public Elements siblingElements()",
      "right" : "public Elements siblingElements()",
      "info" : "MethodDeclaration[16340-16921]:MethodDeclaration[16340-16921]"
    }, {
      "left" : "public Element nextElementSibling()",
      "right" : "public Element nextElementSibling()",
      "info" : "MethodDeclaration[16927-17696]:MethodDeclaration[16927-17696]"
    }, {
      "left" : "public Element previousElementSibling()",
      "right" : "public Element previousElementSibling()",
      "info" : "MethodDeclaration[17702-18222]:MethodDeclaration[17702-18222]"
    }, {
      "left" : "public Element firstElementSibling()",
      "right" : "public Element firstElementSibling()",
      "info" : "MethodDeclaration[18228-18603]:MethodDeclaration[18228-18603]"
    }, {
      "left" : "public Integer elementSiblingIndex()",
      "right" : "public Integer elementSiblingIndex()",
      "info" : "MethodDeclaration[18613-18947]:MethodDeclaration[18613-18947]"
    }, {
      "left" : "public Element lastElementSibling()",
      "right" : "public Element lastElementSibling()",
      "info" : "MethodDeclaration[18953-19288]:MethodDeclaration[18953-19288]"
    }, {
      "left" : "private static <E extends Element> Integer indexInList(Element search, List<E> elements)",
      "right" : "private static <E extends Element> Integer indexInList(Element search, List<E> elements)",
      "info" : "MethodDeclaration[19298-19655]:MethodDeclaration[19298-19655]"
    }, {
      "left" : "public Elements getElementsByTag(String tagName)",
      "right" : "public Elements getElementsByTag(String tagName)",
      "info" : "MethodDeclaration[19686-20199]:MethodDeclaration[19686-20199]"
    }, {
      "left" : "public Element getElementById(String id)",
      "right" : "public Element getElementById(String id)",
      "info" : "MethodDeclaration[20205-20987]:MethodDeclaration[20205-20987]"
    }, {
      "left" : "public Elements getElementsByClass(String className)",
      "right" : "public Elements getElementsByClass(String className)",
      "info" : "MethodDeclaration[20993-21679]:MethodDeclaration[20993-21679]"
    }, {
      "left" : "public Elements getElementsByAttribute(String key)",
      "right" : "public Elements getElementsByAttribute(String key)",
      "info" : "MethodDeclaration[21685-22104]:MethodDeclaration[21685-22104]"
    }, {
      "left" : "public Elements getElementsByAttributeStarting(String keyPrefix)",
      "right" : "public Elements getElementsByAttributeStarting(String keyPrefix)",
      "info" : "MethodDeclaration[22110-22695]:MethodDeclaration[22110-22695]"
    }, {
      "left" : "public Elements getElementsByAttributeValue(String key, String value)",
      "right" : "public Elements getElementsByAttributeValue(String key, String value)",
      "info" : "MethodDeclaration[22701-23138]:MethodDeclaration[22701-23138]"
    }, {
      "left" : "public Elements getElementsByAttributeValueNot(String key, String value)",
      "right" : "public Elements getElementsByAttributeValueNot(String key, String value)",
      "info" : "MethodDeclaration[23144-23596]:MethodDeclaration[23144-23596]"
    }, {
      "left" : "public Elements getElementsByAttributeValueStarting(String key, String valuePrefix)",
      "right" : "public Elements getElementsByAttributeValueStarting(String key, String valuePrefix)",
      "info" : "MethodDeclaration[23602-24080]:MethodDeclaration[23602-24080]"
    }, {
      "left" : "public Elements getElementsByAttributeValueEnding(String key, String valueSuffix)",
      "right" : "public Elements getElementsByAttributeValueEnding(String key, String valueSuffix)",
      "info" : "MethodDeclaration[24086-24558]:MethodDeclaration[24086-24558]"
    }, {
      "left" : "public Elements getElementsByAttributeValueContaining(String key, String match)",
      "right" : "public Elements getElementsByAttributeValueContaining(String key, String match)",
      "info" : "MethodDeclaration[24564-25029]:MethodDeclaration[24564-25029]"
    }, {
      "left" : "public Elements getElementsByAttributeValueMatching(String key, Pattern pattern)",
      "right" : "public Elements getElementsByAttributeValueMatching(String key, Pattern pattern)",
      "info" : "MethodDeclaration[25039-25544]:MethodDeclaration[25039-25544]"
    }, {
      "left" : "public Elements getElementsByAttributeValueMatching(String key, String regex)",
      "right" : "public Elements getElementsByAttributeValueMatching(String key, String regex)",
      "info" : "MethodDeclaration[25554-26400]:MethodDeclaration[25554-26400]"
    }, {
      "left" : "public Elements getElementsByIndexLessThan(int index)",
      "right" : "public Elements getElementsByIndexLessThan(int index)",
      "info" : "MethodDeclaration[26410-26711]:MethodDeclaration[26410-26711]"
    }, {
      "left" : "public Elements getElementsByIndexGreaterThan(int index)",
      "right" : "public Elements getElementsByIndexGreaterThan(int index)",
      "info" : "MethodDeclaration[26721-27034]:MethodDeclaration[26721-27034]"
    }, {
      "left" : "public Elements getElementsByIndexEquals(int index)",
      "right" : "public Elements getElementsByIndexEquals(int index)",
      "info" : "MethodDeclaration[27044-27339]:MethodDeclaration[27044-27339]"
    }, {
      "left" : "public Elements getElementsContainingText(String searchText)",
      "right" : "public Elements getElementsContainingText(String searchText)",
      "info" : "MethodDeclaration[27349-27836]:MethodDeclaration[27349-27836]"
    }, {
      "left" : "public Elements getElementsContainingOwnText(String searchText)",
      "right" : "public Elements getElementsContainingOwnText(String searchText)",
      "info" : "MethodDeclaration[27846-28357]:MethodDeclaration[27846-28357]"
    }, {
      "left" : "public Elements getElementsMatchingText(Pattern pattern)",
      "right" : "public Elements getElementsMatchingText(Pattern pattern)",
      "info" : "MethodDeclaration[28367-28748]:MethodDeclaration[28367-28748]"
    }, {
      "left" : "public Elements getElementsMatchingText(String regex)",
      "right" : "public Elements getElementsMatchingText(String regex)",
      "info" : "MethodDeclaration[28758-29505]:MethodDeclaration[28758-29505]"
    }, {
      "left" : "public Elements getElementsMatchingOwnText(Pattern pattern)",
      "right" : "public Elements getElementsMatchingOwnText(Pattern pattern)",
      "info" : "MethodDeclaration[29515-29909]:MethodDeclaration[29515-29909]"
    }, {
      "left" : "public Elements getElementsMatchingOwnText(String regex)",
      "right" : "public Elements getElementsMatchingOwnText(String regex)",
      "info" : "MethodDeclaration[29919-30675]:MethodDeclaration[29919-30675]"
    }, {
      "left" : "public Elements getAllElements()",
      "right" : "public Elements getAllElements()",
      "info" : "MethodDeclaration[30685-30934]:MethodDeclaration[30685-30934]"
    }, {
      "left" : "public String text()",
      "right" : "public String text()",
      "info" : "MethodDeclaration[30940-32169]:MethodDeclaration[30940-32169]"
    }, {
      "left" : "public void head(Node node, int depth)",
      "right" : "public void head(Node node, int depth)",
      "info" : "MethodDeclaration[31447-32028]:MethodDeclaration[31447-32028]"
    }, {
      "left" : "public void tail(Node node, int depth)",
      "right" : "public void tail(Node node, int depth)",
      "info" : "MethodDeclaration[32042-32096]:MethodDeclaration[32042-32096]"
    }, {
      "left" : "public String ownText()",
      "right" : "public String ownText()",
      "info" : "MethodDeclaration[32175-32859]:MethodDeclaration[32175-32859]"
    }, {
      "left" : "private void ownText(StringBuilder accum)",
      "right" : "private void ownText(StringBuilder accum)",
      "info" : "MethodDeclaration[32865-33245]:MethodDeclaration[32865-33245]"
    }, {
      "left" : "private static void appendNormalisedText(StringBuilder accum, TextNode textNode)",
      "right" : "private static void appendNormalisedText(StringBuilder accum, TextNode textNode)",
      "info" : "MethodDeclaration[33251-33587]:MethodDeclaration[33251-33587]"
    }, {
      "left" : "private static void appendWhitespaceIfBr(Element element, StringBuilder accum)",
      "right" : "private static void appendWhitespaceIfBr(Element element, StringBuilder accum)",
      "info" : "MethodDeclaration[33593-33799]:MethodDeclaration[33593-33799]"
    }, {
      "left" : "static boolean preserveWhitespace(Node node)",
      "right" : "static boolean preserveWhitespace(Node node)",
      "info" : "MethodDeclaration[33805-34235]:MethodDeclaration[33805-34235]"
    }, {
      "left" : "public Element text(String text)",
      "right" : "public Element text(String text)",
      "info" : "MethodDeclaration[34241-34613]:MethodDeclaration[34241-34613]"
    }, {
      "left" : "public boolean hasText()",
      "right" : "public boolean hasText()",
      "info" : "MethodDeclaration[34619-35224]:MethodDeclaration[34619-35224]"
    }, {
      "left" : "public String data()",
      "right" : "public String data()",
      "info" : "MethodDeclaration[35230-35951]:MethodDeclaration[35230-35951]"
    }, {
      "left" : "public String className()",
      "right" : "public String className()",
      "info" : "MethodDeclaration[35960-36362]:MethodDeclaration[35960-36362]"
    }, {
      "left" : "public Set<String> classNames()",
      "right" : "public Set<String> classNames()",
      "info" : "MethodDeclaration[36368-37052]:MethodDeclaration[36368-37052]"
    }, {
      "left" : "public Element classNames(Set<String> classNames)",
      "right" : "public Element classNames(Set<String> classNames)",
      "info" : "MethodDeclaration[37058-37411]:MethodDeclaration[37058-37411]"
    }, {
      "left" : "public boolean hasClass(String className)",
      "right" : "public boolean hasClass(String className)",
      "info" : "MethodDeclaration[37417-37837]:MethodDeclaration[37417-37837]"
    }, {
      "left" : "public Element addClass(String className)",
      "right" : "public Element addClass(String className)",
      "info" : "MethodDeclaration[37843-38204]:MethodDeclaration[37843-38204]"
    }, {
      "left" : "public Element removeClass(String className)",
      "right" : "public Element removeClass(String className)",
      "info" : "MethodDeclaration[38210-38585]:MethodDeclaration[38210-38585]"
    }, {
      "left" : "public Element toggleClass(String className)",
      "right" : "public Element toggleClass(String className)",
      "info" : "MethodDeclaration[38591-39099]:MethodDeclaration[38591-39099]"
    }, {
      "left" : "public String val()",
      "right" : "public String val()",
      "info" : "MethodDeclaration[39109-39405]:MethodDeclaration[39109-39405]"
    }, {
      "left" : "public Element val(String value)",
      "right" : "public Element val(String value)",
      "info" : "MethodDeclaration[39415-39745]:MethodDeclaration[39415-39745]"
    }, {
      "left" : "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out)",
      "right" : "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out)",
      "info" : "MethodDeclaration[39751-40556]:MethodDeclaration[39751-40556]"
    }, {
      "left" : "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out)",
      "right" : "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out)",
      "info" : "MethodDeclaration[40562-41061]:MethodDeclaration[40562-41061]"
    }, {
      "left" : "public String html()",
      "right" : "public String html()",
      "info" : "MethodDeclaration[41067-41546]:MethodDeclaration[41067-41546]"
    }, {
      "left" : "private void html(StringBuilder accum)",
      "right" : "private void html(StringBuilder accum)",
      "info" : "MethodDeclaration[41552-41670]:MethodDeclaration[41552-41670]"
    }, {
      "left" : "public Element html(String html)",
      "right" : "public Element html(String html)",
      "info" : "MethodDeclaration[41680-41981]:MethodDeclaration[41680-41981]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[41987-42047]:MethodDeclaration[41987-42047]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[42326-42498]:MethodDeclaration[42340-42512]"
    }, {
      "left" : "public Element clone()",
      "right" : "public Element clone()",
      "info" : "MethodDeclaration[42504-42588]:MethodDeclaration[42518-42602]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[905-911]:Modifier[905-911]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleName[912-919]:SimpleName[912-919]"
    }, {
      "left" : "Tag tag",
      "right" : "Tag tag",
      "info" : "SingleVariableDeclaration[920-927]:SingleVariableDeclaration[920-927]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[929-943]:SingleVariableDeclaration[929-943]"
    }, {
      "left" : "Attributes attributes",
      "right" : "Attributes attributes",
      "info" : "SingleVariableDeclaration[945-966]:SingleVariableDeclaration[945-966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[968-1079]:Block[968-1079]"
    }, {
      "left" : "super(baseUri, attributes);",
      "right" : "super(baseUri, attributes);",
      "info" : "SuperConstructorInvocation[978-1005]:SuperConstructorInvocation[978-1005]"
    }, {
      "left" : "Validate.notNull(tag);",
      "right" : "Validate.notNull(tag);",
      "info" : "ExpressionStatement[1023-1045]:ExpressionStatement[1023-1045]"
    }, {
      "left" : "this.tag = tag;",
      "right" : "this.tag = tag;",
      "info" : "ExpressionStatement[1058-1073]:ExpressionStatement[1058-1073]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1371-1377]:Modifier[1371-1377]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleName[1378-1385]:SimpleName[1378-1385]"
    }, {
      "left" : "Tag tag",
      "right" : "Tag tag",
      "info" : "SingleVariableDeclaration[1386-1393]:SingleVariableDeclaration[1386-1393]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[1395-1409]:SingleVariableDeclaration[1395-1409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1411-1464]:Block[1411-1464]"
    }, {
      "left" : "this(tag, baseUri, new Attributes());",
      "right" : "this(tag, baseUri, new Attributes());",
      "info" : "ConstructorInvocation[1421-1458]:ConstructorInvocation[1421-1458]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1470-1479]:MarkerAnnotation[1470-1479]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1484-1490]:Modifier[1484-1490]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[1491-1497]:SimpleType[1491-1497]"
    }, {
      "left" : "nodeName",
      "right" : "nodeName",
      "info" : "SimpleName[1498-1506]:SimpleName[1498-1506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1509-1546]:Block[1509-1546]"
    }, {
      "left" : "return tag.getName();",
      "right" : "return tag.getName();",
      "info" : "ReturnStatement[1519-1540]:ReturnStatement[1519-1540]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1670-1676]:Modifier[1670-1676]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[1677-1683]:SimpleType[1677-1683]"
    }, {
      "left" : "tagName",
      "right" : "tagName",
      "info" : "SimpleName[1684-1691]:SimpleName[1684-1691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1694-1731]:Block[1694-1731]"
    }, {
      "left" : "return tag.getName();",
      "right" : "return tag.getName();",
      "info" : "ReturnStatement[1704-1725]:ReturnStatement[1704-1725]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1990-1996]:Modifier[1990-1996]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[1997-2004]:SimpleType[1997-2004]"
    }, {
      "left" : "tagName",
      "right" : "tagName",
      "info" : "SimpleName[2005-2012]:SimpleName[2005-2012]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[2013-2027]:SingleVariableDeclaration[2013-2027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2029-2160]:Block[2029-2160]"
    }, {
      "left" : "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
      "right" : "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
      "info" : "ExpressionStatement[2039-2097]:ExpressionStatement[2039-2097]"
    }, {
      "left" : "tag = Tag.valueOf(tagName);",
      "right" : "tag = Tag.valueOf(tagName);",
      "info" : "ExpressionStatement[2106-2133]:ExpressionStatement[2106-2133]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2142-2154]:ReturnStatement[2142-2154]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2257-2263]:Modifier[2257-2263]"
    }, {
      "left" : "Tag",
      "right" : "Tag",
      "info" : "SimpleType[2264-2267]:SimpleType[2264-2267]"
    }, {
      "left" : "tag",
      "right" : "tag",
      "info" : "SimpleName[2268-2271]:SimpleName[2268-2271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2274-2301]:Block[2274-2301]"
    }, {
      "left" : "return tag;",
      "right" : "return tag;",
      "info" : "ReturnStatement[2284-2295]:ReturnStatement[2284-2295]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2529-2535]:Modifier[2529-2535]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2536-2543]:PrimitiveType[2536-2543]"
    }, {
      "left" : "isBlock",
      "right" : "isBlock",
      "info" : "SimpleName[2544-2551]:SimpleName[2544-2551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2554-2591]:Block[2554-2591]"
    }, {
      "left" : "return tag.isBlock();",
      "right" : "return tag.isBlock();",
      "info" : "ReturnStatement[2564-2585]:ReturnStatement[2564-2585]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2746-2752]:Modifier[2746-2752]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2753-2759]:SimpleType[2753-2759]"
    }, {
      "left" : "id",
      "right" : "id",
      "info" : "SimpleName[2760-2762]:SimpleName[2760-2762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2765-2841]:Block[2765-2841]"
    }, {
      "left" : "String id = attr(\"id\");",
      "right" : "String id = attr(\"id\");",
      "info" : "VariableDeclarationStatement[2775-2798]:VariableDeclarationStatement[2775-2798]"
    }, {
      "left" : "return id == null ? \"\" : id;",
      "right" : "return id == null ? \"\" : id;",
      "info" : "ReturnStatement[2807-2835]:ReturnStatement[2807-2835]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3067-3073]:Modifier[3067-3073]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[3074-3081]:SimpleType[3074-3081]"
    }, {
      "left" : "attr",
      "right" : "attr",
      "info" : "SimpleName[3082-3086]:SimpleName[3082-3086]"
    }, {
      "left" : "String attributeKey",
      "right" : "String attributeKey",
      "info" : "SingleVariableDeclaration[3087-3106]:SingleVariableDeclaration[3087-3106]"
    }, {
      "left" : "String attributeValue",
      "right" : "String attributeValue",
      "info" : "SingleVariableDeclaration[3108-3129]:SingleVariableDeclaration[3108-3129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3131-3209]:Block[3131-3209]"
    }, {
      "left" : "super.attr(attributeKey, attributeValue);",
      "right" : "super.attr(attributeKey, attributeValue);",
      "info" : "ExpressionStatement[3141-3182]:ExpressionStatement[3141-3182]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3191-3203]:ReturnStatement[3191-3203]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3904-3910]:Modifier[3904-3910]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[3911-3930]:ParameterizedType[3911-3930]"
    }, {
      "left" : "dataset",
      "right" : "dataset",
      "info" : "SimpleName[3931-3938]:SimpleName[3931-3938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3941-3985]:Block[3941-3985]"
    }, {
      "left" : "return attributes.dataset();",
      "right" : "return attributes.dataset();",
      "info" : "ReturnStatement[3951-3979]:ReturnStatement[3951-3979]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3991-4000]:MarkerAnnotation[3991-4000]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4005-4011]:Modifier[4005-4011]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[4012-4017]:Modifier[4012-4017]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[4018-4025]:SimpleType[4018-4025]"
    }, {
      "left" : "parent",
      "right" : "parent",
      "info" : "SimpleName[4026-4032]:SimpleName[4026-4032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4035-4079]:Block[4035-4079]"
    }, {
      "left" : "return (Element) parentNode;",
      "right" : "return (Element) parentNode;",
      "info" : "ReturnStatement[4045-4073]:ReturnStatement[4045-4073]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4237-4243]:Modifier[4237-4243]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[4244-4252]:SimpleType[4244-4252]"
    }, {
      "left" : "parents",
      "right" : "parents",
      "info" : "SimpleName[4253-4260]:SimpleName[4253-4260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4263-4379]:Block[4263-4379]"
    }, {
      "left" : "Elements parents = new Elements();",
      "right" : "Elements parents = new Elements();",
      "info" : "VariableDeclarationStatement[4273-4307]:VariableDeclarationStatement[4273-4307]"
    }, {
      "left" : "accumulateParents(this, parents);",
      "right" : "accumulateParents(this, parents);",
      "info" : "ExpressionStatement[4316-4349]:ExpressionStatement[4316-4349]"
    }, {
      "left" : "return parents;",
      "right" : "return parents;",
      "info" : "ReturnStatement[4358-4373]:ReturnStatement[4358-4373]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4385-4392]:Modifier[4385-4392]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4393-4399]:Modifier[4393-4399]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4400-4404]:PrimitiveType[4400-4404]"
    }, {
      "left" : "accumulateParents",
      "right" : "accumulateParents",
      "info" : "SimpleName[4405-4422]:SimpleName[4405-4422]"
    }, {
      "left" : "Element el",
      "right" : "Element el",
      "info" : "SingleVariableDeclaration[4423-4433]:SingleVariableDeclaration[4423-4433]"
    }, {
      "left" : "Elements parents",
      "right" : "Elements parents",
      "info" : "SingleVariableDeclaration[4435-4451]:SingleVariableDeclaration[4435-4451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4453-4656]:Block[4453-4656]"
    }, {
      "left" : "Element parent = el.parent();",
      "right" : "Element parent = el.parent();",
      "info" : "VariableDeclarationStatement[4463-4492]:VariableDeclarationStatement[4463-4492]"
    }, {
      "left" : "if (parent != null && !parent.tagName().equals(\"#root\"))",
      "right" : "if (parent != null && !parent.tagName().equals(\"#root\"))",
      "info" : "IfStatement[4501-4650]:IfStatement[4501-4650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4558-4650]:Block[4558-4650]"
    }, {
      "left" : "parents.add(parent);",
      "right" : "parents.add(parent);",
      "info" : "ExpressionStatement[4572-4592]:ExpressionStatement[4572-4592]"
    }, {
      "left" : "accumulateParents(parent, parents);",
      "right" : "accumulateParents(parent, parents);",
      "info" : "ExpressionStatement[4605-4640]:ExpressionStatement[4605-4640]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5177-5183]:Modifier[5177-5183]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[5184-5191]:SimpleType[5184-5191]"
    }, {
      "left" : "child",
      "right" : "child",
      "info" : "SimpleName[5192-5197]:SimpleName[5192-5197]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[5198-5207]:SingleVariableDeclaration[5198-5207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5209-5254]:Block[5209-5254]"
    }, {
      "left" : "return children().get(index);",
      "right" : "return children().get(index);",
      "info" : "ReturnStatement[5219-5248]:ReturnStatement[5219-5248]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5544-5550]:Modifier[5544-5550]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[5551-5559]:SimpleType[5551-5559]"
    }, {
      "left" : "children",
      "right" : "children",
      "info" : "SimpleName[5560-5568]:SimpleName[5560-5568]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5571-5941]:Block[5571-5941]"
    }, {
      "left" : "List<Element> elements = new ArrayList<Element>(childNodes.size());",
      "right" : "List<Element> elements = new ArrayList<Element>(childNodes.size());",
      "info" : "VariableDeclarationStatement[5693-5760]:VariableDeclarationStatement[5693-5760]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[5769-5896]:EnhancedForStatement[5769-5896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5798-5896]:Block[5798-5896]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[5812-5886]:IfStatement[5812-5886]"
    }, {
      "left" : "elements.add((Element) node);",
      "right" : "elements.add((Element) node);",
      "info" : "ExpressionStatement[5857-5886]:ExpressionStatement[5857-5886]"
    }, {
      "left" : "return new Elements(elements);",
      "right" : "return new Elements(elements);",
      "info" : "ReturnStatement[5905-5935]:ReturnStatement[5905-5935]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6837-6843]:Modifier[6837-6843]"
    }, {
      "left" : "List<TextNode>",
      "right" : "List<TextNode>",
      "info" : "ParameterizedType[6844-6858]:ParameterizedType[6844-6858]"
    }, {
      "left" : "textNodes",
      "right" : "textNodes",
      "info" : "SimpleName[6859-6868]:SimpleName[6859-6868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6871-7135]:Block[6871-7135]"
    }, {
      "left" : "List<TextNode> textNodes = new ArrayList<TextNode>();",
      "right" : "List<TextNode> textNodes = new ArrayList<TextNode>();",
      "info" : "VariableDeclarationStatement[6881-6934]:VariableDeclarationStatement[6881-6934]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[6943-7073]:EnhancedForStatement[6943-7073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6972-7073]:Block[6972-7073]"
    }, {
      "left" : "if (node instanceof TextNode)",
      "right" : "if (node instanceof TextNode)",
      "info" : "IfStatement[6986-7063]:IfStatement[6986-7063]"
    }, {
      "left" : "textNodes.add((TextNode) node);",
      "right" : "textNodes.add((TextNode) node);",
      "info" : "ExpressionStatement[7032-7063]:ExpressionStatement[7032-7063]"
    }, {
      "left" : "return Collections.unmodifiableList(textNodes);",
      "right" : "return Collections.unmodifiableList(textNodes);",
      "info" : "ReturnStatement[7082-7129]:ReturnStatement[7082-7129]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7486-7492]:Modifier[7486-7492]"
    }, {
      "left" : "List<DataNode>",
      "right" : "List<DataNode>",
      "info" : "ParameterizedType[7493-7507]:ParameterizedType[7493-7507]"
    }, {
      "left" : "dataNodes",
      "right" : "dataNodes",
      "info" : "SimpleName[7508-7517]:SimpleName[7508-7517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7520-7784]:Block[7520-7784]"
    }, {
      "left" : "List<DataNode> dataNodes = new ArrayList<DataNode>();",
      "right" : "List<DataNode> dataNodes = new ArrayList<DataNode>();",
      "info" : "VariableDeclarationStatement[7530-7583]:VariableDeclarationStatement[7530-7583]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[7592-7722]:EnhancedForStatement[7592-7722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7621-7722]:Block[7621-7722]"
    }, {
      "left" : "if (node instanceof DataNode)",
      "right" : "if (node instanceof DataNode)",
      "info" : "IfStatement[7635-7712]:IfStatement[7635-7712]"
    }, {
      "left" : "dataNodes.add((DataNode) node);",
      "right" : "dataNodes.add((DataNode) node);",
      "info" : "ExpressionStatement[7681-7712]:ExpressionStatement[7681-7712]"
    }, {
      "left" : "return Collections.unmodifiableList(dataNodes);",
      "right" : "return Collections.unmodifiableList(dataNodes);",
      "info" : "ReturnStatement[7731-7778]:ReturnStatement[7731-7778]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8666-8672]:Modifier[8666-8672]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[8673-8681]:SimpleType[8673-8681]"
    }, {
      "left" : "select",
      "right" : "select",
      "info" : "SimpleName[8682-8688]:SimpleName[8682-8688]"
    }, {
      "left" : "String cssQuery",
      "right" : "String cssQuery",
      "info" : "SingleVariableDeclaration[8689-8704]:SingleVariableDeclaration[8689-8704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8706-8761]:Block[8706-8761]"
    }, {
      "left" : "return Selector.select(cssQuery, this);",
      "right" : "return Selector.select(cssQuery, this);",
      "info" : "ReturnStatement[8716-8755]:ReturnStatement[8716-8755]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8953-8959]:Modifier[8953-8959]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[8960-8967]:SimpleType[8960-8967]"
    }, {
      "left" : "appendChild",
      "right" : "appendChild",
      "info" : "SimpleName[8968-8979]:SimpleName[8968-8979]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[8980-8990]:SingleVariableDeclaration[8980-8990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8992-9254]:Block[8992-9254]"
    }, {
      "left" : "Validate.notNull(child);",
      "right" : "Validate.notNull(child);",
      "info" : "ExpressionStatement[9002-9026]:ExpressionStatement[9002-9026]"
    }, {
      "left" : "reparentChild(child);",
      "right" : "reparentChild(child);",
      "info" : "ExpressionStatement[9121-9142]:ExpressionStatement[9121-9142]"
    }, {
      "left" : "childNodes.add(child);",
      "right" : "childNodes.add(child);",
      "info" : "ExpressionStatement[9151-9173]:ExpressionStatement[9151-9173]"
    }, {
      "left" : "child.setSiblingIndex(childNodes.size() - 1);",
      "right" : "child.setSiblingIndex(childNodes.size() - 1);",
      "info" : "ExpressionStatement[9182-9227]:ExpressionStatement[9182-9227]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9236-9248]:ReturnStatement[9236-9248]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9455-9461]:Modifier[9455-9461]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[9462-9469]:SimpleType[9462-9469]"
    }, {
      "left" : "prependChild",
      "right" : "prependChild",
      "info" : "SimpleName[9470-9482]:SimpleName[9470-9482]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[9483-9493]:SingleVariableDeclaration[9483-9493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9495-9596]:Block[9495-9596]"
    }, {
      "left" : "Validate.notNull(child);",
      "right" : "Validate.notNull(child);",
      "info" : "ExpressionStatement[9505-9529]:ExpressionStatement[9505-9529]"
    }, {
      "left" : "addChildren(0, child);",
      "right" : "addChildren(0, child);",
      "info" : "ExpressionStatement[9547-9569]:ExpressionStatement[9547-9569]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9578-9590]:ReturnStatement[9578-9590]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10073-10079]:Modifier[10073-10079]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[10080-10087]:SimpleType[10080-10087]"
    }, {
      "left" : "insertChildren",
      "right" : "insertChildren",
      "info" : "SimpleName[10088-10102]:SimpleName[10088-10102]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[10103-10112]:SingleVariableDeclaration[10103-10112]"
    }, {
      "left" : "Collection<? extends Node> children",
      "right" : "Collection<? extends Node> children",
      "info" : "SingleVariableDeclaration[10114-10149]:SingleVariableDeclaration[10114-10149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10151-10641]:Block[10151-10641]"
    }, {
      "left" : "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
      "right" : "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
      "info" : "ExpressionStatement[10161-10244]:ExpressionStatement[10161-10244]"
    }, {
      "left" : "int currentSize = childNodeSize();",
      "right" : "int currentSize = childNodeSize();",
      "info" : "VariableDeclarationStatement[10253-10287]:VariableDeclarationStatement[10253-10287]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[10296-10335]:IfStatement[10296-10335]"
    }, {
      "left" : "index += currentSize +1;",
      "right" : "index += currentSize +1;",
      "info" : "ExpressionStatement[10311-10335]:ExpressionStatement[10311-10335]"
    }, {
      "left" : "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
      "right" : "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
      "info" : "ExpressionStatement[10359-10445]:ExpressionStatement[10359-10445]"
    }, {
      "left" : "ArrayList<Node> nodes = new ArrayList<Node>(children);",
      "right" : "ArrayList<Node> nodes = new ArrayList<Node>(children);",
      "info" : "VariableDeclarationStatement[10455-10509]:VariableDeclarationStatement[10455-10509]"
    }, {
      "left" : "Node[] nodeArray = nodes.toArray(new Node[nodes.size()]);",
      "right" : "Node[] nodeArray = nodes.toArray(new Node[nodes.size()]);",
      "info" : "VariableDeclarationStatement[10518-10575]:VariableDeclarationStatement[10518-10575]"
    }, {
      "left" : "addChildren(index, nodeArray);",
      "right" : "addChildren(index, nodeArray);",
      "info" : "ExpressionStatement[10584-10614]:ExpressionStatement[10584-10614]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10623-10635]:ReturnStatement[10623-10635]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10962-10968]:Modifier[10962-10968]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[10969-10976]:SimpleType[10969-10976]"
    }, {
      "left" : "appendElement",
      "right" : "appendElement",
      "info" : "SimpleName[10977-10990]:SimpleName[10977-10990]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[10991-11005]:SingleVariableDeclaration[10991-11005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11007-11134]:Block[11007-11134]"
    }, {
      "left" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "right" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "info" : "VariableDeclarationStatement[11017-11078]:VariableDeclarationStatement[11017-11078]"
    }, {
      "left" : "appendChild(child);",
      "right" : "appendChild(child);",
      "info" : "ExpressionStatement[11087-11106]:ExpressionStatement[11087-11106]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[11115-11128]:ReturnStatement[11115-11128]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11457-11463]:Modifier[11457-11463]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[11464-11471]:SimpleType[11464-11471]"
    }, {
      "left" : "prependElement",
      "right" : "prependElement",
      "info" : "SimpleName[11472-11486]:SimpleName[11472-11486]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[11487-11501]:SingleVariableDeclaration[11487-11501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11503-11631]:Block[11503-11631]"
    }, {
      "left" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "right" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "info" : "VariableDeclarationStatement[11513-11574]:VariableDeclarationStatement[11513-11574]"
    }, {
      "left" : "prependChild(child);",
      "right" : "prependChild(child);",
      "info" : "ExpressionStatement[11583-11603]:ExpressionStatement[11583-11603]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[11612-11625]:ReturnStatement[11612-11625]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11795-11801]:Modifier[11795-11801]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[11802-11809]:SimpleType[11802-11809]"
    }, {
      "left" : "appendText",
      "right" : "appendText",
      "info" : "SimpleName[11810-11820]:SimpleName[11810-11820]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[11821-11832]:SingleVariableDeclaration[11821-11832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11834-11944]:Block[11834-11944]"
    }, {
      "left" : "TextNode node = new TextNode(text, baseUri());",
      "right" : "TextNode node = new TextNode(text, baseUri());",
      "info" : "VariableDeclarationStatement[11844-11890]:VariableDeclarationStatement[11844-11890]"
    }, {
      "left" : "appendChild(node);",
      "right" : "appendChild(node);",
      "info" : "ExpressionStatement[11899-11917]:ExpressionStatement[11899-11917]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[11926-11938]:ReturnStatement[11926-11938]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12109-12115]:Modifier[12109-12115]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[12116-12123]:SimpleType[12116-12123]"
    }, {
      "left" : "prependText",
      "right" : "prependText",
      "info" : "SimpleName[12124-12135]:SimpleName[12124-12135]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[12136-12147]:SingleVariableDeclaration[12136-12147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12149-12260]:Block[12149-12260]"
    }, {
      "left" : "TextNode node = new TextNode(text, baseUri());",
      "right" : "TextNode node = new TextNode(text, baseUri());",
      "info" : "VariableDeclarationStatement[12159-12205]:VariableDeclarationStatement[12159-12205]"
    }, {
      "left" : "prependChild(node);",
      "right" : "prependChild(node);",
      "info" : "ExpressionStatement[12214-12233]:ExpressionStatement[12214-12233]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[12242-12254]:ReturnStatement[12242-12254]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12540-12546]:Modifier[12540-12546]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[12547-12554]:SimpleType[12547-12554]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[12555-12561]:SimpleName[12555-12561]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[12562-12573]:SingleVariableDeclaration[12562-12573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12575-12768]:Block[12575-12768]"
    }, {
      "left" : "Validate.notNull(html);",
      "right" : "Validate.notNull(html);",
      "info" : "ExpressionStatement[12585-12608]:ExpressionStatement[12585-12608]"
    }, {
      "left" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "right" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "info" : "VariableDeclarationStatement[12618-12681]:VariableDeclarationStatement[12618-12681]"
    }, {
      "left" : "addChildren(nodes.toArray(new Node[nodes.size()]));",
      "right" : "addChildren(nodes.toArray(new Node[nodes.size()]));",
      "info" : "ExpressionStatement[12690-12741]:ExpressionStatement[12690-12741]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[12750-12762]:ReturnStatement[12750-12762]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13064-13070]:Modifier[13064-13070]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[13071-13078]:SimpleType[13071-13078]"
    }, {
      "left" : "prepend",
      "right" : "prepend",
      "info" : "SimpleName[13079-13086]:SimpleName[13079-13086]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[13087-13098]:SingleVariableDeclaration[13087-13098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13100-13304]:Block[13100-13304]"
    }, {
      "left" : "Validate.notNull(html);",
      "right" : "Validate.notNull(html);",
      "info" : "ExpressionStatement[13110-13133]:ExpressionStatement[13110-13133]"
    }, {
      "left" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "right" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "info" : "VariableDeclarationStatement[13151-13214]:VariableDeclarationStatement[13151-13214]"
    }, {
      "left" : "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
      "right" : "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
      "info" : "ExpressionStatement[13223-13277]:ExpressionStatement[13223-13277]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13286-13298]:ReturnStatement[13286-13298]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13545-13554]:MarkerAnnotation[13545-13554]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13559-13565]:Modifier[13559-13565]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[13566-13573]:SimpleType[13566-13573]"
    }, {
      "left" : "before",
      "right" : "before",
      "info" : "SimpleName[13574-13580]:SimpleName[13574-13580]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[13581-13592]:SingleVariableDeclaration[13581-13592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13594-13646]:Block[13594-13646]"
    }, {
      "left" : "return (Element) super.before(html);",
      "right" : "return (Element) super.before(html);",
      "info" : "ReturnStatement[13604-13640]:ReturnStatement[13604-13640]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13870-13879]:MarkerAnnotation[13870-13879]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13884-13890]:Modifier[13884-13890]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[13891-13898]:SimpleType[13891-13898]"
    }, {
      "left" : "before",
      "right" : "before",
      "info" : "SimpleName[13899-13905]:SimpleName[13899-13905]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[13906-13915]:SingleVariableDeclaration[13906-13915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13917-13969]:Block[13917-13969]"
    }, {
      "left" : "return (Element) super.before(node);",
      "right" : "return (Element) super.before(node);",
      "info" : "ReturnStatement[13927-13963]:ReturnStatement[13927-13963]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14209-14218]:MarkerAnnotation[14209-14218]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14223-14229]:Modifier[14223-14229]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[14230-14237]:SimpleType[14230-14237]"
    }, {
      "left" : "after",
      "right" : "after",
      "info" : "SimpleName[14238-14243]:SimpleName[14238-14243]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[14244-14255]:SingleVariableDeclaration[14244-14255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14257-14308]:Block[14257-14308]"
    }, {
      "left" : "return (Element) super.after(html);",
      "right" : "return (Element) super.after(html);",
      "info" : "ReturnStatement[14267-14302]:ReturnStatement[14267-14302]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14531-14540]:MarkerAnnotation[14531-14540]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14545-14551]:Modifier[14545-14551]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[14552-14559]:SimpleType[14552-14559]"
    }, {
      "left" : "after",
      "right" : "after",
      "info" : "SimpleName[14560-14565]:SimpleName[14560-14565]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[14566-14575]:SingleVariableDeclaration[14566-14575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14577-14628]:Block[14577-14628]"
    }, {
      "left" : "return (Element) super.after(node);",
      "right" : "return (Element) super.after(node);",
      "info" : "ReturnStatement[14587-14622]:ReturnStatement[14587-14622]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14757-14763]:Modifier[14757-14763]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[14764-14771]:SimpleType[14764-14771]"
    }, {
      "left" : "empty",
      "right" : "empty",
      "info" : "SimpleName[14772-14777]:SimpleName[14772-14777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14780-14836]:Block[14780-14836]"
    }, {
      "left" : "childNodes.clear();",
      "right" : "childNodes.clear();",
      "info" : "ExpressionStatement[14790-14809]:ExpressionStatement[14790-14809]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14818-14830]:ReturnStatement[14818-14830]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15076-15085]:MarkerAnnotation[15076-15085]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15090-15096]:Modifier[15090-15096]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[15097-15104]:SimpleType[15097-15104]"
    }, {
      "left" : "wrap",
      "right" : "wrap",
      "info" : "SimpleName[15105-15109]:SimpleName[15105-15109]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[15110-15121]:SingleVariableDeclaration[15110-15121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15123-15173]:Block[15123-15173]"
    }, {
      "left" : "return (Element) super.wrap(html);",
      "right" : "return (Element) super.wrap(html);",
      "info" : "ReturnStatement[15133-15167]:ReturnStatement[15133-15167]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15593-15599]:Modifier[15593-15599]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[15600-15606]:SimpleType[15600-15606]"
    }, {
      "left" : "cssSelector",
      "right" : "cssSelector",
      "info" : "SimpleName[15607-15618]:SimpleName[15607-15618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15621-16334]:Block[15621-16334]"
    }, {
      "left" : "if (id().length() > 0)",
      "right" : "if (id().length() > 0)",
      "info" : "IfStatement[15631-15684]:IfStatement[15631-15684]"
    }, {
      "left" : "return \"#\" + id();",
      "right" : "return \"#\" + id();",
      "info" : "ReturnStatement[15666-15684]:ReturnStatement[15666-15684]"
    }, {
      "left" : "StringBuilder selector = new StringBuilder(tagName());",
      "right" : "StringBuilder selector = new StringBuilder(tagName());",
      "info" : "VariableDeclarationStatement[15694-15748]:VariableDeclarationStatement[15694-15748]"
    }, {
      "left" : "String classes = StringUtil.join(classNames(), \".\");",
      "right" : "String classes = StringUtil.join(classNames(), \".\");",
      "info" : "VariableDeclarationStatement[15757-15809]:VariableDeclarationStatement[15757-15809]"
    }, {
      "left" : "if (classes.length() > 0)",
      "right" : "if (classes.length() > 0)",
      "info" : "IfStatement[15818-15893]:IfStatement[15818-15893]"
    }, {
      "left" : "selector.append('.').append(classes);",
      "right" : "selector.append('.').append(classes);",
      "info" : "ExpressionStatement[15856-15893]:ExpressionStatement[15856-15893]"
    }, {
      "left" : "if (parent() == null || parent() instanceof Document)",
      "right" : "if (parent() == null || parent() instanceof Document)",
      "info" : "IfStatement[15903-16063]:IfStatement[15903-16063]"
    }, {
      "left" : "return selector.toString();",
      "right" : "return selector.toString();",
      "info" : "ReturnStatement[16036-16063]:ReturnStatement[16036-16063]"
    }, {
      "left" : "selector.insert(0, \" > \");",
      "right" : "selector.insert(0, \" > \");",
      "info" : "ExpressionStatement[16073-16099]:ExpressionStatement[16073-16099]"
    }, {
      "left" : "if (parent().select(selector.toString()).size() > 1)",
      "right" : "if (parent().select(selector.toString()).size() > 1)",
      "info" : "IfStatement[16108-16266]:IfStatement[16108-16266]"
    }, {
      "left" : "selector.append(String.format(\n                \":nth-child(%d)\", elementSiblingIndex() + 1));",
      "right" : "selector.append(String.format(\n                \":nth-child(%d)\", elementSiblingIndex() + 1));",
      "info" : "ExpressionStatement[16173-16266]:ExpressionStatement[16173-16266]"
    }, {
      "left" : "return parent().cssSelector() + selector.toString();",
      "right" : "return parent().cssSelector() + selector.toString();",
      "info" : "ReturnStatement[16276-16328]:ReturnStatement[16276-16328]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16572-16578]:Modifier[16572-16578]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[16579-16587]:SimpleType[16579-16587]"
    }, {
      "left" : "siblingElements",
      "right" : "siblingElements",
      "info" : "SimpleName[16588-16603]:SimpleName[16588-16603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16606-16921]:Block[16606-16921]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[16616-16675]:IfStatement[16616-16675]"
    }, {
      "left" : "return new Elements(0);",
      "right" : "return new Elements(0);",
      "info" : "ReturnStatement[16652-16675]:ReturnStatement[16652-16675]"
    }, {
      "left" : "List<Element> elements = parent().children();",
      "right" : "List<Element> elements = parent().children();",
      "info" : "VariableDeclarationStatement[16685-16730]:VariableDeclarationStatement[16685-16730]"
    }, {
      "left" : "Elements siblings = new Elements(elements.size() - 1);",
      "right" : "Elements siblings = new Elements(elements.size() - 1);",
      "info" : "VariableDeclarationStatement[16739-16793]:VariableDeclarationStatement[16739-16793]"
    }, {
      "left" : "for (Element el: elements)\n            if (el != this)\n                siblings.add(el);",
      "right" : "for (Element el: elements)\n            if (el != this)\n                siblings.add(el);",
      "info" : "EnhancedForStatement[16802-16890]:EnhancedForStatement[16802-16890]"
    }, {
      "left" : "if (el != this)",
      "right" : "if (el != this)",
      "info" : "IfStatement[16841-16890]:IfStatement[16841-16890]"
    }, {
      "left" : "siblings.add(el);",
      "right" : "siblings.add(el);",
      "info" : "ExpressionStatement[16873-16890]:ExpressionStatement[16873-16890]"
    }, {
      "left" : "return siblings;",
      "right" : "return siblings;",
      "info" : "ReturnStatement[16899-16915]:ReturnStatement[16899-16915]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17349-17355]:Modifier[17349-17355]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[17356-17363]:SimpleType[17356-17363]"
    }, {
      "left" : "nextElementSibling",
      "right" : "nextElementSibling",
      "info" : "SimpleName[17364-17382]:SimpleName[17364-17382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17385-17696]:Block[17385-17696]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[17395-17431]:IfStatement[17395-17431]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17419-17431]:ReturnStatement[17419-17431]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[17440-17485]:VariableDeclarationStatement[17440-17485]"
    }, {
      "left" : "Integer index = indexInList(this, siblings);",
      "right" : "Integer index = indexInList(this, siblings);",
      "info" : "VariableDeclarationStatement[17494-17538]:VariableDeclarationStatement[17494-17538]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[17547-17571]:ExpressionStatement[17547-17571]"
    }, {
      "left" : "if (siblings.size() > index+1)",
      "right" : "if (siblings.size() > index+1)",
      "info" : "IfStatement[17580-17690]:IfStatement[17580-17690]"
    }, {
      "left" : "return siblings.get(index+1);",
      "right" : "return siblings.get(index+1);",
      "info" : "ReturnStatement[17623-17652]:ReturnStatement[17623-17652]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17678-17690]:ReturnStatement[17678-17690]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17887-17893]:Modifier[17887-17893]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[17894-17901]:SimpleType[17894-17901]"
    }, {
      "left" : "previousElementSibling",
      "right" : "previousElementSibling",
      "info" : "SimpleName[17902-17924]:SimpleName[17902-17924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17927-18222]:Block[17927-18222]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[17937-17973]:IfStatement[17937-17973]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17961-17973]:ReturnStatement[17961-17973]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[17982-18027]:VariableDeclarationStatement[17982-18027]"
    }, {
      "left" : "Integer index = indexInList(this, siblings);",
      "right" : "Integer index = indexInList(this, siblings);",
      "info" : "VariableDeclarationStatement[18036-18080]:VariableDeclarationStatement[18036-18080]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[18089-18113]:ExpressionStatement[18089-18113]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[18122-18216]:IfStatement[18122-18216]"
    }, {
      "left" : "return siblings.get(index-1);",
      "right" : "return siblings.get(index-1);",
      "info" : "ReturnStatement[18149-18178]:ReturnStatement[18149-18178]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[18204-18216]:ReturnStatement[18204-18216]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18391-18397]:Modifier[18391-18397]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[18398-18405]:SimpleType[18398-18405]"
    }, {
      "left" : "firstElementSibling",
      "right" : "firstElementSibling",
      "info" : "SimpleName[18406-18425]:SimpleName[18406-18425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18428-18603]:Block[18428-18603]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[18491-18536]:VariableDeclarationStatement[18491-18536]"
    }, {
      "left" : "return siblings.size() > 1 ? siblings.get(0) : null;",
      "right" : "return siblings.size() > 1 ? siblings.get(0) : null;",
      "info" : "ReturnStatement[18545-18597]:ReturnStatement[18545-18597]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18809-18815]:Modifier[18809-18815]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[18816-18823]:SimpleType[18816-18823]"
    }, {
      "left" : "elementSiblingIndex",
      "right" : "elementSiblingIndex",
      "info" : "SimpleName[18824-18843]:SimpleName[18824-18843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18846-18947]:Block[18846-18947]"
    }, {
      "left" : "if (parent() == null)",
      "right" : "if (parent() == null)",
      "info" : "IfStatement[18855-18886]:IfStatement[18855-18886]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[18877-18886]:ReturnStatement[18877-18886]"
    }, {
      "left" : "return indexInList(this, parent().children());",
      "right" : "return indexInList(this, parent().children());",
      "info" : "ReturnStatement[18894-18940]:ReturnStatement[18894-18940]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19112-19118]:Modifier[19112-19118]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[19119-19126]:SimpleType[19119-19126]"
    }, {
      "left" : "lastElementSibling",
      "right" : "lastElementSibling",
      "info" : "SimpleName[19127-19145]:SimpleName[19127-19145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19148-19288]:Block[19148-19288]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[19158-19203]:VariableDeclarationStatement[19158-19203]"
    }, {
      "left" : "return siblings.size() > 1 ? siblings.get(siblings.size() - 1) : null;",
      "right" : "return siblings.size() > 1 ? siblings.get(siblings.size() - 1) : null;",
      "info" : "ReturnStatement[19212-19282]:ReturnStatement[19212-19282]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19298-19305]:Modifier[19298-19305]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19306-19312]:Modifier[19306-19312]"
    }, {
      "left" : "E extends Element",
      "right" : "E extends Element",
      "info" : "TypeParameter[19314-19331]:TypeParameter[19314-19331]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[19333-19340]:SimpleType[19333-19340]"
    }, {
      "left" : "indexInList",
      "right" : "indexInList",
      "info" : "SimpleName[19341-19352]:SimpleName[19341-19352]"
    }, {
      "left" : "Element search",
      "right" : "Element search",
      "info" : "SingleVariableDeclaration[19353-19367]:SingleVariableDeclaration[19353-19367]"
    }, {
      "left" : "List<E> elements",
      "right" : "List<E> elements",
      "info" : "SingleVariableDeclaration[19369-19385]:SingleVariableDeclaration[19369-19385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19387-19655]:Block[19387-19655]"
    }, {
      "left" : "Validate.notNull(search);",
      "right" : "Validate.notNull(search);",
      "info" : "ExpressionStatement[19397-19422]:ExpressionStatement[19397-19422]"
    }, {
      "left" : "Validate.notNull(elements);",
      "right" : "Validate.notNull(elements);",
      "info" : "ExpressionStatement[19431-19458]:ExpressionStatement[19431-19458]"
    }, {
      "left" : "for (int i = 0; i < elements.size(); i++)",
      "right" : "for (int i = 0; i < elements.size(); i++)",
      "info" : "ForStatement[19468-19628]:ForStatement[19468-19628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19510-19628]:Block[19510-19628]"
    }, {
      "left" : "E element = elements.get(i);",
      "right" : "E element = elements.get(i);",
      "info" : "VariableDeclarationStatement[19524-19552]:VariableDeclarationStatement[19524-19552]"
    }, {
      "left" : "if (element.equals(search))",
      "right" : "if (element.equals(search))",
      "info" : "IfStatement[19565-19618]:IfStatement[19565-19618]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[19609-19618]:ReturnStatement[19609-19618]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19637-19649]:ReturnStatement[19637-19649]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19990-19996]:Modifier[19990-19996]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[19997-20005]:SimpleType[19997-20005]"
    }, {
      "left" : "getElementsByTag",
      "right" : "getElementsByTag",
      "info" : "SimpleName[20006-20022]:SimpleName[20006-20022]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[20023-20037]:SingleVariableDeclaration[20023-20037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20039-20199]:Block[20039-20199]"
    }, {
      "left" : "Validate.notEmpty(tagName);",
      "right" : "Validate.notEmpty(tagName);",
      "info" : "ExpressionStatement[20049-20076]:ExpressionStatement[20049-20076]"
    }, {
      "left" : "tagName = tagName.toLowerCase().trim();",
      "right" : "tagName = tagName.toLowerCase().trim();",
      "info" : "ExpressionStatement[20085-20124]:ExpressionStatement[20085-20124]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Tag(tagName), this);",
      "right" : "return Collector.collect(new Evaluator.Tag(tagName), this);",
      "info" : "ReturnStatement[20134-20193]:ReturnStatement[20134-20193]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20717-20723]:Modifier[20717-20723]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[20724-20731]:SimpleType[20724-20731]"
    }, {
      "left" : "getElementById",
      "right" : "getElementById",
      "info" : "SimpleName[20732-20746]:SimpleName[20732-20746]"
    }, {
      "left" : "String id",
      "right" : "String id",
      "info" : "SingleVariableDeclaration[20747-20756]:SingleVariableDeclaration[20747-20756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20758-20987]:Block[20758-20987]"
    }, {
      "left" : "Validate.notEmpty(id);",
      "right" : "Validate.notEmpty(id);",
      "info" : "ExpressionStatement[20768-20790]:ExpressionStatement[20768-20790]"
    }, {
      "left" : "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
      "right" : "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
      "info" : "VariableDeclarationStatement[20808-20874]:VariableDeclarationStatement[20808-20874]"
    }, {
      "left" : "if (elements.size() > 0)",
      "right" : "if (elements.size() > 0)",
      "info" : "IfStatement[20883-20981]:IfStatement[20883-20981]"
    }, {
      "left" : "return elements.get(0);",
      "right" : "return elements.get(0);",
      "info" : "ReturnStatement[20920-20943]:ReturnStatement[20920-20943]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20969-20981]:ReturnStatement[20969-20981]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21508-21514]:Modifier[21508-21514]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[21515-21523]:SimpleType[21515-21523]"
    }, {
      "left" : "getElementsByClass",
      "right" : "getElementsByClass",
      "info" : "SimpleName[21524-21542]:SimpleName[21524-21542]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[21543-21559]:SingleVariableDeclaration[21543-21559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21561-21679]:Block[21561-21679]"
    }, {
      "left" : "Validate.notEmpty(className);",
      "right" : "Validate.notEmpty(className);",
      "info" : "ExpressionStatement[21571-21600]:ExpressionStatement[21571-21600]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Class(className), this);",
      "right" : "return Collector.collect(new Evaluator.Class(className), this);",
      "info" : "ReturnStatement[21610-21673]:ReturnStatement[21610-21673]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21903-21909]:Modifier[21903-21909]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[21910-21918]:SimpleType[21910-21918]"
    }, {
      "left" : "getElementsByAttribute",
      "right" : "getElementsByAttribute",
      "info" : "SimpleName[21919-21941]:SimpleName[21919-21941]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[21942-21952]:SingleVariableDeclaration[21942-21952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21954-22104]:Block[21954-22104]"
    }, {
      "left" : "Validate.notEmpty(key);",
      "right" : "Validate.notEmpty(key);",
      "info" : "ExpressionStatement[21964-21987]:ExpressionStatement[21964-21987]"
    }, {
      "left" : "key = key.trim().toLowerCase();",
      "right" : "key = key.trim().toLowerCase();",
      "info" : "ExpressionStatement[21996-22027]:ExpressionStatement[21996-22027]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Attribute(key), this);",
      "right" : "return Collector.collect(new Evaluator.Attribute(key), this);",
      "info" : "ReturnStatement[22037-22098]:ReturnStatement[22037-22098]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22448-22454]:Modifier[22448-22454]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[22455-22463]:SimpleType[22455-22463]"
    }, {
      "left" : "getElementsByAttributeStarting",
      "right" : "getElementsByAttributeStarting",
      "info" : "SimpleName[22464-22494]:SimpleName[22464-22494]"
    }, {
      "left" : "String keyPrefix",
      "right" : "String keyPrefix",
      "info" : "SingleVariableDeclaration[22495-22511]:SingleVariableDeclaration[22495-22511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22513-22695]:Block[22513-22695]"
    }, {
      "left" : "Validate.notEmpty(keyPrefix);",
      "right" : "Validate.notEmpty(keyPrefix);",
      "info" : "ExpressionStatement[22523-22552]:ExpressionStatement[22523-22552]"
    }, {
      "left" : "keyPrefix = keyPrefix.trim().toLowerCase();",
      "right" : "keyPrefix = keyPrefix.trim().toLowerCase();",
      "info" : "ExpressionStatement[22561-22604]:ExpressionStatement[22561-22604]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
      "info" : "ReturnStatement[22614-22689]:ReturnStatement[22614-22689]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22975-22981]:Modifier[22975-22981]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[22982-22990]:SimpleType[22982-22990]"
    }, {
      "left" : "getElementsByAttributeValue",
      "right" : "getElementsByAttributeValue",
      "info" : "SimpleName[22991-23018]:SimpleName[22991-23018]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[23019-23029]:SingleVariableDeclaration[23019-23029]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[23031-23043]:SingleVariableDeclaration[23031-23043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23045-23138]:Block[23045-23138]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
      "info" : "ReturnStatement[23055-23132]:ReturnStatement[23055-23132]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23427-23433]:Modifier[23427-23433]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[23434-23442]:SimpleType[23434-23442]"
    }, {
      "left" : "getElementsByAttributeValueNot",
      "right" : "getElementsByAttributeValueNot",
      "info" : "SimpleName[23443-23473]:SimpleName[23443-23473]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[23474-23484]:SingleVariableDeclaration[23474-23484]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[23486-23498]:SingleVariableDeclaration[23486-23498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23500-23596]:Block[23500-23596]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueNot(key, value), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueNot(key, value), this);",
      "info" : "ReturnStatement[23510-23590]:ReturnStatement[23510-23590]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23889-23895]:Modifier[23889-23895]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[23896-23904]:SimpleType[23896-23904]"
    }, {
      "left" : "getElementsByAttributeValueStarting",
      "right" : "getElementsByAttributeValueStarting",
      "info" : "SimpleName[23905-23940]:SimpleName[23905-23940]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[23941-23951]:SingleVariableDeclaration[23941-23951]"
    }, {
      "left" : "String valuePrefix",
      "right" : "String valuePrefix",
      "info" : "SingleVariableDeclaration[23953-23971]:SingleVariableDeclaration[23953-23971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23973-24080]:Block[23973-24080]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
      "info" : "ReturnStatement[23983-24074]:ReturnStatement[23983-24074]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24371-24377]:Modifier[24371-24377]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[24378-24386]:SimpleType[24378-24386]"
    }, {
      "left" : "getElementsByAttributeValueEnding",
      "right" : "getElementsByAttributeValueEnding",
      "info" : "SimpleName[24387-24420]:SimpleName[24387-24420]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[24421-24431]:SingleVariableDeclaration[24421-24431]"
    }, {
      "left" : "String valueSuffix",
      "right" : "String valueSuffix",
      "info" : "SingleVariableDeclaration[24433-24451]:SingleVariableDeclaration[24433-24451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24453-24558]:Block[24453-24558]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
      "info" : "ReturnStatement[24463-24552]:ReturnStatement[24463-24552]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24846-24852]:Modifier[24846-24852]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[24853-24861]:SimpleType[24853-24861]"
    }, {
      "left" : "getElementsByAttributeValueContaining",
      "right" : "getElementsByAttributeValueContaining",
      "info" : "SimpleName[24862-24899]:SimpleName[24862-24899]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[24900-24910]:SingleVariableDeclaration[24900-24910]"
    }, {
      "left" : "String match",
      "right" : "String match",
      "info" : "SingleVariableDeclaration[24912-24924]:SingleVariableDeclaration[24912-24924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24926-25029]:Block[24926-25029]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
      "info" : "ReturnStatement[24936-25023]:ReturnStatement[24936-25023]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25351-25357]:Modifier[25351-25357]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[25358-25366]:SimpleType[25358-25366]"
    }, {
      "left" : "getElementsByAttributeValueMatching",
      "right" : "getElementsByAttributeValueMatching",
      "info" : "SimpleName[25367-25402]:SimpleName[25367-25402]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[25403-25413]:SingleVariableDeclaration[25403-25413]"
    }, {
      "left" : "Pattern pattern",
      "right" : "Pattern pattern",
      "info" : "SingleVariableDeclaration[25415-25430]:SingleVariableDeclaration[25415-25430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25432-25544]:Block[25432-25544]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
      "info" : "ReturnStatement[25442-25529]:ReturnStatement[25442-25529]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26024-26030]:Modifier[26024-26030]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[26031-26039]:SimpleType[26031-26039]"
    }, {
      "left" : "getElementsByAttributeValueMatching",
      "right" : "getElementsByAttributeValueMatching",
      "info" : "SimpleName[26040-26075]:SimpleName[26040-26075]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[26076-26086]:SingleVariableDeclaration[26076-26086]"
    }, {
      "left" : "String regex",
      "right" : "String regex",
      "info" : "SingleVariableDeclaration[26088-26100]:SingleVariableDeclaration[26088-26100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26102-26400]:Block[26102-26400]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[26112-26128]:VariableDeclarationStatement[26112-26128]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[26137-26328]:TryStatement[26137-26328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26141-26198]:Block[26141-26198]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[26155-26188]:ExpressionStatement[26155-26188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26232-26328]:Block[26232-26328]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[26246-26318]:ThrowStatement[26246-26318]"
    }, {
      "left" : "return getElementsByAttributeValueMatching(key, pattern);",
      "right" : "return getElementsByAttributeValueMatching(key, pattern);",
      "info" : "ReturnStatement[26337-26394]:ReturnStatement[26337-26394]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26574-26580]:Modifier[26574-26580]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[26581-26589]:SimpleType[26581-26589]"
    }, {
      "left" : "getElementsByIndexLessThan",
      "right" : "getElementsByIndexLessThan",
      "info" : "SimpleName[26590-26616]:SimpleName[26590-26616]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[26617-26626]:SingleVariableDeclaration[26617-26626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26628-26711]:Block[26628-26711]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexLessThan(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexLessThan(index), this);",
      "info" : "ReturnStatement[26638-26705]:ReturnStatement[26638-26705]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26891-26897]:Modifier[26891-26897]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[26898-26906]:SimpleType[26898-26906]"
    }, {
      "left" : "getElementsByIndexGreaterThan",
      "right" : "getElementsByIndexGreaterThan",
      "info" : "SimpleName[26907-26936]:SimpleName[26907-26936]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[26937-26946]:SingleVariableDeclaration[26937-26946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26948-27034]:Block[26948-27034]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
      "info" : "ReturnStatement[26958-27028]:ReturnStatement[26958-27028]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27206-27212]:Modifier[27206-27212]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[27213-27221]:SimpleType[27213-27221]"
    }, {
      "left" : "getElementsByIndexEquals",
      "right" : "getElementsByIndexEquals",
      "info" : "SimpleName[27222-27246]:SimpleName[27222-27246]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[27247-27256]:SingleVariableDeclaration[27247-27256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27258-27339]:Block[27258-27339]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexEquals(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexEquals(index), this);",
      "info" : "ReturnStatement[27268-27333]:ReturnStatement[27268-27333]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27688-27694]:Modifier[27688-27694]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[27695-27703]:SimpleType[27695-27703]"
    }, {
      "left" : "getElementsContainingText",
      "right" : "getElementsContainingText",
      "info" : "SimpleName[27704-27729]:SimpleName[27704-27729]"
    }, {
      "left" : "String searchText",
      "right" : "String searchText",
      "info" : "SingleVariableDeclaration[27730-27747]:SingleVariableDeclaration[27730-27747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27749-27836]:Block[27749-27836]"
    }, {
      "left" : "return Collector.collect(new Evaluator.ContainsText(searchText), this);",
      "right" : "return Collector.collect(new Evaluator.ContainsText(searchText), this);",
      "info" : "ReturnStatement[27759-27830]:ReturnStatement[27759-27830]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28203-28209]:Modifier[28203-28209]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[28210-28218]:SimpleType[28210-28218]"
    }, {
      "left" : "getElementsContainingOwnText",
      "right" : "getElementsContainingOwnText",
      "info" : "SimpleName[28219-28247]:SimpleName[28219-28247]"
    }, {
      "left" : "String searchText",
      "right" : "String searchText",
      "info" : "SingleVariableDeclaration[28248-28265]:SingleVariableDeclaration[28248-28265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28267-28357]:Block[28267-28357]"
    }, {
      "left" : "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
      "right" : "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
      "info" : "ReturnStatement[28277-28351]:ReturnStatement[28277-28351]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28612-28618]:Modifier[28612-28618]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[28619-28627]:SimpleType[28619-28627]"
    }, {
      "left" : "getElementsMatchingText",
      "right" : "getElementsMatchingText",
      "info" : "SimpleName[28628-28651]:SimpleName[28628-28651]"
    }, {
      "left" : "Pattern pattern",
      "right" : "Pattern pattern",
      "info" : "SingleVariableDeclaration[28652-28667]:SingleVariableDeclaration[28652-28667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28669-28748]:Block[28669-28748]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Matches(pattern), this);",
      "right" : "return Collector.collect(new Evaluator.Matches(pattern), this);",
      "info" : "ReturnStatement[28679-28742]:ReturnStatement[28679-28742]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29170-29176]:Modifier[29170-29176]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[29177-29185]:SimpleType[29177-29185]"
    }, {
      "left" : "getElementsMatchingText",
      "right" : "getElementsMatchingText",
      "info" : "SimpleName[29186-29209]:SimpleName[29186-29209]"
    }, {
      "left" : "String regex",
      "right" : "String regex",
      "info" : "SingleVariableDeclaration[29210-29222]:SingleVariableDeclaration[29210-29222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29224-29505]:Block[29224-29505]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[29234-29250]:VariableDeclarationStatement[29234-29250]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[29259-29450]:TryStatement[29259-29450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29263-29320]:Block[29263-29320]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[29277-29310]:ExpressionStatement[29277-29310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29354-29450]:Block[29354-29450]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[29368-29440]:ThrowStatement[29368-29440]"
    }, {
      "left" : "return getElementsMatchingText(pattern);",
      "right" : "return getElementsMatchingText(pattern);",
      "info" : "ReturnStatement[29459-29499]:ReturnStatement[29459-29499]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29767-29773]:Modifier[29767-29773]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[29774-29782]:SimpleType[29774-29782]"
    }, {
      "left" : "getElementsMatchingOwnText",
      "right" : "getElementsMatchingOwnText",
      "info" : "SimpleName[29783-29809]:SimpleName[29783-29809]"
    }, {
      "left" : "Pattern pattern",
      "right" : "Pattern pattern",
      "info" : "SingleVariableDeclaration[29810-29825]:SingleVariableDeclaration[29810-29825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29827-29909]:Block[29827-29909]"
    }, {
      "left" : "return Collector.collect(new Evaluator.MatchesOwn(pattern), this);",
      "right" : "return Collector.collect(new Evaluator.MatchesOwn(pattern), this);",
      "info" : "ReturnStatement[29837-29903]:ReturnStatement[29837-29903]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30334-30340]:Modifier[30334-30340]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[30341-30349]:SimpleType[30341-30349]"
    }, {
      "left" : "getElementsMatchingOwnText",
      "right" : "getElementsMatchingOwnText",
      "info" : "SimpleName[30350-30376]:SimpleName[30350-30376]"
    }, {
      "left" : "String regex",
      "right" : "String regex",
      "info" : "SingleVariableDeclaration[30377-30389]:SingleVariableDeclaration[30377-30389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30391-30675]:Block[30391-30675]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[30401-30417]:VariableDeclarationStatement[30401-30417]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[30426-30617]:TryStatement[30426-30617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30430-30487]:Block[30430-30487]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[30444-30477]:ExpressionStatement[30444-30477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30521-30617]:Block[30521-30617]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[30535-30607]:ThrowStatement[30535-30607]"
    }, {
      "left" : "return getElementsMatchingOwnText(pattern);",
      "right" : "return getElementsMatchingOwnText(pattern);",
      "info" : "ReturnStatement[30626-30669]:ReturnStatement[30626-30669]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30825-30831]:Modifier[30825-30831]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[30832-30840]:SimpleType[30832-30840]"
    }, {
      "left" : "getAllElements",
      "right" : "getAllElements",
      "info" : "SimpleName[30841-30855]:SimpleName[30841-30855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30858-30934]:Block[30858-30934]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AllElements(), this);",
      "right" : "return Collector.collect(new Evaluator.AllElements(), this);",
      "info" : "ReturnStatement[30868-30928]:ReturnStatement[30868-30928]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31309-31315]:Modifier[31309-31315]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[31316-31322]:SimpleType[31316-31322]"
    }, {
      "left" : "text",
      "right" : "text",
      "info" : "SimpleName[31323-31327]:SimpleName[31323-31327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31330-32169]:Block[31330-32169]"
    }, {
      "left" : "final StringBuilder accum = new StringBuilder();",
      "right" : "final StringBuilder accum = new StringBuilder();",
      "info" : "VariableDeclarationStatement[31340-31388]:VariableDeclarationStatement[31340-31388]"
    }, {
      "left" : "new NodeTraversor(new NodeVisitor() {\n            public void head(Node node, int depth) {\n                if (node instanceof TextNode) {\n                    TextNode textNode = (TextNode) node;\n                    appendNormalisedText(accum, textNode);\n                } else if (node instanceof Element) {\n                    Element element = (Element) node;\n                    if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))\n                        accum.append(\" \");\n                }\n            }\n\n            public void tail(Node node, int depth) {\n            }\n        }).traverse(this);",
      "right" : "new NodeTraversor(new NodeVisitor() {\n            public void head(Node node, int depth) {\n                if (node instanceof TextNode) {\n                    TextNode textNode = (TextNode) node;\n                    appendNormalisedText(accum, textNode);\n                } else if (node instanceof Element) {\n                    Element element = (Element) node;\n                    if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))\n                        accum.append(\" \");\n                }\n            }\n\n            public void tail(Node node, int depth) {\n            }\n        }).traverse(this);",
      "info" : "ExpressionStatement[31397-32123]:ExpressionStatement[31397-32123]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31447-31453]:Modifier[31447-31453]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31454-31458]:PrimitiveType[31454-31458]"
    }, {
      "left" : "head",
      "right" : "head",
      "info" : "SimpleName[31459-31463]:SimpleName[31459-31463]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[31464-31473]:SingleVariableDeclaration[31464-31473]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[31475-31484]:SingleVariableDeclaration[31475-31484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31486-32028]:Block[31486-32028]"
    }, {
      "left" : "if (node instanceof TextNode)",
      "right" : "if (node instanceof TextNode)",
      "info" : "IfStatement[31504-32014]:IfStatement[31504-32014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31534-31669]:Block[31534-31669]"
    }, {
      "left" : "TextNode textNode = (TextNode) node;",
      "right" : "TextNode textNode = (TextNode) node;",
      "info" : "VariableDeclarationStatement[31556-31592]:VariableDeclarationStatement[31556-31592]"
    }, {
      "left" : "appendNormalisedText(accum, textNode);",
      "right" : "appendNormalisedText(accum, textNode);",
      "info" : "ExpressionStatement[31613-31651]:ExpressionStatement[31613-31651]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[31675-32014]:IfStatement[31675-32014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31704-32014]:Block[31704-32014]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[31726-31759]:VariableDeclarationStatement[31726-31759]"
    }, {
      "left" : "if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))",
      "right" : "if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))",
      "info" : "IfStatement[31780-31996]:IfStatement[31780-31996]"
    }, {
      "left" : "accum.append(\" \");",
      "right" : "accum.append(\" \");",
      "info" : "ExpressionStatement[31978-31996]:ExpressionStatement[31978-31996]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32042-32048]:Modifier[32042-32048]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32049-32053]:PrimitiveType[32049-32053]"
    }, {
      "left" : "tail",
      "right" : "tail",
      "info" : "SimpleName[32054-32058]:SimpleName[32054-32058]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[32059-32068]:SingleVariableDeclaration[32059-32068]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[32070-32079]:SingleVariableDeclaration[32070-32079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32081-32096]:Block[32081-32096]"
    }, {
      "left" : "return accum.toString().trim();",
      "right" : "return accum.toString().trim();",
      "info" : "ReturnStatement[32132-32163]:ReturnStatement[32132-32163]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32722-32728]:Modifier[32722-32728]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[32729-32735]:SimpleType[32729-32735]"
    }, {
      "left" : "ownText",
      "right" : "ownText",
      "info" : "SimpleName[32736-32743]:SimpleName[32736-32743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32746-32859]:Block[32746-32859]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[32756-32795]:VariableDeclarationStatement[32756-32795]"
    }, {
      "left" : "ownText(sb);",
      "right" : "ownText(sb);",
      "info" : "ExpressionStatement[32804-32816]:ExpressionStatement[32804-32816]"
    }, {
      "left" : "return sb.toString().trim();",
      "right" : "return sb.toString().trim();",
      "info" : "ReturnStatement[32825-32853]:ReturnStatement[32825-32853]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[32865-32872]:Modifier[32865-32872]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32873-32877]:PrimitiveType[32873-32877]"
    }, {
      "left" : "ownText",
      "right" : "ownText",
      "info" : "SimpleName[32878-32885]:SimpleName[32878-32885]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[32886-32905]:SingleVariableDeclaration[32886-32905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32907-33245]:Block[32907-33245]"
    }, {
      "left" : "for (Node child : childNodes)",
      "right" : "for (Node child : childNodes)",
      "info" : "EnhancedForStatement[32917-33239]:EnhancedForStatement[32917-33239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32947-33239]:Block[32947-33239]"
    }, {
      "left" : "if (child instanceof TextNode)",
      "right" : "if (child instanceof TextNode)",
      "info" : "IfStatement[32961-33229]:IfStatement[32961-33229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32992-33116]:Block[32992-33116]"
    }, {
      "left" : "TextNode textNode = (TextNode) child;",
      "right" : "TextNode textNode = (TextNode) child;",
      "info" : "VariableDeclarationStatement[33010-33047]:VariableDeclarationStatement[33010-33047]"
    }, {
      "left" : "appendNormalisedText(accum, textNode);",
      "right" : "appendNormalisedText(accum, textNode);",
      "info" : "ExpressionStatement[33064-33102]:ExpressionStatement[33064-33102]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[33122-33229]:IfStatement[33122-33229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33152-33229]:Block[33152-33229]"
    }, {
      "left" : "appendWhitespaceIfBr((Element) child, accum);",
      "right" : "appendWhitespaceIfBr((Element) child, accum);",
      "info" : "ExpressionStatement[33170-33215]:ExpressionStatement[33170-33215]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[33251-33258]:Modifier[33251-33258]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33259-33265]:Modifier[33259-33265]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33266-33270]:PrimitiveType[33266-33270]"
    }, {
      "left" : "appendNormalisedText",
      "right" : "appendNormalisedText",
      "info" : "SimpleName[33271-33291]:SimpleName[33271-33291]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[33292-33311]:SingleVariableDeclaration[33292-33311]"
    }, {
      "left" : "TextNode textNode",
      "right" : "TextNode textNode",
      "info" : "SingleVariableDeclaration[33313-33330]:SingleVariableDeclaration[33313-33330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33332-33587]:Block[33332-33587]"
    }, {
      "left" : "String text = textNode.getWholeText();",
      "right" : "String text = textNode.getWholeText();",
      "info" : "VariableDeclarationStatement[33342-33380]:VariableDeclarationStatement[33342-33380]"
    }, {
      "left" : "if (preserveWhitespace(textNode.parentNode))",
      "right" : "if (preserveWhitespace(textNode.parentNode))",
      "info" : "IfStatement[33390-33581]:IfStatement[33390-33581]"
    }, {
      "left" : "accum.append(text);",
      "right" : "accum.append(text);",
      "info" : "ExpressionStatement[33447-33466]:ExpressionStatement[33447-33466]"
    }, {
      "left" : "StringUtil.appendNormalisedWhitespace(accum, text, TextNode.lastCharIsWhitespace(accum));",
      "right" : "StringUtil.appendNormalisedWhitespace(accum, text, TextNode.lastCharIsWhitespace(accum));",
      "info" : "ExpressionStatement[33492-33581]:ExpressionStatement[33492-33581]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[33593-33600]:Modifier[33593-33600]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33601-33607]:Modifier[33601-33607]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33608-33612]:PrimitiveType[33608-33612]"
    }, {
      "left" : "appendWhitespaceIfBr",
      "right" : "appendWhitespaceIfBr",
      "info" : "SimpleName[33613-33633]:SimpleName[33613-33633]"
    }, {
      "left" : "Element element",
      "right" : "Element element",
      "info" : "SingleVariableDeclaration[33634-33649]:SingleVariableDeclaration[33634-33649]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[33651-33670]:SingleVariableDeclaration[33651-33670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33672-33799]:Block[33672-33799]"
    }, {
      "left" : "if (element.tag.getName().equals(\"br\") && !TextNode.lastCharIsWhitespace(accum))",
      "right" : "if (element.tag.getName().equals(\"br\") && !TextNode.lastCharIsWhitespace(accum))",
      "info" : "IfStatement[33682-33793]:IfStatement[33682-33793]"
    }, {
      "left" : "accum.append(\" \");",
      "right" : "accum.append(\" \");",
      "info" : "ExpressionStatement[33775-33793]:ExpressionStatement[33775-33793]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33805-33811]:Modifier[33805-33811]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[33812-33819]:PrimitiveType[33812-33819]"
    }, {
      "left" : "preserveWhitespace",
      "right" : "preserveWhitespace",
      "info" : "SimpleName[33820-33838]:SimpleName[33820-33838]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[33839-33848]:SingleVariableDeclaration[33839-33848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33850-34235]:Block[33850-34235]"
    }, {
      "left" : "if (node != null && node instanceof Element)",
      "right" : "if (node != null && node instanceof Element)",
      "info" : "IfStatement[33963-34207]:IfStatement[33963-34207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34008-34207]:Block[34008-34207]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[34022-34055]:VariableDeclarationStatement[34022-34055]"
    }, {
      "left" : "return element.tag.preserveWhitespace() ||\n                element.parent() != null && element.parent().tag.preserveWhitespace();",
      "right" : "return element.tag.preserveWhitespace() ||\n                element.parent() != null && element.parent().tag.preserveWhitespace();",
      "info" : "ReturnStatement[34068-34197]:ReturnStatement[34068-34197]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[34216-34229]:ReturnStatement[34216-34229]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34413-34419]:Modifier[34413-34419]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[34420-34427]:SimpleType[34420-34427]"
    }, {
      "left" : "text",
      "right" : "text",
      "info" : "SimpleName[34428-34432]:SimpleName[34428-34432]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[34433-34444]:SingleVariableDeclaration[34433-34444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34446-34613]:Block[34446-34613]"
    }, {
      "left" : "Validate.notNull(text);",
      "right" : "Validate.notNull(text);",
      "info" : "ExpressionStatement[34456-34479]:ExpressionStatement[34456-34479]"
    }, {
      "left" : "empty();",
      "right" : "empty();",
      "info" : "ExpressionStatement[34489-34497]:ExpressionStatement[34489-34497]"
    }, {
      "left" : "TextNode textNode = new TextNode(text, baseUri);",
      "right" : "TextNode textNode = new TextNode(text, baseUri);",
      "info" : "VariableDeclarationStatement[34506-34554]:VariableDeclarationStatement[34506-34554]"
    }, {
      "left" : "appendChild(textNode);",
      "right" : "appendChild(textNode);",
      "info" : "ExpressionStatement[34563-34585]:ExpressionStatement[34563-34585]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[34595-34607]:ReturnStatement[34595-34607]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34770-34776]:Modifier[34770-34776]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[34777-34784]:PrimitiveType[34777-34784]"
    }, {
      "left" : "hasText",
      "right" : "hasText",
      "info" : "SimpleName[34785-34792]:SimpleName[34785-34792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34795-35224]:Block[34795-35224]"
    }, {
      "left" : "for (Node child: childNodes)",
      "right" : "for (Node child: childNodes)",
      "info" : "EnhancedForStatement[34805-35196]:EnhancedForStatement[34805-35196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34834-35196]:Block[34834-35196]"
    }, {
      "left" : "if (child instanceof TextNode)",
      "right" : "if (child instanceof TextNode)",
      "info" : "IfStatement[34848-35186]:IfStatement[34848-35186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34879-35022]:Block[34879-35022]"
    }, {
      "left" : "TextNode textNode = (TextNode) child;",
      "right" : "TextNode textNode = (TextNode) child;",
      "info" : "VariableDeclarationStatement[34897-34934]:VariableDeclarationStatement[34897-34934]"
    }, {
      "left" : "if (!textNode.isBlank())",
      "right" : "if (!textNode.isBlank())",
      "info" : "IfStatement[34951-35008]:IfStatement[34951-35008]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[34996-35008]:ReturnStatement[34996-35008]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[35028-35186]:IfStatement[35028-35186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35058-35186]:Block[35058-35186]"
    }, {
      "left" : "Element el = (Element) child;",
      "right" : "Element el = (Element) child;",
      "info" : "VariableDeclarationStatement[35076-35105]:VariableDeclarationStatement[35076-35105]"
    }, {
      "left" : "if (el.hasText())",
      "right" : "if (el.hasText())",
      "info" : "IfStatement[35122-35172]:IfStatement[35122-35172]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[35160-35172]:ReturnStatement[35160-35172]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35205-35218]:ReturnStatement[35205-35218]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35422-35428]:Modifier[35422-35428]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[35429-35435]:SimpleType[35429-35435]"
    }, {
      "left" : "data",
      "right" : "data",
      "info" : "SimpleName[35436-35440]:SimpleName[35436-35440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35443-35951]:Block[35443-35951]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[35453-35492]:VariableDeclarationStatement[35453-35492]"
    }, {
      "left" : "for (Node childNode : childNodes)",
      "right" : "for (Node childNode : childNodes)",
      "info" : "EnhancedForStatement[35502-35915]:EnhancedForStatement[35502-35915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35536-35915]:Block[35536-35915]"
    }, {
      "left" : "if (childNode instanceof DataNode)",
      "right" : "if (childNode instanceof DataNode)",
      "info" : "IfStatement[35550-35905]:IfStatement[35550-35905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35585-35702]:Block[35585-35702]"
    }, {
      "left" : "DataNode data = (DataNode) childNode;",
      "right" : "DataNode data = (DataNode) childNode;",
      "info" : "VariableDeclarationStatement[35603-35640]:VariableDeclarationStatement[35603-35640]"
    }, {
      "left" : "sb.append(data.getWholeData());",
      "right" : "sb.append(data.getWholeData());",
      "info" : "ExpressionStatement[35657-35688]:ExpressionStatement[35657-35688]"
    }, {
      "left" : "if (childNode instanceof Element)",
      "right" : "if (childNode instanceof Element)",
      "info" : "IfStatement[35708-35905]:IfStatement[35708-35905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35742-35905]:Block[35742-35905]"
    }, {
      "left" : "Element element = (Element) childNode;",
      "right" : "Element element = (Element) childNode;",
      "info" : "VariableDeclarationStatement[35760-35798]:VariableDeclarationStatement[35760-35798]"
    }, {
      "left" : "String elementData = element.data();",
      "right" : "String elementData = element.data();",
      "info" : "VariableDeclarationStatement[35815-35851]:VariableDeclarationStatement[35815-35851]"
    }, {
      "left" : "sb.append(elementData);",
      "right" : "sb.append(elementData);",
      "info" : "ExpressionStatement[35868-35891]:ExpressionStatement[35868-35891]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[35924-35945]:ReturnStatement[35924-35945]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36292-36298]:Modifier[36292-36298]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[36299-36305]:SimpleType[36299-36305]"
    }, {
      "left" : "className",
      "right" : "className",
      "info" : "SimpleName[36306-36315]:SimpleName[36306-36315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36318-36362]:Block[36318-36362]"
    }, {
      "left" : "return attr(\"class\").trim();",
      "right" : "return attr(\"class\").trim();",
      "info" : "ReturnStatement[36328-36356]:ReturnStatement[36328-36356]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36770-36776]:Modifier[36770-36776]"
    }, {
      "left" : "Set<String>",
      "right" : "Set<String>",
      "info" : "ParameterizedType[36777-36788]:ParameterizedType[36777-36788]"
    }, {
      "left" : "classNames",
      "right" : "classNames",
      "info" : "SimpleName[36789-36799]:SimpleName[36789-36799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36802-37052]:Block[36802-37052]"
    }, {
      "left" : "String[] names = className().split(\"\\\\s+\");",
      "right" : "String[] names = className().split(\"\\\\s+\");",
      "info" : "VariableDeclarationStatement[36809-36852]:VariableDeclarationStatement[36809-36852]"
    }, {
      "left" : "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
      "right" : "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
      "info" : "VariableDeclarationStatement[36858-36931]:VariableDeclarationStatement[36858-36931]"
    }, {
      "left" : "classNames.remove(\"\");",
      "right" : "classNames.remove(\"\");",
      "info" : "ExpressionStatement[36937-36959]:ExpressionStatement[36937-36959]"
    }, {
      "left" : "return classNames;",
      "right" : "return classNames;",
      "info" : "ReturnStatement[37028-37046]:ReturnStatement[37028-37046]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37228-37234]:Modifier[37228-37234]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[37235-37242]:SimpleType[37235-37242]"
    }, {
      "left" : "classNames",
      "right" : "classNames",
      "info" : "SimpleName[37243-37253]:SimpleName[37243-37253]"
    }, {
      "left" : "Set<String> classNames",
      "right" : "Set<String> classNames",
      "info" : "SingleVariableDeclaration[37254-37276]:SingleVariableDeclaration[37254-37276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37278-37411]:Block[37278-37411]"
    }, {
      "left" : "Validate.notNull(classNames);",
      "right" : "Validate.notNull(classNames);",
      "info" : "ExpressionStatement[37288-37317]:ExpressionStatement[37288-37317]"
    }, {
      "left" : "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
      "right" : "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
      "info" : "ExpressionStatement[37326-37384]:ExpressionStatement[37326-37384]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[37393-37405]:ReturnStatement[37393-37405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37589-37595]:Modifier[37589-37595]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[37596-37603]:PrimitiveType[37596-37603]"
    }, {
      "left" : "hasClass",
      "right" : "hasClass",
      "info" : "SimpleName[37604-37612]:SimpleName[37604-37612]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[37613-37629]:SingleVariableDeclaration[37613-37629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37631-37837]:Block[37631-37837]"
    }, {
      "left" : "Set<String> classNames = classNames();",
      "right" : "Set<String> classNames = classNames();",
      "info" : "VariableDeclarationStatement[37641-37679]:VariableDeclarationStatement[37641-37679]"
    }, {
      "left" : "for (String name : classNames)",
      "right" : "for (String name : classNames)",
      "info" : "EnhancedForStatement[37688-37809]:EnhancedForStatement[37688-37809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37719-37809]:Block[37719-37809]"
    }, {
      "left" : "if (className.equalsIgnoreCase(name))",
      "right" : "if (className.equalsIgnoreCase(name))",
      "info" : "IfStatement[37733-37799]:IfStatement[37733-37799]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[37787-37799]:ReturnStatement[37787-37799]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[37818-37831]:ReturnStatement[37818-37831]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37990-37996]:Modifier[37990-37996]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[37997-38004]:SimpleType[37997-38004]"
    }, {
      "left" : "addClass",
      "right" : "addClass",
      "info" : "SimpleName[38005-38013]:SimpleName[38005-38013]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[38014-38030]:SingleVariableDeclaration[38014-38030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38032-38204]:Block[38032-38204]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[38042-38070]:ExpressionStatement[38042-38070]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[38080-38115]:VariableDeclarationStatement[38080-38115]"
    }, {
      "left" : "classes.add(className);",
      "right" : "classes.add(className);",
      "info" : "ExpressionStatement[38124-38147]:ExpressionStatement[38124-38147]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[38156-38176]:ExpressionStatement[38156-38176]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[38186-38198]:ReturnStatement[38186-38198]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38365-38371]:Modifier[38365-38371]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[38372-38379]:SimpleType[38372-38379]"
    }, {
      "left" : "removeClass",
      "right" : "removeClass",
      "info" : "SimpleName[38380-38391]:SimpleName[38380-38391]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[38392-38408]:SingleVariableDeclaration[38392-38408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38410-38585]:Block[38410-38585]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[38420-38448]:ExpressionStatement[38420-38448]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[38458-38493]:VariableDeclarationStatement[38458-38493]"
    }, {
      "left" : "classes.remove(className);",
      "right" : "classes.remove(className);",
      "info" : "ExpressionStatement[38502-38528]:ExpressionStatement[38502-38528]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[38537-38557]:ExpressionStatement[38537-38557]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[38567-38579]:ReturnStatement[38567-38579]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38785-38791]:Modifier[38785-38791]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[38792-38799]:SimpleType[38792-38799]"
    }, {
      "left" : "toggleClass",
      "right" : "toggleClass",
      "info" : "SimpleName[38800-38811]:SimpleName[38800-38811]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[38812-38828]:SingleVariableDeclaration[38812-38828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38830-39099]:Block[38830-39099]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[38840-38868]:ExpressionStatement[38840-38868]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[38878-38913]:VariableDeclarationStatement[38878-38913]"
    }, {
      "left" : "if (classes.contains(className))",
      "right" : "if (classes.contains(className))",
      "info" : "IfStatement[38922-39042]:IfStatement[38922-39042]"
    }, {
      "left" : "classes.remove(className);",
      "right" : "classes.remove(className);",
      "info" : "ExpressionStatement[38967-38993]:ExpressionStatement[38967-38993]"
    }, {
      "left" : "classes.add(className);",
      "right" : "classes.add(className);",
      "info" : "ExpressionStatement[39019-39042]:ExpressionStatement[39019-39042]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[39051-39071]:ExpressionStatement[39051-39071]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39081-39093]:ReturnStatement[39081-39093]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39262-39268]:Modifier[39262-39268]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39269-39275]:SimpleType[39269-39275]"
    }, {
      "left" : "val",
      "right" : "val",
      "info" : "SimpleName[39276-39279]:SimpleName[39276-39279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39282-39405]:Block[39282-39405]"
    }, {
      "left" : "if (tagName().equals(\"textarea\"))",
      "right" : "if (tagName().equals(\"textarea\"))",
      "info" : "IfStatement[39292-39399]:IfStatement[39292-39399]"
    }, {
      "left" : "return text();",
      "right" : "return text();",
      "info" : "ReturnStatement[39338-39352]:ReturnStatement[39338-39352]"
    }, {
      "left" : "return attr(\"value\");",
      "right" : "return attr(\"value\");",
      "info" : "ReturnStatement[39378-39399]:ReturnStatement[39378-39399]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39570-39576]:Modifier[39570-39576]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[39577-39584]:SimpleType[39577-39584]"
    }, {
      "left" : "val",
      "right" : "val",
      "info" : "SimpleName[39585-39588]:SimpleName[39585-39588]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[39589-39601]:SingleVariableDeclaration[39589-39601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39603-39745]:Block[39603-39745]"
    }, {
      "left" : "if (tagName().equals(\"textarea\"))",
      "right" : "if (tagName().equals(\"textarea\"))",
      "info" : "IfStatement[39613-39718]:IfStatement[39613-39718]"
    }, {
      "left" : "text(value);",
      "right" : "text(value);",
      "info" : "ExpressionStatement[39659-39671]:ExpressionStatement[39659-39671]"
    }, {
      "left" : "attr(\"value\", value);",
      "right" : "attr(\"value\", value);",
      "info" : "ExpressionStatement[39697-39718]:ExpressionStatement[39697-39718]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39727-39739]:ReturnStatement[39727-39739]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[39751-39755]:PrimitiveType[39751-39755]"
    }, {
      "left" : "outerHtmlHead",
      "right" : "outerHtmlHead",
      "info" : "SimpleName[39756-39769]:SimpleName[39756-39769]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[39770-39789]:SingleVariableDeclaration[39770-39789]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[39791-39800]:SingleVariableDeclaration[39791-39800]"
    }, {
      "left" : "Document.OutputSettings out",
      "right" : "Document.OutputSettings out",
      "info" : "SingleVariableDeclaration[39802-39829]:SingleVariableDeclaration[39802-39829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39831-40556]:Block[39831-40556]"
    }, {
      "left" : "if (accum.length() > 0 && out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline()))",
      "right" : "if (accum.length() > 0 && out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline()))",
      "info" : "IfStatement[39841-40023]:IfStatement[39841-40023]"
    }, {
      "left" : "indent(accum, depth, out);",
      "right" : "indent(accum, depth, out);",
      "info" : "ExpressionStatement[39997-40023]:ExpressionStatement[39997-40023]"
    }, {
      "left" : "accum\n                .append(\"<\")\n                .append(tagName());",
      "right" : "accum\n                .append(\"<\")\n                .append(tagName());",
      "info" : "ExpressionStatement[40032-40102]:ExpressionStatement[40032-40102]"
    }, {
      "left" : "attributes.html(accum, out);",
      "right" : "attributes.html(accum, out);",
      "info" : "ExpressionStatement[40111-40139]:ExpressionStatement[40111-40139]"
    }, {
      "left" : "if (childNodes.isEmpty() && tag.isSelfClosing())",
      "right" : "if (childNodes.isEmpty() && tag.isSelfClosing())",
      "info" : "IfStatement[40238-40550]:IfStatement[40238-40550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40287-40506]:Block[40287-40506]"
    }, {
      "left" : "if (out.syntax() == Document.OutputSettings.Syntax.html && tag.isEmpty())",
      "right" : "if (out.syntax() == Document.OutputSettings.Syntax.html && tag.isEmpty())",
      "info" : "IfStatement[40301-40463]:IfStatement[40301-40463]"
    }, {
      "left" : "accum.append('>');",
      "right" : "accum.append('>');",
      "info" : "ExpressionStatement[40391-40409]:ExpressionStatement[40391-40409]"
    }, {
      "left" : "accum.append(\" />\");",
      "right" : "accum.append(\" />\");",
      "info" : "ExpressionStatement[40443-40463]:ExpressionStatement[40443-40463]"
    }, {
      "left" : "accum.append(\">\");",
      "right" : "accum.append(\">\");",
      "info" : "ExpressionStatement[40532-40550]:ExpressionStatement[40532-40550]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40562-40566]:PrimitiveType[40562-40566]"
    }, {
      "left" : "outerHtmlTail",
      "right" : "outerHtmlTail",
      "info" : "SimpleName[40567-40580]:SimpleName[40567-40580]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[40581-40600]:SingleVariableDeclaration[40581-40600]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[40602-40611]:SingleVariableDeclaration[40602-40611]"
    }, {
      "left" : "Document.OutputSettings out",
      "right" : "Document.OutputSettings out",
      "info" : "SingleVariableDeclaration[40613-40640]:SingleVariableDeclaration[40613-40640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40642-41061]:Block[40642-41061]"
    }, {
      "left" : "if (!(childNodes.isEmpty() && tag.isSelfClosing()))",
      "right" : "if (!(childNodes.isEmpty() && tag.isSelfClosing()))",
      "info" : "IfStatement[40652-41055]:IfStatement[40652-41055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40704-41055]:Block[40704-41055]"
    }, {
      "left" : "if (out.prettyPrint() && (!childNodes.isEmpty() && (\n                    tag.formatAsBlock() || (out.outline() && (childNodes.size()>1 || (childNodes.size()==1 && !(childNodes.get(0) instanceof TextNode))))\n            )))",
      "right" : "if (out.prettyPrint() && (!childNodes.isEmpty() && (\n                    tag.formatAsBlock() || (out.outline() && (childNodes.size()>1 || (childNodes.size()==1 && !(childNodes.get(0) instanceof TextNode))))\n            )))",
      "info" : "IfStatement[40718-40983]:IfStatement[40718-40983]"
    }, {
      "left" : "indent(accum, depth, out);",
      "right" : "indent(accum, depth, out);",
      "info" : "ExpressionStatement[40957-40983]:ExpressionStatement[40957-40983]"
    }, {
      "left" : "accum.append(\"</\").append(tagName()).append(\">\");",
      "right" : "accum.append(\"</\").append(tagName()).append(\">\");",
      "info" : "ExpressionStatement[40996-41045]:ExpressionStatement[40996-41045]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41351-41357]:Modifier[41351-41357]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41358-41364]:SimpleType[41358-41364]"
    }, {
      "left" : "html",
      "right" : "html",
      "info" : "SimpleName[41365-41369]:SimpleName[41365-41369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41372-41546]:Block[41372-41546]"
    }, {
      "left" : "StringBuilder accum = new StringBuilder();",
      "right" : "StringBuilder accum = new StringBuilder();",
      "info" : "VariableDeclarationStatement[41382-41424]:VariableDeclarationStatement[41382-41424]"
    }, {
      "left" : "html(accum);",
      "right" : "html(accum);",
      "info" : "ExpressionStatement[41433-41445]:ExpressionStatement[41433-41445]"
    }, {
      "left" : "return getOutputSettings().prettyPrint() ? accum.toString().trim() : accum.toString();",
      "right" : "return getOutputSettings().prettyPrint() ? accum.toString().trim() : accum.toString();",
      "info" : "ReturnStatement[41454-41540]:ReturnStatement[41454-41540]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[41552-41559]:Modifier[41552-41559]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[41560-41564]:PrimitiveType[41560-41564]"
    }, {
      "left" : "html",
      "right" : "html",
      "info" : "SimpleName[41565-41569]:SimpleName[41565-41569]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[41570-41589]:SingleVariableDeclaration[41570-41589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41591-41670]:Block[41591-41670]"
    }, {
      "left" : "for (Node node : childNodes)\n            node.outerHtml(accum);",
      "right" : "for (Node node : childNodes)\n            node.outerHtml(accum);",
      "info" : "EnhancedForStatement[41601-41664]:EnhancedForStatement[41601-41664]"
    }, {
      "left" : "node.outerHtml(accum);",
      "right" : "node.outerHtml(accum);",
      "info" : "ExpressionStatement[41642-41664]:ExpressionStatement[41642-41664]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41881-41887]:Modifier[41881-41887]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[41888-41895]:SimpleType[41888-41895]"
    }, {
      "left" : "html",
      "right" : "html",
      "info" : "SimpleName[41896-41900]:SimpleName[41896-41900]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[41901-41912]:SingleVariableDeclaration[41901-41912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41914-41981]:Block[41914-41981]"
    }, {
      "left" : "empty();",
      "right" : "empty();",
      "info" : "ExpressionStatement[41924-41932]:ExpressionStatement[41924-41932]"
    }, {
      "left" : "append(html);",
      "right" : "append(html);",
      "info" : "ExpressionStatement[41941-41954]:ExpressionStatement[41941-41954]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[41963-41975]:ReturnStatement[41963-41975]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41987-41993]:Modifier[41987-41993]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41994-42000]:SimpleType[41994-42000]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[42001-42009]:SimpleName[42001-42009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42012-42047]:Block[42012-42047]"
    }, {
      "left" : "return outerHtml();",
      "right" : "return outerHtml();",
      "info" : "ReturnStatement[42022-42041]:ReturnStatement[42022-42041]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42326-42335]:MarkerAnnotation[42340-42349]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42340-42346]:Modifier[42354-42360]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[42347-42350]:PrimitiveType[42361-42364]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[42351-42359]:SimpleName[42365-42373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42362-42498]:Block[42376-42512]"
    }, {
      "left" : "int result = super.hashCode();",
      "right" : "int result = super.hashCode();",
      "info" : "VariableDeclarationStatement[42372-42402]:VariableDeclarationStatement[42386-42416]"
    }, {
      "left" : "result = 31 * result + (tag != null ? tag.hashCode() : 0);",
      "right" : "result = 31 * result + (tag != null ? tag.hashCode() : 0);",
      "info" : "ExpressionStatement[42411-42469]:ExpressionStatement[42425-42483]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[42478-42492]:ReturnStatement[42492-42506]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42504-42513]:MarkerAnnotation[42518-42527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42518-42524]:Modifier[42532-42538]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[42525-42532]:SimpleType[42539-42546]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[42533-42538]:SimpleName[42547-42552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42541-42588]:Block[42555-42602]"
    }, {
      "left" : "return (Element) super.clone();",
      "right" : "return (Element) super.clone();",
      "info" : "ReturnStatement[42551-42582]:ReturnStatement[42565-42596]"
    } ]
  },
  "interFileMappings" : { }
}