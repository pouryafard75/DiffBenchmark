{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "TypeDeclaration[1050-39220]:TypeDeclaration[1050-39860]"
    }, {
      "left" : "private static final long serialVersionUID = 12324121189002L;",
      "right" : "private static final long serialVersionUID = 12324121189002L;",
      "info" : "FieldDeclaration[2769-2863]:FieldDeclaration[2769-2863]"
    }, {
      "left" : "private final Chronology iChronology;",
      "right" : "private final Chronology iChronology;",
      "info" : "FieldDeclaration[2869-2940]:FieldDeclaration[2869-2940]"
    }, {
      "left" : "private final DateTimeFieldType[] iTypes;",
      "right" : "private final DateTimeFieldType[] iTypes;",
      "info" : "FieldDeclaration[2945-3021]:FieldDeclaration[2945-3021]"
    }, {
      "left" : "private final int[] iValues;",
      "right" : "private final int[] iValues;",
      "info" : "FieldDeclaration[3026-3107]:FieldDeclaration[3026-3107]"
    }, {
      "left" : "private transient DateTimeFormatter[] iFormatter;",
      "right" : "private transient DateTimeFormatter[] iFormatter;",
      "info" : "FieldDeclaration[3112-3249]:FieldDeclaration[3112-3249]"
    }, {
      "left" : "public Partial()",
      "right" : "public Partial()",
      "info" : "MethodDeclaration[3353-4005]:MethodDeclaration[3353-4005]"
    }, {
      "left" : "public Partial(Chronology chrono)",
      "right" : "public Partial(Chronology chrono)",
      "info" : "MethodDeclaration[4011-4805]:MethodDeclaration[4011-4805]"
    }, {
      "left" : "public Partial(DateTimeFieldType type, int value)",
      "right" : "public Partial(DateTimeFieldType type, int value)",
      "info" : "MethodDeclaration[4811-5241]:MethodDeclaration[4811-5241]"
    }, {
      "left" : "public Partial(DateTimeFieldType type, int value, Chronology chronology)",
      "right" : "public Partial(DateTimeFieldType type, int value, Chronology chronology)",
      "info" : "MethodDeclaration[5247-6096]:MethodDeclaration[5247-6096]"
    }, {
      "left" : "public Partial(DateTimeFieldType[] types, int[] values)",
      "right" : "public Partial(DateTimeFieldType[] types, int[] values)",
      "info" : "MethodDeclaration[6102-6620]:MethodDeclaration[6102-6620]"
    }, {
      "left" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
      "right" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
      "info" : "MethodDeclaration[6626-10447]:MethodDeclaration[6626-11087]"
    }, {
      "left" : "public Partial(ReadablePartial partial)",
      "right" : "public Partial(ReadablePartial partial)",
      "info" : "MethodDeclaration[10453-11173]:MethodDeclaration[11093-11813]"
    }, {
      "left" : "Partial(Partial partial, int[] values)",
      "right" : "Partial(Partial partial, int[] values)",
      "info" : "MethodDeclaration[11179-11643]:MethodDeclaration[11819-12283]"
    }, {
      "left" : "Partial(Chronology chronology, DateTimeFieldType[] types, int[] values)",
      "right" : "Partial(Chronology chronology, DateTimeFieldType[] types, int[] values)",
      "info" : "MethodDeclaration[11649-12207]:MethodDeclaration[12289-12847]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[12291-12451]:MethodDeclaration[12931-13091]"
    }, {
      "left" : "public Chronology getChronology()",
      "right" : "public Chronology getChronology()",
      "info" : "MethodDeclaration[12457-12834]:MethodDeclaration[13097-13474]"
    }, {
      "left" : "protected DateTimeField getField(int index, Chronology chrono)",
      "right" : "protected DateTimeField getField(int index, Chronology chrono)",
      "info" : "MethodDeclaration[12840-13230]:MethodDeclaration[13480-13870]"
    }, {
      "left" : "public DateTimeFieldType getFieldType(int index)",
      "right" : "public DateTimeFieldType getFieldType(int index)",
      "info" : "MethodDeclaration[13236-13552]:MethodDeclaration[13876-14192]"
    }, {
      "left" : "public DateTimeFieldType[] getFieldTypes()",
      "right" : "public DateTimeFieldType[] getFieldTypes()",
      "info" : "MethodDeclaration[13558-13913]:MethodDeclaration[14198-14553]"
    }, {
      "left" : "public int getValue(int index)",
      "right" : "public int getValue(int index)",
      "info" : "MethodDeclaration[13997-14269]:MethodDeclaration[14637-14909]"
    }, {
      "left" : "public int[] getValues()",
      "right" : "public int[] getValues()",
      "info" : "MethodDeclaration[14275-14688]:MethodDeclaration[14915-15328]"
    }, {
      "left" : "public Partial withChronologyRetainFields(Chronology newChronology)",
      "right" : "public Partial withChronologyRetainFields(Chronology newChronology)",
      "info" : "MethodDeclaration[14772-15864]:MethodDeclaration[15412-16504]"
    }, {
      "left" : "public Partial with(DateTimeFieldType fieldType, int value)",
      "right" : "public Partial with(DateTimeFieldType fieldType, int value)",
      "info" : "MethodDeclaration[15948-19179]:MethodDeclaration[16588-19819]"
    }, {
      "left" : "public Partial without(DateTimeFieldType fieldType)",
      "right" : "public Partial without(DateTimeFieldType fieldType)",
      "info" : "MethodDeclaration[19185-20251]:MethodDeclaration[19825-20891]"
    }, {
      "left" : "public Partial withField(DateTimeFieldType fieldType, int value)",
      "right" : "public Partial withField(DateTimeFieldType fieldType, int value)",
      "info" : "MethodDeclaration[20335-21328]:MethodDeclaration[20975-21968]"
    }, {
      "left" : "public Partial withFieldAdded(DurationFieldType fieldType, int amount)",
      "right" : "public Partial withFieldAdded(DurationFieldType fieldType, int amount)",
      "info" : "MethodDeclaration[21334-22397]:MethodDeclaration[21974-23037]"
    }, {
      "left" : "public Partial withFieldAddWrapped(DurationFieldType fieldType, int amount)",
      "right" : "public Partial withFieldAddWrapped(DurationFieldType fieldType, int amount)",
      "info" : "MethodDeclaration[22403-23468]:MethodDeclaration[23043-24108]"
    }, {
      "left" : "public Partial withPeriodAdded(ReadablePeriod period, int scalar)",
      "right" : "public Partial withPeriodAdded(ReadablePeriod period, int scalar)",
      "info" : "MethodDeclaration[23474-24820]:MethodDeclaration[24114-25460]"
    }, {
      "left" : "public Partial plus(ReadablePeriod period)",
      "right" : "public Partial plus(ReadablePeriod period)",
      "info" : "MethodDeclaration[24826-25314]:MethodDeclaration[25466-25954]"
    }, {
      "left" : "public Partial minus(ReadablePeriod period)",
      "right" : "public Partial minus(ReadablePeriod period)",
      "info" : "MethodDeclaration[25320-25807]:MethodDeclaration[25960-26447]"
    }, {
      "left" : "public Property property(DateTimeFieldType type)",
      "right" : "public Property property(DateTimeFieldType type)",
      "info" : "MethodDeclaration[25891-26424]:MethodDeclaration[26531-27064]"
    }, {
      "left" : "public boolean isMatch(ReadableInstant instant)",
      "right" : "public boolean isMatch(ReadableInstant instant)",
      "info" : "MethodDeclaration[26508-27296]:MethodDeclaration[27148-27936]"
    }, {
      "left" : "public boolean isMatch(ReadablePartial partial)",
      "right" : "public boolean isMatch(ReadablePartial partial)",
      "info" : "MethodDeclaration[27302-28212]:MethodDeclaration[27942-28852]"
    }, {
      "left" : "public DateTimeFormatter getFormatter()",
      "right" : "public DateTimeFormatter getFormatter()",
      "info" : "MethodDeclaration[28296-29421]:MethodDeclaration[28936-30061]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[29505-30245]:MethodDeclaration[30145-30885]"
    }, {
      "left" : "public String toStringList()",
      "right" : "public String toStringList()",
      "info" : "MethodDeclaration[30251-31068]:MethodDeclaration[30891-31708]"
    }, {
      "left" : "public String toString(String pattern)",
      "right" : "public String toString(String pattern)",
      "info" : "MethodDeclaration[31074-31541]:MethodDeclaration[31714-32181]"
    }, {
      "left" : "public String toString(String pattern, Locale locale)",
      "right" : "public String toString(String pattern, Locale locale)",
      "info" : "MethodDeclaration[31547-32104]:MethodDeclaration[32187-32744]"
    }, {
      "left" : "Property",
      "right" : "Property",
      "info" : "TypeDeclaration[32188-39217]:TypeDeclaration[32828-39857]"
    }, {
      "left" : "private static final long serialVersionUID = 53278362873888L;",
      "right" : "private static final long serialVersionUID = 53278362873888L;",
      "info" : "FieldDeclaration[32508-32606]:FieldDeclaration[33148-33246]"
    }, {
      "left" : "private final Partial iPartial;",
      "right" : "private final Partial iPartial;",
      "info" : "FieldDeclaration[32616-32674]:FieldDeclaration[33256-33314]"
    }, {
      "left" : "private final int iFieldIndex;",
      "right" : "private final int iFieldIndex;",
      "info" : "FieldDeclaration[32683-32744]:FieldDeclaration[33323-33384]"
    }, {
      "left" : "Property(Partial partial, int fieldIndex)",
      "right" : "Property(Partial partial, int fieldIndex)",
      "info" : "MethodDeclaration[32754-33071]:MethodDeclaration[33394-33711]"
    }, {
      "left" : "public DateTimeField getField()",
      "right" : "public DateTimeField getField()",
      "info" : "MethodDeclaration[33081-33291]:MethodDeclaration[33721-33931]"
    }, {
      "left" : "protected ReadablePartial getReadablePartial()",
      "right" : "protected ReadablePartial getReadablePartial()",
      "info" : "MethodDeclaration[33301-33514]:MethodDeclaration[33941-34154]"
    }, {
      "left" : "public Partial getPartial()",
      "right" : "public Partial getPartial()",
      "info" : "MethodDeclaration[33524-33718]:MethodDeclaration[34164-34358]"
    }, {
      "left" : "public int get()",
      "right" : "public int get()",
      "info" : "MethodDeclaration[33728-33919]:MethodDeclaration[34368-34559]"
    }, {
      "left" : "public Partial addToCopy(int valueToAdd)",
      "right" : "public Partial addToCopy(int valueToAdd)",
      "info" : "MethodDeclaration[34011-35062]:MethodDeclaration[34651-35702]"
    }, {
      "left" : "public Partial addWrapFieldToCopy(int valueToAdd)",
      "right" : "public Partial addWrapFieldToCopy(int valueToAdd)",
      "info" : "MethodDeclaration[35072-36197]:MethodDeclaration[35712-36837]"
    }, {
      "left" : "public Partial setCopy(int value)",
      "right" : "public Partial setCopy(int value)",
      "info" : "MethodDeclaration[36289-36954]:MethodDeclaration[36929-37594]"
    }, {
      "left" : "public Partial setCopy(String text, Locale locale)",
      "right" : "public Partial setCopy(String text, Locale locale)",
      "info" : "MethodDeclaration[36964-37737]:MethodDeclaration[37604-38377]"
    }, {
      "left" : "public Partial setCopy(String text)",
      "right" : "public Partial setCopy(String text)",
      "info" : "MethodDeclaration[37747-38275]:MethodDeclaration[38387-38915]"
    }, {
      "left" : "public Partial withMaximumValue()",
      "right" : "public Partial withMaximumValue()",
      "info" : "MethodDeclaration[38367-38784]:MethodDeclaration[39007-39424]"
    }, {
      "left" : "public Partial withMinimumValue()",
      "right" : "public Partial withMinimumValue()",
      "info" : "MethodDeclaration[38794-39211]:MethodDeclaration[39434-39851]"
    } ],
    "mappings" : [
 {
      "left" : "AbstractPartial",
      "right" : "AbstractPartial",
      "info" : "SimpleType[2697-2712]:SimpleType[2697-2712]"
    }, {
      "left" : "ReadablePartial",
      "right" : "ReadablePartial",
      "info" : "SimpleType[2732-2747]:SimpleType[2732-2747]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[2749-2761]:SimpleType[2749-2761]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3948-3954]:Modifier[3948-3954]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleName[3955-3962]:SimpleName[3955-3962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3965-4005]:Block[3965-4005]"
    }, {
      "left" : "this((Chronology) null);",
      "right" : "this((Chronology) null);",
      "info" : "ConstructorInvocation[3975-3999]:ConstructorInvocation[3975-3999]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4605-4611]:Modifier[4605-4611]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleName[4612-4619]:SimpleName[4612-4619]"
    }, {
      "left" : "Chronology chrono",
      "right" : "Chronology chrono",
      "info" : "SingleVariableDeclaration[4620-4637]:SingleVariableDeclaration[4620-4637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4639-4805]:Block[4639-4805]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[4649-4657]:SuperConstructorInvocation[4649-4657]"
    }, {
      "left" : "iChronology = DateTimeUtils.getChronology(chrono).withUTC();",
      "right" : "iChronology = DateTimeUtils.getChronology(chrono).withUTC();",
      "info" : "ExpressionStatement[4666-4726]:ExpressionStatement[4666-4726]"
    }, {
      "left" : "iTypes = new DateTimeFieldType[0];",
      "right" : "iTypes = new DateTimeFieldType[0];",
      "info" : "ExpressionStatement[4735-4769]:ExpressionStatement[4735-4769]"
    }, {
      "left" : "iValues = new int[0];",
      "right" : "iValues = new int[0];",
      "info" : "ExpressionStatement[4778-4799]:ExpressionStatement[4778-4799]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5151-5157]:Modifier[5151-5157]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleName[5158-5165]:SimpleName[5158-5165]"
    }, {
      "left" : "DateTimeFieldType type",
      "right" : "DateTimeFieldType type",
      "info" : "SingleVariableDeclaration[5166-5188]:SingleVariableDeclaration[5166-5188]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[5190-5199]:SingleVariableDeclaration[5190-5199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5201-5241]:Block[5201-5241]"
    }, {
      "left" : "this(type, value, null);",
      "right" : "this(type, value, null);",
      "info" : "ConstructorInvocation[5211-5235]:ConstructorInvocation[5211-5235]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5642-5648]:Modifier[5642-5648]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleName[5649-5656]:SimpleName[5649-5656]"
    }, {
      "left" : "DateTimeFieldType type",
      "right" : "DateTimeFieldType type",
      "info" : "SingleVariableDeclaration[5657-5679]:SingleVariableDeclaration[5657-5679]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[5681-5690]:SingleVariableDeclaration[5681-5690]"
    }, {
      "left" : "Chronology chronology",
      "right" : "Chronology chronology",
      "info" : "SingleVariableDeclaration[5692-5713]:SingleVariableDeclaration[5692-5713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5715-6096]:Block[5715-6096]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[5725-5733]:SuperConstructorInvocation[5725-5733]"
    }, {
      "left" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
      "right" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
      "info" : "ExpressionStatement[5742-5805]:ExpressionStatement[5742-5805]"
    }, {
      "left" : "iChronology = chronology;",
      "right" : "iChronology = chronology;",
      "info" : "ExpressionStatement[5814-5839]:ExpressionStatement[5814-5839]"
    }, {
      "left" : "if (type == null)",
      "right" : "if (type == null)",
      "info" : "IfStatement[5848-5960]:IfStatement[5848-5960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5866-5960]:Block[5866-5960]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The field type must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The field type must not be null\");",
      "info" : "ThrowStatement[5880-5950]:ThrowStatement[5880-5950]"
    }, {
      "left" : "iTypes = new DateTimeFieldType[] {type};",
      "right" : "iTypes = new DateTimeFieldType[] {type};",
      "info" : "ExpressionStatement[5969-6009]:ExpressionStatement[5969-6009]"
    }, {
      "left" : "iValues = new int[] {value};",
      "right" : "iValues = new int[] {value};",
      "info" : "ExpressionStatement[6018-6046]:ExpressionStatement[6018-6046]"
    }, {
      "left" : "chronology.validate(this, iValues);",
      "right" : "chronology.validate(this, iValues);",
      "info" : "ExpressionStatement[6055-6090]:ExpressionStatement[6055-6090]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6522-6528]:Modifier[6522-6528]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleName[6529-6536]:SimpleName[6529-6536]"
    }, {
      "left" : "DateTimeFieldType[] types",
      "right" : "DateTimeFieldType[] types",
      "info" : "SingleVariableDeclaration[6537-6562]:SingleVariableDeclaration[6537-6562]"
    }, {
      "left" : "int[] values",
      "right" : "int[] values",
      "info" : "SingleVariableDeclaration[6564-6576]:SingleVariableDeclaration[6564-6576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6578-6620]:Block[6578-6620]"
    }, {
      "left" : "this(types, values, null);",
      "right" : "this(types, values, null);",
      "info" : "ConstructorInvocation[6588-6614]:ConstructorInvocation[6588-6614]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7103-7109]:Modifier[7103-7109]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleName[7110-7117]:SimpleName[7110-7117]"
    }, {
      "left" : "DateTimeFieldType[] types",
      "right" : "DateTimeFieldType[] types",
      "info" : "SingleVariableDeclaration[7118-7143]:SingleVariableDeclaration[7118-7143]"
    }, {
      "left" : "int[] values",
      "right" : "int[] values",
      "info" : "SingleVariableDeclaration[7145-7157]:SingleVariableDeclaration[7145-7157]"
    }, {
      "left" : "Chronology chronology",
      "right" : "Chronology chronology",
      "info" : "SingleVariableDeclaration[7159-7180]:SingleVariableDeclaration[7159-7180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7182-10447]:Block[7182-11087]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[7192-7200]:SuperConstructorInvocation[7192-7200]"
    }, {
      "left" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
      "right" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
      "info" : "ExpressionStatement[7209-7272]:ExpressionStatement[7209-7272]"
    }, {
      "left" : "iChronology = chronology;",
      "right" : "iChronology = chronology;",
      "info" : "ExpressionStatement[7281-7306]:ExpressionStatement[7281-7306]"
    }, {
      "left" : "if (types == null)",
      "right" : "if (types == null)",
      "info" : "IfStatement[7315-7425]:IfStatement[7315-7425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7334-7425]:Block[7334-7425]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"Types array must not be null\");",
      "info" : "ThrowStatement[7348-7415]:ThrowStatement[7348-7415]"
    }, {
      "left" : "if (values == null)",
      "right" : "if (values == null)",
      "info" : "IfStatement[7434-7546]:IfStatement[7434-7546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7454-7546]:Block[7454-7546]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Values array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"Values array must not be null\");",
      "info" : "ThrowStatement[7468-7536]:ThrowStatement[7468-7536]"
    }, {
      "left" : "if (values.length != types.length)",
      "right" : "if (values.length != types.length)",
      "info" : "IfStatement[7555-7708]:IfStatement[7555-7708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7590-7708]:Block[7590-7708]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Values array must be the same length as the types array\");",
      "right" : "throw new IllegalArgumentException(\"Values array must be the same length as the types array\");",
      "info" : "ThrowStatement[7604-7698]:ThrowStatement[7604-7698]"
    }, {
      "left" : "if (types.length == 0)",
      "right" : "if (types.length == 0)",
      "info" : "IfStatement[7717-7829]:IfStatement[7717-7829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7740-7829]:Block[7740-7829]"
    }, {
      "left" : "iTypes = types;",
      "right" : "iTypes = types;",
      "info" : "ExpressionStatement[7754-7769]:ExpressionStatement[7754-7769]"
    }, {
      "left" : "iValues = values;",
      "right" : "iValues = values;",
      "info" : "ExpressionStatement[7782-7799]:ExpressionStatement[7782-7799]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[7812-7819]:ReturnStatement[7812-7819]"
    }, {
      "left" : "for (int i = 0; i < types.length; i++)",
      "right" : "for (int i = 0; i < types.length; i++)",
      "info" : "ForStatement[7838-8039]:ForStatement[7838-8039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7877-8039]:Block[7877-8039]"
    }, {
      "left" : "if (types[i] == null)",
      "right" : "if (types[i] == null)",
      "info" : "IfStatement[7891-8029]:IfStatement[7891-8029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7913-8029]:Block[7913-8029]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must not contain null: index \" + i);",
      "right" : "throw new IllegalArgumentException(\"Types array must not contain null: index \" + i);",
      "info" : "ThrowStatement[7931-8015]:ThrowStatement[7931-8015]"
    }, {
      "left" : "DurationField lastUnitField = null;",
      "right" : "DurationField lastUnitField = null;",
      "info" : "VariableDeclarationStatement[8048-8083]:VariableDeclarationStatement[8048-8083]"
    }, {
      "left" : "for (int i = 0; i < types.length; i++)",
      "right" : "for (int i = 0; i < types.length; i++)",
      "info" : "ForStatement[8092-10293]:ForStatement[8092-10933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8131-10293]:Block[8131-10933]"
    }, {
      "left" : "DateTimeFieldType loopType = types[i];",
      "right" : "DateTimeFieldType loopType = types[i];",
      "info" : "VariableDeclarationStatement[8145-8183]:VariableDeclarationStatement[8145-8183]"
    }, {
      "left" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
      "right" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[8196-8275]:VariableDeclarationStatement[8196-8275]"
    }, {
      "left" : "if (i > 0)",
      "right" : "if (i > 0)",
      "info" : "IfStatement[8288-10240]:IfStatement[8288-10880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8299-10240]:Block[8299-10880]"
    }, {
      "left" : "int compare = lastUnitField.compareTo(loopUnitField);",
      "right" : "int compare = lastUnitField.compareTo(loopUnitField);",
      "info" : "VariableDeclarationStatement[8317-8370]:VariableDeclarationStatement[8918-8971]"
    }, {
      "left" : "if (compare < 0)",
      "right" : "if (compare < 0)",
      "info" : "IfStatement[8387-10226]:IfStatement[8988-10866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8404-8612]:Block[9005-9213]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                            types[i - 1].getName() + \" < \" + loopType.getName());",
      "right" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                            types[i - 1].getName() + \" < \" + loopType.getName());",
      "info" : "ThrowStatement[8426-8594]:ThrowStatement[9027-9195]"
    }, {
      "left" : "if (compare == 0)",
      "right" : "if (compare == 0 && lastUnitField.equals(loopUnitField))",
      "info" : "IfStatement[8618-10226]:IfStatement[9219-10866]"
    }, {
      "left" : "compare == 0",
      "right" : "compare == 0",
      "info" : "InfixExpression[8622-8634]:InfixExpression[9223-9235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8636-10226]:Block[9276-10866]"
    }, {
      "left" : "if (types[i - 1].getRangeDurationType() == null)",
      "right" : "if (types[i - 1].getRangeDurationType() == null)",
      "info" : "IfStatement[8658-10208]:IfStatement[9298-10848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8707-9035]:Block[9347-9675]"
    }, {
      "left" : "if (loopType.getRangeDurationType() == null)",
      "right" : "if (loopType.getRangeDurationType() == null)",
      "info" : "IfStatement[8733-9013]:IfStatement[9373-9653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8778-9013]:Block[9418-9653]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" +\n                                            types[i - 1].getName() + \" and \" + loopType.getName());",
      "right" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" +\n                                            types[i - 1].getName() + \" and \" + loopType.getName());",
      "info" : "ThrowStatement[8808-8987]:ThrowStatement[9448-9627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9041-10208]:Block[9681-10848]"
    }, {
      "left" : "if (loopType.getRangeDurationType() == null)",
      "right" : "if (loopType.getRangeDurationType() == null)",
      "info" : "IfStatement[9067-9344]:IfStatement[9707-9984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9112-9344]:Block[9752-9984]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
      "right" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
      "info" : "ThrowStatement[9142-9318]:ThrowStatement[9782-9958]"
    }, {
      "left" : "DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);",
      "right" : "DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[9369-9458]:VariableDeclarationStatement[10009-10098]"
    }, {
      "left" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
      "right" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[9483-9568]:VariableDeclarationStatement[10123-10208]"
    }, {
      "left" : "if (lastRangeField.compareTo(loopRangeField) < 0)",
      "right" : "if (lastRangeField.compareTo(loopRangeField) < 0)",
      "info" : "IfStatement[9593-9875]:IfStatement[10233-10515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9643-9875]:Block[10283-10515]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
      "right" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
      "info" : "ThrowStatement[9673-9849]:ThrowStatement[10313-10489]"
    }, {
      "left" : "if (lastRangeField.compareTo(loopRangeField) == 0)",
      "right" : "if (lastRangeField.compareTo(loopRangeField) == 0)",
      "info" : "IfStatement[9900-10186]:IfStatement[10540-10826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9951-10186]:Block[10591-10826]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" +\n                                            types[i - 1].getName() + \" and \" + loopType.getName());",
      "right" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" +\n                                            types[i - 1].getName() + \" and \" + loopType.getName());",
      "info" : "ThrowStatement[9981-10160]:ThrowStatement[10621-10800]"
    }, {
      "left" : "lastUnitField = loopUnitField;",
      "right" : "lastUnitField = loopUnitField;",
      "info" : "ExpressionStatement[10253-10283]:ExpressionStatement[10893-10923]"
    }, {
      "left" : "iTypes = (DateTimeFieldType[]) types.clone();",
      "right" : "iTypes = (DateTimeFieldType[]) types.clone();",
      "info" : "ExpressionStatement[10311-10356]:ExpressionStatement[10951-10996]"
    }, {
      "left" : "chronology.validate(this, values);",
      "right" : "chronology.validate(this, values);",
      "info" : "ExpressionStatement[10365-10399]:ExpressionStatement[11005-11039]"
    }, {
      "left" : "iValues = (int[]) values.clone();",
      "right" : "iValues = (int[]) values.clone();",
      "info" : "ExpressionStatement[10408-10441]:ExpressionStatement[11048-11081]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10647-10653]:Modifier[11287-11293]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleName[10654-10661]:SimpleName[11294-11301]"
    }, {
      "left" : "ReadablePartial partial",
      "right" : "ReadablePartial partial",
      "info" : "SingleVariableDeclaration[10662-10685]:SingleVariableDeclaration[11302-11325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10687-11173]:Block[11327-11813]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[10697-10705]:SuperConstructorInvocation[11337-11345]"
    }, {
      "left" : "if (partial == null)",
      "right" : "if (partial == null)",
      "info" : "IfStatement[10714-10826]:IfStatement[11354-11466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10735-10826]:Block[11375-11466]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "info" : "ThrowStatement[10749-10816]:ThrowStatement[11389-11456]"
    }, {
      "left" : "iChronology = DateTimeUtils.getChronology(partial.getChronology()).withUTC();",
      "right" : "iChronology = DateTimeUtils.getChronology(partial.getChronology()).withUTC();",
      "info" : "ExpressionStatement[10835-10912]:ExpressionStatement[11475-11552]"
    }, {
      "left" : "iTypes = new DateTimeFieldType[partial.size()];",
      "right" : "iTypes = new DateTimeFieldType[partial.size()];",
      "info" : "ExpressionStatement[10921-10968]:ExpressionStatement[11561-11608]"
    }, {
      "left" : "iValues = new int[partial.size()];",
      "right" : "iValues = new int[partial.size()];",
      "info" : "ExpressionStatement[10977-11011]:ExpressionStatement[11617-11651]"
    }, {
      "left" : "for (int i = 0; i < partial.size(); i++)",
      "right" : "for (int i = 0; i < partial.size(); i++)",
      "info" : "ForStatement[11020-11167]:ForStatement[11660-11807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11061-11167]:Block[11701-11807]"
    }, {
      "left" : "iTypes[i] = partial.getFieldType(i);",
      "right" : "iTypes[i] = partial.getFieldType(i);",
      "info" : "ExpressionStatement[11075-11111]:ExpressionStatement[11715-11751]"
    }, {
      "left" : "iValues[i] = partial.getValue(i);",
      "right" : "iValues[i] = partial.getValue(i);",
      "info" : "ExpressionStatement[11124-11157]:ExpressionStatement[11764-11797]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleName[11478-11485]:SimpleName[12118-12125]"
    }, {
      "left" : "Partial partial",
      "right" : "Partial partial",
      "info" : "SingleVariableDeclaration[11486-11501]:SingleVariableDeclaration[12126-12141]"
    }, {
      "left" : "int[] values",
      "right" : "int[] values",
      "info" : "SingleVariableDeclaration[11503-11515]:SingleVariableDeclaration[12143-12155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11517-11643]:Block[12157-12283]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[11527-11535]:SuperConstructorInvocation[12167-12175]"
    }, {
      "left" : "iChronology = partial.iChronology;",
      "right" : "iChronology = partial.iChronology;",
      "info" : "ExpressionStatement[11544-11578]:ExpressionStatement[12184-12218]"
    }, {
      "left" : "iTypes = partial.iTypes;",
      "right" : "iTypes = partial.iTypes;",
      "info" : "ExpressionStatement[11587-11611]:ExpressionStatement[12227-12251]"
    }, {
      "left" : "iValues = values;",
      "right" : "iValues = values;",
      "info" : "ExpressionStatement[11620-11637]:ExpressionStatement[12260-12277]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleName[12027-12034]:SimpleName[12667-12674]"
    }, {
      "left" : "Chronology chronology",
      "right" : "Chronology chronology",
      "info" : "SingleVariableDeclaration[12035-12056]:SingleVariableDeclaration[12675-12696]"
    }, {
      "left" : "DateTimeFieldType[] types",
      "right" : "DateTimeFieldType[] types",
      "info" : "SingleVariableDeclaration[12058-12083]:SingleVariableDeclaration[12698-12723]"
    }, {
      "left" : "int[] values",
      "right" : "int[] values",
      "info" : "SingleVariableDeclaration[12085-12097]:SingleVariableDeclaration[12725-12737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12099-12207]:Block[12739-12847]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[12109-12117]:SuperConstructorInvocation[12749-12757]"
    }, {
      "left" : "iChronology = chronology;",
      "right" : "iChronology = chronology;",
      "info" : "ExpressionStatement[12126-12151]:ExpressionStatement[12766-12791]"
    }, {
      "left" : "iTypes = types;",
      "right" : "iTypes = types;",
      "info" : "ExpressionStatement[12160-12175]:ExpressionStatement[12800-12815]"
    }, {
      "left" : "iValues = values;",
      "right" : "iValues = values;",
      "info" : "ExpressionStatement[12184-12201]:ExpressionStatement[12824-12841]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12396-12402]:Modifier[13036-13042]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[12403-12406]:PrimitiveType[13043-13046]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[12407-12411]:SimpleName[13047-13051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12414-12451]:Block[13054-13091]"
    }, {
      "left" : "return iTypes.length;",
      "right" : "return iTypes.length;",
      "info" : "ReturnStatement[12424-12445]:ReturnStatement[13064-13085]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12765-12771]:Modifier[13405-13411]"
    }, {
      "left" : "Chronology",
      "right" : "Chronology",
      "info" : "SimpleType[12772-12782]:SimpleType[13412-13422]"
    }, {
      "left" : "getChronology",
      "right" : "getChronology",
      "info" : "SimpleName[12783-12796]:SimpleName[13423-13436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12799-12834]:Block[13439-13474]"
    }, {
      "left" : "return iChronology;",
      "right" : "return iChronology;",
      "info" : "ReturnStatement[12809-12828]:ReturnStatement[13449-13468]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[13113-13122]:Modifier[13753-13762]"
    }, {
      "left" : "DateTimeField",
      "right" : "DateTimeField",
      "info" : "SimpleType[13123-13136]:SimpleType[13763-13776]"
    }, {
      "left" : "getField",
      "right" : "getField",
      "info" : "SimpleName[13137-13145]:SimpleName[13777-13785]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[13146-13155]:SingleVariableDeclaration[13786-13795]"
    }, {
      "left" : "Chronology chrono",
      "right" : "Chronology chrono",
      "info" : "SingleVariableDeclaration[13157-13174]:SingleVariableDeclaration[13797-13814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13176-13230]:Block[13816-13870]"
    }, {
      "left" : "return iTypes[index].getField(chrono);",
      "right" : "return iTypes[index].getField(chrono);",
      "info" : "ReturnStatement[13186-13224]:ReturnStatement[13826-13864]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13466-13472]:Modifier[14106-14112]"
    }, {
      "left" : "DateTimeFieldType",
      "right" : "DateTimeFieldType",
      "info" : "SimpleType[13473-13490]:SimpleType[14113-14130]"
    }, {
      "left" : "getFieldType",
      "right" : "getFieldType",
      "info" : "SimpleName[13491-13503]:SimpleName[14131-14143]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[13504-13513]:SingleVariableDeclaration[14144-14153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13515-13552]:Block[14155-14192]"
    }, {
      "left" : "return iTypes[index];",
      "right" : "return iTypes[index];",
      "info" : "ReturnStatement[13525-13546]:ReturnStatement[14165-14186]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13810-13816]:Modifier[14450-14456]"
    }, {
      "left" : "DateTimeFieldType[]",
      "right" : "DateTimeFieldType[]",
      "info" : "ArrayType[13817-13836]:ArrayType[14457-14476]"
    }, {
      "left" : "getFieldTypes",
      "right" : "getFieldTypes",
      "info" : "SimpleName[13837-13850]:SimpleName[14477-14490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13853-13913]:Block[14493-14553]"
    }, {
      "left" : "return (DateTimeFieldType[]) iTypes.clone();",
      "right" : "return (DateTimeFieldType[]) iTypes.clone();",
      "info" : "ReturnStatement[13863-13907]:ReturnStatement[14503-14547]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14200-14206]:Modifier[14840-14846]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[14207-14210]:PrimitiveType[14847-14850]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[14211-14219]:SimpleName[14851-14859]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[14220-14229]:SingleVariableDeclaration[14860-14869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14231-14269]:Block[14871-14909]"
    }, {
      "left" : "return iValues[index];",
      "right" : "return iValues[index];",
      "info" : "ReturnStatement[14241-14263]:ReturnStatement[14881-14903]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14616-14622]:Modifier[15256-15262]"
    }, {
      "left" : "int[]",
      "right" : "int[]",
      "info" : "ArrayType[14623-14628]:ArrayType[15263-15268]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[14629-14638]:SimpleName[15269-15278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14641-14688]:Block[15281-15328]"
    }, {
      "left" : "return (int[]) iValues.clone();",
      "right" : "return (int[]) iValues.clone();",
      "info" : "ReturnStatement[14651-14682]:ReturnStatement[15291-15322]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15406-15412]:Modifier[16046-16052]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[15413-15420]:SimpleType[16053-16060]"
    }, {
      "left" : "withChronologyRetainFields",
      "right" : "withChronologyRetainFields",
      "info" : "SimpleName[15421-15447]:SimpleName[16061-16087]"
    }, {
      "left" : "Chronology newChronology",
      "right" : "Chronology newChronology",
      "info" : "SingleVariableDeclaration[15448-15472]:SingleVariableDeclaration[16088-16112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15474-15864]:Block[16114-16504]"
    }, {
      "left" : "newChronology = DateTimeUtils.getChronology(newChronology);",
      "right" : "newChronology = DateTimeUtils.getChronology(newChronology);",
      "info" : "ExpressionStatement[15484-15543]:ExpressionStatement[16124-16183]"
    }, {
      "left" : "newChronology = newChronology.withUTC();",
      "right" : "newChronology = newChronology.withUTC();",
      "info" : "ExpressionStatement[15552-15592]:ExpressionStatement[16192-16232]"
    }, {
      "left" : "if (newChronology == getChronology())",
      "right" : "if (newChronology == getChronology())",
      "info" : "IfStatement[15601-15858]:IfStatement[16241-16498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15639-15675]:Block[16279-16315]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15653-15665]:ReturnStatement[16293-16305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15681-15858]:Block[16321-16498]"
    }, {
      "left" : "Partial newPartial = new Partial(newChronology, iTypes, iValues);",
      "right" : "Partial newPartial = new Partial(newChronology, iTypes, iValues);",
      "info" : "VariableDeclarationStatement[15695-15760]:VariableDeclarationStatement[16335-16400]"
    }, {
      "left" : "newChronology.validate(newPartial, iValues);",
      "right" : "newChronology.validate(newPartial, iValues);",
      "info" : "ExpressionStatement[15773-15817]:ExpressionStatement[16413-16457]"
    }, {
      "left" : "return newPartial;",
      "right" : "return newPartial;",
      "info" : "ReturnStatement[15830-15848]:ReturnStatement[16470-16488]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16588-16594]:Modifier[17228-17234]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[16595-16602]:SimpleType[17235-17242]"
    }, {
      "left" : "with",
      "right" : "with",
      "info" : "SimpleName[16603-16607]:SimpleName[17243-17247]"
    }, {
      "left" : "DateTimeFieldType fieldType",
      "right" : "DateTimeFieldType fieldType",
      "info" : "SingleVariableDeclaration[16608-16635]:SingleVariableDeclaration[17248-17275]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[16637-16646]:SingleVariableDeclaration[17277-17286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16648-19179]:Block[17288-19819]"
    }, {
      "left" : "if (fieldType == null)",
      "right" : "if (fieldType == null)",
      "info" : "IfStatement[16658-16775]:IfStatement[17298-17415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16681-16775]:Block[17321-17415]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The field type must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The field type must not be null\");",
      "info" : "ThrowStatement[16695-16765]:ThrowStatement[17335-17405]"
    }, {
      "left" : "int index = indexOf(fieldType);",
      "right" : "int index = indexOf(fieldType);",
      "info" : "VariableDeclarationStatement[16784-16815]:VariableDeclarationStatement[17424-17455]"
    }, {
      "left" : "if (index == -1)",
      "right" : "if (index == -1)",
      "info" : "IfStatement[16824-18942]:IfStatement[17464-19582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16841-18942]:Block[17481-19582]"
    }, {
      "left" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1];",
      "right" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1];",
      "info" : "VariableDeclarationStatement[16855-16927]:VariableDeclarationStatement[17495-17567]"
    }, {
      "left" : "int[] newValues = new int[newTypes.length];",
      "right" : "int[] newValues = new int[newTypes.length];",
      "info" : "VariableDeclarationStatement[16940-16983]:VariableDeclarationStatement[17580-17623]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[17084-17094]:VariableDeclarationStatement[17724-17734]"
    }, {
      "left" : "DurationField unitField = fieldType.getDurationType().getField(iChronology);",
      "right" : "DurationField unitField = fieldType.getDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[17107-17183]:VariableDeclarationStatement[17747-17823]"
    }, {
      "left" : "if (unitField.isSupported())",
      "right" : "if (unitField.isSupported())",
      "info" : "IfStatement[17196-18288]:IfStatement[17836-18928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17225-18288]:Block[17865-18928]"
    }, {
      "left" : "for (; i < iTypes.length; i++)",
      "right" : "for (; i < iTypes.length; i++)",
      "info" : "ForStatement[17243-18274]:ForStatement[17883-18914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17274-18274]:Block[17914-18914]"
    }, {
      "left" : "DateTimeFieldType loopType = iTypes[i];",
      "right" : "DateTimeFieldType loopType = iTypes[i];",
      "info" : "VariableDeclarationStatement[17296-17335]:VariableDeclarationStatement[17936-17975]"
    }, {
      "left" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
      "right" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[17356-17435]:VariableDeclarationStatement[17996-18075]"
    }, {
      "left" : "if (loopUnitField.isSupported())",
      "right" : "if (loopUnitField.isSupported())",
      "info" : "IfStatement[17456-18256]:IfStatement[18096-18896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17489-18256]:Block[18129-18896]"
    }, {
      "left" : "int compare = unitField.compareTo(loopUnitField);",
      "right" : "int compare = unitField.compareTo(loopUnitField);",
      "info" : "VariableDeclarationStatement[17515-17564]:VariableDeclarationStatement[18155-18204]"
    }, {
      "left" : "if (compare > 0)",
      "right" : "if (compare > 0)",
      "info" : "IfStatement[17589-18234]:IfStatement[18229-18874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17606-17668]:Block[18246-18308]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[17636-17642]:BreakStatement[18276-18282]"
    }, {
      "left" : "if (compare == 0)",
      "right" : "if (compare == 0)",
      "info" : "IfStatement[17674-18234]:IfStatement[18314-18874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17692-18234]:Block[18332-18874]"
    }, {
      "left" : "if (fieldType.getRangeDurationType() == null)",
      "right" : "if (fieldType.getRangeDurationType() == null)",
      "info" : "IfStatement[17722-17838]:IfStatement[18362-18478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17768-17838]:Block[18408-18478]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[17802-17808]:BreakStatement[18442-18448]"
    }, {
      "left" : "DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);",
      "right" : "DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[17867-17949]:VariableDeclarationStatement[18507-18589]"
    }, {
      "left" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
      "right" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[17978-18063]:VariableDeclarationStatement[18618-18703]"
    }, {
      "left" : "if (rangeField.compareTo(loopRangeField) > 0)",
      "right" : "if (rangeField.compareTo(loopRangeField) > 0)",
      "info" : "IfStatement[18092-18208]:IfStatement[18732-18848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18138-18208]:Block[18778-18848]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18172-18178]:BreakStatement[18812-18818]"
    }, {
      "left" : "System.arraycopy(iTypes, 0, newTypes, 0, i);",
      "right" : "System.arraycopy(iTypes, 0, newTypes, 0, i);",
      "info" : "ExpressionStatement[18301-18345]:ExpressionStatement[18941-18985]"
    }, {
      "left" : "System.arraycopy(iValues, 0, newValues, 0, i);",
      "right" : "System.arraycopy(iValues, 0, newValues, 0, i);",
      "info" : "ExpressionStatement[18358-18404]:ExpressionStatement[18998-19044]"
    }, {
      "left" : "newTypes[i] = fieldType;",
      "right" : "newTypes[i] = fieldType;",
      "info" : "ExpressionStatement[18417-18441]:ExpressionStatement[19057-19081]"
    }, {
      "left" : "newValues[i] = value;",
      "right" : "newValues[i] = value;",
      "info" : "ExpressionStatement[18454-18475]:ExpressionStatement[19094-19115]"
    }, {
      "left" : "System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1);",
      "right" : "System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1);",
      "info" : "ExpressionStatement[18488-18558]:ExpressionStatement[19128-19198]"
    }, {
      "left" : "System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);",
      "right" : "System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);",
      "info" : "ExpressionStatement[18571-18644]:ExpressionStatement[19211-19284]"
    }, {
      "left" : "Partial newPartial = new Partial(newTypes, newValues, iChronology);",
      "right" : "Partial newPartial = new Partial(newTypes, newValues, iChronology);",
      "info" : "VariableDeclarationStatement[18777-18844]:VariableDeclarationStatement[19417-19484]"
    }, {
      "left" : "iChronology.validate(newPartial, newValues);",
      "right" : "iChronology.validate(newPartial, newValues);",
      "info" : "ExpressionStatement[18857-18901]:ExpressionStatement[19497-19541]"
    }, {
      "left" : "return newPartial;",
      "right" : "return newPartial;",
      "info" : "ReturnStatement[18914-18932]:ReturnStatement[19554-19572]"
    }, {
      "left" : "if (value == getValue(index))",
      "right" : "if (value == getValue(index))",
      "info" : "IfStatement[18951-19017]:IfStatement[19591-19657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18981-19017]:Block[19621-19657]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18995-19007]:ReturnStatement[19635-19647]"
    }, {
      "left" : "int[] newValues = getValues();",
      "right" : "int[] newValues = getValues();",
      "info" : "VariableDeclarationStatement[19026-19056]:VariableDeclarationStatement[19666-19696]"
    }, {
      "left" : "newValues = getField(index).set(this, index, newValues, value);",
      "right" : "newValues = getField(index).set(this, index, newValues, value);",
      "info" : "ExpressionStatement[19065-19128]:ExpressionStatement[19705-19768]"
    }, {
      "left" : "return new Partial(this, newValues);",
      "right" : "return new Partial(this, newValues);",
      "info" : "ReturnStatement[19137-19173]:ReturnStatement[19777-19813]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19488-19494]:Modifier[20128-20134]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[19495-19502]:SimpleType[20135-20142]"
    }, {
      "left" : "without",
      "right" : "without",
      "info" : "SimpleName[19503-19510]:SimpleName[20143-20150]"
    }, {
      "left" : "DateTimeFieldType fieldType",
      "right" : "DateTimeFieldType fieldType",
      "info" : "SingleVariableDeclaration[19511-19538]:SingleVariableDeclaration[20151-20178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19540-20251]:Block[20180-20891]"
    }, {
      "left" : "int index = indexOf(fieldType);",
      "right" : "int index = indexOf(fieldType);",
      "info" : "VariableDeclarationStatement[19550-19581]:VariableDeclarationStatement[20190-20221]"
    }, {
      "left" : "if (index != -1)",
      "right" : "if (index != -1)",
      "info" : "IfStatement[19590-20224]:IfStatement[20230-20864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19607-20224]:Block[20247-20864]"
    }, {
      "left" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[size() - 1];",
      "right" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[size() - 1];",
      "info" : "VariableDeclarationStatement[19621-19686]:VariableDeclarationStatement[20261-20326]"
    }, {
      "left" : "int[] newValues = new int[size() - 1];",
      "right" : "int[] newValues = new int[size() - 1];",
      "info" : "VariableDeclarationStatement[19699-19737]:VariableDeclarationStatement[20339-20377]"
    }, {
      "left" : "System.arraycopy(iTypes, 0, newTypes, 0, index);",
      "right" : "System.arraycopy(iTypes, 0, newTypes, 0, index);",
      "info" : "ExpressionStatement[19750-19798]:ExpressionStatement[20390-20438]"
    }, {
      "left" : "System.arraycopy(iTypes, index + 1, newTypes, index, newTypes.length - index);",
      "right" : "System.arraycopy(iTypes, index + 1, newTypes, index, newTypes.length - index);",
      "info" : "ExpressionStatement[19811-19889]:ExpressionStatement[20451-20529]"
    }, {
      "left" : "System.arraycopy(iValues, 0, newValues, 0, index);",
      "right" : "System.arraycopy(iValues, 0, newValues, 0, index);",
      "info" : "ExpressionStatement[19902-19952]:ExpressionStatement[20542-20592]"
    }, {
      "left" : "System.arraycopy(iValues, index + 1, newValues, index, newValues.length - index);",
      "right" : "System.arraycopy(iValues, index + 1, newValues, index, newValues.length - index);",
      "info" : "ExpressionStatement[19965-20046]:ExpressionStatement[20605-20686]"
    }, {
      "left" : "Partial newPartial = new Partial(iChronology, newTypes, newValues);",
      "right" : "Partial newPartial = new Partial(iChronology, newTypes, newValues);",
      "info" : "VariableDeclarationStatement[20059-20126]:VariableDeclarationStatement[20699-20766]"
    }, {
      "left" : "iChronology.validate(newPartial, newValues);",
      "right" : "iChronology.validate(newPartial, newValues);",
      "info" : "ExpressionStatement[20139-20183]:ExpressionStatement[20779-20823]"
    }, {
      "left" : "return newPartial;",
      "right" : "return newPartial;",
      "info" : "ReturnStatement[20196-20214]:ReturnStatement[20836-20854]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[20233-20245]:ReturnStatement[20873-20885]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20976-20982]:Modifier[21616-21622]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[20983-20990]:SimpleType[21623-21630]"
    }, {
      "left" : "withField",
      "right" : "withField",
      "info" : "SimpleName[20991-21000]:SimpleName[21631-21640]"
    }, {
      "left" : "DateTimeFieldType fieldType",
      "right" : "DateTimeFieldType fieldType",
      "info" : "SingleVariableDeclaration[21001-21028]:SingleVariableDeclaration[21641-21668]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[21030-21039]:SingleVariableDeclaration[21670-21679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21041-21328]:Block[21681-21968]"
    }, {
      "left" : "int index = indexOfSupported(fieldType);",
      "right" : "int index = indexOfSupported(fieldType);",
      "info" : "VariableDeclarationStatement[21051-21091]:VariableDeclarationStatement[21691-21731]"
    }, {
      "left" : "if (value == getValue(index))",
      "right" : "if (value == getValue(index))",
      "info" : "IfStatement[21100-21166]:IfStatement[21740-21806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21130-21166]:Block[21770-21806]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[21144-21156]:ReturnStatement[21784-21796]"
    }, {
      "left" : "int[] newValues = getValues();",
      "right" : "int[] newValues = getValues();",
      "info" : "VariableDeclarationStatement[21175-21205]:VariableDeclarationStatement[21815-21845]"
    }, {
      "left" : "newValues = getField(index).set(this, index, newValues, value);",
      "right" : "newValues = getField(index).set(this, index, newValues, value);",
      "info" : "ExpressionStatement[21214-21277]:ExpressionStatement[21854-21917]"
    }, {
      "left" : "return new Partial(this, newValues);",
      "right" : "return new Partial(this, newValues);",
      "info" : "ReturnStatement[21286-21322]:ReturnStatement[21926-21962]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22051-22057]:Modifier[22691-22697]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[22058-22065]:SimpleType[22698-22705]"
    }, {
      "left" : "withFieldAdded",
      "right" : "withFieldAdded",
      "info" : "SimpleName[22066-22080]:SimpleName[22706-22720]"
    }, {
      "left" : "DurationFieldType fieldType",
      "right" : "DurationFieldType fieldType",
      "info" : "SingleVariableDeclaration[22081-22108]:SingleVariableDeclaration[22721-22748]"
    }, {
      "left" : "int amount",
      "right" : "int amount",
      "info" : "SingleVariableDeclaration[22110-22120]:SingleVariableDeclaration[22750-22760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22122-22397]:Block[22762-23037]"
    }, {
      "left" : "int index = indexOfSupported(fieldType);",
      "right" : "int index = indexOfSupported(fieldType);",
      "info" : "VariableDeclarationStatement[22132-22172]:VariableDeclarationStatement[22772-22812]"
    }, {
      "left" : "if (amount == 0)",
      "right" : "if (amount == 0)",
      "info" : "IfStatement[22181-22234]:IfStatement[22821-22874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22198-22234]:Block[22838-22874]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[22212-22224]:ReturnStatement[22852-22864]"
    }, {
      "left" : "int[] newValues = getValues();",
      "right" : "int[] newValues = getValues();",
      "info" : "VariableDeclarationStatement[22243-22273]:VariableDeclarationStatement[22883-22913]"
    }, {
      "left" : "newValues = getField(index).add(this, index, newValues, amount);",
      "right" : "newValues = getField(index).add(this, index, newValues, amount);",
      "info" : "ExpressionStatement[22282-22346]:ExpressionStatement[22922-22986]"
    }, {
      "left" : "return new Partial(this, newValues);",
      "right" : "return new Partial(this, newValues);",
      "info" : "ReturnStatement[22355-22391]:ReturnStatement[22995-23031]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23106-23112]:Modifier[23746-23752]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[23113-23120]:SimpleType[23753-23760]"
    }, {
      "left" : "withFieldAddWrapped",
      "right" : "withFieldAddWrapped",
      "info" : "SimpleName[23121-23140]:SimpleName[23761-23780]"
    }, {
      "left" : "DurationFieldType fieldType",
      "right" : "DurationFieldType fieldType",
      "info" : "SingleVariableDeclaration[23141-23168]:SingleVariableDeclaration[23781-23808]"
    }, {
      "left" : "int amount",
      "right" : "int amount",
      "info" : "SingleVariableDeclaration[23170-23180]:SingleVariableDeclaration[23810-23820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23182-23468]:Block[23822-24108]"
    }, {
      "left" : "int index = indexOfSupported(fieldType);",
      "right" : "int index = indexOfSupported(fieldType);",
      "info" : "VariableDeclarationStatement[23192-23232]:VariableDeclarationStatement[23832-23872]"
    }, {
      "left" : "if (amount == 0)",
      "right" : "if (amount == 0)",
      "info" : "IfStatement[23241-23294]:IfStatement[23881-23934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23258-23294]:Block[23898-23934]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[23272-23284]:ReturnStatement[23912-23924]"
    }, {
      "left" : "int[] newValues = getValues();",
      "right" : "int[] newValues = getValues();",
      "info" : "VariableDeclarationStatement[23303-23333]:VariableDeclarationStatement[23943-23973]"
    }, {
      "left" : "newValues = getField(index).addWrapPartial(this, index, newValues, amount);",
      "right" : "newValues = getField(index).addWrapPartial(this, index, newValues, amount);",
      "info" : "ExpressionStatement[23342-23417]:ExpressionStatement[23982-24057]"
    }, {
      "left" : "return new Partial(this, newValues);",
      "right" : "return new Partial(this, newValues);",
      "info" : "ReturnStatement[23426-23462]:ReturnStatement[24066-24102]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24219-24225]:Modifier[24859-24865]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[24226-24233]:SimpleType[24866-24873]"
    }, {
      "left" : "withPeriodAdded",
      "right" : "withPeriodAdded",
      "info" : "SimpleName[24234-24249]:SimpleName[24874-24889]"
    }, {
      "left" : "ReadablePeriod period",
      "right" : "ReadablePeriod period",
      "info" : "SingleVariableDeclaration[24250-24271]:SingleVariableDeclaration[24890-24911]"
    }, {
      "left" : "int scalar",
      "right" : "int scalar",
      "info" : "SingleVariableDeclaration[24273-24283]:SingleVariableDeclaration[24913-24923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24285-24820]:Block[24925-25460]"
    }, {
      "left" : "if (period == null || scalar == 0)",
      "right" : "if (period == null || scalar == 0)",
      "info" : "IfStatement[24295-24366]:IfStatement[24935-25006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24330-24366]:Block[24970-25006]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[24344-24356]:ReturnStatement[24984-24996]"
    }, {
      "left" : "int[] newValues = getValues();",
      "right" : "int[] newValues = getValues();",
      "info" : "VariableDeclarationStatement[24375-24405]:VariableDeclarationStatement[25015-25045]"
    }, {
      "left" : "for (int i = 0; i < period.size(); i++)",
      "right" : "for (int i = 0; i < period.size(); i++)",
      "info" : "ForStatement[24414-24769]:ForStatement[25054-25409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24454-24769]:Block[25094-25409]"
    }, {
      "left" : "DurationFieldType fieldType = period.getFieldType(i);",
      "right" : "DurationFieldType fieldType = period.getFieldType(i);",
      "info" : "VariableDeclarationStatement[24468-24521]:VariableDeclarationStatement[25108-25161]"
    }, {
      "left" : "int index = indexOf(fieldType);",
      "right" : "int index = indexOf(fieldType);",
      "info" : "VariableDeclarationStatement[24534-24565]:VariableDeclarationStatement[25174-25205]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[24578-24759]:IfStatement[25218-25399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24594-24759]:Block[25234-25399]"
    }, {
      "left" : "newValues = getField(index).add(this, index, newValues,\n                        FieldUtils.safeMultiply(period.getValue(i), scalar));",
      "right" : "newValues = getField(index).add(this, index, newValues,\n                        FieldUtils.safeMultiply(period.getValue(i), scalar));",
      "info" : "ExpressionStatement[24612-24745]:ExpressionStatement[25252-25385]"
    }, {
      "left" : "return new Partial(this, newValues);",
      "right" : "return new Partial(this, newValues);",
      "info" : "ReturnStatement[24778-24814]:ReturnStatement[25418-25454]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25221-25227]:Modifier[25861-25867]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[25228-25235]:SimpleType[25868-25875]"
    }, {
      "left" : "plus",
      "right" : "plus",
      "info" : "SimpleName[25236-25240]:SimpleName[25876-25880]"
    }, {
      "left" : "ReadablePeriod period",
      "right" : "ReadablePeriod period",
      "info" : "SingleVariableDeclaration[25241-25262]:SingleVariableDeclaration[25881-25902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25264-25314]:Block[25904-25954]"
    }, {
      "left" : "return withPeriodAdded(period, 1);",
      "right" : "return withPeriodAdded(period, 1);",
      "info" : "ReturnStatement[25274-25308]:ReturnStatement[25914-25948]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25712-25718]:Modifier[26352-26358]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[25719-25726]:SimpleType[26359-26366]"
    }, {
      "left" : "minus",
      "right" : "minus",
      "info" : "SimpleName[25727-25732]:SimpleName[26367-26372]"
    }, {
      "left" : "ReadablePeriod period",
      "right" : "ReadablePeriod period",
      "info" : "SingleVariableDeclaration[25733-25754]:SingleVariableDeclaration[26373-26394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25756-25807]:Block[26396-26447]"
    }, {
      "left" : "return withPeriodAdded(period, -1);",
      "right" : "return withPeriodAdded(period, -1);",
      "info" : "ReturnStatement[25766-25801]:ReturnStatement[26406-26441]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26309-26315]:Modifier[26949-26955]"
    }, {
      "left" : "Property",
      "right" : "Property",
      "info" : "SimpleType[26316-26324]:SimpleType[26956-26964]"
    }, {
      "left" : "property",
      "right" : "property",
      "info" : "SimpleName[26325-26333]:SimpleName[26965-26973]"
    }, {
      "left" : "DateTimeFieldType type",
      "right" : "DateTimeFieldType type",
      "info" : "SingleVariableDeclaration[26334-26356]:SingleVariableDeclaration[26974-26996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26358-26424]:Block[26998-27064]"
    }, {
      "left" : "return new Property(this, indexOfSupported(type));",
      "right" : "return new Property(this, indexOfSupported(type));",
      "info" : "ReturnStatement[26368-26418]:ReturnStatement[27008-27058]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26877-26883]:Modifier[27517-27523]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[26884-26891]:PrimitiveType[27524-27531]"
    }, {
      "left" : "isMatch",
      "right" : "isMatch",
      "info" : "SimpleName[26892-26899]:SimpleName[27532-27539]"
    }, {
      "left" : "ReadableInstant instant",
      "right" : "ReadableInstant instant",
      "info" : "SingleVariableDeclaration[26900-26923]:SingleVariableDeclaration[27540-27563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26925-27296]:Block[27565-27936]"
    }, {
      "left" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "right" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "info" : "VariableDeclarationStatement[26935-26989]:VariableDeclarationStatement[27575-27629]"
    }, {
      "left" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "right" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "info" : "VariableDeclarationStatement[26998-27062]:VariableDeclarationStatement[27638-27702]"
    }, {
      "left" : "for (int i = 0; i < iTypes.length; i++)",
      "right" : "for (int i = 0; i < iTypes.length; i++)",
      "info" : "ForStatement[27071-27269]:ForStatement[27711-27909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27111-27269]:Block[27751-27909]"
    }, {
      "left" : "int value = iTypes[i].getField(chrono).get(millis);",
      "right" : "int value = iTypes[i].getField(chrono).get(millis);",
      "info" : "VariableDeclarationStatement[27125-27176]:VariableDeclarationStatement[27765-27816]"
    }, {
      "left" : "if (value != iValues[i])",
      "right" : "if (value != iValues[i])",
      "info" : "IfStatement[27189-27259]:IfStatement[27829-27899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27214-27259]:Block[27854-27899]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[27232-27245]:ReturnStatement[27872-27885]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[27278-27290]:ReturnStatement[27918-27930]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27824-27830]:Modifier[28464-28470]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[27831-27838]:PrimitiveType[28471-28478]"
    }, {
      "left" : "isMatch",
      "right" : "isMatch",
      "info" : "SimpleName[27839-27846]:SimpleName[28479-28486]"
    }, {
      "left" : "ReadablePartial partial",
      "right" : "ReadablePartial partial",
      "info" : "SingleVariableDeclaration[27847-27870]:SingleVariableDeclaration[28487-28510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27872-28212]:Block[28512-28852]"
    }, {
      "left" : "if (partial == null)",
      "right" : "if (partial == null)",
      "info" : "IfStatement[27882-27994]:IfStatement[28522-28634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27903-27994]:Block[28543-28634]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "info" : "ThrowStatement[27917-27984]:ThrowStatement[28557-28624]"
    }, {
      "left" : "for (int i = 0; i < iTypes.length; i++)",
      "right" : "for (int i = 0; i < iTypes.length; i++)",
      "info" : "ForStatement[28003-28185]:ForStatement[28643-28825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28043-28185]:Block[28683-28825]"
    }, {
      "left" : "int value = partial.get(iTypes[i]);",
      "right" : "int value = partial.get(iTypes[i]);",
      "info" : "VariableDeclarationStatement[28057-28092]:VariableDeclarationStatement[28697-28732]"
    }, {
      "left" : "if (value != iValues[i])",
      "right" : "if (value != iValues[i])",
      "info" : "IfStatement[28105-28175]:IfStatement[28745-28815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28130-28175]:Block[28770-28815]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[28148-28161]:ReturnStatement[28788-28801]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[28194-28206]:ReturnStatement[28834-28846]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28754-28760]:Modifier[29394-29400]"
    }, {
      "left" : "DateTimeFormatter",
      "right" : "DateTimeFormatter",
      "info" : "SimpleType[28761-28778]:SimpleType[29401-29418]"
    }, {
      "left" : "getFormatter",
      "right" : "getFormatter",
      "info" : "SimpleName[28779-28791]:SimpleName[29419-29431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28794-29421]:Block[29434-30061]"
    }, {
      "left" : "DateTimeFormatter[] f = iFormatter;",
      "right" : "DateTimeFormatter[] f = iFormatter;",
      "info" : "VariableDeclarationStatement[28804-28839]:VariableDeclarationStatement[29444-29479]"
    }, {
      "left" : "if (f == null)",
      "right" : "if (f == null)",
      "info" : "IfStatement[28848-29394]:IfStatement[29488-30034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28863-29394]:Block[29503-30034]"
    }, {
      "left" : "if (size() == 0)",
      "right" : "if (size() == 0)",
      "info" : "IfStatement[28877-28938]:IfStatement[29517-29578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28894-28938]:Block[29534-29578]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[28912-28924]:ReturnStatement[29552-29564]"
    }, {
      "left" : "f = new DateTimeFormatter[2];",
      "right" : "f = new DateTimeFormatter[2];",
      "info" : "ExpressionStatement[28951-28980]:ExpressionStatement[29591-29620]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[28993-29356]:TryStatement[29633-29996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28997-29278]:Block[29637-29918]"
    }, {
      "left" : "List<DateTimeFieldType> list = new ArrayList<DateTimeFieldType>(Arrays.asList(iTypes));",
      "right" : "List<DateTimeFieldType> list = new ArrayList<DateTimeFieldType>(Arrays.asList(iTypes));",
      "info" : "VariableDeclarationStatement[29015-29102]:VariableDeclarationStatement[29655-29742]"
    }, {
      "left" : "f[0] = ISODateTimeFormat.forFields(list, true, false);",
      "right" : "f[0] = ISODateTimeFormat.forFields(list, true, false);",
      "info" : "ExpressionStatement[29119-29173]:ExpressionStatement[29759-29813]"
    }, {
      "left" : "if (list.size() == 0)",
      "right" : "if (list.size() == 0)",
      "info" : "IfStatement[29190-29264]:IfStatement[29830-29904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29212-29264]:Block[29852-29904]"
    }, {
      "left" : "f[1] = f[0];",
      "right" : "f[1] = f[0];",
      "info" : "ExpressionStatement[29234-29246]:ExpressionStatement[29874-29886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29315-29356]:Block[29955-29996]"
    }, {
      "left" : "iFormatter = f;",
      "right" : "iFormatter = f;",
      "info" : "ExpressionStatement[29369-29384]:ExpressionStatement[30009-30024]"
    }, {
      "left" : "return f[0];",
      "right" : "return f[0];",
      "info" : "ReturnStatement[29403-29415]:ReturnStatement[30043-30055]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29857-29863]:Modifier[30497-30503]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[29864-29870]:SimpleType[30504-30510]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[29871-29879]:SimpleName[30511-30519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29882-30245]:Block[30522-30885]"
    }, {
      "left" : "DateTimeFormatter[] f = iFormatter;",
      "right" : "DateTimeFormatter[] f = iFormatter;",
      "info" : "VariableDeclarationStatement[29892-29927]:VariableDeclarationStatement[30532-30567]"
    }, {
      "left" : "if (f == null)",
      "right" : "if (f == null)",
      "info" : "IfStatement[29936-30100]:IfStatement[30576-30740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29951-30100]:Block[30591-30740]"
    }, {
      "left" : "getFormatter();",
      "right" : "getFormatter();",
      "info" : "ExpressionStatement[29965-29980]:ExpressionStatement[30605-30620]"
    }, {
      "left" : "f = iFormatter;",
      "right" : "f = iFormatter;",
      "info" : "ExpressionStatement[29993-30008]:ExpressionStatement[30633-30648]"
    }, {
      "left" : "if (f == null)",
      "right" : "if (f == null)",
      "info" : "IfStatement[30021-30090]:IfStatement[30661-30730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30036-30090]:Block[30676-30730]"
    }, {
      "left" : "return toStringList();",
      "right" : "return toStringList();",
      "info" : "ReturnStatement[30054-30076]:ReturnStatement[30694-30716]"
    }, {
      "left" : "DateTimeFormatter f1 = f[1];",
      "right" : "DateTimeFormatter f1 = f[1];",
      "info" : "VariableDeclarationStatement[30109-30137]:VariableDeclarationStatement[30749-30777]"
    }, {
      "left" : "if (f1 == null)",
      "right" : "if (f1 == null)",
      "info" : "IfStatement[30146-30208]:IfStatement[30786-30848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30162-30208]:Block[30802-30848]"
    }, {
      "left" : "return toStringList();",
      "right" : "return toStringList();",
      "info" : "ReturnStatement[30176-30198]:ReturnStatement[30816-30838]"
    }, {
      "left" : "return f1.print(this);",
      "right" : "return f1.print(this);",
      "info" : "ReturnStatement[30217-30239]:ReturnStatement[30857-30879]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30621-30627]:Modifier[31261-31267]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30628-30634]:SimpleType[31268-31274]"
    }, {
      "left" : "toStringList",
      "right" : "toStringList",
      "info" : "SimpleName[30635-30647]:SimpleName[31275-31287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30650-31068]:Block[31290-31708]"
    }, {
      "left" : "int size = size();",
      "right" : "int size = size();",
      "info" : "VariableDeclarationStatement[30660-30678]:VariableDeclarationStatement[31300-31318]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(20 * size);",
      "right" : "StringBuilder buf = new StringBuilder(20 * size);",
      "info" : "VariableDeclarationStatement[30687-30736]:VariableDeclarationStatement[31327-31376]"
    }, {
      "left" : "buf.append('[');",
      "right" : "buf.append('[');",
      "info" : "ExpressionStatement[30745-30761]:ExpressionStatement[31385-31401]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[30770-31006]:ForStatement[31410-31646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30801-31006]:Block[31441-31646]"
    }, {
      "left" : "if (i > 0)",
      "right" : "if (i > 0)",
      "info" : "IfStatement[30815-30886]:IfStatement[31455-31526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30826-30886]:Block[31466-31526]"
    }, {
      "left" : "buf.append(',').append(' ');",
      "right" : "buf.append(',').append(' ');",
      "info" : "ExpressionStatement[30844-30872]:ExpressionStatement[31484-31512]"
    }, {
      "left" : "buf.append(iTypes[i].getName());",
      "right" : "buf.append(iTypes[i].getName());",
      "info" : "ExpressionStatement[30899-30931]:ExpressionStatement[31539-31571]"
    }, {
      "left" : "buf.append('=');",
      "right" : "buf.append('=');",
      "info" : "ExpressionStatement[30944-30960]:ExpressionStatement[31584-31600]"
    }, {
      "left" : "buf.append(iValues[i]);",
      "right" : "buf.append(iValues[i]);",
      "info" : "ExpressionStatement[30973-30996]:ExpressionStatement[31613-31636]"
    }, {
      "left" : "buf.append(']');",
      "right" : "buf.append(']');",
      "info" : "ExpressionStatement[31015-31031]:ExpressionStatement[31655-31671]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[31040-31062]:ReturnStatement[31680-31702]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31360-31366]:Modifier[32000-32006]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[31367-31373]:SimpleType[32007-32013]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[31374-31382]:SimpleName[32014-32022]"
    }, {
      "left" : "String pattern",
      "right" : "String pattern",
      "info" : "SingleVariableDeclaration[31383-31397]:SingleVariableDeclaration[32023-32037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31399-31541]:Block[32039-32181]"
    }, {
      "left" : "if (pattern == null)",
      "right" : "if (pattern == null)",
      "info" : "IfStatement[31409-31472]:IfStatement[32049-32112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31430-31472]:Block[32070-32112]"
    }, {
      "left" : "return toString();",
      "right" : "return toString();",
      "info" : "ReturnStatement[31444-31462]:ReturnStatement[32084-32102]"
    }, {
      "left" : "return DateTimeFormat.forPattern(pattern).print(this);",
      "right" : "return DateTimeFormat.forPattern(pattern).print(this);",
      "info" : "ReturnStatement[31481-31535]:ReturnStatement[32121-32175]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31889-31895]:Modifier[32529-32535]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[31896-31902]:SimpleType[32536-32542]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[31903-31911]:SimpleName[32543-32551]"
    }, {
      "left" : "String pattern",
      "right" : "String pattern",
      "info" : "SingleVariableDeclaration[31912-31926]:SingleVariableDeclaration[32552-32566]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[31928-31941]:SingleVariableDeclaration[32568-32581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31943-32104]:Block[32583-32744]"
    }, {
      "left" : "if (pattern == null)",
      "right" : "if (pattern == null)",
      "info" : "IfStatement[31953-32016]:IfStatement[32593-32656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31974-32016]:Block[32614-32656]"
    }, {
      "left" : "return toString();",
      "right" : "return toString();",
      "info" : "ReturnStatement[31988-32006]:ReturnStatement[32628-32646]"
    }, {
      "left" : "return DateTimeFormat.forPattern(pattern).withLocale(locale).print(this);",
      "right" : "return DateTimeFormat.forPattern(pattern).withLocale(locale).print(this);",
      "info" : "ReturnStatement[32025-32098]:ReturnStatement[32665-32738]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32407-32413]:Modifier[33047-33053]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[32414-32420]:Modifier[33054-33060]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[32421-32426]:TYPE_DECLARATION_KIND[33061-33066]"
    }, {
      "left" : "Property",
      "right" : "Property",
      "info" : "SimpleName[32427-32435]:SimpleName[33067-33075]"
    }, {
      "left" : "AbstractPartialFieldProperty",
      "right" : "AbstractPartialFieldProperty",
      "info" : "SimpleType[32444-32472]:SimpleType[33084-33112]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[32484-32496]:SimpleType[33124-33136]"
    }, {
      "left" : "Property",
      "right" : "Property",
      "info" : "SimpleName[32927-32935]:SimpleName[33567-33575]"
    }, {
      "left" : "Partial partial",
      "right" : "Partial partial",
      "info" : "SingleVariableDeclaration[32936-32951]:SingleVariableDeclaration[33576-33591]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[32953-32967]:SingleVariableDeclaration[33593-33607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32969-33071]:Block[33609-33711]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[32983-32991]:SuperConstructorInvocation[33623-33631]"
    }, {
      "left" : "iPartial = partial;",
      "right" : "iPartial = partial;",
      "info" : "ExpressionStatement[33004-33023]:ExpressionStatement[33644-33663]"
    }, {
      "left" : "iFieldIndex = fieldIndex;",
      "right" : "iFieldIndex = fieldIndex;",
      "info" : "ExpressionStatement[33036-33061]:ExpressionStatement[33676-33701]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33197-33203]:Modifier[33837-33843]"
    }, {
      "left" : "DateTimeField",
      "right" : "DateTimeField",
      "info" : "SimpleType[33204-33217]:SimpleType[33844-33857]"
    }, {
      "left" : "getField",
      "right" : "getField",
      "info" : "SimpleName[33218-33226]:SimpleName[33858-33866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33229-33291]:Block[33869-33931]"
    }, {
      "left" : "return iPartial.getField(iFieldIndex);",
      "right" : "return iPartial.getField(iFieldIndex);",
      "info" : "ReturnStatement[33243-33281]:ReturnStatement[33883-33921]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[33427-33436]:Modifier[34067-34076]"
    }, {
      "left" : "ReadablePartial",
      "right" : "ReadablePartial",
      "info" : "SimpleType[33437-33452]:SimpleType[34077-34092]"
    }, {
      "left" : "getReadablePartial",
      "right" : "getReadablePartial",
      "info" : "SimpleName[33453-33471]:SimpleName[34093-34111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33474-33514]:Block[34114-34154]"
    }, {
      "left" : "return iPartial;",
      "right" : "return iPartial;",
      "info" : "ReturnStatement[33488-33504]:ReturnStatement[34128-34144]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33650-33656]:Modifier[34290-34296]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[33657-33664]:SimpleType[34297-34304]"
    }, {
      "left" : "getPartial",
      "right" : "getPartial",
      "info" : "SimpleName[33665-33675]:SimpleName[34305-34315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33678-33718]:Block[34318-34358]"
    }, {
      "left" : "return iPartial;",
      "right" : "return iPartial;",
      "info" : "ReturnStatement[33692-33708]:ReturnStatement[34332-34348]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33840-33846]:Modifier[34480-34486]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[33847-33850]:PrimitiveType[34487-34490]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[33851-33854]:SimpleName[34491-34494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33857-33919]:Block[34497-34559]"
    }, {
      "left" : "return iPartial.getValue(iFieldIndex);",
      "right" : "return iPartial.getValue(iFieldIndex);",
      "info" : "ReturnStatement[33871-33909]:ReturnStatement[34511-34549]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34819-34825]:Modifier[35459-35465]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[34826-34833]:SimpleType[35466-35473]"
    }, {
      "left" : "addToCopy",
      "right" : "addToCopy",
      "info" : "SimpleName[34834-34843]:SimpleName[35474-35483]"
    }, {
      "left" : "int valueToAdd",
      "right" : "int valueToAdd",
      "info" : "SingleVariableDeclaration[34844-34858]:SingleVariableDeclaration[35484-35498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34860-35062]:Block[35500-35702]"
    }, {
      "left" : "int[] newValues = iPartial.getValues();",
      "right" : "int[] newValues = iPartial.getValues();",
      "info" : "VariableDeclarationStatement[34874-34913]:VariableDeclarationStatement[35514-35553]"
    }, {
      "left" : "newValues = getField().add(iPartial, iFieldIndex, newValues, valueToAdd);",
      "right" : "newValues = getField().add(iPartial, iFieldIndex, newValues, valueToAdd);",
      "info" : "ExpressionStatement[34926-34999]:ExpressionStatement[35566-35639]"
    }, {
      "left" : "return new Partial(iPartial, newValues);",
      "right" : "return new Partial(iPartial, newValues);",
      "info" : "ReturnStatement[35012-35052]:ReturnStatement[35652-35692]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35936-35942]:Modifier[36576-36582]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[35943-35950]:SimpleType[36583-36590]"
    }, {
      "left" : "addWrapFieldToCopy",
      "right" : "addWrapFieldToCopy",
      "info" : "SimpleName[35951-35969]:SimpleName[36591-36609]"
    }, {
      "left" : "int valueToAdd",
      "right" : "int valueToAdd",
      "info" : "SingleVariableDeclaration[35970-35984]:SingleVariableDeclaration[36610-36624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35986-36197]:Block[36626-36837]"
    }, {
      "left" : "int[] newValues = iPartial.getValues();",
      "right" : "int[] newValues = iPartial.getValues();",
      "info" : "VariableDeclarationStatement[36000-36039]:VariableDeclarationStatement[36640-36679]"
    }, {
      "left" : "newValues = getField().addWrapField(iPartial, iFieldIndex, newValues, valueToAdd);",
      "right" : "newValues = getField().addWrapField(iPartial, iFieldIndex, newValues, valueToAdd);",
      "info" : "ExpressionStatement[36052-36134]:ExpressionStatement[36692-36774]"
    }, {
      "left" : "return new Partial(iPartial, newValues);",
      "right" : "return new Partial(iPartial, newValues);",
      "info" : "ReturnStatement[36147-36187]:ReturnStatement[36787-36827]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36723-36729]:Modifier[37363-37369]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[36730-36737]:SimpleType[37370-37377]"
    }, {
      "left" : "setCopy",
      "right" : "setCopy",
      "info" : "SimpleName[36738-36745]:SimpleName[37378-37385]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[36746-36755]:SingleVariableDeclaration[37386-37395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36757-36954]:Block[37397-37594]"
    }, {
      "left" : "int[] newValues = iPartial.getValues();",
      "right" : "int[] newValues = iPartial.getValues();",
      "info" : "VariableDeclarationStatement[36771-36810]:VariableDeclarationStatement[37411-37450]"
    }, {
      "left" : "newValues = getField().set(iPartial, iFieldIndex, newValues, value);",
      "right" : "newValues = getField().set(iPartial, iFieldIndex, newValues, value);",
      "info" : "ExpressionStatement[36823-36891]:ExpressionStatement[37463-37531]"
    }, {
      "left" : "return new Partial(iPartial, newValues);",
      "right" : "return new Partial(iPartial, newValues);",
      "info" : "ReturnStatement[36904-36944]:ReturnStatement[37544-37584]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37482-37488]:Modifier[38122-38128]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[37489-37496]:SimpleType[38129-38136]"
    }, {
      "left" : "setCopy",
      "right" : "setCopy",
      "info" : "SimpleName[37497-37504]:SimpleName[38137-38144]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[37505-37516]:SingleVariableDeclaration[38145-38156]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[37518-37531]:SingleVariableDeclaration[38158-38171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37533-37737]:Block[38173-38377]"
    }, {
      "left" : "int[] newValues = iPartial.getValues();",
      "right" : "int[] newValues = iPartial.getValues();",
      "info" : "VariableDeclarationStatement[37547-37586]:VariableDeclarationStatement[38187-38226]"
    }, {
      "left" : "newValues = getField().set(iPartial, iFieldIndex, newValues, text, locale);",
      "right" : "newValues = getField().set(iPartial, iFieldIndex, newValues, text, locale);",
      "info" : "ExpressionStatement[37599-37674]:ExpressionStatement[38239-38314]"
    }, {
      "left" : "return new Partial(iPartial, newValues);",
      "right" : "return new Partial(iPartial, newValues);",
      "info" : "ReturnStatement[37687-37727]:ReturnStatement[38327-38367]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38188-38194]:Modifier[38828-38834]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[38195-38202]:SimpleType[38835-38842]"
    }, {
      "left" : "setCopy",
      "right" : "setCopy",
      "info" : "SimpleName[38203-38210]:SimpleName[38843-38850]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[38211-38222]:SingleVariableDeclaration[38851-38862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38224-38275]:Block[38864-38915]"
    }, {
      "left" : "return setCopy(text, null);",
      "right" : "return setCopy(text, null);",
      "info" : "ReturnStatement[38238-38265]:ReturnStatement[38878-38905]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38692-38698]:Modifier[39332-39338]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[38699-38706]:SimpleType[39339-39346]"
    }, {
      "left" : "withMaximumValue",
      "right" : "withMaximumValue",
      "info" : "SimpleName[38707-38723]:SimpleName[39347-39363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38726-38784]:Block[39366-39424]"
    }, {
      "left" : "return setCopy(getMaximumValue());",
      "right" : "return setCopy(getMaximumValue());",
      "info" : "ReturnStatement[38740-38774]:ReturnStatement[39380-39414]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39119-39125]:Modifier[39759-39765]"
    }, {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "SimpleType[39126-39133]:SimpleType[39766-39773]"
    }, {
      "left" : "withMinimumValue",
      "right" : "withMinimumValue",
      "info" : "SimpleName[39134-39150]:SimpleName[39774-39790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39153-39211]:Block[39793-39851]"
    }, {
      "left" : "return setCopy(getMinimumValue());",
      "right" : "return setCopy(getMinimumValue());",
      "info" : "ReturnStatement[39167-39201]:ReturnStatement[39807-39841]"
    } ]
  },
  "interFileMappings" : { }
}