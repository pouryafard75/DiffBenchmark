{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "FixedMembershipToken",
      "right" : "FixedMembershipToken",
      "info" : "TypeDeclaration[358-4052]:TypeDeclaration[496-4301]"
    }, {
      "left" : "private List<String> memberList = null;",
      "right" : "private final List<InetSocketAddress> memberList = new ArrayList<>();",
      "info" : "FieldDeclaration[944-983]:FieldDeclaration[1079-1148]"
    }, {
      "left" : "private String token = \"emptyToken\";",
      "right" : "private String                        token = \"emptyToken\";",
      "info" : "FieldDeclaration[988-1024]:FieldDeclaration[1153-1212]"
    }, {
      "left" : "@Property\n    private String fixed_members_seperator = \",\";",
      "right" : "@Property\n    private String fixed_members_seperator = \",\";",
      "info" : "FieldDeclaration[1030-1089]:FieldDeclaration[1218-1277]"
    }, {
      "left" : "public FixedMembershipToken()",
      "right" : "public FixedMembershipToken()",
      "info" : "MethodDeclaration[1095-1132]:MethodDeclaration[1283-1320]"
    }, {
      "left" : "public FixedMembershipToken(String token)",
      "right" : "public FixedMembershipToken(String token)",
      "info" : "MethodDeclaration[1138-1213]:MethodDeclaration[1326-1401]"
    }, {
      "left" : "public String getName()",
      "right" : "public String getName()",
      "info" : "MethodDeclaration[1219-1306]:MethodDeclaration[1407-1494]"
    }, {
      "left" : "public void setFixedMembersSeparator(String value)",
      "right" : "public void setFixedMembersSeparator(String value)",
      "info" : "MethodDeclaration[1312-1425]:MethodDeclaration[1500-1613]"
    }, {
      "left" : "public boolean authenticate(AuthToken token, Message msg)",
      "right" : "public boolean authenticate(AuthToken token, Message msg)",
      "info" : "MethodDeclaration[1431-2805]:MethodDeclaration[1619-2248]"
    }, {
      "left" : "private static boolean hasPort(String member)",
      "right" : "private static boolean hasPort(String member)",
      "info" : "MethodDeclaration[2811-2901]:MethodDeclaration[2807-2897]"
    }, {
      "left" : "public void setMemberList(String list)",
      "right" : "public void setMemberList(String list) throws UnknownHostException",
      "info" : "MethodDeclaration[2907-3278]:MethodDeclaration[2903-3595]"
    }, {
      "left" : "public void writeTo(DataOutput out) throws Exception",
      "right" : "public void writeTo(DataOutput out) throws Exception",
      "info" : "MethodDeclaration[3284-3635]:MethodDeclaration[3601-3918]"
    }, {
      "left" : "public void readFrom(DataInput in) throws Exception",
      "right" : "public void readFrom(DataInput in) throws Exception",
      "info" : "MethodDeclaration[3641-3986]:MethodDeclaration[3924-4235]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[3992-4050]:MethodDeclaration[4241-4299]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1125-1132]:Block[1313-1320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1180-1213]:Block[1368-1401]"
    }, {
      "left" : "this.token=token;",
      "right" : "this.token=token;",
      "info" : "ExpressionStatement[1190-1207]:ExpressionStatement[1378-1395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1243-1306]:Block[1431-1494]"
    }, {
      "left" : "return \"org.jgroups.auth.FixedMembershipToken\";",
      "right" : "return \"org.jgroups.auth.FixedMembershipToken\";",
      "info" : "ReturnStatement[1253-1300]:ReturnStatement[1441-1488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1377-1425]:Block[1565-1613]"
    }, {
      "left" : "fixed_members_seperator = value;",
      "right" : "fixed_members_seperator = value;",
      "info" : "ExpressionStatement[1387-1419]:ExpressionStatement[1575-1607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1489-2805]:Block[1677-2248]"
    }, {
      "left" : "if ((token != null) && (token instanceof FixedMembershipToken) && (this.memberList != null))",
      "right" : "if ((token != null) && (token instanceof FixedMembershipToken) && (this.memberList != null))",
      "info" : "IfStatement[1499-2658]:IfStatement[1687-2113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1592-2658]:Block[1780-2113]"
    }, {
      "left" : "PhysicalAddress src = (PhysicalAddress) auth.down(new Event(Event.GET_PHYSICAL_ADDRESS,\n                            msg.getSrc()));",
      "right" : "PhysicalAddress src = (PhysicalAddress) auth.down(new Event(Event.GET_PHYSICAL_ADDRESS, msg.getSrc()));",
      "info" : "VariableDeclarationStatement[1606-1737]:VariableDeclarationStatement[1794-1897]"
    }, {
      "left" : "if (src == null)",
      "right" : "if (src == null)",
      "info" : "IfStatement[1750-1937]:IfStatement[1910-2051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1767-1937]:Block[1927-2051]"
    }, {
      "left" : "log.error(\"didn't find physical address for \" + msg.getSrc());",
      "right" : "log.error(\"didn't find physical address for \" + msg.getSrc());",
      "info" : "ExpressionStatement[1831-1893]:ExpressionStatement[1945-2007]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1910-1923]:ReturnStatement[2024-2037]"
    }, {
      "left" : "for (String member : memberList)",
      "right" : "for(InetSocketAddress addr: memberList)",
      "info" : "EnhancedForStatement[2291-2622]:EnhancedForStatement[2389-2505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2324-2622]:Block[2429-2505]"
    }, {
      "left" : "if (member.equals(sourceAddressWithPort))",
      "right" : "if(match(sender, addr))",
      "info" : "IfStatement[2385-2463]:IfStatement[2443-2495]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[2451-2463]:ReturnStatement[2483-2495]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2635-2648]:ReturnStatement[2366-2379]"
    }, {
      "left" : "if (log.isWarnEnabled())",
      "right" : "if (log.isWarnEnabled())",
      "info" : "IfStatement[2668-2777]:IfStatement[2123-2220]"
    }, {
      "left" : "log.warn(\"Invalid AuthToken instance - wrong type or null\");",
      "right" : "log.warn(\"Invalid AuthToken instance - wrong type or null\");",
      "info" : "ExpressionStatement[2707-2767]:ExpressionStatement[2160-2220]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2786-2799]:ReturnStatement[2229-2242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2857-2901]:Block[2853-2897]"
    }, {
      "left" : "return member.contains(\":\");",
      "right" : "return member.contains(\":\");",
      "info" : "ReturnStatement[2867-2895]:ReturnStatement[2863-2891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2990-3278]:Block[3014-3595]"
    }, {
      "left" : "StringTokenizer memberListTokenizer = new StringTokenizer(list, fixed_members_seperator);",
      "right" : "StringTokenizer memberListTokenizer = new StringTokenizer(list, fixed_members_seperator);",
      "info" : "VariableDeclarationStatement[3040-3129]:VariableDeclarationStatement[3052-3141]"
    }, {
      "left" : "while (memberListTokenizer.hasMoreTokens())",
      "right" : "while (memberListTokenizer.hasMoreTokens())",
      "info" : "WhileStatement[3138-3272]:WhileStatement[3150-3589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3182-3272]:Block[3194-3589]"
    }, {
      "left" : "memberList.add(memberListTokenizer.nextToken().replace('/', ':'));",
      "right" : "memberList.add(new InetSocketAddress(addr, port));",
      "info" : "ExpressionStatement[3196-3262]:ExpressionStatement[3529-3579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3492-3635]:Block[3787-3918]"
    }, {
      "left" : "if (log.isDebugEnabled())",
      "right" : "if (log.isDebugEnabled())",
      "info" : "IfStatement[3502-3587]:IfStatement[3797-3870]"
    }, {
      "left" : "log.debug(\"SimpleToken writeTo()\");",
      "right" : "log.debug(\"SimpleToken writeTo()\");",
      "info" : "ExpressionStatement[3542-3577]:ExpressionStatement[3835-3870]"
    }, {
      "left" : "Bits.writeString(this.token,out);",
      "right" : "Bits.writeString(this.token,out);",
      "info" : "ExpressionStatement[3596-3629]:ExpressionStatement[3879-3912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3842-3986]:Block[4103-4235]"
    }, {
      "left" : "if (log.isDebugEnabled())",
      "right" : "if (log.isDebugEnabled())",
      "info" : "IfStatement[3852-3938]:IfStatement[4113-4187]"
    }, {
      "left" : "log.debug(\"SimpleToken readFrom()\");",
      "right" : "log.debug(\"SimpleToken readFrom()\");",
      "info" : "ExpressionStatement[3892-3928]:ExpressionStatement[4151-4187]"
    }, {
      "left" : "this.token = Bits.readString(in);",
      "right" : "this.token = Bits.readString(in);",
      "info" : "ExpressionStatement[3947-3980]:ExpressionStatement[4196-4229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4010-4050]:Block[4259-4299]"
    }, {
      "left" : "return Util.size(token);",
      "right" : "return Util.size(token);",
      "info" : "ReturnStatement[4020-4044]:ReturnStatement[4269-4293]"
    } ]
  },
  "interFileMappings" : { }
}