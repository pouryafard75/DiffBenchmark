{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "FoundationTabTest",
      "right" : "FoundationTabTest",
      "info" : "TypeDeclaration[756-3158]:TypeDeclaration[806-3849]"
    }, {
      "left" : "private final ArrayList<ITab> tabs;",
      "right" : "private final ArrayList<ITab> tabs;",
      "info" : "FieldDeclaration[815-850]:FieldDeclaration[1320-1355]"
    }, {
      "left" : "public FoundationTabTest()",
      "right" : "public FoundationTabTest()",
      "info" : "MethodDeclaration[853-1773]:MethodDeclaration[1358-2008]"
    }, {
      "left" : "public WebMarkupContainer getPanel(String panelId)",
      "right" : "public WebMarkupContainer getPanel(String panelId)",
      "info" : "MethodDeclaration[965-1194]:MethodDeclaration[1470-1604]"
    }, {
      "left" : "public WebMarkupContainer getPanel(String panelId)",
      "right" : "public WebMarkupContainer getPanel(String panelId)",
      "info" : "MethodDeclaration[1256-1479]:MethodDeclaration[1666-1801]"
    }, {
      "left" : "public WebMarkupContainer getPanel(String panelId)",
      "right" : "public WebMarkupContainer getPanel(String panelId)",
      "info" : "MethodDeclaration[1543-1764]:MethodDeclaration[1865-1999]"
    }, {
      "left" : "public void renderSimpleTab() throws Exception",
      "right" : "public void renderSimpleTab() throws Exception",
      "info" : "MethodDeclaration[1777-2507]:MethodDeclaration[2012-2476]"
    }, {
      "left" : "TextualPanel",
      "right" : "TextualPanel",
      "info" : "TypeDeclaration[2511-3156]:TypeDeclaration[3239-3847]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[2628-2694]:FieldDeclaration[3343-3409]"
    }, {
      "left" : "public TextualPanel(String id, IModel<?> model)",
      "right" : "public TextualPanel(String id, IModel<?> model)",
      "info" : "MethodDeclaration[2698-2772]:MethodDeclaration[3413-3487]"
    }, {
      "left" : "public String getCacheKey(MarkupContainer container, Class<?> containerClass)",
      "right" : "public String getCacheKey(MarkupContainer container, Class<?> containerClass)",
      "info" : "MethodDeclaration[2776-2887]:MethodDeclaration[3491-3602]"
    }, {
      "left" : "public IResourceStream getMarkupResourceStream(MarkupContainer container,\n\t\t\tClass<?> containerClass)",
      "right" : "public IResourceStream getMarkupResourceStream(MarkupContainer container,\n\t\t\tClass<?> containerClass)",
      "info" : "MethodDeclaration[2891-3100]:MethodDeclaration[3606-3844]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[880-1773]:Block[1385-2008]"
    }, {
      "left" : "tabs = new ArrayList<>();",
      "right" : "tabs = new ArrayList<>();",
      "info" : "ExpressionStatement[884-909]:ExpressionStatement[1389-1414]"
    }, {
      "left" : "tabs.add(new AbstractTab(Model.of(\"title 1\")) {\n\n\t\t\t@Override\n\t\t\tpublic WebMarkupContainer getPanel(String panelId) {\n\t\t\t\treturn new TextualPanel(panelId, Model.of(\"This is the first panel of the basic tab example. You can place all sorts of content here including a grid.\"));\n\t\t\t}\n\t\t});",
      "right" : "tabs.add(new AbstractTab(Model.of(\"title 1\")) {\n\n\t\t\t@Override\n\t\t\tpublic WebMarkupContainer getPanel(String panelId) {\n\t\t\t\treturn new TextualPanel(panelId, Model.of(FIRST_TAB_TEXT));\n\t\t\t}\n\t\t});",
      "info" : "ExpressionStatement[913-1200]:ExpressionStatement[1418-1610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1029-1194]:Block[1534-1604]"
    }, {
      "left" : "return new TextualPanel(panelId, Model.of(\"This is the first panel of the basic tab example. You can place all sorts of content here including a grid.\"));",
      "right" : "return new TextualPanel(panelId, Model.of(FIRST_TAB_TEXT));",
      "info" : "ReturnStatement[1035-1189]:ReturnStatement[1540-1599]"
    }, {
      "left" : "tabs.add(new AbstractTab(Model.of(\"title 2\")) {\n\n\t\t\t@Override\n\t\t\tpublic WebMarkupContainer getPanel(String panelId) {\n\t\t\t\treturn new TextualPanel(panelId, Model.of(\"This is the second panel of the basic tab example. This is the second panel of the basic tab example.\"));\n\t\t\t}\n\t\t});",
      "right" : "tabs.add(new AbstractTab(Model.of(\"title 2\")) {\n\n\t\t\t@Override\n\t\t\tpublic WebMarkupContainer getPanel(String panelId) {\n\t\t\t\treturn new TextualPanel(panelId, Model.of(SECOND_TAB_TEXT));\n\t\t\t}\n\t\t});",
      "info" : "ExpressionStatement[1204-1485]:ExpressionStatement[1614-1807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1320-1479]:Block[1730-1801]"
    }, {
      "left" : "return new TextualPanel(panelId, Model.of(\"This is the second panel of the basic tab example. This is the second panel of the basic tab example.\"));",
      "right" : "return new TextualPanel(panelId, Model.of(SECOND_TAB_TEXT));",
      "info" : "ReturnStatement[1326-1474]:ReturnStatement[1736-1796]"
    }, {
      "left" : "tabs.add(new AbstractTab(Model.of(\"title 3\")) {\n\n\t\t\t@Override\n\t\t\tpublic WebMarkupContainer getPanel(String panelId) {\n\t\t\t\treturn new TextualPanel(panelId, Model.of(\"This is the third panel of the basic tab example. This is the third panel of the basic tab example.\"));\n\t\t\t}\n\t\t});",
      "right" : "tabs.add(new AbstractTab(Model.of(\"title 3\")) {\n\n\t\t\t@Override\n\t\t\tpublic WebMarkupContainer getPanel(String panelId) {\n\t\t\t\treturn new TextualPanel(panelId, Model.of(THIRD_TAB_TEXT));\n\t\t\t}\n\t\t});",
      "info" : "ExpressionStatement[1491-1770]:ExpressionStatement[1813-2005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1607-1764]:Block[1929-1999]"
    }, {
      "left" : "return new TextualPanel(panelId, Model.of(\"This is the third panel of the basic tab example. This is the third panel of the basic tab example.\"));",
      "right" : "return new TextualPanel(panelId, Model.of(THIRD_TAB_TEXT));",
      "info" : "ReturnStatement[1613-1759]:ReturnStatement[1935-1994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1831-2507]:Block[2066-2476]"
    }, {
      "left" : "FoundationTab<ITab> tab = new FoundationTab<>(\"id\", tabs);",
      "right" : "FoundationTab<ITab> tab = new FoundationTab<>(\"id\", tabs);",
      "info" : "VariableDeclarationStatement[1835-1893]:VariableDeclarationStatement[2070-2128]"
    }, {
      "left" : "tester.startComponentInPage(tab);",
      "right" : "tester.startComponentInPage(tab);",
      "info" : "ExpressionStatement[1899-1932]:ExpressionStatement[2134-2167]"
    }, {
      "left" : "List<TagTester> tagsByWicketId = tester.getTagsByWicketId(\"title\");",
      "right" : "List<TagTester> tagsByWicketId = tester.getTagsByWicketId(\"title\");",
      "info" : "VariableDeclarationStatement[1992-2059]:VariableDeclarationStatement[2742-2809]"
    }, {
      "left" : "assertEquals(tabs.size(), tagsByWicketId.size());",
      "right" : "assertEquals(tabs.size(), tagsByWicketId.size());",
      "info" : "ExpressionStatement[2062-2111]:ExpressionStatement[2812-2861]"
    }, {
      "left" : "for (TagTester tagTester : tagsByWicketId)",
      "right" : "for (TagTester tagTester : tagsByWicketId)",
      "info" : "EnhancedForStatement[2117-2222]:EnhancedForStatement[2867-2972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2160-2222]:Block[2910-2972]"
    }, {
      "left" : "assertTrue(tagTester.getValue().startsWith(\"title\"));",
      "right" : "assertTrue(tagTester.getValue().startsWith(\"title\"));",
      "info" : "ExpressionStatement[2165-2218]:ExpressionStatement[2915-2968]"
    }, {
      "left" : "tab = new FoundationTab<>(\"id\", tabs);",
      "right" : "tab = new FoundationTab<>(\"id\", tabs);",
      "info" : "ExpressionStatement[2264-2302]:ExpressionStatement[2233-2271]"
    }, {
      "left" : "tester.startComponentInPage(tab.setVerticalTab(true));",
      "right" : "tester.startComponentInPage(tab.setVerticalTab(true));",
      "info" : "ExpressionStatement[2305-2359]:ExpressionStatement[2274-2328]"
    }, {
      "left" : "TagTester tagByWicketId = tester.getTagByWicketId(\"tabs-container\");",
      "right" : "TagTester tagByWicketId = tester.getTagByWicketId(\"tabs-container\");",
      "info" : "VariableDeclarationStatement[2362-2430]:VariableDeclarationStatement[2331-2399]"
    }, {
      "left" : "assertTrue(tagByWicketId.getAttributeContains(\"class\", \"vertical\"));",
      "right" : "assertTrue(tagByWicketId.getAttributeContains(\"class\", \"vertical\"));",
      "info" : "ExpressionStatement[2436-2504]:ExpressionStatement[2405-2473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2746-2772]:Block[3461-3487]"
    }, {
      "left" : "super(id, model);",
      "right" : "super(id, model);",
      "info" : "SuperConstructorInvocation[2751-2768]:SuperConstructorInvocation[3466-3483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2866-2887]:Block[3581-3602]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[2871-2883]:ReturnStatement[3586-3598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3005-3100]:Block[3720-3844]"
    }, {
      "left" : "return new StringResourceStream(\"<div>\" + getDefaultModelObjectAsString() + \"</div>\");",
      "right" : "return new StringResourceStream(\"<wicket:panel><div>\" + getDefaultModelObjectAsString() + \"</div></wicket:panel>\");",
      "info" : "ReturnStatement[3010-3096]:ReturnStatement[3725-3840]"
    } ]
  },
  "interFileMappings" : { }
}