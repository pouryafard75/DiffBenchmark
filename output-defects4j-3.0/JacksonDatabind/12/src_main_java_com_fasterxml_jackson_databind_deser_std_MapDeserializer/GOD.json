{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "MapDeserializer",
      "right" : "MapDeserializer",
      "info" : "TypeDeclaration[684-26696]:TypeDeclaration[684-26790]"
    }, {
      "left" : "private static final long serialVersionUID = -3378654289961736240L;",
      "right" : "private static final long serialVersionUID = -3378654289961736240L;",
      "info" : "FieldDeclaration[1268-1335]:FieldDeclaration[1268-1335]"
    }, {
      "left" : "protected final JavaType _mapType;",
      "right" : "protected final JavaType _mapType;",
      "info" : "FieldDeclaration[1389-1423]:FieldDeclaration[1389-1423]"
    }, {
      "left" : "protected final KeyDeserializer _keyDeserializer;",
      "right" : "protected final KeyDeserializer _keyDeserializer;",
      "info" : "FieldDeclaration[1429-1648]:FieldDeclaration[1429-1648]"
    }, {
      "left" : "protected boolean _standardStringKey;",
      "right" : "protected boolean _standardStringKey;",
      "info" : "FieldDeclaration[1654-1981]:FieldDeclaration[1654-1981]"
    }, {
      "left" : "protected final JsonDeserializer<Object> _valueDeserializer;",
      "right" : "protected final JsonDeserializer<Object> _valueDeserializer;",
      "info" : "FieldDeclaration[1987-2090]:FieldDeclaration[1987-2090]"
    }, {
      "left" : "protected final TypeDeserializer _valueTypeDeserializer;",
      "right" : "protected final TypeDeserializer _valueTypeDeserializer;",
      "info" : "FieldDeclaration[2096-2285]:FieldDeclaration[2096-2285]"
    }, {
      "left" : "protected final ValueInstantiator _valueInstantiator;",
      "right" : "protected final ValueInstantiator _valueInstantiator;",
      "info" : "FieldDeclaration[2338-2391]:FieldDeclaration[2338-2391]"
    }, {
      "left" : "protected final boolean _hasDefaultCreator;",
      "right" : "protected final boolean _hasDefaultCreator;",
      "info" : "FieldDeclaration[2397-2440]:FieldDeclaration[2397-2440]"
    }, {
      "left" : "protected JsonDeserializer<Object> _delegateDeserializer;",
      "right" : "protected JsonDeserializer<Object> _delegateDeserializer;",
      "info" : "FieldDeclaration[2446-2636]:FieldDeclaration[2446-2636]"
    }, {
      "left" : "protected PropertyBasedCreator _propertyBasedCreator;",
      "right" : "protected PropertyBasedCreator _propertyBasedCreator;",
      "info" : "FieldDeclaration[2642-2916]:FieldDeclaration[2642-2916]"
    }, {
      "left" : "protected HashSet<String> _ignorableProperties;",
      "right" : "protected HashSet<String> _ignorableProperties;",
      "info" : "FieldDeclaration[2975-3022]:FieldDeclaration[2975-3022]"
    }, {
      "left" : "public MapDeserializer(JavaType mapType, ValueInstantiator valueInstantiator,\n            KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser,\n            TypeDeserializer valueTypeDeser)",
      "right" : "public MapDeserializer(JavaType mapType, ValueInstantiator valueInstantiator,\n            KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser,\n            TypeDeserializer valueTypeDeser)",
      "info" : "MethodDeclaration[3190-3838]:MethodDeclaration[3190-3838]"
    }, {
      "left" : "protected MapDeserializer(MapDeserializer src)",
      "right" : "protected MapDeserializer(MapDeserializer src)",
      "info" : "MethodDeclaration[3844-4656]:MethodDeclaration[3844-4656]"
    }, {
      "left" : "protected MapDeserializer(MapDeserializer src,\n            KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser,\n            TypeDeserializer valueTypeDeser,\n            HashSet<String> ignorable)",
      "right" : "protected MapDeserializer(MapDeserializer src,\n            KeyDeserializer keyDeser, JsonDeserializer<Object> valueDeser,\n            TypeDeserializer valueTypeDeser,\n            HashSet<String> ignorable)",
      "info" : "MethodDeclaration[4662-5400]:MethodDeclaration[4662-5400]"
    }, {
      "left" : "protected MapDeserializer withResolved(KeyDeserializer keyDeser,\n            TypeDeserializer valueTypeDeser, JsonDeserializer<?> valueDeser,\n            HashSet<String> ignorable)",
      "right" : "protected MapDeserializer withResolved(KeyDeserializer keyDeser,\n            TypeDeserializer valueTypeDeser, JsonDeserializer<?> valueDeser,\n            HashSet<String> ignorable)",
      "info" : "MethodDeclaration[5406-6143]:MethodDeclaration[5406-6143]"
    }, {
      "left" : "protected final boolean _isStdKeyDeser(JavaType mapType, KeyDeserializer keyDeser)",
      "right" : "protected final boolean _isStdKeyDeser(JavaType mapType, KeyDeserializer keyDeser)",
      "info" : "MethodDeclaration[6149-6787]:MethodDeclaration[6149-6787]"
    }, {
      "left" : "public void setIgnorableProperties(String[] ignorable)",
      "right" : "public void setIgnorableProperties(String[] ignorable)",
      "info" : "MethodDeclaration[6793-6989]:MethodDeclaration[6793-6989]"
    }, {
      "left" : "public void resolve(DeserializationContext ctxt) throws JsonMappingException",
      "right" : "public void resolve(DeserializationContext ctxt) throws JsonMappingException",
      "info" : "MethodDeclaration[7199-8597]:MethodDeclaration[7199-8597]"
    }, {
      "left" : "public JsonDeserializer<?> createContextual(DeserializationContext ctxt,\n            BeanProperty property) throws JsonMappingException",
      "right" : "public JsonDeserializer<?> createContextual(DeserializationContext ctxt,\n            BeanProperty property) throws JsonMappingException",
      "info" : "MethodDeclaration[8603-10410]:MethodDeclaration[8603-10410]"
    }, {
      "left" : "public JavaType getContentType()",
      "right" : "public JavaType getContentType()",
      "info" : "MethodDeclaration[10601-10697]:MethodDeclaration[10601-10697]"
    }, {
      "left" : "public JsonDeserializer<Object> getContentDeserializer()",
      "right" : "public JsonDeserializer<Object> getContentDeserializer()",
      "info" : "MethodDeclaration[10703-10816]:MethodDeclaration[10703-10816]"
    }, {
      "left" : "public boolean isCachable()",
      "right" : "public boolean isCachable()",
      "info" : "MethodDeclaration[10998-11874]:MethodDeclaration[10998-11968]"
    }, {
      "left" : "public Map<Object,Object> deserialize(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException",
      "right" : "public Map<Object,Object> deserialize(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[11880-13328]:MethodDeclaration[11974-13422]"
    }, {
      "left" : "public Map<Object,Object> deserialize(JsonParser jp, DeserializationContext ctxt,\n            Map<Object,Object> result)\n        throws IOException, JsonProcessingException",
      "right" : "public Map<Object,Object> deserialize(JsonParser jp, DeserializationContext ctxt,\n            Map<Object,Object> result)\n        throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[13334-13957]:MethodDeclaration[13428-14051]"
    }, {
      "left" : "public Object deserializeWithType(JsonParser jp, DeserializationContext ctxt,\n            TypeDeserializer typeDeserializer)\n        throws IOException, JsonProcessingException",
      "right" : "public Object deserializeWithType(JsonParser jp, DeserializationContext ctxt,\n            TypeDeserializer typeDeserializer)\n        throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[13963-14316]:MethodDeclaration[14057-14410]"
    }, {
      "left" : "public final Class<?> getMapClass()",
      "right" : "public final Class<?> getMapClass()",
      "info" : "MethodDeclaration[14500-14633]:MethodDeclaration[14594-14727]"
    }, {
      "left" : "public JavaType getValueType()",
      "right" : "public JavaType getValueType()",
      "info" : "MethodDeclaration[14639-14700]:MethodDeclaration[14733-14794]"
    }, {
      "left" : "protected final void _readAndBind(JsonParser jp, DeserializationContext ctxt,\n            Map<Object,Object> result)\n        throws IOException, JsonProcessingException",
      "right" : "protected final void _readAndBind(JsonParser jp, DeserializationContext ctxt,\n            Map<Object,Object> result)\n        throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[14874-17242]:MethodDeclaration[14968-17336]"
    }, {
      "left" : "protected final void _readAndBindStringMap(JsonParser jp, DeserializationContext ctxt,\n            Map<Object,Object> result)\n        throws IOException, JsonProcessingException",
      "right" : "protected final void _readAndBindStringMap(JsonParser jp, DeserializationContext ctxt,\n            Map<Object,Object> result)\n        throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[17248-19471]:MethodDeclaration[17342-19565]"
    }, {
      "left" : "public Map<Object,Object> _deserializeUsingCreator(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException",
      "right" : "public Map<Object,Object> _deserializeUsingCreator(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[19481-22394]:MethodDeclaration[19575-22488]"
    }, {
      "left" : "// since 2.5\n    protected void wrapAndThrow(Throwable t, Object ref) throws IOException",
      "right" : "// since 2.5\n    protected void wrapAndThrow(Throwable t, Object ref) throws IOException",
      "info" : "MethodDeclaration[22400-22544]:MethodDeclaration[22494-22638]"
    }, {
      "left" : "protected void wrapAndThrow(Throwable t, Object ref, String key) throws IOException",
      "right" : "protected void wrapAndThrow(Throwable t, Object ref, String key) throws IOException",
      "info" : "MethodDeclaration[22628-23247]:MethodDeclaration[22722-23341]"
    }, {
      "left" : "private void handleUnresolvedReference(JsonParser jp, MapReferringAccumulator accumulator,\n            Object key, UnresolvedForwardReference reference)\n        throws JsonMappingException",
      "right" : "private void handleUnresolvedReference(JsonParser jp, MapReferringAccumulator accumulator,\n            Object key, UnresolvedForwardReference reference)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[23253-23753]:MethodDeclaration[23347-23847]"
    }, {
      "left" : "MapReferringAccumulator",
      "right" : "MapReferringAccumulator",
      "info" : "TypeDeclaration[23759-25822]:TypeDeclaration[23853-25916]"
    }, {
      "left" : "private final Class<?> _valueType;",
      "right" : "private final Class<?> _valueType;",
      "info" : "FieldDeclaration[23820-23854]:FieldDeclaration[23914-23948]"
    }, {
      "left" : "private Map<Object,Object> _result;",
      "right" : "private Map<Object,Object> _result;",
      "info" : "FieldDeclaration[23863-23898]:FieldDeclaration[23957-23992]"
    }, {
      "left" : "private List<MapReferring> _accumulator = new ArrayList<MapReferring>();",
      "right" : "private List<MapReferring> _accumulator = new ArrayList<MapReferring>();",
      "info" : "FieldDeclaration[23907-24067]:FieldDeclaration[24001-24161]"
    }, {
      "left" : "public MapReferringAccumulator(Class<?> valueType, Map<Object, Object> result)",
      "right" : "public MapReferringAccumulator(Class<?> valueType, Map<Object, Object> result)",
      "info" : "MethodDeclaration[24077-24233]:MethodDeclaration[24171-24327]"
    }, {
      "left" : "public void put(Object key, Object value)",
      "right" : "public void put(Object key, Object value)",
      "info" : "MethodDeclaration[24243-24542]:MethodDeclaration[24337-24636]"
    }, {
      "left" : "public Referring handleUnresolvedReference(UnresolvedForwardReference reference, Object key)",
      "right" : "public Referring handleUnresolvedReference(UnresolvedForwardReference reference, Object key)",
      "info" : "MethodDeclaration[24552-24803]:MethodDeclaration[24646-24897]"
    }, {
      "left" : "public void resolveForwardReference(Object id, Object value) throws IOException",
      "right" : "public void resolveForwardReference(Object id, Object value) throws IOException",
      "info" : "MethodDeclaration[24813-25816]:MethodDeclaration[24907-25910]"
    }, {
      "left" : "MapReferring",
      "right" : "MapReferring",
      "info" : "TypeDeclaration[25828-26694]:TypeDeclaration[25922-26788]"
    }, {
      "left" : "private final MapReferringAccumulator _parent;",
      "right" : "private final MapReferringAccumulator _parent;",
      "info" : "FieldDeclaration[26076-26122]:FieldDeclaration[26170-26216]"
    }, {
      "left" : "public final Map<Object, Object> next = new LinkedHashMap<Object, Object>();",
      "right" : "public final Map<Object, Object> next = new LinkedHashMap<Object, Object>();",
      "info" : "FieldDeclaration[26132-26208]:FieldDeclaration[26226-26302]"
    }, {
      "left" : "public final Object key;",
      "right" : "public final Object key;",
      "info" : "FieldDeclaration[26217-26241]:FieldDeclaration[26311-26335]"
    }, {
      "left" : "protected MapReferring(MapReferringAccumulator parent, UnresolvedForwardReference ref,\n                Class<?> valueType, Object key)",
      "right" : "protected MapReferring(MapReferringAccumulator parent, UnresolvedForwardReference ref,\n                Class<?> valueType, Object key)",
      "info" : "MethodDeclaration[26259-26506]:MethodDeclaration[26353-26600]"
    }, {
      "left" : "public void handleResolvedForwardReference(Object id, Object value) throws IOException",
      "right" : "public void handleResolvedForwardReference(Object id, Object value) throws IOException",
      "info" : "MethodDeclaration[26516-26688]:MethodDeclaration[26610-26782]"
    } ],
    "mappings" : [
 {
      "left" : "@JacksonStdImpl",
      "right" : "@JacksonStdImpl",
      "info" : "MarkerAnnotation[1097-1112]:MarkerAnnotation[1097-1112]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1113-1119]:Modifier[1113-1119]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1120-1125]:TYPE_DECLARATION_KIND[1120-1125]"
    }, {
      "left" : "MapDeserializer",
      "right" : "MapDeserializer",
      "info" : "SimpleName[1126-1141]:SimpleName[1126-1141]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3190-3196]:Modifier[3190-3196]"
    }, {
      "left" : "MapDeserializer",
      "right" : "MapDeserializer",
      "info" : "SimpleName[3197-3212]:SimpleName[3197-3212]"
    }, {
      "left" : "JavaType mapType",
      "right" : "JavaType mapType",
      "info" : "SingleVariableDeclaration[3213-3229]:SingleVariableDeclaration[3213-3229]"
    }, {
      "left" : "ValueInstantiator valueInstantiator",
      "right" : "ValueInstantiator valueInstantiator",
      "info" : "SingleVariableDeclaration[3231-3266]:SingleVariableDeclaration[3231-3266]"
    }, {
      "left" : "KeyDeserializer keyDeser",
      "right" : "KeyDeserializer keyDeser",
      "info" : "SingleVariableDeclaration[3280-3304]:SingleVariableDeclaration[3280-3304]"
    }, {
      "left" : "JsonDeserializer<Object> valueDeser",
      "right" : "JsonDeserializer<Object> valueDeser",
      "info" : "SingleVariableDeclaration[3306-3341]:SingleVariableDeclaration[3306-3341]"
    }, {
      "left" : "TypeDeserializer valueTypeDeser",
      "right" : "TypeDeserializer valueTypeDeser",
      "info" : "SingleVariableDeclaration[3355-3386]:SingleVariableDeclaration[3355-3386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3392-3838]:Block[3392-3838]"
    }, {
      "left" : "super(mapType);",
      "right" : "super(mapType);",
      "info" : "SuperConstructorInvocation[3402-3417]:SuperConstructorInvocation[3402-3417]"
    }, {
      "left" : "_mapType = mapType;",
      "right" : "_mapType = mapType;",
      "info" : "ExpressionStatement[3426-3445]:ExpressionStatement[3426-3445]"
    }, {
      "left" : "_keyDeserializer = keyDeser;",
      "right" : "_keyDeserializer = keyDeser;",
      "info" : "ExpressionStatement[3454-3482]:ExpressionStatement[3454-3482]"
    }, {
      "left" : "_valueDeserializer = valueDeser;",
      "right" : "_valueDeserializer = valueDeser;",
      "info" : "ExpressionStatement[3491-3523]:ExpressionStatement[3491-3523]"
    }, {
      "left" : "_valueTypeDeserializer = valueTypeDeser;",
      "right" : "_valueTypeDeserializer = valueTypeDeser;",
      "info" : "ExpressionStatement[3532-3572]:ExpressionStatement[3532-3572]"
    }, {
      "left" : "_valueInstantiator = valueInstantiator;",
      "right" : "_valueInstantiator = valueInstantiator;",
      "info" : "ExpressionStatement[3581-3620]:ExpressionStatement[3581-3620]"
    }, {
      "left" : "_hasDefaultCreator = valueInstantiator.canCreateUsingDefault();",
      "right" : "_hasDefaultCreator = valueInstantiator.canCreateUsingDefault();",
      "info" : "ExpressionStatement[3629-3692]:ExpressionStatement[3629-3692]"
    }, {
      "left" : "_delegateDeserializer = null;",
      "right" : "_delegateDeserializer = null;",
      "info" : "ExpressionStatement[3701-3730]:ExpressionStatement[3701-3730]"
    }, {
      "left" : "_propertyBasedCreator = null;",
      "right" : "_propertyBasedCreator = null;",
      "info" : "ExpressionStatement[3739-3768]:ExpressionStatement[3739-3768]"
    }, {
      "left" : "_standardStringKey = _isStdKeyDeser(mapType, keyDeser);",
      "right" : "_standardStringKey = _isStdKeyDeser(mapType, keyDeser);",
      "info" : "ExpressionStatement[3777-3832]:ExpressionStatement[3777-3832]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3999-4008]:Modifier[3999-4008]"
    }, {
      "left" : "MapDeserializer",
      "right" : "MapDeserializer",
      "info" : "SimpleName[4009-4024]:SimpleName[4009-4024]"
    }, {
      "left" : "MapDeserializer src",
      "right" : "MapDeserializer src",
      "info" : "SingleVariableDeclaration[4025-4044]:SingleVariableDeclaration[4025-4044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4050-4656]:Block[4050-4656]"
    }, {
      "left" : "super(src._mapType);",
      "right" : "super(src._mapType);",
      "info" : "SuperConstructorInvocation[4060-4080]:SuperConstructorInvocation[4060-4080]"
    }, {
      "left" : "_mapType = src._mapType;",
      "right" : "_mapType = src._mapType;",
      "info" : "ExpressionStatement[4089-4113]:ExpressionStatement[4089-4113]"
    }, {
      "left" : "_keyDeserializer = src._keyDeserializer;",
      "right" : "_keyDeserializer = src._keyDeserializer;",
      "info" : "ExpressionStatement[4122-4162]:ExpressionStatement[4122-4162]"
    }, {
      "left" : "_valueDeserializer = src._valueDeserializer;",
      "right" : "_valueDeserializer = src._valueDeserializer;",
      "info" : "ExpressionStatement[4171-4215]:ExpressionStatement[4171-4215]"
    }, {
      "left" : "_valueTypeDeserializer = src._valueTypeDeserializer;",
      "right" : "_valueTypeDeserializer = src._valueTypeDeserializer;",
      "info" : "ExpressionStatement[4224-4276]:ExpressionStatement[4224-4276]"
    }, {
      "left" : "_valueInstantiator = src._valueInstantiator;",
      "right" : "_valueInstantiator = src._valueInstantiator;",
      "info" : "ExpressionStatement[4285-4329]:ExpressionStatement[4285-4329]"
    }, {
      "left" : "_propertyBasedCreator = src._propertyBasedCreator;",
      "right" : "_propertyBasedCreator = src._propertyBasedCreator;",
      "info" : "ExpressionStatement[4338-4388]:ExpressionStatement[4338-4388]"
    }, {
      "left" : "_delegateDeserializer = src._delegateDeserializer;",
      "right" : "_delegateDeserializer = src._delegateDeserializer;",
      "info" : "ExpressionStatement[4397-4447]:ExpressionStatement[4397-4447]"
    }, {
      "left" : "_hasDefaultCreator = src._hasDefaultCreator;",
      "right" : "_hasDefaultCreator = src._hasDefaultCreator;",
      "info" : "ExpressionStatement[4456-4500]:ExpressionStatement[4456-4500]"
    }, {
      "left" : "_ignorableProperties = src._ignorableProperties;",
      "right" : "_ignorableProperties = src._ignorableProperties;",
      "info" : "ExpressionStatement[4548-4596]:ExpressionStatement[4548-4596]"
    }, {
      "left" : "_standardStringKey = src._standardStringKey;",
      "right" : "_standardStringKey = src._standardStringKey;",
      "info" : "ExpressionStatement[4606-4650]:ExpressionStatement[4606-4650]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4662-4671]:Modifier[4662-4671]"
    }, {
      "left" : "MapDeserializer",
      "right" : "MapDeserializer",
      "info" : "SimpleName[4672-4687]:SimpleName[4672-4687]"
    }, {
      "left" : "MapDeserializer src",
      "right" : "MapDeserializer src",
      "info" : "SingleVariableDeclaration[4688-4707]:SingleVariableDeclaration[4688-4707]"
    }, {
      "left" : "KeyDeserializer keyDeser",
      "right" : "KeyDeserializer keyDeser",
      "info" : "SingleVariableDeclaration[4721-4745]:SingleVariableDeclaration[4721-4745]"
    }, {
      "left" : "JsonDeserializer<Object> valueDeser",
      "right" : "JsonDeserializer<Object> valueDeser",
      "info" : "SingleVariableDeclaration[4747-4782]:SingleVariableDeclaration[4747-4782]"
    }, {
      "left" : "TypeDeserializer valueTypeDeser",
      "right" : "TypeDeserializer valueTypeDeser",
      "info" : "SingleVariableDeclaration[4796-4827]:SingleVariableDeclaration[4796-4827]"
    }, {
      "left" : "HashSet<String> ignorable",
      "right" : "HashSet<String> ignorable",
      "info" : "SingleVariableDeclaration[4841-4866]:SingleVariableDeclaration[4841-4866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4872-5400]:Block[4872-5400]"
    }, {
      "left" : "super(src._mapType);",
      "right" : "super(src._mapType);",
      "info" : "SuperConstructorInvocation[4882-4902]:SuperConstructorInvocation[4882-4902]"
    }, {
      "left" : "_mapType = src._mapType;",
      "right" : "_mapType = src._mapType;",
      "info" : "ExpressionStatement[4911-4935]:ExpressionStatement[4911-4935]"
    }, {
      "left" : "_keyDeserializer = keyDeser;",
      "right" : "_keyDeserializer = keyDeser;",
      "info" : "ExpressionStatement[4944-4972]:ExpressionStatement[4944-4972]"
    }, {
      "left" : "_valueDeserializer = valueDeser;",
      "right" : "_valueDeserializer = valueDeser;",
      "info" : "ExpressionStatement[4981-5013]:ExpressionStatement[4981-5013]"
    }, {
      "left" : "_valueTypeDeserializer = valueTypeDeser;",
      "right" : "_valueTypeDeserializer = valueTypeDeser;",
      "info" : "ExpressionStatement[5022-5062]:ExpressionStatement[5022-5062]"
    }, {
      "left" : "_valueInstantiator = src._valueInstantiator;",
      "right" : "_valueInstantiator = src._valueInstantiator;",
      "info" : "ExpressionStatement[5071-5115]:ExpressionStatement[5071-5115]"
    }, {
      "left" : "_propertyBasedCreator = src._propertyBasedCreator;",
      "right" : "_propertyBasedCreator = src._propertyBasedCreator;",
      "info" : "ExpressionStatement[5124-5174]:ExpressionStatement[5124-5174]"
    }, {
      "left" : "_delegateDeserializer = src._delegateDeserializer;",
      "right" : "_delegateDeserializer = src._delegateDeserializer;",
      "info" : "ExpressionStatement[5183-5233]:ExpressionStatement[5183-5233]"
    }, {
      "left" : "_hasDefaultCreator = src._hasDefaultCreator;",
      "right" : "_hasDefaultCreator = src._hasDefaultCreator;",
      "info" : "ExpressionStatement[5242-5286]:ExpressionStatement[5242-5286]"
    }, {
      "left" : "_ignorableProperties = ignorable;",
      "right" : "_ignorableProperties = ignorable;",
      "info" : "ExpressionStatement[5295-5328]:ExpressionStatement[5295-5328]"
    }, {
      "left" : "_standardStringKey = _isStdKeyDeser(_mapType, keyDeser);",
      "right" : "_standardStringKey = _isStdKeyDeser(_mapType, keyDeser);",
      "info" : "ExpressionStatement[5338-5394]:ExpressionStatement[5338-5394]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[5553-5583]:SingleMemberAnnotation[5553-5583]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5588-5597]:Modifier[5588-5597]"
    }, {
      "left" : "MapDeserializer",
      "right" : "MapDeserializer",
      "info" : "SimpleType[5598-5613]:SimpleType[5598-5613]"
    }, {
      "left" : "withResolved",
      "right" : "withResolved",
      "info" : "SimpleName[5614-5626]:SimpleName[5614-5626]"
    }, {
      "left" : "KeyDeserializer keyDeser",
      "right" : "KeyDeserializer keyDeser",
      "info" : "SingleVariableDeclaration[5627-5651]:SingleVariableDeclaration[5627-5651]"
    }, {
      "left" : "TypeDeserializer valueTypeDeser",
      "right" : "TypeDeserializer valueTypeDeser",
      "info" : "SingleVariableDeclaration[5665-5696]:SingleVariableDeclaration[5665-5696]"
    }, {
      "left" : "JsonDeserializer<?> valueDeser",
      "right" : "JsonDeserializer<?> valueDeser",
      "info" : "SingleVariableDeclaration[5698-5728]:SingleVariableDeclaration[5698-5728]"
    }, {
      "left" : "HashSet<String> ignorable",
      "right" : "HashSet<String> ignorable",
      "info" : "SingleVariableDeclaration[5742-5767]:SingleVariableDeclaration[5742-5767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5773-6143]:Block[5773-6143]"
    }, {
      "left" : "if ((_keyDeserializer == keyDeser) && (_valueDeserializer == valueDeser)\n                && (_valueTypeDeserializer == valueTypeDeser) && (_ignorableProperties == ignorable))",
      "right" : "if ((_keyDeserializer == keyDeser) && (_valueDeserializer == valueDeser)\n                && (_valueTypeDeserializer == valueTypeDeser) && (_ignorableProperties == ignorable))",
      "info" : "IfStatement[5792-6003]:IfStatement[5792-6003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5967-6003]:Block[5967-6003]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5981-5993]:ReturnStatement[5981-5993]"
    }, {
      "left" : "return new MapDeserializer(this,\n                keyDeser, (JsonDeserializer<Object>) valueDeser, valueTypeDeser, ignorable);",
      "right" : "return new MapDeserializer(this,\n                keyDeser, (JsonDeserializer<Object>) valueDeser, valueTypeDeser, ignorable);",
      "info" : "ReturnStatement[6012-6137]:ReturnStatement[6012-6137]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6303-6312]:Modifier[6303-6312]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6313-6318]:Modifier[6313-6318]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6319-6326]:PrimitiveType[6319-6326]"
    }, {
      "left" : "_isStdKeyDeser",
      "right" : "_isStdKeyDeser",
      "info" : "SimpleName[6327-6341]:SimpleName[6327-6341]"
    }, {
      "left" : "JavaType mapType",
      "right" : "JavaType mapType",
      "info" : "SingleVariableDeclaration[6342-6358]:SingleVariableDeclaration[6342-6358]"
    }, {
      "left" : "KeyDeserializer keyDeser",
      "right" : "KeyDeserializer keyDeser",
      "info" : "SingleVariableDeclaration[6360-6384]:SingleVariableDeclaration[6360-6384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6390-6787]:Block[6390-6787]"
    }, {
      "left" : "if (keyDeser == null)",
      "right" : "if (keyDeser == null)",
      "info" : "IfStatement[6400-6458]:IfStatement[6400-6458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6422-6458]:Block[6422-6458]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[6436-6448]:ReturnStatement[6436-6448]"
    }, {
      "left" : "JavaType keyType = mapType.getKeyType();",
      "right" : "JavaType keyType = mapType.getKeyType();",
      "info" : "VariableDeclarationStatement[6467-6507]:VariableDeclarationStatement[6467-6507]"
    }, {
      "left" : "if (keyType == null)",
      "right" : "if (keyType == null)",
      "info" : "IfStatement[6516-6597]:IfStatement[6516-6597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6537-6597]:Block[6537-6597]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[6575-6587]:ReturnStatement[6575-6587]"
    }, {
      "left" : "Class<?> rawKeyType = keyType.getRawClass();",
      "right" : "Class<?> rawKeyType = keyType.getRawClass();",
      "info" : "VariableDeclarationStatement[6606-6650]:VariableDeclarationStatement[6606-6650]"
    }, {
      "left" : "return ((rawKeyType == String.class || rawKeyType == Object.class)\n                && isDefaultKeyDeserializer(keyDeser));",
      "right" : "return ((rawKeyType == String.class || rawKeyType == Object.class)\n                && isDefaultKeyDeserializer(keyDeser));",
      "info" : "ReturnStatement[6659-6781]:ReturnStatement[6659-6781]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6793-6799]:Modifier[6793-6799]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6800-6804]:PrimitiveType[6800-6804]"
    }, {
      "left" : "setIgnorableProperties",
      "right" : "setIgnorableProperties",
      "info" : "SimpleName[6805-6827]:SimpleName[6805-6827]"
    }, {
      "left" : "String[] ignorable",
      "right" : "String[] ignorable",
      "info" : "SingleVariableDeclaration[6828-6846]:SingleVariableDeclaration[6828-6846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6848-6989]:Block[6848-6989]"
    }, {
      "left" : "_ignorableProperties = (ignorable == null || ignorable.length == 0) ?\n            null : ArrayBuilders.arrayToSet(ignorable);",
      "right" : "_ignorableProperties = (ignorable == null || ignorable.length == 0) ?\n            null : ArrayBuilders.arrayToSet(ignorable);",
      "info" : "ExpressionStatement[6858-6983]:ExpressionStatement[6858-6983]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7199-7208]:MarkerAnnotation[7199-7208]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7213-7219]:Modifier[7213-7219]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7220-7224]:PrimitiveType[7220-7224]"
    }, {
      "left" : "resolve",
      "right" : "resolve",
      "info" : "SimpleName[7225-7232]:SimpleName[7225-7232]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[7233-7260]:SingleVariableDeclaration[7233-7260]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7269-7289]:SimpleType[7269-7289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7294-8597]:Block[7294-8597]"
    }, {
      "left" : "if (_valueInstantiator.canCreateUsingDelegate())",
      "right" : "if (_valueInstantiator.canCreateUsingDelegate())",
      "info" : "IfStatement[7387-8229]:IfStatement[7387-8229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7436-8229]:Block[7436-8229]"
    }, {
      "left" : "JavaType delegateType = _valueInstantiator.getDelegateType(ctxt.getConfig());",
      "right" : "JavaType delegateType = _valueInstantiator.getDelegateType(ctxt.getConfig());",
      "info" : "VariableDeclarationStatement[7450-7527]:VariableDeclarationStatement[7450-7527]"
    }, {
      "left" : "if (delegateType == null)",
      "right" : "if (delegateType == null)",
      "info" : "IfStatement[7540-7884]:IfStatement[7540-7884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7566-7884]:Block[7566-7884]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid delegate-creator definition for \"+_mapType\n                        +\": value instantiator (\"+_valueInstantiator.getClass().getName()\n                        +\") returned true for 'canCreateUsingDelegate()', but null for 'getDelegateType()'\");",
      "right" : "throw new IllegalArgumentException(\"Invalid delegate-creator definition for \"+_mapType\n                        +\": value instantiator (\"+_valueInstantiator.getClass().getName()\n                        +\") returned true for 'canCreateUsingDelegate()', but null for 'getDelegateType()'\");",
      "info" : "ThrowStatement[7584-7870]:ThrowStatement[7584-7870]"
    }, {
      "left" : "_delegateDeserializer = findDeserializer(ctxt, delegateType, null);",
      "right" : "_delegateDeserializer = findDeserializer(ctxt, delegateType, null);",
      "info" : "ExpressionStatement[8152-8219]:ExpressionStatement[8152-8219]"
    }, {
      "left" : "if (_valueInstantiator.canCreateFromObjectWith())",
      "right" : "if (_valueInstantiator.canCreateFromObjectWith())",
      "info" : "IfStatement[8238-8518]:IfStatement[8238-8518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8288-8518]:Block[8288-8518]"
    }, {
      "left" : "SettableBeanProperty[] creatorProps = _valueInstantiator.getFromObjectArguments(ctxt.getConfig());",
      "right" : "SettableBeanProperty[] creatorProps = _valueInstantiator.getFromObjectArguments(ctxt.getConfig());",
      "info" : "VariableDeclarationStatement[8302-8400]:VariableDeclarationStatement[8302-8400]"
    }, {
      "left" : "_propertyBasedCreator = PropertyBasedCreator.construct(ctxt, _valueInstantiator, creatorProps);",
      "right" : "_propertyBasedCreator = PropertyBasedCreator.construct(ctxt, _valueInstantiator, creatorProps);",
      "info" : "ExpressionStatement[8413-8508]:ExpressionStatement[8413-8508]"
    }, {
      "left" : "_standardStringKey = _isStdKeyDeser(_mapType, _keyDeserializer);",
      "right" : "_standardStringKey = _isStdKeyDeser(_mapType, _keyDeserializer);",
      "info" : "ExpressionStatement[8527-8591]:ExpressionStatement[8527-8591]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8751-8760]:MarkerAnnotation[8751-8760]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8765-8771]:Modifier[8765-8771]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[8772-8791]:ParameterizedType[8772-8791]"
    }, {
      "left" : "createContextual",
      "right" : "createContextual",
      "info" : "SimpleName[8792-8808]:SimpleName[8792-8808]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[8809-8836]:SingleVariableDeclaration[8809-8836]"
    }, {
      "left" : "BeanProperty property",
      "right" : "BeanProperty property",
      "info" : "SingleVariableDeclaration[8850-8871]:SingleVariableDeclaration[8850-8871]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[8880-8900]:SimpleType[8880-8900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8905-10410]:Block[8905-10410]"
    }, {
      "left" : "KeyDeserializer kd = _keyDeserializer;",
      "right" : "KeyDeserializer kd = _keyDeserializer;",
      "info" : "VariableDeclarationStatement[8915-8953]:VariableDeclarationStatement[8915-8953]"
    }, {
      "left" : "if (kd == null)",
      "right" : "if (kd == null)",
      "info" : "IfStatement[8962-9243]:IfStatement[8962-9243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8978-9065]:Block[8978-9065]"
    }, {
      "left" : "kd = ctxt.findKeyDeserializer(_mapType.getKeyType(), property);",
      "right" : "kd = ctxt.findKeyDeserializer(_mapType.getKeyType(), property);",
      "info" : "ExpressionStatement[8992-9055]:ExpressionStatement[8992-9055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9071-9243]:Block[9071-9243]"
    }, {
      "left" : "if (kd instanceof ContextualKeyDeserializer)",
      "right" : "if (kd instanceof ContextualKeyDeserializer)",
      "info" : "IfStatement[9085-9233]:IfStatement[9085-9233]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9130-9233]:Block[9130-9233]"
    }, {
      "left" : "kd = ((ContextualKeyDeserializer) kd).createContextual(ctxt, property);",
      "right" : "kd = ((ContextualKeyDeserializer) kd).createContextual(ctxt, property);",
      "info" : "ExpressionStatement[9148-9219]:ExpressionStatement[9148-9219]"
    }, {
      "left" : "JsonDeserializer<?> vd = _valueDeserializer;",
      "right" : "JsonDeserializer<?> vd = _valueDeserializer;",
      "info" : "VariableDeclarationStatement[9252-9296]:VariableDeclarationStatement[9252-9296]"
    }, {
      "left" : "vd = findConvertingContentDeserializer(ctxt, property, vd);",
      "right" : "vd = findConvertingContentDeserializer(ctxt, property, vd);",
      "info" : "ExpressionStatement[9351-9410]:ExpressionStatement[9351-9410]"
    }, {
      "left" : "if (vd == null)",
      "right" : "if (vd == null)",
      "info" : "IfStatement[9419-9683]:IfStatement[9419-9683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9435-9538]:Block[9435-9538]"
    }, {
      "left" : "vd = ctxt.findContextualValueDeserializer(_mapType.getContentType(), property);",
      "right" : "vd = ctxt.findContextualValueDeserializer(_mapType.getContentType(), property);",
      "info" : "ExpressionStatement[9449-9528]:ExpressionStatement[9449-9528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9544-9683]:Block[9544-9683]"
    }, {
      "left" : "vd = ctxt.handleSecondaryContextualization(vd, property);",
      "right" : "vd = ctxt.handleSecondaryContextualization(vd, property);",
      "info" : "ExpressionStatement[9616-9673]:ExpressionStatement[9616-9673]"
    }, {
      "left" : "TypeDeserializer vtd = _valueTypeDeserializer;",
      "right" : "TypeDeserializer vtd = _valueTypeDeserializer;",
      "info" : "VariableDeclarationStatement[9692-9738]:VariableDeclarationStatement[9692-9738]"
    }, {
      "left" : "if (vtd != null)",
      "right" : "if (vtd != null)",
      "info" : "IfStatement[9747-9820]:IfStatement[9747-9820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9764-9820]:Block[9764-9820]"
    }, {
      "left" : "vtd = vtd.forProperty(property);",
      "right" : "vtd = vtd.forProperty(property);",
      "info" : "ExpressionStatement[9778-9810]:ExpressionStatement[9778-9810]"
    }, {
      "left" : "HashSet<String> ignored = _ignorableProperties;",
      "right" : "HashSet<String> ignored = _ignorableProperties;",
      "info" : "VariableDeclarationStatement[9829-9876]:VariableDeclarationStatement[9829-9876]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[9885-9948]:VariableDeclarationStatement[9885-9948]"
    }, {
      "left" : "if (intr != null && property != null)",
      "right" : "if (intr != null && property != null)",
      "info" : "IfStatement[9957-10353]:IfStatement[9957-10353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9995-10353]:Block[9995-10353]"
    }, {
      "left" : "String[] moreToIgnore = intr.findPropertiesToIgnore(property.getMember());",
      "right" : "String[] moreToIgnore = intr.findPropertiesToIgnore(property.getMember());",
      "info" : "VariableDeclarationStatement[10009-10083]:VariableDeclarationStatement[10009-10083]"
    }, {
      "left" : "if (moreToIgnore != null)",
      "right" : "if (moreToIgnore != null)",
      "info" : "IfStatement[10096-10343]:IfStatement[10096-10343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10122-10343]:Block[10122-10343]"
    }, {
      "left" : "ignored = (ignored == null) ? new HashSet<String>() : new HashSet<String>(ignored);",
      "right" : "ignored = (ignored == null) ? new HashSet<String>() : new HashSet<String>(ignored);",
      "info" : "ExpressionStatement[10140-10223]:ExpressionStatement[10140-10223]"
    }, {
      "left" : "for (String str : moreToIgnore)",
      "right" : "for (String str : moreToIgnore)",
      "info" : "EnhancedForStatement[10240-10329]:EnhancedForStatement[10240-10329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10272-10329]:Block[10272-10329]"
    }, {
      "left" : "ignored.add(str);",
      "right" : "ignored.add(str);",
      "info" : "ExpressionStatement[10294-10311]:ExpressionStatement[10294-10311]"
    }, {
      "left" : "return withResolved(kd, vtd, vd, ignored);",
      "right" : "return withResolved(kd, vtd, vd, ignored);",
      "info" : "ReturnStatement[10362-10404]:ReturnStatement[10362-10404]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10601-10610]:MarkerAnnotation[10601-10610]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10615-10621]:Modifier[10615-10621]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[10622-10630]:SimpleType[10622-10630]"
    }, {
      "left" : "getContentType",
      "right" : "getContentType",
      "info" : "SimpleName[10631-10645]:SimpleName[10631-10645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10648-10697]:Block[10648-10697]"
    }, {
      "left" : "return _mapType.getContentType();",
      "right" : "return _mapType.getContentType();",
      "info" : "ReturnStatement[10658-10691]:ReturnStatement[10658-10691]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10703-10712]:MarkerAnnotation[10703-10712]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10717-10723]:Modifier[10717-10723]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[10724-10748]:ParameterizedType[10724-10748]"
    }, {
      "left" : "getContentDeserializer",
      "right" : "getContentDeserializer",
      "info" : "SimpleName[10749-10771]:SimpleName[10749-10771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10774-10816]:Block[10774-10816]"
    }, {
      "left" : "return _valueDeserializer;",
      "right" : "return _valueDeserializer;",
      "info" : "ReturnStatement[10784-10810]:ReturnStatement[10784-10810]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11550-11559]:MarkerAnnotation[11550-11559]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11564-11570]:Modifier[11564-11570]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11571-11578]:PrimitiveType[11571-11578]"
    }, {
      "left" : "isCachable",
      "right" : "isCachable",
      "info" : "SimpleName[11579-11589]:SimpleName[11579-11589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11592-11874]:Block[11592-11968]"
    }, {
      "left" : "return (_valueTypeDeserializer == null)\n                && (_ignorableProperties == null);",
      "right" : "return (_valueDeserializer == null)\n                && (_keyDeserializer == null)\n                && (_valueTypeDeserializer == null)\n                && (_ignorableProperties == null);",
      "info" : "ReturnStatement[11778-11868]:ReturnStatement[11778-11962]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11880-11889]:MarkerAnnotation[11974-11983]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[11894-11924]:SingleMemberAnnotation[11988-12018]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11929-11935]:Modifier[12023-12029]"
    }, {
      "left" : "Map<Object,Object>",
      "right" : "Map<Object,Object>",
      "info" : "ParameterizedType[11936-11954]:ParameterizedType[12030-12048]"
    }, {
      "left" : "deserialize",
      "right" : "deserialize",
      "info" : "SimpleName[11955-11966]:SimpleName[12049-12060]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[11967-11980]:SingleVariableDeclaration[12061-12074]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[11982-12009]:SingleVariableDeclaration[12076-12103]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[12026-12037]:SimpleType[12120-12131]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[12039-12062]:SimpleType[12133-12156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12067-13328]:Block[12161-13422]"
    }, {
      "left" : "if (_propertyBasedCreator != null)",
      "right" : "if (_propertyBasedCreator != null)",
      "info" : "IfStatement[12077-12178]:IfStatement[12171-12272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12112-12178]:Block[12206-12272]"
    }, {
      "left" : "return _deserializeUsingCreator(jp, ctxt);",
      "right" : "return _deserializeUsingCreator(jp, ctxt);",
      "info" : "ReturnStatement[12126-12168]:ReturnStatement[12220-12262]"
    }, {
      "left" : "if (_delegateDeserializer != null)",
      "right" : "if (_delegateDeserializer != null)",
      "info" : "IfStatement[12187-12384]:IfStatement[12281-12478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12222-12384]:Block[12316-12478]"
    }, {
      "left" : "return (Map<Object,Object>) _valueInstantiator.createUsingDelegate(ctxt,\n                    _delegateDeserializer.deserialize(jp, ctxt));",
      "right" : "return (Map<Object,Object>) _valueInstantiator.createUsingDelegate(ctxt,\n                    _delegateDeserializer.deserialize(jp, ctxt));",
      "info" : "ReturnStatement[12236-12374]:ReturnStatement[12330-12468]"
    }, {
      "left" : "if (!_hasDefaultCreator)",
      "right" : "if (!_hasDefaultCreator)",
      "info" : "IfStatement[12393-12523]:IfStatement[12487-12617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12418-12523]:Block[12512-12617]"
    }, {
      "left" : "throw ctxt.instantiationException(getMapClass(), \"No default constructor found\");",
      "right" : "throw ctxt.instantiationException(getMapClass(), \"No default constructor found\");",
      "info" : "ThrowStatement[12432-12513]:ThrowStatement[12526-12607]"
    }, {
      "left" : "JsonToken t = jp.getCurrentToken();",
      "right" : "JsonToken t = jp.getCurrentToken();",
      "info" : "VariableDeclarationStatement[12600-12635]:VariableDeclarationStatement[12694-12729]"
    }, {
      "left" : "if (t != JsonToken.START_OBJECT && t != JsonToken.FIELD_NAME && t != JsonToken.END_OBJECT)",
      "right" : "if (t != JsonToken.START_OBJECT && t != JsonToken.FIELD_NAME && t != JsonToken.END_OBJECT)",
      "info" : "IfStatement[12644-13027]:IfStatement[12738-13121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12735-13027]:Block[12829-13121]"
    }, {
      "left" : "if (t == JsonToken.VALUE_STRING)",
      "right" : "if (t == JsonToken.VALUE_STRING)",
      "info" : "IfStatement[12812-12961]:IfStatement[12906-13055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12845-12961]:Block[12939-13055]"
    }, {
      "left" : "return (Map<Object,Object>) _valueInstantiator.createFromString(ctxt, jp.getText());",
      "right" : "return (Map<Object,Object>) _valueInstantiator.createFromString(ctxt, jp.getText());",
      "info" : "ReturnStatement[12863-12947]:ReturnStatement[12957-13041]"
    }, {
      "left" : "throw ctxt.mappingException(getMapClass());",
      "right" : "throw ctxt.mappingException(getMapClass());",
      "info" : "ThrowStatement[12974-13017]:ThrowStatement[13068-13111]"
    }, {
      "left" : "final Map<Object,Object> result = (Map<Object,Object>) _valueInstantiator.createUsingDefault(ctxt);",
      "right" : "final Map<Object,Object> result = (Map<Object,Object>) _valueInstantiator.createUsingDefault(ctxt);",
      "info" : "VariableDeclarationStatement[13036-13135]:VariableDeclarationStatement[13130-13229]"
    }, {
      "left" : "if (_standardStringKey)",
      "right" : "if (_standardStringKey)",
      "info" : "IfStatement[13144-13259]:IfStatement[13238-13353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13168-13259]:Block[13262-13353]"
    }, {
      "left" : "_readAndBindStringMap(jp, ctxt, result);",
      "right" : "_readAndBindStringMap(jp, ctxt, result);",
      "info" : "ExpressionStatement[13182-13222]:ExpressionStatement[13276-13316]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[13235-13249]:ReturnStatement[13329-13343]"
    }, {
      "left" : "_readAndBind(jp, ctxt, result);",
      "right" : "_readAndBind(jp, ctxt, result);",
      "info" : "ExpressionStatement[13268-13299]:ExpressionStatement[13362-13393]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[13308-13322]:ReturnStatement[13402-13416]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13334-13343]:MarkerAnnotation[13428-13437]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13348-13354]:Modifier[13442-13448]"
    }, {
      "left" : "Map<Object,Object>",
      "right" : "Map<Object,Object>",
      "info" : "ParameterizedType[13355-13373]:ParameterizedType[13449-13467]"
    }, {
      "left" : "deserialize",
      "right" : "deserialize",
      "info" : "SimpleName[13374-13385]:SimpleName[13468-13479]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[13386-13399]:SingleVariableDeclaration[13480-13493]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[13401-13428]:SingleVariableDeclaration[13495-13522]"
    }, {
      "left" : "Map<Object,Object> result",
      "right" : "Map<Object,Object> result",
      "info" : "SingleVariableDeclaration[13442-13467]:SingleVariableDeclaration[13536-13561]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[13484-13495]:SimpleType[13578-13589]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[13497-13520]:SimpleType[13591-13614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13525-13957]:Block[13619-14051]"
    }, {
      "left" : "JsonToken t = jp.getCurrentToken();",
      "right" : "JsonToken t = jp.getCurrentToken();",
      "info" : "VariableDeclarationStatement[13591-13626]:VariableDeclarationStatement[13685-13720]"
    }, {
      "left" : "if (t != JsonToken.START_OBJECT && t != JsonToken.FIELD_NAME)",
      "right" : "if (t != JsonToken.START_OBJECT && t != JsonToken.FIELD_NAME)",
      "info" : "IfStatement[13635-13764]:IfStatement[13729-13858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13697-13764]:Block[13791-13858]"
    }, {
      "left" : "throw ctxt.mappingException(getMapClass());",
      "right" : "throw ctxt.mappingException(getMapClass());",
      "info" : "ThrowStatement[13711-13754]:ThrowStatement[13805-13848]"
    }, {
      "left" : "if (_standardStringKey)",
      "right" : "if (_standardStringKey)",
      "info" : "IfStatement[13773-13888]:IfStatement[13867-13982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13797-13888]:Block[13891-13982]"
    }, {
      "left" : "_readAndBindStringMap(jp, ctxt, result);",
      "right" : "_readAndBindStringMap(jp, ctxt, result);",
      "info" : "ExpressionStatement[13811-13851]:ExpressionStatement[13905-13945]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[13864-13878]:ReturnStatement[13958-13972]"
    }, {
      "left" : "_readAndBind(jp, ctxt, result);",
      "right" : "_readAndBind(jp, ctxt, result);",
      "info" : "ExpressionStatement[13897-13928]:ExpressionStatement[13991-14022]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[13937-13951]:ReturnStatement[14031-14045]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13963-13972]:MarkerAnnotation[14057-14066]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13977-13983]:Modifier[14071-14077]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[13984-13990]:SimpleType[14078-14084]"
    }, {
      "left" : "deserializeWithType",
      "right" : "deserializeWithType",
      "info" : "SimpleName[13991-14010]:SimpleName[14085-14104]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[14011-14024]:SingleVariableDeclaration[14105-14118]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[14026-14053]:SingleVariableDeclaration[14120-14147]"
    }, {
      "left" : "TypeDeserializer typeDeserializer",
      "right" : "TypeDeserializer typeDeserializer",
      "info" : "SingleVariableDeclaration[14067-14100]:SingleVariableDeclaration[14161-14194]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[14117-14128]:SimpleType[14211-14222]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[14130-14153]:SimpleType[14224-14247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14158-14316]:Block[14252-14410]"
    }, {
      "left" : "return typeDeserializer.deserializeTypedFromObject(jp, ctxt);",
      "right" : "return typeDeserializer.deserializeTypedFromObject(jp, ctxt);",
      "info" : "ReturnStatement[14249-14310]:ReturnStatement[14343-14404]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[14500-14530]:SingleMemberAnnotation[14594-14624]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14535-14541]:Modifier[14629-14635]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[14542-14547]:Modifier[14636-14641]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[14548-14556]:ParameterizedType[14642-14650]"
    }, {
      "left" : "getMapClass",
      "right" : "getMapClass",
      "info" : "SimpleName[14557-14568]:SimpleName[14651-14662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14571-14633]:Block[14665-14727]"
    }, {
      "left" : "return (Class<Map<Object,Object>>) _mapType.getRawClass();",
      "right" : "return (Class<Map<Object,Object>>) _mapType.getRawClass();",
      "info" : "ReturnStatement[14573-14631]:ReturnStatement[14667-14725]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14639-14648]:MarkerAnnotation[14733-14742]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14649-14655]:Modifier[14743-14749]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[14656-14664]:SimpleType[14750-14758]"
    }, {
      "left" : "getValueType",
      "right" : "getValueType",
      "info" : "SimpleName[14665-14677]:SimpleName[14759-14771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14680-14700]:Block[14774-14794]"
    }, {
      "left" : "return _mapType;",
      "right" : "return _mapType;",
      "info" : "ReturnStatement[14682-14698]:ReturnStatement[14776-14792]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14874-14883]:Modifier[14968-14977]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[14884-14889]:Modifier[14978-14983]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14890-14894]:PrimitiveType[14984-14988]"
    }, {
      "left" : "_readAndBind",
      "right" : "_readAndBind",
      "info" : "SimpleName[14895-14907]:SimpleName[14989-15001]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[14908-14921]:SingleVariableDeclaration[15002-15015]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[14923-14950]:SingleVariableDeclaration[15017-15044]"
    }, {
      "left" : "Map<Object,Object> result",
      "right" : "Map<Object,Object> result",
      "info" : "SingleVariableDeclaration[14964-14989]:SingleVariableDeclaration[15058-15083]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[15006-15017]:SimpleType[15100-15111]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[15019-15042]:SimpleType[15113-15136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15047-17242]:Block[15141-17336]"
    }, {
      "left" : "JsonToken t = jp.getCurrentToken();",
      "right" : "JsonToken t = jp.getCurrentToken();",
      "info" : "VariableDeclarationStatement[15057-15092]:VariableDeclarationStatement[15151-15186]"
    }, {
      "left" : "if (t == JsonToken.START_OBJECT)",
      "right" : "if (t == JsonToken.START_OBJECT)",
      "info" : "IfStatement[15101-15177]:IfStatement[15195-15271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15134-15177]:Block[15228-15271]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[15148-15167]:ExpressionStatement[15242-15261]"
    }, {
      "left" : "final KeyDeserializer keyDes = _keyDeserializer;",
      "right" : "final KeyDeserializer keyDes = _keyDeserializer;",
      "info" : "VariableDeclarationStatement[15186-15234]:VariableDeclarationStatement[15280-15328]"
    }, {
      "left" : "final JsonDeserializer<Object> valueDes = _valueDeserializer;",
      "right" : "final JsonDeserializer<Object> valueDes = _valueDeserializer;",
      "info" : "VariableDeclarationStatement[15243-15304]:VariableDeclarationStatement[15337-15398]"
    }, {
      "left" : "final TypeDeserializer typeDeser = _valueTypeDeserializer;",
      "right" : "final TypeDeserializer typeDeser = _valueTypeDeserializer;",
      "info" : "VariableDeclarationStatement[15313-15371]:VariableDeclarationStatement[15407-15465]"
    }, {
      "left" : "MapReferringAccumulator referringAccumulator = null;",
      "right" : "MapReferringAccumulator referringAccumulator = null;",
      "info" : "VariableDeclarationStatement[15381-15433]:VariableDeclarationStatement[15475-15527]"
    }, {
      "left" : "boolean useObjectId = valueDes.getObjectIdReader() != null;",
      "right" : "boolean useObjectId = valueDes.getObjectIdReader() != null;",
      "info" : "VariableDeclarationStatement[15442-15501]:VariableDeclarationStatement[15536-15595]"
    }, {
      "left" : "if (useObjectId)",
      "right" : "if (useObjectId)",
      "info" : "IfStatement[15510-15651]:IfStatement[15604-15745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15527-15651]:Block[15621-15745]"
    }, {
      "left" : "referringAccumulator = new MapReferringAccumulator(_mapType.getContentType().getRawClass(), result);",
      "right" : "referringAccumulator = new MapReferringAccumulator(_mapType.getContentType().getRawClass(), result);",
      "info" : "ExpressionStatement[15541-15641]:ExpressionStatement[15635-15735]"
    }, {
      "left" : "for (; t == JsonToken.FIELD_NAME; t = jp.nextToken())",
      "right" : "for (; t == JsonToken.FIELD_NAME; t = jp.nextToken())",
      "info" : "ForStatement[15660-17236]:ForStatement[15754-17330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15714-17236]:Block[15808-17330]"
    }, {
      "left" : "String fieldName = jp.getCurrentName();",
      "right" : "String fieldName = jp.getCurrentName();",
      "info" : "VariableDeclarationStatement[15768-15807]:VariableDeclarationStatement[15862-15901]"
    }, {
      "left" : "Object key = keyDes.deserializeKey(fieldName, ctxt);",
      "right" : "Object key = keyDes.deserializeKey(fieldName, ctxt);",
      "info" : "VariableDeclarationStatement[15820-15872]:VariableDeclarationStatement[15914-15966]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[15922-15941]:ExpressionStatement[16016-16035]"
    }, {
      "left" : "if (_ignorableProperties != null && _ignorableProperties.contains(fieldName))",
      "right" : "if (_ignorableProperties != null && _ignorableProperties.contains(fieldName))",
      "info" : "IfStatement[15954-16108]:IfStatement[16048-16202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16032-16108]:Block[16126-16202]"
    }, {
      "left" : "jp.skipChildren();",
      "right" : "jp.skipChildren();",
      "info" : "ExpressionStatement[16050-16068]:ExpressionStatement[16144-16162]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[16085-16094]:ContinueStatement[16179-16188]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[16121-17226]:TryStatement[16215-17320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16124-16992]:Block[16218-17086]"
    }, {
      "left" : "Object value;",
      "right" : "Object value;",
      "info" : "VariableDeclarationStatement[16227-16240]:VariableDeclarationStatement[16321-16334]"
    }, {
      "left" : "if (t == JsonToken.VALUE_NULL)",
      "right" : "if (t == JsonToken.VALUE_NULL)",
      "info" : "IfStatement[16257-16572]:IfStatement[16351-16666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16288-16360]:Block[16382-16454]"
    }, {
      "left" : "value = valueDes.getNullValue();",
      "right" : "value = valueDes.getNullValue();",
      "info" : "ExpressionStatement[16310-16342]:ExpressionStatement[16404-16436]"
    }, {
      "left" : "if (typeDeser == null)",
      "right" : "if (typeDeser == null)",
      "info" : "IfStatement[16366-16572]:IfStatement[16460-16666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16389-16468]:Block[16483-16562]"
    }, {
      "left" : "value = valueDes.deserialize(jp, ctxt);",
      "right" : "value = valueDes.deserialize(jp, ctxt);",
      "info" : "ExpressionStatement[16411-16450]:ExpressionStatement[16505-16544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16474-16572]:Block[16568-16666]"
    }, {
      "left" : "value = valueDes.deserializeWithType(jp, ctxt, typeDeser);",
      "right" : "value = valueDes.deserializeWithType(jp, ctxt, typeDeser);",
      "info" : "ExpressionStatement[16496-16554]:ExpressionStatement[16590-16648]"
    }, {
      "left" : "if (useObjectId)",
      "right" : "if (useObjectId)",
      "info" : "IfStatement[16815-16978]:IfStatement[16909-17072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16832-16909]:Block[16926-17003]"
    }, {
      "left" : "referringAccumulator.put(key, value);",
      "right" : "referringAccumulator.put(key, value);",
      "info" : "ExpressionStatement[16854-16891]:ExpressionStatement[16948-16985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16915-16978]:Block[17009-17072]"
    }, {
      "left" : "result.put(key, value);",
      "right" : "result.put(key, value);",
      "info" : "ExpressionStatement[16937-16960]:ExpressionStatement[17031-17054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17038-17138]:Block[17132-17232]"
    }, {
      "left" : "handleUnresolvedReference(jp, referringAccumulator, key, reference);",
      "right" : "handleUnresolvedReference(jp, referringAccumulator, key, reference);",
      "info" : "ExpressionStatement[17056-17124]:ExpressionStatement[17150-17218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17159-17226]:Block[17253-17320]"
    }, {
      "left" : "wrapAndThrow(e, result, fieldName);",
      "right" : "wrapAndThrow(e, result, fieldName);",
      "info" : "ExpressionStatement[17177-17212]:ExpressionStatement[17271-17306]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[17424-17433]:Modifier[17518-17527]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[17434-17439]:Modifier[17528-17533]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17440-17444]:PrimitiveType[17534-17538]"
    }, {
      "left" : "_readAndBindStringMap",
      "right" : "_readAndBindStringMap",
      "info" : "SimpleName[17445-17466]:SimpleName[17539-17560]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[17467-17480]:SingleVariableDeclaration[17561-17574]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[17482-17509]:SingleVariableDeclaration[17576-17603]"
    }, {
      "left" : "Map<Object,Object> result",
      "right" : "Map<Object,Object> result",
      "info" : "SingleVariableDeclaration[17523-17548]:SingleVariableDeclaration[17617-17642]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17565-17576]:SimpleType[17659-17670]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[17578-17601]:SimpleType[17672-17695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17606-19471]:Block[17700-19565]"
    }, {
      "left" : "JsonToken t = jp.getCurrentToken();",
      "right" : "JsonToken t = jp.getCurrentToken();",
      "info" : "VariableDeclarationStatement[17616-17651]:VariableDeclarationStatement[17710-17745]"
    }, {
      "left" : "if (t == JsonToken.START_OBJECT)",
      "right" : "if (t == JsonToken.START_OBJECT)",
      "info" : "IfStatement[17660-17736]:IfStatement[17754-17830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17693-17736]:Block[17787-17830]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[17707-17726]:ExpressionStatement[17801-17820]"
    }, {
      "left" : "final JsonDeserializer<Object> valueDes = _valueDeserializer;",
      "right" : "final JsonDeserializer<Object> valueDes = _valueDeserializer;",
      "info" : "VariableDeclarationStatement[17745-17806]:VariableDeclarationStatement[17839-17900]"
    }, {
      "left" : "final TypeDeserializer typeDeser = _valueTypeDeserializer;",
      "right" : "final TypeDeserializer typeDeser = _valueTypeDeserializer;",
      "info" : "VariableDeclarationStatement[17815-17873]:VariableDeclarationStatement[17909-17967]"
    }, {
      "left" : "MapReferringAccumulator referringAccumulator = null;",
      "right" : "MapReferringAccumulator referringAccumulator = null;",
      "info" : "VariableDeclarationStatement[17882-17934]:VariableDeclarationStatement[17976-18028]"
    }, {
      "left" : "boolean useObjectId = valueDes.getObjectIdReader() != null;",
      "right" : "boolean useObjectId = valueDes.getObjectIdReader() != null;",
      "info" : "VariableDeclarationStatement[17943-18002]:VariableDeclarationStatement[18037-18096]"
    }, {
      "left" : "if (useObjectId)",
      "right" : "if (useObjectId)",
      "info" : "IfStatement[18011-18152]:IfStatement[18105-18246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18028-18152]:Block[18122-18246]"
    }, {
      "left" : "referringAccumulator = new MapReferringAccumulator(_mapType.getContentType().getRawClass(), result);",
      "right" : "referringAccumulator = new MapReferringAccumulator(_mapType.getContentType().getRawClass(), result);",
      "info" : "ExpressionStatement[18042-18142]:ExpressionStatement[18136-18236]"
    }, {
      "left" : "for (; t == JsonToken.FIELD_NAME; t = jp.nextToken())",
      "right" : "for (; t == JsonToken.FIELD_NAME; t = jp.nextToken())",
      "info" : "ForStatement[18161-19465]:ForStatement[18255-19559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18215-19465]:Block[18309-19559]"
    }, {
      "left" : "String fieldName = jp.getCurrentName();",
      "right" : "String fieldName = jp.getCurrentName();",
      "info" : "VariableDeclarationStatement[18269-18308]:VariableDeclarationStatement[18363-18402]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[18358-18377]:ExpressionStatement[18452-18471]"
    }, {
      "left" : "if (_ignorableProperties != null && _ignorableProperties.contains(fieldName))",
      "right" : "if (_ignorableProperties != null && _ignorableProperties.contains(fieldName))",
      "info" : "IfStatement[18390-18544]:IfStatement[18484-18638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18468-18544]:Block[18562-18638]"
    }, {
      "left" : "jp.skipChildren();",
      "right" : "jp.skipChildren();",
      "info" : "ExpressionStatement[18486-18504]:ExpressionStatement[18580-18598]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[18521-18530]:ContinueStatement[18615-18624]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[18557-19455]:TryStatement[18651-19549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18561-19215]:Block[18655-19309]"
    }, {
      "left" : "Object value;",
      "right" : "Object value;",
      "info" : "VariableDeclarationStatement[18664-18677]:VariableDeclarationStatement[18758-18771]"
    }, {
      "left" : "if (t == JsonToken.VALUE_NULL)",
      "right" : "if (t == JsonToken.VALUE_NULL)",
      "info" : "IfStatement[18694-19009]:IfStatement[18788-19103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18725-18797]:Block[18819-18891]"
    }, {
      "left" : "value = valueDes.getNullValue();",
      "right" : "value = valueDes.getNullValue();",
      "info" : "ExpressionStatement[18747-18779]:ExpressionStatement[18841-18873]"
    }, {
      "left" : "if (typeDeser == null)",
      "right" : "if (typeDeser == null)",
      "info" : "IfStatement[18803-19009]:IfStatement[18897-19103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18826-18905]:Block[18920-18999]"
    }, {
      "left" : "value = valueDes.deserialize(jp, ctxt);",
      "right" : "value = valueDes.deserialize(jp, ctxt);",
      "info" : "ExpressionStatement[18848-18887]:ExpressionStatement[18942-18981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18911-19009]:Block[19005-19103]"
    }, {
      "left" : "value = valueDes.deserializeWithType(jp, ctxt, typeDeser);",
      "right" : "value = valueDes.deserializeWithType(jp, ctxt, typeDeser);",
      "info" : "ExpressionStatement[18933-18991]:ExpressionStatement[19027-19085]"
    }, {
      "left" : "if (useObjectId)",
      "right" : "if (useObjectId)",
      "info" : "IfStatement[19026-19201]:IfStatement[19120-19295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19043-19126]:Block[19137-19220]"
    }, {
      "left" : "referringAccumulator.put(fieldName, value);",
      "right" : "referringAccumulator.put(fieldName, value);",
      "info" : "ExpressionStatement[19065-19108]:ExpressionStatement[19159-19202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19132-19201]:Block[19226-19295]"
    }, {
      "left" : "result.put(fieldName, value);",
      "right" : "result.put(fieldName, value);",
      "info" : "ExpressionStatement[19154-19183]:ExpressionStatement[19248-19277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19261-19367]:Block[19355-19461]"
    }, {
      "left" : "handleUnresolvedReference(jp, referringAccumulator, fieldName, reference);",
      "right" : "handleUnresolvedReference(jp, referringAccumulator, fieldName, reference);",
      "info" : "ExpressionStatement[19279-19353]:ExpressionStatement[19373-19447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19388-19455]:Block[19482-19549]"
    }, {
      "left" : "wrapAndThrow(e, result, fieldName);",
      "right" : "wrapAndThrow(e, result, fieldName);",
      "info" : "ExpressionStatement[19406-19441]:ExpressionStatement[19500-19535]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[19481-19511]:SingleMemberAnnotation[19575-19605]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19517-19523]:Modifier[19611-19617]"
    }, {
      "left" : "Map<Object,Object>",
      "right" : "Map<Object,Object>",
      "info" : "ParameterizedType[19524-19542]:ParameterizedType[19618-19636]"
    }, {
      "left" : "_deserializeUsingCreator",
      "right" : "_deserializeUsingCreator",
      "info" : "SimpleName[19543-19567]:SimpleName[19637-19661]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[19568-19581]:SingleVariableDeclaration[19662-19675]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[19583-19610]:SingleVariableDeclaration[19677-19704]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19627-19638]:SimpleType[19721-19732]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[19640-19663]:SimpleType[19734-19757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19668-22394]:Block[19762-22488]"
    }, {
      "left" : "final PropertyBasedCreator creator = _propertyBasedCreator;",
      "right" : "final PropertyBasedCreator creator = _propertyBasedCreator;",
      "info" : "VariableDeclarationStatement[19678-19737]:VariableDeclarationStatement[19772-19831]"
    }, {
      "left" : "PropertyValueBuffer buffer = creator.startBuilding(jp, ctxt, null);",
      "right" : "PropertyValueBuffer buffer = creator.startBuilding(jp, ctxt, null);",
      "info" : "VariableDeclarationStatement[19799-19866]:VariableDeclarationStatement[19893-19960]"
    }, {
      "left" : "JsonToken t = jp.getCurrentToken();",
      "right" : "JsonToken t = jp.getCurrentToken();",
      "info" : "VariableDeclarationStatement[19876-19911]:VariableDeclarationStatement[19970-20005]"
    }, {
      "left" : "if (t == JsonToken.START_OBJECT)",
      "right" : "if (t == JsonToken.START_OBJECT)",
      "info" : "IfStatement[19920-19996]:IfStatement[20014-20090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19953-19996]:Block[20047-20090]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[19967-19986]:ExpressionStatement[20061-20080]"
    }, {
      "left" : "final JsonDeserializer<Object> valueDes = _valueDeserializer;",
      "right" : "final JsonDeserializer<Object> valueDes = _valueDeserializer;",
      "info" : "VariableDeclarationStatement[20005-20066]:VariableDeclarationStatement[20099-20160]"
    }, {
      "left" : "final TypeDeserializer typeDeser = _valueTypeDeserializer;",
      "right" : "final TypeDeserializer typeDeser = _valueTypeDeserializer;",
      "info" : "VariableDeclarationStatement[20075-20133]:VariableDeclarationStatement[20169-20227]"
    }, {
      "left" : "for (; t == JsonToken.FIELD_NAME; t = jp.nextToken())",
      "right" : "for (; t == JsonToken.FIELD_NAME; t = jp.nextToken())",
      "info" : "ForStatement[20142-22099]:ForStatement[20236-22193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20196-22099]:Block[20290-22193]"
    }, {
      "left" : "String propName = jp.getCurrentName();",
      "right" : "String propName = jp.getCurrentName();",
      "info" : "VariableDeclarationStatement[20210-20248]:VariableDeclarationStatement[20304-20342]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[20261-20280]:ExpressionStatement[20355-20374]"
    }, {
      "left" : "if (_ignorableProperties != null && _ignorableProperties.contains(propName))",
      "right" : "if (_ignorableProperties != null && _ignorableProperties.contains(propName))",
      "info" : "IfStatement[20312-20506]:IfStatement[20406-20600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20389-20506]:Block[20483-20600]"
    }, {
      "left" : "jp.skipChildren();",
      "right" : "jp.skipChildren();",
      "info" : "ExpressionStatement[20407-20425]:ExpressionStatement[20501-20519]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[20483-20492]:ContinueStatement[20577-20586]"
    }, {
      "left" : "SettableBeanProperty prop = creator.findCreatorProperty(propName);",
      "right" : "SettableBeanProperty prop = creator.findCreatorProperty(propName);",
      "info" : "VariableDeclarationStatement[20552-20618]:VariableDeclarationStatement[20646-20712]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[20631-21341]:IfStatement[20725-21435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20649-21341]:Block[20743-21435]"
    }, {
      "left" : "Object value = prop.deserialize(jp, ctxt);",
      "right" : "Object value = prop.deserialize(jp, ctxt);",
      "info" : "VariableDeclarationStatement[20708-20750]:VariableDeclarationStatement[20802-20844]"
    }, {
      "left" : "if (buffer.assignParameter(prop.getCreatorIndex(), value))",
      "right" : "if (buffer.assignParameter(prop.getCreatorIndex(), value))",
      "info" : "IfStatement[20767-21301]:IfStatement[20861-21395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20826-21301]:Block[20920-21395]"
    }, {
      "left" : "jp.nextToken();",
      "right" : "jp.nextToken();",
      "info" : "ExpressionStatement[20848-20863]:ExpressionStatement[20942-20957]"
    }, {
      "left" : "Map<Object,Object> result;",
      "right" : "Map<Object,Object> result;",
      "info" : "VariableDeclarationStatement[20884-20910]:VariableDeclarationStatement[20978-21004]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[20931-21196]:TryStatement[21025-21290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20935-21040]:Block[21029-21134]"
    }, {
      "left" : "result = (Map<Object,Object>)creator.build(ctxt, buffer);",
      "right" : "result = (Map<Object,Object>)creator.build(ctxt, buffer);",
      "info" : "ExpressionStatement[20961-21018]:ExpressionStatement[21055-21112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21061-21196]:Block[21155-21290]"
    }, {
      "left" : "wrapAndThrow(e, _mapType.getRawClass(), propName);",
      "right" : "wrapAndThrow(e, _mapType.getRawClass(), propName);",
      "info" : "ExpressionStatement[21087-21137]:ExpressionStatement[21181-21231]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[21162-21174]:ReturnStatement[21256-21268]"
    }, {
      "left" : "_readAndBind(jp, ctxt, result);",
      "right" : "_readAndBind(jp, ctxt, result);",
      "info" : "ExpressionStatement[21217-21248]:ExpressionStatement[21311-21342]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[21269-21283]:ReturnStatement[21363-21377]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[21318-21327]:ContinueStatement[21412-21421]"
    }, {
      "left" : "String fieldName = jp.getCurrentName();",
      "right" : "String fieldName = jp.getCurrentName();",
      "info" : "VariableDeclarationStatement[21401-21440]:VariableDeclarationStatement[21495-21534]"
    }, {
      "left" : "Object key = _keyDeserializer.deserializeKey(fieldName, ctxt);",
      "right" : "Object key = _keyDeserializer.deserializeKey(fieldName, ctxt);",
      "info" : "VariableDeclarationStatement[21453-21515]:VariableDeclarationStatement[21547-21609]"
    }, {
      "left" : "Object value;",
      "right" : "Object value;",
      "info" : "VariableDeclarationStatement[21528-21541]:VariableDeclarationStatement[21622-21635]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[21556-22039]:TryStatement[21650-22133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21560-21907]:Block[21654-22001]"
    }, {
      "left" : "if (t == JsonToken.VALUE_NULL)",
      "right" : "if (t == JsonToken.VALUE_NULL)",
      "info" : "IfStatement[21578-21893]:IfStatement[21672-21987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21609-21681]:Block[21703-21775]"
    }, {
      "left" : "value = valueDes.getNullValue();",
      "right" : "value = valueDes.getNullValue();",
      "info" : "ExpressionStatement[21631-21663]:ExpressionStatement[21725-21757]"
    }, {
      "left" : "if (typeDeser == null)",
      "right" : "if (typeDeser == null)",
      "info" : "IfStatement[21687-21893]:IfStatement[21781-21987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21710-21789]:Block[21804-21883]"
    }, {
      "left" : "value = valueDes.deserialize(jp, ctxt);",
      "right" : "value = valueDes.deserialize(jp, ctxt);",
      "info" : "ExpressionStatement[21732-21771]:ExpressionStatement[21826-21865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21795-21893]:Block[21889-21987]"
    }, {
      "left" : "value = valueDes.deserializeWithType(jp, ctxt, typeDeser);",
      "right" : "value = valueDes.deserializeWithType(jp, ctxt, typeDeser);",
      "info" : "ExpressionStatement[21817-21875]:ExpressionStatement[21911-21969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21928-22039]:Block[22022-22133]"
    }, {
      "left" : "wrapAndThrow(e, _mapType.getRawClass(), propName);",
      "right" : "wrapAndThrow(e, _mapType.getRawClass(), propName);",
      "info" : "ExpressionStatement[21946-21996]:ExpressionStatement[22040-22090]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22013-22025]:ReturnStatement[22107-22119]"
    }, {
      "left" : "buffer.bufferMapProperty(key, value);",
      "right" : "buffer.bufferMapProperty(key, value);",
      "info" : "ExpressionStatement[22052-22089]:ExpressionStatement[22146-22183]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[22189-22388]:TryStatement[22283-22482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22193-22272]:Block[22287-22366]"
    }, {
      "left" : "return (Map<Object,Object>)creator.build(ctxt, buffer);",
      "right" : "return (Map<Object,Object>)creator.build(ctxt, buffer);",
      "info" : "ReturnStatement[22207-22262]:ReturnStatement[22301-22356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22293-22388]:Block[22387-22482]"
    }, {
      "left" : "wrapAndThrow(e, _mapType.getRawClass(), null);",
      "right" : "wrapAndThrow(e, _mapType.getRawClass(), null);",
      "info" : "ExpressionStatement[22307-22353]:ExpressionStatement[22401-22447]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22366-22378]:ReturnStatement[22460-22472]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[22400-22411]:MarkerAnnotation[22494-22505]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[22429-22438]:Modifier[22523-22532]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22439-22443]:PrimitiveType[22533-22537]"
    }, {
      "left" : "wrapAndThrow",
      "right" : "wrapAndThrow",
      "info" : "SimpleName[22444-22456]:SimpleName[22538-22550]"
    }, {
      "left" : "Throwable t",
      "right" : "Throwable t",
      "info" : "SingleVariableDeclaration[22457-22468]:SingleVariableDeclaration[22551-22562]"
    }, {
      "left" : "Object ref",
      "right" : "Object ref",
      "info" : "SingleVariableDeclaration[22470-22480]:SingleVariableDeclaration[22564-22574]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22489-22500]:SimpleType[22583-22594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22501-22544]:Block[22595-22638]"
    }, {
      "left" : "wrapAndThrow(t, ref, null);",
      "right" : "wrapAndThrow(t, ref, null);",
      "info" : "ExpressionStatement[22511-22538]:ExpressionStatement[22605-22632]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[22628-22637]:Modifier[22722-22731]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22638-22642]:PrimitiveType[22732-22736]"
    }, {
      "left" : "wrapAndThrow",
      "right" : "wrapAndThrow",
      "info" : "SimpleName[22643-22655]:SimpleName[22737-22749]"
    }, {
      "left" : "Throwable t",
      "right" : "Throwable t",
      "info" : "SingleVariableDeclaration[22656-22667]:SingleVariableDeclaration[22750-22761]"
    }, {
      "left" : "Object ref",
      "right" : "Object ref",
      "info" : "SingleVariableDeclaration[22669-22679]:SingleVariableDeclaration[22763-22773]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[22681-22691]:SingleVariableDeclaration[22775-22785]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22700-22711]:SimpleType[22794-22805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22716-23247]:Block[22810-23341]"
    }, {
      "left" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "right" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "info" : "WhileStatement[22762-22874]:WhileStatement[22856-22968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22833-22874]:Block[22927-22968]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[22847-22864]:ExpressionStatement[22941-22958]"
    }, {
      "left" : "if (t instanceof Error)",
      "right" : "if (t instanceof Error)",
      "info" : "IfStatement[22945-23009]:IfStatement[23039-23103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22969-23009]:Block[23063-23103]"
    }, {
      "left" : "throw (Error) t;",
      "right" : "throw (Error) t;",
      "info" : "ThrowStatement[22983-22999]:ThrowStatement[23077-23093]"
    }, {
      "left" : "if (t instanceof IOException && !(t instanceof JsonMappingException))",
      "right" : "if (t instanceof IOException && !(t instanceof JsonMappingException))",
      "info" : "IfStatement[23063-23179]:IfStatement[23157-23273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23133-23179]:Block[23227-23273]"
    }, {
      "left" : "throw (IOException) t;",
      "right" : "throw (IOException) t;",
      "info" : "ThrowStatement[23147-23169]:ThrowStatement[23241-23263]"
    }, {
      "left" : "throw JsonMappingException.wrapWithPath(t, ref, key);",
      "right" : "throw JsonMappingException.wrapWithPath(t, ref, key);",
      "info" : "ThrowStatement[23188-23241]:ThrowStatement[23282-23335]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23253-23260]:Modifier[23347-23354]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23261-23265]:PrimitiveType[23355-23359]"
    }, {
      "left" : "handleUnresolvedReference",
      "right" : "handleUnresolvedReference",
      "info" : "SimpleName[23266-23291]:SimpleName[23360-23385]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[23292-23305]:SingleVariableDeclaration[23386-23399]"
    }, {
      "left" : "MapReferringAccumulator accumulator",
      "right" : "MapReferringAccumulator accumulator",
      "info" : "SingleVariableDeclaration[23307-23342]:SingleVariableDeclaration[23401-23436]"
    }, {
      "left" : "Object key",
      "right" : "Object key",
      "info" : "SingleVariableDeclaration[23356-23366]:SingleVariableDeclaration[23450-23460]"
    }, {
      "left" : "UnresolvedForwardReference reference",
      "right" : "UnresolvedForwardReference reference",
      "info" : "SingleVariableDeclaration[23368-23404]:SingleVariableDeclaration[23462-23498]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[23421-23441]:SimpleType[23515-23535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23446-23753]:Block[23540-23847]"
    }, {
      "left" : "if (accumulator == null)",
      "right" : "if (accumulator == null)",
      "info" : "IfStatement[23456-23606]:IfStatement[23550-23700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23481-23606]:Block[23575-23700]"
    }, {
      "left" : "throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);",
      "right" : "throw JsonMappingException.from(jp, \"Unresolved forward reference but no identity info.\", reference);",
      "info" : "ThrowStatement[23495-23596]:ThrowStatement[23589-23690]"
    }, {
      "left" : "Referring referring = accumulator.handleUnresolvedReference(reference, key);",
      "right" : "Referring referring = accumulator.handleUnresolvedReference(reference, key);",
      "info" : "VariableDeclarationStatement[23615-23691]:VariableDeclarationStatement[23709-23785]"
    }, {
      "left" : "reference.getRoid().appendReferring(referring);",
      "right" : "reference.getRoid().appendReferring(referring);",
      "info" : "ExpressionStatement[23700-23747]:ExpressionStatement[23794-23841]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23759-23766]:Modifier[23853-23860]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[23767-23772]:Modifier[23861-23866]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[23773-23779]:Modifier[23867-23873]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[23780-23785]:TYPE_DECLARATION_KIND[23874-23879]"
    }, {
      "left" : "MapReferringAccumulator",
      "right" : "MapReferringAccumulator",
      "info" : "SimpleName[23786-23809]:SimpleName[23880-23903]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24077-24083]:Modifier[24171-24177]"
    }, {
      "left" : "MapReferringAccumulator",
      "right" : "MapReferringAccumulator",
      "info" : "SimpleName[24084-24107]:SimpleName[24178-24201]"
    }, {
      "left" : "Class<?> valueType",
      "right" : "Class<?> valueType",
      "info" : "SingleVariableDeclaration[24108-24126]:SingleVariableDeclaration[24202-24220]"
    }, {
      "left" : "Map<Object, Object> result",
      "right" : "Map<Object, Object> result",
      "info" : "SingleVariableDeclaration[24128-24154]:SingleVariableDeclaration[24222-24248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24156-24233]:Block[24250-24327]"
    }, {
      "left" : "_valueType = valueType;",
      "right" : "_valueType = valueType;",
      "info" : "ExpressionStatement[24170-24193]:ExpressionStatement[24264-24287]"
    }, {
      "left" : "_result = result;",
      "right" : "_result = result;",
      "info" : "ExpressionStatement[24206-24223]:ExpressionStatement[24300-24317]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24243-24249]:Modifier[24337-24343]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24250-24254]:PrimitiveType[24344-24348]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[24255-24258]:SimpleName[24349-24352]"
    }, {
      "left" : "Object key",
      "right" : "Object key",
      "info" : "SingleVariableDeclaration[24259-24269]:SingleVariableDeclaration[24353-24363]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[24271-24283]:SingleVariableDeclaration[24365-24377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24293-24542]:Block[24387-24636]"
    }, {
      "left" : "if (_accumulator.isEmpty())",
      "right" : "if (_accumulator.isEmpty())",
      "info" : "IfStatement[24307-24532]:IfStatement[24401-24626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24335-24391]:Block[24429-24485]"
    }, {
      "left" : "_result.put(key, value);",
      "right" : "_result.put(key, value);",
      "info" : "ExpressionStatement[24353-24377]:ExpressionStatement[24447-24471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24397-24532]:Block[24491-24626]"
    }, {
      "left" : "MapReferring ref = _accumulator.get(_accumulator.size() - 1);",
      "right" : "MapReferring ref = _accumulator.get(_accumulator.size() - 1);",
      "info" : "VariableDeclarationStatement[24415-24476]:VariableDeclarationStatement[24509-24570]"
    }, {
      "left" : "ref.next.put(key, value);",
      "right" : "ref.next.put(key, value);",
      "info" : "ExpressionStatement[24493-24518]:ExpressionStatement[24587-24612]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24552-24558]:Modifier[24646-24652]"
    }, {
      "left" : "Referring",
      "right" : "Referring",
      "info" : "SimpleType[24559-24568]:SimpleType[24653-24662]"
    }, {
      "left" : "handleUnresolvedReference",
      "right" : "handleUnresolvedReference",
      "info" : "SimpleName[24569-24594]:SimpleName[24663-24688]"
    }, {
      "left" : "UnresolvedForwardReference reference",
      "right" : "UnresolvedForwardReference reference",
      "info" : "SingleVariableDeclaration[24595-24631]:SingleVariableDeclaration[24689-24725]"
    }, {
      "left" : "Object key",
      "right" : "Object key",
      "info" : "SingleVariableDeclaration[24633-24643]:SingleVariableDeclaration[24727-24737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24653-24803]:Block[24747-24897]"
    }, {
      "left" : "MapReferring id = new MapReferring(this, reference, _valueType, key);",
      "right" : "MapReferring id = new MapReferring(this, reference, _valueType, key);",
      "info" : "VariableDeclarationStatement[24667-24736]:VariableDeclarationStatement[24761-24830]"
    }, {
      "left" : "_accumulator.add(id);",
      "right" : "_accumulator.add(id);",
      "info" : "ExpressionStatement[24749-24770]:ExpressionStatement[24843-24864]"
    }, {
      "left" : "return id;",
      "right" : "return id;",
      "info" : "ReturnStatement[24783-24793]:ReturnStatement[24877-24887]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24813-24819]:Modifier[24907-24913]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24820-24824]:PrimitiveType[24914-24918]"
    }, {
      "left" : "resolveForwardReference",
      "right" : "resolveForwardReference",
      "info" : "SimpleName[24825-24848]:SimpleName[24919-24942]"
    }, {
      "left" : "Object id",
      "right" : "Object id",
      "info" : "SingleVariableDeclaration[24849-24858]:SingleVariableDeclaration[24943-24952]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[24860-24872]:SingleVariableDeclaration[24954-24966]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24881-24892]:SimpleType[24975-24986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24901-25816]:Block[24995-25910]"
    }, {
      "left" : "Iterator<MapReferring> iterator = _accumulator.iterator();",
      "right" : "Iterator<MapReferring> iterator = _accumulator.iterator();",
      "info" : "VariableDeclarationStatement[24915-24973]:VariableDeclarationStatement[25009-25067]"
    }, {
      "left" : "Map<Object,Object> previous = _result;",
      "right" : "Map<Object,Object> previous = _result;",
      "info" : "VariableDeclarationStatement[25231-25269]:VariableDeclarationStatement[25325-25363]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[25282-25632]:WhileStatement[25376-25726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25309-25632]:Block[25403-25726]"
    }, {
      "left" : "MapReferring ref = iterator.next();",
      "right" : "MapReferring ref = iterator.next();",
      "info" : "VariableDeclarationStatement[25327-25362]:VariableDeclarationStatement[25421-25456]"
    }, {
      "left" : "if (ref.hasId(id))",
      "right" : "if (ref.hasId(id))",
      "info" : "IfStatement[25379-25581]:IfStatement[25473-25675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25398-25581]:Block[25492-25675]"
    }, {
      "left" : "iterator.remove();",
      "right" : "iterator.remove();",
      "info" : "ExpressionStatement[25420-25438]:ExpressionStatement[25514-25532]"
    }, {
      "left" : "previous.put(ref.key, value);",
      "right" : "previous.put(ref.key, value);",
      "info" : "ExpressionStatement[25459-25488]:ExpressionStatement[25553-25582]"
    }, {
      "left" : "previous.putAll(ref.next);",
      "right" : "previous.putAll(ref.next);",
      "info" : "ExpressionStatement[25509-25535]:ExpressionStatement[25603-25629]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[25556-25563]:ReturnStatement[25650-25657]"
    }, {
      "left" : "previous = ref.next;",
      "right" : "previous = ref.next;",
      "info" : "ExpressionStatement[25598-25618]:ExpressionStatement[25692-25712]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Trying to resolve a forward reference with id [\" + id\n                    + \"] that wasn't previously seen as unresolved.\");",
      "right" : "throw new IllegalArgumentException(\"Trying to resolve a forward reference with id [\" + id\n                    + \"] that wasn't previously seen as unresolved.\");",
      "info" : "ThrowStatement[25646-25806]:ThrowStatement[25740-25900]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26008-26015]:Modifier[26102-26109]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[26016-26021]:Modifier[26110-26115]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[26022-26028]:Modifier[26116-26122]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[26029-26034]:TYPE_DECLARATION_KIND[26123-26128]"
    }, {
      "left" : "MapReferring",
      "right" : "MapReferring",
      "info" : "SimpleName[26035-26047]:SimpleName[26129-26141]"
    }, {
      "left" : "Referring",
      "right" : "Referring",
      "info" : "SimpleType[26056-26065]:SimpleType[26150-26159]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[26259-26268]:Modifier[26353-26362]"
    }, {
      "left" : "MapReferring",
      "right" : "MapReferring",
      "info" : "SimpleName[26269-26281]:SimpleName[26363-26375]"
    }, {
      "left" : "MapReferringAccumulator parent",
      "right" : "MapReferringAccumulator parent",
      "info" : "SingleVariableDeclaration[26282-26312]:SingleVariableDeclaration[26376-26406]"
    }, {
      "left" : "UnresolvedForwardReference ref",
      "right" : "UnresolvedForwardReference ref",
      "info" : "SingleVariableDeclaration[26314-26344]:SingleVariableDeclaration[26408-26438]"
    }, {
      "left" : "Class<?> valueType",
      "right" : "Class<?> valueType",
      "info" : "SingleVariableDeclaration[26362-26380]:SingleVariableDeclaration[26456-26474]"
    }, {
      "left" : "Object key",
      "right" : "Object key",
      "info" : "SingleVariableDeclaration[26382-26392]:SingleVariableDeclaration[26476-26486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26402-26506]:Block[26496-26600]"
    }, {
      "left" : "super(ref, valueType);",
      "right" : "super(ref, valueType);",
      "info" : "SuperConstructorInvocation[26416-26438]:SuperConstructorInvocation[26510-26532]"
    }, {
      "left" : "_parent = parent;",
      "right" : "_parent = parent;",
      "info" : "ExpressionStatement[26451-26468]:ExpressionStatement[26545-26562]"
    }, {
      "left" : "this.key = key;",
      "right" : "this.key = key;",
      "info" : "ExpressionStatement[26481-26496]:ExpressionStatement[26575-26590]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26516-26525]:MarkerAnnotation[26610-26619]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26534-26540]:Modifier[26628-26634]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26541-26545]:PrimitiveType[26635-26639]"
    }, {
      "left" : "handleResolvedForwardReference",
      "right" : "handleResolvedForwardReference",
      "info" : "SimpleName[26546-26576]:SimpleName[26640-26670]"
    }, {
      "left" : "Object id",
      "right" : "Object id",
      "info" : "SingleVariableDeclaration[26577-26586]:SingleVariableDeclaration[26671-26680]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[26588-26600]:SingleVariableDeclaration[26682-26694]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[26609-26620]:SimpleType[26703-26714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26621-26688]:Block[26715-26782]"
    }, {
      "left" : "_parent.resolveForwardReference(id, value);",
      "right" : "_parent.resolveForwardReference(id, value);",
      "info" : "ExpressionStatement[26635-26678]:ExpressionStatement[26729-26772]"
    } ]
  },
  "interFileMappings" : { }
}