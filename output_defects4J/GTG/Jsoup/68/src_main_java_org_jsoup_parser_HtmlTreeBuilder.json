{
  "matchedElements" : [
 {
    "left" : "class : HtmlTreeBuilder",
    "right" : "class : HtmlTreeBuilder",
    "info" : "TypeDeclaration[517-25986]:TypeDeclaration[517-25896]"
  }, {
    "left" : "TagsSearchInScope",
    "right" : "TagsSearchInScope",
    "info" : "FieldDeclaration[742-868]:FieldDeclaration[742-868]"
  }, {
    "left" : "TagSearchList",
    "right" : "TagSearchList",
    "info" : "FieldDeclaration[873-936]:FieldDeclaration[873-936]"
  }, {
    "left" : "TagSearchButton",
    "right" : "TagSearchButton",
    "info" : "FieldDeclaration[941-1004]:FieldDeclaration[941-1004]"
  }, {
    "left" : "TagSearchTableScope",
    "right" : "TagSearchTableScope",
    "info" : "FieldDeclaration[1009-1083]:FieldDeclaration[1009-1083]"
  }, {
    "left" : "TagSearchSelectScope",
    "right" : "TagSearchSelectScope",
    "info" : "FieldDeclaration[1088-1168]:FieldDeclaration[1088-1168]"
  }, {
    "left" : "TagSearchEndTags",
    "right" : "TagSearchEndTags",
    "info" : "FieldDeclaration[1173-1284]:FieldDeclaration[1173-1284]"
  }, {
    "left" : "TagSearchSpecial",
    "right" : "TagSearchSpecial",
    "info" : "FieldDeclaration[1289-2100]:FieldDeclaration[1289-2100]"
  }, {
    "left" : "MaxScopeSearchDepth",
    "right" : "MaxScopeSearchDepth",
    "info" : "FieldDeclaration[2106-2156]:FieldDeclaration[2106-2156]"
  }, {
    "left" : "state",
    "right" : "state",
    "info" : "FieldDeclaration[2228-2263]:FieldDeclaration[2228-2263]"
  }, {
    "left" : "originalState",
    "right" : "originalState",
    "info" : "FieldDeclaration[2289-2332]:FieldDeclaration[2289-2332]"
  }, {
    "left" : "baseUriSetFromDoc",
    "right" : "baseUriSetFromDoc",
    "info" : "FieldDeclaration[2365-2399]:FieldDeclaration[2365-2399]"
  }, {
    "left" : "headElement",
    "right" : "headElement",
    "info" : "FieldDeclaration[2404-2432]:FieldDeclaration[2404-2432]"
  }, {
    "left" : "formElement",
    "right" : "formElement",
    "info" : "FieldDeclaration[2465-2497]:FieldDeclaration[2465-2497]"
  }, {
    "left" : "contextElement",
    "right" : "contextElement",
    "info" : "FieldDeclaration[2530-2561]:FieldDeclaration[2530-2561]"
  }, {
    "left" : "formattingElements",
    "right" : "formattingElements",
    "info" : "FieldDeclaration[2634-2680]:FieldDeclaration[2634-2680]"
  }, {
    "left" : "pendingTableCharacters",
    "right" : "pendingTableCharacters",
    "info" : "FieldDeclaration[2722-2766]:FieldDeclaration[2722-2766]"
  }, {
    "left" : "emptyEnd",
    "right" : "emptyEnd",
    "info" : "FieldDeclaration[2807-2837]:FieldDeclaration[2807-2837]"
  }, {
    "left" : "framesetOk",
    "right" : "framesetOk",
    "info" : "FieldDeclaration[2867-2894]:FieldDeclaration[2867-2894]"
  }, {
    "left" : "fosterInserts",
    "right" : "fosterInserts",
    "info" : "FieldDeclaration[2928-2958]:FieldDeclaration[2928-2958]"
  }, {
    "left" : "fragmentParsing",
    "right" : "fragmentParsing",
    "info" : "FieldDeclaration[3001-3033]:FieldDeclaration[3001-3033]"
  }, {
    "left" : "package HtmlTreeBuilder()",
    "right" : "package HtmlTreeBuilder()",
    "info" : "MethodDeclaration[3072-3092]:MethodDeclaration[3072-3092]"
  }, {
    "left" : "package defaultSettings() : ",
    "right" : "package defaultSettings() : ",
    "info" : "MethodDeclaration[3098-3179]:MethodDeclaration[3098-3179]"
  }, {
    "left" : "protected initialiseParse(input , baseUri , errors , settings ...) : void",
    "right" : "protected initialiseParse(input , baseUri , errors , settings ...) : void",
    "info" : "MethodDeclaration[3185-3908]:MethodDeclaration[3185-3908]"
  }, {
    "left" : "package parseFragment(inputFragment , context , baseUri , errors , settings ...) : ",
    "right" : "package parseFragment(inputFragment , context , baseUri , errors , settings ...) : ",
    "info" : "MethodDeclaration[3914-6105]:MethodDeclaration[3914-6105]"
  }, {
    "left" : "protected process(token ) : boolean",
    "right" : "protected process(token ) : boolean",
    "info" : "MethodDeclaration[6111-6249]:MethodDeclaration[6111-6249]"
  }, {
    "left" : "package process(token , state ) : boolean",
    "right" : "package process(token , state ) : boolean",
    "info" : "MethodDeclaration[6255-6392]:MethodDeclaration[6255-6392]"
  }, {
    "left" : "package transition(state ) : void",
    "right" : "package transition(state ) : void",
    "info" : "MethodDeclaration[6398-6477]:MethodDeclaration[6398-6477]"
  }, {
    "left" : "package state() : ",
    "right" : "package state() : ",
    "info" : "MethodDeclaration[6483-6541]:MethodDeclaration[6483-6541]"
  }, {
    "left" : "package markInsertionMode() : void",
    "right" : "package markInsertionMode() : void",
    "info" : "MethodDeclaration[6547-6610]:MethodDeclaration[6547-6610]"
  }, {
    "left" : "package originalState() : ",
    "right" : "package originalState() : ",
    "info" : "MethodDeclaration[6616-6690]:MethodDeclaration[6616-6690]"
  }, {
    "left" : "package framesetOk(framesetOk boolean) : void",
    "right" : "package framesetOk(framesetOk boolean) : void",
    "info" : "MethodDeclaration[6696-6777]:MethodDeclaration[6696-6777]"
  }, {
    "left" : "package framesetOk() : boolean",
    "right" : "package framesetOk() : boolean",
    "info" : "MethodDeclaration[6783-6838]:MethodDeclaration[6783-6838]"
  }, {
    "left" : "package getDocument() : ",
    "right" : "package getDocument() : ",
    "info" : "MethodDeclaration[6844-6894]:MethodDeclaration[6844-6894]"
  }, {
    "left" : "package getBaseUri() : ",
    "right" : "package getBaseUri() : ",
    "info" : "MethodDeclaration[6900-6951]:MethodDeclaration[6900-6951]"
  }, {
    "left" : "package maybeSetBaseUri(base ) : void",
    "right" : "package maybeSetBaseUri(base ) : void",
    "info" : "MethodDeclaration[6957-7412]:MethodDeclaration[6957-7412]"
  }, {
    "left" : "package isFragmentParsing() : boolean",
    "right" : "package isFragmentParsing() : boolean",
    "info" : "MethodDeclaration[7418-7485]:MethodDeclaration[7418-7485]"
  }, {
    "left" : "package error(state ) : void",
    "right" : "package error(state ) : void",
    "info" : "MethodDeclaration[7491-7702]:MethodDeclaration[7491-7702]"
  }, {
    "left" : "package insert(startTag ) : ",
    "right" : "package insert(startTag ) : ",
    "info" : "MethodDeclaration[7708-8510]:MethodDeclaration[7708-8510]"
  }, {
    "left" : "package insertStartTag(startTagName ) : ",
    "right" : "package insertStartTag(startTagName ) : ",
    "info" : "MethodDeclaration[8516-8686]:MethodDeclaration[8516-8686]"
  }, {
    "left" : "package insert(el ) : void",
    "right" : "package insert(el ) : void",
    "info" : "MethodDeclaration[8692-8770]:MethodDeclaration[8692-8770]"
  }, {
    "left" : "package insertEmpty(startTag ) : ",
    "right" : "package insertEmpty(startTag ) : ",
    "info" : "MethodDeclaration[8776-9329]:MethodDeclaration[8776-9329]"
  }, {
    "left" : "package insertForm(startTag , onStack boolean) : ",
    "right" : "package insertForm(startTag , onStack boolean) : ",
    "info" : "MethodDeclaration[9335-9661]:MethodDeclaration[9335-9661]"
  }, {
    "left" : "package insert(commentToken ) : void",
    "right" : "package insert(commentToken ) : void",
    "info" : "MethodDeclaration[9667-9806]:MethodDeclaration[9667-9806]"
  }, {
    "left" : "package insert(characterToken ) : void",
    "right" : "package insert(characterToken ) : void",
    "info" : "MethodDeclaration[9812-10340]:MethodDeclaration[9812-10340]"
  }, {
    "left" : "private insertNode(node ) : void",
    "right" : "private insertNode(node ) : void",
    "info" : "MethodDeclaration[10346-10923]:MethodDeclaration[10346-10923]"
  }, {
    "left" : "package pop() : ",
    "right" : "package pop() : ",
    "info" : "MethodDeclaration[10929-11020]:MethodDeclaration[10929-11020]"
  }, {
    "left" : "package push(element ) : void",
    "right" : "package push(element ) : void",
    "info" : "MethodDeclaration[11026-11088]:MethodDeclaration[11026-11088]"
  }, {
    "left" : "package getStack() : ",
    "right" : "package getStack() : ",
    "info" : "MethodDeclaration[11094-11153]:MethodDeclaration[11094-11153]"
  }, {
    "left" : "package onStack(el ) : boolean",
    "right" : "package onStack(el ) : boolean",
    "info" : "MethodDeclaration[11159-11238]:MethodDeclaration[11159-11238]"
  }, {
    "left" : "private isElementInQueue(queue , element ) : boolean",
    "right" : "private isElementInQueue(queue , element ) : boolean",
    "info" : "MethodDeclaration[11244-11539]:MethodDeclaration[11244-11539]"
  }, {
    "left" : "package getFromStack(elName ) : ",
    "right" : "package getFromStack(elName ) : ",
    "info" : "MethodDeclaration[11545-11814]:MethodDeclaration[11545-11814]"
  }, {
    "left" : "package removeFromStack(el ) : boolean",
    "right" : "package removeFromStack(el ) : boolean",
    "info" : "MethodDeclaration[11820-12105]:MethodDeclaration[11820-12105]"
  }, {
    "left" : "package popStackToClose(elName ) : void",
    "right" : "package popStackToClose(elName ) : void",
    "info" : "MethodDeclaration[12111-12368]:MethodDeclaration[12111-12368]"
  }, {
    "left" : "package popStackToClose() : void",
    "right" : "package popStackToClose() : void",
    "info" : "MethodDeclaration[12421-12686]:MethodDeclaration[12421-12686]"
  }, {
    "left" : "package popStackToBefore(elName ) : void",
    "right" : "package popStackToBefore(elName ) : void",
    "info" : "MethodDeclaration[12692-12991]:MethodDeclaration[12692-12991]"
  }, {
    "left" : "package clearStackToTableContext() : void",
    "right" : "package clearStackToTableContext() : void",
    "info" : "MethodDeclaration[12997-13074]:MethodDeclaration[12997-13074]"
  }, {
    "left" : "package clearStackToTableBodyContext() : void",
    "right" : "package clearStackToTableBodyContext() : void",
    "info" : "MethodDeclaration[13080-13191]:MethodDeclaration[13080-13191]"
  }, {
    "left" : "package clearStackToTableRowContext() : void",
    "right" : "package clearStackToTableRowContext() : void",
    "info" : "MethodDeclaration[13197-13286]:MethodDeclaration[13197-13286]"
  }, {
    "left" : "private clearStackToContext() : void",
    "right" : "private clearStackToContext() : void",
    "info" : "MethodDeclaration[13292-13633]:MethodDeclaration[13292-13633]"
  }, {
    "left" : "package aboveOnStack(el ) : ",
    "right" : "package aboveOnStack(el ) : ",
    "info" : "MethodDeclaration[13639-13925]:MethodDeclaration[13639-13925]"
  }, {
    "left" : "package insertOnStackAfter(after , in ) : void",
    "right" : "package insertOnStackAfter(after , in ) : void",
    "info" : "MethodDeclaration[13931-14093]:MethodDeclaration[13931-14093]"
  }, {
    "left" : "package replaceOnStack(out , in ) : void",
    "right" : "package replaceOnStack(out , in ) : void",
    "info" : "MethodDeclaration[14099-14191]:MethodDeclaration[14099-14191]"
  }, {
    "left" : "private replaceInQueue(queue , out , in ) : void",
    "right" : "private replaceInQueue(queue , out , in ) : void",
    "info" : "MethodDeclaration[14197-14383]:MethodDeclaration[14197-14383]"
  }, {
    "left" : "package resetInsertionMode() : void",
    "right" : "package resetInsertionMode() : void",
    "info" : "MethodDeclaration[14389-16385]:MethodDeclaration[14389-16385]"
  }, {
    "left" : "specificScopeTarget",
    "right" : "specificScopeTarget",
    "info" : "FieldDeclaration[16438-16484]:FieldDeclaration[16438-16484]"
  }, {
    "left" : "private inSpecificScope(targetName , baseTypes , extraTypes ...) : boolean",
    "right" : "private inSpecificScope(targetName , baseTypes , extraTypes ...) : boolean",
    "info" : "MethodDeclaration[16490-16710]:MethodDeclaration[16490-16710]"
  }, {
    "left" : "private inSpecificScope(targetNames , baseTypes , extraTypes ...) : boolean",
    "right" : "private inSpecificScope(targetNames , baseTypes , extraTypes ...) : boolean",
    "info" : "MethodDeclaration[16716-17695]:MethodDeclaration[16716-17605]"
  }, {
    "left" : "package inScope(targetNames ...) : boolean",
    "right" : "package inScope(targetNames ...) : boolean",
    "info" : "MethodDeclaration[17701-17816]:MethodDeclaration[17611-17726]"
  }, {
    "left" : "package inScope(targetName ) : boolean",
    "right" : "package inScope(targetName ) : boolean",
    "info" : "MethodDeclaration[17822-17906]:MethodDeclaration[17732-17816]"
  }, {
    "left" : "package inScope(targetName , extras ...) : boolean",
    "right" : "package inScope(targetName , extras ...) : boolean",
    "info" : "MethodDeclaration[17912-18178]:MethodDeclaration[17822-18088]"
  }, {
    "left" : "package inListItemScope(targetName ) : boolean",
    "right" : "package inListItemScope(targetName ) : boolean",
    "info" : "MethodDeclaration[18184-18285]:MethodDeclaration[18094-18195]"
  }, {
    "left" : "package inButtonScope(targetName ) : boolean",
    "right" : "package inButtonScope(targetName ) : boolean",
    "info" : "MethodDeclaration[18291-18392]:MethodDeclaration[18201-18302]"
  }, {
    "left" : "package inTableScope(targetName ) : boolean",
    "right" : "package inTableScope(targetName ) : boolean",
    "info" : "MethodDeclaration[18398-18516]:MethodDeclaration[18308-18426]"
  }, {
    "left" : "package inSelectScope(targetName ) : boolean",
    "right" : "package inSelectScope(targetName ) : boolean",
    "info" : "MethodDeclaration[18522-18977]:MethodDeclaration[18432-18887]"
  }, {
    "left" : "package setHeadElement(headElement ) : void",
    "right" : "package setHeadElement(headElement ) : void",
    "info" : "MethodDeclaration[18983-19071]:MethodDeclaration[18893-18981]"
  }, {
    "left" : "package getHeadElement() : ",
    "right" : "package getHeadElement() : ",
    "info" : "MethodDeclaration[19077-19137]:MethodDeclaration[18987-19047]"
  }, {
    "left" : "package isFosterInserts() : boolean",
    "right" : "package isFosterInserts() : boolean",
    "info" : "MethodDeclaration[19143-19206]:MethodDeclaration[19053-19116]"
  }, {
    "left" : "package setFosterInserts(fosterInserts boolean) : void",
    "right" : "package setFosterInserts(fosterInserts boolean) : void",
    "info" : "MethodDeclaration[19212-19308]:MethodDeclaration[19122-19218]"
  }, {
    "left" : "package getFormElement() : ",
    "right" : "package getFormElement() : ",
    "info" : "MethodDeclaration[19314-19378]:MethodDeclaration[19224-19288]"
  }, {
    "left" : "package setFormElement(formElement ) : void",
    "right" : "package setFormElement(formElement ) : void",
    "info" : "MethodDeclaration[19384-19476]:MethodDeclaration[19294-19386]"
  }, {
    "left" : "package newPendingTableCharacters() : void",
    "right" : "package newPendingTableCharacters() : void",
    "info" : "MethodDeclaration[19482-19574]:MethodDeclaration[19392-19484]"
  }, {
    "left" : "package getPendingTableCharacters() : ",
    "right" : "package getPendingTableCharacters() : ",
    "info" : "MethodDeclaration[19580-19667]:MethodDeclaration[19490-19577]"
  }, {
    "left" : "package setPendingTableCharacters(pendingTableCharacters ...) : void",
    "right" : "package setPendingTableCharacters(pendingTableCharacters ...) : void",
    "info" : "MethodDeclaration[19673-19810]:MethodDeclaration[19583-19720]"
  }, {
    "left" : "package generateImpliedEndTags(excludeTag ) : void",
    "right" : "package generateImpliedEndTags(excludeTag ) : void",
    "info" : "MethodDeclaration[19816-20658]:MethodDeclaration[19726-20568]"
  }, {
    "left" : "package generateImpliedEndTags() : void",
    "right" : "package generateImpliedEndTags() : void",
    "info" : "MethodDeclaration[20664-20739]:MethodDeclaration[20574-20649]"
  }, {
    "left" : "package isSpecial(el ) : boolean",
    "right" : "package isSpecial(el ) : boolean",
    "info" : "MethodDeclaration[20745-20954]:MethodDeclaration[20655-20864]"
  }, {
    "left" : "package lastFormattingElement() : ",
    "right" : "package lastFormattingElement() : ",
    "info" : "MethodDeclaration[20960-21106]:MethodDeclaration[20870-21016]"
  }, {
    "left" : "package removeLastFormattingElement() : ",
    "right" : "package removeLastFormattingElement() : ",
    "info" : "MethodDeclaration[21112-21317]:MethodDeclaration[21022-21227]"
  }, {
    "left" : "package pushActiveFormattingElements(in ) : void",
    "right" : "package pushActiveFormattingElements(in ) : void",
    "info" : "MethodDeclaration[21357-21863]:MethodDeclaration[21267-21773]"
  }, {
    "left" : "private isSameFormattingElement(a , b ) : boolean",
    "right" : "private isSameFormattingElement(a , b ) : boolean",
    "info" : "MethodDeclaration[21869-22251]:MethodDeclaration[21779-22161]"
  }, {
    "left" : "package reconstructFormattingElements() : void",
    "right" : "package reconstructFormattingElements() : void",
    "info" : "MethodDeclaration[22257-23758]:MethodDeclaration[22167-23668]"
  }, {
    "left" : "package clearFormattingElementsToLastMarker() : void",
    "right" : "package clearFormattingElementsToLastMarker() : void",
    "info" : "MethodDeclaration[23764-23979]:MethodDeclaration[23674-23889]"
  }, {
    "left" : "package removeFromActiveFormattingElements(el ) : void",
    "right" : "package removeFromActiveFormattingElements(el ) : void",
    "info" : "MethodDeclaration[23985-24297]:MethodDeclaration[23895-24207]"
  }, {
    "left" : "package isInActiveFormattingElements(el ) : boolean",
    "right" : "package isInActiveFormattingElements(el ) : boolean",
    "info" : "MethodDeclaration[24303-24416]:MethodDeclaration[24213-24326]"
  }, {
    "left" : "package getActiveFormattingElement(nodeName ) : ",
    "right" : "package getActiveFormattingElement(nodeName ) : ",
    "info" : "MethodDeclaration[24422-24793]:MethodDeclaration[24332-24703]"
  }, {
    "left" : "package replaceActiveFormattingElement(out , in ) : void",
    "right" : "package replaceActiveFormattingElement(out , in ) : void",
    "info" : "MethodDeclaration[24799-24920]:MethodDeclaration[24709-24830]"
  }, {
    "left" : "package insertMarkerToFormattingElements() : void",
    "right" : "package insertMarkerToFormattingElements() : void",
    "info" : "MethodDeclaration[24926-25011]:MethodDeclaration[24836-24921]"
  }, {
    "left" : "package insertInFosterParent(in ) : void",
    "right" : "package insertInFosterParent(in ) : void",
    "info" : "MethodDeclaration[25017-25736]:MethodDeclaration[24927-25646]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[25742-25984]:MethodDeclaration[25652-25894]"
  } ],
  "mappings" : [
 {
    "left" : "HtmlTreeBuilder",
    "right" : "HtmlTreeBuilder",
    "info" : "SimpleName[3072-3087]:SimpleName[3072-3087]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3090-3092]:Block[3090-3092]"
  }, {
    "left" : "ParseSettings",
    "right" : "ParseSettings",
    "info" : "SimpleType[3098-3111]:SimpleType[3098-3111]"
  }, {
    "left" : "defaultSettings",
    "right" : "defaultSettings",
    "info" : "SimpleName[3112-3127]:SimpleName[3112-3127]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3130-3179]:Block[3130-3179]"
  }, {
    "left" : "return ParseSettings.htmlDefault;",
    "right" : "return ParseSettings.htmlDefault;",
    "info" : "ReturnStatement[3140-3173]:ReturnStatement[3140-3173]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3185-3194]:MarkerAnnotation[3185-3194]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[3199-3208]:Modifier[3199-3208]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[3209-3213]:PrimitiveType[3209-3213]"
  }, {
    "left" : "initialiseParse",
    "right" : "initialiseParse",
    "info" : "SimpleName[3214-3229]:SimpleName[3214-3229]"
  }, {
    "left" : "Reader input",
    "right" : "Reader input",
    "info" : "SingleVariableDeclaration[3230-3242]:SingleVariableDeclaration[3230-3242]"
  }, {
    "left" : "String baseUri",
    "right" : "String baseUri",
    "info" : "SingleVariableDeclaration[3244-3258]:SingleVariableDeclaration[3244-3258]"
  }, {
    "left" : "ParseErrorList errors",
    "right" : "ParseErrorList errors",
    "info" : "SingleVariableDeclaration[3260-3281]:SingleVariableDeclaration[3260-3281]"
  }, {
    "left" : "ParseSettings settings",
    "right" : "ParseSettings settings",
    "info" : "SingleVariableDeclaration[3283-3305]:SingleVariableDeclaration[3283-3305]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3307-3908]:Block[3307-3908]"
  }, {
    "left" : "super.initialiseParse(input, baseUri, errors, settings);",
    "right" : "super.initialiseParse(input, baseUri, errors, settings);",
    "info" : "ExpressionStatement[3317-3373]:ExpressionStatement[3317-3373]"
  }, {
    "left" : "state = HtmlTreeBuilderState.Initial;",
    "right" : "state = HtmlTreeBuilderState.Initial;",
    "info" : "ExpressionStatement[3483-3520]:ExpressionStatement[3483-3520]"
  }, {
    "left" : "originalState = null;",
    "right" : "originalState = null;",
    "info" : "ExpressionStatement[3529-3550]:ExpressionStatement[3529-3550]"
  }, {
    "left" : "baseUriSetFromDoc = false;",
    "right" : "baseUriSetFromDoc = false;",
    "info" : "ExpressionStatement[3559-3585]:ExpressionStatement[3559-3585]"
  }, {
    "left" : "headElement = null;",
    "right" : "headElement = null;",
    "info" : "ExpressionStatement[3594-3613]:ExpressionStatement[3594-3613]"
  }, {
    "left" : "formElement = null;",
    "right" : "formElement = null;",
    "info" : "ExpressionStatement[3622-3641]:ExpressionStatement[3622-3641]"
  }, {
    "left" : "contextElement = null;",
    "right" : "contextElement = null;",
    "info" : "ExpressionStatement[3650-3672]:ExpressionStatement[3650-3672]"
  }, {
    "left" : "formattingElements = new ArrayList<>();",
    "right" : "formattingElements = new ArrayList<>();",
    "info" : "ExpressionStatement[3681-3720]:ExpressionStatement[3681-3720]"
  }, {
    "left" : "pendingTableCharacters = new ArrayList<>();",
    "right" : "pendingTableCharacters = new ArrayList<>();",
    "info" : "ExpressionStatement[3729-3772]:ExpressionStatement[3729-3772]"
  }, {
    "left" : "emptyEnd = new Token.EndTag();",
    "right" : "emptyEnd = new Token.EndTag();",
    "info" : "ExpressionStatement[3781-3811]:ExpressionStatement[3781-3811]"
  }, {
    "left" : "framesetOk = true;",
    "right" : "framesetOk = true;",
    "info" : "ExpressionStatement[3820-3838]:ExpressionStatement[3820-3838]"
  }, {
    "left" : "fosterInserts = false;",
    "right" : "fosterInserts = false;",
    "info" : "ExpressionStatement[3847-3869]:ExpressionStatement[3847-3869]"
  }, {
    "left" : "fragmentParsing = false;",
    "right" : "fragmentParsing = false;",
    "info" : "ExpressionStatement[3878-3902]:ExpressionStatement[3878-3902]"
  }, {
    "left" : "List<Node>",
    "right" : "List<Node>",
    "info" : "ParameterizedType[3914-3924]:ParameterizedType[3914-3924]"
  }, {
    "left" : "parseFragment",
    "right" : "parseFragment",
    "info" : "SimpleName[3925-3938]:SimpleName[3925-3938]"
  }, {
    "left" : "String inputFragment",
    "right" : "String inputFragment",
    "info" : "SingleVariableDeclaration[3939-3959]:SingleVariableDeclaration[3939-3959]"
  }, {
    "left" : "Element context",
    "right" : "Element context",
    "info" : "SingleVariableDeclaration[3961-3976]:SingleVariableDeclaration[3961-3976]"
  }, {
    "left" : "String baseUri",
    "right" : "String baseUri",
    "info" : "SingleVariableDeclaration[3978-3992]:SingleVariableDeclaration[3978-3992]"
  }, {
    "left" : "ParseErrorList errors",
    "right" : "ParseErrorList errors",
    "info" : "SingleVariableDeclaration[3994-4015]:SingleVariableDeclaration[3994-4015]"
  }, {
    "left" : "ParseSettings settings",
    "right" : "ParseSettings settings",
    "info" : "SingleVariableDeclaration[4017-4039]:SingleVariableDeclaration[4017-4039]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4041-6105]:Block[4041-6105]"
  }, {
    "left" : "state = HtmlTreeBuilderState.Initial;",
    "right" : "state = HtmlTreeBuilderState.Initial;",
    "info" : "ExpressionStatement[4082-4119]:ExpressionStatement[4082-4119]"
  }, {
    "left" : "initialiseParse(new StringReader(inputFragment), baseUri, errors, settings);",
    "right" : "initialiseParse(new StringReader(inputFragment), baseUri, errors, settings);",
    "info" : "ExpressionStatement[4128-4204]:ExpressionStatement[4128-4204]"
  }, {
    "left" : "contextElement = context;",
    "right" : "contextElement = context;",
    "info" : "ExpressionStatement[4213-4238]:ExpressionStatement[4213-4238]"
  }, {
    "left" : "fragmentParsing = true;",
    "right" : "fragmentParsing = true;",
    "info" : "ExpressionStatement[4247-4270]:ExpressionStatement[4247-4270]"
  }, {
    "left" : "Element root = null;",
    "right" : "Element root = null;",
    "info" : "VariableDeclarationStatement[4279-4299]:VariableDeclarationStatement[4279-4299]"
  }, {
    "left" : "if (context != null)",
    "right" : "if (context != null)",
    "info" : "IfStatement[4309-5960]:IfStatement[4309-5960]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4330-5960]:Block[4330-5960]"
  }, {
    "left" : "if (context.ownerDocument() != null)",
    "right" : "if (context.ownerDocument() != null)",
    "info" : "IfStatement[4344-4467]:IfStatement[4344-4467]"
  }, {
    "left" : "doc.quirksMode(context.ownerDocument().quirksMode());",
    "right" : "doc.quirksMode(context.ownerDocument().quirksMode());",
    "info" : "ExpressionStatement[4414-4467]:ExpressionStatement[4414-4467]"
  }, {
    "left" : "String contextTag = context.tagName();",
    "right" : "String contextTag = context.tagName();",
    "info" : "VariableDeclarationStatement[4528-4566]:VariableDeclarationStatement[4528-4566]"
  }, {
    "left" : "if (StringUtil.in(contextTag, \"title\", \"textarea\"))",
    "right" : "if (StringUtil.in(contextTag, \"title\", \"textarea\"))",
    "info" : "IfStatement[4579-5299]:IfStatement[4579-5299]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Rcdata);",
    "right" : "tokeniser.transition(TokeniserState.Rcdata);",
    "info" : "ExpressionStatement[4647-4691]:ExpressionStatement[4647-4691]"
  }, {
    "left" : "if (StringUtil.in(contextTag, \"iframe\", \"noembed\", \"noframes\", \"style\", \"xmp\"))",
    "right" : "if (StringUtil.in(contextTag, \"iframe\", \"noembed\", \"noframes\", \"style\", \"xmp\"))",
    "info" : "IfStatement[4709-5299]:IfStatement[4709-5299]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Rawtext);",
    "right" : "tokeniser.transition(TokeniserState.Rawtext);",
    "info" : "ExpressionStatement[4805-4850]:ExpressionStatement[4805-4850]"
  }, {
    "left" : "if (contextTag.equals(\"script\"))",
    "right" : "if (contextTag.equals(\"script\"))",
    "info" : "IfStatement[4868-5299]:IfStatement[4868-5299]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.ScriptData);",
    "right" : "tokeniser.transition(TokeniserState.ScriptData);",
    "info" : "ExpressionStatement[4917-4965]:ExpressionStatement[4917-4965]"
  }, {
    "left" : "if (contextTag.equals((\"noscript\")))",
    "right" : "if (contextTag.equals((\"noscript\")))",
    "info" : "IfStatement[4983-5299]:IfStatement[4983-5299]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Data);",
    "right" : "tokeniser.transition(TokeniserState.Data);",
    "info" : "ExpressionStatement[5036-5078]:ExpressionStatement[5036-5078]"
  }, {
    "left" : "if (contextTag.equals(\"plaintext\"))",
    "right" : "if (contextTag.equals(\"plaintext\"))",
    "info" : "IfStatement[5129-5299]:IfStatement[5129-5299]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Data);",
    "right" : "tokeniser.transition(TokeniserState.Data);",
    "info" : "ExpressionStatement[5181-5223]:ExpressionStatement[5181-5223]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Data);",
    "right" : "tokeniser.transition(TokeniserState.Data);",
    "info" : "ExpressionStatement[5257-5299]:ExpressionStatement[5257-5299]"
  }, {
    "left" : "root = new Element(Tag.valueOf(\"html\", settings), baseUri);",
    "right" : "root = new Element(Tag.valueOf(\"html\", settings), baseUri);",
    "info" : "ExpressionStatement[5324-5383]:ExpressionStatement[5324-5383]"
  }, {
    "left" : "doc.appendChild(root);",
    "right" : "doc.appendChild(root);",
    "info" : "ExpressionStatement[5396-5418]:ExpressionStatement[5396-5418]"
  }, {
    "left" : "stack.add(root);",
    "right" : "stack.add(root);",
    "info" : "ExpressionStatement[5431-5447]:ExpressionStatement[5431-5447]"
  }, {
    "left" : "resetInsertionMode();",
    "right" : "resetInsertionMode();",
    "info" : "ExpressionStatement[5460-5481]:ExpressionStatement[5460-5481]"
  }, {
    "left" : "Elements contextChain = context.parents();",
    "right" : "Elements contextChain = context.parents();",
    "info" : "VariableDeclarationStatement[5649-5691]:VariableDeclarationStatement[5649-5691]"
  }, {
    "left" : "contextChain.add(0, context);",
    "right" : "contextChain.add(0, context);",
    "info" : "ExpressionStatement[5704-5733]:ExpressionStatement[5704-5733]"
  }, {
    "left" : "for (Element parent: contextChain)",
    "right" : "for (Element parent: contextChain)",
    "info" : "EnhancedForStatement[5746-5950]:EnhancedForStatement[5746-5950]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5781-5950]:Block[5781-5950]"
  }, {
    "left" : "if (parent instanceof FormElement)",
    "right" : "if (parent instanceof FormElement)",
    "info" : "IfStatement[5799-5936]:IfStatement[5799-5936]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5834-5936]:Block[5834-5936]"
  }, {
    "left" : "formElement = (FormElement) parent;",
    "right" : "formElement = (FormElement) parent;",
    "info" : "ExpressionStatement[5856-5891]:ExpressionStatement[5856-5891]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[5912-5918]:BreakStatement[5912-5918]"
  }, {
    "left" : "runParser();",
    "right" : "runParser();",
    "info" : "ExpressionStatement[5970-5982]:ExpressionStatement[5970-5982]"
  }, {
    "left" : "if (context != null)",
    "right" : "if (context != null)",
    "info" : "IfStatement[5991-6099]:IfStatement[5991-6099]"
  }, {
    "left" : "return root.childNodes();",
    "right" : "return root.childNodes();",
    "info" : "ReturnStatement[6024-6049]:ReturnStatement[6024-6049]"
  }, {
    "left" : "return doc.childNodes();",
    "right" : "return doc.childNodes();",
    "info" : "ReturnStatement[6075-6099]:ReturnStatement[6075-6099]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6111-6120]:MarkerAnnotation[6111-6120]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[6125-6134]:Modifier[6125-6134]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6135-6142]:PrimitiveType[6135-6142]"
  }, {
    "left" : "process",
    "right" : "process",
    "info" : "SimpleName[6143-6150]:SimpleName[6143-6150]"
  }, {
    "left" : "Token token",
    "right" : "Token token",
    "info" : "SingleVariableDeclaration[6151-6162]:SingleVariableDeclaration[6151-6162]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6164-6249]:Block[6164-6249]"
  }, {
    "left" : "currentToken = token;",
    "right" : "currentToken = token;",
    "info" : "ExpressionStatement[6174-6195]:ExpressionStatement[6174-6195]"
  }, {
    "left" : "return this.state.process(token, this);",
    "right" : "return this.state.process(token, this);",
    "info" : "ReturnStatement[6204-6243]:ReturnStatement[6204-6243]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6255-6262]:PrimitiveType[6255-6262]"
  }, {
    "left" : "process",
    "right" : "process",
    "info" : "SimpleName[6263-6270]:SimpleName[6263-6270]"
  }, {
    "left" : "Token token",
    "right" : "Token token",
    "info" : "SingleVariableDeclaration[6271-6282]:SingleVariableDeclaration[6271-6282]"
  }, {
    "left" : "HtmlTreeBuilderState state",
    "right" : "HtmlTreeBuilderState state",
    "info" : "SingleVariableDeclaration[6284-6310]:SingleVariableDeclaration[6284-6310]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6312-6392]:Block[6312-6392]"
  }, {
    "left" : "currentToken = token;",
    "right" : "currentToken = token;",
    "info" : "ExpressionStatement[6322-6343]:ExpressionStatement[6322-6343]"
  }, {
    "left" : "return state.process(token, this);",
    "right" : "return state.process(token, this);",
    "info" : "ReturnStatement[6352-6386]:ReturnStatement[6352-6386]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6398-6402]:PrimitiveType[6398-6402]"
  }, {
    "left" : "transition",
    "right" : "transition",
    "info" : "SimpleName[6403-6413]:SimpleName[6403-6413]"
  }, {
    "left" : "HtmlTreeBuilderState state",
    "right" : "HtmlTreeBuilderState state",
    "info" : "SingleVariableDeclaration[6414-6440]:SingleVariableDeclaration[6414-6440]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6442-6477]:Block[6442-6477]"
  }, {
    "left" : "this.state = state;",
    "right" : "this.state = state;",
    "info" : "ExpressionStatement[6452-6471]:ExpressionStatement[6452-6471]"
  }, {
    "left" : "HtmlTreeBuilderState",
    "right" : "HtmlTreeBuilderState",
    "info" : "SimpleType[6483-6503]:SimpleType[6483-6503]"
  }, {
    "left" : "state",
    "right" : "state",
    "info" : "SimpleName[6504-6509]:SimpleName[6504-6509]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6512-6541]:Block[6512-6541]"
  }, {
    "left" : "return state;",
    "right" : "return state;",
    "info" : "ReturnStatement[6522-6535]:ReturnStatement[6522-6535]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6547-6551]:PrimitiveType[6547-6551]"
  }, {
    "left" : "markInsertionMode",
    "right" : "markInsertionMode",
    "info" : "SimpleName[6552-6569]:SimpleName[6552-6569]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6572-6610]:Block[6572-6610]"
  }, {
    "left" : "originalState = state;",
    "right" : "originalState = state;",
    "info" : "ExpressionStatement[6582-6604]:ExpressionStatement[6582-6604]"
  }, {
    "left" : "HtmlTreeBuilderState",
    "right" : "HtmlTreeBuilderState",
    "info" : "SimpleType[6616-6636]:SimpleType[6616-6636]"
  }, {
    "left" : "originalState",
    "right" : "originalState",
    "info" : "SimpleName[6637-6650]:SimpleName[6637-6650]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6653-6690]:Block[6653-6690]"
  }, {
    "left" : "return originalState;",
    "right" : "return originalState;",
    "info" : "ReturnStatement[6663-6684]:ReturnStatement[6663-6684]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6696-6700]:PrimitiveType[6696-6700]"
  }, {
    "left" : "framesetOk",
    "right" : "framesetOk",
    "info" : "SimpleName[6701-6711]:SimpleName[6701-6711]"
  }, {
    "left" : "boolean framesetOk",
    "right" : "boolean framesetOk",
    "info" : "SingleVariableDeclaration[6712-6730]:SingleVariableDeclaration[6712-6730]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6732-6777]:Block[6732-6777]"
  }, {
    "left" : "this.framesetOk = framesetOk;",
    "right" : "this.framesetOk = framesetOk;",
    "info" : "ExpressionStatement[6742-6771]:ExpressionStatement[6742-6771]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6783-6790]:PrimitiveType[6783-6790]"
  }, {
    "left" : "framesetOk",
    "right" : "framesetOk",
    "info" : "SimpleName[6791-6801]:SimpleName[6791-6801]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6804-6838]:Block[6804-6838]"
  }, {
    "left" : "return framesetOk;",
    "right" : "return framesetOk;",
    "info" : "ReturnStatement[6814-6832]:ReturnStatement[6814-6832]"
  }, {
    "left" : "Document",
    "right" : "Document",
    "info" : "SimpleType[6844-6852]:SimpleType[6844-6852]"
  }, {
    "left" : "getDocument",
    "right" : "getDocument",
    "info" : "SimpleName[6853-6864]:SimpleName[6853-6864]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6867-6894]:Block[6867-6894]"
  }, {
    "left" : "return doc;",
    "right" : "return doc;",
    "info" : "ReturnStatement[6877-6888]:ReturnStatement[6877-6888]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[6900-6906]:SimpleType[6900-6906]"
  }, {
    "left" : "getBaseUri",
    "right" : "getBaseUri",
    "info" : "SimpleName[6907-6917]:SimpleName[6907-6917]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6920-6951]:Block[6920-6951]"
  }, {
    "left" : "return baseUri;",
    "right" : "return baseUri;",
    "info" : "ReturnStatement[6930-6945]:ReturnStatement[6930-6945]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6957-6961]:PrimitiveType[6957-6961]"
  }, {
    "left" : "maybeSetBaseUri",
    "right" : "maybeSetBaseUri",
    "info" : "SimpleName[6962-6977]:SimpleName[6962-6977]"
  }, {
    "left" : "Element base",
    "right" : "Element base",
    "info" : "SingleVariableDeclaration[6978-6990]:SingleVariableDeclaration[6978-6990]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6992-7412]:Block[6992-7412]"
  }, {
    "left" : "if (baseUriSetFromDoc)",
    "right" : "if (baseUriSetFromDoc)",
    "info" : "IfStatement[7002-7093]:IfStatement[7002-7093]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[7086-7093]:ReturnStatement[7086-7093]"
  }, {
    "left" : "String href = base.absUrl(\"href\");",
    "right" : "String href = base.absUrl(\"href\");",
    "info" : "VariableDeclarationStatement[7103-7137]:VariableDeclarationStatement[7103-7137]"
  }, {
    "left" : "if (href.length() != 0)",
    "right" : "if (href.length() != 0)",
    "info" : "IfStatement[7146-7406]:IfStatement[7146-7406]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7170-7406]:Block[7170-7406]"
  }, {
    "left" : "baseUri = href;",
    "right" : "baseUri = href;",
    "info" : "ExpressionStatement[7212-7227]:ExpressionStatement[7212-7227]"
  }, {
    "left" : "baseUriSetFromDoc = true;",
    "right" : "baseUriSetFromDoc = true;",
    "info" : "ExpressionStatement[7240-7265]:ExpressionStatement[7240-7265]"
  }, {
    "left" : "doc.setBaseUri(href);",
    "right" : "doc.setBaseUri(href);",
    "info" : "ExpressionStatement[7278-7299]:ExpressionStatement[7278-7299]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[7418-7425]:PrimitiveType[7418-7425]"
  }, {
    "left" : "isFragmentParsing",
    "right" : "isFragmentParsing",
    "info" : "SimpleName[7426-7443]:SimpleName[7426-7443]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7446-7485]:Block[7446-7485]"
  }, {
    "left" : "return fragmentParsing;",
    "right" : "return fragmentParsing;",
    "info" : "ReturnStatement[7456-7479]:ReturnStatement[7456-7479]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7491-7495]:PrimitiveType[7491-7495]"
  }, {
    "left" : "error",
    "right" : "error",
    "info" : "SimpleName[7496-7501]:SimpleName[7496-7501]"
  }, {
    "left" : "HtmlTreeBuilderState state",
    "right" : "HtmlTreeBuilderState state",
    "info" : "SingleVariableDeclaration[7502-7528]:SingleVariableDeclaration[7502-7528]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7530-7702]:Block[7530-7702]"
  }, {
    "left" : "if (errors.canAddError())",
    "right" : "if (errors.canAddError())",
    "info" : "IfStatement[7540-7696]:IfStatement[7540-7696]"
  }, {
    "left" : "errors.add(new ParseError(reader.pos(), \"Unexpected token [%s] when in state [%s]\", currentToken.tokenType(), state));",
    "right" : "errors.add(new ParseError(reader.pos(), \"Unexpected token [%s] when in state [%s]\", currentToken.tokenType(), state));",
    "info" : "ExpressionStatement[7578-7696]:ExpressionStatement[7578-7696]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[7708-7715]:SimpleType[7708-7715]"
  }, {
    "left" : "insert",
    "right" : "insert",
    "info" : "SimpleName[7716-7722]:SimpleName[7716-7722]"
  }, {
    "left" : "Token.StartTag startTag",
    "right" : "Token.StartTag startTag",
    "info" : "SingleVariableDeclaration[7723-7746]:SingleVariableDeclaration[7723-7746]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7748-8510]:Block[7748-8510]"
  }, {
    "left" : "if (startTag.isSelfClosing())",
    "right" : "if (startTag.isSelfClosing())",
    "info" : "IfStatement[7910-8322]:IfStatement[7910-8322]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7940-8322]:Block[7940-8322]"
  }, {
    "left" : "Element el = insertEmpty(startTag);",
    "right" : "Element el = insertEmpty(startTag);",
    "info" : "VariableDeclarationStatement[7954-7989]:VariableDeclarationStatement[7954-7989]"
  }, {
    "left" : "stack.add(el);",
    "right" : "stack.add(el);",
    "info" : "ExpressionStatement[8002-8016]:ExpressionStatement[8002-8016]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Data);",
    "right" : "tokeniser.transition(TokeniserState.Data);",
    "info" : "ExpressionStatement[8029-8071]:ExpressionStatement[8029-8071]"
  }, {
    "left" : "tokeniser.emit(emptyEnd.reset().name(el.tagName()));",
    "right" : "tokeniser.emit(emptyEnd.reset().name(el.tagName()));",
    "info" : "ExpressionStatement[8155-8207]:ExpressionStatement[8155-8207]"
  }, {
    "left" : "return el;",
    "right" : "return el;",
    "info" : "ReturnStatement[8302-8312]:ReturnStatement[8302-8312]"
  }, {
    "left" : "Element el = new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));",
    "right" : "Element el = new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));",
    "info" : "VariableDeclarationStatement[8340-8465]:VariableDeclarationStatement[8340-8465]"
  }, {
    "left" : "insert(el);",
    "right" : "insert(el);",
    "info" : "ExpressionStatement[8474-8485]:ExpressionStatement[8474-8485]"
  }, {
    "left" : "return el;",
    "right" : "return el;",
    "info" : "ReturnStatement[8494-8504]:ReturnStatement[8494-8504]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[8516-8523]:SimpleType[8516-8523]"
  }, {
    "left" : "insertStartTag",
    "right" : "insertStartTag",
    "info" : "SimpleName[8524-8538]:SimpleName[8524-8538]"
  }, {
    "left" : "String startTagName",
    "right" : "String startTagName",
    "info" : "SingleVariableDeclaration[8539-8558]:SingleVariableDeclaration[8539-8558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8560-8686]:Block[8560-8686]"
  }, {
    "left" : "Element el = new Element(Tag.valueOf(startTagName, settings), baseUri);",
    "right" : "Element el = new Element(Tag.valueOf(startTagName, settings), baseUri);",
    "info" : "VariableDeclarationStatement[8570-8641]:VariableDeclarationStatement[8570-8641]"
  }, {
    "left" : "insert(el);",
    "right" : "insert(el);",
    "info" : "ExpressionStatement[8650-8661]:ExpressionStatement[8650-8661]"
  }, {
    "left" : "return el;",
    "right" : "return el;",
    "info" : "ReturnStatement[8670-8680]:ReturnStatement[8670-8680]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8692-8696]:PrimitiveType[8692-8696]"
  }, {
    "left" : "insert",
    "right" : "insert",
    "info" : "SimpleName[8697-8703]:SimpleName[8697-8703]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[8704-8714]:SingleVariableDeclaration[8704-8714]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8716-8770]:Block[8716-8770]"
  }, {
    "left" : "insertNode(el);",
    "right" : "insertNode(el);",
    "info" : "ExpressionStatement[8726-8741]:ExpressionStatement[8726-8741]"
  }, {
    "left" : "stack.add(el);",
    "right" : "stack.add(el);",
    "info" : "ExpressionStatement[8750-8764]:ExpressionStatement[8750-8764]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[8776-8783]:SimpleType[8776-8783]"
  }, {
    "left" : "insertEmpty",
    "right" : "insertEmpty",
    "info" : "SimpleName[8784-8795]:SimpleName[8784-8795]"
  }, {
    "left" : "Token.StartTag startTag",
    "right" : "Token.StartTag startTag",
    "info" : "SingleVariableDeclaration[8796-8819]:SingleVariableDeclaration[8796-8819]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8821-9329]:Block[8821-9329]"
  }, {
    "left" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
    "right" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
    "info" : "VariableDeclarationStatement[8831-8880]:VariableDeclarationStatement[8831-8880]"
  }, {
    "left" : "Element el = new Element(tag, baseUri, startTag.attributes);",
    "right" : "Element el = new Element(tag, baseUri, startTag.attributes);",
    "info" : "VariableDeclarationStatement[8889-8949]:VariableDeclarationStatement[8889-8949]"
  }, {
    "left" : "insertNode(el);",
    "right" : "insertNode(el);",
    "info" : "ExpressionStatement[8958-8973]:ExpressionStatement[8958-8973]"
  }, {
    "left" : "if (startTag.isSelfClosing())",
    "right" : "if (startTag.isSelfClosing())",
    "info" : "IfStatement[8982-9304]:IfStatement[8982-9304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9012-9304]:Block[9012-9304]"
  }, {
    "left" : "if (tag.isKnownTag())",
    "right" : "if (tag.isKnownTag())",
    "info" : "IfStatement[9026-9294]:IfStatement[9026-9294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9048-9182]:Block[9048-9182]"
  }, {
    "left" : "if (!tag.isEmpty())",
    "right" : "if (!tag.isEmpty())",
    "info" : "IfStatement[9066-9168]:IfStatement[9066-9168]"
  }, {
    "left" : "tokeniser.error(\"Tag cannot be self closing; not a void tag\");",
    "right" : "tokeniser.error(\"Tag cannot be self closing; not a void tag\");",
    "info" : "ExpressionStatement[9106-9168]:ExpressionStatement[9106-9168]"
  }, {
    "left" : "tag.setSelfClosing();",
    "right" : "tag.setSelfClosing();",
    "info" : "ExpressionStatement[9273-9294]:ExpressionStatement[9273-9294]"
  }, {
    "left" : "return el;",
    "right" : "return el;",
    "info" : "ReturnStatement[9313-9323]:ReturnStatement[9313-9323]"
  }, {
    "left" : "FormElement",
    "right" : "FormElement",
    "info" : "SimpleType[9335-9346]:SimpleType[9335-9346]"
  }, {
    "left" : "insertForm",
    "right" : "insertForm",
    "info" : "SimpleName[9347-9357]:SimpleName[9347-9357]"
  }, {
    "left" : "Token.StartTag startTag",
    "right" : "Token.StartTag startTag",
    "info" : "SingleVariableDeclaration[9358-9381]:SingleVariableDeclaration[9358-9381]"
  }, {
    "left" : "boolean onStack",
    "right" : "boolean onStack",
    "info" : "SingleVariableDeclaration[9383-9398]:SingleVariableDeclaration[9383-9398]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9400-9661]:Block[9400-9661]"
  }, {
    "left" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
    "right" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
    "info" : "VariableDeclarationStatement[9410-9459]:VariableDeclarationStatement[9410-9459]"
  }, {
    "left" : "FormElement el = new FormElement(tag, baseUri, startTag.attributes);",
    "right" : "FormElement el = new FormElement(tag, baseUri, startTag.attributes);",
    "info" : "VariableDeclarationStatement[9468-9536]:VariableDeclarationStatement[9468-9536]"
  }, {
    "left" : "setFormElement(el);",
    "right" : "setFormElement(el);",
    "info" : "ExpressionStatement[9545-9564]:ExpressionStatement[9545-9564]"
  }, {
    "left" : "insertNode(el);",
    "right" : "insertNode(el);",
    "info" : "ExpressionStatement[9573-9588]:ExpressionStatement[9573-9588]"
  }, {
    "left" : "if (onStack)",
    "right" : "if (onStack)",
    "info" : "IfStatement[9597-9636]:IfStatement[9597-9636]"
  }, {
    "left" : "stack.add(el);",
    "right" : "stack.add(el);",
    "info" : "ExpressionStatement[9622-9636]:ExpressionStatement[9622-9636]"
  }, {
    "left" : "return el;",
    "right" : "return el;",
    "info" : "ReturnStatement[9645-9655]:ReturnStatement[9645-9655]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9667-9671]:PrimitiveType[9667-9671]"
  }, {
    "left" : "insert",
    "right" : "insert",
    "info" : "SimpleName[9672-9678]:SimpleName[9672-9678]"
  }, {
    "left" : "Token.Comment commentToken",
    "right" : "Token.Comment commentToken",
    "info" : "SingleVariableDeclaration[9679-9705]:SingleVariableDeclaration[9679-9705]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9707-9806]:Block[9707-9806]"
  }, {
    "left" : "Comment comment = new Comment(commentToken.getData());",
    "right" : "Comment comment = new Comment(commentToken.getData());",
    "info" : "VariableDeclarationStatement[9717-9771]:VariableDeclarationStatement[9717-9771]"
  }, {
    "left" : "insertNode(comment);",
    "right" : "insertNode(comment);",
    "info" : "ExpressionStatement[9780-9800]:ExpressionStatement[9780-9800]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9812-9816]:PrimitiveType[9812-9816]"
  }, {
    "left" : "insert",
    "right" : "insert",
    "info" : "SimpleName[9817-9823]:SimpleName[9817-9823]"
  }, {
    "left" : "Token.Character characterToken",
    "right" : "Token.Character characterToken",
    "info" : "SingleVariableDeclaration[9824-9854]:SingleVariableDeclaration[9824-9854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9856-10340]:Block[9856-10340]"
  }, {
    "left" : "Node node;",
    "right" : "Node node;",
    "info" : "VariableDeclarationStatement[9866-9876]:VariableDeclarationStatement[9866-9876]"
  }, {
    "left" : "String tagName = currentElement().tagName();",
    "right" : "String tagName = currentElement().tagName();",
    "info" : "VariableDeclarationStatement[9962-10006]:VariableDeclarationStatement[9962-10006]"
  }, {
    "left" : "if (tagName.equals(\"script\") || tagName.equals(\"style\"))",
    "right" : "if (tagName.equals(\"script\") || tagName.equals(\"style\"))",
    "info" : "IfStatement[10015-10202]:IfStatement[10015-10202]"
  }, {
    "left" : "node = new DataNode(characterToken.getData());",
    "right" : "node = new DataNode(characterToken.getData());",
    "info" : "ExpressionStatement[10084-10130]:ExpressionStatement[10084-10130]"
  }, {
    "left" : "node = new TextNode(characterToken.getData());",
    "right" : "node = new TextNode(characterToken.getData());",
    "info" : "ExpressionStatement[10156-10202]:ExpressionStatement[10156-10202]"
  }, {
    "left" : "currentElement().appendChild(node);",
    "right" : "currentElement().appendChild(node);",
    "info" : "ExpressionStatement[10211-10246]:ExpressionStatement[10211-10246]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[10346-10353]:Modifier[10346-10353]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[10354-10358]:PrimitiveType[10354-10358]"
  }, {
    "left" : "insertNode",
    "right" : "insertNode",
    "info" : "SimpleName[10359-10369]:SimpleName[10359-10369]"
  }, {
    "left" : "Node node",
    "right" : "Node node",
    "info" : "SingleVariableDeclaration[10370-10379]:SingleVariableDeclaration[10370-10379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10381-10923]:Block[10381-10923]"
  }, {
    "left" : "if (stack.size() == 0)",
    "right" : "if (stack.size() == 0)",
    "info" : "IfStatement[10484-10678]:IfStatement[10484-10678]"
  }, {
    "left" : "doc.appendChild(node);",
    "right" : "doc.appendChild(node);",
    "info" : "ExpressionStatement[10519-10541]:ExpressionStatement[10519-10541]"
  }, {
    "left" : "if (isFosterInserts())",
    "right" : "if (isFosterInserts())",
    "info" : "IfStatement[10555-10678]:IfStatement[10555-10678]"
  }, {
    "left" : "insertInFosterParent(node);",
    "right" : "insertInFosterParent(node);",
    "info" : "ExpressionStatement[10590-10617]:ExpressionStatement[10590-10617]"
  }, {
    "left" : "currentElement().appendChild(node);",
    "right" : "currentElement().appendChild(node);",
    "info" : "ExpressionStatement[10643-10678]:ExpressionStatement[10643-10678]"
  }, {
    "left" : "if (node instanceof Element && ((Element) node).tag().isFormListed())",
    "right" : "if (node instanceof Element && ((Element) node).tag().isFormListed())",
    "info" : "IfStatement[10743-10917]:IfStatement[10743-10917]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10813-10917]:Block[10813-10917]"
  }, {
    "left" : "if (formElement != null)",
    "right" : "if (formElement != null)",
    "info" : "IfStatement[10827-10907]:IfStatement[10827-10907]"
  }, {
    "left" : "formElement.addElement((Element) node);",
    "right" : "formElement.addElement((Element) node);",
    "info" : "ExpressionStatement[10868-10907]:ExpressionStatement[10868-10907]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[10929-10936]:SimpleType[10929-10936]"
  }, {
    "left" : "pop",
    "right" : "pop",
    "info" : "SimpleName[10937-10940]:SimpleName[10937-10940]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10943-11020]:Block[10943-11020]"
  }, {
    "left" : "int size = stack.size();",
    "right" : "int size = stack.size();",
    "info" : "VariableDeclarationStatement[10953-10977]:VariableDeclarationStatement[10953-10977]"
  }, {
    "left" : "return stack.remove(size-1);",
    "right" : "return stack.remove(size-1);",
    "info" : "ReturnStatement[10986-11014]:ReturnStatement[10986-11014]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11026-11030]:PrimitiveType[11026-11030]"
  }, {
    "left" : "push",
    "right" : "push",
    "info" : "SimpleName[11031-11035]:SimpleName[11031-11035]"
  }, {
    "left" : "Element element",
    "right" : "Element element",
    "info" : "SingleVariableDeclaration[11036-11051]:SingleVariableDeclaration[11036-11051]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11053-11088]:Block[11053-11088]"
  }, {
    "left" : "stack.add(element);",
    "right" : "stack.add(element);",
    "info" : "ExpressionStatement[11063-11082]:ExpressionStatement[11063-11082]"
  }, {
    "left" : "ArrayList<Element>",
    "right" : "ArrayList<Element>",
    "info" : "ParameterizedType[11094-11112]:ParameterizedType[11094-11112]"
  }, {
    "left" : "getStack",
    "right" : "getStack",
    "info" : "SimpleName[11113-11121]:SimpleName[11113-11121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11124-11153]:Block[11124-11153]"
  }, {
    "left" : "return stack;",
    "right" : "return stack;",
    "info" : "ReturnStatement[11134-11147]:ReturnStatement[11134-11147]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[11159-11166]:PrimitiveType[11159-11166]"
  }, {
    "left" : "onStack",
    "right" : "onStack",
    "info" : "SimpleName[11167-11174]:SimpleName[11167-11174]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[11175-11185]:SingleVariableDeclaration[11175-11185]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11187-11238]:Block[11187-11238]"
  }, {
    "left" : "return isElementInQueue(stack, el);",
    "right" : "return isElementInQueue(stack, el);",
    "info" : "ReturnStatement[11197-11232]:ReturnStatement[11197-11232]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[11244-11251]:Modifier[11244-11251]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[11252-11259]:PrimitiveType[11252-11259]"
  }, {
    "left" : "isElementInQueue",
    "right" : "isElementInQueue",
    "info" : "SimpleName[11260-11276]:SimpleName[11260-11276]"
  }, {
    "left" : "ArrayList<Element> queue",
    "right" : "ArrayList<Element> queue",
    "info" : "SingleVariableDeclaration[11277-11301]:SingleVariableDeclaration[11277-11301]"
  }, {
    "left" : "Element element",
    "right" : "Element element",
    "info" : "SingleVariableDeclaration[11303-11318]:SingleVariableDeclaration[11303-11318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11320-11539]:Block[11320-11539]"
  }, {
    "left" : "for (int pos = queue.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = queue.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[11330-11511]:ForStatement[11330-11511]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11379-11511]:Block[11379-11511]"
  }, {
    "left" : "Element next = queue.get(pos);",
    "right" : "Element next = queue.get(pos);",
    "info" : "VariableDeclarationStatement[11393-11423]:VariableDeclarationStatement[11393-11423]"
  }, {
    "left" : "if (next == element)",
    "right" : "if (next == element)",
    "info" : "IfStatement[11436-11501]:IfStatement[11436-11501]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11457-11501]:Block[11457-11501]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[11475-11487]:ReturnStatement[11475-11487]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[11520-11533]:ReturnStatement[11520-11533]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[11545-11552]:SimpleType[11545-11552]"
  }, {
    "left" : "getFromStack",
    "right" : "getFromStack",
    "info" : "SimpleName[11553-11565]:SimpleName[11553-11565]"
  }, {
    "left" : "String elName",
    "right" : "String elName",
    "info" : "SingleVariableDeclaration[11566-11579]:SingleVariableDeclaration[11566-11579]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11581-11814]:Block[11581-11814]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[11591-11787]:ForStatement[11591-11787]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11640-11787]:Block[11640-11787]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[11654-11684]:VariableDeclarationStatement[11654-11684]"
  }, {
    "left" : "if (next.nodeName().equals(elName))",
    "right" : "if (next.nodeName().equals(elName))",
    "info" : "IfStatement[11697-11777]:IfStatement[11697-11777]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11733-11777]:Block[11733-11777]"
  }, {
    "left" : "return next;",
    "right" : "return next;",
    "info" : "ReturnStatement[11751-11763]:ReturnStatement[11751-11763]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[11796-11808]:ReturnStatement[11796-11808]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[11820-11827]:PrimitiveType[11820-11827]"
  }, {
    "left" : "removeFromStack",
    "right" : "removeFromStack",
    "info" : "SimpleName[11828-11843]:SimpleName[11828-11843]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[11844-11854]:SingleVariableDeclaration[11844-11854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11856-12105]:Block[11856-12105]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[11866-12077]:ForStatement[11866-12077]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11915-12077]:Block[11915-12077]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[11929-11959]:VariableDeclarationStatement[11929-11959]"
  }, {
    "left" : "if (next == el)",
    "right" : "if (next == el)",
    "info" : "IfStatement[11972-12067]:IfStatement[11972-12067]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11988-12067]:Block[11988-12067]"
  }, {
    "left" : "stack.remove(pos);",
    "right" : "stack.remove(pos);",
    "info" : "ExpressionStatement[12006-12024]:ExpressionStatement[12006-12024]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[12041-12053]:ReturnStatement[12041-12053]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[12086-12099]:ReturnStatement[12086-12099]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12111-12115]:PrimitiveType[12111-12115]"
  }, {
    "left" : "popStackToClose",
    "right" : "popStackToClose",
    "info" : "SimpleName[12116-12131]:SimpleName[12116-12131]"
  }, {
    "left" : "String elName",
    "right" : "String elName",
    "info" : "SingleVariableDeclaration[12132-12145]:SingleVariableDeclaration[12132-12145]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12147-12368]:Block[12147-12368]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[12157-12362]:ForStatement[12157-12362]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12206-12362]:Block[12206-12362]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[12220-12250]:VariableDeclarationStatement[12220-12250]"
  }, {
    "left" : "stack.remove(pos);",
    "right" : "stack.remove(pos);",
    "info" : "ExpressionStatement[12263-12281]:ExpressionStatement[12263-12281]"
  }, {
    "left" : "if (next.nodeName().equals(elName))",
    "right" : "if (next.nodeName().equals(elName))",
    "info" : "IfStatement[12294-12352]:IfStatement[12294-12352]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[12346-12352]:BreakStatement[12346-12352]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12421-12425]:PrimitiveType[12421-12425]"
  }, {
    "left" : "popStackToClose",
    "right" : "popStackToClose",
    "info" : "SimpleName[12426-12441]:SimpleName[12426-12441]"
  }, {
    "left" : "String... elNames",
    "right" : "String... elNames",
    "info" : "SingleVariableDeclaration[12442-12459]:SingleVariableDeclaration[12442-12459]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12461-12686]:Block[12461-12686]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[12471-12680]:ForStatement[12471-12680]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12520-12680]:Block[12520-12680]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[12534-12564]:VariableDeclarationStatement[12534-12564]"
  }, {
    "left" : "stack.remove(pos);",
    "right" : "stack.remove(pos);",
    "info" : "ExpressionStatement[12577-12595]:ExpressionStatement[12577-12595]"
  }, {
    "left" : "if (inSorted(next.nodeName(), elNames))",
    "right" : "if (inSorted(next.nodeName(), elNames))",
    "info" : "IfStatement[12608-12670]:IfStatement[12608-12670]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[12664-12670]:BreakStatement[12664-12670]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12692-12696]:PrimitiveType[12692-12696]"
  }, {
    "left" : "popStackToBefore",
    "right" : "popStackToBefore",
    "info" : "SimpleName[12697-12713]:SimpleName[12697-12713]"
  }, {
    "left" : "String elName",
    "right" : "String elName",
    "info" : "SingleVariableDeclaration[12714-12727]:SingleVariableDeclaration[12714-12727]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12729-12991]:Block[12729-12991]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[12739-12985]:ForStatement[12739-12985]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12788-12985]:Block[12788-12985]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[12802-12832]:VariableDeclarationStatement[12802-12832]"
  }, {
    "left" : "if (next.nodeName().equals(elName))",
    "right" : "if (next.nodeName().equals(elName))",
    "info" : "IfStatement[12845-12975]:IfStatement[12845-12975]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12881-12919]:Block[12881-12919]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[12899-12905]:BreakStatement[12899-12905]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12925-12975]:Block[12925-12975]"
  }, {
    "left" : "stack.remove(pos);",
    "right" : "stack.remove(pos);",
    "info" : "ExpressionStatement[12943-12961]:ExpressionStatement[12943-12961]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12997-13001]:PrimitiveType[12997-13001]"
  }, {
    "left" : "clearStackToTableContext",
    "right" : "clearStackToTableContext",
    "info" : "SimpleName[13002-13026]:SimpleName[13002-13026]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13029-13074]:Block[13029-13074]"
  }, {
    "left" : "clearStackToContext(\"table\");",
    "right" : "clearStackToContext(\"table\");",
    "info" : "ExpressionStatement[13039-13068]:ExpressionStatement[13039-13068]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13080-13084]:PrimitiveType[13080-13084]"
  }, {
    "left" : "clearStackToTableBodyContext",
    "right" : "clearStackToTableBodyContext",
    "info" : "SimpleName[13085-13113]:SimpleName[13085-13113]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13116-13191]:Block[13116-13191]"
  }, {
    "left" : "clearStackToContext(\"tbody\", \"tfoot\", \"thead\", \"template\");",
    "right" : "clearStackToContext(\"tbody\", \"tfoot\", \"thead\", \"template\");",
    "info" : "ExpressionStatement[13126-13185]:ExpressionStatement[13126-13185]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13197-13201]:PrimitiveType[13197-13201]"
  }, {
    "left" : "clearStackToTableRowContext",
    "right" : "clearStackToTableRowContext",
    "info" : "SimpleName[13202-13229]:SimpleName[13202-13229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13232-13286]:Block[13232-13286]"
  }, {
    "left" : "clearStackToContext(\"tr\", \"template\");",
    "right" : "clearStackToContext(\"tr\", \"template\");",
    "info" : "ExpressionStatement[13242-13280]:ExpressionStatement[13242-13280]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[13292-13299]:Modifier[13292-13299]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13300-13304]:PrimitiveType[13300-13304]"
  }, {
    "left" : "clearStackToContext",
    "right" : "clearStackToContext",
    "info" : "SimpleName[13305-13324]:SimpleName[13305-13324]"
  }, {
    "left" : "String... nodeNames",
    "right" : "String... nodeNames",
    "info" : "SingleVariableDeclaration[13325-13344]:SingleVariableDeclaration[13325-13344]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13346-13633]:Block[13346-13633]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[13356-13627]:ForStatement[13356-13627]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13405-13627]:Block[13405-13627]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[13419-13449]:VariableDeclarationStatement[13419-13449]"
  }, {
    "left" : "if (StringUtil.in(next.nodeName(), nodeNames) || next.nodeName().equals(\"html\"))",
    "right" : "if (StringUtil.in(next.nodeName(), nodeNames) || next.nodeName().equals(\"html\"))",
    "info" : "IfStatement[13462-13617]:IfStatement[13462-13617]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[13559-13565]:BreakStatement[13559-13565]"
  }, {
    "left" : "stack.remove(pos);",
    "right" : "stack.remove(pos);",
    "info" : "ExpressionStatement[13599-13617]:ExpressionStatement[13599-13617]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[13639-13646]:SimpleType[13639-13646]"
  }, {
    "left" : "aboveOnStack",
    "right" : "aboveOnStack",
    "info" : "SimpleName[13647-13659]:SimpleName[13647-13659]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[13660-13670]:SingleVariableDeclaration[13660-13670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13672-13925]:Block[13672-13925]"
  }, {
    "left" : "assert onStack(el);",
    "right" : "assert onStack(el);",
    "info" : "AssertStatement[13682-13701]:AssertStatement[13682-13701]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[13710-13898]:ForStatement[13710-13898]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13759-13898]:Block[13759-13898]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[13773-13803]:VariableDeclarationStatement[13773-13803]"
  }, {
    "left" : "if (next == el)",
    "right" : "if (next == el)",
    "info" : "IfStatement[13816-13888]:IfStatement[13816-13888]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13832-13888]:Block[13832-13888]"
  }, {
    "left" : "return stack.get(pos-1);",
    "right" : "return stack.get(pos-1);",
    "info" : "ReturnStatement[13850-13874]:ReturnStatement[13850-13874]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[13907-13919]:ReturnStatement[13907-13919]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13931-13935]:PrimitiveType[13931-13935]"
  }, {
    "left" : "insertOnStackAfter",
    "right" : "insertOnStackAfter",
    "info" : "SimpleName[13936-13954]:SimpleName[13936-13954]"
  }, {
    "left" : "Element after",
    "right" : "Element after",
    "info" : "SingleVariableDeclaration[13955-13968]:SingleVariableDeclaration[13955-13968]"
  }, {
    "left" : "Element in",
    "right" : "Element in",
    "info" : "SingleVariableDeclaration[13970-13980]:SingleVariableDeclaration[13970-13980]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13982-14093]:Block[13982-14093]"
  }, {
    "left" : "int i = stack.lastIndexOf(after);",
    "right" : "int i = stack.lastIndexOf(after);",
    "info" : "VariableDeclarationStatement[13992-14025]:VariableDeclarationStatement[13992-14025]"
  }, {
    "left" : "Validate.isTrue(i != -1);",
    "right" : "Validate.isTrue(i != -1);",
    "info" : "ExpressionStatement[14034-14059]:ExpressionStatement[14034-14059]"
  }, {
    "left" : "stack.add(i+1, in);",
    "right" : "stack.add(i+1, in);",
    "info" : "ExpressionStatement[14068-14087]:ExpressionStatement[14068-14087]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14099-14103]:PrimitiveType[14099-14103]"
  }, {
    "left" : "replaceOnStack",
    "right" : "replaceOnStack",
    "info" : "SimpleName[14104-14118]:SimpleName[14104-14118]"
  }, {
    "left" : "Element out",
    "right" : "Element out",
    "info" : "SingleVariableDeclaration[14119-14130]:SingleVariableDeclaration[14119-14130]"
  }, {
    "left" : "Element in",
    "right" : "Element in",
    "info" : "SingleVariableDeclaration[14132-14142]:SingleVariableDeclaration[14132-14142]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14144-14191]:Block[14144-14191]"
  }, {
    "left" : "replaceInQueue(stack, out, in);",
    "right" : "replaceInQueue(stack, out, in);",
    "info" : "ExpressionStatement[14154-14185]:ExpressionStatement[14154-14185]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[14197-14204]:Modifier[14197-14204]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14205-14209]:PrimitiveType[14205-14209]"
  }, {
    "left" : "replaceInQueue",
    "right" : "replaceInQueue",
    "info" : "SimpleName[14210-14224]:SimpleName[14210-14224]"
  }, {
    "left" : "ArrayList<Element> queue",
    "right" : "ArrayList<Element> queue",
    "info" : "SingleVariableDeclaration[14225-14249]:SingleVariableDeclaration[14225-14249]"
  }, {
    "left" : "Element out",
    "right" : "Element out",
    "info" : "SingleVariableDeclaration[14251-14262]:SingleVariableDeclaration[14251-14262]"
  }, {
    "left" : "Element in",
    "right" : "Element in",
    "info" : "SingleVariableDeclaration[14264-14274]:SingleVariableDeclaration[14264-14274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14276-14383]:Block[14276-14383]"
  }, {
    "left" : "int i = queue.lastIndexOf(out);",
    "right" : "int i = queue.lastIndexOf(out);",
    "info" : "VariableDeclarationStatement[14286-14317]:VariableDeclarationStatement[14286-14317]"
  }, {
    "left" : "Validate.isTrue(i != -1);",
    "right" : "Validate.isTrue(i != -1);",
    "info" : "ExpressionStatement[14326-14351]:ExpressionStatement[14326-14351]"
  }, {
    "left" : "queue.set(i, in);",
    "right" : "queue.set(i, in);",
    "info" : "ExpressionStatement[14360-14377]:ExpressionStatement[14360-14377]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14389-14393]:PrimitiveType[14389-14393]"
  }, {
    "left" : "resetInsertionMode",
    "right" : "resetInsertionMode",
    "info" : "SimpleName[14394-14412]:SimpleName[14394-14412]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14415-16385]:Block[14415-16385]"
  }, {
    "left" : "boolean last = false;",
    "right" : "boolean last = false;",
    "info" : "VariableDeclarationStatement[14425-14446]:VariableDeclarationStatement[14425-14446]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[14455-16379]:ForStatement[14455-16379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14504-16379]:Block[14504-16379]"
  }, {
    "left" : "Element node = stack.get(pos);",
    "right" : "Element node = stack.get(pos);",
    "info" : "VariableDeclarationStatement[14518-14548]:VariableDeclarationStatement[14518-14548]"
  }, {
    "left" : "if (pos == 0)",
    "right" : "if (pos == 0)",
    "info" : "IfStatement[14561-14658]:IfStatement[14561-14658]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14575-14658]:Block[14575-14658]"
  }, {
    "left" : "last = true;",
    "right" : "last = true;",
    "info" : "ExpressionStatement[14593-14605]:ExpressionStatement[14593-14605]"
  }, {
    "left" : "node = contextElement;",
    "right" : "node = contextElement;",
    "info" : "ExpressionStatement[14622-14644]:ExpressionStatement[14622-14644]"
  }, {
    "left" : "String name = node.nodeName();",
    "right" : "String name = node.nodeName();",
    "info" : "VariableDeclarationStatement[14671-14701]:VariableDeclarationStatement[14671-14701]"
  }, {
    "left" : "if (\"select\".equals(name))",
    "right" : "if (\"select\".equals(name))",
    "info" : "IfStatement[14714-16369]:IfStatement[14714-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14741-14846]:Block[14741-14846]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InSelect);",
    "right" : "transition(HtmlTreeBuilderState.InSelect);",
    "info" : "ExpressionStatement[14759-14801]:ExpressionStatement[14759-14801]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[14818-14824]:BreakStatement[14818-14824]"
  }, {
    "left" : "if ((\"td\".equals(name) || \"th\".equals(name) && !last))",
    "right" : "if ((\"td\".equals(name) || \"th\".equals(name) && !last))",
    "info" : "IfStatement[14852-16369]:IfStatement[14852-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14907-15002]:Block[14907-15002]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InCell);",
    "right" : "transition(HtmlTreeBuilderState.InCell);",
    "info" : "ExpressionStatement[14925-14965]:ExpressionStatement[14925-14965]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[14982-14988]:BreakStatement[14982-14988]"
  }, {
    "left" : "if (\"tr\".equals(name))",
    "right" : "if (\"tr\".equals(name))",
    "info" : "IfStatement[15008-16369]:IfStatement[15008-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15031-15125]:Block[15031-15125]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InRow);",
    "right" : "transition(HtmlTreeBuilderState.InRow);",
    "info" : "ExpressionStatement[15049-15088]:ExpressionStatement[15049-15088]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15105-15111]:BreakStatement[15105-15111]"
  }, {
    "left" : "if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name))",
    "right" : "if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name))",
    "info" : "IfStatement[15131-16369]:IfStatement[15131-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15205-15305]:Block[15205-15305]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InTableBody);",
    "right" : "transition(HtmlTreeBuilderState.InTableBody);",
    "info" : "ExpressionStatement[15223-15268]:ExpressionStatement[15223-15268]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15285-15291]:BreakStatement[15285-15291]"
  }, {
    "left" : "if (\"caption\".equals(name))",
    "right" : "if (\"caption\".equals(name))",
    "info" : "IfStatement[15311-16369]:IfStatement[15311-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15339-15437]:Block[15339-15437]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InCaption);",
    "right" : "transition(HtmlTreeBuilderState.InCaption);",
    "info" : "ExpressionStatement[15357-15400]:ExpressionStatement[15357-15400]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15417-15423]:BreakStatement[15417-15423]"
  }, {
    "left" : "if (\"colgroup\".equals(name))",
    "right" : "if (\"colgroup\".equals(name))",
    "info" : "IfStatement[15443-16369]:IfStatement[15443-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15472-15582]:Block[15472-15582]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InColumnGroup);",
    "right" : "transition(HtmlTreeBuilderState.InColumnGroup);",
    "info" : "ExpressionStatement[15490-15537]:ExpressionStatement[15490-15537]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15554-15560]:BreakStatement[15554-15560]"
  }, {
    "left" : "if (\"table\".equals(name))",
    "right" : "if (\"table\".equals(name))",
    "info" : "IfStatement[15588-16369]:IfStatement[15588-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15614-15710]:Block[15614-15710]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InTable);",
    "right" : "transition(HtmlTreeBuilderState.InTable);",
    "info" : "ExpressionStatement[15632-15673]:ExpressionStatement[15632-15673]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15690-15696]:BreakStatement[15690-15696]"
  }, {
    "left" : "if (\"head\".equals(name))",
    "right" : "if (\"head\".equals(name))",
    "info" : "IfStatement[15716-16369]:IfStatement[15716-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15741-15844]:Block[15741-15844]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InBody);",
    "right" : "transition(HtmlTreeBuilderState.InBody);",
    "info" : "ExpressionStatement[15759-15799]:ExpressionStatement[15759-15799]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15816-15822]:BreakStatement[15816-15822]"
  }, {
    "left" : "if (\"body\".equals(name))",
    "right" : "if (\"body\".equals(name))",
    "info" : "IfStatement[15850-16369]:IfStatement[15850-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15875-15970]:Block[15875-15970]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InBody);",
    "right" : "transition(HtmlTreeBuilderState.InBody);",
    "info" : "ExpressionStatement[15893-15933]:ExpressionStatement[15893-15933]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15950-15956]:BreakStatement[15950-15956]"
  }, {
    "left" : "if (\"frameset\".equals(name))",
    "right" : "if (\"frameset\".equals(name))",
    "info" : "IfStatement[15976-16369]:IfStatement[15976-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16005-16112]:Block[16005-16112]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InFrameset);",
    "right" : "transition(HtmlTreeBuilderState.InFrameset);",
    "info" : "ExpressionStatement[16023-16067]:ExpressionStatement[16023-16067]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[16084-16090]:BreakStatement[16084-16090]"
  }, {
    "left" : "if (\"html\".equals(name))",
    "right" : "if (\"html\".equals(name))",
    "info" : "IfStatement[16118-16369]:IfStatement[16118-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16143-16250]:Block[16143-16250]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.BeforeHead);",
    "right" : "transition(HtmlTreeBuilderState.BeforeHead);",
    "info" : "ExpressionStatement[16161-16205]:ExpressionStatement[16161-16205]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[16222-16228]:BreakStatement[16222-16228]"
  }, {
    "left" : "if (last)",
    "right" : "if (last)",
    "info" : "IfStatement[16256-16369]:IfStatement[16256-16369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16266-16369]:Block[16266-16369]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InBody);",
    "right" : "transition(HtmlTreeBuilderState.InBody);",
    "info" : "ExpressionStatement[16284-16324]:ExpressionStatement[16284-16324]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[16341-16347]:BreakStatement[16341-16347]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16490-16497]:Modifier[16490-16497]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[16498-16505]:PrimitiveType[16498-16505]"
  }, {
    "left" : "inSpecificScope",
    "right" : "inSpecificScope",
    "info" : "SimpleName[16506-16521]:SimpleName[16506-16521]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[16522-16539]:SingleVariableDeclaration[16522-16539]"
  }, {
    "left" : "String[] baseTypes",
    "right" : "String[] baseTypes",
    "info" : "SingleVariableDeclaration[16541-16559]:SingleVariableDeclaration[16541-16559]"
  }, {
    "left" : "String[] extraTypes",
    "right" : "String[] extraTypes",
    "info" : "SingleVariableDeclaration[16561-16580]:SingleVariableDeclaration[16561-16580]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16582-16710]:Block[16582-16710]"
  }, {
    "left" : "specificScopeTarget[0] = targetName;",
    "right" : "specificScopeTarget[0] = targetName;",
    "info" : "ExpressionStatement[16592-16628]:ExpressionStatement[16592-16628]"
  }, {
    "left" : "return inSpecificScope(specificScopeTarget, baseTypes, extraTypes);",
    "right" : "return inSpecificScope(specificScopeTarget, baseTypes, extraTypes);",
    "info" : "ReturnStatement[16637-16704]:ReturnStatement[16637-16704]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16716-16723]:Modifier[16716-16723]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[16724-16731]:PrimitiveType[16724-16731]"
  }, {
    "left" : "inSpecificScope",
    "right" : "inSpecificScope",
    "info" : "SimpleName[16732-16747]:SimpleName[16732-16747]"
  }, {
    "left" : "String[] targetNames",
    "right" : "String[] targetNames",
    "info" : "SingleVariableDeclaration[16748-16768]:SingleVariableDeclaration[16748-16768]"
  }, {
    "left" : "String[] baseTypes",
    "right" : "String[] baseTypes",
    "info" : "SingleVariableDeclaration[16770-16788]:SingleVariableDeclaration[16770-16788]"
  }, {
    "left" : "String[] extraTypes",
    "right" : "String[] extraTypes",
    "info" : "SingleVariableDeclaration[16790-16809]:SingleVariableDeclaration[16790-16809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16811-17695]:Block[16811-17605]"
  }, {
    "left" : "int bottom = stack.size() -1;",
    "right" : "final int bottom = stack.size() -1;",
    "info" : "VariableDeclarationStatement[16921-16950]:VariableDeclarationStatement[16921-16956]"
  }, {
    "left" : "final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;",
    "right" : "final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;",
    "info" : "VariableDeclarationStatement[17055-17135]:VariableDeclarationStatement[16965-17045]"
  }, {
    "left" : "for (int pos = bottom; pos >= top; pos--)",
    "right" : "for (int pos = bottom; pos >= top; pos--)",
    "info" : "ForStatement[17187-17550]:ForStatement[17097-17460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17229-17550]:Block[17139-17460]"
  }, {
    "left" : "final String elName = stack.get(pos).nodeName();",
    "right" : "final String elName = stack.get(pos).nodeName();",
    "info" : "VariableDeclarationStatement[17243-17291]:VariableDeclarationStatement[17153-17201]"
  }, {
    "left" : "if (inSorted(elName, targetNames))",
    "right" : "if (inSorted(elName, targetNames))",
    "info" : "IfStatement[17304-17367]:IfStatement[17214-17277]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[17355-17367]:ReturnStatement[17265-17277]"
  }, {
    "left" : "if (inSorted(elName, baseTypes))",
    "right" : "if (inSorted(elName, baseTypes))",
    "info" : "IfStatement[17380-17442]:IfStatement[17290-17352]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[17429-17442]:ReturnStatement[17339-17352]"
  }, {
    "left" : "if (extraTypes != null && inSorted(elName, extraTypes))",
    "right" : "if (extraTypes != null && inSorted(elName, extraTypes))",
    "info" : "IfStatement[17455-17540]:IfStatement[17365-17450]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[17527-17540]:ReturnStatement[17437-17450]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[17676-17689]:ReturnStatement[17586-17599]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[17701-17708]:PrimitiveType[17611-17618]"
  }, {
    "left" : "inScope",
    "right" : "inScope",
    "info" : "SimpleName[17709-17716]:SimpleName[17619-17626]"
  }, {
    "left" : "String[] targetNames",
    "right" : "String[] targetNames",
    "info" : "SingleVariableDeclaration[17717-17737]:SingleVariableDeclaration[17627-17647]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17739-17816]:Block[17649-17726]"
  }, {
    "left" : "return inSpecificScope(targetNames, TagsSearchInScope, null);",
    "right" : "return inSpecificScope(targetNames, TagsSearchInScope, null);",
    "info" : "ReturnStatement[17749-17810]:ReturnStatement[17659-17720]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[17822-17829]:PrimitiveType[17732-17739]"
  }, {
    "left" : "inScope",
    "right" : "inScope",
    "info" : "SimpleName[17830-17837]:SimpleName[17740-17747]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[17838-17855]:SingleVariableDeclaration[17748-17765]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17857-17906]:Block[17767-17816]"
  }, {
    "left" : "return inScope(targetName, null);",
    "right" : "return inScope(targetName, null);",
    "info" : "ReturnStatement[17867-17900]:ReturnStatement[17777-17810]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[17912-17919]:PrimitiveType[17822-17829]"
  }, {
    "left" : "inScope",
    "right" : "inScope",
    "info" : "SimpleName[17920-17927]:SimpleName[17830-17837]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[17928-17945]:SingleVariableDeclaration[17838-17855]"
  }, {
    "left" : "String[] extras",
    "right" : "String[] extras",
    "info" : "SingleVariableDeclaration[17947-17962]:SingleVariableDeclaration[17857-17872]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17964-18178]:Block[17874-18088]"
  }, {
    "left" : "return inSpecificScope(targetName, TagsSearchInScope, extras);",
    "right" : "return inSpecificScope(targetName, TagsSearchInScope, extras);",
    "info" : "ReturnStatement[17974-18036]:ReturnStatement[17884-17946]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[18184-18191]:PrimitiveType[18094-18101]"
  }, {
    "left" : "inListItemScope",
    "right" : "inListItemScope",
    "info" : "SimpleName[18192-18207]:SimpleName[18102-18117]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[18208-18225]:SingleVariableDeclaration[18118-18135]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18227-18285]:Block[18137-18195]"
  }, {
    "left" : "return inScope(targetName, TagSearchList);",
    "right" : "return inScope(targetName, TagSearchList);",
    "info" : "ReturnStatement[18237-18279]:ReturnStatement[18147-18189]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[18291-18298]:PrimitiveType[18201-18208]"
  }, {
    "left" : "inButtonScope",
    "right" : "inButtonScope",
    "info" : "SimpleName[18299-18312]:SimpleName[18209-18222]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[18313-18330]:SingleVariableDeclaration[18223-18240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18332-18392]:Block[18242-18302]"
  }, {
    "left" : "return inScope(targetName, TagSearchButton);",
    "right" : "return inScope(targetName, TagSearchButton);",
    "info" : "ReturnStatement[18342-18386]:ReturnStatement[18252-18296]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[18398-18405]:PrimitiveType[18308-18315]"
  }, {
    "left" : "inTableScope",
    "right" : "inTableScope",
    "info" : "SimpleName[18406-18418]:SimpleName[18316-18328]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[18419-18436]:SingleVariableDeclaration[18329-18346]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18438-18516]:Block[18348-18426]"
  }, {
    "left" : "return inSpecificScope(targetName, TagSearchTableScope, null);",
    "right" : "return inSpecificScope(targetName, TagSearchTableScope, null);",
    "info" : "ReturnStatement[18448-18510]:ReturnStatement[18358-18420]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[18522-18529]:PrimitiveType[18432-18439]"
  }, {
    "left" : "inSelectScope",
    "right" : "inSelectScope",
    "info" : "SimpleName[18530-18543]:SimpleName[18440-18453]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[18544-18561]:SingleVariableDeclaration[18454-18471]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18563-18977]:Block[18473-18887]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[18573-18899]:ForStatement[18483-18809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18622-18899]:Block[18532-18809]"
  }, {
    "left" : "Element el = stack.get(pos);",
    "right" : "Element el = stack.get(pos);",
    "info" : "VariableDeclarationStatement[18636-18664]:VariableDeclarationStatement[18546-18574]"
  }, {
    "left" : "String elName = el.nodeName();",
    "right" : "String elName = el.nodeName();",
    "info" : "VariableDeclarationStatement[18677-18707]:VariableDeclarationStatement[18587-18617]"
  }, {
    "left" : "if (elName.equals(targetName))",
    "right" : "if (elName.equals(targetName))",
    "info" : "IfStatement[18720-18779]:IfStatement[18630-18689]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[18767-18779]:ReturnStatement[18677-18689]"
  }, {
    "left" : "if (!inSorted(elName, TagSearchSelectScope))",
    "right" : "if (!inSorted(elName, TagSearchSelectScope))",
    "info" : "IfStatement[18792-18889]:IfStatement[18702-18799]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[18876-18889]:ReturnStatement[18786-18799]"
  }, {
    "left" : "Validate.fail(\"Should not be reachable\");",
    "right" : "Validate.fail(\"Should not be reachable\");",
    "info" : "ExpressionStatement[18908-18949]:ExpressionStatement[18818-18859]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[18958-18971]:ReturnStatement[18868-18881]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18983-18987]:PrimitiveType[18893-18897]"
  }, {
    "left" : "setHeadElement",
    "right" : "setHeadElement",
    "info" : "SimpleName[18988-19002]:SimpleName[18898-18912]"
  }, {
    "left" : "Element headElement",
    "right" : "Element headElement",
    "info" : "SingleVariableDeclaration[19003-19022]:SingleVariableDeclaration[18913-18932]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19024-19071]:Block[18934-18981]"
  }, {
    "left" : "this.headElement = headElement;",
    "right" : "this.headElement = headElement;",
    "info" : "ExpressionStatement[19034-19065]:ExpressionStatement[18944-18975]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[19077-19084]:SimpleType[18987-18994]"
  }, {
    "left" : "getHeadElement",
    "right" : "getHeadElement",
    "info" : "SimpleName[19085-19099]:SimpleName[18995-19009]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19102-19137]:Block[19012-19047]"
  }, {
    "left" : "return headElement;",
    "right" : "return headElement;",
    "info" : "ReturnStatement[19112-19131]:ReturnStatement[19022-19041]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[19143-19150]:PrimitiveType[19053-19060]"
  }, {
    "left" : "isFosterInserts",
    "right" : "isFosterInserts",
    "info" : "SimpleName[19151-19166]:SimpleName[19061-19076]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19169-19206]:Block[19079-19116]"
  }, {
    "left" : "return fosterInserts;",
    "right" : "return fosterInserts;",
    "info" : "ReturnStatement[19179-19200]:ReturnStatement[19089-19110]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19212-19216]:PrimitiveType[19122-19126]"
  }, {
    "left" : "setFosterInserts",
    "right" : "setFosterInserts",
    "info" : "SimpleName[19217-19233]:SimpleName[19127-19143]"
  }, {
    "left" : "boolean fosterInserts",
    "right" : "boolean fosterInserts",
    "info" : "SingleVariableDeclaration[19234-19255]:SingleVariableDeclaration[19144-19165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19257-19308]:Block[19167-19218]"
  }, {
    "left" : "this.fosterInserts = fosterInserts;",
    "right" : "this.fosterInserts = fosterInserts;",
    "info" : "ExpressionStatement[19267-19302]:ExpressionStatement[19177-19212]"
  }, {
    "left" : "FormElement",
    "right" : "FormElement",
    "info" : "SimpleType[19314-19325]:SimpleType[19224-19235]"
  }, {
    "left" : "getFormElement",
    "right" : "getFormElement",
    "info" : "SimpleName[19326-19340]:SimpleName[19236-19250]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19343-19378]:Block[19253-19288]"
  }, {
    "left" : "return formElement;",
    "right" : "return formElement;",
    "info" : "ReturnStatement[19353-19372]:ReturnStatement[19263-19282]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19384-19388]:PrimitiveType[19294-19298]"
  }, {
    "left" : "setFormElement",
    "right" : "setFormElement",
    "info" : "SimpleName[19389-19403]:SimpleName[19299-19313]"
  }, {
    "left" : "FormElement formElement",
    "right" : "FormElement formElement",
    "info" : "SingleVariableDeclaration[19404-19427]:SingleVariableDeclaration[19314-19337]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19429-19476]:Block[19339-19386]"
  }, {
    "left" : "this.formElement = formElement;",
    "right" : "this.formElement = formElement;",
    "info" : "ExpressionStatement[19439-19470]:ExpressionStatement[19349-19380]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19482-19486]:PrimitiveType[19392-19396]"
  }, {
    "left" : "newPendingTableCharacters",
    "right" : "newPendingTableCharacters",
    "info" : "SimpleName[19487-19512]:SimpleName[19397-19422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19515-19574]:Block[19425-19484]"
  }, {
    "left" : "pendingTableCharacters = new ArrayList<>();",
    "right" : "pendingTableCharacters = new ArrayList<>();",
    "info" : "ExpressionStatement[19525-19568]:ExpressionStatement[19435-19478]"
  }, {
    "left" : "List<String>",
    "right" : "List<String>",
    "info" : "ParameterizedType[19580-19592]:ParameterizedType[19490-19502]"
  }, {
    "left" : "getPendingTableCharacters",
    "right" : "getPendingTableCharacters",
    "info" : "SimpleName[19593-19618]:SimpleName[19503-19528]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19621-19667]:Block[19531-19577]"
  }, {
    "left" : "return pendingTableCharacters;",
    "right" : "return pendingTableCharacters;",
    "info" : "ReturnStatement[19631-19661]:ReturnStatement[19541-19571]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19673-19677]:PrimitiveType[19583-19587]"
  }, {
    "left" : "setPendingTableCharacters",
    "right" : "setPendingTableCharacters",
    "info" : "SimpleName[19678-19703]:SimpleName[19588-19613]"
  }, {
    "left" : "List<String> pendingTableCharacters",
    "right" : "List<String> pendingTableCharacters",
    "info" : "SingleVariableDeclaration[19704-19739]:SingleVariableDeclaration[19614-19649]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19741-19810]:Block[19651-19720]"
  }, {
    "left" : "this.pendingTableCharacters = pendingTableCharacters;",
    "right" : "this.pendingTableCharacters = pendingTableCharacters;",
    "info" : "ExpressionStatement[19751-19804]:ExpressionStatement[19661-19714]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20422-20426]:PrimitiveType[20332-20336]"
  }, {
    "left" : "generateImpliedEndTags",
    "right" : "generateImpliedEndTags",
    "info" : "SimpleName[20427-20449]:SimpleName[20337-20359]"
  }, {
    "left" : "String excludeTag",
    "right" : "String excludeTag",
    "info" : "SingleVariableDeclaration[20450-20467]:SingleVariableDeclaration[20360-20377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20469-20658]:Block[20379-20568]"
  }, {
    "left" : "while ((excludeTag != null && !currentElement().nodeName().equals(excludeTag)) &&\n                inSorted(currentElement().nodeName(), TagSearchEndTags))\n            pop();",
    "right" : "while ((excludeTag != null && !currentElement().nodeName().equals(excludeTag)) &&\n                inSorted(currentElement().nodeName(), TagSearchEndTags))\n            pop();",
    "info" : "WhileStatement[20479-20652]:WhileStatement[20389-20562]"
  }, {
    "left" : "pop();",
    "right" : "pop();",
    "info" : "ExpressionStatement[20646-20652]:ExpressionStatement[20556-20562]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20664-20668]:PrimitiveType[20574-20578]"
  }, {
    "left" : "generateImpliedEndTags",
    "right" : "generateImpliedEndTags",
    "info" : "SimpleName[20669-20691]:SimpleName[20579-20601]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20694-20739]:Block[20604-20649]"
  }, {
    "left" : "generateImpliedEndTags(null);",
    "right" : "generateImpliedEndTags(null);",
    "info" : "ExpressionStatement[20704-20733]:ExpressionStatement[20614-20643]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[20745-20752]:PrimitiveType[20655-20662]"
  }, {
    "left" : "isSpecial",
    "right" : "isSpecial",
    "info" : "SimpleName[20753-20762]:SimpleName[20663-20672]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[20763-20773]:SingleVariableDeclaration[20673-20683]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20775-20954]:Block[20685-20864]"
  }, {
    "left" : "String name = el.nodeName();",
    "right" : "String name = el.nodeName();",
    "info" : "VariableDeclarationStatement[20871-20899]:VariableDeclarationStatement[20781-20809]"
  }, {
    "left" : "return inSorted(name, TagSearchSpecial);",
    "right" : "return inSorted(name, TagSearchSpecial);",
    "info" : "ReturnStatement[20908-20948]:ReturnStatement[20818-20858]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[20960-20967]:SimpleType[20870-20877]"
  }, {
    "left" : "lastFormattingElement",
    "right" : "lastFormattingElement",
    "info" : "SimpleName[20968-20989]:SimpleName[20878-20899]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20992-21106]:Block[20902-21016]"
  }, {
    "left" : "return formattingElements.size() > 0 ? formattingElements.get(formattingElements.size()-1) : null;",
    "right" : "return formattingElements.size() > 0 ? formattingElements.get(formattingElements.size()-1) : null;",
    "info" : "ReturnStatement[21002-21100]:ReturnStatement[20912-21010]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[21112-21119]:SimpleType[21022-21029]"
  }, {
    "left" : "removeLastFormattingElement",
    "right" : "removeLastFormattingElement",
    "info" : "SimpleName[21120-21147]:SimpleName[21030-21057]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21150-21317]:Block[21060-21227]"
  }, {
    "left" : "int size = formattingElements.size();",
    "right" : "int size = formattingElements.size();",
    "info" : "VariableDeclarationStatement[21160-21197]:VariableDeclarationStatement[21070-21107]"
  }, {
    "left" : "if (size > 0)",
    "right" : "if (size > 0)",
    "info" : "IfStatement[21206-21311]:IfStatement[21116-21221]"
  }, {
    "left" : "return formattingElements.remove(size-1);",
    "right" : "return formattingElements.remove(size-1);",
    "info" : "ReturnStatement[21232-21273]:ReturnStatement[21142-21183]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[21299-21311]:ReturnStatement[21209-21221]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21357-21361]:PrimitiveType[21267-21271]"
  }, {
    "left" : "pushActiveFormattingElements",
    "right" : "pushActiveFormattingElements",
    "info" : "SimpleName[21362-21390]:SimpleName[21272-21300]"
  }, {
    "left" : "Element in",
    "right" : "Element in",
    "info" : "SingleVariableDeclaration[21391-21401]:SingleVariableDeclaration[21301-21311]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21403-21863]:Block[21313-21773]"
  }, {
    "left" : "int numSeen = 0;",
    "right" : "int numSeen = 0;",
    "info" : "VariableDeclarationStatement[21413-21429]:VariableDeclarationStatement[21323-21339]"
  }, {
    "left" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[21438-21821]:ForStatement[21348-21731]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21500-21821]:Block[21410-21731]"
  }, {
    "left" : "Element el = formattingElements.get(pos);",
    "right" : "Element el = formattingElements.get(pos);",
    "info" : "VariableDeclarationStatement[21514-21555]:VariableDeclarationStatement[21424-21465]"
  }, {
    "left" : "if (el == null)",
    "right" : "if (el == null)",
    "info" : "IfStatement[21568-21616]:IfStatement[21478-21526]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[21610-21616]:BreakStatement[21520-21526]"
  }, {
    "left" : "if (isSameFormattingElement(in, el))",
    "right" : "if (isSameFormattingElement(in, el))",
    "info" : "IfStatement[21630-21693]:IfStatement[21540-21603]"
  }, {
    "left" : "numSeen++;",
    "right" : "numSeen++;",
    "info" : "ExpressionStatement[21683-21693]:ExpressionStatement[21593-21603]"
  }, {
    "left" : "if (numSeen == 3)",
    "right" : "if (numSeen == 3)",
    "info" : "IfStatement[21707-21811]:IfStatement[21617-21721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21725-21811]:Block[21635-21721]"
  }, {
    "left" : "formattingElements.remove(pos);",
    "right" : "formattingElements.remove(pos);",
    "info" : "ExpressionStatement[21743-21774]:ExpressionStatement[21653-21684]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[21791-21797]:BreakStatement[21701-21707]"
  }, {
    "left" : "formattingElements.add(in);",
    "right" : "formattingElements.add(in);",
    "info" : "ExpressionStatement[21830-21857]:ExpressionStatement[21740-21767]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[21869-21876]:Modifier[21779-21786]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[21877-21884]:PrimitiveType[21787-21794]"
  }, {
    "left" : "isSameFormattingElement",
    "right" : "isSameFormattingElement",
    "info" : "SimpleName[21885-21908]:SimpleName[21795-21818]"
  }, {
    "left" : "Element a",
    "right" : "Element a",
    "info" : "SingleVariableDeclaration[21909-21918]:SingleVariableDeclaration[21819-21828]"
  }, {
    "left" : "Element b",
    "right" : "Element b",
    "info" : "SingleVariableDeclaration[21920-21929]:SingleVariableDeclaration[21830-21839]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21931-22251]:Block[21841-22161]"
  }, {
    "left" : "return a.nodeName().equals(b.nodeName()) &&\n                // a.namespace().equals(b.namespace()) &&\n                a.attributes().equals(b.attributes());",
    "right" : "return a.nodeName().equals(b.nodeName()) &&\n                // a.namespace().equals(b.namespace()) &&\n                a.attributes().equals(b.attributes());",
    "info" : "ReturnStatement[22061-22217]:ReturnStatement[21971-22127]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22257-22261]:PrimitiveType[22167-22171]"
  }, {
    "left" : "reconstructFormattingElements",
    "right" : "reconstructFormattingElements",
    "info" : "SimpleName[22262-22291]:SimpleName[22172-22201]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22294-23758]:Block[22204-23668]"
  }, {
    "left" : "Element last = lastFormattingElement();",
    "right" : "Element last = lastFormattingElement();",
    "info" : "VariableDeclarationStatement[22304-22343]:VariableDeclarationStatement[22214-22253]"
  }, {
    "left" : "if (last == null || onStack(last))",
    "right" : "if (last == null || onStack(last))",
    "info" : "IfStatement[22352-22406]:IfStatement[22262-22316]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[22399-22406]:ReturnStatement[22309-22316]"
  }, {
    "left" : "Element entry = last;",
    "right" : "Element entry = last;",
    "info" : "VariableDeclarationStatement[22416-22437]:VariableDeclarationStatement[22326-22347]"
  }, {
    "left" : "int size = formattingElements.size();",
    "right" : "int size = formattingElements.size();",
    "info" : "VariableDeclarationStatement[22446-22483]:VariableDeclarationStatement[22356-22393]"
  }, {
    "left" : "int pos = size - 1;",
    "right" : "int pos = size - 1;",
    "info" : "VariableDeclarationStatement[22492-22511]:VariableDeclarationStatement[22402-22421]"
  }, {
    "left" : "boolean skip = false;",
    "right" : "boolean skip = false;",
    "info" : "VariableDeclarationStatement[22520-22541]:VariableDeclarationStatement[22430-22451]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[22550-22940]:WhileStatement[22460-22850]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22563-22940]:Block[22473-22850]"
  }, {
    "left" : "if (pos == 0)",
    "right" : "if (pos == 0)",
    "info" : "IfStatement[22577-22695]:IfStatement[22487-22605]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22591-22695]:Block[22501-22605]"
  }, {
    "left" : "skip = true;",
    "right" : "skip = true;",
    "info" : "ExpressionStatement[22646-22658]:ExpressionStatement[22556-22568]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22675-22681]:BreakStatement[22585-22591]"
  }, {
    "left" : "entry = formattingElements.get(--pos);",
    "right" : "entry = formattingElements.get(--pos);",
    "info" : "ExpressionStatement[22708-22746]:ExpressionStatement[22618-22656]"
  }, {
    "left" : "if (entry == null || onStack(entry))",
    "right" : "if (entry == null || onStack(entry))",
    "info" : "IfStatement[22793-22892]:IfStatement[22703-22802]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22886-22892]:BreakStatement[22796-22802]"
  }, {
    "left" : "while(true)",
    "right" : "while(true)",
    "info" : "WhileStatement[22949-23752]:WhileStatement[22859-23662]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22961-23752]:Block[22871-23662]"
  }, {
    "left" : "if (!skip)",
    "right" : "if (!skip)",
    "info" : "IfStatement[22975-23071]:IfStatement[22885-22981]"
  }, {
    "left" : "entry = formattingElements.get(++pos);",
    "right" : "entry = formattingElements.get(++pos);",
    "info" : "ExpressionStatement[23033-23071]:ExpressionStatement[22943-22981]"
  }, {
    "left" : "Validate.notNull(entry);",
    "right" : "Validate.notNull(entry);",
    "info" : "ExpressionStatement[23084-23108]:ExpressionStatement[22994-23018]"
  }, {
    "left" : "skip = false;",
    "right" : "skip = false;",
    "info" : "ExpressionStatement[23261-23274]:ExpressionStatement[23171-23184]"
  }, {
    "left" : "Element newEl = insertStartTag(entry.nodeName());",
    "right" : "Element newEl = insertStartTag(entry.nodeName());",
    "info" : "VariableDeclarationStatement[23322-23371]:VariableDeclarationStatement[23232-23281]"
  }, {
    "left" : "newEl.attributes().addAll(entry.attributes());",
    "right" : "newEl.attributes().addAll(entry.attributes());",
    "info" : "ExpressionStatement[23486-23532]:ExpressionStatement[23396-23442]"
  }, {
    "left" : "formattingElements.set(pos, newEl);",
    "right" : "formattingElements.set(pos, newEl);",
    "info" : "ExpressionStatement[23594-23629]:ExpressionStatement[23504-23539]"
  }, {
    "left" : "if (pos == size-1)",
    "right" : "if (pos == size-1)",
    "info" : "IfStatement[23661-23742]:IfStatement[23571-23652]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23736-23742]:BreakStatement[23646-23652]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23764-23768]:PrimitiveType[23674-23678]"
  }, {
    "left" : "clearFormattingElementsToLastMarker",
    "right" : "clearFormattingElementsToLastMarker",
    "info" : "SimpleName[23769-23804]:SimpleName[23679-23714]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23807-23979]:Block[23717-23889]"
  }, {
    "left" : "while (!formattingElements.isEmpty())",
    "right" : "while (!formattingElements.isEmpty())",
    "info" : "WhileStatement[23817-23973]:WhileStatement[23727-23883]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23855-23973]:Block[23765-23883]"
  }, {
    "left" : "Element el = removeLastFormattingElement();",
    "right" : "Element el = removeLastFormattingElement();",
    "info" : "VariableDeclarationStatement[23869-23912]:VariableDeclarationStatement[23779-23822]"
  }, {
    "left" : "if (el == null)",
    "right" : "if (el == null)",
    "info" : "IfStatement[23925-23963]:IfStatement[23835-23873]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23957-23963]:BreakStatement[23867-23873]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23985-23989]:PrimitiveType[23895-23899]"
  }, {
    "left" : "removeFromActiveFormattingElements",
    "right" : "removeFromActiveFormattingElements",
    "info" : "SimpleName[23990-24024]:SimpleName[23900-23934]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[24025-24035]:SingleVariableDeclaration[23935-23945]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24037-24297]:Block[23947-24207]"
  }, {
    "left" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[24047-24291]:ForStatement[23957-24201]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24109-24291]:Block[24019-24201]"
  }, {
    "left" : "Element next = formattingElements.get(pos);",
    "right" : "Element next = formattingElements.get(pos);",
    "info" : "VariableDeclarationStatement[24123-24166]:VariableDeclarationStatement[24033-24076]"
  }, {
    "left" : "if (next == el)",
    "right" : "if (next == el)",
    "info" : "IfStatement[24179-24281]:IfStatement[24089-24191]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24195-24281]:Block[24105-24191]"
  }, {
    "left" : "formattingElements.remove(pos);",
    "right" : "formattingElements.remove(pos);",
    "info" : "ExpressionStatement[24213-24244]:ExpressionStatement[24123-24154]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24261-24267]:BreakStatement[24171-24177]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[24303-24310]:PrimitiveType[24213-24220]"
  }, {
    "left" : "isInActiveFormattingElements",
    "right" : "isInActiveFormattingElements",
    "info" : "SimpleName[24311-24339]:SimpleName[24221-24249]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[24340-24350]:SingleVariableDeclaration[24250-24260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24352-24416]:Block[24262-24326]"
  }, {
    "left" : "return isElementInQueue(formattingElements, el);",
    "right" : "return isElementInQueue(formattingElements, el);",
    "info" : "ReturnStatement[24362-24410]:ReturnStatement[24272-24320]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[24422-24429]:SimpleType[24332-24339]"
  }, {
    "left" : "getActiveFormattingElement",
    "right" : "getActiveFormattingElement",
    "info" : "SimpleName[24430-24456]:SimpleName[24340-24366]"
  }, {
    "left" : "String nodeName",
    "right" : "String nodeName",
    "info" : "SingleVariableDeclaration[24457-24472]:SingleVariableDeclaration[24367-24382]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24474-24793]:Block[24384-24703]"
  }, {
    "left" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[24484-24766]:ForStatement[24394-24676]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24546-24766]:Block[24456-24676]"
  }, {
    "left" : "Element next = formattingElements.get(pos);",
    "right" : "Element next = formattingElements.get(pos);",
    "info" : "VariableDeclarationStatement[24560-24603]:VariableDeclarationStatement[24470-24513]"
  }, {
    "left" : "if (next == null)",
    "right" : "if (next == null)",
    "info" : "IfStatement[24616-24756]:IfStatement[24526-24666]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24666-24672]:BreakStatement[24576-24582]"
  }, {
    "left" : "if (next.nodeName().equals(nodeName))",
    "right" : "if (next.nodeName().equals(nodeName))",
    "info" : "IfStatement[24690-24756]:IfStatement[24600-24666]"
  }, {
    "left" : "return next;",
    "right" : "return next;",
    "info" : "ReturnStatement[24744-24756]:ReturnStatement[24654-24666]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[24775-24787]:ReturnStatement[24685-24697]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24799-24803]:PrimitiveType[24709-24713]"
  }, {
    "left" : "replaceActiveFormattingElement",
    "right" : "replaceActiveFormattingElement",
    "info" : "SimpleName[24804-24834]:SimpleName[24714-24744]"
  }, {
    "left" : "Element out",
    "right" : "Element out",
    "info" : "SingleVariableDeclaration[24835-24846]:SingleVariableDeclaration[24745-24756]"
  }, {
    "left" : "Element in",
    "right" : "Element in",
    "info" : "SingleVariableDeclaration[24848-24858]:SingleVariableDeclaration[24758-24768]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24860-24920]:Block[24770-24830]"
  }, {
    "left" : "replaceInQueue(formattingElements, out, in);",
    "right" : "replaceInQueue(formattingElements, out, in);",
    "info" : "ExpressionStatement[24870-24914]:ExpressionStatement[24780-24824]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24926-24930]:PrimitiveType[24836-24840]"
  }, {
    "left" : "insertMarkerToFormattingElements",
    "right" : "insertMarkerToFormattingElements",
    "info" : "SimpleName[24931-24963]:SimpleName[24841-24873]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24966-25011]:Block[24876-24921]"
  }, {
    "left" : "formattingElements.add(null);",
    "right" : "formattingElements.add(null);",
    "info" : "ExpressionStatement[24976-25005]:ExpressionStatement[24886-24915]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[25017-25021]:PrimitiveType[24927-24931]"
  }, {
    "left" : "insertInFosterParent",
    "right" : "insertInFosterParent",
    "info" : "SimpleName[25022-25042]:SimpleName[24932-24952]"
  }, {
    "left" : "Node in",
    "right" : "Node in",
    "info" : "SingleVariableDeclaration[25043-25050]:SingleVariableDeclaration[24953-24960]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25052-25736]:Block[24962-25646]"
  }, {
    "left" : "Element fosterParent;",
    "right" : "Element fosterParent;",
    "info" : "VariableDeclarationStatement[25062-25083]:VariableDeclarationStatement[24972-24993]"
  }, {
    "left" : "Element lastTable = getFromStack(\"table\");",
    "right" : "Element lastTable = getFromStack(\"table\");",
    "info" : "VariableDeclarationStatement[25092-25134]:VariableDeclarationStatement[25002-25044]"
  }, {
    "left" : "boolean isLastTableParent = false;",
    "right" : "boolean isLastTableParent = false;",
    "info" : "VariableDeclarationStatement[25143-25177]:VariableDeclarationStatement[25053-25087]"
  }, {
    "left" : "if (lastTable != null)",
    "right" : "if (lastTable != null)",
    "info" : "IfStatement[25186-25512]:IfStatement[25096-25422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25209-25434]:Block[25119-25344]"
  }, {
    "left" : "if (lastTable.parent() != null)",
    "right" : "if (lastTable.parent() != null)",
    "info" : "IfStatement[25223-25424]:IfStatement[25133-25334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25255-25363]:Block[25165-25273]"
  }, {
    "left" : "fosterParent = lastTable.parent();",
    "right" : "fosterParent = lastTable.parent();",
    "info" : "ExpressionStatement[25273-25307]:ExpressionStatement[25183-25217]"
  }, {
    "left" : "isLastTableParent = true;",
    "right" : "isLastTableParent = true;",
    "info" : "ExpressionStatement[25324-25349]:ExpressionStatement[25234-25259]"
  }, {
    "left" : "fosterParent = aboveOnStack(lastTable);",
    "right" : "fosterParent = aboveOnStack(lastTable);",
    "info" : "ExpressionStatement[25385-25424]:ExpressionStatement[25295-25334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25440-25512]:Block[25350-25422]"
  }, {
    "left" : "fosterParent = stack.get(0);",
    "right" : "fosterParent = stack.get(0);",
    "info" : "ExpressionStatement[25474-25502]:ExpressionStatement[25384-25412]"
  }, {
    "left" : "if (isLastTableParent)",
    "right" : "if (isLastTableParent)",
    "info" : "IfStatement[25522-25730]:IfStatement[25432-25640]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25545-25675]:Block[25455-25585]"
  }, {
    "left" : "Validate.notNull(lastTable);",
    "right" : "Validate.notNull(lastTable);",
    "info" : "ExpressionStatement[25559-25587]:ExpressionStatement[25469-25497]"
  }, {
    "left" : "lastTable.before(in);",
    "right" : "lastTable.before(in);",
    "info" : "ExpressionStatement[25644-25665]:ExpressionStatement[25554-25575]"
  }, {
    "left" : "fosterParent.appendChild(in);",
    "right" : "fosterParent.appendChild(in);",
    "info" : "ExpressionStatement[25701-25730]:ExpressionStatement[25611-25640]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[25742-25751]:MarkerAnnotation[25652-25661]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25756-25762]:Modifier[25666-25672]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[25763-25769]:SimpleType[25673-25679]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[25770-25778]:SimpleName[25680-25688]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25781-25984]:Block[25691-25894]"
  }, {
    "left" : "return \"TreeBuilder{\" +\n                \"currentToken=\" + currentToken +\n                \", state=\" + state +\n                \", currentElement=\" + currentElement() +\n                '}';",
    "right" : "return \"TreeBuilder{\" +\n                \"currentToken=\" + currentToken +\n                \", state=\" + state +\n                \", currentElement=\" + currentElement() +\n                '}';",
    "info" : "ReturnStatement[25791-25978]:ReturnStatement[25701-25888]"
  } ]
}