{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "SortsTiming",
      "right" : "SortsTiming",
      "info" : "TypeDeclaration[625-32325]:TypeDeclaration[625-15331]"
    }, {
      "left" : "private static final DecimalFormat FORMAT = new DecimalFormat(\"#.###\");",
      "right" : "private static final DecimalFormat FORMAT = new DecimalFormat(\"#.###\");",
      "info" : "FieldDeclaration[657-728]:FieldDeclaration[657-728]"
    }, {
      "left" : "private static final int SIZE = 1024*20;",
      "right" : "private static final int SIZE = 1024*100;",
      "info" : "FieldDeclaration[733-773]:FieldDeclaration[733-774]"
    }, {
      "left" : "private static final boolean showResult = false;",
      "right" : "private static final boolean showResult = false;",
      "info" : "FieldDeclaration[779-827]:FieldDeclaration[779-827]"
    }, {
      "left" : "private static final boolean checkResults = true;",
      "right" : "private static final boolean checkResults = true;",
      "info" : "FieldDeclaration[888-937]:FieldDeclaration[832-881]"
    }, {
      "left" : "private static int insertionCount = 0;",
      "right" : "private static int insertionCount = 0;",
      "info" : "FieldDeclaration[943-981]:FieldDeclaration[887-925]"
    }, {
      "left" : "private static final double[] insertionResults = new double[1 * 3];",
      "right" : "private static double[] insertionResults = null;",
      "info" : "FieldDeclaration[986-1053]:FieldDeclaration[930-978]"
    }, {
      "left" : "private static int bubbleCount = 0;",
      "right" : "private static int bubbleCount = 0;",
      "info" : "FieldDeclaration[1058-1093]:FieldDeclaration[983-1018]"
    }, {
      "left" : "private static final double[] bubbleResults = new double[1 * 3];",
      "right" : "private static double[] bubbleResults = null;",
      "info" : "FieldDeclaration[1098-1162]:FieldDeclaration[1023-1068]"
    }, {
      "left" : "private static int shellCount = 0;",
      "right" : "private static int shellCount = 0;",
      "info" : "FieldDeclaration[1167-1201]:FieldDeclaration[1073-1107]"
    }, {
      "left" : "private static final double[] shellResults = new double[1 * 3];",
      "right" : "private static double[] shellResults = null;",
      "info" : "FieldDeclaration[1206-1269]:FieldDeclaration[1112-1156]"
    }, {
      "left" : "private static int mergeInPlaceCount = 0;",
      "right" : "private static int mergeCount = 0;",
      "info" : "FieldDeclaration[1274-1315]:FieldDeclaration[1161-1195]"
    }, {
      "left" : "private static final double[] mergeInPlaceResults = new double[1 * 3];",
      "right" : "private static double[] mergeResults = null;",
      "info" : "FieldDeclaration[1320-1390]:FieldDeclaration[1200-1244]"
    }, {
      "left" : "private static int quickCount = 0;",
      "right" : "private static int quickCount = 0;",
      "info" : "FieldDeclaration[1522-1556]:FieldDeclaration[1249-1283]"
    }, {
      "left" : "private static final double[] quickResults = new double[3 * 3];",
      "right" : "private static double[] quickResults = null;",
      "info" : "FieldDeclaration[1561-1624]:FieldDeclaration[1288-1332]"
    }, {
      "left" : "private static int heapCount = 0;",
      "right" : "private static int heapCount = 0;",
      "info" : "FieldDeclaration[1629-1662]:FieldDeclaration[1337-1370]"
    }, {
      "left" : "private static final double[] heapResults = new double[1 * 3];",
      "right" : "private static double[] heapResults = null;",
      "info" : "FieldDeclaration[1667-1729]:FieldDeclaration[1375-1418]"
    }, {
      "left" : "private static int countingCount = 0;",
      "right" : "private static int countingCount = 0;",
      "info" : "FieldDeclaration[1734-1771]:FieldDeclaration[1423-1460]"
    }, {
      "left" : "private static final double[] countingResults = new double[1 * 3];",
      "right" : "private static double[] countingResults = null;",
      "info" : "FieldDeclaration[1776-1842]:FieldDeclaration[1465-1512]"
    }, {
      "left" : "private static int radixCount = 0;",
      "right" : "private static int radixCount = 0;",
      "info" : "FieldDeclaration[1847-1881]:FieldDeclaration[1517-1551]"
    }, {
      "left" : "private static final double[] radixResults = new double[1 * 3];",
      "right" : "private static double[] radixResults = null;",
      "info" : "FieldDeclaration[1886-1949]:FieldDeclaration[1556-1600]"
    }, {
      "left" : "private static int americanFlagCount = 0;",
      "right" : "private static int americanFlagCount = 0;",
      "info" : "FieldDeclaration[1954-1995]:FieldDeclaration[1605-1646]"
    }, {
      "left" : "private static final double[] americanFlagResults = new double[1 * 3];",
      "right" : "private static double[] americanFlagResults = null;",
      "info" : "FieldDeclaration[2000-2070]:FieldDeclaration[1651-1702]"
    }, {
      "left" : "private static Integer[] unsorted = null;",
      "right" : "private static Integer[] unsorted = null;",
      "info" : "FieldDeclaration[2618-2659]:FieldDeclaration[1708-1749]"
    }, {
      "left" : "private static Integer[] sorted = null;",
      "right" : "private static Integer[] sorted = null;",
      "info" : "FieldDeclaration[2664-2703]:FieldDeclaration[1754-1793]"
    }, {
      "left" : "private static Integer[] reverse = null;",
      "right" : "private static Integer[] reverse = null;",
      "info" : "FieldDeclaration[2708-2748]:FieldDeclaration[1798-1838]"
    }, {
      "left" : "public static void main(String[] args)",
      "right" : "public static void main(String[] args)",
      "info" : "MethodDeclaration[2754-27363]:MethodDeclaration[1844-4669]"
    }, {
      "left" : "private static final void showComparison()",
      "right" : "private static final void showComparison()",
      "info" : "MethodDeclaration[27369-30418]:MethodDeclaration[10338-13424]"
    }, {
      "left" : "private static final void showResult(Integer[] u, Integer[] r)",
      "right" : "private static final void showResult(Integer[] u, Integer[] r)",
      "info" : "MethodDeclaration[30424-30626]:MethodDeclaration[13430-13632]"
    }, {
      "left" : "private static final boolean check(Integer[] array)",
      "right" : "private static final boolean check(Integer[] array)",
      "info" : "MethodDeclaration[30632-30842]:MethodDeclaration[13638-13848]"
    }, {
      "left" : "public static final String print(Integer[] array)",
      "right" : "public static final String print(Integer[] array)",
      "info" : "MethodDeclaration[30848-30951]:MethodDeclaration[13854-13957]"
    }, {
      "left" : "public static final String print(Integer[] array, int start, int length)",
      "right" : "public static final String print(Integer[] array, int start, int length)",
      "info" : "MethodDeclaration[30957-31300]:MethodDeclaration[13963-14306]"
    }, {
      "left" : "public static final String printWithPivot(Integer[] array, int pivotIndex, int start, int length)",
      "right" : "public static final String printWithPivot(Integer[] array, int pivotIndex, int start, int length)",
      "info" : "MethodDeclaration[31306-31776]:MethodDeclaration[14312-14782]"
    }, {
      "left" : "private static final void putOutTheGarbage()",
      "right" : "private static final void putOutTheGarbage()",
      "info" : "MethodDeclaration[31782-31912]:MethodDeclaration[14788-14918]"
    }, {
      "left" : "private static final long fSLEEP_INTERVAL = 100;",
      "right" : "private static final long fSLEEP_INTERVAL = 100;",
      "info" : "FieldDeclaration[31918-31966]:FieldDeclaration[14924-14972]"
    }, {
      "left" : "private static final void collectGarbage()",
      "right" : "private static final void collectGarbage()",
      "info" : "MethodDeclaration[31972-32323]:MethodDeclaration[14978-15329]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[625-631]:Modifier[625-631]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[632-637]:TYPE_DECLARATION_KIND[632-637]"
    }, {
      "left" : "SortsTiming",
      "right" : "SortsTiming",
      "info" : "SimpleName[638-649]:SimpleName[638-649]"
    }, {
      "left" : "20",
      "right" : "100",
      "info" : "NumberLiteral[770-772]:NumberLiteral[770-773]"
    }, {
      "left" : "mergeInPlaceCount",
      "right" : "mergeCount",
      "info" : "SimpleName[1293-1310]:SimpleName[1180-1190]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[1350-1369]:SimpleName[1224-1236]"
    }, {
      "left" : "new double[3 * 3]",
      "right" : "new double[3 * 3]",
      "info" : "ArrayCreation[1606-1623]:ArrayCreation[3672-3689]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[1844-1850]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2761-2767]:Modifier[1851-1857]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2768-2772]:PrimitiveType[1858-1862]"
    }, {
      "left" : "main",
      "right" : "main",
      "info" : "SimpleName[2773-2777]:SimpleName[1863-1867]"
    }, {
      "left" : "String[] args",
      "right" : "String[] args",
      "info" : "SingleVariableDeclaration[2778-2791]:SingleVariableDeclaration[1868-1881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2793-27363]:Block[1883-4669]"
    }, {
      "left" : "System.out.println(\"Generating random array.\");",
      "right" : "System.out.println(\"Generating random array.\");",
      "info" : "ExpressionStatement[2803-2850]:ExpressionStatement[1893-1940]"
    }, {
      "left" : "Random random = new Random();",
      "right" : "Random random = new Random();",
      "info" : "VariableDeclarationStatement[2859-2888]:VariableDeclarationStatement[1949-1978]"
    }, {
      "left" : "unsorted = new Integer[SIZE];",
      "right" : "unsorted = new Integer[SIZE];",
      "info" : "ExpressionStatement[2897-2926]:ExpressionStatement[1987-2016]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[2935-2945]:VariableDeclarationStatement[2025-2035]"
    }, {
      "left" : "while (i < unsorted.length)",
      "right" : "while (i < unsorted.length)",
      "info" : "WhileStatement[2954-3082]:WhileStatement[2044-2172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2982-3082]:Block[2072-2172]"
    }, {
      "left" : "int j = random.nextInt(unsorted.length * 10);",
      "right" : "int j = random.nextInt(unsorted.length * 10);",
      "info" : "VariableDeclarationStatement[2996-3041]:VariableDeclarationStatement[2086-2131]"
    }, {
      "left" : "unsorted[i++] = j;",
      "right" : "unsorted[i++] = j;",
      "info" : "ExpressionStatement[3054-3072]:ExpressionStatement[2144-2162]"
    }, {
      "left" : "System.out.println(\"Generated random array.\");",
      "right" : "System.out.println(\"Generated random array.\");",
      "info" : "ExpressionStatement[3091-3137]:ExpressionStatement[2181-2227]"
    }, {
      "left" : "System.out.println(\"Generating sorted array.\");",
      "right" : "System.out.println(\"Generating sorted array.\");",
      "info" : "ExpressionStatement[3147-3194]:ExpressionStatement[2237-2284]"
    }, {
      "left" : "sorted = new Integer[SIZE];",
      "right" : "sorted = new Integer[SIZE];",
      "info" : "ExpressionStatement[3203-3230]:ExpressionStatement[2293-2320]"
    }, {
      "left" : "for (i = 0; i < sorted.length; i++)",
      "right" : "for (i = 0; i < sorted.length; i++)",
      "info" : "ForStatement[3239-3313]:ForStatement[2329-2403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3275-3313]:Block[2365-2403]"
    }, {
      "left" : "sorted[i] = i;",
      "right" : "sorted[i] = i;",
      "info" : "ExpressionStatement[3289-3303]:ExpressionStatement[2379-2393]"
    }, {
      "left" : "System.out.println(\"Generated sorted array.\");",
      "right" : "System.out.println(\"Generated sorted array.\");",
      "info" : "ExpressionStatement[3322-3368]:ExpressionStatement[2412-2458]"
    }, {
      "left" : "System.out.println(\"Generating reverse sorted array.\");",
      "right" : "System.out.println(\"Generating reverse sorted array.\");",
      "info" : "ExpressionStatement[3378-3433]:ExpressionStatement[2468-2523]"
    }, {
      "left" : "reverse = new Integer[SIZE];",
      "right" : "reverse = new Integer[SIZE];",
      "info" : "ExpressionStatement[3442-3470]:ExpressionStatement[2532-2560]"
    }, {
      "left" : "for (i = (reverse.length - 1); i >= 0; i--)",
      "right" : "for (i = (reverse.length - 1); i >= 0; i--)",
      "info" : "ForStatement[3479-3575]:ForStatement[2569-2665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3523-3575]:Block[2613-2665]"
    }, {
      "left" : "reverse[i] = (SIZE - 1) - i;",
      "right" : "reverse[i] = (SIZE - 1) - i;",
      "info" : "ExpressionStatement[3537-3565]:ExpressionStatement[2627-2655]"
    }, {
      "left" : "System.out.println(\"Generated reverse sorted array.\");",
      "right" : "System.out.println(\"Generated reverse sorted array.\");",
      "info" : "ExpressionStatement[3584-3638]:ExpressionStatement[2674-2728]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[3647-3668]:ExpressionStatement[2737-2758]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[3677-3696]:ExpressionStatement[2767-2786]"
    }, {
      "left" : "System.out.println(\"Starting sorts...\");",
      "right" : "System.out.println(\"Starting sorts...\");",
      "info" : "ExpressionStatement[3706-3746]:ExpressionStatement[2796-2836]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[3755-3776]:ExpressionStatement[2845-2866]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[3785-3804]:ExpressionStatement[2875-2894]"
    }, {
      "left" : "long bInsertion = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[3876-3912]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "long aInsertion = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[4103-4139]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "double diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "right" : "double diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "info" : "VariableDeclarationStatement[4152-4211]:VariableDeclarationStatement[5061-5120]"
    }, {
      "left" : "result = InsertionSort.sort(sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[4556-4600]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[4964-4970]:SimpleName[3002-3008]"
    }, {
      "left" : "result = InsertionSort.sort(reverse.clone());",
      "right" : "result = InsertionSort.sort(reverse.clone());",
      "info" : "ExpressionStatement[5161-5206]:ExpressionStatement[5914-5959]"
    }, {
      "left" : "diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "right" : "bubbleResults = new double[1 * 3];",
      "info" : "ExpressionStatement[5372-5424]:ExpressionStatement[3080-3114]"
    }, {
      "left" : "1000000d",
      "right" : "1",
      "info" : "NumberLiteral[5407-5415]:NumberLiteral[3107-3108]"
    }, {
      "left" : "1000d",
      "right" : "3",
      "info" : "NumberLiteral[5418-5423]:NumberLiteral[3111-3112]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[5943-5951]:SimpleName[3159-3167]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[3169-3175]"
    }, {
      "left" : "showResult",
      "right" : "showComparison",
      "info" : "SimpleName[7478-7488]:SimpleName[3214-3228]"
    }, {
      "left" : "showResult(reverse, result)",
      "right" : "showComparison()",
      "info" : "MethodInvocation[7478-7505]:MethodInvocation[3214-3230]"
    }, {
      "left" : "shells = new int[] { 10, 5, 3, 1 }",
      "right" : "shells = new int[] { 10, 5, 3, 1 }",
      "info" : "VariableDeclarationFragment[7745-7779]:VariableDeclarationFragment[10066-10100]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[7908-7916]:SimpleName[3317-3325]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[8501-8507]:SimpleName[3327-3333]"
    }, {
      "left" : "result = ShellSort.sort(shells, reverse.clone());",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[9046-9095]:ExpressionStatement[3370-3387]"
    }, {
      "left" : "diff = (aShell - bShell) / 1000000d / 1000d;",
      "right" : "mergeResults = new double[2 * 3];",
      "info" : "ExpressionStatement[9253-9297]:ExpressionStatement[3397-3430]"
    }, {
      "left" : "1000000d",
      "right" : "2",
      "info" : "NumberLiteral[9280-9288]:NumberLiteral[3423-3424]"
    }, {
      "left" : "1000d",
      "right" : "3",
      "info" : "NumberLiteral[9291-9296]:NumberLiteral[3427-3428]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[9845-9853]:SimpleName[3483-3491]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[10485-10491]:SimpleName[3493-3499]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[11889-11897]:SimpleName[3577-3585]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[12519-12525]:SimpleName[3587-3593]"
    }, {
      "left" : "result = MergeSort.sort(MergeSort.SPACE_TYPE.IN_PLACE, reverse.clone());",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[13078-13150]:ExpressionStatement[3630-3647]"
    }, {
      "left" : "diff = (aMerge - bMerge) / 1000000d / 1000d;",
      "right" : "quickResults = new double[3 * 3];",
      "info" : "ExpressionStatement[13308-13352]:ExpressionStatement[3657-3690]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[13896-13904]:SimpleName[3738-3746]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[14529-14535]:SimpleName[3748-3754]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[15841-15849]:SimpleName[3831-3839]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[16464-16470]:SimpleName[3841-3847]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[17779-17787]:SimpleName[3924-3932]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[18399-18405]:SimpleName[3934-3940]"
    }, {
      "left" : "result = QuickSort.sort(QuickSort.PIVOT_TYPE.RANDOM, reverse.clone());",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[18962-19032]:ExpressionStatement[3977-3994]"
    }, {
      "left" : "diff = (aQuick - bQuick) / 1000000d / 1000d;",
      "right" : "heapResults = new double[1 * 3];",
      "info" : "ExpressionStatement[19197-19241]:ExpressionStatement[4004-4036]"
    }, {
      "left" : "1000000d",
      "right" : "1",
      "info" : "NumberLiteral[19224-19232]:NumberLiteral[4029-4030]"
    }, {
      "left" : "1000d",
      "right" : "3",
      "info" : "NumberLiteral[19235-19240]:NumberLiteral[4033-4034]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[19750-19758]:SimpleName[4077-4085]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[20326-20332]:SimpleName[4087-4093]"
    }, {
      "left" : "result = HeapSort.sort(reverse.clone());",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[20863-20903]:ExpressionStatement[4128-4145]"
    }, {
      "left" : "diff = (aHeap - bHeap) / 1000000d / 1000d;",
      "right" : "countingResults = new double[1 * 3];",
      "info" : "ExpressionStatement[21059-21101]:ExpressionStatement[4155-4191]"
    }, {
      "left" : "1000000d",
      "right" : "1",
      "info" : "NumberLiteral[21084-21092]:NumberLiteral[4184-4185]"
    }, {
      "left" : "1000d",
      "right" : "3",
      "info" : "NumberLiteral[21095-21100]:NumberLiteral[4188-4189]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[21613-21621]:SimpleName[4240-4248]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[22225-22231]:SimpleName[4250-4256]"
    }, {
      "left" : "result = CountingSort.sort(reverse.clone());",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[22794-22838]:ExpressionStatement[4299-4316]"
    }, {
      "left" : "diff = (aCounting - bCounting) / 1000000d / 1000d;",
      "right" : "radixResults = new double[1 * 3];",
      "info" : "ExpressionStatement[23002-23052]:ExpressionStatement[4326-4359]"
    }, {
      "left" : "1000000d",
      "right" : "1",
      "info" : "NumberLiteral[23035-23043]:NumberLiteral[4352-4353]"
    }, {
      "left" : "1000d",
      "right" : "3",
      "info" : "NumberLiteral[23046-23051]:NumberLiteral[4356-4357]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[23564-23572]:SimpleName[4402-4410]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[24149-24155]:SimpleName[4412-4418]"
    }, {
      "left" : "result = RadixSort.sort(reverse.clone());",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[24694-24735]:ExpressionStatement[4455-4472]"
    }, {
      "left" : "diff = (aRadix - bRadix) / 1000000d / 1000d;",
      "right" : "americanFlagResults = new double[1 * 3];",
      "info" : "ExpressionStatement[24893-24937]:ExpressionStatement[4482-4522]"
    }, {
      "left" : "1000000d",
      "right" : "1",
      "info" : "NumberLiteral[24920-24928]:NumberLiteral[4515-4516]"
    }, {
      "left" : "1000d",
      "right" : "3",
      "info" : "NumberLiteral[24931-24936]:NumberLiteral[4519-4520]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[25462-25470]:SimpleName[4579-4587]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[26084-26090]:SimpleName[4589-4595]"
    }, {
      "left" : "showComparison()",
      "right" : "showComparison()",
      "info" : "MethodInvocation[27340-27356]:MethodInvocation[4646-4662]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[27369-27376]:Modifier[10338-10345]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[27377-27383]:Modifier[10346-10352]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[27384-27389]:Modifier[10353-10358]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27390-27394]:PrimitiveType[10359-10363]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[27395-27409]:SimpleName[10364-10378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27412-30418]:Block[10381-13424]"
    }, {
      "left" : "StringBuilder resultsBuilder = new StringBuilder();",
      "right" : "StringBuilder resultsBuilder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[27422-27473]:VariableDeclarationStatement[10391-10442]"
    }, {
      "left" : "String format = \"%-32s%-15s%-15s%-15s\\n\";",
      "right" : "String format = \"%-32s%-15s%-15s%-15s\\n\";",
      "info" : "VariableDeclarationStatement[27482-27523]:VariableDeclarationStatement[10533-10574]"
    }, {
      "left" : "Formatter formatter = new Formatter(resultsBuilder, Locale.US);",
      "right" : "Formatter formatter = new Formatter(resultsBuilder, Locale.US);",
      "info" : "VariableDeclarationStatement[27532-27595]:VariableDeclarationStatement[10583-10646]"
    }, {
      "left" : "formatter.format(format, \"Algorithm\",\"Random\",\"Sorted\",\"Reverse Sorted\");",
      "right" : "formatter.format(format, \"Algorithm\",\"Random\",\"Sorted\",\"Reverse Sorted\");",
      "info" : "ExpressionStatement[27605-27678]:ExpressionStatement[10656-10729]"
    }, {
      "left" : "if (showInsertion)",
      "right" : "if (insertionResults!=null)",
      "info" : "IfStatement[27687-27910]:IfStatement[10738-10970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27706-27910]:Block[10766-10970]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[27720-27730]:VariableDeclarationStatement[10780-10790]"
    }, {
      "left" : "formatter.format(format, \"Insertion sort\", FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]));",
      "right" : "formatter.format(format, \"Insertion sort\", FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]));",
      "info" : "ExpressionStatement[27743-27900]:ExpressionStatement[10803-10960]"
    }, {
      "left" : "if (showBubble)",
      "right" : "if (bubbleResults!=null)",
      "info" : "IfStatement[27919-28127]:IfStatement[10979-11196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27935-28127]:Block[11004-11196]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[27949-27959]:VariableDeclarationStatement[11018-11028]"
    }, {
      "left" : "formatter.format(format, \"Bubble sort\", FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]));",
      "right" : "formatter.format(format, \"Bubble sort\", FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]));",
      "info" : "ExpressionStatement[27972-28117]:ExpressionStatement[11041-11186]"
    }, {
      "left" : "if (showShell)",
      "right" : "if (shellResults!=null)",
      "info" : "IfStatement[28136-28339]:IfStatement[11205-11417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28151-28339]:Block[11229-11417]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[28165-28175]:VariableDeclarationStatement[11243-11253]"
    }, {
      "left" : "formatter.format(format, \"Shell sort\", FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]));",
      "right" : "formatter.format(format, \"Shell sort\", FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]));",
      "info" : "ExpressionStatement[28188-28329]:ExpressionStatement[11266-11407]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[28384-28394]:VariableDeclarationStatement[11464-11474]"
    }, {
      "left" : "formatter.format(format, \"Merge (in-place) sort\", FORMAT.format(mergeInPlaceResults[i++]), FORMAT.format(mergeInPlaceResults[i++]), FORMAT.format(mergeInPlaceResults[i++]));",
      "right" : "formatter.format(format, \"Merge (in-place) sort\", FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]));",
      "info" : "ExpressionStatement[28407-28580]:ExpressionStatement[11487-11639]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28471-28490]:SimpleName[11551-11563]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28512-28531]:SimpleName[11585-11597]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28553-28572]:SimpleName[11619-11631]"
    }, {
      "left" : "formatter.format(format, \"Merge (not-in-place) sort\", FORMAT.format(mergeNotInPlaceResults[i++]), FORMAT.format(mergeNotInPlaceResults[i++]), FORMAT.format(mergeNotInPlaceResults[i++]));",
      "right" : "formatter.format(format, \"Merge (not-in-place) sort\", FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]));",
      "info" : "ExpressionStatement[28661-28847]:ExpressionStatement[11652-11808]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28729-28751]:SimpleName[11720-11732]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28773-28795]:SimpleName[11754-11766]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28817-28839]:SimpleName[11788-11800]"
    }, {
      "left" : "if (showQuick)",
      "right" : "if (quickResults!=null)",
      "info" : "IfStatement[28866-29436]:IfStatement[11827-12406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28881-29436]:Block[11851-12406]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[28895-28905]:VariableDeclarationStatement[11865-11875]"
    }, {
      "left" : "formatter.format(format, \"Quicksort with first as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "right" : "formatter.format(format, \"Quicksort with first as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "info" : "ExpressionStatement[28918-29078]:ExpressionStatement[11888-12048]"
    }, {
      "left" : "formatter.format(format, \"Quicksort with middle as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "right" : "formatter.format(format, \"Quicksort with middle as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "info" : "ExpressionStatement[29091-29252]:ExpressionStatement[12061-12222]"
    }, {
      "left" : "formatter.format(format, \"Quicksort with random as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "right" : "formatter.format(format, \"Quicksort with random as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "info" : "ExpressionStatement[29265-29426]:ExpressionStatement[12235-12396]"
    }, {
      "left" : "if (showHeap)",
      "right" : "if (heapResults!=null)",
      "info" : "IfStatement[29445-29643]:IfStatement[12415-12622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29459-29643]:Block[12438-12622]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[29473-29483]:VariableDeclarationStatement[12452-12462]"
    }, {
      "left" : "formatter.format(format, \"Heap sort\", FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]));",
      "right" : "formatter.format(format, \"Heap sort\", FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]));",
      "info" : "ExpressionStatement[29496-29633]:ExpressionStatement[12475-12612]"
    }, {
      "left" : "if (showCounting)",
      "right" : "if (countingResults!=null)",
      "info" : "IfStatement[29652-29870]:IfStatement[12631-12858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29670-29870]:Block[12658-12858]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[29684-29694]:VariableDeclarationStatement[12672-12682]"
    }, {
      "left" : "formatter.format(format, \"Counting sort\", FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]));",
      "right" : "formatter.format(format, \"Counting sort\", FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]));",
      "info" : "ExpressionStatement[29707-29860]:ExpressionStatement[12695-12848]"
    }, {
      "left" : "if (showRadix)",
      "right" : "if (radixResults!=null)",
      "info" : "IfStatement[29879-30082]:IfStatement[12867-13079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29894-30082]:Block[12891-13079]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[29908-29918]:VariableDeclarationStatement[12905-12915]"
    }, {
      "left" : "formatter.format(format, \"Radix sort\", FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]));",
      "right" : "formatter.format(format, \"Radix sort\", FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]));",
      "info" : "ExpressionStatement[29931-30072]:ExpressionStatement[12928-13069]"
    }, {
      "left" : "if (showAmericanFlag)",
      "right" : "if (americanFlagResults!=null)",
      "info" : "IfStatement[30091-30330]:IfStatement[13088-13336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30113-30330]:Block[13119-13336]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[30127-30137]:VariableDeclarationStatement[13133-13143]"
    }, {
      "left" : "formatter.format(format, \"American Flag sort\", FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]));",
      "right" : "formatter.format(format, \"American Flag sort\", FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]));",
      "info" : "ExpressionStatement[30150-30320]:ExpressionStatement[13156-13326]"
    }, {
      "left" : "formatter.close();",
      "right" : "formatter.close();",
      "info" : "ExpressionStatement[30339-30357]:ExpressionStatement[13345-13363]"
    }, {
      "left" : "System.out.println(resultsBuilder.toString());",
      "right" : "System.out.println(resultsBuilder.toString());",
      "info" : "ExpressionStatement[30366-30412]:ExpressionStatement[13372-13418]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[30424-30431]:Modifier[13430-13437]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30432-30438]:Modifier[13438-13444]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30439-30444]:Modifier[13445-13450]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30445-30449]:PrimitiveType[13451-13455]"
    }, {
      "left" : "showResult",
      "right" : "showResult",
      "info" : "SimpleName[30450-30460]:SimpleName[13456-13466]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] u",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[13467-13478]"
    }, {
      "left" : "Integer[] r",
      "right" : "Integer[] r",
      "info" : "SingleVariableDeclaration[30474-30485]:SingleVariableDeclaration[13480-13491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30487-30626]:Block[13493-13632]"
    }, {
      "left" : "System.out.println(\"Unsorted: \" + print(u));",
      "right" : "System.out.println(\"Unsorted: \" + print(u));",
      "info" : "ExpressionStatement[30497-30541]:ExpressionStatement[13503-13547]"
    }, {
      "left" : "System.out.println(\"Sorted: \" + print(r));",
      "right" : "System.out.println(\"Sorted: \" + print(r));",
      "info" : "ExpressionStatement[30550-30592]:ExpressionStatement[13556-13598]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[30601-30620]:ExpressionStatement[13607-13626]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[30632-30639]:Modifier[13638-13645]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30640-30646]:Modifier[13646-13652]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30647-30652]:Modifier[13653-13658]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[30653-30660]:PrimitiveType[13659-13666]"
    }, {
      "left" : "check",
      "right" : "check",
      "info" : "SimpleName[30661-30666]:SimpleName[13667-13672]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[30667-30682]:SingleVariableDeclaration[13673-13688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30684-30842]:Block[13690-13848]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[30694-30815]:ForStatement[13700-13821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30733-30815]:Block[13739-13821]"
    }, {
      "left" : "if (array[i - 1] > array[i])",
      "right" : "if (array[i - 1] > array[i])",
      "info" : "IfStatement[30747-30805]:IfStatement[13753-13811]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[30792-30805]:ReturnStatement[13798-13811]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[30824-30836]:ReturnStatement[13830-13842]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30848-30854]:Modifier[13854-13860]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30855-30861]:Modifier[13861-13867]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30862-30867]:Modifier[13868-13873]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[13874-13880]"
    }, {
      "left" : "print",
      "right" : "print",
      "info" : "SimpleName[30875-30880]:SimpleName[13881-13886]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[30881-30896]:SingleVariableDeclaration[13887-13902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30898-30951]:Block[13904-13957]"
    }, {
      "left" : "return print(array, 0, array.length);",
      "right" : "return print(array, 0, array.length);",
      "info" : "ReturnStatement[30908-30945]:ReturnStatement[13914-13951]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30957-30963]:Modifier[13963-13969]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30964-30970]:Modifier[13970-13976]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30971-30976]:Modifier[13977-13982]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30977-30983]:SimpleType[13983-13989]"
    }, {
      "left" : "print",
      "right" : "print",
      "info" : "SimpleName[30984-30989]:SimpleName[13990-13995]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[30990-31005]:SingleVariableDeclaration[13996-14011]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[31007-31016]:SingleVariableDeclaration[14013-14022]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[31018-31028]:SingleVariableDeclaration[14024-14034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31030-31300]:Block[14036-14306]"
    }, {
      "left" : "final Integer[] clone = array.clone();",
      "right" : "final Integer[] clone = array.clone();",
      "info" : "VariableDeclarationStatement[31040-31078]:VariableDeclarationStatement[14046-14084]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder();",
      "right" : "StringBuilder builder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[31087-31131]:VariableDeclarationStatement[14093-14137]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[31140-31259]:ForStatement[14146-14265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31173-31259]:Block[14179-14265]"
    }, {
      "left" : "int e = clone[start + i];",
      "right" : "int e = clone[start + i];",
      "info" : "VariableDeclarationStatement[31187-31212]:VariableDeclarationStatement[14193-14218]"
    }, {
      "left" : "builder.append(e + \" \");",
      "right" : "builder.append(e + \" \");",
      "info" : "ExpressionStatement[31225-31249]:ExpressionStatement[14231-14255]"
    }, {
      "left" : "return builder.toString();",
      "right" : "return builder.toString();",
      "info" : "ReturnStatement[31268-31294]:ReturnStatement[14274-14300]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31306-31312]:Modifier[14312-14318]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31313-31319]:Modifier[14319-14325]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31320-31325]:Modifier[14326-14331]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[31326-31332]:SimpleType[14332-14338]"
    }, {
      "left" : "printWithPivot",
      "right" : "printWithPivot",
      "info" : "SimpleName[31333-31347]:SimpleName[14339-14353]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[31348-31363]:SingleVariableDeclaration[14354-14369]"
    }, {
      "left" : "int pivotIndex",
      "right" : "int pivotIndex",
      "info" : "SingleVariableDeclaration[31365-31379]:SingleVariableDeclaration[14371-14385]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[31381-31390]:SingleVariableDeclaration[14387-14396]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[31392-31402]:SingleVariableDeclaration[14398-14408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31404-31776]:Block[14410-14782]"
    }, {
      "left" : "final Integer[] clone = array.clone();",
      "right" : "final Integer[] clone = array.clone();",
      "info" : "VariableDeclarationStatement[31414-31452]:VariableDeclarationStatement[14420-14458]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder();",
      "right" : "StringBuilder builder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[31461-31505]:VariableDeclarationStatement[14467-14511]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[31514-31735]:ForStatement[14520-14741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31547-31735]:Block[14553-14741]"
    }, {
      "left" : "int e = clone[start + i];",
      "right" : "int e = clone[start + i];",
      "info" : "VariableDeclarationStatement[31561-31586]:VariableDeclarationStatement[14567-14592]"
    }, {
      "left" : "if (i == pivotIndex)",
      "right" : "if (i == pivotIndex)",
      "info" : "IfStatement[31599-31725]:IfStatement[14605-14731]"
    }, {
      "left" : "builder.append(\"`\" + e + \"` \");",
      "right" : "builder.append(\"`\" + e + \"` \");",
      "info" : "ExpressionStatement[31636-31667]:ExpressionStatement[14642-14673]"
    }, {
      "left" : "builder.append(e + \" \");",
      "right" : "builder.append(e + \" \");",
      "info" : "ExpressionStatement[31701-31725]:ExpressionStatement[14707-14731]"
    }, {
      "left" : "return builder.toString();",
      "right" : "return builder.toString();",
      "info" : "ReturnStatement[31744-31770]:ReturnStatement[14750-14776]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[31782-31789]:Modifier[14788-14795]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31790-31796]:Modifier[14796-14802]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31797-31802]:Modifier[14803-14808]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31803-31807]:PrimitiveType[14809-14813]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[31808-31824]:SimpleName[14814-14830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31827-31912]:Block[14833-14918]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[31837-31854]:ExpressionStatement[14843-14860]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[31863-31880]:ExpressionStatement[14869-14886]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[31889-31906]:ExpressionStatement[14895-14912]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[31972-31979]:Modifier[14978-14985]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31980-31986]:Modifier[14986-14992]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31987-31992]:Modifier[14993-14998]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31993-31997]:PrimitiveType[14999-15003]"
    }, {
      "left" : "collectGarbage",
      "right" : "collectGarbage",
      "info" : "SimpleName[31998-32012]:SimpleName[15004-15018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32015-32323]:Block[15021-15329]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[32025-32317]:TryStatement[15031-15323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32029-32239]:Block[15035-15245]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[32043-32055]:ExpressionStatement[15049-15061]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[32068-32080]:ExpressionStatement[15074-15086]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[32093-32105]:ExpressionStatement[15099-15111]"
    }, {
      "left" : "Thread.sleep(fSLEEP_INTERVAL);",
      "right" : "Thread.sleep(fSLEEP_INTERVAL);",
      "info" : "ExpressionStatement[32118-32148]:ExpressionStatement[15124-15154]"
    }, {
      "left" : "System.runFinalization();",
      "right" : "System.runFinalization();",
      "info" : "ExpressionStatement[32161-32186]:ExpressionStatement[15167-15192]"
    }, {
      "left" : "Thread.sleep(fSLEEP_INTERVAL);",
      "right" : "Thread.sleep(fSLEEP_INTERVAL);",
      "info" : "ExpressionStatement[32199-32229]:ExpressionStatement[15205-15235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32272-32317]:Block[15278-15323]"
    }, {
      "left" : "ex.printStackTrace();",
      "right" : "ex.printStackTrace();",
      "info" : "ExpressionStatement[32286-32307]:ExpressionStatement[15292-15313]"
    } ]
  },
  "interFileMappings" : { }
}