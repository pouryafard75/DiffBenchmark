{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = -6337346779577272306L;",
      "right" : "private static final long serialVersionUID = -6337346779577272306L;",
      "info" : "FieldDeclaration[1388-1498]:FieldDeclaration[1388-1498]"
    }, {
      "left" : "private static final String DEFAULT_IMAGINARY_CHARACTER = \"i\";",
      "right" : "private static final String DEFAULT_IMAGINARY_CHARACTER = \"i\";",
      "info" : "FieldDeclaration[1508-1614]:FieldDeclaration[1508-1614]"
    }, {
      "left" : "private String imaginaryCharacter;",
      "right" : "private String imaginaryCharacter;",
      "info" : "FieldDeclaration[1624-1740]:FieldDeclaration[1624-1740]"
    }, {
      "left" : "private NumberFormat imaginaryFormat;",
      "right" : "private NumberFormat imaginaryFormat;",
      "info" : "FieldDeclaration[1750-1838]:FieldDeclaration[1750-1838]"
    }, {
      "left" : "private NumberFormat realFormat;",
      "right" : "private NumberFormat realFormat;",
      "info" : "FieldDeclaration[1844-1922]:FieldDeclaration[1844-1922]"
    }, {
      "left" : "public ComplexFormat()",
      "right" : "public ComplexFormat()",
      "info" : "MethodDeclaration[1932-2188]:MethodDeclaration[1932-2188]"
    }, {
      "left" : "public ComplexFormat(NumberFormat format)",
      "right" : "public ComplexFormat(NumberFormat format)",
      "info" : "MethodDeclaration[2194-2480]:MethodDeclaration[2194-2480]"
    }, {
      "left" : "public ComplexFormat(NumberFormat realFormat,\n            NumberFormat imaginaryFormat)",
      "right" : "public ComplexFormat(NumberFormat realFormat,\n            NumberFormat imaginaryFormat)",
      "info" : "MethodDeclaration[2490-2937]:MethodDeclaration[2490-2937]"
    }, {
      "left" : "public ComplexFormat(String imaginaryCharacter)",
      "right" : "public ComplexFormat(String imaginaryCharacter)",
      "info" : "MethodDeclaration[2947-3276]:MethodDeclaration[2947-3276]"
    }, {
      "left" : "public ComplexFormat(String imaginaryCharacter, NumberFormat format)",
      "right" : "public ComplexFormat(String imaginaryCharacter, NumberFormat format)",
      "info" : "MethodDeclaration[3286-3719]:MethodDeclaration[3286-3719]"
    }, {
      "left" : "public ComplexFormat(String imaginaryCharacter, NumberFormat realFormat,\n            NumberFormat imaginaryFormat)",
      "right" : "public ComplexFormat(String imaginaryCharacter, NumberFormat realFormat,\n            NumberFormat imaginaryFormat)",
      "info" : "MethodDeclaration[3729-4382]:MethodDeclaration[3729-4382]"
    }, {
      "left" : "public static String formatComplex( Complex c )",
      "right" : "public static String formatComplex( Complex c )",
      "info" : "MethodDeclaration[4388-4707]:MethodDeclaration[4388-4707]"
    }, {
      "left" : "public StringBuffer format(Complex complex, StringBuffer toAppendTo,\n            FieldPosition pos)",
      "right" : "public StringBuffer format(Complex complex, StringBuffer toAppendTo,\n            FieldPosition pos)",
      "info" : "MethodDeclaration[4717-5912]:MethodDeclaration[4717-5912]"
    }, {
      "left" : "public StringBuffer format(Object obj, StringBuffer toAppendTo,\n            FieldPosition pos)",
      "right" : "public StringBuffer format(Object obj, StringBuffer toAppendTo,\n            FieldPosition pos)",
      "info" : "MethodDeclaration[5922-7200]:MethodDeclaration[5922-7200]"
    }, {
      "left" : "private StringBuffer formatDouble(double value, NumberFormat format,\n            StringBuffer toAppendTo, FieldPosition pos)",
      "right" : "private StringBuffer formatDouble(double value, NumberFormat format,\n            StringBuffer toAppendTo, FieldPosition pos)",
      "info" : "MethodDeclaration[7206-8337]:MethodDeclaration[7206-8337]"
    }, {
      "left" : "public static Locale[] getAvailableLocales()",
      "right" : "public static Locale[] getAvailableLocales()",
      "info" : "MethodDeclaration[8347-8649]:MethodDeclaration[8347-8649]"
    }, {
      "left" : "private static NumberFormat getDefaultNumberFormat()",
      "right" : "private static NumberFormat getDefaultNumberFormat()",
      "info" : "MethodDeclaration[8659-9053]:MethodDeclaration[8659-9053]"
    }, {
      "left" : "private static NumberFormat getDefaultNumberFormat(Locale locale)",
      "right" : "private static NumberFormat getDefaultNumberFormat(Locale locale)",
      "info" : "MethodDeclaration[9063-9635]:MethodDeclaration[9063-9635]"
    }, {
      "left" : "public String getImaginaryCharacter()",
      "right" : "public String getImaginaryCharacter()",
      "info" : "MethodDeclaration[9645-9818]:MethodDeclaration[9645-9818]"
    }, {
      "left" : "public NumberFormat getImaginaryFormat()",
      "right" : "public NumberFormat getImaginaryFormat()",
      "info" : "MethodDeclaration[9828-9995]:MethodDeclaration[9828-9995]"
    }, {
      "left" : "public static ComplexFormat getInstance()",
      "right" : "public static ComplexFormat getInstance()",
      "info" : "MethodDeclaration[10005-10228]:MethodDeclaration[10005-10228]"
    }, {
      "left" : "public static ComplexFormat getInstance(Locale locale)",
      "right" : "public static ComplexFormat getInstance(Locale locale)",
      "info" : "MethodDeclaration[10238-10599]:MethodDeclaration[10238-10599]"
    }, {
      "left" : "public NumberFormat getRealFormat()",
      "right" : "public NumberFormat getRealFormat()",
      "info" : "MethodDeclaration[10609-10756]:MethodDeclaration[10609-10756]"
    }, {
      "left" : "public Complex parse(String source) throws ParseException",
      "right" : "public Complex parse(String source) throws ParseException",
      "info" : "MethodDeclaration[10762-11439]:MethodDeclaration[10762-11439]"
    }, {
      "left" : "private void parseAndIgnoreWhitespace(String source, ParsePosition pos)",
      "right" : "private void parseAndIgnoreWhitespace(String source, ParsePosition pos)",
      "info" : "MethodDeclaration[13929-14378]:MethodDeclaration[14007-14456]"
    }, {
      "left" : "private char parseNextCharacter(String source, ParsePosition pos)",
      "right" : "private char parseNextCharacter(String source, ParsePosition pos)",
      "info" : "MethodDeclaration[14384-15123]:MethodDeclaration[14462-15201]"
    }, {
      "left" : "private Number parseNumber(String source, double value, ParsePosition pos)",
      "right" : "private Number parseNumber(String source, double value, ParsePosition pos)",
      "info" : "MethodDeclaration[15133-16105]:MethodDeclaration[15211-16183]"
    }, {
      "left" : "private Number parseNumber(String source, NumberFormat format, ParsePosition pos)",
      "right" : "private Number parseNumber(String source, NumberFormat format, ParsePosition pos)",
      "info" : "MethodDeclaration[16115-17274]:MethodDeclaration[16193-17352]"
    }, {
      "left" : "public Object parseObject(String source, ParsePosition pos)",
      "right" : "public Object parseObject(String source, ParsePosition pos)",
      "info" : "MethodDeclaration[17280-17657]:MethodDeclaration[17358-17735]"
    }, {
      "left" : "public void setImaginaryCharacter(String imaginaryCharacter)",
      "right" : "public void setImaginaryCharacter(String imaginaryCharacter)",
      "info" : "MethodDeclaration[17662-18239]:MethodDeclaration[17740-18317]"
    }, {
      "left" : "public void setImaginaryFormat(NumberFormat imaginaryFormat)",
      "right" : "public void setImaginaryFormat(NumberFormat imaginaryFormat)",
      "info" : "MethodDeclaration[18249-18736]:MethodDeclaration[18327-18814]"
    }, {
      "left" : "public void setRealFormat(NumberFormat realFormat)",
      "right" : "public void setRealFormat(NumberFormat realFormat)",
      "info" : "MethodDeclaration[18746-19183]:MethodDeclaration[18824-19261]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2112-2188]:Block[2112-2188]"
    }, {
      "left" : "this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat());",
      "right" : "this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat());",
      "info" : "ConstructorInvocation[2122-2182]:ConstructorInvocation[2122-2182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2422-2480]:Block[2422-2480]"
    }, {
      "left" : "this(DEFAULT_IMAGINARY_CHARACTER, format);",
      "right" : "this(DEFAULT_IMAGINARY_CHARACTER, format);",
      "info" : "ConstructorInvocation[2432-2474]:ConstructorInvocation[2432-2474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2858-2937]:Block[2858-2937]"
    }, {
      "left" : "this(DEFAULT_IMAGINARY_CHARACTER, realFormat, imaginaryFormat);",
      "right" : "this(DEFAULT_IMAGINARY_CHARACTER, realFormat, imaginaryFormat);",
      "info" : "ConstructorInvocation[2868-2931]:ConstructorInvocation[2868-2931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3209-3276]:Block[3209-3276]"
    }, {
      "left" : "this(imaginaryCharacter, getDefaultNumberFormat());",
      "right" : "this(imaginaryCharacter, getDefaultNumberFormat());",
      "info" : "ConstructorInvocation[3219-3270]:ConstructorInvocation[3219-3270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3640-3719]:Block[3640-3719]"
    }, {
      "left" : "this(imaginaryCharacter, format, (NumberFormat)format.clone());",
      "right" : "this(imaginaryCharacter, format, (NumberFormat)format.clone());",
      "info" : "ConstructorInvocation[3650-3713]:ConstructorInvocation[3650-3713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4227-4382]:Block[4227-4382]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[4237-4245]:SuperConstructorInvocation[4237-4245]"
    }, {
      "left" : "setImaginaryCharacter(imaginaryCharacter);",
      "right" : "setImaginaryCharacter(imaginaryCharacter);",
      "info" : "ExpressionStatement[4254-4296]:ExpressionStatement[4254-4296]"
    }, {
      "left" : "setImaginaryFormat(imaginaryFormat);",
      "right" : "setImaginaryFormat(imaginaryFormat);",
      "info" : "ExpressionStatement[4305-4341]:ExpressionStatement[4305-4341]"
    }, {
      "left" : "setRealFormat(realFormat);",
      "right" : "setRealFormat(realFormat);",
      "info" : "ExpressionStatement[4350-4376]:ExpressionStatement[4350-4376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4658-4707]:Block[4658-4707]"
    }, {
      "left" : "return getInstance().format( c );",
      "right" : "return getInstance().format( c );",
      "info" : "ReturnStatement[4668-4701]:ReturnStatement[4668-4701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5177-5912]:Block[5177-5912]"
    }, {
      "left" : "pos.setBeginIndex(0);",
      "right" : "pos.setBeginIndex(0);",
      "info" : "ExpressionStatement[5196-5217]:ExpressionStatement[5196-5217]"
    }, {
      "left" : "pos.setEndIndex(0);",
      "right" : "pos.setEndIndex(0);",
      "info" : "ExpressionStatement[5226-5245]:ExpressionStatement[5226-5245]"
    }, {
      "left" : "double re = complex.getReal();",
      "right" : "double re = complex.getReal();",
      "info" : "VariableDeclarationStatement[5278-5308]:VariableDeclarationStatement[5278-5308]"
    }, {
      "left" : "formatDouble(re, getRealFormat(), toAppendTo, pos);",
      "right" : "formatDouble(re, getRealFormat(), toAppendTo, pos);",
      "info" : "ExpressionStatement[5317-5368]:ExpressionStatement[5317-5368]"
    }, {
      "left" : "double im = complex.getImaginary();",
      "right" : "double im = complex.getImaginary();",
      "info" : "VariableDeclarationStatement[5423-5458]:VariableDeclarationStatement[5423-5458]"
    }, {
      "left" : "if (im < 0.0)",
      "right" : "if (im < 0.0)",
      "info" : "IfStatement[5467-5870]:IfStatement[5467-5870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5481-5656]:Block[5481-5656]"
    }, {
      "left" : "toAppendTo.append(\" - \");",
      "right" : "toAppendTo.append(\" - \");",
      "info" : "ExpressionStatement[5495-5520]:ExpressionStatement[5495-5520]"
    }, {
      "left" : "formatDouble(-im, getImaginaryFormat(), toAppendTo, pos);",
      "right" : "formatDouble(-im, getImaginaryFormat(), toAppendTo, pos);",
      "info" : "ExpressionStatement[5533-5590]:ExpressionStatement[5533-5590]"
    }, {
      "left" : "toAppendTo.append(getImaginaryCharacter());",
      "right" : "toAppendTo.append(getImaginaryCharacter());",
      "info" : "ExpressionStatement[5603-5646]:ExpressionStatement[5603-5646]"
    }, {
      "left" : "if (im > 0.0 || Double.isNaN(im))",
      "right" : "if (im > 0.0 || Double.isNaN(im))",
      "info" : "IfStatement[5662-5870]:IfStatement[5662-5870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5696-5870]:Block[5696-5870]"
    }, {
      "left" : "toAppendTo.append(\" + \");",
      "right" : "toAppendTo.append(\" + \");",
      "info" : "ExpressionStatement[5710-5735]:ExpressionStatement[5710-5735]"
    }, {
      "left" : "formatDouble(im, getImaginaryFormat(), toAppendTo, pos);",
      "right" : "formatDouble(im, getImaginaryFormat(), toAppendTo, pos);",
      "info" : "ExpressionStatement[5748-5804]:ExpressionStatement[5748-5804]"
    }, {
      "left" : "toAppendTo.append(getImaginaryCharacter());",
      "right" : "toAppendTo.append(getImaginaryCharacter());",
      "info" : "ExpressionStatement[5817-5860]:ExpressionStatement[5817-5860]"
    }, {
      "left" : "return toAppendTo;",
      "right" : "return toAppendTo;",
      "info" : "ReturnStatement[5888-5906]:ReturnStatement[5888-5906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6733-7200]:Block[6733-7200]"
    }, {
      "left" : "StringBuffer ret = null;",
      "right" : "StringBuffer ret = null;",
      "info" : "VariableDeclarationStatement[6752-6776]:VariableDeclarationStatement[6752-6776]"
    }, {
      "left" : "if (obj instanceof Complex)",
      "right" : "if (obj instanceof Complex)",
      "info" : "IfStatement[6794-7165]:IfStatement[6794-7165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6822-6891]:Block[6822-6891]"
    }, {
      "left" : "ret = format( (Complex)obj, toAppendTo, pos);",
      "right" : "ret = format( (Complex)obj, toAppendTo, pos);",
      "info" : "ExpressionStatement[6836-6881]:ExpressionStatement[6836-6881]"
    }, {
      "left" : "if (obj instanceof Number)",
      "right" : "if (obj instanceof Number)",
      "info" : "IfStatement[6897-7165]:IfStatement[6897-7165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6924-7042]:Block[6924-7042]"
    }, {
      "left" : "ret = format( new Complex(((Number)obj).doubleValue(), 0.0),\n                toAppendTo, pos);",
      "right" : "ret = format( new Complex(((Number)obj).doubleValue(), 0.0),\n                toAppendTo, pos);",
      "info" : "ExpressionStatement[6938-7032]:ExpressionStatement[6938-7032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7048-7165]:Block[7048-7165]"
    }, {
      "left" : "throw new IllegalArgumentException(\n                \"Cannot format given Object as a Date\");",
      "right" : "throw new IllegalArgumentException(\n                \"Cannot format given Object as a Date\");",
      "info" : "ThrowStatement[7063-7155]:ThrowStatement[7063-7155]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[7183-7194]:ReturnStatement[7183-7194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8051-8337]:Block[8051-8337]"
    }, {
      "left" : "if( Double.isNaN(value) || Double.isInfinite(value))",
      "right" : "if( Double.isNaN(value) || Double.isInfinite(value))",
      "info" : "IfStatement[8061-8304]:IfStatement[8061-8304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8115-8236]:Block[8115-8236]"
    }, {
      "left" : "toAppendTo.append('(');",
      "right" : "toAppendTo.append('(');",
      "info" : "ExpressionStatement[8129-8152]:ExpressionStatement[8129-8152]"
    }, {
      "left" : "toAppendTo.append(value);",
      "right" : "toAppendTo.append(value);",
      "info" : "ExpressionStatement[8165-8190]:ExpressionStatement[8165-8190]"
    }, {
      "left" : "toAppendTo.append(')');",
      "right" : "toAppendTo.append(')');",
      "info" : "ExpressionStatement[8203-8226]:ExpressionStatement[8203-8226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8242-8304]:Block[8242-8304]"
    }, {
      "left" : "format.format(value, toAppendTo, pos);",
      "right" : "format.format(value, toAppendTo, pos);",
      "info" : "ExpressionStatement[8256-8294]:ExpressionStatement[8256-8294]"
    }, {
      "left" : "return toAppendTo;",
      "right" : "return toAppendTo;",
      "info" : "ReturnStatement[8313-8331]:ReturnStatement[8313-8331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8591-8649]:Block[8591-8649]"
    }, {
      "left" : "return NumberFormat.getAvailableLocales();",
      "right" : "return NumberFormat.getAvailableLocales();",
      "info" : "ReturnStatement[8601-8643]:ReturnStatement[8601-8643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8986-9053]:Block[8986-9053]"
    }, {
      "left" : "return getDefaultNumberFormat(Locale.getDefault());",
      "right" : "return getDefaultNumberFormat(Locale.getDefault());",
      "info" : "ReturnStatement[8996-9047]:ReturnStatement[8996-9047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9509-9635]:Block[9509-9635]"
    }, {
      "left" : "NumberFormat nf = NumberFormat.getInstance(locale);",
      "right" : "NumberFormat nf = NumberFormat.getInstance(locale);",
      "info" : "VariableDeclarationStatement[9519-9570]:VariableDeclarationStatement[9519-9570]"
    }, {
      "left" : "nf.setMaximumFractionDigits(2);",
      "right" : "nf.setMaximumFractionDigits(2);",
      "info" : "ExpressionStatement[9579-9610]:ExpressionStatement[9579-9610]"
    }, {
      "left" : "return nf;",
      "right" : "return nf;",
      "info" : "ReturnStatement[9619-9629]:ReturnStatement[9619-9629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9776-9818]:Block[9776-9818]"
    }, {
      "left" : "return imaginaryCharacter;",
      "right" : "return imaginaryCharacter;",
      "info" : "ReturnStatement[9786-9812]:ReturnStatement[9786-9812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9956-9995]:Block[9956-9995]"
    }, {
      "left" : "return imaginaryFormat;",
      "right" : "return imaginaryFormat;",
      "info" : "ReturnStatement[9966-9989]:ReturnStatement[9966-9989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10172-10228]:Block[10172-10228]"
    }, {
      "left" : "return getInstance(Locale.getDefault());",
      "right" : "return getInstance(Locale.getDefault());",
      "info" : "ReturnStatement[10182-10222]:ReturnStatement[10182-10222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10498-10599]:Block[10498-10599]"
    }, {
      "left" : "NumberFormat f = getDefaultNumberFormat(locale);",
      "right" : "NumberFormat f = getDefaultNumberFormat(locale);",
      "info" : "VariableDeclarationStatement[10508-10556]:VariableDeclarationStatement[10508-10556]"
    }, {
      "left" : "return new ComplexFormat(f);",
      "right" : "return new ComplexFormat(f);",
      "info" : "ReturnStatement[10565-10593]:ReturnStatement[10565-10593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10722-10756]:Block[10722-10756]"
    }, {
      "left" : "return realFormat;",
      "right" : "return realFormat;",
      "info" : "ReturnStatement[10732-10750]:ReturnStatement[10732-10750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11104-11439]:Block[11104-11439]"
    }, {
      "left" : "ParsePosition parsePosition = new ParsePosition(0);",
      "right" : "ParsePosition parsePosition = new ParsePosition(0);",
      "info" : "VariableDeclarationStatement[11114-11165]:VariableDeclarationStatement[11114-11165]"
    }, {
      "left" : "Complex result = parse(source, parsePosition);",
      "right" : "Complex result = parse(source, parsePosition);",
      "info" : "VariableDeclarationStatement[11174-11220]:VariableDeclarationStatement[11174-11220]"
    }, {
      "left" : "if (parsePosition.getIndex() == 0)",
      "right" : "if (parsePosition.getIndex() == 0)",
      "info" : "IfStatement[11229-11410]:IfStatement[11229-11410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11264-11410]:Block[11264-11410]"
    }, {
      "left" : "throw new ParseException(\"Unparseable complex number: \\\"\" + source +\n                \"\\\"\", parsePosition.getErrorIndex());",
      "right" : "throw new ParseException(\"Unparseable complex number: \\\"\" + source +\n                \"\\\"\", parsePosition.getErrorIndex());",
      "info" : "ThrowStatement[11278-11400]:ThrowStatement[11278-11400]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11419-11433]:ReturnStatement[11419-11433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14288-14378]:Block[14366-14456]"
    }, {
      "left" : "parseNextCharacter(source, pos);",
      "right" : "parseNextCharacter(source, pos);",
      "info" : "ExpressionStatement[14298-14330]:ExpressionStatement[14376-14408]"
    }, {
      "left" : "pos.setIndex(pos.getIndex() - 1);",
      "right" : "pos.setIndex(pos.getIndex() - 1);",
      "info" : "ExpressionStatement[14339-14372]:ExpressionStatement[14417-14450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14691-15123]:Block[14769-15201]"
    }, {
      "left" : "int index = pos.getIndex();",
      "right" : "int index = pos.getIndex();",
      "info" : "VariableDeclarationStatement[14702-14729]:VariableDeclarationStatement[14780-14807]"
    }, {
      "left" : "int n = source.length();",
      "right" : "int n = source.length();",
      "info" : "VariableDeclarationStatement[14739-14763]:VariableDeclarationStatement[14817-14841]"
    }, {
      "left" : "char ret = 0;",
      "right" : "char ret = 0;",
      "info" : "VariableDeclarationStatement[14773-14786]:VariableDeclarationStatement[14851-14864]"
    }, {
      "left" : "if (index < n)",
      "right" : "if (index < n)",
      "info" : "IfStatement[14797-15086]:IfStatement[14875-15164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14812-15086]:Block[14890-15164]"
    }, {
      "left" : "char c;",
      "right" : "char c;",
      "info" : "VariableDeclarationStatement[14827-14834]:VariableDeclarationStatement[14905-14912]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[14848-14960]:DoStatement[14926-15038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14851-14912]:Block[14929-14990]"
    }, {
      "left" : "c = source.charAt(index++);",
      "right" : "c = source.charAt(index++);",
      "info" : "ExpressionStatement[14870-14897]:ExpressionStatement[14948-14975]"
    }, {
      "left" : "pos.setIndex(index);",
      "right" : "pos.setIndex(index);",
      "info" : "ExpressionStatement[14974-14994]:ExpressionStatement[15052-15072]"
    }, {
      "left" : "if (index < n)",
      "right" : "if (index < n)",
      "info" : "IfStatement[15018-15075]:IfStatement[15096-15153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15033-15075]:Block[15111-15153]"
    }, {
      "left" : "ret = c;",
      "right" : "ret = c;",
      "info" : "ExpressionStatement[15052-15060]:ExpressionStatement[15130-15138]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[15106-15117]:ReturnStatement[15184-15195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15560-16105]:Block[15638-16183]"
    }, {
      "left" : "Number ret = null;",
      "right" : "Number ret = null;",
      "info" : "VariableDeclarationStatement[15570-15588]:VariableDeclarationStatement[15648-15666]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer();",
      "right" : "StringBuffer sb = new StringBuffer();",
      "info" : "VariableDeclarationStatement[15606-15643]:VariableDeclarationStatement[15684-15721]"
    }, {
      "left" : "sb.append('(');",
      "right" : "sb.append('(');",
      "info" : "ExpressionStatement[15652-15667]:ExpressionStatement[15730-15745]"
    }, {
      "left" : "sb.append(value);",
      "right" : "sb.append(value);",
      "info" : "ExpressionStatement[15676-15693]:ExpressionStatement[15754-15771]"
    }, {
      "left" : "sb.append(')');",
      "right" : "sb.append(')');",
      "info" : "ExpressionStatement[15702-15717]:ExpressionStatement[15780-15795]"
    }, {
      "left" : "int n = sb.length();",
      "right" : "int n = sb.length();",
      "info" : "VariableDeclarationStatement[15735-15755]:VariableDeclarationStatement[15813-15833]"
    }, {
      "left" : "int startIndex = pos.getIndex();",
      "right" : "int startIndex = pos.getIndex();",
      "info" : "VariableDeclarationStatement[15764-15796]:VariableDeclarationStatement[15842-15874]"
    }, {
      "left" : "int endIndex = startIndex + n;",
      "right" : "int endIndex = startIndex + n;",
      "info" : "VariableDeclarationStatement[15805-15835]:VariableDeclarationStatement[15883-15913]"
    }, {
      "left" : "if (endIndex < source.length())",
      "right" : "if (endIndex < source.length())",
      "info" : "IfStatement[15844-16070]:IfStatement[15922-16148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15876-16070]:Block[15954-16148]"
    }, {
      "left" : "if (source.substring(startIndex, endIndex).compareTo(sb.toString()) == 0)",
      "right" : "if (source.substring(startIndex, endIndex).compareTo(sb.toString()) == 0)",
      "info" : "IfStatement[15890-16060]:IfStatement[15968-16138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15964-16060]:Block[16042-16138]"
    }, {
      "left" : "ret = new Double(value);",
      "right" : "ret = new Double(value);",
      "info" : "ExpressionStatement[15982-16006]:ExpressionStatement[16060-16084]"
    }, {
      "left" : "pos.setIndex(endIndex);",
      "right" : "pos.setIndex(endIndex);",
      "info" : "ExpressionStatement[16023-16046]:ExpressionStatement[16101-16124]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[16088-16099]:ReturnStatement[16166-16177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16650-17274]:Block[16728-17352]"
    }, {
      "left" : "int startIndex = pos.getIndex();",
      "right" : "int startIndex = pos.getIndex();",
      "info" : "VariableDeclarationStatement[16660-16692]:VariableDeclarationStatement[16738-16770]"
    }, {
      "left" : "Number number = format.parse(source, pos);",
      "right" : "Number number = format.parse(source, pos);",
      "info" : "VariableDeclarationStatement[16701-16743]:VariableDeclarationStatement[16779-16821]"
    }, {
      "left" : "int endIndex = pos.getIndex();",
      "right" : "int endIndex = pos.getIndex();",
      "info" : "VariableDeclarationStatement[16752-16782]:VariableDeclarationStatement[16830-16860]"
    }, {
      "left" : "if (startIndex == endIndex)",
      "right" : "if (startIndex == endIndex)",
      "info" : "IfStatement[16842-17236]:IfStatement[16920-17314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16870-17236]:Block[16948-17314]"
    }, {
      "left" : "double[] special = {Double.NaN, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY};",
      "right" : "double[] special = {Double.NaN, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY};",
      "info" : "VariableDeclarationStatement[16927-17011]:VariableDeclarationStatement[17005-17089]"
    }, {
      "left" : "for (int i = 0; i < special.length; ++i)",
      "right" : "for (int i = 0; i < special.length; ++i)",
      "info" : "ForStatement[17024-17226]:ForStatement[17102-17304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17065-17226]:Block[17143-17304]"
    }, {
      "left" : "number = parseNumber(source, special[i], pos);",
      "right" : "number = parseNumber(source, special[i], pos);",
      "info" : "ExpressionStatement[17083-17129]:ExpressionStatement[17161-17207]"
    }, {
      "left" : "if (number != null)",
      "right" : "if (number != null)",
      "info" : "IfStatement[17146-17212]:IfStatement[17224-17290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17166-17212]:Block[17244-17290]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[17188-17194]:BreakStatement[17266-17272]"
    }, {
      "left" : "return number;",
      "right" : "return number;",
      "info" : "ReturnStatement[17254-17268]:ReturnStatement[17332-17346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17615-17657]:Block[17693-17735]"
    }, {
      "left" : "return parse(source, pos);",
      "right" : "return parse(source, pos);",
      "info" : "ReturnStatement[17625-17651]:ReturnStatement[17703-17729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17975-18239]:Block[18053-18317]"
    }, {
      "left" : "if (imaginaryCharacter == null || imaginaryCharacter.length() == 0)",
      "right" : "if (imaginaryCharacter == null || imaginaryCharacter.length() == 0)",
      "info" : "IfStatement[17985-18179]:IfStatement[18063-18257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18053-18179]:Block[18131-18257]"
    }, {
      "left" : "throw new IllegalArgumentException(\n                \"imaginaryCharacter must be a non-empty string.\");",
      "right" : "throw new IllegalArgumentException(\n                \"imaginaryCharacter must be a non-empty string.\");",
      "info" : "ThrowStatement[18067-18169]:ThrowStatement[18145-18247]"
    }, {
      "left" : "this.imaginaryCharacter = imaginaryCharacter;",
      "right" : "this.imaginaryCharacter = imaginaryCharacter;",
      "info" : "ExpressionStatement[18188-18233]:ExpressionStatement[18266-18311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18531-18736]:Block[18609-18814]"
    }, {
      "left" : "if (imaginaryFormat == null)",
      "right" : "if (imaginaryFormat == null)",
      "info" : "IfStatement[18541-18682]:IfStatement[18619-18760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18570-18682]:Block[18648-18760]"
    }, {
      "left" : "throw new IllegalArgumentException(\n                \"imaginaryFormat can not be null.\");",
      "right" : "throw new IllegalArgumentException(\n                \"imaginaryFormat can not be null.\");",
      "info" : "ThrowStatement[18584-18672]:ThrowStatement[18662-18750]"
    }, {
      "left" : "this.imaginaryFormat = imaginaryFormat;",
      "right" : "this.imaginaryFormat = imaginaryFormat;",
      "info" : "ExpressionStatement[18691-18730]:ExpressionStatement[18769-18808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18998-19183]:Block[19076-19261]"
    }, {
      "left" : "if (realFormat == null)",
      "right" : "if (realFormat == null)",
      "info" : "IfStatement[19008-19139]:IfStatement[19086-19217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19032-19139]:Block[19110-19217]"
    }, {
      "left" : "throw new IllegalArgumentException(\n                \"realFormat can not be null.\");",
      "right" : "throw new IllegalArgumentException(\n                \"realFormat can not be null.\");",
      "info" : "ThrowStatement[19046-19129]:ThrowStatement[19124-19207]"
    }, {
      "left" : "this.realFormat = realFormat;",
      "right" : "this.realFormat = realFormat;",
      "info" : "ExpressionStatement[19148-19177]:ExpressionStatement[19226-19255]"
    } ]
  },
  "interFileMappings" : { }
}