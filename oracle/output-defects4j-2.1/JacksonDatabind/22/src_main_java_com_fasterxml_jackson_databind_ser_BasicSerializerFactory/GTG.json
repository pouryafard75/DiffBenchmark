{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BasicSerializerFactory",
      "right" : "BasicSerializerFactory",
      "info" : "TypeDeclaration[1077-47762]:TypeDeclaration[1077-48556]"
    }, {
      "left" : "protected final static HashMap<String, JsonSerializer<?>> _concrete =\n        new HashMap<String, JsonSerializer<?>>();",
      "right" : "protected final static HashMap<String, JsonSerializer<?>> _concrete =\n        new HashMap<String, JsonSerializer<?>>();",
      "info" : "FieldDeclaration[1814-2145]:FieldDeclaration[1814-2145]"
    }, {
      "left" : "protected final static HashMap<String, Class<? extends JsonSerializer<?>>> _concreteLazy =\n        new HashMap<String, Class<? extends JsonSerializer<?>>>();",
      "right" : "protected final static HashMap<String, Class<? extends JsonSerializer<?>>> _concreteLazy =\n        new HashMap<String, Class<? extends JsonSerializer<?>>>();",
      "info" : "FieldDeclaration[2155-2496]:FieldDeclaration[2155-2496]"
    }, {
      "left" : "protected final SerializerFactoryConfig _factoryConfig;",
      "right" : "protected final SerializerFactoryConfig _factoryConfig;",
      "info" : "FieldDeclaration[5358-5585]:FieldDeclaration[5358-5585]"
    }, {
      "left" : "protected BasicSerializerFactory(SerializerFactoryConfig config)",
      "right" : "protected BasicSerializerFactory(SerializerFactoryConfig config)",
      "info" : "MethodDeclaration[5753-6097]:MethodDeclaration[5753-6097]"
    }, {
      "left" : "public SerializerFactoryConfig getFactoryConfig()",
      "right" : "public SerializerFactoryConfig getFactoryConfig()",
      "info" : "MethodDeclaration[6107-6480]:MethodDeclaration[6107-6480]"
    }, {
      "left" : "public abstract SerializerFactory withConfig(SerializerFactoryConfig config);",
      "right" : "public abstract SerializerFactory withConfig(SerializerFactoryConfig config);",
      "info" : "MethodDeclaration[6486-7109]:MethodDeclaration[6486-7109]"
    }, {
      "left" : "public final SerializerFactory withAdditionalSerializers(Serializers additional)",
      "right" : "public final SerializerFactory withAdditionalSerializers(Serializers additional)",
      "info" : "MethodDeclaration[7115-7423]:MethodDeclaration[7115-7423]"
    }, {
      "left" : "public final SerializerFactory withAdditionalKeySerializers(Serializers additional)",
      "right" : "public final SerializerFactory withAdditionalKeySerializers(Serializers additional)",
      "info" : "MethodDeclaration[7429-7747]:MethodDeclaration[7429-7747]"
    }, {
      "left" : "public final SerializerFactory withSerializerModifier(BeanSerializerModifier modifier)",
      "right" : "public final SerializerFactory withSerializerModifier(BeanSerializerModifier modifier)",
      "info" : "MethodDeclaration[7757-8068]:MethodDeclaration[7757-8068]"
    }, {
      "left" : "public abstract JsonSerializer<Object> createSerializer(SerializerProvider prov,\n            JavaType type)\n        throws JsonMappingException;",
      "right" : "public abstract JsonSerializer<Object> createSerializer(SerializerProvider prov,\n            JavaType type)\n        throws JsonMappingException;",
      "info" : "MethodDeclaration[8286-8444]:MethodDeclaration[8286-8444]"
    }, {
      "left" : "public JsonSerializer<Object> createKeySerializer(SerializationConfig config,\n            JavaType keyType, JsonSerializer<Object> defaultImpl)",
      "right" : "public JsonSerializer<Object> createKeySerializer(SerializationConfig config,\n            JavaType keyType, JsonSerializer<Object> defaultImpl)",
      "info" : "MethodDeclaration[8450-10848]:MethodDeclaration[8450-10848]"
    }, {
      "left" : "public TypeSerializer createTypeSerializer(SerializationConfig config,\n            JavaType baseType)",
      "right" : "public TypeSerializer createTypeSerializer(SerializationConfig config,\n            JavaType baseType)",
      "info" : "MethodDeclaration[10854-12115]:MethodDeclaration[10854-12115]"
    }, {
      "left" : "protected abstract Iterable<Serializers> customSerializers();",
      "right" : "protected abstract Iterable<Serializers> customSerializers();",
      "info" : "MethodDeclaration[12310-12371]:MethodDeclaration[12310-12371]"
    }, {
      "left" : "protected final JsonSerializer<?> findSerializerByLookup(JavaType type,\n            SerializationConfig config, BeanDescription beanDesc,\n            boolean staticTyping)",
      "right" : "protected final JsonSerializer<?> findSerializerByLookup(JavaType type,\n            SerializationConfig config, BeanDescription beanDesc,\n            boolean staticTyping)",
      "info" : "MethodDeclaration[12578-13756]:MethodDeclaration[12578-13756]"
    }, {
      "left" : "protected final JsonSerializer<?> findSerializerByAnnotations(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected final JsonSerializer<?> findSerializerByAnnotations(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[13762-15211]:MethodDeclaration[13762-15211]"
    }, {
      "left" : "protected final JsonSerializer<?> findSerializerByPrimaryType(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc,\n            boolean staticTyping)\n        throws JsonMappingException",
      "right" : "protected final JsonSerializer<?> findSerializerByPrimaryType(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc,\n            boolean staticTyping)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[15221-18234]:MethodDeclaration[15221-18234]"
    }, {
      "left" : "protected JsonSerializer<?> findOptionalStdSerializer(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc, boolean staticTyping)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> findOptionalStdSerializer(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc, boolean staticTyping)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[18240-18646]:MethodDeclaration[18240-18646]"
    }, {
      "left" : "protected final JsonSerializer<?> findSerializerByAddonType(SerializationConfig config,\n            JavaType javaType, BeanDescription beanDesc, boolean staticTyping) throws JsonMappingException",
      "right" : "protected final JsonSerializer<?> findSerializerByAddonType(SerializationConfig config,\n            JavaType javaType, BeanDescription beanDesc, boolean staticTyping) throws JsonMappingException",
      "info" : "MethodDeclaration[18660-20185]:MethodDeclaration[18660-20185]"
    }, {
      "left" : "protected JsonSerializer<Object> findSerializerFromAnnotation(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<Object> findSerializerFromAnnotation(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[20195-21033]:MethodDeclaration[20195-21033]"
    }, {
      "left" : "protected JsonSerializer<?> findConvertingSerializer(SerializerProvider prov,\n            Annotated a, JsonSerializer<?> ser)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> findConvertingSerializer(SerializerProvider prov,\n            Annotated a, JsonSerializer<?> ser)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[21039-21804]:MethodDeclaration[21039-21804]"
    }, {
      "left" : "protected Converter<Object,Object> findConverter(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "right" : "protected Converter<Object,Object> findConverter(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[21810-22162]:MethodDeclaration[21810-22162]"
    }, {
      "left" : "protected JsonSerializer<?> buildContainerSerializer(SerializerProvider prov,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildContainerSerializer(SerializerProvider prov,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[22357-26710]:MethodDeclaration[22357-27072]"
    }, {
      "left" : "protected JsonSerializer<?> buildCollectionSerializer(SerializationConfig config,\n            CollectionType type, BeanDescription beanDesc, boolean staticTyping,\n            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer) \n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildCollectionSerializer(SerializerProvider prov,\n            CollectionType type, BeanDescription beanDesc, boolean staticTyping,\n            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer) \n        throws JsonMappingException",
      "info" : "MethodDeclaration[26716-30366]:MethodDeclaration[27078-30921]"
    }, {
      "left" : "protected boolean isIndexedList(Class<?> cls)",
      "right" : "protected boolean isIndexedList(Class<?> cls)",
      "info" : "MethodDeclaration[30556-30670]:MethodDeclaration[31111-31225]"
    }, {
      "left" : "public  ContainerSerializer<?> buildIndexedListSerializer(JavaType elemType,\n            boolean staticTyping, TypeSerializer vts, JsonSerializer<Object> valueSerializer)",
      "right" : "public  ContainerSerializer<?> buildIndexedListSerializer(JavaType elemType,\n            boolean staticTyping, TypeSerializer vts, JsonSerializer<Object> valueSerializer)",
      "info" : "MethodDeclaration[30676-30942]:MethodDeclaration[31231-31497]"
    }, {
      "left" : "public ContainerSerializer<?> buildCollectionSerializer(JavaType elemType,\n            boolean staticTyping, TypeSerializer vts, JsonSerializer<Object> valueSerializer)",
      "right" : "public ContainerSerializer<?> buildCollectionSerializer(JavaType elemType,\n            boolean staticTyping, TypeSerializer vts, JsonSerializer<Object> valueSerializer)",
      "info" : "MethodDeclaration[30947-31210]:MethodDeclaration[31502-31765]"
    }, {
      "left" : "public JsonSerializer<?> buildEnumSetSerializer(JavaType enumType)",
      "right" : "public JsonSerializer<?> buildEnumSetSerializer(JavaType enumType)",
      "info" : "MethodDeclaration[31216-31338]:MethodDeclaration[31771-31893]"
    }, {
      "left" : "protected JsonSerializer<?> buildMapSerializer(SerializationConfig config,\n            MapType type, BeanDescription beanDesc,\n            boolean staticTyping, JsonSerializer<Object> keySerializer,\n            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildMapSerializer(SerializerProvider prov,\n            MapType type, BeanDescription beanDesc,\n            boolean staticTyping, JsonSerializer<Object> keySerializer,\n            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[31525-34560]:MethodDeclaration[32080-35302]"
    }, {
      "left" : "protected Object findSuppressableContentValue(SerializationConfig config,\n            JavaType contentType, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected Object findSuppressableContentValue(SerializationConfig config,\n            JavaType contentType, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[34566-35493]:MethodDeclaration[35308-36235]"
    }, {
      "left" : "protected JsonSerializer<?> buildArraySerializer(SerializationConfig config,\n            ArrayType type, BeanDescription beanDesc,\n            boolean staticTyping,\n            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildArraySerializer(SerializerProvider prov,\n            ArrayType type, BeanDescription beanDesc,\n            boolean staticTyping,\n            TypeSerializer elementTypeSerializer, JsonSerializer<Object> elementValueSerializer)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[35686-37944]:MethodDeclaration[36428-38738]"
    }, {
      "left" : "protected JsonSerializer<?> buildIteratorSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType valueType)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildIteratorSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType valueType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[38142-38515]:MethodDeclaration[38936-39309]"
    }, {
      "left" : "// since 2.5\n    protected JsonSerializer<?> buildIteratorSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping) throws JsonMappingException",
      "right" : "// since 2.5\n    protected JsonSerializer<?> buildIteratorSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping) throws JsonMappingException",
      "info" : "MethodDeclaration[38521-39039]:MethodDeclaration[39315-39833]"
    }, {
      "left" : "protected JsonSerializer<?> buildIterableSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType valueType)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildIterableSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType valueType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[39045-39418]:MethodDeclaration[39839-40212]"
    }, {
      "left" : "// since 2.5\n    protected JsonSerializer<?> buildIterableSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc,\n            boolean staticTyping)\n        throws JsonMappingException",
      "right" : "// since 2.5\n    protected JsonSerializer<?> buildIterableSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc,\n            boolean staticTyping)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[39424-39962]:MethodDeclaration[40218-40756]"
    }, {
      "left" : "protected JsonSerializer<?> buildMapEntrySerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType keyType, JavaType valueType)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildMapEntrySerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType keyType, JavaType valueType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[39972-40405]:MethodDeclaration[40766-41199]"
    }, {
      "left" : "protected JsonSerializer<?> buildEnumSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildEnumSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[40411-41850]:MethodDeclaration[41205-42644]"
    }, {
      "left" : "protected <T extends JavaType> T modifyTypeByAnnotation(SerializationConfig config,\n            Annotated a, T type)",
      "right" : "protected <T extends JavaType> T modifyTypeByAnnotation(SerializationConfig config,\n            Annotated a, T type)",
      "info" : "MethodDeclaration[42032-42887]:MethodDeclaration[42826-43681]"
    }, {
      "left" : "protected static <T extends JavaType> T modifySecondaryTypesByAnnotation(SerializationConfig config,\n            Annotated a, T type)",
      "right" : "protected static <T extends JavaType> T modifySecondaryTypesByAnnotation(SerializationConfig config,\n            Annotated a, T type)",
      "info" : "MethodDeclaration[42893-44480]:MethodDeclaration[43687-45274]"
    }, {
      "left" : "protected JsonSerializer<Object> _findKeySerializer(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<Object> _findKeySerializer(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[44486-45114]:MethodDeclaration[45280-45908]"
    }, {
      "left" : "protected JsonSerializer<Object> _findContentSerializer(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<Object> _findContentSerializer(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[45120-45770]:MethodDeclaration[45914-46564]"
    }, {
      "left" : "protected Object findFilterId(SerializationConfig config, BeanDescription beanDesc)",
      "right" : "protected Object findFilterId(SerializationConfig config, BeanDescription beanDesc)",
      "info" : "MethodDeclaration[45776-46098]:MethodDeclaration[46570-46892]"
    }, {
      "left" : "protected boolean usesStaticTyping(SerializationConfig config,\n            BeanDescription beanDesc, TypeSerializer typeSer)",
      "right" : "protected boolean usesStaticTyping(SerializationConfig config,\n            BeanDescription beanDesc, TypeSerializer typeSer)",
      "info" : "MethodDeclaration[46104-47187]:MethodDeclaration[46898-47981]"
    }, {
      "left" : "protected Class<?> _verifyAsClass(Object src, String methodName, Class<?> noneClass)",
      "right" : "protected Class<?> _verifyAsClass(Object src, String methodName, Class<?> noneClass)",
      "info" : "MethodDeclaration[47193-47760]:MethodDeclaration[47987-48554]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2513-5183]:Block[2513-5183]"
    }, {
      "left" : "_concrete.put(String.class.getName(), new StringSerializer());",
      "right" : "_concrete.put(String.class.getName(), new StringSerializer());",
      "info" : "ExpressionStatement[2680-2742]:ExpressionStatement[2680-2742]"
    }, {
      "left" : "final ToStringSerializer sls = ToStringSerializer.instance;",
      "right" : "final ToStringSerializer sls = ToStringSerializer.instance;",
      "info" : "VariableDeclarationStatement[2751-2810]:VariableDeclarationStatement[2751-2810]"
    }, {
      "left" : "_concrete.put(StringBuffer.class.getName(), sls);",
      "right" : "_concrete.put(StringBuffer.class.getName(), sls);",
      "info" : "ExpressionStatement[2819-2868]:ExpressionStatement[2819-2868]"
    }, {
      "left" : "_concrete.put(StringBuilder.class.getName(), sls);",
      "right" : "_concrete.put(StringBuilder.class.getName(), sls);",
      "info" : "ExpressionStatement[2877-2927]:ExpressionStatement[2877-2927]"
    }, {
      "left" : "_concrete.put(Character.class.getName(), sls);",
      "right" : "_concrete.put(Character.class.getName(), sls);",
      "info" : "ExpressionStatement[2936-2982]:ExpressionStatement[2936-2982]"
    }, {
      "left" : "_concrete.put(Character.TYPE.getName(), sls);",
      "right" : "_concrete.put(Character.TYPE.getName(), sls);",
      "info" : "ExpressionStatement[2991-3036]:ExpressionStatement[2991-3036]"
    }, {
      "left" : "NumberSerializers.addAll(_concrete);",
      "right" : "NumberSerializers.addAll(_concrete);",
      "info" : "ExpressionStatement[3122-3158]:ExpressionStatement[3122-3158]"
    }, {
      "left" : "_concrete.put(Boolean.TYPE.getName(), new BooleanSerializer(true));",
      "right" : "_concrete.put(Boolean.TYPE.getName(), new BooleanSerializer(true));",
      "info" : "ExpressionStatement[3167-3234]:ExpressionStatement[3167-3234]"
    }, {
      "left" : "_concrete.put(Boolean.class.getName(), new BooleanSerializer(false));",
      "right" : "_concrete.put(Boolean.class.getName(), new BooleanSerializer(false));",
      "info" : "ExpressionStatement[3243-3312]:ExpressionStatement[3243-3312]"
    }, {
      "left" : "_concrete.put(BigInteger.class.getName(), new NumberSerializer(BigInteger.class));",
      "right" : "_concrete.put(BigInteger.class.getName(), new NumberSerializer(BigInteger.class));",
      "info" : "ExpressionStatement[3365-3447]:ExpressionStatement[3365-3447]"
    }, {
      "left" : "_concrete.put(BigDecimal.class.getName(),new NumberSerializer(BigDecimal.class));",
      "right" : "_concrete.put(BigDecimal.class.getName(),new NumberSerializer(BigDecimal.class));",
      "info" : "ExpressionStatement[3456-3537]:ExpressionStatement[3456-3537]"
    }, {
      "left" : "_concrete.put(Calendar.class.getName(), CalendarSerializer.instance);",
      "right" : "_concrete.put(Calendar.class.getName(), CalendarSerializer.instance);",
      "info" : "ExpressionStatement[3627-3696]:ExpressionStatement[3627-3696]"
    }, {
      "left" : "DateSerializer dateSer = DateSerializer.instance;",
      "right" : "DateSerializer dateSer = DateSerializer.instance;",
      "info" : "VariableDeclarationStatement[3705-3754]:VariableDeclarationStatement[3705-3754]"
    }, {
      "left" : "_concrete.put(java.util.Date.class.getName(), dateSer);",
      "right" : "_concrete.put(java.util.Date.class.getName(), dateSer);",
      "info" : "ExpressionStatement[3763-3818]:ExpressionStatement[3763-3818]"
    }, {
      "left" : "_concrete.put(java.sql.Timestamp.class.getName(), dateSer);",
      "right" : "_concrete.put(java.sql.Timestamp.class.getName(), dateSer);",
      "info" : "ExpressionStatement[3915-3974]:ExpressionStatement[3915-3974]"
    }, {
      "left" : "_concreteLazy.put(java.sql.Date.class.getName(), SqlDateSerializer.class);",
      "right" : "_concreteLazy.put(java.sql.Date.class.getName(), SqlDateSerializer.class);",
      "info" : "ExpressionStatement[4085-4159]:ExpressionStatement[4085-4159]"
    }, {
      "left" : "_concreteLazy.put(java.sql.Time.class.getName(), SqlTimeSerializer.class);",
      "right" : "_concreteLazy.put(java.sql.Time.class.getName(), SqlTimeSerializer.class);",
      "info" : "ExpressionStatement[4168-4242]:ExpressionStatement[4168-4242]"
    }, {
      "left" : "for (Map.Entry<Class<?>,Object> en : StdJdkSerializers.all())",
      "right" : "for (Map.Entry<Class<?>,Object> en : StdJdkSerializers.all())",
      "info" : "EnhancedForStatement[4312-5009]:EnhancedForStatement[4312-5009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4374-5009]:Block[4374-5009]"
    }, {
      "left" : "Object value = en.getValue();",
      "right" : "Object value = en.getValue();",
      "info" : "VariableDeclarationStatement[4388-4417]:VariableDeclarationStatement[4388-4417]"
    }, {
      "left" : "if (value instanceof JsonSerializer<?>)",
      "right" : "if (value instanceof JsonSerializer<?>)",
      "info" : "IfStatement[4430-4999]:IfStatement[4430-4999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4470-4566]:Block[4470-4566]"
    }, {
      "left" : "_concrete.put(en.getKey().getName(), (JsonSerializer<?>) value);",
      "right" : "_concrete.put(en.getKey().getName(), (JsonSerializer<?>) value);",
      "info" : "ExpressionStatement[4488-4552]:ExpressionStatement[4488-4552]"
    }, {
      "left" : "if (value instanceof Class<?>)",
      "right" : "if (value instanceof Class<?>)",
      "info" : "IfStatement[4572-4999]:IfStatement[4572-4999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4603-4829]:Block[4603-4829]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")\n                Class<? extends JsonSerializer<?>> cls = (Class<? extends JsonSerializer<?>>) value;",
      "right" : "@SuppressWarnings(\"unchecked\")\n                Class<? extends JsonSerializer<?>> cls = (Class<? extends JsonSerializer<?>>) value;",
      "info" : "VariableDeclarationStatement[4621-4752]:VariableDeclarationStatement[4621-4752]"
    }, {
      "left" : "_concreteLazy.put(en.getKey().getName(), cls);",
      "right" : "_concreteLazy.put(en.getKey().getName(), cls);",
      "info" : "ExpressionStatement[4769-4815]:ExpressionStatement[4769-4815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4835-4999]:Block[4835-4999]"
    }, {
      "left" : "throw new IllegalStateException(\"Internal error: unrecognized value of type \"+en.getClass().getName());",
      "right" : "throw new IllegalStateException(\"Internal error: unrecognized value of type \"+en.getClass().getName());",
      "info" : "ThrowStatement[4882-4985]:ThrowStatement[4882-4985]"
    }, {
      "left" : "_concreteLazy.put(TokenBuffer.class.getName(), TokenBufferSerializer.class);",
      "right" : "_concreteLazy.put(TokenBuffer.class.getName(), TokenBufferSerializer.class);",
      "info" : "ExpressionStatement[5101-5177]:ExpressionStatement[5101-5177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6006-6097]:Block[6006-6097]"
    }, {
      "left" : "_factoryConfig = (config == null) ? new SerializerFactoryConfig() : config;",
      "right" : "_factoryConfig = (config == null) ? new SerializerFactoryConfig() : config;",
      "info" : "ExpressionStatement[6016-6091]:ExpressionStatement[6016-6091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6442-6480]:Block[6442-6480]"
    }, {
      "left" : "return _factoryConfig;",
      "right" : "return _factoryConfig;",
      "info" : "ReturnStatement[6452-6474]:ReturnStatement[6452-6474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7335-7423]:Block[7335-7423]"
    }, {
      "left" : "return withConfig(_factoryConfig.withAdditionalSerializers(additional));",
      "right" : "return withConfig(_factoryConfig.withAdditionalSerializers(additional));",
      "info" : "ReturnStatement[7345-7417]:ReturnStatement[7345-7417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7656-7747]:Block[7656-7747]"
    }, {
      "left" : "return withConfig(_factoryConfig.withAdditionalKeySerializers(additional));",
      "right" : "return withConfig(_factoryConfig.withAdditionalKeySerializers(additional));",
      "info" : "ReturnStatement[7666-7741]:ReturnStatement[7666-7741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7985-8068]:Block[7985-8068]"
    }, {
      "left" : "return withConfig(_factoryConfig.withSerializerModifier(modifier));",
      "right" : "return withConfig(_factoryConfig.withSerializerModifier(modifier));",
      "info" : "ReturnStatement[7995-8062]:ReturnStatement[7995-8062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8647-10848]:Block[8647-10848]"
    }, {
      "left" : "BeanDescription beanDesc = config.introspectClassAnnotations(keyType.getRawClass());",
      "right" : "BeanDescription beanDesc = config.introspectClassAnnotations(keyType.getRawClass());",
      "info" : "VariableDeclarationStatement[8785-8869]:VariableDeclarationStatement[8785-8869]"
    }, {
      "left" : "JsonSerializer<?> ser = null;",
      "right" : "JsonSerializer<?> ser = null;",
      "info" : "VariableDeclarationStatement[8878-8907]:VariableDeclarationStatement[8878-8907]"
    }, {
      "left" : "if (_factoryConfig.hasKeySerializers())",
      "right" : "if (_factoryConfig.hasKeySerializers())",
      "info" : "IfStatement[9007-9383]:IfStatement[9007-9383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9047-9383]:Block[9047-9383]"
    }, {
      "left" : "for (Serializers serializers : _factoryConfig.keySerializers())",
      "right" : "for (Serializers serializers : _factoryConfig.keySerializers())",
      "info" : "EnhancedForStatement[9137-9373]:EnhancedForStatement[9137-9373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9201-9373]:Block[9201-9373]"
    }, {
      "left" : "ser = serializers.findSerializer(config, keyType, beanDesc);",
      "right" : "ser = serializers.findSerializer(config, keyType, beanDesc);",
      "info" : "ExpressionStatement[9219-9279]:ExpressionStatement[9219-9279]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[9296-9359]:IfStatement[9296-9359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9313-9359]:Block[9313-9359]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9335-9341]:BreakStatement[9335-9341]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[9392-10498]:IfStatement[9392-10498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9409-10498]:Block[9409-10498]"
    }, {
      "left" : "ser = defaultImpl;",
      "right" : "ser = defaultImpl;",
      "info" : "ExpressionStatement[9423-9441]:ExpressionStatement[9423-9441]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[9454-10488]:IfStatement[9454-10488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9471-10488]:Block[9471-10488]"
    }, {
      "left" : "ser = StdKeySerializers.getStdKeySerializer(config, keyType.getRawClass(), false);",
      "right" : "ser = StdKeySerializers.getStdKeySerializer(config, keyType.getRawClass(), false);",
      "info" : "ExpressionStatement[9489-9571]:ExpressionStatement[9489-9571]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[9661-10474]:IfStatement[9661-10474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9678-10474]:Block[9678-10474]"
    }, {
      "left" : "beanDesc = config.introspect(keyType);",
      "right" : "beanDesc = config.introspect(keyType);",
      "info" : "ExpressionStatement[9700-9738]:ExpressionStatement[9700-9738]"
    }, {
      "left" : "AnnotatedMethod am = beanDesc.findJsonValueMethod();",
      "right" : "AnnotatedMethod am = beanDesc.findJsonValueMethod();",
      "info" : "VariableDeclarationStatement[9759-9811]:VariableDeclarationStatement[9759-9811]"
    }, {
      "left" : "if (am != null)",
      "right" : "if (am != null)",
      "info" : "IfStatement[9832-10456]:IfStatement[9832-10456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9848-10365]:Block[9848-10365]"
    }, {
      "left" : "final Class<?> rawType = am.getRawReturnType();",
      "right" : "final Class<?> rawType = am.getRawReturnType();",
      "info" : "VariableDeclarationStatement[9874-9921]:VariableDeclarationStatement[9874-9921]"
    }, {
      "left" : "JsonSerializer<?> delegate = StdKeySerializers.getStdKeySerializer(config,\n                                rawType, true);",
      "right" : "JsonSerializer<?> delegate = StdKeySerializers.getStdKeySerializer(config,\n                                rawType, true);",
      "info" : "VariableDeclarationStatement[9946-10068]:VariableDeclarationStatement[9946-10068]"
    }, {
      "left" : "Method m = am.getAnnotated();",
      "right" : "Method m = am.getAnnotated();",
      "info" : "VariableDeclarationStatement[10093-10122]:VariableDeclarationStatement[10093-10122]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[10147-10275]:IfStatement[10147-10275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10188-10275]:Block[10188-10275]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess(m);",
      "right" : "ClassUtil.checkAndFixAccess(m);",
      "info" : "ExpressionStatement[10218-10249]:ExpressionStatement[10218-10249]"
    }, {
      "left" : "ser = new JsonValueSerializer(m, delegate);",
      "right" : "ser = new JsonValueSerializer(m, delegate);",
      "info" : "ExpressionStatement[10300-10343]:ExpressionStatement[10300-10343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10371-10456]:Block[10371-10456]"
    }, {
      "left" : "ser = StdKeySerializers.getDefault();",
      "right" : "ser = StdKeySerializers.getDefault();",
      "info" : "ExpressionStatement[10397-10434]:ExpressionStatement[10397-10434]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[10562-10797]:IfStatement[10562-10797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10607-10797]:Block[10607-10797]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[10621-10787]:EnhancedForStatement[10621-10787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10693-10787]:Block[10693-10787]"
    }, {
      "left" : "ser = mod.modifyKeySerializer(config, keyType, beanDesc, ser);",
      "right" : "ser = mod.modifyKeySerializer(config, keyType, beanDesc, ser);",
      "info" : "ExpressionStatement[10711-10773]:ExpressionStatement[10711-10773]"
    }, {
      "left" : "return (JsonSerializer<Object>) ser;",
      "right" : "return (JsonSerializer<Object>) ser;",
      "info" : "ReturnStatement[10806-10842]:ReturnStatement[10806-10842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11165-12115]:Block[11165-12115]"
    }, {
      "left" : "BeanDescription bean = config.introspectClassAnnotations(baseType.getRawClass());",
      "right" : "BeanDescription bean = config.introspectClassAnnotations(baseType.getRawClass());",
      "info" : "VariableDeclarationStatement[11175-11256]:VariableDeclarationStatement[11175-11256]"
    }, {
      "left" : "AnnotatedClass ac = bean.getClassInfo();",
      "right" : "AnnotatedClass ac = bean.getClassInfo();",
      "info" : "VariableDeclarationStatement[11265-11305]:VariableDeclarationStatement[11265-11305]"
    }, {
      "left" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[11314-11377]:VariableDeclarationStatement[11314-11377]"
    }, {
      "left" : "TypeResolverBuilder<?> b = ai.findTypeResolver(config, ac, baseType);",
      "right" : "TypeResolverBuilder<?> b = ai.findTypeResolver(config, ac, baseType);",
      "info" : "VariableDeclarationStatement[11386-11455]:VariableDeclarationStatement[11386-11455]"
    }, {
      "left" : "Collection<NamedType> subtypes = null;",
      "right" : "Collection<NamedType> subtypes = null;",
      "info" : "VariableDeclarationStatement[11615-11653]:VariableDeclarationStatement[11615-11653]"
    }, {
      "left" : "if (b == null)",
      "right" : "if (b == null)",
      "info" : "IfStatement[11662-11852]:IfStatement[11662-11852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11677-11738]:Block[11677-11738]"
    }, {
      "left" : "b = config.getDefaultTyper(baseType);",
      "right" : "b = config.getDefaultTyper(baseType);",
      "info" : "ExpressionStatement[11691-11728]:ExpressionStatement[11691-11728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11744-11852]:Block[11744-11852]"
    }, {
      "left" : "subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByClass(config, ac);",
      "right" : "subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByClass(config, ac);",
      "info" : "ExpressionStatement[11758-11842]:ExpressionStatement[11758-11842]"
    }, {
      "left" : "if (b == null)",
      "right" : "if (b == null)",
      "info" : "IfStatement[11861-11912]:IfStatement[11861-11912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11876-11912]:Block[11876-11912]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11890-11902]:ReturnStatement[11890-11902]"
    }, {
      "left" : "return b.buildTypeSerializer(config, baseType, subtypes);",
      "right" : "return b.buildTypeSerializer(config, baseType, subtypes);",
      "info" : "ReturnStatement[12052-12109]:ReturnStatement[12052-12109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12903-13756]:Block[12903-13756]"
    }, {
      "left" : "Class<?> raw = type.getRawClass();",
      "right" : "Class<?> raw = type.getRawClass();",
      "info" : "VariableDeclarationStatement[12913-12947]:VariableDeclarationStatement[12913-12947]"
    }, {
      "left" : "String clsName = raw.getName();",
      "right" : "String clsName = raw.getName();",
      "info" : "VariableDeclarationStatement[12956-12987]:VariableDeclarationStatement[12956-12987]"
    }, {
      "left" : "if (type.isReferenceType())",
      "right" : "if (type.isReferenceType())",
      "info" : "IfStatement[12996-13190]:IfStatement[12996-13190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13024-13190]:Block[13024-13190]"
    }, {
      "left" : "if (type.isTypeOrSubTypeOf(AtomicReference.class))",
      "right" : "if (type.isTypeOrSubTypeOf(AtomicReference.class))",
      "info" : "IfStatement[13038-13180]:IfStatement[13038-13180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13089-13180]:Block[13089-13180]"
    }, {
      "left" : "return new AtomicReferenceSerializer((ReferenceType) type);",
      "right" : "return new AtomicReferenceSerializer((ReferenceType) type);",
      "info" : "ReturnStatement[13107-13166]:ReturnStatement[13107-13166]"
    }, {
      "left" : "JsonSerializer<?> ser = _concrete.get(clsName);",
      "right" : "JsonSerializer<?> ser = _concrete.get(clsName);",
      "info" : "VariableDeclarationStatement[13199-13246]:VariableDeclarationStatement[13199-13246]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[13255-13730]:IfStatement[13255-13730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13272-13730]:Block[13272-13730]"
    }, {
      "left" : "Class<? extends JsonSerializer<?>> serClass = _concreteLazy.get(clsName);",
      "right" : "Class<? extends JsonSerializer<?>> serClass = _concreteLazy.get(clsName);",
      "info" : "VariableDeclarationStatement[13286-13359]:VariableDeclarationStatement[13286-13359]"
    }, {
      "left" : "if (serClass != null)",
      "right" : "if (serClass != null)",
      "info" : "IfStatement[13372-13720]:IfStatement[13372-13720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13394-13720]:Block[13394-13720]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[13412-13706]:TryStatement[13412-13706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13416-13486]:Block[13416-13486]"
    }, {
      "left" : "return serClass.newInstance();",
      "right" : "return serClass.newInstance();",
      "info" : "ReturnStatement[13438-13468]:ReturnStatement[13438-13468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13507-13706]:Block[13507-13706]"
    }, {
      "left" : "throw new IllegalStateException(\"Failed to instantiate standard serializer (of type \"+serClass.getName()+\"): \"\n                            +e.getMessage(), e);",
      "right" : "throw new IllegalStateException(\"Failed to instantiate standard serializer (of type \"+serClass.getName()+\"): \"\n                            +e.getMessage(), e);",
      "info" : "ThrowStatement[13529-13688]:ThrowStatement[13529-13688]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[13739-13750]:ReturnStatement[13739-13750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14476-15211]:Block[14476-15211]"
    }, {
      "left" : "Class<?> raw = type.getRawClass();",
      "right" : "Class<?> raw = type.getRawClass();",
      "info" : "VariableDeclarationStatement[14486-14520]:VariableDeclarationStatement[14486-14520]"
    }, {
      "left" : "if (JsonSerializable.class.isAssignableFrom(raw))",
      "right" : "if (JsonSerializable.class.isAssignableFrom(raw))",
      "info" : "IfStatement[14565-14678]:IfStatement[14565-14678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14615-14678]:Block[14615-14678]"
    }, {
      "left" : "return SerializableSerializer.instance;",
      "right" : "return SerializableSerializer.instance;",
      "info" : "ReturnStatement[14629-14668]:ReturnStatement[14629-14668]"
    }, {
      "left" : "AnnotatedMethod valueMethod = beanDesc.findJsonValueMethod();",
      "right" : "AnnotatedMethod valueMethod = beanDesc.findJsonValueMethod();",
      "info" : "VariableDeclarationStatement[14730-14791]:VariableDeclarationStatement[14730-14791]"
    }, {
      "left" : "if (valueMethod != null)",
      "right" : "if (valueMethod != null)",
      "info" : "IfStatement[14800-15144]:IfStatement[14800-15144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14825-15144]:Block[14825-15144]"
    }, {
      "left" : "Method m = valueMethod.getAnnotated();",
      "right" : "Method m = valueMethod.getAnnotated();",
      "info" : "VariableDeclarationStatement[14839-14877]:VariableDeclarationStatement[14839-14877]"
    }, {
      "left" : "if (prov.canOverrideAccessModifiers())",
      "right" : "if (prov.canOverrideAccessModifiers())",
      "info" : "IfStatement[14890-14992]:IfStatement[14890-14992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14929-14992]:Block[14929-14992]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess(m);",
      "right" : "ClassUtil.checkAndFixAccess(m);",
      "info" : "ExpressionStatement[14947-14978]:ExpressionStatement[14947-14978]"
    }, {
      "left" : "JsonSerializer<Object> ser = findSerializerFromAnnotation(prov, valueMethod);",
      "right" : "JsonSerializer<Object> ser = findSerializerFromAnnotation(prov, valueMethod);",
      "info" : "VariableDeclarationStatement[15005-15082]:VariableDeclarationStatement[15005-15082]"
    }, {
      "left" : "return new JsonValueSerializer(m, ser);",
      "right" : "return new JsonValueSerializer(m, ser);",
      "info" : "ReturnStatement[15095-15134]:ReturnStatement[15095-15134]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[15193-15205]:ReturnStatement[15193-15205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15798-18234]:Block[15798-18234]"
    }, {
      "left" : "Class<?> raw = type.getRawClass();",
      "right" : "Class<?> raw = type.getRawClass();",
      "info" : "VariableDeclarationStatement[15808-15842]:VariableDeclarationStatement[15808-15842]"
    }, {
      "left" : "JsonSerializer<?> ser = findOptionalStdSerializer(prov, type, beanDesc, staticTyping);",
      "right" : "JsonSerializer<?> ser = findOptionalStdSerializer(prov, type, beanDesc, staticTyping);",
      "info" : "VariableDeclarationStatement[15930-16016]:VariableDeclarationStatement[15930-16016]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[16025-16077]:IfStatement[16025-16077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16042-16077]:Block[16042-16077]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[16056-16067]:ReturnStatement[16056-16067]"
    }, {
      "left" : "if (Calendar.class.isAssignableFrom(raw))",
      "right" : "if (Calendar.class.isAssignableFrom(raw))",
      "info" : "IfStatement[16095-16196]:IfStatement[16095-16196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16137-16196]:Block[16137-16196]"
    }, {
      "left" : "return CalendarSerializer.instance;",
      "right" : "return CalendarSerializer.instance;",
      "info" : "ReturnStatement[16151-16186]:ReturnStatement[16151-16186]"
    }, {
      "left" : "if (java.util.Date.class.isAssignableFrom(raw))",
      "right" : "if (java.util.Date.class.isAssignableFrom(raw))",
      "info" : "IfStatement[16205-16308]:IfStatement[16205-16308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16253-16308]:Block[16253-16308]"
    }, {
      "left" : "return DateSerializer.instance;",
      "right" : "return DateSerializer.instance;",
      "info" : "ReturnStatement[16267-16298]:ReturnStatement[16267-16298]"
    }, {
      "left" : "if (Map.Entry.class.isAssignableFrom(raw))",
      "right" : "if (Map.Entry.class.isAssignableFrom(raw))",
      "info" : "IfStatement[16317-16829]:IfStatement[16317-16829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16360-16829]:Block[16360-16829]"
    }, {
      "left" : "JavaType kt = type.containedType(0);",
      "right" : "JavaType kt = type.containedType(0);",
      "info" : "VariableDeclarationStatement[16450-16486]:VariableDeclarationStatement[16450-16486]"
    }, {
      "left" : "if (kt == null)",
      "right" : "if (kt == null)",
      "info" : "IfStatement[16499-16578]:IfStatement[16499-16578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16515-16578]:Block[16515-16578]"
    }, {
      "left" : "kt = TypeFactory.unknownType();",
      "right" : "kt = TypeFactory.unknownType();",
      "info" : "ExpressionStatement[16533-16564]:ExpressionStatement[16533-16564]"
    }, {
      "left" : "JavaType vt = type.containedType(1);",
      "right" : "JavaType vt = type.containedType(1);",
      "info" : "VariableDeclarationStatement[16591-16627]:VariableDeclarationStatement[16591-16627]"
    }, {
      "left" : "if (vt == null)",
      "right" : "if (vt == null)",
      "info" : "IfStatement[16640-16719]:IfStatement[16640-16719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16656-16719]:Block[16656-16719]"
    }, {
      "left" : "vt = TypeFactory.unknownType();",
      "right" : "vt = TypeFactory.unknownType();",
      "info" : "ExpressionStatement[16674-16705]:ExpressionStatement[16674-16705]"
    }, {
      "left" : "return buildMapEntrySerializer(prov.getConfig(), type, beanDesc, staticTyping, kt, vt);",
      "right" : "return buildMapEntrySerializer(prov.getConfig(), type, beanDesc, staticTyping, kt, vt);",
      "info" : "ReturnStatement[16732-16819]:ReturnStatement[16732-16819]"
    }, {
      "left" : "if (ByteBuffer.class.isAssignableFrom(raw))",
      "right" : "if (ByteBuffer.class.isAssignableFrom(raw))",
      "info" : "IfStatement[16838-16940]:IfStatement[16838-16940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16882-16940]:Block[16882-16940]"
    }, {
      "left" : "return new ByteBufferSerializer();",
      "right" : "return new ByteBufferSerializer();",
      "info" : "ReturnStatement[16896-16930]:ReturnStatement[16896-16930]"
    }, {
      "left" : "if (InetAddress.class.isAssignableFrom(raw))",
      "right" : "if (InetAddress.class.isAssignableFrom(raw))",
      "info" : "IfStatement[16949-17053]:IfStatement[16949-17053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16994-17053]:Block[16994-17053]"
    }, {
      "left" : "return new InetAddressSerializer();",
      "right" : "return new InetAddressSerializer();",
      "info" : "ReturnStatement[17008-17043]:ReturnStatement[17008-17043]"
    }, {
      "left" : "if (InetSocketAddress.class.isAssignableFrom(raw))",
      "right" : "if (InetSocketAddress.class.isAssignableFrom(raw))",
      "info" : "IfStatement[17062-17178]:IfStatement[17062-17178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17113-17178]:Block[17113-17178]"
    }, {
      "left" : "return new InetSocketAddressSerializer();",
      "right" : "return new InetSocketAddressSerializer();",
      "info" : "ReturnStatement[17127-17168]:ReturnStatement[17127-17168]"
    }, {
      "left" : "if (TimeZone.class.isAssignableFrom(raw))",
      "right" : "if (TimeZone.class.isAssignableFrom(raw))",
      "info" : "IfStatement[17187-17285]:IfStatement[17187-17285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17229-17285]:Block[17229-17285]"
    }, {
      "left" : "return new TimeZoneSerializer();",
      "right" : "return new TimeZoneSerializer();",
      "info" : "ReturnStatement[17243-17275]:ReturnStatement[17243-17275]"
    }, {
      "left" : "if (java.nio.charset.Charset.class.isAssignableFrom(raw))",
      "right" : "if (java.nio.charset.Charset.class.isAssignableFrom(raw))",
      "info" : "IfStatement[17294-17411]:IfStatement[17294-17411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17352-17411]:Block[17352-17411]"
    }, {
      "left" : "return ToStringSerializer.instance;",
      "right" : "return ToStringSerializer.instance;",
      "info" : "ReturnStatement[17366-17401]:ReturnStatement[17366-17401]"
    }, {
      "left" : "if (Number.class.isAssignableFrom(raw))",
      "right" : "if (Number.class.isAssignableFrom(raw))",
      "info" : "IfStatement[17420-18075]:IfStatement[17420-18075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17460-18075]:Block[17460-18075]"
    }, {
      "left" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "right" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "info" : "VariableDeclarationStatement[17540-17600]:VariableDeclarationStatement[17540-17600]"
    }, {
      "left" : "if (format != null)",
      "right" : "if (format != null)",
      "info" : "IfStatement[17613-18019]:IfStatement[17613-18019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17633-18019]:Block[17633-18019]"
    }, {
      "left" : "switch (format.getShape()) {\n                case STRING:\n                    return ToStringSerializer.instance;\n                case OBJECT: // need to bail out to let it be serialized as POJO\n                case ARRAY: // or, I guess ARRAY; otherwise no point in speculating\n                    return null;\n                default:\n                }",
      "right" : "switch (format.getShape()) {\n                case STRING:\n                    return ToStringSerializer.instance;\n                case OBJECT: // need to bail out to let it be serialized as POJO\n                case ARRAY: // or, I guess ARRAY; otherwise no point in speculating\n                    return null;\n                default:\n                }",
      "info" : "SwitchStatement[17651-18005]:SwitchStatement[17651-18005]"
    }, {
      "left" : "case STRING:",
      "right" : "case STRING:",
      "info" : "SwitchCase[17696-17708]:SwitchCase[17696-17708]"
    }, {
      "left" : "return ToStringSerializer.instance;",
      "right" : "return ToStringSerializer.instance;",
      "info" : "ReturnStatement[17729-17764]:ReturnStatement[17729-17764]"
    }, {
      "left" : "case OBJECT:",
      "right" : "case OBJECT:",
      "info" : "SwitchCase[17781-17793]:SwitchCase[17781-17793]"
    }, {
      "left" : "case ARRAY:",
      "right" : "case ARRAY:",
      "info" : "SwitchCase[17862-17873]:SwitchCase[17862-17873]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17950-17962]:ReturnStatement[17950-17962]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[17979-17987]:SwitchCase[17979-17987]"
    }, {
      "left" : "return NumberSerializer.instance;",
      "right" : "return NumberSerializer.instance;",
      "info" : "ReturnStatement[18032-18065]:ReturnStatement[18032-18065]"
    }, {
      "left" : "if (Enum.class.isAssignableFrom(raw))",
      "right" : "if (Enum.class.isAssignableFrom(raw))",
      "info" : "IfStatement[18084-18207]:IfStatement[18084-18207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18122-18207]:Block[18122-18207]"
    }, {
      "left" : "return buildEnumSerializer(prov.getConfig(), type, beanDesc);",
      "right" : "return buildEnumSerializer(prov.getConfig(), type, beanDesc);",
      "info" : "ReturnStatement[18136-18197]:ReturnStatement[18136-18197]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[18216-18228]:ReturnStatement[18216-18228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18542-18646]:Block[18542-18646]"
    }, {
      "left" : "return OptionalHandlerFactory.instance.findSerializer(prov.getConfig(), type, beanDesc);",
      "right" : "return OptionalHandlerFactory.instance.findSerializer(prov.getConfig(), type, beanDesc);",
      "info" : "ReturnStatement[18552-18640]:ReturnStatement[18552-18640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19230-20185]:Block[19230-20185]"
    }, {
      "left" : "Class<?> type = javaType.getRawClass();",
      "right" : "Class<?> type = javaType.getRawClass();",
      "info" : "VariableDeclarationStatement[19240-19279]:VariableDeclarationStatement[19240-19279]"
    }, {
      "left" : "if (Iterator.class.isAssignableFrom(type))",
      "right" : "if (Iterator.class.isAssignableFrom(type))",
      "info" : "IfStatement[19289-19661]:IfStatement[19289-19661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19332-19661]:Block[19332-19661]"
    }, {
      "left" : "JavaType[] params = config.getTypeFactory().findTypeParameters(javaType, Iterator.class);",
      "right" : "JavaType[] params = config.getTypeFactory().findTypeParameters(javaType, Iterator.class);",
      "info" : "VariableDeclarationStatement[19346-19435]:VariableDeclarationStatement[19346-19435]"
    }, {
      "left" : "JavaType vt = (params == null || params.length != 1) ?\n                    TypeFactory.unknownType() : params[0];",
      "right" : "JavaType vt = (params == null || params.length != 1) ?\n                    TypeFactory.unknownType() : params[0];",
      "info" : "VariableDeclarationStatement[19448-19561]:VariableDeclarationStatement[19448-19561]"
    }, {
      "left" : "return buildIteratorSerializer(config, javaType, beanDesc, staticTyping, vt);",
      "right" : "return buildIteratorSerializer(config, javaType, beanDesc, staticTyping, vt);",
      "info" : "ReturnStatement[19574-19651]:ReturnStatement[19574-19651]"
    }, {
      "left" : "if (Iterable.class.isAssignableFrom(type))",
      "right" : "if (Iterable.class.isAssignableFrom(type))",
      "info" : "IfStatement[19670-20043]:IfStatement[19670-20043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19713-20043]:Block[19713-20043]"
    }, {
      "left" : "JavaType[] params = config.getTypeFactory().findTypeParameters(javaType, Iterable.class);",
      "right" : "JavaType[] params = config.getTypeFactory().findTypeParameters(javaType, Iterable.class);",
      "info" : "VariableDeclarationStatement[19727-19816]:VariableDeclarationStatement[19727-19816]"
    }, {
      "left" : "JavaType vt = (params == null || params.length != 1) ?\n                    TypeFactory.unknownType() : params[0];",
      "right" : "JavaType vt = (params == null || params.length != 1) ?\n                    TypeFactory.unknownType() : params[0];",
      "info" : "VariableDeclarationStatement[19829-19942]:VariableDeclarationStatement[19829-19942]"
    }, {
      "left" : "return buildIterableSerializer(config, javaType, beanDesc,  staticTyping, vt);",
      "right" : "return buildIterableSerializer(config, javaType, beanDesc,  staticTyping, vt);",
      "info" : "ReturnStatement[19955-20033]:ReturnStatement[19955-20033]"
    }, {
      "left" : "if (CharSequence.class.isAssignableFrom(type))",
      "right" : "if (CharSequence.class.isAssignableFrom(type))",
      "info" : "IfStatement[20052-20158]:IfStatement[20052-20158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20099-20158]:Block[20099-20158]"
    }, {
      "left" : "return ToStringSerializer.instance;",
      "right" : "return ToStringSerializer.instance;",
      "info" : "ReturnStatement[20113-20148]:ReturnStatement[20113-20148]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20167-20179]:ReturnStatement[20167-20179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20661-21033]:Block[20661-21033]"
    }, {
      "left" : "Object serDef = prov.getAnnotationIntrospector().findSerializer(a);",
      "right" : "Object serDef = prov.getAnnotationIntrospector().findSerializer(a);",
      "info" : "VariableDeclarationStatement[20671-20738]:VariableDeclarationStatement[20671-20738]"
    }, {
      "left" : "if (serDef == null)",
      "right" : "if (serDef == null)",
      "info" : "IfStatement[20747-20803]:IfStatement[20747-20803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20767-20803]:Block[20767-20803]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20781-20793]:ReturnStatement[20781-20793]"
    }, {
      "left" : "JsonSerializer<Object> ser = prov.serializerInstance(a, serDef);",
      "right" : "JsonSerializer<Object> ser = prov.serializerInstance(a, serDef);",
      "info" : "VariableDeclarationStatement[20812-20876]:VariableDeclarationStatement[20812-20876]"
    }, {
      "left" : "return (JsonSerializer<Object>) findConvertingSerializer(prov, a, ser);",
      "right" : "return (JsonSerializer<Object>) findConvertingSerializer(prov, a, ser);",
      "info" : "ReturnStatement[20956-21027]:ReturnStatement[20956-21027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21527-21804]:Block[21527-21804]"
    }, {
      "left" : "Converter<Object,Object> conv = findConverter(prov, a);",
      "right" : "Converter<Object,Object> conv = findConverter(prov, a);",
      "info" : "VariableDeclarationStatement[21537-21592]:VariableDeclarationStatement[21537-21592]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[21601-21654]:IfStatement[21601-21654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21619-21654]:Block[21619-21654]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[21633-21644]:ReturnStatement[21633-21644]"
    }, {
      "left" : "JavaType delegateType = conv.getOutputType(prov.getTypeFactory());",
      "right" : "JavaType delegateType = conv.getOutputType(prov.getTypeFactory());",
      "info" : "VariableDeclarationStatement[21663-21729]:VariableDeclarationStatement[21663-21729]"
    }, {
      "left" : "return new StdDelegatingSerializer(conv, delegateType, ser);",
      "right" : "return new StdDelegatingSerializer(conv, delegateType, ser);",
      "info" : "ReturnStatement[21738-21798]:ReturnStatement[21738-21798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21949-22162]:Block[21949-22162]"
    }, {
      "left" : "Object convDef = prov.getAnnotationIntrospector().findSerializationConverter(a);",
      "right" : "Object convDef = prov.getAnnotationIntrospector().findSerializationConverter(a);",
      "info" : "VariableDeclarationStatement[21959-22039]:VariableDeclarationStatement[21959-22039]"
    }, {
      "left" : "if (convDef == null)",
      "right" : "if (convDef == null)",
      "info" : "IfStatement[22048-22105]:IfStatement[22048-22105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22069-22105]:Block[22069-22105]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22083-22095]:ReturnStatement[22083-22095]"
    }, {
      "left" : "return prov.converterInstance(a, convDef);",
      "right" : "return prov.converterInstance(a, convDef);",
      "info" : "ReturnStatement[22114-22156]:ReturnStatement[22114-22156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22584-26710]:Block[22584-27072]"
    }, {
      "left" : "final SerializationConfig config = prov.getConfig();",
      "right" : "final SerializationConfig config = prov.getConfig();",
      "info" : "VariableDeclarationStatement[22594-22646]:VariableDeclarationStatement[22594-22646]"
    }, {
      "left" : "if (!staticTyping && type.useStaticType())",
      "right" : "if (!staticTyping && type.useStaticType())",
      "info" : "IfStatement[22901-23104]:IfStatement[22901-23104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22944-23104]:Block[22944-23104]"
    }, {
      "left" : "if (!type.isContainerType() || type.getContentType().getRawClass() != Object.class)",
      "right" : "if (!type.isContainerType() || type.getContentType().getRawClass() != Object.class)",
      "info" : "IfStatement[22958-23094]:IfStatement[22958-23094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23042-23094]:Block[23042-23094]"
    }, {
      "left" : "staticTyping = true;",
      "right" : "staticTyping = true;",
      "info" : "ExpressionStatement[23060-23080]:ExpressionStatement[23060-23080]"
    }, {
      "left" : "JavaType elementType = type.getContentType();",
      "right" : "JavaType elementType = type.getContentType();",
      "info" : "VariableDeclarationStatement[23219-23264]:VariableDeclarationStatement[23219-23264]"
    }, {
      "left" : "TypeSerializer elementTypeSerializer = createTypeSerializer(config,\n                elementType);",
      "right" : "TypeSerializer elementTypeSerializer = createTypeSerializer(config,\n                elementType);",
      "info" : "VariableDeclarationStatement[23273-23370]:VariableDeclarationStatement[23273-23370]"
    }, {
      "left" : "if (elementTypeSerializer != null)",
      "right" : "if (elementTypeSerializer != null)",
      "info" : "IfStatement[23454-23534]:IfStatement[23454-23534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23489-23534]:Block[23489-23534]"
    }, {
      "left" : "staticTyping = false;",
      "right" : "staticTyping = false;",
      "info" : "ExpressionStatement[23503-23524]:ExpressionStatement[23503-23524]"
    }, {
      "left" : "JsonSerializer<Object> elementValueSerializer = _findContentSerializer(prov,\n                beanDesc.getClassInfo());",
      "right" : "JsonSerializer<Object> elementValueSerializer = _findContentSerializer(prov,\n                beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[23543-23661]:VariableDeclarationStatement[23543-23661]"
    }, {
      "left" : "if (type.isMapLikeType())",
      "right" : "if (type.isMapLikeType())",
      "info" : "IfStatement[23670-25282]:IfStatement[23670-25464]"
    }, {
      "left" : "MapLikeType mlt = (MapLikeType) type;",
      "right" : "MapLikeType mlt = (MapLikeType) type;",
      "info" : "VariableDeclarationStatement[23738-23775]:VariableDeclarationStatement[23738-23775]"
    }, {
      "left" : "JsonSerializer<Object> keySerializer = _findKeySerializer(prov, beanDesc.getClassInfo());",
      "right" : "JsonSerializer<Object> keySerializer = _findKeySerializer(prov, beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[24121-24210]:VariableDeclarationStatement[24121-24210]"
    }, {
      "left" : "if (mlt.isTrueMapType())",
      "right" : "if (mlt.isTrueMapType())",
      "info" : "IfStatement[24223-24439]:IfStatement[24223-24437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24248-24439]:Block[24248-24437]"
    }, {
      "left" : "return buildMapSerializer(config, (MapType) mlt, beanDesc, staticTyping,\n                        keySerializer, elementTypeSerializer, elementValueSerializer);",
      "right" : "return buildMapSerializer(prov, (MapType) mlt, beanDesc, staticTyping,\n                        keySerializer, elementTypeSerializer, elementValueSerializer);",
      "info" : "ReturnStatement[24266-24425]:ReturnStatement[24266-24423]"
    }, {
      "left" : "JsonSerializer<?> ser = null;",
      "right" : "JsonSerializer<?> ser = null;",
      "info" : "VariableDeclarationStatement[24526-24555]:VariableDeclarationStatement[24524-24553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24620-25247]:Block[23696-25464]"
    }, {
      "left" : "MapLikeType mlType = (MapLikeType) type;",
      "right" : "MapLikeType mlType = (MapLikeType) type;",
      "info" : "VariableDeclarationStatement[24652-24692]:VariableDeclarationStatement[24566-24606]"
    }, {
      "left" : "ser = serializers.findMapLikeSerializer(config,\n                        mlType, beanDesc, keySerializer, elementTypeSerializer, elementValueSerializer);",
      "right" : "ser = serializers.findMapLikeSerializer(config,\n                        mlType, beanDesc, keySerializer, elementTypeSerializer, elementValueSerializer);",
      "info" : "ExpressionStatement[24709-24861]:ExpressionStatement[24703-24855]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[24874-25233]:IfStatement[25111-25430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24891-25233]:Block[25128-25430]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[24909-25183]:IfStatement[25146-25416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24954-25183]:Block[25191-25416]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[24976-25161]:EnhancedForStatement[25213-25398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25048-25161]:Block[25285-25398]"
    }, {
      "left" : "ser = mod.modifyMapLikeSerializer(config, mlType, beanDesc, ser);",
      "right" : "ser = mod.modifyMapLikeSerializer(config, mlType, beanDesc, ser);",
      "info" : "ExpressionStatement[25074-25139]:ExpressionStatement[25311-25376]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[25204-25215]:ReturnStatement[25443-25454]"
    }, {
      "left" : "if (type.isCollectionLikeType())",
      "right" : "if (type.isCollectionLikeType())",
      "info" : "IfStatement[25291-26481]:IfStatement[25473-26845]"
    }, {
      "left" : "CollectionLikeType clt = (CollectionLikeType) type;",
      "right" : "CollectionLikeType clt = (CollectionLikeType) type;",
      "info" : "VariableDeclarationStatement[25338-25389]:VariableDeclarationStatement[25520-25571]"
    }, {
      "left" : "if (clt.isTrueCollectionType())",
      "right" : "if (clt.isTrueCollectionType())",
      "info" : "IfStatement[25402-25625]:IfStatement[25584-25805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25434-25625]:Block[25616-25805]"
    }, {
      "left" : "return buildCollectionSerializer(config,  (CollectionType) clt, beanDesc, staticTyping,\n                        elementTypeSerializer, elementValueSerializer);",
      "right" : "return buildCollectionSerializer(prov,  (CollectionType) clt, beanDesc, staticTyping,\n                        elementTypeSerializer, elementValueSerializer);",
      "info" : "ReturnStatement[25452-25611]:ReturnStatement[25634-25791]"
    }, {
      "left" : "JsonSerializer<?> ser = null;",
      "right" : "JsonSerializer<?> ser = null;",
      "info" : "VariableDeclarationStatement[25712-25741]:VariableDeclarationStatement[25892-25921]"
    }, {
      "left" : "CollectionLikeType clType = (CollectionLikeType) type;",
      "right" : "CollectionLikeType clType = (CollectionLikeType) type;",
      "info" : "VariableDeclarationStatement[25754-25808]:VariableDeclarationStatement[25934-25988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25873-26446]:Block[25506-26845]"
    }, {
      "left" : "ser = serializers.findCollectionLikeSerializer(config,\n                        clType, beanDesc, elementTypeSerializer, elementValueSerializer);",
      "right" : "ser = serializers.findCollectionLikeSerializer(config,\n                        clType, beanDesc, elementTypeSerializer, elementValueSerializer);",
      "info" : "ExpressionStatement[25905-26049]:ExpressionStatement[26085-26229]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[26062-26432]:IfStatement[26485-26811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26079-26432]:Block[26502-26811]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[26097-26382]:IfStatement[26520-26797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26142-26382]:Block[26565-26797]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[26164-26360]:EnhancedForStatement[26587-26779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26236-26360]:Block[26659-26779]"
    }, {
      "left" : "ser = mod.modifyCollectionLikeSerializer(config, clType, beanDesc, ser);",
      "right" : "ser = mod.modifyCollectionLikeSerializer(config, clType, beanDesc, ser);",
      "info" : "ExpressionStatement[26262-26334]:ExpressionStatement[26685-26757]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[26403-26414]:ReturnStatement[26824-26835]"
    }, {
      "left" : "if (type.isArrayType())",
      "right" : "if (type.isArrayType())",
      "info" : "IfStatement[26490-26683]:IfStatement[26854-27045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26514-26683]:Block[26878-27045]"
    }, {
      "left" : "return buildArraySerializer(config, (ArrayType) type, beanDesc, staticTyping,\n                    elementTypeSerializer, elementValueSerializer);",
      "right" : "return buildArraySerializer(prov, (ArrayType) type, beanDesc, staticTyping,\n                    elementTypeSerializer, elementValueSerializer);",
      "info" : "ReturnStatement[26528-26673]:ReturnStatement[26892-27035]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[26692-26704]:ReturnStatement[27054-27066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27224-30366]:Block[27583-30921]"
    }, {
      "left" : "JsonSerializer<?> ser = null;",
      "right" : "JsonSerializer<?> ser = null;",
      "info" : "VariableDeclarationStatement[27234-27263]:VariableDeclarationStatement[27648-27677]"
    }, {
      "left" : "for (Serializers serializers : customSerializers())",
      "right" : "for (Serializers serializers : customSerializers())",
      "info" : "EnhancedForStatement[27414-27706]:EnhancedForStatement[27828-28120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27466-27706]:Block[27880-28120]"
    }, {
      "left" : "ser = serializers.findCollectionSerializer(config,\n                    type, beanDesc, elementTypeSerializer, elementValueSerializer);",
      "right" : "ser = serializers.findCollectionSerializer(config,\n                    type, beanDesc, elementTypeSerializer, elementValueSerializer);",
      "info" : "ExpressionStatement[27494-27628]:ExpressionStatement[27908-28042]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[27641-27696]:IfStatement[28055-28110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27658-27696]:Block[28072-28110]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27676-27682]:BreakStatement[28090-28096]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[27716-30043]:IfStatement[28249-30588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27733-30043]:Block[28266-30588]"
    }, {
      "left" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "right" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "info" : "VariableDeclarationStatement[27915-27975]:VariableDeclarationStatement[28448-28508]"
    }, {
      "left" : "if (format != null && format.getShape() == JsonFormat.Shape.OBJECT)",
      "right" : "if (format != null && format.getShape() == JsonFormat.Shape.OBJECT)",
      "info" : "IfStatement[27992-28112]:IfStatement[28525-28645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28060-28112]:Block[28593-28645]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[28082-28094]:ReturnStatement[28615-28627]"
    }, {
      "left" : "Class<?> raw = type.getRawClass();",
      "right" : "Class<?> raw = type.getRawClass();",
      "info" : "VariableDeclarationStatement[28129-28163]:VariableDeclarationStatement[28662-28696]"
    }, {
      "left" : "if (EnumSet.class.isAssignableFrom(raw))",
      "right" : "if (EnumSet.class.isAssignableFrom(raw))",
      "info" : "IfStatement[28180-30033]:IfStatement[28713-30574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28221-28670]:Block[28754-29203]"
    }, {
      "left" : "JavaType enumType = type.getContentType();",
      "right" : "JavaType enumType = type.getContentType();",
      "info" : "VariableDeclarationStatement[28342-28384]:VariableDeclarationStatement[28875-28917]"
    }, {
      "left" : "if (!enumType.isEnumType())",
      "right" : "if (!enumType.isEnumType())",
      "info" : "IfStatement[28500-28592]:IfStatement[29033-29125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28528-28592]:Block[29061-29125]"
    }, {
      "left" : "enumType = null;",
      "right" : "enumType = null;",
      "info" : "ExpressionStatement[28554-28570]:ExpressionStatement[29087-29103]"
    }, {
      "left" : "ser = buildEnumSetSerializer(enumType);",
      "right" : "ser = buildEnumSetSerializer(enumType);",
      "info" : "ExpressionStatement[28613-28652]:ExpressionStatement[29146-29185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28676-30033]:Block[29209-30574]"
    }, {
      "left" : "Class<?> elementRaw = type.getContentType().getRawClass();",
      "right" : "Class<?> elementRaw = type.getContentType().getRawClass();",
      "info" : "VariableDeclarationStatement[28698-28756]:VariableDeclarationStatement[29231-29289]"
    }, {
      "left" : "if (isIndexedList(raw))",
      "right" : "if (isIndexedList(raw))",
      "info" : "IfStatement[28777-29789]:IfStatement[29310-30322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28801-29432]:Block[29334-29965]"
    }, {
      "left" : "if (elementRaw == String.class)",
      "right" : "if (elementRaw == String.class)",
      "info" : "IfStatement[28827-29410]:IfStatement[29360-29943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28859-29199]:Block[29392-29732]"
    }, {
      "left" : "if (elementValueSerializer == null || ClassUtil.isJacksonStdImpl(elementValueSerializer))",
      "right" : "if (elementValueSerializer == null || ClassUtil.isJacksonStdImpl(elementValueSerializer))",
      "info" : "IfStatement[28976-29173]:IfStatement[29509-29706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29066-29173]:Block[29599-29706]"
    }, {
      "left" : "ser = IndexedStringListSerializer.instance;",
      "right" : "ser = IndexedStringListSerializer.instance;",
      "info" : "ExpressionStatement[29100-29143]:ExpressionStatement[29633-29676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29205-29410]:Block[29738-29943]"
    }, {
      "left" : "ser = buildIndexedListSerializer(type.getContentType(), staticTyping,\n                                elementTypeSerializer, elementValueSerializer);",
      "right" : "ser = buildIndexedListSerializer(type.getContentType(), staticTyping,\n                                elementTypeSerializer, elementValueSerializer);",
      "info" : "ExpressionStatement[29235-29384]:ExpressionStatement[29768-29917]"
    }, {
      "left" : "if (elementRaw == String.class)",
      "right" : "if (elementRaw == String.class)",
      "info" : "IfStatement[29438-29789]:IfStatement[29971-30322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29470-29789]:Block[30003-30322]"
    }, {
      "left" : "if (elementValueSerializer == null || ClassUtil.isJacksonStdImpl(elementValueSerializer))",
      "right" : "if (elementValueSerializer == null || ClassUtil.isJacksonStdImpl(elementValueSerializer))",
      "info" : "IfStatement[29579-29767]:IfStatement[30112-30300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29669-29767]:Block[30202-30300]"
    }, {
      "left" : "ser = StringCollectionSerializer.instance;",
      "right" : "ser = StringCollectionSerializer.instance;",
      "info" : "ExpressionStatement[29699-29741]:ExpressionStatement[30232-30274]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[29810-30019]:IfStatement[30343-30556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29827-30019]:Block[30360-30556]"
    }, {
      "left" : "ser = buildCollectionSerializer(type.getContentType(), staticTyping,\n                                elementTypeSerializer, elementValueSerializer);",
      "right" : "ser = buildCollectionSerializer(type.getContentType(), staticTyping,\n                                elementTypeSerializer, elementValueSerializer);",
      "info" : "ExpressionStatement[29853-30001]:ExpressionStatement[30386-30534]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[30101-30340]:IfStatement[30656-30895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30146-30340]:Block[30701-30895]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[30160-30330]:EnhancedForStatement[30715-30885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30232-30330]:Block[30787-30885]"
    }, {
      "left" : "ser = mod.modifyCollectionSerializer(config, type, beanDesc, ser);",
      "right" : "ser = mod.modifyCollectionSerializer(config, type, beanDesc, ser);",
      "info" : "ExpressionStatement[30250-30316]:ExpressionStatement[30805-30871]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[30349-30360]:ReturnStatement[30904-30915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30606-30670]:Block[31161-31225]"
    }, {
      "left" : "return RandomAccess.class.isAssignableFrom(cls);",
      "right" : "return RandomAccess.class.isAssignableFrom(cls);",
      "info" : "ReturnStatement[30616-30664]:ReturnStatement[31171-31219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30847-30942]:Block[31402-31497]"
    }, {
      "left" : "return new IndexedListSerializer(elemType, staticTyping, vts, valueSerializer);",
      "right" : "return new IndexedListSerializer(elemType, staticTyping, vts, valueSerializer);",
      "info" : "ReturnStatement[30857-30936]:ReturnStatement[31412-31491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31116-31210]:Block[31671-31765]"
    }, {
      "left" : "return new CollectionSerializer(elemType, staticTyping, vts, valueSerializer);",
      "right" : "return new CollectionSerializer(elemType, staticTyping, vts, valueSerializer);",
      "info" : "ReturnStatement[31126-31204]:ReturnStatement[31681-31759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31283-31338]:Block[31838-31893]"
    }, {
      "left" : "return new EnumSetSerializer(enumType);",
      "right" : "return new EnumSetSerializer(enumType);",
      "info" : "ReturnStatement[31293-31332]:ReturnStatement[31848-31887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32003-34560]:Block[32555-35302]"
    }, {
      "left" : "JsonSerializer<?> ser = null;",
      "right" : "JsonSerializer<?> ser = null;",
      "info" : "VariableDeclarationStatement[32013-32042]:VariableDeclarationStatement[32626-32655]"
    }, {
      "left" : "for (Serializers serializers : customSerializers())",
      "right" : "for (Serializers serializers : customSerializers())",
      "info" : "EnhancedForStatement[32203-32475]:EnhancedForStatement[32816-33088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32255-32475]:Block[32868-33088]"
    }, {
      "left" : "ser = serializers.findMapSerializer(config, type, beanDesc,\n                    keySerializer, elementTypeSerializer, elementValueSerializer);",
      "right" : "ser = serializers.findMapSerializer(config, type, beanDesc,\n                    keySerializer, elementTypeSerializer, elementValueSerializer);",
      "info" : "ExpressionStatement[32283-32425]:ExpressionStatement[32896-33038]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[32438-32465]:IfStatement[33051-33078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32455-32465]:Block[33068-33078]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[32457-32463]:BreakStatement[33070-33076]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[32484-34244]:IfStatement[33216-34976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32501-34244]:Block[33233-34976]"
    }, {
      "left" : "Object filterId = findFilterId(config, beanDesc);",
      "right" : "Object filterId = findFilterId(config, beanDesc);",
      "info" : "VariableDeclarationStatement[33527-33576]:VariableDeclarationStatement[34259-34308]"
    }, {
      "left" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[33593-33656]:VariableDeclarationStatement[34325-34388]"
    }, {
      "left" : "MapSerializer mapSer = MapSerializer.construct(ai.findPropertiesToIgnore(beanDesc.getClassInfo(), true),\n                        type, staticTyping, elementTypeSerializer,\n                        keySerializer, elementValueSerializer, filterId);",
      "right" : "MapSerializer mapSer = MapSerializer.construct(ai.findPropertiesToIgnore(beanDesc.getClassInfo(), true),\n                        type, staticTyping, elementTypeSerializer,\n                        keySerializer, elementValueSerializer, filterId);",
      "info" : "VariableDeclarationStatement[33673-33918]:VariableDeclarationStatement[34405-34650]"
    }, {
      "left" : "Object suppressableValue = findSuppressableContentValue(config,\n                        type.getContentType(), beanDesc);",
      "right" : "Object suppressableValue = findSuppressableContentValue(config,\n                        type.getContentType(), beanDesc);",
      "info" : "VariableDeclarationStatement[33935-34056]:VariableDeclarationStatement[34667-34788]"
    }, {
      "left" : "if (suppressableValue != null)",
      "right" : "if (suppressableValue != null)",
      "info" : "IfStatement[34073-34200]:IfStatement[34805-34932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34104-34200]:Block[34836-34932]"
    }, {
      "left" : "mapSer = mapSer.withContentInclusion(suppressableValue);",
      "right" : "mapSer = mapSer.withContentInclusion(suppressableValue);",
      "info" : "ExpressionStatement[34126-34182]:ExpressionStatement[34858-34914]"
    }, {
      "left" : "ser = mapSer;",
      "right" : "ser = mapSer;",
      "info" : "ExpressionStatement[34217-34230]:ExpressionStatement[34949-34962]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[34302-34534]:IfStatement[35044-35276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34347-34534]:Block[35089-35276]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[34361-34524]:EnhancedForStatement[35103-35266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34433-34524]:Block[35175-35266]"
    }, {
      "left" : "ser = mod.modifyMapSerializer(config, type, beanDesc, ser);",
      "right" : "ser = mod.modifyMapSerializer(config, type, beanDesc, ser);",
      "info" : "ExpressionStatement[34451-34510]:ExpressionStatement[35193-35252]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[34543-34554]:ReturnStatement[35285-35296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34935-35493]:Block[35677-36235]"
    }, {
      "left" : "JsonInclude.Include incl = beanDesc.findSerializationInclusionForContent(null);",
      "right" : "JsonInclude.Include incl = beanDesc.findSerializationInclusionForContent(null);",
      "info" : "VariableDeclarationStatement[34945-35024]:VariableDeclarationStatement[35687-35766]"
    }, {
      "left" : "if (incl != null)",
      "right" : "if (incl != null)",
      "info" : "IfStatement[35034-35466]:IfStatement[35776-36208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35052-35466]:Block[35794-36208]"
    }, {
      "left" : "switch (incl) {\n            case NON_DEFAULT:\n                // 19-Oct-2014, tatu: Not sure what this'd mean; so take it to mean \"NON_EMPTY\"...\n                incl = JsonInclude.Include.NON_EMPTY;\n                break;\n            default:\n                // all other modes actually good as is, unless we'll find better ways\n                break;\n            }",
      "right" : "switch (incl) {\n            case NON_DEFAULT:\n                // 19-Oct-2014, tatu: Not sure what this'd mean; so take it to mean \"NON_EMPTY\"...\n                incl = JsonInclude.Include.NON_EMPTY;\n                break;\n            default:\n                // all other modes actually good as is, unless we'll find better ways\n                break;\n            }",
      "info" : "SwitchStatement[35066-35431]:SwitchStatement[35808-36173]"
    }, {
      "left" : "case NON_DEFAULT:",
      "right" : "case NON_DEFAULT:",
      "info" : "SwitchCase[35094-35111]:SwitchCase[35836-35853]"
    }, {
      "left" : "incl = JsonInclude.Include.NON_EMPTY;",
      "right" : "incl = JsonInclude.Include.NON_EMPTY;",
      "info" : "ExpressionStatement[35227-35264]:ExpressionStatement[35969-36006]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[35281-35287]:BreakStatement[36023-36029]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[35300-35308]:SwitchCase[36042-36050]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[35411-35417]:BreakStatement[36153-36159]"
    }, {
      "left" : "return incl;",
      "right" : "return incl;",
      "info" : "ReturnStatement[35444-35456]:ReturnStatement[36186-36198]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[35475-35487]:ReturnStatement[36217-36229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36158-37944]:Block[36897-38738]"
    }, {
      "left" : "JsonSerializer<?> ser = null;",
      "right" : "JsonSerializer<?> ser = null;",
      "info" : "VariableDeclarationStatement[36491-36520]:VariableDeclarationStatement[37285-37314]"
    }, {
      "left" : "for (Serializers serializers : customSerializers())",
      "right" : "for (Serializers serializers : customSerializers())",
      "info" : "EnhancedForStatement[36530-36822]:EnhancedForStatement[37324-37616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36582-36822]:Block[37376-37616]"
    }, {
      "left" : "ser = serializers.findArraySerializer(config,\n                     type, beanDesc, elementTypeSerializer, elementValueSerializer);",
      "right" : "ser = serializers.findArraySerializer(config,\n                     type, beanDesc, elementTypeSerializer, elementValueSerializer);",
      "info" : "ExpressionStatement[36611-36741]:ExpressionStatement[37405-37535]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[36755-36812]:IfStatement[37549-37606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36772-36812]:Block[37566-37606]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[36791-36797]:BreakStatement[37585-37591]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[36840-37619]:IfStatement[37634-38413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36857-37619]:Block[37651-38413]"
    }, {
      "left" : "Class<?> raw = type.getRawClass();",
      "right" : "Class<?> raw = type.getRawClass();",
      "info" : "VariableDeclarationStatement[36872-36906]:VariableDeclarationStatement[37666-37700]"
    }, {
      "left" : "if (elementValueSerializer == null || ClassUtil.isJacksonStdImpl(elementValueSerializer))",
      "right" : "if (elementValueSerializer == null || ClassUtil.isJacksonStdImpl(elementValueSerializer))",
      "info" : "IfStatement[37030-37402]:IfStatement[37824-38196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37120-37402]:Block[37914-38196]"
    }, {
      "left" : "if (String[].class == raw)",
      "right" : "if (String[].class == raw)",
      "info" : "IfStatement[37139-37387]:IfStatement[37933-38181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37166-37245]:Block[37960-38039]"
    }, {
      "left" : "ser = StringArraySerializer.instance;",
      "right" : "ser = StringArraySerializer.instance;",
      "info" : "ExpressionStatement[37189-37226]:ExpressionStatement[37983-38020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37251-37387]:Block[38045-38181]"
    }, {
      "left" : "ser = StdArraySerializers.findStandardImpl(raw);",
      "right" : "ser = StdArraySerializers.findStandardImpl(raw);",
      "info" : "ExpressionStatement[37320-37368]:ExpressionStatement[38114-38162]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[37416-37608]:IfStatement[38210-38402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37433-37608]:Block[38227-38402]"
    }, {
      "left" : "ser = new ObjectArraySerializer(type.getContentType(), staticTyping, elementTypeSerializer,\n                         elementValueSerializer);",
      "right" : "ser = new ObjectArraySerializer(type.getContentType(), staticTyping, elementTypeSerializer,\n                         elementValueSerializer);",
      "info" : "ExpressionStatement[37452-37593]:ExpressionStatement[38246-38387]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[37679-37917]:IfStatement[38473-38711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37724-37917]:Block[38518-38711]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[37739-37906]:EnhancedForStatement[38533-38700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37811-37906]:Block[38605-38700]"
    }, {
      "left" : "ser = mod.modifyArraySerializer(config, type, beanDesc, ser);",
      "right" : "ser = mod.modifyArraySerializer(config, type, beanDesc, ser);",
      "info" : "ExpressionStatement[37830-37891]:ExpressionStatement[38624-38685]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[37927-37938]:ReturnStatement[38721-38732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38403-38515]:Block[39197-39309]"
    }, {
      "left" : "return new IteratorSerializer(valueType, staticTyping, createTypeSerializer(config, valueType));",
      "right" : "return new IteratorSerializer(valueType, staticTyping, createTypeSerializer(config, valueType));",
      "info" : "ReturnStatement[38413-38509]:ReturnStatement[39207-39303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38737-39039]:Block[39531-39833]"
    }, {
      "left" : "JavaType[] params = config.getTypeFactory().findTypeParameters(type, Iterator.class);",
      "right" : "JavaType[] params = config.getTypeFactory().findTypeParameters(type, Iterator.class);",
      "info" : "VariableDeclarationStatement[38747-38832]:VariableDeclarationStatement[39541-39626]"
    }, {
      "left" : "JavaType vt = (params == null || params.length != 1) ?\n                TypeFactory.unknownType() : params[0];",
      "right" : "JavaType vt = (params == null || params.length != 1) ?\n                TypeFactory.unknownType() : params[0];",
      "info" : "VariableDeclarationStatement[38841-38950]:VariableDeclarationStatement[39635-39744]"
    }, {
      "left" : "return buildIteratorSerializer(config, type, beanDesc, staticTyping, vt);",
      "right" : "return buildIteratorSerializer(config, type, beanDesc, staticTyping, vt);",
      "info" : "ReturnStatement[38959-39032]:ReturnStatement[39753-39826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39306-39418]:Block[40100-40212]"
    }, {
      "left" : "return new IterableSerializer(valueType, staticTyping, createTypeSerializer(config, valueType));",
      "right" : "return new IterableSerializer(valueType, staticTyping, createTypeSerializer(config, valueType));",
      "info" : "ReturnStatement[39316-39412]:ReturnStatement[40110-40206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39660-39962]:Block[40454-40756]"
    }, {
      "left" : "JavaType[] params = config.getTypeFactory().findTypeParameters(type, Iterable.class);",
      "right" : "JavaType[] params = config.getTypeFactory().findTypeParameters(type, Iterable.class);",
      "info" : "VariableDeclarationStatement[39670-39755]:VariableDeclarationStatement[40464-40549]"
    }, {
      "left" : "JavaType vt = (params == null || params.length != 1) ?\n                TypeFactory.unknownType() : params[0];",
      "right" : "JavaType vt = (params == null || params.length != 1) ?\n                TypeFactory.unknownType() : params[0];",
      "info" : "VariableDeclarationStatement[39764-39873]:VariableDeclarationStatement[40558-40667]"
    }, {
      "left" : "return buildIterableSerializer(config, type, beanDesc, staticTyping, vt);",
      "right" : "return buildIterableSerializer(config, type, beanDesc, staticTyping, vt);",
      "info" : "ReturnStatement[39882-39955]:ReturnStatement[40676-40749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40251-40405]:Block[41045-41199]"
    }, {
      "left" : "return new MapEntrySerializer(valueType, keyType, valueType,\n                staticTyping, createTypeSerializer(config, valueType), null);",
      "right" : "return new MapEntrySerializer(valueType, keyType, valueType,\n                staticTyping, createTypeSerializer(config, valueType), null);",
      "info" : "ReturnStatement[40261-40399]:ReturnStatement[41055-41193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40580-41850]:Block[41374-42644]"
    }, {
      "left" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "right" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "info" : "VariableDeclarationStatement[40905-40965]:VariableDeclarationStatement[41699-41759]"
    }, {
      "left" : "if (format != null && format.getShape() == JsonFormat.Shape.OBJECT)",
      "right" : "if (format != null && format.getShape() == JsonFormat.Shape.OBJECT)",
      "info" : "IfStatement[40974-41330]:IfStatement[41768-42124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41042-41330]:Block[41836-42124]"
    }, {
      "left" : "((BasicBeanDescription) beanDesc).removeProperty(\"declaringClass\");",
      "right" : "((BasicBeanDescription) beanDesc).removeProperty(\"declaringClass\");",
      "info" : "ExpressionStatement[41140-41207]:ExpressionStatement[41934-42001]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[41308-41320]:ReturnStatement[42102-42114]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")\n        Class<Enum<?>> enumClass = (Class<Enum<?>>) type.getRawClass();",
      "right" : "@SuppressWarnings(\"unchecked\")\n        Class<Enum<?>> enumClass = (Class<Enum<?>>) type.getRawClass();",
      "info" : "VariableDeclarationStatement[41339-41441]:VariableDeclarationStatement[42133-42235]"
    }, {
      "left" : "JsonSerializer<?> ser = EnumSerializer.construct(enumClass, config, beanDesc, format);",
      "right" : "JsonSerializer<?> ser = EnumSerializer.construct(enumClass, config, beanDesc, format);",
      "info" : "VariableDeclarationStatement[41450-41536]:VariableDeclarationStatement[42244-42330]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[41591-41824]:IfStatement[42385-42618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41636-41824]:Block[42430-42618]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[41650-41814]:EnhancedForStatement[42444-42608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41722-41814]:Block[42516-42608]"
    }, {
      "left" : "ser = mod.modifyEnumSerializer(config, type, beanDesc, ser);",
      "right" : "ser = mod.modifyEnumSerializer(config, type, beanDesc, ser);",
      "info" : "ExpressionStatement[41740-41800]:ExpressionStatement[42534-42594]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[41833-41844]:ReturnStatement[42627-42638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42287-42887]:Block[43081-43681]"
    }, {
      "left" : "Class<?> superclass = config.getAnnotationIntrospector().findSerializationType(a);",
      "right" : "Class<?> superclass = config.getAnnotationIntrospector().findSerializationType(a);",
      "info" : "VariableDeclarationStatement[42358-42440]:VariableDeclarationStatement[43152-43234]"
    }, {
      "left" : "if (superclass != null)",
      "right" : "if (superclass != null)",
      "info" : "IfStatement[42449-42815]:IfStatement[43243-43609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42473-42815]:Block[43267-43609]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[42487-42805]:TryStatement[43281-43599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42491-42559]:Block[43285-43353]"
    }, {
      "left" : "type = (T) type.widenBy(superclass);",
      "right" : "type = (T) type.widenBy(superclass);",
      "info" : "ExpressionStatement[42509-42545]:ExpressionStatement[43303-43339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42597-42805]:Block[43391-43599]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Failed to widen type \"+type+\" with concrete-type annotation (value \"+superclass.getName()+\"), method '\"+a.getName()+\"': \"+iae.getMessage());",
      "right" : "throw new IllegalArgumentException(\"Failed to widen type \"+type+\" with concrete-type annotation (value \"+superclass.getName()+\"), method '\"+a.getName()+\"': \"+iae.getMessage());",
      "info" : "ThrowStatement[42615-42791]:ThrowStatement[43409-43585]"
    }, {
      "left" : "return modifySecondaryTypesByAnnotation(config, a, type);",
      "right" : "return modifySecondaryTypesByAnnotation(config, a, type);",
      "info" : "ReturnStatement[42824-42881]:ReturnStatement[43618-43675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43066-44480]:Block[43860-45274]"
    }, {
      "left" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[43076-43141]:VariableDeclarationStatement[43870-43935]"
    }, {
      "left" : "if (type.isContainerType())",
      "right" : "if (type.isContainerType())",
      "info" : "IfStatement[43176-44453]:IfStatement[43970-45247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43204-44453]:Block[43998-45247]"
    }, {
      "left" : "Class<?> keyClass = intr.findSerializationKeyType(a, type.getKeyType());",
      "right" : "Class<?> keyClass = intr.findSerializationKeyType(a, type.getKeyType());",
      "info" : "VariableDeclarationStatement[43218-43290]:VariableDeclarationStatement[44012-44084]"
    }, {
      "left" : "if (keyClass != null)",
      "right" : "if (keyClass != null)",
      "info" : "IfStatement[43303-43902]:IfStatement[44097-44696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43325-43902]:Block[44119-44696]"
    }, {
      "left" : "if (!(type instanceof MapType))",
      "right" : "if (!(type instanceof MapType))",
      "info" : "IfStatement[43389-43560]:IfStatement[44183-44354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43421-43560]:Block[44215-44354]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Illegal key-type annotation: type \"+type+\" is not a Map type\");",
      "right" : "throw new IllegalArgumentException(\"Illegal key-type annotation: type \"+type+\" is not a Map type\");",
      "info" : "ThrowStatement[43443-43542]:ThrowStatement[44237-44336]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[43577-43888]:TryStatement[44371-44682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43581-43668]:Block[44375-44462]"
    }, {
      "left" : "type = (T) ((MapType) type).widenKey(keyClass);",
      "right" : "type = (T) ((MapType) type).widenKey(keyClass);",
      "info" : "ExpressionStatement[43603-43650]:ExpressionStatement[44397-44444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43706-43888]:Block[44500-44682]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Failed to narrow key type \"+type+\" with key-type annotation (\"+keyClass.getName()+\"): \"+iae.getMessage());",
      "right" : "throw new IllegalArgumentException(\"Failed to narrow key type \"+type+\" with key-type annotation (\"+keyClass.getName()+\"): \"+iae.getMessage());",
      "info" : "ThrowStatement[43728-43870]:ThrowStatement[44522-44664]"
    }, {
      "left" : "Class<?> cc = intr.findSerializationContentType(a, type.getContentType());",
      "right" : "Class<?> cc = intr.findSerializationContentType(a, type.getContentType());",
      "info" : "VariableDeclarationStatement[44006-44080]:VariableDeclarationStatement[44800-44874]"
    }, {
      "left" : "if (cc != null)",
      "right" : "if (cc != null)",
      "info" : "IfStatement[44093-44443]:IfStatement[44887-45237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44109-44443]:Block[44903-45237]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[44127-44429]:TryStatement[44921-45223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44131-44207]:Block[44925-45001]"
    }, {
      "left" : "type = (T) type.widenContentsBy(cc);",
      "right" : "type = (T) type.widenContentsBy(cc);",
      "info" : "ExpressionStatement[44153-44189]:ExpressionStatement[44947-44983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44245-44429]:Block[45039-45223]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Failed to narrow content type \"+type+\" with content-type annotation (\"+cc.getName()+\"): \"+iae.getMessage());",
      "right" : "throw new IllegalArgumentException(\"Failed to narrow content type \"+type+\" with content-type annotation (\"+cc.getName()+\"): \"+iae.getMessage());",
      "info" : "ThrowStatement[44267-44411]:ThrowStatement[45061-45205]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[44462-44474]:ReturnStatement[45256-45268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44868-45114]:Block[45662-45908]"
    }, {
      "left" : "AnnotationIntrospector intr = prov.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = prov.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[44878-44941]:VariableDeclarationStatement[45672-45735]"
    }, {
      "left" : "Object serDef = intr.findKeySerializer(a);",
      "right" : "Object serDef = intr.findKeySerializer(a);",
      "info" : "VariableDeclarationStatement[44950-44992]:VariableDeclarationStatement[45744-45786]"
    }, {
      "left" : "if (serDef != null)",
      "right" : "if (serDef != null)",
      "info" : "IfStatement[45001-45087]:IfStatement[45795-45881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45021-45087]:Block[45815-45881]"
    }, {
      "left" : "return prov.serializerInstance(a, serDef);",
      "right" : "return prov.serializerInstance(a, serDef);",
      "info" : "ReturnStatement[45035-45077]:ReturnStatement[45829-45871]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45096-45108]:ReturnStatement[45890-45902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45520-45770]:Block[46314-46564]"
    }, {
      "left" : "AnnotationIntrospector intr = prov.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = prov.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[45530-45593]:VariableDeclarationStatement[46324-46387]"
    }, {
      "left" : "Object serDef = intr.findContentSerializer(a);",
      "right" : "Object serDef = intr.findContentSerializer(a);",
      "info" : "VariableDeclarationStatement[45602-45648]:VariableDeclarationStatement[46396-46442]"
    }, {
      "left" : "if (serDef != null)",
      "right" : "if (serDef != null)",
      "info" : "IfStatement[45657-45743]:IfStatement[46451-46537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45677-45743]:Block[46471-46537]"
    }, {
      "left" : "return prov.serializerInstance(a, serDef);",
      "right" : "return prov.serializerInstance(a, serDef);",
      "info" : "ReturnStatement[45691-45733]:ReturnStatement[46485-46527]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45752-45764]:ReturnStatement[46546-46558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45991-46098]:Block[46785-46892]"
    }, {
      "left" : "return config.getAnnotationIntrospector().findFilterId((Annotated)beanDesc.getClassInfo());",
      "right" : "return config.getAnnotationIntrospector().findFilterId((Annotated)beanDesc.getClassInfo());",
      "info" : "ReturnStatement[46001-46092]:ReturnStatement[46795-46886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46566-47187]:Block[47360-47981]"
    }, {
      "left" : "if (typeSer != null)",
      "right" : "if (typeSer != null)",
      "info" : "IfStatement[46761-46819]:IfStatement[47555-47613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46782-46819]:Block[47576-47613]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46796-46809]:ReturnStatement[47590-47603]"
    }, {
      "left" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[46828-46893]:VariableDeclarationStatement[47622-47687]"
    }, {
      "left" : "JsonSerialize.Typing t = intr.findSerializationTyping(beanDesc.getClassInfo());",
      "right" : "JsonSerialize.Typing t = intr.findSerializationTyping(beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[46902-46981]:VariableDeclarationStatement[47696-47775]"
    }, {
      "left" : "if (t != null && t != JsonSerialize.Typing.DEFAULT_TYPING)",
      "right" : "if (t != null && t != JsonSerialize.Typing.DEFAULT_TYPING)",
      "info" : "IfStatement[46990-47115]:IfStatement[47784-47909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47049-47115]:Block[47843-47909]"
    }, {
      "left" : "return (t == JsonSerialize.Typing.STATIC);",
      "right" : "return (t == JsonSerialize.Typing.STATIC);",
      "info" : "ReturnStatement[47063-47105]:ReturnStatement[47857-47899]"
    }, {
      "left" : "return config.isEnabled(MapperFeature.USE_STATIC_TYPING);",
      "right" : "return config.isEnabled(MapperFeature.USE_STATIC_TYPING);",
      "info" : "ReturnStatement[47124-47181]:ReturnStatement[47918-47975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47282-47760]:Block[48076-48554]"
    }, {
      "left" : "if (src == null)",
      "right" : "if (src == null)",
      "info" : "IfStatement[47292-47345]:IfStatement[48086-48139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47309-47345]:Block[48103-48139]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[47323-47335]:ReturnStatement[48117-48129]"
    }, {
      "left" : "if (!(src instanceof Class))",
      "right" : "if (!(src instanceof Class))",
      "info" : "IfStatement[47354-47597]:IfStatement[48148-48391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47383-47597]:Block[48177-48391]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector.\"+methodName+\"() returned value of type \"+src.getClass().getName()+\": expected type JsonSerializer or Class<JsonSerializer> instead\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector.\"+methodName+\"() returned value of type \"+src.getClass().getName()+\": expected type JsonSerializer or Class<JsonSerializer> instead\");",
      "info" : "ThrowStatement[47397-47587]:ThrowStatement[48191-48381]"
    }, {
      "left" : "Class<?> cls = (Class<?>) src;",
      "right" : "Class<?> cls = (Class<?>) src;",
      "info" : "VariableDeclarationStatement[47606-47636]:VariableDeclarationStatement[48400-48430]"
    }, {
      "left" : "if (cls == noneClass || ClassUtil.isBogusClass(cls))",
      "right" : "if (cls == noneClass || ClassUtil.isBogusClass(cls))",
      "info" : "IfStatement[47645-47734]:IfStatement[48439-48528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47698-47734]:Block[48492-48528]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[47712-47724]:ReturnStatement[48506-48518]"
    }, {
      "left" : "return cls;",
      "right" : "return cls;",
      "info" : "ReturnStatement[47743-47754]:ReturnStatement[48537-48548]"
    } ]
  },
  "interFileMappings" : { }
}