{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static final String MSG_METHOD = \"require.this.method\";",
      "right" : "public static final String MSG_METHOD = \"require.this.method\";",
      "info" : "FieldDeclaration[2531-2700]:FieldDeclaration[2531-2700]"
    }, {
      "left" : "public static final String MSG_VARIABLE = \"require.this.variable\";",
      "right" : "public static final String MSG_VARIABLE = \"require.this.variable\";",
      "info" : "FieldDeclaration[2706-2879]:FieldDeclaration[2706-2879]"
    }, {
      "left" : "private boolean checkFields = true;",
      "right" : "private boolean checkFields = true;",
      "info" : "FieldDeclaration[2885-2969]:FieldDeclaration[2885-2969]"
    }, {
      "left" : "private boolean checkMethods = true;",
      "right" : "private boolean checkMethods = true;",
      "info" : "FieldDeclaration[2974-3060]:FieldDeclaration[2974-3060]"
    }, {
      "left" : "public void setCheckFields(boolean checkFields)",
      "right" : "public void setCheckFields(boolean checkFields)",
      "info" : "MethodDeclaration[3066-3280]:MethodDeclaration[3066-3280]"
    }, {
      "left" : "public void setCheckMethods(boolean checkMethods)",
      "right" : "public void setCheckMethods(boolean checkMethods)",
      "info" : "MethodDeclaration[3286-3507]:MethodDeclaration[3286-3507]"
    }, {
      "left" : "public int[] getDefaultTokens()",
      "right" : "public int[] getDefaultTokens()",
      "info" : "MethodDeclaration[3513-3912]:MethodDeclaration[3513-3912]"
    }, {
      "left" : "public int[] getRequiredTokens()",
      "right" : "public int[] getRequiredTokens()",
      "info" : "MethodDeclaration[3918-4007]:MethodDeclaration[3918-4007]"
    }, {
      "left" : "public int[] getAcceptableTokens()",
      "right" : "public int[] getAcceptableTokens()",
      "info" : "MethodDeclaration[4013-4137]:MethodDeclaration[4013-4137]"
    }, {
      "left" : "public void visitToken(DetailAST ast)",
      "right" : "public void visitToken(DetailAST ast)",
      "info" : "MethodDeclaration[4143-4323]:MethodDeclaration[4143-4323]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3233-3280]:Block[3233-3280]"
    }, {
      "left" : "this.checkFields = checkFields;",
      "right" : "this.checkFields = checkFields;",
      "info" : "ExpressionStatement[3243-3274]:ExpressionStatement[3243-3274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3458-3507]:Block[3458-3507]"
    }, {
      "left" : "this.checkMethods = checkMethods;",
      "right" : "this.checkMethods = checkMethods;",
      "info" : "ExpressionStatement[3468-3501]:ExpressionStatement[3468-3501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3559-3912]:Block[3559-3912]"
    }, {
      "left" : "return new int[] {\n            TokenTypes.CLASS_DEF,\n            TokenTypes.CTOR_DEF,\n            TokenTypes.ENUM_DEF,\n            TokenTypes.IDENT,\n            TokenTypes.INTERFACE_DEF,\n            TokenTypes.METHOD_DEF,\n            TokenTypes.PARAMETER_DEF,\n            TokenTypes.SLIST,\n            TokenTypes.VARIABLE_DEF,\n        };",
      "right" : "return new int[] {\n            TokenTypes.CLASS_DEF,\n            TokenTypes.CTOR_DEF,\n            TokenTypes.ENUM_DEF,\n            TokenTypes.IDENT,\n            TokenTypes.INTERFACE_DEF,\n            TokenTypes.METHOD_DEF,\n            TokenTypes.PARAMETER_DEF,\n            TokenTypes.SLIST,\n            TokenTypes.VARIABLE_DEF,\n        };",
      "info" : "ReturnStatement[3569-3906]:ReturnStatement[3569-3906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3965-4007]:Block[3965-4007]"
    }, {
      "left" : "return getDefaultTokens();",
      "right" : "return getDefaultTokens();",
      "info" : "ReturnStatement[3975-4001]:ReturnStatement[3975-4001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4062-4137]:Block[4062-4137]"
    }, {
      "left" : "return new int[] {\n            TokenTypes.IDENT,\n        };",
      "right" : "return new int[] {\n            TokenTypes.IDENT,\n        };",
      "info" : "ReturnStatement[4072-4131]:ReturnStatement[4072-4131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4195-4323]:Block[4195-4323]"
    }, {
      "left" : "super.visitToken(ast);",
      "right" : "super.visitToken(ast);",
      "info" : "ExpressionStatement[4205-4227]:ExpressionStatement[4205-4227]"
    }, {
      "left" : "if (ast.getType() == TokenTypes.IDENT)",
      "right" : "if (ast.getType() == TokenTypes.IDENT)",
      "info" : "IfStatement[4236-4317]:IfStatement[4236-4317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4275-4317]:Block[4275-4317]"
    }, {
      "left" : "processIDENT(ast);",
      "right" : "processIDENT(ast);",
      "info" : "ExpressionStatement[4289-4307]:ExpressionStatement[4289-4307]"
    } ]
  },
  "interFileMappings" : { }
}