{
  "matchedElements" : [
 {
    "left" : "class : $Gson$Types",
    "right" : "class : $Gson$Types",
    "info" : "TypeDeclaration[1264-20957]:TypeDeclaration[1264-21199]"
  }, {
    "left" : "EMPTY_TYPE_ARRAY",
    "right" : "EMPTY_TYPE_ARRAY",
    "info" : "FieldDeclaration[1395-1448]:FieldDeclaration[1395-1448]"
  }, {
    "left" : "private $Gson$Types()",
    "right" : "private $Gson$Types()",
    "info" : "MethodDeclaration[1452-1526]:MethodDeclaration[1452-1526]"
  }, {
    "left" : "public newParameterizedTypeWithOwner(ownerType , rawType , ) : ",
    "right" : "public newParameterizedTypeWithOwner(ownerType , rawType , ) : ",
    "info" : "MethodDeclaration[1530-1953]:MethodDeclaration[1530-1953]"
  }, {
    "left" : "public arrayOf(componentType ) : ",
    "right" : "public arrayOf(componentType ) : ",
    "info" : "MethodDeclaration[1957-2258]:MethodDeclaration[1957-2258]"
  }, {
    "left" : "public subtypeOf(bound ) : ",
    "right" : "public subtypeOf(bound ) : ",
    "info" : "MethodDeclaration[2262-2774]:MethodDeclaration[2262-2895]"
  }, {
    "left" : "public supertypeOf(bound ) : ",
    "right" : "public supertypeOf(bound ) : ",
    "info" : "MethodDeclaration[2778-3164]:MethodDeclaration[2899-3406]"
  }, {
    "left" : "public canonicalize(type ) : ",
    "right" : "public canonicalize(type ) : ",
    "info" : "MethodDeclaration[3168-4239]:MethodDeclaration[3410-4481]"
  }, {
    "left" : "public getRawType(type ) : ",
    "right" : "public getRawType(type ) : ",
    "info" : "MethodDeclaration[4243-5643]:MethodDeclaration[4485-5885]"
  }, {
    "left" : "package equal(a , b ) : boolean",
    "right" : "package equal(a , b ) : boolean",
    "info" : "MethodDeclaration[5647-5742]:MethodDeclaration[5889-5984]"
  }, {
    "left" : "public equals(a , b ) : boolean",
    "right" : "public equals(a , b ) : boolean",
    "info" : "MethodDeclaration[5746-7628]:MethodDeclaration[5988-7870]"
  }, {
    "left" : "package hashCodeOrZero(o ) : int",
    "right" : "package hashCodeOrZero(o ) : int",
    "info" : "MethodDeclaration[7632-7714]:MethodDeclaration[7874-7956]"
  }, {
    "left" : "public typeToString(type ) : ",
    "right" : "public typeToString(type ) : ",
    "info" : "MethodDeclaration[7718-7850]:MethodDeclaration[7960-8092]"
  }, {
    "left" : "package getGenericSupertype(context , rawType , toResolve ) : ",
    "right" : "package getGenericSupertype(context , rawType , toResolve ) : ",
    "info" : "MethodDeclaration[7854-9335]:MethodDeclaration[8096-9577]"
  }, {
    "left" : "package getSupertype(context , contextRawType , supertype ) : ",
    "right" : "package getSupertype(context , contextRawType , supertype ) : ",
    "info" : "MethodDeclaration[9339-9895]:MethodDeclaration[9581-10137]"
  }, {
    "left" : "public getArrayComponentType(array ) : ",
    "right" : "public getArrayComponentType(array ) : ",
    "info" : "MethodDeclaration[9899-10240]:MethodDeclaration[10141-10482]"
  }, {
    "left" : "public getCollectionElementType(context , contextRawType ) : ",
    "right" : "public getCollectionElementType(context , contextRawType ) : ",
    "info" : "MethodDeclaration[10244-10851]:MethodDeclaration[10486-11093]"
  }, {
    "left" : "public getMapKeyAndValueTypes(context , contextRawType ) : ",
    "right" : "public getMapKeyAndValueTypes(context , contextRawType ) : ",
    "info" : "MethodDeclaration[10855-11766]:MethodDeclaration[11097-12008]"
  }, {
    "left" : "public resolve(context , contextRawType , toResolve ) : ",
    "right" : "public resolve(context , contextRawType , toResolve ) : ",
    "info" : "MethodDeclaration[11770-14701]:MethodDeclaration[12012-14943]"
  }, {
    "left" : "package resolveTypeVariable(context , contextRawType , unknown ) : ",
    "right" : "package resolveTypeVariable(context , contextRawType , unknown ) : ",
    "info" : "MethodDeclaration[14705-15272]:MethodDeclaration[14947-15514]"
  }, {
    "left" : "private indexOf(array , toFind ) : int",
    "right" : "private indexOf(array , toFind ) : int",
    "info" : "MethodDeclaration[15276-15510]:MethodDeclaration[15518-15752]"
  }, {
    "left" : "private declaringClassOf(typeVariable ) : ",
    "right" : "private declaringClassOf(typeVariable ) : ",
    "info" : "MethodDeclaration[15514-15901]:MethodDeclaration[15756-16143]"
  }, {
    "left" : "package checkNotPrimitive(type ) : void",
    "right" : "package checkNotPrimitive(type ) : void",
    "info" : "MethodDeclaration[15905-16035]:MethodDeclaration[16147-16277]"
  }, {
    "left" : "class : ParameterizedTypeImpl",
    "right" : "class : ParameterizedTypeImpl",
    "info" : "TypeDeclaration[16039-18243]:TypeDeclaration[16281-18485]"
  }, {
    "left" : "ownerType",
    "right" : "ownerType",
    "info" : "FieldDeclaration[16137-16166]:FieldDeclaration[16379-16408]"
  }, {
    "left" : "rawType",
    "right" : "rawType",
    "info" : "FieldDeclaration[16171-16198]:FieldDeclaration[16413-16440]"
  }, {
    "left" : "typeArguments",
    "right" : "typeArguments",
    "info" : "FieldDeclaration[16203-16238]:FieldDeclaration[16445-16480]"
  }, {
    "left" : "public ParameterizedTypeImpl(ownerType , rawType , )",
    "right" : "public ParameterizedTypeImpl(ownerType , rawType , )",
    "info" : "MethodDeclaration[16244-17130]:MethodDeclaration[16486-17372]"
  }, {
    "left" : "public getActualTypeArguments() : ",
    "right" : "public getActualTypeArguments() : ",
    "info" : "MethodDeclaration[17136-17218]:MethodDeclaration[17378-17460]"
  }, {
    "left" : "public getRawType() : ",
    "right" : "public getRawType() : ",
    "info" : "MethodDeclaration[17224-17278]:MethodDeclaration[17466-17520]"
  }, {
    "left" : "public getOwnerType() : ",
    "right" : "public getOwnerType() : ",
    "info" : "MethodDeclaration[17284-17342]:MethodDeclaration[17526-17584]"
  }, {
    "left" : "public equals(other ) : boolean",
    "right" : "public equals(other ) : boolean",
    "info" : "MethodDeclaration[17348-17515]:MethodDeclaration[17590-17757]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[17521-17674]:MethodDeclaration[17763-17916]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[17680-18186]:MethodDeclaration[17922-18428]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[18192-18239]:FieldDeclaration[18434-18481]"
  }, {
    "left" : "class : GenericArrayTypeImpl",
    "right" : "class : GenericArrayTypeImpl",
    "info" : "TypeDeclaration[18247-18969]:TypeDeclaration[18489-19211]"
  }, {
    "left" : "componentType",
    "right" : "componentType",
    "info" : "FieldDeclaration[18343-18376]:FieldDeclaration[18585-18618]"
  }, {
    "left" : "public GenericArrayTypeImpl(componentType )",
    "right" : "public GenericArrayTypeImpl(componentType )",
    "info" : "MethodDeclaration[18382-18493]:MethodDeclaration[18624-18735]"
  }, {
    "left" : "public getGenericComponentType() : ",
    "right" : "public getGenericComponentType() : ",
    "info" : "MethodDeclaration[18499-18572]:MethodDeclaration[18741-18814]"
  }, {
    "left" : "public equals(o ) : boolean",
    "right" : "public equals(o ) : boolean",
    "info" : "MethodDeclaration[18578-18731]:MethodDeclaration[18820-18973]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[18737-18815]:MethodDeclaration[18979-19057]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[18821-18912]:MethodDeclaration[19063-19154]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[18918-18965]:FieldDeclaration[19160-19207]"
  }, {
    "left" : "class : WildcardTypeImpl",
    "right" : "class : WildcardTypeImpl",
    "info" : "TypeDeclaration[18973-20955]:TypeDeclaration[19215-21197]"
  }, {
    "left" : "upperBound",
    "right" : "upperBound",
    "info" : "FieldDeclaration[19304-19334]:FieldDeclaration[19546-19576]"
  }, {
    "left" : "lowerBound",
    "right" : "lowerBound",
    "info" : "FieldDeclaration[19339-19369]:FieldDeclaration[19581-19611]"
  }, {
    "left" : "public WildcardTypeImpl(upperBounds , lowerBounds ...)",
    "right" : "public WildcardTypeImpl(upperBounds , lowerBounds ...)",
    "info" : "MethodDeclaration[19375-20001]:MethodDeclaration[19617-20243]"
  }, {
    "left" : "public getUpperBounds() : ",
    "right" : "public getUpperBounds() : ",
    "info" : "MethodDeclaration[20007-20085]:MethodDeclaration[20249-20327]"
  }, {
    "left" : "public getLowerBounds() : ",
    "right" : "public getLowerBounds() : ",
    "info" : "MethodDeclaration[20091-20209]:MethodDeclaration[20333-20451]"
  }, {
    "left" : "public equals(other ) : boolean",
    "right" : "public equals(other ) : boolean",
    "info" : "MethodDeclaration[20215-20372]:MethodDeclaration[20457-20614]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[20378-20618]:MethodDeclaration[20620-20860]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[20624-20898]:MethodDeclaration[20866-21140]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[20904-20951]:FieldDeclaration[21146-21193]"
  } ],
  "mappings" : [
 {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[1452-1459]:Modifier[1452-1459]"
  }, {
    "left" : "$Gson$Types",
    "right" : "$Gson$Types",
    "info" : "SimpleName[1460-1471]:SimpleName[1460-1471]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1474-1526]:Block[1474-1526]"
  }, {
    "left" : "throw new UnsupportedOperationException();",
    "right" : "throw new UnsupportedOperationException();",
    "info" : "ThrowStatement[1480-1522]:ThrowStatement[1480-1522]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1753-1759]:Modifier[1753-1759]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1760-1766]:Modifier[1760-1766]"
  }, {
    "left" : "ParameterizedType",
    "right" : "ParameterizedType",
    "info" : "SimpleType[1767-1784]:SimpleType[1767-1784]"
  }, {
    "left" : "newParameterizedTypeWithOwner",
    "right" : "newParameterizedTypeWithOwner",
    "info" : "SimpleName[1785-1814]:SimpleName[1785-1814]"
  }, {
    "left" : "Type ownerType",
    "right" : "Type ownerType",
    "info" : "SingleVariableDeclaration[1822-1836]:SingleVariableDeclaration[1822-1836]"
  }, {
    "left" : "Type rawType",
    "right" : "Type rawType",
    "info" : "SingleVariableDeclaration[1838-1850]:SingleVariableDeclaration[1838-1850]"
  }, {
    "left" : "Type... typeArguments",
    "right" : "Type... typeArguments",
    "info" : "SingleVariableDeclaration[1852-1873]:SingleVariableDeclaration[1852-1873]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1875-1953]:Block[1875-1953]"
  }, {
    "left" : "return new ParameterizedTypeImpl(ownerType, rawType, typeArguments);",
    "right" : "return new ParameterizedTypeImpl(ownerType, rawType, typeArguments);",
    "info" : "ReturnStatement[1881-1949]:ReturnStatement[1881-1949]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2142-2148]:Modifier[2142-2148]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2149-2155]:Modifier[2149-2155]"
  }, {
    "left" : "GenericArrayType",
    "right" : "GenericArrayType",
    "info" : "SimpleType[2156-2172]:SimpleType[2156-2172]"
  }, {
    "left" : "arrayOf",
    "right" : "arrayOf",
    "info" : "SimpleName[2173-2180]:SimpleName[2173-2180]"
  }, {
    "left" : "Type componentType",
    "right" : "Type componentType",
    "info" : "SingleVariableDeclaration[2181-2199]:SingleVariableDeclaration[2181-2199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2201-2258]:Block[2201-2258]"
  }, {
    "left" : "return new GenericArrayTypeImpl(componentType);",
    "right" : "return new GenericArrayTypeImpl(componentType);",
    "info" : "ReturnStatement[2207-2254]:ReturnStatement[2207-2254]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2590-2596]:Modifier[2590-2596]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2597-2603]:Modifier[2597-2603]"
  }, {
    "left" : "WildcardType",
    "right" : "WildcardType",
    "info" : "SimpleType[2604-2616]:SimpleType[2604-2616]"
  }, {
    "left" : "subtypeOf",
    "right" : "subtypeOf",
    "info" : "SimpleName[2617-2626]:SimpleName[2617-2626]"
  }, {
    "left" : "Type bound",
    "right" : "Type bound",
    "info" : "SingleVariableDeclaration[2627-2637]:SingleVariableDeclaration[2627-2637]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2639-2774]:Block[2639-2895]"
  }, {
    "left" : "Type[] upperBounds;",
    "right" : "Type[] upperBounds;",
    "info" : "VariableDeclarationStatement[2645-2664]:VariableDeclarationStatement[2645-2664]"
  }, {
    "left" : "upperBounds = new Type[] { bound };",
    "right" : "upperBounds = new Type[] { bound };",
    "info" : "ExpressionStatement[2671-2706]:ExpressionStatement[2786-2821]"
  }, {
    "left" : "return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);",
    "right" : "return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);",
    "info" : "ReturnStatement[2711-2770]:ReturnStatement[2832-2891]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2967-2973]:Modifier[3088-3094]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2974-2980]:Modifier[3095-3101]"
  }, {
    "left" : "WildcardType",
    "right" : "WildcardType",
    "info" : "SimpleType[2981-2993]:SimpleType[3102-3114]"
  }, {
    "left" : "supertypeOf",
    "right" : "supertypeOf",
    "info" : "SimpleName[2994-3005]:SimpleName[3115-3126]"
  }, {
    "left" : "Type bound",
    "right" : "Type bound",
    "info" : "SingleVariableDeclaration[3006-3016]:SingleVariableDeclaration[3127-3137]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3018-3164]:Block[3139-3406]"
  }, {
    "left" : "Type[] lowerBounds;",
    "right" : "Type[] lowerBounds;",
    "info" : "VariableDeclarationStatement[3024-3043]:VariableDeclarationStatement[3145-3164]"
  }, {
    "left" : "lowerBounds = new Type[] { bound };",
    "right" : "lowerBounds = new Type[] { bound };",
    "info" : "ExpressionStatement[3050-3085]:ExpressionStatement[3286-3321]"
  }, {
    "left" : "return new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);",
    "right" : "return new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);",
    "info" : "ReturnStatement[3090-3160]:ReturnStatement[3332-3402]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3374-3380]:Modifier[3616-3622]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3381-3387]:Modifier[3623-3629]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[3388-3392]:SimpleType[3630-3634]"
  }, {
    "left" : "canonicalize",
    "right" : "canonicalize",
    "info" : "SimpleName[3393-3405]:SimpleName[3635-3647]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[3406-3415]:SingleVariableDeclaration[3648-3657]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3417-4239]:Block[3659-4481]"
  }, {
    "left" : "if (type instanceof Class)",
    "right" : "if (type instanceof Class)",
    "info" : "IfStatement[3423-4235]:IfStatement[3665-4477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3450-3587]:Block[3692-3829]"
  }, {
    "left" : "Class<?> c = (Class<?>) type;",
    "right" : "Class<?> c = (Class<?>) type;",
    "info" : "VariableDeclarationStatement[3458-3487]:VariableDeclarationStatement[3700-3729]"
  }, {
    "left" : "return c.isArray() ? new GenericArrayTypeImpl(canonicalize(c.getComponentType())) : c;",
    "right" : "return c.isArray() ? new GenericArrayTypeImpl(canonicalize(c.getComponentType())) : c;",
    "info" : "ReturnStatement[3494-3580]:ReturnStatement[3736-3822]"
  }, {
    "left" : "if (type instanceof ParameterizedType)",
    "right" : "if (type instanceof ParameterizedType)",
    "info" : "IfStatement[3593-4235]:IfStatement[3835-4477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3632-3806]:Block[3874-4048]"
  }, {
    "left" : "ParameterizedType p = (ParameterizedType) type;",
    "right" : "ParameterizedType p = (ParameterizedType) type;",
    "info" : "VariableDeclarationStatement[3640-3687]:VariableDeclarationStatement[3882-3929]"
  }, {
    "left" : "return new ParameterizedTypeImpl(p.getOwnerType(),\n          p.getRawType(), p.getActualTypeArguments());",
    "right" : "return new ParameterizedTypeImpl(p.getOwnerType(),\n          p.getRawType(), p.getActualTypeArguments());",
    "info" : "ReturnStatement[3694-3799]:ReturnStatement[3936-4041]"
  }, {
    "left" : "if (type instanceof GenericArrayType)",
    "right" : "if (type instanceof GenericArrayType)",
    "info" : "IfStatement[3812-4235]:IfStatement[4054-4477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3850-3978]:Block[4092-4220]"
  }, {
    "left" : "GenericArrayType g = (GenericArrayType) type;",
    "right" : "GenericArrayType g = (GenericArrayType) type;",
    "info" : "VariableDeclarationStatement[3858-3903]:VariableDeclarationStatement[4100-4145]"
  }, {
    "left" : "return new GenericArrayTypeImpl(g.getGenericComponentType());",
    "right" : "return new GenericArrayTypeImpl(g.getGenericComponentType());",
    "info" : "ReturnStatement[3910-3971]:ReturnStatement[4152-4213]"
  }, {
    "left" : "if (type instanceof WildcardType)",
    "right" : "if (type instanceof WildcardType)",
    "info" : "IfStatement[3984-4235]:IfStatement[4226-4477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4018-4145]:Block[4260-4387]"
  }, {
    "left" : "WildcardType w = (WildcardType) type;",
    "right" : "WildcardType w = (WildcardType) type;",
    "info" : "VariableDeclarationStatement[4026-4063]:VariableDeclarationStatement[4268-4305]"
  }, {
    "left" : "return new WildcardTypeImpl(w.getUpperBounds(), w.getLowerBounds());",
    "right" : "return new WildcardTypeImpl(w.getUpperBounds(), w.getLowerBounds());",
    "info" : "ReturnStatement[4070-4138]:ReturnStatement[4312-4380]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4151-4235]:Block[4393-4477]"
  }, {
    "left" : "return type;",
    "right" : "return type;",
    "info" : "ReturnStatement[4217-4229]:ReturnStatement[4459-4471]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4243-4249]:Modifier[4485-4491]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[4250-4256]:Modifier[4492-4498]"
  }, {
    "left" : "Class<?>",
    "right" : "Class<?>",
    "info" : "ParameterizedType[4257-4265]:ParameterizedType[4499-4507]"
  }, {
    "left" : "getRawType",
    "right" : "getRawType",
    "info" : "SimpleName[4266-4276]:SimpleName[4508-4518]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[4277-4286]:SingleVariableDeclaration[4519-4528]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4288-5643]:Block[4530-5885]"
  }, {
    "left" : "if (type instanceof Class<?>)",
    "right" : "if (type instanceof Class<?>)",
    "info" : "IfStatement[4294-5639]:IfStatement[4536-5881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4324-4395]:Block[4566-4637]"
  }, {
    "left" : "return (Class<?>) type;",
    "right" : "return (Class<?>) type;",
    "info" : "ReturnStatement[4365-4388]:ReturnStatement[4607-4630]"
  }, {
    "left" : "if (type instanceof ParameterizedType)",
    "right" : "if (type instanceof ParameterizedType)",
    "info" : "IfStatement[4401-5639]:IfStatement[4643-5881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4440-4836]:Block[4682-5078]"
  }, {
    "left" : "ParameterizedType parameterizedType = (ParameterizedType) type;",
    "right" : "ParameterizedType parameterizedType = (ParameterizedType) type;",
    "info" : "VariableDeclarationStatement[4448-4511]:VariableDeclarationStatement[4690-4753]"
  }, {
    "left" : "Type rawType = parameterizedType.getRawType();",
    "right" : "Type rawType = parameterizedType.getRawType();",
    "info" : "VariableDeclarationStatement[4703-4749]:VariableDeclarationStatement[4945-4991]"
  }, {
    "left" : "checkArgument(rawType instanceof Class);",
    "right" : "checkArgument(rawType instanceof Class);",
    "info" : "ExpressionStatement[4756-4796]:ExpressionStatement[4998-5038]"
  }, {
    "left" : "return (Class<?>) rawType;",
    "right" : "return (Class<?>) rawType;",
    "info" : "ReturnStatement[4803-4829]:ReturnStatement[5045-5071]"
  }, {
    "left" : "if (type instanceof GenericArrayType)",
    "right" : "if (type instanceof GenericArrayType)",
    "info" : "IfStatement[4842-5639]:IfStatement[5084-5881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4880-5040]:Block[5122-5282]"
  }, {
    "left" : "Type componentType = ((GenericArrayType)type).getGenericComponentType();",
    "right" : "Type componentType = ((GenericArrayType)type).getGenericComponentType();",
    "info" : "VariableDeclarationStatement[4888-4960]:VariableDeclarationStatement[5130-5202]"
  }, {
    "left" : "return Array.newInstance(getRawType(componentType), 0).getClass();",
    "right" : "return Array.newInstance(getRawType(componentType), 0).getClass();",
    "info" : "ReturnStatement[4967-5033]:ReturnStatement[5209-5275]"
  }, {
    "left" : "if (type instanceof TypeVariable)",
    "right" : "if (type instanceof TypeVariable)",
    "info" : "IfStatement[5046-5639]:IfStatement[5288-5881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5080-5273]:Block[5322-5515]"
  }, {
    "left" : "return Object.class;",
    "right" : "return Object.class;",
    "info" : "ReturnStatement[5246-5266]:ReturnStatement[5488-5508]"
  }, {
    "left" : "if (type instanceof WildcardType)",
    "right" : "if (type instanceof WildcardType)",
    "info" : "IfStatement[5279-5639]:IfStatement[5521-5881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5313-5389]:Block[5555-5631]"
  }, {
    "left" : "return getRawType(((WildcardType) type).getUpperBounds()[0]);",
    "right" : "return getRawType(((WildcardType) type).getUpperBounds()[0]);",
    "info" : "ReturnStatement[5321-5382]:ReturnStatement[5563-5624]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5395-5639]:Block[5637-5881]"
  }, {
    "left" : "String className = type == null ? \"null\" : type.getClass().getName();",
    "right" : "String className = type == null ? \"null\" : type.getClass().getName();",
    "info" : "VariableDeclarationStatement[5403-5472]:VariableDeclarationStatement[5645-5714]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \"\n          + \"GenericArrayType, but <\" + type + \"> is of type \" + className);",
    "right" : "throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \"\n          + \"GenericArrayType, but <\" + type + \"> is of type \" + className);",
    "info" : "ThrowStatement[5479-5633]:ThrowStatement[5721-5875]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5647-5653]:Modifier[5889-5895]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5654-5661]:PrimitiveType[5896-5903]"
  }, {
    "left" : "equal",
    "right" : "equal",
    "info" : "SimpleName[5662-5667]:SimpleName[5904-5909]"
  }, {
    "left" : "Object a",
    "right" : "Object a",
    "info" : "SingleVariableDeclaration[5668-5676]:SingleVariableDeclaration[5910-5918]"
  }, {
    "left" : "Object b",
    "right" : "Object b",
    "info" : "SingleVariableDeclaration[5678-5686]:SingleVariableDeclaration[5920-5928]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5688-5742]:Block[5930-5984]"
  }, {
    "left" : "return a == b || (a != null && a.equals(b));",
    "right" : "return a == b || (a != null && a.equals(b));",
    "info" : "ReturnStatement[5694-5738]:ReturnStatement[5936-5980]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5814-5820]:Modifier[6056-6062]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5821-5827]:Modifier[6063-6069]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5828-5835]:PrimitiveType[6070-6077]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[5836-5842]:SimpleName[6078-6084]"
  }, {
    "left" : "Type a",
    "right" : "Type a",
    "info" : "SingleVariableDeclaration[5843-5849]:SingleVariableDeclaration[6085-6091]"
  }, {
    "left" : "Type b",
    "right" : "Type b",
    "info" : "SingleVariableDeclaration[5851-5857]:SingleVariableDeclaration[6093-6099]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5859-7628]:Block[6101-7870]"
  }, {
    "left" : "if (a == b)",
    "right" : "if (a == b)",
    "info" : "IfStatement[5865-7624]:IfStatement[6107-7866]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5877-5951]:Block[6119-6193]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[5932-5944]:ReturnStatement[6174-6186]"
  }, {
    "left" : "if (a instanceof Class)",
    "right" : "if (a instanceof Class)",
    "info" : "IfStatement[5957-7624]:IfStatement[6199-7866]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5981-6058]:Block[6223-6300]"
  }, {
    "left" : "return a.equals(b);",
    "right" : "return a.equals(b);",
    "info" : "ReturnStatement[6032-6051]:ReturnStatement[6274-6293]"
  }, {
    "left" : "if (a instanceof ParameterizedType)",
    "right" : "if (a instanceof ParameterizedType)",
    "info" : "IfStatement[6064-7624]:IfStatement[6306-7866]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6100-6522]:Block[6342-6764]"
  }, {
    "left" : "if (!(b instanceof ParameterizedType))",
    "right" : "if (!(b instanceof ParameterizedType))",
    "info" : "IfStatement[6108-6178]:IfStatement[6350-6420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6147-6178]:Block[6389-6420]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[6157-6170]:ReturnStatement[6399-6412]"
  }, {
    "left" : "ParameterizedType pa = (ParameterizedType) a;",
    "right" : "ParameterizedType pa = (ParameterizedType) a;",
    "info" : "VariableDeclarationStatement[6222-6267]:VariableDeclarationStatement[6464-6509]"
  }, {
    "left" : "ParameterizedType pb = (ParameterizedType) b;",
    "right" : "ParameterizedType pb = (ParameterizedType) b;",
    "info" : "VariableDeclarationStatement[6274-6319]:VariableDeclarationStatement[6516-6561]"
  }, {
    "left" : "return equal(pa.getOwnerType(), pb.getOwnerType())\n          && pa.getRawType().equals(pb.getRawType())\n          && Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments());",
    "right" : "return equal(pa.getOwnerType(), pb.getOwnerType())\n          && pa.getRawType().equals(pb.getRawType())\n          && Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments());",
    "info" : "ReturnStatement[6326-6515]:ReturnStatement[6568-6757]"
  }, {
    "left" : "if (a instanceof GenericArrayType)",
    "right" : "if (a instanceof GenericArrayType)",
    "info" : "IfStatement[6528-7624]:IfStatement[6770-7866]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6563-6829]:Block[6805-7071]"
  }, {
    "left" : "if (!(b instanceof GenericArrayType))",
    "right" : "if (!(b instanceof GenericArrayType))",
    "info" : "IfStatement[6571-6640]:IfStatement[6813-6882]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6609-6640]:Block[6851-6882]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[6619-6632]:ReturnStatement[6861-6874]"
  }, {
    "left" : "GenericArrayType ga = (GenericArrayType) a;",
    "right" : "GenericArrayType ga = (GenericArrayType) a;",
    "info" : "VariableDeclarationStatement[6648-6691]:VariableDeclarationStatement[6890-6933]"
  }, {
    "left" : "GenericArrayType gb = (GenericArrayType) b;",
    "right" : "GenericArrayType gb = (GenericArrayType) b;",
    "info" : "VariableDeclarationStatement[6698-6741]:VariableDeclarationStatement[6940-6983]"
  }, {
    "left" : "return equals(ga.getGenericComponentType(), gb.getGenericComponentType());",
    "right" : "return equals(ga.getGenericComponentType(), gb.getGenericComponentType());",
    "info" : "ReturnStatement[6748-6822]:ReturnStatement[6990-7064]"
  }, {
    "left" : "if (a instanceof WildcardType)",
    "right" : "if (a instanceof WildcardType)",
    "info" : "IfStatement[6835-7624]:IfStatement[7077-7866]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6866-7170]:Block[7108-7412]"
  }, {
    "left" : "if (!(b instanceof WildcardType))",
    "right" : "if (!(b instanceof WildcardType))",
    "info" : "IfStatement[6874-6939]:IfStatement[7116-7181]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6908-6939]:Block[7150-7181]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[6918-6931]:ReturnStatement[7160-7173]"
  }, {
    "left" : "WildcardType wa = (WildcardType) a;",
    "right" : "WildcardType wa = (WildcardType) a;",
    "info" : "VariableDeclarationStatement[6947-6982]:VariableDeclarationStatement[7189-7224]"
  }, {
    "left" : "WildcardType wb = (WildcardType) b;",
    "right" : "WildcardType wb = (WildcardType) b;",
    "info" : "VariableDeclarationStatement[6989-7024]:VariableDeclarationStatement[7231-7266]"
  }, {
    "left" : "return Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())\n          && Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds());",
    "right" : "return Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())\n          && Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds());",
    "info" : "ReturnStatement[7031-7163]:ReturnStatement[7273-7405]"
  }, {
    "left" : "if (a instanceof TypeVariable)",
    "right" : "if (a instanceof TypeVariable)",
    "info" : "IfStatement[7176-7624]:IfStatement[7418-7866]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7207-7501]:Block[7449-7743]"
  }, {
    "left" : "if (!(b instanceof TypeVariable))",
    "right" : "if (!(b instanceof TypeVariable))",
    "info" : "IfStatement[7215-7280]:IfStatement[7457-7522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7249-7280]:Block[7491-7522]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7259-7272]:ReturnStatement[7501-7514]"
  }, {
    "left" : "TypeVariable<?> va = (TypeVariable<?>) a;",
    "right" : "TypeVariable<?> va = (TypeVariable<?>) a;",
    "info" : "VariableDeclarationStatement[7287-7328]:VariableDeclarationStatement[7529-7570]"
  }, {
    "left" : "TypeVariable<?> vb = (TypeVariable<?>) b;",
    "right" : "TypeVariable<?> vb = (TypeVariable<?>) b;",
    "info" : "VariableDeclarationStatement[7335-7376]:VariableDeclarationStatement[7577-7618]"
  }, {
    "left" : "return va.getGenericDeclaration() == vb.getGenericDeclaration()\n          && va.getName().equals(vb.getName());",
    "right" : "return va.getGenericDeclaration() == vb.getGenericDeclaration()\n          && va.getName().equals(vb.getName());",
    "info" : "ReturnStatement[7383-7494]:ReturnStatement[7625-7736]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7507-7624]:Block[7749-7866]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7605-7618]:ReturnStatement[7847-7860]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7632-7638]:Modifier[7874-7880]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[7639-7642]:PrimitiveType[7881-7884]"
  }, {
    "left" : "hashCodeOrZero",
    "right" : "hashCodeOrZero",
    "info" : "SimpleName[7643-7657]:SimpleName[7885-7899]"
  }, {
    "left" : "Object o",
    "right" : "Object o",
    "info" : "SingleVariableDeclaration[7658-7666]:SingleVariableDeclaration[7900-7908]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7668-7714]:Block[7910-7956]"
  }, {
    "left" : "return o != null ? o.hashCode() : 0;",
    "right" : "return o != null ? o.hashCode() : 0;",
    "info" : "ReturnStatement[7674-7710]:ReturnStatement[7916-7952]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7718-7724]:Modifier[7960-7966]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7725-7731]:Modifier[7967-7973]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[7732-7738]:SimpleType[7974-7980]"
  }, {
    "left" : "typeToString",
    "right" : "typeToString",
    "info" : "SimpleName[7739-7751]:SimpleName[7981-7993]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[7752-7761]:SingleVariableDeclaration[7994-8003]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7763-7850]:Block[8005-8092]"
  }, {
    "left" : "return type instanceof Class ? ((Class<?>) type).getName() : type.toString();",
    "right" : "return type instanceof Class ? ((Class<?>) type).getName() : type.toString();",
    "info" : "ReturnStatement[7769-7846]:ReturnStatement[8011-8088]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8150-8156]:Modifier[8392-8398]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[8157-8161]:SimpleType[8399-8403]"
  }, {
    "left" : "getGenericSupertype",
    "right" : "getGenericSupertype",
    "info" : "SimpleName[8162-8181]:SimpleName[8404-8423]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[8182-8194]:SingleVariableDeclaration[8424-8436]"
  }, {
    "left" : "Class<?> rawType",
    "right" : "Class<?> rawType",
    "info" : "SingleVariableDeclaration[8196-8212]:SingleVariableDeclaration[8438-8454]"
  }, {
    "left" : "Class<?> toResolve",
    "right" : "Class<?> toResolve",
    "info" : "SingleVariableDeclaration[8214-8232]:SingleVariableDeclaration[8456-8474]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8234-9335]:Block[8476-9577]"
  }, {
    "left" : "if (toResolve == rawType)",
    "right" : "if (toResolve == rawType)",
    "info" : "IfStatement[8240-8295]:IfStatement[8482-8537]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8266-8295]:Block[8508-8537]"
  }, {
    "left" : "return context;",
    "right" : "return context;",
    "info" : "ReturnStatement[8274-8289]:ReturnStatement[8516-8531]"
  }, {
    "left" : "if (toResolve.isInterface())",
    "right" : "if (toResolve.isInterface())",
    "info" : "IfStatement[8372-8807]:IfStatement[8614-9049]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8401-8807]:Block[8643-9049]"
  }, {
    "left" : "Class<?>[] interfaces = rawType.getInterfaces();",
    "right" : "Class<?>[] interfaces = rawType.getInterfaces();",
    "info" : "VariableDeclarationStatement[8409-8457]:VariableDeclarationStatement[8651-8699]"
  }, {
    "left" : "for (int i = 0, length = interfaces.length; i < length; i++)",
    "right" : "for (int i = 0, length = interfaces.length; i < length; i++)",
    "info" : "ForStatement[8464-8801]:ForStatement[8706-9043]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8525-8801]:Block[8767-9043]"
  }, {
    "left" : "if (interfaces[i] == toResolve)",
    "right" : "if (interfaces[i] == toResolve)",
    "info" : "IfStatement[8535-8793]:IfStatement[8777-9035]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8567-8630]:Block[8809-8872]"
  }, {
    "left" : "return rawType.getGenericInterfaces()[i];",
    "right" : "return rawType.getGenericInterfaces()[i];",
    "info" : "ReturnStatement[8579-8620]:ReturnStatement[8821-8862]"
  }, {
    "left" : "if (toResolve.isAssignableFrom(interfaces[i]))",
    "right" : "if (toResolve.isAssignableFrom(interfaces[i]))",
    "info" : "IfStatement[8636-8793]:IfStatement[8878-9035]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8683-8793]:Block[8925-9035]"
  }, {
    "left" : "return getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);",
    "right" : "return getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);",
    "info" : "ReturnStatement[8695-8783]:ReturnStatement[8937-9025]"
  }, {
    "left" : "if (!rawType.isInterface())",
    "right" : "if (!rawType.isInterface())",
    "info" : "IfStatement[8841-9271]:IfStatement[9083-9513]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8869-9271]:Block[9111-9513]"
  }, {
    "left" : "while (rawType != Object.class)",
    "right" : "while (rawType != Object.class)",
    "info" : "WhileStatement[8877-9265]:WhileStatement[9119-9507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8909-9265]:Block[9151-9507]"
  }, {
    "left" : "Class<?> rawSupertype = rawType.getSuperclass();",
    "right" : "Class<?> rawSupertype = rawType.getSuperclass();",
    "info" : "VariableDeclarationStatement[8919-8967]:VariableDeclarationStatement[9161-9209]"
  }, {
    "left" : "if (rawSupertype == toResolve)",
    "right" : "if (rawSupertype == toResolve)",
    "info" : "IfStatement[8976-9225]:IfStatement[9218-9467]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9007-9067]:Block[9249-9309]"
  }, {
    "left" : "return rawType.getGenericSuperclass();",
    "right" : "return rawType.getGenericSuperclass();",
    "info" : "ReturnStatement[9019-9057]:ReturnStatement[9261-9299]"
  }, {
    "left" : "if (toResolve.isAssignableFrom(rawSupertype))",
    "right" : "if (toResolve.isAssignableFrom(rawSupertype))",
    "info" : "IfStatement[9073-9225]:IfStatement[9315-9467]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9119-9225]:Block[9361-9467]"
  }, {
    "left" : "return getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);",
    "right" : "return getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);",
    "info" : "ReturnStatement[9131-9215]:ReturnStatement[9373-9457]"
  }, {
    "left" : "rawType = rawSupertype;",
    "right" : "rawType = rawSupertype;",
    "info" : "ExpressionStatement[9234-9257]:ExpressionStatement[9476-9499]"
  }, {
    "left" : "return toResolve;",
    "right" : "return toResolve;",
    "info" : "ReturnStatement[9314-9331]:ReturnStatement[9556-9573]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9621-9627]:Modifier[9863-9869]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[9628-9632]:SimpleType[9870-9874]"
  }, {
    "left" : "getSupertype",
    "right" : "getSupertype",
    "info" : "SimpleName[9633-9645]:SimpleName[9875-9887]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[9646-9658]:SingleVariableDeclaration[9888-9900]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[9660-9683]:SingleVariableDeclaration[9902-9925]"
  }, {
    "left" : "Class<?> supertype",
    "right" : "Class<?> supertype",
    "info" : "SingleVariableDeclaration[9685-9703]:SingleVariableDeclaration[9927-9945]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9705-9895]:Block[9947-10137]"
  }, {
    "left" : "checkArgument(supertype.isAssignableFrom(contextRawType));",
    "right" : "checkArgument(supertype.isAssignableFrom(contextRawType));",
    "info" : "ExpressionStatement[9711-9769]:ExpressionStatement[9953-10011]"
  }, {
    "left" : "return resolve(context, contextRawType,\n        $Gson$Types.getGenericSupertype(context, contextRawType, supertype));",
    "right" : "return resolve(context, contextRawType,\n        $Gson$Types.getGenericSupertype(context, contextRawType, supertype));",
    "info" : "ReturnStatement[9774-9891]:ReturnStatement[10016-10133]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10025-10031]:Modifier[10267-10273]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10032-10038]:Modifier[10274-10280]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[10039-10043]:SimpleType[10281-10285]"
  }, {
    "left" : "getArrayComponentType",
    "right" : "getArrayComponentType",
    "info" : "SimpleName[10044-10065]:SimpleName[10286-10307]"
  }, {
    "left" : "Type array",
    "right" : "Type array",
    "info" : "SingleVariableDeclaration[10066-10076]:SingleVariableDeclaration[10308-10318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10078-10240]:Block[10320-10482]"
  }, {
    "left" : "return array instanceof GenericArrayType\n        ? ((GenericArrayType) array).getGenericComponentType()\n        : ((Class<?>) array).getComponentType();",
    "right" : "return array instanceof GenericArrayType\n        ? ((GenericArrayType) array).getGenericComponentType()\n        : ((Class<?>) array).getComponentType();",
    "info" : "ReturnStatement[10084-10236]:ReturnStatement[10326-10478]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10383-10389]:Modifier[10625-10631]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10390-10396]:Modifier[10632-10638]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[10397-10401]:SimpleType[10639-10643]"
  }, {
    "left" : "getCollectionElementType",
    "right" : "getCollectionElementType",
    "info" : "SimpleName[10402-10426]:SimpleName[10644-10668]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[10427-10439]:SingleVariableDeclaration[10669-10681]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[10441-10464]:SingleVariableDeclaration[10683-10706]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10466-10851]:Block[10708-11093]"
  }, {
    "left" : "Type collectionType = getSupertype(context, contextRawType, Collection.class);",
    "right" : "Type collectionType = getSupertype(context, contextRawType, Collection.class);",
    "info" : "VariableDeclarationStatement[10472-10550]:VariableDeclarationStatement[10714-10792]"
  }, {
    "left" : "if (collectionType instanceof WildcardType)",
    "right" : "if (collectionType instanceof WildcardType)",
    "info" : "IfStatement[10556-10682]:IfStatement[10798-10924]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10600-10682]:Block[10842-10924]"
  }, {
    "left" : "collectionType = ((WildcardType)collectionType).getUpperBounds()[0];",
    "right" : "collectionType = ((WildcardType)collectionType).getUpperBounds()[0];",
    "info" : "ExpressionStatement[10608-10676]:ExpressionStatement[10850-10918]"
  }, {
    "left" : "if (collectionType instanceof ParameterizedType)",
    "right" : "if (collectionType instanceof ParameterizedType)",
    "info" : "IfStatement[10687-10822]:IfStatement[10929-11064]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10736-10822]:Block[10978-11064]"
  }, {
    "left" : "return ((ParameterizedType) collectionType).getActualTypeArguments()[0];",
    "right" : "return ((ParameterizedType) collectionType).getActualTypeArguments()[0];",
    "info" : "ReturnStatement[10744-10816]:ReturnStatement[10986-11058]"
  }, {
    "left" : "return Object.class;",
    "right" : "return Object.class;",
    "info" : "ReturnStatement[10827-10847]:ReturnStatement[11069-11089]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10982-10988]:Modifier[11224-11230]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10989-10995]:Modifier[11231-11237]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[10996-11002]:ArrayType[11238-11244]"
  }, {
    "left" : "getMapKeyAndValueTypes",
    "right" : "getMapKeyAndValueTypes",
    "info" : "SimpleName[11003-11025]:SimpleName[11245-11267]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[11026-11038]:SingleVariableDeclaration[11268-11280]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[11040-11063]:SingleVariableDeclaration[11282-11305]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11065-11766]:Block[11307-12008]"
  }, {
    "left" : "if (context == Properties.class)",
    "right" : "if (context == Properties.class)",
    "info" : "IfStatement[11282-11418]:IfStatement[11524-11660]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11315-11418]:Block[11557-11660]"
  }, {
    "left" : "return new Type[] { String.class, String.class };",
    "right" : "return new Type[] { String.class, String.class };",
    "info" : "ReturnStatement[11323-11372]:ReturnStatement[11565-11614]"
  }, {
    "left" : "Type mapType = getSupertype(context, contextRawType, Map.class);",
    "right" : "Type mapType = getSupertype(context, contextRawType, Map.class);",
    "info" : "VariableDeclarationStatement[11424-11488]:VariableDeclarationStatement[11666-11730]"
  }, {
    "left" : "if (mapType instanceof ParameterizedType)",
    "right" : "if (mapType instanceof ParameterizedType)",
    "info" : "IfStatement[11523-11708]:IfStatement[11765-11950]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11565-11708]:Block[11807-11950]"
  }, {
    "left" : "ParameterizedType mapParameterizedType = (ParameterizedType) mapType;",
    "right" : "ParameterizedType mapParameterizedType = (ParameterizedType) mapType;",
    "info" : "VariableDeclarationStatement[11573-11642]:VariableDeclarationStatement[11815-11884]"
  }, {
    "left" : "return mapParameterizedType.getActualTypeArguments();",
    "right" : "return mapParameterizedType.getActualTypeArguments();",
    "info" : "ReturnStatement[11649-11702]:ReturnStatement[11891-11944]"
  }, {
    "left" : "return new Type[] { Object.class, Object.class };",
    "right" : "return new Type[] { Object.class, Object.class };",
    "info" : "ReturnStatement[11713-11762]:ReturnStatement[11955-12004]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11770-11776]:Modifier[12012-12018]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[11777-11783]:Modifier[12019-12025]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[11784-11788]:SimpleType[12026-12030]"
  }, {
    "left" : "resolve",
    "right" : "resolve",
    "info" : "SimpleName[11789-11796]:SimpleName[12031-12038]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[11797-11809]:SingleVariableDeclaration[12039-12051]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[11811-11834]:SingleVariableDeclaration[12053-12076]"
  }, {
    "left" : "Type toResolve",
    "right" : "Type toResolve",
    "info" : "SingleVariableDeclaration[11836-11850]:SingleVariableDeclaration[12078-12092]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11852-14701]:Block[12094-14943]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[11958-14697]:WhileStatement[12200-14939]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11971-14697]:Block[12213-14939]"
  }, {
    "left" : "if (toResolve instanceof TypeVariable)",
    "right" : "if (toResolve instanceof TypeVariable)",
    "info" : "IfStatement[11979-14691]:IfStatement[12221-14933]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12018-12255]:Block[12260-12497]"
  }, {
    "left" : "TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;",
    "right" : "TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;",
    "info" : "VariableDeclarationStatement[12028-12087]:VariableDeclarationStatement[12270-12329]"
  }, {
    "left" : "toResolve = resolveTypeVariable(context, contextRawType, typeVariable);",
    "right" : "toResolve = resolveTypeVariable(context, contextRawType, typeVariable);",
    "info" : "ExpressionStatement[12096-12167]:ExpressionStatement[12338-12409]"
  }, {
    "left" : "if (toResolve == typeVariable)",
    "right" : "if (toResolve == typeVariable)",
    "info" : "IfStatement[12176-12246]:IfStatement[12418-12488]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12207-12246]:Block[12449-12488]"
  }, {
    "left" : "return toResolve;",
    "right" : "return toResolve;",
    "info" : "ReturnStatement[12219-12236]:ReturnStatement[12461-12478]"
  }, {
    "left" : "if (toResolve instanceof Class && ((Class<?>) toResolve).isArray())",
    "right" : "if (toResolve instanceof Class && ((Class<?>) toResolve).isArray())",
    "info" : "IfStatement[12261-14691]:IfStatement[12503-14933]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12329-12641]:Block[12571-12883]"
  }, {
    "left" : "Class<?> original = (Class<?>) toResolve;",
    "right" : "Class<?> original = (Class<?>) toResolve;",
    "info" : "VariableDeclarationStatement[12339-12380]:VariableDeclarationStatement[12581-12622]"
  }, {
    "left" : "Type componentType = original.getComponentType();",
    "right" : "Type componentType = original.getComponentType();",
    "info" : "VariableDeclarationStatement[12389-12438]:VariableDeclarationStatement[12631-12680]"
  }, {
    "left" : "Type newComponentType = resolve(context, contextRawType, componentType);",
    "right" : "Type newComponentType = resolve(context, contextRawType, componentType);",
    "info" : "VariableDeclarationStatement[12447-12519]:VariableDeclarationStatement[12689-12761]"
  }, {
    "left" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "right" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "info" : "ReturnStatement[12528-12632]:ReturnStatement[12770-12874]"
  }, {
    "left" : "if (toResolve instanceof GenericArrayType)",
    "right" : "if (toResolve instanceof GenericArrayType)",
    "info" : "IfStatement[12647-14691]:IfStatement[12889-14933]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12690-13025]:Block[12932-13267]"
  }, {
    "left" : "GenericArrayType original = (GenericArrayType) toResolve;",
    "right" : "GenericArrayType original = (GenericArrayType) toResolve;",
    "info" : "VariableDeclarationStatement[12700-12757]:VariableDeclarationStatement[12942-12999]"
  }, {
    "left" : "Type componentType = original.getGenericComponentType();",
    "right" : "Type componentType = original.getGenericComponentType();",
    "info" : "VariableDeclarationStatement[12766-12822]:VariableDeclarationStatement[13008-13064]"
  }, {
    "left" : "Type newComponentType = resolve(context, contextRawType, componentType);",
    "right" : "Type newComponentType = resolve(context, contextRawType, componentType);",
    "info" : "VariableDeclarationStatement[12831-12903]:VariableDeclarationStatement[13073-13145]"
  }, {
    "left" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "right" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "info" : "ReturnStatement[12912-13016]:ReturnStatement[13154-13258]"
  }, {
    "left" : "if (toResolve instanceof ParameterizedType)",
    "right" : "if (toResolve instanceof ParameterizedType)",
    "info" : "IfStatement[13031-14691]:IfStatement[13273-14933]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13075-13890]:Block[13317-14132]"
  }, {
    "left" : "ParameterizedType original = (ParameterizedType) toResolve;",
    "right" : "ParameterizedType original = (ParameterizedType) toResolve;",
    "info" : "VariableDeclarationStatement[13085-13144]:VariableDeclarationStatement[13327-13386]"
  }, {
    "left" : "Type ownerType = original.getOwnerType();",
    "right" : "Type ownerType = original.getOwnerType();",
    "info" : "VariableDeclarationStatement[13153-13194]:VariableDeclarationStatement[13395-13436]"
  }, {
    "left" : "Type newOwnerType = resolve(context, contextRawType, ownerType);",
    "right" : "Type newOwnerType = resolve(context, contextRawType, ownerType);",
    "info" : "VariableDeclarationStatement[13203-13267]:VariableDeclarationStatement[13445-13509]"
  }, {
    "left" : "boolean changed = newOwnerType != ownerType;",
    "right" : "boolean changed = newOwnerType != ownerType;",
    "info" : "VariableDeclarationStatement[13276-13320]:VariableDeclarationStatement[13518-13562]"
  }, {
    "left" : "Type[] args = original.getActualTypeArguments();",
    "right" : "Type[] args = original.getActualTypeArguments();",
    "info" : "VariableDeclarationStatement[13330-13378]:VariableDeclarationStatement[13572-13620]"
  }, {
    "left" : "for (int t = 0, length = args.length; t < length; t++)",
    "right" : "for (int t = 0, length = args.length; t < length; t++)",
    "info" : "ForStatement[13387-13746]:ForStatement[13629-13988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13442-13746]:Block[13684-13988]"
  }, {
    "left" : "Type resolvedTypeArgument = resolve(context, contextRawType, args[t]);",
    "right" : "Type resolvedTypeArgument = resolve(context, contextRawType, args[t]);",
    "info" : "VariableDeclarationStatement[13454-13524]:VariableDeclarationStatement[13696-13766]"
  }, {
    "left" : "if (resolvedTypeArgument != args[t])",
    "right" : "if (resolvedTypeArgument != args[t])",
    "info" : "IfStatement[13535-13736]:IfStatement[13777-13978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13572-13736]:Block[13814-13978]"
  }, {
    "left" : "if (!changed)",
    "right" : "if (!changed)",
    "info" : "IfStatement[13586-13680]:IfStatement[13828-13922]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13600-13680]:Block[13842-13922]"
  }, {
    "left" : "args = args.clone();",
    "right" : "args = args.clone();",
    "info" : "ExpressionStatement[13616-13636]:ExpressionStatement[13858-13878]"
  }, {
    "left" : "changed = true;",
    "right" : "changed = true;",
    "info" : "ExpressionStatement[13651-13666]:ExpressionStatement[13893-13908]"
  }, {
    "left" : "args[t] = resolvedTypeArgument;",
    "right" : "args[t] = resolvedTypeArgument;",
    "info" : "ExpressionStatement[13693-13724]:ExpressionStatement[13935-13966]"
  }, {
    "left" : "return changed\n            ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)\n            : original;",
    "right" : "return changed\n            ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)\n            : original;",
    "info" : "ReturnStatement[13756-13881]:ReturnStatement[13998-14123]"
  }, {
    "left" : "if (toResolve instanceof WildcardType)",
    "right" : "if (toResolve instanceof WildcardType)",
    "info" : "IfStatement[13896-14691]:IfStatement[14138-14933]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13935-14650]:Block[14177-14892]"
  }, {
    "left" : "WildcardType original = (WildcardType) toResolve;",
    "right" : "WildcardType original = (WildcardType) toResolve;",
    "info" : "VariableDeclarationStatement[13945-13994]:VariableDeclarationStatement[14187-14236]"
  }, {
    "left" : "Type[] originalLowerBound = original.getLowerBounds();",
    "right" : "Type[] originalLowerBound = original.getLowerBounds();",
    "info" : "VariableDeclarationStatement[14003-14057]:VariableDeclarationStatement[14245-14299]"
  }, {
    "left" : "Type[] originalUpperBound = original.getUpperBounds();",
    "right" : "Type[] originalUpperBound = original.getUpperBounds();",
    "info" : "VariableDeclarationStatement[14066-14120]:VariableDeclarationStatement[14308-14362]"
  }, {
    "left" : "if (originalLowerBound.length == 1)",
    "right" : "if (originalLowerBound.length == 1)",
    "info" : "IfStatement[14130-14616]:IfStatement[14372-14858]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14166-14371]:Block[14408-14613]"
  }, {
    "left" : "Type lowerBound = resolve(context, contextRawType, originalLowerBound[0]);",
    "right" : "Type lowerBound = resolve(context, contextRawType, originalLowerBound[0]);",
    "info" : "VariableDeclarationStatement[14178-14252]:VariableDeclarationStatement[14420-14494]"
  }, {
    "left" : "if (lowerBound != originalLowerBound[0])",
    "right" : "if (lowerBound != originalLowerBound[0])",
    "info" : "IfStatement[14263-14361]:IfStatement[14505-14603]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14304-14361]:Block[14546-14603]"
  }, {
    "left" : "return supertypeOf(lowerBound);",
    "right" : "return supertypeOf(lowerBound);",
    "info" : "ReturnStatement[14318-14349]:ReturnStatement[14560-14591]"
  }, {
    "left" : "if (originalUpperBound.length == 1)",
    "right" : "if (originalUpperBound.length == 1)",
    "info" : "IfStatement[14377-14616]:IfStatement[14619-14858]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14413-14616]:Block[14655-14858]"
  }, {
    "left" : "Type upperBound = resolve(context, contextRawType, originalUpperBound[0]);",
    "right" : "Type upperBound = resolve(context, contextRawType, originalUpperBound[0]);",
    "info" : "VariableDeclarationStatement[14425-14499]:VariableDeclarationStatement[14667-14741]"
  }, {
    "left" : "if (upperBound != originalUpperBound[0])",
    "right" : "if (upperBound != originalUpperBound[0])",
    "info" : "IfStatement[14510-14606]:IfStatement[14752-14848]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14551-14606]:Block[14793-14848]"
  }, {
    "left" : "return subtypeOf(upperBound);",
    "right" : "return subtypeOf(upperBound);",
    "info" : "ReturnStatement[14565-14594]:ReturnStatement[14807-14836]"
  }, {
    "left" : "return original;",
    "right" : "return original;",
    "info" : "ReturnStatement[14625-14641]:ReturnStatement[14867-14883]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14656-14691]:Block[14898-14933]"
  }, {
    "left" : "return toResolve;",
    "right" : "return toResolve;",
    "info" : "ReturnStatement[14666-14683]:ReturnStatement[14908-14925]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[14705-14711]:Modifier[14947-14953]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[14712-14716]:SimpleType[14954-14958]"
  }, {
    "left" : "resolveTypeVariable",
    "right" : "resolveTypeVariable",
    "info" : "SimpleName[14717-14736]:SimpleName[14959-14978]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[14737-14749]:SingleVariableDeclaration[14979-14991]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[14751-14774]:SingleVariableDeclaration[14993-15016]"
  }, {
    "left" : "TypeVariable<?> unknown",
    "right" : "TypeVariable<?> unknown",
    "info" : "SingleVariableDeclaration[14776-14799]:SingleVariableDeclaration[15018-15041]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14801-15272]:Block[15043-15514]"
  }, {
    "left" : "Class<?> declaredByRaw = declaringClassOf(unknown);",
    "right" : "Class<?> declaredByRaw = declaringClassOf(unknown);",
    "info" : "VariableDeclarationStatement[14807-14858]:VariableDeclarationStatement[15049-15100]"
  }, {
    "left" : "if (declaredByRaw == null)",
    "right" : "if (declaredByRaw == null)",
    "info" : "IfStatement[14900-14956]:IfStatement[15142-15198]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14927-14956]:Block[15169-15198]"
  }, {
    "left" : "return unknown;",
    "right" : "return unknown;",
    "info" : "ReturnStatement[14935-14950]:ReturnStatement[15177-15192]"
  }, {
    "left" : "Type declaredBy = getGenericSupertype(context, contextRawType, declaredByRaw);",
    "right" : "Type declaredBy = getGenericSupertype(context, contextRawType, declaredByRaw);",
    "info" : "VariableDeclarationStatement[14962-15040]:VariableDeclarationStatement[15204-15282]"
  }, {
    "left" : "if (declaredBy instanceof ParameterizedType)",
    "right" : "if (declaredBy instanceof ParameterizedType)",
    "info" : "IfStatement[15045-15247]:IfStatement[15287-15489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15090-15247]:Block[15332-15489]"
  }, {
    "left" : "int index = indexOf(declaredByRaw.getTypeParameters(), unknown);",
    "right" : "int index = indexOf(declaredByRaw.getTypeParameters(), unknown);",
    "info" : "VariableDeclarationStatement[15098-15162]:VariableDeclarationStatement[15340-15404]"
  }, {
    "left" : "return ((ParameterizedType) declaredBy).getActualTypeArguments()[index];",
    "right" : "return ((ParameterizedType) declaredBy).getActualTypeArguments()[index];",
    "info" : "ReturnStatement[15169-15241]:ReturnStatement[15411-15483]"
  }, {
    "left" : "return unknown;",
    "right" : "return unknown;",
    "info" : "ReturnStatement[15253-15268]:ReturnStatement[15495-15510]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[15276-15283]:Modifier[15518-15525]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15284-15290]:Modifier[15526-15532]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[15291-15294]:PrimitiveType[15533-15536]"
  }, {
    "left" : "indexOf",
    "right" : "indexOf",
    "info" : "SimpleName[15295-15302]:SimpleName[15537-15544]"
  }, {
    "left" : "Object[] array",
    "right" : "Object[] array",
    "info" : "SingleVariableDeclaration[15303-15317]:SingleVariableDeclaration[15545-15559]"
  }, {
    "left" : "Object toFind",
    "right" : "Object toFind",
    "info" : "SingleVariableDeclaration[15319-15332]:SingleVariableDeclaration[15561-15574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15334-15510]:Block[15576-15752]"
  }, {
    "left" : "for (int i = 0, length = array.length; i < length; i++)",
    "right" : "for (int i = 0, length = array.length; i < length; i++)",
    "info" : "ForStatement[15340-15466]:ForStatement[15582-15708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15396-15466]:Block[15638-15708]"
  }, {
    "left" : "if (toFind.equals(array[i]))",
    "right" : "if (toFind.equals(array[i]))",
    "info" : "IfStatement[15404-15460]:IfStatement[15646-15702]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15433-15460]:Block[15675-15702]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[15443-15452]:ReturnStatement[15685-15694]"
  }, {
    "left" : "throw new NoSuchElementException();",
    "right" : "throw new NoSuchElementException();",
    "info" : "ThrowStatement[15471-15506]:ThrowStatement[15713-15748]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[15640-15647]:Modifier[15882-15889]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15648-15654]:Modifier[15890-15896]"
  }, {
    "left" : "Class<?>",
    "right" : "Class<?>",
    "info" : "ParameterizedType[15655-15663]:ParameterizedType[15897-15905]"
  }, {
    "left" : "declaringClassOf",
    "right" : "declaringClassOf",
    "info" : "SimpleName[15664-15680]:SimpleName[15906-15922]"
  }, {
    "left" : "TypeVariable<?> typeVariable",
    "right" : "TypeVariable<?> typeVariable",
    "info" : "SingleVariableDeclaration[15681-15709]:SingleVariableDeclaration[15923-15951]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15711-15901]:Block[15953-16143]"
  }, {
    "left" : "GenericDeclaration genericDeclaration = typeVariable.getGenericDeclaration();",
    "right" : "GenericDeclaration genericDeclaration = typeVariable.getGenericDeclaration();",
    "info" : "VariableDeclarationStatement[15717-15794]:VariableDeclarationStatement[15959-16036]"
  }, {
    "left" : "return genericDeclaration instanceof Class\n        ? (Class<?>) genericDeclaration\n        : null;",
    "right" : "return genericDeclaration instanceof Class\n        ? (Class<?>) genericDeclaration\n        : null;",
    "info" : "ReturnStatement[15799-15897]:ReturnStatement[16041-16139]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15905-15911]:Modifier[16147-16153]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15912-15916]:PrimitiveType[16154-16158]"
  }, {
    "left" : "checkNotPrimitive",
    "right" : "checkNotPrimitive",
    "info" : "SimpleName[15917-15934]:SimpleName[16159-16176]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[15935-15944]:SingleVariableDeclaration[16177-16186]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15946-16035]:Block[16188-16277]"
  }, {
    "left" : "checkArgument(!(type instanceof Class<?>) || !((Class<?>) type).isPrimitive());",
    "right" : "checkArgument(!(type instanceof Class<?>) || !((Class<?>) type).isPrimitive());",
    "info" : "ExpressionStatement[15952-16031]:ExpressionStatement[16194-16273]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16039-16046]:Modifier[16281-16288]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16047-16053]:Modifier[16289-16295]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[16054-16059]:Modifier[16296-16301]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[16060-16065]:TYPE_DECLARATION_KIND[16302-16307]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16244-16250]:Modifier[16486-16492]"
  }, {
    "left" : "ParameterizedTypeImpl",
    "right" : "ParameterizedTypeImpl",
    "info" : "SimpleName[16251-16272]:SimpleName[16493-16514]"
  }, {
    "left" : "Type ownerType",
    "right" : "Type ownerType",
    "info" : "SingleVariableDeclaration[16273-16287]:SingleVariableDeclaration[16515-16529]"
  }, {
    "left" : "Type rawType",
    "right" : "Type rawType",
    "info" : "SingleVariableDeclaration[16289-16301]:SingleVariableDeclaration[16531-16543]"
  }, {
    "left" : "Type... typeArguments",
    "right" : "Type... typeArguments",
    "info" : "SingleVariableDeclaration[16303-16324]:SingleVariableDeclaration[16545-16566]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16326-17130]:Block[16568-17372]"
  }, {
    "left" : "if (rawType instanceof Class<?>)",
    "right" : "if (rawType instanceof Class<?>)",
    "info" : "IfStatement[16390-16705]:IfStatement[16632-16947]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16423-16705]:Block[16665-16947]"
  }, {
    "left" : "Class<?> rawTypeAsClass = (Class<?>) rawType;",
    "right" : "Class<?> rawTypeAsClass = (Class<?>) rawType;",
    "info" : "VariableDeclarationStatement[16433-16478]:VariableDeclarationStatement[16675-16720]"
  }, {
    "left" : "boolean isStaticOrTopLevelClass = Modifier.isStatic(rawTypeAsClass.getModifiers())\n            || rawTypeAsClass.getEnclosingClass() == null;",
    "right" : "boolean isStaticOrTopLevelClass = Modifier.isStatic(rawTypeAsClass.getModifiers())\n            || rawTypeAsClass.getEnclosingClass() == null;",
    "info" : "VariableDeclarationStatement[16487-16628]:VariableDeclarationStatement[16729-16870]"
  }, {
    "left" : "checkArgument(ownerType != null || isStaticOrTopLevelClass);",
    "right" : "checkArgument(ownerType != null || isStaticOrTopLevelClass);",
    "info" : "ExpressionStatement[16637-16697]:ExpressionStatement[16879-16939]"
  }, {
    "left" : "this.ownerType = ownerType == null ? null : canonicalize(ownerType);",
    "right" : "this.ownerType = ownerType == null ? null : canonicalize(ownerType);",
    "info" : "ExpressionStatement[16713-16781]:ExpressionStatement[16955-17023]"
  }, {
    "left" : "this.rawType = canonicalize(rawType);",
    "right" : "this.rawType = canonicalize(rawType);",
    "info" : "ExpressionStatement[16788-16825]:ExpressionStatement[17030-17067]"
  }, {
    "left" : "this.typeArguments = typeArguments.clone();",
    "right" : "this.typeArguments = typeArguments.clone();",
    "info" : "ExpressionStatement[16832-16875]:ExpressionStatement[17074-17117]"
  }, {
    "left" : "for (int t = 0, length = this.typeArguments.length; t < length; t++)",
    "right" : "for (int t = 0, length = this.typeArguments.length; t < length; t++)",
    "info" : "ForStatement[16882-17124]:ForStatement[17124-17366]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16951-17124]:Block[17193-17366]"
  }, {
    "left" : "checkNotNull(this.typeArguments[t]);",
    "right" : "checkNotNull(this.typeArguments[t]);",
    "info" : "ExpressionStatement[16961-16997]:ExpressionStatement[17203-17239]"
  }, {
    "left" : "checkNotPrimitive(this.typeArguments[t]);",
    "right" : "checkNotPrimitive(this.typeArguments[t]);",
    "info" : "ExpressionStatement[17006-17047]:ExpressionStatement[17248-17289]"
  }, {
    "left" : "this.typeArguments[t] = canonicalize(this.typeArguments[t]);",
    "right" : "this.typeArguments[t] = canonicalize(this.typeArguments[t]);",
    "info" : "ExpressionStatement[17056-17116]:ExpressionStatement[17298-17358]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17136-17142]:Modifier[17378-17384]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[17143-17149]:ArrayType[17385-17391]"
  }, {
    "left" : "getActualTypeArguments",
    "right" : "getActualTypeArguments",
    "info" : "SimpleName[17150-17172]:SimpleName[17392-17414]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17175-17218]:Block[17417-17460]"
  }, {
    "left" : "return typeArguments.clone();",
    "right" : "return typeArguments.clone();",
    "info" : "ReturnStatement[17183-17212]:ReturnStatement[17425-17454]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17224-17230]:Modifier[17466-17472]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[17231-17235]:SimpleType[17473-17477]"
  }, {
    "left" : "getRawType",
    "right" : "getRawType",
    "info" : "SimpleName[17236-17246]:SimpleName[17478-17488]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17249-17278]:Block[17491-17520]"
  }, {
    "left" : "return rawType;",
    "right" : "return rawType;",
    "info" : "ReturnStatement[17257-17272]:ReturnStatement[17499-17514]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17284-17290]:Modifier[17526-17532]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[17291-17295]:SimpleType[17533-17537]"
  }, {
    "left" : "getOwnerType",
    "right" : "getOwnerType",
    "info" : "SimpleName[17296-17308]:SimpleName[17538-17550]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17311-17342]:Block[17553-17584]"
  }, {
    "left" : "return ownerType;",
    "right" : "return ownerType;",
    "info" : "ReturnStatement[17319-17336]:ReturnStatement[17561-17578]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[17348-17357]:MarkerAnnotation[17590-17599]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17358-17364]:Modifier[17600-17606]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[17365-17372]:PrimitiveType[17607-17614]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[17373-17379]:SimpleName[17615-17621]"
  }, {
    "left" : "Object other",
    "right" : "Object other",
    "info" : "SingleVariableDeclaration[17380-17392]:SingleVariableDeclaration[17622-17634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17394-17515]:Block[17636-17757]"
  }, {
    "left" : "return other instanceof ParameterizedType\n          && $Gson$Types.equals(this, (ParameterizedType) other);",
    "right" : "return other instanceof ParameterizedType\n          && $Gson$Types.equals(this, (ParameterizedType) other);",
    "info" : "ReturnStatement[17402-17509]:ReturnStatement[17644-17751]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[17521-17530]:MarkerAnnotation[17763-17772]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17531-17537]:Modifier[17773-17779]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[17538-17541]:PrimitiveType[17780-17783]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[17542-17550]:SimpleName[17784-17792]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17553-17674]:Block[17795-17916]"
  }, {
    "left" : "return Arrays.hashCode(typeArguments)\n          ^ rawType.hashCode()\n          ^ hashCodeOrZero(ownerType);",
    "right" : "return Arrays.hashCode(typeArguments)\n          ^ rawType.hashCode()\n          ^ hashCodeOrZero(ownerType);",
    "info" : "ReturnStatement[17561-17668]:ReturnStatement[17803-17910]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[17680-17689]:MarkerAnnotation[17922-17931]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17690-17696]:Modifier[17932-17938]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[17697-17703]:SimpleType[17939-17945]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[17704-17712]:SimpleName[17946-17954]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17715-18186]:Block[17957-18428]"
  }, {
    "left" : "int length = typeArguments.length;",
    "right" : "int length = typeArguments.length;",
    "info" : "VariableDeclarationStatement[17723-17757]:VariableDeclarationStatement[17965-17999]"
  }, {
    "left" : "if (length == 0)",
    "right" : "if (length == 0)",
    "info" : "IfStatement[17764-17828]:IfStatement[18006-18070]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17781-17828]:Block[18023-18070]"
  }, {
    "left" : "return typeToString(rawType);",
    "right" : "return typeToString(rawType);",
    "info" : "ReturnStatement[17791-17820]:ReturnStatement[18033-18062]"
  }, {
    "left" : "StringBuilder stringBuilder = new StringBuilder(30 * (length + 1));",
    "right" : "StringBuilder stringBuilder = new StringBuilder(30 * (length + 1));",
    "info" : "VariableDeclarationStatement[17836-17903]:VariableDeclarationStatement[18078-18145]"
  }, {
    "left" : "stringBuilder.append(typeToString(rawType)).append(\"<\").append(typeToString(typeArguments[0]));",
    "right" : "stringBuilder.append(typeToString(rawType)).append(\"<\").append(typeToString(typeArguments[0]));",
    "info" : "ExpressionStatement[17910-18005]:ExpressionStatement[18152-18247]"
  }, {
    "left" : "for (int i = 1; i < length; i++)",
    "right" : "for (int i = 1; i < length; i++)",
    "info" : "ForStatement[18012-18129]:ForStatement[18254-18371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18045-18129]:Block[18287-18371]"
  }, {
    "left" : "stringBuilder.append(\", \").append(typeToString(typeArguments[i]));",
    "right" : "stringBuilder.append(\", \").append(typeToString(typeArguments[i]));",
    "info" : "ExpressionStatement[18055-18121]:ExpressionStatement[18297-18363]"
  }, {
    "left" : "return stringBuilder.append(\">\").toString();",
    "right" : "return stringBuilder.append(\">\").toString();",
    "info" : "ReturnStatement[18136-18180]:ReturnStatement[18378-18422]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[18247-18254]:Modifier[18489-18496]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[18255-18261]:Modifier[18497-18503]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[18262-18267]:Modifier[18504-18509]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[18268-18273]:TYPE_DECLARATION_KIND[18510-18515]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18382-18388]:Modifier[18624-18630]"
  }, {
    "left" : "GenericArrayTypeImpl",
    "right" : "GenericArrayTypeImpl",
    "info" : "SimpleName[18389-18409]:SimpleName[18631-18651]"
  }, {
    "left" : "Type componentType",
    "right" : "Type componentType",
    "info" : "SingleVariableDeclaration[18410-18428]:SingleVariableDeclaration[18652-18670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18430-18493]:Block[18672-18735]"
  }, {
    "left" : "this.componentType = canonicalize(componentType);",
    "right" : "this.componentType = canonicalize(componentType);",
    "info" : "ExpressionStatement[18438-18487]:ExpressionStatement[18680-18729]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18499-18505]:Modifier[18741-18747]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[18506-18510]:SimpleType[18748-18752]"
  }, {
    "left" : "getGenericComponentType",
    "right" : "getGenericComponentType",
    "info" : "SimpleName[18511-18534]:SimpleName[18753-18776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18537-18572]:Block[18779-18814]"
  }, {
    "left" : "return componentType;",
    "right" : "return componentType;",
    "info" : "ReturnStatement[18545-18566]:ReturnStatement[18787-18808]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18578-18587]:MarkerAnnotation[18820-18829]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18588-18594]:Modifier[18830-18836]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[18595-18602]:PrimitiveType[18837-18844]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[18603-18609]:SimpleName[18845-18851]"
  }, {
    "left" : "Object o",
    "right" : "Object o",
    "info" : "SingleVariableDeclaration[18610-18618]:SingleVariableDeclaration[18852-18860]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18620-18731]:Block[18862-18973]"
  }, {
    "left" : "return o instanceof GenericArrayType\n          && $Gson$Types.equals(this, (GenericArrayType) o);",
    "right" : "return o instanceof GenericArrayType\n          && $Gson$Types.equals(this, (GenericArrayType) o);",
    "info" : "ReturnStatement[18628-18725]:ReturnStatement[18870-18967]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18737-18746]:MarkerAnnotation[18979-18988]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18747-18753]:Modifier[18989-18995]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[18754-18757]:PrimitiveType[18996-18999]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[18758-18766]:SimpleName[19000-19008]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18769-18815]:Block[19011-19057]"
  }, {
    "left" : "return componentType.hashCode();",
    "right" : "return componentType.hashCode();",
    "info" : "ReturnStatement[18777-18809]:ReturnStatement[19019-19051]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18821-18830]:MarkerAnnotation[19063-19072]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18831-18837]:Modifier[19073-19079]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[18838-18844]:SimpleType[19080-19086]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[18845-18853]:SimpleName[19087-19095]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18856-18912]:Block[19098-19154]"
  }, {
    "left" : "return typeToString(componentType) + \"[]\";",
    "right" : "return typeToString(componentType) + \"[]\";",
    "info" : "ReturnStatement[18864-18906]:ReturnStatement[19106-19148]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[19216-19223]:Modifier[19458-19465]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[19224-19230]:Modifier[19466-19472]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[19231-19236]:Modifier[19473-19478]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[19237-19242]:TYPE_DECLARATION_KIND[19479-19484]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19375-19381]:Modifier[19617-19623]"
  }, {
    "left" : "WildcardTypeImpl",
    "right" : "WildcardTypeImpl",
    "info" : "SimpleName[19382-19398]:SimpleName[19624-19640]"
  }, {
    "left" : "Type[] upperBounds",
    "right" : "Type[] upperBounds",
    "info" : "SingleVariableDeclaration[19399-19417]:SingleVariableDeclaration[19641-19659]"
  }, {
    "left" : "Type[] lowerBounds",
    "right" : "Type[] lowerBounds",
    "info" : "SingleVariableDeclaration[19419-19437]:SingleVariableDeclaration[19661-19679]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19439-20001]:Block[19681-20243]"
  }, {
    "left" : "checkArgument(lowerBounds.length <= 1);",
    "right" : "checkArgument(lowerBounds.length <= 1);",
    "info" : "ExpressionStatement[19447-19486]:ExpressionStatement[19689-19728]"
  }, {
    "left" : "checkArgument(upperBounds.length == 1);",
    "right" : "checkArgument(upperBounds.length == 1);",
    "info" : "ExpressionStatement[19493-19532]:ExpressionStatement[19735-19774]"
  }, {
    "left" : "if (lowerBounds.length == 1)",
    "right" : "if (lowerBounds.length == 1)",
    "info" : "IfStatement[19540-19995]:IfStatement[19782-20237]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19569-19811]:Block[19811-20053]"
  }, {
    "left" : "checkNotNull(lowerBounds[0]);",
    "right" : "checkNotNull(lowerBounds[0]);",
    "info" : "ExpressionStatement[19579-19608]:ExpressionStatement[19821-19850]"
  }, {
    "left" : "checkNotPrimitive(lowerBounds[0]);",
    "right" : "checkNotPrimitive(lowerBounds[0]);",
    "info" : "ExpressionStatement[19617-19651]:ExpressionStatement[19859-19893]"
  }, {
    "left" : "checkArgument(upperBounds[0] == Object.class);",
    "right" : "checkArgument(upperBounds[0] == Object.class);",
    "info" : "ExpressionStatement[19660-19706]:ExpressionStatement[19902-19948]"
  }, {
    "left" : "this.lowerBound = canonicalize(lowerBounds[0]);",
    "right" : "this.lowerBound = canonicalize(lowerBounds[0]);",
    "info" : "ExpressionStatement[19715-19762]:ExpressionStatement[19957-20004]"
  }, {
    "left" : "this.upperBound = Object.class;",
    "right" : "this.upperBound = Object.class;",
    "info" : "ExpressionStatement[19771-19802]:ExpressionStatement[20013-20044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19817-19995]:Block[20059-20237]"
  }, {
    "left" : "checkNotNull(upperBounds[0]);",
    "right" : "checkNotNull(upperBounds[0]);",
    "info" : "ExpressionStatement[19827-19856]:ExpressionStatement[20069-20098]"
  }, {
    "left" : "checkNotPrimitive(upperBounds[0]);",
    "right" : "checkNotPrimitive(upperBounds[0]);",
    "info" : "ExpressionStatement[19865-19899]:ExpressionStatement[20107-20141]"
  }, {
    "left" : "this.lowerBound = null;",
    "right" : "this.lowerBound = null;",
    "info" : "ExpressionStatement[19908-19931]:ExpressionStatement[20150-20173]"
  }, {
    "left" : "this.upperBound = canonicalize(upperBounds[0]);",
    "right" : "this.upperBound = canonicalize(upperBounds[0]);",
    "info" : "ExpressionStatement[19940-19987]:ExpressionStatement[20182-20229]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20007-20013]:Modifier[20249-20255]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[20014-20020]:ArrayType[20256-20262]"
  }, {
    "left" : "getUpperBounds",
    "right" : "getUpperBounds",
    "info" : "SimpleName[20021-20035]:SimpleName[20263-20277]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20038-20085]:Block[20280-20327]"
  }, {
    "left" : "return new Type[] { upperBound };",
    "right" : "return new Type[] { upperBound };",
    "info" : "ReturnStatement[20046-20079]:ReturnStatement[20288-20321]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20091-20097]:Modifier[20333-20339]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[20098-20104]:ArrayType[20340-20346]"
  }, {
    "left" : "getLowerBounds",
    "right" : "getLowerBounds",
    "info" : "SimpleName[20105-20119]:SimpleName[20347-20361]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20122-20209]:Block[20364-20451]"
  }, {
    "left" : "return lowerBound != null ? new Type[] { lowerBound } : EMPTY_TYPE_ARRAY;",
    "right" : "return lowerBound != null ? new Type[] { lowerBound } : EMPTY_TYPE_ARRAY;",
    "info" : "ReturnStatement[20130-20203]:ReturnStatement[20372-20445]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[20215-20224]:MarkerAnnotation[20457-20466]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20225-20231]:Modifier[20467-20473]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[20232-20239]:PrimitiveType[20474-20481]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[20240-20246]:SimpleName[20482-20488]"
  }, {
    "left" : "Object other",
    "right" : "Object other",
    "info" : "SingleVariableDeclaration[20247-20259]:SingleVariableDeclaration[20489-20501]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20261-20372]:Block[20503-20614]"
  }, {
    "left" : "return other instanceof WildcardType\n          && $Gson$Types.equals(this, (WildcardType) other);",
    "right" : "return other instanceof WildcardType\n          && $Gson$Types.equals(this, (WildcardType) other);",
    "info" : "ReturnStatement[20269-20366]:ReturnStatement[20511-20608]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[20378-20387]:MarkerAnnotation[20620-20629]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20388-20394]:Modifier[20630-20636]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[20395-20398]:PrimitiveType[20637-20640]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[20399-20407]:SimpleName[20641-20649]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20410-20618]:Block[20652-20860]"
  }, {
    "left" : "return (lowerBound != null ? 31 + lowerBound.hashCode() : 1)\n          ^ (31 + upperBound.hashCode());",
    "right" : "return (lowerBound != null ? 31 + lowerBound.hashCode() : 1)\n          ^ (31 + upperBound.hashCode());",
    "info" : "ReturnStatement[20510-20612]:ReturnStatement[20752-20854]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[20624-20633]:MarkerAnnotation[20866-20875]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20634-20640]:Modifier[20876-20882]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[20641-20647]:SimpleType[20883-20889]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[20648-20656]:SimpleName[20890-20898]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20659-20898]:Block[20901-21140]"
  }, {
    "left" : "if (lowerBound != null)",
    "right" : "if (lowerBound != null)",
    "info" : "IfStatement[20667-20892]:IfStatement[20909-21134]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20691-20754]:Block[20933-20996]"
  }, {
    "left" : "return \"? super \" + typeToString(lowerBound);",
    "right" : "return \"? super \" + typeToString(lowerBound);",
    "info" : "ReturnStatement[20701-20746]:ReturnStatement[20943-20988]"
  }, {
    "left" : "if (upperBound == Object.class)",
    "right" : "if (upperBound == Object.class)",
    "info" : "IfStatement[20760-20892]:IfStatement[21002-21134]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20792-20821]:Block[21034-21063]"
  }, {
    "left" : "return \"?\";",
    "right" : "return \"?\";",
    "info" : "ReturnStatement[20802-20813]:ReturnStatement[21044-21055]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20827-20892]:Block[21069-21134]"
  }, {
    "left" : "return \"? extends \" + typeToString(upperBound);",
    "right" : "return \"? extends \" + typeToString(upperBound);",
    "info" : "ReturnStatement[20837-20884]:ReturnStatement[21079-21126]"
  } ]
}