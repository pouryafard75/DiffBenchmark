{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "MockHandler",
      "right" : "MockHandler",
      "info" : "TypeDeclaration[1107-5514]:TypeDeclaration[1107-5551]"
    }, {
      "left" : "private static final long serialVersionUID = -2917871070982574165L;",
      "right" : "private static final long serialVersionUID = -2917871070982574165L;",
      "info" : "FieldDeclaration[1324-1391]:FieldDeclaration[1324-1391]"
    }, {
      "left" : "InvocationContainerImpl invocationContainerImpl;",
      "right" : "InvocationContainerImpl invocationContainerImpl;",
      "info" : "FieldDeclaration[1399-1447]:FieldDeclaration[1399-1447]"
    }, {
      "left" : "MatchersBinder matchersBinder = new MatchersBinder();",
      "right" : "MatchersBinder matchersBinder = new MatchersBinder();",
      "info" : "FieldDeclaration[1453-1506]:FieldDeclaration[1453-1506]"
    }, {
      "left" : "MockingProgress mockingProgress = new ThreadSafeMockingProgress();",
      "right" : "MockingProgress mockingProgress = new ThreadSafeMockingProgress();",
      "info" : "FieldDeclaration[1512-1578]:FieldDeclaration[1512-1578]"
    }, {
      "left" : "private final MockSettingsImpl mockSettings;",
      "right" : "private final MockSettingsImpl mockSettings;",
      "info" : "FieldDeclaration[1586-1630]:FieldDeclaration[1586-1630]"
    }, {
      "left" : "public MockHandler(MockSettingsImpl mockSettings)",
      "right" : "public MockHandler(MockSettingsImpl mockSettings)",
      "info" : "MethodDeclaration[1638-1943]:MethodDeclaration[1638-1943]"
    }, {
      "left" : "MockHandler()",
      "right" : "MockHandler()",
      "info" : "MethodDeclaration[1969-2030]:MethodDeclaration[1969-2030]"
    }, {
      "left" : "public MockHandler(MockHandlerInterface<T> oldMockHandler)",
      "right" : "public MockHandler(MockHandlerInterface<T> oldMockHandler)",
      "info" : "MethodDeclaration[2038-2154]:MethodDeclaration[2038-2154]"
    }, {
      "left" : "public Object handle(Invocation invocation) throws Throwable",
      "right" : "public Object handle(Invocation invocation) throws Throwable",
      "info" : "MethodDeclaration[2162-4988]:MethodDeclaration[2162-5025]"
    }, {
      "left" : "public VoidMethodStubbable<T> voidMethodStubbable(T mock)",
      "right" : "public VoidMethodStubbable<T> voidMethodStubbable(T mock)",
      "info" : "MethodDeclaration[4996-5141]:MethodDeclaration[5033-5178]"
    }, {
      "left" : "public MockSettingsImpl getMockSettings()",
      "right" : "public MockSettingsImpl getMockSettings()",
      "info" : "MethodDeclaration[5149-5229]:MethodDeclaration[5186-5266]"
    }, {
      "left" : "public void setAnswersForStubbing(List<Answer> answers)",
      "right" : "public void setAnswersForStubbing(List<Answer> answers)",
      "info" : "MethodDeclaration[5237-5402]:MethodDeclaration[5274-5439]"
    }, {
      "left" : "public InvocationContainer getInvocationContainer()",
      "right" : "public InvocationContainer getInvocationContainer()",
      "info" : "MethodDeclaration[5410-5511]:MethodDeclaration[5447-5548]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1688-1943]:Block[1688-1943]"
    }, {
      "left" : "this.mockSettings = mockSettings;",
      "right" : "this.mockSettings = mockSettings;",
      "info" : "ExpressionStatement[1699-1732]:ExpressionStatement[1699-1732]"
    }, {
      "left" : "this.mockingProgress = new ThreadSafeMockingProgress();",
      "right" : "this.mockingProgress = new ThreadSafeMockingProgress();",
      "info" : "ExpressionStatement[1742-1797]:ExpressionStatement[1742-1797]"
    }, {
      "left" : "this.matchersBinder = new MatchersBinder();",
      "right" : "this.matchersBinder = new MatchersBinder();",
      "info" : "ExpressionStatement[1807-1850]:ExpressionStatement[1807-1850]"
    }, {
      "left" : "this.invocationContainerImpl = new InvocationContainerImpl(mockingProgress);",
      "right" : "this.invocationContainerImpl = new InvocationContainerImpl(mockingProgress);",
      "info" : "ExpressionStatement[1860-1936]:ExpressionStatement[1860-1936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1983-2030]:Block[1983-2030]"
    }, {
      "left" : "this(new MockSettingsImpl());",
      "right" : "this(new MockSettingsImpl());",
      "info" : "ConstructorInvocation[1994-2023]:ConstructorInvocation[1994-2023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2097-2154]:Block[2097-2154]"
    }, {
      "left" : "this(oldMockHandler.getMockSettings());",
      "right" : "this(oldMockHandler.getMockSettings());",
      "info" : "ConstructorInvocation[2108-2147]:ConstructorInvocation[2108-2147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2223-4988]:Block[2223-5025]"
    }, {
      "left" : "if (invocationContainerImpl.hasAnswersForStubbing())",
      "right" : "if (invocationContainerImpl.hasAnswersForStubbing())",
      "info" : "IfStatement[2234-2637]:IfStatement[2234-2637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2287-2637]:Block[2287-2637]"
    }, {
      "left" : "InvocationMatcher invocationMatcher = matchersBinder.bindMatchers(mockingProgress\r\n                            .getArgumentMatcherStorage(), invocation);",
      "right" : "InvocationMatcher invocationMatcher = matchersBinder.bindMatchers(mockingProgress\r\n                            .getArgumentMatcherStorage(), invocation);",
      "info" : "VariableDeclarationStatement[2369-2522]:VariableDeclarationStatement[2369-2522]"
    }, {
      "left" : "invocationContainerImpl.setMethodForStubbing(invocationMatcher);",
      "right" : "invocationContainerImpl.setMethodForStubbing(invocationMatcher);",
      "info" : "ExpressionStatement[2536-2600]:ExpressionStatement[2536-2600]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[2614-2626]:ReturnStatement[2614-2626]"
    }, {
      "left" : "VerificationMode verificationMode = mockingProgress.pullVerificationMode();",
      "right" : "VerificationMode verificationMode = mockingProgress.pullVerificationMode();",
      "info" : "VariableDeclarationStatement[2647-2722]:VariableDeclarationStatement[2647-2722]"
    }, {
      "left" : "InvocationMatcher invocationMatcher = matchersBinder.bindMatchers(mockingProgress.getArgumentMatcherStorage(),\r\n                        invocation);",
      "right" : "InvocationMatcher invocationMatcher = matchersBinder.bindMatchers(mockingProgress.getArgumentMatcherStorage(),\r\n                        invocation);",
      "info" : "VariableDeclarationStatement[2734-2882]:VariableDeclarationStatement[2734-2882]"
    }, {
      "left" : "mockingProgress.validateState();",
      "right" : "mockingProgress.validateState();",
      "info" : "ExpressionStatement[2894-2926]:ExpressionStatement[2894-2926]"
    }, {
      "left" : "if (verificationMode != null)",
      "right" : "if (verificationMode != null)",
      "info" : "IfStatement[3020-3799]:IfStatement[3020-3836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3050-3799]:Block[3050-3836]"
    }, {
      "left" : "if (verificationMode instanceof MockAwareVerificationMode && ((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock())",
      "right" : "if (((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock())",
      "info" : "IfStatement[3223-3788]:IfStatement[3223-3825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3366-3788]:Block[3309-3546]"
    }, {
      "left" : "VerificationDataImpl data = new VerificationDataImpl(invocationContainerImpl, invocationMatcher);",
      "right" : "VerificationDataImpl data = new VerificationDataImpl(invocationContainerImpl, invocationMatcher);",
      "info" : "VariableDeclarationStatement[3401-3498]:VariableDeclarationStatement[3344-3441]"
    }, {
      "left" : "verificationMode.verify(data);",
      "right" : "verificationMode.verify(data);",
      "info" : "ExpressionStatement[3528-3558]:ExpressionStatement[3471-3501]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3576-3588]:ReturnStatement[3519-3531]"
    }, {
      "left" : "invocationContainerImpl.setInvocationForPotentialStubbing(invocationMatcher);",
      "right" : "invocationContainerImpl.setInvocationForPotentialStubbing(invocationMatcher);",
      "info" : "ExpressionStatement[3819-3896]:ExpressionStatement[3856-3933]"
    }, {
      "left" : "OngoingStubbingImpl<T> ongoingStubbing = new OngoingStubbingImpl<T>(invocationContainerImpl);",
      "right" : "OngoingStubbingImpl<T> ongoingStubbing = new OngoingStubbingImpl<T>(invocationContainerImpl);",
      "info" : "VariableDeclarationStatement[3906-3999]:VariableDeclarationStatement[3943-4036]"
    }, {
      "left" : "mockingProgress.reportOngoingStubbing(ongoingStubbing);",
      "right" : "mockingProgress.reportOngoingStubbing(ongoingStubbing);",
      "info" : "ExpressionStatement[4009-4064]:ExpressionStatement[4046-4101]"
    }, {
      "left" : "StubbedInvocationMatcher stubbedInvocation = invocationContainerImpl.findAnswerFor(invocation);",
      "right" : "StubbedInvocationMatcher stubbedInvocation = invocationContainerImpl.findAnswerFor(invocation);",
      "info" : "VariableDeclarationStatement[4076-4171]:VariableDeclarationStatement[4113-4208]"
    }, {
      "left" : "if (stubbedInvocation != null)",
      "right" : "if (stubbedInvocation != null)",
      "info" : "IfStatement[4183-4981]:IfStatement[4220-5018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4214-4349]:Block[4251-4386]"
    }, {
      "left" : "stubbedInvocation.captureArgumentsFrom(invocation);",
      "right" : "stubbedInvocation.captureArgumentsFrom(invocation);",
      "info" : "ExpressionStatement[4229-4280]:ExpressionStatement[4266-4317]"
    }, {
      "left" : "return stubbedInvocation.answer(invocation);",
      "right" : "return stubbedInvocation.answer(invocation);",
      "info" : "ReturnStatement[4294-4338]:ReturnStatement[4331-4375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4355-4981]:Block[4392-5018]"
    }, {
      "left" : "Object ret = mockSettings.getDefaultAnswer().answer(invocation);",
      "right" : "Object ret = mockSettings.getDefaultAnswer().answer(invocation);",
      "info" : "VariableDeclarationStatement[4370-4434]:VariableDeclarationStatement[4407-4471]"
    }, {
      "left" : "invocationContainerImpl.resetInvocationForPotentialStubbing(invocationMatcher);",
      "right" : "invocationContainerImpl.resetInvocationForPotentialStubbing(invocationMatcher);",
      "info" : "ExpressionStatement[4866-4945]:ExpressionStatement[4903-4982]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[4959-4970]:ReturnStatement[4996-5007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5054-5141]:Block[5091-5178]"
    }, {
      "left" : "return new VoidMethodStubbableImpl<T>(mock, invocationContainerImpl);",
      "right" : "return new VoidMethodStubbableImpl<T>(mock, invocationContainerImpl);",
      "info" : "ReturnStatement[5065-5134]:ReturnStatement[5102-5171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5191-5229]:Block[5228-5266]"
    }, {
      "left" : "return mockSettings;",
      "right" : "return mockSettings;",
      "info" : "ReturnStatement[5202-5222]:ReturnStatement[5239-5259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5329-5402]:Block[5366-5439]"
    }, {
      "left" : "invocationContainerImpl.setAnswersForStubbing(answers);",
      "right" : "invocationContainerImpl.setAnswersForStubbing(answers);",
      "info" : "ExpressionStatement[5340-5395]:ExpressionStatement[5377-5432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5462-5511]:Block[5499-5548]"
    }, {
      "left" : "return invocationContainerImpl;",
      "right" : "return invocationContainerImpl;",
      "info" : "ReturnStatement[5473-5504]:ReturnStatement[5510-5541]"
    } ]
  },
  "interFileMappings" : { }
}