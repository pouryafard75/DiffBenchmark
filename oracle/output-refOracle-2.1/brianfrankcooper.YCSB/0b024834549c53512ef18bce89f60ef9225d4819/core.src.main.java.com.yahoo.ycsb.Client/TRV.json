{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "StatusThread",
      "right" : "StatusThread",
      "info" : "TypeDeclaration[3260-5220]:TypeDeclaration[3260-5220]"
    }, {
      "left" : "Vector<Thread> _threads;",
      "right" : "Vector<Thread> _threads;",
      "info" : "FieldDeclaration[3439-3463]:FieldDeclaration[3439-3463]"
    }, {
      "left" : "String _label;",
      "right" : "String _label;",
      "info" : "FieldDeclaration[3465-3479]:FieldDeclaration[3465-3479]"
    }, {
      "left" : "boolean _standardstatus;",
      "right" : "boolean _standardstatus;",
      "info" : "FieldDeclaration[3481-3505]:FieldDeclaration[3481-3505]"
    }, {
      "left" : "public static final long sleeptime=10000;",
      "right" : "public static final long sleeptime=10000;",
      "info" : "FieldDeclaration[3509-3599]:FieldDeclaration[3509-3599]"
    }, {
      "left" : "public StatusThread(Vector<Thread> threads, String label, boolean standardstatus)",
      "right" : "public StatusThread(Vector<Thread> threads, String label, boolean standardstatus)",
      "info" : "MethodDeclaration[3602-3759]:MethodDeclaration[3602-3759]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[3762-5218]:MethodDeclaration[3762-5218]"
    }, {
      "left" : "DB _db;",
      "right" : "DB _db;",
      "info" : "FieldDeclaration[5365-5372]:FieldDeclaration[5365-5372]"
    }, {
      "left" : "boolean _dotransactions;",
      "right" : "boolean _dotransactions;",
      "info" : "FieldDeclaration[5374-5398]:FieldDeclaration[5374-5398]"
    }, {
      "left" : "Workload _workload;",
      "right" : "Workload _workload;",
      "info" : "FieldDeclaration[5400-5419]:FieldDeclaration[5400-5419]"
    }, {
      "left" : "int _opcount;",
      "right" : "int _opcount;",
      "info" : "FieldDeclaration[5421-5434]:FieldDeclaration[5421-5434]"
    }, {
      "left" : "double _target;",
      "right" : "double _target;",
      "info" : "FieldDeclaration[5436-5451]:FieldDeclaration[5436-5451]"
    }, {
      "left" : "int _opsdone;",
      "right" : "int _opsdone;",
      "info" : "FieldDeclaration[5454-5467]:FieldDeclaration[5454-5467]"
    }, {
      "left" : "int _threadid;",
      "right" : "int _threadid;",
      "info" : "FieldDeclaration[5469-5483]:FieldDeclaration[5469-5483]"
    }, {
      "left" : "int _threadcount;",
      "right" : "int _threadcount;",
      "info" : "FieldDeclaration[5485-5502]:FieldDeclaration[5485-5502]"
    }, {
      "left" : "Object _workloadstate;",
      "right" : "Object _workloadstate;",
      "info" : "FieldDeclaration[5504-5526]:FieldDeclaration[5504-5526]"
    }, {
      "left" : "Properties _props;",
      "right" : "Properties _props;",
      "info" : "FieldDeclaration[5528-5546]:FieldDeclaration[5528-5546]"
    }, {
      "left" : "public ClientThread(DB db, boolean dotransactions, Workload workload, int threadid, int threadcount, Properties props, int opcount, double targetperthreadperms)",
      "right" : "public ClientThread(DB db, boolean dotransactions, Workload workload, int threadid, int threadcount, Properties props, int opcount, double targetperthreadperms)",
      "info" : "MethodDeclaration[5550-6507]:MethodDeclaration[5550-6507]"
    }, {
      "left" : "public int getOpsDone()",
      "right" : "public int getOpsDone()",
      "info" : "MethodDeclaration[6510-6558]:MethodDeclaration[6510-6558]"
    }, {
      "left" : "public static final String OPERATION_COUNT_PROPERTY=\"operationcount\";",
      "right" : "public static final String OPERATION_COUNT_PROPERTY=\"operationcount\";",
      "info" : "FieldDeclaration[9320-9453]:FieldDeclaration[8985-9118]"
    }, {
      "left" : "public static final String RECORD_COUNT_PROPERTY=\"recordcount\";",
      "right" : "public static final String RECORD_COUNT_PROPERTY=\"recordcount\";",
      "info" : "FieldDeclaration[9459-9601]:FieldDeclaration[9124-9266]"
    }, {
      "left" : "public static final String WORKLOAD_PROPERTY=\"workload\";",
      "right" : "public static final String WORKLOAD_PROPERTY=\"workload\";",
      "info" : "FieldDeclaration[9607-9716]:FieldDeclaration[9272-9381]"
    }, {
      "left" : "public static final String DB_PROPERTY=\"db\";",
      "right" : "public static final String DB_PROPERTY=\"db\";",
      "info" : "FieldDeclaration[9720-9818]:FieldDeclaration[9385-9483]"
    }, {
      "left" : "public static final String EXPORTER_PROPERTY=\"exporter\";",
      "right" : "public static final String EXPORTER_PROPERTY=\"exporter\";",
      "info" : "FieldDeclaration[9824-10019]:FieldDeclaration[9489-9684]"
    }, {
      "left" : "public static final String EXPORT_FILE_PROPERTY=\"exportfile\";",
      "right" : "public static final String EXPORT_FILE_PROPERTY=\"exportfile\";",
      "info" : "FieldDeclaration[10025-10205]:FieldDeclaration[9690-9870]"
    }, {
      "left" : "public static final String THREAD_COUNT_PROPERTY=\"threadcount\";",
      "right" : "public static final String THREAD_COUNT_PROPERTY=\"threadcount\";",
      "info" : "FieldDeclaration[10211-10339]:FieldDeclaration[9876-10004]"
    }, {
      "left" : "public static final String INSERT_COUNT_PROPERTY=\"insertcount\";",
      "right" : "public static final String INSERT_COUNT_PROPERTY=\"insertcount\";",
      "info" : "FieldDeclaration[10342-10687]:FieldDeclaration[10007-10352]"
    }, {
      "left" : "public static final String TARGET_PROPERTY=\"target\";",
      "right" : "public static final String TARGET_PROPERTY=\"target\";",
      "info" : "FieldDeclaration[10691-10805]:FieldDeclaration[10356-10470]"
    }, {
      "left" : "public static final String MAX_EXECUTION_TIME = \"maxexecutiontime\";",
      "right" : "public static final String MAX_EXECUTION_TIME = \"maxexecutiontime\";",
      "info" : "FieldDeclaration[10811-10972]:FieldDeclaration[10476-10637]"
    }, {
      "left" : "public static void usageMessage()",
      "right" : "public static void usageMessage()",
      "info" : "MethodDeclaration[10975-13045]:MethodDeclaration[10640-12710]"
    }, {
      "left" : "public static boolean checkRequiredProperties(Properties props)",
      "right" : "public static boolean checkRequiredProperties(Properties props)",
      "info" : "MethodDeclaration[13048-13271]:MethodDeclaration[12713-12936]"
    }, {
      "left" : "private static void exportMeasurements(Properties props, int opcount, long runtime)\n\t\t\tthrows IOException",
      "right" : "private static void exportMeasurements(Properties props, int opcount, long runtime)\n\t\t\tthrows IOException",
      "info" : "MethodDeclaration[13275-14792]:MethodDeclaration[12940-14457]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[19468-19668]:MethodDeclaration[19133-19333]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3685-3759]:Block[3685-3759]"
    }, {
      "left" : "_threads=threads;",
      "right" : "_threads=threads;",
      "info" : "ExpressionStatement[3689-3706]:ExpressionStatement[3689-3706]"
    }, {
      "left" : "_label=label;",
      "right" : "_label=label;",
      "info" : "ExpressionStatement[3709-3722]:ExpressionStatement[3709-3722]"
    }, {
      "left" : "_standardstatus=standardstatus;",
      "right" : "_standardstatus=standardstatus;",
      "info" : "ExpressionStatement[3725-3756]:ExpressionStatement[3725-3756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3831-5218]:Block[3831-5218]"
    }, {
      "left" : "long st=System.currentTimeMillis();",
      "right" : "long st=System.currentTimeMillis();",
      "info" : "VariableDeclarationStatement[3835-3870]:VariableDeclarationStatement[3835-3870]"
    }, {
      "left" : "long lasten=st;",
      "right" : "long lasten=st;",
      "info" : "VariableDeclarationStatement[3874-3889]:VariableDeclarationStatement[3874-3889]"
    }, {
      "left" : "long lasttotalops=0;",
      "right" : "long lasttotalops=0;",
      "info" : "VariableDeclarationStatement[3892-3912]:VariableDeclarationStatement[3892-3912]"
    }, {
      "left" : "boolean alldone;",
      "right" : "boolean alldone;",
      "info" : "VariableDeclarationStatement[3918-3934]:VariableDeclarationStatement[3918-3934]"
    }, {
      "left" : "SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss:SSS\");",
      "right" : "SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss:SSS\");",
      "info" : "VariableDeclarationStatement[3937-4011]:VariableDeclarationStatement[3937-4011]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[4017-5215]:DoStatement[4017-5215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4023-5195]:Block[4023-5195]"
    }, {
      "left" : "alldone=true;",
      "right" : "alldone=true;",
      "info" : "ExpressionStatement[4028-4041]:ExpressionStatement[4028-4041]"
    }, {
      "left" : "int totalops=0;",
      "right" : "int totalops=0;",
      "info" : "VariableDeclarationStatement[4046-4061]:VariableDeclarationStatement[4046-4061]"
    }, {
      "left" : "for (Thread t : _threads)",
      "right" : "for (Thread t : _threads)",
      "info" : "EnhancedForStatement[4130-4313]:EnhancedForStatement[4130-4313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4159-4313]:Block[4159-4313]"
    }, {
      "left" : "if (t.getState()!=Thread.State.TERMINATED)",
      "right" : "if (t.getState()!=Thread.State.TERMINATED)",
      "info" : "IfStatement[4165-4239]:IfStatement[4165-4239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4212-4239]:Block[4212-4239]"
    }, {
      "left" : "alldone=false;",
      "right" : "alldone=false;",
      "info" : "ExpressionStatement[4219-4233]:ExpressionStatement[4219-4233]"
    }, {
      "left" : "ClientThread ct=(ClientThread)t;",
      "right" : "ClientThread ct=(ClientThread)t;",
      "info" : "VariableDeclarationStatement[4245-4277]:VariableDeclarationStatement[4245-4277]"
    }, {
      "left" : "totalops+=ct.getOpsDone();",
      "right" : "totalops+=ct.getOpsDone();",
      "info" : "ExpressionStatement[4282-4308]:ExpressionStatement[4282-4308]"
    }, {
      "left" : "long en=System.currentTimeMillis();",
      "right" : "long en=System.currentTimeMillis();",
      "info" : "VariableDeclarationStatement[4318-4353]:VariableDeclarationStatement[4318-4353]"
    }, {
      "left" : "long interval=en-st;",
      "right" : "long interval=en-st;",
      "info" : "VariableDeclarationStatement[4358-4378]:VariableDeclarationStatement[4358-4378]"
    }, {
      "left" : "double curthroughput=1000.0*(((double)(totalops-lasttotalops))/((double)(en-lasten)));",
      "right" : "double curthroughput=1000.0*(((double)(totalops-lasttotalops))/((double)(en-lasten)));",
      "info" : "VariableDeclarationStatement[4452-4538]:VariableDeclarationStatement[4452-4538]"
    }, {
      "left" : "lasttotalops=totalops;",
      "right" : "lasttotalops=totalops;",
      "info" : "ExpressionStatement[4546-4568]:ExpressionStatement[4546-4568]"
    }, {
      "left" : "lasten=en;",
      "right" : "lasten=en;",
      "info" : "ExpressionStatement[4572-4582]:ExpressionStatement[4572-4582]"
    }, {
      "left" : "DecimalFormat d = new DecimalFormat(\"#.##\");",
      "right" : "DecimalFormat d = new DecimalFormat(\"#.##\");",
      "info" : "VariableDeclarationStatement[4590-4634]:VariableDeclarationStatement[4590-4634]"
    }, {
      "left" : "String label = _label + format.format(new Date());",
      "right" : "String label = _label + format.format(new Date());",
      "info" : "VariableDeclarationStatement[4638-4688]:VariableDeclarationStatement[4638-4688]"
    }, {
      "left" : "StringBuilder msg = new StringBuilder(label).append(\" \").append(interval/1000).append(\" sec: \");",
      "right" : "StringBuilder msg = new StringBuilder(label).append(\" \").append(interval/1000).append(\" sec: \");",
      "info" : "VariableDeclarationStatement[4693-4789]:VariableDeclarationStatement[4693-4789]"
    }, {
      "left" : "msg.append(totalops).append(\" operations; \");",
      "right" : "msg.append(totalops).append(\" operations; \");",
      "info" : "ExpressionStatement[4793-4838]:ExpressionStatement[4793-4838]"
    }, {
      "left" : "if (totalops != 0)",
      "right" : "if (totalops != 0)",
      "info" : "IfStatement[4843-4938]:IfStatement[4843-4938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4862-4938]:Block[4862-4938]"
    }, {
      "left" : "msg.append(d.format(curthroughput)).append(\" current ops/sec; \");",
      "right" : "msg.append(d.format(curthroughput)).append(\" current ops/sec; \");",
      "info" : "ExpressionStatement[4868-4933]:ExpressionStatement[4868-4933]"
    }, {
      "left" : "msg.append(Measurements.getMeasurements().getSummary());",
      "right" : "msg.append(Measurements.getMeasurements().getSummary());",
      "info" : "ExpressionStatement[4943-4999]:ExpressionStatement[4943-4999]"
    }, {
      "left" : "System.err.println(msg);",
      "right" : "System.err.println(msg);",
      "info" : "ExpressionStatement[5004-5028]:ExpressionStatement[5004-5028]"
    }, {
      "left" : "if (_standardstatus)",
      "right" : "if (_standardstatus)",
      "info" : "IfStatement[5033-5089]:IfStatement[5033-5089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5054-5089]:Block[5054-5089]"
    }, {
      "left" : "System.out.println(msg);",
      "right" : "System.out.println(msg);",
      "info" : "ExpressionStatement[5060-5084]:ExpressionStatement[5060-5084]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5094-5190]:TryStatement[5094-5190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5101-5129]:Block[5101-5129]"
    }, {
      "left" : "sleep(sleeptime);",
      "right" : "sleep(sleeptime);",
      "info" : "ExpressionStatement[5107-5124]:ExpressionStatement[5107-5124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5167-5190]:Block[5167-5190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6204-6507]:Block[6204-6507]"
    }, {
      "left" : "_db=db;",
      "right" : "_db=db;",
      "info" : "ExpressionStatement[6261-6268]:ExpressionStatement[6261-6268]"
    }, {
      "left" : "_dotransactions=dotransactions;",
      "right" : "_dotransactions=dotransactions;",
      "info" : "ExpressionStatement[6271-6302]:ExpressionStatement[6271-6302]"
    }, {
      "left" : "_workload=workload;",
      "right" : "_workload=workload;",
      "info" : "ExpressionStatement[6305-6324]:ExpressionStatement[6305-6324]"
    }, {
      "left" : "_opcount=opcount;",
      "right" : "_opcount=opcount;",
      "info" : "ExpressionStatement[6327-6344]:ExpressionStatement[6327-6344]"
    }, {
      "left" : "_opsdone=0;",
      "right" : "_opsdone=0;",
      "info" : "ExpressionStatement[6347-6358]:ExpressionStatement[6347-6358]"
    }, {
      "left" : "_target=targetperthreadperms;",
      "right" : "_target=targetperthreadperms;",
      "info" : "ExpressionStatement[6361-6390]:ExpressionStatement[6361-6390]"
    }, {
      "left" : "_threadid=threadid;",
      "right" : "_threadid=threadid;",
      "info" : "ExpressionStatement[6393-6412]:ExpressionStatement[6393-6412]"
    }, {
      "left" : "_threadcount=threadcount;",
      "right" : "_threadcount=threadcount;",
      "info" : "ExpressionStatement[6415-6440]:ExpressionStatement[6415-6440]"
    }, {
      "left" : "_props=props;",
      "right" : "_props=props;",
      "info" : "ExpressionStatement[6443-6456]:ExpressionStatement[6443-6456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6535-6558]:Block[6535-6558]"
    }, {
      "left" : "return _opsdone;",
      "right" : "return _opsdone;",
      "info" : "ReturnStatement[6539-6555]:ReturnStatement[6539-6555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11010-13045]:Block[10675-12710]"
    }, {
      "left" : "System.out.println(\"Usage: java com.yahoo.ycsb.Client [options]\");",
      "right" : "System.out.println(\"Usage: java com.yahoo.ycsb.Client [options]\");",
      "info" : "ExpressionStatement[11014-11080]:ExpressionStatement[10679-10745]"
    }, {
      "left" : "System.out.println(\"Options:\");",
      "right" : "System.out.println(\"Options:\");",
      "info" : "ExpressionStatement[11083-11114]:ExpressionStatement[10748-10779]"
    }, {
      "left" : "System.out.println(\"  -threads n: execute using n threads (default: 1) - can also be specified as the \\n\" +\n\t\t\t\t\"              \\\"threadcount\\\" property using -p\");",
      "right" : "System.out.println(\"  -threads n: execute using n threads (default: 1) - can also be specified as the \\n\" +\n\t\t\t\t\"              \\\"threadcount\\\" property using -p\");",
      "info" : "ExpressionStatement[11117-11280]:ExpressionStatement[10782-10945]"
    }, {
      "left" : "System.out.println(\"  -target n: attempt to do n operations per second (default: unlimited) - can also\\n\" +\n\t\t\t\t\"             be specified as the \\\"target\\\" property using -p\");",
      "right" : "System.out.println(\"  -target n: attempt to do n operations per second (default: unlimited) - can also\\n\" +\n\t\t\t\t\"             be specified as the \\\"target\\\" property using -p\");",
      "info" : "ExpressionStatement[11283-11460]:ExpressionStatement[10948-11125]"
    }, {
      "left" : "System.out.println(\"  -load:  run the loading phase of the workload\");",
      "right" : "System.out.println(\"  -load:  run the loading phase of the workload\");",
      "info" : "ExpressionStatement[11463-11533]:ExpressionStatement[11128-11198]"
    }, {
      "left" : "System.out.println(\"  -t:  run the transactions phase of the workload (default)\");",
      "right" : "System.out.println(\"  -t:  run the transactions phase of the workload (default)\");",
      "info" : "ExpressionStatement[11536-11618]:ExpressionStatement[11201-11283]"
    }, {
      "left" : "System.out.println(\"  -db dbname: specify the name of the DB to use (default: com.yahoo.ycsb.BasicDB) - \\n\" +\n\t\t\t\t\"              can also be specified as the \\\"db\\\" property using -p\");",
      "right" : "System.out.println(\"  -db dbname: specify the name of the DB to use (default: com.yahoo.ycsb.BasicDB) - \\n\" +\n\t\t\t\t\"              can also be specified as the \\\"db\\\" property using -p\");",
      "info" : "ExpressionStatement[11621-11806]:ExpressionStatement[11286-11471]"
    }, {
      "left" : "System.out.println(\"  -P propertyfile: load properties from the given file. Multiple files can\");",
      "right" : "System.out.println(\"  -P propertyfile: load properties from the given file. Multiple files can\");",
      "info" : "ExpressionStatement[11809-11906]:ExpressionStatement[11474-11571]"
    }, {
      "left" : "System.out.println(\"                   be specified, and will be processed in the order specified\");",
      "right" : "System.out.println(\"                   be specified, and will be processed in the order specified\");",
      "info" : "ExpressionStatement[11909-12009]:ExpressionStatement[11574-11674]"
    }, {
      "left" : "System.out.println(\"  -p name=value:  specify a property to be passed to the DB and workloads;\");",
      "right" : "System.out.println(\"  -p name=value:  specify a property to be passed to the DB and workloads;\");",
      "info" : "ExpressionStatement[12012-12109]:ExpressionStatement[11677-11774]"
    }, {
      "left" : "System.out.println(\"                  multiple properties can be specified, and override any\");",
      "right" : "System.out.println(\"                  multiple properties can be specified, and override any\");",
      "info" : "ExpressionStatement[12112-12207]:ExpressionStatement[11777-11872]"
    }, {
      "left" : "System.out.println(\"                  values in the propertyfile\");",
      "right" : "System.out.println(\"                  values in the propertyfile\");",
      "info" : "ExpressionStatement[12210-12277]:ExpressionStatement[11875-11942]"
    }, {
      "left" : "System.out.println(\"  -s:  show status during run (default: no status)\");",
      "right" : "System.out.println(\"  -s:  show status during run (default: no status)\");",
      "info" : "ExpressionStatement[12280-12353]:ExpressionStatement[11945-12018]"
    }, {
      "left" : "System.out.println(\"  -l label:  use label for status (e.g. to label one experiment out of a whole batch)\");",
      "right" : "System.out.println(\"  -l label:  use label for status (e.g. to label one experiment out of a whole batch)\");",
      "info" : "ExpressionStatement[12356-12464]:ExpressionStatement[12021-12129]"
    }, {
      "left" : "System.out.println(\"\");",
      "right" : "System.out.println(\"\");",
      "info" : "ExpressionStatement[12467-12490]:ExpressionStatement[12132-12155]"
    }, {
      "left" : "System.out.println(\"Required properties:\");",
      "right" : "System.out.println(\"Required properties:\");",
      "info" : "ExpressionStatement[12493-12536]:ExpressionStatement[12158-12201]"
    }, {
      "left" : "System.out.println(\"  \"+WORKLOAD_PROPERTY+\": the name of the workload class to use (e.g. com.yahoo.ycsb.workloads.CoreWorkload)\");",
      "right" : "System.out.println(\"  \"+WORKLOAD_PROPERTY+\": the name of the workload class to use (e.g. com.yahoo.ycsb.workloads.CoreWorkload)\");",
      "info" : "ExpressionStatement[12539-12669]:ExpressionStatement[12204-12334]"
    }, {
      "left" : "System.out.println(\"\");",
      "right" : "System.out.println(\"\");",
      "info" : "ExpressionStatement[12672-12695]:ExpressionStatement[12337-12360]"
    }, {
      "left" : "System.out.println(\"To run the transaction phase from multiple servers, start a separate client on each.\");",
      "right" : "System.out.println(\"To run the transaction phase from multiple servers, start a separate client on each.\");",
      "info" : "ExpressionStatement[12698-12805]:ExpressionStatement[12363-12470]"
    }, {
      "left" : "System.out.println(\"To run the load phase from multiple servers, start a separate client on each; additionally,\");",
      "right" : "System.out.println(\"To run the load phase from multiple servers, start a separate client on each; additionally,\");",
      "info" : "ExpressionStatement[12808-12922]:ExpressionStatement[12473-12587]"
    }, {
      "left" : "System.out.println(\"use the \\\"insertcount\\\" and \\\"insertstart\\\" properties to divide up the records to be inserted\");",
      "right" : "System.out.println(\"use the \\\"insertcount\\\" and \\\"insertstart\\\" properties to divide up the records to be inserted\");",
      "info" : "ExpressionStatement[12925-13042]:ExpressionStatement[12590-12707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13113-13271]:Block[12778-12936]"
    }, {
      "left" : "if (props.getProperty(WORKLOAD_PROPERTY)==null)",
      "right" : "if (props.getProperty(WORKLOAD_PROPERTY)==null)",
      "info" : "IfStatement[13117-13252]:IfStatement[12782-12917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13167-13252]:Block[12832-12917]"
    }, {
      "left" : "System.out.println(\"Missing property: \"+WORKLOAD_PROPERTY);",
      "right" : "System.out.println(\"Missing property: \"+WORKLOAD_PROPERTY);",
      "info" : "ExpressionStatement[13172-13231]:ExpressionStatement[12837-12896]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[13235-13248]:ReturnStatement[12900-12913]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[13256-13268]:ReturnStatement[12921-12933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13576-14792]:Block[13241-14457]"
    }, {
      "left" : "MeasurementsExporter exporter = null;",
      "right" : "MeasurementsExporter exporter = null;",
      "info" : "VariableDeclarationStatement[13580-13617]:VariableDeclarationStatement[13245-13282]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[13620-14789]:TryStatement[13285-14454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13626-14716]:Block[13291-14381]"
    }, {
      "left" : "OutputStream out;",
      "right" : "OutputStream out;",
      "info" : "VariableDeclarationStatement[13710-13727]:VariableDeclarationStatement[13375-13392]"
    }, {
      "left" : "String exportFile = props.getProperty(EXPORT_FILE_PROPERTY);",
      "right" : "String exportFile = props.getProperty(EXPORT_FILE_PROPERTY);",
      "info" : "VariableDeclarationStatement[13731-13791]:VariableDeclarationStatement[13396-13456]"
    }, {
      "left" : "if (exportFile == null)",
      "right" : "if (exportFile == null)",
      "info" : "IfStatement[13795-13909]:IfStatement[13460-13574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13822-13850]:Block[13487-13515]"
    }, {
      "left" : "out = System.out;",
      "right" : "out = System.out;",
      "info" : "ExpressionStatement[13828-13845]:ExpressionStatement[13493-13510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13859-13909]:Block[13524-13574]"
    }, {
      "left" : "out = new FileOutputStream(exportFile);",
      "right" : "out = new FileOutputStream(exportFile);",
      "info" : "ExpressionStatement[13865-13904]:ExpressionStatement[13530-13569]"
    }, {
      "left" : "String exporterStr = props.getProperty(EXPORTER_PROPERTY, \"com.yahoo.ycsb.measurements.exporter.TextMeasurementsExporter\");",
      "right" : "String exporterStr = props.getProperty(EXPORTER_PROPERTY, \"com.yahoo.ycsb.measurements.exporter.TextMeasurementsExporter\");",
      "info" : "VariableDeclarationStatement[13981-14104]:VariableDeclarationStatement[13646-13769]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[14108-14454]:TryStatement[13773-14119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14115-14239]:Block[13780-13904]"
    }, {
      "left" : "exporter = (MeasurementsExporter) Class.forName(exporterStr).getConstructor(OutputStream.class).newInstance(out);",
      "right" : "exporter = (MeasurementsExporter) Class.forName(exporterStr).getConstructor(OutputStream.class).newInstance(out);",
      "info" : "ExpressionStatement[14121-14234]:ExpressionStatement[13786-13899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14263-14454]:Block[13928-14119]"
    }, {
      "left" : "System.err.println(\"Could not find exporter \" + exporterStr\n\t\t\t\t\t\t+ \", will use default text reporter.\");",
      "right" : "System.err.println(\"Could not find exporter \" + exporterStr\n\t\t\t\t\t\t+ \", will use default text reporter.\");",
      "info" : "ExpressionStatement[14269-14374]:ExpressionStatement[13934-14039]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[14379-14399]:ExpressionStatement[14044-14064]"
    }, {
      "left" : "exporter = new TextMeasurementsExporter(out);",
      "right" : "exporter = new TextMeasurementsExporter(out);",
      "info" : "ExpressionStatement[14404-14449]:ExpressionStatement[14069-14114]"
    }, {
      "left" : "exporter.write(\"OVERALL\", \"RunTime(ms)\", runtime);",
      "right" : "exporter.write(\"OVERALL\", \"RunTime(ms)\", runtime);",
      "info" : "ExpressionStatement[14459-14509]:ExpressionStatement[14124-14174]"
    }, {
      "left" : "double throughput = 1000.0 * ((double) opcount) / ((double) runtime);",
      "right" : "double throughput = 1000.0 * ((double) opcount) / ((double) runtime);",
      "info" : "VariableDeclarationStatement[14513-14582]:VariableDeclarationStatement[14178-14247]"
    }, {
      "left" : "exporter.write(\"OVERALL\", \"Throughput(ops/sec)\", throughput);",
      "right" : "exporter.write(\"OVERALL\", \"Throughput(ops/sec)\", throughput);",
      "info" : "ExpressionStatement[14586-14647]:ExpressionStatement[14251-14312]"
    }, {
      "left" : "Measurements.getMeasurements().exportMeasurements(exporter);",
      "right" : "Measurements.getMeasurements().exportMeasurements(exporter);",
      "info" : "ExpressionStatement[14652-14712]:ExpressionStatement[14317-14377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14727-14789]:Block[14392-14454]"
    }, {
      "left" : "if (exporter != null)",
      "right" : "if (exporter != null)",
      "info" : "IfStatement[14732-14785]:IfStatement[14397-14450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14757-14785]:Block[14422-14450]"
    }, {
      "left" : "exporter.close();",
      "right" : "exporter.close();",
      "info" : "ExpressionStatement[14763-14780]:ExpressionStatement[14428-14445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19489-19668]:Block[19154-19333]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[19495-19588]:TryStatement[19160-19253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19503-19528]:Block[19168-19193]"
    }, {
      "left" : "sleep(2000);",
      "right" : "sleep(2000);",
      "info" : "ExpressionStatement[19510-19522]:ExpressionStatement[19175-19187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19568-19588]:Block[19233-19253]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[19575-19582]:ReturnStatement[19240-19247]"
    }, {
      "left" : "System.err.println(\" (might take a few minutes for large data sets)\");",
      "right" : "System.err.println(\" (might take a few minutes for large data sets)\");",
      "info" : "ExpressionStatement[19593-19663]:ExpressionStatement[19258-19328]"
    } ]
  },
  "interFileMappings" : { }
}