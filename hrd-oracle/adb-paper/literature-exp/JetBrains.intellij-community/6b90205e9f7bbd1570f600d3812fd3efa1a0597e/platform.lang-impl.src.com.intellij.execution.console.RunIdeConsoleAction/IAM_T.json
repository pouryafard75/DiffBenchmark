{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "RunIdeConsoleAction",
      "right" : "RunIdeConsoleAction",
      "info" : "TypeDeclaration[2598-13623]:TypeDeclaration[2513-12306]"
    }, {
      "left" : "private static final String DEFAULT_FILE_NAME = \"ide-scripting\";",
      "right" : "private static final String DEFAULT_FILE_NAME = \"ide-scripting\";",
      "info" : "FieldDeclaration[2729-2793]:FieldDeclaration[2600-2664]"
    }, {
      "left" : "private static final Key<WeakReference<RunContentDescriptor>> DESCRIPTOR_KEY = Key.create(\"DESCRIPTOR_KEY\");",
      "right" : "private static final Key<WeakReference<RunContentDescriptor>> DESCRIPTOR_KEY = Key.create(\"DESCRIPTOR_KEY\");",
      "info" : "FieldDeclaration[2797-2905]:FieldDeclaration[2668-2776]"
    }, {
      "left" : "private static final Logger LOG = Logger.getInstance(RunIdeConsoleAction.class);",
      "right" : "private static final Logger LOG = Logger.getInstance(RunIdeConsoleAction.class);",
      "info" : "FieldDeclaration[2908-2988]:FieldDeclaration[2779-2859]"
    }, {
      "left" : "public void update(AnActionEvent e)",
      "right" : "public void update(AnActionEvent e)",
      "info" : "MethodDeclaration[2992-3278]:MethodDeclaration[2863-3149]"
    }, {
      "left" : "public void actionPerformed(AnActionEvent e)",
      "right" : "public void actionPerformed(AnActionEvent e)",
      "info" : "MethodDeclaration[3282-4180]:MethodDeclaration[3153-4051]"
    }, {
      "left" : "public AnAction fun(final String language)",
      "right" : "public AnAction fun(final String language)",
      "info" : "MethodDeclaration[3669-3956]:MethodDeclaration[3540-3827]"
    }, {
      "left" : "public void actionPerformed(@NotNull AnActionEvent e)",
      "right" : "public void actionPerformed(@NotNull AnActionEvent e)",
      "info" : "MethodDeclaration[3803-3933]:MethodDeclaration[3674-3804]"
    }, {
      "left" : "protected void runConsole(@NotNull AnActionEvent e, @NotNull String language)",
      "right" : "protected void runConsole(@NotNull AnActionEvent e, @NotNull String language)",
      "info" : "MethodDeclaration[4184-4869]:MethodDeclaration[4055-4740]"
    }, {
      "left" : "public static void configureConsole(@NotNull VirtualFile file, @NotNull FileEditorManager source)",
      "right" : "public static void configureConsole(@NotNull VirtualFile file, @NotNull FileEditorManager source)",
      "info" : "MethodDeclaration[4873-5300]:MethodDeclaration[4744-5171]"
    }, {
      "left" : "private static void executeQuery(@NotNull Project project,\n                                   @NotNull VirtualFile file,\n                                   @NotNull Editor editor,\n                                   @NotNull IdeScriptEngine engine)",
      "right" : "private static void executeQuery(@NotNull Project project,\n                                   @NotNull VirtualFile file,\n                                   @NotNull Editor editor,\n                                   @NotNull IdeScriptEngine engine)",
      "info" : "MethodDeclaration[5304-7181]:MethodDeclaration[5175-7052]"
    }, {
      "left" : "private static void selectContent(RunContentDescriptor descriptor)",
      "right" : "private static void selectContent(RunContentDescriptor descriptor)",
      "info" : "MethodDeclaration[7185-7558]:MethodDeclaration[7056-7429]"
    }, {
      "left" : "private static RunContentDescriptor getConsoleView(@NotNull Project project, @NotNull VirtualFile file, @NotNull IdeScriptEngine engine)",
      "right" : "private static RunContentDescriptor getConsoleView(@NotNull Project project, @NotNull VirtualFile file, @NotNull IdeScriptEngine engine)",
      "info" : "MethodDeclaration[7562-8283]:MethodDeclaration[7433-8174]"
    }, {
      "left" : "private static RunContentDescriptor createConsoleView(@NotNull Project project, @NotNull IdeScriptEngine engine, @NotNull PsiFile psiFile)",
      "right" : "private static RunContentDescriptor createConsoleView(@NotNull Project project, @NotNull IdeScriptEngine engine, @NotNull PsiFile psiFile)",
      "info" : "MethodDeclaration[8287-9588]:MethodDeclaration[8178-9479]"
    }, {
      "left" : "public boolean isContentReuseProhibited()",
      "right" : "public boolean isContentReuseProhibited()",
      "info" : "MethodDeclaration[9095-9183]:MethodDeclaration[8986-9074]"
    }, {
      "left" : "MyRunAction",
      "right" : "MyRunAction",
      "info" : "TypeDeclaration[9841-11109]:TypeDeclaration[9483-10751]"
    }, {
      "left" : "private IdeScriptEngine engine;",
      "right" : "private IdeScriptEngine engine;",
      "info" : "FieldDeclaration[9905-9936]:FieldDeclaration[9547-9578]"
    }, {
      "left" : "public void update(AnActionEvent e)",
      "right" : "public void update(AnActionEvent e)",
      "info" : "MethodDeclaration[9942-10307]:MethodDeclaration[9584-9949]"
    }, {
      "left" : "public void actionPerformed(AnActionEvent e)",
      "right" : "public void actionPerformed(AnActionEvent e)",
      "info" : "MethodDeclaration[10313-11105]:MethodDeclaration[9955-10747]"
    }, {
      "left" : "ScriptEngineOutputHandler",
      "right" : "ScriptEngineOutputHandler",
      "info" : "TypeDeclaration[11113-12662]:TypeDeclaration[10755-12304]"
    }, {
      "left" : "private WeakReference<RunContentDescriptor> myDescriptor;",
      "right" : "private WeakReference<RunContentDescriptor> myDescriptor;",
      "info" : "FieldDeclaration[11224-11281]:FieldDeclaration[10866-10923]"
    }, {
      "left" : "private ConsoleWriter myStdOutWriter = new ConsoleWriter(ConsoleViewContentType.NORMAL_OUTPUT);",
      "right" : "private ConsoleWriter myStdOutWriter = new ConsoleWriter(ConsoleViewContentType.NORMAL_OUTPUT);",
      "info" : "FieldDeclaration[11287-11382]:FieldDeclaration[10929-11024]"
    }, {
      "left" : "private ConsoleWriter myStdErrWriter = new ConsoleWriter(ConsoleViewContentType.ERROR_OUTPUT);",
      "right" : "private ConsoleWriter myStdErrWriter = new ConsoleWriter(ConsoleViewContentType.ERROR_OUTPUT);",
      "info" : "FieldDeclaration[11387-11481]:FieldDeclaration[11029-11123]"
    }, {
      "left" : "public ScriptEngineOutputHandler(@NotNull RunContentDescriptor descriptor)",
      "right" : "public ScriptEngineOutputHandler(@NotNull RunContentDescriptor descriptor)",
      "info" : "MethodDeclaration[11487-11643]:MethodDeclaration[11129-11285]"
    }, {
      "left" : "public void installOn(@NotNull IdeScriptEngine engine)",
      "right" : "public void installOn(@NotNull IdeScriptEngine engine)",
      "info" : "MethodDeclaration[11649-11791]:MethodDeclaration[11291-11433]"
    }, {
      "left" : "ConsoleWriter",
      "right" : "ConsoleWriter",
      "info" : "TypeDeclaration[11797-12658]:TypeDeclaration[11439-12300]"
    }, {
      "left" : "private final ConsoleViewContentType myOutputType;",
      "right" : "private final ConsoleViewContentType myOutputType;",
      "info" : "FieldDeclaration[11848-11898]:FieldDeclaration[11490-11540]"
    }, {
      "left" : "private ConsoleWriter(ConsoleViewContentType outputType)",
      "right" : "private ConsoleWriter(ConsoleViewContentType outputType)",
      "info" : "MethodDeclaration[11906-12007]:MethodDeclaration[11548-11649]"
    }, {
      "left" : "public void write(char[] cbuf, int off, int len) throws IOException",
      "right" : "public void write(char[] cbuf, int off, int len) throws IOException",
      "info" : "MethodDeclaration[12015-12508]:MethodDeclaration[11657-12150]"
    }, {
      "left" : "public void flush() throws IOException",
      "right" : "public void flush() throws IOException",
      "info" : "MethodDeclaration[12516-12580]:MethodDeclaration[12158-12222]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[12588-12652]:MethodDeclaration[12230-12294]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2624-2630]:Modifier[2539-2545]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2631-2636]:TYPE_DECLARATION_KIND[2546-2551]"
    }, {
      "left" : "RunIdeConsoleAction",
      "right" : "RunIdeConsoleAction",
      "info" : "SimpleName[2637-2656]:SimpleName[2552-2571]"
    }, {
      "left" : "DumbAwareAction",
      "right" : "DumbAwareAction",
      "info" : "SimpleType[2665-2680]:SimpleType[2580-2595]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2992-3001]:MarkerAnnotation[2863-2872]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3004-3010]:Modifier[2875-2881]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3011-3015]:PrimitiveType[2882-2886]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[3016-3022]:SimpleName[2887-2893]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[3023-3038]:SingleVariableDeclaration[2894-2909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3040-3278]:Block[2911-3149]"
    }, {
      "left" : "IdeScriptEngineManager manager = IdeScriptEngineManager.getInstance();",
      "right" : "IdeScriptEngineManager manager = IdeScriptEngineManager.getInstance();",
      "info" : "VariableDeclarationStatement[3046-3116]:VariableDeclarationStatement[2917-2987]"
    }, {
      "left" : "e.getPresentation().setVisible(e.getProject() != null);",
      "right" : "e.getPresentation().setVisible(e.getProject() != null);",
      "info" : "ExpressionStatement[3121-3176]:ExpressionStatement[2992-3047]"
    }, {
      "left" : "e.getPresentation().setEnabled(manager.isInitialized() && !manager.getLanguages().isEmpty());",
      "right" : "e.getPresentation().setEnabled(manager.isInitialized() && !manager.getLanguages().isEmpty());",
      "info" : "ExpressionStatement[3181-3274]:ExpressionStatement[3052-3145]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3282-3291]:MarkerAnnotation[3153-3162]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3294-3300]:Modifier[3165-3171]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3301-3305]:PrimitiveType[3172-3176]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[3306-3321]:SimpleName[3177-3192]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[3322-3337]:SingleVariableDeclaration[3193-3208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3339-4180]:Block[3210-4051]"
    }, {
      "left" : "List<String> languages = IdeScriptEngineManager.getInstance().getLanguages();",
      "right" : "List<String> languages = IdeScriptEngineManager.getInstance().getLanguages();",
      "info" : "VariableDeclarationStatement[3345-3422]:VariableDeclarationStatement[3216-3293]"
    }, {
      "left" : "if (languages.size() == 1)",
      "right" : "if (languages.size() == 1)",
      "info" : "IfStatement[3427-3525]:IfStatement[3298-3396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3454-3525]:Block[3325-3396]"
    }, {
      "left" : "runConsole(e, languages.iterator().next());",
      "right" : "runConsole(e, languages.iterator().next());",
      "info" : "ExpressionStatement[3462-3505]:ExpressionStatement[3333-3376]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[3512-3519]:ReturnStatement[3383-3390]"
    }, {
      "left" : "DefaultActionGroup actions = new DefaultActionGroup(\n      ContainerUtil.map(languages, new NotNullFunction<String, AnAction>() {\n        @NotNull\n        @Override\n        public AnAction fun(final String language) {\n          return new AnAction(language) {\n            @Override\n            public void actionPerformed(@NotNull AnActionEvent e) {\n              runConsole(e, language);\n            }\n          };\n        }\n      })\n    );",
      "right" : "DefaultActionGroup actions = new DefaultActionGroup(\n      ContainerUtil.map(languages, new NotNullFunction<String, AnAction>() {\n        @NotNull\n        @Override\n        public AnAction fun(final String language) {\n          return new AnAction(language) {\n            @Override\n            public void actionPerformed(@NotNull AnActionEvent e) {\n              runConsole(e, language);\n            }\n          };\n        }\n      })\n    );",
      "info" : "VariableDeclarationStatement[3531-3972]:VariableDeclarationStatement[3402-3843]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[3669-3677]:MarkerAnnotation[3540-3548]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3686-3695]:MarkerAnnotation[3557-3566]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3704-3710]:Modifier[3575-3581]"
    }, {
      "left" : "AnAction",
      "right" : "AnAction",
      "info" : "SimpleType[3711-3719]:SimpleType[3582-3590]"
    }, {
      "left" : "fun",
      "right" : "fun",
      "info" : "SimpleName[3720-3723]:SimpleName[3591-3594]"
    }, {
      "left" : "final String language",
      "right" : "final String language",
      "info" : "SingleVariableDeclaration[3724-3745]:SingleVariableDeclaration[3595-3616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3747-3956]:Block[3618-3827]"
    }, {
      "left" : "return new AnAction(language) {\n            @Override\n            public void actionPerformed(@NotNull AnActionEvent e) {\n              runConsole(e, language);\n            }\n          };",
      "right" : "return new AnAction(language) {\n            @Override\n            public void actionPerformed(@NotNull AnActionEvent e) {\n              runConsole(e, language);\n            }\n          };",
      "info" : "ReturnStatement[3759-3946]:ReturnStatement[3630-3817]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3803-3812]:MarkerAnnotation[3674-3683]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3825-3831]:Modifier[3696-3702]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3832-3836]:PrimitiveType[3703-3707]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[3837-3852]:SimpleName[3708-3723]"
    }, {
      "left" : "@NotNull AnActionEvent e",
      "right" : "@NotNull AnActionEvent e",
      "info" : "SingleVariableDeclaration[3853-3877]:SingleVariableDeclaration[3724-3748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3879-3933]:Block[3750-3804]"
    }, {
      "left" : "runConsole(e, language);",
      "right" : "runConsole(e, language);",
      "info" : "ExpressionStatement[3895-3919]:ExpressionStatement[3766-3790]"
    }, {
      "left" : "JBPopupFactory.getInstance().createActionGroupPopup(\"Script Engine\", actions, e.getDataContext(), JBPopupFactory.ActionSelectionAid.NUMBERING, false).\n      showInBestPositionFor(e.getDataContext());",
      "right" : "JBPopupFactory.getInstance().createActionGroupPopup(\"Script Engine\", actions, e.getDataContext(), JBPopupFactory.ActionSelectionAid.NUMBERING, false).\n      showInBestPositionFor(e.getDataContext());",
      "info" : "ExpressionStatement[3977-4176]:ExpressionStatement[3848-4047]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4184-4193]:Modifier[4055-4064]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4194-4198]:PrimitiveType[4065-4069]"
    }, {
      "left" : "runConsole",
      "right" : "runConsole",
      "info" : "SimpleName[4199-4209]:SimpleName[4070-4080]"
    }, {
      "left" : "@NotNull AnActionEvent e",
      "right" : "@NotNull AnActionEvent e",
      "info" : "SingleVariableDeclaration[4210-4234]:SingleVariableDeclaration[4081-4105]"
    }, {
      "left" : "@NotNull String language",
      "right" : "@NotNull String language",
      "info" : "SingleVariableDeclaration[4236-4260]:SingleVariableDeclaration[4107-4131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4262-4869]:Block[4133-4740]"
    }, {
      "left" : "Project project = e.getProject();",
      "right" : "Project project = e.getProject();",
      "info" : "VariableDeclarationStatement[4268-4301]:VariableDeclarationStatement[4139-4172]"
    }, {
      "left" : "if (project == null)",
      "right" : "if (project == null)",
      "info" : "IfStatement[4306-4334]:IfStatement[4177-4205]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4327-4334]:ReturnStatement[4198-4205]"
    }, {
      "left" : "List<String> extensions = IdeScriptEngineManager.getInstance().getFileExtensions(language);",
      "right" : "List<String> extensions = IdeScriptEngineManager.getInstance().getFileExtensions(language);",
      "info" : "VariableDeclarationStatement[4340-4431]:VariableDeclarationStatement[4211-4302]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4436-4865]:TryStatement[4307-4736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4440-4809]:Block[4311-4680]"
    }, {
      "left" : "String pathName = PathUtil.makeFileName(DEFAULT_FILE_NAME, ContainerUtil.getFirstItem(extensions));",
      "right" : "String pathName = PathUtil.makeFileName(DEFAULT_FILE_NAME, ContainerUtil.getFirstItem(extensions));",
      "info" : "VariableDeclarationStatement[4448-4547]:VariableDeclarationStatement[4319-4418]"
    }, {
      "left" : "VirtualFile virtualFile = IdeConsoleRootType.getInstance().findFile(project, pathName, ScratchFileService.Option.create_if_missing);",
      "right" : "VirtualFile virtualFile = IdeConsoleRootType.getInstance().findFile(project, pathName, ScratchFileService.Option.create_if_missing);",
      "info" : "VariableDeclarationStatement[4554-4686]:VariableDeclarationStatement[4425-4557]"
    }, {
      "left" : "if (virtualFile != null)",
      "right" : "if (virtualFile != null)",
      "info" : "IfStatement[4693-4803]:IfStatement[4564-4674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4718-4803]:Block[4589-4674]"
    }, {
      "left" : "FileEditorManager.getInstance(project).openFile(virtualFile, true);",
      "right" : "FileEditorManager.getInstance(project).openFile(virtualFile, true);",
      "info" : "ExpressionStatement[4728-4795]:ExpressionStatement[4599-4666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4837-4865]:Block[4708-4736]"
    }, {
      "left" : "LOG.error(ex);",
      "right" : "LOG.error(ex);",
      "info" : "ExpressionStatement[4845-4859]:ExpressionStatement[4716-4730]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4873-4879]:Modifier[4744-4750]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4880-4886]:Modifier[4751-4757]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4887-4891]:PrimitiveType[4758-4762]"
    }, {
      "left" : "configureConsole",
      "right" : "configureConsole",
      "info" : "SimpleName[4892-4908]:SimpleName[4763-4779]"
    }, {
      "left" : "@NotNull VirtualFile file",
      "right" : "@NotNull VirtualFile file",
      "info" : "SingleVariableDeclaration[4909-4934]:SingleVariableDeclaration[4780-4805]"
    }, {
      "left" : "@NotNull FileEditorManager source",
      "right" : "@NotNull FileEditorManager source",
      "info" : "SingleVariableDeclaration[4936-4969]:SingleVariableDeclaration[4807-4840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4971-5300]:Block[4842-5171]"
    }, {
      "left" : "MyRunAction runAction = new MyRunAction();",
      "right" : "MyRunAction runAction = new MyRunAction();",
      "info" : "VariableDeclarationStatement[4977-5019]:VariableDeclarationStatement[4848-4890]"
    }, {
      "left" : "for (FileEditor fileEditor : source.getEditors(file))",
      "right" : "for (FileEditor fileEditor : source.getEditors(file))",
      "info" : "EnhancedForStatement[5024-5296]:EnhancedForStatement[4895-5167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5078-5296]:Block[4949-5167]"
    }, {
      "left" : "if (!(fileEditor instanceof TextEditor))",
      "right" : "if (!(fileEditor instanceof TextEditor))",
      "info" : "IfStatement[5086-5136]:IfStatement[4957-5007]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[5127-5136]:ContinueStatement[4998-5007]"
    }, {
      "left" : "Editor editor = ((TextEditor)fileEditor).getEditor();",
      "right" : "Editor editor = ((TextEditor)fileEditor).getEditor();",
      "info" : "VariableDeclarationStatement[5143-5196]:VariableDeclarationStatement[5014-5067]"
    }, {
      "left" : "runAction.registerCustomShortcutSet(CommonShortcuts.CTRL_ENTER, editor.getComponent());",
      "right" : "runAction.registerCustomShortcutSet(CommonShortcuts.CTRL_ENTER, editor.getComponent());",
      "info" : "ExpressionStatement[5203-5290]:ExpressionStatement[5074-5161]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[5304-5311]:Modifier[5175-5182]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5312-5318]:Modifier[5183-5189]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5319-5323]:PrimitiveType[5190-5194]"
    }, {
      "left" : "executeQuery",
      "right" : "executeQuery",
      "info" : "SimpleName[5324-5336]:SimpleName[5195-5207]"
    }, {
      "left" : "@NotNull Project project",
      "right" : "@NotNull Project project",
      "info" : "SingleVariableDeclaration[5337-5361]:SingleVariableDeclaration[5208-5232]"
    }, {
      "left" : "@NotNull VirtualFile file",
      "right" : "@NotNull VirtualFile file",
      "info" : "SingleVariableDeclaration[5398-5423]:SingleVariableDeclaration[5269-5294]"
    }, {
      "left" : "@NotNull Editor editor",
      "right" : "@NotNull Editor editor",
      "info" : "SingleVariableDeclaration[5460-5482]:SingleVariableDeclaration[5331-5353]"
    }, {
      "left" : "@NotNull IdeScriptEngine engine",
      "right" : "@NotNull IdeScriptEngine engine",
      "info" : "SingleVariableDeclaration[5519-5550]:SingleVariableDeclaration[5390-5421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5552-7181]:Block[5423-7052]"
    }, {
      "left" : "TextRange selectedRange = EditorUtil.getSelectionInAnyMode(editor);",
      "right" : "TextRange selectedRange = EditorUtil.getSelectionInAnyMode(editor);",
      "info" : "VariableDeclarationStatement[5558-5625]:VariableDeclarationStatement[5429-5496]"
    }, {
      "left" : "Document document = editor.getDocument();",
      "right" : "Document document = editor.getDocument();",
      "info" : "VariableDeclarationStatement[5630-5671]:VariableDeclarationStatement[5501-5542]"
    }, {
      "left" : "if (selectedRange.getLength() == 0)",
      "right" : "if (selectedRange.getLength() == 0)",
      "info" : "IfStatement[5676-5900]:IfStatement[5547-5771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5712-5900]:Block[5583-5771]"
    }, {
      "left" : "int line = document.getLineNumber(selectedRange.getStartOffset());",
      "right" : "int line = document.getLineNumber(selectedRange.getStartOffset());",
      "info" : "VariableDeclarationStatement[5720-5786]:VariableDeclarationStatement[5591-5657]"
    }, {
      "left" : "selectedRange = TextRange.create(document.getLineStartOffset(line), document.getLineEndOffset(line));",
      "right" : "selectedRange = TextRange.create(document.getLineStartOffset(line), document.getLineEndOffset(line));",
      "info" : "ExpressionStatement[5793-5894]:ExpressionStatement[5664-5765]"
    }, {
      "left" : "VirtualFile profileChild = file.getParent().findChild(\".profile.\" + file.getExtension());",
      "right" : "VirtualFile profileChild = file.getParent().findChild(\".profile.\" + file.getExtension());",
      "info" : "VariableDeclarationStatement[5905-5994]:VariableDeclarationStatement[5776-5865]"
    }, {
      "left" : "String profile = null;",
      "right" : "String profile = null;",
      "info" : "VariableDeclarationStatement[5999-6021]:VariableDeclarationStatement[5870-5892]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6026-6157]:TryStatement[5897-6028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6030-6117]:Block[5901-5988]"
    }, {
      "left" : "profile = profileChild == null ? \"\" : VfsUtilCore.loadText(profileChild);",
      "right" : "profile = profileChild == null ? \"\" : VfsUtilCore.loadText(profileChild);",
      "info" : "ExpressionStatement[6038-6111]:ExpressionStatement[5909-5982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6150-6157]:Block[6021-6028]"
    }, {
      "left" : "String command = document.getText(selectedRange);",
      "right" : "String command = document.getText(selectedRange);",
      "info" : "VariableDeclarationStatement[6162-6211]:VariableDeclarationStatement[6033-6082]"
    }, {
      "left" : "RunContentDescriptor descriptor = getConsoleView(project, file, engine);",
      "right" : "RunContentDescriptor descriptor = getConsoleView(project, file, engine);",
      "info" : "VariableDeclarationStatement[6216-6288]:VariableDeclarationStatement[6087-6159]"
    }, {
      "left" : "ConsoleViewImpl consoleView = (ConsoleViewImpl)descriptor.getExecutionConsole();",
      "right" : "ConsoleViewImpl consoleView = (ConsoleViewImpl)descriptor.getExecutionConsole();",
      "info" : "VariableDeclarationStatement[6293-6373]:VariableDeclarationStatement[6164-6244]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6378-7146]:TryStatement[6249-7017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6382-6820]:Block[6253-6691]"
    }, {
      "left" : "consoleView.print(\"> \" + command, ConsoleViewContentType.USER_INPUT);",
      "right" : "consoleView.print(\"> \" + command, ConsoleViewContentType.USER_INPUT);",
      "info" : "ExpressionStatement[6452-6521]:ExpressionStatement[6323-6392]"
    }, {
      "left" : "consoleView.print(\"\\n\", ConsoleViewContentType.USER_INPUT);",
      "right" : "consoleView.print(\"\\n\", ConsoleViewContentType.USER_INPUT);",
      "info" : "ExpressionStatement[6528-6587]:ExpressionStatement[6399-6458]"
    }, {
      "left" : "Object o = engine.eval(profile == null ? command : profile + \"\\n\" + command);",
      "right" : "Object o = engine.eval(profile == null ? command : profile + \"\\n\" + command);",
      "info" : "VariableDeclarationStatement[6594-6671]:VariableDeclarationStatement[6465-6542]"
    }, {
      "left" : "consoleView.print(\"=> \" + o, ConsoleViewContentType.NORMAL_OUTPUT);",
      "right" : "consoleView.print(\"=> \" + o, ConsoleViewContentType.NORMAL_OUTPUT);",
      "info" : "ExpressionStatement[6678-6745]:ExpressionStatement[6549-6616]"
    }, {
      "left" : "consoleView.print(\"\\n\", ConsoleViewContentType.NORMAL_OUTPUT);",
      "right" : "consoleView.print(\"\\n\", ConsoleViewContentType.NORMAL_OUTPUT);",
      "info" : "ExpressionStatement[6752-6814]:ExpressionStatement[6623-6685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6845-7146]:Block[6716-7017]"
    }, {
      "left" : "Throwable ex = ExceptionUtil.getRootCause(e);",
      "right" : "Throwable ex = ExceptionUtil.getRootCause(e);",
      "info" : "VariableDeclarationStatement[6909-6954]:VariableDeclarationStatement[6780-6825]"
    }, {
      "left" : "consoleView.print(ex.getClass().getSimpleName() + \": \" + ex.getMessage(), ConsoleViewContentType.ERROR_OUTPUT);",
      "right" : "consoleView.print(ex.getClass().getSimpleName() + \": \" + ex.getMessage(), ConsoleViewContentType.ERROR_OUTPUT);",
      "info" : "ExpressionStatement[6961-7072]:ExpressionStatement[6832-6943]"
    }, {
      "left" : "consoleView.print(\"\\n\", ConsoleViewContentType.ERROR_OUTPUT);",
      "right" : "consoleView.print(\"\\n\", ConsoleViewContentType.ERROR_OUTPUT);",
      "info" : "ExpressionStatement[7079-7140]:ExpressionStatement[6950-7011]"
    }, {
      "left" : "selectContent(descriptor);",
      "right" : "selectContent(descriptor);",
      "info" : "ExpressionStatement[7151-7177]:ExpressionStatement[7022-7048]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[7185-7192]:Modifier[7056-7063]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7193-7199]:Modifier[7064-7070]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7200-7204]:PrimitiveType[7071-7075]"
    }, {
      "left" : "selectContent",
      "right" : "selectContent",
      "info" : "SimpleName[7205-7218]:SimpleName[7076-7089]"
    }, {
      "left" : "RunContentDescriptor descriptor",
      "right" : "RunContentDescriptor descriptor",
      "info" : "SingleVariableDeclaration[7219-7250]:SingleVariableDeclaration[7090-7121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7252-7558]:Block[7123-7429]"
    }, {
      "left" : "Executor executor = DefaultRunExecutor.getRunExecutorInstance();",
      "right" : "Executor executor = DefaultRunExecutor.getRunExecutorInstance();",
      "info" : "VariableDeclarationStatement[7258-7322]:VariableDeclarationStatement[7129-7193]"
    }, {
      "left" : "ConsoleViewImpl consoleView = ObjectUtils.assertNotNull((ConsoleViewImpl)descriptor.getExecutionConsole());",
      "right" : "ConsoleViewImpl consoleView = ObjectUtils.assertNotNull((ConsoleViewImpl)descriptor.getExecutionConsole());",
      "info" : "VariableDeclarationStatement[7327-7434]:VariableDeclarationStatement[7198-7305]"
    }, {
      "left" : "ExecutionManager.getInstance(consoleView.getProject()).getContentManager().toFrontRunContent(executor, descriptor);",
      "right" : "ExecutionManager.getInstance(consoleView.getProject()).getContentManager().toFrontRunContent(executor, descriptor);",
      "info" : "ExpressionStatement[7439-7554]:ExpressionStatement[7310-7425]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[7562-7570]:MarkerAnnotation[7433-7441]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[7573-7580]:Modifier[7444-7451]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7581-7587]:Modifier[7452-7458]"
    }, {
      "left" : "RunContentDescriptor",
      "right" : "RunContentDescriptor",
      "info" : "SimpleType[7588-7608]:SimpleType[7459-7479]"
    }, {
      "left" : "getConsoleView",
      "right" : "getConsoleView",
      "info" : "SimpleName[7609-7623]:SimpleName[7480-7494]"
    }, {
      "left" : "@NotNull Project project",
      "right" : "@NotNull Project project",
      "info" : "SingleVariableDeclaration[7624-7648]:SingleVariableDeclaration[7495-7519]"
    }, {
      "left" : "@NotNull VirtualFile file",
      "right" : "@NotNull VirtualFile file",
      "info" : "SingleVariableDeclaration[7650-7675]:SingleVariableDeclaration[7521-7546]"
    }, {
      "left" : "@NotNull IdeScriptEngine engine",
      "right" : "@NotNull IdeScriptEngine engine",
      "info" : "SingleVariableDeclaration[7677-7708]:SingleVariableDeclaration[7548-7579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7710-8283]:Block[7581-8174]"
    }, {
      "left" : "PsiFile psiFile = ObjectUtils.assertNotNull(PsiManager.getInstance(project).findFile(file));",
      "right" : "PsiFile psiFile = ObjectUtils.assertNotNull(PsiManager.getInstance(project).findFile(file));",
      "info" : "VariableDeclarationStatement[7716-7808]:VariableDeclarationStatement[7587-7679]"
    }, {
      "left" : "WeakReference<RunContentDescriptor> ref = psiFile.getCopyableUserData(DESCRIPTOR_KEY);",
      "right" : "WeakReference<RunContentDescriptor> ref = psiFile.getCopyableUserData(DESCRIPTOR_KEY);",
      "info" : "VariableDeclarationStatement[7814-7900]:VariableDeclarationStatement[7685-7771]"
    }, {
      "left" : "RunContentDescriptor descriptor = ref == null ? null : ref.get();",
      "right" : "RunContentDescriptor descriptor = ref == null ? null : ref.get();",
      "info" : "VariableDeclarationStatement[7905-7970]:VariableDeclarationStatement[7776-7841]"
    }, {
      "left" : "if (descriptor == null || descriptor.getExecutionConsole() == null)",
      "right" : "if (descriptor == null || descriptor.getExecutionConsole() == null)",
      "info" : "IfStatement[7975-8218]:IfStatement[7846-8089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8043-8218]:Block[7914-8089]"
    }, {
      "left" : "descriptor = createConsoleView(project, engine, psiFile);",
      "right" : "descriptor = createConsoleView(project, engine, psiFile);",
      "info" : "ExpressionStatement[8051-8108]:ExpressionStatement[7922-7979]"
    }, {
      "left" : "psiFile.putCopyableUserData(DESCRIPTOR_KEY, new WeakReference<RunContentDescriptor>(descriptor));",
      "right" : "psiFile.putCopyableUserData(DESCRIPTOR_KEY, new WeakReference<RunContentDescriptor>(descriptor));",
      "info" : "ExpressionStatement[8115-8212]:ExpressionStatement[7986-8083]"
    }, {
      "left" : "ensureIdeBound(project, engine);",
      "right" : "IdeScriptBindings.ensureIdeIsBound(project, engine);",
      "info" : "ExpressionStatement[8223-8255]:ExpressionStatement[8094-8146]"
    }, {
      "left" : "ensureIdeBound",
      "right" : "ensureIdeIsBound",
      "info" : "SimpleName[8223-8237]:SimpleName[8112-8128]"
    }, {
      "left" : "return descriptor;",
      "right" : "return descriptor;",
      "info" : "ReturnStatement[8261-8279]:ReturnStatement[8152-8170]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[8287-8295]:MarkerAnnotation[8178-8186]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8298-8305]:Modifier[8189-8196]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8306-8312]:Modifier[8197-8203]"
    }, {
      "left" : "RunContentDescriptor",
      "right" : "RunContentDescriptor",
      "info" : "SimpleType[8313-8333]:SimpleType[8204-8224]"
    }, {
      "left" : "createConsoleView",
      "right" : "createConsoleView",
      "info" : "SimpleName[8334-8351]:SimpleName[8225-8242]"
    }, {
      "left" : "@NotNull Project project",
      "right" : "@NotNull Project project",
      "info" : "SingleVariableDeclaration[8352-8376]:SingleVariableDeclaration[8243-8267]"
    }, {
      "left" : "@NotNull IdeScriptEngine engine",
      "right" : "@NotNull IdeScriptEngine engine",
      "info" : "SingleVariableDeclaration[8378-8409]:SingleVariableDeclaration[8269-8300]"
    }, {
      "left" : "@NotNull PsiFile psiFile",
      "right" : "@NotNull PsiFile psiFile",
      "info" : "SingleVariableDeclaration[8411-8435]:SingleVariableDeclaration[8302-8326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8437-9588]:Block[8328-9479]"
    }, {
      "left" : "ConsoleView consoleView = TextConsoleBuilderFactory.getInstance().createBuilder(project).getConsole();",
      "right" : "ConsoleView consoleView = TextConsoleBuilderFactory.getInstance().createBuilder(project).getConsole();",
      "info" : "VariableDeclarationStatement[8443-8545]:VariableDeclarationStatement[8334-8436]"
    }, {
      "left" : "DefaultActionGroup toolbarActions = new DefaultActionGroup();",
      "right" : "DefaultActionGroup toolbarActions = new DefaultActionGroup();",
      "info" : "VariableDeclarationStatement[8551-8612]:VariableDeclarationStatement[8442-8503]"
    }, {
      "left" : "JComponent panel = new JPanel(new BorderLayout());",
      "right" : "JComponent panel = new JPanel(new BorderLayout());",
      "info" : "VariableDeclarationStatement[8617-8667]:VariableDeclarationStatement[8508-8558]"
    }, {
      "left" : "panel.add(consoleView.getComponent(), BorderLayout.CENTER);",
      "right" : "panel.add(consoleView.getComponent(), BorderLayout.CENTER);",
      "info" : "ExpressionStatement[8672-8731]:ExpressionStatement[8563-8622]"
    }, {
      "left" : "ActionToolbar toolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, toolbarActions, false);",
      "right" : "ActionToolbar toolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, toolbarActions, false);",
      "info" : "VariableDeclarationStatement[8736-8853]:VariableDeclarationStatement[8627-8744]"
    }, {
      "left" : "toolbar.setTargetComponent(consoleView.getComponent());",
      "right" : "toolbar.setTargetComponent(consoleView.getComponent());",
      "info" : "ExpressionStatement[8858-8913]:ExpressionStatement[8749-8804]"
    }, {
      "left" : "panel.add(toolbar.getComponent(), BorderLayout.WEST);",
      "right" : "panel.add(toolbar.getComponent(), BorderLayout.WEST);",
      "info" : "ExpressionStatement[8918-8971]:ExpressionStatement[8809-8862]"
    }, {
      "left" : "final RunContentDescriptor descriptor = new RunContentDescriptor(consoleView, null, panel, psiFile.getName()) {\n      @Override\n      public boolean isContentReuseProhibited() {\n        return true;\n      }\n    };",
      "right" : "final RunContentDescriptor descriptor = new RunContentDescriptor(consoleView, null, panel, psiFile.getName()) {\n      @Override\n      public boolean isContentReuseProhibited() {\n        return true;\n      }\n    };",
      "info" : "VariableDeclarationStatement[8977-9190]:VariableDeclarationStatement[8868-9081]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9095-9104]:MarkerAnnotation[8986-8995]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9111-9117]:Modifier[9002-9008]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9118-9125]:PrimitiveType[9009-9016]"
    }, {
      "left" : "isContentReuseProhibited",
      "right" : "isContentReuseProhibited",
      "info" : "SimpleName[9126-9150]:SimpleName[9017-9041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9153-9183]:Block[9044-9074]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9163-9175]:ReturnStatement[9054-9066]"
    }, {
      "left" : "Executor executor = DefaultRunExecutor.getRunExecutorInstance();",
      "right" : "Executor executor = DefaultRunExecutor.getRunExecutorInstance();",
      "info" : "VariableDeclarationStatement[9195-9259]:VariableDeclarationStatement[9086-9150]"
    }, {
      "left" : "toolbarActions.addAll(consoleView.createConsoleActions());",
      "right" : "toolbarActions.addAll(consoleView.createConsoleActions());",
      "info" : "ExpressionStatement[9264-9322]:ExpressionStatement[9155-9213]"
    }, {
      "left" : "toolbarActions.add(new CloseAction(executor, descriptor, project));",
      "right" : "toolbarActions.add(new CloseAction(executor, descriptor, project));",
      "info" : "ExpressionStatement[9327-9394]:ExpressionStatement[9218-9285]"
    }, {
      "left" : "ExecutionManager.getInstance(project).getContentManager().showRunContent(executor, descriptor);",
      "right" : "ExecutionManager.getInstance(project).getContentManager().showRunContent(executor, descriptor);",
      "info" : "ExpressionStatement[9399-9494]:ExpressionStatement[9290-9385]"
    }, {
      "left" : "new ScriptEngineOutputHandler(descriptor).installOn(engine);",
      "right" : "new ScriptEngineOutputHandler(descriptor).installOn(engine);",
      "info" : "ExpressionStatement[9500-9560]:ExpressionStatement[9391-9451]"
    }, {
      "left" : "return descriptor;",
      "right" : "return descriptor;",
      "info" : "ReturnStatement[9566-9584]:ReturnStatement[9457-9475]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[9841-9848]:Modifier[9483-9490]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9849-9855]:Modifier[9491-9497]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[9856-9861]:TYPE_DECLARATION_KIND[9498-9503]"
    }, {
      "left" : "MyRunAction",
      "right" : "MyRunAction",
      "info" : "SimpleName[9862-9873]:SimpleName[9504-9515]"
    }, {
      "left" : "DumbAwareAction",
      "right" : "DumbAwareAction",
      "info" : "SimpleType[9882-9897]:SimpleType[9524-9539]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9942-9951]:MarkerAnnotation[9584-9593]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9956-9962]:Modifier[9598-9604]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9963-9967]:PrimitiveType[9605-9609]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[9968-9974]:SimpleName[9610-9616]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[9975-9990]:SingleVariableDeclaration[9617-9632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9992-10307]:Block[9634-9949]"
    }, {
      "left" : "Project project = e.getProject();",
      "right" : "Project project = e.getProject();",
      "info" : "VariableDeclarationStatement[10000-10033]:VariableDeclarationStatement[9642-9675]"
    }, {
      "left" : "Editor editor = CommonDataKeys.EDITOR.getData(e.getDataContext());",
      "right" : "Editor editor = CommonDataKeys.EDITOR.getData(e.getDataContext());",
      "info" : "VariableDeclarationStatement[10040-10106]:VariableDeclarationStatement[9682-9748]"
    }, {
      "left" : "VirtualFile virtualFile = CommonDataKeys.VIRTUAL_FILE.getData(e.getDataContext());",
      "right" : "VirtualFile virtualFile = CommonDataKeys.VIRTUAL_FILE.getData(e.getDataContext());",
      "info" : "VariableDeclarationStatement[10113-10195]:VariableDeclarationStatement[9755-9837]"
    }, {
      "left" : "e.getPresentation().setEnabledAndVisible(project != null && editor != null && virtualFile != null);",
      "right" : "e.getPresentation().setEnabledAndVisible(project != null && editor != null && virtualFile != null);",
      "info" : "ExpressionStatement[10202-10301]:ExpressionStatement[9844-9943]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10313-10322]:MarkerAnnotation[9955-9964]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10327-10333]:Modifier[9969-9975]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10334-10338]:PrimitiveType[9976-9980]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[10339-10354]:SimpleName[9981-9996]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[10355-10370]:SingleVariableDeclaration[9997-10012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10372-11105]:Block[10014-10747]"
    }, {
      "left" : "Project project = e.getProject();",
      "right" : "Project project = e.getProject();",
      "info" : "VariableDeclarationStatement[10380-10413]:VariableDeclarationStatement[10022-10055]"
    }, {
      "left" : "Editor editor = CommonDataKeys.EDITOR.getData(e.getDataContext());",
      "right" : "Editor editor = CommonDataKeys.EDITOR.getData(e.getDataContext());",
      "info" : "VariableDeclarationStatement[10420-10486]:VariableDeclarationStatement[10062-10128]"
    }, {
      "left" : "VirtualFile virtualFile = CommonDataKeys.VIRTUAL_FILE.getData(e.getDataContext());",
      "right" : "VirtualFile virtualFile = CommonDataKeys.VIRTUAL_FILE.getData(e.getDataContext());",
      "info" : "VariableDeclarationStatement[10493-10575]:VariableDeclarationStatement[10135-10217]"
    }, {
      "left" : "if (project == null || editor == null || virtualFile == null)",
      "right" : "if (project == null || editor == null || virtualFile == null)",
      "info" : "IfStatement[10582-10651]:IfStatement[10224-10293]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[10644-10651]:ReturnStatement[10286-10293]"
    }, {
      "left" : "String extension = virtualFile.getExtension();",
      "right" : "String extension = virtualFile.getExtension();",
      "info" : "VariableDeclarationStatement[10659-10705]:VariableDeclarationStatement[10301-10347]"
    }, {
      "left" : "if (extension != null && (engine == null || !engine.getFileExtensions().contains(extension)))",
      "right" : "if (extension != null && (engine == null || !engine.getFileExtensions().contains(extension)))",
      "info" : "IfStatement[10712-10907]:IfStatement[10354-10549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10806-10907]:Block[10448-10549]"
    }, {
      "left" : "engine = IdeScriptEngineManager.getInstance().getEngineForFileExtension(extension);",
      "right" : "engine = IdeScriptEngineManager.getInstance().getEngineForFileExtension(extension);",
      "info" : "ExpressionStatement[10816-10899]:ExpressionStatement[10458-10541]"
    }, {
      "left" : "if (engine == null)",
      "right" : "if (engine == null)",
      "info" : "IfStatement[10914-11099]:IfStatement[10556-10741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10934-11018]:Block[10576-10660]"
    }, {
      "left" : "LOG.warn(\"Script engine not found for: \" + virtualFile.getName());",
      "right" : "LOG.warn(\"Script engine not found for: \" + virtualFile.getName());",
      "info" : "ExpressionStatement[10944-11010]:ExpressionStatement[10586-10652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11030-11099]:Block[10672-10741]"
    }, {
      "left" : "executeQuery(project, virtualFile, editor, engine);",
      "right" : "executeQuery(project, virtualFile, editor, engine);",
      "info" : "ExpressionStatement[11040-11091]:ExpressionStatement[10682-10733]"
    }, {
      "left" : "@SuppressWarnings(\"IOResourceOpenedButNotSafelyClosed\")",
      "right" : "@SuppressWarnings(\"IOResourceOpenedButNotSafelyClosed\")",
      "info" : "SingleMemberAnnotation[11113-11168]:SingleMemberAnnotation[10755-10810]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11171-11178]:Modifier[10813-10820]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11179-11185]:Modifier[10821-10827]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[11186-11191]:TYPE_DECLARATION_KIND[10828-10833]"
    }, {
      "left" : "ScriptEngineOutputHandler",
      "right" : "ScriptEngineOutputHandler",
      "info" : "SimpleName[11192-11217]:SimpleName[10834-10859]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11487-11493]:Modifier[11129-11135]"
    }, {
      "left" : "ScriptEngineOutputHandler",
      "right" : "ScriptEngineOutputHandler",
      "info" : "SimpleName[11494-11519]:SimpleName[11136-11161]"
    }, {
      "left" : "@NotNull RunContentDescriptor descriptor",
      "right" : "@NotNull RunContentDescriptor descriptor",
      "info" : "SingleVariableDeclaration[11520-11560]:SingleVariableDeclaration[11162-11202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11562-11643]:Block[11204-11285]"
    }, {
      "left" : "myDescriptor = new WeakReference<RunContentDescriptor>(descriptor);",
      "right" : "myDescriptor = new WeakReference<RunContentDescriptor>(descriptor);",
      "info" : "ExpressionStatement[11570-11637]:ExpressionStatement[11212-11279]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11649-11655]:Modifier[11291-11297]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11656-11660]:PrimitiveType[11298-11302]"
    }, {
      "left" : "installOn",
      "right" : "installOn",
      "info" : "SimpleName[11661-11670]:SimpleName[11303-11312]"
    }, {
      "left" : "@NotNull IdeScriptEngine engine",
      "right" : "@NotNull IdeScriptEngine engine",
      "info" : "SingleVariableDeclaration[11671-11702]:SingleVariableDeclaration[11313-11344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11704-11791]:Block[11346-11433]"
    }, {
      "left" : "engine.setStdOut(myStdOutWriter);",
      "right" : "engine.setStdOut(myStdOutWriter);",
      "info" : "ExpressionStatement[11712-11745]:ExpressionStatement[11354-11387]"
    }, {
      "left" : "engine.setStdErr(myStdErrWriter);",
      "right" : "engine.setStdErr(myStdErrWriter);",
      "info" : "ExpressionStatement[11752-11785]:ExpressionStatement[11394-11427]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11797-11804]:Modifier[11439-11446]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[11805-11810]:TYPE_DECLARATION_KIND[11447-11452]"
    }, {
      "left" : "ConsoleWriter",
      "right" : "ConsoleWriter",
      "info" : "SimpleName[11811-11824]:SimpleName[11453-11466]"
    }, {
      "left" : "Writer",
      "right" : "Writer",
      "info" : "SimpleType[11833-11839]:SimpleType[11475-11481]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11906-11913]:Modifier[11548-11555]"
    }, {
      "left" : "ConsoleWriter",
      "right" : "ConsoleWriter",
      "info" : "SimpleName[11914-11927]:SimpleName[11556-11569]"
    }, {
      "left" : "ConsoleViewContentType outputType",
      "right" : "ConsoleViewContentType outputType",
      "info" : "SingleVariableDeclaration[11928-11961]:SingleVariableDeclaration[11570-11603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11963-12007]:Block[11605-11649]"
    }, {
      "left" : "myOutputType = outputType;",
      "right" : "myOutputType = outputType;",
      "info" : "ExpressionStatement[11973-11999]:ExpressionStatement[11615-11641]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12015-12024]:MarkerAnnotation[11657-11666]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12031-12037]:Modifier[11673-11679]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12038-12042]:PrimitiveType[11680-11684]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[12043-12048]:SimpleName[11685-11690]"
    }, {
      "left" : "char[] cbuf",
      "right" : "char[] cbuf",
      "info" : "SingleVariableDeclaration[12049-12060]:SingleVariableDeclaration[11691-11702]"
    }, {
      "left" : "int off",
      "right" : "int off",
      "info" : "SingleVariableDeclaration[12062-12069]:SingleVariableDeclaration[11704-11711]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[12071-12078]:SingleVariableDeclaration[11713-11720]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[12087-12098]:SimpleType[11729-11740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12099-12508]:Block[11741-12150]"
    }, {
      "left" : "RunContentDescriptor descriptor = myDescriptor.get();",
      "right" : "RunContentDescriptor descriptor = myDescriptor.get();",
      "info" : "VariableDeclarationStatement[12109-12162]:VariableDeclarationStatement[11751-11804]"
    }, {
      "left" : "ConsoleViewImpl console = ObjectUtils.tryCast(descriptor != null ? descriptor.getExecutionConsole() : null, ConsoleViewImpl.class);",
      "right" : "ConsoleViewImpl console = ObjectUtils.tryCast(descriptor != null ? descriptor.getExecutionConsole() : null, ConsoleViewImpl.class);",
      "info" : "VariableDeclarationStatement[12171-12302]:VariableDeclarationStatement[11813-11944]"
    }, {
      "left" : "if (console == null)",
      "right" : "if (console == null)",
      "info" : "IfStatement[12311-12435]:IfStatement[11953-12077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12332-12435]:Block[11974-12077]"
    }, {
      "left" : "throw new IOException(\"The console is not available.\");",
      "right" : "throw new IOException(\"The console is not available.\");",
      "info" : "ThrowStatement[12370-12425]:ThrowStatement[12012-12067]"
    }, {
      "left" : "console.print(new String(cbuf, off, len), myOutputType);",
      "right" : "console.print(new String(cbuf, off, len), myOutputType);",
      "info" : "ExpressionStatement[12444-12500]:ExpressionStatement[12086-12142]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12516-12525]:MarkerAnnotation[12158-12167]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12532-12538]:Modifier[12174-12180]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12539-12543]:PrimitiveType[12181-12185]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[12544-12549]:SimpleName[12186-12191]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[12559-12570]:SimpleType[12201-12212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12571-12580]:Block[12213-12222]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12588-12597]:MarkerAnnotation[12230-12239]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12604-12610]:Modifier[12246-12252]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12611-12615]:PrimitiveType[12253-12257]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[12616-12621]:SimpleName[12258-12263]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[12631-12642]:SimpleType[12273-12284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12643-12652]:Block[12285-12294]"
    } ]
  },
  "interFileMappings" : { }
}