{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DefaultIntervalCategoryDataset",
      "right" : "DefaultIntervalCategoryDataset",
      "info" : "TypeDeclaration[2331-27490]:TypeDeclaration[2331-27510]"
    }, {
      "left" : "private Comparable[] seriesKeys;",
      "right" : "private Comparable[] seriesKeys;",
      "info" : "FieldDeclaration[2749-2810]:FieldDeclaration[2749-2810]"
    }, {
      "left" : "private Comparable[] categoryKeys;",
      "right" : "private Comparable[] categoryKeys;",
      "info" : "FieldDeclaration[2818-2883]:FieldDeclaration[2818-2883]"
    }, {
      "left" : "private Number[][] startData;",
      "right" : "private Number[][] startData;",
      "info" : "FieldDeclaration[2891-2966]:FieldDeclaration[2891-2966]"
    }, {
      "left" : "private Number[][] endData;",
      "right" : "private Number[][] endData;",
      "info" : "FieldDeclaration[2974-3045]:FieldDeclaration[2974-3045]"
    }, {
      "left" : "public DefaultIntervalCategoryDataset(double[][] starts, double[][] ends)",
      "right" : "public DefaultIntervalCategoryDataset(double[][] starts, double[][] ends)",
      "info" : "MethodDeclaration[3053-3635]:MethodDeclaration[3053-3635]"
    }, {
      "left" : "public DefaultIntervalCategoryDataset(Number[][] starts, Number[][] ends)",
      "right" : "public DefaultIntervalCategoryDataset(Number[][] starts, Number[][] ends)",
      "info" : "MethodDeclaration[3643-4223]:MethodDeclaration[3643-4223]"
    }, {
      "left" : "public DefaultIntervalCategoryDataset(String[] seriesNames,\r\n                                          Number[][] starts,\r\n                                          Number[][] ends)",
      "right" : "public DefaultIntervalCategoryDataset(String[] seriesNames,\r\n                                          Number[][] starts,\r\n                                          Number[][] ends)",
      "info" : "MethodDeclaration[4231-5039]:MethodDeclaration[4231-5039]"
    }, {
      "left" : "public DefaultIntervalCategoryDataset(Comparable[] seriesKeys,\r\n                                          Comparable[] categoryKeys,\r\n                                          Number[][] starts,\r\n                                          Number[][] ends)",
      "right" : "public DefaultIntervalCategoryDataset(Comparable[] seriesKeys,\r\n                                          Comparable[] categoryKeys,\r\n                                          Number[][] starts,\r\n                                          Number[][] ends)",
      "info" : "MethodDeclaration[5047-8754]:MethodDeclaration[5047-8780]"
    }, {
      "left" : "public int getSeriesCount()",
      "right" : "public int getSeriesCount()",
      "info" : "MethodDeclaration[8762-9160]:MethodDeclaration[8788-9186]"
    }, {
      "left" : "public int getSeriesIndex(Comparable seriesKey)",
      "right" : "public int getSeriesIndex(Comparable seriesKey)",
      "info" : "MethodDeclaration[9168-9691]:MethodDeclaration[9194-9717]"
    }, {
      "left" : "public Comparable getSeriesKey(int series)",
      "right" : "public Comparable getSeriesKey(int series)",
      "info" : "MethodDeclaration[9699-10196]:MethodDeclaration[9725-10222]"
    }, {
      "left" : "public void setSeriesKeys(Comparable[] seriesKeys)",
      "right" : "public void setSeriesKeys(Comparable[] seriesKeys)",
      "info" : "MethodDeclaration[10204-10970]:MethodDeclaration[10230-10996]"
    }, {
      "left" : "public int getCategoryCount()",
      "right" : "public int getCategoryCount()",
      "info" : "MethodDeclaration[10978-11403]:MethodDeclaration[11004-11429]"
    }, {
      "left" : "public List getColumnKeys()",
      "right" : "public List getColumnKeys()",
      "info" : "MethodDeclaration[11415-12041]:MethodDeclaration[11441-12067]"
    }, {
      "left" : "public void setCategoryKeys(Comparable[] categoryKeys)",
      "right" : "public void setCategoryKeys(Comparable[] categoryKeys)",
      "info" : "MethodDeclaration[12049-13118]:MethodDeclaration[12075-13138]"
    }, {
      "left" : "public Number getValue(Comparable series, Comparable category)",
      "right" : "public Number getValue(Comparable series, Comparable category)",
      "info" : "MethodDeclaration[13126-14070]:MethodDeclaration[13146-14090]"
    }, {
      "left" : "public Number getValue(int series, int category)",
      "right" : "public Number getValue(int series, int category)",
      "info" : "MethodDeclaration[14078-14661]:MethodDeclaration[14098-14681]"
    }, {
      "left" : "public Number getStartValue(Comparable series, Comparable category)",
      "right" : "public Number getStartValue(Comparable series, Comparable category)",
      "info" : "MethodDeclaration[14669-15487]:MethodDeclaration[14689-15507]"
    }, {
      "left" : "public Number getStartValue(int series, int category)",
      "right" : "public Number getStartValue(int series, int category)",
      "info" : "MethodDeclaration[15495-16547]:MethodDeclaration[15515-16567]"
    }, {
      "left" : "public Number getEndValue(Comparable series, Comparable category)",
      "right" : "public Number getEndValue(Comparable series, Comparable category)",
      "info" : "MethodDeclaration[16555-17325]:MethodDeclaration[16575-17345]"
    }, {
      "left" : "public Number getEndValue(int series, int category)",
      "right" : "public Number getEndValue(int series, int category)",
      "info" : "MethodDeclaration[17333-18271]:MethodDeclaration[17353-18291]"
    }, {
      "left" : "public void setStartValue(int series, Comparable category, Number value)",
      "right" : "public void setStartValue(int series, Comparable category, Number value)",
      "info" : "MethodDeclaration[18279-19335]:MethodDeclaration[18299-19355]"
    }, {
      "left" : "public void setEndValue(int series, Comparable category, Number value)",
      "right" : "public void setEndValue(int series, Comparable category, Number value)",
      "info" : "MethodDeclaration[19343-20393]:MethodDeclaration[19363-20413]"
    }, {
      "left" : "public int getCategoryIndex(Comparable category)",
      "right" : "public int getCategoryIndex(Comparable category)",
      "info" : "MethodDeclaration[20401-20941]:MethodDeclaration[20421-20961]"
    }, {
      "left" : "private Comparable[] generateKeys(int count, String prefix)",
      "right" : "private Comparable[] generateKeys(int count, String prefix)",
      "info" : "MethodDeclaration[20949-21562]:MethodDeclaration[20969-21582]"
    }, {
      "left" : "public Comparable getColumnKey(int column)",
      "right" : "public Comparable getColumnKey(int column)",
      "info" : "MethodDeclaration[21570-21839]:MethodDeclaration[21590-21859]"
    }, {
      "left" : "public int getColumnIndex(Comparable columnKey)",
      "right" : "public int getColumnIndex(Comparable columnKey)",
      "info" : "MethodDeclaration[21847-22300]:MethodDeclaration[21867-22320]"
    }, {
      "left" : "public int getRowIndex(Comparable rowKey)",
      "right" : "public int getRowIndex(Comparable rowKey)",
      "info" : "MethodDeclaration[22308-22578]:MethodDeclaration[22328-22598]"
    }, {
      "left" : "public List getRowKeys()",
      "right" : "public List getRowKeys()",
      "info" : "MethodDeclaration[22586-23184]:MethodDeclaration[22606-23204]"
    }, {
      "left" : "public Comparable getRowKey(int row)",
      "right" : "public Comparable getRowKey(int row)",
      "info" : "MethodDeclaration[23192-23695]:MethodDeclaration[23212-23715]"
    }, {
      "left" : "public int getColumnCount()",
      "right" : "public int getColumnCount()",
      "info" : "MethodDeclaration[23703-24063]:MethodDeclaration[23723-24083]"
    }, {
      "left" : "public int getRowCount()",
      "right" : "public int getRowCount()",
      "info" : "MethodDeclaration[24071-24363]:MethodDeclaration[24091-24383]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[24375-25328]:MethodDeclaration[24395-25348]"
    }, {
      "left" : "public Object clone() throws CloneNotSupportedException",
      "right" : "public Object clone() throws CloneNotSupportedException",
      "info" : "MethodDeclaration[25336-25977]:MethodDeclaration[25356-25997]"
    }, {
      "left" : "private static boolean equal(Number[][] array1, Number[][] array2)",
      "right" : "private static boolean equal(Number[][] array1, Number[][] array2)",
      "info" : "MethodDeclaration[25989-26740]:MethodDeclaration[26009-26760]"
    }, {
      "left" : "private static Number[][] clone(Number[][] array)",
      "right" : "private static Number[][] clone(Number[][] array)",
      "info" : "MethodDeclaration[26752-27485]:MethodDeclaration[26772-27505]"
    } ],
    "mappings" : [
 {
      "left" : "AbstractSeriesDataset",
      "right" : "AbstractSeriesDataset",
      "info" : "SimpleType[2674-2695]:SimpleType[2674-2695]"
    }, {
      "left" : "IntervalCategoryDataset",
      "right" : "IntervalCategoryDataset",
      "info" : "SimpleType[2716-2739]:SimpleType[2716-2739]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3437-3443]:Modifier[3437-3443]"
    }, {
      "left" : "DefaultIntervalCategoryDataset",
      "right" : "DefaultIntervalCategoryDataset",
      "info" : "SimpleName[3444-3474]:SimpleName[3444-3474]"
    }, {
      "left" : "double[][] starts",
      "right" : "double[][] starts",
      "info" : "SingleVariableDeclaration[3475-3492]:SingleVariableDeclaration[3475-3492]"
    }, {
      "left" : "double[][] ends",
      "right" : "double[][] ends",
      "info" : "SingleVariableDeclaration[3494-3509]:SingleVariableDeclaration[3494-3509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3511-3635]:Block[3511-3635]"
    }, {
      "left" : "this(DataUtilities.createNumberArray2D(starts),\r\n                DataUtilities.createNumberArray2D(ends));",
      "right" : "this(DataUtilities.createNumberArray2D(starts),\r\n                DataUtilities.createNumberArray2D(ends));",
      "info" : "ConstructorInvocation[3522-3628]:ConstructorInvocation[3522-3628]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4100-4106]:Modifier[4100-4106]"
    }, {
      "left" : "DefaultIntervalCategoryDataset",
      "right" : "DefaultIntervalCategoryDataset",
      "info" : "SimpleName[4107-4137]:SimpleName[4107-4137]"
    }, {
      "left" : "Number[][] starts",
      "right" : "Number[][] starts",
      "info" : "SingleVariableDeclaration[4138-4155]:SingleVariableDeclaration[4138-4155]"
    }, {
      "left" : "Number[][] ends",
      "right" : "Number[][] ends",
      "info" : "SingleVariableDeclaration[4157-4172]:SingleVariableDeclaration[4157-4172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4174-4223]:Block[4174-4223]"
    }, {
      "left" : "this(null, null, starts, ends);",
      "right" : "this(null, null, starts, ends);",
      "info" : "ConstructorInvocation[4185-4216]:ConstructorInvocation[4185-4216]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4797-4803]:Modifier[4797-4803]"
    }, {
      "left" : "DefaultIntervalCategoryDataset",
      "right" : "DefaultIntervalCategoryDataset",
      "info" : "SimpleName[4804-4834]:SimpleName[4804-4834]"
    }, {
      "left" : "String[] seriesNames",
      "right" : "String[] seriesNames",
      "info" : "SingleVariableDeclaration[4835-4855]:SingleVariableDeclaration[4835-4855]"
    }, {
      "left" : "Number[][] starts",
      "right" : "Number[][] starts",
      "info" : "SingleVariableDeclaration[4900-4917]:SingleVariableDeclaration[4900-4917]"
    }, {
      "left" : "Number[][] ends",
      "right" : "Number[][] ends",
      "info" : "SingleVariableDeclaration[4962-4977]:SingleVariableDeclaration[4962-4977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4979-5039]:Block[4979-5039]"
    }, {
      "left" : "this(seriesNames, null, starts, ends);",
      "right" : "this(seriesNames, null, starts, ends);",
      "info" : "ConstructorInvocation[4992-5030]:ConstructorInvocation[4992-5030]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5691-5697]:Modifier[5691-5697]"
    }, {
      "left" : "DefaultIntervalCategoryDataset",
      "right" : "DefaultIntervalCategoryDataset",
      "info" : "SimpleName[5698-5728]:SimpleName[5698-5728]"
    }, {
      "left" : "Comparable[] seriesKeys",
      "right" : "Comparable[] seriesKeys",
      "info" : "SingleVariableDeclaration[5729-5752]:SingleVariableDeclaration[5729-5752]"
    }, {
      "left" : "Comparable[] categoryKeys",
      "right" : "Comparable[] categoryKeys",
      "info" : "SingleVariableDeclaration[5797-5822]:SingleVariableDeclaration[5797-5822]"
    }, {
      "left" : "Number[][] starts",
      "right" : "Number[][] starts",
      "info" : "SingleVariableDeclaration[5867-5884]:SingleVariableDeclaration[5867-5884]"
    }, {
      "left" : "Number[][] ends",
      "right" : "Number[][] ends",
      "info" : "SingleVariableDeclaration[5929-5944]:SingleVariableDeclaration[5929-5944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5946-8754]:Block[5946-8780]"
    }, {
      "left" : "this.startData = starts;",
      "right" : "this.startData = starts;",
      "info" : "ExpressionStatement[5959-5983]:ExpressionStatement[5959-5983]"
    }, {
      "left" : "this.endData = ends;",
      "right" : "this.endData = ends;",
      "info" : "ExpressionStatement[5993-6013]:ExpressionStatement[5993-6013]"
    }, {
      "left" : "if (starts != null && ends != null)",
      "right" : "if (starts != null && ends != null)",
      "info" : "IfStatement[6025-8745]:IfStatement[6025-8771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6061-8745]:Block[6061-8771]"
    }, {
      "left" : "String baseName = \"org.jfree.data.resources.DataPackageResources\";",
      "right" : "String baseName = \"org.jfree.data.resources.DataPackageResources\";",
      "info" : "VariableDeclarationStatement[6078-6144]:VariableDeclarationStatement[6078-6144]"
    }, {
      "left" : "ResourceBundle resources = ResourceBundle.getBundle(baseName);",
      "right" : "ResourceBundle resources = ResourceBundle.getBundle(baseName);",
      "info" : "VariableDeclarationStatement[6158-6220]:VariableDeclarationStatement[6158-6220]"
    }, {
      "left" : "int seriesCount = starts.length;",
      "right" : "int seriesCount = starts.length;",
      "info" : "VariableDeclarationStatement[6236-6268]:VariableDeclarationStatement[6236-6268]"
    }, {
      "left" : "if (seriesCount != ends.length)",
      "right" : "if (seriesCount != ends.length)",
      "info" : "IfStatement[6282-6647]:IfStatement[6282-6647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6314-6647]:Block[6314-6647]"
    }, {
      "left" : "String errMsg = \"DefaultIntervalCategoryDataset: the number \"\r\n                    + \"of series in the start value dataset does \"\r\n                    + \"not match the number of series in the end \"\r\n                    + \"value dataset.\";",
      "right" : "String errMsg = \"DefaultIntervalCategoryDataset: the number \"\r\n                    + \"of series in the start value dataset does \"\r\n                    + \"not match the number of series in the end \"\r\n                    + \"value dataset.\";",
      "info" : "VariableDeclarationStatement[6333-6571]:VariableDeclarationStatement[6333-6571]"
    }, {
      "left" : "throw new IllegalArgumentException(errMsg);",
      "right" : "throw new IllegalArgumentException(errMsg);",
      "info" : "ThrowStatement[6589-6632]:ThrowStatement[6589-6632]"
    }, {
      "left" : "if (seriesCount > 0)",
      "right" : "if (seriesCount > 0)",
      "info" : "IfStatement[6661-8734]:IfStatement[6661-8760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6682-8615]:Block[6682-8615]"
    }, {
      "left" : "if (seriesKeys != null)",
      "right" : "if (seriesKeys != null)",
      "info" : "IfStatement[6750-7380]:IfStatement[6750-7380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6774-7144]:Block[6774-7144]"
    }, {
      "left" : "if (seriesKeys.length != seriesCount)",
      "right" : "if (seriesKeys.length != seriesCount)",
      "info" : "IfStatement[6799-7072]:IfStatement[6799-7072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6837-7072]:Block[6837-7072]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                                \"The number of series keys does not \"\r\n                                + \"match the number of series in the data.\");",
      "right" : "throw new IllegalArgumentException(\r\n                                \"The number of series keys does not \"\r\n                                + \"match the number of series in the data.\");",
      "info" : "ThrowStatement[6864-7049]:ThrowStatement[6864-7049]"
    }, {
      "left" : "this.seriesKeys = seriesKeys;",
      "right" : "this.seriesKeys = seriesKeys;",
      "info" : "ExpressionStatement[7096-7125]:ExpressionStatement[7096-7125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7167-7380]:Block[7167-7380]"
    }, {
      "left" : "String prefix = resources.getString(\r\n                            \"series.default-prefix\") + \" \";",
      "right" : "String prefix = resources.getString(\r\n                            \"series.default-prefix\") + \" \";",
      "info" : "VariableDeclarationStatement[7190-7287]:VariableDeclarationStatement[7190-7287]"
    }, {
      "left" : "this.seriesKeys = generateKeys(seriesCount, prefix);",
      "right" : "this.seriesKeys = generateKeys(seriesCount, prefix);",
      "info" : "ExpressionStatement[7309-7361]:ExpressionStatement[7309-7361]"
    }, {
      "left" : "int categoryCount = starts[0].length;",
      "right" : "int categoryCount = starts[0].length;",
      "info" : "VariableDeclarationStatement[7449-7486]:VariableDeclarationStatement[7449-7486]"
    }, {
      "left" : "if (categoryCount != ends[0].length)",
      "right" : "if (categoryCount != ends[0].length)",
      "info" : "IfStatement[7504-7930]:IfStatement[7504-7930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7541-7930]:Block[7541-7930]"
    }, {
      "left" : "String errMsg = \"DefaultIntervalCategoryDataset: the \"\r\n                                + \"number of categories in the start value \"\r\n                                + \"dataset does not match the number of \"\r\n                                + \"categories in the end value dataset.\";",
      "right" : "String errMsg = \"DefaultIntervalCategoryDataset: the \"\r\n                                + \"number of categories in the start value \"\r\n                                + \"dataset does not match the number of \"\r\n                                + \"categories in the end value dataset.\";",
      "info" : "VariableDeclarationStatement[7564-7846]:VariableDeclarationStatement[7564-7846]"
    }, {
      "left" : "throw new IllegalArgumentException(errMsg);",
      "right" : "throw new IllegalArgumentException(errMsg);",
      "info" : "ThrowStatement[7868-7911]:ThrowStatement[7868-7911]"
    }, {
      "left" : "if (categoryKeys != null)",
      "right" : "if (categoryKeys != null)",
      "info" : "IfStatement[7948-8598]:IfStatement[7948-8598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7974-8354]:Block[7974-8354]"
    }, {
      "left" : "if (categoryKeys.length != categoryCount)",
      "right" : "if (categoryKeys.length != categoryCount)",
      "info" : "IfStatement[7997-8280]:IfStatement[7997-8280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8039-8280]:Block[8039-8280]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                                \"The number of category keys does not match \"\r\n                                + \"the number of categories in the data.\");",
      "right" : "throw new IllegalArgumentException(\r\n                                \"The number of category keys does not match \"\r\n                                + \"the number of categories in the data.\");",
      "info" : "ThrowStatement[8066-8257]:ThrowStatement[8066-8257]"
    }, {
      "left" : "this.categoryKeys = categoryKeys;",
      "right" : "this.categoryKeys = categoryKeys;",
      "info" : "ExpressionStatement[8302-8335]:ExpressionStatement[8302-8335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8377-8598]:Block[8377-8598]"
    }, {
      "left" : "String prefix = resources.getString(\r\n                            \"categories.default-prefix\") + \" \";",
      "right" : "String prefix = resources.getString(\r\n                            \"categories.default-prefix\") + \" \";",
      "info" : "VariableDeclarationStatement[8400-8501]:VariableDeclarationStatement[8400-8501]"
    }, {
      "left" : "this.categoryKeys = generateKeys(categoryCount, prefix);",
      "right" : "this.categoryKeys = generateKeys(categoryCount, prefix);",
      "info" : "ExpressionStatement[8523-8579]:ExpressionStatement[8523-8579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8634-8734]:Block[8634-8760]"
    }, {
      "left" : "this.seriesKeys = null;",
      "right" : "this.seriesKeys = new Comparable[0];",
      "info" : "ExpressionStatement[8653-8676]:ExpressionStatement[8653-8689]"
    }, {
      "left" : "this.categoryKeys = null;",
      "right" : "this.categoryKeys = new Comparable[0];",
      "info" : "ExpressionStatement[8694-8719]:ExpressionStatement[8707-8745]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8980-8986]:Modifier[9006-9012]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[8987-8990]:PrimitiveType[9013-9016]"
    }, {
      "left" : "getSeriesCount",
      "right" : "getSeriesCount",
      "info" : "SimpleName[8991-9005]:SimpleName[9017-9031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9008-9160]:Block[9034-9186]"
    }, {
      "left" : "int result = 0;",
      "right" : "int result = 0;",
      "info" : "VariableDeclarationStatement[9019-9034]:VariableDeclarationStatement[9045-9060]"
    }, {
      "left" : "if (this.startData != null)",
      "right" : "if (this.startData != null)",
      "info" : "IfStatement[9044-9129]:IfStatement[9070-9155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9072-9129]:Block[9098-9155]"
    }, {
      "left" : "result = this.startData.length;",
      "right" : "result = this.startData.length;",
      "info" : "ExpressionStatement[9087-9118]:ExpressionStatement[9113-9144]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[9139-9153]:ReturnStatement[9165-9179]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9389-9395]:Modifier[9415-9421]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[9396-9399]:PrimitiveType[9422-9425]"
    }, {
      "left" : "getSeriesIndex",
      "right" : "getSeriesIndex",
      "info" : "SimpleName[9400-9414]:SimpleName[9426-9440]"
    }, {
      "left" : "Comparable seriesKey",
      "right" : "Comparable seriesKey",
      "info" : "SingleVariableDeclaration[9415-9435]:SingleVariableDeclaration[9441-9461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9437-9691]:Block[9463-9717]"
    }, {
      "left" : "int result = -1;",
      "right" : "int result = -1;",
      "info" : "VariableDeclarationStatement[9448-9464]:VariableDeclarationStatement[9474-9490]"
    }, {
      "left" : "for (int i = 0; i < this.seriesKeys.length; i++)",
      "right" : "for (int i = 0; i < this.seriesKeys.length; i++)",
      "info" : "ForStatement[9474-9660]:ForStatement[9500-9686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9523-9660]:Block[9549-9686]"
    }, {
      "left" : "if (seriesKey.equals(this.seriesKeys[i]))",
      "right" : "if (seriesKey.equals(this.seriesKeys[i]))",
      "info" : "IfStatement[9538-9649]:IfStatement[9564-9675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9580-9649]:Block[9606-9675]"
    }, {
      "left" : "result = i;",
      "right" : "result = i;",
      "info" : "ExpressionStatement[9599-9610]:ExpressionStatement[9625-9636]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9628-9634]:BreakStatement[9654-9660]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[9670-9684]:ReturnStatement[9696-9710]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9953-9959]:Modifier[9979-9985]"
    }, {
      "left" : "Comparable",
      "right" : "Comparable",
      "info" : "SimpleType[9960-9970]:SimpleType[9986-9996]"
    }, {
      "left" : "getSeriesKey",
      "right" : "getSeriesKey",
      "info" : "SimpleName[9971-9983]:SimpleName[9997-10009]"
    }, {
      "left" : "int series",
      "right" : "int series",
      "info" : "SingleVariableDeclaration[9984-9994]:SingleVariableDeclaration[10010-10020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9996-10196]:Block[10022-10222]"
    }, {
      "left" : "if ((series >= getSeriesCount()) || (series < 0))",
      "right" : "if ((series >= getSeriesCount()) || (series < 0))",
      "info" : "IfStatement[10007-10148]:IfStatement[10033-10174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10057-10148]:Block[10083-10174]"
    }, {
      "left" : "throw new IllegalArgumentException(\"No such series : \" + series);",
      "right" : "throw new IllegalArgumentException(\"No such series : \" + series);",
      "info" : "ThrowStatement[10072-10137]:ThrowStatement[10098-10163]"
    }, {
      "left" : "return this.seriesKeys[series];",
      "right" : "return this.seriesKeys[series];",
      "info" : "ReturnStatement[10158-10189]:ReturnStatement[10184-10215]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10525-10531]:Modifier[10551-10557]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10532-10536]:PrimitiveType[10558-10562]"
    }, {
      "left" : "setSeriesKeys",
      "right" : "setSeriesKeys",
      "info" : "SimpleName[10537-10550]:SimpleName[10563-10576]"
    }, {
      "left" : "Comparable[] seriesKeys",
      "right" : "Comparable[] seriesKeys",
      "info" : "SingleVariableDeclaration[10551-10574]:SingleVariableDeclaration[10577-10600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10576-10970]:Block[10602-10996]"
    }, {
      "left" : "if (seriesKeys == null)",
      "right" : "if (seriesKeys == null)",
      "info" : "IfStatement[10587-10703]:IfStatement[10613-10729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10611-10703]:Block[10637-10729]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'seriesKeys' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'seriesKeys' argument.\");",
      "info" : "ThrowStatement[10626-10692]:ThrowStatement[10652-10718]"
    }, {
      "left" : "if (seriesKeys.length != getSeriesCount())",
      "right" : "if (seriesKeys.length != getSeriesCount())",
      "info" : "IfStatement[10713-10893]:IfStatement[10739-10919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10756-10893]:Block[10782-10919]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"The number of series keys does not match the data.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"The number of series keys does not match the data.\");",
      "info" : "ThrowStatement[10771-10882]:ThrowStatement[10797-10908]"
    }, {
      "left" : "this.seriesKeys = seriesKeys;",
      "right" : "this.seriesKeys = seriesKeys;",
      "info" : "ExpressionStatement[10903-10932]:ExpressionStatement[10929-10958]"
    }, {
      "left" : "fireDatasetChanged();",
      "right" : "fireDatasetChanged();",
      "info" : "ExpressionStatement[10942-10963]:ExpressionStatement[10968-10989]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11158-11164]:Modifier[11184-11190]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[11165-11168]:PrimitiveType[11191-11194]"
    }, {
      "left" : "getCategoryCount",
      "right" : "getCategoryCount",
      "info" : "SimpleName[11169-11185]:SimpleName[11195-11211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11188-11403]:Block[11214-11429]"
    }, {
      "left" : "int result = 0;",
      "right" : "int result = 0;",
      "info" : "VariableDeclarationStatement[11199-11214]:VariableDeclarationStatement[11225-11240]"
    }, {
      "left" : "if (this.startData != null)",
      "right" : "if (this.startData != null)",
      "info" : "IfStatement[11224-11372]:IfStatement[11250-11398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11252-11372]:Block[11278-11398]"
    }, {
      "left" : "if (getSeriesCount() > 0)",
      "right" : "if (getSeriesCount() > 0)",
      "info" : "IfStatement[11267-11361]:IfStatement[11293-11387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11293-11361]:Block[11319-11387]"
    }, {
      "left" : "result = this.startData[0].length;",
      "right" : "result = this.startData[0].length;",
      "info" : "ExpressionStatement[11312-11346]:ExpressionStatement[11338-11372]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11382-11396]:ReturnStatement[11408-11422]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11661-11667]:Modifier[11687-11693]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[11668-11672]:SimpleType[11694-11698]"
    }, {
      "left" : "getColumnKeys",
      "right" : "getColumnKeys",
      "info" : "SimpleName[11673-11686]:SimpleName[11699-11712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11689-12041]:Block[11715-12067]"
    }, {
      "left" : "if (this.categoryKeys == null)",
      "right" : "if (this.categoryKeys == null)",
      "info" : "IfStatement[11821-12034]:IfStatement[11847-12060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11852-11901]:Block[11878-11927]"
    }, {
      "left" : "return new ArrayList();",
      "right" : "return new ArrayList();",
      "info" : "ReturnStatement[11867-11890]:ReturnStatement[11893-11916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11916-12034]:Block[11942-12060]"
    }, {
      "left" : "return Collections.unmodifiableList(Arrays.asList(\r\n                    this.categoryKeys));",
      "right" : "return Collections.unmodifiableList(Arrays.asList(\r\n                    this.categoryKeys));",
      "info" : "ReturnStatement[11931-12023]:ReturnStatement[11957-12049]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12342-12348]:Modifier[12368-12374]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12349-12353]:PrimitiveType[12375-12379]"
    }, {
      "left" : "setCategoryKeys",
      "right" : "setCategoryKeys",
      "info" : "SimpleName[12354-12369]:SimpleName[12380-12395]"
    }, {
      "left" : "Comparable[] categoryKeys",
      "right" : "Comparable[] categoryKeys",
      "info" : "SingleVariableDeclaration[12370-12395]:SingleVariableDeclaration[12396-12421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12397-13118]:Block[12423-13138]"
    }, {
      "left" : "if (categoryKeys == null)",
      "right" : "if (categoryKeys == null)",
      "info" : "IfStatement[12408-12528]:IfStatement[12434-12554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12434-12528]:Block[12460-12554]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'categoryKeys' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'categoryKeys' argument.\");",
      "info" : "ThrowStatement[12449-12517]:ThrowStatement[12475-12543]"
    }, {
      "left" : "if (categoryKeys.length != this.startData[0].length)",
      "right" : "if (categoryKeys.length != getCategoryCount())",
      "info" : "IfStatement[12538-12727]:IfStatement[12564-12747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12591-12727]:Block[12611-12747]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"The number of categories does not match the data.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"The number of categories does not match the data.\");",
      "info" : "ThrowStatement[12606-12716]:ThrowStatement[12626-12736]"
    }, {
      "left" : "for (int i = 0; i < categoryKeys.length; i++)",
      "right" : "for (int i = 0; i < categoryKeys.length; i++)",
      "info" : "ForStatement[12737-13037]:ForStatement[12757-13057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12783-13037]:Block[12803-13057]"
    }, {
      "left" : "if (categoryKeys[i] == null)",
      "right" : "if (categoryKeys[i] == null)",
      "info" : "IfStatement[12798-13026]:IfStatement[12818-13046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12827-13026]:Block[12847-13046]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"DefaultIntervalCategoryDataset.setCategoryKeys(): \"\r\n                    + \"null category not permitted.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"DefaultIntervalCategoryDataset.setCategoryKeys(): \"\r\n                    + \"null category not permitted.\");",
      "info" : "ThrowStatement[12846-13011]:ThrowStatement[12866-13031]"
    }, {
      "left" : "this.categoryKeys = categoryKeys;",
      "right" : "this.categoryKeys = categoryKeys;",
      "info" : "ExpressionStatement[13047-13080]:ExpressionStatement[13067-13100]"
    }, {
      "left" : "fireDatasetChanged();",
      "right" : "fireDatasetChanged();",
      "info" : "ExpressionStatement[13090-13111]:ExpressionStatement[13110-13131]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13623-13629]:Modifier[13643-13649]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[13630-13636]:SimpleType[13650-13656]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[13637-13645]:SimpleName[13657-13665]"
    }, {
      "left" : "Comparable series",
      "right" : "Comparable series",
      "info" : "SingleVariableDeclaration[13646-13663]:SingleVariableDeclaration[13666-13683]"
    }, {
      "left" : "Comparable category",
      "right" : "Comparable category",
      "info" : "SingleVariableDeclaration[13665-13684]:SingleVariableDeclaration[13685-13704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13686-14070]:Block[13706-14090]"
    }, {
      "left" : "int seriesIndex = getSeriesIndex(series);",
      "right" : "int seriesIndex = getSeriesIndex(series);",
      "info" : "VariableDeclarationStatement[13697-13738]:VariableDeclarationStatement[13717-13758]"
    }, {
      "left" : "if (seriesIndex < 0)",
      "right" : "if (seriesIndex < 0)",
      "info" : "IfStatement[13748-13850]:IfStatement[13768-13870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13769-13850]:Block[13789-13870]"
    }, {
      "left" : "throw new UnknownKeyException(\"Unknown 'series' key.\");",
      "right" : "throw new UnknownKeyException(\"Unknown 'series' key.\");",
      "info" : "ThrowStatement[13784-13839]:ThrowStatement[13804-13859]"
    }, {
      "left" : "int itemIndex = getColumnIndex(category);",
      "right" : "int itemIndex = getColumnIndex(category);",
      "info" : "VariableDeclarationStatement[13860-13901]:VariableDeclarationStatement[13880-13921]"
    }, {
      "left" : "if (itemIndex < 0)",
      "right" : "if (itemIndex < 0)",
      "info" : "IfStatement[13911-14013]:IfStatement[13931-14033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13930-14013]:Block[13950-14033]"
    }, {
      "left" : "throw new UnknownKeyException(\"Unknown 'category' key.\");",
      "right" : "throw new UnknownKeyException(\"Unknown 'category' key.\");",
      "info" : "ThrowStatement[13945-14002]:ThrowStatement[13965-14022]"
    }, {
      "left" : "return getValue(seriesIndex, itemIndex);",
      "right" : "return getValue(seriesIndex, itemIndex);",
      "info" : "ReturnStatement[14023-14063]:ReturnStatement[14043-14083]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14557-14563]:Modifier[14577-14583]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[14564-14570]:SimpleType[14584-14590]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[14571-14579]:SimpleName[14591-14599]"
    }, {
      "left" : "int series",
      "right" : "int series",
      "info" : "SingleVariableDeclaration[14580-14590]:SingleVariableDeclaration[14600-14610]"
    }, {
      "left" : "int category",
      "right" : "int category",
      "info" : "SingleVariableDeclaration[14592-14604]:SingleVariableDeclaration[14612-14624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14606-14661]:Block[14626-14681]"
    }, {
      "left" : "return getEndValue(series, category);",
      "right" : "return getEndValue(series, category);",
      "info" : "ReturnStatement[14617-14654]:ReturnStatement[14637-14674]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15030-15036]:Modifier[15050-15056]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[15037-15043]:SimpleType[15057-15063]"
    }, {
      "left" : "getStartValue",
      "right" : "getStartValue",
      "info" : "SimpleName[15044-15057]:SimpleName[15064-15077]"
    }, {
      "left" : "Comparable series",
      "right" : "Comparable series",
      "info" : "SingleVariableDeclaration[15058-15075]:SingleVariableDeclaration[15078-15095]"
    }, {
      "left" : "Comparable category",
      "right" : "Comparable category",
      "info" : "SingleVariableDeclaration[15077-15096]:SingleVariableDeclaration[15097-15116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15098-15487]:Block[15118-15507]"
    }, {
      "left" : "int seriesIndex = getSeriesIndex(series);",
      "right" : "int seriesIndex = getSeriesIndex(series);",
      "info" : "VariableDeclarationStatement[15109-15150]:VariableDeclarationStatement[15129-15170]"
    }, {
      "left" : "if (seriesIndex < 0)",
      "right" : "if (seriesIndex < 0)",
      "info" : "IfStatement[15160-15262]:IfStatement[15180-15282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15181-15262]:Block[15201-15282]"
    }, {
      "left" : "throw new UnknownKeyException(\"Unknown 'series' key.\");",
      "right" : "throw new UnknownKeyException(\"Unknown 'series' key.\");",
      "info" : "ThrowStatement[15196-15251]:ThrowStatement[15216-15271]"
    }, {
      "left" : "int itemIndex = getColumnIndex(category);",
      "right" : "int itemIndex = getColumnIndex(category);",
      "info" : "VariableDeclarationStatement[15272-15313]:VariableDeclarationStatement[15292-15333]"
    }, {
      "left" : "if (itemIndex < 0)",
      "right" : "if (itemIndex < 0)",
      "info" : "IfStatement[15323-15425]:IfStatement[15343-15445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15342-15425]:Block[15362-15445]"
    }, {
      "left" : "throw new UnknownKeyException(\"Unknown 'category' key.\");",
      "right" : "throw new UnknownKeyException(\"Unknown 'category' key.\");",
      "info" : "ThrowStatement[15357-15414]:ThrowStatement[15377-15434]"
    }, {
      "left" : "return getStartValue(seriesIndex, itemIndex);",
      "right" : "return getStartValue(seriesIndex, itemIndex);",
      "info" : "ReturnStatement[15435-15480]:ReturnStatement[15455-15500]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15889-15895]:Modifier[15909-15915]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[15896-15902]:SimpleType[15916-15922]"
    }, {
      "left" : "getStartValue",
      "right" : "getStartValue",
      "info" : "SimpleName[15903-15916]:SimpleName[15923-15936]"
    }, {
      "left" : "int series",
      "right" : "int series",
      "info" : "SingleVariableDeclaration[15917-15927]:SingleVariableDeclaration[15937-15947]"
    }, {
      "left" : "int category",
      "right" : "int category",
      "info" : "SingleVariableDeclaration[15929-15941]:SingleVariableDeclaration[15949-15961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15943-16547]:Block[15963-16567]"
    }, {
      "left" : "if ((series < 0) || (series >= getSeriesCount()))",
      "right" : "if ((series < 0) || (series >= getSeriesCount()))",
      "info" : "IfStatement[15987-16211]:IfStatement[16007-16231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16037-16211]:Block[16057-16231]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.getValue(): \"\r\n                + \"series index out of range.\");",
      "right" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.getValue(): \"\r\n                + \"series index out of range.\");",
      "info" : "ThrowStatement[16052-16200]:ThrowStatement[16072-16220]"
    }, {
      "left" : "if ((category < 0) || (category >= getCategoryCount()))",
      "right" : "if ((category < 0) || (category >= getCategoryCount()))",
      "info" : "IfStatement[16223-16455]:IfStatement[16243-16475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16279-16455]:Block[16299-16475]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.getValue(): \"\r\n                + \"category index out of range.\");",
      "right" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.getValue(): \"\r\n                + \"category index out of range.\");",
      "info" : "ThrowStatement[16294-16444]:ThrowStatement[16314-16464]"
    }, {
      "left" : "return this.startData[series][category];",
      "right" : "return this.startData[series][category];",
      "info" : "ReturnStatement[16498-16538]:ReturnStatement[16518-16558]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16872-16878]:Modifier[16892-16898]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[16879-16885]:SimpleType[16899-16905]"
    }, {
      "left" : "getEndValue",
      "right" : "getEndValue",
      "info" : "SimpleName[16886-16897]:SimpleName[16906-16917]"
    }, {
      "left" : "Comparable series",
      "right" : "Comparable series",
      "info" : "SingleVariableDeclaration[16898-16915]:SingleVariableDeclaration[16918-16935]"
    }, {
      "left" : "Comparable category",
      "right" : "Comparable category",
      "info" : "SingleVariableDeclaration[16917-16936]:SingleVariableDeclaration[16937-16956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16938-17325]:Block[16958-17345]"
    }, {
      "left" : "int seriesIndex = getSeriesIndex(series);",
      "right" : "int seriesIndex = getSeriesIndex(series);",
      "info" : "VariableDeclarationStatement[16949-16990]:VariableDeclarationStatement[16969-17010]"
    }, {
      "left" : "if (seriesIndex < 0)",
      "right" : "if (seriesIndex < 0)",
      "info" : "IfStatement[17000-17102]:IfStatement[17020-17122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17021-17102]:Block[17041-17122]"
    }, {
      "left" : "throw new UnknownKeyException(\"Unknown 'series' key.\");",
      "right" : "throw new UnknownKeyException(\"Unknown 'series' key.\");",
      "info" : "ThrowStatement[17036-17091]:ThrowStatement[17056-17111]"
    }, {
      "left" : "int itemIndex = getColumnIndex(category);",
      "right" : "int itemIndex = getColumnIndex(category);",
      "info" : "VariableDeclarationStatement[17112-17153]:VariableDeclarationStatement[17132-17173]"
    }, {
      "left" : "if (itemIndex < 0)",
      "right" : "if (itemIndex < 0)",
      "info" : "IfStatement[17163-17265]:IfStatement[17183-17285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17182-17265]:Block[17202-17285]"
    }, {
      "left" : "throw new UnknownKeyException(\"Unknown 'category' key.\");",
      "right" : "throw new UnknownKeyException(\"Unknown 'category' key.\");",
      "info" : "ThrowStatement[17197-17254]:ThrowStatement[17217-17274]"
    }, {
      "left" : "return getEndValue(seriesIndex, itemIndex);",
      "right" : "return getEndValue(seriesIndex, itemIndex);",
      "info" : "ReturnStatement[17275-17318]:ReturnStatement[17295-17338]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17683-17689]:Modifier[17703-17709]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[17690-17696]:SimpleType[17710-17716]"
    }, {
      "left" : "getEndValue",
      "right" : "getEndValue",
      "info" : "SimpleName[17697-17708]:SimpleName[17717-17728]"
    }, {
      "left" : "int series",
      "right" : "int series",
      "info" : "SingleVariableDeclaration[17709-17719]:SingleVariableDeclaration[17729-17739]"
    }, {
      "left" : "int category",
      "right" : "int category",
      "info" : "SingleVariableDeclaration[17721-17733]:SingleVariableDeclaration[17741-17753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17735-18271]:Block[17755-18291]"
    }, {
      "left" : "if ((series < 0) || (series >= getSeriesCount()))",
      "right" : "if ((series < 0) || (series >= getSeriesCount()))",
      "info" : "IfStatement[17746-17970]:IfStatement[17766-17990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17796-17970]:Block[17816-17990]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.getValue(): \"\r\n                + \"series index out of range.\");",
      "right" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.getValue(): \"\r\n                + \"series index out of range.\");",
      "info" : "ThrowStatement[17811-17959]:ThrowStatement[17831-17979]"
    }, {
      "left" : "if ((category < 0) || (category >= getCategoryCount()))",
      "right" : "if ((category < 0) || (category >= getCategoryCount()))",
      "info" : "IfStatement[17982-18214]:IfStatement[18002-18234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18038-18214]:Block[18058-18234]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.getValue(): \"\r\n                + \"category index out of range.\");",
      "right" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.getValue(): \"\r\n                + \"category index out of range.\");",
      "info" : "ThrowStatement[18053-18203]:ThrowStatement[18073-18223]"
    }, {
      "left" : "return this.endData[series][category];",
      "right" : "return this.endData[series][category];",
      "info" : "ReturnStatement[18226-18264]:ReturnStatement[18246-18284]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18564-18570]:Modifier[18584-18590]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18571-18575]:PrimitiveType[18591-18595]"
    }, {
      "left" : "setStartValue",
      "right" : "setStartValue",
      "info" : "SimpleName[18576-18589]:SimpleName[18596-18609]"
    }, {
      "left" : "int series",
      "right" : "int series",
      "info" : "SingleVariableDeclaration[18590-18600]:SingleVariableDeclaration[18610-18620]"
    }, {
      "left" : "Comparable category",
      "right" : "Comparable category",
      "info" : "SingleVariableDeclaration[18602-18621]:SingleVariableDeclaration[18622-18641]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[18623-18635]:SingleVariableDeclaration[18643-18655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18637-19335]:Block[18657-19355]"
    }, {
      "left" : "if ((series < 0) || (series > getSeriesCount() - 1))",
      "right" : "if ((series < 0) || (series > getSeriesCount() - 1))",
      "info" : "IfStatement[18685-18911]:IfStatement[18705-18931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18738-18911]:Block[18758-18931]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.setValue: \"\r\n                + \"series outside valid range.\");",
      "right" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.setValue: \"\r\n                + \"series outside valid range.\");",
      "info" : "ThrowStatement[18753-18900]:ThrowStatement[18773-18920]"
    }, {
      "left" : "int categoryIndex = getCategoryIndex(category);",
      "right" : "int categoryIndex = getCategoryIndex(category);",
      "info" : "VariableDeclarationStatement[18958-19005]:VariableDeclarationStatement[18978-19025]"
    }, {
      "left" : "if (categoryIndex < 0)",
      "right" : "if (categoryIndex < 0)",
      "info" : "IfStatement[19015-19206]:IfStatement[19035-19226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19038-19206]:Block[19058-19226]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.setValue: \"\r\n                + \"unrecognised category.\");",
      "right" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.setValue: \"\r\n                + \"unrecognised category.\");",
      "info" : "ThrowStatement[19053-19195]:ThrowStatement[19073-19215]"
    }, {
      "left" : "this.startData[series][categoryIndex] = value;",
      "right" : "this.startData[series][categoryIndex] = value;",
      "info" : "ExpressionStatement[19249-19295]:ExpressionStatement[19269-19315]"
    }, {
      "left" : "fireDatasetChanged();",
      "right" : "fireDatasetChanged();",
      "info" : "ExpressionStatement[19305-19326]:ExpressionStatement[19325-19346]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19626-19632]:Modifier[19646-19652]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19633-19637]:PrimitiveType[19653-19657]"
    }, {
      "left" : "setEndValue",
      "right" : "setEndValue",
      "info" : "SimpleName[19638-19649]:SimpleName[19658-19669]"
    }, {
      "left" : "int series",
      "right" : "int series",
      "info" : "SingleVariableDeclaration[19650-19660]:SingleVariableDeclaration[19670-19680]"
    }, {
      "left" : "Comparable category",
      "right" : "Comparable category",
      "info" : "SingleVariableDeclaration[19662-19681]:SingleVariableDeclaration[19682-19701]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[19683-19695]:SingleVariableDeclaration[19703-19715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19697-20393]:Block[19717-20413]"
    }, {
      "left" : "if ((series < 0) || (series > getSeriesCount() - 1))",
      "right" : "if ((series < 0) || (series > getSeriesCount() - 1))",
      "info" : "IfStatement[19745-19971]:IfStatement[19765-19991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19798-19971]:Block[19818-19991]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.setValue: \"\r\n                + \"series outside valid range.\");",
      "right" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.setValue: \"\r\n                + \"series outside valid range.\");",
      "info" : "ThrowStatement[19813-19960]:ThrowStatement[19833-19980]"
    }, {
      "left" : "int categoryIndex = getCategoryIndex(category);",
      "right" : "int categoryIndex = getCategoryIndex(category);",
      "info" : "VariableDeclarationStatement[20018-20065]:VariableDeclarationStatement[20038-20085]"
    }, {
      "left" : "if (categoryIndex < 0)",
      "right" : "if (categoryIndex < 0)",
      "info" : "IfStatement[20075-20266]:IfStatement[20095-20286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20098-20266]:Block[20118-20286]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.setValue: \"\r\n                + \"unrecognised category.\");",
      "right" : "throw new IllegalArgumentException(\r\n                \"DefaultIntervalCategoryDataset.setValue: \"\r\n                + \"unrecognised category.\");",
      "info" : "ThrowStatement[20113-20255]:ThrowStatement[20133-20275]"
    }, {
      "left" : "this.endData[series][categoryIndex] = value;",
      "right" : "this.endData[series][categoryIndex] = value;",
      "info" : "ExpressionStatement[20309-20353]:ExpressionStatement[20329-20373]"
    }, {
      "left" : "fireDatasetChanged();",
      "right" : "fireDatasetChanged();",
      "info" : "ExpressionStatement[20363-20384]:ExpressionStatement[20383-20404]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20635-20641]:Modifier[20655-20661]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[20642-20645]:PrimitiveType[20662-20665]"
    }, {
      "left" : "getCategoryIndex",
      "right" : "getCategoryIndex",
      "info" : "SimpleName[20646-20662]:SimpleName[20666-20682]"
    }, {
      "left" : "Comparable category",
      "right" : "Comparable category",
      "info" : "SingleVariableDeclaration[20663-20682]:SingleVariableDeclaration[20683-20702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20684-20941]:Block[20704-20961]"
    }, {
      "left" : "int result = -1;",
      "right" : "int result = -1;",
      "info" : "VariableDeclarationStatement[20695-20711]:VariableDeclarationStatement[20715-20731]"
    }, {
      "left" : "for (int i = 0; i < this.categoryKeys.length; i++)",
      "right" : "for (int i = 0; i < this.categoryKeys.length; i++)",
      "info" : "ForStatement[20721-20910]:ForStatement[20741-20930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20772-20910]:Block[20792-20930]"
    }, {
      "left" : "if (category.equals(this.categoryKeys[i]))",
      "right" : "if (category.equals(this.categoryKeys[i]))",
      "info" : "IfStatement[20787-20899]:IfStatement[20807-20919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20830-20899]:Block[20850-20919]"
    }, {
      "left" : "result = i;",
      "right" : "result = i;",
      "info" : "ExpressionStatement[20849-20860]:ExpressionStatement[20869-20880]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20878-20884]:BreakStatement[20898-20904]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[20920-20934]:ReturnStatement[20940-20954]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21271-21278]:Modifier[21291-21298]"
    }, {
      "left" : "Comparable[]",
      "right" : "Comparable[]",
      "info" : "ArrayType[21279-21291]:ArrayType[21299-21311]"
    }, {
      "left" : "generateKeys",
      "right" : "generateKeys",
      "info" : "SimpleName[21292-21304]:SimpleName[21312-21324]"
    }, {
      "left" : "int count",
      "right" : "int count",
      "info" : "SingleVariableDeclaration[21305-21314]:SingleVariableDeclaration[21325-21334]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[21316-21329]:SingleVariableDeclaration[21336-21349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21331-21562]:Block[21351-21582]"
    }, {
      "left" : "Comparable[] result = new Comparable[count];",
      "right" : "Comparable[] result = new Comparable[count];",
      "info" : "VariableDeclarationStatement[21342-21386]:VariableDeclarationStatement[21362-21406]"
    }, {
      "left" : "String name;",
      "right" : "String name;",
      "info" : "VariableDeclarationStatement[21396-21408]:VariableDeclarationStatement[21416-21428]"
    }, {
      "left" : "for (int i = 0; i < count; i++)",
      "right" : "for (int i = 0; i < count; i++)",
      "info" : "ForStatement[21418-21531]:ForStatement[21438-21551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21450-21531]:Block[21470-21551]"
    }, {
      "left" : "name = prefix + (i + 1);",
      "right" : "name = prefix + (i + 1);",
      "info" : "ExpressionStatement[21465-21489]:ExpressionStatement[21485-21509]"
    }, {
      "left" : "result[i] = name;",
      "right" : "result[i] = name;",
      "info" : "ExpressionStatement[21503-21520]:ExpressionStatement[21523-21540]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[21541-21555]:ReturnStatement[21561-21575]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21745-21751]:Modifier[21765-21771]"
    }, {
      "left" : "Comparable",
      "right" : "Comparable",
      "info" : "SimpleType[21752-21762]:SimpleType[21772-21782]"
    }, {
      "left" : "getColumnKey",
      "right" : "getColumnKey",
      "info" : "SimpleName[21763-21775]:SimpleName[21783-21795]"
    }, {
      "left" : "int column",
      "right" : "int column",
      "info" : "SingleVariableDeclaration[21776-21786]:SingleVariableDeclaration[21796-21806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21788-21839]:Block[21808-21859]"
    }, {
      "left" : "return this.categoryKeys[column];",
      "right" : "return this.categoryKeys[column];",
      "info" : "ReturnStatement[21799-21832]:ReturnStatement[21819-21852]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22075-22081]:Modifier[22095-22101]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[22082-22085]:PrimitiveType[22102-22105]"
    }, {
      "left" : "getColumnIndex",
      "right" : "getColumnIndex",
      "info" : "SimpleName[22086-22100]:SimpleName[22106-22120]"
    }, {
      "left" : "Comparable columnKey",
      "right" : "Comparable columnKey",
      "info" : "SingleVariableDeclaration[22101-22121]:SingleVariableDeclaration[22121-22141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22123-22300]:Block[22143-22320]"
    }, {
      "left" : "if (columnKey == null)",
      "right" : "if (columnKey == null)",
      "info" : "IfStatement[22134-22248]:IfStatement[22154-22268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22157-22248]:Block[22177-22268]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'columnKey' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'columnKey' argument.\");",
      "info" : "ThrowStatement[22172-22237]:ThrowStatement[22192-22257]"
    }, {
      "left" : "return getCategoryIndex(columnKey);",
      "right" : "return getCategoryIndex(columnKey);",
      "info" : "ReturnStatement[22258-22293]:ReturnStatement[22278-22313]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22488-22494]:Modifier[22508-22514]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[22495-22498]:PrimitiveType[22515-22518]"
    }, {
      "left" : "getRowIndex",
      "right" : "getRowIndex",
      "info" : "SimpleName[22499-22510]:SimpleName[22519-22530]"
    }, {
      "left" : "Comparable rowKey",
      "right" : "Comparable rowKey",
      "info" : "SingleVariableDeclaration[22511-22528]:SingleVariableDeclaration[22531-22548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22530-22578]:Block[22550-22598]"
    }, {
      "left" : "return getSeriesIndex(rowKey);",
      "right" : "return getSeriesIndex(rowKey);",
      "info" : "ReturnStatement[22541-22571]:ReturnStatement[22561-22591]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22827-22833]:Modifier[22847-22853]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[22834-22838]:SimpleType[22854-22858]"
    }, {
      "left" : "getRowKeys",
      "right" : "getRowKeys",
      "info" : "SimpleName[22839-22849]:SimpleName[22859-22869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22852-23184]:Block[22872-23204]"
    }, {
      "left" : "if (this.seriesKeys == null)",
      "right" : "if (this.seriesKeys == null)",
      "info" : "IfStatement[22980-23177]:IfStatement[23000-23197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23009-23068]:Block[23029-23088]"
    }, {
      "left" : "return new java.util.ArrayList();",
      "right" : "return new java.util.ArrayList();",
      "info" : "ReturnStatement[23024-23057]:ReturnStatement[23044-23077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23083-23177]:Block[23103-23197]"
    }, {
      "left" : "return Collections.unmodifiableList(Arrays.asList(this.seriesKeys));",
      "right" : "return Collections.unmodifiableList(Arrays.asList(this.seriesKeys));",
      "info" : "ReturnStatement[23098-23166]:ReturnStatement[23118-23186]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23438-23444]:Modifier[23458-23464]"
    }, {
      "left" : "Comparable",
      "right" : "Comparable",
      "info" : "SimpleType[23445-23455]:SimpleType[23465-23475]"
    }, {
      "left" : "getRowKey",
      "right" : "getRowKey",
      "info" : "SimpleName[23456-23465]:SimpleName[23476-23485]"
    }, {
      "left" : "int row",
      "right" : "int row",
      "info" : "SingleVariableDeclaration[23466-23473]:SingleVariableDeclaration[23486-23493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23475-23695]:Block[23495-23715]"
    }, {
      "left" : "if ((row >= getRowCount()) || (row < 0))",
      "right" : "if ((row >= getRowCount()) || (row < 0))",
      "info" : "IfStatement[23486-23650]:IfStatement[23506-23670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23527-23650]:Block[23547-23670]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"The 'row' argument is out of bounds.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"The 'row' argument is out of bounds.\");",
      "info" : "ThrowStatement[23542-23639]:ThrowStatement[23562-23659]"
    }, {
      "left" : "return this.seriesKeys[row];",
      "right" : "return this.seriesKeys[row];",
      "info" : "ReturnStatement[23660-23688]:ReturnStatement[23680-23708]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23985-23991]:Modifier[24005-24011]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[23992-23995]:PrimitiveType[24012-24015]"
    }, {
      "left" : "getColumnCount",
      "right" : "getColumnCount",
      "info" : "SimpleName[23996-24010]:SimpleName[24016-24030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24013-24063]:Block[24033-24083]"
    }, {
      "left" : "return this.categoryKeys.length;",
      "right" : "return this.categoryKeys.length;",
      "info" : "ReturnStatement[24024-24056]:ReturnStatement[24044-24076]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24290-24296]:Modifier[24310-24316]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[24297-24300]:PrimitiveType[24317-24320]"
    }, {
      "left" : "getRowCount",
      "right" : "getRowCount",
      "info" : "SimpleName[24301-24312]:SimpleName[24321-24332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24315-24363]:Block[24335-24383]"
    }, {
      "left" : "return this.seriesKeys.length;",
      "right" : "return this.seriesKeys.length;",
      "info" : "ReturnStatement[24326-24356]:ReturnStatement[24346-24376]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24566-24572]:Modifier[24586-24592]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[24573-24580]:PrimitiveType[24593-24600]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[24581-24587]:SimpleName[24601-24607]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[24588-24598]:SingleVariableDeclaration[24608-24618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24600-25328]:Block[24620-25348]"
    }, {
      "left" : "if (obj == this)",
      "right" : "if (obj == this)",
      "info" : "IfStatement[24611-24666]:IfStatement[24631-24686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24628-24666]:Block[24648-24686]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[24643-24655]:ReturnStatement[24663-24675]"
    }, {
      "left" : "if (!(obj instanceof DefaultIntervalCategoryDataset))",
      "right" : "if (!(obj instanceof DefaultIntervalCategoryDataset))",
      "info" : "IfStatement[24676-24769]:IfStatement[24696-24789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24730-24769]:Block[24750-24789]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[24745-24758]:ReturnStatement[24765-24778]"
    }, {
      "left" : "DefaultIntervalCategoryDataset that \r\n                = (DefaultIntervalCategoryDataset) obj;",
      "right" : "DefaultIntervalCategoryDataset that \r\n                = (DefaultIntervalCategoryDataset) obj;",
      "info" : "VariableDeclarationStatement[24779-24872]:VariableDeclarationStatement[24799-24892]"
    }, {
      "left" : "if (!Arrays.equals(this.seriesKeys, that.seriesKeys))",
      "right" : "if (!Arrays.equals(this.seriesKeys, that.seriesKeys))",
      "info" : "IfStatement[24882-24975]:IfStatement[24902-24995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24936-24975]:Block[24956-24995]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[24951-24964]:ReturnStatement[24971-24984]"
    }, {
      "left" : "if (!Arrays.equals(this.categoryKeys, that.categoryKeys))",
      "right" : "if (!Arrays.equals(this.categoryKeys, that.categoryKeys))",
      "info" : "IfStatement[24985-25082]:IfStatement[25005-25102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25043-25082]:Block[25063-25102]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[25058-25071]:ReturnStatement[25078-25091]"
    }, {
      "left" : "if (!equal(this.startData, that.startData))",
      "right" : "if (!equal(this.startData, that.startData))",
      "info" : "IfStatement[25092-25175]:IfStatement[25112-25195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25136-25175]:Block[25156-25195]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[25151-25164]:ReturnStatement[25171-25184]"
    }, {
      "left" : "if (!equal(this.endData, that.endData))",
      "right" : "if (!equal(this.endData, that.endData))",
      "info" : "IfStatement[25185-25264]:IfStatement[25205-25284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25225-25264]:Block[25245-25284]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[25240-25253]:ReturnStatement[25260-25273]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[25309-25321]:ReturnStatement[25329-25341]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25540-25546]:Modifier[25560-25566]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[25547-25553]:SimpleType[25567-25573]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[25554-25559]:SimpleName[25574-25579]"
    }, {
      "left" : "CloneNotSupportedException",
      "right" : "CloneNotSupportedException",
      "info" : "SimpleType[25569-25595]:SimpleType[25589-25615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25596-25977]:Block[25616-25997]"
    }, {
      "left" : "DefaultIntervalCategoryDataset clone \r\n                = (DefaultIntervalCategoryDataset) super.clone();",
      "right" : "DefaultIntervalCategoryDataset clone \r\n                = (DefaultIntervalCategoryDataset) super.clone();",
      "info" : "VariableDeclarationStatement[25607-25711]:VariableDeclarationStatement[25627-25731]"
    }, {
      "left" : "clone.categoryKeys = (Comparable[]) this.categoryKeys.clone();",
      "right" : "clone.categoryKeys = (Comparable[]) this.categoryKeys.clone();",
      "info" : "ExpressionStatement[25721-25783]:ExpressionStatement[25741-25803]"
    }, {
      "left" : "clone.seriesKeys = (Comparable[]) this.seriesKeys.clone();",
      "right" : "clone.seriesKeys = (Comparable[]) this.seriesKeys.clone();",
      "info" : "ExpressionStatement[25793-25851]:ExpressionStatement[25813-25871]"
    }, {
      "left" : "clone.startData = clone(this.startData);",
      "right" : "clone.startData = clone(this.startData);",
      "info" : "ExpressionStatement[25861-25901]:ExpressionStatement[25881-25921]"
    }, {
      "left" : "clone.endData = clone(this.endData);",
      "right" : "clone.endData = clone(this.endData);",
      "info" : "ExpressionStatement[25911-25947]:ExpressionStatement[25931-25967]"
    }, {
      "left" : "return clone;",
      "right" : "return clone;",
      "info" : "ReturnStatement[25957-25970]:ReturnStatement[25977-25990]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26244-26251]:Modifier[26264-26271]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[26252-26258]:Modifier[26272-26278]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[26259-26266]:PrimitiveType[26279-26286]"
    }, {
      "left" : "equal",
      "right" : "equal",
      "info" : "SimpleName[26267-26272]:SimpleName[26287-26292]"
    }, {
      "left" : "Number[][] array1",
      "right" : "Number[][] array1",
      "info" : "SingleVariableDeclaration[26273-26290]:SingleVariableDeclaration[26293-26310]"
    }, {
      "left" : "Number[][] array2",
      "right" : "Number[][] array2",
      "info" : "SingleVariableDeclaration[26292-26309]:SingleVariableDeclaration[26312-26329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26311-26740]:Block[26331-26760]"
    }, {
      "left" : "if (array1 == null)",
      "right" : "if (array1 == null)",
      "info" : "IfStatement[26322-26392]:IfStatement[26342-26412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26342-26392]:Block[26362-26412]"
    }, {
      "left" : "return (array2 == null);",
      "right" : "return (array2 == null);",
      "info" : "ReturnStatement[26357-26381]:ReturnStatement[26377-26401]"
    }, {
      "left" : "if (array2 == null)",
      "right" : "if (array2 == null)",
      "info" : "IfStatement[26402-26461]:IfStatement[26422-26481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26422-26461]:Block[26442-26481]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[26437-26450]:ReturnStatement[26457-26470]"
    }, {
      "left" : "if (array1.length != array2.length)",
      "right" : "if (array1.length != array2.length)",
      "info" : "IfStatement[26471-26546]:IfStatement[26491-26566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26507-26546]:Block[26527-26566]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[26522-26535]:ReturnStatement[26542-26555]"
    }, {
      "left" : "for (int i = 0; i < array1.length; i++)",
      "right" : "for (int i = 0; i < array1.length; i++)",
      "info" : "ForStatement[26556-26711]:ForStatement[26576-26731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26596-26711]:Block[26616-26731]"
    }, {
      "left" : "if (!Arrays.equals(array1[i], array2[i]))",
      "right" : "if (!Arrays.equals(array1[i], array2[i]))",
      "info" : "IfStatement[26611-26700]:IfStatement[26631-26720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26653-26700]:Block[26673-26720]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[26672-26685]:ReturnStatement[26692-26705]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[26721-26733]:ReturnStatement[26741-26753]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26964-26971]:Modifier[26984-26991]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[26972-26978]:Modifier[26992-26998]"
    }, {
      "left" : "Number[][]",
      "right" : "Number[][]",
      "info" : "ArrayType[26979-26989]:ArrayType[26999-27009]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[26990-26995]:SimpleName[27010-27015]"
    }, {
      "left" : "Number[][] array",
      "right" : "Number[][] array",
      "info" : "SingleVariableDeclaration[26996-27012]:SingleVariableDeclaration[27016-27032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27014-27485]:Block[27034-27505]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[27025-27131]:IfStatement[27045-27151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27044-27131]:Block[27064-27151]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'array' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'array' argument.\");",
      "info" : "ThrowStatement[27059-27120]:ThrowStatement[27079-27140]"
    }, {
      "left" : "Number[][] result = new Number[array.length][];",
      "right" : "Number[][] result = new Number[array.length][];",
      "info" : "VariableDeclarationStatement[27141-27188]:VariableDeclarationStatement[27161-27208]"
    }, {
      "left" : "for (int i = 0; i < array.length; i++)",
      "right" : "for (int i = 0; i < array.length; i++)",
      "info" : "ForStatement[27198-27454]:ForStatement[27218-27474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27237-27454]:Block[27257-27474]"
    }, {
      "left" : "Number[] child = array[i];",
      "right" : "Number[] child = array[i];",
      "info" : "VariableDeclarationStatement[27252-27278]:VariableDeclarationStatement[27272-27298]"
    }, {
      "left" : "Number[] copychild = new Number[child.length];",
      "right" : "Number[] copychild = new Number[child.length];",
      "info" : "VariableDeclarationStatement[27292-27338]:VariableDeclarationStatement[27312-27358]"
    }, {
      "left" : "System.arraycopy(child, 0, copychild, 0, child.length);",
      "right" : "System.arraycopy(child, 0, copychild, 0, child.length);",
      "info" : "ExpressionStatement[27352-27407]:ExpressionStatement[27372-27427]"
    }, {
      "left" : "result[i] = copychild;",
      "right" : "result[i] = copychild;",
      "info" : "ExpressionStatement[27421-27443]:ExpressionStatement[27441-27463]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[27464-27478]:ReturnStatement[27484-27498]"
    } ]
  },
  "interFileMappings" : { }
}