{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BeanDeserializerFactory",
      "right" : "BeanDeserializerFactory",
      "info" : "TypeDeclaration[714-41581]:TypeDeclaration[714-41600]"
    }, {
      "left" : "private static final long serialVersionUID = 1;",
      "right" : "private static final long serialVersionUID = 1;",
      "info" : "FieldDeclaration[1365-1412]:FieldDeclaration[1365-1412]"
    }, {
      "left" : "private final static Class<?>[] INIT_CAUSE_PARAMS = new Class<?>[] { Throwable.class };",
      "right" : "private final static Class<?>[] INIT_CAUSE_PARAMS = new Class<?>[] { Throwable.class };",
      "info" : "FieldDeclaration[1418-1576]:FieldDeclaration[1418-1576]"
    }, {
      "left" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "right" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "info" : "FieldDeclaration[1582-1641]:FieldDeclaration[1582-1641]"
    }, {
      "left" : "protected final static Set<String> DEFAULT_NO_DESER_CLASS_NAMES;",
      "right" : "protected final static Set<String> DEFAULT_NO_DESER_CLASS_NAMES;",
      "info" : "FieldDeclaration[1647-1894]:FieldDeclaration[1647-1894]"
    }, {
      "left" : "protected Set<String> _cfgIllegalClassNames = DEFAULT_NO_DESER_CLASS_NAMES;",
      "right" : "protected Set<String> _cfgIllegalClassNames = DEFAULT_NO_DESER_CLASS_NAMES;",
      "info" : "FieldDeclaration[2776-2964]:FieldDeclaration[2776-2964]"
    }, {
      "left" : "public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(\n            new DeserializerFactoryConfig());",
      "right" : "public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(\n            new DeserializerFactoryConfig());",
      "info" : "FieldDeclaration[3136-3391]:FieldDeclaration[3136-3391]"
    }, {
      "left" : "public BeanDeserializerFactory(DeserializerFactoryConfig config)",
      "right" : "public BeanDeserializerFactory(DeserializerFactoryConfig config)",
      "info" : "MethodDeclaration[3397-3492]:MethodDeclaration[3397-3492]"
    }, {
      "left" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
      "right" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
      "info" : "MethodDeclaration[3502-4735]:MethodDeclaration[3502-4735]"
    }, {
      "left" : "public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[4935-7407]:MethodDeclaration[4935-7407]"
    }, {
      "left" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc,\n    \t\tClass<?> builderClass)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc,\n    \t\tClass<?> builderClass)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7413-7938]:MethodDeclaration[7413-7938]"
    }, {
      "left" : "protected JsonDeserializer<?> findStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> findStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7948-8863]:MethodDeclaration[7948-8863]"
    }, {
      "left" : "protected JavaType materializeAbstractType(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JavaType materializeAbstractType(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[8873-9414]:MethodDeclaration[8873-9414]"
    }, {
      "left" : "public JsonDeserializer<Object> buildBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> buildBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[9708-12441]:MethodDeclaration[9708-12441]"
    }, {
      "left" : "protected JsonDeserializer<Object> buildBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> buildBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[12451-15245]:MethodDeclaration[12451-15245]"
    }, {
      "left" : "protected void addObjectIdReader(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addObjectIdReader(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[15255-17105]:MethodDeclaration[15255-17105]"
    }, {
      "left" : "public JsonDeserializer<Object> buildThrowableDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> buildThrowableDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[17115-20177]:MethodDeclaration[17115-20177]"
    }, {
      "left" : "protected BeanDeserializerBuilder constructBeanDeserializerBuilder(DeserializationContext ctxt,\n            BeanDescription beanDesc)",
      "right" : "protected BeanDeserializerBuilder constructBeanDeserializerBuilder(DeserializationContext ctxt,\n            BeanDescription beanDesc)",
      "info" : "MethodDeclaration[20419-20818]:MethodDeclaration[20419-20818]"
    }, {
      "left" : "protected void addBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[20828-28209]:MethodDeclaration[20828-28228]"
    }, {
      "left" : "protected List<BeanPropertyDefinition> filterBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder,\n            List<BeanPropertyDefinition> propDefsIn,\n            Set<String> ignored)\n        throws JsonMappingException",
      "right" : "protected List<BeanPropertyDefinition> filterBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder,\n            List<BeanPropertyDefinition> propDefsIn,\n            Set<String> ignored)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[28219-30178]:MethodDeclaration[28238-30197]"
    }, {
      "left" : "protected void addReferenceProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addReferenceProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[30184-31993]:MethodDeclaration[30203-32012]"
    }, {
      "left" : "protected void addInjectables(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addInjectables(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[31999-32828]:MethodDeclaration[32018-32847]"
    }, {
      "left" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedMember mutator)\n        throws JsonMappingException",
      "right" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedMember mutator)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[32834-34963]:MethodDeclaration[32853-34982]"
    }, {
      "left" : "protected SettableBeanProperty constructSettableProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef,\n            JavaType propType0)\n        throws JsonMappingException",
      "right" : "protected SettableBeanProperty constructSettableProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef,\n            JavaType propType0)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[34969-37451]:MethodDeclaration[34988-37470]"
    }, {
      "left" : "protected SettableBeanProperty constructSetterlessProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef)\n        throws JsonMappingException",
      "right" : "protected SettableBeanProperty constructSetterlessProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[37457-38487]:MethodDeclaration[37476-38506]"
    }, {
      "left" : "protected boolean isPotentialBeanType(Class<?> type)",
      "right" : "protected boolean isPotentialBeanType(Class<?> type)",
      "info" : "MethodDeclaration[38688-39866]:MethodDeclaration[38707-39885]"
    }, {
      "left" : "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc,\n            Class<?> type, Map<Class<?>,Boolean> ignoredTypes)",
      "right" : "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc,\n            Class<?> type, Map<Class<?>,Boolean> ignoredTypes)",
      "info" : "MethodDeclaration[39872-40987]:MethodDeclaration[39891-41006]"
    }, {
      "left" : "protected void checkIllegalTypes(DeserializationContext ctxt, JavaType type,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected void checkIllegalTypes(DeserializationContext ctxt, JavaType type,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[40993-41579]:MethodDeclaration[41012-41598]"
    } ],
    "mappings" : [
 {
      "left" : "BasicDeserializerFactory",
      "right" : "BasicDeserializerFactory",
      "info" : "SimpleType[1285-1309]:SimpleType[1285-1309]"
    }, {
      "left" : "java.io.Serializable",
      "right" : "java.io.Serializable",
      "info" : "SimpleType[1325-1345]:SimpleType[1325-1345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1906-2770]:Block[1906-2770]"
    }, {
      "left" : "Set<String> s = new HashSet<>();",
      "right" : "Set<String> s = new HashSet<>();",
      "info" : "VariableDeclarationStatement[1916-1948]:VariableDeclarationStatement[1916-1948]"
    }, {
      "left" : "s.add(\"org.apache.commons.collections.functors.InvokerTransformer\");",
      "right" : "s.add(\"org.apache.commons.collections.functors.InvokerTransformer\");",
      "info" : "ExpressionStatement[2058-2126]:ExpressionStatement[2058-2126]"
    }, {
      "left" : "s.add(\"org.apache.commons.collections.functors.InstantiateTransformer\");",
      "right" : "s.add(\"org.apache.commons.collections.functors.InstantiateTransformer\");",
      "info" : "ExpressionStatement[2135-2207]:ExpressionStatement[2135-2207]"
    }, {
      "left" : "s.add(\"org.apache.commons.collections4.functors.InvokerTransformer\");",
      "right" : "s.add(\"org.apache.commons.collections4.functors.InvokerTransformer\");",
      "info" : "ExpressionStatement[2216-2285]:ExpressionStatement[2216-2285]"
    }, {
      "left" : "s.add(\"org.apache.commons.collections4.functors.InstantiateTransformer\");",
      "right" : "s.add(\"org.apache.commons.collections4.functors.InstantiateTransformer\");",
      "info" : "ExpressionStatement[2294-2367]:ExpressionStatement[2294-2367]"
    }, {
      "left" : "s.add(\"org.codehaus.groovy.runtime.ConvertedClosure\");",
      "right" : "s.add(\"org.codehaus.groovy.runtime.ConvertedClosure\");",
      "info" : "ExpressionStatement[2376-2430]:ExpressionStatement[2376-2430]"
    }, {
      "left" : "s.add(\"org.codehaus.groovy.runtime.MethodClosure\");",
      "right" : "s.add(\"org.codehaus.groovy.runtime.MethodClosure\");",
      "info" : "ExpressionStatement[2439-2490]:ExpressionStatement[2439-2490]"
    }, {
      "left" : "s.add(\"org.springframework.beans.factory.ObjectFactory\");",
      "right" : "s.add(\"org.springframework.beans.factory.ObjectFactory\");",
      "info" : "ExpressionStatement[2499-2556]:ExpressionStatement[2499-2556]"
    }, {
      "left" : "s.add(\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\");",
      "right" : "s.add(\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\");",
      "info" : "ExpressionStatement[2565-2633]:ExpressionStatement[2565-2633]"
    }, {
      "left" : "s.add(\"org.apache.xalan.xsltc.trax.TemplatesImpl\");",
      "right" : "s.add(\"org.apache.xalan.xsltc.trax.TemplatesImpl\");",
      "info" : "ExpressionStatement[2642-2693]:ExpressionStatement[2642-2693]"
    }, {
      "left" : "DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);",
      "right" : "DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);",
      "info" : "ExpressionStatement[2702-2764]:ExpressionStatement[2702-2764]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3397-3403]:Modifier[3397-3403]"
    }, {
      "left" : "BeanDeserializerFactory",
      "right" : "BeanDeserializerFactory",
      "info" : "SimpleName[3404-3427]:SimpleName[3404-3427]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[3428-3460]:SingleVariableDeclaration[3428-3460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3462-3492]:Block[3462-3492]"
    }, {
      "left" : "super(config);",
      "right" : "super(config);",
      "info" : "SuperConstructorInvocation[3472-3486]:SuperConstructorInvocation[3472-3486]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3673-3682]:MarkerAnnotation[3673-3682]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3687-3693]:Modifier[3687-3693]"
    }, {
      "left" : "DeserializerFactory",
      "right" : "DeserializerFactory",
      "info" : "SimpleType[3694-3713]:SimpleType[3694-3713]"
    }, {
      "left" : "withConfig",
      "right" : "withConfig",
      "info" : "SimpleName[3714-3724]:SimpleName[3714-3724]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[3725-3757]:SingleVariableDeclaration[3725-3757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3763-4735]:Block[3763-4735]"
    }, {
      "left" : "if (_factoryConfig == config)",
      "right" : "if (_factoryConfig == config)",
      "info" : "IfStatement[3773-3839]:IfStatement[3773-3839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3803-3839]:Block[3803-3839]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3817-3829]:ReturnStatement[3817-3829]"
    }, {
      "left" : "if (getClass() != BeanDeserializerFactory.class)",
      "right" : "if (getClass() != BeanDeserializerFactory.class)",
      "info" : "IfStatement[4327-4677]:IfStatement[4327-4677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4376-4677]:Block[4376-4677]"
    }, {
      "left" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
      "right" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
      "info" : "ThrowStatement[4390-4667]:ThrowStatement[4390-4667]"
    }, {
      "left" : "return new BeanDeserializerFactory(config);",
      "right" : "return new BeanDeserializerFactory(config);",
      "info" : "ReturnStatement[4686-4729]:ReturnStatement[4686-4729]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5103-5112]:MarkerAnnotation[5103-5112]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5117-5123]:Modifier[5117-5123]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[5124-5148]:ParameterizedType[5124-5148]"
    }, {
      "left" : "createBeanDeserializer",
      "right" : "createBeanDeserializer",
      "info" : "SimpleName[5149-5171]:SimpleName[5149-5171]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[5172-5199]:SingleVariableDeclaration[5172-5199]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[5213-5226]:SingleVariableDeclaration[5213-5226]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[5228-5252]:SingleVariableDeclaration[5228-5252]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[5269-5289]:SimpleType[5269-5289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5294-7407]:Block[5294-7407]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[5304-5358]:VariableDeclarationStatement[5304-5358]"
    }, {
      "left" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
      "right" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
      "info" : "VariableDeclarationStatement[5413-5499]:VariableDeclarationStatement[5413-5499]"
    }, {
      "left" : "if (custom != null)",
      "right" : "if (custom != null)",
      "info" : "IfStatement[5508-5566]:IfStatement[5508-5566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5528-5566]:Block[5528-5566]"
    }, {
      "left" : "return custom;",
      "right" : "return custom;",
      "info" : "ReturnStatement[5542-5556]:ReturnStatement[5542-5556]"
    }, {
      "left" : "if (type.isThrowable())",
      "right" : "if (type.isThrowable())",
      "info" : "IfStatement[5747-5851]:IfStatement[5747-5851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5771-5851]:Block[5771-5851]"
    }, {
      "left" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
      "right" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[5785-5841]:ReturnStatement[5785-5841]"
    }, {
      "left" : "if (type.isAbstract() && !type.isPrimitive() && !type.isEnumType())",
      "right" : "if (type.isAbstract() && !type.isPrimitive() && !type.isEnumType())",
      "info" : "IfStatement[6132-6720]:IfStatement[6132-6720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6200-6720]:Block[6200-6720]"
    }, {
      "left" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
      "right" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[6283-6353]:VariableDeclarationStatement[6283-6353]"
    }, {
      "left" : "if (concreteType != null)",
      "right" : "if (concreteType != null)",
      "info" : "IfStatement[6366-6710]:IfStatement[6366-6710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6392-6710]:Block[6392-6710]"
    }, {
      "left" : "beanDesc = config.introspect(concreteType);",
      "right" : "beanDesc = config.introspect(concreteType);",
      "info" : "ExpressionStatement[6577-6620]:ExpressionStatement[6577-6620]"
    }, {
      "left" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
      "right" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
      "info" : "ReturnStatement[6637-6696]:ReturnStatement[6637-6696]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
      "right" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[6815-6956]:VariableDeclarationStatement[6815-6956]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[6965-7021]:IfStatement[6965-7021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6984-7021]:Block[6984-7021]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[6998-7011]:ReturnStatement[6998-7011]"
    }, {
      "left" : "if (!isPotentialBeanType(type.getRawClass()))",
      "right" : "if (!isPotentialBeanType(type.getRawClass()))",
      "info" : "IfStatement[7103-7185]:IfStatement[7103-7185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7149-7185]:Block[7149-7185]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7163-7175]:ReturnStatement[7163-7175]"
    }, {
      "left" : "checkIllegalTypes(ctxt, type, beanDesc);",
      "right" : "checkIllegalTypes(ctxt, type, beanDesc);",
      "info" : "ExpressionStatement[7237-7277]:ExpressionStatement[7237-7277]"
    }, {
      "left" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
      "right" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[7350-7401]:ReturnStatement[7350-7401]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7413-7422]:MarkerAnnotation[7413-7422]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7427-7433]:Modifier[7427-7433]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[7434-7458]:ParameterizedType[7434-7458]"
    }, {
      "left" : "createBuilderBasedDeserializer",
      "right" : "createBuilderBasedDeserializer",
      "info" : "SimpleName[7459-7489]:SimpleName[7459-7489]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[7497-7524]:SingleVariableDeclaration[7497-7524]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[7526-7544]:SingleVariableDeclaration[7526-7544]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[7546-7570]:SingleVariableDeclaration[7546-7570]"
    }, {
      "left" : "Class<?> builderClass",
      "right" : "Class<?> builderClass",
      "info" : "SingleVariableDeclaration[7578-7599]:SingleVariableDeclaration[7578-7599]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7616-7636]:SimpleType[7616-7636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7641-7938]:Block[7641-7938]"
    }, {
      "left" : "JavaType builderType = ctxt.constructType(builderClass);",
      "right" : "JavaType builderType = ctxt.constructType(builderClass);",
      "info" : "VariableDeclarationStatement[7710-7766]:VariableDeclarationStatement[7710-7766]"
    }, {
      "left" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
      "right" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
      "info" : "VariableDeclarationStatement[7775-7856]:VariableDeclarationStatement[7775-7856]"
    }, {
      "left" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
      "right" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
      "info" : "ReturnStatement[7865-7932]:ReturnStatement[7865-7932]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8103-8112]:Modifier[8103-8112]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[8113-8132]:ParameterizedType[8113-8132]"
    }, {
      "left" : "findStdDeserializer",
      "right" : "findStdDeserializer",
      "info" : "SimpleName[8133-8152]:SimpleName[8133-8152]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[8153-8180]:SingleVariableDeclaration[8153-8180]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[8194-8207]:SingleVariableDeclaration[8194-8207]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[8209-8233]:SingleVariableDeclaration[8209-8233]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[8250-8270]:SimpleType[8250-8270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8275-8863]:Block[8275-8863]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
      "right" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[8389-8463]:VariableDeclarationStatement[8389-8463]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[8531-8835]:IfStatement[8531-8835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8550-8835]:Block[8550-8835]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[8564-8825]:IfStatement[8564-8825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8611-8825]:Block[8611-8825]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[8629-8811]:EnhancedForStatement[8629-8811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8705-8811]:Block[8705-8811]"
    }, {
      "left" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
      "right" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
      "info" : "ExpressionStatement[8727-8793]:ExpressionStatement[8727-8793]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[8844-8857]:ReturnStatement[8844-8857]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8873-8882]:Modifier[8873-8882]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[8883-8891]:SimpleType[8883-8891]"
    }, {
      "left" : "materializeAbstractType",
      "right" : "materializeAbstractType",
      "info" : "SimpleName[8892-8915]:SimpleName[8892-8915]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[8916-8943]:SingleVariableDeclaration[8916-8943]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[8957-8970]:SingleVariableDeclaration[8957-8970]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[8972-8996]:SingleVariableDeclaration[8972-8996]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[9013-9033]:SimpleType[9013-9033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9038-9414]:Block[9038-9414]"
    }, {
      "left" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
      "right" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
      "info" : "EnhancedForStatement[9140-9387]:EnhancedForStatement[9140-9387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9210-9387]:Block[9210-9387]"
    }, {
      "left" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
      "right" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
      "info" : "VariableDeclarationStatement[9224-9294]:VariableDeclarationStatement[9224-9294]"
    }, {
      "left" : "if (concrete != null)",
      "right" : "if (concrete != null)",
      "info" : "IfStatement[9307-9377]:IfStatement[9307-9377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9329-9377]:Block[9329-9377]"
    }, {
      "left" : "return concrete;",
      "right" : "return concrete;",
      "info" : "ReturnStatement[9347-9363]:ReturnStatement[9347-9363]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9396-9408]:ReturnStatement[9396-9408]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[9958-9988]:SingleMemberAnnotation[9958-9988]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9993-9999]:Modifier[9993-9999]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[10000-10024]:ParameterizedType[10000-10024]"
    }, {
      "left" : "buildBeanDeserializer",
      "right" : "buildBeanDeserializer",
      "info" : "SimpleName[10025-10046]:SimpleName[10025-10046]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[10047-10074]:SingleVariableDeclaration[10047-10074]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[10088-10101]:SingleVariableDeclaration[10088-10101]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[10103-10127]:SingleVariableDeclaration[10103-10127]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[10144-10164]:SimpleType[10144-10164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10169-12441]:Block[10169-12441]"
    }, {
      "left" : "ValueInstantiator valueInstantiator;",
      "right" : "ValueInstantiator valueInstantiator;",
      "info" : "VariableDeclarationStatement[10236-10272]:VariableDeclarationStatement[10236-10272]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[10592-10782]:TryStatement[10592-10782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10596-10678]:Block[10596-10678]"
    }, {
      "left" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
      "right" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
      "info" : "ExpressionStatement[10610-10668]:ExpressionStatement[10610-10668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10714-10782]:Block[10714-10782]"
    }, {
      "left" : "return new ErrorThrowingDeserializer(error);",
      "right" : "return new ErrorThrowingDeserializer(error);",
      "info" : "ReturnStatement[10728-10772]:ReturnStatement[10728-10772]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[10791-10874]:VariableDeclarationStatement[10791-10874]"
    }, {
      "left" : "builder.setValueInstantiator(valueInstantiator);",
      "right" : "builder.setValueInstantiator(valueInstantiator);",
      "info" : "ExpressionStatement[10883-10931]:ExpressionStatement[10883-10931]"
    }, {
      "left" : "addBeanProps(ctxt, beanDesc, builder);",
      "right" : "addBeanProps(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11004-11042]:ExpressionStatement[11004-11042]"
    }, {
      "left" : "addObjectIdReader(ctxt, beanDesc, builder);",
      "right" : "addObjectIdReader(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11051-11094]:ExpressionStatement[11051-11094]"
    }, {
      "left" : "addReferenceProperties(ctxt, beanDesc, builder);",
      "right" : "addReferenceProperties(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11189-11237]:ExpressionStatement[11189-11237]"
    }, {
      "left" : "addInjectables(ctxt, beanDesc, builder);",
      "right" : "addInjectables(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11246-11286]:ExpressionStatement[11246-11286]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[11304-11358]:VariableDeclarationStatement[11304-11358]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[11367-11601]:IfStatement[11367-11601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11414-11601]:Block[11414-11601]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[11428-11591]:EnhancedForStatement[11428-11591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11504-11591]:Block[11504-11591]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[11522-11577]:ExpressionStatement[11522-11577]"
    }, {
      "left" : "JsonDeserializer<?> deserializer;",
      "right" : "JsonDeserializer<?> deserializer;",
      "info" : "VariableDeclarationStatement[11610-11643]:VariableDeclarationStatement[11610-11643]"
    }, {
      "left" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
      "right" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
      "info" : "IfStatement[11829-12015]:IfStatement[11829-12015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11891-11954]:Block[11891-11954]"
    }, {
      "left" : "deserializer = builder.buildAbstract();",
      "right" : "deserializer = builder.buildAbstract();",
      "info" : "ExpressionStatement[11905-11944]:ExpressionStatement[11905-11944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11960-12015]:Block[11960-12015]"
    }, {
      "left" : "deserializer = builder.build();",
      "right" : "deserializer = builder.build();",
      "info" : "ExpressionStatement[11974-12005]:ExpressionStatement[11974-12005]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[12130-12379]:IfStatement[12130-12379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12177-12379]:Block[12177-12379]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[12191-12369]:EnhancedForStatement[12191-12369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12267-12369]:Block[12267-12369]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "info" : "ExpressionStatement[12285-12355]:ExpressionStatement[12285-12355]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[12388-12435]:ReturnStatement[12388-12435]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[12735-12765]:SingleMemberAnnotation[12735-12765]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[12770-12779]:Modifier[12770-12779]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[12780-12804]:ParameterizedType[12780-12804]"
    }, {
      "left" : "buildBuilderBasedDeserializer",
      "right" : "buildBuilderBasedDeserializer",
      "info" : "SimpleName[12805-12834]:SimpleName[12805-12834]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[12842-12869]:SingleVariableDeclaration[12842-12869]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[12871-12889]:SingleVariableDeclaration[12871-12889]"
    }, {
      "left" : "BeanDescription builderDesc",
      "right" : "BeanDescription builderDesc",
      "info" : "SingleVariableDeclaration[12891-12918]:SingleVariableDeclaration[12891-12918]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[12935-12955]:SimpleType[12935-12955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12960-15245]:Block[12960-15245]"
    }, {
      "left" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
      "right" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
      "info" : "VariableDeclarationStatement[13023-13102]:VariableDeclarationStatement[13023-13102]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[13111-13165]:VariableDeclarationStatement[13111-13165]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
      "info" : "VariableDeclarationStatement[13174-13260]:VariableDeclarationStatement[13174-13260]"
    }, {
      "left" : "builder.setValueInstantiator(valueInstantiator);",
      "right" : "builder.setValueInstantiator(valueInstantiator);",
      "info" : "ExpressionStatement[13269-13317]:ExpressionStatement[13269-13317]"
    }, {
      "left" : "addBeanProps(ctxt, builderDesc, builder);",
      "right" : "addBeanProps(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[13397-13438]:ExpressionStatement[13397-13438]"
    }, {
      "left" : "addObjectIdReader(ctxt, builderDesc, builder);",
      "right" : "addObjectIdReader(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[13447-13493]:ExpressionStatement[13447-13493]"
    }, {
      "left" : "addReferenceProperties(ctxt, builderDesc, builder);",
      "right" : "addReferenceProperties(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[13596-13647]:ExpressionStatement[13596-13647]"
    }, {
      "left" : "addInjectables(ctxt, builderDesc, builder);",
      "right" : "addInjectables(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[13656-13699]:ExpressionStatement[13656-13699]"
    }, {
      "left" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
      "right" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
      "info" : "VariableDeclarationStatement[13709-13783]:VariableDeclarationStatement[13709-13783]"
    }, {
      "left" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
      "right" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
      "info" : "VariableDeclarationStatement[13792-13905]:VariableDeclarationStatement[13792-13905]"
    }, {
      "left" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
      "right" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
      "info" : "VariableDeclarationStatement[13972-14048]:VariableDeclarationStatement[13972-14048]"
    }, {
      "left" : "if (buildMethod != null)",
      "right" : "if (buildMethod != null)",
      "info" : "IfStatement[14057-14353]:IfStatement[14057-14353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14082-14353]:Block[14082-14353]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[14154-14343]:IfStatement[14154-14343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14195-14343]:Block[14195-14343]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[14210-14329]:ExpressionStatement[14210-14329]"
    }, {
      "left" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
      "right" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
      "info" : "ExpressionStatement[14362-14413]:ExpressionStatement[14362-14413]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[14470-14707]:IfStatement[14470-14707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14517-14707]:Block[14517-14707]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[14531-14697]:EnhancedForStatement[14531-14697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14607-14697]:Block[14607-14697]"
    }, {
      "left" : "builder = mod.updateBuilder(config, builderDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, builderDesc, builder);",
      "info" : "ExpressionStatement[14625-14683]:ExpressionStatement[14625-14683]"
    }, {
      "left" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
      "right" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
      "info" : "VariableDeclarationStatement[14716-14816]:VariableDeclarationStatement[14716-14816]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[14931-15183]:IfStatement[14931-15183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14978-15183]:Block[14978-15183]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[14992-15173]:EnhancedForStatement[14992-15173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15068-15173]:Block[15068-15173]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
      "info" : "ExpressionStatement[15086-15159]:ExpressionStatement[15086-15159]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[15192-15239]:ReturnStatement[15192-15239]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[15255-15264]:Modifier[15255-15264]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15265-15269]:PrimitiveType[15265-15269]"
    }, {
      "left" : "addObjectIdReader",
      "right" : "addObjectIdReader",
      "info" : "SimpleName[15270-15287]:SimpleName[15270-15287]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[15288-15315]:SingleVariableDeclaration[15288-15315]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[15329-15353]:SingleVariableDeclaration[15329-15353]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[15355-15386]:SingleVariableDeclaration[15355-15386]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[15403-15423]:SimpleType[15403-15423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15428-17105]:Block[15428-17105]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "info" : "VariableDeclarationStatement[15438-15493]:VariableDeclarationStatement[15438-15493]"
    }, {
      "left" : "if (objectIdInfo == null)",
      "right" : "if (objectIdInfo == null)",
      "info" : "IfStatement[15502-15559]:IfStatement[15502-15559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15528-15559]:Block[15528-15559]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[15542-15549]:ReturnStatement[15542-15549]"
    }, {
      "left" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "right" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "info" : "VariableDeclarationStatement[15568-15621]:VariableDeclarationStatement[15568-15621]"
    }, {
      "left" : "JavaType idType;",
      "right" : "JavaType idType;",
      "info" : "VariableDeclarationStatement[15630-15646]:VariableDeclarationStatement[15630-15646]"
    }, {
      "left" : "SettableBeanProperty idProp;",
      "right" : "SettableBeanProperty idProp;",
      "info" : "VariableDeclarationStatement[15655-15683]:VariableDeclarationStatement[15655-15683]"
    }, {
      "left" : "ObjectIdGenerator<?> gen;",
      "right" : "ObjectIdGenerator<?> gen;",
      "info" : "VariableDeclarationStatement[15692-15717]:VariableDeclarationStatement[15692-15717]"
    }, {
      "left" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "VariableDeclarationStatement[15727-15824]:VariableDeclarationStatement[15727-15824]"
    }, {
      "left" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "right" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "info" : "IfStatement[15905-16790]:IfStatement[15905-16790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15966-16501]:Block[15966-16501]"
    }, {
      "left" : "PropertyName propName = objectIdInfo.getPropertyName();",
      "right" : "PropertyName propName = objectIdInfo.getPropertyName();",
      "info" : "VariableDeclarationStatement[16018-16073]:VariableDeclarationStatement[16018-16073]"
    }, {
      "left" : "idProp = builder.findProperty(propName);",
      "right" : "idProp = builder.findProperty(propName);",
      "info" : "ExpressionStatement[16086-16126]:ExpressionStatement[16086-16126]"
    }, {
      "left" : "if (idProp == null)",
      "right" : "if (idProp == null)",
      "info" : "IfStatement[16139-16373]:IfStatement[16139-16373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16159-16373]:Block[16159-16373]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
      "right" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
      "info" : "ThrowStatement[16177-16359]:ThrowStatement[16177-16359]"
    }, {
      "left" : "idType = idProp.getType();",
      "right" : "idType = idProp.getType();",
      "info" : "ExpressionStatement[16386-16412]:ExpressionStatement[16386-16412]"
    }, {
      "left" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
      "right" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
      "info" : "ExpressionStatement[16425-16491]:ExpressionStatement[16425-16491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16507-16790]:Block[16507-16790]"
    }, {
      "left" : "JavaType type = ctxt.constructType(implClass);",
      "right" : "JavaType type = ctxt.constructType(implClass);",
      "info" : "VariableDeclarationStatement[16521-16567]:VariableDeclarationStatement[16521-16567]"
    }, {
      "left" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "right" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "info" : "ExpressionStatement[16580-16664]:ExpressionStatement[16580-16664]"
    }, {
      "left" : "idProp = null;",
      "right" : "idProp = null;",
      "info" : "ExpressionStatement[16677-16691]:ExpressionStatement[16677-16691]"
    }, {
      "left" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "ExpressionStatement[16704-16780]:ExpressionStatement[16704-16780]"
    }, {
      "left" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
      "right" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
      "info" : "VariableDeclarationStatement[16885-16952]:VariableDeclarationStatement[16885-16952]"
    }, {
      "left" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
      "right" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
      "info" : "ExpressionStatement[16961-17099]:ExpressionStatement[16961-17099]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[17115-17145]:SingleMemberAnnotation[17115-17145]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17150-17156]:Modifier[17150-17156]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[17157-17181]:ParameterizedType[17157-17181]"
    }, {
      "left" : "buildThrowableDeserializer",
      "right" : "buildThrowableDeserializer",
      "info" : "SimpleName[17182-17208]:SimpleName[17182-17208]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[17209-17236]:SingleVariableDeclaration[17209-17236]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[17250-17263]:SingleVariableDeclaration[17250-17263]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[17265-17289]:SingleVariableDeclaration[17265-17289]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[17306-17326]:SimpleType[17306-17326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17331-20177]:Block[17331-20177]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[17341-17395]:VariableDeclarationStatement[17341-17395]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[17468-17551]:VariableDeclarationStatement[17468-17551]"
    }, {
      "left" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
      "right" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
      "info" : "ExpressionStatement[17560-17628]:ExpressionStatement[17560-17628]"
    }, {
      "left" : "addBeanProps(ctxt, beanDesc, builder);",
      "right" : "addBeanProps(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[17638-17676]:ExpressionStatement[17638-17676]"
    }, {
      "left" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
      "right" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
      "info" : "VariableDeclarationStatement[17929-18002]:VariableDeclarationStatement[17929-18002]"
    }, {
      "left" : "if (am != null)",
      "right" : "if (am != null)",
      "info" : "IfStatement[18011-18690]:IfStatement[18011-18690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18027-18690]:Block[18027-18690]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
      "info" : "VariableDeclarationStatement[18065-18212]:VariableDeclarationStatement[18065-18212]"
    }, {
      "left" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
      "right" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
      "info" : "VariableDeclarationStatement[18225-18348]:VariableDeclarationStatement[18225-18348]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[18361-18680]:IfStatement[18361-18680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18379-18680]:Block[18379-18680]"
    }, {
      "left" : "builder.addOrReplaceProperty(prop, true);",
      "right" : "builder.addOrReplaceProperty(prop, true);",
      "info" : "ExpressionStatement[18625-18666]:ExpressionStatement[18625-18666]"
    }, {
      "left" : "builder.addIgnorable(\"localizedMessage\");",
      "right" : "builder.addIgnorable(\"localizedMessage\");",
      "info" : "ExpressionStatement[18754-18795]:ExpressionStatement[18754-18795]"
    }, {
      "left" : "builder.addIgnorable(\"suppressed\");",
      "right" : "builder.addIgnorable(\"suppressed\");",
      "info" : "ExpressionStatement[18877-18912]:ExpressionStatement[18877-18912]"
    }, {
      "left" : "builder.addIgnorable(\"message\");",
      "right" : "builder.addIgnorable(\"message\");",
      "info" : "ExpressionStatement[19047-19079]:ExpressionStatement[19047-19079]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[19147-19381]:IfStatement[19147-19381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19194-19381]:Block[19194-19381]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[19208-19371]:EnhancedForStatement[19208-19371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19284-19371]:Block[19284-19371]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[19302-19357]:ExpressionStatement[19302-19357]"
    }, {
      "left" : "JsonDeserializer<?> deserializer = builder.build();",
      "right" : "JsonDeserializer<?> deserializer = builder.build();",
      "info" : "VariableDeclarationStatement[19390-19441]:VariableDeclarationStatement[19390-19441]"
    }, {
      "left" : "if (deserializer instanceof BeanDeserializer)",
      "right" : "if (deserializer instanceof BeanDeserializer)",
      "info" : "IfStatement[19622-19766]:IfStatement[19622-19766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19668-19766]:Block[19668-19766]"
    }, {
      "left" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
      "right" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
      "info" : "ExpressionStatement[19682-19756]:ExpressionStatement[19682-19756]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[19866-20115]:IfStatement[19866-20115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19913-20115]:Block[19913-20115]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[19927-20105]:EnhancedForStatement[19927-20105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20003-20105]:Block[20003-20105]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "info" : "ExpressionStatement[20021-20091]:ExpressionStatement[20021-20091]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[20124-20171]:ReturnStatement[20124-20171]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[20605-20614]:Modifier[20605-20614]"
    }, {
      "left" : "BeanDeserializerBuilder",
      "right" : "BeanDeserializerBuilder",
      "info" : "SimpleType[20615-20638]:SimpleType[20615-20638]"
    }, {
      "left" : "constructBeanDeserializerBuilder",
      "right" : "constructBeanDeserializerBuilder",
      "info" : "SimpleName[20639-20671]:SimpleName[20639-20671]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[20672-20699]:SingleVariableDeclaration[20672-20699]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[20713-20737]:SingleVariableDeclaration[20713-20737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20739-20818]:Block[20739-20818]"
    }, {
      "left" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
      "right" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
      "info" : "ReturnStatement[20749-20812]:ReturnStatement[20749-20812]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[21061-21070]:Modifier[21061-21070]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21071-21075]:PrimitiveType[21071-21075]"
    }, {
      "left" : "addBeanProps",
      "right" : "addBeanProps",
      "info" : "SimpleName[21076-21088]:SimpleName[21076-21088]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[21089-21116]:SingleVariableDeclaration[21089-21116]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[21130-21154]:SingleVariableDeclaration[21130-21154]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[21156-21187]:SingleVariableDeclaration[21156-21187]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[21204-21224]:SimpleType[21204-21224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21229-28209]:Block[21229-28228]"
    }, {
      "left" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
      "right" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
      "info" : "VariableDeclarationStatement[21239-21299]:VariableDeclarationStatement[21239-21299]"
    }, {
      "left" : "final SettableBeanProperty[] creatorProps = isConcrete\n                ? builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig())\n                : null;",
      "right" : "final SettableBeanProperty[] creatorProps = isConcrete\n                ? builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig())\n                : null;",
      "info" : "VariableDeclarationStatement[21308-21476]:VariableDeclarationStatement[21308-21476]"
    }, {
      "left" : "final boolean hasCreatorProps = (creatorProps != null);",
      "right" : "final boolean hasCreatorProps = (creatorProps != null);",
      "info" : "VariableDeclarationStatement[21485-21540]:VariableDeclarationStatement[21485-21540]"
    }, {
      "left" : "JsonIgnoreProperties.Value ignorals = ctxt.getConfig()\n                .getDefaultPropertyIgnorals(beanDesc.getBeanClass(),\n                        beanDesc.getClassInfo());",
      "right" : "JsonIgnoreProperties.Value ignorals = ctxt.getConfig()\n                .getDefaultPropertyIgnorals(beanDesc.getBeanClass(),\n                        beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[21823-21996]:VariableDeclarationStatement[21823-21996]"
    }, {
      "left" : "Set<String> ignored;",
      "right" : "Set<String> ignored;",
      "info" : "VariableDeclarationStatement[22005-22025]:VariableDeclarationStatement[22005-22025]"
    }, {
      "left" : "if (ignorals != null)",
      "right" : "if (ignorals != null)",
      "info" : "IfStatement[22035-22453]:IfStatement[22035-22472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22057-22390]:Block[22057-22409]"
    }, {
      "left" : "boolean ignoreAny = ignorals.getIgnoreUnknown();",
      "right" : "boolean ignoreAny = ignorals.getIgnoreUnknown();",
      "info" : "VariableDeclarationStatement[22071-22119]:VariableDeclarationStatement[22071-22119]"
    }, {
      "left" : "builder.setIgnoreUnknownProperties(ignoreAny);",
      "right" : "builder.setIgnoreUnknownProperties(ignoreAny);",
      "info" : "ExpressionStatement[22132-22178]:ExpressionStatement[22132-22178]"
    }, {
      "left" : "ignored = ignorals.getIgnored();",
      "right" : "ignored = ignorals.findIgnoredForDeserialization();",
      "info" : "ExpressionStatement[22240-22272]:ExpressionStatement[22240-22291]"
    }, {
      "left" : "getIgnored",
      "right" : "findIgnoredForDeserialization",
      "info" : "SimpleName[22259-22269]:SimpleName[22259-22288]"
    }, {
      "left" : "for (String propName : ignored)",
      "right" : "for (String propName : ignored)",
      "info" : "EnhancedForStatement[22285-22380]:EnhancedForStatement[22304-22399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22317-22380]:Block[22336-22399]"
    }, {
      "left" : "builder.addIgnorable(propName);",
      "right" : "builder.addIgnorable(propName);",
      "info" : "ExpressionStatement[22335-22366]:ExpressionStatement[22354-22385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22396-22453]:Block[22415-22472]"
    }, {
      "left" : "ignored = Collections.emptySet();",
      "right" : "ignored = Collections.emptySet();",
      "info" : "ExpressionStatement[22410-22443]:ExpressionStatement[22429-22462]"
    }, {
      "left" : "AnnotatedMethod anySetterMethod = beanDesc.findAnySetter();",
      "right" : "AnnotatedMethod anySetterMethod = beanDesc.findAnySetter();",
      "info" : "VariableDeclarationStatement[22516-22575]:VariableDeclarationStatement[22535-22594]"
    }, {
      "left" : "AnnotatedMember anySetterField = null;",
      "right" : "AnnotatedMember anySetterField = null;",
      "info" : "VariableDeclarationStatement[22584-22622]:VariableDeclarationStatement[22603-22641]"
    }, {
      "left" : "if (anySetterMethod != null)",
      "right" : "if (anySetterMethod != null)",
      "info" : "IfStatement[22631-22973]:IfStatement[22650-22992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22660-22758]:Block[22679-22777]"
    }, {
      "left" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterMethod));",
      "right" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterMethod));",
      "info" : "ExpressionStatement[22674-22748]:ExpressionStatement[22693-22767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22772-22973]:Block[22791-22992]"
    }, {
      "left" : "anySetterField = beanDesc.findAnySetterField();",
      "right" : "anySetterField = beanDesc.findAnySetterField();",
      "info" : "ExpressionStatement[22783-22830]:ExpressionStatement[22802-22849]"
    }, {
      "left" : "if(anySetterField != null)",
      "right" : "if(anySetterField != null)",
      "info" : "IfStatement[22840-22963]:IfStatement[22859-22982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22867-22963]:Block[22886-22982]"
    }, {
      "left" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterField));",
      "right" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterField));",
      "info" : "ExpressionStatement[22879-22952]:ExpressionStatement[22898-22971]"
    }, {
      "left" : "if (anySetterMethod == null && anySetterField == null)",
      "right" : "if (anySetterMethod == null && anySetterField == null)",
      "info" : "IfStatement[23135-23605]:IfStatement[23154-23624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23190-23605]:Block[23209-23624]"
    }, {
      "left" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
      "right" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
      "info" : "VariableDeclarationStatement[23204-23269]:VariableDeclarationStatement[23223-23288]"
    }, {
      "left" : "if (ignored2 != null)",
      "right" : "if (ignored2 != null)",
      "info" : "IfStatement[23282-23595]:IfStatement[23301-23614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23304-23595]:Block[23323-23614]"
    }, {
      "left" : "for (String propName : ignored2)",
      "right" : "for (String propName : ignored2)",
      "info" : "EnhancedForStatement[23322-23581]:EnhancedForStatement[23341-23600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23355-23581]:Block[23374-23600]"
    }, {
      "left" : "builder.addIgnorable(propName);",
      "right" : "builder.addIgnorable(propName);",
      "info" : "ExpressionStatement[23532-23563]:ExpressionStatement[23551-23582]"
    }, {
      "left" : "final boolean useGettersAsSetters = ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS);",
      "right" : "final boolean useGettersAsSetters = ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS);",
      "info" : "VariableDeclarationStatement[23614-23772]:VariableDeclarationStatement[23633-23791]"
    }, {
      "left" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
      "right" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
      "info" : "VariableDeclarationStatement[23840-23973]:VariableDeclarationStatement[23859-23992]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[24044-24293]:IfStatement[24063-24312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24091-24293]:Block[24110-24312]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[24105-24283]:EnhancedForStatement[24124-24302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24181-24283]:Block[24200-24302]"
    }, {
      "left" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
      "right" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
      "info" : "ExpressionStatement[24199-24269]:ExpressionStatement[24218-24288]"
    }, {
      "left" : "for (BeanPropertyDefinition propDef : propDefs)",
      "right" : "for (BeanPropertyDefinition propDef : propDefs)",
      "info" : "EnhancedForStatement[24399-28203]:EnhancedForStatement[24418-28222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24447-28203]:Block[24466-28222]"
    }, {
      "left" : "SettableBeanProperty prop = null;",
      "right" : "SettableBeanProperty prop = null;",
      "info" : "VariableDeclarationStatement[24461-24494]:VariableDeclarationStatement[24480-24513]"
    }, {
      "left" : "if (propDef.hasSetter())",
      "right" : "if (propDef.hasSetter())",
      "info" : "IfStatement[24786-25860]:IfStatement[24805-25879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24811-24996]:Block[24830-25015]"
    }, {
      "left" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
      "right" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
      "info" : "VariableDeclarationStatement[24829-24893]:VariableDeclarationStatement[24848-24912]"
    }, {
      "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "info" : "ExpressionStatement[24910-24982]:ExpressionStatement[24929-25001]"
    }, {
      "left" : "if (propDef.hasField())",
      "right" : "if (propDef.hasField())",
      "info" : "IfStatement[25002-25860]:IfStatement[25021-25879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25026-25200]:Block[25045-25219]"
    }, {
      "left" : "JavaType propertyType = propDef.getField().getType();",
      "right" : "JavaType propertyType = propDef.getField().getType();",
      "info" : "VariableDeclarationStatement[25044-25097]:VariableDeclarationStatement[25063-25116]"
    }, {
      "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "info" : "ExpressionStatement[25114-25186]:ExpressionStatement[25133-25205]"
    }, {
      "left" : "if (useGettersAsSetters && propDef.hasGetter())",
      "right" : "if (useGettersAsSetters && propDef.hasGetter())",
      "info" : "IfStatement[25206-25860]:IfStatement[25225-25879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25254-25860]:Block[25273-25879]"
    }, {
      "left" : "AnnotatedMethod getter = propDef.getGetter();",
      "right" : "AnnotatedMethod getter = propDef.getGetter();",
      "info" : "VariableDeclarationStatement[25422-25467]:VariableDeclarationStatement[25441-25486]"
    }, {
      "left" : "Class<?> rawPropertyType = getter.getRawType();",
      "right" : "Class<?> rawPropertyType = getter.getRawType();",
      "info" : "VariableDeclarationStatement[25555-25602]:VariableDeclarationStatement[25574-25621]"
    }, {
      "left" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
      "right" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
      "info" : "IfStatement[25619-25846]:IfStatement[25638-25865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25746-25846]:Block[25765-25865]"
    }, {
      "left" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
      "right" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
      "info" : "ExpressionStatement[25768-25828]:ExpressionStatement[25787-25847]"
    }, {
      "left" : "if (hasCreatorProps && propDef.hasConstructorParameter())",
      "right" : "if (hasCreatorProps && propDef.hasConstructorParameter())",
      "info" : "IfStatement[26021-27628]:IfStatement[26040-27647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26079-27628]:Block[26098-27647]"
    }, {
      "left" : "final String name = propDef.getName();",
      "right" : "final String name = propDef.getName();",
      "info" : "VariableDeclarationStatement[26462-26500]:VariableDeclarationStatement[26481-26519]"
    }, {
      "left" : "CreatorProperty cprop = null;",
      "right" : "CreatorProperty cprop = null;",
      "info" : "VariableDeclarationStatement[26517-26546]:VariableDeclarationStatement[26536-26565]"
    }, {
      "left" : "if (creatorProps != null)",
      "right" : "if (creatorProps != null)",
      "info" : "IfStatement[26563-26908]:IfStatement[26582-26927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26589-26908]:Block[26608-26927]"
    }, {
      "left" : "for (SettableBeanProperty cp : creatorProps)",
      "right" : "for (SettableBeanProperty cp : creatorProps)",
      "info" : "EnhancedForStatement[26611-26890]:EnhancedForStatement[26630-26909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26656-26890]:Block[26675-26909]"
    }, {
      "left" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
      "right" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
      "info" : "IfStatement[26682-26868]:IfStatement[26701-26887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26748-26868]:Block[26767-26887]"
    }, {
      "left" : "cprop = (CreatorProperty) cp;",
      "right" : "cprop = (CreatorProperty) cp;",
      "info" : "ExpressionStatement[26778-26807]:ExpressionStatement[26797-26826]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[26836-26842]:BreakStatement[26855-26861]"
    }, {
      "left" : "if (cprop == null)",
      "right" : "if (cprop == null)",
      "info" : "IfStatement[26925-27402]:IfStatement[26944-27421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26944-27402]:Block[26963-27421]"
    }, {
      "left" : "List<String> n = new ArrayList<>();",
      "right" : "List<String> n = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[26966-27001]:VariableDeclarationStatement[26985-27020]"
    }, {
      "left" : "for (SettableBeanProperty cp : creatorProps)",
      "right" : "for (SettableBeanProperty cp : creatorProps)",
      "info" : "EnhancedForStatement[27022-27135]:EnhancedForStatement[27041-27154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27067-27135]:Block[27086-27154]"
    }, {
      "left" : "n.add(cp.getName());",
      "right" : "n.add(cp.getName());",
      "info" : "ExpressionStatement[27093-27113]:ExpressionStatement[27112-27132]"
    }, {
      "left" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef,\n                            \"Could not find creator property with name '%s' (known Creator properties: %s)\",\n                            name, n);",
      "right" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef,\n                            \"Could not find creator property with name '%s' (known Creator properties: %s)\",\n                            name, n);",
      "info" : "ExpressionStatement[27156-27354]:ExpressionStatement[27175-27373]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[27375-27384]:ContinueStatement[27394-27403]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[27419-27507]:IfStatement[27438-27526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27437-27507]:Block[27456-27526]"
    }, {
      "left" : "cprop.setFallbackSetter(prop);",
      "right" : "cprop.setFallbackSetter(prop);",
      "info" : "ExpressionStatement[27459-27489]:ExpressionStatement[27478-27508]"
    }, {
      "left" : "prop = cprop;",
      "right" : "prop = cprop;",
      "info" : "ExpressionStatement[27524-27537]:ExpressionStatement[27543-27556]"
    }, {
      "left" : "builder.addCreatorProperty(cprop);",
      "right" : "builder.addCreatorProperty(cprop);",
      "info" : "ExpressionStatement[27554-27588]:ExpressionStatement[27573-27607]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[27605-27614]:ContinueStatement[27624-27633]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[27642-28193]:IfStatement[27661-28212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27660-28193]:Block[27679-28212]"
    }, {
      "left" : "Class<?>[] views = propDef.findViews();",
      "right" : "Class<?>[] views = propDef.findViews();",
      "info" : "VariableDeclarationStatement[27678-27717]:VariableDeclarationStatement[27697-27736]"
    }, {
      "left" : "if (views == null)",
      "right" : "if (views == null)",
      "info" : "IfStatement[27734-28020]:IfStatement[27753-28039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27753-28020]:Block[27772-28039]"
    }, {
      "left" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "right" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "info" : "IfStatement[27878-28002]:IfStatement[27897-28021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27937-28002]:Block[27956-28021]"
    }, {
      "left" : "views = NO_VIEWS;",
      "right" : "views = NO_VIEWS;",
      "info" : "ExpressionStatement[27963-27980]:ExpressionStatement[27982-27999]"
    }, {
      "left" : "prop.setViews(views);",
      "right" : "prop.setViews(views);",
      "info" : "ExpressionStatement[28115-28136]:ExpressionStatement[28134-28155]"
    }, {
      "left" : "builder.addProperty(prop);",
      "right" : "builder.addProperty(prop);",
      "info" : "ExpressionStatement[28153-28179]:ExpressionStatement[28172-28198]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[28442-28451]:Modifier[28461-28470]"
    }, {
      "left" : "List<BeanPropertyDefinition>",
      "right" : "List<BeanPropertyDefinition>",
      "info" : "ParameterizedType[28452-28480]:ParameterizedType[28471-28499]"
    }, {
      "left" : "filterBeanProps",
      "right" : "filterBeanProps",
      "info" : "SimpleName[28481-28496]:SimpleName[28500-28515]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[28497-28524]:SingleVariableDeclaration[28516-28543]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[28538-28562]:SingleVariableDeclaration[28557-28581]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[28564-28595]:SingleVariableDeclaration[28583-28614]"
    }, {
      "left" : "List<BeanPropertyDefinition> propDefsIn",
      "right" : "List<BeanPropertyDefinition> propDefsIn",
      "info" : "SingleVariableDeclaration[28609-28648]:SingleVariableDeclaration[28628-28667]"
    }, {
      "left" : "Set<String> ignored",
      "right" : "Set<String> ignored",
      "info" : "SingleVariableDeclaration[28662-28681]:SingleVariableDeclaration[28681-28700]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[28698-28718]:SimpleType[28717-28737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28723-30178]:Block[28742-30197]"
    }, {
      "left" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
      "right" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
      "info" : "VariableDeclarationStatement[28733-28863]:VariableDeclarationStatement[28752-28882]"
    }, {
      "left" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
      "right" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
      "info" : "VariableDeclarationStatement[28872-28945]:VariableDeclarationStatement[28891-28964]"
    }, {
      "left" : "for (BeanPropertyDefinition property : propDefsIn)",
      "right" : "for (BeanPropertyDefinition property : propDefsIn)",
      "info" : "EnhancedForStatement[29032-30149]:EnhancedForStatement[29051-30168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29083-30149]:Block[29102-30168]"
    }, {
      "left" : "String name = property.getName();",
      "right" : "String name = property.getName();",
      "info" : "VariableDeclarationStatement[29097-29130]:VariableDeclarationStatement[29116-29149]"
    }, {
      "left" : "if (ignored.contains(name))",
      "right" : "if (ignored.contains(name))",
      "info" : "IfStatement[29143-29283]:IfStatement[29162-29302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29171-29283]:Block[29190-29302]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[29260-29269]:ContinueStatement[29279-29288]"
    }, {
      "left" : "if (!property.hasConstructorParameter())",
      "right" : "if (!property.hasConstructorParameter())",
      "info" : "IfStatement[29296-30105]:IfStatement[29315-30124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29337-30105]:Block[29356-30124]"
    }, {
      "left" : "Class<?> rawPropertyType = null;",
      "right" : "Class<?> rawPropertyType = null;",
      "info" : "VariableDeclarationStatement[29388-29420]:VariableDeclarationStatement[29407-29439]"
    }, {
      "left" : "if (property.hasSetter())",
      "right" : "if (property.hasSetter())",
      "info" : "IfStatement[29437-29687]:IfStatement[29456-29706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29463-29565]:Block[29482-29584]"
    }, {
      "left" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
      "right" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
      "info" : "ExpressionStatement[29485-29547]:ExpressionStatement[29504-29566]"
    }, {
      "left" : "if (property.hasField())",
      "right" : "if (property.hasField())",
      "info" : "IfStatement[29571-29687]:IfStatement[29590-29706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29596-29687]:Block[29615-29706]"
    }, {
      "left" : "rawPropertyType = property.getField().getRawType();",
      "right" : "rawPropertyType = property.getField().getRawType();",
      "info" : "ExpressionStatement[29618-29669]:ExpressionStatement[29637-29688]"
    }, {
      "left" : "if ((rawPropertyType != null)\n                        && isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes))",
      "right" : "if ((rawPropertyType != null)\n                        && isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes))",
      "info" : "IfStatement[29769-30091]:IfStatement[29788-30110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29902-30091]:Block[29921-30110]"
    }, {
      "left" : "builder.addIgnorable(name);",
      "right" : "builder.addIgnorable(name);",
      "info" : "ExpressionStatement[30016-30043]:ExpressionStatement[30035-30062]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[30064-30073]:ContinueStatement[30083-30092]"
    }, {
      "left" : "result.add(property);",
      "right" : "result.add(property);",
      "info" : "ExpressionStatement[30118-30139]:ExpressionStatement[30137-30158]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[30158-30172]:ReturnStatement[30177-30191]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[30357-30366]:Modifier[30376-30385]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30367-30371]:PrimitiveType[30386-30390]"
    }, {
      "left" : "addReferenceProperties",
      "right" : "addReferenceProperties",
      "info" : "SimpleName[30372-30394]:SimpleName[30391-30413]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[30395-30422]:SingleVariableDeclaration[30414-30441]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[30436-30460]:SingleVariableDeclaration[30455-30479]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[30462-30493]:SingleVariableDeclaration[30481-30512]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[30510-30530]:SimpleType[30529-30549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30535-31993]:Block[30554-32012]"
    }, {
      "left" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
      "right" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
      "info" : "VariableDeclarationStatement[30626-30700]:VariableDeclarationStatement[30645-30719]"
    }, {
      "left" : "if (refs != null)",
      "right" : "if (refs != null)",
      "info" : "IfStatement[30709-31987]:IfStatement[30728-32006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30727-31987]:Block[30746-32006]"
    }, {
      "left" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
      "right" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
      "info" : "EnhancedForStatement[30741-31977]:EnhancedForStatement[30760-31996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30803-31977]:Block[30822-31996]"
    }, {
      "left" : "String name = en.getKey();",
      "right" : "String name = en.getKey();",
      "info" : "VariableDeclarationStatement[30821-30847]:VariableDeclarationStatement[30840-30866]"
    }, {
      "left" : "AnnotatedMember m = en.getValue();",
      "right" : "AnnotatedMember m = en.getValue();",
      "info" : "VariableDeclarationStatement[30864-30898]:VariableDeclarationStatement[30883-30917]"
    }, {
      "left" : "JavaType type;",
      "right" : "JavaType type;",
      "info" : "VariableDeclarationStatement[30915-30929]:VariableDeclarationStatement[30934-30948]"
    }, {
      "left" : "if (m instanceof AnnotatedMethod)",
      "right" : "if (m instanceof AnnotatedMethod)",
      "info" : "IfStatement[30946-31654]:IfStatement[30965-31673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30980-31069]:Block[30999-31088]"
    }, {
      "left" : "type = ((AnnotatedMethod) m).getParameterType(0);",
      "right" : "type = ((AnnotatedMethod) m).getParameterType(0);",
      "info" : "ExpressionStatement[31002-31051]:ExpressionStatement[31021-31070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31075-31654]:Block[31094-31673]"
    }, {
      "left" : "type = m.getType();",
      "right" : "type = m.getType();",
      "info" : "ExpressionStatement[31097-31116]:ExpressionStatement[31116-31135]"
    }, {
      "left" : "if (m instanceof AnnotatedParameter)",
      "right" : "if (m instanceof AnnotatedParameter)",
      "info" : "IfStatement[31333-31636]:IfStatement[31352-31655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31370-31636]:Block[31389-31655]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Can not bind back references as Creator parameters: type %s (reference '%s', parameter index #%d)\",\nbeanDesc.getBeanClass().getName(), name, ((AnnotatedParameter) m).getIndex());",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Can not bind back references as Creator parameters: type %s (reference '%s', parameter index #%d)\",\nbeanDesc.getBeanClass().getName(), name, ((AnnotatedParameter) m).getIndex());",
      "info" : "ExpressionStatement[31396-31614]:ExpressionStatement[31415-31633]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                        ctxt.getConfig(), m, PropertyName.construct(name));",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                        ctxt.getConfig(), m, PropertyName.construct(name));",
      "info" : "VariableDeclarationStatement[31671-31825]:VariableDeclarationStatement[31690-31844]"
    }, {
      "left" : "builder.addBackReferenceProperty(name, constructSettableProperty(ctxt,\n                        beanDesc, propDef, type));",
      "right" : "builder.addBackReferenceProperty(name, constructSettableProperty(ctxt,\n                        beanDesc, propDef, type));",
      "info" : "ExpressionStatement[31842-31963]:ExpressionStatement[31861-31982]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32209-32218]:Modifier[32228-32237]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32219-32223]:PrimitiveType[32238-32242]"
    }, {
      "left" : "addInjectables",
      "right" : "addInjectables",
      "info" : "SimpleName[32224-32238]:SimpleName[32243-32257]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[32239-32266]:SingleVariableDeclaration[32258-32285]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[32280-32304]:SingleVariableDeclaration[32299-32323]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[32306-32337]:SingleVariableDeclaration[32325-32356]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[32354-32374]:SimpleType[32373-32393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32379-32828]:Block[32398-32847]"
    }, {
      "left" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
      "right" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
      "info" : "VariableDeclarationStatement[32389-32451]:VariableDeclarationStatement[32408-32470]"
    }, {
      "left" : "if (raw != null)",
      "right" : "if (raw != null)",
      "info" : "IfStatement[32460-32822]:IfStatement[32479-32841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32477-32822]:Block[32496-32841]"
    }, {
      "left" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
      "right" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
      "info" : "EnhancedForStatement[32491-32812]:EnhancedForStatement[32510-32831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32555-32812]:Block[32574-32831]"
    }, {
      "left" : "AnnotatedMember m = entry.getValue();",
      "right" : "AnnotatedMember m = entry.getValue();",
      "info" : "VariableDeclarationStatement[32573-32610]:VariableDeclarationStatement[32592-32629]"
    }, {
      "left" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
      "right" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
      "info" : "ExpressionStatement[32627-32798]:ExpressionStatement[32646-32817]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[33203-33233]:SingleMemberAnnotation[33222-33252]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[33238-33247]:Modifier[33257-33266]"
    }, {
      "left" : "SettableAnyProperty",
      "right" : "SettableAnyProperty",
      "info" : "SimpleType[33248-33267]:SimpleType[33267-33286]"
    }, {
      "left" : "constructAnySetter",
      "right" : "constructAnySetter",
      "info" : "SimpleName[33268-33286]:SimpleName[33287-33305]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[33287-33314]:SingleVariableDeclaration[33306-33333]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[33328-33352]:SingleVariableDeclaration[33347-33371]"
    }, {
      "left" : "AnnotatedMember mutator",
      "right" : "AnnotatedMember mutator",
      "info" : "SingleVariableDeclaration[33354-33377]:SingleVariableDeclaration[33373-33396]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[33394-33414]:SimpleType[33413-33433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33419-34963]:Block[33438-34982]"
    }, {
      "left" : "JavaType type = null;",
      "right" : "JavaType type = null;",
      "info" : "VariableDeclarationStatement[33512-33533]:VariableDeclarationStatement[33531-33552]"
    }, {
      "left" : "if (mutator instanceof AnnotatedMethod)",
      "right" : "if (mutator instanceof AnnotatedMethod)",
      "info" : "IfStatement[33542-33927]:IfStatement[33561-33946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33582-33729]:Block[33601-33748]"
    }, {
      "left" : "type = ((AnnotatedMethod) mutator).getParameterType(1);",
      "right" : "type = ((AnnotatedMethod) mutator).getParameterType(1);",
      "info" : "ExpressionStatement[33664-33719]:ExpressionStatement[33683-33738]"
    }, {
      "left" : "if (mutator instanceof AnnotatedField)",
      "right" : "if (mutator instanceof AnnotatedField)",
      "info" : "IfStatement[33735-33927]:IfStatement[33754-33946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33774-33927]:Block[33793-33946]"
    }, {
      "left" : "type = ((AnnotatedField) mutator).getType().getContentType();",
      "right" : "type = ((AnnotatedField) mutator).getType().getContentType();",
      "info" : "ExpressionStatement[33856-33917]:ExpressionStatement[33875-33936]"
    }, {
      "left" : "type = resolveMemberAndTypeAnnotations(ctxt, mutator, type);",
      "right" : "type = resolveMemberAndTypeAnnotations(ctxt, mutator, type);",
      "info" : "ExpressionStatement[34059-34119]:ExpressionStatement[34078-34138]"
    }, {
      "left" : "BeanProperty.Std prop = new BeanProperty.Std(PropertyName.construct(mutator.getName()),\n                type, null, beanDesc.getClassAnnotations(), mutator,\n                PropertyMetadata.STD_OPTIONAL);",
      "right" : "BeanProperty.Std prop = new BeanProperty.Std(PropertyName.construct(mutator.getName()),\n                type, null, beanDesc.getClassAnnotations(), mutator,\n                PropertyMetadata.STD_OPTIONAL);",
      "info" : "VariableDeclarationStatement[34128-34332]:VariableDeclarationStatement[34147-34351]"
    }, {
      "left" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "right" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "info" : "VariableDeclarationStatement[34411-34490]:VariableDeclarationStatement[34430-34509]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[34499-34573]:IfStatement[34518-34592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34518-34573]:Block[34537-34592]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[34532-34563]:ExpressionStatement[34551-34582]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[34582-34818]:IfStatement[34601-34837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34601-34818]:Block[34620-34837]"
    }, {
      "left" : "deser = (JsonDeserializer<Object>) ctxt.handlePrimaryContextualization(deser, prop, type);",
      "right" : "deser = (JsonDeserializer<Object>) ctxt.handlePrimaryContextualization(deser, prop, type);",
      "info" : "ExpressionStatement[34718-34808]:ExpressionStatement[34737-34827]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[34827-34878]:VariableDeclarationStatement[34846-34897]"
    }, {
      "left" : "return new SettableAnyProperty(prop, mutator, type, deser, typeDeser);",
      "right" : "return new SettableAnyProperty(prop, mutator, type, deser, typeDeser);",
      "info" : "ReturnStatement[34887-34957]:ReturnStatement[34906-34976]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[35230-35239]:Modifier[35249-35258]"
    }, {
      "left" : "SettableBeanProperty",
      "right" : "SettableBeanProperty",
      "info" : "SimpleType[35240-35260]:SimpleType[35259-35279]"
    }, {
      "left" : "constructSettableProperty",
      "right" : "constructSettableProperty",
      "info" : "SimpleName[35261-35286]:SimpleName[35280-35305]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[35287-35314]:SingleVariableDeclaration[35306-35333]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[35328-35352]:SingleVariableDeclaration[35347-35371]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[35354-35384]:SingleVariableDeclaration[35373-35403]"
    }, {
      "left" : "JavaType propType0",
      "right" : "JavaType propType0",
      "info" : "SingleVariableDeclaration[35398-35416]:SingleVariableDeclaration[35417-35435]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[35433-35453]:SimpleType[35452-35472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35458-37451]:Block[35477-37470]"
    }, {
      "left" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
      "right" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
      "info" : "VariableDeclarationStatement[35530-35591]:VariableDeclarationStatement[35549-35610]"
    }, {
      "left" : "if (mutator == null)",
      "right" : "if (mutator == null)",
      "info" : "IfStatement[35809-35946]:IfStatement[35828-35965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35830-35946]:Block[35849-35965]"
    }, {
      "left" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef, \"No non-constructor mutator available\");",
      "right" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef, \"No non-constructor mutator available\");",
      "info" : "ExpressionStatement[35844-35936]:ExpressionStatement[35863-35955]"
    }, {
      "left" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, mutator, propType0);",
      "right" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, mutator, propType0);",
      "info" : "VariableDeclarationStatement[35955-36029]:VariableDeclarationStatement[35974-36048]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[36119-36170]:VariableDeclarationStatement[36138-36189]"
    }, {
      "left" : "SettableBeanProperty prop;",
      "right" : "SettableBeanProperty prop;",
      "info" : "VariableDeclarationStatement[36179-36205]:VariableDeclarationStatement[36198-36224]"
    }, {
      "left" : "if (mutator instanceof AnnotatedMethod)",
      "right" : "if (mutator instanceof AnnotatedMethod)",
      "info" : "IfStatement[36214-36664]:IfStatement[36233-36683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36254-36409]:Block[36273-36428]"
    }, {
      "left" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
      "right" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
      "info" : "ExpressionStatement[36268-36399]:ExpressionStatement[36287-36418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36415-36664]:Block[36434-36683]"
    }, {
      "left" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
      "right" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
      "info" : "ExpressionStatement[36525-36654]:ExpressionStatement[36544-36673]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "right" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "info" : "VariableDeclarationStatement[36673-36747]:VariableDeclarationStatement[36692-36766]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[36756-36830]:IfStatement[36775-36849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36775-36830]:Block[36794-36849]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[36789-36820]:ExpressionStatement[36808-36839]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[36839-36999]:IfStatement[36858-37018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36858-36999]:Block[36877-37018]"
    }, {
      "left" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "right" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "info" : "ExpressionStatement[36872-36935]:ExpressionStatement[36891-36954]"
    }, {
      "left" : "prop = prop.withValueDeserializer(deser);",
      "right" : "prop = prop.withValueDeserializer(deser);",
      "info" : "ExpressionStatement[36948-36989]:ExpressionStatement[36967-37008]"
    }, {
      "left" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
      "right" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
      "info" : "VariableDeclarationStatement[37070-37145]:VariableDeclarationStatement[37089-37164]"
    }, {
      "left" : "if (ref != null && ref.isManagedReference())",
      "right" : "if (ref != null && ref.isManagedReference())",
      "info" : "IfStatement[37154-37267]:IfStatement[37173-37286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37199-37267]:Block[37218-37286]"
    }, {
      "left" : "prop.setManagedReferenceName(ref.getName());",
      "right" : "prop.setManagedReferenceName(ref.getName());",
      "info" : "ExpressionStatement[37213-37257]:ExpressionStatement[37232-37276]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
      "info" : "VariableDeclarationStatement[37276-37331]:VariableDeclarationStatement[37295-37350]"
    }, {
      "left" : "if (objectIdInfo != null)",
      "right" : "if (objectIdInfo != null)",
      "info" : "IfStatement[37340-37424]:IfStatement[37359-37443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37365-37424]:Block[37384-37443]"
    }, {
      "left" : "prop.setObjectIdInfo(objectIdInfo);",
      "right" : "prop.setObjectIdInfo(objectIdInfo);",
      "info" : "ExpressionStatement[37379-37414]:ExpressionStatement[37398-37433]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[37433-37445]:ReturnStatement[37452-37464]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[37576-37585]:Modifier[37595-37604]"
    }, {
      "left" : "SettableBeanProperty",
      "right" : "SettableBeanProperty",
      "info" : "SimpleType[37586-37606]:SimpleType[37605-37625]"
    }, {
      "left" : "constructSetterlessProperty",
      "right" : "constructSetterlessProperty",
      "info" : "SimpleName[37607-37634]:SimpleName[37626-37653]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[37635-37662]:SingleVariableDeclaration[37654-37681]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[37676-37700]:SingleVariableDeclaration[37695-37719]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[37702-37732]:SingleVariableDeclaration[37721-37751]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[37749-37769]:SimpleType[37768-37788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37774-38487]:Block[37793-38506]"
    }, {
      "left" : "final AnnotatedMethod getter = propDef.getGetter();",
      "right" : "final AnnotatedMethod getter = propDef.getGetter();",
      "info" : "VariableDeclarationStatement[37784-37835]:VariableDeclarationStatement[37803-37854]"
    }, {
      "left" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, getter, getter.getType());",
      "right" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, getter, getter.getType());",
      "info" : "VariableDeclarationStatement[37844-37924]:VariableDeclarationStatement[37863-37943]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[37933-37984]:VariableDeclarationStatement[37952-38003]"
    }, {
      "left" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
      "right" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
      "info" : "VariableDeclarationStatement[37993-38126]:VariableDeclarationStatement[38012-38145]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, getter);",
      "right" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, getter);",
      "info" : "VariableDeclarationStatement[38135-38208]:VariableDeclarationStatement[38154-38227]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[38217-38291]:IfStatement[38236-38310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38236-38291]:Block[38255-38310]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[38250-38281]:ExpressionStatement[38269-38300]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[38300-38460]:IfStatement[38319-38479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38319-38460]:Block[38338-38479]"
    }, {
      "left" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "right" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "info" : "ExpressionStatement[38333-38396]:ExpressionStatement[38352-38415]"
    }, {
      "left" : "prop = prop.withValueDeserializer(deser);",
      "right" : "prop = prop.withValueDeserializer(deser);",
      "info" : "ExpressionStatement[38409-38450]:ExpressionStatement[38428-38469]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[38469-38481]:ReturnStatement[38488-38500]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[39022-39031]:Modifier[39041-39050]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39032-39039]:PrimitiveType[39051-39058]"
    }, {
      "left" : "isPotentialBeanType",
      "right" : "isPotentialBeanType",
      "info" : "SimpleName[39040-39059]:SimpleName[39059-39078]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[39060-39073]:SingleVariableDeclaration[39079-39092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39079-39866]:Block[39098-39885]"
    }, {
      "left" : "String typeStr = ClassUtil.canBeABeanType(type);",
      "right" : "String typeStr = ClassUtil.canBeABeanType(type);",
      "info" : "VariableDeclarationStatement[39089-39137]:VariableDeclarationStatement[39108-39156]"
    }, {
      "left" : "if (typeStr != null)",
      "right" : "if (typeStr != null)",
      "info" : "IfStatement[39146-39306]:IfStatement[39165-39325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39167-39306]:Block[39186-39325]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "info" : "ThrowStatement[39181-39296]:ThrowStatement[39200-39315]"
    }, {
      "left" : "if (ClassUtil.isProxyType(type))",
      "right" : "if (ClassUtil.isProxyType(type))",
      "info" : "IfStatement[39315-39471]:IfStatement[39334-39490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39348-39471]:Block[39367-39490]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
      "info" : "ThrowStatement[39362-39461]:ThrowStatement[39381-39480]"
    }, {
      "left" : "typeStr = ClassUtil.isLocalType(type, true);",
      "right" : "typeStr = ClassUtil.isLocalType(type, true);",
      "info" : "ExpressionStatement[39626-39670]:ExpressionStatement[39645-39689]"
    }, {
      "left" : "if (typeStr != null)",
      "right" : "if (typeStr != null)",
      "info" : "IfStatement[39679-39839]:IfStatement[39698-39858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39700-39839]:Block[39719-39858]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "info" : "ThrowStatement[39714-39829]:ThrowStatement[39733-39848]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[39848-39860]:ReturnStatement[39867-39879]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[40032-40041]:Modifier[40051-40060]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[40042-40049]:PrimitiveType[40061-40068]"
    }, {
      "left" : "isIgnorableType",
      "right" : "isIgnorableType",
      "info" : "SimpleName[40050-40065]:SimpleName[40069-40084]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[40066-40094]:SingleVariableDeclaration[40085-40113]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[40096-40120]:SingleVariableDeclaration[40115-40139]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[40134-40147]:SingleVariableDeclaration[40153-40166]"
    }, {
      "left" : "Map<Class<?>,Boolean> ignoredTypes",
      "right" : "Map<Class<?>,Boolean> ignoredTypes",
      "info" : "SingleVariableDeclaration[40149-40183]:SingleVariableDeclaration[40168-40202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40189-40987]:Block[40208-41006]"
    }, {
      "left" : "Boolean status = ignoredTypes.get(type);",
      "right" : "Boolean status = ignoredTypes.get(type);",
      "info" : "VariableDeclarationStatement[40199-40239]:VariableDeclarationStatement[40218-40258]"
    }, {
      "left" : "if (status != null)",
      "right" : "if (status != null)",
      "info" : "IfStatement[40248-40321]:IfStatement[40267-40340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40268-40321]:Block[40287-40340]"
    }, {
      "left" : "return status.booleanValue();",
      "right" : "return status.booleanValue();",
      "info" : "ReturnStatement[40282-40311]:ReturnStatement[40301-40330]"
    }, {
      "left" : "ConfigOverride override = config.findConfigOverride(type);",
      "right" : "ConfigOverride override = config.findConfigOverride(type);",
      "info" : "VariableDeclarationStatement[40398-40456]:VariableDeclarationStatement[40417-40475]"
    }, {
      "left" : "if (override != null)",
      "right" : "if (override != null)",
      "info" : "IfStatement[40465-40548]:IfStatement[40484-40567]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40487-40548]:Block[40506-40567]"
    }, {
      "left" : "status = override.getIsIgnoredType();",
      "right" : "status = override.getIsIgnoredType();",
      "info" : "ExpressionStatement[40501-40538]:ExpressionStatement[40520-40557]"
    }, {
      "left" : "if (status == null)",
      "right" : "if (status == null)",
      "info" : "IfStatement[40557-40903]:IfStatement[40576-40922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40577-40903]:Block[40596-40922]"
    }, {
      "left" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "right" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "info" : "VariableDeclarationStatement[40591-40654]:VariableDeclarationStatement[40610-40673]"
    }, {
      "left" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
      "right" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
      "info" : "ExpressionStatement[40667-40748]:ExpressionStatement[40686-40767]"
    }, {
      "left" : "if (status == null)",
      "right" : "if (status == null)",
      "info" : "IfStatement[40818-40893]:IfStatement[40837-40912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40838-40893]:Block[40857-40912]"
    }, {
      "left" : "status = Boolean.FALSE;",
      "right" : "status = Boolean.FALSE;",
      "info" : "ExpressionStatement[40856-40879]:ExpressionStatement[40875-40898]"
    }, {
      "left" : "ignoredTypes.put(type, status);",
      "right" : "ignoredTypes.put(type, status);",
      "info" : "ExpressionStatement[40912-40943]:ExpressionStatement[40931-40962]"
    }, {
      "left" : "return status.booleanValue();",
      "right" : "return status.booleanValue();",
      "info" : "ReturnStatement[40952-40981]:ReturnStatement[40971-41000]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[41029-41038]:Modifier[41048-41057]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[41039-41043]:PrimitiveType[41058-41062]"
    }, {
      "left" : "checkIllegalTypes",
      "right" : "checkIllegalTypes",
      "info" : "SimpleName[41044-41061]:SimpleName[41063-41080]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[41062-41089]:SingleVariableDeclaration[41081-41108]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[41091-41104]:SingleVariableDeclaration[41110-41123]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[41118-41142]:SingleVariableDeclaration[41137-41161]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[41159-41179]:SimpleType[41178-41198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41184-41579]:Block[41203-41598]"
    }, {
      "left" : "String full = type.getRawClass().getName();",
      "right" : "String full = type.getRawClass().getName();",
      "info" : "VariableDeclarationStatement[41321-41364]:VariableDeclarationStatement[41340-41383]"
    }, {
      "left" : "if (_cfgIllegalClassNames.contains(full))",
      "right" : "if (_cfgIllegalClassNames.contains(full))",
      "info" : "IfStatement[41374-41573]:IfStatement[41393-41592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41416-41573]:Block[41435-41592]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n                    \"Illegal type (%s) to deserialize: prevented for security reasons\", full);",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n                    \"Illegal type (%s) to deserialize: prevented for security reasons\", full);",
      "info" : "ExpressionStatement[41430-41563]:ExpressionStatement[41449-41582]"
    } ]
  },
  "interFileMappings" : { }
}