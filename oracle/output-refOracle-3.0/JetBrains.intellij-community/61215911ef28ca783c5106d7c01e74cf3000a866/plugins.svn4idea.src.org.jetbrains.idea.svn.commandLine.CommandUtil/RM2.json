{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CommandUtil",
      "right" : "CommandUtil",
      "info" : "TypeDeclaration[691-6789]:TypeDeclaration[691-6932]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, boolean condition, @NotNull String value)",
      "right" : "public static void put(@NotNull List<String> parameters, boolean condition, @NotNull String value)",
      "info" : "MethodDeclaration[763-1065]:MethodDeclaration[763-1065]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull File path)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull File path)",
      "info" : "MethodDeclaration[1069-1219]:MethodDeclaration[1069-1219]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull File path, boolean usePegRevision)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull File path, boolean usePegRevision)",
      "info" : "MethodDeclaration[1223-1449]:MethodDeclaration[1223-1449]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull File path, @Nullable SVNRevision pegRevision)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull File path, @Nullable SVNRevision pegRevision)",
      "info" : "MethodDeclaration[1453-1628]:MethodDeclaration[1453-1628]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull String path, @Nullable SVNRevision pegRevision)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull String path, @Nullable SVNRevision pegRevision)",
      "info" : "MethodDeclaration[1632-2361]:MethodDeclaration[1632-1798]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull SvnTarget target)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull SvnTarget target)",
      "info" : "MethodDeclaration[2365-2529]:MethodDeclaration[2508-2672]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull SvnTarget target, boolean usePegRevision)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull SvnTarget target, boolean usePegRevision)",
      "info" : "MethodDeclaration[2533-2773]:MethodDeclaration[2676-2916]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @Nullable Depth depth)",
      "right" : "public static void put(@NotNull List<String> parameters, @Nullable Depth depth)",
      "info" : "MethodDeclaration[2777-2897]:MethodDeclaration[2920-3040]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @Nullable Depth depth, boolean sticky)",
      "right" : "public static void put(@NotNull List<String> parameters, @Nullable Depth depth, boolean sticky)",
      "info" : "MethodDeclaration[2901-3246]:MethodDeclaration[3044-3389]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @Nullable SVNRevision revision)",
      "right" : "public static void put(@NotNull List<String> parameters, @Nullable SVNRevision revision)",
      "info" : "MethodDeclaration[3250-3560]:MethodDeclaration[3393-3703]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @NotNull SVNRevision startRevision, @NotNull SVNRevision endRevision)",
      "right" : "public static void put(@NotNull List<String> parameters, @NotNull SVNRevision startRevision, @NotNull SVNRevision endRevision)",
      "info" : "MethodDeclaration[3564-3801]:MethodDeclaration[3707-3944]"
    }, {
      "left" : "public static String format(@NotNull SVNRevision revision)",
      "right" : "public static String format(@NotNull SVNRevision revision)",
      "info" : "MethodDeclaration[3805-4017]:MethodDeclaration[3948-4160]"
    }, {
      "left" : "public static void put(@NotNull List<String> parameters, @Nullable DiffOptions diffOptions)",
      "right" : "public static void put(@NotNull List<String> parameters, @Nullable DiffOptions diffOptions)",
      "info" : "MethodDeclaration[4021-4691]:MethodDeclaration[4164-4834]"
    }, {
      "left" : "public static void putChangeLists(@NotNull List<String> parameters, @Nullable Iterable<String> changeLists)",
      "right" : "public static void putChangeLists(@NotNull List<String> parameters, @Nullable Iterable<String> changeLists)",
      "info" : "MethodDeclaration[4695-4967]:MethodDeclaration[4838-5110]"
    }, {
      "left" : "public static String escape(@NotNull String path)",
      "right" : "public static String escape(@NotNull String path)",
      "info" : "MethodDeclaration[4971-5077]:MethodDeclaration[5114-5220]"
    }, {
      "left" : "public static <T> T parse(@NotNull String data, @NotNull Class<T> type) throws JAXBException",
      "right" : "public static <T> T parse(@NotNull String data, @NotNull Class<T> type) throws JAXBException",
      "info" : "MethodDeclaration[5081-5369]:MethodDeclaration[5224-5512]"
    }, {
      "left" : "public static File getHomeDirectory()",
      "right" : "public static File getHomeDirectory()",
      "info" : "MethodDeclaration[5373-5475]:MethodDeclaration[5516-5618]"
    }, {
      "left" : "public static char getStatusChar(@Nullable String type)",
      "right" : "public static char getStatusChar(@Nullable String type)",
      "info" : "MethodDeclaration[5479-5702]:MethodDeclaration[5622-5845]"
    }, {
      "left" : "public static StatusType getStatusType(@Nullable String type)",
      "right" : "public static StatusType getStatusType(@Nullable String type)",
      "info" : "MethodDeclaration[5706-5831]:MethodDeclaration[5849-5974]"
    }, {
      "left" : "public static StatusType getStatusType(char first)",
      "right" : "public static StatusType getStatusType(char first)",
      "info" : "MethodDeclaration[5835-6577]:MethodDeclaration[5978-6720]"
    }, {
      "left" : "public static File correctUpToExistingParent(File base)",
      "right" : "public static File correctUpToExistingParent(File base)",
      "info" : "MethodDeclaration[6581-6787]:MethodDeclaration[6724-6930]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[733-739]:Modifier[733-739]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[740-745]:TYPE_DECLARATION_KIND[740-745]"
    }, {
      "left" : "CommandUtil",
      "right" : "CommandUtil",
      "info" : "SimpleName[746-757]:SimpleName[746-757]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[905-911]:Modifier[905-911]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[912-918]:Modifier[912-918]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[919-923]:PrimitiveType[919-923]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[924-927]:SimpleName[924-927]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[928-960]:SingleVariableDeclaration[928-960]"
    }, {
      "left" : "boolean condition",
      "right" : "boolean condition",
      "info" : "SingleVariableDeclaration[962-979]:SingleVariableDeclaration[962-979]"
    }, {
      "left" : "@NotNull String value",
      "right" : "@NotNull String value",
      "info" : "SingleVariableDeclaration[981-1002]:SingleVariableDeclaration[981-1002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1004-1065]:Block[1004-1065]"
    }, {
      "left" : "if (condition)",
      "right" : "if (condition)",
      "info" : "IfStatement[1010-1061]:IfStatement[1010-1061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1025-1061]:Block[1025-1061]"
    }, {
      "left" : "parameters.add(value);",
      "right" : "parameters.add(value);",
      "info" : "ExpressionStatement[1033-1055]:ExpressionStatement[1033-1055]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1069-1075]:Modifier[1069-1075]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1076-1082]:Modifier[1076-1082]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1083-1087]:PrimitiveType[1083-1087]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[1088-1091]:SimpleName[1088-1091]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[1092-1124]:SingleVariableDeclaration[1092-1124]"
    }, {
      "left" : "@NotNull File path",
      "right" : "@NotNull File path",
      "info" : "SingleVariableDeclaration[1126-1144]:SingleVariableDeclaration[1126-1144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1146-1219]:Block[1146-1219]"
    }, {
      "left" : "put(parameters, path.getAbsolutePath(), SVNRevision.UNDEFINED);",
      "right" : "put(parameters, path.getAbsolutePath(), SVNRevision.UNDEFINED);",
      "info" : "ExpressionStatement[1152-1215]:ExpressionStatement[1152-1215]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1223-1229]:Modifier[1223-1229]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1230-1236]:Modifier[1230-1236]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1237-1241]:PrimitiveType[1237-1241]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[1242-1245]:SimpleName[1242-1245]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[1246-1278]:SingleVariableDeclaration[1246-1278]"
    }, {
      "left" : "@NotNull File path",
      "right" : "@NotNull File path",
      "info" : "SingleVariableDeclaration[1280-1298]:SingleVariableDeclaration[1280-1298]"
    }, {
      "left" : "boolean usePegRevision",
      "right" : "boolean usePegRevision",
      "info" : "SingleVariableDeclaration[1300-1322]:SingleVariableDeclaration[1300-1322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1324-1449]:Block[1324-1449]"
    }, {
      "left" : "if (usePegRevision)",
      "right" : "if (usePegRevision)",
      "info" : "IfStatement[1330-1445]:IfStatement[1330-1445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1350-1386]:Block[1350-1386]"
    }, {
      "left" : "put(parameters, path);",
      "right" : "put(parameters, path);",
      "info" : "ExpressionStatement[1358-1380]:ExpressionStatement[1358-1380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1392-1445]:Block[1392-1445]"
    }, {
      "left" : "parameters.add(path.getAbsolutePath());",
      "right" : "parameters.add(path.getAbsolutePath());",
      "info" : "ExpressionStatement[1400-1439]:ExpressionStatement[1400-1439]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1453-1459]:Modifier[1453-1459]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1460-1466]:Modifier[1460-1466]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1467-1471]:PrimitiveType[1467-1471]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[1472-1475]:SimpleName[1472-1475]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[1476-1508]:SingleVariableDeclaration[1476-1508]"
    }, {
      "left" : "@NotNull File path",
      "right" : "@NotNull File path",
      "info" : "SingleVariableDeclaration[1510-1528]:SingleVariableDeclaration[1510-1528]"
    }, {
      "left" : "@Nullable SVNRevision pegRevision",
      "right" : "@Nullable SVNRevision pegRevision",
      "info" : "SingleVariableDeclaration[1530-1563]:SingleVariableDeclaration[1530-1563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1565-1628]:Block[1565-1628]"
    }, {
      "left" : "put(parameters, path.getAbsolutePath(), pegRevision);",
      "right" : "put(parameters, path.getAbsolutePath(), pegRevision);",
      "info" : "ExpressionStatement[1571-1624]:ExpressionStatement[1571-1624]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1632-1638]:Modifier[1632-1638]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1639-1645]:Modifier[1639-1645]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1646-1650]:PrimitiveType[1646-1650]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[1651-1654]:SimpleName[1651-1654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1746-2361]:Block[1746-1798]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder(path);",
      "right" : "StringBuilder builder = new StringBuilder(path);",
      "info" : "VariableDeclarationStatement[1752-1800]:VariableDeclarationStatement[1904-1952]"
    }, {
      "left" : "boolean hasAtSymbol = path.contains(\"@\");",
      "right" : "boolean hasAtSymbol = path.contains(\"@\");",
      "info" : "VariableDeclarationStatement[1806-1847]:VariableDeclarationStatement[1958-1999]"
    }, {
      "left" : "boolean hasPegRevision = pegRevision != null &&\n                             !SVNRevision.UNDEFINED.equals(pegRevision) &&\n                             !SVNRevision.WORKING.equals(pegRevision) &&\n                             pegRevision.isValid();",
      "right" : "boolean hasPegRevision = pegRevision != null &&\n                             !SVNRevision.UNDEFINED.equals(pegRevision) &&\n                             !SVNRevision.WORKING.equals(pegRevision) &&\n                             pegRevision.isValid();",
      "info" : "VariableDeclarationStatement[1852-2099]:VariableDeclarationStatement[2004-2251]"
    }, {
      "left" : "if (hasPegRevision || hasAtSymbol)",
      "right" : "if (hasPegRevision || hasAtSymbol)",
      "info" : "IfStatement[2105-2241]:IfStatement[2257-2393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2140-2241]:Block[2292-2393]"
    }, {
      "left" : "builder.append(\"@\");",
      "right" : "builder.append(\"@\");",
      "info" : "ExpressionStatement[2215-2235]:ExpressionStatement[2367-2387]"
    }, {
      "left" : "if (hasPegRevision)",
      "right" : "if (hasPegRevision)",
      "info" : "IfStatement[2246-2316]:IfStatement[2398-2468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2266-2316]:Block[2418-2468]"
    }, {
      "left" : "builder.append(format(pegRevision));",
      "right" : "builder.append(format(pegRevision));",
      "info" : "ExpressionStatement[2274-2310]:ExpressionStatement[2426-2462]"
    }, {
      "left" : "parameters.add(builder.toString());",
      "right" : "parameters.add(format(path, pegRevision));",
      "info" : "ExpressionStatement[2322-2357]:ExpressionStatement[1752-1794]"
    }, {
      "left" : "builder.toString()",
      "right" : "builder.toString()",
      "info" : "MethodInvocation[2337-2355]:MethodInvocation[2481-2499]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2365-2371]:Modifier[2508-2514]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2372-2378]:Modifier[2515-2521]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2379-2383]:PrimitiveType[2522-2526]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[2384-2387]:SimpleName[2527-2530]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[2388-2420]:SingleVariableDeclaration[2531-2563]"
    }, {
      "left" : "@NotNull SvnTarget target",
      "right" : "@NotNull SvnTarget target",
      "info" : "SingleVariableDeclaration[2422-2447]:SingleVariableDeclaration[2565-2590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2449-2529]:Block[2592-2672]"
    }, {
      "left" : "put(parameters, target.getPathOrUrlString(), target.getPegRevision());",
      "right" : "put(parameters, target.getPathOrUrlString(), target.getPegRevision());",
      "info" : "ExpressionStatement[2455-2525]:ExpressionStatement[2598-2668]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2533-2539]:Modifier[2676-2682]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2540-2546]:Modifier[2683-2689]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2547-2551]:PrimitiveType[2690-2694]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[2552-2555]:SimpleName[2695-2698]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[2556-2588]:SingleVariableDeclaration[2699-2731]"
    }, {
      "left" : "@NotNull SvnTarget target",
      "right" : "@NotNull SvnTarget target",
      "info" : "SingleVariableDeclaration[2590-2615]:SingleVariableDeclaration[2733-2758]"
    }, {
      "left" : "boolean usePegRevision",
      "right" : "boolean usePegRevision",
      "info" : "SingleVariableDeclaration[2617-2639]:SingleVariableDeclaration[2760-2782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2641-2773]:Block[2784-2916]"
    }, {
      "left" : "if (usePegRevision)",
      "right" : "if (usePegRevision)",
      "info" : "IfStatement[2647-2769]:IfStatement[2790-2912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2667-2705]:Block[2810-2848]"
    }, {
      "left" : "put(parameters, target);",
      "right" : "put(parameters, target);",
      "info" : "ExpressionStatement[2675-2699]:ExpressionStatement[2818-2842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2711-2769]:Block[2854-2912]"
    }, {
      "left" : "parameters.add(target.getPathOrUrlString());",
      "right" : "parameters.add(target.getPathOrUrlString());",
      "info" : "ExpressionStatement[2719-2763]:ExpressionStatement[2862-2906]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2777-2783]:Modifier[2920-2926]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2784-2790]:Modifier[2927-2933]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2791-2795]:PrimitiveType[2934-2938]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[2796-2799]:SimpleName[2939-2942]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[2800-2832]:SingleVariableDeclaration[2943-2975]"
    }, {
      "left" : "@Nullable Depth depth",
      "right" : "@Nullable Depth depth",
      "info" : "SingleVariableDeclaration[2834-2855]:SingleVariableDeclaration[2977-2998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2857-2897]:Block[3000-3040]"
    }, {
      "left" : "put(parameters, depth, false);",
      "right" : "put(parameters, depth, false);",
      "info" : "ExpressionStatement[2863-2893]:ExpressionStatement[3006-3036]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2901-2907]:Modifier[3044-3050]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2908-2914]:Modifier[3051-3057]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2915-2919]:PrimitiveType[3058-3062]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[2920-2923]:SimpleName[3063-3066]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[2924-2956]:SingleVariableDeclaration[3067-3099]"
    }, {
      "left" : "@Nullable Depth depth",
      "right" : "@Nullable Depth depth",
      "info" : "SingleVariableDeclaration[2958-2979]:SingleVariableDeclaration[3101-3122]"
    }, {
      "left" : "boolean sticky",
      "right" : "boolean sticky",
      "info" : "SingleVariableDeclaration[2981-2995]:SingleVariableDeclaration[3124-3138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2997-3246]:Block[3140-3389]"
    }, {
      "left" : "if (depth != null && !Depth.UNKNOWN.equals(depth))",
      "right" : "if (depth != null && !Depth.UNKNOWN.equals(depth))",
      "info" : "IfStatement[3003-3242]:IfStatement[3146-3385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3054-3242]:Block[3197-3385]"
    }, {
      "left" : "parameters.add(\"--depth\");",
      "right" : "parameters.add(\"--depth\");",
      "info" : "ExpressionStatement[3062-3088]:ExpressionStatement[3205-3231]"
    }, {
      "left" : "parameters.add(depth.getName());",
      "right" : "parameters.add(depth.getName());",
      "info" : "ExpressionStatement[3095-3127]:ExpressionStatement[3238-3270]"
    }, {
      "left" : "if (sticky)",
      "right" : "if (sticky)",
      "info" : "IfStatement[3135-3236]:IfStatement[3278-3379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3147-3236]:Block[3290-3379]"
    }, {
      "left" : "parameters.add(\"--set-depth\");",
      "right" : "parameters.add(\"--set-depth\");",
      "info" : "ExpressionStatement[3157-3187]:ExpressionStatement[3300-3330]"
    }, {
      "left" : "parameters.add(depth.getName());",
      "right" : "parameters.add(depth.getName());",
      "info" : "ExpressionStatement[3196-3228]:ExpressionStatement[3339-3371]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3250-3256]:Modifier[3393-3399]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3257-3263]:Modifier[3400-3406]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3264-3268]:PrimitiveType[3407-3411]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[3269-3272]:SimpleName[3412-3415]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[3273-3305]:SingleVariableDeclaration[3416-3448]"
    }, {
      "left" : "@Nullable SVNRevision revision",
      "right" : "@Nullable SVNRevision revision",
      "info" : "SingleVariableDeclaration[3307-3337]:SingleVariableDeclaration[3450-3480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3339-3560]:Block[3482-3703]"
    }, {
      "left" : "if (revision != null && !SVNRevision.UNDEFINED.equals(revision) && !SVNRevision.WORKING.equals(revision) && revision.isValid())",
      "right" : "if (revision != null && !SVNRevision.UNDEFINED.equals(revision) && !SVNRevision.WORKING.equals(revision) && revision.isValid())",
      "info" : "IfStatement[3345-3556]:IfStatement[3488-3699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3473-3556]:Block[3616-3699]"
    }, {
      "left" : "parameters.add(\"--revision\");",
      "right" : "parameters.add(\"--revision\");",
      "info" : "ExpressionStatement[3481-3510]:ExpressionStatement[3624-3653]"
    }, {
      "left" : "parameters.add(format(revision));",
      "right" : "parameters.add(format(revision));",
      "info" : "ExpressionStatement[3517-3550]:ExpressionStatement[3660-3693]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3564-3570]:Modifier[3707-3713]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3571-3577]:Modifier[3714-3720]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3578-3582]:PrimitiveType[3721-3725]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[3583-3586]:SimpleName[3726-3729]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[3587-3619]:SingleVariableDeclaration[3730-3762]"
    }, {
      "left" : "@NotNull SVNRevision startRevision",
      "right" : "@NotNull SVNRevision startRevision",
      "info" : "SingleVariableDeclaration[3621-3655]:SingleVariableDeclaration[3764-3798]"
    }, {
      "left" : "@NotNull SVNRevision endRevision",
      "right" : "@NotNull SVNRevision endRevision",
      "info" : "SingleVariableDeclaration[3657-3689]:SingleVariableDeclaration[3800-3832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3691-3801]:Block[3834-3944]"
    }, {
      "left" : "parameters.add(\"--revision\");",
      "right" : "parameters.add(\"--revision\");",
      "info" : "ExpressionStatement[3697-3726]:ExpressionStatement[3840-3869]"
    }, {
      "left" : "parameters.add(format(startRevision) + \":\" + format(endRevision));",
      "right" : "parameters.add(format(startRevision) + \":\" + format(endRevision));",
      "info" : "ExpressionStatement[3731-3797]:ExpressionStatement[3874-3940]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[3805-3813]:MarkerAnnotation[3948-3956]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3816-3822]:Modifier[3959-3965]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3823-3829]:Modifier[3966-3972]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3830-3836]:SimpleType[3973-3979]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[3837-3843]:SimpleName[3980-3986]"
    }, {
      "left" : "@NotNull SVNRevision revision",
      "right" : "@NotNull SVNRevision revision",
      "info" : "SingleVariableDeclaration[3844-3873]:SingleVariableDeclaration[3987-4016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3875-4017]:Block[4018-4160]"
    }, {
      "left" : "return revision.getDate() != null ? \"{\" + DateFormatUtil.ISO8601_DATE_FORMAT.format(revision.getDate()) + \"}\" : revision.toString();",
      "right" : "return revision.getDate() != null ? \"{\" + DateFormatUtil.ISO8601_DATE_FORMAT.format(revision.getDate()) + \"}\" : revision.toString();",
      "info" : "ReturnStatement[3881-4013]:ReturnStatement[4024-4156]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4021-4027]:Modifier[4164-4170]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4028-4034]:Modifier[4171-4177]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4035-4039]:PrimitiveType[4178-4182]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[4040-4043]:SimpleName[4183-4186]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[4044-4076]:SingleVariableDeclaration[4187-4219]"
    }, {
      "left" : "@Nullable DiffOptions diffOptions",
      "right" : "@Nullable DiffOptions diffOptions",
      "info" : "SingleVariableDeclaration[4078-4111]:SingleVariableDeclaration[4221-4254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4113-4691]:Block[4256-4834]"
    }, {
      "left" : "if (diffOptions != null)",
      "right" : "if (diffOptions != null)",
      "info" : "IfStatement[4119-4687]:IfStatement[4262-4830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4144-4687]:Block[4287-4830]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder();",
      "right" : "StringBuilder builder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[4152-4196]:VariableDeclarationStatement[4295-4339]"
    }, {
      "left" : "if (diffOptions.isIgnoreAllWhitespace())",
      "right" : "if (diffOptions.isIgnoreAllWhitespace())",
      "info" : "IfStatement[4204-4304]:IfStatement[4347-4447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4245-4304]:Block[4388-4447]"
    }, {
      "left" : "builder.append(\" --ignore-space-change\");",
      "right" : "builder.append(\" --ignore-space-change\");",
      "info" : "ExpressionStatement[4255-4296]:ExpressionStatement[4398-4439]"
    }, {
      "left" : "if (diffOptions.isIgnoreAmountOfWhitespace())",
      "right" : "if (diffOptions.isIgnoreAmountOfWhitespace())",
      "info" : "IfStatement[4311-4413]:IfStatement[4454-4556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4357-4413]:Block[4500-4556]"
    }, {
      "left" : "builder.append(\" --ignore-all-space\");",
      "right" : "builder.append(\" --ignore-all-space\");",
      "info" : "ExpressionStatement[4367-4405]:ExpressionStatement[4510-4548]"
    }, {
      "left" : "if (diffOptions.isIgnoreEOLStyle())",
      "right" : "if (diffOptions.isIgnoreEOLStyle())",
      "info" : "IfStatement[4420-4512]:IfStatement[4563-4655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4456-4512]:Block[4599-4655]"
    }, {
      "left" : "builder.append(\" --ignore-eol-style\");",
      "right" : "builder.append(\" --ignore-eol-style\");",
      "info" : "ExpressionStatement[4466-4504]:ExpressionStatement[4609-4647]"
    }, {
      "left" : "String value = builder.toString().trim();",
      "right" : "String value = builder.toString().trim();",
      "info" : "VariableDeclarationStatement[4520-4561]:VariableDeclarationStatement[4663-4704]"
    }, {
      "left" : "if (!StringUtil.isEmpty(value))",
      "right" : "if (!StringUtil.isEmpty(value))",
      "info" : "IfStatement[4569-4681]:IfStatement[4712-4824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4601-4681]:Block[4744-4824]"
    }, {
      "left" : "parameters.add(\"--extensions\");",
      "right" : "parameters.add(\"--extensions\");",
      "info" : "ExpressionStatement[4611-4642]:ExpressionStatement[4754-4785]"
    }, {
      "left" : "parameters.add(value);",
      "right" : "parameters.add(value);",
      "info" : "ExpressionStatement[4651-4673]:ExpressionStatement[4794-4816]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4695-4701]:Modifier[4838-4844]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4702-4708]:Modifier[4845-4851]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4709-4713]:PrimitiveType[4852-4856]"
    }, {
      "left" : "putChangeLists",
      "right" : "putChangeLists",
      "info" : "SimpleName[4714-4728]:SimpleName[4857-4871]"
    }, {
      "left" : "@NotNull List<String> parameters",
      "right" : "@NotNull List<String> parameters",
      "info" : "SingleVariableDeclaration[4729-4761]:SingleVariableDeclaration[4872-4904]"
    }, {
      "left" : "@Nullable Iterable<String> changeLists",
      "right" : "@Nullable Iterable<String> changeLists",
      "info" : "SingleVariableDeclaration[4763-4801]:SingleVariableDeclaration[4906-4944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4803-4967]:Block[4946-5110]"
    }, {
      "left" : "if (changeLists != null)",
      "right" : "if (changeLists != null)",
      "info" : "IfStatement[4809-4963]:IfStatement[4952-5106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4834-4963]:Block[4977-5106]"
    }, {
      "left" : "for (String changeList : changeLists)",
      "right" : "for (String changeList : changeLists)",
      "info" : "EnhancedForStatement[4842-4957]:EnhancedForStatement[4985-5100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4880-4957]:Block[5023-5100]"
    }, {
      "left" : "parameters.add(\"--cl\");",
      "right" : "parameters.add(\"--cl\");",
      "info" : "ExpressionStatement[4890-4913]:ExpressionStatement[5033-5056]"
    }, {
      "left" : "parameters.add(changeList);",
      "right" : "parameters.add(changeList);",
      "info" : "ExpressionStatement[4922-4949]:ExpressionStatement[5065-5092]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4971-4977]:Modifier[5114-5120]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4978-4984]:Modifier[5121-5127]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4985-4991]:SimpleType[5128-5134]"
    }, {
      "left" : "escape",
      "right" : "escape",
      "info" : "SimpleName[4992-4998]:SimpleName[5135-5141]"
    }, {
      "left" : "@NotNull String path",
      "right" : "@NotNull String path",
      "info" : "SingleVariableDeclaration[4999-5019]:SingleVariableDeclaration[5142-5162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5021-5077]:Block[5164-5220]"
    }, {
      "left" : "return path.contains(\"@\") ? path + \"@\" : path;",
      "right" : "return path.contains(\"@\") ? path + \"@\" : path;",
      "info" : "ReturnStatement[5027-5073]:ReturnStatement[5170-5216]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5081-5087]:Modifier[5224-5230]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5088-5094]:Modifier[5231-5237]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[5096-5097]:TypeParameter[5239-5240]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[5099-5100]:SimpleType[5242-5243]"
    }, {
      "left" : "parse",
      "right" : "parse",
      "info" : "SimpleName[5101-5106]:SimpleName[5244-5249]"
    }, {
      "left" : "@NotNull String data",
      "right" : "@NotNull String data",
      "info" : "SingleVariableDeclaration[5107-5127]:SingleVariableDeclaration[5250-5270]"
    }, {
      "left" : "@NotNull Class<T> type",
      "right" : "@NotNull Class<T> type",
      "info" : "SingleVariableDeclaration[5129-5151]:SingleVariableDeclaration[5272-5294]"
    }, {
      "left" : "JAXBException",
      "right" : "JAXBException",
      "info" : "SimpleType[5160-5173]:SimpleType[5303-5316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5174-5369]:Block[5317-5512]"
    }, {
      "left" : "JAXBContext context = JAXBContext.newInstance(type);",
      "right" : "JAXBContext context = JAXBContext.newInstance(type);",
      "info" : "VariableDeclarationStatement[5180-5232]:VariableDeclarationStatement[5323-5375]"
    }, {
      "left" : "Unmarshaller unmarshaller = context.createUnmarshaller();",
      "right" : "Unmarshaller unmarshaller = context.createUnmarshaller();",
      "info" : "VariableDeclarationStatement[5237-5294]:VariableDeclarationStatement[5380-5437]"
    }, {
      "left" : "return (T) unmarshaller.unmarshal(new StringReader(data.trim()));",
      "right" : "return (T) unmarshaller.unmarshal(new StringReader(data.trim()));",
      "info" : "ReturnStatement[5300-5365]:ReturnStatement[5443-5508]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[5373-5381]:MarkerAnnotation[5516-5524]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5384-5390]:Modifier[5527-5533]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5391-5397]:Modifier[5534-5540]"
    }, {
      "left" : "File",
      "right" : "File",
      "info" : "SimpleType[5398-5402]:SimpleType[5541-5545]"
    }, {
      "left" : "getHomeDirectory",
      "right" : "getHomeDirectory",
      "info" : "SimpleName[5403-5419]:SimpleName[5546-5562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5422-5475]:Block[5565-5618]"
    }, {
      "left" : "return new File(PathManager.getHomePath());",
      "right" : "return new File(PathManager.getHomePath());",
      "info" : "ReturnStatement[5428-5471]:ReturnStatement[5571-5614]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5580-5586]:Modifier[5723-5729]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5587-5593]:Modifier[5730-5736]"
    }, {
      "left" : "char",
      "right" : "char",
      "info" : "PrimitiveType[5594-5598]:PrimitiveType[5737-5741]"
    }, {
      "left" : "getStatusChar",
      "right" : "getStatusChar",
      "info" : "SimpleName[5599-5612]:SimpleName[5742-5755]"
    }, {
      "left" : "@Nullable String type",
      "right" : "@Nullable String type",
      "info" : "SingleVariableDeclaration[5613-5634]:SingleVariableDeclaration[5756-5777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5636-5702]:Block[5779-5845]"
    }, {
      "left" : "return !StringUtil.isEmpty(type) ? type.charAt(0) : ' ';",
      "right" : "return !StringUtil.isEmpty(type) ? type.charAt(0) : ' ';",
      "info" : "ReturnStatement[5642-5698]:ReturnStatement[5785-5841]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[5706-5714]:MarkerAnnotation[5849-5857]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5717-5723]:Modifier[5860-5866]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5724-5730]:Modifier[5867-5873]"
    }, {
      "left" : "StatusType",
      "right" : "StatusType",
      "info" : "SimpleType[5731-5741]:SimpleType[5874-5884]"
    }, {
      "left" : "getStatusType",
      "right" : "getStatusType",
      "info" : "SimpleName[5742-5755]:SimpleName[5885-5898]"
    }, {
      "left" : "@Nullable String type",
      "right" : "@Nullable String type",
      "info" : "SingleVariableDeclaration[5756-5777]:SingleVariableDeclaration[5899-5920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5779-5831]:Block[5922-5974]"
    }, {
      "left" : "return getStatusType(getStatusChar(type));",
      "right" : "return getStatusType(getStatusChar(type));",
      "info" : "ReturnStatement[5785-5827]:ReturnStatement[5928-5970]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[5835-5843]:MarkerAnnotation[5978-5986]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5846-5852]:Modifier[5989-5995]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5853-5859]:Modifier[5996-6002]"
    }, {
      "left" : "StatusType",
      "right" : "StatusType",
      "info" : "SimpleType[5860-5870]:SimpleType[6003-6013]"
    }, {
      "left" : "getStatusType",
      "right" : "getStatusType",
      "info" : "SimpleName[5871-5884]:SimpleName[6014-6027]"
    }, {
      "left" : "char first",
      "right" : "char first",
      "info" : "SingleVariableDeclaration[5885-5895]:SingleVariableDeclaration[6028-6038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5897-6577]:Block[6040-6720]"
    }, {
      "left" : "final StatusType contentsStatus;",
      "right" : "final StatusType contentsStatus;",
      "info" : "VariableDeclarationStatement[5903-5935]:VariableDeclarationStatement[6046-6078]"
    }, {
      "left" : "if ('A' == first)",
      "right" : "if ('A' == first)",
      "info" : "IfStatement[5940-6546]:IfStatement[6083-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5958-6013]:Block[6101-6156]"
    }, {
      "left" : "contentsStatus = StatusType.STATUS_ADDED;",
      "right" : "contentsStatus = StatusType.STATUS_ADDED;",
      "info" : "ExpressionStatement[5966-6007]:ExpressionStatement[6109-6150]"
    }, {
      "left" : "if ('D' == first)",
      "right" : "if ('D' == first)",
      "info" : "IfStatement[6019-6546]:IfStatement[6162-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6037-6094]:Block[6180-6237]"
    }, {
      "left" : "contentsStatus = StatusType.STATUS_DELETED;",
      "right" : "contentsStatus = StatusType.STATUS_DELETED;",
      "info" : "ExpressionStatement[6045-6088]:ExpressionStatement[6188-6231]"
    }, {
      "left" : "if ('U' == first)",
      "right" : "if ('U' == first)",
      "info" : "IfStatement[6100-6546]:IfStatement[6243-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6118-6168]:Block[6261-6311]"
    }, {
      "left" : "contentsStatus = StatusType.CHANGED;",
      "right" : "contentsStatus = StatusType.CHANGED;",
      "info" : "ExpressionStatement[6126-6162]:ExpressionStatement[6269-6305]"
    }, {
      "left" : "if ('C' == first)",
      "right" : "if ('C' == first)",
      "info" : "IfStatement[6174-6546]:IfStatement[6317-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6192-6245]:Block[6335-6388]"
    }, {
      "left" : "contentsStatus = StatusType.CONFLICTED;",
      "right" : "contentsStatus = StatusType.CONFLICTED;",
      "info" : "ExpressionStatement[6200-6239]:ExpressionStatement[6343-6382]"
    }, {
      "left" : "if ('G' == first)",
      "right" : "if ('G' == first)",
      "info" : "IfStatement[6251-6546]:IfStatement[6394-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6269-6318]:Block[6412-6461]"
    }, {
      "left" : "contentsStatus = StatusType.MERGED;",
      "right" : "contentsStatus = StatusType.MERGED;",
      "info" : "ExpressionStatement[6277-6312]:ExpressionStatement[6420-6455]"
    }, {
      "left" : "if ('R' == first)",
      "right" : "if ('R' == first)",
      "info" : "IfStatement[6324-6546]:IfStatement[6467-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6342-6400]:Block[6485-6543]"
    }, {
      "left" : "contentsStatus = StatusType.STATUS_REPLACED;",
      "right" : "contentsStatus = StatusType.STATUS_REPLACED;",
      "info" : "ExpressionStatement[6350-6394]:ExpressionStatement[6493-6537]"
    }, {
      "left" : "if ('E' == first)",
      "right" : "if ('E' == first)",
      "info" : "IfStatement[6406-6546]:IfStatement[6549-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6424-6484]:Block[6567-6627]"
    }, {
      "left" : "contentsStatus = StatusType.STATUS_OBSTRUCTED;",
      "right" : "contentsStatus = StatusType.STATUS_OBSTRUCTED;",
      "info" : "ExpressionStatement[6432-6478]:ExpressionStatement[6575-6621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6490-6546]:Block[6633-6689]"
    }, {
      "left" : "contentsStatus = StatusType.STATUS_NORMAL;",
      "right" : "contentsStatus = StatusType.STATUS_NORMAL;",
      "info" : "ExpressionStatement[6498-6540]:ExpressionStatement[6641-6683]"
    }, {
      "left" : "return contentsStatus;",
      "right" : "return contentsStatus;",
      "info" : "ReturnStatement[6551-6573]:ReturnStatement[6694-6716]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6581-6587]:Modifier[6724-6730]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6588-6594]:Modifier[6731-6737]"
    }, {
      "left" : "File",
      "right" : "File",
      "info" : "SimpleType[6595-6599]:SimpleType[6738-6742]"
    }, {
      "left" : "correctUpToExistingParent",
      "right" : "correctUpToExistingParent",
      "info" : "SimpleName[6600-6625]:SimpleName[6743-6768]"
    }, {
      "left" : "File base",
      "right" : "File base",
      "info" : "SingleVariableDeclaration[6626-6635]:SingleVariableDeclaration[6769-6778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6637-6787]:Block[6780-6930]"
    }, {
      "left" : "while (base != null)",
      "right" : "while (base != null)",
      "info" : "WhileStatement[6643-6766]:WhileStatement[6786-6909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6664-6766]:Block[6807-6909]"
    }, {
      "left" : "if (base.exists() && base.isDirectory())",
      "right" : "if (base.exists() && base.isDirectory())",
      "info" : "IfStatement[6672-6725]:IfStatement[6815-6868]"
    }, {
      "left" : "return base;",
      "right" : "return base;",
      "info" : "ReturnStatement[6713-6725]:ReturnStatement[6856-6868]"
    }, {
      "left" : "base = base.getParentFile();",
      "right" : "base = base.getParentFile();",
      "info" : "ExpressionStatement[6732-6760]:ExpressionStatement[6875-6903]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6771-6783]:ReturnStatement[6914-6926]"
    } ]
  },
  "interFileMappings" : { }
}