{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DeploymentGroupWatchCommand",
      "right" : "DeploymentGroupWatchCommand",
      "info" : "TypeDeclaration[1503-3871]:TypeDeclaration[1448-3359]"
    }, {
      "left" : "private final Argument nameArg;",
      "right" : "private final Argument nameArg;",
      "info" : "FieldDeclaration[1583-1614]:FieldDeclaration[1634-1665]"
    }, {
      "left" : "private final Argument intervalArg;",
      "right" : "private final Argument intervalArg;",
      "info" : "FieldDeclaration[1617-1652]:FieldDeclaration[1702-1737]"
    }, {
      "left" : "public DeploymentGroupWatchCommand(Subparser parser)",
      "right" : "public DeploymentGroupWatchCommand(Subparser parser)",
      "info" : "MethodDeclaration[1656-2016]:MethodDeclaration[1741-2222]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1709-2016]:Block[1794-2222]"
    }, {
      "left" : "super(parser);",
      "right" : "super(parser);",
      "info" : "SuperConstructorInvocation[1715-1729]:SuperConstructorInvocation[1800-1814]"
    }, {
      "left" : "parser.help(\"watch deployment groups\");",
      "right" : "parser.help(\"watch deployment groups\");",
      "info" : "ExpressionStatement[1734-1773]:ExpressionStatement[1819-1858]"
    }, {
      "left" : "nameArg = parser.addArgument(\"name\")\n        .help(\"Deployment group name\");",
      "right" : "nameArg = parser.addArgument(\"name\")\n        .help(\"Deployment group name\");",
      "info" : "ExpressionStatement[1779-1855]:ExpressionStatement[1864-1940]"
    }, {
      "left" : "intervalArg = parser.addArgument(\"--interval\")\n        .type(Integer.class)\n        .setDefault(1)\n        .help(\"polling interval, default 1 second\");",
      "right" : "intervalArg = parser.addArgument(\"--interval\")\n        .type(Integer.class)\n        .setDefault(1)\n        .help(\"polling interval, default 1 second\");",
      "info" : "ExpressionStatement[1861-2012]:ExpressionStatement[2067-2218]"
    }, {
      "left" : "final String name = options.getString(nameArg.getDest());",
      "right" : "final String name = options.getString(nameArg.getDest());",
      "info" : "VariableDeclarationStatement[2264-2321]:VariableDeclarationStatement[2416-2473]"
    }, {
      "left" : "out.println(\"Control-C to stop\");",
      "right" : "out.println(\"Control-C to stop\");",
      "info" : "ExpressionStatement[2656-2689]:ExpressionStatement[2716-2749]"
    }, {
      "left" : "out.println(\"STATUS               HOST                           STATE\");",
      "right" : "out.println(\"STATUS               HOST                           STATE\");",
      "info" : "ExpressionStatement[2694-2767]:ExpressionStatement[2756-2829]"
    }, {
      "left" : "final DateTimeFormatter formatter = DateTimeFormat.forPattern(\"YYYY-MM-dd HH:mm:ss\");",
      "right" : "final DateTimeFormatter formatter = DateTimeFormat.forPattern(DATE_TIME_PATTERN);",
      "info" : "VariableDeclarationStatement[2772-2857]:VariableDeclarationStatement[2610-2691]"
    }, {
      "left" : "final Instant now = new Instant();",
      "right" : "final Instant now = new Instant();",
      "info" : "VariableDeclarationStatement[2884-2918]:VariableDeclarationStatement[2969-3003]"
    }, {
      "left" : "final Optional<Target> target = cc.getTarget();",
      "right" : "int rc = 0;",
      "info" : "VariableDeclarationStatement[3114-3161]:VariableDeclarationStatement[2929-2940]"
    }, {
      "left" : "if (target.isPresent())",
      "right" : "if (!json)",
      "info" : "IfStatement[3237-3476]:IfStatement[3010-3164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3261-3432]:Block[3021-3164]"
    }, {
      "left" : "if (out.checkError())",
      "right" : "if (out.checkError())",
      "info" : "IfStatement[3589-3635]:IfStatement[3249-3295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3611-3635]:Block[3271-3295]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3621-3627]:BreakStatement[3281-3287]"
    }, {
      "left" : "Thread.sleep(1000 * interval);",
      "right" : "Thread.sleep(1000 * interval);",
      "info" : "ExpressionStatement[3642-3672]:ExpressionStatement[3303-3333]"
    } ]
  },
  "interFileMappings" : { }
}