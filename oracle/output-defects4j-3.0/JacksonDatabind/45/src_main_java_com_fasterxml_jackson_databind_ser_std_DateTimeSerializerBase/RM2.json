{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DateTimeSerializerBase",
      "right" : "DateTimeSerializerBase",
      "info" : "TypeDeclaration[658-5681]:TypeDeclaration[658-5772]"
    }, {
      "left" : "protected final Boolean _useTimestamp;",
      "right" : "protected final Boolean _useTimestamp;",
      "info" : "FieldDeclaration[811-984]:FieldDeclaration[811-984]"
    }, {
      "left" : "protected final DateFormat _customFormat;",
      "right" : "protected final DateFormat _customFormat;",
      "info" : "FieldDeclaration[994-1260]:FieldDeclaration[994-1260]"
    }, {
      "left" : "protected DateTimeSerializerBase(Class<T> type,\n            Boolean useTimestamp, DateFormat customFormat)",
      "right" : "protected DateTimeSerializerBase(Class<T> type,\n            Boolean useTimestamp, DateFormat customFormat)",
      "info" : "MethodDeclaration[1266-1481]:MethodDeclaration[1266-1481]"
    }, {
      "left" : "public abstract DateTimeSerializerBase<T> withFormat(Boolean timestamp, DateFormat customFormat);",
      "right" : "public abstract DateTimeSerializerBase<T> withFormat(Boolean timestamp, DateFormat customFormat);",
      "info" : "MethodDeclaration[1487-1584]:MethodDeclaration[1487-1584]"
    }, {
      "left" : "public JsonSerializer<?> createContextual(SerializerProvider serializers,\n            BeanProperty property) throws JsonMappingException",
      "right" : "public JsonSerializer<?> createContextual(SerializerProvider serializers,\n            BeanProperty property) throws JsonMappingException",
      "info" : "MethodDeclaration[1590-3043]:MethodDeclaration[1590-3134]"
    }, {
      "left" : "public boolean isEmpty(T value)",
      "right" : "public boolean isEmpty(T value)",
      "info" : "MethodDeclaration[3210-3410]:MethodDeclaration[3301-3501]"
    }, {
      "left" : "public boolean isEmpty(SerializerProvider serializers, T value)",
      "right" : "public boolean isEmpty(SerializerProvider serializers, T value)",
      "info" : "MethodDeclaration[3416-3632]:MethodDeclaration[3507-3723]"
    }, {
      "left" : "protected abstract long _timestamp(T value);",
      "right" : "protected abstract long _timestamp(T value);",
      "info" : "MethodDeclaration[3642-3686]:MethodDeclaration[3733-3777]"
    }, {
      "left" : "public JsonNode getSchema(SerializerProvider serializers, Type typeHint)",
      "right" : "public JsonNode getSchema(SerializerProvider serializers, Type typeHint)",
      "info" : "MethodDeclaration[3696-3942]:MethodDeclaration[3787-4033]"
    }, {
      "left" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint) throws JsonMappingException",
      "right" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint) throws JsonMappingException",
      "info" : "MethodDeclaration[3948-4180]:MethodDeclaration[4039-4271]"
    }, {
      "left" : "public abstract void serialize(T value, JsonGenerator gen, SerializerProvider serializers)\n        throws IOException;",
      "right" : "public abstract void serialize(T value, JsonGenerator gen, SerializerProvider serializers)\n        throws IOException;",
      "info" : "MethodDeclaration[4358-4490]:MethodDeclaration[4449-4581]"
    }, {
      "left" : "protected boolean _asTimestamp(SerializerProvider serializers)",
      "right" : "protected boolean _asTimestamp(SerializerProvider serializers)",
      "info" : "MethodDeclaration[4666-5268]:MethodDeclaration[4757-5359]"
    }, {
      "left" : "protected void _acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint,\n\t\tboolean asNumber) throws JsonMappingException",
      "right" : "protected void _acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint,\n\t\tboolean asNumber) throws JsonMappingException",
      "info" : "MethodDeclaration[5274-5679]:MethodDeclaration[5365-5770]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[686-692]:Modifier[686-692]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[693-701]:Modifier[693-701]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[702-707]:TYPE_DECLARATION_KIND[702-707]"
    }, {
      "left" : "DateTimeSerializerBase",
      "right" : "DateTimeSerializerBase",
      "info" : "SimpleName[708-730]:SimpleName[708-730]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1266-1275]:Modifier[1266-1275]"
    }, {
      "left" : "DateTimeSerializerBase",
      "right" : "DateTimeSerializerBase",
      "info" : "SimpleName[1276-1298]:SimpleName[1276-1298]"
    }, {
      "left" : "Class<T> type",
      "right" : "Class<T> type",
      "info" : "SingleVariableDeclaration[1299-1312]:SingleVariableDeclaration[1299-1312]"
    }, {
      "left" : "Boolean useTimestamp",
      "right" : "Boolean useTimestamp",
      "info" : "SingleVariableDeclaration[1326-1346]:SingleVariableDeclaration[1326-1346]"
    }, {
      "left" : "DateFormat customFormat",
      "right" : "DateFormat customFormat",
      "info" : "SingleVariableDeclaration[1348-1371]:SingleVariableDeclaration[1348-1371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1377-1481]:Block[1377-1481]"
    }, {
      "left" : "super(type);",
      "right" : "super(type);",
      "info" : "SuperConstructorInvocation[1387-1399]:SuperConstructorInvocation[1387-1399]"
    }, {
      "left" : "_useTimestamp = useTimestamp;",
      "right" : "_useTimestamp = useTimestamp;",
      "info" : "ExpressionStatement[1408-1437]:ExpressionStatement[1408-1437]"
    }, {
      "left" : "_customFormat = customFormat;",
      "right" : "_customFormat = customFormat;",
      "info" : "ExpressionStatement[1446-1475]:ExpressionStatement[1446-1475]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1487-1493]:Modifier[1487-1493]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1494-1502]:Modifier[1494-1502]"
    }, {
      "left" : "DateTimeSerializerBase<T>",
      "right" : "DateTimeSerializerBase<T>",
      "info" : "ParameterizedType[1503-1528]:ParameterizedType[1503-1528]"
    }, {
      "left" : "withFormat",
      "right" : "withFormat",
      "info" : "SimpleName[1529-1539]:SimpleName[1529-1539]"
    }, {
      "left" : "Boolean timestamp",
      "right" : "Boolean timestamp",
      "info" : "SingleVariableDeclaration[1540-1557]:SingleVariableDeclaration[1540-1557]"
    }, {
      "left" : "DateFormat customFormat",
      "right" : "DateFormat customFormat",
      "info" : "SingleVariableDeclaration[1559-1582]:SingleVariableDeclaration[1559-1582]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1604-1610]:Modifier[1604-1610]"
    }, {
      "left" : "createContextual",
      "right" : "createContextual",
      "info" : "SimpleName[1629-1645]:SimpleName[1629-1645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1745-3043]:Block[1745-3134]"
    }, {
      "left" : "if (property != null)",
      "right" : "if (property != null)",
      "info" : "IfStatement[1755-3016]:IfStatement[1755-3107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1777-3016]:Block[1777-3107]"
    }, {
      "left" : "JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());",
      "right" : "JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());",
      "info" : "VariableDeclarationStatement[1791-1901]:VariableDeclarationStatement[1791-1901]"
    }, {
      "left" : "if (format != null)",
      "right" : "if (format != null)",
      "info" : "IfStatement[1914-3006]:IfStatement[1914-3097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1934-3006]:Block[1934-3097]"
    }, {
      "left" : "JsonFormat.Shape shape = format.getShape();",
      "right" : "JsonFormat.Shape shape = format.getShape();",
      "info" : "VariableDeclarationStatement[2020-2063]:VariableDeclarationStatement[2020-2063]"
    }, {
      "left" : "if (shape.isNumeric())",
      "right" : "if (shape.isNumeric())",
      "info" : "IfStatement[2080-2181]:IfStatement[2080-2181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2103-2181]:Block[2103-2181]"
    }, {
      "left" : "return withFormat(Boolean.TRUE, null);",
      "right" : "return withFormat(Boolean.TRUE, null);",
      "info" : "ReturnStatement[2125-2163]:ReturnStatement[2125-2163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2249-2992]:Block[2340-3083]"
    }, {
      "left" : "TimeZone tz = format.getTimeZone();",
      "right" : "TimeZone tz = format.getTimeZone();",
      "info" : "VariableDeclarationStatement[2271-2306]:VariableDeclarationStatement[2362-2397]"
    }, {
      "left" : "final String pattern = format.hasPattern()\n                                    ? format.getPattern()\n                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;",
      "right" : "final String pattern = format.hasPattern()\n                                    ? format.getPattern()\n                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;",
      "info" : "VariableDeclarationStatement[2327-2504]:VariableDeclarationStatement[2418-2595]"
    }, {
      "left" : "final Locale loc = format.hasLocale()\n                                    ? format.getLocale()\n                                    : serializers.getLocale();",
      "right" : "final Locale loc = format.hasLocale()\n                                    ? format.getLocale()\n                                    : serializers.getLocale();",
      "info" : "VariableDeclarationStatement[2525-2682]:VariableDeclarationStatement[2616-2773]"
    }, {
      "left" : "SimpleDateFormat df = new SimpleDateFormat(pattern, loc);",
      "right" : "SimpleDateFormat df = new SimpleDateFormat(pattern, loc);",
      "info" : "VariableDeclarationStatement[2703-2760]:VariableDeclarationStatement[2794-2851]"
    }, {
      "left" : "if (tz == null)",
      "right" : "if (tz == null)",
      "info" : "IfStatement[2781-2876]:IfStatement[2872-2967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2797-2876]:Block[2888-2967]"
    }, {
      "left" : "tz = serializers.getTimeZone();",
      "right" : "tz = serializers.getTimeZone();",
      "info" : "ExpressionStatement[2823-2854]:ExpressionStatement[2914-2945]"
    }, {
      "left" : "df.setTimeZone(tz);",
      "right" : "df.setTimeZone(tz);",
      "info" : "ExpressionStatement[2897-2916]:ExpressionStatement[2988-3007]"
    }, {
      "left" : "return withFormat(Boolean.FALSE, df);",
      "right" : "return withFormat(Boolean.FALSE, df);",
      "info" : "ReturnStatement[2937-2974]:ReturnStatement[3028-3065]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3025-3037]:ReturnStatement[3116-3128]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[3210-3221]:MarkerAnnotation[3301-3312]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3226-3235]:MarkerAnnotation[3317-3326]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3240-3246]:Modifier[3331-3337]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3247-3254]:PrimitiveType[3338-3345]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[3255-3262]:SimpleName[3346-3353]"
    }, {
      "left" : "T value",
      "right" : "T value",
      "info" : "SingleVariableDeclaration[3263-3270]:SingleVariableDeclaration[3354-3361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3272-3410]:Block[3363-3501]"
    }, {
      "left" : "return (value == null) || (_timestamp(value) == 0L);",
      "right" : "return (value == null) || (_timestamp(value) == 0L);",
      "info" : "ReturnStatement[3352-3404]:ReturnStatement[3443-3495]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3416-3425]:MarkerAnnotation[3507-3516]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3430-3436]:Modifier[3521-3527]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3437-3444]:PrimitiveType[3528-3535]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[3445-3452]:SimpleName[3536-3543]"
    }, {
      "left" : "SerializerProvider serializers",
      "right" : "SerializerProvider serializers",
      "info" : "SingleVariableDeclaration[3453-3483]:SingleVariableDeclaration[3544-3574]"
    }, {
      "left" : "T value",
      "right" : "T value",
      "info" : "SingleVariableDeclaration[3485-3492]:SingleVariableDeclaration[3576-3583]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3494-3632]:Block[3585-3723]"
    }, {
      "left" : "return (value == null) || (_timestamp(value) == 0L);",
      "right" : "return (value == null) || (_timestamp(value) == 0L);",
      "info" : "ReturnStatement[3574-3626]:ReturnStatement[3665-3717]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3642-3651]:Modifier[3733-3742]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[3652-3660]:Modifier[3743-3751]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[3661-3665]:PrimitiveType[3752-3756]"
    }, {
      "left" : "_timestamp",
      "right" : "_timestamp",
      "info" : "SimpleName[3666-3676]:SimpleName[3757-3767]"
    }, {
      "left" : "T value",
      "right" : "T value",
      "info" : "SingleVariableDeclaration[3677-3684]:SingleVariableDeclaration[3768-3775]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3696-3705]:MarkerAnnotation[3787-3796]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3710-3716]:Modifier[3801-3807]"
    }, {
      "left" : "JsonNode",
      "right" : "JsonNode",
      "info" : "SimpleType[3717-3725]:SimpleType[3808-3816]"
    }, {
      "left" : "getSchema",
      "right" : "getSchema",
      "info" : "SimpleName[3726-3735]:SimpleName[3817-3826]"
    }, {
      "left" : "SerializerProvider serializers",
      "right" : "SerializerProvider serializers",
      "info" : "SingleVariableDeclaration[3736-3766]:SingleVariableDeclaration[3827-3857]"
    }, {
      "left" : "Type typeHint",
      "right" : "Type typeHint",
      "info" : "SingleVariableDeclaration[3768-3781]:SingleVariableDeclaration[3859-3872]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3783-3942]:Block[3874-4033]"
    }, {
      "left" : "return createSchemaNode(_asTimestamp(serializers) ? \"number\" : \"string\", true);",
      "right" : "return createSchemaNode(_asTimestamp(serializers) ? \"number\" : \"string\", true);",
      "info" : "ReturnStatement[3857-3936]:ReturnStatement[3948-4027]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3948-3957]:MarkerAnnotation[4039-4048]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3962-3968]:Modifier[4053-4059]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3969-3973]:PrimitiveType[4060-4064]"
    }, {
      "left" : "acceptJsonFormatVisitor",
      "right" : "acceptJsonFormatVisitor",
      "info" : "SimpleName[3974-3997]:SimpleName[4065-4088]"
    }, {
      "left" : "JsonFormatVisitorWrapper visitor",
      "right" : "JsonFormatVisitorWrapper visitor",
      "info" : "SingleVariableDeclaration[3998-4030]:SingleVariableDeclaration[4089-4121]"
    }, {
      "left" : "JavaType typeHint",
      "right" : "JavaType typeHint",
      "info" : "SingleVariableDeclaration[4032-4049]:SingleVariableDeclaration[4123-4140]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[4058-4078]:SimpleType[4149-4169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4083-4180]:Block[4174-4271]"
    }, {
      "left" : "_acceptJsonFormatVisitor(visitor, typeHint, _asTimestamp(visitor.getProvider()));",
      "right" : "_acceptJsonFormatVisitor(visitor, typeHint, _asTimestamp(visitor.getProvider()));",
      "info" : "ExpressionStatement[4093-4174]:ExpressionStatement[4184-4265]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4358-4367]:MarkerAnnotation[4449-4458]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4372-4378]:Modifier[4463-4469]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[4379-4387]:Modifier[4470-4478]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4388-4392]:PrimitiveType[4479-4483]"
    }, {
      "left" : "serialize",
      "right" : "serialize",
      "info" : "SimpleName[4393-4402]:SimpleName[4484-4493]"
    }, {
      "left" : "T value",
      "right" : "T value",
      "info" : "SingleVariableDeclaration[4403-4410]:SingleVariableDeclaration[4494-4501]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[4412-4429]:SingleVariableDeclaration[4503-4520]"
    }, {
      "left" : "SerializerProvider serializers",
      "right" : "SerializerProvider serializers",
      "info" : "SingleVariableDeclaration[4431-4461]:SingleVariableDeclaration[4522-4552]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[4478-4489]:SimpleType[4569-4580]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4666-4675]:Modifier[4757-4766]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4676-4683]:PrimitiveType[4767-4774]"
    }, {
      "left" : "_asTimestamp",
      "right" : "_asTimestamp",
      "info" : "SimpleName[4684-4696]:SimpleName[4775-4787]"
    }, {
      "left" : "SerializerProvider serializers",
      "right" : "SerializerProvider serializers",
      "info" : "SingleVariableDeclaration[4697-4727]:SingleVariableDeclaration[4788-4818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4733-5268]:Block[4824-5359]"
    }, {
      "left" : "if (_useTimestamp != null)",
      "right" : "if (_useTimestamp != null)",
      "info" : "IfStatement[4743-4830]:IfStatement[4834-4921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4770-4830]:Block[4861-4921]"
    }, {
      "left" : "return _useTimestamp.booleanValue();",
      "right" : "return _useTimestamp.booleanValue();",
      "info" : "ReturnStatement[4784-4820]:ReturnStatement[4875-4911]"
    }, {
      "left" : "if (_customFormat == null)",
      "right" : "if (_customFormat == null)",
      "info" : "IfStatement[4839-5240]:IfStatement[4930-5331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4866-5240]:Block[4957-5331]"
    }, {
      "left" : "if (serializers != null)",
      "right" : "if (serializers != null)",
      "info" : "IfStatement[4880-5014]:IfStatement[4971-5105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4905-5014]:Block[4996-5105]"
    }, {
      "left" : "return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);",
      "right" : "return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);",
      "info" : "ReturnStatement[4923-5000]:ReturnStatement[5014-5091]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null SerializerProvider passed for \"+handledType().getName());",
      "right" : "throw new IllegalArgumentException(\"Null SerializerProvider passed for \"+handledType().getName());",
      "info" : "ThrowStatement[5132-5230]:ThrowStatement[5223-5321]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5249-5262]:ReturnStatement[5340-5353]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5274-5283]:Modifier[5365-5374]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5284-5288]:PrimitiveType[5375-5379]"
    }, {
      "left" : "_acceptJsonFormatVisitor",
      "right" : "_acceptJsonFormatVisitor",
      "info" : "SimpleName[5289-5313]:SimpleName[5380-5404]"
    }, {
      "left" : "JsonFormatVisitorWrapper visitor",
      "right" : "JsonFormatVisitorWrapper visitor",
      "info" : "SingleVariableDeclaration[5314-5346]:SingleVariableDeclaration[5405-5437]"
    }, {
      "left" : "JavaType typeHint",
      "right" : "JavaType typeHint",
      "info" : "SingleVariableDeclaration[5348-5365]:SingleVariableDeclaration[5439-5456]"
    }, {
      "left" : "boolean asNumber",
      "right" : "boolean asNumber",
      "info" : "SingleVariableDeclaration[5369-5385]:SingleVariableDeclaration[5460-5476]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[5394-5414]:SimpleType[5485-5505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5419-5679]:Block[5510-5770]"
    }, {
      "left" : "if (asNumber)",
      "right" : "if (asNumber)",
      "info" : "IfStatement[5429-5673]:IfStatement[5520-5764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5443-5579]:Block[5534-5670]"
    }, {
      "left" : "visitIntFormat(visitor, typeHint,\n                    JsonParser.NumberType.LONG, JsonValueFormat.UTC_MILLISEC);",
      "right" : "visitIntFormat(visitor, typeHint,\n                    JsonParser.NumberType.LONG, JsonValueFormat.UTC_MILLISEC);",
      "info" : "ExpressionStatement[5457-5569]:ExpressionStatement[5548-5660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5585-5673]:Block[5676-5764]"
    }, {
      "left" : "visitStringFormat(visitor, typeHint, JsonValueFormat.DATE_TIME);",
      "right" : "visitStringFormat(visitor, typeHint, JsonValueFormat.DATE_TIME);",
      "info" : "ExpressionStatement[5599-5663]:ExpressionStatement[5690-5754]"
    } ]
  },
  "interFileMappings" : { }
}