{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "InvocationMatcher",
      "right" : "InvocationMatcher",
      "info" : "TypeDeclaration[605-5444]:TypeDeclaration[605-6017]"
    }, {
      "left" : "private static final long serialVersionUID = -3047126096857467610L;",
      "right" : "private static final long serialVersionUID = -3047126096857467610L;",
      "info" : "FieldDeclaration[751-818]:FieldDeclaration[751-818]"
    }, {
      "left" : "private final Invocation invocation;",
      "right" : "private final Invocation invocation;",
      "info" : "FieldDeclaration[823-859]:FieldDeclaration[823-859]"
    }, {
      "left" : "private final List<Matcher> matchers;",
      "right" : "private final List<Matcher> matchers;",
      "info" : "FieldDeclaration[864-901]:FieldDeclaration[864-901]"
    }, {
      "left" : "public InvocationMatcher(Invocation invocation, List<Matcher> matchers)",
      "right" : "public InvocationMatcher(Invocation invocation, List<Matcher> matchers)",
      "info" : "MethodDeclaration[907-1218]:MethodDeclaration[907-1218]"
    }, {
      "left" : "public InvocationMatcher(Invocation invocation)",
      "right" : "public InvocationMatcher(Invocation invocation)",
      "info" : "MethodDeclaration[1228-1343]:MethodDeclaration[1228-1343]"
    }, {
      "left" : "public Method getMethod()",
      "right" : "public Method getMethod()",
      "info" : "MethodDeclaration[1349-1421]:MethodDeclaration[1349-1421]"
    }, {
      "left" : "public Invocation getInvocation()",
      "right" : "public Invocation getInvocation()",
      "info" : "MethodDeclaration[1431-1504]:MethodDeclaration[1431-1504]"
    }, {
      "left" : "public List<Matcher> getMatchers()",
      "right" : "public List<Matcher> getMatchers()",
      "info" : "MethodDeclaration[1514-1586]:MethodDeclaration[1514-1586]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[1596-1692]:MethodDeclaration[1596-1692]"
    }, {
      "left" : "public boolean matches(Invocation actual)",
      "right" : "public boolean matches(Invocation actual)",
      "info" : "MethodDeclaration[1698-1924]:MethodDeclaration[1698-1924]"
    }, {
      "left" : "private boolean safelyArgumentsMatch(Object[] actualArgs)",
      "right" : "private boolean safelyArgumentsMatch(Object[] actualArgs)",
      "info" : "MethodDeclaration[1930-2156]:MethodDeclaration[1930-2156]"
    }, {
      "left" : "public boolean hasSimilarMethod(Invocation candidate)",
      "right" : "public boolean hasSimilarMethod(Invocation candidate)",
      "info" : "MethodDeclaration[2162-3053]:MethodDeclaration[2162-3053]"
    }, {
      "left" : "public boolean hasSameMethod(Invocation candidate)",
      "right" : "public boolean hasSameMethod(Invocation candidate)",
      "info" : "MethodDeclaration[3059-3859]:MethodDeclaration[3059-3859]"
    }, {
      "left" : "public Location getLocation()",
      "right" : "public Location getLocation()",
      "info" : "MethodDeclaration[3869-3947]:MethodDeclaration[3869-3947]"
    }, {
      "left" : "public void captureArgumentsFrom(Invocation invocation)",
      "right" : "public void captureArgumentsFrom(Invocation invocation)",
      "info" : "MethodDeclaration[3953-5148]:MethodDeclaration[3953-5231]"
    }, {
      "left" : "public static List<InvocationMatcher> createFrom(List<Invocation> invocations)",
      "right" : "public static List<InvocationMatcher> createFrom(List<Invocation> invocations)",
      "info" : "MethodDeclaration[5155-5442]:MethodDeclaration[5728-6015]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[979-1218]:Block[979-1218]"
    }, {
      "left" : "this.invocation = invocation;",
      "right" : "this.invocation = invocation;",
      "info" : "ExpressionStatement[989-1018]:ExpressionStatement[989-1018]"
    }, {
      "left" : "if (matchers.isEmpty())",
      "right" : "if (matchers.isEmpty())",
      "info" : "IfStatement[1027-1212]:IfStatement[1027-1212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1051-1157]:Block[1051-1157]"
    }, {
      "left" : "this.matchers = ArgumentsProcessor.argumentsToMatchers(invocation.getArguments());",
      "right" : "this.matchers = ArgumentsProcessor.argumentsToMatchers(invocation.getArguments());",
      "info" : "ExpressionStatement[1065-1147]:ExpressionStatement[1065-1147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1163-1212]:Block[1163-1212]"
    }, {
      "left" : "this.matchers = matchers;",
      "right" : "this.matchers = matchers;",
      "info" : "ExpressionStatement[1177-1202]:ExpressionStatement[1177-1202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1276-1343]:Block[1276-1343]"
    }, {
      "left" : "this(invocation, Collections.<Matcher>emptyList());",
      "right" : "this(invocation, Collections.<Matcher>emptyList());",
      "info" : "ConstructorInvocation[1286-1337]:ConstructorInvocation[1286-1337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1375-1421]:Block[1375-1421]"
    }, {
      "left" : "return invocation.getMethod();",
      "right" : "return invocation.getMethod();",
      "info" : "ReturnStatement[1385-1415]:ReturnStatement[1385-1415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1465-1504]:Block[1465-1504]"
    }, {
      "left" : "return this.invocation;",
      "right" : "return this.invocation;",
      "info" : "ReturnStatement[1475-1498]:ReturnStatement[1475-1498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1549-1586]:Block[1549-1586]"
    }, {
      "left" : "return this.matchers;",
      "right" : "return this.matchers;",
      "info" : "ReturnStatement[1559-1580]:ReturnStatement[1559-1580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1621-1692]:Block[1621-1692]"
    }, {
      "left" : "return new PrintSettings().print(matchers, invocation);",
      "right" : "return new PrintSettings().print(matchers, invocation);",
      "info" : "ReturnStatement[1631-1686]:ReturnStatement[1631-1686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1740-1924]:Block[1740-1924]"
    }, {
      "left" : "return invocation.getMock().equals(actual.getMock())\n                && hasSameMethod(actual)\n                && new ArgumentsComparator().argumentsMatch(this, actual);",
      "right" : "return invocation.getMock().equals(actual.getMock())\n                && hasSameMethod(actual)\n                && new ArgumentsComparator().argumentsMatch(this, actual);",
      "info" : "ReturnStatement[1750-1918]:ReturnStatement[1750-1918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1988-2156]:Block[1988-2156]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[1998-2150]:TryStatement[1998-2150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2002-2092]:Block[2002-2092]"
    }, {
      "left" : "return new ArgumentsComparator().argumentsMatch(this, actualArgs);",
      "right" : "return new ArgumentsComparator().argumentsMatch(this, actualArgs);",
      "info" : "ReturnStatement[2016-2082]:ReturnStatement[2016-2082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2113-2150]:Block[2113-2150]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2127-2140]:ReturnStatement[2127-2140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2357-3053]:Block[2357-3053]"
    }, {
      "left" : "String wantedMethodName = getMethod().getName();",
      "right" : "String wantedMethodName = getMethod().getName();",
      "info" : "VariableDeclarationStatement[2367-2415]:VariableDeclarationStatement[2367-2415]"
    }, {
      "left" : "String currentMethodName = candidate.getMethod().getName();",
      "right" : "String currentMethodName = candidate.getMethod().getName();",
      "info" : "VariableDeclarationStatement[2424-2483]:VariableDeclarationStatement[2424-2483]"
    }, {
      "left" : "final boolean methodNameEquals = wantedMethodName.equals(currentMethodName);",
      "right" : "final boolean methodNameEquals = wantedMethodName.equals(currentMethodName);",
      "info" : "VariableDeclarationStatement[2501-2577]:VariableDeclarationStatement[2501-2577]"
    }, {
      "left" : "final boolean isUnverified = !candidate.isVerified();",
      "right" : "final boolean isUnverified = !candidate.isVerified();",
      "info" : "VariableDeclarationStatement[2586-2639]:VariableDeclarationStatement[2586-2639]"
    }, {
      "left" : "final boolean mockIsTheSame = getInvocation().getMock() == candidate.getMock();",
      "right" : "final boolean mockIsTheSame = getInvocation().getMock() == candidate.getMock();",
      "info" : "VariableDeclarationStatement[2648-2727]:VariableDeclarationStatement[2648-2727]"
    }, {
      "left" : "final boolean methodEquals = hasSameMethod(candidate);",
      "right" : "final boolean methodEquals = hasSameMethod(candidate);",
      "info" : "VariableDeclarationStatement[2736-2790]:VariableDeclarationStatement[2736-2790]"
    }, {
      "left" : "if (!methodNameEquals || !isUnverified || !mockIsTheSame)",
      "right" : "if (!methodNameEquals || !isUnverified || !mockIsTheSame)",
      "info" : "IfStatement[2800-2895]:IfStatement[2800-2895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2858-2895]:Block[2858-2895]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2872-2885]:ReturnStatement[2872-2885]"
    }, {
      "left" : "final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch(candidate.getArguments());",
      "right" : "final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch(candidate.getArguments());",
      "info" : "VariableDeclarationStatement[2905-3007]:VariableDeclarationStatement[2905-3007]"
    }, {
      "left" : "return !overloadedButSameArgs;",
      "right" : "return !overloadedButSameArgs;",
      "info" : "ReturnStatement[3017-3047]:ReturnStatement[3017-3047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3110-3859]:Block[3110-3859]"
    }, {
      "left" : "Method m1 = invocation.getMethod();",
      "right" : "Method m1 = invocation.getMethod();",
      "info" : "VariableDeclarationStatement[3293-3328]:VariableDeclarationStatement[3293-3328]"
    }, {
      "left" : "Method m2 = candidate.getMethod();",
      "right" : "Method m2 = candidate.getMethod();",
      "info" : "VariableDeclarationStatement[3337-3371]:VariableDeclarationStatement[3337-3371]"
    }, {
      "left" : "if (m1.getName() != null && m1.getName().equals(m2.getName()))",
      "right" : "if (m1.getName() != null && m1.getName().equals(m2.getName()))",
      "info" : "IfStatement[3389-3831]:IfStatement[3389-3831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3452-3831]:Block[3452-3831]"
    }, {
      "left" : "Class[] params1 = m1.getParameterTypes();",
      "right" : "Class[] params1 = m1.getParameterTypes();",
      "info" : "VariableDeclarationStatement[3504-3545]:VariableDeclarationStatement[3504-3545]"
    }, {
      "left" : "Class[] params2 = m2.getParameterTypes();",
      "right" : "Class[] params2 = m2.getParameterTypes();",
      "info" : "VariableDeclarationStatement[3555-3596]:VariableDeclarationStatement[3555-3596]"
    }, {
      "left" : "if (params1.length == params2.length)",
      "right" : "if (params1.length == params2.length)",
      "info" : "IfStatement[3606-3821]:IfStatement[3606-3821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3644-3821]:Block[3644-3821]"
    }, {
      "left" : "for (int i = 0; i < params1.length; i++)",
      "right" : "for (int i = 0; i < params1.length; i++)",
      "info" : "ForStatement[3659-3784]:ForStatement[3659-3784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3700-3784]:Block[3700-3784]"
    }, {
      "left" : "if (params1[i] != params2[i])",
      "right" : "if (params1[i] != params2[i])",
      "info" : "IfStatement[3712-3769]:IfStatement[3712-3769]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3756-3769]:ReturnStatement[3756-3769]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3798-3810]:ReturnStatement[3798-3810]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3840-3853]:ReturnStatement[3840-3853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3899-3947]:Block[3899-3947]"
    }, {
      "left" : "return invocation.getLocation();",
      "right" : "return invocation.getLocation();",
      "info" : "ReturnStatement[3909-3941]:ReturnStatement[3909-3941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4009-5148]:Block[4009-5231]"
    }, {
      "left" : "if (invocation.getMethod().isVarArgs())",
      "right" : "if (invocation.getMethod().isVarArgs())",
      "info" : "IfStatement[4019-5142]:IfStatement[4019-5225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4059-4803]:Block[4059-4886]"
    }, {
      "left" : "int indexOfVararg = invocation.getRawArguments().length - 1;",
      "right" : "int indexOfVararg = invocation.getRawArguments().length - 1;",
      "info" : "VariableDeclarationStatement[4073-4133]:VariableDeclarationStatement[4073-4133]"
    }, {
      "left" : "for (int position = 0; position < indexOfVararg; position++)",
      "right" : "for (int position = 0; position < indexOfVararg; position++)",
      "info" : "ForStatement[4146-4453]:ForStatement[4146-4453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4207-4453]:Block[4207-4453]"
    }, {
      "left" : "Matcher m = matchers.get(position);",
      "right" : "Matcher m = matchers.get(position);",
      "info" : "VariableDeclarationStatement[4225-4260]:VariableDeclarationStatement[4225-4260]"
    }, {
      "left" : "if (m instanceof CapturesArguments)",
      "right" : "if (m instanceof CapturesArguments)",
      "info" : "IfStatement[4277-4439]:IfStatement[4277-4439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4313-4439]:Block[4313-4439]"
    }, {
      "left" : "((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));",
      "right" : "((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));",
      "info" : "ExpressionStatement[4335-4421]:ExpressionStatement[4335-4421]"
    }, {
      "left" : "for (int position = indexOfVararg; position < matchers.size(); position++)",
      "right" : "for (int position = indexOfVararg; position < matchers.size(); position++)",
      "info" : "ForStatement[4466-4793]:ForStatement[5359-5696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4541-4793]:Block[4969-5215]"
    }, {
      "left" : "Matcher m = matchers.get(position);",
      "right" : "Matcher m = matchers.get(position);",
      "info" : "VariableDeclarationStatement[4559-4594]:VariableDeclarationStatement[4987-5022]"
    }, {
      "left" : "if (m instanceof CapturesArguments)",
      "right" : "if (m instanceof CapturesArguments)",
      "info" : "IfStatement[4611-4779]:IfStatement[5039-5201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4647-4779]:Block[4570-4862]"
    }, {
      "left" : "((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - indexOfVararg]);",
      "right" : "((CapturesArguments) m).captureFrom(Array.get(rawArgument, i));",
      "info" : "ExpressionStatement[4669-4761]:ExpressionStatement[4759-4822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4809-5142]:Block[4892-5225]"
    }, {
      "left" : "for (int position = 0; position < matchers.size(); position++)",
      "right" : "for (int position = 0; position < matchers.size(); position++)",
      "info" : "ForStatement[4823-5132]:ForStatement[4906-5215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4886-5132]:Block[4516-4876]"
    }, {
      "left" : "Matcher m = matchers.get(position);",
      "right" : "Matcher matcher = matchers.get(position);",
      "info" : "VariableDeclarationStatement[4904-4939]:VariableDeclarationStatement[5448-5489]"
    }, {
      "left" : "if (m instanceof CapturesArguments)",
      "right" : "if (m instanceof CapturesArguments)",
      "info" : "IfStatement[4956-5118]:IfStatement[4534-4862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4992-5118]:Block[5075-5201]"
    }, {
      "left" : "((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));",
      "right" : "((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));",
      "info" : "ExpressionStatement[5014-5100]:ExpressionStatement[5097-5183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5234-5442]:Block[5807-6015]"
    }, {
      "left" : "LinkedList<InvocationMatcher> out = new LinkedList<InvocationMatcher>();",
      "right" : "LinkedList<InvocationMatcher> out = new LinkedList<InvocationMatcher>();",
      "info" : "VariableDeclarationStatement[5244-5316]:VariableDeclarationStatement[5817-5889]"
    }, {
      "left" : "for (Invocation i : invocations)",
      "right" : "for (Invocation i : invocations)",
      "info" : "EnhancedForStatement[5325-5416]:EnhancedForStatement[5898-5989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5358-5416]:Block[5931-5989]"
    }, {
      "left" : "out.add(new InvocationMatcher(i));",
      "right" : "out.add(new InvocationMatcher(i));",
      "info" : "ExpressionStatement[5372-5406]:ExpressionStatement[5945-5979]"
    }, {
      "left" : "return out;",
      "right" : "return out;",
      "info" : "ReturnStatement[5425-5436]:ReturnStatement[5998-6009]"
    } ]
  },
  "interFileMappings" : { }
}