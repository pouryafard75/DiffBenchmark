{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static final Long LONG_ZERO = Long.valueOf(0L);",
      "right" : "public static final Long LONG_ZERO = Long.valueOf(0L);",
      "info" : "FieldDeclaration[1092-1190]:FieldDeclaration[1092-1190]"
    }, {
      "left" : "public static final Long LONG_ONE = Long.valueOf(1L);",
      "right" : "public static final Long LONG_ONE = Long.valueOf(1L);",
      "info" : "FieldDeclaration[1195-1291]:FieldDeclaration[1195-1291]"
    }, {
      "left" : "public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);",
      "right" : "public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);",
      "info" : "FieldDeclaration[1296-1405]:FieldDeclaration[1296-1405]"
    }, {
      "left" : "public static final Integer INTEGER_ZERO = Integer.valueOf(0);",
      "right" : "public static final Integer INTEGER_ZERO = Integer.valueOf(0);",
      "info" : "FieldDeclaration[1410-1519]:FieldDeclaration[1410-1519]"
    }, {
      "left" : "public static final Integer INTEGER_ONE = Integer.valueOf(1);",
      "right" : "public static final Integer INTEGER_ONE = Integer.valueOf(1);",
      "info" : "FieldDeclaration[1524-1631]:FieldDeclaration[1524-1631]"
    }, {
      "left" : "public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);",
      "right" : "public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);",
      "info" : "FieldDeclaration[1636-1756]:FieldDeclaration[1636-1756]"
    }, {
      "left" : "public static final Short SHORT_ZERO = Short.valueOf((short) 0);",
      "right" : "public static final Short SHORT_ZERO = Short.valueOf((short) 0);",
      "info" : "FieldDeclaration[1761-1870]:FieldDeclaration[1761-1870]"
    }, {
      "left" : "public static final Short SHORT_ONE = Short.valueOf((short) 1);",
      "right" : "public static final Short SHORT_ONE = Short.valueOf((short) 1);",
      "info" : "FieldDeclaration[1875-1982]:FieldDeclaration[1875-1982]"
    }, {
      "left" : "public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);",
      "right" : "public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);",
      "info" : "FieldDeclaration[1987-2107]:FieldDeclaration[1987-2107]"
    }, {
      "left" : "public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);",
      "right" : "public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);",
      "info" : "FieldDeclaration[2112-2216]:FieldDeclaration[2112-2216]"
    }, {
      "left" : "public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);",
      "right" : "public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);",
      "info" : "FieldDeclaration[2221-2323]:FieldDeclaration[2221-2323]"
    }, {
      "left" : "public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);",
      "right" : "public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);",
      "info" : "FieldDeclaration[2328-2443]:FieldDeclaration[2328-2443]"
    }, {
      "left" : "public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);",
      "right" : "public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);",
      "info" : "FieldDeclaration[2448-2556]:FieldDeclaration[2448-2556]"
    }, {
      "left" : "public static final Double DOUBLE_ONE = Double.valueOf(1.0d);",
      "right" : "public static final Double DOUBLE_ONE = Double.valueOf(1.0d);",
      "info" : "FieldDeclaration[2561-2667]:FieldDeclaration[2561-2667]"
    }, {
      "left" : "public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);",
      "right" : "public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);",
      "info" : "FieldDeclaration[2672-2791]:FieldDeclaration[2672-2791]"
    }, {
      "left" : "public static final Float FLOAT_ZERO = Float.valueOf(0.0f);",
      "right" : "public static final Float FLOAT_ZERO = Float.valueOf(0.0f);",
      "info" : "FieldDeclaration[2796-2900]:FieldDeclaration[2796-2900]"
    }, {
      "left" : "public static final Float FLOAT_ONE = Float.valueOf(1.0f);",
      "right" : "public static final Float FLOAT_ONE = Float.valueOf(1.0f);",
      "info" : "FieldDeclaration[2905-3007]:FieldDeclaration[2905-3007]"
    }, {
      "left" : "public static final Float FLOAT_MINUS_ONE = Float.valueOf(-1.0f);",
      "right" : "public static final Float FLOAT_MINUS_ONE = Float.valueOf(-1.0f);",
      "info" : "FieldDeclaration[3012-3127]:FieldDeclaration[3012-3127]"
    }, {
      "left" : "public NumberUtils()",
      "right" : "public NumberUtils()",
      "info" : "MethodDeclaration[3133-3492]:MethodDeclaration[3133-3492]"
    }, {
      "left" : "public static int toInt(String str)",
      "right" : "public static int toInt(String str)",
      "info" : "MethodDeclaration[3576-4204]:MethodDeclaration[3576-4204]"
    }, {
      "left" : "public static int toInt(String str, int defaultValue)",
      "right" : "public static int toInt(String str, int defaultValue)",
      "info" : "MethodDeclaration[4210-5079]:MethodDeclaration[4210-5079]"
    }, {
      "left" : "public static long toLong(String str)",
      "right" : "public static long toLong(String str)",
      "info" : "MethodDeclaration[5085-5721]:MethodDeclaration[5085-5721]"
    }, {
      "left" : "public static long toLong(String str, long defaultValue)",
      "right" : "public static long toLong(String str, long defaultValue)",
      "info" : "MethodDeclaration[5727-6608]:MethodDeclaration[5727-6608]"
    }, {
      "left" : "public static float toFloat(String str)",
      "right" : "public static float toFloat(String str)",
      "info" : "MethodDeclaration[6614-7311]:MethodDeclaration[6614-7311]"
    }, {
      "left" : "public static float toFloat(String str, float defaultValue)",
      "right" : "public static float toFloat(String str, float defaultValue)",
      "info" : "MethodDeclaration[7317-8259]:MethodDeclaration[7317-8259]"
    }, {
      "left" : "public static double toDouble(String str)",
      "right" : "public static double toDouble(String str)",
      "info" : "MethodDeclaration[8265-8970]:MethodDeclaration[8265-8970]"
    }, {
      "left" : "public static double toDouble(String str, double defaultValue)",
      "right" : "public static double toDouble(String str, double defaultValue)",
      "info" : "MethodDeclaration[8976-9923]:MethodDeclaration[8976-9923]"
    }, {
      "left" : "public static byte toByte(String str)",
      "right" : "public static byte toByte(String str)",
      "info" : "MethodDeclaration[10009-10651]:MethodDeclaration[10009-10651]"
    }, {
      "left" : "public static byte toByte(String str, byte defaultValue)",
      "right" : "public static byte toByte(String str, byte defaultValue)",
      "info" : "MethodDeclaration[10657-11531]:MethodDeclaration[10657-11531]"
    }, {
      "left" : "public static short toShort(String str)",
      "right" : "public static short toShort(String str)",
      "info" : "MethodDeclaration[11537-12188]:MethodDeclaration[11537-12188]"
    }, {
      "left" : "public static short toShort(String str, short defaultValue)",
      "right" : "public static short toShort(String str, short defaultValue)",
      "info" : "MethodDeclaration[12194-13079]:MethodDeclaration[12194-13079]"
    }, {
      "left" : "private static boolean isAllZeros(String str)",
      "right" : "private static boolean isAllZeros(String str)",
      "info" : "MethodDeclaration[21690-22252]:MethodDeclaration[21739-22301]"
    }, {
      "left" : "public static Float createFloat(String str)",
      "right" : "public static Float createFloat(String str)",
      "info" : "MethodDeclaration[22336-22839]:MethodDeclaration[22385-22888]"
    }, {
      "left" : "public static Double createDouble(String str)",
      "right" : "public static Double createDouble(String str)",
      "info" : "MethodDeclaration[22845-23353]:MethodDeclaration[22894-23402]"
    }, {
      "left" : "public static Integer createInteger(String str)",
      "right" : "public static Integer createInteger(String str)",
      "info" : "MethodDeclaration[23359-23981]:MethodDeclaration[23408-24030]"
    }, {
      "left" : "public static Long createLong(String str)",
      "right" : "public static Long createLong(String str)",
      "info" : "MethodDeclaration[23987-24485]:MethodDeclaration[24036-24534]"
    }, {
      "left" : "public static BigInteger createBigInteger(String str)",
      "right" : "public static BigInteger createBigInteger(String str)",
      "info" : "MethodDeclaration[24491-25015]:MethodDeclaration[24540-25064]"
    }, {
      "left" : "public static BigDecimal createBigDecimal(String str)",
      "right" : "public static BigDecimal createBigDecimal(String str)",
      "info" : "MethodDeclaration[25021-25755]:MethodDeclaration[25070-25804]"
    }, {
      "left" : "public static long min(long[] array)",
      "right" : "public static long min(long[] array)",
      "info" : "MethodDeclaration[25856-26723]:MethodDeclaration[25905-26772]"
    }, {
      "left" : "public static int min(int[] array)",
      "right" : "public static int min(int[] array)",
      "info" : "MethodDeclaration[26729-27593]:MethodDeclaration[26778-27642]"
    }, {
      "left" : "public static short min(short[] array)",
      "right" : "public static short min(short[] array)",
      "info" : "MethodDeclaration[27599-28469]:MethodDeclaration[27648-28518]"
    }, {
      "left" : "public static byte min(byte[] array)",
      "right" : "public static byte min(byte[] array)",
      "info" : "MethodDeclaration[28475-29342]:MethodDeclaration[28524-29391]"
    }, {
      "left" : "public static double min(double[] array)",
      "right" : "public static double min(double[] array)",
      "info" : "MethodDeclaration[29349-30425]:MethodDeclaration[29398-30474]"
    }, {
      "left" : "public static float min(float[] array)",
      "right" : "public static float min(float[] array)",
      "info" : "MethodDeclaration[30431-31501]:MethodDeclaration[30480-31550]"
    }, {
      "left" : "public static long max(long[] array)",
      "right" : "public static long max(long[] array)",
      "info" : "MethodDeclaration[31602-32461]:MethodDeclaration[31651-32510]"
    }, {
      "left" : "public static int max(int[] array)",
      "right" : "public static int max(int[] array)",
      "info" : "MethodDeclaration[32467-33331]:MethodDeclaration[32516-33380]"
    }, {
      "left" : "public static short max(short[] array)",
      "right" : "public static short max(short[] array)",
      "info" : "MethodDeclaration[33337-34207]:MethodDeclaration[33386-34256]"
    }, {
      "left" : "public static byte max(byte[] array)",
      "right" : "public static byte max(byte[] array)",
      "info" : "MethodDeclaration[34213-35080]:MethodDeclaration[34262-35129]"
    }, {
      "left" : "public static double max(double[] array)",
      "right" : "public static double max(double[] array)",
      "info" : "MethodDeclaration[35086-36161]:MethodDeclaration[35135-36210]"
    }, {
      "left" : "public static float max(float[] array)",
      "right" : "public static float max(float[] array)",
      "info" : "MethodDeclaration[36167-37229]:MethodDeclaration[36216-37278]"
    }, {
      "left" : "public static long min(long a, long b, long c)",
      "right" : "public static long min(long a, long b, long c)",
      "info" : "MethodDeclaration[37337-37717]:MethodDeclaration[37386-37766]"
    }, {
      "left" : "public static int min(int a, int b, int c)",
      "right" : "public static int min(int a, int b, int c)",
      "info" : "MethodDeclaration[37723-38098]:MethodDeclaration[37772-38147]"
    }, {
      "left" : "public static short min(short a, short b, short c)",
      "right" : "public static short min(short a, short b, short c)",
      "info" : "MethodDeclaration[38104-38489]:MethodDeclaration[38153-38538]"
    }, {
      "left" : "public static byte min(byte a, byte b, byte c)",
      "right" : "public static byte min(byte a, byte b, byte c)",
      "info" : "MethodDeclaration[38495-38875]:MethodDeclaration[38544-38924]"
    }, {
      "left" : "public static double min(double a, double b, double c)",
      "right" : "public static double min(double a, double b, double c)",
      "info" : "MethodDeclaration[38881-39423]:MethodDeclaration[38930-39472]"
    }, {
      "left" : "public static float min(float a, float b, float c)",
      "right" : "public static float min(float a, float b, float c)",
      "info" : "MethodDeclaration[39429-39962]:MethodDeclaration[39478-40011]"
    }, {
      "left" : "public static long max(long a, long b, long c)",
      "right" : "public static long max(long a, long b, long c)",
      "info" : "MethodDeclaration[40065-40444]:MethodDeclaration[40114-40493]"
    }, {
      "left" : "public static int max(int a, int b, int c)",
      "right" : "public static int max(int a, int b, int c)",
      "info" : "MethodDeclaration[40450-40824]:MethodDeclaration[40499-40873]"
    }, {
      "left" : "public static short max(short a, short b, short c)",
      "right" : "public static short max(short a, short b, short c)",
      "info" : "MethodDeclaration[40830-41214]:MethodDeclaration[40879-41263]"
    }, {
      "left" : "public static byte max(byte a, byte b, byte c)",
      "right" : "public static byte max(byte a, byte b, byte c)",
      "info" : "MethodDeclaration[41220-41599]:MethodDeclaration[41269-41648]"
    }, {
      "left" : "public static double max(double a, double b, double c)",
      "right" : "public static double max(double a, double b, double c)",
      "info" : "MethodDeclaration[41605-42145]:MethodDeclaration[41654-42194]"
    }, {
      "left" : "public static float max(float a, float b, float c)",
      "right" : "public static float max(float a, float b, float c)",
      "info" : "MethodDeclaration[42151-42683]:MethodDeclaration[42200-42732]"
    }, {
      "left" : "public static boolean isDigits(String str)",
      "right" : "public static boolean isDigits(String str)",
      "info" : "MethodDeclaration[42767-43402]:MethodDeclaration[42816-43451]"
    }, {
      "left" : "public static boolean isNumber(String str)",
      "right" : "public static boolean isNumber(String str)",
      "info" : "MethodDeclaration[43408-47691]:MethodDeclaration[43457-47740]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3447-3453]:Modifier[3447-3453]"
    }, {
      "left" : "NumberUtils",
      "right" : "NumberUtils",
      "info" : "SimpleName[3454-3465]:SimpleName[3454-3465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3468-3492]:Block[3468-3492]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[3478-3486]:SuperConstructorInvocation[3478-3486]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4131-4137]:Modifier[4131-4137]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4138-4144]:Modifier[4138-4144]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[4145-4148]:PrimitiveType[4145-4148]"
    }, {
      "left" : "toInt",
      "right" : "toInt",
      "info" : "SimpleName[4149-4154]:SimpleName[4149-4154]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[4155-4165]:SingleVariableDeclaration[4155-4165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4167-4204]:Block[4167-4204]"
    }, {
      "left" : "return toInt(str, 0);",
      "right" : "return toInt(str, 0);",
      "info" : "ReturnStatement[4177-4198]:ReturnStatement[4177-4198]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4804-4810]:Modifier[4804-4810]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4811-4817]:Modifier[4811-4817]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[4818-4821]:PrimitiveType[4818-4821]"
    }, {
      "left" : "toInt",
      "right" : "toInt",
      "info" : "SimpleName[4822-4827]:SimpleName[4822-4827]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[4828-4838]:SingleVariableDeclaration[4828-4838]"
    }, {
      "left" : "int defaultValue",
      "right" : "int defaultValue",
      "info" : "SingleVariableDeclaration[4840-4856]:SingleVariableDeclaration[4840-4856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4858-5079]:Block[4858-5079]"
    }, {
      "left" : "if(str == null)",
      "right" : "if(str == null)",
      "info" : "IfStatement[4868-4928]:IfStatement[4868-4928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4884-4928]:Block[4884-4928]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[4898-4918]:ReturnStatement[4898-4918]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4937-5073]:TryStatement[4937-5073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4941-4994]:Block[4941-4994]"
    }, {
      "left" : "return Integer.parseInt(str);",
      "right" : "return Integer.parseInt(str);",
      "info" : "ReturnStatement[4955-4984]:ReturnStatement[4955-4984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5029-5073]:Block[5029-5073]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[5043-5063]:ReturnStatement[5043-5063]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5644-5650]:Modifier[5644-5650]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5651-5657]:Modifier[5651-5657]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[5658-5662]:PrimitiveType[5658-5662]"
    }, {
      "left" : "toLong",
      "right" : "toLong",
      "info" : "SimpleName[5663-5669]:SimpleName[5663-5669]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[5670-5680]:SingleVariableDeclaration[5670-5680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5682-5721]:Block[5682-5721]"
    }, {
      "left" : "return toLong(str, 0L);",
      "right" : "return toLong(str, 0L);",
      "info" : "ReturnStatement[5692-5715]:ReturnStatement[5692-5715]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6331-6337]:Modifier[6331-6337]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6338-6344]:Modifier[6338-6344]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[6345-6349]:PrimitiveType[6345-6349]"
    }, {
      "left" : "toLong",
      "right" : "toLong",
      "info" : "SimpleName[6350-6356]:SimpleName[6350-6356]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[6357-6367]:SingleVariableDeclaration[6357-6367]"
    }, {
      "left" : "long defaultValue",
      "right" : "long defaultValue",
      "info" : "SingleVariableDeclaration[6369-6386]:SingleVariableDeclaration[6369-6386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6388-6608]:Block[6388-6608]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[6398-6459]:IfStatement[6398-6459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6415-6459]:Block[6415-6459]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[6429-6449]:ReturnStatement[6429-6449]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6468-6602]:TryStatement[6468-6602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6472-6523]:Block[6472-6523]"
    }, {
      "left" : "return Long.parseLong(str);",
      "right" : "return Long.parseLong(str);",
      "info" : "ReturnStatement[6486-6513]:ReturnStatement[6486-6513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6558-6602]:Block[6558-6602]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[6572-6592]:ReturnStatement[6572-6592]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7229-7235]:Modifier[7229-7235]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7236-7242]:Modifier[7236-7242]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[7243-7248]:PrimitiveType[7243-7248]"
    }, {
      "left" : "toFloat",
      "right" : "toFloat",
      "info" : "SimpleName[7249-7256]:SimpleName[7249-7256]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[7257-7267]:SingleVariableDeclaration[7257-7267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7269-7311]:Block[7269-7311]"
    }, {
      "left" : "return toFloat(str, 0.0f);",
      "right" : "return toFloat(str, 0.0f);",
      "info" : "ReturnStatement[7279-7305]:ReturnStatement[7279-7305]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7988-7994]:Modifier[7988-7994]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7995-8001]:Modifier[7995-8001]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[8002-8007]:PrimitiveType[8002-8007]"
    }, {
      "left" : "toFloat",
      "right" : "toFloat",
      "info" : "SimpleName[8008-8015]:SimpleName[8008-8015]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[8016-8026]:SingleVariableDeclaration[8016-8026]"
    }, {
      "left" : "float defaultValue",
      "right" : "float defaultValue",
      "info" : "SingleVariableDeclaration[8028-8046]:SingleVariableDeclaration[8028-8046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8048-8259]:Block[8048-8259]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[8056-8113]:IfStatement[8056-8113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8073-8113]:Block[8073-8113]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[8085-8105]:ReturnStatement[8085-8105]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8125-8253]:TryStatement[8125-8253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8129-8178]:Block[8129-8178]"
    }, {
      "left" : "return Float.parseFloat(str);",
      "right" : "return Float.parseFloat(str);",
      "info" : "ReturnStatement[8141-8170]:ReturnStatement[8141-8170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8213-8253]:Block[8213-8253]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[8225-8245]:ReturnStatement[8225-8245]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8885-8891]:Modifier[8885-8891]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8892-8898]:Modifier[8892-8898]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[8899-8905]:PrimitiveType[8899-8905]"
    }, {
      "left" : "toDouble",
      "right" : "toDouble",
      "info" : "SimpleName[8906-8914]:SimpleName[8906-8914]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[8915-8925]:SingleVariableDeclaration[8915-8925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8927-8970]:Block[8927-8970]"
    }, {
      "left" : "return toDouble(str, 0.0d);",
      "right" : "return toDouble(str, 0.0d);",
      "info" : "ReturnStatement[8937-8964]:ReturnStatement[8937-8964]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9652-9658]:Modifier[9652-9658]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9659-9665]:Modifier[9659-9665]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[9666-9672]:PrimitiveType[9666-9672]"
    }, {
      "left" : "toDouble",
      "right" : "toDouble",
      "info" : "SimpleName[9673-9681]:SimpleName[9673-9681]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[9682-9692]:SingleVariableDeclaration[9682-9692]"
    }, {
      "left" : "double defaultValue",
      "right" : "double defaultValue",
      "info" : "SingleVariableDeclaration[9694-9713]:SingleVariableDeclaration[9694-9713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9715-9923]:Block[9715-9923]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[9723-9780]:IfStatement[9723-9780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9740-9780]:Block[9740-9780]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[9752-9772]:ReturnStatement[9752-9772]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[9787-9917]:TryStatement[9787-9917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9791-9842]:Block[9791-9842]"
    }, {
      "left" : "return Double.parseDouble(str);",
      "right" : "return Double.parseDouble(str);",
      "info" : "ReturnStatement[9803-9834]:ReturnStatement[9803-9834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9877-9917]:Block[9877-9917]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[9889-9909]:ReturnStatement[9889-9909]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10568-10574]:Modifier[10568-10574]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10575-10581]:Modifier[10575-10581]"
    }, {
      "left" : "byte",
      "right" : "byte",
      "info" : "PrimitiveType[10582-10586]:PrimitiveType[10582-10586]"
    }, {
      "left" : "toByte",
      "right" : "toByte",
      "info" : "SimpleName[10587-10593]:SimpleName[10587-10593]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[10594-10604]:SingleVariableDeclaration[10594-10604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10606-10651]:Block[10606-10651]"
    }, {
      "left" : "return toByte(str, (byte) 0);",
      "right" : "return toByte(str, (byte) 0);",
      "info" : "ReturnStatement[10616-10645]:ReturnStatement[10616-10645]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11255-11261]:Modifier[11255-11261]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11262-11268]:Modifier[11262-11268]"
    }, {
      "left" : "byte",
      "right" : "byte",
      "info" : "PrimitiveType[11269-11273]:PrimitiveType[11269-11273]"
    }, {
      "left" : "toByte",
      "right" : "toByte",
      "info" : "SimpleName[11274-11280]:SimpleName[11274-11280]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[11281-11291]:SingleVariableDeclaration[11281-11291]"
    }, {
      "left" : "byte defaultValue",
      "right" : "byte defaultValue",
      "info" : "SingleVariableDeclaration[11293-11310]:SingleVariableDeclaration[11293-11310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11312-11531]:Block[11312-11531]"
    }, {
      "left" : "if(str == null)",
      "right" : "if(str == null)",
      "info" : "IfStatement[11322-11382]:IfStatement[11322-11382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11338-11382]:Block[11338-11382]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[11352-11372]:ReturnStatement[11352-11372]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[11391-11525]:TryStatement[11391-11525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11395-11446]:Block[11395-11446]"
    }, {
      "left" : "return Byte.parseByte(str);",
      "right" : "return Byte.parseByte(str);",
      "info" : "ReturnStatement[11409-11436]:ReturnStatement[11409-11436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11481-11525]:Block[11481-11525]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[11495-11515]:ReturnStatement[11495-11515]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12101-12107]:Modifier[12101-12107]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12108-12114]:Modifier[12108-12114]"
    }, {
      "left" : "short",
      "right" : "short",
      "info" : "PrimitiveType[12115-12120]:PrimitiveType[12115-12120]"
    }, {
      "left" : "toShort",
      "right" : "toShort",
      "info" : "SimpleName[12121-12128]:SimpleName[12121-12128]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[12129-12139]:SingleVariableDeclaration[12129-12139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12141-12188]:Block[12141-12188]"
    }, {
      "left" : "return toShort(str, (short) 0);",
      "right" : "return toShort(str, (short) 0);",
      "info" : "ReturnStatement[12151-12182]:ReturnStatement[12151-12182]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12798-12804]:Modifier[12798-12804]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12805-12811]:Modifier[12805-12811]"
    }, {
      "left" : "short",
      "right" : "short",
      "info" : "PrimitiveType[12812-12817]:PrimitiveType[12812-12817]"
    }, {
      "left" : "toShort",
      "right" : "toShort",
      "info" : "SimpleName[12818-12825]:SimpleName[12818-12825]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[12826-12836]:SingleVariableDeclaration[12826-12836]"
    }, {
      "left" : "short defaultValue",
      "right" : "short defaultValue",
      "info" : "SingleVariableDeclaration[12838-12856]:SingleVariableDeclaration[12838-12856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12858-13079]:Block[12858-13079]"
    }, {
      "left" : "if(str == null)",
      "right" : "if(str == null)",
      "info" : "IfStatement[12868-12928]:IfStatement[12868-12928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12884-12928]:Block[12884-12928]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[12898-12918]:ReturnStatement[12898-12918]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[12937-13073]:TryStatement[12937-13073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12941-12994]:Block[12941-12994]"
    }, {
      "left" : "return Short.parseShort(str);",
      "right" : "return Short.parseShort(str);",
      "info" : "ReturnStatement[12955-12984]:ReturnStatement[12955-12984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13029-13073]:Block[13029-13073]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[13043-13063]:ReturnStatement[13043-13063]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21956-21963]:Modifier[22005-22012]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[21964-21970]:Modifier[22013-22019]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[21971-21978]:PrimitiveType[22020-22027]"
    }, {
      "left" : "isAllZeros",
      "right" : "isAllZeros",
      "info" : "SimpleName[21979-21989]:SimpleName[22028-22038]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[21990-22000]:SingleVariableDeclaration[22039-22049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22002-22252]:Block[22051-22301]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[22012-22065]:IfStatement[22061-22114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22029-22065]:Block[22078-22114]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[22043-22055]:ReturnStatement[22092-22104]"
    }, {
      "left" : "for (int i = str.length() - 1; i >= 0; i--)",
      "right" : "for (int i = str.length() - 1; i >= 0; i--)",
      "info" : "ForStatement[22074-22213]:ForStatement[22123-22262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22118-22213]:Block[22167-22262]"
    }, {
      "left" : "if (str.charAt(i) != '0')",
      "right" : "if (str.charAt(i) != '0')",
      "info" : "IfStatement[22132-22203]:IfStatement[22181-22252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22158-22203]:Block[22207-22252]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[22176-22189]:ReturnStatement[22225-22238]"
    }, {
      "left" : "return str.length() > 0;",
      "right" : "return str.length() > 0;",
      "info" : "ReturnStatement[22222-22246]:ReturnStatement[22271-22295]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22691-22697]:Modifier[22740-22746]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[22698-22704]:Modifier[22747-22753]"
    }, {
      "left" : "Float",
      "right" : "Float",
      "info" : "SimpleType[22705-22710]:SimpleType[22754-22759]"
    }, {
      "left" : "createFloat",
      "right" : "createFloat",
      "info" : "SimpleName[22711-22722]:SimpleName[22760-22771]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[22723-22733]:SingleVariableDeclaration[22772-22782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22735-22839]:Block[22784-22888]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[22745-22798]:IfStatement[22794-22847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22762-22798]:Block[22811-22847]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22776-22788]:ReturnStatement[22825-22837]"
    }, {
      "left" : "return Float.valueOf(str);",
      "right" : "return Float.valueOf(str);",
      "info" : "ReturnStatement[22807-22833]:ReturnStatement[22856-22882]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23202-23208]:Modifier[23251-23257]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[23209-23215]:Modifier[23258-23264]"
    }, {
      "left" : "Double",
      "right" : "Double",
      "info" : "SimpleType[23216-23222]:SimpleType[23265-23271]"
    }, {
      "left" : "createDouble",
      "right" : "createDouble",
      "info" : "SimpleName[23223-23235]:SimpleName[23272-23284]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[23236-23246]:SingleVariableDeclaration[23285-23295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23248-23353]:Block[23297-23402]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[23258-23311]:IfStatement[23307-23360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23275-23311]:Block[23324-23360]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23289-23301]:ReturnStatement[23338-23350]"
    }, {
      "left" : "return Double.valueOf(str);",
      "right" : "return Double.valueOf(str);",
      "info" : "ReturnStatement[23320-23347]:ReturnStatement[23369-23396]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23759-23765]:Modifier[23808-23814]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[23766-23772]:Modifier[23815-23821]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[23773-23780]:SimpleType[23822-23829]"
    }, {
      "left" : "createInteger",
      "right" : "createInteger",
      "info" : "SimpleName[23781-23794]:SimpleName[23830-23843]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[23795-23805]:SingleVariableDeclaration[23844-23854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23807-23981]:Block[23856-24030]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[23817-23870]:IfStatement[23866-23919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23834-23870]:Block[23883-23919]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23848-23860]:ReturnStatement[23897-23909]"
    }, {
      "left" : "return Integer.decode(str);",
      "right" : "return Integer.decode(str);",
      "info" : "ReturnStatement[23948-23975]:ReturnStatement[23997-24024]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24340-24346]:Modifier[24389-24395]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[24347-24353]:Modifier[24396-24402]"
    }, {
      "left" : "Long",
      "right" : "Long",
      "info" : "SimpleType[24354-24358]:SimpleType[24403-24407]"
    }, {
      "left" : "createLong",
      "right" : "createLong",
      "info" : "SimpleName[24359-24369]:SimpleName[24408-24418]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[24370-24380]:SingleVariableDeclaration[24419-24429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24382-24485]:Block[24431-24534]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[24392-24445]:IfStatement[24441-24494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24409-24445]:Block[24458-24494]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24423-24435]:ReturnStatement[24472-24484]"
    }, {
      "left" : "return Long.valueOf(str);",
      "right" : "return Long.valueOf(str);",
      "info" : "ReturnStatement[24454-24479]:ReturnStatement[24503-24528]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24856-24862]:Modifier[24905-24911]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[24863-24869]:Modifier[24912-24918]"
    }, {
      "left" : "BigInteger",
      "right" : "BigInteger",
      "info" : "SimpleType[24870-24880]:SimpleType[24919-24929]"
    }, {
      "left" : "createBigInteger",
      "right" : "createBigInteger",
      "info" : "SimpleName[24881-24897]:SimpleName[24930-24946]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[24898-24908]:SingleVariableDeclaration[24947-24957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24910-25015]:Block[24959-25064]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[24920-24973]:IfStatement[24969-25022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24937-24973]:Block[24986-25022]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24951-24963]:ReturnStatement[25000-25012]"
    }, {
      "left" : "return new BigInteger(str);",
      "right" : "return new BigInteger(str);",
      "info" : "ReturnStatement[24982-25009]:ReturnStatement[25031-25058]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25386-25392]:Modifier[25435-25441]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[25393-25399]:Modifier[25442-25448]"
    }, {
      "left" : "BigDecimal",
      "right" : "BigDecimal",
      "info" : "SimpleType[25400-25410]:SimpleType[25449-25459]"
    }, {
      "left" : "createBigDecimal",
      "right" : "createBigDecimal",
      "info" : "SimpleName[25411-25427]:SimpleName[25460-25476]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[25428-25438]:SingleVariableDeclaration[25477-25487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25440-25755]:Block[25489-25804]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[25450-25503]:IfStatement[25499-25552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25467-25503]:Block[25516-25552]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[25481-25493]:ReturnStatement[25530-25542]"
    }, {
      "left" : "if (StringUtils.isBlank(str))",
      "right" : "if (StringUtils.isBlank(str))",
      "info" : "IfStatement[25585-25711]:IfStatement[25634-25760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25615-25711]:Block[25664-25760]"
    }, {
      "left" : "throw new NumberFormatException(\"A blank string is not a valid number\");",
      "right" : "throw new NumberFormatException(\"A blank string is not a valid number\");",
      "info" : "ThrowStatement[25629-25701]:ThrowStatement[25678-25750]"
    }, {
      "left" : "return new BigDecimal(str);",
      "right" : "return new BigDecimal(str);",
      "info" : "ReturnStatement[25722-25749]:ReturnStatement[25771-25798]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26190-26196]:Modifier[26239-26245]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[26197-26203]:Modifier[26246-26252]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[26204-26208]:PrimitiveType[26253-26257]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[26209-26212]:SimpleName[26258-26261]"
    }, {
      "left" : "long[] array",
      "right" : "long[] array",
      "info" : "SingleVariableDeclaration[26213-26225]:SingleVariableDeclaration[26262-26274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26227-26723]:Block[26276-26772]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[26264-26486]:IfStatement[26313-26535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26283-26372]:Block[26332-26421]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[26297-26362]:ThrowStatement[26346-26411]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[26378-26486]:IfStatement[26427-26535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26401-26486]:Block[26450-26535]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[26415-26476]:ThrowStatement[26464-26525]"
    }, {
      "left" : "long min = array[0];",
      "right" : "long min = array[0];",
      "info" : "VariableDeclarationStatement[26533-26553]:VariableDeclarationStatement[26582-26602]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[26562-26692]:ForStatement[26611-26741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26601-26692]:Block[26650-26741]"
    }, {
      "left" : "if (array[i] < min)",
      "right" : "if (array[i] < min)",
      "info" : "IfStatement[26615-26682]:IfStatement[26664-26731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26635-26682]:Block[26684-26731]"
    }, {
      "left" : "min = array[i];",
      "right" : "min = array[i];",
      "info" : "ExpressionStatement[26653-26668]:ExpressionStatement[26702-26717]"
    }, {
      "left" : "return min;",
      "right" : "return min;",
      "info" : "ReturnStatement[26706-26717]:ReturnStatement[26755-26766]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27063-27069]:Modifier[27112-27118]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[27070-27076]:Modifier[27119-27125]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[27077-27080]:PrimitiveType[27126-27129]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[27081-27084]:SimpleName[27130-27133]"
    }, {
      "left" : "int[] array",
      "right" : "int[] array",
      "info" : "SingleVariableDeclaration[27085-27096]:SingleVariableDeclaration[27134-27145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27098-27593]:Block[27147-27642]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[27135-27357]:IfStatement[27184-27406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27154-27243]:Block[27203-27292]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[27168-27233]:ThrowStatement[27217-27282]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[27249-27357]:IfStatement[27298-27406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27272-27357]:Block[27321-27406]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[27286-27347]:ThrowStatement[27335-27396]"
    }, {
      "left" : "int min = array[0];",
      "right" : "int min = array[0];",
      "info" : "VariableDeclarationStatement[27404-27423]:VariableDeclarationStatement[27453-27472]"
    }, {
      "left" : "for (int j = 1; j < array.length; j++)",
      "right" : "for (int j = 1; j < array.length; j++)",
      "info" : "ForStatement[27432-27562]:ForStatement[27481-27611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27471-27562]:Block[27520-27611]"
    }, {
      "left" : "if (array[j] < min)",
      "right" : "if (array[j] < min)",
      "info" : "IfStatement[27485-27552]:IfStatement[27534-27601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27505-27552]:Block[27554-27601]"
    }, {
      "left" : "min = array[j];",
      "right" : "min = array[j];",
      "info" : "ExpressionStatement[27523-27538]:ExpressionStatement[27572-27587]"
    }, {
      "left" : "return min;",
      "right" : "return min;",
      "info" : "ReturnStatement[27576-27587]:ReturnStatement[27625-27636]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27933-27939]:Modifier[27982-27988]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[27940-27946]:Modifier[27989-27995]"
    }, {
      "left" : "short",
      "right" : "short",
      "info" : "PrimitiveType[27947-27952]:PrimitiveType[27996-28001]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[27953-27956]:SimpleName[28002-28005]"
    }, {
      "left" : "short[] array",
      "right" : "short[] array",
      "info" : "SingleVariableDeclaration[27957-27970]:SingleVariableDeclaration[28006-28019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27972-28469]:Block[28021-28518]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[28009-28231]:IfStatement[28058-28280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28028-28117]:Block[28077-28166]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[28042-28107]:ThrowStatement[28091-28156]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[28123-28231]:IfStatement[28172-28280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28146-28231]:Block[28195-28280]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[28160-28221]:ThrowStatement[28209-28270]"
    }, {
      "left" : "short min = array[0];",
      "right" : "short min = array[0];",
      "info" : "VariableDeclarationStatement[28278-28299]:VariableDeclarationStatement[28327-28348]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[28308-28438]:ForStatement[28357-28487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28347-28438]:Block[28396-28487]"
    }, {
      "left" : "if (array[i] < min)",
      "right" : "if (array[i] < min)",
      "info" : "IfStatement[28361-28428]:IfStatement[28410-28477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28381-28428]:Block[28430-28477]"
    }, {
      "left" : "min = array[i];",
      "right" : "min = array[i];",
      "info" : "ExpressionStatement[28399-28414]:ExpressionStatement[28448-28463]"
    }, {
      "left" : "return min;",
      "right" : "return min;",
      "info" : "ReturnStatement[28452-28463]:ReturnStatement[28501-28512]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28809-28815]:Modifier[28858-28864]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[28816-28822]:Modifier[28865-28871]"
    }, {
      "left" : "byte",
      "right" : "byte",
      "info" : "PrimitiveType[28823-28827]:PrimitiveType[28872-28876]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[28828-28831]:SimpleName[28877-28880]"
    }, {
      "left" : "byte[] array",
      "right" : "byte[] array",
      "info" : "SingleVariableDeclaration[28832-28844]:SingleVariableDeclaration[28881-28893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28846-29342]:Block[28895-29391]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[28883-29105]:IfStatement[28932-29154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28902-28991]:Block[28951-29040]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[28916-28981]:ThrowStatement[28965-29030]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[28997-29105]:IfStatement[29046-29154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29020-29105]:Block[29069-29154]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[29034-29095]:ThrowStatement[29083-29144]"
    }, {
      "left" : "byte min = array[0];",
      "right" : "byte min = array[0];",
      "info" : "VariableDeclarationStatement[29152-29172]:VariableDeclarationStatement[29201-29221]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[29181-29311]:ForStatement[29230-29360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29220-29311]:Block[29269-29360]"
    }, {
      "left" : "if (array[i] < min)",
      "right" : "if (array[i] < min)",
      "info" : "IfStatement[29234-29301]:IfStatement[29283-29350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29254-29301]:Block[29303-29350]"
    }, {
      "left" : "min = array[i];",
      "right" : "min = array[i];",
      "info" : "ExpressionStatement[29272-29287]:ExpressionStatement[29321-29336]"
    }, {
      "left" : "return min;",
      "right" : "return min;",
      "info" : "ReturnStatement[29325-29336]:ReturnStatement[29374-29385]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29795-29801]:Modifier[29844-29850]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[29802-29808]:Modifier[29851-29857]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[29809-29815]:PrimitiveType[29858-29864]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[29816-29819]:SimpleName[29865-29868]"
    }, {
      "left" : "double[] array",
      "right" : "double[] array",
      "info" : "SingleVariableDeclaration[29820-29834]:SingleVariableDeclaration[29869-29883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29836-30425]:Block[29885-30474]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[29873-30095]:IfStatement[29922-30144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29892-29981]:Block[29941-30030]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[29906-29971]:ThrowStatement[29955-30020]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[29987-30095]:IfStatement[30036-30144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30010-30095]:Block[30059-30144]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[30024-30085]:ThrowStatement[30073-30134]"
    }, {
      "left" : "double min = array[0];",
      "right" : "double min = array[0];",
      "info" : "VariableDeclarationStatement[30142-30164]:VariableDeclarationStatement[30191-30213]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[30173-30394]:ForStatement[30222-30443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30212-30394]:Block[30261-30443]"
    }, {
      "left" : "if (Double.isNaN(array[i]))",
      "right" : "if (Double.isNaN(array[i]))",
      "info" : "IfStatement[30226-30304]:IfStatement[30275-30353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30254-30304]:Block[30303-30353]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[30272-30290]:ReturnStatement[30321-30339]"
    }, {
      "left" : "if (array[i] < min)",
      "right" : "if (array[i] < min)",
      "info" : "IfStatement[30317-30384]:IfStatement[30366-30433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30337-30384]:Block[30386-30433]"
    }, {
      "left" : "min = array[i];",
      "right" : "min = array[i];",
      "info" : "ExpressionStatement[30355-30370]:ExpressionStatement[30404-30419]"
    }, {
      "left" : "return min;",
      "right" : "return min;",
      "info" : "ReturnStatement[30408-30419]:ReturnStatement[30457-30468]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30876-30882]:Modifier[30925-30931]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30883-30889]:Modifier[30932-30938]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[30890-30895]:PrimitiveType[30939-30944]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[30896-30899]:SimpleName[30945-30948]"
    }, {
      "left" : "float[] array",
      "right" : "float[] array",
      "info" : "SingleVariableDeclaration[30900-30913]:SingleVariableDeclaration[30949-30962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30915-31501]:Block[30964-31550]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[30952-31174]:IfStatement[31001-31223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30971-31060]:Block[31020-31109]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[30985-31050]:ThrowStatement[31034-31099]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[31066-31174]:IfStatement[31115-31223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31089-31174]:Block[31138-31223]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[31103-31164]:ThrowStatement[31152-31213]"
    }, {
      "left" : "float min = array[0];",
      "right" : "float min = array[0];",
      "info" : "VariableDeclarationStatement[31221-31242]:VariableDeclarationStatement[31270-31291]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[31251-31470]:ForStatement[31300-31519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31290-31470]:Block[31339-31519]"
    }, {
      "left" : "if (Float.isNaN(array[i]))",
      "right" : "if (Float.isNaN(array[i]))",
      "info" : "IfStatement[31304-31380]:IfStatement[31353-31429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31331-31380]:Block[31380-31429]"
    }, {
      "left" : "return Float.NaN;",
      "right" : "return Float.NaN;",
      "info" : "ReturnStatement[31349-31366]:ReturnStatement[31398-31415]"
    }, {
      "left" : "if (array[i] < min)",
      "right" : "if (array[i] < min)",
      "info" : "IfStatement[31393-31460]:IfStatement[31442-31509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31413-31460]:Block[31462-31509]"
    }, {
      "left" : "min = array[i];",
      "right" : "min = array[i];",
      "info" : "ExpressionStatement[31431-31446]:ExpressionStatement[31480-31495]"
    }, {
      "left" : "return min;",
      "right" : "return min;",
      "info" : "ReturnStatement[31484-31495]:ReturnStatement[31533-31544]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31936-31942]:Modifier[31985-31991]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31943-31949]:Modifier[31992-31998]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[31950-31954]:PrimitiveType[31999-32003]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[31955-31958]:SimpleName[32004-32007]"
    }, {
      "left" : "long[] array",
      "right" : "long[] array",
      "info" : "SingleVariableDeclaration[31959-31971]:SingleVariableDeclaration[32008-32020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31973-32461]:Block[32022-32510]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[32010-32232]:IfStatement[32059-32281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32029-32118]:Block[32078-32167]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[32043-32108]:ThrowStatement[32092-32157]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[32124-32232]:IfStatement[32173-32281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32147-32232]:Block[32196-32281]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[32161-32222]:ThrowStatement[32210-32271]"
    }, {
      "left" : "long max = array[0];",
      "right" : "long max = array[0];",
      "info" : "VariableDeclarationStatement[32275-32295]:VariableDeclarationStatement[32324-32344]"
    }, {
      "left" : "for (int j = 1; j < array.length; j++)",
      "right" : "for (int j = 1; j < array.length; j++)",
      "info" : "ForStatement[32304-32434]:ForStatement[32353-32483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32343-32434]:Block[32392-32483]"
    }, {
      "left" : "if (array[j] > max)",
      "right" : "if (array[j] > max)",
      "info" : "IfStatement[32357-32424]:IfStatement[32406-32473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32377-32424]:Block[32426-32473]"
    }, {
      "left" : "max = array[j];",
      "right" : "max = array[j];",
      "info" : "ExpressionStatement[32395-32410]:ExpressionStatement[32444-32459]"
    }, {
      "left" : "return max;",
      "right" : "return max;",
      "info" : "ReturnStatement[32444-32455]:ReturnStatement[32493-32504]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32801-32807]:Modifier[32850-32856]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[32808-32814]:Modifier[32857-32863]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[32815-32818]:PrimitiveType[32864-32867]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[32819-32822]:SimpleName[32868-32871]"
    }, {
      "left" : "int[] array",
      "right" : "int[] array",
      "info" : "SingleVariableDeclaration[32823-32834]:SingleVariableDeclaration[32872-32883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32836-33331]:Block[32885-33380]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[32873-33095]:IfStatement[32922-33144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32892-32981]:Block[32941-33030]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[32906-32971]:ThrowStatement[32955-33020]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[32987-33095]:IfStatement[33036-33144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33010-33095]:Block[33059-33144]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[33024-33085]:ThrowStatement[33073-33134]"
    }, {
      "left" : "int max = array[0];",
      "right" : "int max = array[0];",
      "info" : "VariableDeclarationStatement[33142-33161]:VariableDeclarationStatement[33191-33210]"
    }, {
      "left" : "for (int j = 1; j < array.length; j++)",
      "right" : "for (int j = 1; j < array.length; j++)",
      "info" : "ForStatement[33170-33300]:ForStatement[33219-33349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33209-33300]:Block[33258-33349]"
    }, {
      "left" : "if (array[j] > max)",
      "right" : "if (array[j] > max)",
      "info" : "IfStatement[33223-33290]:IfStatement[33272-33339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33243-33290]:Block[33292-33339]"
    }, {
      "left" : "max = array[j];",
      "right" : "max = array[j];",
      "info" : "ExpressionStatement[33261-33276]:ExpressionStatement[33310-33325]"
    }, {
      "left" : "return max;",
      "right" : "return max;",
      "info" : "ReturnStatement[33314-33325]:ReturnStatement[33363-33374]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33671-33677]:Modifier[33720-33726]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33678-33684]:Modifier[33727-33733]"
    }, {
      "left" : "short",
      "right" : "short",
      "info" : "PrimitiveType[33685-33690]:PrimitiveType[33734-33739]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[33691-33694]:SimpleName[33740-33743]"
    }, {
      "left" : "short[] array",
      "right" : "short[] array",
      "info" : "SingleVariableDeclaration[33695-33708]:SingleVariableDeclaration[33744-33757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33710-34207]:Block[33759-34256]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[33747-33969]:IfStatement[33796-34018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33766-33855]:Block[33815-33904]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[33780-33845]:ThrowStatement[33829-33894]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[33861-33969]:IfStatement[33910-34018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33884-33969]:Block[33933-34018]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[33898-33959]:ThrowStatement[33947-34008]"
    }, {
      "left" : "short max = array[0];",
      "right" : "short max = array[0];",
      "info" : "VariableDeclarationStatement[34016-34037]:VariableDeclarationStatement[34065-34086]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[34046-34176]:ForStatement[34095-34225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34085-34176]:Block[34134-34225]"
    }, {
      "left" : "if (array[i] > max)",
      "right" : "if (array[i] > max)",
      "info" : "IfStatement[34099-34166]:IfStatement[34148-34215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34119-34166]:Block[34168-34215]"
    }, {
      "left" : "max = array[i];",
      "right" : "max = array[i];",
      "info" : "ExpressionStatement[34137-34152]:ExpressionStatement[34186-34201]"
    }, {
      "left" : "return max;",
      "right" : "return max;",
      "info" : "ReturnStatement[34190-34201]:ReturnStatement[34239-34250]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34547-34553]:Modifier[34596-34602]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[34554-34560]:Modifier[34603-34609]"
    }, {
      "left" : "byte",
      "right" : "byte",
      "info" : "PrimitiveType[34561-34565]:PrimitiveType[34610-34614]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[34566-34569]:SimpleName[34615-34618]"
    }, {
      "left" : "byte[] array",
      "right" : "byte[] array",
      "info" : "SingleVariableDeclaration[34570-34582]:SingleVariableDeclaration[34619-34631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34584-35080]:Block[34633-35129]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[34621-34843]:IfStatement[34670-34892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34640-34729]:Block[34689-34778]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[34654-34719]:ThrowStatement[34703-34768]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[34735-34843]:IfStatement[34784-34892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34758-34843]:Block[34807-34892]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[34772-34833]:ThrowStatement[34821-34882]"
    }, {
      "left" : "byte max = array[0];",
      "right" : "byte max = array[0];",
      "info" : "VariableDeclarationStatement[34890-34910]:VariableDeclarationStatement[34939-34959]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[34919-35049]:ForStatement[34968-35098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34958-35049]:Block[35007-35098]"
    }, {
      "left" : "if (array[i] > max)",
      "right" : "if (array[i] > max)",
      "info" : "IfStatement[34972-35039]:IfStatement[35021-35088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34992-35039]:Block[35041-35088]"
    }, {
      "left" : "max = array[i];",
      "right" : "max = array[i];",
      "info" : "ExpressionStatement[35010-35025]:ExpressionStatement[35059-35074]"
    }, {
      "left" : "return max;",
      "right" : "return max;",
      "info" : "ReturnStatement[35063-35074]:ReturnStatement[35112-35123]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35532-35538]:Modifier[35581-35587]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[35539-35545]:Modifier[35588-35594]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[35546-35552]:PrimitiveType[35595-35601]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[35553-35556]:SimpleName[35602-35605]"
    }, {
      "left" : "double[] array",
      "right" : "double[] array",
      "info" : "SingleVariableDeclaration[35557-35571]:SingleVariableDeclaration[35606-35620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35573-36161]:Block[35622-36210]"
    }, {
      "left" : "if (array== null)",
      "right" : "if (array== null)",
      "info" : "IfStatement[35610-35831]:IfStatement[35659-35880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35628-35717]:Block[35677-35766]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[35642-35707]:ThrowStatement[35691-35756]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[35723-35831]:IfStatement[35772-35880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35746-35831]:Block[35795-35880]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[35760-35821]:ThrowStatement[35809-35870]"
    }, {
      "left" : "double max = array[0];",
      "right" : "double max = array[0];",
      "info" : "VariableDeclarationStatement[35878-35900]:VariableDeclarationStatement[35927-35949]"
    }, {
      "left" : "for (int j = 1; j < array.length; j++)",
      "right" : "for (int j = 1; j < array.length; j++)",
      "info" : "ForStatement[35909-36130]:ForStatement[35958-36179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35948-36130]:Block[35997-36179]"
    }, {
      "left" : "if (Double.isNaN(array[j]))",
      "right" : "if (Double.isNaN(array[j]))",
      "info" : "IfStatement[35962-36040]:IfStatement[36011-36089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35990-36040]:Block[36039-36089]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[36008-36026]:ReturnStatement[36057-36075]"
    }, {
      "left" : "if (array[j] > max)",
      "right" : "if (array[j] > max)",
      "info" : "IfStatement[36053-36120]:IfStatement[36102-36169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36073-36120]:Block[36122-36169]"
    }, {
      "left" : "max = array[j];",
      "right" : "max = array[j];",
      "info" : "ExpressionStatement[36091-36106]:ExpressionStatement[36140-36155]"
    }, {
      "left" : "return max;",
      "right" : "return max;",
      "info" : "ReturnStatement[36144-36155]:ReturnStatement[36193-36204]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36612-36618]:Modifier[36661-36667]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[36619-36625]:Modifier[36668-36674]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[36626-36631]:PrimitiveType[36675-36680]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[36632-36635]:SimpleName[36681-36684]"
    }, {
      "left" : "float[] array",
      "right" : "float[] array",
      "info" : "SingleVariableDeclaration[36636-36649]:SingleVariableDeclaration[36685-36698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36651-37229]:Block[36700-37278]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[36688-36910]:IfStatement[36737-36959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36707-36796]:Block[36756-36845]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
      "info" : "ThrowStatement[36721-36786]:ThrowStatement[36770-36835]"
    }, {
      "left" : "if (array.length == 0)",
      "right" : "if (array.length == 0)",
      "info" : "IfStatement[36802-36910]:IfStatement[36851-36959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36825-36910]:Block[36874-36959]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
      "info" : "ThrowStatement[36839-36900]:ThrowStatement[36888-36949]"
    }, {
      "left" : "float max = array[0];",
      "right" : "float max = array[0];",
      "info" : "VariableDeclarationStatement[36953-36974]:VariableDeclarationStatement[37002-37023]"
    }, {
      "left" : "for (int j = 1; j < array.length; j++)",
      "right" : "for (int j = 1; j < array.length; j++)",
      "info" : "ForStatement[36983-37202]:ForStatement[37032-37251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37022-37202]:Block[37071-37251]"
    }, {
      "left" : "if (Float.isNaN(array[j]))",
      "right" : "if (Float.isNaN(array[j]))",
      "info" : "IfStatement[37036-37112]:IfStatement[37085-37161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37063-37112]:Block[37112-37161]"
    }, {
      "left" : "return Float.NaN;",
      "right" : "return Float.NaN;",
      "info" : "ReturnStatement[37081-37098]:ReturnStatement[37130-37147]"
    }, {
      "left" : "if (array[j] > max)",
      "right" : "if (array[j] > max)",
      "info" : "IfStatement[37125-37192]:IfStatement[37174-37241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37145-37192]:Block[37194-37241]"
    }, {
      "left" : "max = array[j];",
      "right" : "max = array[j];",
      "info" : "ExpressionStatement[37163-37178]:ExpressionStatement[37212-37227]"
    }, {
      "left" : "return max;",
      "right" : "return max;",
      "info" : "ReturnStatement[37212-37223]:ReturnStatement[37261-37272]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37545-37551]:Modifier[37594-37600]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[37552-37558]:Modifier[37601-37607]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[37559-37563]:PrimitiveType[37608-37612]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[37564-37567]:SimpleName[37613-37616]"
    }, {
      "left" : "long a",
      "right" : "long a",
      "info" : "SingleVariableDeclaration[37568-37574]:SingleVariableDeclaration[37617-37623]"
    }, {
      "left" : "long b",
      "right" : "long b",
      "info" : "SingleVariableDeclaration[37576-37582]:SingleVariableDeclaration[37625-37631]"
    }, {
      "left" : "long c",
      "right" : "long c",
      "info" : "SingleVariableDeclaration[37584-37590]:SingleVariableDeclaration[37633-37639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37592-37717]:Block[37641-37766]"
    }, {
      "left" : "if (b < a)",
      "right" : "if (b < a)",
      "info" : "IfStatement[37602-37643]:IfStatement[37651-37692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37613-37643]:Block[37662-37692]"
    }, {
      "left" : "a = b;",
      "right" : "a = b;",
      "info" : "ExpressionStatement[37627-37633]:ExpressionStatement[37676-37682]"
    }, {
      "left" : "if (c < a)",
      "right" : "if (c < a)",
      "info" : "IfStatement[37652-37693]:IfStatement[37701-37742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37663-37693]:Block[37712-37742]"
    }, {
      "left" : "a = c;",
      "right" : "a = c;",
      "info" : "ExpressionStatement[37677-37683]:ExpressionStatement[37726-37732]"
    }, {
      "left" : "return a;",
      "right" : "return a;",
      "info" : "ReturnStatement[37702-37711]:ReturnStatement[37751-37760]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37930-37936]:Modifier[37979-37985]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[37937-37943]:Modifier[37986-37992]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[37944-37947]:PrimitiveType[37993-37996]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[37948-37951]:SimpleName[37997-38000]"
    }, {
      "left" : "int a",
      "right" : "int a",
      "info" : "SingleVariableDeclaration[37952-37957]:SingleVariableDeclaration[38001-38006]"
    }, {
      "left" : "int b",
      "right" : "int b",
      "info" : "SingleVariableDeclaration[37959-37964]:SingleVariableDeclaration[38008-38013]"
    }, {
      "left" : "int c",
      "right" : "int c",
      "info" : "SingleVariableDeclaration[37966-37971]:SingleVariableDeclaration[38015-38020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37973-38098]:Block[38022-38147]"
    }, {
      "left" : "if (b < a)",
      "right" : "if (b < a)",
      "info" : "IfStatement[37983-38024]:IfStatement[38032-38073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37994-38024]:Block[38043-38073]"
    }, {
      "left" : "a = b;",
      "right" : "a = b;",
      "info" : "ExpressionStatement[38008-38014]:ExpressionStatement[38057-38063]"
    }, {
      "left" : "if (c < a)",
      "right" : "if (c < a)",
      "info" : "IfStatement[38033-38074]:IfStatement[38082-38123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38044-38074]:Block[38093-38123]"
    }, {
      "left" : "a = c;",
      "right" : "a = c;",
      "info" : "ExpressionStatement[38058-38064]:ExpressionStatement[38107-38113]"
    }, {
      "left" : "return a;",
      "right" : "return a;",
      "info" : "ReturnStatement[38083-38092]:ReturnStatement[38132-38141]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38313-38319]:Modifier[38362-38368]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[38320-38326]:Modifier[38369-38375]"
    }, {
      "left" : "short",
      "right" : "short",
      "info" : "PrimitiveType[38327-38332]:PrimitiveType[38376-38381]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[38333-38336]:SimpleName[38382-38385]"
    }, {
      "left" : "short a",
      "right" : "short a",
      "info" : "SingleVariableDeclaration[38337-38344]:SingleVariableDeclaration[38386-38393]"
    }, {
      "left" : "short b",
      "right" : "short b",
      "info" : "SingleVariableDeclaration[38346-38353]:SingleVariableDeclaration[38395-38402]"
    }, {
      "left" : "short c",
      "right" : "short c",
      "info" : "SingleVariableDeclaration[38355-38362]:SingleVariableDeclaration[38404-38411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38364-38489]:Block[38413-38538]"
    }, {
      "left" : "if (b < a)",
      "right" : "if (b < a)",
      "info" : "IfStatement[38374-38415]:IfStatement[38423-38464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38385-38415]:Block[38434-38464]"
    }, {
      "left" : "a = b;",
      "right" : "a = b;",
      "info" : "ExpressionStatement[38399-38405]:ExpressionStatement[38448-38454]"
    }, {
      "left" : "if (c < a)",
      "right" : "if (c < a)",
      "info" : "IfStatement[38424-38465]:IfStatement[38473-38514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38435-38465]:Block[38484-38514]"
    }, {
      "left" : "a = c;",
      "right" : "a = c;",
      "info" : "ExpressionStatement[38449-38455]:ExpressionStatement[38498-38504]"
    }, {
      "left" : "return a;",
      "right" : "return a;",
      "info" : "ReturnStatement[38474-38483]:ReturnStatement[38523-38532]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38703-38709]:Modifier[38752-38758]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[38710-38716]:Modifier[38759-38765]"
    }, {
      "left" : "byte",
      "right" : "byte",
      "info" : "PrimitiveType[38717-38721]:PrimitiveType[38766-38770]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[38722-38725]:SimpleName[38771-38774]"
    }, {
      "left" : "byte a",
      "right" : "byte a",
      "info" : "SingleVariableDeclaration[38726-38732]:SingleVariableDeclaration[38775-38781]"
    }, {
      "left" : "byte b",
      "right" : "byte b",
      "info" : "SingleVariableDeclaration[38734-38740]:SingleVariableDeclaration[38783-38789]"
    }, {
      "left" : "byte c",
      "right" : "byte c",
      "info" : "SingleVariableDeclaration[38742-38748]:SingleVariableDeclaration[38791-38797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38750-38875]:Block[38799-38924]"
    }, {
      "left" : "if (b < a)",
      "right" : "if (b < a)",
      "info" : "IfStatement[38760-38801]:IfStatement[38809-38850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38771-38801]:Block[38820-38850]"
    }, {
      "left" : "a = b;",
      "right" : "a = b;",
      "info" : "ExpressionStatement[38785-38791]:ExpressionStatement[38834-38840]"
    }, {
      "left" : "if (c < a)",
      "right" : "if (c < a)",
      "info" : "IfStatement[38810-38851]:IfStatement[38859-38900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38821-38851]:Block[38870-38900]"
    }, {
      "left" : "a = c;",
      "right" : "a = c;",
      "info" : "ExpressionStatement[38835-38841]:ExpressionStatement[38884-38890]"
    }, {
      "left" : "return a;",
      "right" : "return a;",
      "info" : "ReturnStatement[38860-38869]:ReturnStatement[38909-38918]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39317-39323]:Modifier[39366-39372]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39324-39330]:Modifier[39373-39379]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[39331-39337]:PrimitiveType[39380-39386]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[39338-39341]:SimpleName[39387-39390]"
    }, {
      "left" : "double a",
      "right" : "double a",
      "info" : "SingleVariableDeclaration[39342-39350]:SingleVariableDeclaration[39391-39399]"
    }, {
      "left" : "double b",
      "right" : "double b",
      "info" : "SingleVariableDeclaration[39352-39360]:SingleVariableDeclaration[39401-39409]"
    }, {
      "left" : "double c",
      "right" : "double c",
      "info" : "SingleVariableDeclaration[39362-39370]:SingleVariableDeclaration[39411-39419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39372-39423]:Block[39421-39472]"
    }, {
      "left" : "return Math.min(Math.min(a, b), c);",
      "right" : "return Math.min(Math.min(a, b), c);",
      "info" : "ReturnStatement[39382-39417]:ReturnStatement[39431-39466]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39860-39866]:Modifier[39909-39915]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39867-39873]:Modifier[39916-39922]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[39874-39879]:PrimitiveType[39923-39928]"
    }, {
      "left" : "min",
      "right" : "min",
      "info" : "SimpleName[39880-39883]:SimpleName[39929-39932]"
    }, {
      "left" : "float a",
      "right" : "float a",
      "info" : "SingleVariableDeclaration[39884-39891]:SingleVariableDeclaration[39933-39940]"
    }, {
      "left" : "float b",
      "right" : "float b",
      "info" : "SingleVariableDeclaration[39893-39900]:SingleVariableDeclaration[39942-39949]"
    }, {
      "left" : "float c",
      "right" : "float c",
      "info" : "SingleVariableDeclaration[39902-39909]:SingleVariableDeclaration[39951-39958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39911-39962]:Block[39960-40011]"
    }, {
      "left" : "return Math.min(Math.min(a, b), c);",
      "right" : "return Math.min(Math.min(a, b), c);",
      "info" : "ReturnStatement[39921-39956]:ReturnStatement[39970-40005]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40272-40278]:Modifier[40321-40327]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[40279-40285]:Modifier[40328-40334]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[40286-40290]:PrimitiveType[40335-40339]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[40291-40294]:SimpleName[40340-40343]"
    }, {
      "left" : "long a",
      "right" : "long a",
      "info" : "SingleVariableDeclaration[40295-40301]:SingleVariableDeclaration[40344-40350]"
    }, {
      "left" : "long b",
      "right" : "long b",
      "info" : "SingleVariableDeclaration[40303-40309]:SingleVariableDeclaration[40352-40358]"
    }, {
      "left" : "long c",
      "right" : "long c",
      "info" : "SingleVariableDeclaration[40311-40317]:SingleVariableDeclaration[40360-40366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40319-40444]:Block[40368-40493]"
    }, {
      "left" : "if (b > a)",
      "right" : "if (b > a)",
      "info" : "IfStatement[40329-40370]:IfStatement[40378-40419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40340-40370]:Block[40389-40419]"
    }, {
      "left" : "a = b;",
      "right" : "a = b;",
      "info" : "ExpressionStatement[40354-40360]:ExpressionStatement[40403-40409]"
    }, {
      "left" : "if (c > a)",
      "right" : "if (c > a)",
      "info" : "IfStatement[40379-40420]:IfStatement[40428-40469]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40390-40420]:Block[40439-40469]"
    }, {
      "left" : "a = c;",
      "right" : "a = c;",
      "info" : "ExpressionStatement[40404-40410]:ExpressionStatement[40453-40459]"
    }, {
      "left" : "return a;",
      "right" : "return a;",
      "info" : "ReturnStatement[40429-40438]:ReturnStatement[40478-40487]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40656-40662]:Modifier[40705-40711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[40663-40669]:Modifier[40712-40718]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[40670-40673]:PrimitiveType[40719-40722]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[40674-40677]:SimpleName[40723-40726]"
    }, {
      "left" : "int a",
      "right" : "int a",
      "info" : "SingleVariableDeclaration[40678-40683]:SingleVariableDeclaration[40727-40732]"
    }, {
      "left" : "int b",
      "right" : "int b",
      "info" : "SingleVariableDeclaration[40685-40690]:SingleVariableDeclaration[40734-40739]"
    }, {
      "left" : "int c",
      "right" : "int c",
      "info" : "SingleVariableDeclaration[40692-40697]:SingleVariableDeclaration[40741-40746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40699-40824]:Block[40748-40873]"
    }, {
      "left" : "if (b > a)",
      "right" : "if (b > a)",
      "info" : "IfStatement[40709-40750]:IfStatement[40758-40799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40720-40750]:Block[40769-40799]"
    }, {
      "left" : "a = b;",
      "right" : "a = b;",
      "info" : "ExpressionStatement[40734-40740]:ExpressionStatement[40783-40789]"
    }, {
      "left" : "if (c > a)",
      "right" : "if (c > a)",
      "info" : "IfStatement[40759-40800]:IfStatement[40808-40849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40770-40800]:Block[40819-40849]"
    }, {
      "left" : "a = c;",
      "right" : "a = c;",
      "info" : "ExpressionStatement[40784-40790]:ExpressionStatement[40833-40839]"
    }, {
      "left" : "return a;",
      "right" : "return a;",
      "info" : "ReturnStatement[40809-40818]:ReturnStatement[40858-40867]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41038-41044]:Modifier[41087-41093]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[41045-41051]:Modifier[41094-41100]"
    }, {
      "left" : "short",
      "right" : "short",
      "info" : "PrimitiveType[41052-41057]:PrimitiveType[41101-41106]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[41058-41061]:SimpleName[41107-41110]"
    }, {
      "left" : "short a",
      "right" : "short a",
      "info" : "SingleVariableDeclaration[41062-41069]:SingleVariableDeclaration[41111-41118]"
    }, {
      "left" : "short b",
      "right" : "short b",
      "info" : "SingleVariableDeclaration[41071-41078]:SingleVariableDeclaration[41120-41127]"
    }, {
      "left" : "short c",
      "right" : "short c",
      "info" : "SingleVariableDeclaration[41080-41087]:SingleVariableDeclaration[41129-41136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41089-41214]:Block[41138-41263]"
    }, {
      "left" : "if (b > a)",
      "right" : "if (b > a)",
      "info" : "IfStatement[41099-41140]:IfStatement[41148-41189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41110-41140]:Block[41159-41189]"
    }, {
      "left" : "a = b;",
      "right" : "a = b;",
      "info" : "ExpressionStatement[41124-41130]:ExpressionStatement[41173-41179]"
    }, {
      "left" : "if (c > a)",
      "right" : "if (c > a)",
      "info" : "IfStatement[41149-41190]:IfStatement[41198-41239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41160-41190]:Block[41209-41239]"
    }, {
      "left" : "a = c;",
      "right" : "a = c;",
      "info" : "ExpressionStatement[41174-41180]:ExpressionStatement[41223-41229]"
    }, {
      "left" : "return a;",
      "right" : "return a;",
      "info" : "ReturnStatement[41199-41208]:ReturnStatement[41248-41257]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41427-41433]:Modifier[41476-41482]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[41434-41440]:Modifier[41483-41489]"
    }, {
      "left" : "byte",
      "right" : "byte",
      "info" : "PrimitiveType[41441-41445]:PrimitiveType[41490-41494]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[41446-41449]:SimpleName[41495-41498]"
    }, {
      "left" : "byte a",
      "right" : "byte a",
      "info" : "SingleVariableDeclaration[41450-41456]:SingleVariableDeclaration[41499-41505]"
    }, {
      "left" : "byte b",
      "right" : "byte b",
      "info" : "SingleVariableDeclaration[41458-41464]:SingleVariableDeclaration[41507-41513]"
    }, {
      "left" : "byte c",
      "right" : "byte c",
      "info" : "SingleVariableDeclaration[41466-41472]:SingleVariableDeclaration[41515-41521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41474-41599]:Block[41523-41648]"
    }, {
      "left" : "if (b > a)",
      "right" : "if (b > a)",
      "info" : "IfStatement[41484-41525]:IfStatement[41533-41574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41495-41525]:Block[41544-41574]"
    }, {
      "left" : "a = b;",
      "right" : "a = b;",
      "info" : "ExpressionStatement[41509-41515]:ExpressionStatement[41558-41564]"
    }, {
      "left" : "if (c > a)",
      "right" : "if (c > a)",
      "info" : "IfStatement[41534-41575]:IfStatement[41583-41624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41545-41575]:Block[41594-41624]"
    }, {
      "left" : "a = c;",
      "right" : "a = c;",
      "info" : "ExpressionStatement[41559-41565]:ExpressionStatement[41608-41614]"
    }, {
      "left" : "return a;",
      "right" : "return a;",
      "info" : "ReturnStatement[41584-41593]:ReturnStatement[41633-41642]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42039-42045]:Modifier[42088-42094]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[42046-42052]:Modifier[42095-42101]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[42053-42059]:PrimitiveType[42102-42108]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[42060-42063]:SimpleName[42109-42112]"
    }, {
      "left" : "double a",
      "right" : "double a",
      "info" : "SingleVariableDeclaration[42064-42072]:SingleVariableDeclaration[42113-42121]"
    }, {
      "left" : "double b",
      "right" : "double b",
      "info" : "SingleVariableDeclaration[42074-42082]:SingleVariableDeclaration[42123-42131]"
    }, {
      "left" : "double c",
      "right" : "double c",
      "info" : "SingleVariableDeclaration[42084-42092]:SingleVariableDeclaration[42133-42141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42094-42145]:Block[42143-42194]"
    }, {
      "left" : "return Math.max(Math.max(a, b), c);",
      "right" : "return Math.max(Math.max(a, b), c);",
      "info" : "ReturnStatement[42104-42139]:ReturnStatement[42153-42188]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42581-42587]:Modifier[42630-42636]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[42588-42594]:Modifier[42637-42643]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[42595-42600]:PrimitiveType[42644-42649]"
    }, {
      "left" : "max",
      "right" : "max",
      "info" : "SimpleName[42601-42604]:SimpleName[42650-42653]"
    }, {
      "left" : "float a",
      "right" : "float a",
      "info" : "SingleVariableDeclaration[42605-42612]:SingleVariableDeclaration[42654-42661]"
    }, {
      "left" : "float b",
      "right" : "float b",
      "info" : "SingleVariableDeclaration[42614-42621]:SingleVariableDeclaration[42663-42670]"
    }, {
      "left" : "float c",
      "right" : "float c",
      "info" : "SingleVariableDeclaration[42623-42630]:SingleVariableDeclaration[42672-42679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42632-42683]:Block[42681-42732]"
    }, {
      "left" : "return Math.max(Math.max(a, b), c);",
      "right" : "return Math.max(Math.max(a, b), c);",
      "info" : "ReturnStatement[42642-42677]:ReturnStatement[42691-42726]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43099-43105]:Modifier[43148-43154]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[43106-43112]:Modifier[43155-43161]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[43113-43120]:PrimitiveType[43162-43169]"
    }, {
      "left" : "isDigits",
      "right" : "isDigits",
      "info" : "SimpleName[43121-43129]:SimpleName[43170-43178]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[43130-43140]:SingleVariableDeclaration[43179-43189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43142-43402]:Block[43191-43451]"
    }, {
      "left" : "if (StringUtils.isEmpty(str))",
      "right" : "if (StringUtils.isEmpty(str))",
      "info" : "IfStatement[43152-43219]:IfStatement[43201-43268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43182-43219]:Block[43231-43268]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43196-43209]:ReturnStatement[43245-43258]"
    }, {
      "left" : "for (int i = 0; i < str.length(); i++)",
      "right" : "for (int i = 0; i < str.length(); i++)",
      "info" : "ForStatement[43228-43375]:ForStatement[43277-43424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43267-43375]:Block[43316-43424]"
    }, {
      "left" : "if (!Character.isDigit(str.charAt(i)))",
      "right" : "if (!Character.isDigit(str.charAt(i)))",
      "info" : "IfStatement[43281-43365]:IfStatement[43330-43414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43320-43365]:Block[43369-43414]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43338-43351]:ReturnStatement[43387-43400]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[43384-43396]:ReturnStatement[43433-43445]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43904-43910]:Modifier[43953-43959]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[43911-43917]:Modifier[43960-43966]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[43918-43925]:PrimitiveType[43967-43974]"
    }, {
      "left" : "isNumber",
      "right" : "isNumber",
      "info" : "SimpleName[43926-43934]:SimpleName[43975-43983]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[43935-43945]:SingleVariableDeclaration[43984-43994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43947-47691]:Block[43996-47740]"
    }, {
      "left" : "if (StringUtils.isEmpty(str))",
      "right" : "if (StringUtils.isEmpty(str))",
      "info" : "IfStatement[43957-44024]:IfStatement[44006-44073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43987-44024]:Block[44036-44073]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44001-44014]:ReturnStatement[44050-44063]"
    }, {
      "left" : "char[] chars = str.toCharArray();",
      "right" : "char[] chars = str.toCharArray();",
      "info" : "VariableDeclarationStatement[44033-44066]:VariableDeclarationStatement[44082-44115]"
    }, {
      "left" : "int sz = chars.length;",
      "right" : "int sz = chars.length;",
      "info" : "VariableDeclarationStatement[44075-44097]:VariableDeclarationStatement[44124-44146]"
    }, {
      "left" : "boolean hasExp = false;",
      "right" : "boolean hasExp = false;",
      "info" : "VariableDeclarationStatement[44106-44129]:VariableDeclarationStatement[44155-44178]"
    }, {
      "left" : "boolean hasDecPoint = false;",
      "right" : "boolean hasDecPoint = false;",
      "info" : "VariableDeclarationStatement[44138-44166]:VariableDeclarationStatement[44187-44215]"
    }, {
      "left" : "boolean allowSigns = false;",
      "right" : "boolean allowSigns = false;",
      "info" : "VariableDeclarationStatement[44175-44202]:VariableDeclarationStatement[44224-44251]"
    }, {
      "left" : "boolean foundDigit = false;",
      "right" : "boolean foundDigit = false;",
      "info" : "VariableDeclarationStatement[44211-44238]:VariableDeclarationStatement[44260-44287]"
    }, {
      "left" : "int start = (chars[0] == '-') ? 1 : 0;",
      "right" : "int start = (chars[0] == '-') ? 1 : 0;",
      "info" : "VariableDeclarationStatement[44295-44333]:VariableDeclarationStatement[44344-44382]"
    }, {
      "left" : "if (sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x')",
      "right" : "if (sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x')",
      "info" : "IfStatement[44342-44905]:IfStatement[44391-44954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44412-44905]:Block[44461-44954]"
    }, {
      "left" : "int i = start + 2;",
      "right" : "int i = start + 2;",
      "info" : "VariableDeclarationStatement[44426-44444]:VariableDeclarationStatement[44475-44493]"
    }, {
      "left" : "if (i == sz)",
      "right" : "if (i == sz)",
      "info" : "IfStatement[44457-44530]:IfStatement[44506-44579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44470-44530]:Block[44519-44579]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44488-44501]:ReturnStatement[44537-44550]"
    }, {
      "left" : "for (; i < chars.length; i++)",
      "right" : "for (; i < chars.length; i++)",
      "info" : "ForStatement[44599-44870]:ForStatement[44648-44919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44629-44870]:Block[44678-44919]"
    }, {
      "left" : "if ((chars[i] < '0' || chars[i] > '9')\n                    && (chars[i] < 'a' || chars[i] > 'f')\n                    && (chars[i] < 'A' || chars[i] > 'F'))",
      "right" : "if ((chars[i] < '0' || chars[i] > '9')\n                    && (chars[i] < 'a' || chars[i] > 'f')\n                    && (chars[i] < 'A' || chars[i] > 'F'))",
      "info" : "IfStatement[44647-44856]:IfStatement[44696-44905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44803-44856]:Block[44852-44905]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44825-44838]:ReturnStatement[44874-44887]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[44883-44895]:ReturnStatement[44932-44944]"
    }, {
      "left" : "sz--;",
      "right" : "sz--;",
      "info" : "ExpressionStatement[44914-44919]:ExpressionStatement[44963-44968]"
    }, {
      "left" : "int i = start;",
      "right" : "int i = start;",
      "info" : "VariableDeclarationStatement[45025-45039]:VariableDeclarationStatement[45074-45088]"
    }, {
      "left" : "while (i < sz || (i < sz + 1 && allowSigns && !foundDigit))",
      "right" : "while (i < sz || (i < sz + 1 && allowSigns && !foundDigit))",
      "info" : "WhileStatement[45197-46345]:WhileStatement[45246-46394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45257-46345]:Block[45306-46394]"
    }, {
      "left" : "if (chars[i] >= '0' && chars[i] <= '9')",
      "right" : "if (chars[i] >= '0' && chars[i] <= '9')",
      "info" : "IfStatement[45271-46318]:IfStatement[45320-46367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45311-45398]:Block[45360-45447]"
    }, {
      "left" : "foundDigit = true;",
      "right" : "foundDigit = true;",
      "info" : "ExpressionStatement[45329-45347]:ExpressionStatement[45378-45396]"
    }, {
      "left" : "allowSigns = false;",
      "right" : "allowSigns = false;",
      "info" : "ExpressionStatement[45364-45383]:ExpressionStatement[45413-45432]"
    }, {
      "left" : "if (chars[i] == '.')",
      "right" : "if (chars[i] == '.')",
      "info" : "IfStatement[45404-46318]:IfStatement[45453-46367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45425-45637]:Block[45474-45686]"
    }, {
      "left" : "if (hasDecPoint || hasExp)",
      "right" : "if (hasDecPoint || hasExp)",
      "info" : "IfStatement[45443-45587]:IfStatement[45492-45636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45470-45587]:Block[45519-45636]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45556-45569]:ReturnStatement[45605-45618]"
    }, {
      "left" : "hasDecPoint = true;",
      "right" : "hasDecPoint = true;",
      "info" : "ExpressionStatement[45604-45623]:ExpressionStatement[45653-45672]"
    }, {
      "left" : "if (chars[i] == 'e' || chars[i] == 'E')",
      "right" : "if (chars[i] == 'e' || chars[i] == 'E')",
      "info" : "IfStatement[45643-46318]:IfStatement[45692-46367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45683-46016]:Block[45732-46065]"
    }, {
      "left" : "if (hasExp)",
      "right" : "if (hasExp)",
      "info" : "IfStatement[45753-45849]:IfStatement[45802-45898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45765-45849]:Block[45814-45898]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45818-45831]:ReturnStatement[45867-45880]"
    }, {
      "left" : "if (!foundDigit)",
      "right" : "if (!foundDigit)",
      "info" : "IfStatement[45866-45936]:IfStatement[45915-45985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45883-45936]:Block[45932-45985]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45905-45918]:ReturnStatement[45954-45967]"
    }, {
      "left" : "hasExp = true;",
      "right" : "hasExp = true;",
      "info" : "ExpressionStatement[45953-45967]:ExpressionStatement[46002-46016]"
    }, {
      "left" : "allowSigns = true;",
      "right" : "allowSigns = true;",
      "info" : "ExpressionStatement[45984-46002]:ExpressionStatement[46033-46051]"
    }, {
      "left" : "if (chars[i] == '+' || chars[i] == '-')",
      "right" : "if (chars[i] == '+' || chars[i] == '-')",
      "info" : "IfStatement[46022-46318]:IfStatement[46071-46367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46062-46267]:Block[46111-46316]"
    }, {
      "left" : "if (!allowSigns)",
      "right" : "if (!allowSigns)",
      "info" : "IfStatement[46080-46150]:IfStatement[46129-46199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46097-46150]:Block[46146-46199]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46119-46132]:ReturnStatement[46168-46181]"
    }, {
      "left" : "allowSigns = false;",
      "right" : "allowSigns = false;",
      "info" : "ExpressionStatement[46167-46186]:ExpressionStatement[46216-46235]"
    }, {
      "left" : "foundDigit = false;",
      "right" : "foundDigit = false;",
      "info" : "ExpressionStatement[46203-46222]:ExpressionStatement[46252-46271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46273-46318]:Block[46322-46367]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46291-46304]:ReturnStatement[46340-46353]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[46331-46335]:ExpressionStatement[46380-46384]"
    }, {
      "left" : "if (i < chars.length)",
      "right" : "if (i < chars.length)",
      "info" : "IfStatement[46354-47506]:IfStatement[46403-47555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46376-47506]:Block[46425-47555]"
    }, {
      "left" : "if (chars[i] >= '0' && chars[i] <= '9')",
      "right" : "if (chars[i] >= '0' && chars[i] <= '9')",
      "info" : "IfStatement[46390-46515]:IfStatement[46439-46564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46430-46515]:Block[46479-46564]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[46489-46501]:ReturnStatement[46538-46550]"
    }, {
      "left" : "if (chars[i] == 'e' || chars[i] == 'E')",
      "right" : "if (chars[i] == 'e' || chars[i] == 'E')",
      "info" : "IfStatement[46528-46665]:IfStatement[46577-46714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46568-46665]:Block[46617-46714]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46638-46651]:ReturnStatement[46687-46700]"
    }, {
      "left" : "if (chars[i] == '.')",
      "right" : "if (chars[i] == '.')",
      "info" : "IfStatement[46678-46981]:IfStatement[46727-47030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46699-46981]:Block[46748-47030]"
    }, {
      "left" : "if (hasDecPoint || hasExp)",
      "right" : "if (hasDecPoint || hasExp)",
      "info" : "IfStatement[46717-46858]:IfStatement[46766-46907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46744-46858]:Block[46793-46907]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46827-46840]:ReturnStatement[46876-46889]"
    }, {
      "left" : "return foundDigit;",
      "right" : "return foundDigit;",
      "info" : "ReturnStatement[46949-46967]:ReturnStatement[46998-47016]"
    }, {
      "left" : "if (!allowSigns\n                && (chars[i] == 'd'\n                    || chars[i] == 'D'\n                    || chars[i] == 'f'\n                    || chars[i] == 'F'))",
      "right" : "if (!allowSigns\n                && (chars[i] == 'd'\n                    || chars[i] == 'D'\n                    || chars[i] == 'f'\n                    || chars[i] == 'F'))",
      "info" : "IfStatement[46994-47215]:IfStatement[47043-47264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47165-47215]:Block[47214-47264]"
    }, {
      "left" : "return foundDigit;",
      "right" : "return foundDigit;",
      "info" : "ReturnStatement[47183-47201]:ReturnStatement[47232-47250]"
    }, {
      "left" : "if (chars[i] == 'l'\n                || chars[i] == 'L')",
      "right" : "if (chars[i] == 'l'\n                || chars[i] == 'L')",
      "info" : "IfStatement[47228-47429]:IfStatement[47277-47478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47284-47429]:Block[47333-47478]"
    }, {
      "left" : "return foundDigit && !hasExp && !hasDecPoint;",
      "right" : "return foundDigit && !hasExp && !hasDecPoint;",
      "info" : "ReturnStatement[47370-47415]:ReturnStatement[47419-47464]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[47483-47496]:ReturnStatement[47532-47545]"
    }, {
      "left" : "return !allowSigns && foundDigit;",
      "right" : "return !allowSigns && foundDigit;",
      "info" : "ReturnStatement[47652-47685]:ReturnStatement[47701-47734]"
    } ]
  },
  "interFileMappings" : { }
}