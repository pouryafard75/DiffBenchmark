{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "OAuthSignatureCalculatorTest",
      "right" : "OAuthSignatureCalculatorTest",
      "info" : "TypeDeclaration[1114-7714]:TypeDeclaration[1114-10145]"
    }, {
      "left" : "private static final String CONSUMER_KEY = \"dpf43f3p2l4k3l03\";",
      "right" : "private static final String CONSUMER_KEY = \"dpf43f3p2l4k3l03\";",
      "info" : "FieldDeclaration[1367-1429]:FieldDeclaration[1372-1434]"
    }, {
      "left" : "private static final String CONSUMER_SECRET = \"kd94hf93k423kf44\";",
      "right" : "private static final String CONSUMER_SECRET = \"kd94hf93k423kf44\";",
      "info" : "FieldDeclaration[1435-1500]:FieldDeclaration[1440-1505]"
    }, {
      "left" : "public static final String TOKEN_KEY = \"nnch734d00sl2jdk\";",
      "right" : "public static final String TOKEN_KEY = \"nnch734d00sl2jdk\";",
      "info" : "FieldDeclaration[1506-1564]:FieldDeclaration[1511-1569]"
    }, {
      "left" : "public static final String TOKEN_SECRET = \"pfkkdhi9sl3r4s00\";",
      "right" : "public static final String TOKEN_SECRET = \"pfkkdhi9sl3r4s00\";",
      "info" : "FieldDeclaration[1570-1631]:FieldDeclaration[1575-1636]"
    }, {
      "left" : "public static final String NONCE = \"kllo9940pd9333jh\";",
      "right" : "public static final String NONCE = \"kllo9940pd9333jh\";",
      "info" : "FieldDeclaration[1637-1691]:FieldDeclaration[1642-1696]"
    }, {
      "left" : "final static long TIMESTAMP = 1191242096;",
      "right" : "final static long TIMESTAMP = 1191242096;",
      "info" : "FieldDeclaration[1697-1738]:FieldDeclaration[1702-1743]"
    }, {
      "left" : "StaticOAuthSignatureCalculator",
      "right" : "StaticOAuthSignatureCalculator",
      "info" : "TypeDeclaration[1744-2393]:TypeDeclaration[1749-2371]"
    }, {
      "left" : "private final long timestamp;",
      "right" : "private final long timestamp;",
      "info" : "FieldDeclaration[1848-1877]:FieldDeclaration[1845-1874]"
    }, {
      "left" : "private final String nonce;",
      "right" : "private final String nonce;",
      "info" : "FieldDeclaration[1886-1913]:FieldDeclaration[1883-1910]"
    }, {
      "left" : "public StaticOAuthSignatureCalculator(ConsumerKey consumerAuth, RequestToken userAuth, long timestamp, String nonce)",
      "right" : "public StaticOAuthSignatureCalculator(ConsumerKey consumerAuth, RequestToken userAuth, long timestamp, String nonce)",
      "info" : "MethodDeclaration[1931-2177]:MethodDeclaration[1920-2163]"
    }, {
      "left" : "protected long generateTimestamp()",
      "right" : "protected long generateTimestamp()",
      "info" : "MethodDeclaration[2195-2289]:MethodDeclaration[2173-2267]"
    }, {
      "left" : "protected String generateNonce()",
      "right" : "protected String generateNonce()",
      "info" : "MethodDeclaration[2299-2387]:MethodDeclaration[2277-2365]"
    }, {
      "left" : "public void testGetCalculateSignature()",
      "right" : "public void testGetCalculateSignature()",
      "info" : "MethodDeclaration[2489-3192]:MethodDeclaration[4808-5511]"
    }, {
      "left" : "public void testPostCalculateSignature()",
      "right" : "public void testPostCalculateSignature()",
      "info" : "MethodDeclaration[3198-5390]:MethodDeclaration[5517-7767]"
    }, {
      "left" : "public void testGetWithRequestBuilder()",
      "right" : "public void testGetWithRequestBuilder()",
      "info" : "MethodDeclaration[5396-7711]:MethodDeclaration[7773-10142]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1319-1325]:Modifier[1324-1330]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1326-1331]:TYPE_DECLARATION_KIND[1331-1336]"
    }, {
      "left" : "OAuthSignatureCalculatorTest",
      "right" : "OAuthSignatureCalculatorTest",
      "info" : "SimpleName[1332-1360]:SimpleName[1337-1365]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1367-1374]:Modifier[2450-2457]"
    }, {
      "left" : "long",
      "right" : "void",
      "info" : "PrimitiveType[1710-1714]:PrimitiveType[2458-2462]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1744-1751]:Modifier[1749-1756]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1752-1758]:Modifier[1757-1763]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1759-1764]:TYPE_DECLARATION_KIND[1764-1769]"
    }, {
      "left" : "StaticOAuthSignatureCalculator",
      "right" : "StaticOAuthSignatureCalculator",
      "info" : "SimpleName[1765-1795]:SimpleName[1770-1800]"
    }, {
      "left" : "OAuthSignatureCalculator",
      "right" : "OAuthSignatureCalculator",
      "info" : "SimpleType[1804-1828]:SimpleType[1809-1833]"
    }, {
      "left" : "String",
      "right" : "testSignatureBaseString",
      "info" : "SimpleName[1900-1906]:SimpleName[2463-2486]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1931-1937]:Modifier[1920-1926]"
    }, {
      "left" : "StaticOAuthSignatureCalculator",
      "right" : "StaticOAuthSignatureCalculator",
      "info" : "SimpleName[1938-1968]:SimpleName[1927-1957]"
    }, {
      "left" : "ConsumerKey consumerAuth",
      "right" : "ConsumerKey consumerAuth",
      "info" : "SingleVariableDeclaration[1969-1993]:SingleVariableDeclaration[1958-1982]"
    }, {
      "left" : "RequestToken userAuth",
      "right" : "RequestToken userAuth",
      "info" : "SingleVariableDeclaration[1995-2016]:SingleVariableDeclaration[1984-2005]"
    }, {
      "left" : "RequestToken userAuth",
      "right" : "Request request",
      "info" : "SingleVariableDeclaration[1995-2016]:SingleVariableDeclaration[2487-2502]"
    }, {
      "left" : "userAuth",
      "right" : "request",
      "info" : "SimpleName[2008-2016]:SimpleName[2495-2502]"
    }, {
      "left" : "long timestamp",
      "right" : "long timestamp",
      "info" : "SingleVariableDeclaration[2018-2032]:SingleVariableDeclaration[2007-2021]"
    }, {
      "left" : "String nonce",
      "right" : "String nonce",
      "info" : "SingleVariableDeclaration[2034-2046]:SingleVariableDeclaration[2023-2035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2048-2177]:Block[2037-2163]"
    }, {
      "left" : "super(consumerAuth, userAuth);",
      "right" : "super(consumerAuth, userAuth);",
      "info" : "SuperConstructorInvocation[2062-2092]:SuperConstructorInvocation[2051-2081]"
    }, {
      "left" : "this.timestamp = timestamp;",
      "right" : "this.timestamp = timestamp;",
      "info" : "ExpressionStatement[2105-2132]:ExpressionStatement[2094-2121]"
    }, {
      "left" : "this.nonce = nonce;",
      "right" : "this.nonce = nonce;",
      "info" : "ExpressionStatement[2148-2167]:ExpressionStatement[2134-2153]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2195-2204]:MarkerAnnotation[2173-2182]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2213-2222]:Modifier[2191-2200]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[2223-2227]:PrimitiveType[2201-2205]"
    }, {
      "left" : "generateTimestamp",
      "right" : "generateTimestamp",
      "info" : "SimpleName[2228-2245]:SimpleName[2206-2223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2248-2289]:Block[2226-2267]"
    }, {
      "left" : "return timestamp;",
      "right" : "return timestamp;",
      "info" : "ReturnStatement[2262-2279]:ReturnStatement[2240-2257]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2299-2308]:MarkerAnnotation[2277-2286]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2317-2326]:Modifier[2295-2304]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2327-2333]:SimpleType[2305-2311]"
    }, {
      "left" : "generateNonce",
      "right" : "generateNonce",
      "info" : "SimpleName[2334-2347]:SimpleName[2312-2325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2350-2387]:Block[2328-2365]"
    }, {
      "left" : "return nonce;",
      "right" : "return nonce;",
      "info" : "ReturnStatement[2364-2377]:ReturnStatement[2342-2355]"
    }, {
      "left" : "@Test(groups = \"fast\")",
      "right" : "@Test(groups = \"fast\")",
      "info" : "NormalAnnotation[2489-2511]:NormalAnnotation[4808-4830]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2516-2522]:Modifier[4126-4132]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2516-2522]:Modifier[4835-4841]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2523-2527]:PrimitiveType[4133-4137]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2523-2527]:PrimitiveType[4842-4846]"
    }, {
      "left" : "testGetCalculateSignature",
      "right" : "testSignatureBaseStringWithRawUri",
      "info" : "SimpleName[2528-2553]:SimpleName[4138-4171]"
    }, {
      "left" : "testGetCalculateSignature",
      "right" : "testGetCalculateSignature",
      "info" : "SimpleName[2528-2553]:SimpleName[4847-4872]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2556-3192]:Block[4875-5511]"
    }, {
      "left" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "right" : "ConsumerKey consumer = new ConsumerKey(\"9djdj82h48djs9d2\", CONSUMER_SECRET);",
      "info" : "VariableDeclarationStatement[2566-2636]:VariableDeclarationStatement[2514-2590]"
    }, {
      "left" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "right" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "info" : "VariableDeclarationStatement[2566-2636]:VariableDeclarationStatement[4885-4955]"
    }, {
      "left" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "right" : "RequestToken user = new RequestToken(\"kkk9d7dh3k39sjv7\", TOKEN_SECRET);",
      "info" : "VariableDeclarationStatement[2645-2707]:VariableDeclarationStatement[2599-2670]"
    }, {
      "left" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "right" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "info" : "VariableDeclarationStatement[2645-2707]:VariableDeclarationStatement[4964-5026]"
    }, {
      "left" : "OAuthSignatureCalculator calc = new OAuthSignatureCalculator(consumer, user);",
      "right" : "OAuthSignatureCalculator calc = new OAuthSignatureCalculator(consumer, user);",
      "info" : "VariableDeclarationStatement[2716-2793]:VariableDeclarationStatement[2679-2756]"
    }, {
      "left" : "OAuthSignatureCalculator calc = new OAuthSignatureCalculator(consumer, user);",
      "right" : "OAuthSignatureCalculator calc = new OAuthSignatureCalculator(consumer, user);",
      "info" : "VariableDeclarationStatement[2716-2793]:VariableDeclarationStatement[5035-5112]"
    }, {
      "left" : "List<Param> queryParams = new ArrayList<>();",
      "right" : "List<Param> queryParams = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[2802-2846]:VariableDeclarationStatement[5121-5165]"
    }, {
      "left" : "queryParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "right" : "queryParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "info" : "ExpressionStatement[2855-2906]:ExpressionStatement[5174-5225]"
    }, {
      "left" : "queryParams.add(new Param(\"size\", \"original\"));",
      "right" : "queryParams.add(new Param(\"size\", \"original\"));",
      "info" : "ExpressionStatement[2915-2962]:ExpressionStatement[5234-5281]"
    }, {
      "left" : "String url = \"http://photos.example.net/photos\";",
      "right" : "String url = \"http://photos.example.net/photos\";",
      "info" : "VariableDeclarationStatement[2971-3019]:VariableDeclarationStatement[5290-5338]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3028-3034]:SimpleType[2766-2772]"
    }, {
      "left" : "String sig = calc.calculateSignature(\"GET\", Uri.create(url), TIMESTAMP, NONCE, null, queryParams);",
      "right" : "String sig = calc.calculateSignature(\"GET\", Uri.create(url), TIMESTAMP, NONCE, null, queryParams);",
      "info" : "VariableDeclarationStatement[3028-3126]:VariableDeclarationStatement[5347-5445]"
    }, {
      "left" : "calc",
      "right" : "calc",
      "info" : "METHOD_INVOCATION_RECEIVER[3041-3045]:METHOD_INVOCATION_RECEIVER[2795-2799]"
    }, {
      "left" : "assertEquals(sig, \"tR3+Ty81lMeYAr/Fid0kMTYa/WM=\");",
      "right" : "assertEquals(sig, \"tR3+Ty81lMeYAr/Fid0kMTYa/WM=\");",
      "info" : "ExpressionStatement[3136-3186]:ExpressionStatement[5455-5505]"
    }, {
      "left" : "sig",
      "right" : "signatureBaseString",
      "info" : "SimpleName[3149-3152]:SimpleName[2800-2819]"
    }, {
      "left" : "@Test(groups = \"fast\")",
      "right" : "@Test(groups = \"fast\")",
      "info" : "NormalAnnotation[3198-3220]:NormalAnnotation[3699-3721]"
    }, {
      "left" : "@Test(groups = \"fast\")",
      "right" : "@Test(groups = \"fast\")",
      "info" : "NormalAnnotation[3198-3220]:NormalAnnotation[4099-4121]"
    }, {
      "left" : "@Test(groups = \"fast\")",
      "right" : "@Test(groups = \"fast\")",
      "info" : "NormalAnnotation[3198-3220]:NormalAnnotation[5517-5539]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3225-3231]:Modifier[3726-3732]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3225-3231]:Modifier[5544-5550]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3232-3236]:PrimitiveType[3733-3737]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3232-3236]:PrimitiveType[5551-5555]"
    }, {
      "left" : "testPostCalculateSignature",
      "right" : "testSignatureBaseStringWithProperlyEncodedUri",
      "info" : "SimpleName[3237-3263]:SimpleName[3738-3783]"
    }, {
      "left" : "testPostCalculateSignature",
      "right" : "testPostCalculateSignature",
      "info" : "SimpleName[3237-3263]:SimpleName[5556-5582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3266-5390]:Block[3786-4093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3266-5390]:Block[5585-7767]"
    }, {
      "left" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "right" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "info" : "VariableDeclarationStatement[3276-3346]:VariableDeclarationStatement[5595-5665]"
    }, {
      "left" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "right" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "info" : "VariableDeclarationStatement[3355-3417]:VariableDeclarationStatement[5674-5736]"
    }, {
      "left" : "OAuthSignatureCalculator calc = new StaticOAuthSignatureCalculator(consumer, user, TIMESTAMP, NONCE);",
      "right" : "OAuthSignatureCalculator calc = new StaticOAuthSignatureCalculator(consumer, user, TIMESTAMP, NONCE);",
      "info" : "VariableDeclarationStatement[3426-3527]:VariableDeclarationStatement[5745-5846]"
    }, {
      "left" : "List<Param> formParams = new ArrayList<Param>();",
      "right" : "List<Param> formParams = new ArrayList<Param>();",
      "info" : "VariableDeclarationStatement[3537-3585]:VariableDeclarationStatement[5856-5904]"
    }, {
      "left" : "formParams",
      "right" : "request",
      "info" : "SimpleName[3594-3604]:SimpleName[2839-2846]"
    }, {
      "left" : "formParams.add(new Param(\"file\", \"vacation.jpg\"))",
      "right" : "request.getMethod()",
      "info" : "MethodInvocation[3594-3643]:MethodInvocation[2839-2858]"
    }, {
      "left" : "formParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "right" : "formParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "info" : "ExpressionStatement[3594-3644]:ExpressionStatement[5913-5963]"
    }, {
      "left" : "add",
      "right" : "getMethod",
      "info" : "SimpleName[3605-3608]:SimpleName[2847-2856]"
    }, {
      "left" : "formParams.add(new Param(\"size\", \"original\"));",
      "right" : "formParams.add(new Param(\"size\", \"original\"));",
      "info" : "ExpressionStatement[3653-3699]:ExpressionStatement[5972-6018]"
    }, {
      "left" : "String url = \"http://photos.example.net/photos\";",
      "right" : "String url = \"http://photos.example.net/photos\";",
      "info" : "VariableDeclarationStatement[3708-3756]:VariableDeclarationStatement[6027-6075]"
    }, {
      "left" : "final Request req = new RequestBuilder(\"POST\")\n                .setUri(Uri.create(url))\n                .setFormParams(formParams)\n                .setSignatureCalculator(calc).build();",
      "right" : "Request request = new RequestBuilder(\"POST\")//\n                .setUrl(\"http://example.com/request?b5=%3D%253D&a3=a&c%40=&a2=r%20b\")//\n                .addFormParam(\"c2\", \"\")//\n                .addFormParam(\"a3\", \"2 q\")//\n                .build();",
      "info" : "VariableDeclarationStatement[3765-3950]:VariableDeclarationStatement[3797-4044]"
    }, {
      "left" : "final Request req = new RequestBuilder(\"POST\")\n                .setUri(Uri.create(url))\n                .setFormParams(formParams)\n                .setSignatureCalculator(calc).build();",
      "right" : "final Request req = new RequestBuilder(\"POST\")//\n                .setUri(Uri.create(url))//\n                .setFormParams(formParams)//\n                .setSignatureCalculator(calc)//\n                .build();",
      "info" : "VariableDeclarationStatement[3765-3950]:VariableDeclarationStatement[6084-6294]"
    }, {
      "left" : "Request",
      "right" : "Request",
      "info" : "SimpleType[3771-3778]:SimpleType[2487-2494]"
    }, {
      "left" : "Request",
      "right" : "Request",
      "info" : "SimpleType[3771-3778]:SimpleType[4422-4429]"
    }, {
      "left" : "req",
      "right" : "request",
      "info" : "SimpleName[3779-3782]:SimpleName[3805-3812]"
    }, {
      "left" : "new RequestBuilder(\"POST\")\n                .setUri(Uri.create(url))",
      "right" : "request.getUri()",
      "info" : "MethodInvocation[3785-3852]:MethodInvocation[2878-2894]"
    }, {
      "left" : "new RequestBuilder(\"POST\")",
      "right" : "new RequestBuilder(\"POST\")",
      "info" : "METHOD_INVOCATION_RECEIVER[3785-3811]:METHOD_INVOCATION_RECEIVER[4440-4466]"
    }, {
      "left" : "RequestBuilder",
      "right" : "request",
      "info" : "SimpleName[3789-3803]:SimpleName[2878-2885]"
    }, {
      "left" : "setUri",
      "right" : "getUri",
      "info" : "SimpleName[3829-3835]:SimpleName[2886-2892]"
    }, {
      "left" : "setUri",
      "right" : "setUrl",
      "info" : "SimpleName[3829-3835]:SimpleName[3861-3867]"
    }, {
      "left" : "url",
      "right" : "\"http://example.com/request?b5=%3D%253D&a3=a&c%40=&a2=r%20b\"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[3847-3850]:METHOD_INVOCATION_ARGUMENTS[3868-3928]"
    }, {
      "left" : "setFormParams",
      "right" : "addFormParam",
      "info" : "SimpleName[3870-3883]:SimpleName[3949-3961]"
    }, {
      "left" : "setSignatureCalculator",
      "right" : "addFormParam",
      "info" : "SimpleName[3913-3935]:SimpleName[3991-4003]"
    }, {
      "left" : "String authHeader = req.getHeaders().get(\"Authorization\").get(0);",
      "right" : "String authHeader = req.getHeaders().get(\"Authorization\").get(0);",
      "info" : "VariableDeclarationStatement[4898-4963]:VariableDeclarationStatement[7275-7340]"
    }, {
      "left" : "req",
      "right" : "request",
      "info" : "METHOD_INVOCATION_RECEIVER[4918-4921]:METHOD_INVOCATION_RECEIVER[2973-2980]"
    }, {
      "left" : "req.getHeaders().get(\"Authorization\")",
      "right" : "request.getFormParams()",
      "info" : "MethodInvocation[4918-4955]:MethodInvocation[2973-2996]"
    }, {
      "left" : "get",
      "right" : "getFormParams",
      "info" : "SimpleName[4935-4938]:SimpleName[2981-2994]"
    }, {
      "left" : "Matcher m = Pattern.compile(\"oauth_signature=\\\"(.+?)\\\"\").matcher(authHeader);",
      "right" : "Matcher m = Pattern.compile(\"oauth_signature=\\\"(.+?)\\\"\").matcher(authHeader);",
      "info" : "VariableDeclarationStatement[4972-5049]:VariableDeclarationStatement[7349-7426]"
    }, {
      "left" : "assertEquals",
      "right" : "testSignatureBaseString",
      "info" : "SimpleName[5058-5070]:SimpleName[4054-4077]"
    }, {
      "left" : "assertEquals(m.find(), true);",
      "right" : "testSignatureBaseString(request);",
      "info" : "ExpressionStatement[5058-5087]:ExpressionStatement[4054-4087]"
    }, {
      "left" : "assertEquals(m.find(), true);",
      "right" : "assertEquals(m.find(), true);",
      "info" : "ExpressionStatement[5058-5087]:ExpressionStatement[7435-7464]"
    }, {
      "left" : "m",
      "right" : "request",
      "info" : "SimpleName[5071-5072]:SimpleName[4078-4085]"
    }, {
      "left" : "String encodedSig = m.group(1);",
      "right" : "String encodedSig = m.group(1);",
      "info" : "VariableDeclarationStatement[5096-5127]:VariableDeclarationStatement[7473-7504]"
    }, {
      "left" : "m",
      "right" : "request",
      "info" : "SimpleName[5116-5117]:SimpleName[3016-3023]"
    }, {
      "left" : "m.group(1)",
      "right" : "request.getQueryParams()",
      "info" : "MethodInvocation[5116-5126]:MethodInvocation[3016-3040]"
    }, {
      "left" : "group",
      "right" : "getQueryParams",
      "info" : "SimpleName[5118-5123]:SimpleName[3024-3038]"
    }, {
      "left" : "String",
      "right" : "toString",
      "info" : "SimpleName[5136-5142]:SimpleName[3042-3050]"
    }, {
      "left" : "String sig = null;",
      "right" : "String sig = null;",
      "info" : "VariableDeclarationStatement[5136-5154]:VariableDeclarationStatement[7513-7531]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5163-5324]:TryStatement[7540-7701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5167-5236]:Block[7544-7613]"
    }, {
      "left" : "sig = URLDecoder.decode(encodedSig, \"UTF-8\");",
      "right" : "sig = URLDecoder.decode(encodedSig, \"UTF-8\");",
      "info" : "ExpressionStatement[5181-5226]:ExpressionStatement[7558-7603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5276-5324]:Block[7653-7701]"
    }, {
      "left" : "fail(\"bad encoding\", e);",
      "right" : "fail(\"bad encoding\", e);",
      "info" : "ExpressionStatement[5290-5314]:ExpressionStatement[7667-7691]"
    }, {
      "left" : "assertEquals",
      "right" : "assertEquals",
      "info" : "SimpleName[5334-5346]:SimpleName[3063-3075]"
    }, {
      "left" : "assertEquals(sig, \"wPkvxykrw+BTdCcGqKr+3I+PsiM=\");",
      "right" : "assertEquals(sig, \"wPkvxykrw+BTdCcGqKr+3I+PsiM=\");",
      "info" : "ExpressionStatement[5334-5384]:ExpressionStatement[7711-7761]"
    }, {
      "left" : "sig",
      "right" : "signatureBaseString",
      "info" : "SimpleName[5347-5350]:SimpleName[3076-3095]"
    }, {
      "left" : "\"wPkvxykrw+BTdCcGqKr+3I+PsiM=\"",
      "right" : "\"POST&\"",
      "info" : "StringLiteral[5352-5382]:StringLiteral[3097-3104]"
    }, {
      "left" : "@Test(groups = \"fast\")",
      "right" : "@Test(groups = \"fast\")",
      "info" : "NormalAnnotation[5396-5418]:NormalAnnotation[7773-7795]"
    }, {
      "left" : "\"fast\"",
      "right" : "\"http%3A%2F%2Fexample.com%2Frequest\"",
      "info" : "StringLiteral[5411-5417]:StringLiteral[3126-3162]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5423-5429]:Modifier[7800-7806]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5430-5434]:PrimitiveType[7807-7811]"
    }, {
      "left" : "testGetWithRequestBuilder",
      "right" : "testGetWithRequestBuilder",
      "info" : "SimpleName[5435-5460]:SimpleName[7812-7837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5463-7711]:Block[7840-10142]"
    }, {
      "left" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "right" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "info" : "VariableDeclarationStatement[5473-5543]:VariableDeclarationStatement[7850-7920]"
    }, {
      "left" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "right" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "info" : "VariableDeclarationStatement[5552-5614]:VariableDeclarationStatement[7929-7991]"
    }, {
      "left" : "OAuthSignatureCalculator calc = new StaticOAuthSignatureCalculator(consumer, user, TIMESTAMP, NONCE);",
      "right" : "OAuthSignatureCalculator calc = new StaticOAuthSignatureCalculator(consumer, user, TIMESTAMP, NONCE);",
      "info" : "VariableDeclarationStatement[5623-5724]:VariableDeclarationStatement[8000-8101]"
    }, {
      "left" : "List<Param> queryParams = new ArrayList<Param>();",
      "right" : "List<Param> queryParams = new ArrayList<Param>();",
      "info" : "VariableDeclarationStatement[5734-5783]:VariableDeclarationStatement[8111-8160]"
    }, {
      "left" : "queryParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "right" : "queryParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "info" : "ExpressionStatement[5792-5843]:ExpressionStatement[8169-8220]"
    }, {
      "left" : "\"file\"",
      "right" : "\"&a2%3Dr%2520b%26\"",
      "info" : "StringLiteral[5818-5824]:StringLiteral[3184-3202]"
    }, {
      "left" : "\"vacation.jpg\"",
      "right" : "\"a3%3D2%2520q%26\"",
      "info" : "StringLiteral[5826-5840]:StringLiteral[3223-3240]"
    }, {
      "left" : "queryParams.add(new Param(\"size\", \"original\"));",
      "right" : "queryParams.add(new Param(\"size\", \"original\"));",
      "info" : "ExpressionStatement[5852-5899]:ExpressionStatement[8229-8276]"
    }, {
      "left" : "\"size\"",
      "right" : "\"a3%3Da%26\"",
      "info" : "StringLiteral[5878-5884]:StringLiteral[3243-3254]"
    }, {
      "left" : "\"original\"",
      "right" : "\"b5%3D%253D%25253D%26\"",
      "info" : "StringLiteral[5886-5896]:StringLiteral[3275-3297]"
    }, {
      "left" : "String url = \"http://photos.example.net/photos\";",
      "right" : "String url = \"http://photos.example.net/photos\";",
      "info" : "VariableDeclarationStatement[5908-5956]:VariableDeclarationStatement[8285-8333]"
    }, {
      "left" : "\"http://photos.example.net/photos\"",
      "right" : "\"c%2540%3D%26\"",
      "info" : "StringLiteral[5921-5955]:StringLiteral[3318-3332]"
    }, {
      "left" : "final Request req = new RequestBuilder(\"GET\")\n                .setUri(Uri.create(url))\n                .setQueryParams(queryParams)\n                .setSignatureCalculator(calc).build();",
      "right" : "Request request = new RequestBuilder(\"POST\")//\n                .setUrl(\"http://example.com/request?b5=%3D%253D&a3=a&c%40=&a2=r b\")//\n                .addFormParam(\"c2\", \"\")//\n                .addFormParam(\"a3\", \"2 q\")//\n                .build();",
      "info" : "VariableDeclarationStatement[5966-6152]:VariableDeclarationStatement[4422-4667]"
    }, {
      "left" : "final Request req = new RequestBuilder(\"GET\")\n                .setUri(Uri.create(url))\n                .setQueryParams(queryParams)\n                .setSignatureCalculator(calc).build();",
      "right" : "final Request req = new RequestBuilder(\"GET\")//\n                .setUri(Uri.create(url))//\n                .setQueryParams(queryParams)//\n                .setSignatureCalculator(calc)//\n                .build();",
      "info" : "VariableDeclarationStatement[5966-6152]:VariableDeclarationStatement[8343-8554]"
    }, {
      "left" : "req",
      "right" : "request",
      "info" : "SimpleName[5980-5983]:SimpleName[4430-4437]"
    }, {
      "left" : "\"GET\"",
      "right" : "\"c2%3D%26\"",
      "info" : "StringLiteral[6005-6010]:StringLiteral[3353-3363]"
    }, {
      "left" : "setUri",
      "right" : "setUrl",
      "info" : "SimpleName[6029-6035]:SimpleName[4486-4492]"
    }, {
      "left" : "url",
      "right" : "\"http://example.com/request?b5=%3D%253D&a3=a&c%40=&a2=r b\"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[6047-6050]:METHOD_INVOCATION_ARGUMENTS[4493-4551]"
    }, {
      "left" : "setQueryParams",
      "right" : "addFormParam",
      "info" : "SimpleName[6070-6084]:SimpleName[4572-4584]"
    }, {
      "left" : "setSignatureCalculator",
      "right" : "addFormParam",
      "info" : "SimpleName[6115-6137]:SimpleName[4614-4626]"
    }, {
      "left" : "final List<Param> params = req.getQueryParams();",
      "right" : "final List<Param> params = req.getQueryParams();",
      "info" : "VariableDeclarationStatement[6162-6210]:VariableDeclarationStatement[8564-8612]"
    }, {
      "left" : "assertEquals",
      "right" : "testSignatureBaseString",
      "info" : "SimpleName[6219-6231]:SimpleName[4677-4700]"
    }, {
      "left" : "assertEquals(params.size(), 2);",
      "right" : "testSignatureBaseString(request);",
      "info" : "ExpressionStatement[6219-6250]:ExpressionStatement[4677-4710]"
    }, {
      "left" : "assertEquals(params.size(), 2);",
      "right" : "assertEquals(params.size(), 2);",
      "info" : "ExpressionStatement[6219-6250]:ExpressionStatement[8621-8652]"
    }, {
      "left" : "params",
      "right" : "request",
      "info" : "SimpleName[6232-6238]:SimpleName[4701-4708]"
    }, {
      "left" : "String authHeader = req.getHeaders().get(\"Authorization\").get(0);",
      "right" : "String authHeader = req.getHeaders().get(\"Authorization\").get(0);",
      "info" : "VariableDeclarationStatement[7218-7283]:VariableDeclarationStatement[9649-9714]"
    }, {
      "left" : "\"Authorization\"",
      "right" : "\"oauth_nonce%3D7d8f3e4a%26\"",
      "info" : "StringLiteral[7259-7274]:StringLiteral[3447-3474]"
    }, {
      "left" : "Matcher m = Pattern.compile(\"oauth_signature=\\\"(.+?)\\\"\").matcher(authHeader);",
      "right" : "Matcher m = Pattern.compile(\"oauth_signature=\\\"(.+?)\\\"\").matcher(authHeader);",
      "info" : "VariableDeclarationStatement[7292-7369]:VariableDeclarationStatement[9723-9800]"
    }, {
      "left" : "\"oauth_signature=\\\"(.+?)\\\"\"",
      "right" : "\"oauth_signature_method%3DHMAC-SHA1%26\"",
      "info" : "StringLiteral[7320-7347]:StringLiteral[3495-3534]"
    }, {
      "left" : "assertEquals(m.find(), true);",
      "right" : "assertEquals(m.find(), true);",
      "info" : "ExpressionStatement[7378-7407]:ExpressionStatement[9809-9838]"
    }, {
      "left" : "String encodedSig = m.group(1);",
      "right" : "String encodedSig = m.group(1);",
      "info" : "VariableDeclarationStatement[7416-7447]:VariableDeclarationStatement[9847-9878]"
    }, {
      "left" : "String sig = null;",
      "right" : "String sig = null;",
      "info" : "VariableDeclarationStatement[7456-7474]:VariableDeclarationStatement[9887-9905]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7483-7644]:TryStatement[9914-10075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7487-7556]:Block[9918-9987]"
    }, {
      "left" : "sig = URLDecoder.decode(encodedSig, \"UTF-8\");",
      "right" : "sig = URLDecoder.decode(encodedSig, \"UTF-8\");",
      "info" : "ExpressionStatement[7501-7546]:ExpressionStatement[9932-9977]"
    }, {
      "left" : "\"UTF-8\"",
      "right" : "\"oauth_timestamp%3D137131201%26\"",
      "info" : "StringLiteral[7537-7544]:StringLiteral[3555-3587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7596-7644]:Block[10027-10075]"
    }, {
      "left" : "fail(\"bad encoding\", e);",
      "right" : "fail(\"bad encoding\", e);",
      "info" : "ExpressionStatement[7610-7634]:ExpressionStatement[10041-10065]"
    }, {
      "left" : "\"bad encoding\"",
      "right" : "\"oauth_token%3Dkkk9d7dh3k39sjv7%26\"",
      "info" : "StringLiteral[7615-7629]:StringLiteral[3608-3643]"
    }, {
      "left" : "assertEquals(sig, \"tR3+Ty81lMeYAr/Fid0kMTYa/WM=\");",
      "right" : "assertEquals(sig, \"tR3+Ty81lMeYAr/Fid0kMTYa/WM=\");",
      "info" : "ExpressionStatement[7654-7704]:ExpressionStatement[10085-10135]"
    }, {
      "left" : "\"tR3+Ty81lMeYAr/Fid0kMTYa/WM=\"",
      "right" : "\"oauth_version%3D1.0\"",
      "info" : "StringLiteral[7672-7702]:StringLiteral[3664-3685]"
    } ]
  },
  "interFileMappings" : { }
}