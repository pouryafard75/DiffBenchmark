{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CategoryPlot",
      "right" : "CategoryPlot",
      "info" : "TypeDeclaration[11186-135830]:TypeDeclaration[11186-136058]"
    }, {
      "left" : "private static final long serialVersionUID = -3537691700434728188L;",
      "right" : "private static final long serialVersionUID = -3537691700434728188L;",
      "info" : "FieldDeclaration[11510-11608]:FieldDeclaration[11510-11608]"
    }, {
      "left" : "public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;",
      "right" : "public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;",
      "info" : "FieldDeclaration[11620-11800]:FieldDeclaration[11620-11800]"
    }, {
      "left" : "public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;",
      "right" : "public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;",
      "info" : "FieldDeclaration[11808-11985]:FieldDeclaration[11808-11985]"
    }, {
      "left" : "public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\r\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] \r\n            {2.0f, 2.0f}, 0.0f);",
      "right" : "public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\r\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] \r\n            {2.0f, 2.0f}, 0.0f);",
      "info" : "FieldDeclaration[11993-12221]:FieldDeclaration[11993-12221]"
    }, {
      "left" : "public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;",
      "right" : "public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;",
      "info" : "FieldDeclaration[12229-12333]:FieldDeclaration[12229-12333]"
    }, {
      "left" : "public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(\"SansSerif\", \r\n            Font.PLAIN, 10);",
      "right" : "public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(\"SansSerif\", \r\n            Font.PLAIN, 10);",
      "info" : "FieldDeclaration[12341-12487]:FieldDeclaration[12341-12487]"
    }, {
      "left" : "public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;",
      "right" : "public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;",
      "info" : "FieldDeclaration[12495-12649]:FieldDeclaration[12495-12649]"
    }, {
      "left" : "public static final Stroke DEFAULT_CROSSHAIR_STROKE\r\n            = DEFAULT_GRIDLINE_STROKE;",
      "right" : "public static final Stroke DEFAULT_CROSSHAIR_STROKE\r\n            = DEFAULT_GRIDLINE_STROKE;",
      "info" : "FieldDeclaration[12657-12836]:FieldDeclaration[12657-12836]"
    }, {
      "left" : "public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;",
      "right" : "public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;",
      "info" : "FieldDeclaration[12844-12994]:FieldDeclaration[12844-12994]"
    }, {
      "left" : "protected static ResourceBundle localizationResources \r\n            = ResourceBundle.getBundle(\r\n            \"org.jfree.chart.plot.LocalizationBundle\");",
      "right" : "protected static ResourceBundle localizationResources \r\n            = ResourceBundle.getBundle(\r\n            \"org.jfree.chart.plot.LocalizationBundle\");",
      "info" : "FieldDeclaration[13002-13207]:FieldDeclaration[13002-13207]"
    }, {
      "left" : "private PlotOrientation orientation;",
      "right" : "private PlotOrientation orientation;",
      "info" : "FieldDeclaration[13215-13285]:FieldDeclaration[13215-13285]"
    }, {
      "left" : "private RectangleInsets axisOffset;",
      "right" : "private RectangleInsets axisOffset;",
      "info" : "FieldDeclaration[13293-13387]:FieldDeclaration[13293-13387]"
    }, {
      "left" : "private ObjectList domainAxes;",
      "right" : "private ObjectList domainAxes;",
      "info" : "FieldDeclaration[13395-13466]:FieldDeclaration[13395-13466]"
    }, {
      "left" : "private ObjectList domainAxisLocations;",
      "right" : "private ObjectList domainAxisLocations;",
      "info" : "FieldDeclaration[13474-13564]:FieldDeclaration[13474-13564]"
    }, {
      "left" : "private boolean drawSharedDomainAxis;",
      "right" : "private boolean drawSharedDomainAxis;",
      "info" : "FieldDeclaration[13572-13770]:FieldDeclaration[13572-13770]"
    }, {
      "left" : "private ObjectList rangeAxes;",
      "right" : "private ObjectList rangeAxes;",
      "info" : "FieldDeclaration[13778-13847]:FieldDeclaration[13778-13847]"
    }, {
      "left" : "private ObjectList rangeAxisLocations;",
      "right" : "private ObjectList rangeAxisLocations;",
      "info" : "FieldDeclaration[13855-13943]:FieldDeclaration[13855-13943]"
    }, {
      "left" : "private ObjectList datasets;",
      "right" : "private ObjectList datasets;",
      "info" : "FieldDeclaration[13951-14017]:FieldDeclaration[13951-14017]"
    }, {
      "left" : "private ObjectList datasetToDomainAxisMap;",
      "right" : "private ObjectList datasetToDomainAxisMap;",
      "info" : "FieldDeclaration[14025-14130]:FieldDeclaration[14025-14130]"
    }, {
      "left" : "private ObjectList datasetToRangeAxisMap;",
      "right" : "private ObjectList datasetToRangeAxisMap;",
      "info" : "FieldDeclaration[14142-14245]:FieldDeclaration[14142-14245]"
    }, {
      "left" : "private ObjectList renderers;",
      "right" : "private ObjectList renderers;",
      "info" : "FieldDeclaration[14253-14321]:FieldDeclaration[14253-14321]"
    }, {
      "left" : "private DatasetRenderingOrder renderingOrder \r\n            = DatasetRenderingOrder.REVERSE;",
      "right" : "private DatasetRenderingOrder renderingOrder \r\n            = DatasetRenderingOrder.REVERSE;",
      "info" : "FieldDeclaration[14329-14461]:FieldDeclaration[14329-14461]"
    }, {
      "left" : "private SortOrder columnRenderingOrder = SortOrder.ASCENDING;",
      "right" : "private SortOrder columnRenderingOrder = SortOrder.ASCENDING;",
      "info" : "FieldDeclaration[14469-14652]:FieldDeclaration[14469-14652]"
    }, {
      "left" : "private SortOrder rowRenderingOrder = SortOrder.ASCENDING;",
      "right" : "private SortOrder rowRenderingOrder = SortOrder.ASCENDING;",
      "info" : "FieldDeclaration[14664-14841]:FieldDeclaration[14664-14841]"
    }, {
      "left" : "private boolean domainGridlinesVisible;",
      "right" : "private boolean domainGridlinesVisible;",
      "info" : "FieldDeclaration[14853-15006]:FieldDeclaration[14853-15006]"
    }, {
      "left" : "private CategoryAnchor domainGridlinePosition;",
      "right" : "private CategoryAnchor domainGridlinePosition;",
      "info" : "FieldDeclaration[15014-15135]:FieldDeclaration[15014-15135]"
    }, {
      "left" : "private transient Stroke domainGridlineStroke;",
      "right" : "private transient Stroke domainGridlineStroke;",
      "info" : "FieldDeclaration[15143-15248]:FieldDeclaration[15143-15248]"
    }, {
      "left" : "private transient Paint domainGridlinePaint;",
      "right" : "private transient Paint domainGridlinePaint;",
      "info" : "FieldDeclaration[15256-15359]:FieldDeclaration[15256-15359]"
    }, {
      "left" : "private boolean rangeGridlinesVisible;",
      "right" : "private boolean rangeGridlinesVisible;",
      "info" : "FieldDeclaration[15367-15518]:FieldDeclaration[15367-15518]"
    }, {
      "left" : "private transient Stroke rangeGridlineStroke;",
      "right" : "private transient Stroke rangeGridlineStroke;",
      "info" : "FieldDeclaration[15526-15634]:FieldDeclaration[15526-15634]"
    }, {
      "left" : "private transient Paint rangeGridlinePaint;",
      "right" : "private transient Paint rangeGridlinePaint;",
      "info" : "FieldDeclaration[15642-15747]:FieldDeclaration[15642-15747]"
    }, {
      "left" : "private double anchorValue;",
      "right" : "private double anchorValue;",
      "info" : "FieldDeclaration[15755-15812]:FieldDeclaration[15755-15812]"
    }, {
      "left" : "private boolean rangeCrosshairVisible;",
      "right" : "private boolean rangeCrosshairVisible;",
      "info" : "FieldDeclaration[15820-15934]:FieldDeclaration[15820-15934]"
    }, {
      "left" : "private double rangeCrosshairValue;",
      "right" : "private double rangeCrosshairValue;",
      "info" : "FieldDeclaration[15942-16016]:FieldDeclaration[15942-16016]"
    }, {
      "left" : "private transient Stroke rangeCrosshairStroke;",
      "right" : "private transient Stroke rangeCrosshairStroke;",
      "info" : "FieldDeclaration[16024-16133]:FieldDeclaration[16024-16133]"
    }, {
      "left" : "private transient Paint rangeCrosshairPaint;",
      "right" : "private transient Paint rangeCrosshairPaint;",
      "info" : "FieldDeclaration[16141-16244]:FieldDeclaration[16141-16244]"
    }, {
      "left" : "private boolean rangeCrosshairLockedOnData = true;",
      "right" : "private boolean rangeCrosshairLockedOnData = true;",
      "info" : "FieldDeclaration[16252-16420]:FieldDeclaration[16252-16420]"
    }, {
      "left" : "private Map foregroundDomainMarkers;",
      "right" : "private Map foregroundDomainMarkers;",
      "info" : "FieldDeclaration[16428-16531]:FieldDeclaration[16428-16531]"
    }, {
      "left" : "private Map backgroundDomainMarkers;",
      "right" : "private Map backgroundDomainMarkers;",
      "info" : "FieldDeclaration[16539-16642]:FieldDeclaration[16539-16642]"
    }, {
      "left" : "private Map foregroundRangeMarkers;",
      "right" : "private Map foregroundRangeMarkers;",
      "info" : "FieldDeclaration[16650-16751]:FieldDeclaration[16650-16751]"
    }, {
      "left" : "private Map backgroundRangeMarkers;",
      "right" : "private Map backgroundRangeMarkers;",
      "info" : "FieldDeclaration[16759-16860]:FieldDeclaration[16759-16860]"
    }, {
      "left" : "private List annotations;",
      "right" : "private List annotations;",
      "info" : "FieldDeclaration[16868-17084]:FieldDeclaration[16868-17084]"
    }, {
      "left" : "private int weight;",
      "right" : "private int weight;",
      "info" : "FieldDeclaration[17092-17244]:FieldDeclaration[17092-17244]"
    }, {
      "left" : "private AxisSpace fixedDomainAxisSpace;",
      "right" : "private AxisSpace fixedDomainAxisSpace;",
      "info" : "FieldDeclaration[17252-17340]:FieldDeclaration[17252-17340]"
    }, {
      "left" : "private AxisSpace fixedRangeAxisSpace;",
      "right" : "private AxisSpace fixedRangeAxisSpace;",
      "info" : "FieldDeclaration[17348-17434]:FieldDeclaration[17348-17434]"
    }, {
      "left" : "private LegendItemCollection fixedLegendItems;",
      "right" : "private LegendItemCollection fixedLegendItems;",
      "info" : "FieldDeclaration[17442-17617]:FieldDeclaration[17442-17617]"
    }, {
      "left" : "public CategoryPlot()",
      "right" : "public CategoryPlot()",
      "info" : "MethodDeclaration[17629-17745]:MethodDeclaration[17629-17745]"
    }, {
      "left" : "public CategoryPlot(CategoryDataset dataset,\r\n                        CategoryAxis domainAxis,\r\n                        ValueAxis rangeAxis,\r\n                        CategoryItemRenderer renderer)",
      "right" : "public CategoryPlot(CategoryDataset dataset,\r\n                        CategoryAxis domainAxis,\r\n                        ValueAxis rangeAxis,\r\n                        CategoryItemRenderer renderer)",
      "info" : "MethodDeclaration[17753-21193]:MethodDeclaration[17753-21193]"
    }, {
      "left" : "public String getPlotType()",
      "right" : "public String getPlotType()",
      "info" : "MethodDeclaration[21205-21413]:MethodDeclaration[21205-21413]"
    }, {
      "left" : "public PlotOrientation getOrientation()",
      "right" : "public PlotOrientation getOrientation()",
      "info" : "MethodDeclaration[21421-21700]:MethodDeclaration[21421-21700]"
    }, {
      "left" : "public void setOrientation(PlotOrientation orientation)",
      "right" : "public void setOrientation(PlotOrientation orientation)",
      "info" : "MethodDeclaration[21708-22254]:MethodDeclaration[21708-22254]"
    }, {
      "left" : "public RectangleInsets getAxisOffset()",
      "right" : "public RectangleInsets getAxisOffset()",
      "info" : "MethodDeclaration[22262-22514]:MethodDeclaration[22262-22514]"
    }, {
      "left" : "public void setAxisOffset(RectangleInsets offset)",
      "right" : "public void setAxisOffset(RectangleInsets offset)",
      "info" : "MethodDeclaration[22522-23067]:MethodDeclaration[22522-23067]"
    }, {
      "left" : "public CategoryAxis getDomainAxis()",
      "right" : "public CategoryAxis getDomainAxis()",
      "info" : "MethodDeclaration[23075-23499]:MethodDeclaration[23075-23499]"
    }, {
      "left" : "public CategoryAxis getDomainAxis(int index)",
      "right" : "public CategoryAxis getDomainAxis(int index)",
      "info" : "MethodDeclaration[23507-24215]:MethodDeclaration[23507-24215]"
    }, {
      "left" : "public void setDomainAxis(CategoryAxis axis)",
      "right" : "public void setDomainAxis(CategoryAxis axis)",
      "info" : "MethodDeclaration[24223-24550]:MethodDeclaration[24223-24550]"
    }, {
      "left" : "public void setDomainAxis(int index, CategoryAxis axis)",
      "right" : "public void setDomainAxis(int index, CategoryAxis axis)",
      "info" : "MethodDeclaration[24558-24933]:MethodDeclaration[24558-24933]"
    }, {
      "left" : "public void setDomainAxis(int index, CategoryAxis axis, boolean notify)",
      "right" : "public void setDomainAxis(int index, CategoryAxis axis, boolean notify)",
      "info" : "MethodDeclaration[24942-25795]:MethodDeclaration[24942-25795]"
    }, {
      "left" : "public void setDomainAxes(CategoryAxis[] axes)",
      "right" : "public void setDomainAxes(CategoryAxis[] axes)",
      "info" : "MethodDeclaration[25803-26278]:MethodDeclaration[25803-26278]"
    }, {
      "left" : "public int getDomainAxisIndex(CategoryAxis axis)",
      "right" : "public int getDomainAxisIndex(CategoryAxis axis)",
      "info" : "MethodDeclaration[26290-26759]:MethodDeclaration[26290-26873]"
    }, {
      "left" : "public AxisLocation getDomainAxisLocation()",
      "right" : "public AxisLocation getDomainAxisLocation()",
      "info" : "MethodDeclaration[26771-27063]:MethodDeclaration[26885-27177]"
    }, {
      "left" : "public AxisLocation getDomainAxisLocation(int index)",
      "right" : "public AxisLocation getDomainAxisLocation(int index)",
      "info" : "MethodDeclaration[27071-27664]:MethodDeclaration[27185-27778]"
    }, {
      "left" : "public void setDomainAxisLocation(AxisLocation location)",
      "right" : "public void setDomainAxisLocation(AxisLocation location)",
      "info" : "MethodDeclaration[27672-28136]:MethodDeclaration[27786-28250]"
    }, {
      "left" : "public void setDomainAxisLocation(AxisLocation location, boolean notify)",
      "right" : "public void setDomainAxisLocation(AxisLocation location, boolean notify)",
      "info" : "MethodDeclaration[28144-28616]:MethodDeclaration[28258-28730]"
    }, {
      "left" : "public void setDomainAxisLocation(int index, AxisLocation location)",
      "right" : "public void setDomainAxisLocation(int index, AxisLocation location)",
      "info" : "MethodDeclaration[28624-29103]:MethodDeclaration[28738-29217]"
    }, {
      "left" : "public void setDomainAxisLocation(int index, AxisLocation location, \r\n            boolean notify)",
      "right" : "public void setDomainAxisLocation(int index, AxisLocation location, \r\n            boolean notify)",
      "info" : "MethodDeclaration[29115-29949]:MethodDeclaration[29229-30063]"
    }, {
      "left" : "public RectangleEdge getDomainAxisEdge()",
      "right" : "public RectangleEdge getDomainAxisEdge()",
      "info" : "MethodDeclaration[29957-30234]:MethodDeclaration[30071-30348]"
    }, {
      "left" : "public RectangleEdge getDomainAxisEdge(int index)",
      "right" : "public RectangleEdge getDomainAxisEdge(int index)",
      "info" : "MethodDeclaration[30242-30814]:MethodDeclaration[30356-30928]"
    }, {
      "left" : "public int getDomainAxisCount()",
      "right" : "public int getDomainAxisCount()",
      "info" : "MethodDeclaration[30822-31003]:MethodDeclaration[30936-31117]"
    }, {
      "left" : "public void clearDomainAxes()",
      "right" : "public void clearDomainAxes()",
      "info" : "MethodDeclaration[31011-31513]:MethodDeclaration[31125-31627]"
    }, {
      "left" : "public void configureDomainAxes()",
      "right" : "public void configureDomainAxes()",
      "info" : "MethodDeclaration[31521-31843]:MethodDeclaration[31635-31957]"
    }, {
      "left" : "public ValueAxis getRangeAxis()",
      "right" : "public ValueAxis getRangeAxis()",
      "info" : "MethodDeclaration[31851-32200]:MethodDeclaration[31965-32314]"
    }, {
      "left" : "public ValueAxis getRangeAxis(int index)",
      "right" : "public ValueAxis getRangeAxis(int index)",
      "info" : "MethodDeclaration[32208-32846]:MethodDeclaration[32322-32960]"
    }, {
      "left" : "public void setRangeAxis(ValueAxis axis)",
      "right" : "public void setRangeAxis(ValueAxis axis)",
      "info" : "MethodDeclaration[32854-33136]:MethodDeclaration[32968-33250]"
    }, {
      "left" : "public void setRangeAxis(int index, ValueAxis axis)",
      "right" : "public void setRangeAxis(int index, ValueAxis axis)",
      "info" : "MethodDeclaration[33144-33440]:MethodDeclaration[33258-33554]"
    }, {
      "left" : "public void setRangeAxis(int index, ValueAxis axis, boolean notify)",
      "right" : "public void setRangeAxis(int index, ValueAxis axis, boolean notify)",
      "info" : "MethodDeclaration[33456-34266]:MethodDeclaration[33570-34380]"
    }, {
      "left" : "public void setRangeAxes(ValueAxis[] axes)",
      "right" : "public void setRangeAxes(ValueAxis[] axes)",
      "info" : "MethodDeclaration[34274-34747]:MethodDeclaration[34388-34861]"
    }, {
      "left" : "public int getRangeAxisIndex(ValueAxis axis)",
      "right" : "public int getRangeAxisIndex(ValueAxis axis)",
      "info" : "MethodDeclaration[34761-35533]:MethodDeclaration[34875-35761]"
    }, {
      "left" : "public AxisLocation getRangeAxisLocation()",
      "right" : "public AxisLocation getRangeAxisLocation()",
      "info" : "MethodDeclaration[35545-35760]:MethodDeclaration[35773-35988]"
    }, {
      "left" : "public AxisLocation getRangeAxisLocation(int index)",
      "right" : "public AxisLocation getRangeAxisLocation(int index)",
      "info" : "MethodDeclaration[35768-36355]:MethodDeclaration[35996-36583]"
    }, {
      "left" : "public void setRangeAxisLocation(AxisLocation location)",
      "right" : "public void setRangeAxisLocation(AxisLocation location)",
      "info" : "MethodDeclaration[36363-36846]:MethodDeclaration[36591-37074]"
    }, {
      "left" : "public void setRangeAxisLocation(AxisLocation location, boolean notify)",
      "right" : "public void setRangeAxisLocation(AxisLocation location, boolean notify)",
      "info" : "MethodDeclaration[36854-37327]:MethodDeclaration[37082-37555]"
    }, {
      "left" : "public void setRangeAxisLocation(int index, AxisLocation location)",
      "right" : "public void setRangeAxisLocation(int index, AxisLocation location)",
      "info" : "MethodDeclaration[37335-37796]:MethodDeclaration[37563-38024]"
    }, {
      "left" : "public void setRangeAxisLocation(int index, AxisLocation location, \r\n                                     boolean notify)",
      "right" : "public void setRangeAxisLocation(int index, AxisLocation location, \r\n                                     boolean notify)",
      "info" : "MethodDeclaration[37804-38629]:MethodDeclaration[38032-38857]"
    }, {
      "left" : "public RectangleEdge getRangeAxisEdge()",
      "right" : "public RectangleEdge getRangeAxisEdge()",
      "info" : "MethodDeclaration[38637-38866]:MethodDeclaration[38865-39094]"
    }, {
      "left" : "public RectangleEdge getRangeAxisEdge(int index)",
      "right" : "public RectangleEdge getRangeAxisEdge(int index)",
      "info" : "MethodDeclaration[38874-39376]:MethodDeclaration[39102-39604]"
    }, {
      "left" : "public int getRangeAxisCount()",
      "right" : "public int getRangeAxisCount()",
      "info" : "MethodDeclaration[39384-39562]:MethodDeclaration[39612-39790]"
    }, {
      "left" : "public void clearRangeAxes()",
      "right" : "public void clearRangeAxes()",
      "info" : "MethodDeclaration[39570-40062]:MethodDeclaration[39798-40290]"
    }, {
      "left" : "public void configureRangeAxes()",
      "right" : "public void configureRangeAxes()",
      "info" : "MethodDeclaration[40070-40382]:MethodDeclaration[40298-40610]"
    }, {
      "left" : "public CategoryDataset getDataset()",
      "right" : "public CategoryDataset getDataset()",
      "info" : "MethodDeclaration[40390-40658]:MethodDeclaration[40618-40886]"
    }, {
      "left" : "public CategoryDataset getDataset(int index)",
      "right" : "public CategoryDataset getDataset(int index)",
      "info" : "MethodDeclaration[40666-41142]:MethodDeclaration[40894-41370]"
    }, {
      "left" : "public void setDataset(CategoryDataset dataset)",
      "right" : "public void setDataset(CategoryDataset dataset)",
      "info" : "MethodDeclaration[41150-41680]:MethodDeclaration[41378-41908]"
    }, {
      "left" : "public void setDataset(int index, CategoryDataset dataset)",
      "right" : "public void setDataset(int index, CategoryDataset dataset)",
      "info" : "MethodDeclaration[41688-42460]:MethodDeclaration[41916-42688]"
    }, {
      "left" : "public int getDatasetCount()",
      "right" : "public int getDatasetCount()",
      "info" : "MethodDeclaration[42468-42679]:MethodDeclaration[42696-42907]"
    }, {
      "left" : "public void mapDatasetToDomainAxis(int index, int axisIndex)",
      "right" : "public void mapDatasetToDomainAxis(int index, int axisIndex)",
      "info" : "MethodDeclaration[42687-43205]:MethodDeclaration[42915-43433]"
    }, {
      "left" : "public CategoryAxis getDomainAxisForDataset(int index)",
      "right" : "public CategoryAxis getDomainAxisForDataset(int index)",
      "info" : "MethodDeclaration[43213-43856]:MethodDeclaration[43441-44084]"
    }, {
      "left" : "public void mapDatasetToRangeAxis(int index, int axisIndex)",
      "right" : "public void mapDatasetToRangeAxis(int index, int axisIndex)",
      "info" : "MethodDeclaration[43868-44380]:MethodDeclaration[44096-44608]"
    }, {
      "left" : "public ValueAxis getRangeAxisForDataset(int index)",
      "right" : "public ValueAxis getRangeAxisForDataset(int index)",
      "info" : "MethodDeclaration[44388-45017]:MethodDeclaration[44616-45245]"
    }, {
      "left" : "public CategoryItemRenderer getRenderer()",
      "right" : "public CategoryItemRenderer getRenderer()",
      "info" : "MethodDeclaration[45029-45282]:MethodDeclaration[45257-45510]"
    }, {
      "left" : "public CategoryItemRenderer getRenderer(int index)",
      "right" : "public CategoryItemRenderer getRenderer(int index)",
      "info" : "MethodDeclaration[45290-45793]:MethodDeclaration[45518-46021]"
    }, {
      "left" : "public void setRenderer(CategoryItemRenderer renderer)",
      "right" : "public void setRenderer(CategoryItemRenderer renderer)",
      "info" : "MethodDeclaration[45805-46210]:MethodDeclaration[46033-46438]"
    }, {
      "left" : "public void setRenderer(CategoryItemRenderer renderer, boolean notify)",
      "right" : "public void setRenderer(CategoryItemRenderer renderer, boolean notify)",
      "info" : "MethodDeclaration[46218-46944]:MethodDeclaration[46446-47172]"
    }, {
      "left" : "public void setRenderer(int index, CategoryItemRenderer renderer)",
      "right" : "public void setRenderer(int index, CategoryItemRenderer renderer)",
      "info" : "MethodDeclaration[46952-47427]:MethodDeclaration[47180-47655]"
    }, {
      "left" : "public void setRenderer(int index, CategoryItemRenderer renderer, \r\n                            boolean notify)",
      "right" : "public void setRenderer(int index, CategoryItemRenderer renderer, \r\n                            boolean notify)",
      "info" : "MethodDeclaration[47435-48525]:MethodDeclaration[47663-48753]"
    }, {
      "left" : "public void setRenderers(CategoryItemRenderer[] renderers)",
      "right" : "public void setRenderers(CategoryItemRenderer[] renderers)",
      "info" : "MethodDeclaration[48533-48953]:MethodDeclaration[48761-49181]"
    }, {
      "left" : "public CategoryItemRenderer getRendererForDataset(CategoryDataset dataset)",
      "right" : "public CategoryItemRenderer getRendererForDataset(CategoryDataset dataset)",
      "info" : "MethodDeclaration[48965-49665]:MethodDeclaration[49193-49893]"
    }, {
      "left" : "public int getIndexOf(CategoryItemRenderer renderer)",
      "right" : "public int getIndexOf(CategoryItemRenderer renderer)",
      "info" : "MethodDeclaration[49677-50055]:MethodDeclaration[49905-50283]"
    }, {
      "left" : "public DatasetRenderingOrder getDatasetRenderingOrder()",
      "right" : "public DatasetRenderingOrder getDatasetRenderingOrder()",
      "info" : "MethodDeclaration[50063-50359]:MethodDeclaration[50291-50587]"
    }, {
      "left" : "public void setDatasetRenderingOrder(DatasetRenderingOrder order)",
      "right" : "public void setDatasetRenderingOrder(DatasetRenderingOrder order)",
      "info" : "MethodDeclaration[50367-51085]:MethodDeclaration[50595-51313]"
    }, {
      "left" : "public SortOrder getColumnRenderingOrder()",
      "right" : "public SortOrder getColumnRenderingOrder()",
      "info" : "MethodDeclaration[51093-51470]:MethodDeclaration[51321-51698]"
    }, {
      "left" : "public void setColumnRenderingOrder(SortOrder order)",
      "right" : "public void setColumnRenderingOrder(SortOrder order)",
      "info" : "MethodDeclaration[51482-52214]:MethodDeclaration[51710-52442]"
    }, {
      "left" : "public SortOrder getRowRenderingOrder()",
      "right" : "public SortOrder getRowRenderingOrder()",
      "info" : "MethodDeclaration[52226-52578]:MethodDeclaration[52454-52806]"
    }, {
      "left" : "public void setRowRenderingOrder(SortOrder order)",
      "right" : "public void setRowRenderingOrder(SortOrder order)",
      "info" : "MethodDeclaration[52586-53309]:MethodDeclaration[52814-53537]"
    }, {
      "left" : "public boolean isDomainGridlinesVisible()",
      "right" : "public boolean isDomainGridlinesVisible()",
      "info" : "MethodDeclaration[53321-53643]:MethodDeclaration[53549-53871]"
    }, {
      "left" : "public void setDomainGridlinesVisible(boolean visible)",
      "right" : "public void setDomainGridlinesVisible(boolean visible)",
      "info" : "MethodDeclaration[53651-54241]:MethodDeclaration[53879-54469]"
    }, {
      "left" : "public CategoryAnchor getDomainGridlinePosition()",
      "right" : "public CategoryAnchor getDomainGridlinePosition()",
      "info" : "MethodDeclaration[54249-54569]:MethodDeclaration[54477-54797]"
    }, {
      "left" : "public void setDomainGridlinePosition(CategoryAnchor position)",
      "right" : "public void setDomainGridlinePosition(CategoryAnchor position)",
      "info" : "MethodDeclaration[54577-55156]:MethodDeclaration[54805-55384]"
    }, {
      "left" : "public Stroke getDomainGridlineStroke()",
      "right" : "public Stroke getDomainGridlineStroke()",
      "info" : "MethodDeclaration[55164-55466]:MethodDeclaration[55392-55694]"
    }, {
      "left" : "public void setDomainGridlineStroke(Stroke stroke)",
      "right" : "public void setDomainGridlineStroke(Stroke stroke)",
      "info" : "MethodDeclaration[55474-56046]:MethodDeclaration[55702-56274]"
    }, {
      "left" : "public Paint getDomainGridlinePaint()",
      "right" : "public Paint getDomainGridlinePaint()",
      "info" : "MethodDeclaration[56054-56349]:MethodDeclaration[56282-56577]"
    }, {
      "left" : "public void setDomainGridlinePaint(Paint paint)",
      "right" : "public void setDomainGridlinePaint(Paint paint)",
      "info" : "MethodDeclaration[56357-56927]:MethodDeclaration[56585-57155]"
    }, {
      "left" : "public boolean isRangeGridlinesVisible()",
      "right" : "public boolean isRangeGridlinesVisible()",
      "info" : "MethodDeclaration[56935-57218]:MethodDeclaration[57163-57446]"
    }, {
      "left" : "public void setRangeGridlinesVisible(boolean visible)",
      "right" : "public void setRangeGridlinesVisible(boolean visible)",
      "info" : "MethodDeclaration[57226-57792]:MethodDeclaration[57454-58020]"
    }, {
      "left" : "public Stroke getRangeGridlineStroke()",
      "right" : "public Stroke getRangeGridlineStroke()",
      "info" : "MethodDeclaration[57800-58102]:MethodDeclaration[58028-58330]"
    }, {
      "left" : "public void setRangeGridlineStroke(Stroke stroke)",
      "right" : "public void setRangeGridlineStroke(Stroke stroke)",
      "info" : "MethodDeclaration[58110-58678]:MethodDeclaration[58338-58906]"
    }, {
      "left" : "public Paint getRangeGridlinePaint()",
      "right" : "public Paint getRangeGridlinePaint()",
      "info" : "MethodDeclaration[58686-58981]:MethodDeclaration[58914-59209]"
    }, {
      "left" : "public void setRangeGridlinePaint(Paint paint)",
      "right" : "public void setRangeGridlinePaint(Paint paint)",
      "info" : "MethodDeclaration[58989-59546]:MethodDeclaration[59217-59774]"
    }, {
      "left" : "public LegendItemCollection getFixedLegendItems()",
      "right" : "public LegendItemCollection getFixedLegendItems()",
      "info" : "MethodDeclaration[59558-59861]:MethodDeclaration[59786-60089]"
    }, {
      "left" : "public void setFixedLegendItems(LegendItemCollection items)",
      "right" : "public void setFixedLegendItems(LegendItemCollection items)",
      "info" : "MethodDeclaration[59869-60337]:MethodDeclaration[60097-60565]"
    }, {
      "left" : "public LegendItemCollection getLegendItems()",
      "right" : "public LegendItemCollection getLegendItems()",
      "info" : "MethodDeclaration[60349-61741]:MethodDeclaration[60577-61969]"
    }, {
      "left" : "public void handleClick(int x, int y, PlotRenderingInfo info)",
      "right" : "public void handleClick(int x, int y, PlotRenderingInfo info)",
      "info" : "MethodDeclaration[61749-62857]:MethodDeclaration[61977-63085]"
    }, {
      "left" : "public void zoom(double percent)",
      "right" : "public void zoom(double percent)",
      "info" : "MethodDeclaration[62865-63638]:MethodDeclaration[63093-63866]"
    }, {
      "left" : "public void datasetChanged(DatasetChangeEvent event)",
      "right" : "public void datasetChanged(DatasetChangeEvent event)",
      "info" : "MethodDeclaration[63646-64486]:MethodDeclaration[63874-64714]"
    }, {
      "left" : "public void rendererChanged(RendererChangeEvent event)",
      "right" : "public void rendererChanged(RendererChangeEvent event)",
      "info" : "MethodDeclaration[64494-65422]:MethodDeclaration[64722-65650]"
    }, {
      "left" : "public void addDomainMarker(CategoryMarker marker)",
      "right" : "public void addDomainMarker(CategoryMarker marker)",
      "info" : "MethodDeclaration[65434-65948]:MethodDeclaration[65662-66176]"
    }, {
      "left" : "public void addDomainMarker(CategoryMarker marker, Layer layer)",
      "right" : "public void addDomainMarker(CategoryMarker marker, Layer layer)",
      "info" : "MethodDeclaration[65964-66581]:MethodDeclaration[66192-66809]"
    }, {
      "left" : "public void addDomainMarker(int index, CategoryMarker marker, Layer layer)",
      "right" : "public void addDomainMarker(int index, CategoryMarker marker, Layer layer)",
      "info" : "MethodDeclaration[66589-68252]:MethodDeclaration[66817-68480]"
    }, {
      "left" : "public void clearDomainMarkers()",
      "right" : "public void clearDomainMarkers()",
      "info" : "MethodDeclaration[68260-69332]:MethodDeclaration[68488-69560]"
    }, {
      "left" : "public Collection getDomainMarkers(Layer layer)",
      "right" : "public Collection getDomainMarkers(Layer layer)",
      "info" : "MethodDeclaration[69340-69659]:MethodDeclaration[69568-69887]"
    }, {
      "left" : "public Collection getDomainMarkers(int index, Layer layer)",
      "right" : "public Collection getDomainMarkers(int index, Layer layer)",
      "info" : "MethodDeclaration[69667-70481]:MethodDeclaration[69895-70709]"
    }, {
      "left" : "public void clearDomainMarkers(int index)",
      "right" : "public void clearDomainMarkers(int index)",
      "info" : "MethodDeclaration[70493-71788]:MethodDeclaration[70721-72016]"
    }, {
      "left" : "public void addRangeMarker(Marker marker)",
      "right" : "public void addRangeMarker(Marker marker)",
      "info" : "MethodDeclaration[71800-72302]:MethodDeclaration[72028-72530]"
    }, {
      "left" : "public void addRangeMarker(Marker marker, Layer layer)",
      "right" : "public void addRangeMarker(Marker marker, Layer layer)",
      "info" : "MethodDeclaration[72318-72923]:MethodDeclaration[72546-73151]"
    }, {
      "left" : "public void addRangeMarker(int index, Marker marker, Layer layer)",
      "right" : "public void addRangeMarker(int index, Marker marker, Layer layer)",
      "info" : "MethodDeclaration[72931-74268]:MethodDeclaration[73159-74496]"
    }, {
      "left" : "public void clearRangeMarkers()",
      "right" : "public void clearRangeMarkers()",
      "info" : "MethodDeclaration[74276-75339]:MethodDeclaration[74504-75567]"
    }, {
      "left" : "public Collection getRangeMarkers(Layer layer)",
      "right" : "public Collection getRangeMarkers(Layer layer)",
      "info" : "MethodDeclaration[75347-75713]:MethodDeclaration[75575-75941]"
    }, {
      "left" : "public Collection getRangeMarkers(int index, Layer layer)",
      "right" : "public Collection getRangeMarkers(int index, Layer layer)",
      "info" : "MethodDeclaration[75721-76531]:MethodDeclaration[75949-76759]"
    }, {
      "left" : "public void clearRangeMarkers(int index)",
      "right" : "public void clearRangeMarkers(int index)",
      "info" : "MethodDeclaration[76543-77833]:MethodDeclaration[76771-78061]"
    }, {
      "left" : "public boolean isRangeCrosshairVisible()",
      "right" : "public boolean isRangeCrosshairVisible()",
      "info" : "MethodDeclaration[77841-78124]:MethodDeclaration[78069-78352]"
    }, {
      "left" : "public void setRangeCrosshairVisible(boolean flag)",
      "right" : "public void setRangeCrosshairVisible(boolean flag)",
      "info" : "MethodDeclaration[78132-78561]:MethodDeclaration[78360-78789]"
    }, {
      "left" : "public boolean isRangeCrosshairLockedOnData()",
      "right" : "public boolean isRangeCrosshairLockedOnData()",
      "info" : "MethodDeclaration[78569-78897]:MethodDeclaration[78797-79125]"
    }, {
      "left" : "public void setRangeCrosshairLockedOnData(boolean flag)",
      "right" : "public void setRangeCrosshairLockedOnData(boolean flag)",
      "info" : "MethodDeclaration[78905-79378]:MethodDeclaration[79133-79606]"
    }, {
      "left" : "public double getRangeCrosshairValue()",
      "right" : "public double getRangeCrosshairValue()",
      "info" : "MethodDeclaration[79386-79625]:MethodDeclaration[79614-79853]"
    }, {
      "left" : "public void setRangeCrosshairValue(double value)",
      "right" : "public void setRangeCrosshairValue(double value)",
      "info" : "MethodDeclaration[79633-80021]:MethodDeclaration[79861-80249]"
    }, {
      "left" : "public void setRangeCrosshairValue(double value, boolean notify)",
      "right" : "public void setRangeCrosshairValue(double value, boolean notify)",
      "info" : "MethodDeclaration[80029-80674]:MethodDeclaration[80257-80902]"
    }, {
      "left" : "public Stroke getRangeCrosshairStroke()",
      "right" : "public Stroke getRangeCrosshairStroke()",
      "info" : "MethodDeclaration[80682-81099]:MethodDeclaration[80910-81327]"
    }, {
      "left" : "public void setRangeCrosshairStroke(Stroke stroke)",
      "right" : "public void setRangeCrosshairStroke(Stroke stroke)",
      "info" : "MethodDeclaration[81107-81736]:MethodDeclaration[81335-81964]"
    }, {
      "left" : "public Paint getRangeCrosshairPaint()",
      "right" : "public Paint getRangeCrosshairPaint()",
      "info" : "MethodDeclaration[81744-82104]:MethodDeclaration[81972-82332]"
    }, {
      "left" : "public void setRangeCrosshairPaint(Paint paint)",
      "right" : "public void setRangeCrosshairPaint(Paint paint)",
      "info" : "MethodDeclaration[82112-82664]:MethodDeclaration[82340-82892]"
    }, {
      "left" : "public List getAnnotations()",
      "right" : "public List getAnnotations()",
      "info" : "MethodDeclaration[82672-82877]:MethodDeclaration[82900-83105]"
    }, {
      "left" : "public void addAnnotation(CategoryAnnotation annotation)",
      "right" : "public void addAnnotation(CategoryAnnotation annotation)",
      "info" : "MethodDeclaration[82885-83450]:MethodDeclaration[83113-83678]"
    }, {
      "left" : "public boolean removeAnnotation(CategoryAnnotation annotation)",
      "right" : "public boolean removeAnnotation(CategoryAnnotation annotation)",
      "info" : "MethodDeclaration[83458-84202]:MethodDeclaration[83686-84430]"
    }, {
      "left" : "public void clearAnnotations()",
      "right" : "public void clearAnnotations()",
      "info" : "MethodDeclaration[84210-84463]:MethodDeclaration[84438-84691]"
    }, {
      "left" : "protected AxisSpace calculateDomainAxisSpace(Graphics2D g2, \r\n                                                 Rectangle2D plotArea, \r\n                                                 AxisSpace space)",
      "right" : "protected AxisSpace calculateDomainAxisSpace(Graphics2D g2, \r\n                                                 Rectangle2D plotArea, \r\n                                                 AxisSpace space)",
      "info" : "MethodDeclaration[84471-86780]:MethodDeclaration[84699-87008]"
    }, {
      "left" : "protected AxisSpace calculateRangeAxisSpace(Graphics2D g2, \r\n                                                Rectangle2D plotArea, \r\n                                                AxisSpace space)",
      "right" : "protected AxisSpace calculateRangeAxisSpace(Graphics2D g2, \r\n                                                Rectangle2D plotArea, \r\n                                                AxisSpace space)",
      "info" : "MethodDeclaration[86792-88702]:MethodDeclaration[87020-88930]"
    }, {
      "left" : "protected AxisSpace calculateAxisSpace(Graphics2D g2, \r\n                                           Rectangle2D plotArea)",
      "right" : "protected AxisSpace calculateAxisSpace(Graphics2D g2, \r\n                                           Rectangle2D plotArea)",
      "info" : "MethodDeclaration[88710-89248]:MethodDeclaration[88938-89476]"
    }, {
      "left" : "public void draw(Graphics2D g2, Rectangle2D area, \r\n                     Point2D anchor,\r\n                     PlotState parentState,\r\n                     PlotRenderingInfo state)",
      "right" : "public void draw(Graphics2D g2, Rectangle2D area, \r\n                     Point2D anchor,\r\n                     PlotState parentState,\r\n                     PlotRenderingInfo state)",
      "info" : "MethodDeclaration[89260-96679]:MethodDeclaration[89488-96907]"
    }, {
      "left" : "public void drawBackground(Graphics2D g2, Rectangle2D area)",
      "right" : "public void drawBackground(Graphics2D g2, Rectangle2D area)",
      "info" : "MethodDeclaration[96687-97297]:MethodDeclaration[96915-97525]"
    }, {
      "left" : "protected Map drawAxes(Graphics2D g2, \r\n                           Rectangle2D plotArea, \r\n                           Rectangle2D dataArea,\r\n                           PlotRenderingInfo plotState)",
      "right" : "protected Map drawAxes(Graphics2D g2, \r\n                           Rectangle2D plotArea, \r\n                           Rectangle2D dataArea,\r\n                           PlotRenderingInfo plotState)",
      "info" : "MethodDeclaration[97305-101104]:MethodDeclaration[97533-101332]"
    }, {
      "left" : "public boolean render(Graphics2D g2, Rectangle2D dataArea, int index, \r\n                          PlotRenderingInfo info)",
      "right" : "public boolean render(Graphics2D g2, Rectangle2D dataArea, int index, \r\n                          PlotRenderingInfo info)",
      "info" : "MethodDeclaration[101112-104614]:MethodDeclaration[101340-104842]"
    }, {
      "left" : "protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea)",
      "right" : "protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea)",
      "info" : "MethodDeclaration[104622-106297]:MethodDeclaration[104850-106525]"
    }, {
      "left" : "protected void drawRangeGridlines(Graphics2D g2, Rectangle2D dataArea, \r\n                                      List ticks)",
      "right" : "protected void drawRangeGridlines(Graphics2D g2, Rectangle2D dataArea, \r\n                                      List ticks)",
      "info" : "MethodDeclaration[106306-107601]:MethodDeclaration[106534-107829]"
    }, {
      "left" : "protected void drawAnnotations(Graphics2D g2, Rectangle2D dataArea,\r\n            PlotRenderingInfo info)",
      "right" : "protected void drawAnnotations(Graphics2D g2, Rectangle2D dataArea,\r\n            PlotRenderingInfo info)",
      "info" : "MethodDeclaration[107609-108265]:MethodDeclaration[107837-108493]"
    }, {
      "left" : "protected void drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea, \r\n                                     int index, Layer layer)",
      "right" : "protected void drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea, \r\n                                     int index, Layer layer)",
      "info" : "MethodDeclaration[108273-109458]:MethodDeclaration[108501-109686]"
    }, {
      "left" : "protected void drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea, \r\n                                    int index, Layer layer)",
      "right" : "protected void drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea, \r\n                                    int index, Layer layer)",
      "info" : "MethodDeclaration[109466-110627]:MethodDeclaration[109694-110855]"
    }, {
      "left" : "protected void drawRangeLine(Graphics2D g2, Rectangle2D dataArea,\r\n            double value, Stroke stroke, Paint paint)",
      "right" : "protected void drawRangeLine(Graphics2D g2, Rectangle2D dataArea,\r\n            double value, Stroke stroke, Paint paint)",
      "info" : "MethodDeclaration[110635-111786]:MethodDeclaration[110863-112014]"
    }, {
      "left" : "protected void drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea, \r\n            PlotOrientation orientation, double value, ValueAxis axis, \r\n            Stroke stroke, Paint paint)",
      "right" : "protected void drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea, \r\n            PlotOrientation orientation, double value, ValueAxis axis, \r\n            Stroke stroke, Paint paint)",
      "info" : "MethodDeclaration[111794-113187]:MethodDeclaration[112022-113415]"
    }, {
      "left" : "public Range getDataRange(ValueAxis axis)",
      "right" : "public Range getDataRange(ValueAxis axis)",
      "info" : "MethodDeclaration[113199-114401]:MethodDeclaration[113427-114629]"
    }, {
      "left" : "private List datasetsMappedToDomainAxis(int axisIndex)",
      "right" : "private List datasetsMappedToDomainAxis(int axisIndex)",
      "info" : "MethodDeclaration[114409-115585]:MethodDeclaration[114637-115813]"
    }, {
      "left" : "private List datasetsMappedToRangeAxis(int index)",
      "right" : "private List datasetsMappedToRangeAxis(int index)",
      "info" : "MethodDeclaration[115597-116599]:MethodDeclaration[115825-116827]"
    }, {
      "left" : "public int getWeight()",
      "right" : "public int getWeight()",
      "info" : "MethodDeclaration[116607-116862]:MethodDeclaration[116835-117090]"
    }, {
      "left" : "public void setWeight(int weight)",
      "right" : "public void setWeight(int weight)",
      "info" : "MethodDeclaration[116870-117103]:MethodDeclaration[117098-117331]"
    }, {
      "left" : "public AxisSpace getFixedDomainAxisSpace()",
      "right" : "public AxisSpace getFixedDomainAxisSpace()",
      "info" : "MethodDeclaration[117115-117412]:MethodDeclaration[117343-117640]"
    }, {
      "left" : "public void setFixedDomainAxisSpace(AxisSpace space)",
      "right" : "public void setFixedDomainAxisSpace(AxisSpace space)",
      "info" : "MethodDeclaration[117420-117731]:MethodDeclaration[117648-117959]"
    }, {
      "left" : "public AxisSpace getFixedRangeAxisSpace()",
      "right" : "public AxisSpace getFixedRangeAxisSpace()",
      "info" : "MethodDeclaration[117739-118031]:MethodDeclaration[117967-118259]"
    }, {
      "left" : "public void setFixedRangeAxisSpace(AxisSpace space)",
      "right" : "public void setFixedRangeAxisSpace(AxisSpace space)",
      "info" : "MethodDeclaration[118039-118350]:MethodDeclaration[118267-118578]"
    }, {
      "left" : "public List getCategories()",
      "right" : "public List getCategories()",
      "info" : "MethodDeclaration[118358-118806]:MethodDeclaration[118586-119034]"
    }, {
      "left" : "public List getCategoriesForAxis(CategoryAxis axis)",
      "right" : "public List getCategoriesForAxis(CategoryAxis axis)",
      "info" : "MethodDeclaration[118818-119813]:MethodDeclaration[119046-120041]"
    }, {
      "left" : "public boolean getDrawSharedDomainAxis()",
      "right" : "public boolean getDrawSharedDomainAxis()",
      "info" : "MethodDeclaration[119821-120136]:MethodDeclaration[120049-120364]"
    }, {
      "left" : "public void setDrawSharedDomainAxis(boolean draw)",
      "right" : "public void setDrawSharedDomainAxis(boolean draw)",
      "info" : "MethodDeclaration[120148-120537]:MethodDeclaration[120376-120765]"
    }, {
      "left" : "public boolean isDomainZoomable()",
      "right" : "public boolean isDomainZoomable()",
      "info" : "MethodDeclaration[120545-120799]:MethodDeclaration[120773-121027]"
    }, {
      "left" : "public boolean isRangeZoomable()",
      "right" : "public boolean isRangeZoomable()",
      "info" : "MethodDeclaration[120811-121050]:MethodDeclaration[121039-121278]"
    }, {
      "left" : "public void zoomDomainAxes(double factor, PlotRenderingInfo state, \r\n                               Point2D source)",
      "right" : "public void zoomDomainAxes(double factor, PlotRenderingInfo state, \r\n                               Point2D source)",
      "info" : "MethodDeclaration[121058-121509]:MethodDeclaration[121286-121737]"
    }, {
      "left" : "public void zoomDomainAxes(double lowerPercent, double upperPercent, \r\n                               PlotRenderingInfo state, Point2D source)",
      "right" : "public void zoomDomainAxes(double lowerPercent, double upperPercent, \r\n                               PlotRenderingInfo state, Point2D source)",
      "info" : "MethodDeclaration[121517-122048]:MethodDeclaration[121745-122276]"
    }, {
      "left" : "public void zoomDomainAxes(double factor, PlotRenderingInfo info,\r\n                               Point2D source, boolean useAnchor)",
      "right" : "public void zoomDomainAxes(double factor, PlotRenderingInfo info,\r\n                               Point2D source, boolean useAnchor)",
      "info" : "MethodDeclaration[122060-122694]:MethodDeclaration[122288-122922]"
    }, {
      "left" : "public void zoomRangeAxes(double factor, PlotRenderingInfo state, \r\n                              Point2D source)",
      "right" : "public void zoomRangeAxes(double factor, PlotRenderingInfo state, \r\n                              Point2D source)",
      "info" : "MethodDeclaration[122702-123172]:MethodDeclaration[122930-123400]"
    }, {
      "left" : "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\r\n                              Point2D source, boolean useAnchor)",
      "right" : "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\r\n                              Point2D source, boolean useAnchor)",
      "info" : "MethodDeclaration[123180-124708]:MethodDeclaration[123408-124936]"
    }, {
      "left" : "public void zoomRangeAxes(double lowerPercent, double upperPercent, \r\n                              PlotRenderingInfo state, Point2D source)",
      "right" : "public void zoomRangeAxes(double lowerPercent, double upperPercent, \r\n                              PlotRenderingInfo state, Point2D source)",
      "info" : "MethodDeclaration[124716-125389]:MethodDeclaration[124944-125617]"
    }, {
      "left" : "public double getAnchorValue()",
      "right" : "public double getAnchorValue()",
      "info" : "MethodDeclaration[125401-125615]:MethodDeclaration[125629-125843]"
    }, {
      "left" : "public void setAnchorValue(double value)",
      "right" : "public void setAnchorValue(double value)",
      "info" : "MethodDeclaration[125623-125921]:MethodDeclaration[125851-126149]"
    }, {
      "left" : "public void setAnchorValue(double value, boolean notify)",
      "right" : "public void setAnchorValue(double value, boolean notify)",
      "info" : "MethodDeclaration[125929-126379]:MethodDeclaration[126157-126607]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[126391-130894]:MethodDeclaration[126619-131122]"
    }, {
      "left" : "public Object clone() throws CloneNotSupportedException",
      "right" : "public Object clone() throws CloneNotSupportedException",
      "info" : "MethodDeclaration[130906-133105]:MethodDeclaration[131134-133333]"
    }, {
      "left" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "right" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "info" : "MethodDeclaration[133117-133835]:MethodDeclaration[133345-134063]"
    }, {
      "left" : "private void readObject(ObjectInputStream stream) \r\n        throws IOException, ClassNotFoundException",
      "right" : "private void readObject(ObjectInputStream stream) \r\n        throws IOException, ClassNotFoundException",
      "info" : "MethodDeclaration[133843-135825]:MethodDeclaration[134071-136053]"
    } ],
    "mappings" : [
 {
      "left" : "Plot",
      "right" : "Plot",
      "info" : "SimpleType[11375-11379]:SimpleType[11375-11379]"
    }, {
      "left" : "ValueAxisPlot",
      "right" : "ValueAxisPlot",
      "info" : "SimpleType[11391-11404]:SimpleType[11391-11404]"
    }, {
      "left" : "Zoomable",
      "right" : "Zoomable",
      "info" : "SimpleType[11416-11424]:SimpleType[11416-11424]"
    }, {
      "left" : "RendererChangeListener",
      "right" : "RendererChangeListener",
      "info" : "SimpleType[11426-11448]:SimpleType[11426-11448]"
    }, {
      "left" : "Cloneable",
      "right" : "Cloneable",
      "info" : "SimpleType[11450-11459]:SimpleType[11450-11459]"
    }, {
      "left" : "PublicCloneable",
      "right" : "PublicCloneable",
      "info" : "SimpleType[11461-11476]:SimpleType[11461-11476]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[11488-11500]:SimpleType[11488-11500]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17676-17682]:Modifier[17676-17682]"
    }, {
      "left" : "CategoryPlot",
      "right" : "CategoryPlot",
      "info" : "SimpleName[17683-17695]:SimpleName[17683-17695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17698-17745]:Block[17698-17745]"
    }, {
      "left" : "this(null, null, null, null);",
      "right" : "this(null, null, null, null);",
      "info" : "ConstructorInvocation[17709-17738]:ConstructorInvocation[17709-17738]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18102-18108]:Modifier[18102-18108]"
    }, {
      "left" : "CategoryPlot",
      "right" : "CategoryPlot",
      "info" : "SimpleName[18109-18121]:SimpleName[18109-18121]"
    }, {
      "left" : "CategoryDataset dataset",
      "right" : "CategoryDataset dataset",
      "info" : "SingleVariableDeclaration[18122-18145]:SingleVariableDeclaration[18122-18145]"
    }, {
      "left" : "CategoryAxis domainAxis",
      "right" : "CategoryAxis domainAxis",
      "info" : "SingleVariableDeclaration[18172-18195]:SingleVariableDeclaration[18172-18195]"
    }, {
      "left" : "ValueAxis rangeAxis",
      "right" : "ValueAxis rangeAxis",
      "info" : "SingleVariableDeclaration[18222-18241]:SingleVariableDeclaration[18222-18241]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[18268-18297]:SingleVariableDeclaration[18268-18297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18299-21193]:Block[18299-21193]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[18312-18320]:SuperConstructorInvocation[18312-18320]"
    }, {
      "left" : "this.orientation = PlotOrientation.VERTICAL;",
      "right" : "this.orientation = PlotOrientation.VERTICAL;",
      "info" : "ExpressionStatement[18332-18376]:ExpressionStatement[18332-18376]"
    }, {
      "left" : "this.domainAxes = new ObjectList();",
      "right" : "this.domainAxes = new ObjectList();",
      "info" : "ExpressionStatement[18449-18484]:ExpressionStatement[18449-18484]"
    }, {
      "left" : "this.domainAxisLocations = new ObjectList();",
      "right" : "this.domainAxisLocations = new ObjectList();",
      "info" : "ExpressionStatement[18494-18538]:ExpressionStatement[18494-18538]"
    }, {
      "left" : "this.rangeAxes = new ObjectList();",
      "right" : "this.rangeAxes = new ObjectList();",
      "info" : "ExpressionStatement[18548-18582]:ExpressionStatement[18548-18582]"
    }, {
      "left" : "this.rangeAxisLocations = new ObjectList();",
      "right" : "this.rangeAxisLocations = new ObjectList();",
      "info" : "ExpressionStatement[18592-18635]:ExpressionStatement[18592-18635]"
    }, {
      "left" : "this.datasetToDomainAxisMap = new ObjectList();",
      "right" : "this.datasetToDomainAxisMap = new ObjectList();",
      "info" : "ExpressionStatement[18655-18702]:ExpressionStatement[18655-18702]"
    }, {
      "left" : "this.datasetToRangeAxisMap = new ObjectList();",
      "right" : "this.datasetToRangeAxisMap = new ObjectList();",
      "info" : "ExpressionStatement[18712-18758]:ExpressionStatement[18712-18758]"
    }, {
      "left" : "this.renderers = new ObjectList();",
      "right" : "this.renderers = new ObjectList();",
      "info" : "ExpressionStatement[18770-18804]:ExpressionStatement[18770-18804]"
    }, {
      "left" : "this.datasets = new ObjectList();",
      "right" : "this.datasets = new ObjectList();",
      "info" : "ExpressionStatement[18816-18849]:ExpressionStatement[18816-18849]"
    }, {
      "left" : "this.datasets.set(0, dataset);",
      "right" : "this.datasets.set(0, dataset);",
      "info" : "ExpressionStatement[18859-18889]:ExpressionStatement[18859-18889]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[18899-18978]:IfStatement[18899-18978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18920-18978]:Block[18920-18978]"
    }, {
      "left" : "dataset.addChangeListener(this);",
      "right" : "dataset.addChangeListener(this);",
      "info" : "ExpressionStatement[18935-18967]:ExpressionStatement[18935-18967]"
    }, {
      "left" : "this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",
      "right" : "this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",
      "info" : "ExpressionStatement[18990-19048]:ExpressionStatement[18990-19048]"
    }, {
      "left" : "setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);",
      "right" : "setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);",
      "info" : "ExpressionStatement[19060-19118]:ExpressionStatement[19060-19118]"
    }, {
      "left" : "setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);",
      "right" : "setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);",
      "info" : "ExpressionStatement[19128-19182]:ExpressionStatement[19128-19182]"
    }, {
      "left" : "this.renderers.set(0, renderer);",
      "right" : "this.renderers.set(0, renderer);",
      "info" : "ExpressionStatement[19194-19226]:ExpressionStatement[19194-19226]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[19236-19354]:IfStatement[19236-19354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19258-19354]:Block[19258-19354]"
    }, {
      "left" : "renderer.setPlot(this);",
      "right" : "renderer.setPlot(this);",
      "info" : "ExpressionStatement[19273-19296]:ExpressionStatement[19273-19296]"
    }, {
      "left" : "renderer.addChangeListener(this);",
      "right" : "renderer.addChangeListener(this);",
      "info" : "ExpressionStatement[19310-19343]:ExpressionStatement[19310-19343]"
    }, {
      "left" : "this.domainAxes.set(0, domainAxis);",
      "right" : "this.domainAxes.set(0, domainAxis);",
      "info" : "ExpressionStatement[19366-19401]:ExpressionStatement[19366-19401]"
    }, {
      "left" : "this.mapDatasetToDomainAxis(0, 0);",
      "right" : "this.mapDatasetToDomainAxis(0, 0);",
      "info" : "ExpressionStatement[19411-19445]:ExpressionStatement[19411-19445]"
    }, {
      "left" : "if (domainAxis != null)",
      "right" : "if (domainAxis != null)",
      "info" : "IfStatement[19455-19579]:IfStatement[19455-19579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19479-19579]:Block[19479-19579]"
    }, {
      "left" : "domainAxis.setPlot(this);",
      "right" : "domainAxis.setPlot(this);",
      "info" : "ExpressionStatement[19494-19519]:ExpressionStatement[19494-19519]"
    }, {
      "left" : "domainAxis.addChangeListener(this);",
      "right" : "domainAxis.addChangeListener(this);",
      "info" : "ExpressionStatement[19533-19568]:ExpressionStatement[19533-19568]"
    }, {
      "left" : "this.drawSharedDomainAxis = false;",
      "right" : "this.drawSharedDomainAxis = false;",
      "info" : "ExpressionStatement[19589-19623]:ExpressionStatement[19589-19623]"
    }, {
      "left" : "this.rangeAxes.set(0, rangeAxis);",
      "right" : "this.rangeAxes.set(0, rangeAxis);",
      "info" : "ExpressionStatement[19635-19668]:ExpressionStatement[19635-19668]"
    }, {
      "left" : "this.mapDatasetToRangeAxis(0, 0);",
      "right" : "this.mapDatasetToRangeAxis(0, 0);",
      "info" : "ExpressionStatement[19678-19711]:ExpressionStatement[19678-19711]"
    }, {
      "left" : "if (rangeAxis != null)",
      "right" : "if (rangeAxis != null)",
      "info" : "IfStatement[19721-19842]:IfStatement[19721-19842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19744-19842]:Block[19744-19842]"
    }, {
      "left" : "rangeAxis.setPlot(this);",
      "right" : "rangeAxis.setPlot(this);",
      "info" : "ExpressionStatement[19759-19783]:ExpressionStatement[19759-19783]"
    }, {
      "left" : "rangeAxis.addChangeListener(this);",
      "right" : "rangeAxis.addChangeListener(this);",
      "info" : "ExpressionStatement[19797-19831]:ExpressionStatement[19797-19831]"
    }, {
      "left" : "configureDomainAxes();",
      "right" : "configureDomainAxes();",
      "info" : "ExpressionStatement[19862-19884]:ExpressionStatement[19862-19884]"
    }, {
      "left" : "configureRangeAxes();",
      "right" : "configureRangeAxes();",
      "info" : "ExpressionStatement[19894-19915]:ExpressionStatement[19894-19915]"
    }, {
      "left" : "this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;",
      "right" : "this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;",
      "info" : "ExpressionStatement[19927-19990]:ExpressionStatement[19927-19990]"
    }, {
      "left" : "this.domainGridlinePosition = CategoryAnchor.MIDDLE;",
      "right" : "this.domainGridlinePosition = CategoryAnchor.MIDDLE;",
      "info" : "ExpressionStatement[20000-20052]:ExpressionStatement[20000-20052]"
    }, {
      "left" : "this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "right" : "this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "info" : "ExpressionStatement[20062-20114]:ExpressionStatement[20062-20114]"
    }, {
      "left" : "this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "right" : "this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "info" : "ExpressionStatement[20124-20174]:ExpressionStatement[20124-20174]"
    }, {
      "left" : "this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;",
      "right" : "this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;",
      "info" : "ExpressionStatement[20186-20247]:ExpressionStatement[20186-20247]"
    }, {
      "left" : "this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "right" : "this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "info" : "ExpressionStatement[20257-20308]:ExpressionStatement[20257-20308]"
    }, {
      "left" : "this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "right" : "this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "info" : "ExpressionStatement[20318-20367]:ExpressionStatement[20318-20367]"
    }, {
      "left" : "this.foregroundDomainMarkers = new HashMap();",
      "right" : "this.foregroundDomainMarkers = new HashMap();",
      "info" : "ExpressionStatement[20379-20424]:ExpressionStatement[20379-20424]"
    }, {
      "left" : "this.backgroundDomainMarkers = new HashMap();",
      "right" : "this.backgroundDomainMarkers = new HashMap();",
      "info" : "ExpressionStatement[20434-20479]:ExpressionStatement[20434-20479]"
    }, {
      "left" : "this.foregroundRangeMarkers = new HashMap();",
      "right" : "this.foregroundRangeMarkers = new HashMap();",
      "info" : "ExpressionStatement[20489-20533]:ExpressionStatement[20489-20533]"
    }, {
      "left" : "this.backgroundRangeMarkers = new HashMap();",
      "right" : "this.backgroundRangeMarkers = new HashMap();",
      "info" : "ExpressionStatement[20543-20587]:ExpressionStatement[20543-20587]"
    }, {
      "left" : "Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, \r\n                0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, \r\n                0.5f), new BasicStroke(1.0f), 0.6f);",
      "right" : "Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, \r\n                0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, \r\n                0.5f), new BasicStroke(1.0f), 0.6f);",
      "info" : "VariableDeclarationStatement[20599-20799]:VariableDeclarationStatement[20599-20799]"
    }, {
      "left" : "addRangeMarker(baseline, Layer.BACKGROUND);",
      "right" : "addRangeMarker(baseline, Layer.BACKGROUND);",
      "info" : "ExpressionStatement[20809-20852]:ExpressionStatement[20809-20852]"
    }, {
      "left" : "this.anchorValue = 0.0;",
      "right" : "this.anchorValue = 0.0;",
      "info" : "ExpressionStatement[20864-20887]:ExpressionStatement[20864-20887]"
    }, {
      "left" : "this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;",
      "right" : "this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;",
      "info" : "ExpressionStatement[20899-20954]:ExpressionStatement[20899-20954]"
    }, {
      "left" : "this.rangeCrosshairValue = 0.0;",
      "right" : "this.rangeCrosshairValue = 0.0;",
      "info" : "ExpressionStatement[20964-20995]:ExpressionStatement[20964-20995]"
    }, {
      "left" : "this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
      "right" : "this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
      "info" : "ExpressionStatement[21005-21058]:ExpressionStatement[21005-21058]"
    }, {
      "left" : "this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
      "right" : "this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
      "info" : "ExpressionStatement[21068-21119]:ExpressionStatement[21068-21119]"
    }, {
      "left" : "this.annotations = new java.util.ArrayList();",
      "right" : "this.annotations = new java.util.ArrayList();",
      "info" : "ExpressionStatement[21139-21184]:ExpressionStatement[21139-21184]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21311-21317]:Modifier[21311-21317]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[21318-21324]:SimpleType[21318-21324]"
    }, {
      "left" : "getPlotType",
      "right" : "getPlotType",
      "info" : "SimpleName[21325-21336]:SimpleName[21325-21336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21339-21413]:Block[21339-21413]"
    }, {
      "left" : "return localizationResources.getString(\"Category_Plot\");",
      "right" : "return localizationResources.getString(\"Category_Plot\");",
      "info" : "ReturnStatement[21350-21406]:ReturnStatement[21350-21406]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21618-21624]:Modifier[21618-21624]"
    }, {
      "left" : "PlotOrientation",
      "right" : "PlotOrientation",
      "info" : "SimpleType[21625-21640]:SimpleType[21625-21640]"
    }, {
      "left" : "getOrientation",
      "right" : "getOrientation",
      "info" : "SimpleName[21641-21655]:SimpleName[21641-21655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21658-21700]:Block[21658-21700]"
    }, {
      "left" : "return this.orientation;",
      "right" : "return this.orientation;",
      "info" : "ReturnStatement[21669-21693]:ReturnStatement[21669-21693]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21968-21974]:Modifier[21968-21974]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21975-21979]:PrimitiveType[21975-21979]"
    }, {
      "left" : "setOrientation",
      "right" : "setOrientation",
      "info" : "SimpleName[21980-21994]:SimpleName[21980-21994]"
    }, {
      "left" : "PlotOrientation orientation",
      "right" : "PlotOrientation orientation",
      "info" : "SingleVariableDeclaration[21995-22022]:SingleVariableDeclaration[21995-22022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22024-22254]:Block[22024-22254]"
    }, {
      "left" : "if (orientation == null)",
      "right" : "if (orientation == null)",
      "info" : "IfStatement[22035-22153]:IfStatement[22035-22153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22060-22153]:Block[22060-22153]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'orientation' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'orientation' argument.\");",
      "info" : "ThrowStatement[22075-22142]:ThrowStatement[22075-22142]"
    }, {
      "left" : "this.orientation = orientation;",
      "right" : "this.orientation = orientation;",
      "info" : "ExpressionStatement[22163-22194]:ExpressionStatement[22163-22194]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[22204-22247]:ExpressionStatement[22204-22247]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22434-22440]:Modifier[22434-22440]"
    }, {
      "left" : "RectangleInsets",
      "right" : "RectangleInsets",
      "info" : "SimpleType[22441-22456]:SimpleType[22441-22456]"
    }, {
      "left" : "getAxisOffset",
      "right" : "getAxisOffset",
      "info" : "SimpleName[22457-22470]:SimpleName[22457-22470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22473-22514]:Block[22473-22514]"
    }, {
      "left" : "return this.axisOffset;",
      "right" : "return this.axisOffset;",
      "info" : "ReturnStatement[22484-22507]:ReturnStatement[22484-22507]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22800-22806]:Modifier[22800-22806]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22807-22811]:PrimitiveType[22807-22811]"
    }, {
      "left" : "setAxisOffset",
      "right" : "setAxisOffset",
      "info" : "SimpleName[22812-22825]:SimpleName[22812-22825]"
    }, {
      "left" : "RectangleInsets offset",
      "right" : "RectangleInsets offset",
      "info" : "SingleVariableDeclaration[22826-22848]:SingleVariableDeclaration[22826-22848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22850-23067]:Block[22850-23067]"
    }, {
      "left" : "if (offset == null)",
      "right" : "if (offset == null)",
      "info" : "IfStatement[22861-22972]:IfStatement[22861-22972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22881-22972]:Block[22881-22972]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'offset' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'offset' argument.\");",
      "info" : "ThrowStatement[22896-22958]:ThrowStatement[22896-22958]"
    }, {
      "left" : "this.axisOffset = offset;",
      "right" : "this.axisOffset = offset;",
      "info" : "ExpressionStatement[22982-23007]:ExpressionStatement[22982-23007]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[23017-23060]:ExpressionStatement[23017-23060]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23421-23427]:Modifier[23421-23427]"
    }, {
      "left" : "CategoryAxis",
      "right" : "CategoryAxis",
      "info" : "SimpleType[23428-23440]:SimpleType[23428-23440]"
    }, {
      "left" : "getDomainAxis",
      "right" : "getDomainAxis",
      "info" : "SimpleName[23441-23454]:SimpleName[23441-23454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23457-23499]:Block[23457-23499]"
    }, {
      "left" : "return getDomainAxis(0);",
      "right" : "return getDomainAxis(0);",
      "info" : "ReturnStatement[23468-23492]:ReturnStatement[23468-23492]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23721-23727]:Modifier[23721-23727]"
    }, {
      "left" : "CategoryAxis",
      "right" : "CategoryAxis",
      "info" : "SimpleType[23728-23740]:SimpleType[23728-23740]"
    }, {
      "left" : "getDomainAxis",
      "right" : "getDomainAxis",
      "info" : "SimpleName[23741-23754]:SimpleName[23741-23754]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[23755-23764]:SingleVariableDeclaration[23755-23764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23766-24215]:Block[23766-24215]"
    }, {
      "left" : "CategoryAxis result = null;",
      "right" : "CategoryAxis result = null;",
      "info" : "VariableDeclarationStatement[23777-23804]:VariableDeclarationStatement[23777-23804]"
    }, {
      "left" : "if (index < this.domainAxes.size())",
      "right" : "if (index < this.domainAxes.size())",
      "info" : "IfStatement[23814-23927]:IfStatement[23814-23927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23850-23927]:Block[23850-23927]"
    }, {
      "left" : "result = (CategoryAxis) this.domainAxes.get(index);",
      "right" : "result = (CategoryAxis) this.domainAxes.get(index);",
      "info" : "ExpressionStatement[23865-23916]:ExpressionStatement[23865-23916]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[23937-24184]:IfStatement[23937-24184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23957-24184]:Block[23957-24184]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[23972-23998]:VariableDeclarationStatement[23972-23998]"
    }, {
      "left" : "if (parent instanceof CategoryPlot)",
      "right" : "if (parent instanceof CategoryPlot)",
      "info" : "IfStatement[24012-24173]:IfStatement[24012-24173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24048-24173]:Block[24048-24173]"
    }, {
      "left" : "CategoryPlot cp = (CategoryPlot) parent;",
      "right" : "CategoryPlot cp = (CategoryPlot) parent;",
      "info" : "VariableDeclarationStatement[24067-24107]:VariableDeclarationStatement[24067-24107]"
    }, {
      "left" : "result = cp.getDomainAxis(index);",
      "right" : "result = cp.getDomainAxis(index);",
      "info" : "ExpressionStatement[24125-24158]:ExpressionStatement[24125-24158]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[24194-24208]:ReturnStatement[24194-24208]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24464-24470]:Modifier[24464-24470]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24471-24475]:PrimitiveType[24471-24475]"
    }, {
      "left" : "setDomainAxis",
      "right" : "setDomainAxis",
      "info" : "SimpleName[24476-24489]:SimpleName[24476-24489]"
    }, {
      "left" : "CategoryAxis axis",
      "right" : "CategoryAxis axis",
      "info" : "SingleVariableDeclaration[24490-24507]:SingleVariableDeclaration[24490-24507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24509-24550]:Block[24509-24550]"
    }, {
      "left" : "setDomainAxis(0, axis);",
      "right" : "setDomainAxis(0, axis);",
      "info" : "ExpressionStatement[24520-24543]:ExpressionStatement[24520-24543]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24826-24832]:Modifier[24826-24832]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24833-24837]:PrimitiveType[24833-24837]"
    }, {
      "left" : "setDomainAxis",
      "right" : "setDomainAxis",
      "info" : "SimpleName[24838-24851]:SimpleName[24838-24851]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[24852-24861]:SingleVariableDeclaration[24852-24861]"
    }, {
      "left" : "CategoryAxis axis",
      "right" : "CategoryAxis axis",
      "info" : "SingleVariableDeclaration[24863-24880]:SingleVariableDeclaration[24863-24880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24882-24933]:Block[24882-24933]"
    }, {
      "left" : "setDomainAxis(index, axis, true);",
      "right" : "setDomainAxis(index, axis, true);",
      "info" : "ExpressionStatement[24893-24926]:ExpressionStatement[24893-24926]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25224-25230]:Modifier[25224-25230]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25231-25235]:PrimitiveType[25231-25235]"
    }, {
      "left" : "setDomainAxis",
      "right" : "setDomainAxis",
      "info" : "SimpleName[25236-25249]:SimpleName[25236-25249]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[25250-25259]:SingleVariableDeclaration[25250-25259]"
    }, {
      "left" : "CategoryAxis axis",
      "right" : "CategoryAxis axis",
      "info" : "SingleVariableDeclaration[25261-25278]:SingleVariableDeclaration[25261-25278]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[25280-25294]:SingleVariableDeclaration[25280-25294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25296-25795]:Block[25296-25795]"
    }, {
      "left" : "CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);",
      "right" : "CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);",
      "info" : "VariableDeclarationStatement[25307-25373]:VariableDeclarationStatement[25307-25373]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[25383-25467]:IfStatement[25383-25467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25405-25467]:Block[25405-25467]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[25420-25456]:ExpressionStatement[25420-25456]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[25477-25540]:IfStatement[25477-25540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25495-25540]:Block[25495-25540]"
    }, {
      "left" : "axis.setPlot(this);",
      "right" : "axis.setPlot(this);",
      "info" : "ExpressionStatement[25510-25529]:ExpressionStatement[25510-25529]"
    }, {
      "left" : "this.domainAxes.set(index, axis);",
      "right" : "this.domainAxes.set(index, axis);",
      "info" : "ExpressionStatement[25550-25583]:ExpressionStatement[25550-25583]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[25593-25697]:IfStatement[25593-25697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25611-25697]:Block[25611-25697]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[25626-25643]:ExpressionStatement[25626-25643]"
    }, {
      "left" : "axis.addChangeListener(this);",
      "right" : "axis.addChangeListener(this);",
      "info" : "ExpressionStatement[25657-25686]:ExpressionStatement[25657-25686]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[25707-25788]:IfStatement[25707-25788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25719-25788]:Block[25719-25788]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[25734-25777]:ExpressionStatement[25734-25777]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26060-26066]:Modifier[26060-26066]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26067-26071]:PrimitiveType[26067-26071]"
    }, {
      "left" : "setDomainAxes",
      "right" : "setDomainAxes",
      "info" : "SimpleName[26072-26085]:SimpleName[26072-26085]"
    }, {
      "left" : "CategoryAxis[] axes",
      "right" : "CategoryAxis[] axes",
      "info" : "SingleVariableDeclaration[26086-26105]:SingleVariableDeclaration[26086-26105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26107-26278]:Block[26107-26278]"
    }, {
      "left" : "for (int i = 0; i < axes.length; i++)",
      "right" : "for (int i = 0; i < axes.length; i++)",
      "info" : "ForStatement[26118-26218]:ForStatement[26118-26218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26156-26218]:Block[26156-26218]"
    }, {
      "left" : "setDomainAxis(i, axes[i], false);",
      "right" : "setDomainAxis(i, axes[i], false);",
      "info" : "ExpressionStatement[26171-26204]:ExpressionStatement[26171-26204]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[26228-26271]:ExpressionStatement[26228-26271]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26655-26661]:Modifier[26655-26661]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[26662-26665]:PrimitiveType[26662-26665]"
    }, {
      "left" : "getDomainAxisIndex",
      "right" : "getDomainAxisIndex",
      "info" : "SimpleName[26666-26684]:SimpleName[26666-26684]"
    }, {
      "left" : "CategoryAxis axis",
      "right" : "CategoryAxis axis",
      "info" : "SingleVariableDeclaration[26685-26702]:SingleVariableDeclaration[26685-26702]"
    }, {
      "left" : "return this.domainAxes.indexOf(axis);",
      "right" : "return this.domainAxes.indexOf(axis);",
      "info" : "ReturnStatement[26715-26752]:ReturnStatement[26829-26866]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26969-26975]:Modifier[27083-27089]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[26976-26988]:SimpleType[27090-27102]"
    }, {
      "left" : "getDomainAxisLocation",
      "right" : "getDomainAxisLocation",
      "info" : "SimpleName[26989-27010]:SimpleName[27103-27124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27013-27063]:Block[27127-27177]"
    }, {
      "left" : "return getDomainAxisLocation(0);",
      "right" : "return getDomainAxisLocation(0);",
      "info" : "ReturnStatement[27024-27056]:ReturnStatement[27138-27170]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27285-27291]:Modifier[27399-27405]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[27292-27304]:SimpleType[27406-27418]"
    }, {
      "left" : "getDomainAxisLocation",
      "right" : "getDomainAxisLocation",
      "info" : "SimpleName[27305-27326]:SimpleName[27419-27440]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[27327-27336]:SingleVariableDeclaration[27441-27450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27338-27664]:Block[27452-27778]"
    }, {
      "left" : "AxisLocation result = null;",
      "right" : "AxisLocation result = null;",
      "info" : "VariableDeclarationStatement[27349-27376]:VariableDeclarationStatement[27463-27490]"
    }, {
      "left" : "if (index < this.domainAxisLocations.size())",
      "right" : "if (index < this.domainAxisLocations.size())",
      "info" : "IfStatement[27386-27517]:IfStatement[27500-27631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27431-27517]:Block[27545-27631]"
    }, {
      "left" : "result = (AxisLocation) this.domainAxisLocations.get(index);",
      "right" : "result = (AxisLocation) this.domainAxisLocations.get(index);",
      "info" : "ExpressionStatement[27446-27506]:ExpressionStatement[27560-27620]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[27527-27633]:IfStatement[27641-27747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27547-27633]:Block[27661-27747]"
    }, {
      "left" : "result = AxisLocation.getOpposite(getDomainAxisLocation(0));",
      "right" : "result = AxisLocation.getOpposite(getDomainAxisLocation(0));",
      "info" : "ExpressionStatement[27562-27622]:ExpressionStatement[27676-27736]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[27643-27657]:ReturnStatement[27757-27771]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27996-28002]:Modifier[28110-28116]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28003-28007]:PrimitiveType[28117-28121]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[28008-28029]:SimpleName[28122-28143]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[28030-28051]:SingleVariableDeclaration[28144-28165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28053-28136]:Block[28167-28250]"
    }, {
      "left" : "setDomainAxisLocation(0, location, true);",
      "right" : "setDomainAxisLocation(0, location, true);",
      "info" : "ExpressionStatement[28088-28129]:ExpressionStatement[28202-28243]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28458-28464]:Modifier[28572-28578]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28465-28469]:PrimitiveType[28579-28583]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[28470-28491]:SimpleName[28584-28605]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[28492-28513]:SingleVariableDeclaration[28606-28627]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[28515-28529]:SingleVariableDeclaration[28629-28643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28531-28616]:Block[28645-28730]"
    }, {
      "left" : "setDomainAxisLocation(0, location, notify);",
      "right" : "setDomainAxisLocation(0, location, notify);",
      "info" : "ExpressionStatement[28566-28609]:ExpressionStatement[28680-28723]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28948-28954]:Modifier[29062-29068]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28955-28959]:PrimitiveType[29069-29073]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[28960-28981]:SimpleName[29074-29095]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[28982-28991]:SingleVariableDeclaration[29096-29105]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[28993-29014]:SingleVariableDeclaration[29107-29128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29016-29103]:Block[29130-29217]"
    }, {
      "left" : "setDomainAxisLocation(index, location, true);",
      "right" : "setDomainAxisLocation(index, location, true);",
      "info" : "ExpressionStatement[29051-29096]:ExpressionStatement[29165-29210]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29521-29527]:Modifier[29635-29641]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29528-29532]:PrimitiveType[29642-29646]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[29533-29554]:SimpleName[29647-29668]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[29555-29564]:SingleVariableDeclaration[29669-29678]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[29566-29587]:SingleVariableDeclaration[29680-29701]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[29603-29617]:SingleVariableDeclaration[29717-29731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29619-29949]:Block[29733-30063]"
    }, {
      "left" : "if (index == 0 && location == null)",
      "right" : "if (index == 0 && location == null)",
      "info" : "IfStatement[29630-29795]:IfStatement[29744-29909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29666-29795]:Block[29780-29909]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "info" : "ThrowStatement[29681-29784]:ThrowStatement[29795-29898]"
    }, {
      "left" : "this.domainAxisLocations.set(index, location);",
      "right" : "this.domainAxisLocations.set(index, location);",
      "info" : "ExpressionStatement[29805-29851]:ExpressionStatement[29919-29965]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[29861-29942]:IfStatement[29975-30056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29873-29942]:Block[29987-30056]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[29888-29931]:ExpressionStatement[30002-30045]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30147-30153]:Modifier[30261-30267]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[30154-30167]:SimpleType[30268-30281]"
    }, {
      "left" : "getDomainAxisEdge",
      "right" : "getDomainAxisEdge",
      "info" : "SimpleName[30168-30185]:SimpleName[30282-30299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30188-30234]:Block[30302-30348]"
    }, {
      "left" : "return getDomainAxisEdge(0);",
      "right" : "return getDomainAxisEdge(0);",
      "info" : "ReturnStatement[30199-30227]:ReturnStatement[30313-30341]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30410-30416]:Modifier[30524-30530]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[30417-30430]:SimpleType[30531-30544]"
    }, {
      "left" : "getDomainAxisEdge",
      "right" : "getDomainAxisEdge",
      "info" : "SimpleName[30431-30448]:SimpleName[30545-30562]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[30449-30458]:SingleVariableDeclaration[30563-30572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30460-30814]:Block[30574-30928]"
    }, {
      "left" : "RectangleEdge result = null;",
      "right" : "RectangleEdge result = null;",
      "info" : "VariableDeclarationStatement[30471-30499]:VariableDeclarationStatement[30585-30613]"
    }, {
      "left" : "AxisLocation location = getDomainAxisLocation(index);",
      "right" : "AxisLocation location = getDomainAxisLocation(index);",
      "info" : "VariableDeclarationStatement[30509-30562]:VariableDeclarationStatement[30623-30676]"
    }, {
      "left" : "if (location != null)",
      "right" : "if (location != null)",
      "info" : "IfStatement[30572-30783]:IfStatement[30686-30897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30594-30688]:Block[30708-30802]"
    }, {
      "left" : "result = Plot.resolveDomainAxisLocation(location, this.orientation);",
      "right" : "result = Plot.resolveDomainAxisLocation(location, this.orientation);",
      "info" : "ExpressionStatement[30609-30677]:ExpressionStatement[30723-30791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30703-30783]:Block[30817-30897]"
    }, {
      "left" : "result = RectangleEdge.opposite(getDomainAxisEdge(0));",
      "right" : "result = RectangleEdge.opposite(getDomainAxisEdge(0));",
      "info" : "ExpressionStatement[30718-30772]:ExpressionStatement[30832-30886]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[30793-30807]:ReturnStatement[30907-30921]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30923-30929]:Modifier[31037-31043]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[30930-30933]:PrimitiveType[31044-31047]"
    }, {
      "left" : "getDomainAxisCount",
      "right" : "getDomainAxisCount",
      "info" : "SimpleName[30934-30952]:SimpleName[31048-31066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30955-31003]:Block[31069-31117]"
    }, {
      "left" : "return this.domainAxes.size();",
      "right" : "return this.domainAxes.size();",
      "info" : "ReturnStatement[30966-30996]:ReturnStatement[31080-31110]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31147-31153]:Modifier[31261-31267]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31154-31158]:PrimitiveType[31268-31272]"
    }, {
      "left" : "clearDomainAxes",
      "right" : "clearDomainAxes",
      "info" : "SimpleName[31159-31174]:SimpleName[31273-31288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31177-31513]:Block[31291-31627]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[31188-31419]:ForStatement[31302-31533]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31237-31419]:Block[31351-31533]"
    }, {
      "left" : "CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);",
      "right" : "CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[31252-31310]:VariableDeclarationStatement[31366-31424]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[31324-31408]:IfStatement[31438-31522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31342-31408]:Block[31456-31522]"
    }, {
      "left" : "axis.removeChangeListener(this);",
      "right" : "axis.removeChangeListener(this);",
      "info" : "ExpressionStatement[31361-31393]:ExpressionStatement[31475-31507]"
    }, {
      "left" : "this.domainAxes.clear();",
      "right" : "this.domainAxes.clear();",
      "info" : "ExpressionStatement[31429-31453]:ExpressionStatement[31543-31567]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[31463-31506]:ExpressionStatement[31577-31620]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31575-31581]:Modifier[31689-31695]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31582-31586]:PrimitiveType[31696-31700]"
    }, {
      "left" : "configureDomainAxes",
      "right" : "configureDomainAxes",
      "info" : "SimpleName[31587-31606]:SimpleName[31701-31720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31609-31843]:Block[31723-31957]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[31620-31836]:ForStatement[31734-31950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31669-31836]:Block[31783-31950]"
    }, {
      "left" : "CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);",
      "right" : "CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[31684-31742]:VariableDeclarationStatement[31798-31856]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[31756-31825]:IfStatement[31870-31939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31774-31825]:Block[31888-31939]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[31793-31810]:ExpressionStatement[31907-31924]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32127-32133]:Modifier[32241-32247]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[32134-32143]:SimpleType[32248-32257]"
    }, {
      "left" : "getRangeAxis",
      "right" : "getRangeAxis",
      "info" : "SimpleName[32144-32156]:SimpleName[32258-32270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32159-32200]:Block[32273-32314]"
    }, {
      "left" : "return getRangeAxis(0);",
      "right" : "return getRangeAxis(0);",
      "info" : "ReturnStatement[32170-32193]:ReturnStatement[32284-32307]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32365-32371]:Modifier[32479-32485]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[32372-32381]:SimpleType[32486-32495]"
    }, {
      "left" : "getRangeAxis",
      "right" : "getRangeAxis",
      "info" : "SimpleName[32382-32394]:SimpleName[32496-32508]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[32395-32404]:SingleVariableDeclaration[32509-32518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32406-32846]:Block[32520-32960]"
    }, {
      "left" : "ValueAxis result = null;",
      "right" : "ValueAxis result = null;",
      "info" : "VariableDeclarationStatement[32417-32441]:VariableDeclarationStatement[32531-32555]"
    }, {
      "left" : "if (index < this.rangeAxes.size())",
      "right" : "if (index < this.rangeAxes.size())",
      "info" : "IfStatement[32451-32559]:IfStatement[32565-32673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32486-32559]:Block[32600-32673]"
    }, {
      "left" : "result = (ValueAxis) this.rangeAxes.get(index);",
      "right" : "result = (ValueAxis) this.rangeAxes.get(index);",
      "info" : "ExpressionStatement[32501-32548]:ExpressionStatement[32615-32662]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[32569-32815]:IfStatement[32683-32929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32589-32815]:Block[32703-32929]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[32604-32630]:VariableDeclarationStatement[32718-32744]"
    }, {
      "left" : "if (parent instanceof CategoryPlot)",
      "right" : "if (parent instanceof CategoryPlot)",
      "info" : "IfStatement[32644-32804]:IfStatement[32758-32918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32680-32804]:Block[32794-32918]"
    }, {
      "left" : "CategoryPlot cp = (CategoryPlot) parent;",
      "right" : "CategoryPlot cp = (CategoryPlot) parent;",
      "info" : "VariableDeclarationStatement[32699-32739]:VariableDeclarationStatement[32813-32853]"
    }, {
      "left" : "result = cp.getRangeAxis(index);",
      "right" : "result = cp.getRangeAxis(index);",
      "info" : "ExpressionStatement[32757-32789]:ExpressionStatement[32871-32903]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[32825-32839]:ReturnStatement[32939-32953]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33055-33061]:Modifier[33169-33175]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33062-33066]:PrimitiveType[33176-33180]"
    }, {
      "left" : "setRangeAxis",
      "right" : "setRangeAxis",
      "info" : "SimpleName[33067-33079]:SimpleName[33181-33193]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[33080-33094]:SingleVariableDeclaration[33194-33208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33096-33136]:Block[33210-33250]"
    }, {
      "left" : "setRangeAxis(0, axis);",
      "right" : "setRangeAxis(0, axis);",
      "info" : "ExpressionStatement[33107-33129]:ExpressionStatement[33221-33243]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33338-33344]:Modifier[33452-33458]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33345-33349]:PrimitiveType[33459-33463]"
    }, {
      "left" : "setRangeAxis",
      "right" : "setRangeAxis",
      "info" : "SimpleName[33350-33362]:SimpleName[33464-33476]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[33363-33372]:SingleVariableDeclaration[33477-33486]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[33374-33388]:SingleVariableDeclaration[33488-33502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33390-33440]:Block[33504-33554]"
    }, {
      "left" : "setRangeAxis(index, axis, true);",
      "right" : "setRangeAxis(index, axis, true);",
      "info" : "ExpressionStatement[33401-33433]:ExpressionStatement[33515-33547]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33707-33713]:Modifier[33821-33827]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33714-33718]:PrimitiveType[33828-33832]"
    }, {
      "left" : "setRangeAxis",
      "right" : "setRangeAxis",
      "info" : "SimpleName[33719-33731]:SimpleName[33833-33845]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[33732-33741]:SingleVariableDeclaration[33846-33855]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[33743-33757]:SingleVariableDeclaration[33857-33871]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[33759-33773]:SingleVariableDeclaration[33873-33887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33775-34266]:Block[33889-34380]"
    }, {
      "left" : "ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);",
      "right" : "ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);",
      "info" : "VariableDeclarationStatement[33786-33845]:VariableDeclarationStatement[33900-33959]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[33855-33939]:IfStatement[33969-34053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33877-33939]:Block[33991-34053]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[33892-33928]:ExpressionStatement[34006-34042]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[33949-34012]:IfStatement[34063-34126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33967-34012]:Block[34081-34126]"
    }, {
      "left" : "axis.setPlot(this);",
      "right" : "axis.setPlot(this);",
      "info" : "ExpressionStatement[33982-34001]:ExpressionStatement[34096-34115]"
    }, {
      "left" : "this.rangeAxes.set(index, axis);",
      "right" : "this.rangeAxes.set(index, axis);",
      "info" : "ExpressionStatement[34022-34054]:ExpressionStatement[34136-34168]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[34064-34168]:IfStatement[34178-34282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34082-34168]:Block[34196-34282]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[34097-34114]:ExpressionStatement[34211-34228]"
    }, {
      "left" : "axis.addChangeListener(this);",
      "right" : "axis.addChangeListener(this);",
      "info" : "ExpressionStatement[34128-34157]:ExpressionStatement[34242-34271]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[34178-34259]:IfStatement[34292-34373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34190-34259]:Block[34304-34373]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[34205-34248]:ExpressionStatement[34319-34362]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34534-34540]:Modifier[34648-34654]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34541-34545]:PrimitiveType[34655-34659]"
    }, {
      "left" : "setRangeAxes",
      "right" : "setRangeAxes",
      "info" : "SimpleName[34546-34558]:SimpleName[34660-34672]"
    }, {
      "left" : "ValueAxis[] axes",
      "right" : "ValueAxis[] axes",
      "info" : "SingleVariableDeclaration[34559-34575]:SingleVariableDeclaration[34673-34689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34577-34747]:Block[34691-34861]"
    }, {
      "left" : "for (int i = 0; i < axes.length; i++)",
      "right" : "for (int i = 0; i < axes.length; i++)",
      "info" : "ForStatement[34588-34687]:ForStatement[34702-34801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34626-34687]:Block[34740-34801]"
    }, {
      "left" : "setRangeAxis(i, axes[i], false);",
      "right" : "setRangeAxis(i, axes[i], false);",
      "info" : "ExpressionStatement[34641-34673]:ExpressionStatement[34755-34787]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[34697-34740]:ExpressionStatement[34811-34854]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35127-35133]:Modifier[35241-35247]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[35134-35137]:PrimitiveType[35248-35251]"
    }, {
      "left" : "getRangeAxisIndex",
      "right" : "getRangeAxisIndex",
      "info" : "SimpleName[35138-35155]:SimpleName[35252-35269]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[35156-35170]:SingleVariableDeclaration[35270-35284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35172-35533]:Block[35286-35761]"
    }, {
      "left" : "int result = this.rangeAxes.indexOf(axis);",
      "right" : "int result = this.rangeAxes.indexOf(axis);",
      "info" : "VariableDeclarationStatement[35183-35225]:VariableDeclarationStatement[35411-35453]"
    }, {
      "left" : "if (result < 0)",
      "right" : "if (result < 0)",
      "info" : "IfStatement[35235-35502]:IfStatement[35463-35730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35251-35502]:Block[35479-35730]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[35289-35315]:VariableDeclarationStatement[35517-35543]"
    }, {
      "left" : "if (parent instanceof CategoryPlot)",
      "right" : "if (parent instanceof CategoryPlot)",
      "info" : "IfStatement[35329-35491]:IfStatement[35557-35719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35365-35491]:Block[35593-35719]"
    }, {
      "left" : "CategoryPlot p = (CategoryPlot) parent;",
      "right" : "CategoryPlot p = (CategoryPlot) parent;",
      "info" : "VariableDeclarationStatement[35384-35423]:VariableDeclarationStatement[35612-35651]"
    }, {
      "left" : "result = p.getRangeAxisIndex(axis);",
      "right" : "result = p.getRangeAxisIndex(axis);",
      "info" : "ExpressionStatement[35441-35476]:ExpressionStatement[35669-35704]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[35512-35526]:ReturnStatement[35740-35754]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35668-35674]:Modifier[35896-35902]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[35675-35687]:SimpleType[35903-35915]"
    }, {
      "left" : "getRangeAxisLocation",
      "right" : "getRangeAxisLocation",
      "info" : "SimpleName[35688-35708]:SimpleName[35916-35936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35711-35760]:Block[35939-35988]"
    }, {
      "left" : "return getRangeAxisLocation(0);",
      "right" : "return getRangeAxisLocation(0);",
      "info" : "ReturnStatement[35722-35753]:ReturnStatement[35950-35981]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35980-35986]:Modifier[36208-36214]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[35987-35999]:SimpleType[36215-36227]"
    }, {
      "left" : "getRangeAxisLocation",
      "right" : "getRangeAxisLocation",
      "info" : "SimpleName[36000-36020]:SimpleName[36228-36248]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[36021-36030]:SingleVariableDeclaration[36249-36258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36032-36355]:Block[36260-36583]"
    }, {
      "left" : "AxisLocation result = null;",
      "right" : "AxisLocation result = null;",
      "info" : "VariableDeclarationStatement[36043-36070]:VariableDeclarationStatement[36271-36298]"
    }, {
      "left" : "if (index < this.rangeAxisLocations.size())",
      "right" : "if (index < this.rangeAxisLocations.size())",
      "info" : "IfStatement[36080-36209]:IfStatement[36308-36437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36124-36209]:Block[36352-36437]"
    }, {
      "left" : "result = (AxisLocation) this.rangeAxisLocations.get(index);",
      "right" : "result = (AxisLocation) this.rangeAxisLocations.get(index);",
      "info" : "ExpressionStatement[36139-36198]:ExpressionStatement[36367-36426]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[36219-36324]:IfStatement[36447-36552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36239-36324]:Block[36467-36552]"
    }, {
      "left" : "result = AxisLocation.getOpposite(getRangeAxisLocation(0));",
      "right" : "result = AxisLocation.getOpposite(getRangeAxisLocation(0));",
      "info" : "ExpressionStatement[36254-36313]:ExpressionStatement[36482-36541]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[36334-36348]:ReturnStatement[36562-36576]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36696-36702]:Modifier[36924-36930]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36703-36707]:PrimitiveType[36931-36935]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[36708-36728]:SimpleName[36936-36956]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[36729-36750]:SingleVariableDeclaration[36957-36978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36752-36846]:Block[36980-37074]"
    }, {
      "left" : "setRangeAxisLocation(location, true);",
      "right" : "setRangeAxisLocation(location, true);",
      "info" : "ExpressionStatement[36802-36839]:ExpressionStatement[37030-37067]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37195-37201]:Modifier[37423-37429]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37202-37206]:PrimitiveType[37430-37434]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[37207-37227]:SimpleName[37435-37455]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[37228-37249]:SingleVariableDeclaration[37456-37477]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[37251-37265]:SingleVariableDeclaration[37479-37493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37267-37327]:Block[37495-37555]"
    }, {
      "left" : "setRangeAxisLocation(0, location, notify);",
      "right" : "setRangeAxisLocation(0, location, notify);",
      "info" : "ExpressionStatement[37278-37320]:ExpressionStatement[37506-37548]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37667-37673]:Modifier[37895-37901]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37674-37678]:PrimitiveType[37902-37906]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[37679-37699]:SimpleName[37907-37927]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[37700-37709]:SingleVariableDeclaration[37928-37937]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[37711-37732]:SingleVariableDeclaration[37939-37960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37734-37796]:Block[37962-38024]"
    }, {
      "left" : "setRangeAxisLocation(index, location, true);",
      "right" : "setRangeAxisLocation(index, location, true);",
      "info" : "ExpressionStatement[37745-37789]:ExpressionStatement[37973-38017]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38178-38184]:Modifier[38406-38412]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38185-38189]:PrimitiveType[38413-38417]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[38190-38210]:SimpleName[38418-38438]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[38211-38220]:SingleVariableDeclaration[38439-38448]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[38222-38243]:SingleVariableDeclaration[38450-38471]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[38284-38298]:SingleVariableDeclaration[38512-38526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38300-38629]:Block[38528-38857]"
    }, {
      "left" : "if (index == 0 && location == null)",
      "right" : "if (index == 0 && location == null)",
      "info" : "IfStatement[38311-38476]:IfStatement[38539-38704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38347-38476]:Block[38575-38704]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "info" : "ThrowStatement[38362-38465]:ThrowStatement[38590-38693]"
    }, {
      "left" : "this.rangeAxisLocations.set(index, location);",
      "right" : "this.rangeAxisLocations.set(index, location);",
      "info" : "ExpressionStatement[38486-38531]:ExpressionStatement[38714-38759]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[38541-38622]:IfStatement[38769-38850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38553-38622]:Block[38781-38850]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[38568-38611]:ExpressionStatement[38796-38839]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38781-38787]:Modifier[39009-39015]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[38788-38801]:SimpleType[39016-39029]"
    }, {
      "left" : "getRangeAxisEdge",
      "right" : "getRangeAxisEdge",
      "info" : "SimpleName[38802-38818]:SimpleName[39030-39046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38821-38866]:Block[39049-39094]"
    }, {
      "left" : "return getRangeAxisEdge(0);",
      "right" : "return getRangeAxisEdge(0);",
      "info" : "ReturnStatement[38832-38859]:ReturnStatement[39060-39087]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39015-39021]:Modifier[39243-39249]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[39022-39035]:SimpleType[39250-39263]"
    }, {
      "left" : "getRangeAxisEdge",
      "right" : "getRangeAxisEdge",
      "info" : "SimpleName[39036-39052]:SimpleName[39264-39280]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[39053-39062]:SingleVariableDeclaration[39281-39290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39064-39376]:Block[39292-39604]"
    }, {
      "left" : "AxisLocation location = getRangeAxisLocation(index);",
      "right" : "AxisLocation location = getRangeAxisLocation(index);",
      "info" : "VariableDeclarationStatement[39075-39127]:VariableDeclarationStatement[39303-39355]"
    }, {
      "left" : "RectangleEdge result = Plot.resolveRangeAxisLocation(location, \r\n                this.orientation);",
      "right" : "RectangleEdge result = Plot.resolveRangeAxisLocation(location, \r\n                this.orientation);",
      "info" : "VariableDeclarationStatement[39137-39236]:VariableDeclarationStatement[39365-39464]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[39246-39345]:IfStatement[39474-39573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39266-39345]:Block[39494-39573]"
    }, {
      "left" : "result = RectangleEdge.opposite(getRangeAxisEdge(0));",
      "right" : "result = RectangleEdge.opposite(getRangeAxisEdge(0));",
      "info" : "ExpressionStatement[39281-39334]:ExpressionStatement[39509-39562]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[39355-39369]:ReturnStatement[39583-39597]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39484-39490]:Modifier[39712-39718]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[39491-39494]:PrimitiveType[39719-39722]"
    }, {
      "left" : "getRangeAxisCount",
      "right" : "getRangeAxisCount",
      "info" : "SimpleName[39495-39512]:SimpleName[39723-39740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39515-39562]:Block[39743-39790]"
    }, {
      "left" : "return this.rangeAxes.size();",
      "right" : "return this.rangeAxes.size();",
      "info" : "ReturnStatement[39526-39555]:ReturnStatement[39754-39783]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39706-39712]:Modifier[39934-39940]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[39713-39717]:PrimitiveType[39941-39945]"
    }, {
      "left" : "clearRangeAxes",
      "right" : "clearRangeAxes",
      "info" : "SimpleName[39718-39732]:SimpleName[39946-39960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39735-40062]:Block[39963-40290]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[39746-39969]:ForStatement[39974-40197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39794-39969]:Block[40022-40197]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[39809-39860]:VariableDeclarationStatement[40037-40088]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[39874-39958]:IfStatement[40102-40186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39892-39958]:Block[40120-40186]"
    }, {
      "left" : "axis.removeChangeListener(this);",
      "right" : "axis.removeChangeListener(this);",
      "info" : "ExpressionStatement[39911-39943]:ExpressionStatement[40139-40171]"
    }, {
      "left" : "this.rangeAxes.clear();",
      "right" : "this.rangeAxes.clear();",
      "info" : "ExpressionStatement[39979-40002]:ExpressionStatement[40207-40230]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[40012-40055]:ExpressionStatement[40240-40283]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40123-40129]:Modifier[40351-40357]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40130-40134]:PrimitiveType[40358-40362]"
    }, {
      "left" : "configureRangeAxes",
      "right" : "configureRangeAxes",
      "info" : "SimpleName[40135-40153]:SimpleName[40363-40381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40156-40382]:Block[40384-40610]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[40167-40375]:ForStatement[40395-40603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40215-40375]:Block[40443-40603]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[40230-40281]:VariableDeclarationStatement[40458-40509]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[40295-40364]:IfStatement[40523-40592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40313-40364]:Block[40541-40592]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[40332-40349]:ExpressionStatement[40560-40577]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40583-40589]:Modifier[40811-40817]"
    }, {
      "left" : "CategoryDataset",
      "right" : "CategoryDataset",
      "info" : "SimpleType[40590-40605]:SimpleType[40818-40833]"
    }, {
      "left" : "getDataset",
      "right" : "getDataset",
      "info" : "SimpleName[40606-40616]:SimpleName[40834-40844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40619-40658]:Block[40847-40886]"
    }, {
      "left" : "return getDataset(0);",
      "right" : "return getDataset(0);",
      "info" : "ReturnStatement[40630-40651]:ReturnStatement[40858-40879]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40903-40909]:Modifier[41131-41137]"
    }, {
      "left" : "CategoryDataset",
      "right" : "CategoryDataset",
      "info" : "SimpleType[40910-40925]:SimpleType[41138-41153]"
    }, {
      "left" : "getDataset",
      "right" : "getDataset",
      "info" : "SimpleName[40926-40936]:SimpleName[41154-41164]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[40937-40946]:SingleVariableDeclaration[41165-41174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40948-41142]:Block[41176-41370]"
    }, {
      "left" : "CategoryDataset result = null;",
      "right" : "CategoryDataset result = null;",
      "info" : "VariableDeclarationStatement[40959-40989]:VariableDeclarationStatement[41187-41217]"
    }, {
      "left" : "if (this.datasets.size() > index)",
      "right" : "if (this.datasets.size() > index)",
      "info" : "IfStatement[40999-41111]:IfStatement[41227-41339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41033-41111]:Block[41261-41339]"
    }, {
      "left" : "result = (CategoryDataset) this.datasets.get(index);",
      "right" : "result = (CategoryDataset) this.datasets.get(index);",
      "info" : "ExpressionStatement[41048-41100]:ExpressionStatement[41276-41328]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[41121-41135]:ReturnStatement[41349-41363]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41591-41597]:Modifier[41819-41825]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[41598-41602]:PrimitiveType[41826-41830]"
    }, {
      "left" : "setDataset",
      "right" : "setDataset",
      "info" : "SimpleName[41603-41613]:SimpleName[41831-41841]"
    }, {
      "left" : "CategoryDataset dataset",
      "right" : "CategoryDataset dataset",
      "info" : "SingleVariableDeclaration[41614-41637]:SingleVariableDeclaration[41842-41865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41639-41680]:Block[41867-41908]"
    }, {
      "left" : "setDataset(0, dataset);",
      "right" : "setDataset(0, dataset);",
      "info" : "ExpressionStatement[41650-41673]:ExpressionStatement[41878-41901]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41898-41904]:Modifier[42126-42132]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[41905-41909]:PrimitiveType[42133-42137]"
    }, {
      "left" : "setDataset",
      "right" : "setDataset",
      "info" : "SimpleName[41910-41920]:SimpleName[42138-42148]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[41921-41930]:SingleVariableDeclaration[42149-42158]"
    }, {
      "left" : "CategoryDataset dataset",
      "right" : "CategoryDataset dataset",
      "info" : "SingleVariableDeclaration[41932-41955]:SingleVariableDeclaration[42160-42183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41957-42460]:Block[42185-42688]"
    }, {
      "left" : "CategoryDataset existing = (CategoryDataset) this.datasets.get(index);",
      "right" : "CategoryDataset existing = (CategoryDataset) this.datasets.get(index);",
      "info" : "VariableDeclarationStatement[41978-42048]:VariableDeclarationStatement[42206-42276]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[42058-42142]:IfStatement[42286-42370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42080-42142]:Block[42308-42370]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[42095-42131]:ExpressionStatement[42323-42359]"
    }, {
      "left" : "this.datasets.set(index, dataset);",
      "right" : "this.datasets.set(index, dataset);",
      "info" : "ExpressionStatement[42152-42186]:ExpressionStatement[42380-42414]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[42196-42275]:IfStatement[42424-42503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42217-42275]:Block[42445-42503]"
    }, {
      "left" : "dataset.addChangeListener(this);",
      "right" : "dataset.addChangeListener(this);",
      "info" : "ExpressionStatement[42232-42264]:ExpressionStatement[42460-42492]"
    }, {
      "left" : "DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",
      "right" : "DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",
      "info" : "VariableDeclarationStatement[42346-42411]:VariableDeclarationStatement[42574-42639]"
    }, {
      "left" : "datasetChanged(event);",
      "right" : "datasetChanged(event);",
      "info" : "ExpressionStatement[42421-42443]:ExpressionStatement[42649-42671]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42604-42610]:Modifier[42832-42838]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[42611-42614]:PrimitiveType[42839-42842]"
    }, {
      "left" : "getDatasetCount",
      "right" : "getDatasetCount",
      "info" : "SimpleName[42615-42630]:SimpleName[42843-42858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42633-42679]:Block[42861-42907]"
    }, {
      "left" : "return this.datasets.size();",
      "right" : "return this.datasets.size();",
      "info" : "ReturnStatement[42644-42672]:ReturnStatement[42872-42900]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42927-42933]:Modifier[43155-43161]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[42934-42938]:PrimitiveType[43162-43166]"
    }, {
      "left" : "mapDatasetToDomainAxis",
      "right" : "mapDatasetToDomainAxis",
      "info" : "SimpleName[42939-42961]:SimpleName[43167-43189]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[42962-42971]:SingleVariableDeclaration[43190-43199]"
    }, {
      "left" : "int axisIndex",
      "right" : "int axisIndex",
      "info" : "SingleVariableDeclaration[42973-42986]:SingleVariableDeclaration[43201-43214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42988-43205]:Block[43216-43433]"
    }, {
      "left" : "this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));",
      "right" : "this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));",
      "info" : "ExpressionStatement[42999-43062]:ExpressionStatement[43227-43290]"
    }, {
      "left" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "right" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "info" : "ExpressionStatement[43132-43196]:ExpressionStatement[43360-43424]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43534-43540]:Modifier[43762-43768]"
    }, {
      "left" : "CategoryAxis",
      "right" : "CategoryAxis",
      "info" : "SimpleType[43541-43553]:SimpleType[43769-43781]"
    }, {
      "left" : "getDomainAxisForDataset",
      "right" : "getDomainAxisForDataset",
      "info" : "SimpleName[43554-43577]:SimpleName[43782-43805]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[43578-43587]:SingleVariableDeclaration[43806-43815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43589-43856]:Block[43817-44084]"
    }, {
      "left" : "CategoryAxis result = getDomainAxis();",
      "right" : "CategoryAxis result = getDomainAxis();",
      "info" : "VariableDeclarationStatement[43600-43638]:VariableDeclarationStatement[43828-43866]"
    }, {
      "left" : "Integer axisIndex = (Integer) this.datasetToDomainAxisMap.get(index);",
      "right" : "Integer axisIndex = (Integer) this.datasetToDomainAxisMap.get(index);",
      "info" : "VariableDeclarationStatement[43648-43717]:VariableDeclarationStatement[43876-43945]"
    }, {
      "left" : "if (axisIndex != null)",
      "right" : "if (axisIndex != null)",
      "info" : "IfStatement[43727-43821]:IfStatement[43955-44049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43750-43821]:Block[43978-44049]"
    }, {
      "left" : "result = getDomainAxis(axisIndex.intValue());",
      "right" : "result = getDomainAxis(axisIndex.intValue());",
      "info" : "ExpressionStatement[43765-43810]:ExpressionStatement[43993-44038]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[43831-43845]:ReturnStatement[44059-44073]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44106-44112]:Modifier[44334-44340]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[44113-44117]:PrimitiveType[44341-44345]"
    }, {
      "left" : "mapDatasetToRangeAxis",
      "right" : "mapDatasetToRangeAxis",
      "info" : "SimpleName[44118-44139]:SimpleName[44346-44367]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[44140-44149]:SingleVariableDeclaration[44368-44377]"
    }, {
      "left" : "int axisIndex",
      "right" : "int axisIndex",
      "info" : "SingleVariableDeclaration[44151-44164]:SingleVariableDeclaration[44379-44392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44166-44380]:Block[44394-44608]"
    }, {
      "left" : "this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));",
      "right" : "this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));",
      "info" : "ExpressionStatement[44177-44239]:ExpressionStatement[44405-44467]"
    }, {
      "left" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "right" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "info" : "ExpressionStatement[44307-44371]:ExpressionStatement[44535-44599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44705-44711]:Modifier[44933-44939]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[44712-44721]:SimpleType[44940-44949]"
    }, {
      "left" : "getRangeAxisForDataset",
      "right" : "getRangeAxisForDataset",
      "info" : "SimpleName[44722-44744]:SimpleName[44950-44972]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[44745-44754]:SingleVariableDeclaration[44973-44982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44756-45017]:Block[44984-45245]"
    }, {
      "left" : "ValueAxis result = getRangeAxis();",
      "right" : "ValueAxis result = getRangeAxis();",
      "info" : "VariableDeclarationStatement[44767-44801]:VariableDeclarationStatement[44995-45029]"
    }, {
      "left" : "Integer axisIndex = (Integer) this.datasetToRangeAxisMap.get(index);",
      "right" : "Integer axisIndex = (Integer) this.datasetToRangeAxisMap.get(index);",
      "info" : "VariableDeclarationStatement[44811-44879]:VariableDeclarationStatement[45039-45107]"
    }, {
      "left" : "if (axisIndex != null)",
      "right" : "if (axisIndex != null)",
      "info" : "IfStatement[44889-44982]:IfStatement[45117-45210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44912-44982]:Block[45140-45210]"
    }, {
      "left" : "result = getRangeAxis(axisIndex.intValue());",
      "right" : "result = getRangeAxis(axisIndex.intValue());",
      "info" : "ExpressionStatement[44927-44971]:ExpressionStatement[45155-45199]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[44992-45006]:ReturnStatement[45220-45234]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45200-45206]:Modifier[45428-45434]"
    }, {
      "left" : "CategoryItemRenderer",
      "right" : "CategoryItemRenderer",
      "info" : "SimpleType[45207-45227]:SimpleType[45435-45455]"
    }, {
      "left" : "getRenderer",
      "right" : "getRenderer",
      "info" : "SimpleName[45228-45239]:SimpleName[45456-45467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45242-45282]:Block[45470-45510]"
    }, {
      "left" : "return getRenderer(0);",
      "right" : "return getRenderer(0);",
      "info" : "ReturnStatement[45253-45275]:ReturnStatement[45481-45503]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45536-45542]:Modifier[45764-45770]"
    }, {
      "left" : "CategoryItemRenderer",
      "right" : "CategoryItemRenderer",
      "info" : "SimpleType[45543-45563]:SimpleType[45771-45791]"
    }, {
      "left" : "getRenderer",
      "right" : "getRenderer",
      "info" : "SimpleName[45564-45575]:SimpleName[45792-45803]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[45576-45585]:SingleVariableDeclaration[45804-45813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45587-45793]:Block[45815-46021]"
    }, {
      "left" : "CategoryItemRenderer result = null;",
      "right" : "CategoryItemRenderer result = null;",
      "info" : "VariableDeclarationStatement[45598-45633]:VariableDeclarationStatement[45826-45861]"
    }, {
      "left" : "if (this.renderers.size() > index)",
      "right" : "if (this.renderers.size() > index)",
      "info" : "IfStatement[45643-45762]:IfStatement[45871-45990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45678-45762]:Block[45906-45990]"
    }, {
      "left" : "result = (CategoryItemRenderer) this.renderers.get(index);",
      "right" : "result = (CategoryItemRenderer) this.renderers.get(index);",
      "info" : "ExpressionStatement[45693-45751]:ExpressionStatement[45921-45979]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[45772-45786]:ReturnStatement[46000-46014]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46106-46112]:Modifier[46334-46340]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[46113-46117]:PrimitiveType[46341-46345]"
    }, {
      "left" : "setRenderer",
      "right" : "setRenderer",
      "info" : "SimpleName[46118-46129]:SimpleName[46346-46357]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[46130-46159]:SingleVariableDeclaration[46358-46387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46161-46210]:Block[46389-46438]"
    }, {
      "left" : "setRenderer(0, renderer, true);",
      "right" : "setRenderer(0, renderer, true);",
      "info" : "ExpressionStatement[46172-46203]:ExpressionStatement[46400-46431]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46822-46828]:Modifier[47050-47056]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[46829-46833]:PrimitiveType[47057-47061]"
    }, {
      "left" : "setRenderer",
      "right" : "setRenderer",
      "info" : "SimpleName[46834-46845]:SimpleName[47062-47073]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[46846-46875]:SingleVariableDeclaration[47074-47103]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[46877-46891]:SingleVariableDeclaration[47105-47119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46893-46944]:Block[47121-47172]"
    }, {
      "left" : "setRenderer(0, renderer, notify);",
      "right" : "setRenderer(0, renderer, notify);",
      "info" : "ExpressionStatement[46904-46937]:ExpressionStatement[47132-47165]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47305-47311]:Modifier[47533-47539]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[47312-47316]:PrimitiveType[47540-47544]"
    }, {
      "left" : "setRenderer",
      "right" : "setRenderer",
      "info" : "SimpleName[47317-47328]:SimpleName[47545-47556]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[47329-47338]:SingleVariableDeclaration[47557-47566]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[47340-47369]:SingleVariableDeclaration[47568-47597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47371-47427]:Block[47599-47655]"
    }, {
      "left" : "setRenderer(index, renderer, true);",
      "right" : "setRenderer(index, renderer, true);",
      "info" : "ExpressionStatement[47382-47417]:ExpressionStatement[47610-47645]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47742-47748]:Modifier[47970-47976]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[47749-47753]:PrimitiveType[47977-47981]"
    }, {
      "left" : "setRenderer",
      "right" : "setRenderer",
      "info" : "SimpleName[47754-47765]:SimpleName[47982-47993]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[47766-47775]:SingleVariableDeclaration[47994-48003]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[47777-47806]:SingleVariableDeclaration[48005-48034]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[47838-47852]:SingleVariableDeclaration[48066-48080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47854-48525]:Block[48082-48753]"
    }, {
      "left" : "CategoryItemRenderer existing \r\n            = (CategoryItemRenderer) this.renderers.get(index);",
      "right" : "CategoryItemRenderer existing \r\n            = (CategoryItemRenderer) this.renderers.get(index);",
      "info" : "VariableDeclarationStatement[47930-48025]:VariableDeclarationStatement[48158-48253]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[48035-48119]:IfStatement[48263-48347]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48057-48119]:Block[48285-48347]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[48072-48108]:ExpressionStatement[48300-48336]"
    }, {
      "left" : "this.renderers.set(index, renderer);",
      "right" : "this.renderers.set(index, renderer);",
      "info" : "ExpressionStatement[48180-48216]:ExpressionStatement[48408-48444]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[48226-48344]:IfStatement[48454-48572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48248-48344]:Block[48476-48572]"
    }, {
      "left" : "renderer.setPlot(this);",
      "right" : "renderer.setPlot(this);",
      "info" : "ExpressionStatement[48263-48286]:ExpressionStatement[48491-48514]"
    }, {
      "left" : "renderer.addChangeListener(this);",
      "right" : "renderer.addChangeListener(this);",
      "info" : "ExpressionStatement[48300-48333]:ExpressionStatement[48528-48561]"
    }, {
      "left" : "configureDomainAxes();",
      "right" : "configureDomainAxes();",
      "info" : "ExpressionStatement[48364-48386]:ExpressionStatement[48592-48614]"
    }, {
      "left" : "configureRangeAxes();",
      "right" : "configureRangeAxes();",
      "info" : "ExpressionStatement[48396-48417]:ExpressionStatement[48624-48645]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[48437-48518]:IfStatement[48665-48746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48449-48518]:Block[48677-48746]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[48464-48507]:ExpressionStatement[48692-48735]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48715-48721]:Modifier[48943-48949]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48722-48726]:PrimitiveType[48950-48954]"
    }, {
      "left" : "setRenderers",
      "right" : "setRenderers",
      "info" : "SimpleName[48727-48739]:SimpleName[48955-48967]"
    }, {
      "left" : "CategoryItemRenderer[] renderers",
      "right" : "CategoryItemRenderer[] renderers",
      "info" : "SingleVariableDeclaration[48740-48772]:SingleVariableDeclaration[48968-49000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48774-48953]:Block[49002-49181]"
    }, {
      "left" : "for (int i = 0; i < renderers.length; i++)",
      "right" : "for (int i = 0; i < renderers.length; i++)",
      "info" : "ForStatement[48785-48893]:ForStatement[49013-49121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48828-48893]:Block[49056-49121]"
    }, {
      "left" : "setRenderer(i, renderers[i], false);",
      "right" : "setRenderer(i, renderers[i], false);",
      "info" : "ExpressionStatement[48843-48879]:ExpressionStatement[49071-49107]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[48903-48946]:ExpressionStatement[49131-49174]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49278-49284]:Modifier[49506-49512]"
    }, {
      "left" : "CategoryItemRenderer",
      "right" : "CategoryItemRenderer",
      "info" : "SimpleType[49285-49305]:SimpleType[49513-49533]"
    }, {
      "left" : "getRendererForDataset",
      "right" : "getRendererForDataset",
      "info" : "SimpleName[49306-49327]:SimpleName[49534-49555]"
    }, {
      "left" : "CategoryDataset dataset",
      "right" : "CategoryDataset dataset",
      "info" : "SingleVariableDeclaration[49328-49351]:SingleVariableDeclaration[49556-49579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49353-49665]:Block[49581-49893]"
    }, {
      "left" : "CategoryItemRenderer result = null;",
      "right" : "CategoryItemRenderer result = null;",
      "info" : "VariableDeclarationStatement[49364-49399]:VariableDeclarationStatement[49592-49627]"
    }, {
      "left" : "for (int i = 0; i < this.datasets.size(); i++)",
      "right" : "for (int i = 0; i < this.datasets.size(); i++)",
      "info" : "ForStatement[49409-49634]:ForStatement[49637-49862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49456-49634]:Block[49684-49862]"
    }, {
      "left" : "if (this.datasets.get(i) == dataset)",
      "right" : "if (this.datasets.get(i) == dataset)",
      "info" : "IfStatement[49471-49623]:IfStatement[49699-49851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49508-49623]:Block[49736-49851]"
    }, {
      "left" : "result = (CategoryItemRenderer) this.renderers.get(i);",
      "right" : "result = (CategoryItemRenderer) this.renderers.get(i);",
      "info" : "ExpressionStatement[49527-49581]:ExpressionStatement[49755-49809]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[49602-49608]:BreakStatement[49830-49836]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[49644-49658]:ReturnStatement[49872-49886]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49944-49950]:Modifier[50172-50178]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[49951-49954]:PrimitiveType[50179-50182]"
    }, {
      "left" : "getIndexOf",
      "right" : "getIndexOf",
      "info" : "SimpleName[49955-49965]:SimpleName[50183-50193]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[49966-49995]:SingleVariableDeclaration[50194-50223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49997-50055]:Block[50225-50283]"
    }, {
      "left" : "return this.renderers.indexOf(renderer);",
      "right" : "return this.renderers.indexOf(renderer);",
      "info" : "ReturnStatement[50008-50048]:ReturnStatement[50236-50276]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50258-50264]:Modifier[50486-50492]"
    }, {
      "left" : "DatasetRenderingOrder",
      "right" : "DatasetRenderingOrder",
      "info" : "SimpleType[50265-50286]:SimpleType[50493-50514]"
    }, {
      "left" : "getDatasetRenderingOrder",
      "right" : "getDatasetRenderingOrder",
      "info" : "SimpleName[50287-50311]:SimpleName[50515-50539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50314-50359]:Block[50542-50587]"
    }, {
      "left" : "return this.renderingOrder;",
      "right" : "return this.renderingOrder;",
      "info" : "ReturnStatement[50325-50352]:ReturnStatement[50553-50580]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50801-50807]:Modifier[51029-51035]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[50808-50812]:PrimitiveType[51036-51040]"
    }, {
      "left" : "setDatasetRenderingOrder",
      "right" : "setDatasetRenderingOrder",
      "info" : "SimpleName[50813-50837]:SimpleName[51041-51065]"
    }, {
      "left" : "DatasetRenderingOrder order",
      "right" : "DatasetRenderingOrder order",
      "info" : "SingleVariableDeclaration[50838-50865]:SingleVariableDeclaration[51066-51093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50867-51085]:Block[51095-51313]"
    }, {
      "left" : "if (order == null)",
      "right" : "if (order == null)",
      "info" : "IfStatement[50878-50987]:IfStatement[51106-51215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50897-50987]:Block[51125-51215]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "info" : "ThrowStatement[50912-50973]:ThrowStatement[51140-51201]"
    }, {
      "left" : "this.renderingOrder = order;",
      "right" : "this.renderingOrder = order;",
      "info" : "ExpressionStatement[50997-51025]:ExpressionStatement[51225-51253]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[51035-51078]:ExpressionStatement[51263-51306]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51376-51382]:Modifier[51604-51610]"
    }, {
      "left" : "SortOrder",
      "right" : "SortOrder",
      "info" : "SimpleType[51383-51392]:SimpleType[51611-51620]"
    }, {
      "left" : "getColumnRenderingOrder",
      "right" : "getColumnRenderingOrder",
      "info" : "SimpleName[51393-51416]:SimpleName[51621-51644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51419-51470]:Block[51647-51698]"
    }, {
      "left" : "return this.columnRenderingOrder;",
      "right" : "return this.columnRenderingOrder;",
      "info" : "ReturnStatement[51430-51463]:ReturnStatement[51658-51691]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51940-51946]:Modifier[52168-52174]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[51947-51951]:PrimitiveType[52175-52179]"
    }, {
      "left" : "setColumnRenderingOrder",
      "right" : "setColumnRenderingOrder",
      "info" : "SimpleName[51952-51975]:SimpleName[52180-52203]"
    }, {
      "left" : "SortOrder order",
      "right" : "SortOrder order",
      "info" : "SingleVariableDeclaration[51976-51991]:SingleVariableDeclaration[52204-52219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51993-52214]:Block[52221-52442]"
    }, {
      "left" : "if (order == null)",
      "right" : "if (order == null)",
      "info" : "IfStatement[52004-52110]:IfStatement[52232-52338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52023-52110]:Block[52251-52338]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "info" : "ThrowStatement[52038-52099]:ThrowStatement[52266-52327]"
    }, {
      "left" : "this.columnRenderingOrder = order;",
      "right" : "this.columnRenderingOrder = order;",
      "info" : "ExpressionStatement[52120-52154]:ExpressionStatement[52348-52382]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[52164-52207]:ExpressionStatement[52392-52435]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52490-52496]:Modifier[52718-52724]"
    }, {
      "left" : "SortOrder",
      "right" : "SortOrder",
      "info" : "SimpleType[52497-52506]:SimpleType[52725-52734]"
    }, {
      "left" : "getRowRenderingOrder",
      "right" : "getRowRenderingOrder",
      "info" : "SimpleName[52507-52527]:SimpleName[52735-52755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52530-52578]:Block[52758-52806]"
    }, {
      "left" : "return this.rowRenderingOrder;",
      "right" : "return this.rowRenderingOrder;",
      "info" : "ReturnStatement[52541-52571]:ReturnStatement[52769-52799]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53041-53047]:Modifier[53269-53275]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[53048-53052]:PrimitiveType[53276-53280]"
    }, {
      "left" : "setRowRenderingOrder",
      "right" : "setRowRenderingOrder",
      "info" : "SimpleName[53053-53073]:SimpleName[53281-53301]"
    }, {
      "left" : "SortOrder order",
      "right" : "SortOrder order",
      "info" : "SingleVariableDeclaration[53074-53089]:SingleVariableDeclaration[53302-53317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53091-53309]:Block[53319-53537]"
    }, {
      "left" : "if (order == null)",
      "right" : "if (order == null)",
      "info" : "IfStatement[53102-53208]:IfStatement[53330-53436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53121-53208]:Block[53349-53436]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "info" : "ThrowStatement[53136-53197]:ThrowStatement[53364-53425]"
    }, {
      "left" : "this.rowRenderingOrder = order;",
      "right" : "this.rowRenderingOrder = order;",
      "info" : "ExpressionStatement[53218-53249]:ExpressionStatement[53446-53477]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[53259-53302]:ExpressionStatement[53487-53530]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53548-53554]:Modifier[53776-53782]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[53555-53562]:PrimitiveType[53783-53790]"
    }, {
      "left" : "isDomainGridlinesVisible",
      "right" : "isDomainGridlinesVisible",
      "info" : "SimpleName[53563-53587]:SimpleName[53791-53815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53590-53643]:Block[53818-53871]"
    }, {
      "left" : "return this.domainGridlinesVisible;",
      "right" : "return this.domainGridlinesVisible;",
      "info" : "ReturnStatement[53601-53636]:ReturnStatement[53829-53864]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54003-54009]:Modifier[54231-54237]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[54010-54014]:PrimitiveType[54238-54242]"
    }, {
      "left" : "setDomainGridlinesVisible",
      "right" : "setDomainGridlinesVisible",
      "info" : "SimpleName[54015-54040]:SimpleName[54243-54268]"
    }, {
      "left" : "boolean visible",
      "right" : "boolean visible",
      "info" : "SingleVariableDeclaration[54041-54056]:SingleVariableDeclaration[54269-54284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54058-54241]:Block[54286-54469]"
    }, {
      "left" : "if (this.domainGridlinesVisible != visible)",
      "right" : "if (this.domainGridlinesVisible != visible)",
      "info" : "IfStatement[54069-54234]:IfStatement[54297-54462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54113-54234]:Block[54341-54462]"
    }, {
      "left" : "this.domainGridlinesVisible = visible;",
      "right" : "this.domainGridlinesVisible = visible;",
      "info" : "ExpressionStatement[54128-54166]:ExpressionStatement[54356-54394]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[54180-54223]:ExpressionStatement[54408-54451]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54466-54472]:Modifier[54694-54700]"
    }, {
      "left" : "CategoryAnchor",
      "right" : "CategoryAnchor",
      "info" : "SimpleType[54473-54487]:SimpleType[54701-54715]"
    }, {
      "left" : "getDomainGridlinePosition",
      "right" : "getDomainGridlinePosition",
      "info" : "SimpleName[54488-54513]:SimpleName[54716-54741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54516-54569]:Block[54744-54797]"
    }, {
      "left" : "return this.domainGridlinePosition;",
      "right" : "return this.domainGridlinePosition;",
      "info" : "ReturnStatement[54527-54562]:ReturnStatement[54755-54790]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54858-54864]:Modifier[55086-55092]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[54865-54869]:PrimitiveType[55093-55097]"
    }, {
      "left" : "setDomainGridlinePosition",
      "right" : "setDomainGridlinePosition",
      "info" : "SimpleName[54870-54895]:SimpleName[55098-55123]"
    }, {
      "left" : "CategoryAnchor position",
      "right" : "CategoryAnchor position",
      "info" : "SingleVariableDeclaration[54896-54919]:SingleVariableDeclaration[55124-55147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54921-55156]:Block[55149-55384]"
    }, {
      "left" : "if (position == null)",
      "right" : "if (position == null)",
      "info" : "IfStatement[54932-55047]:IfStatement[55160-55275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54954-55047]:Block[55182-55275]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'position' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'position' argument.\");",
      "info" : "ThrowStatement[54969-55033]:ThrowStatement[55197-55261]"
    }, {
      "left" : "this.domainGridlinePosition = position;",
      "right" : "this.domainGridlinePosition = position;",
      "info" : "ExpressionStatement[55057-55096]:ExpressionStatement[55285-55324]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[55106-55149]:ExpressionStatement[55334-55377]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55375-55381]:Modifier[55603-55609]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[55382-55388]:SimpleType[55610-55616]"
    }, {
      "left" : "getDomainGridlineStroke",
      "right" : "getDomainGridlineStroke",
      "info" : "SimpleName[55389-55412]:SimpleName[55617-55640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55415-55466]:Block[55643-55694]"
    }, {
      "left" : "return this.domainGridlineStroke;",
      "right" : "return this.domainGridlineStroke;",
      "info" : "ReturnStatement[55426-55459]:ReturnStatement[55654-55687]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55763-55769]:Modifier[55991-55997]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55770-55774]:PrimitiveType[55998-56002]"
    }, {
      "left" : "setDomainGridlineStroke",
      "right" : "setDomainGridlineStroke",
      "info" : "SimpleName[55775-55798]:SimpleName[56003-56026]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[55799-55812]:SingleVariableDeclaration[56027-56040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55814-56046]:Block[56042-56274]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[55825-55941]:IfStatement[56053-56169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55845-55941]:Block[56073-56169]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' not permitted.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' not permitted.\");",
      "info" : "ThrowStatement[55860-55927]:ThrowStatement[56088-56155]"
    }, {
      "left" : "this.domainGridlineStroke = stroke;",
      "right" : "this.domainGridlineStroke = stroke;",
      "info" : "ExpressionStatement[55951-55986]:ExpressionStatement[56179-56214]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[55996-56039]:ExpressionStatement[56224-56267]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56261-56267]:Modifier[56489-56495]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[56268-56273]:SimpleType[56496-56501]"
    }, {
      "left" : "getDomainGridlinePaint",
      "right" : "getDomainGridlinePaint",
      "info" : "SimpleName[56274-56296]:SimpleName[56502-56524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56299-56349]:Block[56527-56577]"
    }, {
      "left" : "return this.domainGridlinePaint;",
      "right" : "return this.domainGridlinePaint;",
      "info" : "ReturnStatement[56310-56342]:ReturnStatement[56538-56570]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56656-56662]:Modifier[56884-56890]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[56663-56667]:PrimitiveType[56891-56895]"
    }, {
      "left" : "setDomainGridlinePaint",
      "right" : "setDomainGridlinePaint",
      "info" : "SimpleName[56668-56690]:SimpleName[56896-56918]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[56691-56702]:SingleVariableDeclaration[56919-56930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56704-56927]:Block[56932-57155]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[56715-56824]:IfStatement[56943-57052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56734-56824]:Block[56962-57052]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[56749-56810]:ThrowStatement[56977-57038]"
    }, {
      "left" : "this.domainGridlinePaint = paint;",
      "right" : "this.domainGridlinePaint = paint;",
      "info" : "ExpressionStatement[56834-56867]:ExpressionStatement[57062-57095]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[56877-56920]:ExpressionStatement[57105-57148]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57125-57131]:Modifier[57353-57359]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[57132-57139]:PrimitiveType[57360-57367]"
    }, {
      "left" : "isRangeGridlinesVisible",
      "right" : "isRangeGridlinesVisible",
      "info" : "SimpleName[57140-57163]:SimpleName[57368-57391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57166-57218]:Block[57394-57446]"
    }, {
      "left" : "return this.rangeGridlinesVisible;",
      "right" : "return this.rangeGridlinesVisible;",
      "info" : "ReturnStatement[57177-57211]:ReturnStatement[57405-57439]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57557-57563]:Modifier[57785-57791]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57564-57568]:PrimitiveType[57792-57796]"
    }, {
      "left" : "setRangeGridlinesVisible",
      "right" : "setRangeGridlinesVisible",
      "info" : "SimpleName[57569-57593]:SimpleName[57797-57821]"
    }, {
      "left" : "boolean visible",
      "right" : "boolean visible",
      "info" : "SingleVariableDeclaration[57594-57609]:SingleVariableDeclaration[57822-57837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57611-57792]:Block[57839-58020]"
    }, {
      "left" : "if (this.rangeGridlinesVisible != visible)",
      "right" : "if (this.rangeGridlinesVisible != visible)",
      "info" : "IfStatement[57622-57785]:IfStatement[57850-58013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57665-57785]:Block[57893-58013]"
    }, {
      "left" : "this.rangeGridlinesVisible = visible;",
      "right" : "this.rangeGridlinesVisible = visible;",
      "info" : "ExpressionStatement[57680-57717]:ExpressionStatement[57908-57945]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[57731-57774]:ExpressionStatement[57959-58002]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58013-58019]:Modifier[58241-58247]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[58020-58026]:SimpleType[58248-58254]"
    }, {
      "left" : "getRangeGridlineStroke",
      "right" : "getRangeGridlineStroke",
      "info" : "SimpleName[58027-58049]:SimpleName[58255-58277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58052-58102]:Block[58280-58330]"
    }, {
      "left" : "return this.rangeGridlineStroke;",
      "right" : "return this.rangeGridlineStroke;",
      "info" : "ReturnStatement[58063-58095]:ReturnStatement[58291-58323]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58402-58408]:Modifier[58630-58636]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[58409-58413]:PrimitiveType[58637-58641]"
    }, {
      "left" : "setRangeGridlineStroke",
      "right" : "setRangeGridlineStroke",
      "info" : "SimpleName[58414-58436]:SimpleName[58642-58664]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[58437-58450]:SingleVariableDeclaration[58665-58678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58452-58678]:Block[58680-58906]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[58463-58574]:IfStatement[58691-58802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58483-58574]:Block[58711-58802]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[58498-58560]:ThrowStatement[58726-58788]"
    }, {
      "left" : "this.rangeGridlineStroke = stroke;",
      "right" : "this.rangeGridlineStroke = stroke;",
      "info" : "ExpressionStatement[58584-58618]:ExpressionStatement[58812-58846]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[58628-58671]:ExpressionStatement[58856-58899]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58895-58901]:Modifier[59123-59129]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[58902-58907]:SimpleType[59130-59135]"
    }, {
      "left" : "getRangeGridlinePaint",
      "right" : "getRangeGridlinePaint",
      "info" : "SimpleName[58908-58929]:SimpleName[59136-59157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58932-58981]:Block[59160-59209]"
    }, {
      "left" : "return this.rangeGridlinePaint;",
      "right" : "return this.rangeGridlinePaint;",
      "info" : "ReturnStatement[58943-58974]:ReturnStatement[59171-59202]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59277-59283]:Modifier[59505-59511]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[59284-59288]:PrimitiveType[59512-59516]"
    }, {
      "left" : "setRangeGridlinePaint",
      "right" : "setRangeGridlinePaint",
      "info" : "SimpleName[59289-59310]:SimpleName[59517-59538]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[59311-59322]:SingleVariableDeclaration[59539-59550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59324-59546]:Block[59552-59774]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[59335-59444]:IfStatement[59563-59672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59354-59444]:Block[59582-59672]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[59369-59430]:ThrowStatement[59597-59658]"
    }, {
      "left" : "this.rangeGridlinePaint = paint;",
      "right" : "this.rangeGridlinePaint = paint;",
      "info" : "ExpressionStatement[59454-59486]:ExpressionStatement[59682-59714]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[59496-59539]:ExpressionStatement[59724-59767]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59761-59767]:Modifier[59989-59995]"
    }, {
      "left" : "LegendItemCollection",
      "right" : "LegendItemCollection",
      "info" : "SimpleType[59768-59788]:SimpleType[59996-60016]"
    }, {
      "left" : "getFixedLegendItems",
      "right" : "getFixedLegendItems",
      "info" : "SimpleName[59789-59808]:SimpleName[60017-60036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59811-59861]:Block[60039-60089]"
    }, {
      "left" : "return this.fixedLegendItems;",
      "right" : "return this.fixedLegendItems;",
      "info" : "ReturnStatement[59822-59851]:ReturnStatement[60050-60079]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60176-60182]:Modifier[60404-60410]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[60183-60187]:PrimitiveType[60411-60415]"
    }, {
      "left" : "setFixedLegendItems",
      "right" : "setFixedLegendItems",
      "info" : "SimpleName[60188-60207]:SimpleName[60416-60435]"
    }, {
      "left" : "LegendItemCollection items",
      "right" : "LegendItemCollection items",
      "info" : "SingleVariableDeclaration[60208-60234]:SingleVariableDeclaration[60436-60462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60236-60337]:Block[60464-60565]"
    }, {
      "left" : "this.fixedLegendItems = items;",
      "right" : "this.fixedLegendItems = items;",
      "info" : "ExpressionStatement[60247-60277]:ExpressionStatement[60475-60505]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[60287-60330]:ExpressionStatement[60515-60558]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60620-60626]:Modifier[60848-60854]"
    }, {
      "left" : "LegendItemCollection",
      "right" : "LegendItemCollection",
      "info" : "SimpleType[60627-60647]:SimpleType[60855-60875]"
    }, {
      "left" : "getLegendItems",
      "right" : "getLegendItems",
      "info" : "SimpleName[60648-60662]:SimpleName[60876-60890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60665-61741]:Block[60893-61969]"
    }, {
      "left" : "LegendItemCollection result = this.fixedLegendItems;",
      "right" : "LegendItemCollection result = this.fixedLegendItems;",
      "info" : "VariableDeclarationStatement[60676-60728]:VariableDeclarationStatement[60904-60956]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[60738-61710]:IfStatement[60966-61938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60758-61710]:Block[60986-61938]"
    }, {
      "left" : "result = new LegendItemCollection();",
      "right" : "result = new LegendItemCollection();",
      "info" : "ExpressionStatement[60773-60809]:ExpressionStatement[61001-61037]"
    }, {
      "left" : "int count = this.datasets.size();",
      "right" : "int count = this.datasets.size();",
      "info" : "VariableDeclarationStatement[60880-60913]:VariableDeclarationStatement[61108-61141]"
    }, {
      "left" : "for (int datasetIndex = 0; datasetIndex < count; datasetIndex++)",
      "right" : "for (int datasetIndex = 0; datasetIndex < count; datasetIndex++)",
      "info" : "ForStatement[60927-61699]:ForStatement[61155-61927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60992-61699]:Block[61220-61927]"
    }, {
      "left" : "CategoryDataset dataset = getDataset(datasetIndex);",
      "right" : "CategoryDataset dataset = getDataset(datasetIndex);",
      "info" : "VariableDeclarationStatement[61011-61062]:VariableDeclarationStatement[61239-61290]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[61080-61684]:IfStatement[61308-61912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61101-61684]:Block[61329-61912]"
    }, {
      "left" : "CategoryItemRenderer renderer = getRenderer(datasetIndex);",
      "right" : "CategoryItemRenderer renderer = getRenderer(datasetIndex);",
      "info" : "VariableDeclarationStatement[61124-61182]:VariableDeclarationStatement[61352-61410]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[61204-61665]:IfStatement[61432-61893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61226-61665]:Block[61454-61893]"
    }, {
      "left" : "int seriesCount = dataset.getRowCount();",
      "right" : "int seriesCount = dataset.getRowCount();",
      "info" : "VariableDeclarationStatement[61253-61293]:VariableDeclarationStatement[61481-61521]"
    }, {
      "left" : "for (int i = 0; i < seriesCount; i++)",
      "right" : "for (int i = 0; i < seriesCount; i++)",
      "info" : "ForStatement[61319-61642]:ForStatement[61547-61870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61357-61642]:Block[61585-61870]"
    }, {
      "left" : "LegendItem item = renderer.getLegendItem(\r\n                                    datasetIndex, i);",
      "right" : "LegendItem item = renderer.getLegendItem(\r\n                                    datasetIndex, i);",
      "info" : "VariableDeclarationStatement[61388-61484]:VariableDeclarationStatement[61616-61712]"
    }, {
      "left" : "if (item != null)",
      "right" : "if (item != null)",
      "info" : "IfStatement[61514-61615]:IfStatement[61742-61843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61532-61615]:Block[61760-61843]"
    }, {
      "left" : "result.add(item);",
      "right" : "result.add(item);",
      "info" : "ExpressionStatement[61567-61584]:ExpressionStatement[61795-61812]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[61720-61734]:ReturnStatement[61948-61962]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62039-62045]:Modifier[62267-62273]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[62046-62050]:PrimitiveType[62274-62278]"
    }, {
      "left" : "handleClick",
      "right" : "handleClick",
      "info" : "SimpleName[62051-62062]:SimpleName[62279-62290]"
    }, {
      "left" : "int x",
      "right" : "int x",
      "info" : "SingleVariableDeclaration[62063-62068]:SingleVariableDeclaration[62291-62296]"
    }, {
      "left" : "int y",
      "right" : "int y",
      "info" : "SingleVariableDeclaration[62070-62075]:SingleVariableDeclaration[62298-62303]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[62077-62099]:SingleVariableDeclaration[62305-62327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62101-62857]:Block[62329-63085]"
    }, {
      "left" : "Rectangle2D dataArea = info.getDataArea();",
      "right" : "Rectangle2D dataArea = info.getDataArea();",
      "info" : "VariableDeclarationStatement[62114-62156]:VariableDeclarationStatement[62342-62384]"
    }, {
      "left" : "if (dataArea.contains(x, y))",
      "right" : "if (dataArea.contains(x, y))",
      "info" : "IfStatement[62166-62848]:IfStatement[62394-63076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62195-62848]:Block[62423-63076]"
    }, {
      "left" : "double java2D = 0.0;",
      "right" : "double java2D = 0.0;",
      "info" : "VariableDeclarationStatement[62269-62289]:VariableDeclarationStatement[62497-62517]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[62303-62514]:IfStatement[62531-62742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62355-62400]:Block[62583-62628]"
    }, {
      "left" : "java2D = x;",
      "right" : "java2D = x;",
      "info" : "ExpressionStatement[62374-62385]:ExpressionStatement[62602-62613]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[62419-62514]:IfStatement[62647-62742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62469-62514]:Block[62697-62742]"
    }, {
      "left" : "java2D = y;",
      "right" : "java2D = y;",
      "info" : "ExpressionStatement[62488-62499]:ExpressionStatement[62716-62727]"
    }, {
      "left" : "RectangleEdge edge = Plot.resolveRangeAxisLocation(\r\n                    getRangeAxisLocation(), this.orientation);",
      "right" : "RectangleEdge edge = Plot.resolveRangeAxisLocation(\r\n                    getRangeAxisLocation(), this.orientation);",
      "info" : "VariableDeclarationStatement[62528-62643]:VariableDeclarationStatement[62756-62871]"
    }, {
      "left" : "double value = getRangeAxis().java2DToValue(\r\n                    java2D, info.getDataArea(), edge);",
      "right" : "double value = getRangeAxis().java2DToValue(\r\n                    java2D, info.getDataArea(), edge);",
      "info" : "VariableDeclarationStatement[62657-62757]:VariableDeclarationStatement[62885-62985]"
    }, {
      "left" : "setAnchorValue(value);",
      "right" : "setAnchorValue(value);",
      "info" : "ExpressionStatement[62771-62793]:ExpressionStatement[62999-63021]"
    }, {
      "left" : "setRangeCrosshairValue(value);",
      "right" : "setRangeCrosshairValue(value);",
      "info" : "ExpressionStatement[62807-62837]:ExpressionStatement[63035-63065]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63224-63230]:Modifier[63452-63458]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[63231-63235]:PrimitiveType[63459-63463]"
    }, {
      "left" : "zoom",
      "right" : "zoom",
      "info" : "SimpleName[63236-63240]:SimpleName[63464-63468]"
    }, {
      "left" : "double percent",
      "right" : "double percent",
      "info" : "SingleVariableDeclaration[63241-63255]:SingleVariableDeclaration[63469-63483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63257-63638]:Block[63485-63866]"
    }, {
      "left" : "if (percent > 0.0)",
      "right" : "if (percent > 0.0)",
      "info" : "IfStatement[63270-63629]:IfStatement[63498-63857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63289-63554]:Block[63517-63782]"
    }, {
      "left" : "double range = getRangeAxis().getRange().getLength();",
      "right" : "double range = getRangeAxis().getRange().getLength();",
      "info" : "VariableDeclarationStatement[63304-63357]:VariableDeclarationStatement[63532-63585]"
    }, {
      "left" : "double scaledRange = range * percent;",
      "right" : "double scaledRange = range * percent;",
      "info" : "VariableDeclarationStatement[63371-63408]:VariableDeclarationStatement[63599-63636]"
    }, {
      "left" : "getRangeAxis().setRange(this.anchorValue - scaledRange / 2.0,\r\n                    this.anchorValue + scaledRange / 2.0);",
      "right" : "getRangeAxis().setRange(this.anchorValue - scaledRange / 2.0,\r\n                    this.anchorValue + scaledRange / 2.0);",
      "info" : "ExpressionStatement[63422-63543]:ExpressionStatement[63650-63771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63569-63629]:Block[63797-63857]"
    }, {
      "left" : "getRangeAxis().setAutoRange(true);",
      "right" : "getRangeAxis().setAutoRange(true);",
      "info" : "ExpressionStatement[63584-63618]:ExpressionStatement[63812-63846]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63881-63887]:Modifier[64109-64115]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[63888-63892]:PrimitiveType[64116-64120]"
    }, {
      "left" : "datasetChanged",
      "right" : "datasetChanged",
      "info" : "SimpleName[63893-63907]:SimpleName[64121-64135]"
    }, {
      "left" : "DatasetChangeEvent event",
      "right" : "DatasetChangeEvent event",
      "info" : "SingleVariableDeclaration[63908-63932]:SingleVariableDeclaration[64136-64160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63934-64486]:Block[64162-64714]"
    }, {
      "left" : "int count = this.rangeAxes.size();",
      "right" : "int count = this.rangeAxes.size();",
      "info" : "VariableDeclarationStatement[63947-63981]:VariableDeclarationStatement[64175-64209]"
    }, {
      "left" : "for (int axisIndex = 0; axisIndex < count; axisIndex++)",
      "right" : "for (int axisIndex = 0; axisIndex < count; axisIndex++)",
      "info" : "ForStatement[63991-64200]:ForStatement[64219-64428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64047-64200]:Block[64275-64428]"
    }, {
      "left" : "ValueAxis yAxis = getRangeAxis(axisIndex);",
      "right" : "ValueAxis yAxis = getRangeAxis(axisIndex);",
      "info" : "VariableDeclarationStatement[64062-64104]:VariableDeclarationStatement[64290-64332]"
    }, {
      "left" : "if (yAxis != null)",
      "right" : "if (yAxis != null)",
      "info" : "IfStatement[64118-64189]:IfStatement[64346-64417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64137-64189]:Block[64365-64417]"
    }, {
      "left" : "yAxis.configure();",
      "right" : "yAxis.configure();",
      "info" : "ExpressionStatement[64156-64174]:ExpressionStatement[64384-64402]"
    }, {
      "left" : "if (getParent() != null)",
      "right" : "if (getParent() != null)",
      "info" : "IfStatement[64210-64477]:IfStatement[64438-64705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64235-64295]:Block[64463-64523]"
    }, {
      "left" : "getParent().datasetChanged(event);",
      "right" : "getParent().datasetChanged(event);",
      "info" : "ExpressionStatement[64250-64284]:ExpressionStatement[64478-64512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64310-64477]:Block[64538-64705]"
    }, {
      "left" : "PlotChangeEvent e = new PlotChangeEvent(this);",
      "right" : "PlotChangeEvent e = new PlotChangeEvent(this);",
      "info" : "VariableDeclarationStatement[64325-64371]:VariableDeclarationStatement[64553-64599]"
    }, {
      "left" : "e.setType(ChartChangeEventType.DATASET_UPDATED);",
      "right" : "e.setType(ChartChangeEventType.DATASET_UPDATED);",
      "info" : "ExpressionStatement[64385-64433]:ExpressionStatement[64613-64661]"
    }, {
      "left" : "notifyListeners(e);",
      "right" : "notifyListeners(e);",
      "info" : "ExpressionStatement[64447-64466]:ExpressionStatement[64675-64694]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64611-64617]:Modifier[64839-64845]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[64618-64622]:PrimitiveType[64846-64850]"
    }, {
      "left" : "rendererChanged",
      "right" : "rendererChanged",
      "info" : "SimpleName[64623-64638]:SimpleName[64851-64866]"
    }, {
      "left" : "RendererChangeEvent event",
      "right" : "RendererChangeEvent event",
      "info" : "SingleVariableDeclaration[64639-64664]:SingleVariableDeclaration[64867-64892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64666-65422]:Block[64894-65650]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[64677-64703]:VariableDeclarationStatement[64905-64931]"
    }, {
      "left" : "if (parent != null)",
      "right" : "if (parent != null)",
      "info" : "IfStatement[64713-65415]:IfStatement[64941-65643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64733-65260]:Block[64961-65488]"
    }, {
      "left" : "if (parent instanceof RendererChangeListener)",
      "right" : "if (parent instanceof RendererChangeListener)",
      "info" : "IfStatement[64748-65249]:IfStatement[64976-65477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64794-64934]:Block[65022-65162]"
    }, {
      "left" : "RendererChangeListener rcl = (RendererChangeListener) parent;",
      "right" : "RendererChangeListener rcl = (RendererChangeListener) parent;",
      "info" : "VariableDeclarationStatement[64813-64874]:VariableDeclarationStatement[65041-65102]"
    }, {
      "left" : "rcl.rendererChanged(event);",
      "right" : "rcl.rendererChanged(event);",
      "info" : "ExpressionStatement[64892-64919]:ExpressionStatement[65120-65147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64953-65249]:Block[65181-65477]"
    }, {
      "left" : "throw new RuntimeException(\r\n                    \"The renderer has changed and I don't know what to do!\");",
      "right" : "throw new RuntimeException(\r\n                    \"The renderer has changed and I don't know what to do!\");",
      "info" : "ThrowStatement[65128-65234]:ThrowStatement[65356-65462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65275-65415]:Block[65503-65643]"
    }, {
      "left" : "configureRangeAxes();",
      "right" : "configureRangeAxes();",
      "info" : "ExpressionStatement[65290-65311]:ExpressionStatement[65518-65539]"
    }, {
      "left" : "PlotChangeEvent e = new PlotChangeEvent(this);",
      "right" : "PlotChangeEvent e = new PlotChangeEvent(this);",
      "info" : "VariableDeclarationStatement[65325-65371]:VariableDeclarationStatement[65553-65599]"
    }, {
      "left" : "notifyListeners(e);",
      "right" : "notifyListeners(e);",
      "info" : "ExpressionStatement[65385-65404]:ExpressionStatement[65613-65632]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65836-65842]:Modifier[66064-66070]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[65843-65847]:PrimitiveType[66071-66075]"
    }, {
      "left" : "addDomainMarker",
      "right" : "addDomainMarker",
      "info" : "SimpleName[65848-65863]:SimpleName[66076-66091]"
    }, {
      "left" : "CategoryMarker marker",
      "right" : "CategoryMarker marker",
      "info" : "SingleVariableDeclaration[65864-65885]:SingleVariableDeclaration[66092-66113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65887-65948]:Block[66115-66176]"
    }, {
      "left" : "addDomainMarker(marker, Layer.FOREGROUND);",
      "right" : "addDomainMarker(marker, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[65898-65940]:ExpressionStatement[66126-66168]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66465-66471]:Modifier[66693-66699]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[66472-66476]:PrimitiveType[66700-66704]"
    }, {
      "left" : "addDomainMarker",
      "right" : "addDomainMarker",
      "info" : "SimpleName[66477-66492]:SimpleName[66705-66720]"
    }, {
      "left" : "CategoryMarker marker",
      "right" : "CategoryMarker marker",
      "info" : "SingleVariableDeclaration[66493-66514]:SingleVariableDeclaration[66721-66742]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[66516-66527]:SingleVariableDeclaration[66744-66755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66529-66581]:Block[66757-66809]"
    }, {
      "left" : "addDomainMarker(0, marker, layer);",
      "right" : "addDomainMarker(0, marker, layer);",
      "info" : "ExpressionStatement[66540-66574]:ExpressionStatement[66768-66802]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67017-67023]:Modifier[67245-67251]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[67024-67028]:PrimitiveType[67252-67256]"
    }, {
      "left" : "addDomainMarker",
      "right" : "addDomainMarker",
      "info" : "SimpleName[67029-67044]:SimpleName[67257-67272]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[67045-67054]:SingleVariableDeclaration[67273-67282]"
    }, {
      "left" : "CategoryMarker marker",
      "right" : "CategoryMarker marker",
      "info" : "SingleVariableDeclaration[67056-67077]:SingleVariableDeclaration[67284-67305]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[67079-67090]:SingleVariableDeclaration[67307-67318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67092-68252]:Block[67320-68480]"
    }, {
      "left" : "if (marker == null)",
      "right" : "if (marker == null)",
      "info" : "IfStatement[67103-67216]:IfStatement[67331-67444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67123-67216]:Block[67351-67444]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'marker' not permitted.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'marker' not permitted.\");",
      "info" : "ThrowStatement[67138-67205]:ThrowStatement[67366-67433]"
    }, {
      "left" : "if (layer == null)",
      "right" : "if (layer == null)",
      "info" : "IfStatement[67226-67337]:IfStatement[67454-67565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67245-67337]:Block[67473-67565]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'layer' not permitted.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'layer' not permitted.\");",
      "info" : "ThrowStatement[67260-67326]:ThrowStatement[67488-67554]"
    }, {
      "left" : "Collection markers;",
      "right" : "Collection markers;",
      "info" : "VariableDeclarationStatement[67347-67366]:VariableDeclarationStatement[67575-67594]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[67376-68151]:IfStatement[67604-68379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67407-67750]:Block[67635-67978]"
    }, {
      "left" : "markers = (Collection) this.foregroundDomainMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.foregroundDomainMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[67422-67520]:ExpressionStatement[67650-67748]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[67534-67705]:IfStatement[67762-67933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67555-67705]:Block[67783-67933]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[67574-67610]:ExpressionStatement[67802-67838]"
    }, {
      "left" : "this.foregroundDomainMarkers.put(new Integer(index), markers);",
      "right" : "this.foregroundDomainMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[67628-67690]:ExpressionStatement[67856-67918]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[67719-67739]:ExpressionStatement[67947-67967]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[67765-68151]:IfStatement[67993-68379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67796-68151]:Block[68024-68379]"
    }, {
      "left" : "markers = (Collection) this.backgroundDomainMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.backgroundDomainMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[67811-67909]:ExpressionStatement[68039-68137]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[67923-68094]:IfStatement[68151-68322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67944-68094]:Block[68172-68322]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[67963-67999]:ExpressionStatement[68191-68227]"
    }, {
      "left" : "this.backgroundDomainMarkers.put(new Integer(index), markers);",
      "right" : "this.backgroundDomainMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[68017-68079]:ExpressionStatement[68245-68307]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[68108-68128]:ExpressionStatement[68336-68356]"
    }, {
      "left" : "marker.addChangeListener(this);",
      "right" : "marker.addChangeListener(this);",
      "info" : "ExpressionStatement[68161-68192]:ExpressionStatement[68389-68420]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[68202-68245]:ExpressionStatement[68430-68473]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68446-68452]:Modifier[68674-68680]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[68453-68457]:PrimitiveType[68681-68685]"
    }, {
      "left" : "clearDomainMarkers",
      "right" : "clearDomainMarkers",
      "info" : "SimpleName[68458-68476]:SimpleName[68686-68704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68479-69332]:Block[68707-69560]"
    }, {
      "left" : "if (this.backgroundDomainMarkers != null)",
      "right" : "if (this.backgroundDomainMarkers != null)",
      "info" : "IfStatement[68490-68876]:IfStatement[68718-69104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68532-68876]:Block[68760-69104]"
    }, {
      "left" : "Set keys = this.backgroundDomainMarkers.keySet();",
      "right" : "Set keys = this.backgroundDomainMarkers.keySet();",
      "info" : "VariableDeclarationStatement[68547-68596]:VariableDeclarationStatement[68775-68824]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[68610-68646]:VariableDeclarationStatement[68838-68874]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[68660-68814]:WhileStatement[68888-69042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68687-68814]:Block[68915-69042]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[68706-68746]:VariableDeclarationStatement[68934-68974]"
    }, {
      "left" : "clearDomainMarkers(key.intValue());",
      "right" : "clearDomainMarkers(key.intValue());",
      "info" : "ExpressionStatement[68764-68799]:ExpressionStatement[68992-69027]"
    }, {
      "left" : "this.backgroundDomainMarkers.clear();",
      "right" : "this.backgroundDomainMarkers.clear();",
      "info" : "ExpressionStatement[68828-68865]:ExpressionStatement[69056-69093]"
    }, {
      "left" : "if (this.foregroundDomainMarkers != null)",
      "right" : "if (this.foregroundDomainMarkers != null)",
      "info" : "IfStatement[68886-69272]:IfStatement[69114-69500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68928-69272]:Block[69156-69500]"
    }, {
      "left" : "Set keys = this.foregroundDomainMarkers.keySet();",
      "right" : "Set keys = this.foregroundDomainMarkers.keySet();",
      "info" : "VariableDeclarationStatement[68943-68992]:VariableDeclarationStatement[69171-69220]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[69006-69042]:VariableDeclarationStatement[69234-69270]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[69056-69210]:WhileStatement[69284-69438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69083-69210]:Block[69311-69438]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[69102-69142]:VariableDeclarationStatement[69330-69370]"
    }, {
      "left" : "clearDomainMarkers(key.intValue());",
      "right" : "clearDomainMarkers(key.intValue());",
      "info" : "ExpressionStatement[69160-69195]:ExpressionStatement[69388-69423]"
    }, {
      "left" : "this.foregroundDomainMarkers.clear();",
      "right" : "this.foregroundDomainMarkers.clear();",
      "info" : "ExpressionStatement[69224-69261]:ExpressionStatement[69452-69489]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[69282-69325]:ExpressionStatement[69510-69553]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69559-69565]:Modifier[69787-69793]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[69566-69576]:SimpleType[69794-69804]"
    }, {
      "left" : "getDomainMarkers",
      "right" : "getDomainMarkers",
      "info" : "SimpleName[69577-69593]:SimpleName[69805-69821]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[69594-69605]:SingleVariableDeclaration[69822-69833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69607-69659]:Block[69835-69887]"
    }, {
      "left" : "return getDomainMarkers(0, layer);",
      "right" : "return getDomainMarkers(0, layer);",
      "info" : "ReturnStatement[69618-69652]:ReturnStatement[69846-69880]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69941-69947]:Modifier[70169-70175]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[69948-69958]:SimpleType[70176-70186]"
    }, {
      "left" : "getDomainMarkers",
      "right" : "getDomainMarkers",
      "info" : "SimpleName[69959-69975]:SimpleName[70187-70203]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[69976-69985]:SingleVariableDeclaration[70204-70213]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[69987-69998]:SingleVariableDeclaration[70215-70226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70000-70481]:Block[70228-70709]"
    }, {
      "left" : "Collection result = null;",
      "right" : "Collection result = null;",
      "info" : "VariableDeclarationStatement[70011-70036]:VariableDeclarationStatement[70239-70264]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[70046-70079]:VariableDeclarationStatement[70274-70307]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[70089-70342]:IfStatement[70317-70570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70120-70206]:Block[70348-70434]"
    }, {
      "left" : "result = (Collection) this.foregroundDomainMarkers.get(key);",
      "right" : "result = (Collection) this.foregroundDomainMarkers.get(key);",
      "info" : "ExpressionStatement[70135-70195]:ExpressionStatement[70363-70423]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[70225-70342]:IfStatement[70453-70570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70256-70342]:Block[70484-70570]"
    }, {
      "left" : "result = (Collection) this.backgroundDomainMarkers.get(key);",
      "right" : "result = (Collection) this.backgroundDomainMarkers.get(key);",
      "info" : "ExpressionStatement[70271-70331]:ExpressionStatement[70499-70559]"
    }, {
      "left" : "if (result != null)",
      "right" : "if (result != null)",
      "info" : "IfStatement[70352-70450]:IfStatement[70580-70678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70372-70450]:Block[70600-70678]"
    }, {
      "left" : "result = Collections.unmodifiableCollection(result);",
      "right" : "result = Collections.unmodifiableCollection(result);",
      "info" : "ExpressionStatement[70387-70439]:ExpressionStatement[70615-70667]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[70460-70474]:ReturnStatement[70688-70702]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70674-70680]:Modifier[70902-70908]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[70681-70685]:PrimitiveType[70909-70913]"
    }, {
      "left" : "clearDomainMarkers",
      "right" : "clearDomainMarkers",
      "info" : "SimpleName[70686-70704]:SimpleName[70914-70932]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[70705-70714]:SingleVariableDeclaration[70933-70942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70716-71788]:Block[70944-72016]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[70727-70760]:VariableDeclarationStatement[70955-70988]"
    }, {
      "left" : "if (this.backgroundDomainMarkers != null)",
      "right" : "if (this.backgroundDomainMarkers != null)",
      "info" : "IfStatement[70770-71244]:IfStatement[70998-71472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70812-71244]:Block[71040-71472]"
    }, {
      "left" : "Collection markers \r\n                = (Collection) this.backgroundDomainMarkers.get(key);",
      "right" : "Collection markers \r\n                = (Collection) this.backgroundDomainMarkers.get(key);",
      "info" : "VariableDeclarationStatement[70827-70917]:VariableDeclarationStatement[71055-71145]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[70931-71233]:IfStatement[71159-71461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70952-71233]:Block[71180-71461]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[70971-71010]:VariableDeclarationStatement[71199-71238]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[71028-71184]:WhileStatement[71256-71412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71055-71184]:Block[71283-71412]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[71078-71114]:VariableDeclarationStatement[71306-71342]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[71136-71165]:ExpressionStatement[71364-71393]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[71202-71218]:ExpressionStatement[71430-71446]"
    }, {
      "left" : "if (this.foregroundDomainMarkers != null)",
      "right" : "if (this.foregroundDomainMarkers != null)",
      "info" : "IfStatement[71254-71728]:IfStatement[71482-71956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71296-71728]:Block[71524-71956]"
    }, {
      "left" : "Collection markers \r\n                = (Collection) this.foregroundDomainMarkers.get(key);",
      "right" : "Collection markers \r\n                = (Collection) this.foregroundDomainMarkers.get(key);",
      "info" : "VariableDeclarationStatement[71311-71401]:VariableDeclarationStatement[71539-71629]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[71415-71717]:IfStatement[71643-71945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71436-71717]:Block[71664-71945]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[71455-71494]:VariableDeclarationStatement[71683-71722]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[71512-71668]:WhileStatement[71740-71896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71539-71668]:Block[71767-71896]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[71562-71598]:VariableDeclarationStatement[71790-71826]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[71620-71649]:ExpressionStatement[71848-71877]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[71686-71702]:ExpressionStatement[71914-71930]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[71738-71781]:ExpressionStatement[71966-72009]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[72200-72206]:Modifier[72428-72434]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[72207-72211]:PrimitiveType[72435-72439]"
    }, {
      "left" : "addRangeMarker",
      "right" : "addRangeMarker",
      "info" : "SimpleName[72212-72226]:SimpleName[72440-72454]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[72227-72240]:SingleVariableDeclaration[72455-72468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72242-72302]:Block[72470-72530]"
    }, {
      "left" : "addRangeMarker(marker, Layer.FOREGROUND);",
      "right" : "addRangeMarker(marker, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[72253-72294]:ExpressionStatement[72481-72522]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[72817-72823]:Modifier[73045-73051]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[72824-72828]:PrimitiveType[73052-73056]"
    }, {
      "left" : "addRangeMarker",
      "right" : "addRangeMarker",
      "info" : "SimpleName[72829-72843]:SimpleName[73057-73071]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[72844-72857]:SingleVariableDeclaration[73072-73085]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[72859-72870]:SingleVariableDeclaration[73087-73098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72872-72923]:Block[73100-73151]"
    }, {
      "left" : "addRangeMarker(0, marker, layer);",
      "right" : "addRangeMarker(0, marker, layer);",
      "info" : "ExpressionStatement[72883-72916]:ExpressionStatement[73111-73144]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73290-73296]:Modifier[73518-73524]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[73297-73301]:PrimitiveType[73525-73529]"
    }, {
      "left" : "addRangeMarker",
      "right" : "addRangeMarker",
      "info" : "SimpleName[73302-73316]:SimpleName[73530-73544]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[73317-73326]:SingleVariableDeclaration[73545-73554]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[73328-73341]:SingleVariableDeclaration[73556-73569]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[73343-73354]:SingleVariableDeclaration[73571-73582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73356-74268]:Block[73584-74496]"
    }, {
      "left" : "Collection markers;",
      "right" : "Collection markers;",
      "info" : "VariableDeclarationStatement[73367-73386]:VariableDeclarationStatement[73595-73614]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[73396-74167]:IfStatement[73624-74395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73427-73768]:Block[73655-73996]"
    }, {
      "left" : "markers = (Collection) this.foregroundRangeMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.foregroundRangeMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[73442-73539]:ExpressionStatement[73670-73767]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[73553-73723]:IfStatement[73781-73951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73574-73723]:Block[73802-73951]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[73593-73629]:ExpressionStatement[73821-73857]"
    }, {
      "left" : "this.foregroundRangeMarkers.put(new Integer(index), markers);",
      "right" : "this.foregroundRangeMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[73647-73708]:ExpressionStatement[73875-73936]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[73737-73757]:ExpressionStatement[73965-73985]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[73783-74167]:IfStatement[74011-74395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73814-74167]:Block[74042-74395]"
    }, {
      "left" : "markers = (Collection) this.backgroundRangeMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.backgroundRangeMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[73829-73926]:ExpressionStatement[74057-74154]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[73940-74110]:IfStatement[74168-74338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73961-74110]:Block[74189-74338]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[73980-74016]:ExpressionStatement[74208-74244]"
    }, {
      "left" : "this.backgroundRangeMarkers.put(new Integer(index), markers);",
      "right" : "this.backgroundRangeMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[74034-74095]:ExpressionStatement[74262-74323]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[74124-74144]:ExpressionStatement[74352-74372]"
    }, {
      "left" : "marker.addChangeListener(this);",
      "right" : "marker.addChangeListener(this);",
      "info" : "ExpressionStatement[74177-74208]:ExpressionStatement[74405-74436]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[74218-74261]:ExpressionStatement[74446-74489]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74462-74468]:Modifier[74690-74696]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[74469-74473]:PrimitiveType[74697-74701]"
    }, {
      "left" : "clearRangeMarkers",
      "right" : "clearRangeMarkers",
      "info" : "SimpleName[74474-74491]:SimpleName[74702-74719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74494-75339]:Block[74722-75567]"
    }, {
      "left" : "if (this.backgroundRangeMarkers != null)",
      "right" : "if (this.backgroundRangeMarkers != null)",
      "info" : "IfStatement[74505-74887]:IfStatement[74733-75115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74546-74887]:Block[74774-75115]"
    }, {
      "left" : "Set keys = this.backgroundRangeMarkers.keySet();",
      "right" : "Set keys = this.backgroundRangeMarkers.keySet();",
      "info" : "VariableDeclarationStatement[74561-74609]:VariableDeclarationStatement[74789-74837]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[74623-74659]:VariableDeclarationStatement[74851-74887]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[74673-74826]:WhileStatement[74901-75054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74700-74826]:Block[74928-75054]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[74719-74759]:VariableDeclarationStatement[74947-74987]"
    }, {
      "left" : "clearRangeMarkers(key.intValue());",
      "right" : "clearRangeMarkers(key.intValue());",
      "info" : "ExpressionStatement[74777-74811]:ExpressionStatement[75005-75039]"
    }, {
      "left" : "this.backgroundRangeMarkers.clear();",
      "right" : "this.backgroundRangeMarkers.clear();",
      "info" : "ExpressionStatement[74840-74876]:ExpressionStatement[75068-75104]"
    }, {
      "left" : "if (this.foregroundRangeMarkers != null)",
      "right" : "if (this.foregroundRangeMarkers != null)",
      "info" : "IfStatement[74897-75279]:IfStatement[75125-75507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74938-75279]:Block[75166-75507]"
    }, {
      "left" : "Set keys = this.foregroundRangeMarkers.keySet();",
      "right" : "Set keys = this.foregroundRangeMarkers.keySet();",
      "info" : "VariableDeclarationStatement[74953-75001]:VariableDeclarationStatement[75181-75229]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[75015-75051]:VariableDeclarationStatement[75243-75279]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[75065-75218]:WhileStatement[75293-75446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75092-75218]:Block[75320-75446]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[75111-75151]:VariableDeclarationStatement[75339-75379]"
    }, {
      "left" : "clearRangeMarkers(key.intValue());",
      "right" : "clearRangeMarkers(key.intValue());",
      "info" : "ExpressionStatement[75169-75203]:ExpressionStatement[75397-75431]"
    }, {
      "left" : "this.foregroundRangeMarkers.clear();",
      "right" : "this.foregroundRangeMarkers.clear();",
      "info" : "ExpressionStatement[75232-75268]:ExpressionStatement[75460-75496]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[75289-75332]:ExpressionStatement[75517-75560]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75615-75621]:Modifier[75843-75849]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[75622-75632]:SimpleType[75850-75860]"
    }, {
      "left" : "getRangeMarkers",
      "right" : "getRangeMarkers",
      "info" : "SimpleName[75633-75648]:SimpleName[75861-75876]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[75649-75660]:SingleVariableDeclaration[75877-75888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75662-75713]:Block[75890-75941]"
    }, {
      "left" : "return getRangeMarkers(0, layer);",
      "right" : "return getRangeMarkers(0, layer);",
      "info" : "ReturnStatement[75673-75706]:ReturnStatement[75901-75934]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75994-76000]:Modifier[76222-76228]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[76001-76011]:SimpleType[76229-76239]"
    }, {
      "left" : "getRangeMarkers",
      "right" : "getRangeMarkers",
      "info" : "SimpleName[76012-76027]:SimpleName[76240-76255]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[76028-76037]:SingleVariableDeclaration[76256-76265]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[76039-76050]:SingleVariableDeclaration[76267-76278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76052-76531]:Block[76280-76759]"
    }, {
      "left" : "Collection result = null;",
      "right" : "Collection result = null;",
      "info" : "VariableDeclarationStatement[76063-76088]:VariableDeclarationStatement[76291-76316]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[76098-76131]:VariableDeclarationStatement[76326-76359]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[76141-76392]:IfStatement[76369-76620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76172-76257]:Block[76400-76485]"
    }, {
      "left" : "result = (Collection) this.foregroundRangeMarkers.get(key);",
      "right" : "result = (Collection) this.foregroundRangeMarkers.get(key);",
      "info" : "ExpressionStatement[76187-76246]:ExpressionStatement[76415-76474]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[76276-76392]:IfStatement[76504-76620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76307-76392]:Block[76535-76620]"
    }, {
      "left" : "result = (Collection) this.backgroundRangeMarkers.get(key);",
      "right" : "result = (Collection) this.backgroundRangeMarkers.get(key);",
      "info" : "ExpressionStatement[76322-76381]:ExpressionStatement[76550-76609]"
    }, {
      "left" : "if (result != null)",
      "right" : "if (result != null)",
      "info" : "IfStatement[76402-76500]:IfStatement[76630-76728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76422-76500]:Block[76650-76728]"
    }, {
      "left" : "result = Collections.unmodifiableCollection(result);",
      "right" : "result = Collections.unmodifiableCollection(result);",
      "info" : "ExpressionStatement[76437-76489]:ExpressionStatement[76665-76717]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[76510-76524]:ReturnStatement[76738-76752]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[76724-76730]:Modifier[76952-76958]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[76731-76735]:PrimitiveType[76959-76963]"
    }, {
      "left" : "clearRangeMarkers",
      "right" : "clearRangeMarkers",
      "info" : "SimpleName[76736-76753]:SimpleName[76964-76981]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[76754-76763]:SingleVariableDeclaration[76982-76991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76765-77833]:Block[76993-78061]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[76776-76809]:VariableDeclarationStatement[77004-77037]"
    }, {
      "left" : "if (this.backgroundRangeMarkers != null)",
      "right" : "if (this.backgroundRangeMarkers != null)",
      "info" : "IfStatement[76819-77291]:IfStatement[77047-77519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76860-77291]:Block[77088-77519]"
    }, {
      "left" : "Collection markers \r\n                = (Collection) this.backgroundRangeMarkers.get(key);",
      "right" : "Collection markers \r\n                = (Collection) this.backgroundRangeMarkers.get(key);",
      "info" : "VariableDeclarationStatement[76875-76964]:VariableDeclarationStatement[77103-77192]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[76978-77280]:IfStatement[77206-77508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76999-77280]:Block[77227-77508]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[77018-77057]:VariableDeclarationStatement[77246-77285]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[77075-77231]:WhileStatement[77303-77459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77102-77231]:Block[77330-77459]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[77125-77161]:VariableDeclarationStatement[77353-77389]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[77183-77212]:ExpressionStatement[77411-77440]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[77249-77265]:ExpressionStatement[77477-77493]"
    }, {
      "left" : "if (this.foregroundRangeMarkers != null)",
      "right" : "if (this.foregroundRangeMarkers != null)",
      "info" : "IfStatement[77301-77773]:IfStatement[77529-78001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77342-77773]:Block[77570-78001]"
    }, {
      "left" : "Collection markers \r\n                = (Collection) this.foregroundRangeMarkers.get(key);",
      "right" : "Collection markers \r\n                = (Collection) this.foregroundRangeMarkers.get(key);",
      "info" : "VariableDeclarationStatement[77357-77446]:VariableDeclarationStatement[77585-77674]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[77460-77762]:IfStatement[77688-77990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77481-77762]:Block[77709-77990]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[77500-77539]:VariableDeclarationStatement[77728-77767]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[77557-77713]:WhileStatement[77785-77941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77584-77713]:Block[77812-77941]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[77607-77643]:VariableDeclarationStatement[77835-77871]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[77665-77694]:ExpressionStatement[77893-77922]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[77731-77747]:ExpressionStatement[77959-77975]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[77783-77826]:ExpressionStatement[78011-78054]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78031-78037]:Modifier[78259-78265]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[78038-78045]:PrimitiveType[78266-78273]"
    }, {
      "left" : "isRangeCrosshairVisible",
      "right" : "isRangeCrosshairVisible",
      "info" : "SimpleName[78046-78069]:SimpleName[78274-78297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78072-78124]:Block[78300-78352]"
    }, {
      "left" : "return this.rangeCrosshairVisible;",
      "right" : "return this.rangeCrosshairVisible;",
      "info" : "ReturnStatement[78083-78117]:ReturnStatement[78311-78345]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78335-78341]:Modifier[78563-78569]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[78342-78346]:PrimitiveType[78570-78574]"
    }, {
      "left" : "setRangeCrosshairVisible",
      "right" : "setRangeCrosshairVisible",
      "info" : "SimpleName[78347-78371]:SimpleName[78575-78599]"
    }, {
      "left" : "boolean flag",
      "right" : "boolean flag",
      "info" : "SingleVariableDeclaration[78372-78384]:SingleVariableDeclaration[78600-78612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78386-78561]:Block[78614-78789]"
    }, {
      "left" : "if (this.rangeCrosshairVisible != flag)",
      "right" : "if (this.rangeCrosshairVisible != flag)",
      "info" : "IfStatement[78397-78554]:IfStatement[78625-78782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78437-78554]:Block[78665-78782]"
    }, {
      "left" : "this.rangeCrosshairVisible = flag;",
      "right" : "this.rangeCrosshairVisible = flag;",
      "info" : "ExpressionStatement[78452-78486]:ExpressionStatement[78680-78714]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[78500-78543]:ExpressionStatement[78728-78771]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78794-78800]:Modifier[79022-79028]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[78801-78808]:PrimitiveType[79029-79036]"
    }, {
      "left" : "isRangeCrosshairLockedOnData",
      "right" : "isRangeCrosshairLockedOnData",
      "info" : "SimpleName[78809-78837]:SimpleName[79037-79065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78840-78897]:Block[79068-79125]"
    }, {
      "left" : "return this.rangeCrosshairLockedOnData;",
      "right" : "return this.rangeCrosshairLockedOnData;",
      "info" : "ReturnStatement[78851-78890]:ReturnStatement[79079-79118]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79133-79139]:Modifier[79361-79367]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[79140-79144]:PrimitiveType[79368-79372]"
    }, {
      "left" : "setRangeCrosshairLockedOnData",
      "right" : "setRangeCrosshairLockedOnData",
      "info" : "SimpleName[79145-79174]:SimpleName[79373-79402]"
    }, {
      "left" : "boolean flag",
      "right" : "boolean flag",
      "info" : "SingleVariableDeclaration[79175-79187]:SingleVariableDeclaration[79403-79415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79189-79378]:Block[79417-79606]"
    }, {
      "left" : "if (this.rangeCrosshairLockedOnData != flag)",
      "right" : "if (this.rangeCrosshairLockedOnData != flag)",
      "info" : "IfStatement[79202-79369]:IfStatement[79430-79597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79247-79369]:Block[79475-79597]"
    }, {
      "left" : "this.rangeCrosshairLockedOnData = flag;",
      "right" : "this.rangeCrosshairLockedOnData = flag;",
      "info" : "ExpressionStatement[79262-79301]:ExpressionStatement[79490-79529]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[79315-79358]:ExpressionStatement[79543-79586]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79536-79542]:Modifier[79764-79770]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[79543-79549]:PrimitiveType[79771-79777]"
    }, {
      "left" : "getRangeCrosshairValue",
      "right" : "getRangeCrosshairValue",
      "info" : "SimpleName[79550-79572]:SimpleName[79778-79800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79575-79625]:Block[79803-79853]"
    }, {
      "left" : "return this.rangeCrosshairValue;",
      "right" : "return this.rangeCrosshairValue;",
      "info" : "ReturnStatement[79586-79618]:ReturnStatement[79814-79846]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79918-79924]:Modifier[80146-80152]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[79925-79929]:PrimitiveType[80153-80157]"
    }, {
      "left" : "setRangeCrosshairValue",
      "right" : "setRangeCrosshairValue",
      "info" : "SimpleName[79930-79952]:SimpleName[80158-80180]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[79953-79965]:SingleVariableDeclaration[80181-80193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79967-80021]:Block[80195-80249]"
    }, {
      "left" : "setRangeCrosshairValue(value, true);",
      "right" : "setRangeCrosshairValue(value, true);",
      "info" : "ExpressionStatement[79978-80014]:ExpressionStatement[80206-80242]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80438-80444]:Modifier[80666-80672]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80445-80449]:PrimitiveType[80673-80677]"
    }, {
      "left" : "setRangeCrosshairValue",
      "right" : "setRangeCrosshairValue",
      "info" : "SimpleName[80450-80472]:SimpleName[80678-80700]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[80473-80485]:SingleVariableDeclaration[80701-80713]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[80487-80501]:SingleVariableDeclaration[80715-80729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80503-80674]:Block[80731-80902]"
    }, {
      "left" : "this.rangeCrosshairValue = value;",
      "right" : "this.rangeCrosshairValue = value;",
      "info" : "ExpressionStatement[80514-80547]:ExpressionStatement[80742-80775]"
    }, {
      "left" : "if (isRangeCrosshairVisible() && notify)",
      "right" : "if (isRangeCrosshairVisible() && notify)",
      "info" : "IfStatement[80557-80667]:IfStatement[80785-80895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80598-80667]:Block[80826-80895]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[80613-80656]:ExpressionStatement[80841-80884]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[81008-81014]:Modifier[81236-81242]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[81015-81021]:SimpleType[81243-81249]"
    }, {
      "left" : "getRangeCrosshairStroke",
      "right" : "getRangeCrosshairStroke",
      "info" : "SimpleName[81022-81045]:SimpleName[81250-81273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81048-81099]:Block[81276-81327]"
    }, {
      "left" : "return this.rangeCrosshairStroke;",
      "right" : "return this.rangeCrosshairStroke;",
      "info" : "ReturnStatement[81059-81092]:ReturnStatement[81287-81320]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[81461-81467]:Modifier[81689-81695]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[81468-81472]:PrimitiveType[81696-81700]"
    }, {
      "left" : "setRangeCrosshairStroke",
      "right" : "setRangeCrosshairStroke",
      "info" : "SimpleName[81473-81496]:SimpleName[81701-81724]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[81497-81510]:SingleVariableDeclaration[81725-81738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81512-81736]:Block[81740-81964]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[81523-81631]:IfStatement[81751-81859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81543-81631]:Block[81771-81859]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[81558-81620]:ThrowStatement[81786-81848]"
    }, {
      "left" : "this.rangeCrosshairStroke = stroke;",
      "right" : "this.rangeCrosshairStroke = stroke;",
      "info" : "ExpressionStatement[81641-81676]:ExpressionStatement[81869-81904]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[81686-81729]:ExpressionStatement[81914-81957]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[82016-82022]:Modifier[82244-82250]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[82023-82028]:SimpleType[82251-82256]"
    }, {
      "left" : "getRangeCrosshairPaint",
      "right" : "getRangeCrosshairPaint",
      "info" : "SimpleName[82029-82051]:SimpleName[82257-82279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82054-82104]:Block[82282-82332]"
    }, {
      "left" : "return this.rangeCrosshairPaint;",
      "right" : "return this.rangeCrosshairPaint;",
      "info" : "ReturnStatement[82065-82097]:ReturnStatement[82293-82325]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[82396-82402]:Modifier[82624-82630]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[82403-82407]:PrimitiveType[82631-82635]"
    }, {
      "left" : "setRangeCrosshairPaint",
      "right" : "setRangeCrosshairPaint",
      "info" : "SimpleName[82408-82430]:SimpleName[82636-82658]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[82431-82442]:SingleVariableDeclaration[82659-82670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82444-82664]:Block[82672-82892]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[82455-82561]:IfStatement[82683-82789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82474-82561]:Block[82702-82789]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[82489-82550]:ThrowStatement[82717-82778]"
    }, {
      "left" : "this.rangeCrosshairPaint = paint;",
      "right" : "this.rangeCrosshairPaint = paint;",
      "info" : "ExpressionStatement[82571-82604]:ExpressionStatement[82799-82832]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[82614-82657]:ExpressionStatement[82842-82885]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[82806-82812]:Modifier[83034-83040]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[82813-82817]:SimpleType[83041-83045]"
    }, {
      "left" : "getAnnotations",
      "right" : "getAnnotations",
      "info" : "SimpleName[82818-82832]:SimpleName[83046-83060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82835-82877]:Block[83063-83105]"
    }, {
      "left" : "return this.annotations;",
      "right" : "return this.annotations;",
      "info" : "ReturnStatement[82846-82870]:ReturnStatement[83074-83098]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[83160-83166]:Modifier[83388-83394]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[83167-83171]:PrimitiveType[83395-83399]"
    }, {
      "left" : "addAnnotation",
      "right" : "addAnnotation",
      "info" : "SimpleName[83172-83185]:SimpleName[83400-83413]"
    }, {
      "left" : "CategoryAnnotation annotation",
      "right" : "CategoryAnnotation annotation",
      "info" : "SingleVariableDeclaration[83186-83215]:SingleVariableDeclaration[83414-83443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83217-83450]:Block[83445-83678]"
    }, {
      "left" : "if (annotation == null)",
      "right" : "if (annotation == null)",
      "info" : "IfStatement[83228-83347]:IfStatement[83456-83575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83252-83347]:Block[83480-83575]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "info" : "ThrowStatement[83267-83333]:ThrowStatement[83495-83561]"
    }, {
      "left" : "this.annotations.add(annotation);",
      "right" : "this.annotations.add(annotation);",
      "info" : "ExpressionStatement[83357-83390]:ExpressionStatement[83585-83618]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[83400-83443]:ExpressionStatement[83628-83671]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[83824-83830]:Modifier[84052-84058]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[83831-83838]:PrimitiveType[84059-84066]"
    }, {
      "left" : "removeAnnotation",
      "right" : "removeAnnotation",
      "info" : "SimpleName[83839-83855]:SimpleName[84067-84083]"
    }, {
      "left" : "CategoryAnnotation annotation",
      "right" : "CategoryAnnotation annotation",
      "info" : "SingleVariableDeclaration[83856-83885]:SingleVariableDeclaration[84084-84113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83887-84202]:Block[84115-84430]"
    }, {
      "left" : "if (annotation == null)",
      "right" : "if (annotation == null)",
      "info" : "IfStatement[83898-84014]:IfStatement[84126-84242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83922-84014]:Block[84150-84242]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "info" : "ThrowStatement[83937-84003]:ThrowStatement[84165-84231]"
    }, {
      "left" : "boolean removed = this.annotations.remove(annotation);",
      "right" : "boolean removed = this.annotations.remove(annotation);",
      "info" : "VariableDeclarationStatement[84024-84078]:VariableDeclarationStatement[84252-84306]"
    }, {
      "left" : "if (removed)",
      "right" : "if (removed)",
      "info" : "IfStatement[84088-84170]:IfStatement[84316-84398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84101-84170]:Block[84329-84398]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[84116-84159]:ExpressionStatement[84344-84387]"
    }, {
      "left" : "return removed;",
      "right" : "return removed;",
      "info" : "ReturnStatement[84180-84195]:ReturnStatement[84408-84423]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[84336-84342]:Modifier[84564-84570]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[84343-84347]:PrimitiveType[84571-84575]"
    }, {
      "left" : "clearAnnotations",
      "right" : "clearAnnotations",
      "info" : "SimpleName[84348-84364]:SimpleName[84576-84592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84367-84463]:Block[84595-84691]"
    }, {
      "left" : "this.annotations.clear();",
      "right" : "this.annotations.clear();",
      "info" : "ExpressionStatement[84378-84403]:ExpressionStatement[84606-84631]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[84413-84456]:ExpressionStatement[84641-84684]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[84765-84774]:Modifier[84993-85002]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[84775-84784]:SimpleType[85003-85012]"
    }, {
      "left" : "calculateDomainAxisSpace",
      "right" : "calculateDomainAxisSpace",
      "info" : "SimpleName[84785-84809]:SimpleName[85013-85037]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[84810-84823]:SingleVariableDeclaration[85038-85051]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[84876-84896]:SingleVariableDeclaration[85104-85124]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[84949-84964]:SingleVariableDeclaration[85177-85192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84966-86780]:Block[85194-87008]"
    }, {
      "left" : "if (space == null)",
      "right" : "if (space == null)",
      "info" : "IfStatement[85032-85101]:IfStatement[85260-85329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85051-85101]:Block[85279-85329]"
    }, {
      "left" : "space = new AxisSpace();",
      "right" : "space = new AxisSpace();",
      "info" : "ExpressionStatement[85066-85090]:ExpressionStatement[85294-85318]"
    }, {
      "left" : "if (this.fixedDomainAxisSpace != null)",
      "right" : "if (this.fixedDomainAxisSpace != null)",
      "info" : "IfStatement[85175-86693]:IfStatement[85403-86921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85214-85877]:Block[85442-86105]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[85229-85866]:IfStatement[85457-86094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85281-85537]:Block[85509-85765]"
    }, {
      "left" : "space.ensureAtLeast(\r\n                    this.fixedDomainAxisSpace.getLeft(), RectangleEdge.LEFT);",
      "right" : "space.ensureAtLeast(\r\n                    this.fixedDomainAxisSpace.getLeft(), RectangleEdge.LEFT);",
      "info" : "ExpressionStatement[85300-85399]:ExpressionStatement[85528-85627]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "info" : "ExpressionStatement[85417-85522]:ExpressionStatement[85645-85750]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[85556-85866]:IfStatement[85784-86094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85606-85866]:Block[85834-86094]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "info" : "ExpressionStatement[85625-85726]:ExpressionStatement[85853-85954]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "info" : "ExpressionStatement[85744-85851]:ExpressionStatement[85972-86079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85892-86693]:Block[86120-86921]"
    }, {
      "left" : "RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(\r\n                    getDomainAxisLocation(), this.orientation);",
      "right" : "RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(\r\n                    getDomainAxisLocation(), this.orientation);",
      "info" : "VariableDeclarationStatement[85968-86091]:VariableDeclarationStatement[86196-86319]"
    }, {
      "left" : "if (this.drawSharedDomainAxis)",
      "right" : "if (this.drawSharedDomainAxis)",
      "info" : "IfStatement[86105-86272]:IfStatement[86333-86500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86136-86272]:Block[86364-86500]"
    }, {
      "left" : "space = getDomainAxis().reserveSpace(g2, this, plotArea, \r\n                        domainEdge, space);",
      "right" : "space = getDomainAxis().reserveSpace(g2, this, plotArea, \r\n                        domainEdge, space);",
      "info" : "ExpressionStatement[86155-86257]:ExpressionStatement[86383-86485]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[86353-86682]:ForStatement[86581-86910]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86402-86682]:Block[86630-86910]"
    }, {
      "left" : "Axis xAxis = (Axis) this.domainAxes.get(i);",
      "right" : "Axis xAxis = (Axis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[86421-86464]:VariableDeclarationStatement[86649-86692]"
    }, {
      "left" : "if (xAxis != null)",
      "right" : "if (xAxis != null)",
      "info" : "IfStatement[86482-86667]:IfStatement[86710-86895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86501-86667]:Block[86729-86895]"
    }, {
      "left" : "RectangleEdge edge = getDomainAxisEdge(i);",
      "right" : "RectangleEdge edge = getDomainAxisEdge(i);",
      "info" : "VariableDeclarationStatement[86524-86566]:VariableDeclarationStatement[86752-86794]"
    }, {
      "left" : "space = xAxis.reserveSpace(g2, this, plotArea, edge, space);",
      "right" : "space = xAxis.reserveSpace(g2, this, plotArea, edge, space);",
      "info" : "ExpressionStatement[86588-86648]:ExpressionStatement[86816-86876]"
    }, {
      "left" : "return space;",
      "right" : "return space;",
      "info" : "ReturnStatement[86705-86718]:ReturnStatement[86933-86946]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[87085-87094]:Modifier[87313-87322]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[87095-87104]:SimpleType[87323-87332]"
    }, {
      "left" : "calculateRangeAxisSpace",
      "right" : "calculateRangeAxisSpace",
      "info" : "SimpleName[87105-87128]:SimpleName[87333-87356]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[87129-87142]:SingleVariableDeclaration[87357-87370]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[87194-87214]:SingleVariableDeclaration[87422-87442]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[87266-87281]:SingleVariableDeclaration[87494-87509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87283-88702]:Block[87511-88930]"
    }, {
      "left" : "if (space == null)",
      "right" : "if (space == null)",
      "info" : "IfStatement[87346-87416]:IfStatement[87574-87644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87365-87416]:Block[87593-87644]"
    }, {
      "left" : "space = new AxisSpace();",
      "right" : "space = new AxisSpace();",
      "info" : "ExpressionStatement[87380-87404]:ExpressionStatement[87608-87632]"
    }, {
      "left" : "if (this.fixedRangeAxisSpace != null)",
      "right" : "if (this.fixedRangeAxisSpace != null)",
      "info" : "IfStatement[87489-88618]:IfStatement[87717-88846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87527-88190]:Block[87755-88418]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[87542-88179]:IfStatement[87770-88407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87594-87852]:Block[87822-88080]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "info" : "ExpressionStatement[87613-87713]:ExpressionStatement[87841-87941]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "info" : "ExpressionStatement[87731-87837]:ExpressionStatement[87959-88065]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[87871-88179]:IfStatement[88099-88407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87921-88179]:Block[88149-88407]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(), \r\n                        RectangleEdge.LEFT);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(), \r\n                        RectangleEdge.LEFT);",
      "info" : "ExpressionStatement[87940-88042]:ExpressionStatement[88168-88270]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "info" : "ExpressionStatement[88060-88164]:ExpressionStatement[88288-88392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88205-88618]:Block[88433-88846]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[88281-88607]:ForStatement[88509-88835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88329-88607]:Block[88557-88835]"
    }, {
      "left" : "Axis yAxis = (Axis) this.rangeAxes.get(i);",
      "right" : "Axis yAxis = (Axis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[88348-88390]:VariableDeclarationStatement[88576-88618]"
    }, {
      "left" : "if (yAxis != null)",
      "right" : "if (yAxis != null)",
      "info" : "IfStatement[88408-88592]:IfStatement[88636-88820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88427-88592]:Block[88655-88820]"
    }, {
      "left" : "RectangleEdge edge = getRangeAxisEdge(i);",
      "right" : "RectangleEdge edge = getRangeAxisEdge(i);",
      "info" : "VariableDeclarationStatement[88450-88491]:VariableDeclarationStatement[88678-88719]"
    }, {
      "left" : "space = yAxis.reserveSpace(g2, this, plotArea, edge, space);",
      "right" : "space = yAxis.reserveSpace(g2, this, plotArea, edge, space);",
      "info" : "ExpressionStatement[88513-88573]:ExpressionStatement[88741-88801]"
    }, {
      "left" : "return space;",
      "right" : "return space;",
      "info" : "ReturnStatement[88628-88641]:ReturnStatement[88856-88869]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[88925-88934]:Modifier[89153-89162]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[88935-88944]:SimpleType[89163-89172]"
    }, {
      "left" : "calculateAxisSpace",
      "right" : "calculateAxisSpace",
      "info" : "SimpleName[88945-88963]:SimpleName[89173-89191]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[88964-88977]:SingleVariableDeclaration[89192-89205]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[89024-89044]:SingleVariableDeclaration[89252-89272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89046-89248]:Block[89274-89476]"
    }, {
      "left" : "AxisSpace space = new AxisSpace();",
      "right" : "AxisSpace space = new AxisSpace();",
      "info" : "VariableDeclarationStatement[89057-89091]:VariableDeclarationStatement[89285-89319]"
    }, {
      "left" : "space = calculateRangeAxisSpace(g2, plotArea, space);",
      "right" : "space = calculateRangeAxisSpace(g2, plotArea, space);",
      "info" : "ExpressionStatement[89101-89154]:ExpressionStatement[89329-89382]"
    }, {
      "left" : "space = calculateDomainAxisSpace(g2, plotArea, space);",
      "right" : "space = calculateDomainAxisSpace(g2, plotArea, space);",
      "info" : "ExpressionStatement[89164-89218]:ExpressionStatement[89392-89446]"
    }, {
      "left" : "return space;",
      "right" : "return space;",
      "info" : "ReturnStatement[89228-89241]:ReturnStatement[89456-89469]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90018-90024]:Modifier[90246-90252]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[90025-90029]:PrimitiveType[90253-90257]"
    }, {
      "left" : "draw",
      "right" : "draw",
      "info" : "SimpleName[90030-90034]:SimpleName[90258-90262]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[90035-90048]:SingleVariableDeclaration[90263-90276]"
    }, {
      "left" : "Rectangle2D area",
      "right" : "Rectangle2D area",
      "info" : "SingleVariableDeclaration[90050-90066]:SingleVariableDeclaration[90278-90294]"
    }, {
      "left" : "Point2D anchor",
      "right" : "Point2D anchor",
      "info" : "SingleVariableDeclaration[90091-90105]:SingleVariableDeclaration[90319-90333]"
    }, {
      "left" : "PlotState parentState",
      "right" : "PlotState parentState",
      "info" : "SingleVariableDeclaration[90129-90150]:SingleVariableDeclaration[90357-90378]"
    }, {
      "left" : "PlotRenderingInfo state",
      "right" : "PlotRenderingInfo state",
      "info" : "SingleVariableDeclaration[90174-90197]:SingleVariableDeclaration[90402-90425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90199-96679]:Block[90427-96907]"
    }, {
      "left" : "boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);",
      "right" : "boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);",
      "info" : "VariableDeclarationStatement[90270-90326]:VariableDeclarationStatement[90498-90554]"
    }, {
      "left" : "boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);",
      "right" : "boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);",
      "info" : "VariableDeclarationStatement[90336-90394]:VariableDeclarationStatement[90564-90622]"
    }, {
      "left" : "if (b1 || b2)",
      "right" : "if (b1 || b2)",
      "info" : "IfStatement[90404-90451]:IfStatement[90632-90679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90418-90451]:Block[90646-90679]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[90433-90440]:ReturnStatement[90661-90668]"
    }, {
      "left" : "if (state == null)",
      "right" : "if (state == null)",
      "info" : "IfStatement[90499-90804]:IfStatement[90727-91032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90518-90804]:Block[90746-91032]"
    }, {
      "left" : "state = new PlotRenderingInfo(null);",
      "right" : "state = new PlotRenderingInfo(null);",
      "info" : "ExpressionStatement[90757-90793]:ExpressionStatement[90985-91021]"
    }, {
      "left" : "state.setPlotArea(area);",
      "right" : "state.setPlotArea(area);",
      "info" : "ExpressionStatement[90814-90838]:ExpressionStatement[91042-91066]"
    }, {
      "left" : "RectangleInsets insets = getInsets();",
      "right" : "RectangleInsets insets = getInsets();",
      "info" : "VariableDeclarationStatement[90918-90955]:VariableDeclarationStatement[91146-91183]"
    }, {
      "left" : "insets.trim(area);",
      "right" : "insets.trim(area);",
      "info" : "ExpressionStatement[90965-90983]:ExpressionStatement[91193-91211]"
    }, {
      "left" : "AxisSpace space = calculateAxisSpace(g2, area);",
      "right" : "AxisSpace space = calculateAxisSpace(g2, area);",
      "info" : "VariableDeclarationStatement[91034-91081]:VariableDeclarationStatement[91262-91309]"
    }, {
      "left" : "Rectangle2D dataArea = space.shrink(area, null);",
      "right" : "Rectangle2D dataArea = space.shrink(area, null);",
      "info" : "VariableDeclarationStatement[91091-91139]:VariableDeclarationStatement[91319-91367]"
    }, {
      "left" : "this.axisOffset.trim(dataArea);",
      "right" : "this.axisOffset.trim(dataArea);",
      "info" : "ExpressionStatement[91149-91180]:ExpressionStatement[91377-91408]"
    }, {
      "left" : "state.setDataArea(dataArea);",
      "right" : "state.setDataArea(dataArea);",
      "info" : "ExpressionStatement[91192-91220]:ExpressionStatement[91420-91448]"
    }, {
      "left" : "if (getRenderer() != null)",
      "right" : "if (getRenderer() != null)",
      "info" : "IfStatement[91346-91518]:IfStatement[91574-91746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91373-91448]:Block[91601-91676]"
    }, {
      "left" : "getRenderer().drawBackground(g2, this, dataArea);",
      "right" : "getRenderer().drawBackground(g2, this, dataArea);",
      "info" : "ExpressionStatement[91388-91437]:ExpressionStatement[91616-91665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91463-91518]:Block[91691-91746]"
    }, {
      "left" : "drawBackground(g2, dataArea);",
      "right" : "drawBackground(g2, dataArea);",
      "info" : "ExpressionStatement[91478-91507]:ExpressionStatement[91706-91735]"
    }, {
      "left" : "Map axisStateMap = drawAxes(g2, area, dataArea, state);",
      "right" : "Map axisStateMap = drawAxes(g2, area, dataArea, state);",
      "info" : "VariableDeclarationStatement[91537-91592]:VariableDeclarationStatement[91765-91820]"
    }, {
      "left" : "Shape savedClip = g2.getClip();",
      "right" : "Shape savedClip = g2.getClip();",
      "info" : "VariableDeclarationStatement[91660-91691]:VariableDeclarationStatement[91888-91919]"
    }, {
      "left" : "g2.clip(dataArea);",
      "right" : "g2.clip(dataArea);",
      "info" : "ExpressionStatement[91701-91719]:ExpressionStatement[91929-91947]"
    }, {
      "left" : "drawDomainGridlines(g2, dataArea);",
      "right" : "drawDomainGridlines(g2, dataArea);",
      "info" : "ExpressionStatement[91731-91765]:ExpressionStatement[91959-91993]"
    }, {
      "left" : "AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());",
      "right" : "AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());",
      "info" : "VariableDeclarationStatement[91777-91849]:VariableDeclarationStatement[92005-92077]"
    }, {
      "left" : "if (rangeAxisState == null)",
      "right" : "if (rangeAxisState == null)",
      "info" : "IfStatement[91859-92081]:IfStatement[92087-92309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91887-92081]:Block[92115-92309]"
    }, {
      "left" : "if (parentState != null)",
      "right" : "if (parentState != null)",
      "info" : "IfStatement[91902-92070]:IfStatement[92130-92298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91927-92070]:Block[92155-92298]"
    }, {
      "left" : "rangeAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getRangeAxis());",
      "right" : "rangeAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getRangeAxis());",
      "info" : "ExpressionStatement[91946-92055]:ExpressionStatement[92174-92283]"
    }, {
      "left" : "if (rangeAxisState != null)",
      "right" : "if (rangeAxisState != null)",
      "info" : "IfStatement[92091-92205]:IfStatement[92319-92433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92119-92205]:Block[92347-92433]"
    }, {
      "left" : "drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",
      "right" : "drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",
      "info" : "ExpressionStatement[92134-92194]:ExpressionStatement[92362-92422]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[92257-92384]:ForStatement[92485-92612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92305-92384]:Block[92533-92612]"
    }, {
      "left" : "drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "right" : "drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "info" : "ExpressionStatement[92320-92373]:ExpressionStatement[92548-92601]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[92402-92528]:ForStatement[92630-92756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92450-92528]:Block[92678-92756]"
    }, {
      "left" : "drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "right" : "drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "info" : "ExpressionStatement[92465-92517]:ExpressionStatement[92693-92745]"
    }, {
      "left" : "boolean foundData = false;",
      "right" : "boolean foundData = false;",
      "info" : "VariableDeclarationStatement[92577-92603]:VariableDeclarationStatement[92805-92831]"
    }, {
      "left" : "Composite originalComposite = g2.getComposite();",
      "right" : "Composite originalComposite = g2.getComposite();",
      "info" : "VariableDeclarationStatement[92660-92708]:VariableDeclarationStatement[92888-92936]"
    }, {
      "left" : "g2.setComposite(AlphaComposite.getInstance(\r\n                AlphaComposite.SRC_OVER, getForegroundAlpha()));",
      "right" : "g2.setComposite(AlphaComposite.getInstance(\r\n                AlphaComposite.SRC_OVER, getForegroundAlpha()));",
      "info" : "ExpressionStatement[92718-92827]:ExpressionStatement[92946-93055]"
    }, {
      "left" : "DatasetRenderingOrder order = getDatasetRenderingOrder();",
      "right" : "DatasetRenderingOrder order = getDatasetRenderingOrder();",
      "info" : "VariableDeclarationStatement[92839-92896]:VariableDeclarationStatement[93067-93124]"
    }, {
      "left" : "if (order == DatasetRenderingOrder.FORWARD)",
      "right" : "if (order == DatasetRenderingOrder.FORWARD)",
      "info" : "IfStatement[92906-95479]:IfStatement[93134-95707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92950-94165]:Block[93178-94393]"
    }, {
      "left" : "int datasetCount = this.datasets.size();",
      "right" : "int datasetCount = this.datasets.size();",
      "info" : "VariableDeclarationStatement[93011-93051]:VariableDeclarationStatement[93239-93279]"
    }, {
      "left" : "for (int i = 0; i < datasetCount; i++)",
      "right" : "for (int i = 0; i < datasetCount; i++)",
      "info" : "ForStatement[93065-93507]:ForStatement[93293-93735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93104-93507]:Block[93332-93735]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(i);",
      "right" : "CategoryItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[93123-93163]:VariableDeclarationStatement[93351-93391]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[93181-93492]:IfStatement[93409-93720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93196-93492]:Block[93424-93720]"
    }, {
      "left" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[93219-93272]:VariableDeclarationStatement[93447-93500]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[93294-93342]:VariableDeclarationStatement[93522-93570]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, state);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, state);",
      "info" : "ExpressionStatement[93364-93473]:ExpressionStatement[93592-93701]"
    }, {
      "left" : "for (int i = 0; i < datasetCount; i++)",
      "right" : "for (int i = 0; i < datasetCount; i++)",
      "info" : "ForStatement[93523-93652]:ForStatement[93751-93880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93562-93652]:Block[93790-93880]"
    }, {
      "left" : "foundData = render(g2, dataArea, i, state) || foundData;",
      "right" : "foundData = render(g2, dataArea, i, state) || foundData;",
      "info" : "ExpressionStatement[93581-93637]:ExpressionStatement[93809-93865]"
    }, {
      "left" : "for (int i = 0; i < datasetCount; i++)",
      "right" : "for (int i = 0; i < datasetCount; i++)",
      "info" : "ForStatement[93712-94154]:ForStatement[93940-94382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93751-94154]:Block[93979-94382]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(i);",
      "right" : "CategoryItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[93770-93810]:VariableDeclarationStatement[93998-94038]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[93828-94139]:IfStatement[94056-94367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93843-94139]:Block[94071-94367]"
    }, {
      "left" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[93866-93919]:VariableDeclarationStatement[94094-94147]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[93941-93989]:VariableDeclarationStatement[94169-94217]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, state);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, state);",
      "info" : "ExpressionStatement[94011-94120]:ExpressionStatement[94239-94348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94180-95479]:Block[94408-95707]"
    }, {
      "left" : "int datasetCount = this.datasets.size();",
      "right" : "int datasetCount = this.datasets.size();",
      "info" : "VariableDeclarationStatement[94287-94327]:VariableDeclarationStatement[94515-94555]"
    }, {
      "left" : "for (int i = datasetCount - 1; i >= 0; i--)",
      "right" : "for (int i = datasetCount - 1; i >= 0; i--)",
      "info" : "ForStatement[94341-94788]:ForStatement[94569-95016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94385-94788]:Block[94613-95016]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(i);",
      "right" : "CategoryItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[94404-94444]:VariableDeclarationStatement[94632-94672]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[94462-94773]:IfStatement[94690-95001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94477-94773]:Block[94705-95001]"
    }, {
      "left" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[94500-94553]:VariableDeclarationStatement[94728-94781]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[94575-94623]:VariableDeclarationStatement[94803-94851]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, state);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, state);",
      "info" : "ExpressionStatement[94645-94754]:ExpressionStatement[94873-94982]"
    }, {
      "left" : "for (int i = this.datasets.size() - 1; i >= 0; i--)",
      "right" : "for (int i = this.datasets.size() - 1; i >= 0; i--)",
      "info" : "ForStatement[94816-94961]:ForStatement[95044-95189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94868-94961]:Block[95096-95189]"
    }, {
      "left" : "foundData = render(g2, dataArea, i, state) || foundData;",
      "right" : "foundData = render(g2, dataArea, i, state) || foundData;",
      "info" : "ExpressionStatement[94887-94943]:ExpressionStatement[95115-95171]"
    }, {
      "left" : "for (int i = datasetCount - 1; i >= 0; i--)",
      "right" : "for (int i = datasetCount - 1; i >= 0; i--)",
      "info" : "ForStatement[95021-95468]:ForStatement[95249-95696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95065-95468]:Block[95293-95696]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(i);",
      "right" : "CategoryItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[95084-95124]:VariableDeclarationStatement[95312-95352]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[95142-95453]:IfStatement[95370-95681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95157-95453]:Block[95385-95681]"
    }, {
      "left" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[95180-95233]:VariableDeclarationStatement[95408-95461]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[95255-95303]:VariableDeclarationStatement[95483-95531]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, state);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, state);",
      "info" : "ExpressionStatement[95325-95434]:ExpressionStatement[95553-95662]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[95542-95669]:ForStatement[95770-95897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95590-95669]:Block[95818-95897]"
    }, {
      "left" : "drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "right" : "drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[95605-95658]:ExpressionStatement[95833-95886]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[95679-95805]:ForStatement[95907-96033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95727-95805]:Block[95955-96033]"
    }, {
      "left" : "drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "right" : "drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[95742-95794]:ExpressionStatement[95970-96022]"
    }, {
      "left" : "drawAnnotations(g2, dataArea, state);",
      "right" : "drawAnnotations(g2, dataArea, state);",
      "info" : "ExpressionStatement[95869-95906]:ExpressionStatement[96097-96134]"
    }, {
      "left" : "g2.setClip(savedClip);",
      "right" : "g2.setClip(savedClip);",
      "info" : "ExpressionStatement[95918-95940]:ExpressionStatement[96146-96168]"
    }, {
      "left" : "g2.setComposite(originalComposite);",
      "right" : "g2.setComposite(originalComposite);",
      "info" : "ExpressionStatement[95950-95985]:ExpressionStatement[96178-96213]"
    }, {
      "left" : "if (!foundData)",
      "right" : "if (!foundData)",
      "info" : "IfStatement[95997-96071]:IfStatement[96225-96299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96013-96071]:Block[96241-96299]"
    }, {
      "left" : "drawNoDataMessage(g2, dataArea);",
      "right" : "drawNoDataMessage(g2, dataArea);",
      "info" : "ExpressionStatement[96028-96060]:ExpressionStatement[96256-96288]"
    }, {
      "left" : "if (isRangeCrosshairVisible())",
      "right" : "if (isRangeCrosshairVisible())",
      "info" : "IfStatement[96131-96440]:IfStatement[96359-96668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96162-96440]:Block[96390-96668]"
    }, {
      "left" : "drawRangeCrosshair(g2, dataArea, getOrientation(), \r\n                    getRangeCrosshairValue(), getRangeAxis(),\r\n                    getRangeCrosshairStroke(), getRangeCrosshairPaint());",
      "right" : "drawRangeCrosshair(g2, dataArea, getOrientation(), \r\n                    getRangeCrosshairValue(), getRangeAxis(),\r\n                    getRangeCrosshairStroke(), getRangeCrosshairPaint());",
      "info" : "ExpressionStatement[96240-96429]:ExpressionStatement[96468-96657]"
    }, {
      "left" : "if (getRenderer() != null)",
      "right" : "if (getRenderer() != null)",
      "info" : "IfStatement[96504-96670]:IfStatement[96732-96898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96531-96603]:Block[96759-96831]"
    }, {
      "left" : "getRenderer().drawOutline(g2, this, dataArea);",
      "right" : "getRenderer().drawOutline(g2, this, dataArea);",
      "info" : "ExpressionStatement[96546-96592]:ExpressionStatement[96774-96820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96618-96670]:Block[96846-96898]"
    }, {
      "left" : "drawOutline(g2, dataArea);",
      "right" : "drawOutline(g2, dataArea);",
      "info" : "ExpressionStatement[96633-96659]:ExpressionStatement[96861-96887]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[97136-97142]:Modifier[97364-97370]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[97143-97147]:PrimitiveType[97371-97375]"
    }, {
      "left" : "drawBackground",
      "right" : "drawBackground",
      "info" : "SimpleName[97148-97162]:SimpleName[97376-97390]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[97163-97176]:SingleVariableDeclaration[97391-97404]"
    }, {
      "left" : "Rectangle2D area",
      "right" : "Rectangle2D area",
      "info" : "SingleVariableDeclaration[97178-97194]:SingleVariableDeclaration[97406-97422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97196-97297]:Block[97424-97525]"
    }, {
      "left" : "fillBackground(g2, area, this.orientation);",
      "right" : "fillBackground(g2, area, this.orientation);",
      "info" : "ExpressionStatement[97207-97250]:ExpressionStatement[97435-97478]"
    }, {
      "left" : "drawBackgroundImage(g2, area);",
      "right" : "drawBackgroundImage(g2, area);",
      "info" : "ExpressionStatement[97260-97290]:ExpressionStatement[97488-97518]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[97684-97693]:Modifier[97912-97921]"
    }, {
      "left" : "Map",
      "right" : "Map",
      "info" : "SimpleType[97694-97697]:SimpleType[97922-97925]"
    }, {
      "left" : "drawAxes",
      "right" : "drawAxes",
      "info" : "SimpleName[97698-97706]:SimpleName[97926-97934]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[97707-97720]:SingleVariableDeclaration[97935-97948]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[97751-97771]:SingleVariableDeclaration[97979-97999]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[97802-97822]:SingleVariableDeclaration[98030-98050]"
    }, {
      "left" : "PlotRenderingInfo plotState",
      "right" : "PlotRenderingInfo plotState",
      "info" : "SingleVariableDeclaration[97852-97879]:SingleVariableDeclaration[98080-98107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97881-101104]:Block[98109-101332]"
    }, {
      "left" : "AxisCollection axisCollection = new AxisCollection();",
      "right" : "AxisCollection axisCollection = new AxisCollection();",
      "info" : "VariableDeclarationStatement[97894-97947]:VariableDeclarationStatement[98122-98175]"
    }, {
      "left" : "for (int index = 0; index < this.domainAxes.size(); index++)",
      "right" : "for (int index = 0; index < this.domainAxes.size(); index++)",
      "info" : "ForStatement[97999-98268]:ForStatement[98227-98496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98060-98268]:Block[98288-98496]"
    }, {
      "left" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(index);",
      "right" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(index);",
      "info" : "VariableDeclarationStatement[98075-98138]:VariableDeclarationStatement[98303-98366]"
    }, {
      "left" : "if (xAxis != null)",
      "right" : "if (xAxis != null)",
      "info" : "IfStatement[98152-98257]:IfStatement[98380-98485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98171-98257]:Block[98399-98485]"
    }, {
      "left" : "axisCollection.add(xAxis, getDomainAxisEdge(index));",
      "right" : "axisCollection.add(xAxis, getDomainAxisEdge(index));",
      "info" : "ExpressionStatement[98190-98242]:ExpressionStatement[98418-98470]"
    }, {
      "left" : "for (int index = 0; index < this.rangeAxes.size(); index++)",
      "right" : "for (int index = 0; index < this.rangeAxes.size(); index++)",
      "info" : "ForStatement[98319-98579]:ForStatement[98547-98807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98379-98579]:Block[98607-98807]"
    }, {
      "left" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);",
      "right" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);",
      "info" : "VariableDeclarationStatement[98394-98450]:VariableDeclarationStatement[98622-98678]"
    }, {
      "left" : "if (yAxis != null)",
      "right" : "if (yAxis != null)",
      "info" : "IfStatement[98464-98568]:IfStatement[98692-98796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98483-98568]:Block[98711-98796]"
    }, {
      "left" : "axisCollection.add(yAxis, getRangeAxisEdge(index));",
      "right" : "axisCollection.add(yAxis, getRangeAxisEdge(index));",
      "info" : "ExpressionStatement[98502-98553]:ExpressionStatement[98730-98781]"
    }, {
      "left" : "Map axisStateMap = new HashMap();",
      "right" : "Map axisStateMap = new HashMap();",
      "info" : "VariableDeclarationStatement[98591-98624]:VariableDeclarationStatement[98819-98852]"
    }, {
      "left" : "double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(\r\n                dataArea.getHeight());",
      "right" : "double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(\r\n                dataArea.getHeight());",
      "info" : "VariableDeclarationStatement[98674-98786]:VariableDeclarationStatement[98902-99014]"
    }, {
      "left" : "Iterator iterator = axisCollection.getAxesAtTop().iterator();",
      "right" : "Iterator iterator = axisCollection.getAxesAtTop().iterator();",
      "info" : "VariableDeclarationStatement[98796-98857]:VariableDeclarationStatement[99024-99085]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[98867-99242]:WhileStatement[99095-99470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98894-99242]:Block[99122-99470]"
    }, {
      "left" : "Axis axis = (Axis) iterator.next();",
      "right" : "Axis axis = (Axis) iterator.next();",
      "info" : "VariableDeclarationStatement[98909-98944]:VariableDeclarationStatement[99137-99172]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[98958-99231]:IfStatement[99186-99459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98976-99231]:Block[99204-99459]"
    }, {
      "left" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \r\n                        RectangleEdge.TOP, plotState);",
      "right" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \r\n                        RectangleEdge.TOP, plotState);",
      "info" : "VariableDeclarationStatement[98995-99115]:VariableDeclarationStatement[99223-99343]"
    }, {
      "left" : "cursor = axisState.getCursor();",
      "right" : "cursor = axisState.getCursor();",
      "info" : "ExpressionStatement[99133-99164]:ExpressionStatement[99361-99392]"
    }, {
      "left" : "axisStateMap.put(axis, axisState);",
      "right" : "axisStateMap.put(axis, axisState);",
      "info" : "ExpressionStatement[99182-99216]:ExpressionStatement[99410-99444]"
    }, {
      "left" : "cursor = dataArea.getMaxY() \r\n                 + this.axisOffset.calculateBottomOutset(dataArea.getHeight());",
      "right" : "cursor = dataArea.getMaxY() \r\n                 + this.axisOffset.calculateBottomOutset(dataArea.getHeight());",
      "info" : "ExpressionStatement[99287-99396]:ExpressionStatement[99515-99624]"
    }, {
      "left" : "iterator = axisCollection.getAxesAtBottom().iterator();",
      "right" : "iterator = axisCollection.getAxesAtBottom().iterator();",
      "info" : "ExpressionStatement[99406-99461]:ExpressionStatement[99634-99689]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[99471-99848]:WhileStatement[99699-100076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99498-99848]:Block[99726-100076]"
    }, {
      "left" : "Axis axis = (Axis) iterator.next();",
      "right" : "Axis axis = (Axis) iterator.next();",
      "info" : "VariableDeclarationStatement[99513-99548]:VariableDeclarationStatement[99741-99776]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[99562-99837]:IfStatement[99790-100065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99580-99837]:Block[99808-100065]"
    }, {
      "left" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,\r\n                        RectangleEdge.BOTTOM, plotState);",
      "right" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,\r\n                        RectangleEdge.BOTTOM, plotState);",
      "info" : "VariableDeclarationStatement[99599-99721]:VariableDeclarationStatement[99827-99949]"
    }, {
      "left" : "cursor = axisState.getCursor();",
      "right" : "cursor = axisState.getCursor();",
      "info" : "ExpressionStatement[99739-99770]:ExpressionStatement[99967-99998]"
    }, {
      "left" : "axisStateMap.put(axis, axisState);",
      "right" : "axisStateMap.put(axis, axisState);",
      "info" : "ExpressionStatement[99788-99822]:ExpressionStatement[100016-100050]"
    }, {
      "left" : "cursor = dataArea.getMinX() \r\n                 - this.axisOffset.calculateLeftOutset(dataArea.getWidth());",
      "right" : "cursor = dataArea.getMinX() \r\n                 - this.axisOffset.calculateLeftOutset(dataArea.getWidth());",
      "info" : "ExpressionStatement[99891-99997]:ExpressionStatement[100119-100225]"
    }, {
      "left" : "iterator = axisCollection.getAxesAtLeft().iterator();",
      "right" : "iterator = axisCollection.getAxesAtLeft().iterator();",
      "info" : "ExpressionStatement[100007-100060]:ExpressionStatement[100235-100288]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[100070-100445]:WhileStatement[100298-100673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100097-100445]:Block[100325-100673]"
    }, {
      "left" : "Axis axis = (Axis) iterator.next();",
      "right" : "Axis axis = (Axis) iterator.next();",
      "info" : "VariableDeclarationStatement[100112-100147]:VariableDeclarationStatement[100340-100375]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[100161-100434]:IfStatement[100389-100662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100179-100434]:Block[100407-100662]"
    }, {
      "left" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,\r\n                        RectangleEdge.LEFT, plotState);",
      "right" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,\r\n                        RectangleEdge.LEFT, plotState);",
      "info" : "VariableDeclarationStatement[100198-100318]:VariableDeclarationStatement[100426-100546]"
    }, {
      "left" : "cursor = axisState.getCursor();",
      "right" : "cursor = axisState.getCursor();",
      "info" : "ExpressionStatement[100336-100367]:ExpressionStatement[100564-100595]"
    }, {
      "left" : "axisStateMap.put(axis, axisState);",
      "right" : "axisStateMap.put(axis, axisState);",
      "info" : "ExpressionStatement[100385-100419]:ExpressionStatement[100613-100647]"
    }, {
      "left" : "cursor = dataArea.getMaxX() \r\n                 + this.axisOffset.calculateRightOutset(dataArea.getWidth());",
      "right" : "cursor = dataArea.getMaxX() \r\n                 + this.axisOffset.calculateRightOutset(dataArea.getWidth());",
      "info" : "ExpressionStatement[100489-100596]:ExpressionStatement[100717-100824]"
    }, {
      "left" : "iterator = axisCollection.getAxesAtRight().iterator();",
      "right" : "iterator = axisCollection.getAxesAtRight().iterator();",
      "info" : "ExpressionStatement[100606-100660]:ExpressionStatement[100834-100888]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[100670-101047]:WhileStatement[100898-101275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100697-101047]:Block[100925-101275]"
    }, {
      "left" : "Axis axis = (Axis) iterator.next();",
      "right" : "Axis axis = (Axis) iterator.next();",
      "info" : "VariableDeclarationStatement[100712-100747]:VariableDeclarationStatement[100940-100975]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[100761-101036]:IfStatement[100989-101264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100779-101036]:Block[101007-101264]"
    }, {
      "left" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \r\n                        RectangleEdge.RIGHT, plotState);",
      "right" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \r\n                        RectangleEdge.RIGHT, plotState);",
      "info" : "VariableDeclarationStatement[100798-100920]:VariableDeclarationStatement[101026-101148]"
    }, {
      "left" : "cursor = axisState.getCursor();",
      "right" : "cursor = axisState.getCursor();",
      "info" : "ExpressionStatement[100938-100969]:ExpressionStatement[101166-101197]"
    }, {
      "left" : "axisStateMap.put(axis, axisState);",
      "right" : "axisStateMap.put(axis, axisState);",
      "info" : "ExpressionStatement[100987-101021]:ExpressionStatement[101215-101249]"
    }, {
      "left" : "return axisStateMap;",
      "right" : "return axisStateMap;",
      "info" : "ReturnStatement[101067-101087]:ReturnStatement[101295-101315]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[101577-101583]:Modifier[101805-101811]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[101584-101591]:PrimitiveType[101812-101819]"
    }, {
      "left" : "render",
      "right" : "render",
      "info" : "SimpleName[101592-101598]:SimpleName[101820-101826]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[101599-101612]:SingleVariableDeclaration[101827-101840]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[101614-101634]:SingleVariableDeclaration[101842-101862]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[101636-101645]:SingleVariableDeclaration[101864-101873]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[101675-101697]:SingleVariableDeclaration[101903-101925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101699-104614]:Block[101927-104842]"
    }, {
      "left" : "boolean foundData = false;",
      "right" : "boolean foundData = false;",
      "info" : "VariableDeclarationStatement[101712-101738]:VariableDeclarationStatement[101940-101966]"
    }, {
      "left" : "CategoryDataset currentDataset = getDataset(index);",
      "right" : "CategoryDataset currentDataset = getDataset(index);",
      "info" : "VariableDeclarationStatement[101748-101799]:VariableDeclarationStatement[101976-102027]"
    }, {
      "left" : "CategoryItemRenderer renderer = getRenderer(index);",
      "right" : "CategoryItemRenderer renderer = getRenderer(index);",
      "info" : "VariableDeclarationStatement[101809-101860]:VariableDeclarationStatement[102037-102088]"
    }, {
      "left" : "CategoryAxis domainAxis = getDomainAxisForDataset(index);",
      "right" : "CategoryAxis domainAxis = getDomainAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[101870-101927]:VariableDeclarationStatement[102098-102155]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(index);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[101937-101989]:VariableDeclarationStatement[102165-102217]"
    }, {
      "left" : "boolean hasData = !DatasetUtilities.isEmptyOrNull(currentDataset);",
      "right" : "boolean hasData = !DatasetUtilities.isEmptyOrNull(currentDataset);",
      "info" : "VariableDeclarationStatement[101999-102065]:VariableDeclarationStatement[102227-102293]"
    }, {
      "left" : "if (hasData && renderer != null)",
      "right" : "if (hasData && renderer != null)",
      "info" : "IfStatement[102075-104570]:IfStatement[102303-104798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102108-104570]:Block[102336-104798]"
    }, {
      "left" : "foundData = true;",
      "right" : "foundData = true;",
      "info" : "ExpressionStatement[102137-102154]:ExpressionStatement[102365-102382]"
    }, {
      "left" : "CategoryItemRendererState state = renderer.initialise(g2, dataArea,\r\n                    this, index, info);",
      "right" : "CategoryItemRendererState state = renderer.initialise(g2, dataArea,\r\n                    this, index, info);",
      "info" : "VariableDeclarationStatement[102168-102276]:VariableDeclarationStatement[102396-102504]"
    }, {
      "left" : "int columnCount = currentDataset.getColumnCount();",
      "right" : "int columnCount = currentDataset.getColumnCount();",
      "info" : "VariableDeclarationStatement[102290-102340]:VariableDeclarationStatement[102518-102568]"
    }, {
      "left" : "int rowCount = currentDataset.getRowCount();",
      "right" : "int rowCount = currentDataset.getRowCount();",
      "info" : "VariableDeclarationStatement[102354-102398]:VariableDeclarationStatement[102582-102626]"
    }, {
      "left" : "int passCount = renderer.getPassCount();",
      "right" : "int passCount = renderer.getPassCount();",
      "info" : "VariableDeclarationStatement[102412-102452]:VariableDeclarationStatement[102640-102680]"
    }, {
      "left" : "for (int pass = 0; pass < passCount; pass++)",
      "right" : "for (int pass = 0; pass < passCount; pass++)",
      "info" : "ForStatement[102466-104559]:ForStatement[102694-104787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102511-104559]:Block[102739-104787]"
    }, {
      "left" : "if (this.columnRenderingOrder == SortOrder.ASCENDING)",
      "right" : "if (this.columnRenderingOrder == SortOrder.ASCENDING)",
      "info" : "IfStatement[102542-104544]:IfStatement[102770-104772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102596-103556]:Block[102824-103784]"
    }, {
      "left" : "for (int column = 0; column < columnCount; column++)",
      "right" : "for (int column = 0; column < columnCount; column++)",
      "info" : "ForStatement[102619-103537]:ForStatement[102847-103765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102672-103537]:Block[102900-103765]"
    }, {
      "left" : "if (this.rowRenderingOrder == SortOrder.ASCENDING)",
      "right" : "if (this.rowRenderingOrder == SortOrder.ASCENDING)",
      "info" : "IfStatement[102699-103514]:IfStatement[102927-103742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102750-103102]:Block[102978-103330]"
    }, {
      "left" : "for (int row = 0; row < rowCount; row++)",
      "right" : "for (int row = 0; row < rowCount; row++)",
      "info" : "ForStatement[102781-103075]:ForStatement[103009-103303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102822-103075]:Block[103050-103303]"
    }, {
      "left" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "right" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "info" : "ExpressionStatement[102857-103044]:ExpressionStatement[103085-103272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103133-103514]:Block[103361-103742]"
    }, {
      "left" : "for (int row = rowCount - 1; row >= 0; row--)",
      "right" : "for (int row = rowCount - 1; row >= 0; row--)",
      "info" : "ForStatement[103164-103463]:ForStatement[103392-103691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103210-103463]:Block[103438-103691]"
    }, {
      "left" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "right" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "info" : "ExpressionStatement[103245-103432]:ExpressionStatement[103473-103660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103579-104544]:Block[103807-104772]"
    }, {
      "left" : "for (int column = columnCount - 1; column >= 0; column--)",
      "right" : "for (int column = columnCount - 1; column >= 0; column--)",
      "info" : "ForStatement[103602-104525]:ForStatement[103830-104753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103660-104525]:Block[103888-104753]"
    }, {
      "left" : "if (this.rowRenderingOrder == SortOrder.ASCENDING)",
      "right" : "if (this.rowRenderingOrder == SortOrder.ASCENDING)",
      "info" : "IfStatement[103687-104502]:IfStatement[103915-104730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103738-104090]:Block[103966-104318]"
    }, {
      "left" : "for (int row = 0; row < rowCount; row++)",
      "right" : "for (int row = 0; row < rowCount; row++)",
      "info" : "ForStatement[103769-104063]:ForStatement[103997-104291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103810-104063]:Block[104038-104291]"
    }, {
      "left" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "right" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "info" : "ExpressionStatement[103845-104032]:ExpressionStatement[104073-104260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104121-104502]:Block[104349-104730]"
    }, {
      "left" : "for (int row = rowCount - 1; row >= 0; row--)",
      "right" : "for (int row = rowCount - 1; row >= 0; row--)",
      "info" : "ForStatement[104152-104451]:ForStatement[104380-104679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104198-104451]:Block[104426-104679]"
    }, {
      "left" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "right" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "info" : "ExpressionStatement[104233-104420]:ExpressionStatement[104461-104648]"
    }, {
      "left" : "return foundData;",
      "right" : "return foundData;",
      "info" : "ReturnStatement[104580-104597]:ReturnStatement[104808-104825]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[104854-104863]:Modifier[105082-105091]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[104864-104868]:PrimitiveType[105092-105096]"
    }, {
      "left" : "drawDomainGridlines",
      "right" : "drawDomainGridlines",
      "info" : "SimpleName[104869-104888]:SimpleName[105097-105116]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[104889-104902]:SingleVariableDeclaration[105117-105130]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[104904-104924]:SingleVariableDeclaration[105132-105152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104926-106297]:Block[105154-106525]"
    }, {
      "left" : "if (isDomainGridlinesVisible())",
      "right" : "if (isDomainGridlinesVisible())",
      "info" : "IfStatement[104989-106290]:IfStatement[105217-106518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105021-106290]:Block[105249-106518]"
    }, {
      "left" : "CategoryAnchor anchor = getDomainGridlinePosition();",
      "right" : "CategoryAnchor anchor = getDomainGridlinePosition();",
      "info" : "VariableDeclarationStatement[105036-105088]:VariableDeclarationStatement[105264-105316]"
    }, {
      "left" : "RectangleEdge domainAxisEdge = getDomainAxisEdge();",
      "right" : "RectangleEdge domainAxisEdge = getDomainAxisEdge();",
      "info" : "VariableDeclarationStatement[105102-105153]:VariableDeclarationStatement[105330-105381]"
    }, {
      "left" : "Stroke gridStroke = getDomainGridlineStroke();",
      "right" : "Stroke gridStroke = getDomainGridlineStroke();",
      "info" : "VariableDeclarationStatement[105167-105213]:VariableDeclarationStatement[105395-105441]"
    }, {
      "left" : "Paint gridPaint = getDomainGridlinePaint();",
      "right" : "Paint gridPaint = getDomainGridlinePaint();",
      "info" : "VariableDeclarationStatement[105227-105270]:VariableDeclarationStatement[105455-105498]"
    }, {
      "left" : "if ((gridStroke != null) && (gridPaint != null))",
      "right" : "if ((gridStroke != null) && (gridPaint != null))",
      "info" : "IfStatement[105284-106279]:IfStatement[105512-106507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105333-106279]:Block[105561-106507]"
    }, {
      "left" : "CategoryDataset data = getDataset();",
      "right" : "CategoryDataset data = getDataset();",
      "info" : "VariableDeclarationStatement[105400-105436]:VariableDeclarationStatement[105628-105664]"
    }, {
      "left" : "if (data != null)",
      "right" : "if (data != null)",
      "info" : "IfStatement[105454-106264]:IfStatement[105682-106492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105472-106264]:Block[105700-106492]"
    }, {
      "left" : "CategoryAxis axis = getDomainAxis();",
      "right" : "CategoryAxis axis = getDomainAxis();",
      "info" : "VariableDeclarationStatement[105495-105531]:VariableDeclarationStatement[105723-105759]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[105553-106245]:IfStatement[105781-106473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105571-106245]:Block[105799-106473]"
    }, {
      "left" : "int columnCount = data.getColumnCount();",
      "right" : "int columnCount = data.getColumnCount();",
      "info" : "VariableDeclarationStatement[105598-105638]:VariableDeclarationStatement[105826-105866]"
    }, {
      "left" : "for (int c = 0; c < columnCount; c++)",
      "right" : "for (int c = 0; c < columnCount; c++)",
      "info" : "ForStatement[105664-106222]:ForStatement[105892-106450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105702-106222]:Block[105930-106450]"
    }, {
      "left" : "double xx = axis.getCategoryJava2DCoordinate(\r\n                                    anchor, c, columnCount, dataArea, \r\n                                    domainAxisEdge);",
      "right" : "double xx = axis.getCategoryJava2DCoordinate(\r\n                                    anchor, c, columnCount, dataArea, \r\n                                    domainAxisEdge);",
      "info" : "VariableDeclarationStatement[105733-105904]:VariableDeclarationStatement[105961-106132]"
    }, {
      "left" : "CategoryItemRenderer renderer1 = getRenderer();",
      "right" : "CategoryItemRenderer renderer1 = getRenderer();",
      "info" : "VariableDeclarationStatement[105934-105981]:VariableDeclarationStatement[106162-106209]"
    }, {
      "left" : "if (renderer1 != null)",
      "right" : "if (renderer1 != null)",
      "info" : "IfStatement[106011-106195]:IfStatement[106239-106423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106034-106195]:Block[106262-106423]"
    }, {
      "left" : "renderer1.drawDomainGridline(g2, this, \r\n                                        dataArea, xx);",
      "right" : "renderer1.drawDomainGridline(g2, this, \r\n                                        dataArea, xx);",
      "info" : "ExpressionStatement[106069-106164]:ExpressionStatement[106297-106392]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[106566-106575]:Modifier[106794-106803]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[106576-106580]:PrimitiveType[106804-106808]"
    }, {
      "left" : "drawRangeGridlines",
      "right" : "drawRangeGridlines",
      "info" : "SimpleName[106581-106599]:SimpleName[106809-106827]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[106600-106613]:SingleVariableDeclaration[106828-106841]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[106615-106635]:SingleVariableDeclaration[106843-106863]"
    }, {
      "left" : "List ticks",
      "right" : "List ticks",
      "info" : "SingleVariableDeclaration[106677-106687]:SingleVariableDeclaration[106905-106915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106689-107601]:Block[106917-107829]"
    }, {
      "left" : "if (isRangeGridlinesVisible())",
      "right" : "if (isRangeGridlinesVisible())",
      "info" : "IfStatement[106749-107594]:IfStatement[106977-107822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106780-107594]:Block[107008-107822]"
    }, {
      "left" : "Stroke gridStroke = getRangeGridlineStroke();",
      "right" : "Stroke gridStroke = getRangeGridlineStroke();",
      "info" : "VariableDeclarationStatement[106795-106840]:VariableDeclarationStatement[107023-107068]"
    }, {
      "left" : "Paint gridPaint = getRangeGridlinePaint();",
      "right" : "Paint gridPaint = getRangeGridlinePaint();",
      "info" : "VariableDeclarationStatement[106854-106896]:VariableDeclarationStatement[107082-107124]"
    }, {
      "left" : "if ((gridStroke != null) && (gridPaint != null))",
      "right" : "if ((gridStroke != null) && (gridPaint != null))",
      "info" : "IfStatement[106910-107583]:IfStatement[107138-107811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106959-107583]:Block[107187-107811]"
    }, {
      "left" : "ValueAxis axis = getRangeAxis();",
      "right" : "ValueAxis axis = getRangeAxis();",
      "info" : "VariableDeclarationStatement[106978-107010]:VariableDeclarationStatement[107206-107238]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[107028-107568]:IfStatement[107256-107796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107046-107568]:Block[107274-107796]"
    }, {
      "left" : "Iterator iterator = ticks.iterator();",
      "right" : "Iterator iterator = ticks.iterator();",
      "info" : "VariableDeclarationStatement[107069-107106]:VariableDeclarationStatement[107297-107334]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[107128-107549]:WhileStatement[107356-107777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107155-107549]:Block[107383-107777]"
    }, {
      "left" : "ValueTick tick = (ValueTick) iterator.next();",
      "right" : "ValueTick tick = (ValueTick) iterator.next();",
      "info" : "VariableDeclarationStatement[107182-107227]:VariableDeclarationStatement[107410-107455]"
    }, {
      "left" : "CategoryItemRenderer renderer1 = getRenderer();",
      "right" : "CategoryItemRenderer renderer1 = getRenderer();",
      "info" : "VariableDeclarationStatement[107253-107300]:VariableDeclarationStatement[107481-107528]"
    }, {
      "left" : "if (renderer1 != null)",
      "right" : "if (renderer1 != null)",
      "info" : "IfStatement[107326-107526]:IfStatement[107554-107754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107349-107526]:Block[107577-107754]"
    }, {
      "left" : "renderer1.drawRangeGridline(g2, this, \r\n                                    getRangeAxis(), dataArea, tick.getValue());",
      "right" : "renderer1.drawRangeGridline(g2, this, \r\n                                    getRangeAxis(), dataArea, tick.getValue());",
      "info" : "ExpressionStatement[107380-107499]:ExpressionStatement[107608-107727]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[107822-107831]:Modifier[108050-108059]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[107832-107836]:PrimitiveType[108060-108064]"
    }, {
      "left" : "drawAnnotations",
      "right" : "drawAnnotations",
      "info" : "SimpleName[107837-107852]:SimpleName[108065-108080]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[107853-107866]:SingleVariableDeclaration[108081-108094]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[107868-107888]:SingleVariableDeclaration[108096-108116]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[107903-107925]:SingleVariableDeclaration[108131-108153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107927-108265]:Block[108155-108493]"
    }, {
      "left" : "Iterator iterator = getAnnotations().iterator();",
      "right" : "Iterator iterator = getAnnotations().iterator();",
      "info" : "VariableDeclarationStatement[107940-107988]:VariableDeclarationStatement[108168-108216]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[107998-108256]:WhileStatement[108226-108484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108025-108256]:Block[108253-108484]"
    }, {
      "left" : "CategoryAnnotation annotation \r\n                    = (CategoryAnnotation) iterator.next();",
      "right" : "CategoryAnnotation annotation \r\n                    = (CategoryAnnotation) iterator.next();",
      "info" : "VariableDeclarationStatement[108040-108131]:VariableDeclarationStatement[108268-108359]"
    }, {
      "left" : "annotation.draw(g2, this, dataArea, getDomainAxis(), \r\n                    getRangeAxis(), 0, info);",
      "right" : "annotation.draw(g2, this, dataArea, getDomainAxis(), \r\n                    getRangeAxis(), 0, info);",
      "info" : "ExpressionStatement[108145-108245]:ExpressionStatement[108373-108473]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[108696-108705]:Modifier[108924-108933]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[108706-108710]:PrimitiveType[108934-108938]"
    }, {
      "left" : "drawDomainMarkers",
      "right" : "drawDomainMarkers",
      "info" : "SimpleName[108711-108728]:SimpleName[108939-108956]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[108729-108742]:SingleVariableDeclaration[108957-108970]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[108744-108764]:SingleVariableDeclaration[108972-108992]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[108805-108814]:SingleVariableDeclaration[109033-109042]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[108816-108827]:SingleVariableDeclaration[109044-109055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108829-109458]:Block[109057-109686]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(index);",
      "right" : "CategoryItemRenderer r = getRenderer(index);",
      "info" : "VariableDeclarationStatement[108891-108935]:VariableDeclarationStatement[109119-109163]"
    }, {
      "left" : "if (r == null)",
      "right" : "if (r == null)",
      "info" : "IfStatement[108945-108993]:IfStatement[109173-109221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108960-108993]:Block[109188-109221]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[108975-108982]:ReturnStatement[109203-109210]"
    }, {
      "left" : "Collection markers = getDomainMarkers(index, layer);",
      "right" : "Collection markers = getDomainMarkers(index, layer);",
      "info" : "VariableDeclarationStatement[109013-109065]:VariableDeclarationStatement[109241-109293]"
    }, {
      "left" : "CategoryAxis axis = getDomainAxisForDataset(index);",
      "right" : "CategoryAxis axis = getDomainAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[109075-109126]:VariableDeclarationStatement[109303-109354]"
    }, {
      "left" : "if (markers != null && axis != null)",
      "right" : "if (markers != null && axis != null)",
      "info" : "IfStatement[109136-109441]:IfStatement[109364-109669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109173-109441]:Block[109401-109669]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[109188-109227]:VariableDeclarationStatement[109416-109455]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[109241-109430]:WhileStatement[109469-109658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109268-109430]:Block[109496-109658]"
    }, {
      "left" : "CategoryMarker marker = (CategoryMarker) iterator.next();",
      "right" : "CategoryMarker marker = (CategoryMarker) iterator.next();",
      "info" : "VariableDeclarationStatement[109287-109344]:VariableDeclarationStatement[109515-109572]"
    }, {
      "left" : "r.drawDomainMarker(g2, this, axis, marker, dataArea);",
      "right" : "r.drawDomainMarker(g2, this, axis, marker, dataArea);",
      "info" : "ExpressionStatement[109362-109415]:ExpressionStatement[109590-109643]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[109889-109898]:Modifier[110117-110126]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[109899-109903]:PrimitiveType[110127-110131]"
    }, {
      "left" : "drawRangeMarkers",
      "right" : "drawRangeMarkers",
      "info" : "SimpleName[109904-109920]:SimpleName[110132-110148]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[109921-109934]:SingleVariableDeclaration[110149-110162]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[109936-109956]:SingleVariableDeclaration[110164-110184]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[109996-110005]:SingleVariableDeclaration[110224-110233]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[110007-110018]:SingleVariableDeclaration[110235-110246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110020-110627]:Block[110248-110855]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(index);",
      "right" : "CategoryItemRenderer r = getRenderer(index);",
      "info" : "VariableDeclarationStatement[110082-110126]:VariableDeclarationStatement[110310-110354]"
    }, {
      "left" : "if (r == null)",
      "right" : "if (r == null)",
      "info" : "IfStatement[110136-110184]:IfStatement[110364-110412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110151-110184]:Block[110379-110412]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[110166-110173]:ReturnStatement[110394-110401]"
    }, {
      "left" : "Collection markers = getRangeMarkers(index, layer);",
      "right" : "Collection markers = getRangeMarkers(index, layer);",
      "info" : "VariableDeclarationStatement[110204-110255]:VariableDeclarationStatement[110432-110483]"
    }, {
      "left" : "ValueAxis axis = getRangeAxisForDataset(index);",
      "right" : "ValueAxis axis = getRangeAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[110265-110312]:VariableDeclarationStatement[110493-110540]"
    }, {
      "left" : "if (markers != null && axis != null)",
      "right" : "if (markers != null && axis != null)",
      "info" : "IfStatement[110322-110610]:IfStatement[110550-110838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110359-110610]:Block[110587-110838]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[110374-110413]:VariableDeclarationStatement[110602-110641]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[110427-110599]:WhileStatement[110655-110827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110454-110599]:Block[110682-110827]"
    }, {
      "left" : "Marker marker = (Marker) iterator.next();",
      "right" : "Marker marker = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[110473-110514]:VariableDeclarationStatement[110701-110742]"
    }, {
      "left" : "r.drawRangeMarker(g2, this, axis, marker, dataArea);",
      "right" : "r.drawRangeMarker(g2, this, axis, marker, dataArea);",
      "info" : "ExpressionStatement[110532-110584]:ExpressionStatement[110760-110812]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[111045-111054]:Modifier[111273-111282]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[111055-111059]:PrimitiveType[111283-111287]"
    }, {
      "left" : "drawRangeLine",
      "right" : "drawRangeLine",
      "info" : "SimpleName[111060-111073]:SimpleName[111288-111301]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[111074-111087]:SingleVariableDeclaration[111302-111315]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[111089-111109]:SingleVariableDeclaration[111317-111337]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[111124-111136]:SingleVariableDeclaration[111352-111364]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[111138-111151]:SingleVariableDeclaration[111366-111379]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[111153-111164]:SingleVariableDeclaration[111381-111392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111166-111786]:Block[111394-112014]"
    }, {
      "left" : "double java2D = getRangeAxis().valueToJava2D(value, dataArea, \r\n                getRangeAxisEdge());",
      "right" : "double java2D = getRangeAxis().valueToJava2D(value, dataArea, \r\n                getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[111179-111279]:VariableDeclarationStatement[111407-111507]"
    }, {
      "left" : "Line2D line = null;",
      "right" : "Line2D line = null;",
      "info" : "VariableDeclarationStatement[111289-111308]:VariableDeclarationStatement[111517-111536]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[111318-111693]:IfStatement[111546-111921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111370-111499]:Block[111598-111727]"
    }, {
      "left" : "line = new Line2D.Double(java2D, dataArea.getMinY(), java2D, \r\n                    dataArea.getMaxY());",
      "right" : "line = new Line2D.Double(java2D, dataArea.getMinY(), java2D, \r\n                    dataArea.getMaxY());",
      "info" : "ExpressionStatement[111385-111488]:ExpressionStatement[111613-111716]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[111514-111693]:IfStatement[111742-111921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111564-111693]:Block[111792-111921]"
    }, {
      "left" : "line = new Line2D.Double(dataArea.getMinX(), java2D, \r\n                    dataArea.getMaxX(), java2D);",
      "right" : "line = new Line2D.Double(dataArea.getMinX(), java2D, \r\n                    dataArea.getMaxX(), java2D);",
      "info" : "ExpressionStatement[111579-111682]:ExpressionStatement[111807-111910]"
    }, {
      "left" : "g2.setStroke(stroke);",
      "right" : "g2.setStroke(stroke);",
      "info" : "ExpressionStatement[111703-111724]:ExpressionStatement[111931-111952]"
    }, {
      "left" : "g2.setPaint(paint);",
      "right" : "g2.setPaint(paint);",
      "info" : "ExpressionStatement[111734-111753]:ExpressionStatement[111962-111981]"
    }, {
      "left" : "g2.draw(line);",
      "right" : "g2.draw(line);",
      "info" : "ExpressionStatement[111763-111777]:ExpressionStatement[111991-112005]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[112256-112265]:Modifier[112484-112493]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[112266-112270]:PrimitiveType[112494-112498]"
    }, {
      "left" : "drawRangeCrosshair",
      "right" : "drawRangeCrosshair",
      "info" : "SimpleName[112271-112289]:SimpleName[112499-112517]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[112290-112303]:SingleVariableDeclaration[112518-112531]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[112305-112325]:SingleVariableDeclaration[112533-112553]"
    }, {
      "left" : "PlotOrientation orientation",
      "right" : "PlotOrientation orientation",
      "info" : "SingleVariableDeclaration[112341-112368]:SingleVariableDeclaration[112569-112596]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[112370-112382]:SingleVariableDeclaration[112598-112610]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[112384-112398]:SingleVariableDeclaration[112612-112626]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[112414-112427]:SingleVariableDeclaration[112642-112655]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[112429-112440]:SingleVariableDeclaration[112657-112668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112442-113187]:Block[112670-113415]"
    }, {
      "left" : "if (!axis.getRange().contains(value))",
      "right" : "if (!axis.getRange().contains(value))",
      "info" : "IfStatement[112463-112534]:IfStatement[112691-112762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112501-112534]:Block[112729-112762]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[112516-112523]:ReturnStatement[112744-112751]"
    }, {
      "left" : "Line2D line = null;",
      "right" : "Line2D line = null;",
      "info" : "VariableDeclarationStatement[112544-112563]:VariableDeclarationStatement[112772-112791]"
    }, {
      "left" : "if (orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[112573-113087]:IfStatement[112801-113315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112620-112847]:Block[112848-113075]"
    }, {
      "left" : "double xx = axis.valueToJava2D(value, dataArea, \r\n                    RectangleEdge.BOTTOM);",
      "right" : "double xx = axis.valueToJava2D(value, dataArea, \r\n                    RectangleEdge.BOTTOM);",
      "info" : "VariableDeclarationStatement[112635-112727]:VariableDeclarationStatement[112863-112955]"
    }, {
      "left" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx, \r\n                    dataArea.getMaxY());",
      "right" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx, \r\n                    dataArea.getMaxY());",
      "info" : "ExpressionStatement[112741-112836]:ExpressionStatement[112969-113064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112862-113087]:Block[113090-113315]"
    }, {
      "left" : "double yy = axis.valueToJava2D(value, dataArea, \r\n                    RectangleEdge.LEFT);",
      "right" : "double yy = axis.valueToJava2D(value, dataArea, \r\n                    RectangleEdge.LEFT);",
      "info" : "VariableDeclarationStatement[112877-112967]:VariableDeclarationStatement[113105-113195]"
    }, {
      "left" : "line = new Line2D.Double(dataArea.getMinX(), yy, \r\n                    dataArea.getMaxX(), yy);",
      "right" : "line = new Line2D.Double(dataArea.getMinX(), yy, \r\n                    dataArea.getMaxX(), yy);",
      "info" : "ExpressionStatement[112981-113076]:ExpressionStatement[113209-113304]"
    }, {
      "left" : "g2.setStroke(stroke);",
      "right" : "g2.setStroke(stroke);",
      "info" : "ExpressionStatement[113097-113118]:ExpressionStatement[113325-113346]"
    }, {
      "left" : "g2.setPaint(paint);",
      "right" : "g2.setPaint(paint);",
      "info" : "ExpressionStatement[113128-113147]:ExpressionStatement[113356-113375]"
    }, {
      "left" : "g2.draw(line);",
      "right" : "g2.draw(line);",
      "info" : "ExpressionStatement[113157-113171]:ExpressionStatement[113385-113399]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[113477-113483]:Modifier[113705-113711]"
    }, {
      "left" : "Range",
      "right" : "Range",
      "info" : "SimpleType[113484-113489]:SimpleType[113712-113717]"
    }, {
      "left" : "getDataRange",
      "right" : "getDataRange",
      "info" : "SimpleName[113490-113502]:SimpleName[113718-113730]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[113503-113517]:SingleVariableDeclaration[113731-113745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113519-114401]:Block[113747-114629]"
    }, {
      "left" : "Range result = null;",
      "right" : "Range result = null;",
      "info" : "VariableDeclarationStatement[113532-113552]:VariableDeclarationStatement[113760-113780]"
    }, {
      "left" : "List mappedDatasets = new ArrayList();",
      "right" : "List mappedDatasets = new ArrayList();",
      "info" : "VariableDeclarationStatement[113562-113600]:VariableDeclarationStatement[113790-113828]"
    }, {
      "left" : "int rangeIndex = this.rangeAxes.indexOf(axis);",
      "right" : "int rangeIndex = this.rangeAxes.indexOf(axis);",
      "info" : "VariableDeclarationStatement[113620-113666]:VariableDeclarationStatement[113848-113894]"
    }, {
      "left" : "if (rangeIndex >= 0)",
      "right" : "if (rangeIndex >= 0)",
      "info" : "IfStatement[113676-113905]:IfStatement[113904-114133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113697-113784]:Block[113925-114012]"
    }, {
      "left" : "mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));",
      "right" : "mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));",
      "info" : "ExpressionStatement[113712-113773]:ExpressionStatement[113940-114001]"
    }, {
      "left" : "if (axis == getRangeAxis())",
      "right" : "if (axis == getRangeAxis())",
      "info" : "IfStatement[113799-113905]:IfStatement[114027-114133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113827-113905]:Block[114055-114133]"
    }, {
      "left" : "mappedDatasets.addAll(datasetsMappedToRangeAxis(0));",
      "right" : "mappedDatasets.addAll(datasetsMappedToRangeAxis(0));",
      "info" : "ExpressionStatement[113842-113894]:ExpressionStatement[114070-114122]"
    }, {
      "left" : "Iterator iterator = mappedDatasets.iterator();",
      "right" : "Iterator iterator = mappedDatasets.iterator();",
      "info" : "VariableDeclarationStatement[114025-114071]:VariableDeclarationStatement[114253-114299]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[114081-114368]:WhileStatement[114309-114596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114108-114368]:Block[114336-114596]"
    }, {
      "left" : "CategoryDataset d = (CategoryDataset) iterator.next();",
      "right" : "CategoryDataset d = (CategoryDataset) iterator.next();",
      "info" : "VariableDeclarationStatement[114123-114177]:VariableDeclarationStatement[114351-114405]"
    }, {
      "left" : "CategoryItemRenderer r = getRendererForDataset(d);",
      "right" : "CategoryItemRenderer r = getRendererForDataset(d);",
      "info" : "VariableDeclarationStatement[114191-114241]:VariableDeclarationStatement[114419-114469]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[114255-114357]:IfStatement[114483-114585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114270-114357]:Block[114498-114585]"
    }, {
      "left" : "result = Range.combine(result, r.findRangeBounds(d));",
      "right" : "result = Range.combine(result, r.findRangeBounds(d));",
      "info" : "ExpressionStatement[114289-114342]:ExpressionStatement[114517-114570]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[114378-114392]:ReturnStatement[114606-114620]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[114690-114697]:Modifier[114918-114925]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[114698-114702]:SimpleType[114926-114930]"
    }, {
      "left" : "datasetsMappedToDomainAxis",
      "right" : "datasetsMappedToDomainAxis",
      "info" : "SimpleName[114703-114729]:SimpleName[114931-114957]"
    }, {
      "left" : "int axisIndex",
      "right" : "int axisIndex",
      "info" : "SingleVariableDeclaration[114730-114743]:SingleVariableDeclaration[114958-114971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114745-115585]:Block[114973-115813]"
    }, {
      "left" : "List result = new ArrayList();",
      "right" : "List result = new ArrayList();",
      "info" : "VariableDeclarationStatement[114756-114786]:VariableDeclarationStatement[114984-115014]"
    }, {
      "left" : "for (int datasetIndex = 0; datasetIndex < this.datasets.size(); \r\n                datasetIndex++)",
      "right" : "for (int datasetIndex = 0; datasetIndex < this.datasets.size(); \r\n                datasetIndex++)",
      "info" : "ForStatement[114796-115554]:ForStatement[115024-115782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114894-115554]:Block[115122-115782]"
    }, {
      "left" : "Object dataset = this.datasets.get(datasetIndex);",
      "right" : "Object dataset = this.datasets.get(datasetIndex);",
      "info" : "VariableDeclarationStatement[114909-114958]:VariableDeclarationStatement[115137-115186]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[114972-115543]:IfStatement[115200-115771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114993-115543]:Block[115221-115771]"
    }, {
      "left" : "Integer m = (Integer) this.datasetToDomainAxisMap.get(\r\n                        datasetIndex);",
      "right" : "Integer m = (Integer) this.datasetToDomainAxisMap.get(\r\n                        datasetIndex);",
      "info" : "VariableDeclarationStatement[115012-115106]:VariableDeclarationStatement[115240-115334]"
    }, {
      "left" : "if (m == null)",
      "right" : "if (m == null)",
      "info" : "IfStatement[115124-115528]:IfStatement[115352-115756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115139-115362]:Block[115367-115590]"
    }, {
      "left" : "if (axisIndex == 0)",
      "right" : "if (axisIndex == 0)",
      "info" : "IfStatement[115253-115343]:IfStatement[115481-115571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115273-115343]:Block[115501-115571]"
    }, {
      "left" : "result.add(dataset);",
      "right" : "result.add(dataset);",
      "info" : "ExpressionStatement[115300-115320]:ExpressionStatement[115528-115548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115385-115528]:Block[115613-115756]"
    }, {
      "left" : "if (m.intValue() == axisIndex)",
      "right" : "if (m.intValue() == axisIndex)",
      "info" : "IfStatement[115408-115509]:IfStatement[115636-115737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115439-115509]:Block[115667-115737]"
    }, {
      "left" : "result.add(dataset);",
      "right" : "result.add(dataset);",
      "info" : "ExpressionStatement[115466-115486]:ExpressionStatement[115694-115714]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[115564-115578]:ReturnStatement[115792-115806]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[115812-115819]:Modifier[116040-116047]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[115820-115824]:SimpleType[116048-116052]"
    }, {
      "left" : "datasetsMappedToRangeAxis",
      "right" : "datasetsMappedToRangeAxis",
      "info" : "SimpleName[115825-115850]:SimpleName[116053-116078]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[115851-115860]:SingleVariableDeclaration[116079-116088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115862-116599]:Block[116090-116827]"
    }, {
      "left" : "List result = new ArrayList();",
      "right" : "List result = new ArrayList();",
      "info" : "VariableDeclarationStatement[115873-115903]:VariableDeclarationStatement[116101-116131]"
    }, {
      "left" : "for (int i = 0; i < this.datasets.size(); i++)",
      "right" : "for (int i = 0; i < this.datasets.size(); i++)",
      "info" : "ForStatement[115913-116564]:ForStatement[116141-116792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115960-116564]:Block[116188-116792]"
    }, {
      "left" : "Object dataset = this.datasets.get(i);",
      "right" : "Object dataset = this.datasets.get(i);",
      "info" : "VariableDeclarationStatement[115975-116013]:VariableDeclarationStatement[116203-116241]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[116027-116553]:IfStatement[116255-116781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116048-116553]:Block[116276-116781]"
    }, {
      "left" : "Integer m = (Integer) this.datasetToRangeAxisMap.get(i);",
      "right" : "Integer m = (Integer) this.datasetToRangeAxisMap.get(i);",
      "info" : "VariableDeclarationStatement[116067-116123]:VariableDeclarationStatement[116295-116351]"
    }, {
      "left" : "if (m == null)",
      "right" : "if (m == null)",
      "info" : "IfStatement[116141-116538]:IfStatement[116369-116766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116156-116376]:Block[116384-116604]"
    }, {
      "left" : "if (index == 0)",
      "right" : "if (index == 0)",
      "info" : "IfStatement[116270-116357]:IfStatement[116498-116585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116286-116357]:Block[116514-116585]"
    }, {
      "left" : "result.add(dataset);",
      "right" : "result.add(dataset);",
      "info" : "ExpressionStatement[116314-116334]:ExpressionStatement[116542-116562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116399-116538]:Block[116627-116766]"
    }, {
      "left" : "if (m.intValue() == index)",
      "right" : "if (m.intValue() == index)",
      "info" : "IfStatement[116422-116519]:IfStatement[116650-116747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116449-116519]:Block[116677-116747]"
    }, {
      "left" : "result.add(dataset);",
      "right" : "result.add(dataset);",
      "info" : "ExpressionStatement[116476-116496]:ExpressionStatement[116704-116724]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[116574-116588]:ReturnStatement[116802-116816]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[116802-116808]:Modifier[117030-117036]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[116809-116812]:PrimitiveType[117037-117040]"
    }, {
      "left" : "getWeight",
      "right" : "getWeight",
      "info" : "SimpleName[116813-116822]:SimpleName[117041-117050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116825-116862]:Block[117053-117090]"
    }, {
      "left" : "return this.weight;",
      "right" : "return this.weight;",
      "info" : "ReturnStatement[116836-116855]:ReturnStatement[117064-117083]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[117004-117010]:Modifier[117232-117238]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[117011-117015]:PrimitiveType[117239-117243]"
    }, {
      "left" : "setWeight",
      "right" : "setWeight",
      "info" : "SimpleName[117016-117025]:SimpleName[117244-117253]"
    }, {
      "left" : "int weight",
      "right" : "int weight",
      "info" : "SingleVariableDeclaration[117026-117036]:SingleVariableDeclaration[117254-117264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117038-117103]:Block[117266-117331]"
    }, {
      "left" : "this.weight = weight;",
      "right" : "this.weight = weight;",
      "info" : "ExpressionStatement[117049-117070]:ExpressionStatement[117277-117298]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[117318-117324]:Modifier[117546-117552]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[117325-117334]:SimpleType[117553-117562]"
    }, {
      "left" : "getFixedDomainAxisSpace",
      "right" : "getFixedDomainAxisSpace",
      "info" : "SimpleName[117335-117358]:SimpleName[117563-117586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117361-117412]:Block[117589-117640]"
    }, {
      "left" : "return this.fixedDomainAxisSpace;",
      "right" : "return this.fixedDomainAxisSpace;",
      "info" : "ReturnStatement[117372-117405]:ReturnStatement[117600-117633]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[117600-117606]:Modifier[117828-117834]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[117607-117611]:PrimitiveType[117835-117839]"
    }, {
      "left" : "setFixedDomainAxisSpace",
      "right" : "setFixedDomainAxisSpace",
      "info" : "SimpleName[117612-117635]:SimpleName[117840-117863]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[117636-117651]:SingleVariableDeclaration[117864-117879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117653-117731]:Block[117881-117959]"
    }, {
      "left" : "this.fixedDomainAxisSpace = space;",
      "right" : "this.fixedDomainAxisSpace = space;",
      "info" : "ExpressionStatement[117664-117698]:ExpressionStatement[117892-117926]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[117939-117945]:Modifier[118167-118173]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[117946-117955]:SimpleType[118174-118183]"
    }, {
      "left" : "getFixedRangeAxisSpace",
      "right" : "getFixedRangeAxisSpace",
      "info" : "SimpleName[117956-117978]:SimpleName[118184-118206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117981-118031]:Block[118209-118259]"
    }, {
      "left" : "return this.fixedRangeAxisSpace;",
      "right" : "return this.fixedRangeAxisSpace;",
      "info" : "ReturnStatement[117992-118024]:ReturnStatement[118220-118252]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[118217-118223]:Modifier[118445-118451]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[118224-118228]:PrimitiveType[118452-118456]"
    }, {
      "left" : "setFixedRangeAxisSpace",
      "right" : "setFixedRangeAxisSpace",
      "info" : "SimpleName[118229-118251]:SimpleName[118457-118479]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[118252-118267]:SingleVariableDeclaration[118480-118495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118269-118350]:Block[118497-118578]"
    }, {
      "left" : "this.fixedRangeAxisSpace = space;",
      "right" : "this.fixedRangeAxisSpace = space;",
      "info" : "ExpressionStatement[118280-118313]:ExpressionStatement[118508-118541]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[118587-118593]:Modifier[118815-118821]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[118594-118598]:SimpleType[118822-118826]"
    }, {
      "left" : "getCategories",
      "right" : "getCategories",
      "info" : "SimpleName[118599-118612]:SimpleName[118827-118840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118615-118806]:Block[118843-119034]"
    }, {
      "left" : "List result = null;",
      "right" : "List result = null;",
      "info" : "VariableDeclarationStatement[118626-118645]:VariableDeclarationStatement[118854-118873]"
    }, {
      "left" : "if (getDataset() != null)",
      "right" : "if (getDataset() != null)",
      "info" : "IfStatement[118655-118775]:IfStatement[118883-119003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118681-118775]:Block[118909-119003]"
    }, {
      "left" : "result = Collections.unmodifiableList(getDataset().getColumnKeys());",
      "right" : "result = Collections.unmodifiableList(getDataset().getColumnKeys());",
      "info" : "ExpressionStatement[118696-118764]:ExpressionStatement[118924-118992]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[118785-118799]:ReturnStatement[119013-119027]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[119078-119084]:Modifier[119306-119312]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[119085-119089]:SimpleType[119313-119317]"
    }, {
      "left" : "getCategoriesForAxis",
      "right" : "getCategoriesForAxis",
      "info" : "SimpleName[119090-119110]:SimpleName[119318-119338]"
    }, {
      "left" : "CategoryAxis axis",
      "right" : "CategoryAxis axis",
      "info" : "SingleVariableDeclaration[119111-119128]:SingleVariableDeclaration[119339-119356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119130-119813]:Block[119358-120041]"
    }, {
      "left" : "List result = new ArrayList();",
      "right" : "List result = new ArrayList();",
      "info" : "VariableDeclarationStatement[119141-119171]:VariableDeclarationStatement[119369-119399]"
    }, {
      "left" : "int axisIndex = this.domainAxes.indexOf(axis);",
      "right" : "int axisIndex = this.domainAxes.indexOf(axis);",
      "info" : "VariableDeclarationStatement[119181-119227]:VariableDeclarationStatement[119409-119455]"
    }, {
      "left" : "List datasets = datasetsMappedToDomainAxis(axisIndex);",
      "right" : "List datasets = datasetsMappedToDomainAxis(axisIndex);",
      "info" : "VariableDeclarationStatement[119237-119291]:VariableDeclarationStatement[119465-119519]"
    }, {
      "left" : "Iterator iterator = datasets.iterator();",
      "right" : "Iterator iterator = datasets.iterator();",
      "info" : "VariableDeclarationStatement[119301-119341]:VariableDeclarationStatement[119529-119569]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[119351-119782]:WhileStatement[119579-120010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119378-119782]:Block[119606-120010]"
    }, {
      "left" : "CategoryDataset dataset = (CategoryDataset) iterator.next();",
      "right" : "CategoryDataset dataset = (CategoryDataset) iterator.next();",
      "info" : "VariableDeclarationStatement[119393-119453]:VariableDeclarationStatement[119621-119681]"
    }, {
      "left" : "for (int i = 0; i < dataset.getColumnCount(); i++)",
      "right" : "for (int i = 0; i < dataset.getColumnCount(); i++)",
      "info" : "ForStatement[119527-119771]:ForStatement[119755-119999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119578-119771]:Block[119806-119999]"
    }, {
      "left" : "Comparable category = dataset.getColumnKey(i);",
      "right" : "Comparable category = dataset.getColumnKey(i);",
      "info" : "VariableDeclarationStatement[119597-119643]:VariableDeclarationStatement[119825-119871]"
    }, {
      "left" : "if (!result.contains(category))",
      "right" : "if (!result.contains(category))",
      "info" : "IfStatement[119661-119756]:IfStatement[119889-119984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119693-119756]:Block[119921-119984]"
    }, {
      "left" : "result.add(category);",
      "right" : "result.add(category);",
      "info" : "ExpressionStatement[119716-119737]:ExpressionStatement[119944-119965]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[119792-119806]:ReturnStatement[120020-120034]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[120044-120050]:Modifier[120272-120278]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[120051-120058]:PrimitiveType[120279-120286]"
    }, {
      "left" : "getDrawSharedDomainAxis",
      "right" : "getDrawSharedDomainAxis",
      "info" : "SimpleName[120059-120082]:SimpleName[120287-120310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120085-120136]:Block[120313-120364]"
    }, {
      "left" : "return this.drawSharedDomainAxis;",
      "right" : "return this.drawSharedDomainAxis;",
      "info" : "ReturnStatement[120096-120129]:ReturnStatement[120324-120357]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[120383-120389]:Modifier[120611-120617]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[120390-120394]:PrimitiveType[120618-120622]"
    }, {
      "left" : "setDrawSharedDomainAxis",
      "right" : "setDrawSharedDomainAxis",
      "info" : "SimpleName[120395-120418]:SimpleName[120623-120646]"
    }, {
      "left" : "boolean draw",
      "right" : "boolean draw",
      "info" : "SingleVariableDeclaration[120419-120431]:SingleVariableDeclaration[120647-120659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120433-120537]:Block[120661-120765]"
    }, {
      "left" : "this.drawSharedDomainAxis = draw;",
      "right" : "this.drawSharedDomainAxis = draw;",
      "info" : "ExpressionStatement[120444-120477]:ExpressionStatement[120672-120705]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[120487-120530]:ExpressionStatement[120715-120758]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[120734-120740]:Modifier[120962-120968]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[120741-120748]:PrimitiveType[120969-120976]"
    }, {
      "left" : "isDomainZoomable",
      "right" : "isDomainZoomable",
      "info" : "SimpleName[120749-120765]:SimpleName[120977-120993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120768-120799]:Block[120996-121027]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[120779-120792]:ReturnStatement[121007-121020]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[120987-120993]:Modifier[121215-121221]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[120994-121001]:PrimitiveType[121222-121229]"
    }, {
      "left" : "isRangeZoomable",
      "right" : "isRangeZoomable",
      "info" : "SimpleName[121002-121017]:SimpleName[121230-121245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121020-121050]:Block[121248-121278]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[121031-121043]:ReturnStatement[121259-121271]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[121350-121356]:Modifier[121578-121584]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[121357-121361]:PrimitiveType[121585-121589]"
    }, {
      "left" : "zoomDomainAxes",
      "right" : "zoomDomainAxes",
      "info" : "SimpleName[121362-121376]:SimpleName[121590-121604]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[121377-121390]:SingleVariableDeclaration[121605-121618]"
    }, {
      "left" : "PlotRenderingInfo state",
      "right" : "PlotRenderingInfo state",
      "info" : "SingleVariableDeclaration[121392-121415]:SingleVariableDeclaration[121620-121643]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[121450-121464]:SingleVariableDeclaration[121678-121692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121466-121509]:Block[121694-121737]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[121862-121868]:Modifier[122090-122096]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[121869-121873]:PrimitiveType[122097-122101]"
    }, {
      "left" : "zoomDomainAxes",
      "right" : "zoomDomainAxes",
      "info" : "SimpleName[121874-121888]:SimpleName[122102-122116]"
    }, {
      "left" : "double lowerPercent",
      "right" : "double lowerPercent",
      "info" : "SingleVariableDeclaration[121889-121908]:SingleVariableDeclaration[122117-122136]"
    }, {
      "left" : "double upperPercent",
      "right" : "double upperPercent",
      "info" : "SingleVariableDeclaration[121910-121929]:SingleVariableDeclaration[122138-122157]"
    }, {
      "left" : "PlotRenderingInfo state",
      "right" : "PlotRenderingInfo state",
      "info" : "SingleVariableDeclaration[121964-121987]:SingleVariableDeclaration[122192-122215]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[121989-122003]:SingleVariableDeclaration[122217-122231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122005-122048]:Block[122233-122276]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[122518-122524]:Modifier[122746-122752]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[122525-122529]:PrimitiveType[122753-122757]"
    }, {
      "left" : "zoomDomainAxes",
      "right" : "zoomDomainAxes",
      "info" : "SimpleName[122530-122544]:SimpleName[122758-122772]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[122545-122558]:SingleVariableDeclaration[122773-122786]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[122560-122582]:SingleVariableDeclaration[122788-122810]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[122616-122630]:SingleVariableDeclaration[122844-122858]"
    }, {
      "left" : "boolean useAnchor",
      "right" : "boolean useAnchor",
      "info" : "SingleVariableDeclaration[122632-122649]:SingleVariableDeclaration[122860-122877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122651-122694]:Block[122879-122922]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[122955-122961]:Modifier[123183-123189]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[122962-122966]:PrimitiveType[123190-123194]"
    }, {
      "left" : "zoomRangeAxes",
      "right" : "zoomRangeAxes",
      "info" : "SimpleName[122967-122980]:SimpleName[123195-123208]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[122981-122994]:SingleVariableDeclaration[123209-123222]"
    }, {
      "left" : "PlotRenderingInfo state",
      "right" : "PlotRenderingInfo state",
      "info" : "SingleVariableDeclaration[122996-123019]:SingleVariableDeclaration[123224-123247]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[123053-123067]:SingleVariableDeclaration[123281-123295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123069-123172]:Block[123297-123400]"
    }, {
      "left" : "zoomRangeAxes(factor, state, source, false);",
      "right" : "zoomRangeAxes(factor, state, source, false);",
      "info" : "ExpressionStatement[123117-123161]:ExpressionStatement[123345-123389]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[123647-123653]:Modifier[123875-123881]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[123654-123658]:PrimitiveType[123882-123886]"
    }, {
      "left" : "zoomRangeAxes",
      "right" : "zoomRangeAxes",
      "info" : "SimpleName[123659-123672]:SimpleName[123887-123900]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[123673-123686]:SingleVariableDeclaration[123901-123914]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[123688-123710]:SingleVariableDeclaration[123916-123938]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[123743-123757]:SingleVariableDeclaration[123971-123985]"
    }, {
      "left" : "boolean useAnchor",
      "right" : "boolean useAnchor",
      "info" : "SingleVariableDeclaration[123759-123776]:SingleVariableDeclaration[123987-124004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123778-124708]:Block[124006-124936]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[123855-124701]:ForStatement[124083-124929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123903-124701]:Block[124131-124929]"
    }, {
      "left" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[123918-123974]:VariableDeclarationStatement[124146-124202]"
    }, {
      "left" : "if (rangeAxis != null)",
      "right" : "if (rangeAxis != null)",
      "info" : "IfStatement[123988-124690]:IfStatement[124216-124918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124011-124690]:Block[124239-124918]"
    }, {
      "left" : "if (useAnchor)",
      "right" : "if (useAnchor)",
      "info" : "IfStatement[124030-124675]:IfStatement[124258-124903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124045-124580]:Block[124273-124808]"
    }, {
      "left" : "double sourceY = source.getY();",
      "right" : "double sourceY = source.getY();",
      "info" : "VariableDeclarationStatement[124179-124210]:VariableDeclarationStatement[124407-124438]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[124232-124358]:IfStatement[124460-124586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124284-124358]:Block[124512-124586]"
    }, {
      "left" : "sourceY = source.getX();",
      "right" : "sourceY = source.getX();",
      "info" : "ExpressionStatement[124311-124335]:ExpressionStatement[124539-124563]"
    }, {
      "left" : "double anchorY = rangeAxis.java2DToValue(sourceY, \r\n                            info.getDataArea(), getRangeAxisEdge());",
      "right" : "double anchorY = rangeAxis.java2DToValue(sourceY, \r\n                            info.getDataArea(), getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[124380-124500]:VariableDeclarationStatement[124608-124728]"
    }, {
      "left" : "rangeAxis.resizeRange(factor, anchorY);",
      "right" : "rangeAxis.resizeRange(factor, anchorY);",
      "info" : "ExpressionStatement[124522-124561]:ExpressionStatement[124750-124789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124603-124675]:Block[124831-124903]"
    }, {
      "left" : "rangeAxis.resizeRange(factor);",
      "right" : "rangeAxis.resizeRange(factor);",
      "info" : "ExpressionStatement[124626-124656]:ExpressionStatement[124854-124884]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[124981-124987]:Modifier[125209-125215]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[124988-124992]:PrimitiveType[125216-125220]"
    }, {
      "left" : "zoomRangeAxes",
      "right" : "zoomRangeAxes",
      "info" : "SimpleName[124993-125006]:SimpleName[125221-125234]"
    }, {
      "left" : "double lowerPercent",
      "right" : "double lowerPercent",
      "info" : "SingleVariableDeclaration[125007-125026]:SingleVariableDeclaration[125235-125254]"
    }, {
      "left" : "double upperPercent",
      "right" : "double upperPercent",
      "info" : "SingleVariableDeclaration[125028-125047]:SingleVariableDeclaration[125256-125275]"
    }, {
      "left" : "PlotRenderingInfo state",
      "right" : "PlotRenderingInfo state",
      "info" : "SingleVariableDeclaration[125081-125104]:SingleVariableDeclaration[125309-125332]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[125106-125120]:SingleVariableDeclaration[125334-125348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125122-125389]:Block[125350-125617]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[125133-125382]:ForStatement[125361-125610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125181-125382]:Block[125409-125610]"
    }, {
      "left" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[125196-125252]:VariableDeclarationStatement[125424-125480]"
    }, {
      "left" : "if (rangeAxis != null)",
      "right" : "if (rangeAxis != null)",
      "info" : "IfStatement[125266-125371]:IfStatement[125494-125599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125289-125371]:Block[125517-125599]"
    }, {
      "left" : "rangeAxis.zoomRange(lowerPercent, upperPercent);",
      "right" : "rangeAxis.zoomRange(lowerPercent, upperPercent);",
      "info" : "ExpressionStatement[125308-125356]:ExpressionStatement[125536-125584]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[125542-125548]:Modifier[125770-125776]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[125549-125555]:PrimitiveType[125777-125783]"
    }, {
      "left" : "getAnchorValue",
      "right" : "getAnchorValue",
      "info" : "SimpleName[125556-125570]:SimpleName[125784-125798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125573-125615]:Block[125801-125843]"
    }, {
      "left" : "return this.anchorValue;",
      "right" : "return this.anchorValue;",
      "info" : "ReturnStatement[125584-125608]:ReturnStatement[125812-125836]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[125834-125840]:Modifier[126062-126068]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[125841-125845]:PrimitiveType[126069-126073]"
    }, {
      "left" : "setAnchorValue",
      "right" : "setAnchorValue",
      "info" : "SimpleName[125846-125860]:SimpleName[126074-126088]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[125861-125873]:SingleVariableDeclaration[126089-126101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125875-125921]:Block[126103-126149]"
    }, {
      "left" : "setAnchorValue(value, true);",
      "right" : "setAnchorValue(value, true);",
      "info" : "ExpressionStatement[125886-125914]:ExpressionStatement[126114-126142]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[126188-126194]:Modifier[126416-126422]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[126195-126199]:PrimitiveType[126423-126427]"
    }, {
      "left" : "setAnchorValue",
      "right" : "setAnchorValue",
      "info" : "SimpleName[126200-126214]:SimpleName[126428-126442]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[126215-126227]:SingleVariableDeclaration[126443-126455]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[126229-126243]:SingleVariableDeclaration[126457-126471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126245-126379]:Block[126473-126607]"
    }, {
      "left" : "this.anchorValue = value;",
      "right" : "this.anchorValue = value;",
      "info" : "ExpressionStatement[126256-126281]:ExpressionStatement[126484-126509]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[126291-126372]:IfStatement[126519-126600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126303-126372]:Block[126531-126600]"
    }, {
      "left" : "notifyListeners(new PlotChangeEvent(this));",
      "right" : "notifyListeners(new PlotChangeEvent(this));",
      "info" : "ExpressionStatement[126318-126361]:ExpressionStatement[126546-126589]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[126595-126601]:Modifier[126823-126829]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[126602-126609]:PrimitiveType[126830-126837]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[126610-126616]:SimpleName[126838-126844]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[126617-126627]:SingleVariableDeclaration[126845-126855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126629-130894]:Block[126857-131122]"
    }, {
      "left" : "if (obj == this)",
      "right" : "if (obj == this)",
      "info" : "IfStatement[126646-126701]:IfStatement[126874-126929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126663-126701]:Block[126891-126929]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[126678-126690]:ReturnStatement[126906-126918]"
    }, {
      "left" : "if (!(obj instanceof CategoryPlot))",
      "right" : "if (!(obj instanceof CategoryPlot))",
      "info" : "IfStatement[126711-126786]:IfStatement[126939-127014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126747-126786]:Block[126975-127014]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[126762-126775]:ReturnStatement[126990-127003]"
    }, {
      "left" : "if (!super.equals(obj))",
      "right" : "if (!super.equals(obj))",
      "info" : "IfStatement[126796-126859]:IfStatement[127024-127087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126820-126859]:Block[127048-127087]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[126835-126848]:ReturnStatement[127063-127076]"
    }, {
      "left" : "CategoryPlot that = (CategoryPlot) obj;",
      "right" : "CategoryPlot that = (CategoryPlot) obj;",
      "info" : "VariableDeclarationStatement[126871-126910]:VariableDeclarationStatement[127099-127138]"
    }, {
      "left" : "if (this.orientation != that.orientation)",
      "right" : "if (this.orientation != that.orientation)",
      "info" : "IfStatement[126934-127015]:IfStatement[127162-127243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126976-127015]:Block[127204-127243]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[126991-127004]:ReturnStatement[127219-127232]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset))",
      "right" : "if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset))",
      "info" : "IfStatement[127025-127126]:IfStatement[127253-127354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127087-127126]:Block[127315-127354]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[127102-127115]:ReturnStatement[127330-127343]"
    }, {
      "left" : "if (!this.domainAxes.equals(that.domainAxes))",
      "right" : "if (!this.domainAxes.equals(that.domainAxes))",
      "info" : "IfStatement[127136-127221]:IfStatement[127364-127449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127182-127221]:Block[127410-127449]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[127197-127210]:ReturnStatement[127425-127438]"
    }, {
      "left" : "if (!this.domainAxisLocations.equals(that.domainAxisLocations))",
      "right" : "if (!this.domainAxisLocations.equals(that.domainAxisLocations))",
      "info" : "IfStatement[127231-127334]:IfStatement[127459-127562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127295-127334]:Block[127523-127562]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[127310-127323]:ReturnStatement[127538-127551]"
    }, {
      "left" : "if (this.drawSharedDomainAxis != that.drawSharedDomainAxis)",
      "right" : "if (this.drawSharedDomainAxis != that.drawSharedDomainAxis)",
      "info" : "IfStatement[127344-127443]:IfStatement[127572-127671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127404-127443]:Block[127632-127671]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[127419-127432]:ReturnStatement[127647-127660]"
    }, {
      "left" : "if (!this.rangeAxes.equals(that.rangeAxes))",
      "right" : "if (!this.rangeAxes.equals(that.rangeAxes))",
      "info" : "IfStatement[127453-127536]:IfStatement[127681-127764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127497-127536]:Block[127725-127764]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[127512-127525]:ReturnStatement[127740-127753]"
    }, {
      "left" : "if (!this.rangeAxisLocations.equals(that.rangeAxisLocations))",
      "right" : "if (!this.rangeAxisLocations.equals(that.rangeAxisLocations))",
      "info" : "IfStatement[127546-127647]:IfStatement[127774-127875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127608-127647]:Block[127836-127875]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[127623-127636]:ReturnStatement[127851-127864]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.datasetToDomainAxisMap, \r\n                that.datasetToDomainAxisMap))",
      "right" : "if (!ObjectUtilities.equal(this.datasetToDomainAxisMap, \r\n                that.datasetToDomainAxisMap))",
      "info" : "IfStatement[127657-127800]:IfStatement[127885-128028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127761-127800]:Block[127989-128028]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[127776-127789]:ReturnStatement[128004-128017]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.datasetToRangeAxisMap, \r\n                that.datasetToRangeAxisMap))",
      "right" : "if (!ObjectUtilities.equal(this.datasetToRangeAxisMap, \r\n                that.datasetToRangeAxisMap))",
      "info" : "IfStatement[127810-127951]:IfStatement[128038-128179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127912-127951]:Block[128140-128179]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[127927-127940]:ReturnStatement[128155-128168]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.renderers, that.renderers))",
      "right" : "if (!ObjectUtilities.equal(this.renderers, that.renderers))",
      "info" : "IfStatement[127961-128060]:IfStatement[128189-128288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128021-128060]:Block[128249-128288]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[128036-128049]:ReturnStatement[128264-128277]"
    }, {
      "left" : "if (this.renderingOrder != that.renderingOrder)",
      "right" : "if (this.renderingOrder != that.renderingOrder)",
      "info" : "IfStatement[128070-128157]:IfStatement[128298-128385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128118-128157]:Block[128346-128385]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[128133-128146]:ReturnStatement[128361-128374]"
    }, {
      "left" : "if (this.columnRenderingOrder != that.columnRenderingOrder)",
      "right" : "if (this.columnRenderingOrder != that.columnRenderingOrder)",
      "info" : "IfStatement[128167-128266]:IfStatement[128395-128494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128227-128266]:Block[128455-128494]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[128242-128255]:ReturnStatement[128470-128483]"
    }, {
      "left" : "if (this.rowRenderingOrder != that.rowRenderingOrder)",
      "right" : "if (this.rowRenderingOrder != that.rowRenderingOrder)",
      "info" : "IfStatement[128276-128369]:IfStatement[128504-128597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128330-128369]:Block[128558-128597]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[128345-128358]:ReturnStatement[128573-128586]"
    }, {
      "left" : "if (this.domainGridlinesVisible != that.domainGridlinesVisible)",
      "right" : "if (this.domainGridlinesVisible != that.domainGridlinesVisible)",
      "info" : "IfStatement[128379-128482]:IfStatement[128607-128710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128443-128482]:Block[128671-128710]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[128458-128471]:ReturnStatement[128686-128699]"
    }, {
      "left" : "if (this.domainGridlinePosition != that.domainGridlinePosition)",
      "right" : "if (this.domainGridlinePosition != that.domainGridlinePosition)",
      "info" : "IfStatement[128492-128595]:IfStatement[128720-128823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128556-128595]:Block[128784-128823]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[128571-128584]:ReturnStatement[128799-128812]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.domainGridlineStroke, \r\n                that.domainGridlineStroke))",
      "right" : "if (!ObjectUtilities.equal(this.domainGridlineStroke, \r\n                that.domainGridlineStroke))",
      "info" : "IfStatement[128605-128744]:IfStatement[128833-128972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128705-128744]:Block[128933-128972]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[128720-128733]:ReturnStatement[128948-128961]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.domainGridlinePaint, \r\n                that.domainGridlinePaint))",
      "right" : "if (!PaintUtilities.equal(this.domainGridlinePaint, \r\n                that.domainGridlinePaint))",
      "info" : "IfStatement[128754-128890]:IfStatement[128982-129118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128851-128890]:Block[129079-129118]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[128866-128879]:ReturnStatement[129094-129107]"
    }, {
      "left" : "if (this.rangeGridlinesVisible != that.rangeGridlinesVisible)",
      "right" : "if (this.rangeGridlinesVisible != that.rangeGridlinesVisible)",
      "info" : "IfStatement[128900-129001]:IfStatement[129128-129229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128962-129001]:Block[129190-129229]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[128977-128990]:ReturnStatement[129205-129218]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.rangeGridlineStroke, \r\n                that.rangeGridlineStroke))",
      "right" : "if (!ObjectUtilities.equal(this.rangeGridlineStroke, \r\n                that.rangeGridlineStroke))",
      "info" : "IfStatement[129011-129148]:IfStatement[129239-129376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129109-129148]:Block[129337-129376]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[129124-129137]:ReturnStatement[129352-129365]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.rangeGridlinePaint, \r\n                that.rangeGridlinePaint))",
      "right" : "if (!PaintUtilities.equal(this.rangeGridlinePaint, \r\n                that.rangeGridlinePaint))",
      "info" : "IfStatement[129158-129292]:IfStatement[129386-129520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129253-129292]:Block[129481-129520]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[129268-129281]:ReturnStatement[129496-129509]"
    }, {
      "left" : "if (this.anchorValue != that.anchorValue)",
      "right" : "if (this.anchorValue != that.anchorValue)",
      "info" : "IfStatement[129302-129383]:IfStatement[129530-129611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129344-129383]:Block[129572-129611]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[129359-129372]:ReturnStatement[129587-129600]"
    }, {
      "left" : "if (this.rangeCrosshairVisible != that.rangeCrosshairVisible)",
      "right" : "if (this.rangeCrosshairVisible != that.rangeCrosshairVisible)",
      "info" : "IfStatement[129393-129494]:IfStatement[129621-129722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129455-129494]:Block[129683-129722]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[129470-129483]:ReturnStatement[129698-129711]"
    }, {
      "left" : "if (this.rangeCrosshairValue != that.rangeCrosshairValue)",
      "right" : "if (this.rangeCrosshairValue != that.rangeCrosshairValue)",
      "info" : "IfStatement[129504-129601]:IfStatement[129732-129829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129562-129601]:Block[129790-129829]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[129577-129590]:ReturnStatement[129805-129818]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.rangeCrosshairStroke, \r\n                that.rangeCrosshairStroke))",
      "right" : "if (!ObjectUtilities.equal(this.rangeCrosshairStroke, \r\n                that.rangeCrosshairStroke))",
      "info" : "IfStatement[129611-129750]:IfStatement[129839-129978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129711-129750]:Block[129939-129978]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[129726-129739]:ReturnStatement[129954-129967]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.rangeCrosshairPaint, \r\n                that.rangeCrosshairPaint))",
      "right" : "if (!PaintUtilities.equal(this.rangeCrosshairPaint, \r\n                that.rangeCrosshairPaint))",
      "info" : "IfStatement[129760-129896]:IfStatement[129988-130124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129857-129896]:Block[130085-130124]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[129872-129885]:ReturnStatement[130100-130113]"
    }, {
      "left" : "if (this.rangeCrosshairLockedOnData \r\n                != that.rangeCrosshairLockedOnData)",
      "right" : "if (this.rangeCrosshairLockedOnData \r\n                != that.rangeCrosshairLockedOnData)",
      "info" : "IfStatement[129906-130035]:IfStatement[130134-130263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129996-130035]:Block[130224-130263]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[130011-130024]:ReturnStatement[130239-130252]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers, \r\n                that.foregroundRangeMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers, \r\n                that.foregroundRangeMarkers))",
      "info" : "IfStatement[130051-130194]:IfStatement[130279-130422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130155-130194]:Block[130383-130422]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[130170-130183]:ReturnStatement[130398-130411]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers, \r\n                that.backgroundRangeMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers, \r\n                that.backgroundRangeMarkers))",
      "info" : "IfStatement[130204-130347]:IfStatement[130432-130575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130308-130347]:Block[130536-130575]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[130323-130336]:ReturnStatement[130551-130564]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.annotations, that.annotations))",
      "right" : "if (!ObjectUtilities.equal(this.annotations, that.annotations))",
      "info" : "IfStatement[130357-130460]:IfStatement[130585-130688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130421-130460]:Block[130649-130688]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[130436-130449]:ReturnStatement[130664-130677]"
    }, {
      "left" : "if (this.weight != that.weight)",
      "right" : "if (this.weight != that.weight)",
      "info" : "IfStatement[130470-130541]:IfStatement[130698-130769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130502-130541]:Block[130730-130769]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[130517-130530]:ReturnStatement[130745-130758]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.fixedDomainAxisSpace, \r\n                that.fixedDomainAxisSpace))",
      "right" : "if (!ObjectUtilities.equal(this.fixedDomainAxisSpace, \r\n                that.fixedDomainAxisSpace))",
      "info" : "IfStatement[130551-130690]:IfStatement[130779-130918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130651-130690]:Block[130879-130918]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[130666-130679]:ReturnStatement[130894-130907]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.fixedRangeAxisSpace, \r\n                that.fixedRangeAxisSpace))",
      "right" : "if (!ObjectUtilities.equal(this.fixedRangeAxisSpace, \r\n                that.fixedRangeAxisSpace))",
      "info" : "IfStatement[130704-130841]:IfStatement[130932-131069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130802-130841]:Block[131030-131069]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[130817-130830]:ReturnStatement[131045-131058]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[130865-130877]:ReturnStatement[131093-131105]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[131081-131087]:Modifier[131309-131315]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[131088-131094]:SimpleType[131316-131322]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[131095-131100]:SimpleName[131323-131328]"
    }, {
      "left" : "CloneNotSupportedException",
      "right" : "CloneNotSupportedException",
      "info" : "SimpleType[131110-131136]:SimpleType[131338-131364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131137-133105]:Block[131365-133333]"
    }, {
      "left" : "CategoryPlot clone = (CategoryPlot) super.clone();",
      "right" : "CategoryPlot clone = (CategoryPlot) super.clone();",
      "info" : "VariableDeclarationStatement[131158-131208]:VariableDeclarationStatement[131386-131436]"
    }, {
      "left" : "clone.domainAxes = new ObjectList();",
      "right" : "clone.domainAxes = new ObjectList();",
      "info" : "ExpressionStatement[131228-131264]:ExpressionStatement[131456-131492]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[131274-131583]:ForStatement[131502-131811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131323-131583]:Block[131551-131811]"
    }, {
      "left" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);",
      "right" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[131338-131397]:VariableDeclarationStatement[131566-131625]"
    }, {
      "left" : "if (xAxis != null)",
      "right" : "if (xAxis != null)",
      "info" : "IfStatement[131411-131572]:IfStatement[131639-131800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131430-131572]:Block[131658-131800]"
    }, {
      "left" : "CategoryAxis clonedAxis = (CategoryAxis) xAxis.clone();",
      "right" : "CategoryAxis clonedAxis = (CategoryAxis) xAxis.clone();",
      "info" : "VariableDeclarationStatement[131449-131504]:VariableDeclarationStatement[131677-131732]"
    }, {
      "left" : "clone.setDomainAxis(i, clonedAxis);",
      "right" : "clone.setDomainAxis(i, clonedAxis);",
      "info" : "ExpressionStatement[131522-131557]:ExpressionStatement[131750-131785]"
    }, {
      "left" : "clone.domainAxisLocations \r\n            = (ObjectList) this.domainAxisLocations.clone();",
      "right" : "clone.domainAxisLocations \r\n            = (ObjectList) this.domainAxisLocations.clone();",
      "info" : "ExpressionStatement[131593-131681]:ExpressionStatement[131821-131909]"
    }, {
      "left" : "clone.rangeAxes = new ObjectList();",
      "right" : "clone.rangeAxes = new ObjectList();",
      "info" : "ExpressionStatement[131693-131728]:ExpressionStatement[131921-131956]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[131738-132032]:ForStatement[131966-132260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131786-132032]:Block[132014-132260]"
    }, {
      "left" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[131801-131853]:VariableDeclarationStatement[132029-132081]"
    }, {
      "left" : "if (yAxis != null)",
      "right" : "if (yAxis != null)",
      "info" : "IfStatement[131867-132021]:IfStatement[132095-132249]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131886-132021]:Block[132114-132249]"
    }, {
      "left" : "ValueAxis clonedAxis = (ValueAxis) yAxis.clone();",
      "right" : "ValueAxis clonedAxis = (ValueAxis) yAxis.clone();",
      "info" : "VariableDeclarationStatement[131905-131954]:VariableDeclarationStatement[132133-132182]"
    }, {
      "left" : "clone.setRangeAxis(i, clonedAxis);",
      "right" : "clone.setRangeAxis(i, clonedAxis);",
      "info" : "ExpressionStatement[131972-132006]:ExpressionStatement[132200-132234]"
    }, {
      "left" : "clone.rangeAxisLocations = (ObjectList) this.rangeAxisLocations.clone();",
      "right" : "clone.rangeAxisLocations = (ObjectList) this.rangeAxisLocations.clone();",
      "info" : "ExpressionStatement[132042-132114]:ExpressionStatement[132270-132342]"
    }, {
      "left" : "clone.datasets = (ObjectList) this.datasets.clone();",
      "right" : "clone.datasets = (ObjectList) this.datasets.clone();",
      "info" : "ExpressionStatement[132126-132178]:ExpressionStatement[132354-132406]"
    }, {
      "left" : "for (int i = 0; i < clone.datasets.size(); i++)",
      "right" : "for (int i = 0; i < clone.datasets.size(); i++)",
      "info" : "ForStatement[132188-132410]:ForStatement[132416-132638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132236-132410]:Block[132464-132638]"
    }, {
      "left" : "CategoryDataset dataset = clone.getDataset(i);",
      "right" : "CategoryDataset dataset = clone.getDataset(i);",
      "info" : "VariableDeclarationStatement[132251-132297]:VariableDeclarationStatement[132479-132525]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[132311-132399]:IfStatement[132539-132627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132332-132399]:Block[132560-132627]"
    }, {
      "left" : "dataset.addChangeListener(clone);",
      "right" : "dataset.addChangeListener(clone);",
      "info" : "ExpressionStatement[132351-132384]:ExpressionStatement[132579-132612]"
    }, {
      "left" : "clone.datasetToDomainAxisMap \r\n            = (ObjectList) this.datasetToDomainAxisMap.clone();",
      "right" : "clone.datasetToDomainAxisMap \r\n            = (ObjectList) this.datasetToDomainAxisMap.clone();",
      "info" : "ExpressionStatement[132420-132514]:ExpressionStatement[132648-132742]"
    }, {
      "left" : "clone.datasetToRangeAxisMap \r\n            = (ObjectList) this.datasetToRangeAxisMap.clone();",
      "right" : "clone.datasetToRangeAxisMap \r\n            = (ObjectList) this.datasetToRangeAxisMap.clone();",
      "info" : "ExpressionStatement[132524-132616]:ExpressionStatement[132752-132844]"
    }, {
      "left" : "clone.renderers = (ObjectList) this.renderers.clone();",
      "right" : "clone.renderers = (ObjectList) this.renderers.clone();",
      "info" : "ExpressionStatement[132626-132680]:ExpressionStatement[132854-132908]"
    }, {
      "left" : "if (this.fixedDomainAxisSpace != null)",
      "right" : "if (this.fixedDomainAxisSpace != null)",
      "info" : "IfStatement[132690-132867]:IfStatement[132918-133095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132729-132867]:Block[132957-133095]"
    }, {
      "left" : "clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedDomainAxisSpace);",
      "right" : "clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedDomainAxisSpace);",
      "info" : "ExpressionStatement[132744-132856]:ExpressionStatement[132972-133084]"
    }, {
      "left" : "if (this.fixedRangeAxisSpace != null)",
      "right" : "if (this.fixedRangeAxisSpace != null)",
      "info" : "IfStatement[132877-133051]:IfStatement[133105-133279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132915-133051]:Block[133143-133279]"
    }, {
      "left" : "clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedRangeAxisSpace);",
      "right" : "clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedRangeAxisSpace);",
      "info" : "ExpressionStatement[132930-133040]:ExpressionStatement[133158-133268]"
    }, {
      "left" : "return clone;",
      "right" : "return clone;",
      "info" : "ReturnStatement[133071-133084]:ReturnStatement[133299-133312]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[133288-133295]:Modifier[133516-133523]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[133296-133300]:PrimitiveType[133524-133528]"
    }, {
      "left" : "writeObject",
      "right" : "writeObject",
      "info" : "SimpleName[133301-133312]:SimpleName[133529-133540]"
    }, {
      "left" : "ObjectOutputStream stream",
      "right" : "ObjectOutputStream stream",
      "info" : "SingleVariableDeclaration[133313-133338]:SingleVariableDeclaration[133541-133566]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[133347-133358]:SimpleType[133575-133586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133359-133835]:Block[133587-134063]"
    }, {
      "left" : "stream.defaultWriteObject();",
      "right" : "stream.defaultWriteObject();",
      "info" : "ExpressionStatement[133370-133398]:ExpressionStatement[133598-133626]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",
      "info" : "ExpressionStatement[133408-133471]:ExpressionStatement[133636-133699]"
    }, {
      "left" : "SerialUtilities.writePaint(this.domainGridlinePaint, stream);",
      "right" : "SerialUtilities.writePaint(this.domainGridlinePaint, stream);",
      "info" : "ExpressionStatement[133481-133542]:ExpressionStatement[133709-133770]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",
      "info" : "ExpressionStatement[133552-133614]:ExpressionStatement[133780-133842]"
    }, {
      "left" : "SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",
      "right" : "SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",
      "info" : "ExpressionStatement[133624-133684]:ExpressionStatement[133852-133912]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",
      "info" : "ExpressionStatement[133694-133757]:ExpressionStatement[133922-133985]"
    }, {
      "left" : "SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",
      "right" : "SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",
      "info" : "ExpressionStatement[133767-133828]:ExpressionStatement[133995-134056]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[134086-134093]:Modifier[134314-134321]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[134094-134098]:PrimitiveType[134322-134326]"
    }, {
      "left" : "readObject",
      "right" : "readObject",
      "info" : "SimpleName[134099-134109]:SimpleName[134327-134337]"
    }, {
      "left" : "ObjectInputStream stream",
      "right" : "ObjectInputStream stream",
      "info" : "SingleVariableDeclaration[134110-134134]:SingleVariableDeclaration[134338-134362]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[134153-134164]:SimpleType[134381-134392]"
    }, {
      "left" : "ClassNotFoundException",
      "right" : "ClassNotFoundException",
      "info" : "SimpleType[134166-134188]:SimpleType[134394-134416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134189-135825]:Block[134417-136053]"
    }, {
      "left" : "stream.defaultReadObject();",
      "right" : "stream.defaultReadObject();",
      "info" : "ExpressionStatement[134202-134229]:ExpressionStatement[134430-134457]"
    }, {
      "left" : "this.domainGridlineStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.domainGridlineStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[134239-134302]:ExpressionStatement[134467-134530]"
    }, {
      "left" : "this.domainGridlinePaint = SerialUtilities.readPaint(stream);",
      "right" : "this.domainGridlinePaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[134312-134373]:ExpressionStatement[134540-134601]"
    }, {
      "left" : "this.rangeGridlineStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.rangeGridlineStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[134383-134445]:ExpressionStatement[134611-134673]"
    }, {
      "left" : "this.rangeGridlinePaint = SerialUtilities.readPaint(stream);",
      "right" : "this.rangeGridlinePaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[134455-134515]:ExpressionStatement[134683-134743]"
    }, {
      "left" : "this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[134525-134588]:ExpressionStatement[134753-134816]"
    }, {
      "left" : "this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);",
      "right" : "this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[134598-134659]:ExpressionStatement[134826-134887]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[134671-134940]:ForStatement[134899-135168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134720-134940]:Block[134948-135168]"
    }, {
      "left" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);",
      "right" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[134735-134794]:VariableDeclarationStatement[134963-135022]"
    }, {
      "left" : "if (xAxis != null)",
      "right" : "if (xAxis != null)",
      "info" : "IfStatement[134808-134929]:IfStatement[135036-135157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134827-134929]:Block[135055-135157]"
    }, {
      "left" : "xAxis.setPlot(this);",
      "right" : "xAxis.setPlot(this);",
      "info" : "ExpressionStatement[134846-134866]:ExpressionStatement[135074-135094]"
    }, {
      "left" : "xAxis.addChangeListener(this);",
      "right" : "xAxis.addChangeListener(this);",
      "info" : "ExpressionStatement[134884-134914]:ExpressionStatement[135112-135142]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[134951-135215]:ForStatement[135179-135443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134999-135215]:Block[135227-135443]"
    }, {
      "left" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[135014-135066]:VariableDeclarationStatement[135242-135294]"
    }, {
      "left" : "if (yAxis != null)",
      "right" : "if (yAxis != null)",
      "info" : "IfStatement[135080-135204]:IfStatement[135308-135432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135099-135204]:Block[135327-135432]"
    }, {
      "left" : "yAxis.setPlot(this);",
      "right" : "yAxis.setPlot(this);",
      "info" : "ExpressionStatement[135118-135138]:ExpressionStatement[135346-135366]"
    }, {
      "left" : "yAxis.addChangeListener(this);",
      "right" : "yAxis.addChangeListener(this);",
      "info" : "ExpressionStatement[135159-135189]:ExpressionStatement[135387-135417]"
    }, {
      "left" : "int datasetCount = this.datasets.size();",
      "right" : "int datasetCount = this.datasets.size();",
      "info" : "VariableDeclarationStatement[135225-135265]:VariableDeclarationStatement[135453-135493]"
    }, {
      "left" : "for (int i = 0; i < datasetCount; i++)",
      "right" : "for (int i = 0; i < datasetCount; i++)",
      "info" : "ForStatement[135275-135490]:ForStatement[135503-135718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135314-135490]:Block[135542-135718]"
    }, {
      "left" : "Dataset dataset = (Dataset) this.datasets.get(i);",
      "right" : "Dataset dataset = (Dataset) this.datasets.get(i);",
      "info" : "VariableDeclarationStatement[135329-135378]:VariableDeclarationStatement[135557-135606]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[135392-135479]:IfStatement[135620-135707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135413-135479]:Block[135641-135707]"
    }, {
      "left" : "dataset.addChangeListener(this);",
      "right" : "dataset.addChangeListener(this);",
      "info" : "ExpressionStatement[135432-135464]:ExpressionStatement[135660-135692]"
    }, {
      "left" : "int rendererCount = this.renderers.size();",
      "right" : "int rendererCount = this.renderers.size();",
      "info" : "VariableDeclarationStatement[135500-135542]:VariableDeclarationStatement[135728-135770]"
    }, {
      "left" : "for (int i = 0; i < rendererCount; i++)",
      "right" : "for (int i = 0; i < rendererCount; i++)",
      "info" : "ForStatement[135552-135816]:ForStatement[135780-136044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135592-135816]:Block[135820-136044]"
    }, {
      "left" : "CategoryItemRenderer renderer \r\n                = (CategoryItemRenderer) this.renderers.get(i);",
      "right" : "CategoryItemRenderer renderer \r\n                = (CategoryItemRenderer) this.renderers.get(i);",
      "info" : "VariableDeclarationStatement[135607-135702]:VariableDeclarationStatement[135835-135930]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[135716-135805]:IfStatement[135944-136033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135738-135805]:Block[135966-136033]"
    }, {
      "left" : "renderer.addChangeListener(this);",
      "right" : "renderer.addChangeListener(this);",
      "info" : "ExpressionStatement[135757-135790]:ExpressionStatement[135985-136018]"
    } ]
  },
  "interFileMappings" : { }
}