{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Node",
      "right" : "Node",
      "info" : "TypeDeclaration[2156-67330]:TypeDeclaration[2156-67414]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[2296-2344]:FieldDeclaration[2296-2344]"
    }, {
      "left" : "public static final int\n      JSDOC_INFO_PROP   = 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     = 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      = 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        = 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       = 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP = 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        = 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  = 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  = 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   = 43,    // The variable or property is constant.\n      IS_NAMESPACE       = 46,    // The variable creates a namespace.\n      IS_DISPATCHER      = 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         = 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        = 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          = 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE = 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             = 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           = 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            = 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  = 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      CHANGE_TIME        = 56,    // For passes that work only on changed funs.\n      REFLECTED_OBJECT   = 57,    // An object that's used for goog.object.reflect-style reflection.\n      LAST_PROP          = 57;",
      "right" : "public static final int\n      JSDOC_INFO_PROP   = 29,     // contains a TokenStream.JSDocInfo object\n      VAR_ARGS_NAME     = 30,     // the name node is a variable length\n                                  // argument placeholder.\n      INCRDECR_PROP      = 32,    // pre or post type of increment/decrement\n      QUOTED_PROP        = 36,    // set to indicate a quoted object lit key\n      OPT_ARG_NAME       = 37,    // The name node is an optional argument.\n      SYNTHETIC_BLOCK_PROP = 38,  // A synthetic block. Used to make\n                                  // processing simpler, and does not\n                                  // represent a real block in the source.\n      EMPTY_BLOCK        = 39,    // Used to indicate BLOCK that replaced\n                                  // EMPTY nodes.\n      ORIGINALNAME_PROP  = 40,    // The original name of the node, before\n                                  // renaming.\n      SIDE_EFFECT_FLAGS  = 42,    // Function or constructor call side effect\n                                  // flags\n      // Coding convention props\n      IS_CONSTANT_NAME   = 43,    // The variable or property is constant.\n      IS_NAMESPACE       = 46,    // The variable creates a namespace.\n      IS_DISPATCHER      = 47,    // The function is a dispatcher function,\n                                  // probably generated from Java code, and\n                                  // should be resolved to the proper\n                                  // overload if possible.\n      DIRECTIVES         = 48,    // The ES5 directives on this node.\n      DIRECT_EVAL        = 49,    // ES5 distinguishes between direct and\n                                  // indirect calls to eval.\n      FREE_CALL          = 50,    // A CALL without an explicit \"this\" value.\n      STATIC_SOURCE_FILE = 51,    // A StaticSourceFile indicating the file\n                                  // where this node lives.\n      LENGTH             = 52,    // The length of the code represented by\n                                  // this node.\n      INPUT_ID           = 53,    // The id of the input associated with this\n                                  // node.\n      SLASH_V            = 54,    // Whether a STRING node contains a \\v\n                                  // vertical tab escape. This is a total hack.\n                                  // See comments in IRFactory about this.\n      INFERRED_FUNCTION  = 55,    // Marks a function whose parameter types\n                                  // have been inferred.\n      CHANGE_TIME        = 56,    // For passes that work only on changed funs.\n      REFLECTED_OBJECT   = 57,    // An object that's used for goog.object.reflect-style reflection.\n      LAST_PROP          = 57;",
      "info" : "FieldDeclaration[2348-5086]:FieldDeclaration[2348-5086]"
    }, {
      "left" : "public static final int   // flags for INCRDECR_PROP\n      DECR_FLAG = 0x1,\n      POST_FLAG = 0x2;",
      "right" : "public static final int   // flags for INCRDECR_PROP\n      DECR_FLAG = 0x1,\n      POST_FLAG = 0x2;",
      "info" : "FieldDeclaration[5140-5238]:FieldDeclaration[5140-5238]"
    }, {
      "left" : "private static final String propToString(int propType)",
      "right" : "private static final String propToString(int propType)",
      "info" : "MethodDeclaration[5242-6603]:MethodDeclaration[5242-6603]"
    }, {
      "left" : "NumberNode",
      "right" : "NumberNode",
      "info" : "TypeDeclaration[6607-7666]:TypeDeclaration[6607-7666]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[6659-6707]:FieldDeclaration[6659-6707]"
    }, {
      "left" : "NumberNode(double number)",
      "right" : "NumberNode(double number)",
      "info" : "MethodDeclaration[6713-6801]:MethodDeclaration[6713-6801]"
    }, {
      "left" : "public NumberNode(double number, int lineno, int charno)",
      "right" : "public NumberNode(double number, int lineno, int charno)",
      "info" : "MethodDeclaration[6807-6942]:MethodDeclaration[6807-6942]"
    }, {
      "left" : "public double getDouble()",
      "right" : "public double getDouble()",
      "info" : "MethodDeclaration[6948-7021]:MethodDeclaration[6948-7021]"
    }, {
      "left" : "public void setDouble(double d)",
      "right" : "public void setDouble(double d)",
      "info" : "MethodDeclaration[7027-7103]:MethodDeclaration[7027-7103]"
    }, {
      "left" : "boolean isEquivalentTo(\n        Node node, boolean compareJsType, boolean recur, boolean shallow)",
      "right" : "boolean isEquivalentTo(\n        Node node, boolean compareJsType, boolean recur, boolean shallow)",
      "info" : "MethodDeclaration[7109-7634]:MethodDeclaration[7109-7634]"
    }, {
      "left" : "private double number;",
      "right" : "private double number;",
      "info" : "FieldDeclaration[7640-7662]:FieldDeclaration[7640-7662]"
    }, {
      "left" : "StringNode",
      "right" : "StringNode",
      "info" : "TypeDeclaration[7670-9454]:TypeDeclaration[7670-9454]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[7722-7770]:FieldDeclaration[7722-7770]"
    }, {
      "left" : "StringNode(int type, String str)",
      "right" : "StringNode(int type, String str)",
      "info" : "MethodDeclaration[7776-7961]:MethodDeclaration[7776-7961]"
    }, {
      "left" : "StringNode(int type, String str, int lineno, int charno)",
      "right" : "StringNode(int type, String str, int lineno, int charno)",
      "info" : "MethodDeclaration[7967-8192]:MethodDeclaration[7967-8192]"
    }, {
      "left" : "public String getString()",
      "right" : "public String getString()",
      "info" : "MethodDeclaration[8198-8344]:MethodDeclaration[8198-8344]"
    }, {
      "left" : "public void setString(String str)",
      "right" : "public void setString(String str)",
      "info" : "MethodDeclaration[8350-8623]:MethodDeclaration[8350-8623]"
    }, {
      "left" : "boolean isEquivalentTo(\n        Node node, boolean compareJsType, boolean recur, boolean shallow)",
      "right" : "boolean isEquivalentTo(\n        Node node, boolean compareJsType, boolean recur, boolean shallow)",
      "info" : "MethodDeclaration[8629-8876]:MethodDeclaration[8629-8876]"
    }, {
      "left" : "public boolean isQuotedString()",
      "right" : "public boolean isQuotedString()",
      "info" : "MethodDeclaration[8882-9236]:MethodDeclaration[8882-9236]"
    }, {
      "left" : "public void setQuotedString()",
      "right" : "public void setQuotedString()",
      "info" : "MethodDeclaration[9242-9425]:MethodDeclaration[9242-9425]"
    }, {
      "left" : "private String str;",
      "right" : "private String str;",
      "info" : "FieldDeclaration[9431-9450]:FieldDeclaration[9431-9450]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "TypeDeclaration[9523-9701]:TypeDeclaration[9523-9701]"
    }, {
      "left" : "int getType();",
      "right" : "int getType();",
      "info" : "MethodDeclaration[9560-9574]:MethodDeclaration[9560-9574]"
    }, {
      "left" : "PropListItem getNext();",
      "right" : "PropListItem getNext();",
      "info" : "MethodDeclaration[9579-9602]:MethodDeclaration[9579-9602]"
    }, {
      "left" : "PropListItem chain(PropListItem next);",
      "right" : "PropListItem chain(PropListItem next);",
      "info" : "MethodDeclaration[9607-9645]:MethodDeclaration[9607-9645]"
    }, {
      "left" : "Object getObjectValue();",
      "right" : "Object getObjectValue();",
      "info" : "MethodDeclaration[9650-9674]:MethodDeclaration[9650-9674]"
    }, {
      "left" : "int getIntValue();",
      "right" : "int getIntValue();",
      "info" : "MethodDeclaration[9679-9697]:MethodDeclaration[9679-9697]"
    }, {
      "left" : "AbstractPropListItem",
      "right" : "AbstractPropListItem",
      "info" : "TypeDeclaration[9705-10272]:TypeDeclaration[9705-10272]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[9806-9854]:FieldDeclaration[9806-9854]"
    }, {
      "left" : "private final PropListItem next;",
      "right" : "private final PropListItem next;",
      "info" : "FieldDeclaration[9860-9892]:FieldDeclaration[9860-9892]"
    }, {
      "left" : "private final int propType;",
      "right" : "private final int propType;",
      "info" : "FieldDeclaration[9897-9924]:FieldDeclaration[9897-9924]"
    }, {
      "left" : "AbstractPropListItem(int propType, PropListItem next)",
      "right" : "AbstractPropListItem(int propType, PropListItem next)",
      "info" : "MethodDeclaration[9930-10047]:MethodDeclaration[9930-10047]"
    }, {
      "left" : "public int getType()",
      "right" : "public int getType()",
      "info" : "MethodDeclaration[10053-10118]:MethodDeclaration[10053-10118]"
    }, {
      "left" : "public PropListItem getNext()",
      "right" : "public PropListItem getNext()",
      "info" : "MethodDeclaration[10124-10194]:MethodDeclaration[10124-10194]"
    }, {
      "left" : "public abstract PropListItem chain(PropListItem next);",
      "right" : "public abstract PropListItem chain(PropListItem next);",
      "info" : "MethodDeclaration[10200-10268]:MethodDeclaration[10200-10268]"
    }, {
      "left" : "ObjectPropListItem",
      "right" : "ObjectPropListItem",
      "info" : "TypeDeclaration[10319-11087]:TypeDeclaration[10319-11087]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[10400-10448]:FieldDeclaration[10400-10448]"
    }, {
      "left" : "private final Object objectValue;",
      "right" : "private final Object objectValue;",
      "info" : "FieldDeclaration[10454-10487]:FieldDeclaration[10454-10487]"
    }, {
      "left" : "ObjectPropListItem(int propType, Object objectValue, PropListItem next)",
      "right" : "ObjectPropListItem(int propType, Object objectValue, PropListItem next)",
      "info" : "MethodDeclaration[10493-10639]:MethodDeclaration[10493-10639]"
    }, {
      "left" : "public int getIntValue()",
      "right" : "public int getIntValue()",
      "info" : "MethodDeclaration[10645-10740]:MethodDeclaration[10645-10740]"
    }, {
      "left" : "public Object getObjectValue()",
      "right" : "public Object getObjectValue()",
      "info" : "MethodDeclaration[10746-10824]:MethodDeclaration[10746-10824]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[10830-10944]:MethodDeclaration[10830-10944]"
    }, {
      "left" : "public PropListItem chain(PropListItem next)",
      "right" : "public PropListItem chain(PropListItem next)",
      "info" : "MethodDeclaration[10950-11083]:MethodDeclaration[10950-11083]"
    }, {
      "left" : "IntPropListItem",
      "right" : "IntPropListItem",
      "info" : "TypeDeclaration[11131-11823]:TypeDeclaration[11131-11823]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[11203-11251]:FieldDeclaration[11203-11251]"
    }, {
      "left" : "final int intValue;",
      "right" : "final int intValue;",
      "info" : "FieldDeclaration[11257-11276]:FieldDeclaration[11257-11276]"
    }, {
      "left" : "IntPropListItem(int propType, int intValue, PropListItem next)",
      "right" : "IntPropListItem(int propType, int intValue, PropListItem next)",
      "info" : "MethodDeclaration[11282-11413]:MethodDeclaration[11282-11413]"
    }, {
      "left" : "public int getIntValue()",
      "right" : "public int getIntValue()",
      "info" : "MethodDeclaration[11419-11488]:MethodDeclaration[11419-11488]"
    }, {
      "left" : "public Object getObjectValue()",
      "right" : "public Object getObjectValue()",
      "info" : "MethodDeclaration[11494-11595]:MethodDeclaration[11494-11595]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[11601-11686]:MethodDeclaration[11601-11686]"
    }, {
      "left" : "public PropListItem chain(PropListItem next)",
      "right" : "public PropListItem chain(PropListItem next)",
      "info" : "MethodDeclaration[11692-11819]:MethodDeclaration[11692-11819]"
    }, {
      "left" : "public Node(int nodeType)",
      "right" : "public Node(int nodeType)",
      "info" : "MethodDeclaration[11827-11923]:MethodDeclaration[11827-11923]"
    }, {
      "left" : "public Node(int nodeType, Node child)",
      "right" : "public Node(int nodeType, Node child)",
      "info" : "MethodDeclaration[11927-12301]:MethodDeclaration[11927-12301]"
    }, {
      "left" : "public Node(int nodeType, Node left, Node right)",
      "right" : "public Node(int nodeType, Node left, Node right)",
      "info" : "MethodDeclaration[12305-12961]:MethodDeclaration[12305-12961]"
    }, {
      "left" : "public Node(int nodeType, Node left, Node mid, Node right)",
      "right" : "public Node(int nodeType, Node left, Node mid, Node right)",
      "info" : "MethodDeclaration[12965-13586]:MethodDeclaration[12965-13586]"
    }, {
      "left" : "public Node(int nodeType, Node left, Node mid, Node mid2, Node right)",
      "right" : "public Node(int nodeType, Node left, Node mid, Node mid2, Node right)",
      "info" : "MethodDeclaration[13590-14374]:MethodDeclaration[13590-14374]"
    }, {
      "left" : "public Node(int nodeType, int lineno, int charno)",
      "right" : "public Node(int nodeType, int lineno, int charno)",
      "info" : "MethodDeclaration[14378-14527]:MethodDeclaration[14378-14527]"
    }, {
      "left" : "public Node(int nodeType, Node child, int lineno, int charno)",
      "right" : "public Node(int nodeType, Node child, int lineno, int charno)",
      "info" : "MethodDeclaration[14531-14679]:MethodDeclaration[14531-14679]"
    }, {
      "left" : "public Node(int nodeType, Node left, Node right, int lineno, int charno)",
      "right" : "public Node(int nodeType, Node left, Node right, int lineno, int charno)",
      "info" : "MethodDeclaration[14683-14848]:MethodDeclaration[14683-14848]"
    }, {
      "left" : "public Node(int nodeType, Node left, Node mid, Node right,\n      int lineno, int charno)",
      "right" : "public Node(int nodeType, Node left, Node mid, Node right,\n      int lineno, int charno)",
      "info" : "MethodDeclaration[14852-15038]:MethodDeclaration[14852-15038]"
    }, {
      "left" : "public Node(int nodeType, Node left, Node mid, Node mid2, Node right,\n      int lineno, int charno)",
      "right" : "public Node(int nodeType, Node left, Node mid, Node mid2, Node right,\n      int lineno, int charno)",
      "info" : "MethodDeclaration[15042-15245]:MethodDeclaration[15042-15245]"
    }, {
      "left" : "public Node(int nodeType, Node[] children, int lineno, int charno)",
      "right" : "public Node(int nodeType, Node[] children, int lineno, int charno)",
      "info" : "MethodDeclaration[15249-15405]:MethodDeclaration[15249-15405]"
    }, {
      "left" : "public Node(int nodeType, Node[] children)",
      "right" : "public Node(int nodeType, Node[] children)",
      "info" : "MethodDeclaration[15409-16323]:MethodDeclaration[15409-16323]"
    }, {
      "left" : "public static Node newNumber(double number)",
      "right" : "public static Node newNumber(double number)",
      "info" : "MethodDeclaration[16327-16411]:MethodDeclaration[16327-16411]"
    }, {
      "left" : "public static Node newNumber(double number, int lineno, int charno)",
      "right" : "public static Node newNumber(double number, int lineno, int charno)",
      "info" : "MethodDeclaration[16415-16539]:MethodDeclaration[16415-16539]"
    }, {
      "left" : "public static Node newString(String str)",
      "right" : "public static Node newString(String str)",
      "info" : "MethodDeclaration[16543-16635]:MethodDeclaration[16543-16635]"
    }, {
      "left" : "public static Node newString(int type, String str)",
      "right" : "public static Node newString(int type, String str)",
      "info" : "MethodDeclaration[16639-16733]:MethodDeclaration[16639-16733]"
    }, {
      "left" : "public static Node newString(String str, int lineno, int charno)",
      "right" : "public static Node newString(String str, int lineno, int charno)",
      "info" : "MethodDeclaration[16737-16869]:MethodDeclaration[16737-16869]"
    }, {
      "left" : "public static Node newString(int type, String str, int lineno, int charno)",
      "right" : "public static Node newString(int type, String str, int lineno, int charno)",
      "info" : "MethodDeclaration[16873-17007]:MethodDeclaration[16873-17007]"
    }, {
      "left" : "public int getType()",
      "right" : "public int getType()",
      "info" : "MethodDeclaration[17011-17054]:MethodDeclaration[17011-17054]"
    }, {
      "left" : "public void setType(int type)",
      "right" : "public void setType(int type)",
      "info" : "MethodDeclaration[17058-17115]:MethodDeclaration[17058-17115]"
    }, {
      "left" : "public boolean hasChildren()",
      "right" : "public boolean hasChildren()",
      "info" : "MethodDeclaration[17119-17179]:MethodDeclaration[17119-17179]"
    }, {
      "left" : "public Node getFirstChild()",
      "right" : "public Node getFirstChild()",
      "info" : "MethodDeclaration[17183-17234]:MethodDeclaration[17183-17234]"
    }, {
      "left" : "public Node getLastChild()",
      "right" : "public Node getLastChild()",
      "info" : "MethodDeclaration[17238-17287]:MethodDeclaration[17238-17287]"
    }, {
      "left" : "public Node getNext()",
      "right" : "public Node getNext()",
      "info" : "MethodDeclaration[17291-17335]:MethodDeclaration[17291-17335]"
    }, {
      "left" : "public Node getChildBefore(Node child)",
      "right" : "public Node getChildBefore(Node child)",
      "info" : "MethodDeclaration[17339-17613]:MethodDeclaration[17339-17697]"
    }, {
      "left" : "public Node getChildAtIndex(int i)",
      "right" : "public Node getChildAtIndex(int i)",
      "info" : "MethodDeclaration[17617-17746]:MethodDeclaration[17701-17830]"
    }, {
      "left" : "public int getIndexOfChild(Node child)",
      "right" : "public int getIndexOfChild(Node child)",
      "info" : "MethodDeclaration[17750-17954]:MethodDeclaration[17834-18038]"
    }, {
      "left" : "public Node getLastSibling()",
      "right" : "public Node getLastSibling()",
      "info" : "MethodDeclaration[17958-18078]:MethodDeclaration[18042-18162]"
    }, {
      "left" : "public void addChildToFront(Node child)",
      "right" : "public void addChildToFront(Node child)",
      "info" : "MethodDeclaration[18082-18353]:MethodDeclaration[18166-18437]"
    }, {
      "left" : "public void addChildToBack(Node child)",
      "right" : "public void addChildToBack(Node child)",
      "info" : "MethodDeclaration[18357-18670]:MethodDeclaration[18441-18754]"
    }, {
      "left" : "public void addChildrenToFront(Node children)",
      "right" : "public void addChildrenToFront(Node children)",
      "info" : "MethodDeclaration[18674-19030]:MethodDeclaration[18758-19114]"
    }, {
      "left" : "public void addChildrenToBack(Node children)",
      "right" : "public void addChildrenToBack(Node children)",
      "info" : "MethodDeclaration[19034-19132]:MethodDeclaration[19118-19216]"
    }, {
      "left" : "public void addChildBefore(Node newChild, Node node)",
      "right" : "public void addChildBefore(Node newChild, Node node)",
      "info" : "MethodDeclaration[19136-19788]:MethodDeclaration[19220-19872]"
    }, {
      "left" : "public void addChildAfter(Node newChild, Node node)",
      "right" : "public void addChildAfter(Node newChild, Node node)",
      "info" : "MethodDeclaration[19792-20030]:MethodDeclaration[19876-20114]"
    }, {
      "left" : "public void addChildrenAfter(Node children, Node node)",
      "right" : "public void addChildrenAfter(Node children, Node node)",
      "info" : "MethodDeclaration[20034-20791]:MethodDeclaration[20118-20875]"
    }, {
      "left" : "public void removeChild(Node child)",
      "right" : "public void removeChild(Node child)",
      "info" : "MethodDeclaration[20795-21134]:MethodDeclaration[20879-21218]"
    }, {
      "left" : "public void replaceChild(Node child, Node newChild)",
      "right" : "public void replaceChild(Node child, Node newChild)",
      "info" : "MethodDeclaration[21138-21861]:MethodDeclaration[21222-21945]"
    }, {
      "left" : "public void replaceChildAfter(Node prevChild, Node newChild)",
      "right" : "public void replaceChildAfter(Node prevChild, Node newChild)",
      "info" : "MethodDeclaration[21865-22557]:MethodDeclaration[21949-22641]"
    }, {
      "left" : "PropListItem lookupProperty(int propType)",
      "right" : "PropListItem lookupProperty(int propType)",
      "info" : "MethodDeclaration[22561-22758]:MethodDeclaration[22645-22842]"
    }, {
      "left" : "public Node clonePropsFrom(Node other)",
      "right" : "public Node clonePropsFrom(Node other)",
      "info" : "MethodDeclaration[22762-23208]:MethodDeclaration[22846-23292]"
    }, {
      "left" : "public void removeProp(int propType)",
      "right" : "public void removeProp(int propType)",
      "info" : "MethodDeclaration[23212-23385]:MethodDeclaration[23296-23469]"
    }, {
      "left" : "private PropListItem removeProp(PropListItem item, int propType)",
      "right" : "private PropListItem removeProp(PropListItem item, int propType)",
      "info" : "MethodDeclaration[23389-23964]:MethodDeclaration[23473-24048]"
    }, {
      "left" : "public Object getProp(int propType)",
      "right" : "public Object getProp(int propType)",
      "info" : "MethodDeclaration[23968-24142]:MethodDeclaration[24052-24226]"
    }, {
      "left" : "public boolean getBooleanProp(int propType)",
      "right" : "public boolean getBooleanProp(int propType)",
      "info" : "MethodDeclaration[24146-24233]:MethodDeclaration[24230-24317]"
    }, {
      "left" : "public int getIntProp(int propType)",
      "right" : "public int getIntProp(int propType)",
      "info" : "MethodDeclaration[24237-24508]:MethodDeclaration[24321-24592]"
    }, {
      "left" : "public int getExistingIntProp(int propType)",
      "right" : "public int getExistingIntProp(int propType)",
      "info" : "MethodDeclaration[24512-24740]:MethodDeclaration[24596-24824]"
    }, {
      "left" : "public void putProp(int propType, Object value)",
      "right" : "public void putProp(int propType, Object value)",
      "info" : "MethodDeclaration[24744-24918]:MethodDeclaration[24828-25002]"
    }, {
      "left" : "public void putBooleanProp(int propType, boolean value)",
      "right" : "public void putBooleanProp(int propType, boolean value)",
      "info" : "MethodDeclaration[24922-25024]:MethodDeclaration[25006-25108]"
    }, {
      "left" : "public void putIntProp(int propType, int value)",
      "right" : "public void putIntProp(int propType, int value)",
      "info" : "MethodDeclaration[25028-25199]:MethodDeclaration[25112-25283]"
    }, {
      "left" : "PropListItem createProp(int propType, Object value, PropListItem next)",
      "right" : "PropListItem createProp(int propType, Object value, PropListItem next)",
      "info" : "MethodDeclaration[25203-25337]:MethodDeclaration[25287-25421]"
    }, {
      "left" : "PropListItem createProp(int propType, int value, PropListItem next)",
      "right" : "PropListItem createProp(int propType, int value, PropListItem next)",
      "info" : "MethodDeclaration[25341-25469]:MethodDeclaration[25425-25553]"
    }, {
      "left" : "private int[] getSortedPropTypes()",
      "right" : "private int[] getSortedPropTypes()",
      "info" : "MethodDeclaration[25524-25873]:MethodDeclaration[25608-25957]"
    }, {
      "left" : "public double getDouble() throws UnsupportedOperationException",
      "right" : "public double getDouble() throws UnsupportedOperationException",
      "info" : "MethodDeclaration[25877-26256]:MethodDeclaration[25961-26340]"
    }, {
      "left" : "public void setDouble(double value) throws UnsupportedOperationException",
      "right" : "public void setDouble(double value) throws UnsupportedOperationException",
      "info" : "MethodDeclaration[26260-26683]:MethodDeclaration[26344-26767]"
    }, {
      "left" : "public String getString() throws UnsupportedOperationException",
      "right" : "public String getString() throws UnsupportedOperationException",
      "info" : "MethodDeclaration[26687-27050]:MethodDeclaration[26771-27134]"
    }, {
      "left" : "public void setString(String value) throws UnsupportedOperationException",
      "right" : "public void setString(String value) throws UnsupportedOperationException",
      "info" : "MethodDeclaration[27054-27507]:MethodDeclaration[27138-27591]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[27511-27592]:MethodDeclaration[27595-27676]"
    }, {
      "left" : "public String toString(\n      boolean printSource,\n      boolean printAnnotations,\n      boolean printType)",
      "right" : "public String toString(\n      boolean printSource,\n      boolean printAnnotations,\n      boolean printType)",
      "info" : "MethodDeclaration[27596-27839]:MethodDeclaration[27680-27923]"
    }, {
      "left" : "private void toString(\n      StringBuilder sb,\n      boolean printSource,\n      boolean printAnnotations,\n      boolean printType)",
      "right" : "private void toString(\n      StringBuilder sb,\n      boolean printSource,\n      boolean printAnnotations,\n      boolean printType)",
      "info" : "MethodDeclaration[27843-29424]:MethodDeclaration[27927-29508]"
    }, {
      "left" : "public String toStringTree()",
      "right" : "public String toStringTree()",
      "info" : "MethodDeclaration[29429-29494]:MethodDeclaration[29513-29578]"
    }, {
      "left" : "private String toStringTreeImpl()",
      "right" : "private String toStringTreeImpl()",
      "info" : "MethodDeclaration[29498-29743]:MethodDeclaration[29582-29827]"
    }, {
      "left" : "public void appendStringTree(Appendable appendable) throws IOException",
      "right" : "public void appendStringTree(Appendable appendable) throws IOException",
      "info" : "MethodDeclaration[29747-29868]:MethodDeclaration[29831-29952]"
    }, {
      "left" : "private static void toStringTreeHelper(Node n, int level, Appendable sb)\n      throws IOException",
      "right" : "private static void toStringTreeHelper(Node n, int level, Appendable sb)\n      throws IOException",
      "info" : "MethodDeclaration[29872-30255]:MethodDeclaration[29956-30339]"
    }, {
      "left" : "int type;",
      "right" : "int type;",
      "info" : "FieldDeclaration[30259-30268]:FieldDeclaration[30343-30352]"
    }, {
      "left" : "Node next;",
      "right" : "Node next;",
      "info" : "FieldDeclaration[30328-30338]:FieldDeclaration[30412-30422]"
    }, {
      "left" : "private Node first;",
      "right" : "private Node first;",
      "info" : "FieldDeclaration[30369-30388]:FieldDeclaration[30453-30472]"
    }, {
      "left" : "private Node last;",
      "right" : "private Node last;",
      "info" : "FieldDeclaration[30440-30458]:FieldDeclaration[30524-30542]"
    }, {
      "left" : "private PropListItem propListHead;",
      "right" : "private PropListItem propListHead;",
      "info" : "FieldDeclaration[30511-30787]:FieldDeclaration[30595-30871]"
    }, {
      "left" : "public static final int COLUMN_BITS = 12;",
      "right" : "public static final int COLUMN_BITS = 12;",
      "info" : "FieldDeclaration[30791-31188]:FieldDeclaration[30875-31272]"
    }, {
      "left" : "public static final int MAX_COLUMN_NUMBER = (1 << COLUMN_BITS) - 1;",
      "right" : "public static final int MAX_COLUMN_NUMBER = (1 << COLUMN_BITS) - 1;",
      "info" : "FieldDeclaration[31192-31476]:FieldDeclaration[31276-31560]"
    }, {
      "left" : "public static final int COLUMN_MASK = MAX_COLUMN_NUMBER;",
      "right" : "public static final int COLUMN_MASK = MAX_COLUMN_NUMBER;",
      "info" : "FieldDeclaration[31480-31734]:FieldDeclaration[31564-31818]"
    }, {
      "left" : "private int sourcePosition;",
      "right" : "private int sourcePosition;",
      "info" : "FieldDeclaration[31738-32010]:FieldDeclaration[31822-32094]"
    }, {
      "left" : "private JSType jsType;",
      "right" : "private JSType jsType;",
      "info" : "FieldDeclaration[32014-32036]:FieldDeclaration[32098-32120]"
    }, {
      "left" : "private Node parent;",
      "right" : "private Node parent;",
      "info" : "FieldDeclaration[32040-32060]:FieldDeclaration[32124-32144]"
    }, {
      "left" : "public void setStaticSourceFile(StaticSourceFile file)",
      "right" : "public void setStaticSourceFile(StaticSourceFile file)",
      "info" : "MethodDeclaration[32176-32280]:MethodDeclaration[32260-32364]"
    }, {
      "left" : "public void setSourceFileForTesting(String name)",
      "right" : "public void setSourceFileForTesting(String name)",
      "info" : "MethodDeclaration[32284-32481]:MethodDeclaration[32368-32565]"
    }, {
      "left" : "public String getSourceFileName()",
      "right" : "public String getSourceFileName()",
      "info" : "MethodDeclaration[32485-32624]:MethodDeclaration[32569-32708]"
    }, {
      "left" : "public StaticSourceFile getStaticSourceFile()",
      "right" : "public StaticSourceFile getStaticSourceFile()",
      "info" : "MethodDeclaration[32628-32818]:MethodDeclaration[32712-32902]"
    }, {
      "left" : "public void setInputId(InputId inputId)",
      "right" : "public void setInputId(InputId inputId)",
      "info" : "MethodDeclaration[32822-32936]:MethodDeclaration[32906-33020]"
    }, {
      "left" : "public InputId getInputId()",
      "right" : "public InputId getInputId()",
      "info" : "MethodDeclaration[32940-33100]:MethodDeclaration[33024-33184]"
    }, {
      "left" : "public boolean isFromExterns()",
      "right" : "public boolean isFromExterns()",
      "info" : "MethodDeclaration[33104-33242]:MethodDeclaration[33188-33326]"
    }, {
      "left" : "public int getLength()",
      "right" : "public int getLength()",
      "info" : "MethodDeclaration[33246-33305]:MethodDeclaration[33330-33389]"
    }, {
      "left" : "public void setLength(int length)",
      "right" : "public void setLength(int length)",
      "info" : "MethodDeclaration[33309-33380]:MethodDeclaration[33393-33464]"
    }, {
      "left" : "public int getLineno()",
      "right" : "public int getLineno()",
      "info" : "MethodDeclaration[33384-33454]:MethodDeclaration[33468-33538]"
    }, {
      "left" : "public int getCharno()",
      "right" : "public int getCharno()",
      "info" : "MethodDeclaration[33458-33528]:MethodDeclaration[33542-33612]"
    }, {
      "left" : "public int getSourceOffset()",
      "right" : "public int getSourceOffset()",
      "info" : "MethodDeclaration[33532-33794]:MethodDeclaration[33616-33878]"
    }, {
      "left" : "public int getSourcePosition()",
      "right" : "public int getSourcePosition()",
      "info" : "MethodDeclaration[33798-33861]:MethodDeclaration[33882-33945]"
    }, {
      "left" : "public void setLineno(int lineno)",
      "right" : "public void setLineno(int lineno)",
      "info" : "MethodDeclaration[33865-34046]:MethodDeclaration[33949-34130]"
    }, {
      "left" : "public void setCharno(int charno)",
      "right" : "public void setCharno(int charno)",
      "info" : "MethodDeclaration[34050-34150]:MethodDeclaration[34134-34234]"
    }, {
      "left" : "public void setSourceEncodedPosition(int sourcePosition)",
      "right" : "public void setSourceEncodedPosition(int sourcePosition)",
      "info" : "MethodDeclaration[34154-34258]:MethodDeclaration[34238-34342]"
    }, {
      "left" : "public void setSourceEncodedPositionForTree(int sourcePosition)",
      "right" : "public void setSourceEncodedPositionForTree(int sourcePosition)",
      "info" : "MethodDeclaration[34262-34531]:MethodDeclaration[34346-34615]"
    }, {
      "left" : "protected static int mergeLineCharNo(int lineno, int charno)",
      "right" : "protected static int mergeLineCharNo(int lineno, int charno)",
      "info" : "MethodDeclaration[34535-35123]:MethodDeclaration[34619-35207]"
    }, {
      "left" : "protected static int extractLineno(int lineCharNo)",
      "right" : "protected static int extractLineno(int lineCharNo)",
      "info" : "MethodDeclaration[35127-35429]:MethodDeclaration[35211-35513]"
    }, {
      "left" : "protected static int extractCharno(int lineCharNo)",
      "right" : "protected static int extractCharno(int lineCharNo)",
      "info" : "MethodDeclaration[35433-35738]:MethodDeclaration[35517-35822]"
    }, {
      "left" : "public Iterable<Node> children()",
      "right" : "public Iterable<Node> children()",
      "info" : "MethodDeclaration[35837-36321]:MethodDeclaration[35921-36405]"
    }, {
      "left" : "public Iterable<Node> siblings()",
      "right" : "public Iterable<Node> siblings()",
      "info" : "MethodDeclaration[36325-36727]:MethodDeclaration[36409-36811]"
    }, {
      "left" : "SiblingNodeIterable",
      "right" : "SiblingNodeIterable",
      "info" : "TypeDeclaration[36731-37981]:TypeDeclaration[36815-38065]"
    }, {
      "left" : "private final Node start;",
      "right" : "private final Node start;",
      "info" : "FieldDeclaration[36870-36895]:FieldDeclaration[36954-36979]"
    }, {
      "left" : "private Node current;",
      "right" : "private Node current;",
      "info" : "FieldDeclaration[36900-36921]:FieldDeclaration[36984-37005]"
    }, {
      "left" : "private boolean used;",
      "right" : "private boolean used;",
      "info" : "FieldDeclaration[36926-36947]:FieldDeclaration[37010-37031]"
    }, {
      "left" : "SiblingNodeIterable(Node start)",
      "right" : "SiblingNodeIterable(Node start)",
      "info" : "MethodDeclaration[36953-37071]:MethodDeclaration[37037-37155]"
    }, {
      "left" : "public Iterator<Node> iterator()",
      "right" : "public Iterator<Node> iterator()",
      "info" : "MethodDeclaration[37077-37572]:MethodDeclaration[37161-37656]"
    }, {
      "left" : "public boolean hasNext()",
      "right" : "public boolean hasNext()",
      "info" : "MethodDeclaration[37578-37654]:MethodDeclaration[37662-37738]"
    }, {
      "left" : "public Node next()",
      "right" : "public Node next()",
      "info" : "MethodDeclaration[37660-37880]:MethodDeclaration[37744-37964]"
    }, {
      "left" : "public void remove()",
      "right" : "public void remove()",
      "info" : "MethodDeclaration[37886-37977]:MethodDeclaration[37970-38061]"
    }, {
      "left" : "PropListItem getPropListHeadForTesting()",
      "right" : "PropListItem getPropListHeadForTesting()",
      "info" : "MethodDeclaration[38081-38152]:MethodDeclaration[38165-38236]"
    }, {
      "left" : "public Node getParent()",
      "right" : "public Node getParent()",
      "info" : "MethodDeclaration[38156-38204]:MethodDeclaration[38240-38288]"
    }, {
      "left" : "public Node getAncestor(int level)",
      "right" : "public Node getAncestor(int level)",
      "info" : "MethodDeclaration[38208-38523]:MethodDeclaration[38292-38607]"
    }, {
      "left" : "public AncestorIterable getAncestors()",
      "right" : "public AncestorIterable getAncestors()",
      "info" : "MethodDeclaration[38527-38694]:MethodDeclaration[38611-38778]"
    }, {
      "left" : "AncestorIterable",
      "right" : "AncestorIterable",
      "info" : "TypeDeclaration[38698-39491]:TypeDeclaration[38782-39575]"
    }, {
      "left" : "private Node cur;",
      "right" : "private Node cur;",
      "info" : "FieldDeclaration[38821-38838]:FieldDeclaration[38905-38922]"
    }, {
      "left" : "AncestorIterable(Node cur)",
      "right" : "AncestorIterable(Node cur)",
      "info" : "MethodDeclaration[38844-38953]:MethodDeclaration[38928-39037]"
    }, {
      "left" : "public Iterator<Node> iterator()",
      "right" : "public Iterator<Node> iterator()",
      "info" : "MethodDeclaration[38959-39487]:MethodDeclaration[39043-39571]"
    }, {
      "left" : "public boolean hasNext()",
      "right" : "public boolean hasNext()",
      "info" : "MethodDeclaration[39052-39136]:MethodDeclaration[39136-39220]"
    }, {
      "left" : "public Node next()",
      "right" : "public Node next()",
      "info" : "MethodDeclaration[39146-39359]:MethodDeclaration[39230-39443]"
    }, {
      "left" : "public void remove()",
      "right" : "public void remove()",
      "info" : "MethodDeclaration[39369-39472]:MethodDeclaration[39453-39556]"
    }, {
      "left" : "public boolean hasOneChild()",
      "right" : "public boolean hasOneChild()",
      "info" : "MethodDeclaration[39495-39767]:MethodDeclaration[39579-39851]"
    }, {
      "left" : "public boolean hasMoreThanOneChild()",
      "right" : "public boolean hasMoreThanOneChild()",
      "info" : "MethodDeclaration[39771-40059]:MethodDeclaration[39855-40143]"
    }, {
      "left" : "public int getChildCount()",
      "right" : "public int getChildCount()",
      "info" : "MethodDeclaration[40063-40191]:MethodDeclaration[40147-40275]"
    }, {
      "left" : "public boolean hasChild(Node child)",
      "right" : "public boolean hasChild(Node child)",
      "info" : "MethodDeclaration[40244-40417]:MethodDeclaration[40328-40501]"
    }, {
      "left" : "public String checkTreeEquals(Node node2)",
      "right" : "public String checkTreeEquals(Node node2)",
      "info" : "MethodDeclaration[40421-40990]:MethodDeclaration[40505-41074]"
    }, {
      "left" : "NodeMismatch checkTreeEqualsImpl(Node node2)",
      "right" : "NodeMismatch checkTreeEqualsImpl(Node node2)",
      "info" : "MethodDeclaration[40994-41722]:MethodDeclaration[41078-41806]"
    }, {
      "left" : "NodeMismatch checkTreeTypeAwareEqualsImpl(Node node2)",
      "right" : "NodeMismatch checkTreeTypeAwareEqualsImpl(Node node2)",
      "info" : "MethodDeclaration[41726-42438]:MethodDeclaration[41810-42522]"
    }, {
      "left" : "public boolean isEquivalentTo(Node node)",
      "right" : "public boolean isEquivalentTo(Node node)",
      "info" : "MethodDeclaration[42442-42614]:MethodDeclaration[42526-42698]"
    }, {
      "left" : "public boolean isEquivalentToShallow(Node node)",
      "right" : "public boolean isEquivalentToShallow(Node node)",
      "info" : "MethodDeclaration[42618-42786]:MethodDeclaration[42702-42870]"
    }, {
      "left" : "public boolean isEquivalentToTyped(Node node)",
      "right" : "public boolean isEquivalentToTyped(Node node)",
      "info" : "MethodDeclaration[42790-43009]:MethodDeclaration[42874-43093]"
    }, {
      "left" : "boolean isEquivalentTo(\n      Node node, boolean compareJsType, boolean recur, boolean shallow)",
      "right" : "boolean isEquivalentTo(\n      Node node, boolean compareJsType, boolean recur, boolean shallow)",
      "info" : "MethodDeclaration[43013-44853]:MethodDeclaration[43097-44937]"
    }, {
      "left" : "public String getQualifiedName()",
      "right" : "public String getQualifiedName()",
      "info" : "MethodDeclaration[44857-45665]:MethodDeclaration[44941-45749]"
    }, {
      "left" : "public boolean isQualifiedName()",
      "right" : "public boolean isQualifiedName()",
      "info" : "MethodDeclaration[45669-46130]:MethodDeclaration[45753-46214]"
    }, {
      "left" : "public boolean isUnscopedQualifiedName()",
      "right" : "public boolean isUnscopedQualifiedName()",
      "info" : "MethodDeclaration[46134-46588]:MethodDeclaration[46218-46672]"
    }, {
      "left" : "public Node detachFromParent()",
      "right" : "public Node detachFromParent()",
      "info" : "MethodDeclaration[46687-46920]:MethodDeclaration[46771-47004]"
    }, {
      "left" : "public Node removeFirstChild()",
      "right" : "public Node removeFirstChild()",
      "info" : "MethodDeclaration[46924-47205]:MethodDeclaration[47008-47289]"
    }, {
      "left" : "public Node removeChildren()",
      "right" : "public Node removeChildren()",
      "info" : "MethodDeclaration[47209-47504]:MethodDeclaration[47293-47588]"
    }, {
      "left" : "public void detachChildren()",
      "right" : "public void detachChildren()",
      "info" : "MethodDeclaration[47508-47848]:MethodDeclaration[47592-47932]"
    }, {
      "left" : "public Node removeChildAfter(Node prev)",
      "right" : "public Node removeChildAfter(Node prev)",
      "info" : "MethodDeclaration[47852-48249]:MethodDeclaration[47936-48333]"
    }, {
      "left" : "public Node cloneNode()",
      "right" : "public Node cloneNode()",
      "info" : "MethodDeclaration[48253-48774]:MethodDeclaration[48337-48858]"
    }, {
      "left" : "public Node cloneTree()",
      "right" : "public Node cloneTree()",
      "info" : "MethodDeclaration[48778-49256]:MethodDeclaration[48862-49340]"
    }, {
      "left" : "// TODO(nicksantos): The semantics of this method are ill-defined. Delete it.\n  public Node copyInformationFrom(Node other)",
      "right" : "// TODO(nicksantos): The semantics of this method are ill-defined. Delete it.\n  public Node copyInformationFrom(Node other)",
      "info" : "MethodDeclaration[49260-49909]:MethodDeclaration[49344-49993]"
    }, {
      "left" : "// TODO(nicksantos): The semantics of this method are ill-defined. Delete it.\n  public Node copyInformationFromForTree(Node other)",
      "right" : "// TODO(nicksantos): The semantics of this method are ill-defined. Delete it.\n  public Node copyInformationFromForTree(Node other)",
      "info" : "MethodDeclaration[49913-50382]:MethodDeclaration[49997-50466]"
    }, {
      "left" : "public Node useSourceInfoFrom(Node other)",
      "right" : "public Node useSourceInfoFrom(Node other)",
      "info" : "MethodDeclaration[50386-50727]:MethodDeclaration[50470-50811]"
    }, {
      "left" : "public Node srcref(Node other)",
      "right" : "public Node srcref(Node other)",
      "info" : "MethodDeclaration[50731-50804]:MethodDeclaration[50815-50888]"
    }, {
      "left" : "public Node useSourceInfoFromForTree(Node other)",
      "right" : "public Node useSourceInfoFromForTree(Node other)",
      "info" : "MethodDeclaration[50808-51167]:MethodDeclaration[50892-51251]"
    }, {
      "left" : "public Node srcrefTree(Node other)",
      "right" : "public Node srcrefTree(Node other)",
      "info" : "MethodDeclaration[51171-51255]:MethodDeclaration[51255-51339]"
    }, {
      "left" : "public Node useSourceInfoIfMissingFrom(Node other)",
      "right" : "public Node useSourceInfoIfMissingFrom(Node other)",
      "info" : "MethodDeclaration[51259-51753]:MethodDeclaration[51343-51837]"
    }, {
      "left" : "public Node useSourceInfoIfMissingFromForTree(Node other)",
      "right" : "public Node useSourceInfoIfMissingFromForTree(Node other)",
      "info" : "MethodDeclaration[51757-52174]:MethodDeclaration[51841-52258]"
    }, {
      "left" : "public JSType getJSType()",
      "right" : "public JSType getJSType()",
      "info" : "MethodDeclaration[52282-52334]:MethodDeclaration[52366-52418]"
    }, {
      "left" : "public void setJSType(JSType jsType)",
      "right" : "public void setJSType(JSType jsType)",
      "info" : "MethodDeclaration[52338-52408]:MethodDeclaration[52422-52492]"
    }, {
      "left" : "public FileLevelJsDocBuilder getJsDocBuilderForNode()",
      "right" : "public FileLevelJsDocBuilder getJsDocBuilderForNode()",
      "info" : "MethodDeclaration[52412-52511]:MethodDeclaration[52496-52595]"
    }, {
      "left" : "FileLevelJsDocBuilder",
      "right" : "FileLevelJsDocBuilder",
      "info" : "TypeDeclaration[52515-53410]:TypeDeclaration[52599-53494]"
    }, {
      "left" : "public void append(String fileLevelComment)",
      "right" : "public void append(String fileLevelComment)",
      "info" : "MethodDeclaration[52923-53406]:MethodDeclaration[53007-53490]"
    }, {
      "left" : "public JSDocInfo getJSDocInfo()",
      "right" : "public JSDocInfo getJSDocInfo()",
      "info" : "MethodDeclaration[53414-53653]:MethodDeclaration[53498-53737]"
    }, {
      "left" : "public Node setJSDocInfo(JSDocInfo info)",
      "right" : "public Node setJSDocInfo(JSDocInfo info)",
      "info" : "MethodDeclaration[53657-53827]:MethodDeclaration[53741-53911]"
    }, {
      "left" : "public void setChangeTime(int time)",
      "right" : "public void setChangeTime(int time)",
      "info" : "MethodDeclaration[53831-53959]:MethodDeclaration[53915-54043]"
    }, {
      "left" : "public int getChangeTime()",
      "right" : "public int getChangeTime()",
      "info" : "MethodDeclaration[53963-54090]:MethodDeclaration[54047-54174]"
    }, {
      "left" : "public void setVarArgs(boolean varArgs)",
      "right" : "public void setVarArgs(boolean varArgs)",
      "info" : "MethodDeclaration[54094-54385]:MethodDeclaration[54178-54469]"
    }, {
      "left" : "public boolean isVarArgs()",
      "right" : "public boolean isVarArgs()",
      "info" : "MethodDeclaration[54389-54683]:MethodDeclaration[54473-54767]"
    }, {
      "left" : "public void setOptionalArg(boolean optionalArg)",
      "right" : "public void setOptionalArg(boolean optionalArg)",
      "info" : "MethodDeclaration[54687-54983]:MethodDeclaration[54771-55067]"
    }, {
      "left" : "public boolean isOptionalArg()",
      "right" : "public boolean isOptionalArg()",
      "info" : "MethodDeclaration[54987-55278]:MethodDeclaration[55071-55362]"
    }, {
      "left" : "public void setIsSyntheticBlock(boolean val)",
      "right" : "public void setIsSyntheticBlock(boolean val)",
      "info" : "MethodDeclaration[55282-55491]:MethodDeclaration[55366-55575]"
    }, {
      "left" : "public boolean isSyntheticBlock()",
      "right" : "public boolean isSyntheticBlock()",
      "info" : "MethodDeclaration[55495-55698]:MethodDeclaration[55579-55782]"
    }, {
      "left" : "public void setDirectives(Set<String> val)",
      "right" : "public void setDirectives(Set<String> val)",
      "info" : "MethodDeclaration[55702-55835]:MethodDeclaration[55786-55919]"
    }, {
      "left" : "public Set<String> getDirectives()",
      "right" : "public Set<String> getDirectives()",
      "info" : "MethodDeclaration[55839-56024]:MethodDeclaration[55923-56108]"
    }, {
      "left" : "public void addSuppression(String warning)",
      "right" : "public void addSuppression(String warning)",
      "info" : "MethodDeclaration[56028-56332]:MethodDeclaration[56112-56416]"
    }, {
      "left" : "public void setWasEmptyNode(boolean val)",
      "right" : "public void setWasEmptyNode(boolean val)",
      "info" : "MethodDeclaration[56336-56532]:MethodDeclaration[56420-56616]"
    }, {
      "left" : "public boolean wasEmptyNode()",
      "right" : "public boolean wasEmptyNode()",
      "info" : "MethodDeclaration[56536-56726]:MethodDeclaration[56620-56810]"
    }, {
      "left" : "public static final int FLAG_GLOBAL_STATE_UNMODIFIED = 1;",
      "right" : "public static final int FLAG_GLOBAL_STATE_UNMODIFIED = 1;",
      "info" : "FieldDeclaration[57024-57081]:FieldDeclaration[57108-57165]"
    }, {
      "left" : "public static final int FLAG_THIS_UNMODIFIED = 2;",
      "right" : "public static final int FLAG_THIS_UNMODIFIED = 2;",
      "info" : "FieldDeclaration[57084-57133]:FieldDeclaration[57168-57217]"
    }, {
      "left" : "public static final int FLAG_ARGUMENTS_UNMODIFIED = 4;",
      "right" : "public static final int FLAG_ARGUMENTS_UNMODIFIED = 4;",
      "info" : "FieldDeclaration[57136-57190]:FieldDeclaration[57220-57274]"
    }, {
      "left" : "public static final int FLAG_NO_THROWS = 8;",
      "right" : "public static final int FLAG_NO_THROWS = 8;",
      "info" : "FieldDeclaration[57193-57236]:FieldDeclaration[57277-57320]"
    }, {
      "left" : "public static final int FLAG_LOCAL_RESULTS = 16;",
      "right" : "public static final int FLAG_LOCAL_RESULTS = 16;",
      "info" : "FieldDeclaration[57239-57287]:FieldDeclaration[57323-57371]"
    }, {
      "left" : "public static final int SIDE_EFFECTS_FLAGS_MASK = 31;",
      "right" : "public static final int SIDE_EFFECTS_FLAGS_MASK = 31;",
      "info" : "FieldDeclaration[57291-57344]:FieldDeclaration[57375-57428]"
    }, {
      "left" : "public static final int SIDE_EFFECTS_ALL = 0;",
      "right" : "public static final int SIDE_EFFECTS_ALL = 0;",
      "info" : "FieldDeclaration[57348-57393]:FieldDeclaration[57432-57477]"
    }, {
      "left" : "public static final int NO_SIDE_EFFECTS =\n    FLAG_GLOBAL_STATE_UNMODIFIED\n    | FLAG_THIS_UNMODIFIED\n    | FLAG_ARGUMENTS_UNMODIFIED\n    | FLAG_NO_THROWS;",
      "right" : "public static final int NO_SIDE_EFFECTS =\n    FLAG_GLOBAL_STATE_UNMODIFIED\n    | FLAG_THIS_UNMODIFIED\n    | FLAG_ARGUMENTS_UNMODIFIED\n    | FLAG_NO_THROWS;",
      "info" : "FieldDeclaration[57396-57551]:FieldDeclaration[57480-57635]"
    }, {
      "left" : "public void setSideEffectFlags(int flags)",
      "right" : "public void setSideEffectFlags(int flags)",
      "info" : "MethodDeclaration[57555-58013]:MethodDeclaration[57639-58097]"
    }, {
      "left" : "public void setSideEffectFlags(SideEffectFlags flags)",
      "right" : "public void setSideEffectFlags(SideEffectFlags flags)",
      "info" : "MethodDeclaration[58017-58117]:MethodDeclaration[58101-58201]"
    }, {
      "left" : "public int getSideEffectFlags()",
      "right" : "public int getSideEffectFlags()",
      "info" : "MethodDeclaration[58121-58263]:MethodDeclaration[58205-58347]"
    }, {
      "left" : "SideEffectFlags",
      "right" : "SideEffectFlags",
      "info" : "TypeDeclaration[58267-60194]:TypeDeclaration[58351-60278]"
    }, {
      "left" : "private int value = Node.SIDE_EFFECTS_ALL;",
      "right" : "private int value = Node.SIDE_EFFECTS_ALL;",
      "info" : "FieldDeclaration[58433-58475]:FieldDeclaration[58517-58559]"
    }, {
      "left" : "public SideEffectFlags()",
      "right" : "public SideEffectFlags()",
      "info" : "MethodDeclaration[58481-58513]:MethodDeclaration[58565-58597]"
    }, {
      "left" : "public SideEffectFlags(int value)",
      "right" : "public SideEffectFlags(int value)",
      "info" : "MethodDeclaration[58519-58586]:MethodDeclaration[58603-58670]"
    }, {
      "left" : "public int valueOf()",
      "right" : "public int valueOf()",
      "info" : "MethodDeclaration[58592-58640]:MethodDeclaration[58676-58724]"
    }, {
      "left" : "public SideEffectFlags setAllFlags()",
      "right" : "public SideEffectFlags setAllFlags()",
      "info" : "MethodDeclaration[58646-58819]:MethodDeclaration[58730-58903]"
    }, {
      "left" : "public SideEffectFlags clearAllFlags()",
      "right" : "public SideEffectFlags clearAllFlags()",
      "info" : "MethodDeclaration[58825-59021]:MethodDeclaration[58909-59105]"
    }, {
      "left" : "public boolean areAllFlagsSet()",
      "right" : "public boolean areAllFlagsSet()",
      "info" : "MethodDeclaration[59027-59111]:MethodDeclaration[59111-59195]"
    }, {
      "left" : "public void clearSideEffectFlags()",
      "right" : "public void clearSideEffectFlags()",
      "info" : "MethodDeclaration[59117-59354]:MethodDeclaration[59201-59438]"
    }, {
      "left" : "public SideEffectFlags setMutatesGlobalState()",
      "right" : "public SideEffectFlags setMutatesGlobalState()",
      "info" : "MethodDeclaration[59360-59653]:MethodDeclaration[59444-59737]"
    }, {
      "left" : "public SideEffectFlags setThrows()",
      "right" : "public SideEffectFlags setThrows()",
      "info" : "MethodDeclaration[59659-59759]:MethodDeclaration[59743-59843]"
    }, {
      "left" : "public SideEffectFlags setMutatesThis()",
      "right" : "public SideEffectFlags setMutatesThis()",
      "info" : "MethodDeclaration[59765-59876]:MethodDeclaration[59849-59960]"
    }, {
      "left" : "public SideEffectFlags setMutatesArguments()",
      "right" : "public SideEffectFlags setMutatesArguments()",
      "info" : "MethodDeclaration[59882-60003]:MethodDeclaration[59966-60087]"
    }, {
      "left" : "public SideEffectFlags setReturnsTainted()",
      "right" : "public SideEffectFlags setReturnsTainted()",
      "info" : "MethodDeclaration[60009-60121]:MethodDeclaration[60093-60205]"
    }, {
      "left" : "private void removeFlag(int flag)",
      "right" : "private void removeFlag(int flag)",
      "info" : "MethodDeclaration[60127-60190]:MethodDeclaration[60211-60274]"
    }, {
      "left" : "public boolean isOnlyModifiesThisCall()",
      "right" : "public boolean isOnlyModifiesThisCall()",
      "info" : "MethodDeclaration[60198-60519]:MethodDeclaration[60282-60603]"
    }, {
      "left" : "public boolean isOnlyModifiesArgumentsCall()",
      "right" : "public boolean isOnlyModifiesArgumentsCall()",
      "info" : "MethodDeclaration[60523-60849]:MethodDeclaration[60607-60933]"
    }, {
      "left" : "public boolean isNoSideEffectsCall()",
      "right" : "public boolean isNoSideEffectsCall()",
      "info" : "MethodDeclaration[60853-61069]:MethodDeclaration[60937-61153]"
    }, {
      "left" : "public boolean isLocalResultCall()",
      "right" : "public boolean isLocalResultCall()",
      "info" : "MethodDeclaration[61073-61354]:MethodDeclaration[61157-61438]"
    }, {
      "left" : "public boolean mayMutateArguments()",
      "right" : "public boolean mayMutateArguments()",
      "info" : "MethodDeclaration[61358-61551]:MethodDeclaration[61442-61635]"
    }, {
      "left" : "public boolean mayMutateGlobalStateOrThrow()",
      "right" : "public boolean mayMutateGlobalStateOrThrow()",
      "info" : "MethodDeclaration[61555-61793]:MethodDeclaration[61639-61877]"
    }, {
      "left" : "private boolean areBitFlagsSet(int value, int flags)",
      "right" : "private boolean areBitFlagsSet(int value, int flags)",
      "info" : "MethodDeclaration[61797-61957]:MethodDeclaration[61881-62041]"
    }, {
      "left" : "public boolean isQuotedString()",
      "right" : "public boolean isQuotedString()",
      "info" : "MethodDeclaration[61961-62100]:MethodDeclaration[62045-62184]"
    }, {
      "left" : "public void setQuotedString()",
      "right" : "public void setQuotedString()",
      "info" : "MethodDeclaration[62104-62280]:MethodDeclaration[62188-62364]"
    }, {
      "left" : "NodeMismatch",
      "right" : "NodeMismatch",
      "info" : "TypeDeclaration[62284-62821]:TypeDeclaration[62368-62905]"
    }, {
      "left" : "final Node nodeA;",
      "right" : "final Node nodeA;",
      "info" : "FieldDeclaration[62316-62333]:FieldDeclaration[62400-62417]"
    }, {
      "left" : "final Node nodeB;",
      "right" : "final Node nodeB;",
      "info" : "FieldDeclaration[62338-62355]:FieldDeclaration[62422-62439]"
    }, {
      "left" : "NodeMismatch(Node nodeA, Node nodeB)",
      "right" : "NodeMismatch(Node nodeA, Node nodeB)",
      "info" : "MethodDeclaration[62361-62457]:MethodDeclaration[62445-62541]"
    }, {
      "left" : "public boolean equals(Object object)",
      "right" : "public boolean equals(Object object)",
      "info" : "MethodDeclaration[62463-62723]:MethodDeclaration[62547-62807]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[62729-62817]:MethodDeclaration[62813-62901]"
    }, {
      "left" : "public boolean isAdd()",
      "right" : "public boolean isAdd()",
      "info" : "MethodDeclaration[62826-62930]:MethodDeclaration[62910-63014]"
    }, {
      "left" : "public boolean isAnd()",
      "right" : "public boolean isAnd()",
      "info" : "MethodDeclaration[62934-63002]:MethodDeclaration[63018-63086]"
    }, {
      "left" : "public boolean isArrayLit()",
      "right" : "public boolean isArrayLit()",
      "info" : "MethodDeclaration[63006-63084]:MethodDeclaration[63090-63168]"
    }, {
      "left" : "public boolean isAssign()",
      "right" : "public boolean isAssign()",
      "info" : "MethodDeclaration[63088-63162]:MethodDeclaration[63172-63246]"
    }, {
      "left" : "public boolean isAssignAdd()",
      "right" : "public boolean isAssignAdd()",
      "info" : "MethodDeclaration[63166-63247]:MethodDeclaration[63250-63331]"
    }, {
      "left" : "public boolean isBlock()",
      "right" : "public boolean isBlock()",
      "info" : "MethodDeclaration[63251-63323]:MethodDeclaration[63335-63407]"
    }, {
      "left" : "public boolean isBreak()",
      "right" : "public boolean isBreak()",
      "info" : "MethodDeclaration[63327-63399]:MethodDeclaration[63411-63483]"
    }, {
      "left" : "public boolean isCall()",
      "right" : "public boolean isCall()",
      "info" : "MethodDeclaration[63403-63473]:MethodDeclaration[63487-63557]"
    }, {
      "left" : "public boolean isCase()",
      "right" : "public boolean isCase()",
      "info" : "MethodDeclaration[63477-63547]:MethodDeclaration[63561-63631]"
    }, {
      "left" : "public boolean isCast()",
      "right" : "public boolean isCast()",
      "info" : "MethodDeclaration[63551-63621]:MethodDeclaration[63635-63705]"
    }, {
      "left" : "public boolean isCatch()",
      "right" : "public boolean isCatch()",
      "info" : "MethodDeclaration[63625-63697]:MethodDeclaration[63709-63781]"
    }, {
      "left" : "public boolean isComma()",
      "right" : "public boolean isComma()",
      "info" : "MethodDeclaration[63701-63773]:MethodDeclaration[63785-63857]"
    }, {
      "left" : "public boolean isContinue()",
      "right" : "public boolean isContinue()",
      "info" : "MethodDeclaration[63777-63855]:MethodDeclaration[63861-63939]"
    }, {
      "left" : "public boolean isDebugger()",
      "right" : "public boolean isDebugger()",
      "info" : "MethodDeclaration[63859-63937]:MethodDeclaration[63943-64021]"
    }, {
      "left" : "public boolean isDec()",
      "right" : "public boolean isDec()",
      "info" : "MethodDeclaration[63941-64009]:MethodDeclaration[64025-64093]"
    }, {
      "left" : "public boolean isDefaultCase()",
      "right" : "public boolean isDefaultCase()",
      "info" : "MethodDeclaration[64013-64098]:MethodDeclaration[64097-64182]"
    }, {
      "left" : "public boolean isDelProp()",
      "right" : "public boolean isDelProp()",
      "info" : "MethodDeclaration[64102-64178]:MethodDeclaration[64186-64262]"
    }, {
      "left" : "public boolean isDo()",
      "right" : "public boolean isDo()",
      "info" : "MethodDeclaration[64182-64248]:MethodDeclaration[64266-64332]"
    }, {
      "left" : "public boolean isEmpty()",
      "right" : "public boolean isEmpty()",
      "info" : "MethodDeclaration[64252-64324]:MethodDeclaration[64336-64408]"
    }, {
      "left" : "public boolean isExprResult()",
      "right" : "public boolean isExprResult()",
      "info" : "MethodDeclaration[64328-64411]:MethodDeclaration[64412-64495]"
    }, {
      "left" : "public boolean isFalse()",
      "right" : "public boolean isFalse()",
      "info" : "MethodDeclaration[64415-64487]:MethodDeclaration[64499-64571]"
    }, {
      "left" : "public boolean isFor()",
      "right" : "public boolean isFor()",
      "info" : "MethodDeclaration[64491-64559]:MethodDeclaration[64575-64643]"
    }, {
      "left" : "public boolean isFunction()",
      "right" : "public boolean isFunction()",
      "info" : "MethodDeclaration[64563-64641]:MethodDeclaration[64647-64725]"
    }, {
      "left" : "public boolean isGetterDef()",
      "right" : "public boolean isGetterDef()",
      "info" : "MethodDeclaration[64645-64726]:MethodDeclaration[64729-64810]"
    }, {
      "left" : "public boolean isGetElem()",
      "right" : "public boolean isGetElem()",
      "info" : "MethodDeclaration[64730-64806]:MethodDeclaration[64814-64890]"
    }, {
      "left" : "public boolean isGetProp()",
      "right" : "public boolean isGetProp()",
      "info" : "MethodDeclaration[64810-64886]:MethodDeclaration[64894-64970]"
    }, {
      "left" : "public boolean isHook()",
      "right" : "public boolean isHook()",
      "info" : "MethodDeclaration[64890-64960]:MethodDeclaration[64974-65044]"
    }, {
      "left" : "public boolean isIf()",
      "right" : "public boolean isIf()",
      "info" : "MethodDeclaration[64964-65030]:MethodDeclaration[65048-65114]"
    }, {
      "left" : "public boolean isIn()",
      "right" : "public boolean isIn()",
      "info" : "MethodDeclaration[65034-65100]:MethodDeclaration[65118-65184]"
    }, {
      "left" : "public boolean isInc()",
      "right" : "public boolean isInc()",
      "info" : "MethodDeclaration[65104-65172]:MethodDeclaration[65188-65256]"
    }, {
      "left" : "public boolean isInstanceOf()",
      "right" : "public boolean isInstanceOf()",
      "info" : "MethodDeclaration[65176-65258]:MethodDeclaration[65260-65342]"
    }, {
      "left" : "public boolean isLabel()",
      "right" : "public boolean isLabel()",
      "info" : "MethodDeclaration[65262-65334]:MethodDeclaration[65346-65418]"
    }, {
      "left" : "public boolean isLabelName()",
      "right" : "public boolean isLabelName()",
      "info" : "MethodDeclaration[65338-65419]:MethodDeclaration[65422-65503]"
    }, {
      "left" : "public boolean isName()",
      "right" : "public boolean isName()",
      "info" : "MethodDeclaration[65423-65493]:MethodDeclaration[65507-65577]"
    }, {
      "left" : "public boolean isNE()",
      "right" : "public boolean isNE()",
      "info" : "MethodDeclaration[65497-65563]:MethodDeclaration[65581-65647]"
    }, {
      "left" : "public boolean isNew()",
      "right" : "public boolean isNew()",
      "info" : "MethodDeclaration[65567-65635]:MethodDeclaration[65651-65719]"
    }, {
      "left" : "public boolean isNot()",
      "right" : "public boolean isNot()",
      "info" : "MethodDeclaration[65639-65707]:MethodDeclaration[65723-65791]"
    }, {
      "left" : "public boolean isNull()",
      "right" : "public boolean isNull()",
      "info" : "MethodDeclaration[65711-65781]:MethodDeclaration[65795-65865]"
    }, {
      "left" : "public boolean isNumber()",
      "right" : "public boolean isNumber()",
      "info" : "MethodDeclaration[65785-65859]:MethodDeclaration[65869-65943]"
    }, {
      "left" : "public boolean isObjectLit()",
      "right" : "public boolean isObjectLit()",
      "info" : "MethodDeclaration[65863-65943]:MethodDeclaration[65947-66027]"
    }, {
      "left" : "public boolean isOr()",
      "right" : "public boolean isOr()",
      "info" : "MethodDeclaration[65947-66013]:MethodDeclaration[66031-66097]"
    }, {
      "left" : "public boolean isParamList()",
      "right" : "public boolean isParamList()",
      "info" : "MethodDeclaration[66017-66098]:MethodDeclaration[66101-66182]"
    }, {
      "left" : "public boolean isRegExp()",
      "right" : "public boolean isRegExp()",
      "info" : "MethodDeclaration[66102-66176]:MethodDeclaration[66186-66260]"
    }, {
      "left" : "public boolean isReturn()",
      "right" : "public boolean isReturn()",
      "info" : "MethodDeclaration[66180-66254]:MethodDeclaration[66264-66338]"
    }, {
      "left" : "public boolean isScript()",
      "right" : "public boolean isScript()",
      "info" : "MethodDeclaration[66258-66332]:MethodDeclaration[66342-66416]"
    }, {
      "left" : "public boolean isSetterDef()",
      "right" : "public boolean isSetterDef()",
      "info" : "MethodDeclaration[66336-66417]:MethodDeclaration[66420-66501]"
    }, {
      "left" : "public boolean isString()",
      "right" : "public boolean isString()",
      "info" : "MethodDeclaration[66421-66495]:MethodDeclaration[66505-66579]"
    }, {
      "left" : "public boolean isStringKey()",
      "right" : "public boolean isStringKey()",
      "info" : "MethodDeclaration[66499-66580]:MethodDeclaration[66583-66664]"
    }, {
      "left" : "public boolean isSwitch()",
      "right" : "public boolean isSwitch()",
      "info" : "MethodDeclaration[66584-66658]:MethodDeclaration[66668-66742]"
    }, {
      "left" : "public boolean isThis()",
      "right" : "public boolean isThis()",
      "info" : "MethodDeclaration[66662-66732]:MethodDeclaration[66746-66816]"
    }, {
      "left" : "public boolean isThrow()",
      "right" : "public boolean isThrow()",
      "info" : "MethodDeclaration[66736-66808]:MethodDeclaration[66820-66892]"
    }, {
      "left" : "public boolean isTrue()",
      "right" : "public boolean isTrue()",
      "info" : "MethodDeclaration[66812-66882]:MethodDeclaration[66896-66966]"
    }, {
      "left" : "public boolean isTry()",
      "right" : "public boolean isTry()",
      "info" : "MethodDeclaration[66886-66954]:MethodDeclaration[66970-67038]"
    }, {
      "left" : "public boolean isTypeOf()",
      "right" : "public boolean isTypeOf()",
      "info" : "MethodDeclaration[66958-67032]:MethodDeclaration[67042-67116]"
    }, {
      "left" : "public boolean isVar()",
      "right" : "public boolean isVar()",
      "info" : "MethodDeclaration[67036-67104]:MethodDeclaration[67120-67188]"
    }, {
      "left" : "public boolean isVoid()",
      "right" : "public boolean isVoid()",
      "info" : "MethodDeclaration[67108-67178]:MethodDeclaration[67192-67262]"
    }, {
      "left" : "public boolean isWhile()",
      "right" : "public boolean isWhile()",
      "info" : "MethodDeclaration[67182-67254]:MethodDeclaration[67266-67338]"
    }, {
      "left" : "public boolean isWith()",
      "right" : "public boolean isWith()",
      "info" : "MethodDeclaration[67258-67328]:MethodDeclaration[67342-67412]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2238-2244]:Modifier[2238-2244]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2245-2250]:TYPE_DECLARATION_KIND[2245-2250]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[2251-2255]:SimpleName[2251-2255]"
    }, {
      "left" : "Cloneable",
      "right" : "Cloneable",
      "info" : "SimpleType[2267-2276]:SimpleType[2267-2276]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[2278-2290]:SimpleType[2278-2290]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[5242-5249]:Modifier[5242-5249]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5250-5256]:Modifier[5250-5256]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5257-5262]:Modifier[5257-5262]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5263-5269]:SimpleType[5263-5269]"
    }, {
      "left" : "propToString",
      "right" : "propToString",
      "info" : "SimpleName[5270-5282]:SimpleName[5270-5282]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[5283-5295]:SingleVariableDeclaration[5283-5295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5297-6603]:Block[5297-6603]"
    }, {
      "left" : "switch (propType) {\n        case VAR_ARGS_NAME:      return \"var_args_name\";\n\n        case JSDOC_INFO_PROP:    return \"jsdoc_info\";\n\n        case INCRDECR_PROP:      return \"incrdecr\";\n        case QUOTED_PROP:        return \"quoted\";\n        case OPT_ARG_NAME:       return \"opt_arg\";\n\n        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n        case EMPTY_BLOCK:        return \"empty_block\";\n        case ORIGINALNAME_PROP:  return \"originalname\";\n        case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n        case IS_CONSTANT_NAME:   return \"is_constant_name\";\n        case IS_NAMESPACE:       return \"is_namespace\";\n        case IS_DISPATCHER:      return \"is_dispatcher\";\n        case DIRECTIVES:         return \"directives\";\n        case DIRECT_EVAL:        return \"direct_eval\";\n        case FREE_CALL:          return \"free_call\";\n        case STATIC_SOURCE_FILE:    return \"source_file\";\n        case INPUT_ID:  return \"input_id\";\n        case LENGTH:    return \"length\";\n        case SLASH_V:   return \"slash_v\";\n        case INFERRED_FUNCTION:   return \"inferred\";\n        case CHANGE_TIME: return \"change_time\";\n        case REFLECTED_OBJECT: return \"reflected_object\";\n        default:\n          throw new IllegalStateException(\"unexpected prop id \" + propType);\n      }",
      "right" : "switch (propType) {\n        case VAR_ARGS_NAME:      return \"var_args_name\";\n\n        case JSDOC_INFO_PROP:    return \"jsdoc_info\";\n\n        case INCRDECR_PROP:      return \"incrdecr\";\n        case QUOTED_PROP:        return \"quoted\";\n        case OPT_ARG_NAME:       return \"opt_arg\";\n\n        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n        case EMPTY_BLOCK:        return \"empty_block\";\n        case ORIGINALNAME_PROP:  return \"originalname\";\n        case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n        case IS_CONSTANT_NAME:   return \"is_constant_name\";\n        case IS_NAMESPACE:       return \"is_namespace\";\n        case IS_DISPATCHER:      return \"is_dispatcher\";\n        case DIRECTIVES:         return \"directives\";\n        case DIRECT_EVAL:        return \"direct_eval\";\n        case FREE_CALL:          return \"free_call\";\n        case STATIC_SOURCE_FILE:    return \"source_file\";\n        case INPUT_ID:  return \"input_id\";\n        case LENGTH:    return \"length\";\n        case SLASH_V:   return \"slash_v\";\n        case INFERRED_FUNCTION:   return \"inferred\";\n        case CHANGE_TIME: return \"change_time\";\n        case REFLECTED_OBJECT: return \"reflected_object\";\n        default:\n          throw new IllegalStateException(\"unexpected prop id \" + propType);\n      }",
      "info" : "SwitchStatement[5305-6599]:SwitchStatement[5305-6599]"
    }, {
      "left" : "case VAR_ARGS_NAME:",
      "right" : "case VAR_ARGS_NAME:",
      "info" : "SwitchCase[5333-5352]:SwitchCase[5333-5352]"
    }, {
      "left" : "return \"var_args_name\";",
      "right" : "return \"var_args_name\";",
      "info" : "ReturnStatement[5358-5381]:ReturnStatement[5358-5381]"
    }, {
      "left" : "case JSDOC_INFO_PROP:",
      "right" : "case JSDOC_INFO_PROP:",
      "info" : "SwitchCase[5391-5412]:SwitchCase[5391-5412]"
    }, {
      "left" : "return \"jsdoc_info\";",
      "right" : "return \"jsdoc_info\";",
      "info" : "ReturnStatement[5416-5436]:ReturnStatement[5416-5436]"
    }, {
      "left" : "case INCRDECR_PROP:",
      "right" : "case INCRDECR_PROP:",
      "info" : "SwitchCase[5446-5465]:SwitchCase[5446-5465]"
    }, {
      "left" : "return \"incrdecr\";",
      "right" : "return \"incrdecr\";",
      "info" : "ReturnStatement[5471-5489]:ReturnStatement[5471-5489]"
    }, {
      "left" : "case QUOTED_PROP:",
      "right" : "case QUOTED_PROP:",
      "info" : "SwitchCase[5498-5515]:SwitchCase[5498-5515]"
    }, {
      "left" : "return \"quoted\";",
      "right" : "return \"quoted\";",
      "info" : "ReturnStatement[5523-5539]:ReturnStatement[5523-5539]"
    }, {
      "left" : "case OPT_ARG_NAME:",
      "right" : "case OPT_ARG_NAME:",
      "info" : "SwitchCase[5548-5566]:SwitchCase[5548-5566]"
    }, {
      "left" : "return \"opt_arg\";",
      "right" : "return \"opt_arg\";",
      "info" : "ReturnStatement[5573-5590]:ReturnStatement[5573-5590]"
    }, {
      "left" : "case SYNTHETIC_BLOCK_PROP:",
      "right" : "case SYNTHETIC_BLOCK_PROP:",
      "info" : "SwitchCase[5600-5626]:SwitchCase[5600-5626]"
    }, {
      "left" : "return \"synthetic\";",
      "right" : "return \"synthetic\";",
      "info" : "ReturnStatement[5627-5646]:ReturnStatement[5627-5646]"
    }, {
      "left" : "case EMPTY_BLOCK:",
      "right" : "case EMPTY_BLOCK:",
      "info" : "SwitchCase[5655-5672]:SwitchCase[5655-5672]"
    }, {
      "left" : "return \"empty_block\";",
      "right" : "return \"empty_block\";",
      "info" : "ReturnStatement[5680-5701]:ReturnStatement[5680-5701]"
    }, {
      "left" : "case ORIGINALNAME_PROP:",
      "right" : "case ORIGINALNAME_PROP:",
      "info" : "SwitchCase[5710-5733]:SwitchCase[5710-5733]"
    }, {
      "left" : "return \"originalname\";",
      "right" : "return \"originalname\";",
      "info" : "ReturnStatement[5735-5757]:ReturnStatement[5735-5757]"
    }, {
      "left" : "case SIDE_EFFECT_FLAGS:",
      "right" : "case SIDE_EFFECT_FLAGS:",
      "info" : "SwitchCase[5766-5789]:SwitchCase[5766-5789]"
    }, {
      "left" : "return \"side_effect_flags\";",
      "right" : "return \"side_effect_flags\";",
      "info" : "ReturnStatement[5791-5818]:ReturnStatement[5791-5818]"
    }, {
      "left" : "case IS_CONSTANT_NAME:",
      "right" : "case IS_CONSTANT_NAME:",
      "info" : "SwitchCase[5828-5850]:SwitchCase[5828-5850]"
    }, {
      "left" : "return \"is_constant_name\";",
      "right" : "return \"is_constant_name\";",
      "info" : "ReturnStatement[5853-5879]:ReturnStatement[5853-5879]"
    }, {
      "left" : "case IS_NAMESPACE:",
      "right" : "case IS_NAMESPACE:",
      "info" : "SwitchCase[5888-5906]:SwitchCase[5888-5906]"
    }, {
      "left" : "return \"is_namespace\";",
      "right" : "return \"is_namespace\";",
      "info" : "ReturnStatement[5913-5935]:ReturnStatement[5913-5935]"
    }, {
      "left" : "case IS_DISPATCHER:",
      "right" : "case IS_DISPATCHER:",
      "info" : "SwitchCase[5944-5963]:SwitchCase[5944-5963]"
    }, {
      "left" : "return \"is_dispatcher\";",
      "right" : "return \"is_dispatcher\";",
      "info" : "ReturnStatement[5969-5992]:ReturnStatement[5969-5992]"
    }, {
      "left" : "case DIRECTIVES:",
      "right" : "case DIRECTIVES:",
      "info" : "SwitchCase[6001-6017]:SwitchCase[6001-6017]"
    }, {
      "left" : "return \"directives\";",
      "right" : "return \"directives\";",
      "info" : "ReturnStatement[6026-6046]:ReturnStatement[6026-6046]"
    }, {
      "left" : "case DIRECT_EVAL:",
      "right" : "case DIRECT_EVAL:",
      "info" : "SwitchCase[6055-6072]:SwitchCase[6055-6072]"
    }, {
      "left" : "return \"direct_eval\";",
      "right" : "return \"direct_eval\";",
      "info" : "ReturnStatement[6080-6101]:ReturnStatement[6080-6101]"
    }, {
      "left" : "case FREE_CALL:",
      "right" : "case FREE_CALL:",
      "info" : "SwitchCase[6110-6125]:SwitchCase[6110-6125]"
    }, {
      "left" : "return \"free_call\";",
      "right" : "return \"free_call\";",
      "info" : "ReturnStatement[6135-6154]:ReturnStatement[6135-6154]"
    }, {
      "left" : "case STATIC_SOURCE_FILE:",
      "right" : "case STATIC_SOURCE_FILE:",
      "info" : "SwitchCase[6163-6187]:SwitchCase[6163-6187]"
    }, {
      "left" : "return \"source_file\";",
      "right" : "return \"source_file\";",
      "info" : "ReturnStatement[6191-6212]:ReturnStatement[6191-6212]"
    }, {
      "left" : "case INPUT_ID:",
      "right" : "case INPUT_ID:",
      "info" : "SwitchCase[6221-6235]:SwitchCase[6221-6235]"
    }, {
      "left" : "return \"input_id\";",
      "right" : "return \"input_id\";",
      "info" : "ReturnStatement[6237-6255]:ReturnStatement[6237-6255]"
    }, {
      "left" : "case LENGTH:",
      "right" : "case LENGTH:",
      "info" : "SwitchCase[6264-6276]:SwitchCase[6264-6276]"
    }, {
      "left" : "return \"length\";",
      "right" : "return \"length\";",
      "info" : "ReturnStatement[6280-6296]:ReturnStatement[6280-6296]"
    }, {
      "left" : "case SLASH_V:",
      "right" : "case SLASH_V:",
      "info" : "SwitchCase[6305-6318]:SwitchCase[6305-6318]"
    }, {
      "left" : "return \"slash_v\";",
      "right" : "return \"slash_v\";",
      "info" : "ReturnStatement[6321-6338]:ReturnStatement[6321-6338]"
    }, {
      "left" : "case INFERRED_FUNCTION:",
      "right" : "case INFERRED_FUNCTION:",
      "info" : "SwitchCase[6347-6370]:SwitchCase[6347-6370]"
    }, {
      "left" : "return \"inferred\";",
      "right" : "return \"inferred\";",
      "info" : "ReturnStatement[6373-6391]:ReturnStatement[6373-6391]"
    }, {
      "left" : "case CHANGE_TIME:",
      "right" : "case CHANGE_TIME:",
      "info" : "SwitchCase[6400-6417]:SwitchCase[6400-6417]"
    }, {
      "left" : "return \"change_time\";",
      "right" : "return \"change_time\";",
      "info" : "ReturnStatement[6418-6439]:ReturnStatement[6418-6439]"
    }, {
      "left" : "case REFLECTED_OBJECT:",
      "right" : "case REFLECTED_OBJECT:",
      "info" : "SwitchCase[6448-6470]:SwitchCase[6448-6470]"
    }, {
      "left" : "return \"reflected_object\";",
      "right" : "return \"reflected_object\";",
      "info" : "ReturnStatement[6471-6497]:ReturnStatement[6471-6497]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[6506-6514]:SwitchCase[6506-6514]"
    }, {
      "left" : "throw new IllegalStateException(\"unexpected prop id \" + propType);",
      "right" : "throw new IllegalStateException(\"unexpected prop id \" + propType);",
      "info" : "ThrowStatement[6525-6591]:ThrowStatement[6525-6591]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[6607-6614]:Modifier[6607-6614]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6615-6621]:Modifier[6615-6621]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[6622-6627]:TYPE_DECLARATION_KIND[6622-6627]"
    }, {
      "left" : "NumberNode",
      "right" : "NumberNode",
      "info" : "SimpleName[6628-6638]:SimpleName[6628-6638]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[6647-6651]:SimpleType[6647-6651]"
    }, {
      "left" : "NumberNode",
      "right" : "NumberNode",
      "info" : "SimpleName[6713-6723]:SimpleName[6713-6723]"
    }, {
      "left" : "double number",
      "right" : "double number",
      "info" : "SingleVariableDeclaration[6724-6737]:SingleVariableDeclaration[6724-6737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6739-6801]:Block[6739-6801]"
    }, {
      "left" : "super(Token.NUMBER);",
      "right" : "super(Token.NUMBER);",
      "info" : "SuperConstructorInvocation[6747-6767]:SuperConstructorInvocation[6747-6767]"
    }, {
      "left" : "this.number = number;",
      "right" : "this.number = number;",
      "info" : "ExpressionStatement[6774-6795]:ExpressionStatement[6774-6795]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6807-6813]:Modifier[6807-6813]"
    }, {
      "left" : "NumberNode",
      "right" : "NumberNode",
      "info" : "SimpleName[6814-6824]:SimpleName[6814-6824]"
    }, {
      "left" : "double number",
      "right" : "double number",
      "info" : "SingleVariableDeclaration[6825-6838]:SingleVariableDeclaration[6825-6838]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[6840-6850]:SingleVariableDeclaration[6840-6850]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[6852-6862]:SingleVariableDeclaration[6852-6862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6864-6942]:Block[6864-6942]"
    }, {
      "left" : "super(Token.NUMBER, lineno, charno);",
      "right" : "super(Token.NUMBER, lineno, charno);",
      "info" : "SuperConstructorInvocation[6872-6908]:SuperConstructorInvocation[6872-6908]"
    }, {
      "left" : "this.number = number;",
      "right" : "this.number = number;",
      "info" : "ExpressionStatement[6915-6936]:ExpressionStatement[6915-6936]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6948-6957]:MarkerAnnotation[6948-6957]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6962-6968]:Modifier[6962-6968]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6969-6975]:PrimitiveType[6969-6975]"
    }, {
      "left" : "getDouble",
      "right" : "getDouble",
      "info" : "SimpleName[6976-6985]:SimpleName[6976-6985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6988-7021]:Block[6988-7021]"
    }, {
      "left" : "return this.number;",
      "right" : "return this.number;",
      "info" : "ReturnStatement[6996-7015]:ReturnStatement[6996-7015]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7027-7036]:MarkerAnnotation[7027-7036]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7041-7047]:Modifier[7041-7047]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7048-7052]:PrimitiveType[7048-7052]"
    }, {
      "left" : "setDouble",
      "right" : "setDouble",
      "info" : "SimpleName[7053-7062]:SimpleName[7053-7062]"
    }, {
      "left" : "double d",
      "right" : "double d",
      "info" : "SingleVariableDeclaration[7063-7071]:SingleVariableDeclaration[7063-7071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7073-7103]:Block[7073-7103]"
    }, {
      "left" : "this.number = d;",
      "right" : "this.number = d;",
      "info" : "ExpressionStatement[7081-7097]:ExpressionStatement[7081-7097]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7109-7118]:MarkerAnnotation[7109-7118]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7123-7130]:PrimitiveType[7123-7130]"
    }, {
      "left" : "isEquivalentTo",
      "right" : "isEquivalentTo",
      "info" : "SimpleName[7131-7145]:SimpleName[7131-7145]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[7155-7164]:SingleVariableDeclaration[7155-7164]"
    }, {
      "left" : "boolean compareJsType",
      "right" : "boolean compareJsType",
      "info" : "SingleVariableDeclaration[7166-7187]:SingleVariableDeclaration[7166-7187]"
    }, {
      "left" : "boolean recur",
      "right" : "boolean recur",
      "info" : "SingleVariableDeclaration[7189-7202]:SingleVariableDeclaration[7189-7202]"
    }, {
      "left" : "boolean shallow",
      "right" : "boolean shallow",
      "info" : "SingleVariableDeclaration[7204-7219]:SingleVariableDeclaration[7204-7219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7221-7634]:Block[7221-7634]"
    }, {
      "left" : "boolean equiv = super.isEquivalentTo(node, compareJsType, recur, shallow);",
      "right" : "boolean equiv = super.isEquivalentTo(node, compareJsType, recur, shallow);",
      "info" : "VariableDeclarationStatement[7229-7303]:VariableDeclarationStatement[7229-7303]"
    }, {
      "left" : "if (equiv)",
      "right" : "if (equiv)",
      "info" : "IfStatement[7310-7608]:IfStatement[7310-7608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7321-7608]:Block[7321-7608]"
    }, {
      "left" : "double thisValue = getDouble();",
      "right" : "double thisValue = getDouble();",
      "info" : "VariableDeclarationStatement[7331-7362]:VariableDeclarationStatement[7331-7362]"
    }, {
      "left" : "double thatValue = ((NumberNode) node).getDouble();",
      "right" : "double thatValue = ((NumberNode) node).getDouble();",
      "info" : "VariableDeclarationStatement[7371-7422]:VariableDeclarationStatement[7371-7422]"
    }, {
      "left" : "if (thisValue == thatValue)",
      "right" : "if (thisValue == thatValue)",
      "info" : "IfStatement[7431-7600]:IfStatement[7431-7600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7459-7600]:Block[7459-7600]"
    }, {
      "left" : "return (thisValue != 0.0) || (1 / thisValue == 1 / thatValue);",
      "right" : "return (thisValue != 0.0) || (1 / thisValue == 1 / thatValue);",
      "info" : "ReturnStatement[7528-7590]:ReturnStatement[7528-7590]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7615-7628]:ReturnStatement[7615-7628]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[7670-7677]:Modifier[7670-7677]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7678-7684]:Modifier[7678-7684]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[7685-7690]:TYPE_DECLARATION_KIND[7685-7690]"
    }, {
      "left" : "StringNode",
      "right" : "StringNode",
      "info" : "SimpleName[7691-7701]:SimpleName[7691-7701]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[7710-7714]:SimpleType[7710-7714]"
    }, {
      "left" : "StringNode",
      "right" : "StringNode",
      "info" : "SimpleName[7776-7786]:SimpleName[7776-7786]"
    }, {
      "left" : "int type",
      "right" : "int type",
      "info" : "SingleVariableDeclaration[7787-7795]:SingleVariableDeclaration[7787-7795]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[7797-7807]:SingleVariableDeclaration[7797-7807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7809-7961]:Block[7809-7961]"
    }, {
      "left" : "super(type);",
      "right" : "super(type);",
      "info" : "SuperConstructorInvocation[7817-7829]:SuperConstructorInvocation[7817-7829]"
    }, {
      "left" : "if (null == str)",
      "right" : "if (null == str)",
      "info" : "IfStatement[7836-7933]:IfStatement[7836-7933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7853-7933]:Block[7853-7933]"
    }, {
      "left" : "throw new IllegalArgumentException(\"StringNode: str is null\");",
      "right" : "throw new IllegalArgumentException(\"StringNode: str is null\");",
      "info" : "ThrowStatement[7863-7925]:ThrowStatement[7863-7925]"
    }, {
      "left" : "this.str = str;",
      "right" : "this.str = str;",
      "info" : "ExpressionStatement[7940-7955]:ExpressionStatement[7940-7955]"
    }, {
      "left" : "StringNode",
      "right" : "StringNode",
      "info" : "SimpleName[7967-7977]:SimpleName[7967-7977]"
    }, {
      "left" : "int type",
      "right" : "int type",
      "info" : "SingleVariableDeclaration[7978-7986]:SingleVariableDeclaration[7978-7986]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[7988-7998]:SingleVariableDeclaration[7988-7998]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[8000-8010]:SingleVariableDeclaration[8000-8010]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[8012-8022]:SingleVariableDeclaration[8012-8022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8024-8192]:Block[8024-8192]"
    }, {
      "left" : "super(type, lineno, charno);",
      "right" : "super(type, lineno, charno);",
      "info" : "SuperConstructorInvocation[8032-8060]:SuperConstructorInvocation[8032-8060]"
    }, {
      "left" : "if (null == str)",
      "right" : "if (null == str)",
      "info" : "IfStatement[8067-8164]:IfStatement[8067-8164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8084-8164]:Block[8084-8164]"
    }, {
      "left" : "throw new IllegalArgumentException(\"StringNode: str is null\");",
      "right" : "throw new IllegalArgumentException(\"StringNode: str is null\");",
      "info" : "ThrowStatement[8094-8156]:ThrowStatement[8094-8156]"
    }, {
      "left" : "this.str = str;",
      "right" : "this.str = str;",
      "info" : "ExpressionStatement[8171-8186]:ExpressionStatement[8171-8186]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8274-8283]:MarkerAnnotation[8274-8283]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8288-8294]:Modifier[8288-8294]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8295-8301]:SimpleType[8295-8301]"
    }, {
      "left" : "getString",
      "right" : "getString",
      "info" : "SimpleName[8302-8311]:SimpleName[8302-8311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8314-8344]:Block[8314-8344]"
    }, {
      "left" : "return this.str;",
      "right" : "return this.str;",
      "info" : "ReturnStatement[8322-8338]:ReturnStatement[8322-8338]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8442-8451]:MarkerAnnotation[8442-8451]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8456-8462]:Modifier[8456-8462]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8463-8467]:PrimitiveType[8463-8467]"
    }, {
      "left" : "setString",
      "right" : "setString",
      "info" : "SimpleName[8468-8477]:SimpleName[8468-8477]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[8478-8488]:SingleVariableDeclaration[8478-8488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8490-8623]:Block[8490-8623]"
    }, {
      "left" : "if (null == str)",
      "right" : "if (null == str)",
      "info" : "IfStatement[8498-8595]:IfStatement[8498-8595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8515-8595]:Block[8515-8595]"
    }, {
      "left" : "throw new IllegalArgumentException(\"StringNode: str is null\");",
      "right" : "throw new IllegalArgumentException(\"StringNode: str is null\");",
      "info" : "ThrowStatement[8525-8587]:ThrowStatement[8525-8587]"
    }, {
      "left" : "this.str = str;",
      "right" : "this.str = str;",
      "info" : "ExpressionStatement[8602-8617]:ExpressionStatement[8602-8617]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8629-8638]:MarkerAnnotation[8629-8638]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8643-8650]:PrimitiveType[8643-8650]"
    }, {
      "left" : "isEquivalentTo",
      "right" : "isEquivalentTo",
      "info" : "SimpleName[8651-8665]:SimpleName[8651-8665]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[8675-8684]:SingleVariableDeclaration[8675-8684]"
    }, {
      "left" : "boolean compareJsType",
      "right" : "boolean compareJsType",
      "info" : "SingleVariableDeclaration[8686-8707]:SingleVariableDeclaration[8686-8707]"
    }, {
      "left" : "boolean recur",
      "right" : "boolean recur",
      "info" : "SingleVariableDeclaration[8709-8722]:SingleVariableDeclaration[8709-8722]"
    }, {
      "left" : "boolean shallow",
      "right" : "boolean shallow",
      "info" : "SingleVariableDeclaration[8724-8739]:SingleVariableDeclaration[8724-8739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8741-8876]:Block[8741-8876]"
    }, {
      "left" : "return (super.isEquivalentTo(node, compareJsType, recur, shallow)\n          && this.str.equals(((StringNode) node).str));",
      "right" : "return (super.isEquivalentTo(node, compareJsType, recur, shallow)\n          && this.str.equals(((StringNode) node).str));",
      "info" : "ReturnStatement[8749-8870]:ReturnStatement[8749-8870]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9141-9150]:MarkerAnnotation[9141-9150]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9155-9161]:Modifier[9155-9161]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9162-9169]:PrimitiveType[9162-9169]"
    }, {
      "left" : "isQuotedString",
      "right" : "isQuotedString",
      "info" : "SimpleName[9170-9184]:SimpleName[9170-9184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9187-9236]:Block[9187-9236]"
    }, {
      "left" : "return getBooleanProp(QUOTED_PROP);",
      "right" : "return getBooleanProp(QUOTED_PROP);",
      "info" : "ReturnStatement[9195-9230]:ReturnStatement[9195-9230]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9333-9342]:MarkerAnnotation[9333-9342]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9347-9353]:Modifier[9347-9353]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9354-9358]:PrimitiveType[9354-9358]"
    }, {
      "left" : "setQuotedString",
      "right" : "setQuotedString",
      "info" : "SimpleName[9359-9374]:SimpleName[9359-9374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9377-9425]:Block[9377-9425]"
    }, {
      "left" : "putBooleanProp(QUOTED_PROP, true);",
      "right" : "putBooleanProp(QUOTED_PROP, true);",
      "info" : "ExpressionStatement[9385-9419]:ExpressionStatement[9385-9419]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[9523-9530]:Modifier[9523-9530]"
    }, {
      "left" : "interface",
      "right" : "interface",
      "info" : "TYPE_DECLARATION_KIND[9531-9540]:TYPE_DECLARATION_KIND[9531-9540]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleName[9541-9553]:SimpleName[9541-9553]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[9560-9563]:PrimitiveType[9560-9563]"
    }, {
      "left" : "getType",
      "right" : "getType",
      "info" : "SimpleName[9564-9571]:SimpleName[9564-9571]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[9579-9591]:SimpleType[9579-9591]"
    }, {
      "left" : "getNext",
      "right" : "getNext",
      "info" : "SimpleName[9592-9599]:SimpleName[9592-9599]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[9607-9619]:SimpleType[9607-9619]"
    }, {
      "left" : "chain",
      "right" : "chain",
      "info" : "SimpleName[9620-9625]:SimpleName[9620-9625]"
    }, {
      "left" : "PropListItem next",
      "right" : "PropListItem next",
      "info" : "SingleVariableDeclaration[9626-9643]:SingleVariableDeclaration[9626-9643]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[9650-9656]:SimpleType[9650-9656]"
    }, {
      "left" : "getObjectValue",
      "right" : "getObjectValue",
      "info" : "SimpleName[9657-9671]:SimpleName[9657-9671]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[9679-9682]:PrimitiveType[9679-9682]"
    }, {
      "left" : "getIntValue",
      "right" : "getIntValue",
      "info" : "SimpleName[9683-9694]:SimpleName[9683-9694]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[9705-9712]:Modifier[9705-9712]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[9713-9721]:Modifier[9713-9721]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9722-9728]:Modifier[9722-9728]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[9729-9734]:TYPE_DECLARATION_KIND[9729-9734]"
    }, {
      "left" : "AbstractPropListItem",
      "right" : "AbstractPropListItem",
      "info" : "SimpleName[9735-9755]:SimpleName[9735-9755]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[9773-9785]:SimpleType[9773-9785]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[9787-9799]:SimpleType[9787-9799]"
    }, {
      "left" : "AbstractPropListItem",
      "right" : "AbstractPropListItem",
      "info" : "SimpleName[9930-9950]:SimpleName[9930-9950]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[9951-9963]:SingleVariableDeclaration[9951-9963]"
    }, {
      "left" : "PropListItem next",
      "right" : "PropListItem next",
      "info" : "SingleVariableDeclaration[9965-9982]:SingleVariableDeclaration[9965-9982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9984-10047]:Block[9984-10047]"
    }, {
      "left" : "this.propType = propType;",
      "right" : "this.propType = propType;",
      "info" : "ExpressionStatement[9992-10017]:ExpressionStatement[9992-10017]"
    }, {
      "left" : "this.next = next;",
      "right" : "this.next = next;",
      "info" : "ExpressionStatement[10024-10041]:ExpressionStatement[10024-10041]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10053-10062]:MarkerAnnotation[10053-10062]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10067-10073]:Modifier[10067-10073]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[10074-10077]:PrimitiveType[10074-10077]"
    }, {
      "left" : "getType",
      "right" : "getType",
      "info" : "SimpleName[10078-10085]:SimpleName[10078-10085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10088-10118]:Block[10088-10118]"
    }, {
      "left" : "return propType;",
      "right" : "return propType;",
      "info" : "ReturnStatement[10096-10112]:ReturnStatement[10096-10112]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10124-10133]:MarkerAnnotation[10124-10133]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10138-10144]:Modifier[10138-10144]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[10145-10157]:SimpleType[10145-10157]"
    }, {
      "left" : "getNext",
      "right" : "getNext",
      "info" : "SimpleName[10158-10165]:SimpleName[10158-10165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10168-10194]:Block[10168-10194]"
    }, {
      "left" : "return next;",
      "right" : "return next;",
      "info" : "ReturnStatement[10176-10188]:ReturnStatement[10176-10188]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10200-10209]:MarkerAnnotation[10200-10209]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10214-10220]:Modifier[10214-10220]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[10221-10229]:Modifier[10221-10229]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[10230-10242]:SimpleType[10230-10242]"
    }, {
      "left" : "chain",
      "right" : "chain",
      "info" : "SimpleName[10243-10248]:SimpleName[10243-10248]"
    }, {
      "left" : "PropListItem next",
      "right" : "PropListItem next",
      "info" : "SingleVariableDeclaration[10249-10266]:SingleVariableDeclaration[10249-10266]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10319-10326]:Modifier[10319-10326]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10327-10333]:Modifier[10327-10333]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[10334-10339]:TYPE_DECLARATION_KIND[10334-10339]"
    }, {
      "left" : "ObjectPropListItem",
      "right" : "ObjectPropListItem",
      "info" : "SimpleName[10340-10358]:SimpleName[10340-10358]"
    }, {
      "left" : "AbstractPropListItem",
      "right" : "AbstractPropListItem",
      "info" : "SimpleType[10373-10393]:SimpleType[10373-10393]"
    }, {
      "left" : "ObjectPropListItem",
      "right" : "ObjectPropListItem",
      "info" : "SimpleName[10493-10511]:SimpleName[10493-10511]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[10512-10524]:SingleVariableDeclaration[10512-10524]"
    }, {
      "left" : "Object objectValue",
      "right" : "Object objectValue",
      "info" : "SingleVariableDeclaration[10526-10544]:SingleVariableDeclaration[10526-10544]"
    }, {
      "left" : "PropListItem next",
      "right" : "PropListItem next",
      "info" : "SingleVariableDeclaration[10546-10563]:SingleVariableDeclaration[10546-10563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10565-10639]:Block[10565-10639]"
    }, {
      "left" : "super(propType, next);",
      "right" : "super(propType, next);",
      "info" : "SuperConstructorInvocation[10573-10595]:SuperConstructorInvocation[10573-10595]"
    }, {
      "left" : "this.objectValue = objectValue;",
      "right" : "this.objectValue = objectValue;",
      "info" : "ExpressionStatement[10602-10633]:ExpressionStatement[10602-10633]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10645-10654]:MarkerAnnotation[10645-10654]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10659-10665]:Modifier[10659-10665]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[10666-10669]:PrimitiveType[10666-10669]"
    }, {
      "left" : "getIntValue",
      "right" : "getIntValue",
      "info" : "SimpleName[10670-10681]:SimpleName[10670-10681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10684-10740]:Block[10684-10740]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[10692-10734]:ThrowStatement[10692-10734]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10746-10755]:MarkerAnnotation[10746-10755]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10760-10766]:Modifier[10760-10766]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[10767-10773]:SimpleType[10767-10773]"
    }, {
      "left" : "getObjectValue",
      "right" : "getObjectValue",
      "info" : "SimpleName[10774-10788]:SimpleName[10774-10788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10791-10824]:Block[10791-10824]"
    }, {
      "left" : "return objectValue;",
      "right" : "return objectValue;",
      "info" : "ReturnStatement[10799-10818]:ReturnStatement[10799-10818]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10830-10839]:MarkerAnnotation[10830-10839]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10844-10850]:Modifier[10844-10850]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10851-10857]:SimpleType[10851-10857]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[10858-10866]:SimpleName[10858-10866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10869-10944]:Block[10869-10944]"
    }, {
      "left" : "return objectValue == null ? \"null\" : objectValue.toString();",
      "right" : "return objectValue == null ? \"null\" : objectValue.toString();",
      "info" : "ReturnStatement[10877-10938]:ReturnStatement[10877-10938]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10950-10959]:MarkerAnnotation[10950-10959]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10964-10970]:Modifier[10964-10970]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[10971-10983]:SimpleType[10971-10983]"
    }, {
      "left" : "chain",
      "right" : "chain",
      "info" : "SimpleName[10984-10989]:SimpleName[10984-10989]"
    }, {
      "left" : "PropListItem next",
      "right" : "PropListItem next",
      "info" : "SingleVariableDeclaration[10990-11007]:SingleVariableDeclaration[10990-11007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11009-11083]:Block[11009-11083]"
    }, {
      "left" : "return new ObjectPropListItem(getType(), objectValue, next);",
      "right" : "return new ObjectPropListItem(getType(), objectValue, next);",
      "info" : "ReturnStatement[11017-11077]:ReturnStatement[11017-11077]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11131-11138]:Modifier[11131-11138]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11139-11145]:Modifier[11139-11145]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[11146-11151]:TYPE_DECLARATION_KIND[11146-11151]"
    }, {
      "left" : "IntPropListItem",
      "right" : "IntPropListItem",
      "info" : "SimpleName[11152-11167]:SimpleName[11152-11167]"
    }, {
      "left" : "AbstractPropListItem",
      "right" : "AbstractPropListItem",
      "info" : "SimpleType[11176-11196]:SimpleType[11176-11196]"
    }, {
      "left" : "IntPropListItem",
      "right" : "IntPropListItem",
      "info" : "SimpleName[11282-11297]:SimpleName[11282-11297]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[11298-11310]:SingleVariableDeclaration[11298-11310]"
    }, {
      "left" : "int intValue",
      "right" : "int intValue",
      "info" : "SingleVariableDeclaration[11312-11324]:SingleVariableDeclaration[11312-11324]"
    }, {
      "left" : "PropListItem next",
      "right" : "PropListItem next",
      "info" : "SingleVariableDeclaration[11326-11343]:SingleVariableDeclaration[11326-11343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11345-11413]:Block[11345-11413]"
    }, {
      "left" : "super(propType, next);",
      "right" : "super(propType, next);",
      "info" : "SuperConstructorInvocation[11353-11375]:SuperConstructorInvocation[11353-11375]"
    }, {
      "left" : "this.intValue = intValue;",
      "right" : "this.intValue = intValue;",
      "info" : "ExpressionStatement[11382-11407]:ExpressionStatement[11382-11407]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11419-11428]:MarkerAnnotation[11419-11428]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11433-11439]:Modifier[11433-11439]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[11440-11443]:PrimitiveType[11440-11443]"
    }, {
      "left" : "getIntValue",
      "right" : "getIntValue",
      "info" : "SimpleName[11444-11455]:SimpleName[11444-11455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11458-11488]:Block[11458-11488]"
    }, {
      "left" : "return intValue;",
      "right" : "return intValue;",
      "info" : "ReturnStatement[11466-11482]:ReturnStatement[11466-11482]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11494-11503]:MarkerAnnotation[11494-11503]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11508-11514]:Modifier[11508-11514]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[11515-11521]:SimpleType[11515-11521]"
    }, {
      "left" : "getObjectValue",
      "right" : "getObjectValue",
      "info" : "SimpleName[11522-11536]:SimpleName[11522-11536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11539-11595]:Block[11539-11595]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[11547-11589]:ThrowStatement[11547-11589]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11601-11610]:MarkerAnnotation[11601-11610]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11615-11621]:Modifier[11615-11621]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11622-11628]:SimpleType[11622-11628]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[11629-11637]:SimpleName[11629-11637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11640-11686]:Block[11640-11686]"
    }, {
      "left" : "return String.valueOf(intValue);",
      "right" : "return String.valueOf(intValue);",
      "info" : "ReturnStatement[11648-11680]:ReturnStatement[11648-11680]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11692-11701]:MarkerAnnotation[11692-11701]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11706-11712]:Modifier[11706-11712]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[11713-11725]:SimpleType[11713-11725]"
    }, {
      "left" : "chain",
      "right" : "chain",
      "info" : "SimpleName[11726-11731]:SimpleName[11726-11731]"
    }, {
      "left" : "PropListItem next",
      "right" : "PropListItem next",
      "info" : "SingleVariableDeclaration[11732-11749]:SingleVariableDeclaration[11732-11749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11751-11819]:Block[11751-11819]"
    }, {
      "left" : "return new IntPropListItem(getType(), intValue, next);",
      "right" : "return new IntPropListItem(getType(), intValue, next);",
      "info" : "ReturnStatement[11759-11813]:ReturnStatement[11759-11813]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11827-11833]:Modifier[11827-11833]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[11834-11838]:SimpleName[11834-11838]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[11839-11851]:SingleVariableDeclaration[11839-11851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11853-11923]:Block[11853-11923]"
    }, {
      "left" : "type = nodeType;",
      "right" : "type = nodeType;",
      "info" : "ExpressionStatement[11859-11875]:ExpressionStatement[11859-11875]"
    }, {
      "left" : "parent = null;",
      "right" : "parent = null;",
      "info" : "ExpressionStatement[11880-11894]:ExpressionStatement[11880-11894]"
    }, {
      "left" : "sourcePosition = -1;",
      "right" : "sourcePosition = -1;",
      "info" : "ExpressionStatement[11899-11919]:ExpressionStatement[11899-11919]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11927-11933]:Modifier[11927-11933]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[11934-11938]:SimpleName[11934-11938]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[11939-11951]:SingleVariableDeclaration[11939-11951]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[11953-11963]:SingleVariableDeclaration[11953-11963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11965-12301]:Block[11965-12301]"
    }, {
      "left" : "Preconditions.checkArgument(child.parent == null,\n        \"new child has existing parent\");",
      "right" : "Preconditions.checkArgument(child.parent == null,\n        \"new child has existing parent\");",
      "info" : "ExpressionStatement[11971-12062]:ExpressionStatement[11971-12062]"
    }, {
      "left" : "Preconditions.checkArgument(child.next == null,\n        \"new child has existing sibling\");",
      "right" : "Preconditions.checkArgument(child.next == null,\n        \"new child has existing sibling\");",
      "info" : "ExpressionStatement[12067-12157]:ExpressionStatement[12067-12157]"
    }, {
      "left" : "type = nodeType;",
      "right" : "type = nodeType;",
      "info" : "ExpressionStatement[12163-12179]:ExpressionStatement[12163-12179]"
    }, {
      "left" : "parent = null;",
      "right" : "parent = null;",
      "info" : "ExpressionStatement[12184-12198]:ExpressionStatement[12184-12198]"
    }, {
      "left" : "first = last = child;",
      "right" : "first = last = child;",
      "info" : "ExpressionStatement[12203-12224]:ExpressionStatement[12203-12224]"
    }, {
      "left" : "child.next = null;",
      "right" : "child.next = null;",
      "info" : "ExpressionStatement[12229-12247]:ExpressionStatement[12229-12247]"
    }, {
      "left" : "child.parent = this;",
      "right" : "child.parent = this;",
      "info" : "ExpressionStatement[12252-12272]:ExpressionStatement[12252-12272]"
    }, {
      "left" : "sourcePosition = -1;",
      "right" : "sourcePosition = -1;",
      "info" : "ExpressionStatement[12277-12297]:ExpressionStatement[12277-12297]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12305-12311]:Modifier[12305-12311]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[12312-12316]:SimpleName[12312-12316]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[12317-12329]:SingleVariableDeclaration[12317-12329]"
    }, {
      "left" : "Node left",
      "right" : "Node left",
      "info" : "SingleVariableDeclaration[12331-12340]:SingleVariableDeclaration[12331-12340]"
    }, {
      "left" : "Node right",
      "right" : "Node right",
      "info" : "SingleVariableDeclaration[12342-12352]:SingleVariableDeclaration[12342-12352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12354-12961]:Block[12354-12961]"
    }, {
      "left" : "Preconditions.checkArgument(left.parent == null,\n        \"first new child has existing parent\");",
      "right" : "Preconditions.checkArgument(left.parent == null,\n        \"first new child has existing parent\");",
      "info" : "ExpressionStatement[12360-12456]:ExpressionStatement[12360-12456]"
    }, {
      "left" : "Preconditions.checkArgument(left.next == null,\n        \"first new child has existing sibling\");",
      "right" : "Preconditions.checkArgument(left.next == null,\n        \"first new child has existing sibling\");",
      "info" : "ExpressionStatement[12461-12556]:ExpressionStatement[12461-12556]"
    }, {
      "left" : "Preconditions.checkArgument(right.parent == null,\n        \"second new child has existing parent\");",
      "right" : "Preconditions.checkArgument(right.parent == null,\n        \"second new child has existing parent\");",
      "info" : "ExpressionStatement[12561-12659]:ExpressionStatement[12561-12659]"
    }, {
      "left" : "Preconditions.checkArgument(right.next == null,\n        \"second new child has existing sibling\");",
      "right" : "Preconditions.checkArgument(right.next == null,\n        \"second new child has existing sibling\");",
      "info" : "ExpressionStatement[12664-12761]:ExpressionStatement[12664-12761]"
    }, {
      "left" : "type = nodeType;",
      "right" : "type = nodeType;",
      "info" : "ExpressionStatement[12766-12782]:ExpressionStatement[12766-12782]"
    }, {
      "left" : "parent = null;",
      "right" : "parent = null;",
      "info" : "ExpressionStatement[12787-12801]:ExpressionStatement[12787-12801]"
    }, {
      "left" : "first = left;",
      "right" : "first = left;",
      "info" : "ExpressionStatement[12806-12819]:ExpressionStatement[12806-12819]"
    }, {
      "left" : "last = right;",
      "right" : "last = right;",
      "info" : "ExpressionStatement[12824-12837]:ExpressionStatement[12824-12837]"
    }, {
      "left" : "left.next = right;",
      "right" : "left.next = right;",
      "info" : "ExpressionStatement[12842-12860]:ExpressionStatement[12842-12860]"
    }, {
      "left" : "left.parent = this;",
      "right" : "left.parent = this;",
      "info" : "ExpressionStatement[12865-12884]:ExpressionStatement[12865-12884]"
    }, {
      "left" : "right.next = null;",
      "right" : "right.next = null;",
      "info" : "ExpressionStatement[12889-12907]:ExpressionStatement[12889-12907]"
    }, {
      "left" : "right.parent = this;",
      "right" : "right.parent = this;",
      "info" : "ExpressionStatement[12912-12932]:ExpressionStatement[12912-12932]"
    }, {
      "left" : "sourcePosition = -1;",
      "right" : "sourcePosition = -1;",
      "info" : "ExpressionStatement[12937-12957]:ExpressionStatement[12937-12957]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12965-12971]:Modifier[12965-12971]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[12972-12976]:SimpleName[12972-12976]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[12977-12989]:SingleVariableDeclaration[12977-12989]"
    }, {
      "left" : "Node left",
      "right" : "Node left",
      "info" : "SingleVariableDeclaration[12991-13000]:SingleVariableDeclaration[12991-13000]"
    }, {
      "left" : "Node mid",
      "right" : "Node mid",
      "info" : "SingleVariableDeclaration[13002-13010]:SingleVariableDeclaration[13002-13010]"
    }, {
      "left" : "Node right",
      "right" : "Node right",
      "info" : "SingleVariableDeclaration[13012-13022]:SingleVariableDeclaration[13012-13022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13024-13586]:Block[13024-13586]"
    }, {
      "left" : "Preconditions.checkArgument(left.parent == null);",
      "right" : "Preconditions.checkArgument(left.parent == null);",
      "info" : "ExpressionStatement[13030-13079]:ExpressionStatement[13030-13079]"
    }, {
      "left" : "Preconditions.checkArgument(left.next == null);",
      "right" : "Preconditions.checkArgument(left.next == null);",
      "info" : "ExpressionStatement[13084-13131]:ExpressionStatement[13084-13131]"
    }, {
      "left" : "Preconditions.checkArgument(mid.parent == null);",
      "right" : "Preconditions.checkArgument(mid.parent == null);",
      "info" : "ExpressionStatement[13136-13184]:ExpressionStatement[13136-13184]"
    }, {
      "left" : "Preconditions.checkArgument(mid.next == null);",
      "right" : "Preconditions.checkArgument(mid.next == null);",
      "info" : "ExpressionStatement[13189-13235]:ExpressionStatement[13189-13235]"
    }, {
      "left" : "Preconditions.checkArgument(right.parent == null);",
      "right" : "Preconditions.checkArgument(right.parent == null);",
      "info" : "ExpressionStatement[13240-13290]:ExpressionStatement[13240-13290]"
    }, {
      "left" : "Preconditions.checkArgument(right.next == null);",
      "right" : "Preconditions.checkArgument(right.next == null);",
      "info" : "ExpressionStatement[13295-13343]:ExpressionStatement[13295-13343]"
    }, {
      "left" : "type = nodeType;",
      "right" : "type = nodeType;",
      "info" : "ExpressionStatement[13348-13364]:ExpressionStatement[13348-13364]"
    }, {
      "left" : "parent = null;",
      "right" : "parent = null;",
      "info" : "ExpressionStatement[13369-13383]:ExpressionStatement[13369-13383]"
    }, {
      "left" : "first = left;",
      "right" : "first = left;",
      "info" : "ExpressionStatement[13388-13401]:ExpressionStatement[13388-13401]"
    }, {
      "left" : "last = right;",
      "right" : "last = right;",
      "info" : "ExpressionStatement[13406-13419]:ExpressionStatement[13406-13419]"
    }, {
      "left" : "left.next = mid;",
      "right" : "left.next = mid;",
      "info" : "ExpressionStatement[13424-13440]:ExpressionStatement[13424-13440]"
    }, {
      "left" : "left.parent = this;",
      "right" : "left.parent = this;",
      "info" : "ExpressionStatement[13445-13464]:ExpressionStatement[13445-13464]"
    }, {
      "left" : "mid.next = right;",
      "right" : "mid.next = right;",
      "info" : "ExpressionStatement[13469-13486]:ExpressionStatement[13469-13486]"
    }, {
      "left" : "mid.parent = this;",
      "right" : "mid.parent = this;",
      "info" : "ExpressionStatement[13491-13509]:ExpressionStatement[13491-13509]"
    }, {
      "left" : "right.next = null;",
      "right" : "right.next = null;",
      "info" : "ExpressionStatement[13514-13532]:ExpressionStatement[13514-13532]"
    }, {
      "left" : "right.parent = this;",
      "right" : "right.parent = this;",
      "info" : "ExpressionStatement[13537-13557]:ExpressionStatement[13537-13557]"
    }, {
      "left" : "sourcePosition = -1;",
      "right" : "sourcePosition = -1;",
      "info" : "ExpressionStatement[13562-13582]:ExpressionStatement[13562-13582]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13590-13596]:Modifier[13590-13596]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[13597-13601]:SimpleName[13597-13601]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[13602-13614]:SingleVariableDeclaration[13602-13614]"
    }, {
      "left" : "Node left",
      "right" : "Node left",
      "info" : "SingleVariableDeclaration[13616-13625]:SingleVariableDeclaration[13616-13625]"
    }, {
      "left" : "Node mid",
      "right" : "Node mid",
      "info" : "SingleVariableDeclaration[13627-13635]:SingleVariableDeclaration[13627-13635]"
    }, {
      "left" : "Node mid2",
      "right" : "Node mid2",
      "info" : "SingleVariableDeclaration[13637-13646]:SingleVariableDeclaration[13637-13646]"
    }, {
      "left" : "Node right",
      "right" : "Node right",
      "info" : "SingleVariableDeclaration[13648-13658]:SingleVariableDeclaration[13648-13658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13660-14374]:Block[13660-14374]"
    }, {
      "left" : "Preconditions.checkArgument(left.parent == null);",
      "right" : "Preconditions.checkArgument(left.parent == null);",
      "info" : "ExpressionStatement[13666-13715]:ExpressionStatement[13666-13715]"
    }, {
      "left" : "Preconditions.checkArgument(left.next == null);",
      "right" : "Preconditions.checkArgument(left.next == null);",
      "info" : "ExpressionStatement[13720-13767]:ExpressionStatement[13720-13767]"
    }, {
      "left" : "Preconditions.checkArgument(mid.parent == null);",
      "right" : "Preconditions.checkArgument(mid.parent == null);",
      "info" : "ExpressionStatement[13772-13820]:ExpressionStatement[13772-13820]"
    }, {
      "left" : "Preconditions.checkArgument(mid.next == null);",
      "right" : "Preconditions.checkArgument(mid.next == null);",
      "info" : "ExpressionStatement[13825-13871]:ExpressionStatement[13825-13871]"
    }, {
      "left" : "Preconditions.checkArgument(mid2.parent == null);",
      "right" : "Preconditions.checkArgument(mid2.parent == null);",
      "info" : "ExpressionStatement[13876-13925]:ExpressionStatement[13876-13925]"
    }, {
      "left" : "Preconditions.checkArgument(mid2.next == null);",
      "right" : "Preconditions.checkArgument(mid2.next == null);",
      "info" : "ExpressionStatement[13930-13977]:ExpressionStatement[13930-13977]"
    }, {
      "left" : "Preconditions.checkArgument(right.parent == null);",
      "right" : "Preconditions.checkArgument(right.parent == null);",
      "info" : "ExpressionStatement[13982-14032]:ExpressionStatement[13982-14032]"
    }, {
      "left" : "Preconditions.checkArgument(right.next == null);",
      "right" : "Preconditions.checkArgument(right.next == null);",
      "info" : "ExpressionStatement[14037-14085]:ExpressionStatement[14037-14085]"
    }, {
      "left" : "type = nodeType;",
      "right" : "type = nodeType;",
      "info" : "ExpressionStatement[14090-14106]:ExpressionStatement[14090-14106]"
    }, {
      "left" : "parent = null;",
      "right" : "parent = null;",
      "info" : "ExpressionStatement[14111-14125]:ExpressionStatement[14111-14125]"
    }, {
      "left" : "first = left;",
      "right" : "first = left;",
      "info" : "ExpressionStatement[14130-14143]:ExpressionStatement[14130-14143]"
    }, {
      "left" : "last = right;",
      "right" : "last = right;",
      "info" : "ExpressionStatement[14148-14161]:ExpressionStatement[14148-14161]"
    }, {
      "left" : "left.next = mid;",
      "right" : "left.next = mid;",
      "info" : "ExpressionStatement[14166-14182]:ExpressionStatement[14166-14182]"
    }, {
      "left" : "left.parent = this;",
      "right" : "left.parent = this;",
      "info" : "ExpressionStatement[14187-14206]:ExpressionStatement[14187-14206]"
    }, {
      "left" : "mid.next = mid2;",
      "right" : "mid.next = mid2;",
      "info" : "ExpressionStatement[14211-14227]:ExpressionStatement[14211-14227]"
    }, {
      "left" : "mid.parent = this;",
      "right" : "mid.parent = this;",
      "info" : "ExpressionStatement[14232-14250]:ExpressionStatement[14232-14250]"
    }, {
      "left" : "mid2.next = right;",
      "right" : "mid2.next = right;",
      "info" : "ExpressionStatement[14255-14273]:ExpressionStatement[14255-14273]"
    }, {
      "left" : "mid2.parent = this;",
      "right" : "mid2.parent = this;",
      "info" : "ExpressionStatement[14278-14297]:ExpressionStatement[14278-14297]"
    }, {
      "left" : "right.next = null;",
      "right" : "right.next = null;",
      "info" : "ExpressionStatement[14302-14320]:ExpressionStatement[14302-14320]"
    }, {
      "left" : "right.parent = this;",
      "right" : "right.parent = this;",
      "info" : "ExpressionStatement[14325-14345]:ExpressionStatement[14325-14345]"
    }, {
      "left" : "sourcePosition = -1;",
      "right" : "sourcePosition = -1;",
      "info" : "ExpressionStatement[14350-14370]:ExpressionStatement[14350-14370]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14378-14384]:Modifier[14378-14384]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[14385-14389]:SimpleName[14385-14389]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[14390-14402]:SingleVariableDeclaration[14390-14402]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[14404-14414]:SingleVariableDeclaration[14404-14414]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[14416-14426]:SingleVariableDeclaration[14416-14426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14428-14527]:Block[14428-14527]"
    }, {
      "left" : "type = nodeType;",
      "right" : "type = nodeType;",
      "info" : "ExpressionStatement[14434-14450]:ExpressionStatement[14434-14450]"
    }, {
      "left" : "parent = null;",
      "right" : "parent = null;",
      "info" : "ExpressionStatement[14455-14469]:ExpressionStatement[14455-14469]"
    }, {
      "left" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "right" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "info" : "ExpressionStatement[14474-14523]:ExpressionStatement[14474-14523]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14531-14537]:Modifier[14531-14537]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[14538-14542]:SimpleName[14538-14542]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[14543-14555]:SingleVariableDeclaration[14543-14555]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[14557-14567]:SingleVariableDeclaration[14557-14567]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[14569-14579]:SingleVariableDeclaration[14569-14579]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[14581-14591]:SingleVariableDeclaration[14581-14591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14593-14679]:Block[14593-14679]"
    }, {
      "left" : "this(nodeType, child);",
      "right" : "this(nodeType, child);",
      "info" : "ConstructorInvocation[14599-14621]:ConstructorInvocation[14599-14621]"
    }, {
      "left" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "right" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "info" : "ExpressionStatement[14626-14675]:ExpressionStatement[14626-14675]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14683-14689]:Modifier[14683-14689]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[14690-14694]:SimpleName[14690-14694]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[14695-14707]:SingleVariableDeclaration[14695-14707]"
    }, {
      "left" : "Node left",
      "right" : "Node left",
      "info" : "SingleVariableDeclaration[14709-14718]:SingleVariableDeclaration[14709-14718]"
    }, {
      "left" : "Node right",
      "right" : "Node right",
      "info" : "SingleVariableDeclaration[14720-14730]:SingleVariableDeclaration[14720-14730]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[14732-14742]:SingleVariableDeclaration[14732-14742]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[14744-14754]:SingleVariableDeclaration[14744-14754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14756-14848]:Block[14756-14848]"
    }, {
      "left" : "this(nodeType, left, right);",
      "right" : "this(nodeType, left, right);",
      "info" : "ConstructorInvocation[14762-14790]:ConstructorInvocation[14762-14790]"
    }, {
      "left" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "right" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "info" : "ExpressionStatement[14795-14844]:ExpressionStatement[14795-14844]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14852-14858]:Modifier[14852-14858]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[14859-14863]:SimpleName[14859-14863]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[14864-14876]:SingleVariableDeclaration[14864-14876]"
    }, {
      "left" : "Node left",
      "right" : "Node left",
      "info" : "SingleVariableDeclaration[14878-14887]:SingleVariableDeclaration[14878-14887]"
    }, {
      "left" : "Node mid",
      "right" : "Node mid",
      "info" : "SingleVariableDeclaration[14889-14897]:SingleVariableDeclaration[14889-14897]"
    }, {
      "left" : "Node right",
      "right" : "Node right",
      "info" : "SingleVariableDeclaration[14899-14909]:SingleVariableDeclaration[14899-14909]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[14917-14927]:SingleVariableDeclaration[14917-14927]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[14929-14939]:SingleVariableDeclaration[14929-14939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14941-15038]:Block[14941-15038]"
    }, {
      "left" : "this(nodeType, left, mid, right);",
      "right" : "this(nodeType, left, mid, right);",
      "info" : "ConstructorInvocation[14947-14980]:ConstructorInvocation[14947-14980]"
    }, {
      "left" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "right" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "info" : "ExpressionStatement[14985-15034]:ExpressionStatement[14985-15034]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15042-15048]:Modifier[15042-15048]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[15049-15053]:SimpleName[15049-15053]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[15054-15066]:SingleVariableDeclaration[15054-15066]"
    }, {
      "left" : "Node left",
      "right" : "Node left",
      "info" : "SingleVariableDeclaration[15068-15077]:SingleVariableDeclaration[15068-15077]"
    }, {
      "left" : "Node mid",
      "right" : "Node mid",
      "info" : "SingleVariableDeclaration[15079-15087]:SingleVariableDeclaration[15079-15087]"
    }, {
      "left" : "Node mid2",
      "right" : "Node mid2",
      "info" : "SingleVariableDeclaration[15089-15098]:SingleVariableDeclaration[15089-15098]"
    }, {
      "left" : "Node right",
      "right" : "Node right",
      "info" : "SingleVariableDeclaration[15100-15110]:SingleVariableDeclaration[15100-15110]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[15118-15128]:SingleVariableDeclaration[15118-15128]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[15130-15140]:SingleVariableDeclaration[15130-15140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15142-15245]:Block[15142-15245]"
    }, {
      "left" : "this(nodeType, left, mid, mid2, right);",
      "right" : "this(nodeType, left, mid, mid2, right);",
      "info" : "ConstructorInvocation[15148-15187]:ConstructorInvocation[15148-15187]"
    }, {
      "left" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "right" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "info" : "ExpressionStatement[15192-15241]:ExpressionStatement[15192-15241]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15249-15255]:Modifier[15249-15255]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[15256-15260]:SimpleName[15256-15260]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[15261-15273]:SingleVariableDeclaration[15261-15273]"
    }, {
      "left" : "Node[] children",
      "right" : "Node[] children",
      "info" : "SingleVariableDeclaration[15275-15290]:SingleVariableDeclaration[15275-15290]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[15292-15302]:SingleVariableDeclaration[15292-15302]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[15304-15314]:SingleVariableDeclaration[15304-15314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15316-15405]:Block[15316-15405]"
    }, {
      "left" : "this(nodeType, children);",
      "right" : "this(nodeType, children);",
      "info" : "ConstructorInvocation[15322-15347]:ConstructorInvocation[15322-15347]"
    }, {
      "left" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "right" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "info" : "ExpressionStatement[15352-15401]:ExpressionStatement[15352-15401]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15409-15415]:Modifier[15409-15415]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[15416-15420]:SimpleName[15416-15420]"
    }, {
      "left" : "int nodeType",
      "right" : "int nodeType",
      "info" : "SingleVariableDeclaration[15421-15433]:SingleVariableDeclaration[15421-15433]"
    }, {
      "left" : "Node[] children",
      "right" : "Node[] children",
      "info" : "SingleVariableDeclaration[15435-15450]:SingleVariableDeclaration[15435-15450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15452-16323]:Block[15452-16323]"
    }, {
      "left" : "this.type = nodeType;",
      "right" : "this.type = nodeType;",
      "info" : "ExpressionStatement[15458-15479]:ExpressionStatement[15458-15479]"
    }, {
      "left" : "parent = null;",
      "right" : "parent = null;",
      "info" : "ExpressionStatement[15484-15498]:ExpressionStatement[15484-15498]"
    }, {
      "left" : "if (children.length != 0)",
      "right" : "if (children.length != 0)",
      "info" : "IfStatement[15503-16319]:IfStatement[15503-16319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15529-16319]:Block[15529-16319]"
    }, {
      "left" : "this.first = children[0];",
      "right" : "this.first = children[0];",
      "info" : "ExpressionStatement[15537-15562]:ExpressionStatement[15537-15562]"
    }, {
      "left" : "this.last = children[children.length - 1];",
      "right" : "this.last = children[children.length - 1];",
      "info" : "ExpressionStatement[15569-15611]:ExpressionStatement[15569-15611]"
    }, {
      "left" : "for (int i = 1; i < children.length; i++)",
      "right" : "for (int i = 1; i < children.length; i++)",
      "info" : "ForStatement[15619-16008]:ForStatement[15619-16008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15661-16008]:Block[15661-16008]"
    }, {
      "left" : "if (null != children[i - 1].next)",
      "right" : "if (null != children[i - 1].next)",
      "info" : "IfStatement[15671-15848]:IfStatement[15671-15848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15705-15848]:Block[15705-15848]"
    }, {
      "left" : "throw new IllegalArgumentException(\"duplicate child\");",
      "right" : "throw new IllegalArgumentException(\"duplicate child\");",
      "info" : "ThrowStatement[15784-15838]:ThrowStatement[15784-15838]"
    }, {
      "left" : "children[i - 1].next = children[i];",
      "right" : "children[i - 1].next = children[i];",
      "info" : "ExpressionStatement[15857-15892]:ExpressionStatement[15857-15892]"
    }, {
      "left" : "Preconditions.checkArgument(children[i - 1].parent == null);",
      "right" : "Preconditions.checkArgument(children[i - 1].parent == null);",
      "info" : "ExpressionStatement[15901-15961]:ExpressionStatement[15901-15961]"
    }, {
      "left" : "children[i - 1].parent = this;",
      "right" : "children[i - 1].parent = this;",
      "info" : "ExpressionStatement[15970-16000]:ExpressionStatement[15970-16000]"
    }, {
      "left" : "Preconditions.checkArgument(children[children.length - 1].parent == null);",
      "right" : "Preconditions.checkArgument(children[children.length - 1].parent == null);",
      "info" : "ExpressionStatement[16015-16089]:ExpressionStatement[16015-16089]"
    }, {
      "left" : "children[children.length - 1].parent = this;",
      "right" : "children[children.length - 1].parent = this;",
      "info" : "ExpressionStatement[16096-16140]:ExpressionStatement[16096-16140]"
    }, {
      "left" : "if (null != this.last.next)",
      "right" : "if (null != this.last.next)",
      "info" : "IfStatement[16148-16313]:IfStatement[16148-16313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16176-16313]:Block[16176-16313]"
    }, {
      "left" : "throw new IllegalArgumentException(\"duplicate child\");",
      "right" : "throw new IllegalArgumentException(\"duplicate child\");",
      "info" : "ThrowStatement[16251-16305]:ThrowStatement[16251-16305]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16327-16333]:Modifier[16327-16333]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16334-16340]:Modifier[16334-16340]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[16341-16345]:SimpleType[16341-16345]"
    }, {
      "left" : "newNumber",
      "right" : "newNumber",
      "info" : "SimpleName[16346-16355]:SimpleName[16346-16355]"
    }, {
      "left" : "double number",
      "right" : "double number",
      "info" : "SingleVariableDeclaration[16356-16369]:SingleVariableDeclaration[16356-16369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16371-16411]:Block[16371-16411]"
    }, {
      "left" : "return new NumberNode(number);",
      "right" : "return new NumberNode(number);",
      "info" : "ReturnStatement[16377-16407]:ReturnStatement[16377-16407]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16415-16421]:Modifier[16415-16421]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16422-16428]:Modifier[16422-16428]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[16429-16433]:SimpleType[16429-16433]"
    }, {
      "left" : "newNumber",
      "right" : "newNumber",
      "info" : "SimpleName[16434-16443]:SimpleName[16434-16443]"
    }, {
      "left" : "double number",
      "right" : "double number",
      "info" : "SingleVariableDeclaration[16444-16457]:SingleVariableDeclaration[16444-16457]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[16459-16469]:SingleVariableDeclaration[16459-16469]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[16471-16481]:SingleVariableDeclaration[16471-16481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16483-16539]:Block[16483-16539]"
    }, {
      "left" : "return new NumberNode(number, lineno, charno);",
      "right" : "return new NumberNode(number, lineno, charno);",
      "info" : "ReturnStatement[16489-16535]:ReturnStatement[16489-16535]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16543-16549]:Modifier[16543-16549]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16550-16556]:Modifier[16550-16556]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[16557-16561]:SimpleType[16557-16561]"
    }, {
      "left" : "newString",
      "right" : "newString",
      "info" : "SimpleName[16562-16571]:SimpleName[16562-16571]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[16572-16582]:SingleVariableDeclaration[16572-16582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16584-16635]:Block[16584-16635]"
    }, {
      "left" : "return new StringNode(Token.STRING, str);",
      "right" : "return new StringNode(Token.STRING, str);",
      "info" : "ReturnStatement[16590-16631]:ReturnStatement[16590-16631]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16639-16645]:Modifier[16639-16645]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16646-16652]:Modifier[16646-16652]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[16653-16657]:SimpleType[16653-16657]"
    }, {
      "left" : "newString",
      "right" : "newString",
      "info" : "SimpleName[16658-16667]:SimpleName[16658-16667]"
    }, {
      "left" : "int type",
      "right" : "int type",
      "info" : "SingleVariableDeclaration[16668-16676]:SingleVariableDeclaration[16668-16676]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[16678-16688]:SingleVariableDeclaration[16678-16688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16690-16733]:Block[16690-16733]"
    }, {
      "left" : "return new StringNode(type, str);",
      "right" : "return new StringNode(type, str);",
      "info" : "ReturnStatement[16696-16729]:ReturnStatement[16696-16729]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16737-16743]:Modifier[16737-16743]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16744-16750]:Modifier[16744-16750]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[16751-16755]:SimpleType[16751-16755]"
    }, {
      "left" : "newString",
      "right" : "newString",
      "info" : "SimpleName[16756-16765]:SimpleName[16756-16765]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[16766-16776]:SingleVariableDeclaration[16766-16776]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[16778-16788]:SingleVariableDeclaration[16778-16788]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[16790-16800]:SingleVariableDeclaration[16790-16800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16802-16869]:Block[16802-16869]"
    }, {
      "left" : "return new StringNode(Token.STRING, str, lineno, charno);",
      "right" : "return new StringNode(Token.STRING, str, lineno, charno);",
      "info" : "ReturnStatement[16808-16865]:ReturnStatement[16808-16865]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16873-16879]:Modifier[16873-16879]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16880-16886]:Modifier[16880-16886]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[16887-16891]:SimpleType[16887-16891]"
    }, {
      "left" : "newString",
      "right" : "newString",
      "info" : "SimpleName[16892-16901]:SimpleName[16892-16901]"
    }, {
      "left" : "int type",
      "right" : "int type",
      "info" : "SingleVariableDeclaration[16902-16910]:SingleVariableDeclaration[16902-16910]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[16912-16922]:SingleVariableDeclaration[16912-16922]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[16924-16934]:SingleVariableDeclaration[16924-16934]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[16936-16946]:SingleVariableDeclaration[16936-16946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16948-17007]:Block[16948-17007]"
    }, {
      "left" : "return new StringNode(type, str, lineno, charno);",
      "right" : "return new StringNode(type, str, lineno, charno);",
      "info" : "ReturnStatement[16954-17003]:ReturnStatement[16954-17003]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17011-17017]:Modifier[17011-17017]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[17018-17021]:PrimitiveType[17018-17021]"
    }, {
      "left" : "getType",
      "right" : "getType",
      "info" : "SimpleName[17022-17029]:SimpleName[17022-17029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17032-17054]:Block[17032-17054]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[17038-17050]:ReturnStatement[17038-17050]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17058-17064]:Modifier[17058-17064]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17065-17069]:PrimitiveType[17065-17069]"
    }, {
      "left" : "setType",
      "right" : "setType",
      "info" : "SimpleName[17070-17077]:SimpleName[17070-17077]"
    }, {
      "left" : "int type",
      "right" : "int type",
      "info" : "SingleVariableDeclaration[17078-17086]:SingleVariableDeclaration[17078-17086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17088-17115]:Block[17088-17115]"
    }, {
      "left" : "this.type = type;",
      "right" : "this.type = type;",
      "info" : "ExpressionStatement[17094-17111]:ExpressionStatement[17094-17111]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17119-17125]:Modifier[17119-17125]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[17126-17133]:PrimitiveType[17126-17133]"
    }, {
      "left" : "hasChildren",
      "right" : "hasChildren",
      "info" : "SimpleName[17134-17145]:SimpleName[17134-17145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17148-17179]:Block[17148-17179]"
    }, {
      "left" : "return first != null;",
      "right" : "return first != null;",
      "info" : "ReturnStatement[17154-17175]:ReturnStatement[17154-17175]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17183-17189]:Modifier[17183-17189]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[17190-17194]:SimpleType[17190-17194]"
    }, {
      "left" : "getFirstChild",
      "right" : "getFirstChild",
      "info" : "SimpleName[17195-17208]:SimpleName[17195-17208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17211-17234]:Block[17211-17234]"
    }, {
      "left" : "return first;",
      "right" : "return first;",
      "info" : "ReturnStatement[17217-17230]:ReturnStatement[17217-17230]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17238-17244]:Modifier[17238-17244]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[17245-17249]:SimpleType[17245-17249]"
    }, {
      "left" : "getLastChild",
      "right" : "getLastChild",
      "info" : "SimpleName[17250-17262]:SimpleName[17250-17262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17265-17287]:Block[17265-17287]"
    }, {
      "left" : "return last;",
      "right" : "return last;",
      "info" : "ReturnStatement[17271-17283]:ReturnStatement[17271-17283]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17291-17297]:Modifier[17291-17297]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[17298-17302]:SimpleType[17298-17302]"
    }, {
      "left" : "getNext",
      "right" : "getNext",
      "info" : "SimpleName[17303-17310]:SimpleName[17303-17310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17313-17335]:Block[17313-17335]"
    }, {
      "left" : "return next;",
      "right" : "return next;",
      "info" : "ReturnStatement[17319-17331]:ReturnStatement[17319-17331]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17339-17345]:Modifier[17339-17345]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[17346-17350]:SimpleType[17346-17350]"
    }, {
      "left" : "getChildBefore",
      "right" : "getChildBefore",
      "info" : "SimpleName[17351-17365]:SimpleName[17351-17365]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[17366-17376]:SingleVariableDeclaration[17366-17376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17378-17613]:Block[17378-17697]"
    }, {
      "left" : "if (child == first)",
      "right" : "if (child == first)",
      "info" : "IfStatement[17384-17430]:IfStatement[17384-17430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17404-17430]:Block[17404-17430]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17412-17424]:ReturnStatement[17412-17424]"
    }, {
      "left" : "Node n = first;",
      "right" : "Node n = first;",
      "info" : "VariableDeclarationStatement[17435-17450]:VariableDeclarationStatement[17435-17450]"
    }, {
      "left" : "while (n.next != child)",
      "right" : "while (n.next != child)",
      "info" : "WhileStatement[17456-17595]:WhileStatement[17540-17679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17480-17595]:Block[17564-17679]"
    }, {
      "left" : "n = n.next;",
      "right" : "n = n.next;",
      "info" : "ExpressionStatement[17488-17499]:ExpressionStatement[17572-17583]"
    }, {
      "left" : "if (n == null)",
      "right" : "if (n == null)",
      "info" : "IfStatement[17506-17589]:IfStatement[17590-17673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17521-17589]:Block[17605-17673]"
    }, {
      "left" : "throw new RuntimeException(\"node is not a child\");",
      "right" : "throw new RuntimeException(\"node is not a child\");",
      "info" : "ThrowStatement[17531-17581]:ThrowStatement[17615-17665]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[17600-17609]:ReturnStatement[17684-17693]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17617-17623]:Modifier[17701-17707]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[17624-17628]:SimpleType[17708-17712]"
    }, {
      "left" : "getChildAtIndex",
      "right" : "getChildAtIndex",
      "info" : "SimpleName[17629-17644]:SimpleName[17713-17728]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[17645-17650]:SingleVariableDeclaration[17729-17734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17652-17746]:Block[17736-17830]"
    }, {
      "left" : "Node n = first;",
      "right" : "Node n = first;",
      "info" : "VariableDeclarationStatement[17658-17673]:VariableDeclarationStatement[17742-17757]"
    }, {
      "left" : "while (i > 0)",
      "right" : "while (i > 0)",
      "info" : "WhileStatement[17678-17728]:WhileStatement[17762-17812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17692-17728]:Block[17776-17812]"
    }, {
      "left" : "n = n.next;",
      "right" : "n = n.next;",
      "info" : "ExpressionStatement[17700-17711]:ExpressionStatement[17784-17795]"
    }, {
      "left" : "i--;",
      "right" : "i--;",
      "info" : "ExpressionStatement[17718-17722]:ExpressionStatement[17802-17806]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[17733-17742]:ReturnStatement[17817-17826]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17750-17756]:Modifier[17834-17840]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[17757-17760]:PrimitiveType[17841-17844]"
    }, {
      "left" : "getIndexOfChild",
      "right" : "getIndexOfChild",
      "info" : "SimpleName[17761-17776]:SimpleName[17845-17860]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[17777-17787]:SingleVariableDeclaration[17861-17871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17789-17954]:Block[17873-18038]"
    }, {
      "left" : "Node n = first;",
      "right" : "Node n = first;",
      "info" : "VariableDeclarationStatement[17795-17810]:VariableDeclarationStatement[17879-17894]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[17815-17825]:VariableDeclarationStatement[17899-17909]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[17830-17935]:WhileStatement[17914-18019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17848-17935]:Block[17932-18019]"
    }, {
      "left" : "if (child == n)",
      "right" : "if (child == n)",
      "info" : "IfStatement[17856-17899]:IfStatement[17940-17983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17872-17899]:Block[17956-17983]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[17882-17891]:ReturnStatement[17966-17975]"
    }, {
      "left" : "n = n.next;",
      "right" : "n = n.next;",
      "info" : "ExpressionStatement[17907-17918]:ExpressionStatement[17991-18002]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[17925-17929]:ExpressionStatement[18009-18013]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[17940-17950]:ReturnStatement[18024-18034]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17958-17964]:Modifier[18042-18048]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[17965-17969]:SimpleType[18049-18053]"
    }, {
      "left" : "getLastSibling",
      "right" : "getLastSibling",
      "info" : "SimpleName[17970-17984]:SimpleName[18054-18068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17987-18078]:Block[18071-18162]"
    }, {
      "left" : "Node n = this;",
      "right" : "Node n = this;",
      "info" : "VariableDeclarationStatement[17993-18007]:VariableDeclarationStatement[18077-18091]"
    }, {
      "left" : "while (n.next != null)",
      "right" : "while (n.next != null)",
      "info" : "WhileStatement[18012-18060]:WhileStatement[18096-18144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18035-18060]:Block[18119-18144]"
    }, {
      "left" : "n = n.next;",
      "right" : "n = n.next;",
      "info" : "ExpressionStatement[18043-18054]:ExpressionStatement[18127-18138]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[18065-18074]:ReturnStatement[18149-18158]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18082-18088]:Modifier[18166-18172]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18089-18093]:PrimitiveType[18173-18177]"
    }, {
      "left" : "addChildToFront",
      "right" : "addChildToFront",
      "info" : "SimpleName[18094-18109]:SimpleName[18178-18193]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[18110-18120]:SingleVariableDeclaration[18194-18204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18122-18353]:Block[18206-18437]"
    }, {
      "left" : "Preconditions.checkArgument(child.parent == null);",
      "right" : "Preconditions.checkArgument(child.parent == null);",
      "info" : "ExpressionStatement[18128-18178]:ExpressionStatement[18212-18262]"
    }, {
      "left" : "Preconditions.checkArgument(child.next == null);",
      "right" : "Preconditions.checkArgument(child.next == null);",
      "info" : "ExpressionStatement[18183-18231]:ExpressionStatement[18267-18315]"
    }, {
      "left" : "child.parent = this;",
      "right" : "child.parent = this;",
      "info" : "ExpressionStatement[18236-18256]:ExpressionStatement[18320-18340]"
    }, {
      "left" : "child.next = first;",
      "right" : "child.next = first;",
      "info" : "ExpressionStatement[18261-18280]:ExpressionStatement[18345-18364]"
    }, {
      "left" : "first = child;",
      "right" : "first = child;",
      "info" : "ExpressionStatement[18285-18299]:ExpressionStatement[18369-18383]"
    }, {
      "left" : "if (last == null)",
      "right" : "if (last == null)",
      "info" : "IfStatement[18304-18349]:IfStatement[18388-18433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18322-18349]:Block[18406-18433]"
    }, {
      "left" : "last = child;",
      "right" : "last = child;",
      "info" : "ExpressionStatement[18330-18343]:ExpressionStatement[18414-18427]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18357-18363]:Modifier[18441-18447]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18364-18368]:PrimitiveType[18448-18452]"
    }, {
      "left" : "addChildToBack",
      "right" : "addChildToBack",
      "info" : "SimpleName[18369-18383]:SimpleName[18453-18467]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[18384-18394]:SingleVariableDeclaration[18468-18478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18396-18670]:Block[18480-18754]"
    }, {
      "left" : "Preconditions.checkArgument(child.parent == null);",
      "right" : "Preconditions.checkArgument(child.parent == null);",
      "info" : "ExpressionStatement[18402-18452]:ExpressionStatement[18486-18536]"
    }, {
      "left" : "Preconditions.checkArgument(child.next == null);",
      "right" : "Preconditions.checkArgument(child.next == null);",
      "info" : "ExpressionStatement[18457-18505]:ExpressionStatement[18541-18589]"
    }, {
      "left" : "child.parent = this;",
      "right" : "child.parent = this;",
      "info" : "ExpressionStatement[18510-18530]:ExpressionStatement[18594-18614]"
    }, {
      "left" : "child.next = null;",
      "right" : "child.next = null;",
      "info" : "ExpressionStatement[18535-18553]:ExpressionStatement[18619-18637]"
    }, {
      "left" : "if (last == null)",
      "right" : "if (last == null)",
      "info" : "IfStatement[18558-18625]:IfStatement[18642-18709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18576-18625]:Block[18660-18709]"
    }, {
      "left" : "first = last = child;",
      "right" : "first = last = child;",
      "info" : "ExpressionStatement[18584-18605]:ExpressionStatement[18668-18689]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[18612-18619]:ReturnStatement[18696-18703]"
    }, {
      "left" : "last.next = child;",
      "right" : "last.next = child;",
      "info" : "ExpressionStatement[18630-18648]:ExpressionStatement[18714-18732]"
    }, {
      "left" : "last = child;",
      "right" : "last = child;",
      "info" : "ExpressionStatement[18653-18666]:ExpressionStatement[18737-18750]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18674-18680]:Modifier[18758-18764]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18681-18685]:PrimitiveType[18765-18769]"
    }, {
      "left" : "addChildrenToFront",
      "right" : "addChildrenToFront",
      "info" : "SimpleName[18686-18704]:SimpleName[18770-18788]"
    }, {
      "left" : "Node children",
      "right" : "Node children",
      "info" : "SingleVariableDeclaration[18705-18718]:SingleVariableDeclaration[18789-18802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18720-19030]:Block[18804-19114]"
    }, {
      "left" : "for (Node child = children; child != null; child = child.next)",
      "right" : "for (Node child = children; child != null; child = child.next)",
      "info" : "ForStatement[18726-18880]:ForStatement[18810-18964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18789-18880]:Block[18873-18964]"
    }, {
      "left" : "Preconditions.checkArgument(child.parent == null);",
      "right" : "Preconditions.checkArgument(child.parent == null);",
      "info" : "ExpressionStatement[18797-18847]:ExpressionStatement[18881-18931]"
    }, {
      "left" : "child.parent = this;",
      "right" : "child.parent = this;",
      "info" : "ExpressionStatement[18854-18874]:ExpressionStatement[18938-18958]"
    }, {
      "left" : "Node lastSib = children.getLastSibling();",
      "right" : "Node lastSib = children.getLastSibling();",
      "info" : "VariableDeclarationStatement[18885-18926]:VariableDeclarationStatement[18969-19010]"
    }, {
      "left" : "lastSib.next = first;",
      "right" : "lastSib.next = first;",
      "info" : "ExpressionStatement[18931-18952]:ExpressionStatement[19015-19036]"
    }, {
      "left" : "first = children;",
      "right" : "first = children;",
      "info" : "ExpressionStatement[18957-18974]:ExpressionStatement[19041-19058]"
    }, {
      "left" : "if (last == null)",
      "right" : "if (last == null)",
      "info" : "IfStatement[18979-19026]:IfStatement[19063-19110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18997-19026]:Block[19081-19110]"
    }, {
      "left" : "last = lastSib;",
      "right" : "last = lastSib;",
      "info" : "ExpressionStatement[19005-19020]:ExpressionStatement[19089-19104]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19034-19040]:Modifier[19118-19124]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19041-19045]:PrimitiveType[19125-19129]"
    }, {
      "left" : "addChildrenToBack",
      "right" : "addChildrenToBack",
      "info" : "SimpleName[19046-19063]:SimpleName[19130-19147]"
    }, {
      "left" : "Node children",
      "right" : "Node children",
      "info" : "SingleVariableDeclaration[19064-19077]:SingleVariableDeclaration[19148-19161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19079-19132]:Block[19163-19216]"
    }, {
      "left" : "addChildrenAfter(children, getLastChild());",
      "right" : "addChildrenAfter(children, getLastChild());",
      "info" : "ExpressionStatement[19085-19128]:ExpressionStatement[19169-19212]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19180-19186]:Modifier[19264-19270]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19187-19191]:PrimitiveType[19271-19275]"
    }, {
      "left" : "addChildBefore",
      "right" : "addChildBefore",
      "info" : "SimpleName[19192-19206]:SimpleName[19276-19290]"
    }, {
      "left" : "Node newChild",
      "right" : "Node newChild",
      "info" : "SingleVariableDeclaration[19207-19220]:SingleVariableDeclaration[19291-19304]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[19222-19231]:SingleVariableDeclaration[19306-19315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19233-19788]:Block[19317-19872]"
    }, {
      "left" : "Preconditions.checkArgument(node != null && node.parent == this,\n        \"The existing child node of the parent should not be null.\");",
      "right" : "Preconditions.checkArgument(node != null && node.parent == this,\n        \"The existing child node of the parent should not be null.\");",
      "info" : "ExpressionStatement[19239-19373]:ExpressionStatement[19323-19457]"
    }, {
      "left" : "Preconditions.checkArgument(newChild.next == null,\n        \"The new child node has siblings.\");",
      "right" : "Preconditions.checkArgument(newChild.next == null,\n        \"The new child node has siblings.\");",
      "info" : "ExpressionStatement[19378-19473]:ExpressionStatement[19462-19557]"
    }, {
      "left" : "Preconditions.checkArgument(newChild.parent == null,\n        \"The new child node already has a parent.\");",
      "right" : "Preconditions.checkArgument(newChild.parent == null,\n        \"The new child node already has a parent.\");",
      "info" : "ExpressionStatement[19478-19583]:ExpressionStatement[19562-19667]"
    }, {
      "left" : "if (first == node)",
      "right" : "if (first == node)",
      "info" : "IfStatement[19588-19711]:IfStatement[19672-19795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19607-19711]:Block[19691-19795]"
    }, {
      "left" : "newChild.parent = this;",
      "right" : "newChild.parent = this;",
      "info" : "ExpressionStatement[19615-19638]:ExpressionStatement[19699-19722]"
    }, {
      "left" : "newChild.next = first;",
      "right" : "newChild.next = first;",
      "info" : "ExpressionStatement[19645-19667]:ExpressionStatement[19729-19751]"
    }, {
      "left" : "first = newChild;",
      "right" : "first = newChild;",
      "info" : "ExpressionStatement[19674-19691]:ExpressionStatement[19758-19775]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[19698-19705]:ReturnStatement[19782-19789]"
    }, {
      "left" : "Node prev = getChildBefore(node);",
      "right" : "Node prev = getChildBefore(node);",
      "info" : "VariableDeclarationStatement[19716-19749]:VariableDeclarationStatement[19800-19833]"
    }, {
      "left" : "addChildAfter(newChild, prev);",
      "right" : "addChildAfter(newChild, prev);",
      "info" : "ExpressionStatement[19754-19784]:ExpressionStatement[19838-19868]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19835-19841]:Modifier[19919-19925]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19842-19846]:PrimitiveType[19926-19930]"
    }, {
      "left" : "addChildAfter",
      "right" : "addChildAfter",
      "info" : "SimpleName[19847-19860]:SimpleName[19931-19944]"
    }, {
      "left" : "Node newChild",
      "right" : "Node newChild",
      "info" : "SingleVariableDeclaration[19861-19874]:SingleVariableDeclaration[19945-19958]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[19876-19885]:SingleVariableDeclaration[19960-19969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19887-20030]:Block[19971-20114]"
    }, {
      "left" : "Preconditions.checkArgument(newChild.next == null,\n        \"The new child node has siblings.\");",
      "right" : "Preconditions.checkArgument(newChild.next == null,\n        \"The new child node has siblings.\");",
      "info" : "ExpressionStatement[19893-19988]:ExpressionStatement[19977-20072]"
    }, {
      "left" : "addChildrenAfter(newChild, node);",
      "right" : "addChildrenAfter(newChild, node);",
      "info" : "ExpressionStatement[19993-20026]:ExpressionStatement[20077-20110]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20082-20088]:Modifier[20166-20172]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20089-20093]:PrimitiveType[20173-20177]"
    }, {
      "left" : "addChildrenAfter",
      "right" : "addChildrenAfter",
      "info" : "SimpleName[20094-20110]:SimpleName[20178-20194]"
    }, {
      "left" : "Node children",
      "right" : "Node children",
      "info" : "SingleVariableDeclaration[20111-20124]:SingleVariableDeclaration[20195-20208]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[20126-20135]:SingleVariableDeclaration[20210-20219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20137-20791]:Block[20221-20875]"
    }, {
      "left" : "Preconditions.checkArgument(node == null || node.parent == this);",
      "right" : "Preconditions.checkArgument(node == null || node.parent == this);",
      "info" : "ExpressionStatement[20143-20208]:ExpressionStatement[20227-20292]"
    }, {
      "left" : "for (Node child = children; child != null; child = child.next)",
      "right" : "for (Node child = children; child != null; child = child.next)",
      "info" : "ForStatement[20213-20367]:ForStatement[20297-20451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20276-20367]:Block[20360-20451]"
    }, {
      "left" : "Preconditions.checkArgument(child.parent == null);",
      "right" : "Preconditions.checkArgument(child.parent == null);",
      "info" : "ExpressionStatement[20284-20334]:ExpressionStatement[20368-20418]"
    }, {
      "left" : "child.parent = this;",
      "right" : "child.parent = this;",
      "info" : "ExpressionStatement[20341-20361]:ExpressionStatement[20425-20445]"
    }, {
      "left" : "Node lastSibling = children.getLastSibling();",
      "right" : "Node lastSibling = children.getLastSibling();",
      "info" : "VariableDeclarationStatement[20373-20418]:VariableDeclarationStatement[20457-20502]"
    }, {
      "left" : "if (node != null)",
      "right" : "if (node != null)",
      "info" : "IfStatement[20423-20787]:IfStatement[20507-20871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20441-20604]:Block[20525-20688]"
    }, {
      "left" : "Node oldNext = node.next;",
      "right" : "Node oldNext = node.next;",
      "info" : "VariableDeclarationStatement[20449-20474]:VariableDeclarationStatement[20533-20558]"
    }, {
      "left" : "node.next = children;",
      "right" : "node.next = children;",
      "info" : "ExpressionStatement[20481-20502]:ExpressionStatement[20565-20586]"
    }, {
      "left" : "lastSibling.next = oldNext;",
      "right" : "lastSibling.next = oldNext;",
      "info" : "ExpressionStatement[20509-20536]:ExpressionStatement[20593-20620]"
    }, {
      "left" : "if (node == last)",
      "right" : "if (node == last)",
      "info" : "IfStatement[20543-20598]:IfStatement[20627-20682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20561-20598]:Block[20645-20682]"
    }, {
      "left" : "last = lastSibling;",
      "right" : "last = lastSibling;",
      "info" : "ExpressionStatement[20571-20590]:ExpressionStatement[20655-20674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20610-20787]:Block[20694-20871]"
    }, {
      "left" : "if (first != null)",
      "right" : "if (first != null)",
      "info" : "IfStatement[20652-20757]:IfStatement[20736-20841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20671-20714]:Block[20755-20798]"
    }, {
      "left" : "lastSibling.next = first;",
      "right" : "lastSibling.next = first;",
      "info" : "ExpressionStatement[20681-20706]:ExpressionStatement[20765-20790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20720-20757]:Block[20804-20841]"
    }, {
      "left" : "last = lastSibling;",
      "right" : "last = lastSibling;",
      "info" : "ExpressionStatement[20730-20749]:ExpressionStatement[20814-20833]"
    }, {
      "left" : "first = children;",
      "right" : "first = children;",
      "info" : "ExpressionStatement[20764-20781]:ExpressionStatement[20848-20865]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20857-20863]:Modifier[20941-20947]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20864-20868]:PrimitiveType[20948-20952]"
    }, {
      "left" : "removeChild",
      "right" : "removeChild",
      "info" : "SimpleName[20869-20880]:SimpleName[20953-20964]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[20881-20891]:SingleVariableDeclaration[20965-20975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20893-21134]:Block[20977-21218]"
    }, {
      "left" : "Node prev = getChildBefore(child);",
      "right" : "Node prev = getChildBefore(child);",
      "info" : "VariableDeclarationStatement[20899-20933]:VariableDeclarationStatement[20983-21017]"
    }, {
      "left" : "if (prev == null)",
      "right" : "if (prev == null)",
      "info" : "IfStatement[20938-21032]:IfStatement[21022-21116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20956-20989]:Block[21040-21073]"
    }, {
      "left" : "first = first.next;",
      "right" : "first = first.next;",
      "info" : "ExpressionStatement[20964-20983]:ExpressionStatement[21048-21067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20995-21032]:Block[21079-21116]"
    }, {
      "left" : "prev.next = child.next;",
      "right" : "prev.next = child.next;",
      "info" : "ExpressionStatement[21003-21026]:ExpressionStatement[21087-21110]"
    }, {
      "left" : "if (child == last)",
      "right" : "if (child == last)",
      "info" : "IfStatement[21037-21082]:IfStatement[21121-21166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21056-21082]:Block[21140-21166]"
    }, {
      "left" : "last = prev;",
      "right" : "last = prev;",
      "info" : "ExpressionStatement[21064-21076]:ExpressionStatement[21148-21160]"
    }, {
      "left" : "child.next = null;",
      "right" : "child.next = null;",
      "info" : "ExpressionStatement[21087-21105]:ExpressionStatement[21171-21189]"
    }, {
      "left" : "child.parent = null;",
      "right" : "child.parent = null;",
      "info" : "ExpressionStatement[21110-21130]:ExpressionStatement[21194-21214]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21211-21217]:Modifier[21295-21301]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21218-21222]:PrimitiveType[21302-21306]"
    }, {
      "left" : "replaceChild",
      "right" : "replaceChild",
      "info" : "SimpleName[21223-21235]:SimpleName[21307-21319]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[21236-21246]:SingleVariableDeclaration[21320-21330]"
    }, {
      "left" : "Node newChild",
      "right" : "Node newChild",
      "info" : "SingleVariableDeclaration[21248-21261]:SingleVariableDeclaration[21332-21345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21263-21861]:Block[21347-21945]"
    }, {
      "left" : "Preconditions.checkArgument(newChild.next == null,\n        \"The new child node has siblings.\");",
      "right" : "Preconditions.checkArgument(newChild.next == null,\n        \"The new child node has siblings.\");",
      "info" : "ExpressionStatement[21269-21364]:ExpressionStatement[21353-21448]"
    }, {
      "left" : "Preconditions.checkArgument(newChild.parent == null,\n        \"The new child node already has a parent.\");",
      "right" : "Preconditions.checkArgument(newChild.parent == null,\n        \"The new child node already has a parent.\");",
      "info" : "ExpressionStatement[21369-21474]:ExpressionStatement[21453-21558]"
    }, {
      "left" : "newChild.copyInformationFrom(child);",
      "right" : "newChild.copyInformationFrom(child);",
      "info" : "ExpressionStatement[21520-21556]:ExpressionStatement[21604-21640]"
    }, {
      "left" : "newChild.next = child.next;",
      "right" : "newChild.next = child.next;",
      "info" : "ExpressionStatement[21562-21589]:ExpressionStatement[21646-21673]"
    }, {
      "left" : "newChild.parent = this;",
      "right" : "newChild.parent = this;",
      "info" : "ExpressionStatement[21594-21617]:ExpressionStatement[21678-21701]"
    }, {
      "left" : "if (child == first)",
      "right" : "if (child == first)",
      "info" : "IfStatement[21622-21755]:IfStatement[21706-21839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21642-21673]:Block[21726-21757]"
    }, {
      "left" : "first = newChild;",
      "right" : "first = newChild;",
      "info" : "ExpressionStatement[21650-21667]:ExpressionStatement[21734-21751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21679-21755]:Block[21763-21839]"
    }, {
      "left" : "Node prev = getChildBefore(child);",
      "right" : "Node prev = getChildBefore(child);",
      "info" : "VariableDeclarationStatement[21687-21721]:VariableDeclarationStatement[21771-21805]"
    }, {
      "left" : "prev.next = newChild;",
      "right" : "prev.next = newChild;",
      "info" : "ExpressionStatement[21728-21749]:ExpressionStatement[21812-21833]"
    }, {
      "left" : "if (child == last)",
      "right" : "if (child == last)",
      "info" : "IfStatement[21760-21809]:IfStatement[21844-21893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21779-21809]:Block[21863-21893]"
    }, {
      "left" : "last = newChild;",
      "right" : "last = newChild;",
      "info" : "ExpressionStatement[21787-21803]:ExpressionStatement[21871-21887]"
    }, {
      "left" : "child.next = null;",
      "right" : "child.next = null;",
      "info" : "ExpressionStatement[21814-21832]:ExpressionStatement[21898-21916]"
    }, {
      "left" : "child.parent = null;",
      "right" : "child.parent = null;",
      "info" : "ExpressionStatement[21837-21857]:ExpressionStatement[21921-21941]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21865-21871]:Modifier[21949-21955]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21872-21876]:PrimitiveType[21956-21960]"
    }, {
      "left" : "replaceChildAfter",
      "right" : "replaceChildAfter",
      "info" : "SimpleName[21877-21894]:SimpleName[21961-21978]"
    }, {
      "left" : "Node prevChild",
      "right" : "Node prevChild",
      "info" : "SingleVariableDeclaration[21895-21909]:SingleVariableDeclaration[21979-21993]"
    }, {
      "left" : "Node newChild",
      "right" : "Node newChild",
      "info" : "SingleVariableDeclaration[21911-21924]:SingleVariableDeclaration[21995-22008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21926-22557]:Block[22010-22641]"
    }, {
      "left" : "Preconditions.checkArgument(prevChild.parent == this,\n      \"prev is not a child of this node.\");",
      "right" : "Preconditions.checkArgument(prevChild.parent == this,\n      \"prev is not a child of this node.\");",
      "info" : "ExpressionStatement[21932-22029]:ExpressionStatement[22016-22113]"
    }, {
      "left" : "Preconditions.checkArgument(newChild.next == null,\n        \"The new child node has siblings.\");",
      "right" : "Preconditions.checkArgument(newChild.next == null,\n        \"The new child node has siblings.\");",
      "info" : "ExpressionStatement[22035-22130]:ExpressionStatement[22119-22214]"
    }, {
      "left" : "Preconditions.checkArgument(newChild.parent == null,\n        \"The new child node already has a parent.\");",
      "right" : "Preconditions.checkArgument(newChild.parent == null,\n        \"The new child node already has a parent.\");",
      "info" : "ExpressionStatement[22135-22240]:ExpressionStatement[22219-22324]"
    }, {
      "left" : "newChild.copyInformationFrom(prevChild);",
      "right" : "newChild.copyInformationFrom(prevChild);",
      "info" : "ExpressionStatement[22286-22326]:ExpressionStatement[22370-22410]"
    }, {
      "left" : "Node child = prevChild.next;",
      "right" : "Node child = prevChild.next;",
      "info" : "VariableDeclarationStatement[22332-22360]:VariableDeclarationStatement[22416-22444]"
    }, {
      "left" : "newChild.next = child.next;",
      "right" : "newChild.next = child.next;",
      "info" : "ExpressionStatement[22365-22392]:ExpressionStatement[22449-22476]"
    }, {
      "left" : "newChild.parent = this;",
      "right" : "newChild.parent = this;",
      "info" : "ExpressionStatement[22397-22420]:ExpressionStatement[22481-22504]"
    }, {
      "left" : "prevChild.next = newChild;",
      "right" : "prevChild.next = newChild;",
      "info" : "ExpressionStatement[22425-22451]:ExpressionStatement[22509-22535]"
    }, {
      "left" : "if (child == last)",
      "right" : "if (child == last)",
      "info" : "IfStatement[22456-22505]:IfStatement[22540-22589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22475-22505]:Block[22559-22589]"
    }, {
      "left" : "last = newChild;",
      "right" : "last = newChild;",
      "info" : "ExpressionStatement[22483-22499]:ExpressionStatement[22567-22583]"
    }, {
      "left" : "child.next = null;",
      "right" : "child.next = null;",
      "info" : "ExpressionStatement[22510-22528]:ExpressionStatement[22594-22612]"
    }, {
      "left" : "child.parent = null;",
      "right" : "child.parent = null;",
      "info" : "ExpressionStatement[22533-22553]:ExpressionStatement[22617-22637]"
    }, {
      "left" : "@VisibleForTesting",
      "right" : "@VisibleForTesting",
      "info" : "MarkerAnnotation[22561-22579]:MarkerAnnotation[22645-22663]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[22582-22594]:SimpleType[22666-22678]"
    }, {
      "left" : "lookupProperty",
      "right" : "lookupProperty",
      "info" : "SimpleName[22595-22609]:SimpleName[22679-22693]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[22610-22622]:SingleVariableDeclaration[22694-22706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22624-22758]:Block[22708-22842]"
    }, {
      "left" : "PropListItem x = propListHead;",
      "right" : "PropListItem x = propListHead;",
      "info" : "VariableDeclarationStatement[22630-22660]:VariableDeclarationStatement[22714-22744]"
    }, {
      "left" : "while (x != null && propType != x.getType())",
      "right" : "while (x != null && propType != x.getType())",
      "info" : "WhileStatement[22665-22740]:WhileStatement[22749-22824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22710-22740]:Block[22794-22824]"
    }, {
      "left" : "x = x.getNext();",
      "right" : "x = x.getNext();",
      "info" : "ExpressionStatement[22718-22734]:ExpressionStatement[22802-22818]"
    }, {
      "left" : "return x;",
      "right" : "return x;",
      "info" : "ReturnStatement[22745-22754]:ReturnStatement[22829-22838]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23005-23011]:Modifier[23089-23095]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[23012-23016]:SimpleType[23096-23100]"
    }, {
      "left" : "clonePropsFrom",
      "right" : "clonePropsFrom",
      "info" : "SimpleName[23017-23031]:SimpleName[23101-23115]"
    }, {
      "left" : "Node other",
      "right" : "Node other",
      "info" : "SingleVariableDeclaration[23032-23042]:SingleVariableDeclaration[23116-23126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23044-23208]:Block[23128-23292]"
    }, {
      "left" : "Preconditions.checkState(this.propListHead == null,\n        \"Node has existing properties.\");",
      "right" : "Preconditions.checkState(this.propListHead == null,\n        \"Node has existing properties.\");",
      "info" : "ExpressionStatement[23050-23143]:ExpressionStatement[23134-23227]"
    }, {
      "left" : "this.propListHead = other.propListHead;",
      "right" : "this.propListHead = other.propListHead;",
      "info" : "ExpressionStatement[23148-23187]:ExpressionStatement[23232-23271]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[23192-23204]:ReturnStatement[23276-23288]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23212-23218]:Modifier[23296-23302]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23219-23223]:PrimitiveType[23303-23307]"
    }, {
      "left" : "removeProp",
      "right" : "removeProp",
      "info" : "SimpleName[23224-23234]:SimpleName[23308-23318]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[23235-23247]:SingleVariableDeclaration[23319-23331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23249-23385]:Block[23333-23469]"
    }, {
      "left" : "PropListItem result = removeProp(propListHead, propType);",
      "right" : "PropListItem result = removeProp(propListHead, propType);",
      "info" : "VariableDeclarationStatement[23255-23312]:VariableDeclarationStatement[23339-23396]"
    }, {
      "left" : "if (result != propListHead)",
      "right" : "if (result != propListHead)",
      "info" : "IfStatement[23317-23381]:IfStatement[23401-23465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23345-23381]:Block[23429-23465]"
    }, {
      "left" : "propListHead = result;",
      "right" : "propListHead = result;",
      "info" : "ExpressionStatement[23353-23375]:ExpressionStatement[23437-23459]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23575-23582]:Modifier[23659-23666]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[23583-23595]:SimpleType[23667-23679]"
    }, {
      "left" : "removeProp",
      "right" : "removeProp",
      "info" : "SimpleName[23596-23606]:SimpleName[23680-23690]"
    }, {
      "left" : "PropListItem item",
      "right" : "PropListItem item",
      "info" : "SingleVariableDeclaration[23607-23624]:SingleVariableDeclaration[23691-23708]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[23626-23638]:SingleVariableDeclaration[23710-23722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23640-23964]:Block[23724-24048]"
    }, {
      "left" : "if (item == null)",
      "right" : "if (item == null)",
      "info" : "IfStatement[23646-23960]:IfStatement[23730-24044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23664-23690]:Block[23748-23774]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23672-23684]:ReturnStatement[23756-23768]"
    }, {
      "left" : "if (item.getType() == propType)",
      "right" : "if (item.getType() == propType)",
      "info" : "IfStatement[23696-23960]:IfStatement[23780-24044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23728-23764]:Block[23812-23848]"
    }, {
      "left" : "return item.getNext();",
      "right" : "return item.getNext();",
      "info" : "ReturnStatement[23736-23758]:ReturnStatement[23820-23842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23770-23960]:Block[23854-24044]"
    }, {
      "left" : "PropListItem result = removeProp(item.getNext(), propType);",
      "right" : "PropListItem result = removeProp(item.getNext(), propType);",
      "info" : "VariableDeclarationStatement[23778-23837]:VariableDeclarationStatement[23862-23921]"
    }, {
      "left" : "if (result != item.getNext())",
      "right" : "if (result != item.getNext())",
      "info" : "IfStatement[23844-23954]:IfStatement[23928-24038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23874-23918]:Block[23958-24002]"
    }, {
      "left" : "return item.chain(result);",
      "right" : "return item.chain(result);",
      "info" : "ReturnStatement[23884-23910]:ReturnStatement[23968-23994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23924-23954]:Block[24008-24038]"
    }, {
      "left" : "return item;",
      "right" : "return item;",
      "info" : "ReturnStatement[23934-23946]:ReturnStatement[24018-24030]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23968-23974]:Modifier[24052-24058]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[23975-23981]:SimpleType[24059-24065]"
    }, {
      "left" : "getProp",
      "right" : "getProp",
      "info" : "SimpleName[23982-23989]:SimpleName[24066-24073]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[23990-24002]:SingleVariableDeclaration[24074-24086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24004-24142]:Block[24088-24226]"
    }, {
      "left" : "PropListItem item = lookupProperty(propType);",
      "right" : "PropListItem item = lookupProperty(propType);",
      "info" : "VariableDeclarationStatement[24010-24055]:VariableDeclarationStatement[24094-24139]"
    }, {
      "left" : "if (item == null)",
      "right" : "if (item == null)",
      "info" : "IfStatement[24060-24104]:IfStatement[24144-24188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24078-24104]:Block[24162-24188]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24086-24098]:ReturnStatement[24170-24182]"
    }, {
      "left" : "return item.getObjectValue();",
      "right" : "return item.getObjectValue();",
      "info" : "ReturnStatement[24109-24138]:ReturnStatement[24193-24222]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24146-24152]:Modifier[24230-24236]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[24153-24160]:PrimitiveType[24237-24244]"
    }, {
      "left" : "getBooleanProp",
      "right" : "getBooleanProp",
      "info" : "SimpleName[24161-24175]:SimpleName[24245-24259]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[24176-24188]:SingleVariableDeclaration[24260-24272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24190-24233]:Block[24274-24317]"
    }, {
      "left" : "return getIntProp(propType) != 0;",
      "right" : "return getIntProp(propType) != 0;",
      "info" : "ReturnStatement[24196-24229]:ReturnStatement[24280-24313]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24340-24346]:Modifier[24424-24430]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[24347-24350]:PrimitiveType[24431-24434]"
    }, {
      "left" : "getIntProp",
      "right" : "getIntProp",
      "info" : "SimpleName[24351-24361]:SimpleName[24435-24445]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[24362-24374]:SingleVariableDeclaration[24446-24458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24376-24508]:Block[24460-24592]"
    }, {
      "left" : "PropListItem item = lookupProperty(propType);",
      "right" : "PropListItem item = lookupProperty(propType);",
      "info" : "VariableDeclarationStatement[24382-24427]:VariableDeclarationStatement[24466-24511]"
    }, {
      "left" : "if (item == null)",
      "right" : "if (item == null)",
      "info" : "IfStatement[24432-24473]:IfStatement[24516-24557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24450-24473]:Block[24534-24557]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[24458-24467]:ReturnStatement[24542-24551]"
    }, {
      "left" : "return item.getIntValue();",
      "right" : "return item.getIntValue();",
      "info" : "ReturnStatement[24478-24504]:ReturnStatement[24562-24588]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24512-24518]:Modifier[24596-24602]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[24519-24522]:PrimitiveType[24603-24606]"
    }, {
      "left" : "getExistingIntProp",
      "right" : "getExistingIntProp",
      "info" : "SimpleName[24523-24541]:SimpleName[24607-24625]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[24542-24554]:SingleVariableDeclaration[24626-24638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24556-24740]:Block[24640-24824]"
    }, {
      "left" : "PropListItem item = lookupProperty(propType);",
      "right" : "PropListItem item = lookupProperty(propType);",
      "info" : "VariableDeclarationStatement[24562-24607]:VariableDeclarationStatement[24646-24691]"
    }, {
      "left" : "if (item == null)",
      "right" : "if (item == null)",
      "info" : "IfStatement[24612-24705]:IfStatement[24696-24789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24630-24705]:Block[24714-24789]"
    }, {
      "left" : "throw new IllegalStateException(\"missing prop: \" + propType);",
      "right" : "throw new IllegalStateException(\"missing prop: \" + propType);",
      "info" : "ThrowStatement[24638-24699]:ThrowStatement[24722-24783]"
    }, {
      "left" : "return item.getIntValue();",
      "right" : "return item.getIntValue();",
      "info" : "ReturnStatement[24710-24736]:ReturnStatement[24794-24820]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24744-24750]:Modifier[24828-24834]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24751-24755]:PrimitiveType[24835-24839]"
    }, {
      "left" : "putProp",
      "right" : "putProp",
      "info" : "SimpleName[24756-24763]:SimpleName[24840-24847]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[24764-24776]:SingleVariableDeclaration[24848-24860]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[24778-24790]:SingleVariableDeclaration[24862-24874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24792-24918]:Block[24876-25002]"
    }, {
      "left" : "removeProp(propType);",
      "right" : "removeProp(propType);",
      "info" : "ExpressionStatement[24798-24819]:ExpressionStatement[24882-24903]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[24824-24914]:IfStatement[24908-24998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24843-24914]:Block[24927-24998]"
    }, {
      "left" : "propListHead = createProp(propType, value, propListHead);",
      "right" : "propListHead = createProp(propType, value, propListHead);",
      "info" : "ExpressionStatement[24851-24908]:ExpressionStatement[24935-24992]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24922-24928]:Modifier[25006-25012]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24929-24933]:PrimitiveType[25013-25017]"
    }, {
      "left" : "putBooleanProp",
      "right" : "putBooleanProp",
      "info" : "SimpleName[24934-24948]:SimpleName[25018-25032]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[24949-24961]:SingleVariableDeclaration[25033-25045]"
    }, {
      "left" : "boolean value",
      "right" : "boolean value",
      "info" : "SingleVariableDeclaration[24963-24976]:SingleVariableDeclaration[25047-25060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24978-25024]:Block[25062-25108]"
    }, {
      "left" : "putIntProp(propType, value ? 1 : 0);",
      "right" : "putIntProp(propType, value ? 1 : 0);",
      "info" : "ExpressionStatement[24984-25020]:ExpressionStatement[25068-25104]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25028-25034]:Modifier[25112-25118]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25035-25039]:PrimitiveType[25119-25123]"
    }, {
      "left" : "putIntProp",
      "right" : "putIntProp",
      "info" : "SimpleName[25040-25050]:SimpleName[25124-25134]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[25051-25063]:SingleVariableDeclaration[25135-25147]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[25065-25074]:SingleVariableDeclaration[25149-25158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25076-25199]:Block[25160-25283]"
    }, {
      "left" : "removeProp(propType);",
      "right" : "removeProp(propType);",
      "info" : "ExpressionStatement[25082-25103]:ExpressionStatement[25166-25187]"
    }, {
      "left" : "if (value != 0)",
      "right" : "if (value != 0)",
      "info" : "IfStatement[25108-25195]:IfStatement[25192-25279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25124-25195]:Block[25208-25279]"
    }, {
      "left" : "propListHead = createProp(propType, value, propListHead);",
      "right" : "propListHead = createProp(propType, value, propListHead);",
      "info" : "ExpressionStatement[25132-25189]:ExpressionStatement[25216-25273]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[25203-25215]:SimpleType[25287-25299]"
    }, {
      "left" : "createProp",
      "right" : "createProp",
      "info" : "SimpleName[25216-25226]:SimpleName[25300-25310]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[25227-25239]:SingleVariableDeclaration[25311-25323]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[25241-25253]:SingleVariableDeclaration[25325-25337]"
    }, {
      "left" : "PropListItem next",
      "right" : "PropListItem next",
      "info" : "SingleVariableDeclaration[25255-25272]:SingleVariableDeclaration[25339-25356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25274-25337]:Block[25358-25421]"
    }, {
      "left" : "return new ObjectPropListItem(propType, value, next);",
      "right" : "return new ObjectPropListItem(propType, value, next);",
      "info" : "ReturnStatement[25280-25333]:ReturnStatement[25364-25417]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[25341-25353]:SimpleType[25425-25437]"
    }, {
      "left" : "createProp",
      "right" : "createProp",
      "info" : "SimpleName[25354-25364]:SimpleName[25438-25448]"
    }, {
      "left" : "int propType",
      "right" : "int propType",
      "info" : "SingleVariableDeclaration[25365-25377]:SingleVariableDeclaration[25449-25461]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[25379-25388]:SingleVariableDeclaration[25463-25472]"
    }, {
      "left" : "PropListItem next",
      "right" : "PropListItem next",
      "info" : "SingleVariableDeclaration[25390-25407]:SingleVariableDeclaration[25474-25491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25409-25469]:Block[25493-25553]"
    }, {
      "left" : "return new IntPropListItem(propType, value, next);",
      "right" : "return new IntPropListItem(propType, value, next);",
      "info" : "ReturnStatement[25415-25465]:ReturnStatement[25499-25549]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[25524-25531]:Modifier[25608-25615]"
    }, {
      "left" : "int[]",
      "right" : "int[]",
      "info" : "ArrayType[25532-25537]:ArrayType[25616-25621]"
    }, {
      "left" : "getSortedPropTypes",
      "right" : "getSortedPropTypes",
      "info" : "SimpleName[25538-25556]:SimpleName[25622-25640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25559-25873]:Block[25643-25957]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[25565-25579]:VariableDeclarationStatement[25649-25663]"
    }, {
      "left" : "for (PropListItem x = propListHead; x != null; x = x.getNext())",
      "right" : "for (PropListItem x = propListHead; x != null; x = x.getNext())",
      "info" : "ForStatement[25584-25670]:ForStatement[25668-25754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25648-25670]:Block[25732-25754]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[25656-25664]:ExpressionStatement[25740-25748]"
    }, {
      "left" : "int[] keys = new int[count];",
      "right" : "int[] keys = new int[count];",
      "info" : "VariableDeclarationStatement[25676-25704]:VariableDeclarationStatement[25760-25788]"
    }, {
      "left" : "for (PropListItem x = propListHead; x != null; x = x.getNext())",
      "right" : "for (PropListItem x = propListHead; x != null; x = x.getNext())",
      "info" : "ForStatement[25709-25828]:ForStatement[25793-25912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25773-25828]:Block[25857-25912]"
    }, {
      "left" : "count--;",
      "right" : "count--;",
      "info" : "ExpressionStatement[25781-25789]:ExpressionStatement[25865-25873]"
    }, {
      "left" : "keys[count] = x.getType();",
      "right" : "keys[count] = x.getType();",
      "info" : "ExpressionStatement[25796-25822]:ExpressionStatement[25880-25906]"
    }, {
      "left" : "Arrays.sort(keys);",
      "right" : "Arrays.sort(keys);",
      "info" : "ExpressionStatement[25834-25852]:ExpressionStatement[25918-25936]"
    }, {
      "left" : "return keys;",
      "right" : "return keys;",
      "info" : "ReturnStatement[25857-25869]:ReturnStatement[25941-25953]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25951-25957]:Modifier[26035-26041]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[25958-25964]:PrimitiveType[26042-26048]"
    }, {
      "left" : "getDouble",
      "right" : "getDouble",
      "info" : "SimpleName[25965-25974]:SimpleName[26049-26058]"
    }, {
      "left" : "UnsupportedOperationException",
      "right" : "UnsupportedOperationException",
      "info" : "SimpleType[25984-26013]:SimpleType[26068-26097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26014-26256]:Block[26098-26340]"
    }, {
      "left" : "if (this.getType() == Token.NUMBER)",
      "right" : "if (this.getType() == Token.NUMBER)",
      "info" : "IfStatement[26020-26252]:IfStatement[26104-26336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26056-26160]:Block[26140-26244]"
    }, {
      "left" : "throw new IllegalStateException(\n          \"Number node not created with Node.newNumber\");",
      "right" : "throw new IllegalStateException(\n          \"Number node not created with Node.newNumber\");",
      "info" : "ThrowStatement[26064-26154]:ThrowStatement[26148-26238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26166-26252]:Block[26250-26336]"
    }, {
      "left" : "throw new UnsupportedOperationException(this + \" is not a number node\");",
      "right" : "throw new UnsupportedOperationException(this + \" is not a number node\");",
      "info" : "ThrowStatement[26174-26246]:ThrowStatement[26258-26330]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26368-26374]:Modifier[26452-26458]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26375-26379]:PrimitiveType[26459-26463]"
    }, {
      "left" : "setDouble",
      "right" : "setDouble",
      "info" : "SimpleName[26380-26389]:SimpleName[26464-26473]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[26390-26402]:SingleVariableDeclaration[26474-26486]"
    }, {
      "left" : "UnsupportedOperationException",
      "right" : "UnsupportedOperationException",
      "info" : "SimpleType[26411-26440]:SimpleType[26495-26524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26441-26683]:Block[26525-26767]"
    }, {
      "left" : "if (this.getType() == Token.NUMBER)",
      "right" : "if (this.getType() == Token.NUMBER)",
      "info" : "IfStatement[26447-26679]:IfStatement[26531-26763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26483-26587]:Block[26567-26671]"
    }, {
      "left" : "throw new IllegalStateException(\n          \"Number node not created with Node.newNumber\");",
      "right" : "throw new IllegalStateException(\n          \"Number node not created with Node.newNumber\");",
      "info" : "ThrowStatement[26491-26581]:ThrowStatement[26575-26665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26593-26679]:Block[26677-26763]"
    }, {
      "left" : "throw new UnsupportedOperationException(this + \" is not a string node\");",
      "right" : "throw new UnsupportedOperationException(this + \" is not a string node\");",
      "info" : "ThrowStatement[26601-26673]:ThrowStatement[26685-26757]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26745-26751]:Modifier[26829-26835]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[26752-26758]:SimpleType[26836-26842]"
    }, {
      "left" : "getString",
      "right" : "getString",
      "info" : "SimpleName[26759-26768]:SimpleName[26843-26852]"
    }, {
      "left" : "UnsupportedOperationException",
      "right" : "UnsupportedOperationException",
      "info" : "SimpleType[26778-26807]:SimpleType[26862-26891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26808-27050]:Block[26892-27134]"
    }, {
      "left" : "if (this.getType() == Token.STRING)",
      "right" : "if (this.getType() == Token.STRING)",
      "info" : "IfStatement[26814-27046]:IfStatement[26898-27130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26850-26954]:Block[26934-27038]"
    }, {
      "left" : "throw new IllegalStateException(\n          \"String node not created with Node.newString\");",
      "right" : "throw new IllegalStateException(\n          \"String node not created with Node.newString\");",
      "info" : "ThrowStatement[26858-26948]:ThrowStatement[26942-27032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26960-27046]:Block[27044-27130]"
    }, {
      "left" : "throw new UnsupportedOperationException(this + \" is not a string node\");",
      "right" : "throw new UnsupportedOperationException(this + \" is not a string node\");",
      "info" : "ThrowStatement[26968-27040]:ThrowStatement[27052-27124]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27160-27166]:Modifier[27244-27250]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27167-27171]:PrimitiveType[27251-27255]"
    }, {
      "left" : "setString",
      "right" : "setString",
      "info" : "SimpleName[27172-27181]:SimpleName[27256-27265]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[27182-27194]:SingleVariableDeclaration[27266-27278]"
    }, {
      "left" : "UnsupportedOperationException",
      "right" : "UnsupportedOperationException",
      "info" : "SimpleType[27203-27232]:SimpleType[27287-27316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27233-27507]:Block[27317-27591]"
    }, {
      "left" : "if (this.getType() == Token.STRING || this.getType() == Token.NAME)",
      "right" : "if (this.getType() == Token.STRING || this.getType() == Token.NAME)",
      "info" : "IfStatement[27239-27503]:IfStatement[27323-27587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27307-27411]:Block[27391-27495]"
    }, {
      "left" : "throw new IllegalStateException(\n          \"String node not created with Node.newString\");",
      "right" : "throw new IllegalStateException(\n          \"String node not created with Node.newString\");",
      "info" : "ThrowStatement[27315-27405]:ThrowStatement[27399-27489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27417-27503]:Block[27501-27587]"
    }, {
      "left" : "throw new UnsupportedOperationException(this + \" is not a string node\");",
      "right" : "throw new UnsupportedOperationException(this + \" is not a string node\");",
      "info" : "ThrowStatement[27425-27497]:ThrowStatement[27509-27581]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27511-27520]:MarkerAnnotation[27595-27604]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27523-27529]:Modifier[27607-27613]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[27530-27536]:SimpleType[27614-27620]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[27537-27545]:SimpleName[27621-27629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27548-27592]:Block[27632-27676]"
    }, {
      "left" : "return toString(true, true, true);",
      "right" : "return toString(true, true, true);",
      "info" : "ReturnStatement[27554-27588]:ReturnStatement[27638-27672]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27596-27602]:Modifier[27680-27686]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[27603-27609]:SimpleType[27687-27693]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[27610-27618]:SimpleName[27694-27702]"
    }, {
      "left" : "boolean printSource",
      "right" : "boolean printSource",
      "info" : "SingleVariableDeclaration[27626-27645]:SingleVariableDeclaration[27710-27729]"
    }, {
      "left" : "boolean printAnnotations",
      "right" : "boolean printAnnotations",
      "info" : "SingleVariableDeclaration[27653-27677]:SingleVariableDeclaration[27737-27761]"
    }, {
      "left" : "boolean printType",
      "right" : "boolean printType",
      "info" : "SingleVariableDeclaration[27685-27702]:SingleVariableDeclaration[27769-27786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27704-27839]:Block[27788-27923]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[27710-27749]:VariableDeclarationStatement[27794-27833]"
    }, {
      "left" : "toString(sb, printSource, printAnnotations, printType);",
      "right" : "toString(sb, printSource, printAnnotations, printType);",
      "info" : "ExpressionStatement[27754-27809]:ExpressionStatement[27838-27893]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[27814-27835]:ReturnStatement[27898-27919]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[27843-27850]:Modifier[27927-27934]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27851-27855]:PrimitiveType[27935-27939]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[27856-27864]:SimpleName[27940-27948]"
    }, {
      "left" : "StringBuilder sb",
      "right" : "StringBuilder sb",
      "info" : "SingleVariableDeclaration[27872-27888]:SingleVariableDeclaration[27956-27972]"
    }, {
      "left" : "boolean printSource",
      "right" : "boolean printSource",
      "info" : "SingleVariableDeclaration[27896-27915]:SingleVariableDeclaration[27980-27999]"
    }, {
      "left" : "boolean printAnnotations",
      "right" : "boolean printAnnotations",
      "info" : "SingleVariableDeclaration[27923-27947]:SingleVariableDeclaration[28007-28031]"
    }, {
      "left" : "boolean printType",
      "right" : "boolean printType",
      "info" : "SingleVariableDeclaration[27955-27972]:SingleVariableDeclaration[28039-28056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27974-29424]:Block[28058-29508]"
    }, {
      "left" : "sb.append(Token.name(type));",
      "right" : "sb.append(Token.name(type));",
      "info" : "ExpressionStatement[27980-28008]:ExpressionStatement[28064-28092]"
    }, {
      "left" : "if (this instanceof StringNode)",
      "right" : "if (this instanceof StringNode)",
      "info" : "IfStatement[28013-28580]:IfStatement[28097-28664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28045-28104]:Block[28129-28188]"
    }, {
      "left" : "sb.append(' ');",
      "right" : "sb.append(' ');",
      "info" : "ExpressionStatement[28053-28068]:ExpressionStatement[28137-28152]"
    }, {
      "left" : "sb.append(getString());",
      "right" : "sb.append(getString());",
      "info" : "ExpressionStatement[28075-28098]:ExpressionStatement[28159-28182]"
    }, {
      "left" : "if (type == Token.FUNCTION)",
      "right" : "if (type == Token.FUNCTION)",
      "info" : "IfStatement[28110-28580]:IfStatement[28194-28664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28138-28489]:Block[28222-28573]"
    }, {
      "left" : "sb.append(' ');",
      "right" : "sb.append(' ');",
      "info" : "ExpressionStatement[28146-28161]:ExpressionStatement[28230-28245]"
    }, {
      "left" : "if (first == null || first.getType() != Token.NAME)",
      "right" : "if (first == null || first.getType() != Token.NAME)",
      "info" : "IfStatement[28337-28483]:IfStatement[28421-28567]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28389-28430]:Block[28473-28514]"
    }, {
      "left" : "sb.append(\"<invalid>\");",
      "right" : "sb.append(\"<invalid>\");",
      "info" : "ExpressionStatement[28399-28422]:ExpressionStatement[28483-28506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28436-28483]:Block[28520-28567]"
    }, {
      "left" : "sb.append(first.getString());",
      "right" : "sb.append(first.getString());",
      "info" : "ExpressionStatement[28446-28475]:ExpressionStatement[28530-28559]"
    }, {
      "left" : "if (type == Token.NUMBER)",
      "right" : "if (type == Token.NUMBER)",
      "info" : "IfStatement[28495-28580]:IfStatement[28579-28664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28521-28580]:Block[28605-28664]"
    }, {
      "left" : "sb.append(' ');",
      "right" : "sb.append(' ');",
      "info" : "ExpressionStatement[28529-28544]:ExpressionStatement[28613-28628]"
    }, {
      "left" : "sb.append(getDouble());",
      "right" : "sb.append(getDouble());",
      "info" : "ExpressionStatement[28551-28574]:ExpressionStatement[28635-28658]"
    }, {
      "left" : "if (printSource)",
      "right" : "if (printSource)",
      "info" : "IfStatement[28585-28726]:IfStatement[28669-28810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28602-28726]:Block[28686-28810]"
    }, {
      "left" : "int lineno = getLineno();",
      "right" : "int lineno = getLineno();",
      "info" : "VariableDeclarationStatement[28610-28635]:VariableDeclarationStatement[28694-28719]"
    }, {
      "left" : "if (lineno != -1)",
      "right" : "if (lineno != -1)",
      "info" : "IfStatement[28642-28720]:IfStatement[28726-28804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28660-28720]:Block[28744-28804]"
    }, {
      "left" : "sb.append(' ');",
      "right" : "sb.append(' ');",
      "info" : "ExpressionStatement[28670-28685]:ExpressionStatement[28754-28769]"
    }, {
      "left" : "sb.append(lineno);",
      "right" : "sb.append(lineno);",
      "info" : "ExpressionStatement[28694-28712]:ExpressionStatement[28778-28796]"
    }, {
      "left" : "if (printAnnotations)",
      "right" : "if (printAnnotations)",
      "info" : "IfStatement[28732-29198]:IfStatement[28816-29282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28754-29198]:Block[28838-29282]"
    }, {
      "left" : "int[] keys = getSortedPropTypes();",
      "right" : "int[] keys = getSortedPropTypes();",
      "info" : "VariableDeclarationStatement[28762-28796]:VariableDeclarationStatement[28846-28880]"
    }, {
      "left" : "for (int i = 0; i < keys.length; i++)",
      "right" : "for (int i = 0; i < keys.length; i++)",
      "info" : "ForStatement[28803-29192]:ForStatement[28887-29276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28841-29192]:Block[28925-29276]"
    }, {
      "left" : "int type = keys[i];",
      "right" : "int type = keys[i];",
      "info" : "VariableDeclarationStatement[28851-28870]:VariableDeclarationStatement[28935-28954]"
    }, {
      "left" : "PropListItem x = lookupProperty(type);",
      "right" : "PropListItem x = lookupProperty(type);",
      "info" : "VariableDeclarationStatement[28879-28917]:VariableDeclarationStatement[28963-29001]"
    }, {
      "left" : "sb.append(\" [\");",
      "right" : "sb.append(\" [\");",
      "info" : "ExpressionStatement[28926-28942]:ExpressionStatement[29010-29026]"
    }, {
      "left" : "sb.append(propToString(type));",
      "right" : "sb.append(propToString(type));",
      "info" : "ExpressionStatement[28951-28981]:ExpressionStatement[29035-29065]"
    }, {
      "left" : "sb.append(\": \");",
      "right" : "sb.append(\": \");",
      "info" : "ExpressionStatement[28990-29006]:ExpressionStatement[29074-29090]"
    }, {
      "left" : "String value;",
      "right" : "String value;",
      "info" : "VariableDeclarationStatement[29015-29028]:VariableDeclarationStatement[29099-29112]"
    }, {
      "left" : "switch (type) {\n          default:\n            value = x.toString();\n            break;\n        }",
      "right" : "switch (type) {\n          default:\n            value = x.toString();\n            break;\n        }",
      "info" : "SwitchStatement[29037-29134]:SwitchStatement[29121-29218]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[29063-29071]:SwitchCase[29147-29155]"
    }, {
      "left" : "value = x.toString();",
      "right" : "value = x.toString();",
      "info" : "ExpressionStatement[29084-29105]:ExpressionStatement[29168-29189]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29118-29124]:BreakStatement[29202-29208]"
    }, {
      "left" : "sb.append(value);",
      "right" : "sb.append(value);",
      "info" : "ExpressionStatement[29143-29160]:ExpressionStatement[29227-29244]"
    }, {
      "left" : "sb.append(']');",
      "right" : "sb.append(']');",
      "info" : "ExpressionStatement[29169-29184]:ExpressionStatement[29253-29268]"
    }, {
      "left" : "if (printType)",
      "right" : "if (printType)",
      "info" : "IfStatement[29204-29420]:IfStatement[29288-29504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29219-29420]:Block[29303-29504]"
    }, {
      "left" : "if (jsType != null)",
      "right" : "if (jsType != null)",
      "info" : "IfStatement[29227-29414]:IfStatement[29311-29498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29247-29414]:Block[29331-29498]"
    }, {
      "left" : "String jsTypeString = jsType.toString();",
      "right" : "String jsTypeString = jsType.toString();",
      "info" : "VariableDeclarationStatement[29257-29297]:VariableDeclarationStatement[29341-29381]"
    }, {
      "left" : "if (jsTypeString != null)",
      "right" : "if (jsTypeString != null)",
      "info" : "IfStatement[29306-29406]:IfStatement[29390-29490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29332-29406]:Block[29416-29490]"
    }, {
      "left" : "sb.append(\" : \");",
      "right" : "sb.append(\" : \");",
      "info" : "ExpressionStatement[29344-29361]:ExpressionStatement[29428-29445]"
    }, {
      "left" : "sb.append(jsTypeString);",
      "right" : "sb.append(jsTypeString);",
      "info" : "ExpressionStatement[29372-29396]:ExpressionStatement[29456-29480]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29429-29435]:Modifier[29513-29519]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[29436-29442]:SimpleType[29520-29526]"
    }, {
      "left" : "toStringTree",
      "right" : "toStringTree",
      "info" : "SimpleName[29443-29455]:SimpleName[29527-29539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29458-29494]:Block[29542-29578]"
    }, {
      "left" : "return toStringTreeImpl();",
      "right" : "return toStringTreeImpl();",
      "info" : "ReturnStatement[29464-29490]:ReturnStatement[29548-29574]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[29498-29505]:Modifier[29582-29589]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[29506-29512]:SimpleType[29590-29596]"
    }, {
      "left" : "toStringTreeImpl",
      "right" : "toStringTreeImpl",
      "info" : "SimpleName[29513-29529]:SimpleName[29597-29613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29532-29743]:Block[29616-29827]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[29538-29739]:TryStatement[29622-29823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29542-29648]:Block[29626-29732]"
    }, {
      "left" : "StringBuilder s = new StringBuilder();",
      "right" : "StringBuilder s = new StringBuilder();",
      "info" : "VariableDeclarationStatement[29550-29588]:VariableDeclarationStatement[29634-29672]"
    }, {
      "left" : "appendStringTree(s);",
      "right" : "appendStringTree(s);",
      "info" : "ExpressionStatement[29595-29615]:ExpressionStatement[29679-29699]"
    }, {
      "left" : "return s.toString();",
      "right" : "return s.toString();",
      "info" : "ReturnStatement[29622-29642]:ReturnStatement[29706-29726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29671-29739]:Block[29755-29823]"
    }, {
      "left" : "throw new RuntimeException(\"Should not happen\\n\" + e);",
      "right" : "throw new RuntimeException(\"Should not happen\\n\" + e);",
      "info" : "ThrowStatement[29679-29733]:ThrowStatement[29763-29817]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29747-29753]:Modifier[29831-29837]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29754-29758]:PrimitiveType[29838-29842]"
    }, {
      "left" : "appendStringTree",
      "right" : "appendStringTree",
      "info" : "SimpleName[29759-29775]:SimpleName[29843-29859]"
    }, {
      "left" : "Appendable appendable",
      "right" : "Appendable appendable",
      "info" : "SingleVariableDeclaration[29776-29797]:SingleVariableDeclaration[29860-29881]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[29806-29817]:SimpleType[29890-29901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29818-29868]:Block[29902-29952]"
    }, {
      "left" : "toStringTreeHelper(this, 0, appendable);",
      "right" : "toStringTreeHelper(this, 0, appendable);",
      "info" : "ExpressionStatement[29824-29864]:ExpressionStatement[29908-29948]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[29872-29879]:Modifier[29956-29963]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[29880-29886]:Modifier[29964-29970]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29887-29891]:PrimitiveType[29971-29975]"
    }, {
      "left" : "toStringTreeHelper",
      "right" : "toStringTreeHelper",
      "info" : "SimpleName[29892-29910]:SimpleName[29976-29994]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[29911-29917]:SingleVariableDeclaration[29995-30001]"
    }, {
      "left" : "int level",
      "right" : "int level",
      "info" : "SingleVariableDeclaration[29919-29928]:SingleVariableDeclaration[30003-30012]"
    }, {
      "left" : "Appendable sb",
      "right" : "Appendable sb",
      "info" : "SingleVariableDeclaration[29930-29943]:SingleVariableDeclaration[30014-30027]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[29958-29969]:SimpleType[30042-30053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29970-30255]:Block[30054-30339]"
    }, {
      "left" : "for (int i = 0; i != level; ++i)",
      "right" : "for (int i = 0; i != level; ++i)",
      "info" : "ForStatement[29976-30041]:ForStatement[30060-30125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30009-30041]:Block[30093-30125]"
    }, {
      "left" : "sb.append(\"    \");",
      "right" : "sb.append(\"    \");",
      "info" : "ExpressionStatement[30017-30035]:ExpressionStatement[30101-30119]"
    }, {
      "left" : "sb.append(n.toString());",
      "right" : "sb.append(n.toString());",
      "info" : "ExpressionStatement[30046-30070]:ExpressionStatement[30130-30154]"
    }, {
      "left" : "sb.append('\\n');",
      "right" : "sb.append('\\n');",
      "info" : "ExpressionStatement[30075-30091]:ExpressionStatement[30159-30175]"
    }, {
      "left" : "for (Node cursor = n.getFirstChild();\n         cursor != null;\n         cursor = cursor.getNext())",
      "right" : "for (Node cursor = n.getFirstChild();\n         cursor != null;\n         cursor = cursor.getNext())",
      "info" : "ForStatement[30096-30251]:ForStatement[30180-30335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30195-30251]:Block[30279-30335]"
    }, {
      "left" : "toStringTreeHelper(cursor, level + 1, sb);",
      "right" : "toStringTreeHelper(cursor, level + 1, sb);",
      "info" : "ExpressionStatement[30203-30245]:ExpressionStatement[30287-30329]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32176-32182]:Modifier[32260-32266]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32183-32187]:PrimitiveType[32267-32271]"
    }, {
      "left" : "setStaticSourceFile",
      "right" : "setStaticSourceFile",
      "info" : "SimpleName[32188-32207]:SimpleName[32272-32291]"
    }, {
      "left" : "StaticSourceFile file",
      "right" : "StaticSourceFile file",
      "info" : "SingleVariableDeclaration[32208-32229]:SingleVariableDeclaration[32292-32313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32231-32280]:Block[32315-32364]"
    }, {
      "left" : "this.putProp(STATIC_SOURCE_FILE, file);",
      "right" : "this.putProp(STATIC_SOURCE_FILE, file);",
      "info" : "ExpressionStatement[32237-32276]:ExpressionStatement[32321-32360]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32354-32360]:Modifier[32438-32444]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32361-32365]:PrimitiveType[32445-32449]"
    }, {
      "left" : "setSourceFileForTesting",
      "right" : "setSourceFileForTesting",
      "info" : "SimpleName[32366-32389]:SimpleName[32450-32473]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[32390-32401]:SingleVariableDeclaration[32474-32485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32403-32481]:Block[32487-32565]"
    }, {
      "left" : "this.putProp(STATIC_SOURCE_FILE, new SimpleSourceFile(name, false));",
      "right" : "this.putProp(STATIC_SOURCE_FILE, new SimpleSourceFile(name, false));",
      "info" : "ExpressionStatement[32409-32477]:ExpressionStatement[32493-32561]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32485-32491]:Modifier[32569-32575]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[32492-32498]:SimpleType[32576-32582]"
    }, {
      "left" : "getSourceFileName",
      "right" : "getSourceFileName",
      "info" : "SimpleName[32499-32516]:SimpleName[32583-32600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32519-32624]:Block[32603-32708]"
    }, {
      "left" : "StaticSourceFile file = getStaticSourceFile();",
      "right" : "StaticSourceFile file = getStaticSourceFile();",
      "info" : "VariableDeclarationStatement[32525-32571]:VariableDeclarationStatement[32609-32655]"
    }, {
      "left" : "return file == null ? null : file.getName();",
      "right" : "return file == null ? null : file.getName();",
      "info" : "ReturnStatement[32576-32620]:ReturnStatement[32660-32704]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32701-32707]:Modifier[32785-32791]"
    }, {
      "left" : "StaticSourceFile",
      "right" : "StaticSourceFile",
      "info" : "SimpleType[32708-32724]:SimpleType[32792-32808]"
    }, {
      "left" : "getStaticSourceFile",
      "right" : "getStaticSourceFile",
      "info" : "SimpleName[32725-32744]:SimpleName[32809-32828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32747-32818]:Block[32831-32902]"
    }, {
      "left" : "return ((StaticSourceFile) this.getProp(STATIC_SOURCE_FILE));",
      "right" : "return ((StaticSourceFile) this.getProp(STATIC_SOURCE_FILE));",
      "info" : "ReturnStatement[32753-32814]:ReturnStatement[32837-32898]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32854-32860]:Modifier[32938-32944]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32861-32865]:PrimitiveType[32945-32949]"
    }, {
      "left" : "setInputId",
      "right" : "setInputId",
      "info" : "SimpleName[32866-32876]:SimpleName[32950-32960]"
    }, {
      "left" : "InputId inputId",
      "right" : "InputId inputId",
      "info" : "SingleVariableDeclaration[32877-32892]:SingleVariableDeclaration[32961-32976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32894-32936]:Block[32978-33020]"
    }, {
      "left" : "this.putProp(INPUT_ID, inputId);",
      "right" : "this.putProp(INPUT_ID, inputId);",
      "info" : "ExpressionStatement[32900-32932]:ExpressionStatement[32984-33016]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33020-33026]:Modifier[33104-33110]"
    }, {
      "left" : "InputId",
      "right" : "InputId",
      "info" : "SimpleType[33027-33034]:SimpleType[33111-33118]"
    }, {
      "left" : "getInputId",
      "right" : "getInputId",
      "info" : "SimpleName[33035-33045]:SimpleName[33119-33129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33048-33100]:Block[33132-33184]"
    }, {
      "left" : "return ((InputId) this.getProp(INPUT_ID));",
      "right" : "return ((InputId) this.getProp(INPUT_ID));",
      "info" : "ReturnStatement[33054-33096]:ReturnStatement[33138-33180]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33104-33110]:Modifier[33188-33194]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[33111-33118]:PrimitiveType[33195-33202]"
    }, {
      "left" : "isFromExterns",
      "right" : "isFromExterns",
      "info" : "SimpleName[33119-33132]:SimpleName[33203-33216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33135-33242]:Block[33219-33326]"
    }, {
      "left" : "StaticSourceFile file = getStaticSourceFile();",
      "right" : "StaticSourceFile file = getStaticSourceFile();",
      "info" : "VariableDeclarationStatement[33141-33187]:VariableDeclarationStatement[33225-33271]"
    }, {
      "left" : "return file == null ? false : file.isExtern();",
      "right" : "return file == null ? false : file.isExtern();",
      "info" : "ReturnStatement[33192-33238]:ReturnStatement[33276-33322]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33246-33252]:Modifier[33330-33336]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[33253-33256]:PrimitiveType[33337-33340]"
    }, {
      "left" : "getLength",
      "right" : "getLength",
      "info" : "SimpleName[33257-33266]:SimpleName[33341-33350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33269-33305]:Block[33353-33389]"
    }, {
      "left" : "return getIntProp(LENGTH);",
      "right" : "return getIntProp(LENGTH);",
      "info" : "ReturnStatement[33275-33301]:ReturnStatement[33359-33385]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33309-33315]:Modifier[33393-33399]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33316-33320]:PrimitiveType[33400-33404]"
    }, {
      "left" : "setLength",
      "right" : "setLength",
      "info" : "SimpleName[33321-33330]:SimpleName[33405-33414]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[33331-33341]:SingleVariableDeclaration[33415-33425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33343-33380]:Block[33427-33464]"
    }, {
      "left" : "putIntProp(LENGTH, length);",
      "right" : "putIntProp(LENGTH, length);",
      "info" : "ExpressionStatement[33349-33376]:ExpressionStatement[33433-33460]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33384-33390]:Modifier[33468-33474]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[33391-33394]:PrimitiveType[33475-33478]"
    }, {
      "left" : "getLineno",
      "right" : "getLineno",
      "info" : "SimpleName[33395-33404]:SimpleName[33479-33488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33407-33454]:Block[33491-33538]"
    }, {
      "left" : "return extractLineno(sourcePosition);",
      "right" : "return extractLineno(sourcePosition);",
      "info" : "ReturnStatement[33413-33450]:ReturnStatement[33497-33534]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33458-33464]:Modifier[33542-33548]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[33465-33468]:PrimitiveType[33549-33552]"
    }, {
      "left" : "getCharno",
      "right" : "getCharno",
      "info" : "SimpleName[33469-33478]:SimpleName[33553-33562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33481-33528]:Block[33565-33612]"
    }, {
      "left" : "return extractCharno(sourcePosition);",
      "right" : "return extractCharno(sourcePosition);",
      "info" : "ReturnStatement[33487-33524]:ReturnStatement[33571-33608]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33532-33538]:Modifier[33616-33622]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[33539-33542]:PrimitiveType[33623-33626]"
    }, {
      "left" : "getSourceOffset",
      "right" : "getSourceOffset",
      "info" : "SimpleName[33543-33558]:SimpleName[33627-33642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33561-33794]:Block[33645-33878]"
    }, {
      "left" : "StaticSourceFile file = getStaticSourceFile();",
      "right" : "StaticSourceFile file = getStaticSourceFile();",
      "info" : "VariableDeclarationStatement[33567-33613]:VariableDeclarationStatement[33651-33697]"
    }, {
      "left" : "if (file == null)",
      "right" : "if (file == null)",
      "info" : "IfStatement[33618-33660]:IfStatement[33702-33744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33636-33660]:Block[33720-33744]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[33644-33654]:ReturnStatement[33728-33738]"
    }, {
      "left" : "int lineno = getLineno();",
      "right" : "int lineno = getLineno();",
      "info" : "VariableDeclarationStatement[33665-33690]:VariableDeclarationStatement[33749-33774]"
    }, {
      "left" : "if (lineno == -1)",
      "right" : "if (lineno == -1)",
      "info" : "IfStatement[33695-33737]:IfStatement[33779-33821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33713-33737]:Block[33797-33821]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[33721-33731]:ReturnStatement[33805-33815]"
    }, {
      "left" : "return file.getLineOffset(lineno) + getCharno();",
      "right" : "return file.getLineOffset(lineno) + getCharno();",
      "info" : "ReturnStatement[33742-33790]:ReturnStatement[33826-33874]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33798-33804]:Modifier[33882-33888]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[33805-33808]:PrimitiveType[33889-33892]"
    }, {
      "left" : "getSourcePosition",
      "right" : "getSourcePosition",
      "info" : "SimpleName[33809-33826]:SimpleName[33893-33910]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33829-33861]:Block[33913-33945]"
    }, {
      "left" : "return sourcePosition;",
      "right" : "return sourcePosition;",
      "info" : "ReturnStatement[33835-33857]:ReturnStatement[33919-33941]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33865-33871]:Modifier[33949-33955]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33872-33876]:PrimitiveType[33956-33960]"
    }, {
      "left" : "setLineno",
      "right" : "setLineno",
      "info" : "SimpleName[33877-33886]:SimpleName[33961-33970]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[33887-33897]:SingleVariableDeclaration[33971-33981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33899-34046]:Block[33983-34130]"
    }, {
      "left" : "int charno = getCharno();",
      "right" : "int charno = getCharno();",
      "info" : "VariableDeclarationStatement[33907-33932]:VariableDeclarationStatement[33991-34016]"
    }, {
      "left" : "if (charno == -1)",
      "right" : "if (charno == -1)",
      "info" : "IfStatement[33939-33986]:IfStatement[34023-34070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33957-33986]:Block[34041-34070]"
    }, {
      "left" : "charno = 0;",
      "right" : "charno = 0;",
      "info" : "ExpressionStatement[33967-33978]:ExpressionStatement[34051-34062]"
    }, {
      "left" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "right" : "sourcePosition = mergeLineCharNo(lineno, charno);",
      "info" : "ExpressionStatement[33993-34042]:ExpressionStatement[34077-34126]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34050-34056]:Modifier[34134-34140]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34057-34061]:PrimitiveType[34141-34145]"
    }, {
      "left" : "setCharno",
      "right" : "setCharno",
      "info" : "SimpleName[34062-34071]:SimpleName[34146-34155]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[34072-34082]:SingleVariableDeclaration[34156-34166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34084-34150]:Block[34168-34234]"
    }, {
      "left" : "sourcePosition = mergeLineCharNo(getLineno(), charno);",
      "right" : "sourcePosition = mergeLineCharNo(getLineno(), charno);",
      "info" : "ExpressionStatement[34092-34146]:ExpressionStatement[34176-34230]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34154-34160]:Modifier[34238-34244]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34161-34165]:PrimitiveType[34245-34249]"
    }, {
      "left" : "setSourceEncodedPosition",
      "right" : "setSourceEncodedPosition",
      "info" : "SimpleName[34166-34190]:SimpleName[34250-34274]"
    }, {
      "left" : "int sourcePosition",
      "right" : "int sourcePosition",
      "info" : "SingleVariableDeclaration[34191-34209]:SingleVariableDeclaration[34275-34293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34211-34258]:Block[34295-34342]"
    }, {
      "left" : "this.sourcePosition = sourcePosition;",
      "right" : "this.sourcePosition = sourcePosition;",
      "info" : "ExpressionStatement[34217-34254]:ExpressionStatement[34301-34338]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34262-34268]:Modifier[34346-34352]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34269-34273]:PrimitiveType[34353-34357]"
    }, {
      "left" : "setSourceEncodedPositionForTree",
      "right" : "setSourceEncodedPositionForTree",
      "info" : "SimpleName[34274-34305]:SimpleName[34358-34389]"
    }, {
      "left" : "int sourcePosition",
      "right" : "int sourcePosition",
      "info" : "SingleVariableDeclaration[34306-34324]:SingleVariableDeclaration[34390-34408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34326-34531]:Block[34410-34615]"
    }, {
      "left" : "this.sourcePosition = sourcePosition;",
      "right" : "this.sourcePosition = sourcePosition;",
      "info" : "ExpressionStatement[34332-34369]:ExpressionStatement[34416-34453]"
    }, {
      "left" : "for (Node child = getFirstChild();\n         child != null; child = child.getNext())",
      "right" : "for (Node child = getFirstChild();\n         child != null; child = child.getNext())",
      "info" : "ForStatement[34375-34527]:ForStatement[34459-34611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34459-34527]:Block[34543-34611]"
    }, {
      "left" : "child.setSourceEncodedPositionForTree(sourcePosition);",
      "right" : "child.setSourceEncodedPositionForTree(sourcePosition);",
      "info" : "ExpressionStatement[34467-34521]:ExpressionStatement[34551-34605]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34827-34836]:Modifier[34911-34920]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[34837-34843]:Modifier[34921-34927]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[34844-34847]:PrimitiveType[34928-34931]"
    }, {
      "left" : "mergeLineCharNo",
      "right" : "mergeLineCharNo",
      "info" : "SimpleName[34848-34863]:SimpleName[34932-34947]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[34864-34874]:SingleVariableDeclaration[34948-34958]"
    }, {
      "left" : "int charno",
      "right" : "int charno",
      "info" : "SingleVariableDeclaration[34876-34886]:SingleVariableDeclaration[34960-34970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34888-35123]:Block[34972-35207]"
    }, {
      "left" : "if (lineno < 0 || charno < 0)",
      "right" : "if (lineno < 0 || charno < 0)",
      "info" : "IfStatement[34894-35119]:IfStatement[34978-35203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34924-34948]:Block[35008-35032]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[34932-34942]:ReturnStatement[35016-35026]"
    }, {
      "left" : "if ((charno & ~COLUMN_MASK) != 0)",
      "right" : "if ((charno & ~COLUMN_MASK) != 0)",
      "info" : "IfStatement[34954-35119]:IfStatement[35038-35203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34988-35045]:Block[35072-35129]"
    }, {
      "left" : "return lineno << COLUMN_BITS | COLUMN_MASK;",
      "right" : "return lineno << COLUMN_BITS | COLUMN_MASK;",
      "info" : "ReturnStatement[34996-35039]:ReturnStatement[35080-35123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35051-35119]:Block[35135-35203]"
    }, {
      "left" : "return lineno << COLUMN_BITS | (charno & COLUMN_MASK);",
      "right" : "return lineno << COLUMN_BITS | (charno & COLUMN_MASK);",
      "info" : "ReturnStatement[35059-35113]:ReturnStatement[35143-35197]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[35268-35277]:Modifier[35352-35361]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[35278-35284]:Modifier[35362-35368]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[35285-35288]:PrimitiveType[35369-35372]"
    }, {
      "left" : "extractLineno",
      "right" : "extractLineno",
      "info" : "SimpleName[35289-35302]:SimpleName[35373-35386]"
    }, {
      "left" : "int lineCharNo",
      "right" : "int lineCharNo",
      "info" : "SingleVariableDeclaration[35303-35317]:SingleVariableDeclaration[35387-35401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35319-35429]:Block[35403-35513]"
    }, {
      "left" : "if (lineCharNo == -1)",
      "right" : "if (lineCharNo == -1)",
      "info" : "IfStatement[35325-35425]:IfStatement[35409-35509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35347-35371]:Block[35431-35455]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[35355-35365]:ReturnStatement[35439-35449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35377-35425]:Block[35461-35509]"
    }, {
      "left" : "return lineCharNo >>> COLUMN_BITS;",
      "right" : "return lineCharNo >>> COLUMN_BITS;",
      "info" : "ReturnStatement[35385-35419]:ReturnStatement[35469-35503]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[35579-35588]:Modifier[35663-35672]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[35589-35595]:Modifier[35673-35679]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[35596-35599]:PrimitiveType[35680-35683]"
    }, {
      "left" : "extractCharno",
      "right" : "extractCharno",
      "info" : "SimpleName[35600-35613]:SimpleName[35684-35697]"
    }, {
      "left" : "int lineCharNo",
      "right" : "int lineCharNo",
      "info" : "SingleVariableDeclaration[35614-35628]:SingleVariableDeclaration[35698-35712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35630-35738]:Block[35714-35822]"
    }, {
      "left" : "if (lineCharNo == -1)",
      "right" : "if (lineCharNo == -1)",
      "info" : "IfStatement[35636-35734]:IfStatement[35720-35818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35658-35682]:Block[35742-35766]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[35666-35676]:ReturnStatement[35750-35760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35688-35734]:Block[35772-35818]"
    }, {
      "left" : "return lineCharNo & COLUMN_MASK;",
      "right" : "return lineCharNo & COLUMN_MASK;",
      "info" : "ReturnStatement[35696-35728]:ReturnStatement[35780-35812]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36157-36163]:Modifier[36241-36247]"
    }, {
      "left" : "Iterable<Node>",
      "right" : "Iterable<Node>",
      "info" : "ParameterizedType[36164-36178]:ParameterizedType[36248-36262]"
    }, {
      "left" : "children",
      "right" : "children",
      "info" : "SimpleName[36179-36187]:SimpleName[36263-36271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36190-36321]:Block[36274-36405]"
    }, {
      "left" : "if (first == null)",
      "right" : "if (first == null)",
      "info" : "IfStatement[36196-36317]:IfStatement[36280-36401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36215-36259]:Block[36299-36343]"
    }, {
      "left" : "return Collections.emptySet();",
      "right" : "return Collections.emptySet();",
      "info" : "ReturnStatement[36223-36253]:ReturnStatement[36307-36337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36265-36317]:Block[36349-36401]"
    }, {
      "left" : "return new SiblingNodeIterable(first);",
      "right" : "return new SiblingNodeIterable(first);",
      "info" : "ReturnStatement[36273-36311]:ReturnStatement[36357-36395]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36647-36653]:Modifier[36731-36737]"
    }, {
      "left" : "Iterable<Node>",
      "right" : "Iterable<Node>",
      "info" : "ParameterizedType[36654-36668]:ParameterizedType[36738-36752]"
    }, {
      "left" : "siblings",
      "right" : "siblings",
      "info" : "SimpleName[36669-36677]:SimpleName[36753-36761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36680-36727]:Block[36764-36811]"
    }, {
      "left" : "return new SiblingNodeIterable(this);",
      "right" : "return new SiblingNodeIterable(this);",
      "info" : "ReturnStatement[36686-36723]:ReturnStatement[36770-36807]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[36769-36776]:Modifier[36853-36860]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[36777-36783]:Modifier[36861-36867]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[36784-36789]:Modifier[36868-36873]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[36790-36795]:TYPE_DECLARATION_KIND[36874-36879]"
    }, {
      "left" : "SiblingNodeIterable",
      "right" : "SiblingNodeIterable",
      "info" : "SimpleName[36796-36815]:SimpleName[36880-36899]"
    }, {
      "left" : "SiblingNodeIterable",
      "right" : "SiblingNodeIterable",
      "info" : "SimpleName[36953-36972]:SimpleName[37037-37056]"
    }, {
      "left" : "Node start",
      "right" : "Node start",
      "info" : "SingleVariableDeclaration[36973-36983]:SingleVariableDeclaration[37057-37067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36985-37071]:Block[37069-37155]"
    }, {
      "left" : "this.start = start;",
      "right" : "this.start = start;",
      "info" : "ExpressionStatement[36993-37012]:ExpressionStatement[37077-37096]"
    }, {
      "left" : "this.current = start;",
      "right" : "this.current = start;",
      "info" : "ExpressionStatement[37019-37040]:ExpressionStatement[37103-37124]"
    }, {
      "left" : "this.used = false;",
      "right" : "this.used = false;",
      "info" : "ExpressionStatement[37047-37065]:ExpressionStatement[37131-37149]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[37077-37086]:MarkerAnnotation[37161-37170]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37091-37097]:Modifier[37175-37181]"
    }, {
      "left" : "Iterator<Node>",
      "right" : "Iterator<Node>",
      "info" : "ParameterizedType[37098-37112]:ParameterizedType[37182-37196]"
    }, {
      "left" : "iterator",
      "right" : "iterator",
      "info" : "SimpleName[37113-37121]:SimpleName[37197-37205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37124-37572]:Block[37208-37656]"
    }, {
      "left" : "if (!used)",
      "right" : "if (!used)",
      "info" : "IfStatement[37132-37566]:IfStatement[37216-37650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37143-37194]:Block[37227-37278]"
    }, {
      "left" : "used = true;",
      "right" : "used = true;",
      "info" : "ExpressionStatement[37153-37165]:ExpressionStatement[37237-37249]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[37174-37186]:ReturnStatement[37258-37270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37200-37566]:Block[37284-37650]"
    }, {
      "left" : "return (new SiblingNodeIterable(start)).iterator();",
      "right" : "return (new SiblingNodeIterable(start)).iterator();",
      "info" : "ReturnStatement[37507-37558]:ReturnStatement[37591-37642]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[37578-37587]:MarkerAnnotation[37662-37671]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37592-37598]:Modifier[37676-37682]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[37599-37606]:PrimitiveType[37683-37690]"
    }, {
      "left" : "hasNext",
      "right" : "hasNext",
      "info" : "SimpleName[37607-37614]:SimpleName[37691-37698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37617-37654]:Block[37701-37738]"
    }, {
      "left" : "return current != null;",
      "right" : "return current != null;",
      "info" : "ReturnStatement[37625-37648]:ReturnStatement[37709-37732]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[37660-37669]:MarkerAnnotation[37744-37753]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37674-37680]:Modifier[37758-37764]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[37681-37685]:SimpleType[37765-37769]"
    }, {
      "left" : "next",
      "right" : "next",
      "info" : "SimpleName[37686-37690]:SimpleName[37770-37774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37693-37880]:Block[37777-37964]"
    }, {
      "left" : "if (current == null)",
      "right" : "if (current == null)",
      "info" : "IfStatement[37701-37775]:IfStatement[37785-37859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37722-37775]:Block[37806-37859]"
    }, {
      "left" : "throw new NoSuchElementException();",
      "right" : "throw new NoSuchElementException();",
      "info" : "ThrowStatement[37732-37767]:ThrowStatement[37816-37851]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[37782-37874]:TryStatement[37866-37958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37786-37819]:Block[37870-37903]"
    }, {
      "left" : "return current;",
      "right" : "return current;",
      "info" : "ReturnStatement[37796-37811]:ReturnStatement[37880-37895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37828-37874]:Block[37912-37958]"
    }, {
      "left" : "current = current.getNext();",
      "right" : "current = current.getNext();",
      "info" : "ExpressionStatement[37838-37866]:ExpressionStatement[37922-37950]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[37886-37895]:MarkerAnnotation[37970-37979]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37900-37906]:Modifier[37984-37990]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37907-37911]:PrimitiveType[37991-37995]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[37912-37918]:SimpleName[37996-38002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37921-37977]:Block[38005-38061]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[37929-37971]:ThrowStatement[38013-38055]"
    }, {
      "left" : "PropListItem",
      "right" : "PropListItem",
      "info" : "SimpleType[38081-38093]:SimpleType[38165-38177]"
    }, {
      "left" : "getPropListHeadForTesting",
      "right" : "getPropListHeadForTesting",
      "info" : "SimpleName[38094-38119]:SimpleName[38178-38203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38122-38152]:Block[38206-38236]"
    }, {
      "left" : "return propListHead;",
      "right" : "return propListHead;",
      "info" : "ReturnStatement[38128-38148]:ReturnStatement[38212-38232]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38156-38162]:Modifier[38240-38246]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[38163-38167]:SimpleType[38247-38251]"
    }, {
      "left" : "getParent",
      "right" : "getParent",
      "info" : "SimpleName[38168-38177]:SimpleName[38252-38261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38180-38204]:Block[38264-38288]"
    }, {
      "left" : "return parent;",
      "right" : "return parent;",
      "info" : "ReturnStatement[38186-38200]:ReturnStatement[38270-38284]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38320-38326]:Modifier[38404-38410]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[38327-38331]:SimpleType[38411-38415]"
    }, {
      "left" : "getAncestor",
      "right" : "getAncestor",
      "info" : "SimpleName[38332-38343]:SimpleName[38416-38427]"
    }, {
      "left" : "int level",
      "right" : "int level",
      "info" : "SingleVariableDeclaration[38344-38353]:SingleVariableDeclaration[38428-38437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38355-38523]:Block[38439-38607]"
    }, {
      "left" : "Preconditions.checkArgument(level >= 0);",
      "right" : "Preconditions.checkArgument(level >= 0);",
      "info" : "ExpressionStatement[38361-38401]:ExpressionStatement[38445-38485]"
    }, {
      "left" : "Node node = this;",
      "right" : "Node node = this;",
      "info" : "VariableDeclarationStatement[38406-38423]:VariableDeclarationStatement[38490-38507]"
    }, {
      "left" : "while (node != null && level-- > 0)",
      "right" : "while (node != null && level-- > 0)",
      "info" : "WhileStatement[38428-38502]:WhileStatement[38512-38586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38464-38502]:Block[38548-38586]"
    }, {
      "left" : "node = node.getParent();",
      "right" : "node = node.getParent();",
      "info" : "ExpressionStatement[38472-38496]:ExpressionStatement[38556-38580]"
    }, {
      "left" : "return node;",
      "right" : "return node;",
      "info" : "ReturnStatement[38507-38519]:ReturnStatement[38591-38603]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38599-38605]:Modifier[38683-38689]"
    }, {
      "left" : "AncestorIterable",
      "right" : "AncestorIterable",
      "info" : "SimpleType[38606-38622]:SimpleType[38690-38706]"
    }, {
      "left" : "getAncestors",
      "right" : "getAncestors",
      "info" : "SimpleName[38623-38635]:SimpleName[38707-38719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38638-38694]:Block[38722-38778]"
    }, {
      "left" : "return new AncestorIterable(this.getParent());",
      "right" : "return new AncestorIterable(this.getParent());",
      "info" : "ReturnStatement[38644-38690]:ReturnStatement[38728-38774]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38752-38758]:Modifier[38836-38842]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[38759-38765]:Modifier[38843-38849]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[38766-38771]:TYPE_DECLARATION_KIND[38850-38855]"
    }, {
      "left" : "AncestorIterable",
      "right" : "AncestorIterable",
      "info" : "SimpleName[38772-38788]:SimpleName[38856-38872]"
    }, {
      "left" : "AncestorIterable",
      "right" : "AncestorIterable",
      "info" : "SimpleName[38897-38913]:SimpleName[38981-38997]"
    }, {
      "left" : "Node cur",
      "right" : "Node cur",
      "info" : "SingleVariableDeclaration[38914-38922]:SingleVariableDeclaration[38998-39006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38924-38953]:Block[39008-39037]"
    }, {
      "left" : "this.cur = cur;",
      "right" : "this.cur = cur;",
      "info" : "ExpressionStatement[38932-38947]:ExpressionStatement[39016-39031]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38959-38968]:MarkerAnnotation[39043-39052]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38973-38979]:Modifier[39057-39063]"
    }, {
      "left" : "Iterator<Node>",
      "right" : "Iterator<Node>",
      "info" : "ParameterizedType[38980-38994]:ParameterizedType[39064-39078]"
    }, {
      "left" : "iterator",
      "right" : "iterator",
      "info" : "SimpleName[38995-39003]:SimpleName[39079-39087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39006-39487]:Block[39090-39571]"
    }, {
      "left" : "return new Iterator<Node>() {\n        @Override\n        public boolean hasNext() {\n          return cur != null;\n        }\n\n        @Override\n        public Node next() {\n          if (!hasNext()) {\n            throw new NoSuchElementException();\n          }\n          Node n = cur;\n          cur = cur.getParent();\n          return n;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };",
      "right" : "return new Iterator<Node>() {\n        @Override\n        public boolean hasNext() {\n          return cur != null;\n        }\n\n        @Override\n        public Node next() {\n          if (!hasNext()) {\n            throw new NoSuchElementException();\n          }\n          Node n = cur;\n          cur = cur.getParent();\n          return n;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      };",
      "info" : "ReturnStatement[39014-39481]:ReturnStatement[39098-39565]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39052-39061]:MarkerAnnotation[39136-39145]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39070-39076]:Modifier[39154-39160]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39077-39084]:PrimitiveType[39161-39168]"
    }, {
      "left" : "hasNext",
      "right" : "hasNext",
      "info" : "SimpleName[39085-39092]:SimpleName[39169-39176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39095-39136]:Block[39179-39220]"
    }, {
      "left" : "return cur != null;",
      "right" : "return cur != null;",
      "info" : "ReturnStatement[39107-39126]:ReturnStatement[39191-39210]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39146-39155]:MarkerAnnotation[39230-39239]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39164-39170]:Modifier[39248-39254]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[39171-39175]:SimpleType[39255-39259]"
    }, {
      "left" : "next",
      "right" : "next",
      "info" : "SimpleName[39176-39180]:SimpleName[39260-39264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39183-39359]:Block[39267-39443]"
    }, {
      "left" : "if (!hasNext())",
      "right" : "if (!hasNext())",
      "info" : "IfStatement[39195-39272]:IfStatement[39279-39356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39211-39272]:Block[39295-39356]"
    }, {
      "left" : "throw new NoSuchElementException();",
      "right" : "throw new NoSuchElementException();",
      "info" : "ThrowStatement[39225-39260]:ThrowStatement[39309-39344]"
    }, {
      "left" : "Node n = cur;",
      "right" : "Node n = cur;",
      "info" : "VariableDeclarationStatement[39283-39296]:VariableDeclarationStatement[39367-39380]"
    }, {
      "left" : "cur = cur.getParent();",
      "right" : "cur = cur.getParent();",
      "info" : "ExpressionStatement[39307-39329]:ExpressionStatement[39391-39413]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[39340-39349]:ReturnStatement[39424-39433]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39369-39378]:MarkerAnnotation[39453-39462]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39387-39393]:Modifier[39471-39477]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[39394-39398]:PrimitiveType[39478-39482]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[39399-39405]:SimpleName[39483-39489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39408-39472]:Block[39492-39556]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[39420-39462]:ThrowStatement[39504-39546]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39690-39696]:Modifier[39774-39780]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39697-39704]:PrimitiveType[39781-39788]"
    }, {
      "left" : "hasOneChild",
      "right" : "hasOneChild",
      "info" : "SimpleName[39705-39716]:SimpleName[39789-39800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39719-39767]:Block[39803-39851]"
    }, {
      "left" : "return first != null && first == last;",
      "right" : "return first != null && first == last;",
      "info" : "ReturnStatement[39725-39763]:ReturnStatement[39809-39847]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39974-39980]:Modifier[40058-40064]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39981-39988]:PrimitiveType[40065-40072]"
    }, {
      "left" : "hasMoreThanOneChild",
      "right" : "hasMoreThanOneChild",
      "info" : "SimpleName[39989-40008]:SimpleName[40073-40092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40011-40059]:Block[40095-40143]"
    }, {
      "left" : "return first != null && first != last;",
      "right" : "return first != null && first != last;",
      "info" : "ReturnStatement[40017-40055]:ReturnStatement[40101-40139]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40063-40069]:Modifier[40147-40153]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[40070-40073]:PrimitiveType[40154-40157]"
    }, {
      "left" : "getChildCount",
      "right" : "getChildCount",
      "info" : "SimpleName[40074-40087]:SimpleName[40158-40171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40090-40191]:Block[40174-40275]"
    }, {
      "left" : "int c = 0;",
      "right" : "int c = 0;",
      "info" : "VariableDeclarationStatement[40096-40106]:VariableDeclarationStatement[40180-40190]"
    }, {
      "left" : "for (Node n = first; n != null; n = n.next)",
      "right" : "for (Node n = first; n != null; n = n.next)",
      "info" : "ForStatement[40111-40173]:ForStatement[40195-40257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40155-40173]:Block[40239-40257]"
    }, {
      "left" : "c++;",
      "right" : "c++;",
      "info" : "ExpressionStatement[40163-40167]:ExpressionStatement[40247-40251]"
    }, {
      "left" : "return c;",
      "right" : "return c;",
      "info" : "ReturnStatement[40178-40187]:ReturnStatement[40262-40271]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40244-40250]:Modifier[40328-40334]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[40251-40258]:PrimitiveType[40335-40342]"
    }, {
      "left" : "hasChild",
      "right" : "hasChild",
      "info" : "SimpleName[40259-40267]:SimpleName[40343-40351]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[40268-40278]:SingleVariableDeclaration[40352-40362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40280-40417]:Block[40364-40501]"
    }, {
      "left" : "for (Node n = first; n != null; n = n.getNext())",
      "right" : "for (Node n = first; n != null; n = n.getNext())",
      "info" : "ForStatement[40286-40395]:ForStatement[40370-40479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40335-40395]:Block[40419-40479]"
    }, {
      "left" : "if (child == n)",
      "right" : "if (child == n)",
      "info" : "IfStatement[40343-40389]:IfStatement[40427-40473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40359-40389]:Block[40443-40473]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[40369-40381]:ReturnStatement[40453-40465]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[40400-40413]:ReturnStatement[40484-40497]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40582-40588]:Modifier[40666-40672]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[40589-40595]:SimpleType[40673-40679]"
    }, {
      "left" : "checkTreeEquals",
      "right" : "checkTreeEquals",
      "info" : "SimpleName[40596-40611]:SimpleName[40680-40695]"
    }, {
      "left" : "Node node2",
      "right" : "Node node2",
      "info" : "SingleVariableDeclaration[40612-40622]:SingleVariableDeclaration[40696-40706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40624-40990]:Block[40708-41074]"
    }, {
      "left" : "NodeMismatch diff = checkTreeEqualsImpl(node2);",
      "right" : "NodeMismatch diff = checkTreeEqualsImpl(node2);",
      "info" : "VariableDeclarationStatement[40632-40679]:VariableDeclarationStatement[40716-40763]"
    }, {
      "left" : "if (diff != null)",
      "right" : "if (diff != null)",
      "info" : "IfStatement[40686-40967]:IfStatement[40770-41051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40704-40967]:Block[40788-41051]"
    }, {
      "left" : "return \"Node tree inequality:\" +\n            \"\\nTree1:\\n\" + toStringTree() +\n            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();",
      "right" : "return \"Node tree inequality:\" +\n            \"\\nTree1:\\n\" + toStringTree() +\n            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();",
      "info" : "ReturnStatement[40714-40959]:ReturnStatement[40798-41043]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[40974-40986]:ReturnStatement[41058-41070]"
    }, {
      "left" : "NodeMismatch",
      "right" : "NodeMismatch",
      "info" : "SimpleType[41219-41231]:SimpleType[41303-41315]"
    }, {
      "left" : "checkTreeEqualsImpl",
      "right" : "checkTreeEqualsImpl",
      "info" : "SimpleName[41232-41251]:SimpleName[41316-41335]"
    }, {
      "left" : "Node node2",
      "right" : "Node node2",
      "info" : "SingleVariableDeclaration[41252-41262]:SingleVariableDeclaration[41336-41346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41264-41722]:Block[41348-41806]"
    }, {
      "left" : "if (!isEquivalentTo(node2, false, false, false))",
      "right" : "if (!isEquivalentTo(node2, false, false, false))",
      "info" : "IfStatement[41270-41370]:IfStatement[41354-41454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41319-41370]:Block[41403-41454]"
    }, {
      "left" : "return new NodeMismatch(this, node2);",
      "right" : "return new NodeMismatch(this, node2);",
      "info" : "ReturnStatement[41327-41364]:ReturnStatement[41411-41448]"
    }, {
      "left" : "NodeMismatch res = null;",
      "right" : "NodeMismatch res = null;",
      "info" : "VariableDeclarationStatement[41376-41400]:VariableDeclarationStatement[41460-41484]"
    }, {
      "left" : "Node n, n2;",
      "right" : "Node n, n2;",
      "info" : "VariableDeclarationStatement[41405-41416]:VariableDeclarationStatement[41489-41500]"
    }, {
      "left" : "for (n = first, n2 = node2.first;\n         res == null && n != null;\n         n = n.next, n2 = n2.next)",
      "right" : "for (n = first, n2 = node2.first;\n         res == null && n != null;\n         n = n.next, n2 = n2.next)",
      "info" : "ForStatement[41421-41702]:ForStatement[41505-41786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41525-41702]:Block[41609-41786]"
    }, {
      "left" : "if (node2 == null)",
      "right" : "if (node2 == null)",
      "info" : "IfStatement[41533-41604]:IfStatement[41617-41688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41552-41604]:Block[41636-41688]"
    }, {
      "left" : "throw new IllegalStateException();",
      "right" : "throw new IllegalStateException();",
      "info" : "ThrowStatement[41562-41596]:ThrowStatement[41646-41680]"
    }, {
      "left" : "res = n.checkTreeEqualsImpl(n2);",
      "right" : "res = n.checkTreeEqualsImpl(n2);",
      "info" : "ExpressionStatement[41611-41643]:ExpressionStatement[41695-41727]"
    }, {
      "left" : "if (res != null)",
      "right" : "if (res != null)",
      "info" : "IfStatement[41650-41696]:IfStatement[41734-41780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41667-41696]:Block[41751-41780]"
    }, {
      "left" : "return res;",
      "right" : "return res;",
      "info" : "ReturnStatement[41677-41688]:ReturnStatement[41761-41772]"
    }, {
      "left" : "return res;",
      "right" : "return res;",
      "info" : "ReturnStatement[41707-41718]:ReturnStatement[41791-41802]"
    }, {
      "left" : "NodeMismatch",
      "right" : "NodeMismatch",
      "info" : "SimpleType[41951-41963]:SimpleType[42035-42047]"
    }, {
      "left" : "checkTreeTypeAwareEqualsImpl",
      "right" : "checkTreeTypeAwareEqualsImpl",
      "info" : "SimpleName[41964-41992]:SimpleName[42048-42076]"
    }, {
      "left" : "Node node2",
      "right" : "Node node2",
      "info" : "SingleVariableDeclaration[41993-42003]:SingleVariableDeclaration[42077-42087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42005-42438]:Block[42089-42522]"
    }, {
      "left" : "if (!isEquivalentTo(node2, true, false, false))",
      "right" : "if (!isEquivalentTo(node2, true, false, false))",
      "info" : "IfStatement[42056-42155]:IfStatement[42140-42239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42104-42155]:Block[42188-42239]"
    }, {
      "left" : "return new NodeMismatch(this, node2);",
      "right" : "return new NodeMismatch(this, node2);",
      "info" : "ReturnStatement[42112-42149]:ReturnStatement[42196-42233]"
    }, {
      "left" : "NodeMismatch res = null;",
      "right" : "NodeMismatch res = null;",
      "info" : "VariableDeclarationStatement[42161-42185]:VariableDeclarationStatement[42245-42269]"
    }, {
      "left" : "Node n, n2;",
      "right" : "Node n, n2;",
      "info" : "VariableDeclarationStatement[42190-42201]:VariableDeclarationStatement[42274-42285]"
    }, {
      "left" : "for (n = first, n2 = node2.first;\n         res == null && n != null;\n         n = n.next, n2 = n2.next)",
      "right" : "for (n = first, n2 = node2.first;\n         res == null && n != null;\n         n = n.next, n2 = n2.next)",
      "info" : "ForStatement[42206-42418]:ForStatement[42290-42502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42310-42418]:Block[42394-42502]"
    }, {
      "left" : "res = n.checkTreeTypeAwareEqualsImpl(n2);",
      "right" : "res = n.checkTreeTypeAwareEqualsImpl(n2);",
      "info" : "ExpressionStatement[42318-42359]:ExpressionStatement[42402-42443]"
    }, {
      "left" : "if (res != null)",
      "right" : "if (res != null)",
      "info" : "IfStatement[42366-42412]:IfStatement[42450-42496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42383-42412]:Block[42467-42496]"
    }, {
      "left" : "return res;",
      "right" : "return res;",
      "info" : "ReturnStatement[42393-42404]:ReturnStatement[42477-42488]"
    }, {
      "left" : "return res;",
      "right" : "return res;",
      "info" : "ReturnStatement[42423-42434]:ReturnStatement[42507-42518]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42515-42521]:Modifier[42599-42605]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[42522-42529]:PrimitiveType[42606-42613]"
    }, {
      "left" : "isEquivalentTo",
      "right" : "isEquivalentTo",
      "info" : "SimpleName[42530-42544]:SimpleName[42614-42628]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[42545-42554]:SingleVariableDeclaration[42629-42638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42556-42614]:Block[42640-42698]"
    }, {
      "left" : "return isEquivalentTo(node, false, true, false);",
      "right" : "return isEquivalentTo(node, false, true, false);",
      "info" : "ReturnStatement[42562-42610]:ReturnStatement[42646-42694]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42681-42687]:Modifier[42765-42771]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[42688-42695]:PrimitiveType[42772-42779]"
    }, {
      "left" : "isEquivalentToShallow",
      "right" : "isEquivalentToShallow",
      "info" : "SimpleName[42696-42717]:SimpleName[42780-42801]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[42718-42727]:SingleVariableDeclaration[42802-42811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42729-42786]:Block[42813-42870]"
    }, {
      "left" : "return isEquivalentTo(node, false, true, true);",
      "right" : "return isEquivalentTo(node, false, true, true);",
      "info" : "ReturnStatement[42735-42782]:ReturnStatement[42819-42866]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42906-42912]:Modifier[42990-42996]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[42913-42920]:PrimitiveType[42997-43004]"
    }, {
      "left" : "isEquivalentToTyped",
      "right" : "isEquivalentToTyped",
      "info" : "SimpleName[42921-42940]:SimpleName[43005-43024]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[42941-42950]:SingleVariableDeclaration[43025-43034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42952-43009]:Block[43036-43093]"
    }, {
      "left" : "return isEquivalentTo(node, true, true, false);",
      "right" : "return isEquivalentTo(node, true, true, false);",
      "info" : "ReturnStatement[42958-43005]:ReturnStatement[43042-43089]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[43387-43394]:PrimitiveType[43471-43478]"
    }, {
      "left" : "isEquivalentTo",
      "right" : "isEquivalentTo",
      "info" : "SimpleName[43395-43409]:SimpleName[43479-43493]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[43417-43426]:SingleVariableDeclaration[43501-43510]"
    }, {
      "left" : "boolean compareJsType",
      "right" : "boolean compareJsType",
      "info" : "SingleVariableDeclaration[43428-43449]:SingleVariableDeclaration[43512-43533]"
    }, {
      "left" : "boolean recur",
      "right" : "boolean recur",
      "info" : "SingleVariableDeclaration[43451-43464]:SingleVariableDeclaration[43535-43548]"
    }, {
      "left" : "boolean shallow",
      "right" : "boolean shallow",
      "info" : "SingleVariableDeclaration[43466-43481]:SingleVariableDeclaration[43550-43565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43483-44853]:Block[43567-44937]"
    }, {
      "left" : "if (type != node.getType()\n        || getChildCount() != node.getChildCount()\n        || this.getClass() != node.getClass())",
      "right" : "if (type != node.getType()\n        || getChildCount() != node.getChildCount()\n        || this.getClass() != node.getClass())",
      "info" : "IfStatement[43489-43641]:IfStatement[43573-43725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43614-43641]:Block[43698-43725]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43622-43635]:ReturnStatement[43706-43719]"
    }, {
      "left" : "if (compareJsType && !JSType.isEquivalent(jsType, node.getJSType()))",
      "right" : "if (compareJsType && !JSType.isEquivalent(jsType, node.getJSType()))",
      "info" : "IfStatement[43647-43743]:IfStatement[43731-43827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43716-43743]:Block[43800-43827]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43724-43737]:ReturnStatement[43808-43821]"
    }, {
      "left" : "if (type == Token.INC || type == Token.DEC)",
      "right" : "if (type == Token.INC || type == Token.DEC)",
      "info" : "IfStatement[43749-44543]:IfStatement[43833-44627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43793-43958]:Block[43877-44042]"
    }, {
      "left" : "int post1 = this.getIntProp(INCRDECR_PROP);",
      "right" : "int post1 = this.getIntProp(INCRDECR_PROP);",
      "info" : "VariableDeclarationStatement[43801-43844]:VariableDeclarationStatement[43885-43928]"
    }, {
      "left" : "int post2 = node.getIntProp(INCRDECR_PROP);",
      "right" : "int post2 = node.getIntProp(INCRDECR_PROP);",
      "info" : "VariableDeclarationStatement[43851-43894]:VariableDeclarationStatement[43935-43978]"
    }, {
      "left" : "if (post1 != post2)",
      "right" : "if (post1 != post2)",
      "info" : "IfStatement[43901-43952]:IfStatement[43985-44036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43921-43952]:Block[44005-44036]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43931-43944]:ReturnStatement[44015-44028]"
    }, {
      "left" : "if (type == Token.STRING || type == Token.STRING_KEY)",
      "right" : "if (type == Token.STRING || type == Token.STRING_KEY)",
      "info" : "IfStatement[43964-44543]:IfStatement[44048-44627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44018-44398]:Block[44102-44482]"
    }, {
      "left" : "if (type == Token.STRING_KEY)",
      "right" : "if (type == Token.STRING_KEY)",
      "info" : "IfStatement[44026-44237]:IfStatement[44110-44321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44056-44237]:Block[44140-44321]"
    }, {
      "left" : "int quoted1 = this.getIntProp(QUOTED_PROP);",
      "right" : "int quoted1 = this.getIntProp(QUOTED_PROP);",
      "info" : "VariableDeclarationStatement[44066-44109]:VariableDeclarationStatement[44150-44193]"
    }, {
      "left" : "int quoted2 = node.getIntProp(QUOTED_PROP);",
      "right" : "int quoted2 = node.getIntProp(QUOTED_PROP);",
      "info" : "VariableDeclarationStatement[44118-44161]:VariableDeclarationStatement[44202-44245]"
    }, {
      "left" : "if (quoted1 != quoted2)",
      "right" : "if (quoted1 != quoted2)",
      "info" : "IfStatement[44170-44229]:IfStatement[44254-44313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44194-44229]:Block[44278-44313]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44206-44219]:ReturnStatement[44290-44303]"
    }, {
      "left" : "int slashV1 = this.getIntProp(SLASH_V);",
      "right" : "int slashV1 = this.getIntProp(SLASH_V);",
      "info" : "VariableDeclarationStatement[44245-44284]:VariableDeclarationStatement[44329-44368]"
    }, {
      "left" : "int slashV2 = node.getIntProp(SLASH_V);",
      "right" : "int slashV2 = node.getIntProp(SLASH_V);",
      "info" : "VariableDeclarationStatement[44291-44330]:VariableDeclarationStatement[44375-44414]"
    }, {
      "left" : "if (slashV1 != slashV2)",
      "right" : "if (slashV1 != slashV2)",
      "info" : "IfStatement[44337-44392]:IfStatement[44421-44476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44361-44392]:Block[44445-44476]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44371-44384]:ReturnStatement[44455-44468]"
    }, {
      "left" : "if (type == Token.CALL)",
      "right" : "if (type == Token.CALL)",
      "info" : "IfStatement[44404-44543]:IfStatement[44488-44627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44428-44543]:Block[44512-44627]"
    }, {
      "left" : "if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL))",
      "right" : "if (this.getBooleanProp(FREE_CALL) != node.getBooleanProp(FREE_CALL))",
      "info" : "IfStatement[44436-44537]:IfStatement[44520-44621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44506-44537]:Block[44590-44621]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44516-44529]:ReturnStatement[44600-44613]"
    }, {
      "left" : "if (recur)",
      "right" : "if (recur)",
      "info" : "IfStatement[44549-44831]:IfStatement[44633-44915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44560-44831]:Block[44644-44915]"
    }, {
      "left" : "Node n, n2;",
      "right" : "Node n, n2;",
      "info" : "VariableDeclarationStatement[44568-44579]:VariableDeclarationStatement[44652-44663]"
    }, {
      "left" : "for (n = first, n2 = node.first;\n           n != null;\n           n = n.next, n2 = n2.next)",
      "right" : "for (n = first, n2 = node.first;\n           n != null;\n           n = n.next, n2 = n2.next)",
      "info" : "ForStatement[44586-44825]:ForStatement[44670-44909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44678-44825]:Block[44762-44909]"
    }, {
      "left" : "if (!n.isEquivalentTo(\n            n2, compareJsType, !(shallow && n.isFunction()), shallow))",
      "right" : "if (!n.isEquivalentTo(\n            n2, compareJsType, !(shallow && n.isFunction()), shallow))",
      "info" : "IfStatement[44688-44817]:IfStatement[44772-44901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44782-44817]:Block[44866-44901]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44794-44807]:ReturnStatement[44878-44891]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[44837-44849]:ReturnStatement[44921-44933]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45220-45226]:Modifier[45304-45310]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[45227-45233]:SimpleType[45311-45317]"
    }, {
      "left" : "getQualifiedName",
      "right" : "getQualifiedName",
      "info" : "SimpleName[45234-45250]:SimpleName[45318-45334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45253-45665]:Block[45337-45749]"
    }, {
      "left" : "if (type == Token.NAME)",
      "right" : "if (type == Token.NAME)",
      "info" : "IfStatement[45259-45661]:IfStatement[45343-45745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45283-45366]:Block[45367-45450]"
    }, {
      "left" : "String name = getString();",
      "right" : "String name = getString();",
      "info" : "VariableDeclarationStatement[45291-45317]:VariableDeclarationStatement[45375-45401]"
    }, {
      "left" : "return name.isEmpty() ? null : name;",
      "right" : "return name.isEmpty() ? null : name;",
      "info" : "ReturnStatement[45324-45360]:ReturnStatement[45408-45444]"
    }, {
      "left" : "if (type == Token.GETPROP)",
      "right" : "if (type == Token.GETPROP)",
      "info" : "IfStatement[45372-45661]:IfStatement[45456-45745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45399-45571]:Block[45483-45655]"
    }, {
      "left" : "String left = getFirstChild().getQualifiedName();",
      "right" : "String left = getFirstChild().getQualifiedName();",
      "info" : "VariableDeclarationStatement[45407-45456]:VariableDeclarationStatement[45491-45540]"
    }, {
      "left" : "if (left == null)",
      "right" : "if (left == null)",
      "info" : "IfStatement[45463-45511]:IfStatement[45547-45595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45481-45511]:Block[45565-45595]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45491-45503]:ReturnStatement[45575-45587]"
    }, {
      "left" : "return left + \".\" + getLastChild().getString();",
      "right" : "return left + \".\" + getLastChild().getString();",
      "info" : "ReturnStatement[45518-45565]:ReturnStatement[45602-45649]"
    }, {
      "left" : "if (type == Token.THIS)",
      "right" : "if (type == Token.THIS)",
      "info" : "IfStatement[45577-45661]:IfStatement[45661-45745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45601-45629]:Block[45685-45713]"
    }, {
      "left" : "return \"this\";",
      "right" : "return \"this\";",
      "info" : "ReturnStatement[45609-45623]:ReturnStatement[45693-45707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45635-45661]:Block[45719-45745]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45643-45655]:ReturnStatement[45727-45739]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45828-45834]:Modifier[45912-45918]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[45835-45842]:PrimitiveType[45919-45926]"
    }, {
      "left" : "isQualifiedName",
      "right" : "isQualifiedName",
      "info" : "SimpleName[45843-45858]:SimpleName[45927-45942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45861-46130]:Block[45945-46214]"
    }, {
      "left" : "switch (getType()) {\n      case Token.NAME:\n        return getString().isEmpty() ? false : true;\n      case Token.THIS:\n        return true;\n      case Token.GETPROP:\n        return getFirstChild().isQualifiedName();\n      default:\n        return false;\n    }",
      "right" : "switch (getType()) {\n      case Token.NAME:\n        return getString().isEmpty() ? false : true;\n      case Token.THIS:\n        return true;\n      case Token.GETPROP:\n        return getFirstChild().isQualifiedName();\n      default:\n        return false;\n    }",
      "info" : "SwitchStatement[45867-46126]:SwitchStatement[45951-46210]"
    }, {
      "left" : "case Token.NAME:",
      "right" : "case Token.NAME:",
      "info" : "SwitchCase[45894-45910]:SwitchCase[45978-45994]"
    }, {
      "left" : "return getString().isEmpty() ? false : true;",
      "right" : "return getString().isEmpty() ? false : true;",
      "info" : "ReturnStatement[45919-45963]:ReturnStatement[46003-46047]"
    }, {
      "left" : "case Token.THIS:",
      "right" : "case Token.THIS:",
      "info" : "SwitchCase[45970-45986]:SwitchCase[46054-46070]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[45995-46007]:ReturnStatement[46079-46091]"
    }, {
      "left" : "case Token.GETPROP:",
      "right" : "case Token.GETPROP:",
      "info" : "SwitchCase[46014-46033]:SwitchCase[46098-46117]"
    }, {
      "left" : "return getFirstChild().isQualifiedName();",
      "right" : "return getFirstChild().isQualifiedName();",
      "info" : "ReturnStatement[46042-46083]:ReturnStatement[46126-46167]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[46090-46098]:SwitchCase[46174-46182]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46107-46120]:ReturnStatement[46191-46204]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46314-46320]:Modifier[46398-46404]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[46321-46328]:PrimitiveType[46405-46412]"
    }, {
      "left" : "isUnscopedQualifiedName",
      "right" : "isUnscopedQualifiedName",
      "info" : "SimpleName[46329-46352]:SimpleName[46413-46436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46355-46588]:Block[46439-46672]"
    }, {
      "left" : "switch (getType()) {\n      case Token.NAME:\n        return getString().isEmpty() ? false : true;\n      case Token.GETPROP:\n        return getFirstChild().isUnscopedQualifiedName();\n      default:\n        return false;\n    }",
      "right" : "switch (getType()) {\n      case Token.NAME:\n        return getString().isEmpty() ? false : true;\n      case Token.GETPROP:\n        return getFirstChild().isUnscopedQualifiedName();\n      default:\n        return false;\n    }",
      "info" : "SwitchStatement[46361-46584]:SwitchStatement[46445-46668]"
    }, {
      "left" : "case Token.NAME:",
      "right" : "case Token.NAME:",
      "info" : "SwitchCase[46388-46404]:SwitchCase[46472-46488]"
    }, {
      "left" : "return getString().isEmpty() ? false : true;",
      "right" : "return getString().isEmpty() ? false : true;",
      "info" : "ReturnStatement[46413-46457]:ReturnStatement[46497-46541]"
    }, {
      "left" : "case Token.GETPROP:",
      "right" : "case Token.GETPROP:",
      "info" : "SwitchCase[46464-46483]:SwitchCase[46548-46567]"
    }, {
      "left" : "return getFirstChild().isUnscopedQualifiedName();",
      "right" : "return getFirstChild().isUnscopedQualifiedName();",
      "info" : "ReturnStatement[46492-46541]:ReturnStatement[46576-46625]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[46548-46556]:SwitchCase[46632-46640]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46565-46578]:ReturnStatement[46649-46662]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46791-46797]:Modifier[46875-46881]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[46798-46802]:SimpleType[46882-46886]"
    }, {
      "left" : "detachFromParent",
      "right" : "detachFromParent",
      "info" : "SimpleName[46803-46819]:SimpleName[46887-46903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46822-46920]:Block[46906-47004]"
    }, {
      "left" : "Preconditions.checkState(parent != null);",
      "right" : "Preconditions.checkState(parent != null);",
      "info" : "ExpressionStatement[46828-46869]:ExpressionStatement[46912-46953]"
    }, {
      "left" : "parent.removeChild(this);",
      "right" : "parent.removeChild(this);",
      "info" : "ExpressionStatement[46874-46899]:ExpressionStatement[46958-46983]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[46904-46916]:ReturnStatement[46988-47000]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47070-47076]:Modifier[47154-47160]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[47077-47081]:SimpleType[47161-47165]"
    }, {
      "left" : "removeFirstChild",
      "right" : "removeFirstChild",
      "info" : "SimpleName[47082-47098]:SimpleName[47166-47182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47101-47205]:Block[47185-47289]"
    }, {
      "left" : "Node child = first;",
      "right" : "Node child = first;",
      "info" : "VariableDeclarationStatement[47107-47126]:VariableDeclarationStatement[47191-47210]"
    }, {
      "left" : "if (child != null)",
      "right" : "if (child != null)",
      "info" : "IfStatement[47131-47183]:IfStatement[47215-47267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47150-47183]:Block[47234-47267]"
    }, {
      "left" : "removeChild(child);",
      "right" : "removeChild(child);",
      "info" : "ExpressionStatement[47158-47177]:ExpressionStatement[47242-47261]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[47188-47201]:ReturnStatement[47272-47285]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47283-47289]:Modifier[47367-47373]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[47290-47294]:SimpleType[47374-47378]"
    }, {
      "left" : "removeChildren",
      "right" : "removeChildren",
      "info" : "SimpleName[47295-47309]:SimpleName[47379-47393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47312-47504]:Block[47396-47588]"
    }, {
      "left" : "Node children = first;",
      "right" : "Node children = first;",
      "info" : "VariableDeclarationStatement[47318-47340]:VariableDeclarationStatement[47402-47424]"
    }, {
      "left" : "for (Node child = first; child != null; child = child.getNext())",
      "right" : "for (Node child = first; child != null; child = child.getNext())",
      "info" : "ForStatement[47345-47444]:ForStatement[47429-47528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47410-47444]:Block[47494-47528]"
    }, {
      "left" : "child.parent = null;",
      "right" : "child.parent = null;",
      "info" : "ExpressionStatement[47418-47438]:ExpressionStatement[47502-47522]"
    }, {
      "left" : "first = null;",
      "right" : "first = null;",
      "info" : "ExpressionStatement[47449-47462]:ExpressionStatement[47533-47546]"
    }, {
      "left" : "last = null;",
      "right" : "last = null;",
      "info" : "ExpressionStatement[47467-47479]:ExpressionStatement[47551-47563]"
    }, {
      "left" : "return children;",
      "right" : "return children;",
      "info" : "ReturnStatement[47484-47500]:ReturnStatement[47568-47584]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47609-47615]:Modifier[47693-47699]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[47616-47620]:PrimitiveType[47700-47704]"
    }, {
      "left" : "detachChildren",
      "right" : "detachChildren",
      "info" : "SimpleName[47621-47635]:SimpleName[47705-47719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47638-47848]:Block[47722-47932]"
    }, {
      "left" : "for (Node child = first; child != null)",
      "right" : "for (Node child = first; child != null)",
      "info" : "ForStatement[47644-47809]:ForStatement[47728-47893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47685-47809]:Block[47769-47893]"
    }, {
      "left" : "Node nextChild = child.getNext();",
      "right" : "Node nextChild = child.getNext();",
      "info" : "VariableDeclarationStatement[47693-47726]:VariableDeclarationStatement[47777-47810]"
    }, {
      "left" : "child.parent = null;",
      "right" : "child.parent = null;",
      "info" : "ExpressionStatement[47733-47753]:ExpressionStatement[47817-47837]"
    }, {
      "left" : "child.next = null;",
      "right" : "child.next = null;",
      "info" : "ExpressionStatement[47760-47778]:ExpressionStatement[47844-47862]"
    }, {
      "left" : "child = nextChild;",
      "right" : "child = nextChild;",
      "info" : "ExpressionStatement[47785-47803]:ExpressionStatement[47869-47887]"
    }, {
      "left" : "first = null;",
      "right" : "first = null;",
      "info" : "ExpressionStatement[47814-47827]:ExpressionStatement[47898-47911]"
    }, {
      "left" : "last = null;",
      "right" : "last = null;",
      "info" : "ExpressionStatement[47832-47844]:ExpressionStatement[47916-47928]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47852-47858]:Modifier[47936-47942]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[47859-47863]:SimpleType[47943-47947]"
    }, {
      "left" : "removeChildAfter",
      "right" : "removeChildAfter",
      "info" : "SimpleName[47864-47880]:SimpleName[47948-47964]"
    }, {
      "left" : "Node prev",
      "right" : "Node prev",
      "info" : "SingleVariableDeclaration[47881-47890]:SingleVariableDeclaration[47965-47974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47892-48249]:Block[47976-48333]"
    }, {
      "left" : "Preconditions.checkArgument(prev.parent == this,\n        \"prev is not a child of this node.\");",
      "right" : "Preconditions.checkArgument(prev.parent == this,\n        \"prev is not a child of this node.\");",
      "info" : "ExpressionStatement[47898-47992]:ExpressionStatement[47982-48076]"
    }, {
      "left" : "Preconditions.checkArgument(prev.next != null,\n        \"no next sibling.\");",
      "right" : "Preconditions.checkArgument(prev.next != null,\n        \"no next sibling.\");",
      "info" : "ExpressionStatement[47997-48072]:ExpressionStatement[48081-48156]"
    }, {
      "left" : "Node child = prev.next;",
      "right" : "Node child = prev.next;",
      "info" : "VariableDeclarationStatement[48078-48101]:VariableDeclarationStatement[48162-48185]"
    }, {
      "left" : "prev.next = child.next;",
      "right" : "prev.next = child.next;",
      "info" : "ExpressionStatement[48106-48129]:ExpressionStatement[48190-48213]"
    }, {
      "left" : "if (child == last)",
      "right" : "if (child == last)",
      "info" : "IfStatement[48134-48179]:IfStatement[48218-48263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48153-48179]:Block[48237-48263]"
    }, {
      "left" : "last = prev;",
      "right" : "last = prev;",
      "info" : "ExpressionStatement[48161-48173]:ExpressionStatement[48245-48257]"
    }, {
      "left" : "child.next = null;",
      "right" : "child.next = null;",
      "info" : "ExpressionStatement[48184-48202]:ExpressionStatement[48268-48286]"
    }, {
      "left" : "child.parent = null;",
      "right" : "child.parent = null;",
      "info" : "ExpressionStatement[48207-48227]:ExpressionStatement[48291-48311]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[48232-48245]:ReturnStatement[48316-48329]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48345-48351]:Modifier[48429-48435]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[48352-48356]:SimpleType[48436-48440]"
    }, {
      "left" : "cloneNode",
      "right" : "cloneNode",
      "info" : "SimpleName[48357-48366]:SimpleName[48441-48450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48369-48774]:Block[48453-48858]"
    }, {
      "left" : "Node result;",
      "right" : "Node result;",
      "info" : "VariableDeclarationStatement[48375-48387]:VariableDeclarationStatement[48459-48471]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[48392-48751]:TryStatement[48476-48835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48396-48656]:Block[48480-48740]"
    }, {
      "left" : "result = (Node) super.clone();",
      "right" : "result = (Node) super.clone();",
      "info" : "ExpressionStatement[48404-48434]:ExpressionStatement[48488-48518]"
    }, {
      "left" : "result.next = null;",
      "right" : "result.next = null;",
      "info" : "ExpressionStatement[48550-48569]:ExpressionStatement[48634-48653]"
    }, {
      "left" : "result.first = null;",
      "right" : "result.first = null;",
      "info" : "ExpressionStatement[48576-48596]:ExpressionStatement[48660-48680]"
    }, {
      "left" : "result.last = null;",
      "right" : "result.last = null;",
      "info" : "ExpressionStatement[48603-48622]:ExpressionStatement[48687-48706]"
    }, {
      "left" : "result.parent = null;",
      "right" : "result.parent = null;",
      "info" : "ExpressionStatement[48629-48650]:ExpressionStatement[48713-48734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48694-48751]:Block[48778-48835]"
    }, {
      "left" : "throw new RuntimeException(e.getMessage());",
      "right" : "throw new RuntimeException(e.getMessage());",
      "info" : "ThrowStatement[48702-48745]:ThrowStatement[48786-48829]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[48756-48770]:ReturnStatement[48840-48854]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48854-48860]:Modifier[48938-48944]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[48861-48865]:SimpleType[48945-48949]"
    }, {
      "left" : "cloneTree",
      "right" : "cloneTree",
      "info" : "SimpleName[48866-48875]:SimpleName[48950-48959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48878-49256]:Block[48962-49340]"
    }, {
      "left" : "Node result = cloneNode();",
      "right" : "Node result = cloneNode();",
      "info" : "VariableDeclarationStatement[48884-48910]:VariableDeclarationStatement[48968-48994]"
    }, {
      "left" : "for (Node n2 = getFirstChild(); n2 != null; n2 = n2.getNext())",
      "right" : "for (Node n2 = getFirstChild(); n2 != null; n2 = n2.getNext())",
      "info" : "ForStatement[48915-49233]:ForStatement[48999-49317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48978-49233]:Block[49062-49317]"
    }, {
      "left" : "Node n2clone = n2.cloneTree();",
      "right" : "Node n2clone = n2.cloneTree();",
      "info" : "VariableDeclarationStatement[48986-49016]:VariableDeclarationStatement[49070-49100]"
    }, {
      "left" : "n2clone.parent = result;",
      "right" : "n2clone.parent = result;",
      "info" : "ExpressionStatement[49023-49047]:ExpressionStatement[49107-49131]"
    }, {
      "left" : "if (result.last != null)",
      "right" : "if (result.last != null)",
      "info" : "IfStatement[49054-49124]:IfStatement[49138-49208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49079-49124]:Block[49163-49208]"
    }, {
      "left" : "result.last.next = n2clone;",
      "right" : "result.last.next = n2clone;",
      "info" : "ExpressionStatement[49089-49116]:ExpressionStatement[49173-49200]"
    }, {
      "left" : "if (result.first == null)",
      "right" : "if (result.first == null)",
      "info" : "IfStatement[49131-49198]:IfStatement[49215-49282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49157-49198]:Block[49241-49282]"
    }, {
      "left" : "result.first = n2clone;",
      "right" : "result.first = n2clone;",
      "info" : "ExpressionStatement[49167-49190]:ExpressionStatement[49251-49274]"
    }, {
      "left" : "result.last = n2clone;",
      "right" : "result.last = n2clone;",
      "info" : "ExpressionStatement[49205-49227]:ExpressionStatement[49289-49311]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[49238-49252]:ReturnStatement[49322-49336]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49553-49559]:Modifier[49637-49643]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[49560-49564]:SimpleType[49644-49648]"
    }, {
      "left" : "copyInformationFrom",
      "right" : "copyInformationFrom",
      "info" : "SimpleName[49565-49584]:SimpleName[49649-49668]"
    }, {
      "left" : "Node other",
      "right" : "Node other",
      "info" : "SingleVariableDeclaration[49585-49595]:SingleVariableDeclaration[49669-49679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49597-49909]:Block[49681-49993]"
    }, {
      "left" : "if (getProp(ORIGINALNAME_PROP) == null)",
      "right" : "if (getProp(ORIGINALNAME_PROP) == null)",
      "info" : "IfStatement[49603-49718]:IfStatement[49687-49802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49643-49718]:Block[49727-49802]"
    }, {
      "left" : "putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));",
      "right" : "putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));",
      "info" : "ExpressionStatement[49651-49712]:ExpressionStatement[49735-49796]"
    }, {
      "left" : "if (getProp(STATIC_SOURCE_FILE) == null)",
      "right" : "if (getProp(STATIC_SOURCE_FILE) == null)",
      "info" : "IfStatement[49724-49887]:IfStatement[49808-49971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49765-49887]:Block[49849-49971]"
    }, {
      "left" : "putProp(STATIC_SOURCE_FILE, other.getProp(STATIC_SOURCE_FILE));",
      "right" : "putProp(STATIC_SOURCE_FILE, other.getProp(STATIC_SOURCE_FILE));",
      "info" : "ExpressionStatement[49773-49836]:ExpressionStatement[49857-49920]"
    }, {
      "left" : "sourcePosition = other.sourcePosition;",
      "right" : "sourcePosition = other.sourcePosition;",
      "info" : "ExpressionStatement[49843-49881]:ExpressionStatement[49927-49965]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[49893-49905]:ReturnStatement[49977-49989]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50133-50139]:Modifier[50217-50223]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[50140-50144]:SimpleType[50224-50228]"
    }, {
      "left" : "copyInformationFromForTree",
      "right" : "copyInformationFromForTree",
      "info" : "SimpleName[50145-50171]:SimpleName[50229-50255]"
    }, {
      "left" : "Node other",
      "right" : "Node other",
      "info" : "SingleVariableDeclaration[50172-50182]:SingleVariableDeclaration[50256-50266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50184-50382]:Block[50268-50466]"
    }, {
      "left" : "copyInformationFrom(other);",
      "right" : "copyInformationFrom(other);",
      "info" : "ExpressionStatement[50190-50217]:ExpressionStatement[50274-50301]"
    }, {
      "left" : "for (Node child = getFirstChild();\n         child != null; child = child.getNext())",
      "right" : "for (Node child = getFirstChild();\n         child != null; child = child.getNext())",
      "info" : "ForStatement[50222-50360]:ForStatement[50306-50444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50306-50360]:Block[50390-50444]"
    }, {
      "left" : "child.copyInformationFromForTree(other);",
      "right" : "child.copyInformationFromForTree(other);",
      "info" : "ExpressionStatement[50314-50354]:ExpressionStatement[50398-50438]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50366-50378]:ReturnStatement[50450-50462]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50486-50492]:Modifier[50570-50576]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[50493-50497]:SimpleType[50577-50581]"
    }, {
      "left" : "useSourceInfoFrom",
      "right" : "useSourceInfoFrom",
      "info" : "SimpleName[50498-50515]:SimpleName[50582-50599]"
    }, {
      "left" : "Node other",
      "right" : "Node other",
      "info" : "SingleVariableDeclaration[50516-50526]:SingleVariableDeclaration[50600-50610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50528-50727]:Block[50612-50811]"
    }, {
      "left" : "putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));",
      "right" : "putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));",
      "info" : "ExpressionStatement[50534-50595]:ExpressionStatement[50618-50679]"
    }, {
      "left" : "putProp(STATIC_SOURCE_FILE, other.getProp(STATIC_SOURCE_FILE));",
      "right" : "putProp(STATIC_SOURCE_FILE, other.getProp(STATIC_SOURCE_FILE));",
      "info" : "ExpressionStatement[50600-50663]:ExpressionStatement[50684-50747]"
    }, {
      "left" : "sourcePosition = other.sourcePosition;",
      "right" : "sourcePosition = other.sourcePosition;",
      "info" : "ExpressionStatement[50668-50706]:ExpressionStatement[50752-50790]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50711-50723]:ReturnStatement[50795-50807]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50731-50737]:Modifier[50815-50821]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[50738-50742]:SimpleType[50822-50826]"
    }, {
      "left" : "srcref",
      "right" : "srcref",
      "info" : "SimpleName[50743-50749]:SimpleName[50827-50833]"
    }, {
      "left" : "Node other",
      "right" : "Node other",
      "info" : "SingleVariableDeclaration[50750-50760]:SingleVariableDeclaration[50834-50844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50762-50804]:Block[50846-50888]"
    }, {
      "left" : "return useSourceInfoFrom(other);",
      "right" : "return useSourceInfoFrom(other);",
      "info" : "ReturnStatement[50768-50800]:ReturnStatement[50852-50884]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50924-50930]:Modifier[51008-51014]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[50931-50935]:SimpleType[51015-51019]"
    }, {
      "left" : "useSourceInfoFromForTree",
      "right" : "useSourceInfoFromForTree",
      "info" : "SimpleName[50936-50960]:SimpleName[51020-51044]"
    }, {
      "left" : "Node other",
      "right" : "Node other",
      "info" : "SingleVariableDeclaration[50961-50971]:SingleVariableDeclaration[51045-51055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50973-51167]:Block[51057-51251]"
    }, {
      "left" : "useSourceInfoFrom(other);",
      "right" : "useSourceInfoFrom(other);",
      "info" : "ExpressionStatement[50979-51004]:ExpressionStatement[51063-51088]"
    }, {
      "left" : "for (Node child = getFirstChild();\n         child != null; child = child.getNext())",
      "right" : "for (Node child = getFirstChild();\n         child != null; child = child.getNext())",
      "info" : "ForStatement[51009-51145]:ForStatement[51093-51229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51093-51145]:Block[51177-51229]"
    }, {
      "left" : "child.useSourceInfoFromForTree(other);",
      "right" : "child.useSourceInfoFromForTree(other);",
      "info" : "ExpressionStatement[51101-51139]:ExpressionStatement[51185-51223]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51151-51163]:ReturnStatement[51235-51247]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51171-51177]:Modifier[51255-51261]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[51178-51182]:SimpleType[51262-51266]"
    }, {
      "left" : "srcrefTree",
      "right" : "srcrefTree",
      "info" : "SimpleName[51183-51193]:SimpleName[51267-51277]"
    }, {
      "left" : "Node other",
      "right" : "Node other",
      "info" : "SingleVariableDeclaration[51194-51204]:SingleVariableDeclaration[51278-51288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51206-51255]:Block[51290-51339]"
    }, {
      "left" : "return useSourceInfoFromForTree(other);",
      "right" : "return useSourceInfoFromForTree(other);",
      "info" : "ReturnStatement[51212-51251]:ReturnStatement[51296-51335]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51390-51396]:Modifier[51474-51480]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[51397-51401]:SimpleType[51481-51485]"
    }, {
      "left" : "useSourceInfoIfMissingFrom",
      "right" : "useSourceInfoIfMissingFrom",
      "info" : "SimpleName[51402-51428]:SimpleName[51486-51512]"
    }, {
      "left" : "Node other",
      "right" : "Node other",
      "info" : "SingleVariableDeclaration[51429-51439]:SingleVariableDeclaration[51513-51523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51441-51753]:Block[51525-51837]"
    }, {
      "left" : "if (getProp(ORIGINALNAME_PROP) == null)",
      "right" : "if (getProp(ORIGINALNAME_PROP) == null)",
      "info" : "IfStatement[51447-51562]:IfStatement[51531-51646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51487-51562]:Block[51571-51646]"
    }, {
      "left" : "putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));",
      "right" : "putProp(ORIGINALNAME_PROP, other.getProp(ORIGINALNAME_PROP));",
      "info" : "ExpressionStatement[51495-51556]:ExpressionStatement[51579-51640]"
    }, {
      "left" : "if (getProp(STATIC_SOURCE_FILE) == null)",
      "right" : "if (getProp(STATIC_SOURCE_FILE) == null)",
      "info" : "IfStatement[51568-51731]:IfStatement[51652-51815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51609-51731]:Block[51693-51815]"
    }, {
      "left" : "putProp(STATIC_SOURCE_FILE, other.getProp(STATIC_SOURCE_FILE));",
      "right" : "putProp(STATIC_SOURCE_FILE, other.getProp(STATIC_SOURCE_FILE));",
      "info" : "ExpressionStatement[51617-51680]:ExpressionStatement[51701-51764]"
    }, {
      "left" : "sourcePosition = other.sourcePosition;",
      "right" : "sourcePosition = other.sourcePosition;",
      "info" : "ExpressionStatement[51687-51725]:ExpressionStatement[51771-51809]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51737-51749]:ReturnStatement[51821-51833]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51904-51910]:Modifier[51988-51994]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[51911-51915]:SimpleType[51995-51999]"
    }, {
      "left" : "useSourceInfoIfMissingFromForTree",
      "right" : "useSourceInfoIfMissingFromForTree",
      "info" : "SimpleName[51916-51949]:SimpleName[52000-52033]"
    }, {
      "left" : "Node other",
      "right" : "Node other",
      "info" : "SingleVariableDeclaration[51950-51960]:SingleVariableDeclaration[52034-52044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51962-52174]:Block[52046-52258]"
    }, {
      "left" : "useSourceInfoIfMissingFrom(other);",
      "right" : "useSourceInfoIfMissingFrom(other);",
      "info" : "ExpressionStatement[51968-52002]:ExpressionStatement[52052-52086]"
    }, {
      "left" : "for (Node child = getFirstChild();\n         child != null; child = child.getNext())",
      "right" : "for (Node child = getFirstChild();\n         child != null; child = child.getNext())",
      "info" : "ForStatement[52007-52152]:ForStatement[52091-52236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52091-52152]:Block[52175-52236]"
    }, {
      "left" : "child.useSourceInfoIfMissingFromForTree(other);",
      "right" : "child.useSourceInfoIfMissingFromForTree(other);",
      "info" : "ExpressionStatement[52099-52146]:ExpressionStatement[52183-52230]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[52158-52170]:ReturnStatement[52242-52254]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52282-52288]:Modifier[52366-52372]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[52289-52295]:SimpleType[52373-52379]"
    }, {
      "left" : "getJSType",
      "right" : "getJSType",
      "info" : "SimpleName[52296-52305]:SimpleName[52380-52389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52308-52334]:Block[52392-52418]"
    }, {
      "left" : "return jsType;",
      "right" : "return jsType;",
      "info" : "ReturnStatement[52316-52330]:ReturnStatement[52400-52414]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52338-52344]:Modifier[52422-52428]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[52345-52349]:PrimitiveType[52429-52433]"
    }, {
      "left" : "setJSType",
      "right" : "setJSType",
      "info" : "SimpleName[52350-52359]:SimpleName[52434-52443]"
    }, {
      "left" : "JSType jsType",
      "right" : "JSType jsType",
      "info" : "SingleVariableDeclaration[52360-52373]:SingleVariableDeclaration[52444-52457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52375-52408]:Block[52459-52492]"
    }, {
      "left" : "this.jsType = jsType;",
      "right" : "this.jsType = jsType;",
      "info" : "ExpressionStatement[52383-52404]:ExpressionStatement[52467-52488]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52412-52418]:Modifier[52496-52502]"
    }, {
      "left" : "FileLevelJsDocBuilder",
      "right" : "FileLevelJsDocBuilder",
      "info" : "SimpleType[52419-52440]:SimpleType[52503-52524]"
    }, {
      "left" : "getJsDocBuilderForNode",
      "right" : "getJsDocBuilderForNode",
      "info" : "SimpleName[52441-52463]:SimpleName[52525-52547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52466-52511]:Block[52550-52595]"
    }, {
      "left" : "return new FileLevelJsDocBuilder();",
      "right" : "return new FileLevelJsDocBuilder();",
      "info" : "ReturnStatement[52472-52507]:ReturnStatement[52556-52591]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52882-52888]:Modifier[52966-52972]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[52889-52894]:TYPE_DECLARATION_KIND[52973-52978]"
    }, {
      "left" : "FileLevelJsDocBuilder",
      "right" : "FileLevelJsDocBuilder",
      "info" : "SimpleName[52895-52916]:SimpleName[52979-53000]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52923-52929]:Modifier[53007-53013]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[52930-52934]:PrimitiveType[53014-53018]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[52935-52941]:SimpleName[53019-53025]"
    }, {
      "left" : "String fileLevelComment",
      "right" : "String fileLevelComment",
      "info" : "SingleVariableDeclaration[52942-52965]:SingleVariableDeclaration[53026-53049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52967-53406]:Block[53051-53490]"
    }, {
      "left" : "JSDocInfo jsDocInfo = getJSDocInfo();",
      "right" : "JSDocInfo jsDocInfo = getJSDocInfo();",
      "info" : "VariableDeclarationStatement[52975-53012]:VariableDeclarationStatement[53059-53096]"
    }, {
      "left" : "if (jsDocInfo == null)",
      "right" : "if (jsDocInfo == null)",
      "info" : "IfStatement[53019-53207]:IfStatement[53103-53291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53042-53207]:Block[53126-53291]"
    }, {
      "left" : "jsDocInfo = new JSDocInfo(false);",
      "right" : "jsDocInfo = new JSDocInfo(false);",
      "info" : "ExpressionStatement[53166-53199]:ExpressionStatement[53250-53283]"
    }, {
      "left" : "String license = jsDocInfo.getLicense();",
      "right" : "String license = jsDocInfo.getLicense();",
      "info" : "VariableDeclarationStatement[53214-53254]:VariableDeclarationStatement[53298-53338]"
    }, {
      "left" : "if (license == null)",
      "right" : "if (license == null)",
      "info" : "IfStatement[53261-53313]:IfStatement[53345-53397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53282-53313]:Block[53366-53397]"
    }, {
      "left" : "license = \"\";",
      "right" : "license = \"\";",
      "info" : "ExpressionStatement[53292-53305]:ExpressionStatement[53376-53389]"
    }, {
      "left" : "jsDocInfo.setLicense(license + fileLevelComment);",
      "right" : "jsDocInfo.setLicense(license + fileLevelComment);",
      "info" : "ExpressionStatement[53320-53369]:ExpressionStatement[53404-53453]"
    }, {
      "left" : "setJSDocInfo(jsDocInfo);",
      "right" : "setJSDocInfo(jsDocInfo);",
      "info" : "ExpressionStatement[53376-53400]:ExpressionStatement[53460-53484]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53567-53573]:Modifier[53651-53657]"
    }, {
      "left" : "JSDocInfo",
      "right" : "JSDocInfo",
      "info" : "SimpleType[53574-53583]:SimpleType[53658-53667]"
    }, {
      "left" : "getJSDocInfo",
      "right" : "getJSDocInfo",
      "info" : "SimpleName[53584-53596]:SimpleName[53668-53680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53599-53653]:Block[53683-53737]"
    }, {
      "left" : "return (JSDocInfo) getProp(JSDOC_INFO_PROP);",
      "right" : "return (JSDocInfo) getProp(JSDOC_INFO_PROP);",
      "info" : "ReturnStatement[53605-53649]:ReturnStatement[53689-53733]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53724-53730]:Modifier[53808-53814]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[53731-53735]:SimpleType[53815-53819]"
    }, {
      "left" : "setJSDocInfo",
      "right" : "setJSDocInfo",
      "info" : "SimpleName[53736-53748]:SimpleName[53820-53832]"
    }, {
      "left" : "JSDocInfo info",
      "right" : "JSDocInfo info",
      "info" : "SingleVariableDeclaration[53749-53763]:SingleVariableDeclaration[53833-53847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53765-53827]:Block[53849-53911]"
    }, {
      "left" : "putProp(JSDOC_INFO_PROP, info);",
      "right" : "putProp(JSDOC_INFO_PROP, info);",
      "info" : "ExpressionStatement[53773-53804]:ExpressionStatement[53857-53888]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[53811-53823]:ReturnStatement[53895-53907]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53883-53889]:Modifier[53967-53973]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[53890-53894]:PrimitiveType[53974-53978]"
    }, {
      "left" : "setChangeTime",
      "right" : "setChangeTime",
      "info" : "SimpleName[53895-53908]:SimpleName[53979-53992]"
    }, {
      "left" : "int time",
      "right" : "int time",
      "info" : "SingleVariableDeclaration[53909-53917]:SingleVariableDeclaration[53993-54001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53919-53959]:Block[54003-54043]"
    }, {
      "left" : "putIntProp(CHANGE_TIME, time);",
      "right" : "putIntProp(CHANGE_TIME, time);",
      "info" : "ExpressionStatement[53925-53955]:ExpressionStatement[54009-54039]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54022-54028]:Modifier[54106-54112]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[54029-54032]:PrimitiveType[54113-54116]"
    }, {
      "left" : "getChangeTime",
      "right" : "getChangeTime",
      "info" : "SimpleName[54033-54046]:SimpleName[54117-54130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54049-54090]:Block[54133-54174]"
    }, {
      "left" : "return getIntProp(CHANGE_TIME);",
      "right" : "return getIntProp(CHANGE_TIME);",
      "info" : "ReturnStatement[54055-54086]:ReturnStatement[54139-54170]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54296-54302]:Modifier[54380-54386]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[54303-54307]:PrimitiveType[54387-54391]"
    }, {
      "left" : "setVarArgs",
      "right" : "setVarArgs",
      "info" : "SimpleName[54308-54318]:SimpleName[54392-54402]"
    }, {
      "left" : "boolean varArgs",
      "right" : "boolean varArgs",
      "info" : "SingleVariableDeclaration[54319-54334]:SingleVariableDeclaration[54403-54418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54336-54385]:Block[54420-54469]"
    }, {
      "left" : "putBooleanProp(VAR_ARGS_NAME, varArgs);",
      "right" : "putBooleanProp(VAR_ARGS_NAME, varArgs);",
      "info" : "ExpressionStatement[54342-54381]:ExpressionStatement[54426-54465]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54609-54615]:Modifier[54693-54699]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[54616-54623]:PrimitiveType[54700-54707]"
    }, {
      "left" : "isVarArgs",
      "right" : "isVarArgs",
      "info" : "SimpleName[54624-54633]:SimpleName[54708-54717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54636-54683]:Block[54720-54767]"
    }, {
      "left" : "return getBooleanProp(VAR_ARGS_NAME);",
      "right" : "return getBooleanProp(VAR_ARGS_NAME);",
      "info" : "ReturnStatement[54642-54679]:ReturnStatement[54726-54763]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54883-54889]:Modifier[54967-54973]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[54890-54894]:PrimitiveType[54974-54978]"
    }, {
      "left" : "setOptionalArg",
      "right" : "setOptionalArg",
      "info" : "SimpleName[54895-54909]:SimpleName[54979-54993]"
    }, {
      "left" : "boolean optionalArg",
      "right" : "boolean optionalArg",
      "info" : "SingleVariableDeclaration[54910-54929]:SingleVariableDeclaration[54994-55013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54931-54983]:Block[55015-55067]"
    }, {
      "left" : "putBooleanProp(OPT_ARG_NAME, optionalArg);",
      "right" : "putBooleanProp(OPT_ARG_NAME, optionalArg);",
      "info" : "ExpressionStatement[54937-54979]:ExpressionStatement[55021-55063]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55201-55207]:Modifier[55285-55291]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[55208-55215]:PrimitiveType[55292-55299]"
    }, {
      "left" : "isOptionalArg",
      "right" : "isOptionalArg",
      "info" : "SimpleName[55216-55229]:SimpleName[55300-55313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55232-55278]:Block[55316-55362]"
    }, {
      "left" : "return getBooleanProp(OPT_ARG_NAME);",
      "right" : "return getBooleanProp(OPT_ARG_NAME);",
      "info" : "ReturnStatement[55238-55274]:ReturnStatement[55322-55358]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55394-55400]:Modifier[55478-55484]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55401-55405]:PrimitiveType[55485-55489]"
    }, {
      "left" : "setIsSyntheticBlock",
      "right" : "setIsSyntheticBlock",
      "info" : "SimpleName[55406-55425]:SimpleName[55490-55509]"
    }, {
      "left" : "boolean val",
      "right" : "boolean val",
      "info" : "SingleVariableDeclaration[55426-55437]:SingleVariableDeclaration[55510-55521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55439-55491]:Block[55523-55575]"
    }, {
      "left" : "putBooleanProp(SYNTHETIC_BLOCK_PROP, val);",
      "right" : "putBooleanProp(SYNTHETIC_BLOCK_PROP, val);",
      "info" : "ExpressionStatement[55445-55487]:ExpressionStatement[55529-55571]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55610-55616]:Modifier[55694-55700]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[55617-55624]:PrimitiveType[55701-55708]"
    }, {
      "left" : "isSyntheticBlock",
      "right" : "isSyntheticBlock",
      "info" : "SimpleName[55625-55641]:SimpleName[55709-55725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55644-55698]:Block[55728-55782]"
    }, {
      "left" : "return getBooleanProp(SYNTHETIC_BLOCK_PROP);",
      "right" : "return getBooleanProp(SYNTHETIC_BLOCK_PROP);",
      "info" : "ReturnStatement[55650-55694]:ReturnStatement[55734-55778]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55757-55763]:Modifier[55841-55847]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55764-55768]:PrimitiveType[55848-55852]"
    }, {
      "left" : "setDirectives",
      "right" : "setDirectives",
      "info" : "SimpleName[55769-55782]:SimpleName[55853-55866]"
    }, {
      "left" : "Set<String> val",
      "right" : "Set<String> val",
      "info" : "SingleVariableDeclaration[55783-55798]:SingleVariableDeclaration[55867-55882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55800-55835]:Block[55884-55919]"
    }, {
      "left" : "putProp(DIRECTIVES, val);",
      "right" : "putProp(DIRECTIVES, val);",
      "info" : "ExpressionStatement[55806-55831]:ExpressionStatement[55890-55915]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[55905-55935]:SingleMemberAnnotation[55989-56019]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55938-55944]:Modifier[56022-56028]"
    }, {
      "left" : "Set<String>",
      "right" : "Set<String>",
      "info" : "ParameterizedType[55945-55956]:ParameterizedType[56029-56040]"
    }, {
      "left" : "getDirectives",
      "right" : "getDirectives",
      "info" : "SimpleName[55957-55970]:SimpleName[56041-56054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55973-56024]:Block[56057-56108]"
    }, {
      "left" : "return (Set<String>) getProp(DIRECTIVES);",
      "right" : "return (Set<String>) getProp(DIRECTIVES);",
      "info" : "ReturnStatement[55979-56020]:ReturnStatement[56063-56104]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56158-56164]:Modifier[56242-56248]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[56165-56169]:PrimitiveType[56249-56253]"
    }, {
      "left" : "addSuppression",
      "right" : "addSuppression",
      "info" : "SimpleName[56170-56184]:SimpleName[56254-56268]"
    }, {
      "left" : "String warning",
      "right" : "String warning",
      "info" : "SingleVariableDeclaration[56185-56199]:SingleVariableDeclaration[56269-56283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56201-56332]:Block[56285-56416]"
    }, {
      "left" : "if (getJSDocInfo() == null)",
      "right" : "if (getJSDocInfo() == null)",
      "info" : "IfStatement[56207-56284]:IfStatement[56291-56368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56235-56284]:Block[56319-56368]"
    }, {
      "left" : "setJSDocInfo(new JSDocInfo(false));",
      "right" : "setJSDocInfo(new JSDocInfo(false));",
      "info" : "ExpressionStatement[56243-56278]:ExpressionStatement[56327-56362]"
    }, {
      "left" : "getJSDocInfo().addSuppression(warning);",
      "right" : "getJSDocInfo().addSuppression(warning);",
      "info" : "ExpressionStatement[56289-56328]:ExpressionStatement[56373-56412]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56448-56454]:Modifier[56532-56538]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[56455-56459]:PrimitiveType[56539-56543]"
    }, {
      "left" : "setWasEmptyNode",
      "right" : "setWasEmptyNode",
      "info" : "SimpleName[56460-56475]:SimpleName[56544-56559]"
    }, {
      "left" : "boolean val",
      "right" : "boolean val",
      "info" : "SingleVariableDeclaration[56476-56487]:SingleVariableDeclaration[56560-56571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56489-56532]:Block[56573-56616]"
    }, {
      "left" : "putBooleanProp(EMPTY_BLOCK, val);",
      "right" : "putBooleanProp(EMPTY_BLOCK, val);",
      "info" : "ExpressionStatement[56495-56528]:ExpressionStatement[56579-56612]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56651-56657]:Modifier[56735-56741]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[56658-56665]:PrimitiveType[56742-56749]"
    }, {
      "left" : "wasEmptyNode",
      "right" : "wasEmptyNode",
      "info" : "SimpleName[56666-56678]:SimpleName[56750-56762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56681-56726]:Block[56765-56810]"
    }, {
      "left" : "return getBooleanProp(EMPTY_BLOCK);",
      "right" : "return getBooleanProp(EMPTY_BLOCK);",
      "info" : "ReturnStatement[56687-56722]:ReturnStatement[56771-56806]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57728-57734]:Modifier[57812-57818]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57735-57739]:PrimitiveType[57819-57823]"
    }, {
      "left" : "setSideEffectFlags",
      "right" : "setSideEffectFlags",
      "info" : "SimpleName[57740-57758]:SimpleName[57824-57842]"
    }, {
      "left" : "int flags",
      "right" : "int flags",
      "info" : "SingleVariableDeclaration[57759-57768]:SingleVariableDeclaration[57843-57852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57770-58013]:Block[57854-58097]"
    }, {
      "left" : "Preconditions.checkArgument(\n       getType() == Token.CALL || getType() == Token.NEW,\n       \"setIsNoSideEffectsCall only supports CALL and NEW nodes, got \" +\n       Token.name(getType()));",
      "right" : "Preconditions.checkArgument(\n       getType() == Token.CALL || getType() == Token.NEW,\n       \"setIsNoSideEffectsCall only supports CALL and NEW nodes, got \" +\n       Token.name(getType()));",
      "info" : "ExpressionStatement[57776-57966]:ExpressionStatement[57860-58050]"
    }, {
      "left" : "putIntProp(SIDE_EFFECT_FLAGS, flags);",
      "right" : "putIntProp(SIDE_EFFECT_FLAGS, flags);",
      "info" : "ExpressionStatement[57972-58009]:ExpressionStatement[58056-58093]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58017-58023]:Modifier[58101-58107]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[58024-58028]:PrimitiveType[58108-58112]"
    }, {
      "left" : "setSideEffectFlags",
      "right" : "setSideEffectFlags",
      "info" : "SimpleName[58029-58047]:SimpleName[58113-58131]"
    }, {
      "left" : "SideEffectFlags flags",
      "right" : "SideEffectFlags flags",
      "info" : "SingleVariableDeclaration[58048-58069]:SingleVariableDeclaration[58132-58153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58071-58117]:Block[58155-58201]"
    }, {
      "left" : "setSideEffectFlags(flags.valueOf());",
      "right" : "setSideEffectFlags(flags.valueOf());",
      "info" : "ExpressionStatement[58077-58113]:ExpressionStatement[58161-58197]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58184-58190]:Modifier[58268-58274]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[58191-58194]:PrimitiveType[58275-58278]"
    }, {
      "left" : "getSideEffectFlags",
      "right" : "getSideEffectFlags",
      "info" : "SimpleName[58195-58213]:SimpleName[58279-58297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58216-58263]:Block[58300-58347]"
    }, {
      "left" : "return getIntProp(SIDE_EFFECT_FLAGS);",
      "right" : "return getIntProp(SIDE_EFFECT_FLAGS);",
      "info" : "ReturnStatement[58222-58259]:ReturnStatement[58306-58343]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58391-58397]:Modifier[58475-58481]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[58398-58404]:Modifier[58482-58488]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[58405-58410]:TYPE_DECLARATION_KIND[58489-58494]"
    }, {
      "left" : "SideEffectFlags",
      "right" : "SideEffectFlags",
      "info" : "SimpleName[58411-58426]:SimpleName[58495-58510]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58481-58487]:Modifier[58565-58571]"
    }, {
      "left" : "SideEffectFlags",
      "right" : "SideEffectFlags",
      "info" : "SimpleName[58488-58503]:SimpleName[58572-58587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58506-58513]:Block[58590-58597]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58519-58525]:Modifier[58603-58609]"
    }, {
      "left" : "SideEffectFlags",
      "right" : "SideEffectFlags",
      "info" : "SimpleName[58526-58541]:SimpleName[58610-58625]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[58542-58551]:SingleVariableDeclaration[58626-58635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58553-58586]:Block[58637-58670]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[58561-58580]:ExpressionStatement[58645-58664]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58592-58598]:Modifier[58676-58682]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[58599-58602]:PrimitiveType[58683-58686]"
    }, {
      "left" : "valueOf",
      "right" : "valueOf",
      "info" : "SimpleName[58603-58610]:SimpleName[58687-58694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58613-58640]:Block[58697-58724]"
    }, {
      "left" : "return value;",
      "right" : "return value;",
      "info" : "ReturnStatement[58621-58634]:ReturnStatement[58705-58718]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58719-58725]:Modifier[58803-58809]"
    }, {
      "left" : "SideEffectFlags",
      "right" : "SideEffectFlags",
      "info" : "SimpleType[58726-58741]:SimpleType[58810-58825]"
    }, {
      "left" : "setAllFlags",
      "right" : "setAllFlags",
      "info" : "SimpleName[58742-58753]:SimpleName[58826-58837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58756-58819]:Block[58840-58903]"
    }, {
      "left" : "value = Node.SIDE_EFFECTS_ALL;",
      "right" : "value = Node.SIDE_EFFECTS_ALL;",
      "info" : "ExpressionStatement[58764-58794]:ExpressionStatement[58848-58878]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[58801-58813]:ReturnStatement[58885-58897]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58894-58900]:Modifier[58978-58984]"
    }, {
      "left" : "SideEffectFlags",
      "right" : "SideEffectFlags",
      "info" : "SimpleType[58901-58916]:SimpleType[58985-59000]"
    }, {
      "left" : "clearAllFlags",
      "right" : "clearAllFlags",
      "info" : "SimpleName[58917-58930]:SimpleName[59001-59014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58933-59021]:Block[59017-59105]"
    }, {
      "left" : "value = Node.NO_SIDE_EFFECTS | Node.FLAG_LOCAL_RESULTS;",
      "right" : "value = Node.NO_SIDE_EFFECTS | Node.FLAG_LOCAL_RESULTS;",
      "info" : "ExpressionStatement[58941-58996]:ExpressionStatement[59025-59080]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[59003-59015]:ReturnStatement[59087-59099]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59027-59033]:Modifier[59111-59117]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[59034-59041]:PrimitiveType[59118-59125]"
    }, {
      "left" : "areAllFlagsSet",
      "right" : "areAllFlagsSet",
      "info" : "SimpleName[59042-59056]:SimpleName[59126-59140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59059-59111]:Block[59143-59195]"
    }, {
      "left" : "return value == Node.SIDE_EFFECTS_ALL;",
      "right" : "return value == Node.SIDE_EFFECTS_ALL;",
      "info" : "ReturnStatement[59067-59105]:ReturnStatement[59151-59189]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59275-59281]:Modifier[59359-59365]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[59282-59286]:PrimitiveType[59366-59370]"
    }, {
      "left" : "clearSideEffectFlags",
      "right" : "clearSideEffectFlags",
      "info" : "SimpleName[59287-59307]:SimpleName[59371-59391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59310-59354]:Block[59394-59438]"
    }, {
      "left" : "value |= Node.NO_SIDE_EFFECTS;",
      "right" : "value |= Node.NO_SIDE_EFFECTS;",
      "info" : "ExpressionStatement[59318-59348]:ExpressionStatement[59402-59432]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59360-59366]:Modifier[59444-59450]"
    }, {
      "left" : "SideEffectFlags",
      "right" : "SideEffectFlags",
      "info" : "SimpleType[59367-59382]:SimpleType[59451-59466]"
    }, {
      "left" : "setMutatesGlobalState",
      "right" : "setMutatesGlobalState",
      "info" : "SimpleName[59383-59404]:SimpleName[59467-59488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59407-59653]:Block[59491-59737]"
    }, {
      "left" : "removeFlag(Node.FLAG_GLOBAL_STATE_UNMODIFIED);",
      "right" : "removeFlag(Node.FLAG_GLOBAL_STATE_UNMODIFIED);",
      "info" : "ExpressionStatement[59487-59533]:ExpressionStatement[59571-59617]"
    }, {
      "left" : "removeFlag(Node.FLAG_ARGUMENTS_UNMODIFIED);",
      "right" : "removeFlag(Node.FLAG_ARGUMENTS_UNMODIFIED);",
      "info" : "ExpressionStatement[59540-59583]:ExpressionStatement[59624-59667]"
    }, {
      "left" : "removeFlag(Node.FLAG_THIS_UNMODIFIED);",
      "right" : "removeFlag(Node.FLAG_THIS_UNMODIFIED);",
      "info" : "ExpressionStatement[59590-59628]:ExpressionStatement[59674-59712]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[59635-59647]:ReturnStatement[59719-59731]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59659-59665]:Modifier[59743-59749]"
    }, {
      "left" : "SideEffectFlags",
      "right" : "SideEffectFlags",
      "info" : "SimpleType[59666-59681]:SimpleType[59750-59765]"
    }, {
      "left" : "setThrows",
      "right" : "setThrows",
      "info" : "SimpleName[59682-59691]:SimpleName[59766-59775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59694-59759]:Block[59778-59843]"
    }, {
      "left" : "removeFlag(Node.FLAG_NO_THROWS);",
      "right" : "removeFlag(Node.FLAG_NO_THROWS);",
      "info" : "ExpressionStatement[59702-59734]:ExpressionStatement[59786-59818]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[59741-59753]:ReturnStatement[59825-59837]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59765-59771]:Modifier[59849-59855]"
    }, {
      "left" : "SideEffectFlags",
      "right" : "SideEffectFlags",
      "info" : "SimpleType[59772-59787]:SimpleType[59856-59871]"
    }, {
      "left" : "setMutatesThis",
      "right" : "setMutatesThis",
      "info" : "SimpleName[59788-59802]:SimpleName[59872-59886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59805-59876]:Block[59889-59960]"
    }, {
      "left" : "removeFlag(Node.FLAG_THIS_UNMODIFIED);",
      "right" : "removeFlag(Node.FLAG_THIS_UNMODIFIED);",
      "info" : "ExpressionStatement[59813-59851]:ExpressionStatement[59897-59935]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[59858-59870]:ReturnStatement[59942-59954]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59882-59888]:Modifier[59966-59972]"
    }, {
      "left" : "SideEffectFlags",
      "right" : "SideEffectFlags",
      "info" : "SimpleType[59889-59904]:SimpleType[59973-59988]"
    }, {
      "left" : "setMutatesArguments",
      "right" : "setMutatesArguments",
      "info" : "SimpleName[59905-59924]:SimpleName[59989-60008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59927-60003]:Block[60011-60087]"
    }, {
      "left" : "removeFlag(Node.FLAG_ARGUMENTS_UNMODIFIED);",
      "right" : "removeFlag(Node.FLAG_ARGUMENTS_UNMODIFIED);",
      "info" : "ExpressionStatement[59935-59978]:ExpressionStatement[60019-60062]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[59985-59997]:ReturnStatement[60069-60081]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60009-60015]:Modifier[60093-60099]"
    }, {
      "left" : "SideEffectFlags",
      "right" : "SideEffectFlags",
      "info" : "SimpleType[60016-60031]:SimpleType[60100-60115]"
    }, {
      "left" : "setReturnsTainted",
      "right" : "setReturnsTainted",
      "info" : "SimpleName[60032-60049]:SimpleName[60116-60133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60052-60121]:Block[60136-60205]"
    }, {
      "left" : "removeFlag(Node.FLAG_LOCAL_RESULTS);",
      "right" : "removeFlag(Node.FLAG_LOCAL_RESULTS);",
      "info" : "ExpressionStatement[60060-60096]:ExpressionStatement[60144-60180]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[60103-60115]:ReturnStatement[60187-60199]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[60127-60134]:Modifier[60211-60218]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[60135-60139]:PrimitiveType[60219-60223]"
    }, {
      "left" : "removeFlag",
      "right" : "removeFlag",
      "info" : "SimpleName[60140-60150]:SimpleName[60224-60234]"
    }, {
      "left" : "int flag",
      "right" : "int flag",
      "info" : "SingleVariableDeclaration[60151-60159]:SingleVariableDeclaration[60235-60243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60161-60190]:Block[60245-60274]"
    }, {
      "left" : "value &= ~flag;",
      "right" : "value &= ~flag;",
      "info" : "ExpressionStatement[60169-60184]:ExpressionStatement[60253-60268]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60271-60277]:Modifier[60355-60361]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[60278-60285]:PrimitiveType[60362-60369]"
    }, {
      "left" : "isOnlyModifiesThisCall",
      "right" : "isOnlyModifiesThisCall",
      "info" : "SimpleName[60286-60308]:SimpleName[60370-60392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60311-60519]:Block[60395-60603]"
    }, {
      "left" : "return areBitFlagsSet(\n        getSideEffectFlags() & Node.NO_SIDE_EFFECTS,\n        Node.FLAG_GLOBAL_STATE_UNMODIFIED\n            | Node.FLAG_ARGUMENTS_UNMODIFIED\n            | Node.FLAG_NO_THROWS);",
      "right" : "return areBitFlagsSet(\n        getSideEffectFlags() & Node.NO_SIDE_EFFECTS,\n        Node.FLAG_GLOBAL_STATE_UNMODIFIED\n            | Node.FLAG_ARGUMENTS_UNMODIFIED\n            | Node.FLAG_NO_THROWS);",
      "info" : "ReturnStatement[60317-60515]:ReturnStatement[60401-60599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60601-60607]:Modifier[60685-60691]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[60608-60615]:PrimitiveType[60692-60699]"
    }, {
      "left" : "isOnlyModifiesArgumentsCall",
      "right" : "isOnlyModifiesArgumentsCall",
      "info" : "SimpleName[60616-60643]:SimpleName[60700-60727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60646-60849]:Block[60730-60933]"
    }, {
      "left" : "return areBitFlagsSet(\n        getSideEffectFlags() & Node.NO_SIDE_EFFECTS,\n        Node.FLAG_GLOBAL_STATE_UNMODIFIED\n            | Node.FLAG_THIS_UNMODIFIED\n            | Node.FLAG_NO_THROWS);",
      "right" : "return areBitFlagsSet(\n        getSideEffectFlags() & Node.NO_SIDE_EFFECTS,\n        Node.FLAG_GLOBAL_STATE_UNMODIFIED\n            | Node.FLAG_THIS_UNMODIFIED\n            | Node.FLAG_NO_THROWS);",
      "info" : "ReturnStatement[60652-60845]:ReturnStatement[60736-60929]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60961-60967]:Modifier[61045-61051]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[60968-60975]:PrimitiveType[61052-61059]"
    }, {
      "left" : "isNoSideEffectsCall",
      "right" : "isNoSideEffectsCall",
      "info" : "SimpleName[60976-60995]:SimpleName[61060-61079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60998-61069]:Block[61082-61153]"
    }, {
      "left" : "return areBitFlagsSet(getSideEffectFlags(), NO_SIDE_EFFECTS);",
      "right" : "return areBitFlagsSet(getSideEffectFlags(), NO_SIDE_EFFECTS);",
      "info" : "ReturnStatement[61004-61065]:ReturnStatement[61088-61149]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61245-61251]:Modifier[61329-61335]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[61252-61259]:PrimitiveType[61336-61343]"
    }, {
      "left" : "isLocalResultCall",
      "right" : "isLocalResultCall",
      "info" : "SimpleName[61260-61277]:SimpleName[61344-61361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61280-61354]:Block[61364-61438]"
    }, {
      "left" : "return areBitFlagsSet(getSideEffectFlags(), FLAG_LOCAL_RESULTS);",
      "right" : "return areBitFlagsSet(getSideEffectFlags(), FLAG_LOCAL_RESULTS);",
      "info" : "ReturnStatement[61286-61350]:ReturnStatement[61370-61434]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61433-61439]:Modifier[61517-61523]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[61440-61447]:PrimitiveType[61524-61531]"
    }, {
      "left" : "mayMutateArguments",
      "right" : "mayMutateArguments",
      "info" : "SimpleName[61448-61466]:SimpleName[61532-61550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61469-61551]:Block[61553-61635]"
    }, {
      "left" : "return !areBitFlagsSet(getSideEffectFlags(), FLAG_ARGUMENTS_UNMODIFIED);",
      "right" : "return !areBitFlagsSet(getSideEffectFlags(), FLAG_ARGUMENTS_UNMODIFIED);",
      "info" : "ReturnStatement[61475-61547]:ReturnStatement[61559-61631]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61638-61644]:Modifier[61722-61728]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[61645-61652]:PrimitiveType[61729-61736]"
    }, {
      "left" : "mayMutateGlobalStateOrThrow",
      "right" : "mayMutateGlobalStateOrThrow",
      "info" : "SimpleName[61653-61680]:SimpleName[61737-61764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61683-61793]:Block[61767-61877]"
    }, {
      "left" : "return !areBitFlagsSet(getSideEffectFlags(),\n        FLAG_GLOBAL_STATE_UNMODIFIED | FLAG_NO_THROWS);",
      "right" : "return !areBitFlagsSet(getSideEffectFlags(),\n        FLAG_GLOBAL_STATE_UNMODIFIED | FLAG_NO_THROWS);",
      "info" : "ReturnStatement[61689-61789]:ReturnStatement[61773-61873]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[61862-61869]:Modifier[61946-61953]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[61870-61877]:PrimitiveType[61954-61961]"
    }, {
      "left" : "areBitFlagsSet",
      "right" : "areBitFlagsSet",
      "info" : "SimpleName[61878-61892]:SimpleName[61962-61976]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[61893-61902]:SingleVariableDeclaration[61977-61986]"
    }, {
      "left" : "int flags",
      "right" : "int flags",
      "info" : "SingleVariableDeclaration[61904-61913]:SingleVariableDeclaration[61988-61997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61915-61957]:Block[61999-62041]"
    }, {
      "left" : "return (value & flags) == flags;",
      "right" : "return (value & flags) == flags;",
      "info" : "ReturnStatement[61921-61953]:ReturnStatement[62005-62037]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62045-62051]:Modifier[62129-62135]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[62052-62059]:PrimitiveType[62136-62143]"
    }, {
      "left" : "isQuotedString",
      "right" : "isQuotedString",
      "info" : "SimpleName[62060-62074]:SimpleName[62144-62158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62077-62100]:Block[62161-62184]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[62083-62096]:ReturnStatement[62167-62180]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62188-62194]:Modifier[62272-62278]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[62195-62199]:PrimitiveType[62279-62283]"
    }, {
      "left" : "setQuotedString",
      "right" : "setQuotedString",
      "info" : "SimpleName[62200-62215]:SimpleName[62284-62299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62218-62280]:Block[62302-62364]"
    }, {
      "left" : "throw new IllegalStateException(\"not a StringNode\");",
      "right" : "throw new IllegalStateException(\"not a StringNode\");",
      "info" : "ThrowStatement[62224-62276]:ThrowStatement[62308-62360]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[62284-62290]:Modifier[62368-62374]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[62291-62296]:TYPE_DECLARATION_KIND[62375-62380]"
    }, {
      "left" : "NodeMismatch",
      "right" : "NodeMismatch",
      "info" : "SimpleName[62297-62309]:SimpleName[62381-62393]"
    }, {
      "left" : "NodeMismatch",
      "right" : "NodeMismatch",
      "info" : "SimpleName[62361-62373]:SimpleName[62445-62457]"
    }, {
      "left" : "Node nodeA",
      "right" : "Node nodeA",
      "info" : "SingleVariableDeclaration[62374-62384]:SingleVariableDeclaration[62458-62468]"
    }, {
      "left" : "Node nodeB",
      "right" : "Node nodeB",
      "info" : "SingleVariableDeclaration[62386-62396]:SingleVariableDeclaration[62470-62480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62398-62457]:Block[62482-62541]"
    }, {
      "left" : "this.nodeA = nodeA;",
      "right" : "this.nodeA = nodeA;",
      "info" : "ExpressionStatement[62406-62425]:ExpressionStatement[62490-62509]"
    }, {
      "left" : "this.nodeB = nodeB;",
      "right" : "this.nodeB = nodeB;",
      "info" : "ExpressionStatement[62432-62451]:ExpressionStatement[62516-62535]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[62463-62472]:MarkerAnnotation[62547-62556]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62477-62483]:Modifier[62561-62567]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[62484-62491]:PrimitiveType[62568-62575]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[62492-62498]:SimpleName[62576-62582]"
    }, {
      "left" : "Object object",
      "right" : "Object object",
      "info" : "SingleVariableDeclaration[62499-62512]:SingleVariableDeclaration[62583-62596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62514-62723]:Block[62598-62807]"
    }, {
      "left" : "if (object instanceof NodeMismatch)",
      "right" : "if (object instanceof NodeMismatch)",
      "info" : "IfStatement[62522-62697]:IfStatement[62606-62781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62558-62697]:Block[62642-62781]"
    }, {
      "left" : "NodeMismatch that = (NodeMismatch) object;",
      "right" : "NodeMismatch that = (NodeMismatch) object;",
      "info" : "VariableDeclarationStatement[62568-62610]:VariableDeclarationStatement[62652-62694]"
    }, {
      "left" : "return that.nodeA.equals(this.nodeA) && that.nodeB.equals(this.nodeB);",
      "right" : "return that.nodeA.equals(this.nodeA) && that.nodeB.equals(this.nodeB);",
      "info" : "ReturnStatement[62619-62689]:ReturnStatement[62703-62773]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[62704-62717]:ReturnStatement[62788-62801]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[62729-62738]:MarkerAnnotation[62813-62822]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62743-62749]:Modifier[62827-62833]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[62750-62753]:PrimitiveType[62834-62837]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[62754-62762]:SimpleName[62838-62846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62765-62817]:Block[62849-62901]"
    }, {
      "left" : "return Objects.hashCode(nodeA, nodeB);",
      "right" : "return Objects.hashCode(nodeA, nodeB);",
      "info" : "ReturnStatement[62773-62811]:ReturnStatement[62857-62895]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62862-62868]:Modifier[62946-62952]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[62869-62876]:PrimitiveType[62953-62960]"
    }, {
      "left" : "isAdd",
      "right" : "isAdd",
      "info" : "SimpleName[62877-62882]:SimpleName[62961-62966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62885-62930]:Block[62969-63014]"
    }, {
      "left" : "return this.getType() == Token.ADD;",
      "right" : "return this.getType() == Token.ADD;",
      "info" : "ReturnStatement[62891-62926]:ReturnStatement[62975-63010]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62934-62940]:Modifier[63018-63024]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[62941-62948]:PrimitiveType[63025-63032]"
    }, {
      "left" : "isAnd",
      "right" : "isAnd",
      "info" : "SimpleName[62949-62954]:SimpleName[63033-63038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62957-63002]:Block[63041-63086]"
    }, {
      "left" : "return this.getType() == Token.AND;",
      "right" : "return this.getType() == Token.AND;",
      "info" : "ReturnStatement[62963-62998]:ReturnStatement[63047-63082]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63006-63012]:Modifier[63090-63096]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63013-63020]:PrimitiveType[63097-63104]"
    }, {
      "left" : "isArrayLit",
      "right" : "isArrayLit",
      "info" : "SimpleName[63021-63031]:SimpleName[63105-63115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63034-63084]:Block[63118-63168]"
    }, {
      "left" : "return this.getType() == Token.ARRAYLIT;",
      "right" : "return this.getType() == Token.ARRAYLIT;",
      "info" : "ReturnStatement[63040-63080]:ReturnStatement[63124-63164]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63088-63094]:Modifier[63172-63178]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63095-63102]:PrimitiveType[63179-63186]"
    }, {
      "left" : "isAssign",
      "right" : "isAssign",
      "info" : "SimpleName[63103-63111]:SimpleName[63187-63195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63114-63162]:Block[63198-63246]"
    }, {
      "left" : "return this.getType() == Token.ASSIGN;",
      "right" : "return this.getType() == Token.ASSIGN;",
      "info" : "ReturnStatement[63120-63158]:ReturnStatement[63204-63242]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63166-63172]:Modifier[63250-63256]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63173-63180]:PrimitiveType[63257-63264]"
    }, {
      "left" : "isAssignAdd",
      "right" : "isAssignAdd",
      "info" : "SimpleName[63181-63192]:SimpleName[63265-63276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63195-63247]:Block[63279-63331]"
    }, {
      "left" : "return this.getType() == Token.ASSIGN_ADD;",
      "right" : "return this.getType() == Token.ASSIGN_ADD;",
      "info" : "ReturnStatement[63201-63243]:ReturnStatement[63285-63327]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63251-63257]:Modifier[63335-63341]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63258-63265]:PrimitiveType[63342-63349]"
    }, {
      "left" : "isBlock",
      "right" : "isBlock",
      "info" : "SimpleName[63266-63273]:SimpleName[63350-63357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63276-63323]:Block[63360-63407]"
    }, {
      "left" : "return this.getType() == Token.BLOCK;",
      "right" : "return this.getType() == Token.BLOCK;",
      "info" : "ReturnStatement[63282-63319]:ReturnStatement[63366-63403]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63327-63333]:Modifier[63411-63417]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63334-63341]:PrimitiveType[63418-63425]"
    }, {
      "left" : "isBreak",
      "right" : "isBreak",
      "info" : "SimpleName[63342-63349]:SimpleName[63426-63433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63352-63399]:Block[63436-63483]"
    }, {
      "left" : "return this.getType() == Token.BREAK;",
      "right" : "return this.getType() == Token.BREAK;",
      "info" : "ReturnStatement[63358-63395]:ReturnStatement[63442-63479]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63403-63409]:Modifier[63487-63493]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63410-63417]:PrimitiveType[63494-63501]"
    }, {
      "left" : "isCall",
      "right" : "isCall",
      "info" : "SimpleName[63418-63424]:SimpleName[63502-63508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63427-63473]:Block[63511-63557]"
    }, {
      "left" : "return this.getType() == Token.CALL;",
      "right" : "return this.getType() == Token.CALL;",
      "info" : "ReturnStatement[63433-63469]:ReturnStatement[63517-63553]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63477-63483]:Modifier[63561-63567]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63484-63491]:PrimitiveType[63568-63575]"
    }, {
      "left" : "isCase",
      "right" : "isCase",
      "info" : "SimpleName[63492-63498]:SimpleName[63576-63582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63501-63547]:Block[63585-63631]"
    }, {
      "left" : "return this.getType() == Token.CASE;",
      "right" : "return this.getType() == Token.CASE;",
      "info" : "ReturnStatement[63507-63543]:ReturnStatement[63591-63627]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63551-63557]:Modifier[63635-63641]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63558-63565]:PrimitiveType[63642-63649]"
    }, {
      "left" : "isCast",
      "right" : "isCast",
      "info" : "SimpleName[63566-63572]:SimpleName[63650-63656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63575-63621]:Block[63659-63705]"
    }, {
      "left" : "return this.getType() == Token.CAST;",
      "right" : "return this.getType() == Token.CAST;",
      "info" : "ReturnStatement[63581-63617]:ReturnStatement[63665-63701]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63625-63631]:Modifier[63709-63715]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63632-63639]:PrimitiveType[63716-63723]"
    }, {
      "left" : "isCatch",
      "right" : "isCatch",
      "info" : "SimpleName[63640-63647]:SimpleName[63724-63731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63650-63697]:Block[63734-63781]"
    }, {
      "left" : "return this.getType() == Token.CATCH;",
      "right" : "return this.getType() == Token.CATCH;",
      "info" : "ReturnStatement[63656-63693]:ReturnStatement[63740-63777]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63701-63707]:Modifier[63785-63791]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63708-63715]:PrimitiveType[63792-63799]"
    }, {
      "left" : "isComma",
      "right" : "isComma",
      "info" : "SimpleName[63716-63723]:SimpleName[63800-63807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63726-63773]:Block[63810-63857]"
    }, {
      "left" : "return this.getType() == Token.COMMA;",
      "right" : "return this.getType() == Token.COMMA;",
      "info" : "ReturnStatement[63732-63769]:ReturnStatement[63816-63853]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63777-63783]:Modifier[63861-63867]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63784-63791]:PrimitiveType[63868-63875]"
    }, {
      "left" : "isContinue",
      "right" : "isContinue",
      "info" : "SimpleName[63792-63802]:SimpleName[63876-63886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63805-63855]:Block[63889-63939]"
    }, {
      "left" : "return this.getType() == Token.CONTINUE;",
      "right" : "return this.getType() == Token.CONTINUE;",
      "info" : "ReturnStatement[63811-63851]:ReturnStatement[63895-63935]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63859-63865]:Modifier[63943-63949]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63866-63873]:PrimitiveType[63950-63957]"
    }, {
      "left" : "isDebugger",
      "right" : "isDebugger",
      "info" : "SimpleName[63874-63884]:SimpleName[63958-63968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63887-63937]:Block[63971-64021]"
    }, {
      "left" : "return this.getType() == Token.DEBUGGER;",
      "right" : "return this.getType() == Token.DEBUGGER;",
      "info" : "ReturnStatement[63893-63933]:ReturnStatement[63977-64017]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63941-63947]:Modifier[64025-64031]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63948-63955]:PrimitiveType[64032-64039]"
    }, {
      "left" : "isDec",
      "right" : "isDec",
      "info" : "SimpleName[63956-63961]:SimpleName[64040-64045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63964-64009]:Block[64048-64093]"
    }, {
      "left" : "return this.getType() == Token.DEC;",
      "right" : "return this.getType() == Token.DEC;",
      "info" : "ReturnStatement[63970-64005]:ReturnStatement[64054-64089]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64013-64019]:Modifier[64097-64103]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64020-64027]:PrimitiveType[64104-64111]"
    }, {
      "left" : "isDefaultCase",
      "right" : "isDefaultCase",
      "info" : "SimpleName[64028-64041]:SimpleName[64112-64125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64044-64098]:Block[64128-64182]"
    }, {
      "left" : "return this.getType() == Token.DEFAULT_CASE;",
      "right" : "return this.getType() == Token.DEFAULT_CASE;",
      "info" : "ReturnStatement[64050-64094]:ReturnStatement[64134-64178]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64102-64108]:Modifier[64186-64192]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64109-64116]:PrimitiveType[64193-64200]"
    }, {
      "left" : "isDelProp",
      "right" : "isDelProp",
      "info" : "SimpleName[64117-64126]:SimpleName[64201-64210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64129-64178]:Block[64213-64262]"
    }, {
      "left" : "return this.getType() == Token.DELPROP;",
      "right" : "return this.getType() == Token.DELPROP;",
      "info" : "ReturnStatement[64135-64174]:ReturnStatement[64219-64258]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64182-64188]:Modifier[64266-64272]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64189-64196]:PrimitiveType[64273-64280]"
    }, {
      "left" : "isDo",
      "right" : "isDo",
      "info" : "SimpleName[64197-64201]:SimpleName[64281-64285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64204-64248]:Block[64288-64332]"
    }, {
      "left" : "return this.getType() == Token.DO;",
      "right" : "return this.getType() == Token.DO;",
      "info" : "ReturnStatement[64210-64244]:ReturnStatement[64294-64328]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64252-64258]:Modifier[64336-64342]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64259-64266]:PrimitiveType[64343-64350]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[64267-64274]:SimpleName[64351-64358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64277-64324]:Block[64361-64408]"
    }, {
      "left" : "return this.getType() == Token.EMPTY;",
      "right" : "return this.getType() == Token.EMPTY;",
      "info" : "ReturnStatement[64283-64320]:ReturnStatement[64367-64404]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64328-64334]:Modifier[64412-64418]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64335-64342]:PrimitiveType[64419-64426]"
    }, {
      "left" : "isExprResult",
      "right" : "isExprResult",
      "info" : "SimpleName[64343-64355]:SimpleName[64427-64439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64358-64411]:Block[64442-64495]"
    }, {
      "left" : "return this.getType() == Token.EXPR_RESULT;",
      "right" : "return this.getType() == Token.EXPR_RESULT;",
      "info" : "ReturnStatement[64364-64407]:ReturnStatement[64448-64491]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64415-64421]:Modifier[64499-64505]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64422-64429]:PrimitiveType[64506-64513]"
    }, {
      "left" : "isFalse",
      "right" : "isFalse",
      "info" : "SimpleName[64430-64437]:SimpleName[64514-64521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64440-64487]:Block[64524-64571]"
    }, {
      "left" : "return this.getType() == Token.FALSE;",
      "right" : "return this.getType() == Token.FALSE;",
      "info" : "ReturnStatement[64446-64483]:ReturnStatement[64530-64567]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64491-64497]:Modifier[64575-64581]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64498-64505]:PrimitiveType[64582-64589]"
    }, {
      "left" : "isFor",
      "right" : "isFor",
      "info" : "SimpleName[64506-64511]:SimpleName[64590-64595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64514-64559]:Block[64598-64643]"
    }, {
      "left" : "return this.getType() == Token.FOR;",
      "right" : "return this.getType() == Token.FOR;",
      "info" : "ReturnStatement[64520-64555]:ReturnStatement[64604-64639]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64563-64569]:Modifier[64647-64653]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64570-64577]:PrimitiveType[64654-64661]"
    }, {
      "left" : "isFunction",
      "right" : "isFunction",
      "info" : "SimpleName[64578-64588]:SimpleName[64662-64672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64591-64641]:Block[64675-64725]"
    }, {
      "left" : "return this.getType() == Token.FUNCTION;",
      "right" : "return this.getType() == Token.FUNCTION;",
      "info" : "ReturnStatement[64597-64637]:ReturnStatement[64681-64721]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64645-64651]:Modifier[64729-64735]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64652-64659]:PrimitiveType[64736-64743]"
    }, {
      "left" : "isGetterDef",
      "right" : "isGetterDef",
      "info" : "SimpleName[64660-64671]:SimpleName[64744-64755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64674-64726]:Block[64758-64810]"
    }, {
      "left" : "return this.getType() == Token.GETTER_DEF;",
      "right" : "return this.getType() == Token.GETTER_DEF;",
      "info" : "ReturnStatement[64680-64722]:ReturnStatement[64764-64806]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64730-64736]:Modifier[64814-64820]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64737-64744]:PrimitiveType[64821-64828]"
    }, {
      "left" : "isGetElem",
      "right" : "isGetElem",
      "info" : "SimpleName[64745-64754]:SimpleName[64829-64838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64757-64806]:Block[64841-64890]"
    }, {
      "left" : "return this.getType() == Token.GETELEM;",
      "right" : "return this.getType() == Token.GETELEM;",
      "info" : "ReturnStatement[64763-64802]:ReturnStatement[64847-64886]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64810-64816]:Modifier[64894-64900]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64817-64824]:PrimitiveType[64901-64908]"
    }, {
      "left" : "isGetProp",
      "right" : "isGetProp",
      "info" : "SimpleName[64825-64834]:SimpleName[64909-64918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64837-64886]:Block[64921-64970]"
    }, {
      "left" : "return this.getType() == Token.GETPROP;",
      "right" : "return this.getType() == Token.GETPROP;",
      "info" : "ReturnStatement[64843-64882]:ReturnStatement[64927-64966]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64890-64896]:Modifier[64974-64980]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64897-64904]:PrimitiveType[64981-64988]"
    }, {
      "left" : "isHook",
      "right" : "isHook",
      "info" : "SimpleName[64905-64911]:SimpleName[64989-64995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64914-64960]:Block[64998-65044]"
    }, {
      "left" : "return this.getType() == Token.HOOK;",
      "right" : "return this.getType() == Token.HOOK;",
      "info" : "ReturnStatement[64920-64956]:ReturnStatement[65004-65040]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64964-64970]:Modifier[65048-65054]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64971-64978]:PrimitiveType[65055-65062]"
    }, {
      "left" : "isIf",
      "right" : "isIf",
      "info" : "SimpleName[64979-64983]:SimpleName[65063-65067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64986-65030]:Block[65070-65114]"
    }, {
      "left" : "return this.getType() == Token.IF;",
      "right" : "return this.getType() == Token.IF;",
      "info" : "ReturnStatement[64992-65026]:ReturnStatement[65076-65110]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65034-65040]:Modifier[65118-65124]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65041-65048]:PrimitiveType[65125-65132]"
    }, {
      "left" : "isIn",
      "right" : "isIn",
      "info" : "SimpleName[65049-65053]:SimpleName[65133-65137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65056-65100]:Block[65140-65184]"
    }, {
      "left" : "return this.getType() == Token.IN;",
      "right" : "return this.getType() == Token.IN;",
      "info" : "ReturnStatement[65062-65096]:ReturnStatement[65146-65180]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65104-65110]:Modifier[65188-65194]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65111-65118]:PrimitiveType[65195-65202]"
    }, {
      "left" : "isInc",
      "right" : "isInc",
      "info" : "SimpleName[65119-65124]:SimpleName[65203-65208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65127-65172]:Block[65211-65256]"
    }, {
      "left" : "return this.getType() == Token.INC;",
      "right" : "return this.getType() == Token.INC;",
      "info" : "ReturnStatement[65133-65168]:ReturnStatement[65217-65252]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65176-65182]:Modifier[65260-65266]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65183-65190]:PrimitiveType[65267-65274]"
    }, {
      "left" : "isInstanceOf",
      "right" : "isInstanceOf",
      "info" : "SimpleName[65191-65203]:SimpleName[65275-65287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65206-65258]:Block[65290-65342]"
    }, {
      "left" : "return this.getType() == Token.INSTANCEOF;",
      "right" : "return this.getType() == Token.INSTANCEOF;",
      "info" : "ReturnStatement[65212-65254]:ReturnStatement[65296-65338]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65262-65268]:Modifier[65346-65352]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65269-65276]:PrimitiveType[65353-65360]"
    }, {
      "left" : "isLabel",
      "right" : "isLabel",
      "info" : "SimpleName[65277-65284]:SimpleName[65361-65368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65287-65334]:Block[65371-65418]"
    }, {
      "left" : "return this.getType() == Token.LABEL;",
      "right" : "return this.getType() == Token.LABEL;",
      "info" : "ReturnStatement[65293-65330]:ReturnStatement[65377-65414]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65338-65344]:Modifier[65422-65428]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65345-65352]:PrimitiveType[65429-65436]"
    }, {
      "left" : "isLabelName",
      "right" : "isLabelName",
      "info" : "SimpleName[65353-65364]:SimpleName[65437-65448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65367-65419]:Block[65451-65503]"
    }, {
      "left" : "return this.getType() == Token.LABEL_NAME;",
      "right" : "return this.getType() == Token.LABEL_NAME;",
      "info" : "ReturnStatement[65373-65415]:ReturnStatement[65457-65499]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65423-65429]:Modifier[65507-65513]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65430-65437]:PrimitiveType[65514-65521]"
    }, {
      "left" : "isName",
      "right" : "isName",
      "info" : "SimpleName[65438-65444]:SimpleName[65522-65528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65447-65493]:Block[65531-65577]"
    }, {
      "left" : "return this.getType() == Token.NAME;",
      "right" : "return this.getType() == Token.NAME;",
      "info" : "ReturnStatement[65453-65489]:ReturnStatement[65537-65573]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65497-65503]:Modifier[65581-65587]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65504-65511]:PrimitiveType[65588-65595]"
    }, {
      "left" : "isNE",
      "right" : "isNE",
      "info" : "SimpleName[65512-65516]:SimpleName[65596-65600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65519-65563]:Block[65603-65647]"
    }, {
      "left" : "return this.getType() == Token.NE;",
      "right" : "return this.getType() == Token.NE;",
      "info" : "ReturnStatement[65525-65559]:ReturnStatement[65609-65643]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65567-65573]:Modifier[65651-65657]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65574-65581]:PrimitiveType[65658-65665]"
    }, {
      "left" : "isNew",
      "right" : "isNew",
      "info" : "SimpleName[65582-65587]:SimpleName[65666-65671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65590-65635]:Block[65674-65719]"
    }, {
      "left" : "return this.getType() == Token.NEW;",
      "right" : "return this.getType() == Token.NEW;",
      "info" : "ReturnStatement[65596-65631]:ReturnStatement[65680-65715]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65639-65645]:Modifier[65723-65729]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65646-65653]:PrimitiveType[65730-65737]"
    }, {
      "left" : "isNot",
      "right" : "isNot",
      "info" : "SimpleName[65654-65659]:SimpleName[65738-65743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65662-65707]:Block[65746-65791]"
    }, {
      "left" : "return this.getType() == Token.NOT;",
      "right" : "return this.getType() == Token.NOT;",
      "info" : "ReturnStatement[65668-65703]:ReturnStatement[65752-65787]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65711-65717]:Modifier[65795-65801]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65718-65725]:PrimitiveType[65802-65809]"
    }, {
      "left" : "isNull",
      "right" : "isNull",
      "info" : "SimpleName[65726-65732]:SimpleName[65810-65816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65735-65781]:Block[65819-65865]"
    }, {
      "left" : "return this.getType() == Token.NULL;",
      "right" : "return this.getType() == Token.NULL;",
      "info" : "ReturnStatement[65741-65777]:ReturnStatement[65825-65861]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65785-65791]:Modifier[65869-65875]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65792-65799]:PrimitiveType[65876-65883]"
    }, {
      "left" : "isNumber",
      "right" : "isNumber",
      "info" : "SimpleName[65800-65808]:SimpleName[65884-65892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65811-65859]:Block[65895-65943]"
    }, {
      "left" : "return this.getType() == Token.NUMBER;",
      "right" : "return this.getType() == Token.NUMBER;",
      "info" : "ReturnStatement[65817-65855]:ReturnStatement[65901-65939]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65863-65869]:Modifier[65947-65953]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65870-65877]:PrimitiveType[65954-65961]"
    }, {
      "left" : "isObjectLit",
      "right" : "isObjectLit",
      "info" : "SimpleName[65878-65889]:SimpleName[65962-65973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65892-65943]:Block[65976-66027]"
    }, {
      "left" : "return this.getType() == Token.OBJECTLIT;",
      "right" : "return this.getType() == Token.OBJECTLIT;",
      "info" : "ReturnStatement[65898-65939]:ReturnStatement[65982-66023]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65947-65953]:Modifier[66031-66037]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65954-65961]:PrimitiveType[66038-66045]"
    }, {
      "left" : "isOr",
      "right" : "isOr",
      "info" : "SimpleName[65962-65966]:SimpleName[66046-66050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65969-66013]:Block[66053-66097]"
    }, {
      "left" : "return this.getType() == Token.OR;",
      "right" : "return this.getType() == Token.OR;",
      "info" : "ReturnStatement[65975-66009]:ReturnStatement[66059-66093]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66017-66023]:Modifier[66101-66107]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66024-66031]:PrimitiveType[66108-66115]"
    }, {
      "left" : "isParamList",
      "right" : "isParamList",
      "info" : "SimpleName[66032-66043]:SimpleName[66116-66127]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66046-66098]:Block[66130-66182]"
    }, {
      "left" : "return this.getType() == Token.PARAM_LIST;",
      "right" : "return this.getType() == Token.PARAM_LIST;",
      "info" : "ReturnStatement[66052-66094]:ReturnStatement[66136-66178]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66102-66108]:Modifier[66186-66192]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66109-66116]:PrimitiveType[66193-66200]"
    }, {
      "left" : "isRegExp",
      "right" : "isRegExp",
      "info" : "SimpleName[66117-66125]:SimpleName[66201-66209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66128-66176]:Block[66212-66260]"
    }, {
      "left" : "return this.getType() == Token.REGEXP;",
      "right" : "return this.getType() == Token.REGEXP;",
      "info" : "ReturnStatement[66134-66172]:ReturnStatement[66218-66256]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66180-66186]:Modifier[66264-66270]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66187-66194]:PrimitiveType[66271-66278]"
    }, {
      "left" : "isReturn",
      "right" : "isReturn",
      "info" : "SimpleName[66195-66203]:SimpleName[66279-66287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66206-66254]:Block[66290-66338]"
    }, {
      "left" : "return this.getType() == Token.RETURN;",
      "right" : "return this.getType() == Token.RETURN;",
      "info" : "ReturnStatement[66212-66250]:ReturnStatement[66296-66334]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66258-66264]:Modifier[66342-66348]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66265-66272]:PrimitiveType[66349-66356]"
    }, {
      "left" : "isScript",
      "right" : "isScript",
      "info" : "SimpleName[66273-66281]:SimpleName[66357-66365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66284-66332]:Block[66368-66416]"
    }, {
      "left" : "return this.getType() == Token.SCRIPT;",
      "right" : "return this.getType() == Token.SCRIPT;",
      "info" : "ReturnStatement[66290-66328]:ReturnStatement[66374-66412]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66336-66342]:Modifier[66420-66426]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66343-66350]:PrimitiveType[66427-66434]"
    }, {
      "left" : "isSetterDef",
      "right" : "isSetterDef",
      "info" : "SimpleName[66351-66362]:SimpleName[66435-66446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66365-66417]:Block[66449-66501]"
    }, {
      "left" : "return this.getType() == Token.SETTER_DEF;",
      "right" : "return this.getType() == Token.SETTER_DEF;",
      "info" : "ReturnStatement[66371-66413]:ReturnStatement[66455-66497]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66421-66427]:Modifier[66505-66511]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66428-66435]:PrimitiveType[66512-66519]"
    }, {
      "left" : "isString",
      "right" : "isString",
      "info" : "SimpleName[66436-66444]:SimpleName[66520-66528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66447-66495]:Block[66531-66579]"
    }, {
      "left" : "return this.getType() == Token.STRING;",
      "right" : "return this.getType() == Token.STRING;",
      "info" : "ReturnStatement[66453-66491]:ReturnStatement[66537-66575]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66499-66505]:Modifier[66583-66589]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66506-66513]:PrimitiveType[66590-66597]"
    }, {
      "left" : "isStringKey",
      "right" : "isStringKey",
      "info" : "SimpleName[66514-66525]:SimpleName[66598-66609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66528-66580]:Block[66612-66664]"
    }, {
      "left" : "return this.getType() == Token.STRING_KEY;",
      "right" : "return this.getType() == Token.STRING_KEY;",
      "info" : "ReturnStatement[66534-66576]:ReturnStatement[66618-66660]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66584-66590]:Modifier[66668-66674]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66591-66598]:PrimitiveType[66675-66682]"
    }, {
      "left" : "isSwitch",
      "right" : "isSwitch",
      "info" : "SimpleName[66599-66607]:SimpleName[66683-66691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66610-66658]:Block[66694-66742]"
    }, {
      "left" : "return this.getType() == Token.SWITCH;",
      "right" : "return this.getType() == Token.SWITCH;",
      "info" : "ReturnStatement[66616-66654]:ReturnStatement[66700-66738]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66662-66668]:Modifier[66746-66752]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66669-66676]:PrimitiveType[66753-66760]"
    }, {
      "left" : "isThis",
      "right" : "isThis",
      "info" : "SimpleName[66677-66683]:SimpleName[66761-66767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66686-66732]:Block[66770-66816]"
    }, {
      "left" : "return this.getType() == Token.THIS;",
      "right" : "return this.getType() == Token.THIS;",
      "info" : "ReturnStatement[66692-66728]:ReturnStatement[66776-66812]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66736-66742]:Modifier[66820-66826]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66743-66750]:PrimitiveType[66827-66834]"
    }, {
      "left" : "isThrow",
      "right" : "isThrow",
      "info" : "SimpleName[66751-66758]:SimpleName[66835-66842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66761-66808]:Block[66845-66892]"
    }, {
      "left" : "return this.getType() == Token.THROW;",
      "right" : "return this.getType() == Token.THROW;",
      "info" : "ReturnStatement[66767-66804]:ReturnStatement[66851-66888]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66812-66818]:Modifier[66896-66902]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66819-66826]:PrimitiveType[66903-66910]"
    }, {
      "left" : "isTrue",
      "right" : "isTrue",
      "info" : "SimpleName[66827-66833]:SimpleName[66911-66917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66836-66882]:Block[66920-66966]"
    }, {
      "left" : "return this.getType() == Token.TRUE;",
      "right" : "return this.getType() == Token.TRUE;",
      "info" : "ReturnStatement[66842-66878]:ReturnStatement[66926-66962]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66886-66892]:Modifier[66970-66976]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66893-66900]:PrimitiveType[66977-66984]"
    }, {
      "left" : "isTry",
      "right" : "isTry",
      "info" : "SimpleName[66901-66906]:SimpleName[66985-66990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66909-66954]:Block[66993-67038]"
    }, {
      "left" : "return this.getType() == Token.TRY;",
      "right" : "return this.getType() == Token.TRY;",
      "info" : "ReturnStatement[66915-66950]:ReturnStatement[66999-67034]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66958-66964]:Modifier[67042-67048]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66965-66972]:PrimitiveType[67049-67056]"
    }, {
      "left" : "isTypeOf",
      "right" : "isTypeOf",
      "info" : "SimpleName[66973-66981]:SimpleName[67057-67065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66984-67032]:Block[67068-67116]"
    }, {
      "left" : "return this.getType() == Token.TYPEOF;",
      "right" : "return this.getType() == Token.TYPEOF;",
      "info" : "ReturnStatement[66990-67028]:ReturnStatement[67074-67112]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67036-67042]:Modifier[67120-67126]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[67043-67050]:PrimitiveType[67127-67134]"
    }, {
      "left" : "isVar",
      "right" : "isVar",
      "info" : "SimpleName[67051-67056]:SimpleName[67135-67140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67059-67104]:Block[67143-67188]"
    }, {
      "left" : "return this.getType() == Token.VAR;",
      "right" : "return this.getType() == Token.VAR;",
      "info" : "ReturnStatement[67065-67100]:ReturnStatement[67149-67184]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67108-67114]:Modifier[67192-67198]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[67115-67122]:PrimitiveType[67199-67206]"
    }, {
      "left" : "isVoid",
      "right" : "isVoid",
      "info" : "SimpleName[67123-67129]:SimpleName[67207-67213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67132-67178]:Block[67216-67262]"
    }, {
      "left" : "return this.getType() == Token.VOID;",
      "right" : "return this.getType() == Token.VOID;",
      "info" : "ReturnStatement[67138-67174]:ReturnStatement[67222-67258]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67182-67188]:Modifier[67266-67272]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[67189-67196]:PrimitiveType[67273-67280]"
    }, {
      "left" : "isWhile",
      "right" : "isWhile",
      "info" : "SimpleName[67197-67204]:SimpleName[67281-67288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67207-67254]:Block[67291-67338]"
    }, {
      "left" : "return this.getType() == Token.WHILE;",
      "right" : "return this.getType() == Token.WHILE;",
      "info" : "ReturnStatement[67213-67250]:ReturnStatement[67297-67334]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67258-67264]:Modifier[67342-67348]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[67265-67272]:PrimitiveType[67349-67356]"
    }, {
      "left" : "isWith",
      "right" : "isWith",
      "info" : "SimpleName[67273-67279]:SimpleName[67357-67363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67282-67328]:Block[67366-67412]"
    }, {
      "left" : "return this.getType() == Token.WITH;",
      "right" : "return this.getType() == Token.WITH;",
      "info" : "ReturnStatement[67288-67324]:ReturnStatement[67372-67408]"
    } ]
  },
  "interFileMappings" : { }
}