{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "enum : Format",
      "right" : "enum : Format",
      "info" : "EnumDeclaration[1453-2223]:EnumDeclaration[1453-2223]"
    }, {
      "left" : "SourceMap getInstance()",
      "right" : "SourceMap getInstance()",
      "info" : "MethodDeclaration[1498-1644]:MethodDeclaration[1498-1644]"
    }, {
      "left" : "SourceMap getInstance()",
      "right" : "SourceMap getInstance()",
      "info" : "MethodDeclaration[1675-1826]:MethodDeclaration[1675-1826]"
    }, {
      "left" : "SourceMap getInstance()",
      "right" : "SourceMap getInstance()",
      "info" : "MethodDeclaration[1852-1999]:MethodDeclaration[1852-1999]"
    }, {
      "left" : "SourceMap getInstance()",
      "right" : "SourceMap getInstance()",
      "info" : "MethodDeclaration[2025-2172]:MethodDeclaration[2025-2172]"
    }, {
      "left" : "abstract SourceMap getInstance();",
      "right" : "abstract SourceMap getInstance();",
      "info" : "MethodDeclaration[2186-2219]:MethodDeclaration[2186-2219]"
    }, {
      "left" : "enum : DetailLevel",
      "right" : "enum : DetailLevel",
      "info" : "EnumDeclaration[2227-3057]:EnumDeclaration[2227-3057]"
    }, {
      "left" : "public boolean apply(Node node)",
      "right" : "public boolean apply(Node node)",
      "info" : "MethodDeclaration[2500-2572]:MethodDeclaration[2500-2572]"
    }, {
      "left" : "public boolean apply(Node node)",
      "right" : "public boolean apply(Node node)",
      "info" : "MethodDeclaration[2707-3046]:MethodDeclaration[2707-3046]"
    }, {
      "left" : "LocationMapping",
      "right" : "LocationMapping",
      "info" : "TypeDeclaration[3061-3293]:TypeDeclaration[3061-3293]"
    }, {
      "left" : "final String prefix;",
      "right" : "final String prefix;",
      "info" : "FieldDeclaration[3103-3123]:FieldDeclaration[3103-3123]"
    }, {
      "left" : "final String replacement;",
      "right" : "final String replacement;",
      "info" : "FieldDeclaration[3128-3153]:FieldDeclaration[3128-3153]"
    }, {
      "left" : "public LocationMapping(String prefix, String replacement)",
      "right" : "public LocationMapping(String prefix, String replacement)",
      "info" : "MethodDeclaration[3158-3289]:MethodDeclaration[3158-3289]"
    }, {
      "left" : "private final SourceMapGenerator generator;",
      "right" : "private final SourceMapGenerator generator;",
      "info" : "FieldDeclaration[3297-3340]:FieldDeclaration[3297-3340]"
    }, {
      "left" : "private List<LocationMapping> prefixMappings = Collections.emptyList();",
      "right" : "private List<LocationMapping> prefixMappings = Collections.emptyList();",
      "info" : "FieldDeclaration[3343-3414]:FieldDeclaration[3343-3414]"
    }, {
      "left" : "private final Map<String, String> sourceLocationFixupCache =\n      Maps.newHashMap();",
      "right" : "private final Map<String, String> sourceLocationFixupCache =\n      Maps.newHashMap();",
      "info" : "FieldDeclaration[3417-3502]:FieldDeclaration[3417-3502]"
    }, {
      "left" : "private SourceMap(SourceMapGenerator generator)",
      "right" : "private SourceMap(SourceMapGenerator generator)",
      "info" : "MethodDeclaration[3506-3591]:MethodDeclaration[3506-3591]"
    }, {
      "left" : "private String fixupSourceLocation(String sourceFile)",
      "right" : "private String fixupSourceLocation(String sourceFile)",
      "info" : "MethodDeclaration[4512-5347]:MethodDeclaration[4695-5530]"
    }, {
      "left" : "public void appendTo(Appendable out, String name) throws IOException",
      "right" : "public void appendTo(Appendable out, String name) throws IOException",
      "info" : "MethodDeclaration[5351-5460]:MethodDeclaration[5534-5643]"
    }, {
      "left" : "public void reset()",
      "right" : "public void reset()",
      "info" : "MethodDeclaration[5464-5550]:MethodDeclaration[5647-5733]"
    }, {
      "left" : "public void setStartingPosition(int offsetLine, int offsetIndex)",
      "right" : "public void setStartingPosition(int offsetLine, int offsetIndex)",
      "info" : "MethodDeclaration[5554-5684]:MethodDeclaration[5737-5867]"
    }, {
      "left" : "public void setWrapperPrefix(String prefix)",
      "right" : "public void setWrapperPrefix(String prefix)",
      "info" : "MethodDeclaration[5688-5777]:MethodDeclaration[5871-5960]"
    }, {
      "left" : "public void validate(boolean validate)",
      "right" : "public void validate(boolean validate)",
      "info" : "MethodDeclaration[5781-5859]:MethodDeclaration[5964-6042]"
    }, {
      "left" : "public void setPrefixMappings(List<LocationMapping> sourceMapLocationMappings)",
      "right" : "public void setPrefixMappings(List<LocationMapping> sourceMapLocationMappings)",
      "info" : "MethodDeclaration[5863-6051]:MethodDeclaration[6046-6234]"
    } ],
    "mappings" : [
 {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1498-1507]:MarkerAnnotation[1498-1507]"
    }, {
      "left" : "SourceMap",
      "right" : "SourceMap",
      "info" : "SimpleType[1508-1517]:SimpleType[1508-1517]"
    }, {
      "left" : "getInstance",
      "right" : "getInstance",
      "info" : "SimpleName[1518-1529]:SimpleName[1518-1529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1532-1644]:Block[1532-1644]"
    }, {
      "left" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V1));",
      "right" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V1));",
      "info" : "ReturnStatement[1543-1635]:ReturnStatement[1543-1635]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1675-1684]:MarkerAnnotation[1675-1684]"
    }, {
      "left" : "SourceMap",
      "right" : "SourceMap",
      "info" : "SimpleType[1685-1694]:SimpleType[1685-1694]"
    }, {
      "left" : "getInstance",
      "right" : "getInstance",
      "info" : "SimpleName[1695-1706]:SimpleName[1695-1706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1709-1826]:Block[1709-1826]"
    }, {
      "left" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.DEFAULT));",
      "right" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.DEFAULT));",
      "info" : "ReturnStatement[1720-1817]:ReturnStatement[1720-1817]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1852-1861]:MarkerAnnotation[1852-1861]"
    }, {
      "left" : "SourceMap",
      "right" : "SourceMap",
      "info" : "SimpleType[1862-1871]:SimpleType[1862-1871]"
    }, {
      "left" : "getInstance",
      "right" : "getInstance",
      "info" : "SimpleName[1872-1883]:SimpleName[1872-1883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1886-1999]:Block[1886-1999]"
    }, {
      "left" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V2));",
      "right" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V2));",
      "info" : "ReturnStatement[1897-1989]:ReturnStatement[1897-1989]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2025-2034]:MarkerAnnotation[2025-2034]"
    }, {
      "left" : "SourceMap",
      "right" : "SourceMap",
      "info" : "SimpleType[2035-2044]:SimpleType[2035-2044]"
    }, {
      "left" : "getInstance",
      "right" : "getInstance",
      "info" : "SimpleName[2045-2056]:SimpleName[2045-2056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2059-2172]:Block[2059-2172]"
    }, {
      "left" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V3));",
      "right" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V3));",
      "info" : "ReturnStatement[2070-2162]:ReturnStatement[2070-2162]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2186-2194]:Modifier[2186-2194]"
    }, {
      "left" : "SourceMap",
      "right" : "SourceMap",
      "info" : "SimpleType[2195-2204]:SimpleType[2195-2204]"
    }, {
      "left" : "getInstance",
      "right" : "getInstance",
      "info" : "SimpleName[2205-2216]:SimpleName[2205-2216]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2500-2509]:MarkerAnnotation[2500-2509]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2510-2516]:Modifier[2510-2516]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2517-2524]:PrimitiveType[2517-2524]"
    }, {
      "left" : "apply",
      "right" : "apply",
      "info" : "SimpleName[2525-2530]:SimpleName[2525-2530]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[2531-2540]:SingleVariableDeclaration[2531-2540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2542-2572]:Block[2542-2572]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[2552-2564]:ReturnStatement[2552-2564]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2707-2716]:MarkerAnnotation[2707-2716]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2717-2723]:Modifier[2717-2723]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2724-2731]:PrimitiveType[2724-2731]"
    }, {
      "left" : "apply",
      "right" : "apply",
      "info" : "SimpleName[2732-2737]:SimpleName[2732-2737]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[2738-2747]:SingleVariableDeclaration[2738-2747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2749-3046]:Block[2749-3046]"
    }, {
      "left" : "return node.isCall()\n            || node.isNew()\n            || node.isFunction()\n            || node.isName()\n            || NodeUtil.isGet(node)\n            || NodeUtil.isObjectLitKey(node, node.getParent())\n            || (node.isString() && NodeUtil.isGet(node.getParent()));",
      "right" : "return node.isCall()\n            || node.isNew()\n            || node.isFunction()\n            || node.isName()\n            || NodeUtil.isGet(node)\n            || NodeUtil.isObjectLitKey(node, node.getParent())\n            || (node.isString() && NodeUtil.isGet(node.getParent()));",
      "info" : "ReturnStatement[2759-3038]:ReturnStatement[2759-3038]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3061-3067]:Modifier[3061-3067]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3068-3074]:Modifier[3068-3074]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[3075-3080]:TYPE_DECLARATION_KIND[3075-3080]"
    }, {
      "left" : "LocationMapping",
      "right" : "LocationMapping",
      "info" : "SimpleName[3081-3096]:SimpleName[3081-3096]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3158-3164]:Modifier[3158-3164]"
    }, {
      "left" : "LocationMapping",
      "right" : "LocationMapping",
      "info" : "SimpleName[3165-3180]:SimpleName[3165-3180]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[3181-3194]:SingleVariableDeclaration[3181-3194]"
    }, {
      "left" : "String replacement",
      "right" : "String replacement",
      "info" : "SingleVariableDeclaration[3196-3214]:SingleVariableDeclaration[3196-3214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3216-3289]:Block[3216-3289]"
    }, {
      "left" : "this.prefix = prefix;",
      "right" : "this.prefix = prefix;",
      "info" : "ExpressionStatement[3224-3245]:ExpressionStatement[3224-3245]"
    }, {
      "left" : "this.replacement = replacement;",
      "right" : "this.replacement = replacement;",
      "info" : "ExpressionStatement[3252-3283]:ExpressionStatement[3252-3283]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3506-3513]:Modifier[3506-3513]"
    }, {
      "left" : "SourceMap",
      "right" : "SourceMap",
      "info" : "SimpleName[3514-3523]:SimpleName[3514-3523]"
    }, {
      "left" : "SourceMapGenerator generator",
      "right" : "SourceMapGenerator generator",
      "info" : "SingleVariableDeclaration[3524-3552]:SingleVariableDeclaration[3524-3552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3554-3591]:Block[3554-3591]"
    }, {
      "left" : "this.generator = generator;",
      "right" : "this.generator = generator;",
      "info" : "ExpressionStatement[3560-3587]:ExpressionStatement[3560-3587]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4619-4626]:Modifier[4802-4809]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4627-4633]:SimpleType[4810-4816]"
    }, {
      "left" : "fixupSourceLocation",
      "right" : "fixupSourceLocation",
      "info" : "SimpleName[4634-4653]:SimpleName[4817-4836]"
    }, {
      "left" : "String sourceFile",
      "right" : "String sourceFile",
      "info" : "SingleVariableDeclaration[4654-4671]:SingleVariableDeclaration[4837-4854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4673-5347]:Block[4856-5530]"
    }, {
      "left" : "if (prefixMappings.isEmpty())",
      "right" : "if (prefixMappings.isEmpty())",
      "info" : "IfStatement[4679-4741]:IfStatement[4862-4924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4709-4741]:Block[4892-4924]"
    }, {
      "left" : "return sourceFile;",
      "right" : "return sourceFile;",
      "info" : "ReturnStatement[4717-4735]:ReturnStatement[4900-4918]"
    }, {
      "left" : "String fixed = sourceLocationFixupCache.get(sourceFile);",
      "right" : "String fixed = sourceLocationFixupCache.get(sourceFile);",
      "info" : "VariableDeclarationStatement[4747-4803]:VariableDeclarationStatement[4930-4986]"
    }, {
      "left" : "if (fixed != null)",
      "right" : "if (fixed != null)",
      "info" : "IfStatement[4808-4854]:IfStatement[4991-5037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4827-4854]:Block[5010-5037]"
    }, {
      "left" : "return fixed;",
      "right" : "return fixed;",
      "info" : "ReturnStatement[4835-4848]:ReturnStatement[5018-5031]"
    }, {
      "left" : "for (LocationMapping mapping : prefixMappings)",
      "right" : "for (LocationMapping mapping : prefixMappings)",
      "info" : "EnhancedForStatement[4919-5143]:EnhancedForStatement[5102-5326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4966-5143]:Block[5149-5326]"
    }, {
      "left" : "if (sourceFile.startsWith(mapping.prefix))",
      "right" : "if (sourceFile.startsWith(mapping.prefix))",
      "info" : "IfStatement[4974-5137]:IfStatement[5157-5320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5017-5137]:Block[5200-5320]"
    }, {
      "left" : "fixed = mapping.replacement + sourceFile.substring(\n          mapping.prefix.length());",
      "right" : "fixed = mapping.replacement + sourceFile.substring(\n          mapping.prefix.length());",
      "info" : "ExpressionStatement[5027-5114]:ExpressionStatement[5210-5297]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[5123-5129]:BreakStatement[5306-5312]"
    }, {
      "left" : "if (fixed == null)",
      "right" : "if (fixed == null)",
      "info" : "IfStatement[5219-5271]:IfStatement[5402-5454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5238-5271]:Block[5421-5454]"
    }, {
      "left" : "fixed = sourceFile;",
      "right" : "fixed = sourceFile;",
      "info" : "ExpressionStatement[5246-5265]:ExpressionStatement[5429-5448]"
    }, {
      "left" : "sourceLocationFixupCache.put(sourceFile, fixed);",
      "right" : "sourceLocationFixupCache.put(sourceFile, fixed);",
      "info" : "ExpressionStatement[5277-5325]:ExpressionStatement[5460-5508]"
    }, {
      "left" : "return fixed;",
      "right" : "return fixed;",
      "info" : "ReturnStatement[5330-5343]:ReturnStatement[5513-5526]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5351-5357]:Modifier[5534-5540]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5358-5362]:PrimitiveType[5541-5545]"
    }, {
      "left" : "appendTo",
      "right" : "appendTo",
      "info" : "SimpleName[5363-5371]:SimpleName[5546-5554]"
    }, {
      "left" : "Appendable out",
      "right" : "Appendable out",
      "info" : "SingleVariableDeclaration[5372-5386]:SingleVariableDeclaration[5555-5569]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[5388-5399]:SingleVariableDeclaration[5571-5582]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[5408-5419]:SimpleType[5591-5602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5420-5460]:Block[5603-5643]"
    }, {
      "left" : "generator.appendTo(out, name);",
      "right" : "generator.appendTo(out, name);",
      "info" : "ExpressionStatement[5426-5456]:ExpressionStatement[5609-5639]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5464-5470]:Modifier[5647-5653]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5471-5475]:PrimitiveType[5654-5658]"
    }, {
      "left" : "reset",
      "right" : "reset",
      "info" : "SimpleName[5476-5481]:SimpleName[5659-5664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5484-5550]:Block[5667-5733]"
    }, {
      "left" : "generator.reset();",
      "right" : "generator.reset();",
      "info" : "ExpressionStatement[5490-5508]:ExpressionStatement[5673-5691]"
    }, {
      "left" : "sourceLocationFixupCache.clear();",
      "right" : "sourceLocationFixupCache.clear();",
      "info" : "ExpressionStatement[5513-5546]:ExpressionStatement[5696-5729]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5554-5560]:Modifier[5737-5743]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5561-5565]:PrimitiveType[5744-5748]"
    }, {
      "left" : "setStartingPosition",
      "right" : "setStartingPosition",
      "info" : "SimpleName[5566-5585]:SimpleName[5749-5768]"
    }, {
      "left" : "int offsetLine",
      "right" : "int offsetLine",
      "info" : "SingleVariableDeclaration[5586-5600]:SingleVariableDeclaration[5769-5783]"
    }, {
      "left" : "int offsetIndex",
      "right" : "int offsetIndex",
      "info" : "SingleVariableDeclaration[5602-5617]:SingleVariableDeclaration[5785-5800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5619-5684]:Block[5802-5867]"
    }, {
      "left" : "generator.setStartingPosition(offsetLine, offsetIndex);",
      "right" : "generator.setStartingPosition(offsetLine, offsetIndex);",
      "info" : "ExpressionStatement[5625-5680]:ExpressionStatement[5808-5863]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5688-5694]:Modifier[5871-5877]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5695-5699]:PrimitiveType[5878-5882]"
    }, {
      "left" : "setWrapperPrefix",
      "right" : "setWrapperPrefix",
      "info" : "SimpleName[5700-5716]:SimpleName[5883-5899]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[5717-5730]:SingleVariableDeclaration[5900-5913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5732-5777]:Block[5915-5960]"
    }, {
      "left" : "generator.setWrapperPrefix(prefix);",
      "right" : "generator.setWrapperPrefix(prefix);",
      "info" : "ExpressionStatement[5738-5773]:ExpressionStatement[5921-5956]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5781-5787]:Modifier[5964-5970]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5788-5792]:PrimitiveType[5971-5975]"
    }, {
      "left" : "validate",
      "right" : "validate",
      "info" : "SimpleName[5793-5801]:SimpleName[5976-5984]"
    }, {
      "left" : "boolean validate",
      "right" : "boolean validate",
      "info" : "SingleVariableDeclaration[5802-5818]:SingleVariableDeclaration[5985-6001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5820-5859]:Block[6003-6042]"
    }, {
      "left" : "generator.validate(validate);",
      "right" : "generator.validate(validate);",
      "info" : "ExpressionStatement[5826-5855]:ExpressionStatement[6009-6038]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5913-5919]:Modifier[6096-6102]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5920-5924]:PrimitiveType[6103-6107]"
    }, {
      "left" : "setPrefixMappings",
      "right" : "setPrefixMappings",
      "info" : "SimpleName[5925-5942]:SimpleName[6108-6125]"
    }, {
      "left" : "List<LocationMapping> sourceMapLocationMappings",
      "right" : "List<LocationMapping> sourceMapLocationMappings",
      "info" : "SingleVariableDeclaration[5943-5990]:SingleVariableDeclaration[6126-6173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5992-6051]:Block[6175-6234]"
    }, {
      "left" : "this.prefixMappings = sourceMapLocationMappings;",
      "right" : "this.prefixMappings = sourceMapLocationMappings;",
      "info" : "ExpressionStatement[5999-6047]:ExpressionStatement[6182-6230]"
    } ]
  },
  "interFileMappings" : { }
}