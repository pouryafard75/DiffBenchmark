{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "MultiDirectional",
      "right" : "MultiDirectional",
      "info" : "TypeDeclaration[1148-4984]:TypeDeclaration[1148-5355]"
    }, {
      "left" : "private final double khi;",
      "right" : "private final double khi;",
      "info" : "FieldDeclaration[1359-1418]:FieldDeclaration[1359-1418]"
    }, {
      "left" : "private final double gamma;",
      "right" : "private final double gamma;",
      "info" : "FieldDeclaration[1424-1487]:FieldDeclaration[1424-1487]"
    }, {
      "left" : "public MultiDirectional()",
      "right" : "public MultiDirectional()",
      "info" : "MethodDeclaration[1493-1725]:MethodDeclaration[1493-1725]"
    }, {
      "left" : "public MultiDirectional(final double khi, final double gamma)",
      "right" : "public MultiDirectional(final double khi, final double gamma)",
      "info" : "MethodDeclaration[1731-2019]:MethodDeclaration[1731-2019]"
    }, {
      "left" : "protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)\n        throws FunctionEvaluationException, OptimizationException, IllegalArgumentException",
      "right" : "protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)\n        throws FunctionEvaluationException, OptimizationException, IllegalArgumentException",
      "info" : "MethodDeclaration[2025-3447]:MethodDeclaration[2025-3818]"
    }, {
      "left" : "private RealPointValuePair evaluateNewSimplex(final RealPointValuePair[] original,\n                                              final double coeff,\n                                              final Comparator<RealPointValuePair> comparator)\n        throws FunctionEvaluationException, OptimizationException",
      "right" : "private RealPointValuePair evaluateNewSimplex(final RealPointValuePair[] original,\n                                              final double coeff,\n                                              final Comparator<RealPointValuePair> comparator)\n        throws FunctionEvaluationException, OptimizationException",
      "info" : "MethodDeclaration[3453-4981]:MethodDeclaration[3824-5352]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1666-1725]:Block[1666-1725]"
    }, {
      "left" : "this.khi   = 2.0;",
      "right" : "this.khi   = 2.0;",
      "info" : "ExpressionStatement[1676-1693]:ExpressionStatement[1676-1693]"
    }, {
      "left" : "this.gamma = 0.5;",
      "right" : "this.gamma = 0.5;",
      "info" : "ExpressionStatement[1702-1719]:ExpressionStatement[1702-1719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1958-2019]:Block[1958-2019]"
    }, {
      "left" : "this.khi   = khi;",
      "right" : "this.khi   = khi;",
      "info" : "ExpressionStatement[1968-1985]:ExpressionStatement[1968-1985]"
    }, {
      "left" : "this.gamma = gamma;",
      "right" : "this.gamma = gamma;",
      "info" : "ExpressionStatement[1994-2013]:ExpressionStatement[1994-2013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2235-3447]:Block[2235-3818]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[2246-3440]:WhileStatement[2318-3811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2259-3440]:Block[2331-3811]"
    }, {
      "left" : "incrementIterationsCounter();",
      "right" : "incrementIterationsCounter();",
      "info" : "ExpressionStatement[2274-2303]:ExpressionStatement[2346-2375]"
    }, {
      "left" : "final RealPointValuePair[] original = simplex;",
      "right" : "final RealPointValuePair[] original = simplex;",
      "info" : "VariableDeclarationStatement[2357-2403]:VariableDeclarationStatement[2429-2475]"
    }, {
      "left" : "final RealPointValuePair best = original[0];",
      "right" : "final RealPointValuePair best = original[0];",
      "info" : "VariableDeclarationStatement[2416-2460]:VariableDeclarationStatement[2488-2532]"
    }, {
      "left" : "final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);",
      "right" : "final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);",
      "info" : "VariableDeclarationStatement[2515-2598]:VariableDeclarationStatement[2587-2670]"
    }, {
      "left" : "if (comparator.compare(reflected, best) < 0)",
      "right" : "if (comparator.compare(reflected, best) < 0)",
      "info" : "IfStatement[2611-3102]:IfStatement[2683-3174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2656-3102]:Block[2728-3174]"
    }, {
      "left" : "final RealPointValuePair[] reflectedSimplex = simplex;",
      "right" : "final RealPointValuePair[] reflectedSimplex = simplex;",
      "info" : "VariableDeclarationStatement[2723-2777]:VariableDeclarationStatement[2795-2849]"
    }, {
      "left" : "final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);",
      "right" : "final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);",
      "info" : "VariableDeclarationStatement[2794-2876]:VariableDeclarationStatement[2866-2948]"
    }, {
      "left" : "if (comparator.compare(reflected, expanded) <= 0)",
      "right" : "if (comparator.compare(reflected, expanded) <= 0)",
      "info" : "IfStatement[2893-3062]:IfStatement[2965-3134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2943-3062]:Block[3015-3134]"
    }, {
      "left" : "simplex = reflectedSimplex;",
      "right" : "simplex = reflectedSimplex;",
      "info" : "ExpressionStatement[3017-3044]:ExpressionStatement[3089-3116]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[3080-3087]:ReturnStatement[3152-3159]"
    }, {
      "left" : "final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);",
      "right" : "final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);",
      "info" : "VariableDeclarationStatement[3162-3248]:VariableDeclarationStatement[3234-3320]"
    }, {
      "left" : "if (comparator.compare(contracted, best) < 0)",
      "right" : "if (comparator.compare(contracted, best) < 0)",
      "info" : "IfStatement[3261-3429]:IfStatement[3333-3467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3307-3429]:Block[3379-3467]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[3408-3415]:ReturnStatement[3446-3453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4246-4981]:Block[4617-5352]"
    }, {
      "left" : "final double[] xSmallest = original[0].getPointRef();",
      "right" : "final double[] xSmallest = original[0].getPointRef();",
      "info" : "VariableDeclarationStatement[4257-4310]:VariableDeclarationStatement[4628-4681]"
    }, {
      "left" : "final int n = xSmallest.length;",
      "right" : "final int n = xSmallest.length;",
      "info" : "VariableDeclarationStatement[4319-4350]:VariableDeclarationStatement[4690-4721]"
    }, {
      "left" : "simplex = new RealPointValuePair[n + 1];",
      "right" : "simplex = new RealPointValuePair[n + 1];",
      "info" : "ExpressionStatement[4411-4451]:ExpressionStatement[4782-4822]"
    }, {
      "left" : "simplex[0] = original[0];",
      "right" : "simplex[0] = original[0];",
      "info" : "ExpressionStatement[4460-4485]:ExpressionStatement[4831-4856]"
    }, {
      "left" : "for (int i = 1; i <= n; ++i)",
      "right" : "for (int i = 1; i <= n; ++i)",
      "info" : "ForStatement[4494-4886]:ForStatement[4865-5257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4523-4886]:Block[4894-5257]"
    }, {
      "left" : "final double[] xOriginal    = original[i].getPointRef();",
      "right" : "final double[] xOriginal    = original[i].getPointRef();",
      "info" : "VariableDeclarationStatement[4537-4593]:VariableDeclarationStatement[4908-4964]"
    }, {
      "left" : "final double[] xTransformed = new double[n];",
      "right" : "final double[] xTransformed = new double[n];",
      "info" : "VariableDeclarationStatement[4606-4650]:VariableDeclarationStatement[4977-5021]"
    }, {
      "left" : "for (int j = 0; j < n; ++j)",
      "right" : "for (int j = 0; j < n; ++j)",
      "info" : "ForStatement[4663-4794]:ForStatement[5034-5165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4691-4794]:Block[5062-5165]"
    }, {
      "left" : "xTransformed[j] = xSmallest[j] + coeff * (xSmallest[j] - xOriginal[j]);",
      "right" : "xTransformed[j] = xSmallest[j] + coeff * (xSmallest[j] - xOriginal[j]);",
      "info" : "ExpressionStatement[4709-4780]:ExpressionStatement[5080-5151]"
    }, {
      "left" : "simplex[i] = new RealPointValuePair(xTransformed, Double.NaN, false);",
      "right" : "simplex[i] = new RealPointValuePair(xTransformed, Double.NaN, false);",
      "info" : "ExpressionStatement[4807-4876]:ExpressionStatement[5178-5247]"
    }, {
      "left" : "evaluateSimplex(comparator);",
      "right" : "evaluateSimplex(comparator);",
      "info" : "ExpressionStatement[4919-4947]:ExpressionStatement[5290-5318]"
    }, {
      "left" : "return simplex[0];",
      "right" : "return simplex[0];",
      "info" : "ReturnStatement[4956-4974]:ReturnStatement[5327-5345]"
    } ]
  },
  "interFileMappings" : { }
}