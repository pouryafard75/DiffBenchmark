{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "static final DiagnosticType GLOBAL_THIS = DiagnosticType.warning(\n      \"JSC_USED_GLOBAL_THIS\",\n      \"dangerous use of the global 'this' object\");",
      "right" : "static final DiagnosticType GLOBAL_THIS = DiagnosticType.warning(\n      \"JSC_USED_GLOBAL_THIS\",\n      \"dangerous use of the global 'this' object\");",
      "info" : "FieldDeclaration[1875-2022]:FieldDeclaration[1875-2022]"
    }, {
      "left" : "private final AbstractCompiler compiler;",
      "right" : "private final AbstractCompiler compiler;",
      "info" : "FieldDeclaration[2026-2066]:FieldDeclaration[2026-2066]"
    }, {
      "left" : "private final CheckLevel level;",
      "right" : "private final CheckLevel level;",
      "info" : "FieldDeclaration[2069-2100]:FieldDeclaration[2069-2100]"
    }, {
      "left" : "private Node assignLhsChild = null;",
      "right" : "private Node assignLhsChild = null;",
      "info" : "FieldDeclaration[2104-2330]:FieldDeclaration[2104-2330]"
    }, {
      "left" : "CheckGlobalThis(AbstractCompiler compiler, CheckLevel level)",
      "right" : "CheckGlobalThis(AbstractCompiler compiler, CheckLevel level)",
      "info" : "MethodDeclaration[2334-2454]:MethodDeclaration[2334-2454]"
    }, {
      "left" : "public void visit(NodeTraversal t, Node n, Node parent)",
      "right" : "public void visit(NodeTraversal t, Node n, Node parent)",
      "info" : "MethodDeclaration[4764-5024]:MethodDeclaration[5100-5360]"
    }, {
      "left" : "private boolean shouldReportThis(Node n, Node parent)",
      "right" : "private boolean shouldReportThis(Node n, Node parent)",
      "info" : "MethodDeclaration[5028-5311]:MethodDeclaration[5364-5647]"
    }, {
      "left" : "private JSDocInfo getFunctionJsDocInfo(Node n)",
      "right" : "private JSDocInfo getFunctionJsDocInfo(Node n)",
      "info" : "MethodDeclaration[5315-6134]:MethodDeclaration[5651-6470]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2395-2454]:Block[2395-2454]"
    }, {
      "left" : "this.compiler = compiler;",
      "right" : "this.compiler = compiler;",
      "info" : "ExpressionStatement[2401-2426]:ExpressionStatement[2401-2426]"
    }, {
      "left" : "this.level = level;",
      "right" : "this.level = level;",
      "info" : "ExpressionStatement[2431-2450]:ExpressionStatement[2431-2450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4820-5024]:Block[5156-5360]"
    }, {
      "left" : "if (n.getType() == Token.THIS && shouldReportThis(n, parent))",
      "right" : "if (n.getType() == Token.THIS && shouldReportThis(n, parent))",
      "info" : "IfStatement[4826-4954]:IfStatement[5162-5290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4888-4954]:Block[5224-5290]"
    }, {
      "left" : "compiler.report(t.makeError(n, level, GLOBAL_THIS));",
      "right" : "compiler.report(t.makeError(n, level, GLOBAL_THIS));",
      "info" : "ExpressionStatement[4896-4948]:ExpressionStatement[5232-5284]"
    }, {
      "left" : "if (n == assignLhsChild)",
      "right" : "if (n == assignLhsChild)",
      "info" : "IfStatement[4959-5020]:IfStatement[5295-5356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4984-5020]:Block[5320-5356]"
    }, {
      "left" : "assignLhsChild = null;",
      "right" : "assignLhsChild = null;",
      "info" : "ExpressionStatement[4992-5014]:ExpressionStatement[5328-5350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5082-5311]:Block[5418-5647]"
    }, {
      "left" : "if (assignLhsChild != null)",
      "right" : "if (assignLhsChild != null)",
      "info" : "IfStatement[5088-5203]:IfStatement[5424-5539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5116-5203]:Block[5452-5539]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5185-5197]:ReturnStatement[5521-5533]"
    }, {
      "left" : "return parent != null && NodeUtil.isGet(parent);",
      "right" : "return parent != null && NodeUtil.isGet(parent);",
      "info" : "ReturnStatement[5259-5307]:ReturnStatement[5595-5643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5638-6134]:Block[5974-6470]"
    }, {
      "left" : "JSDocInfo jsDoc = n.getJSDocInfo();",
      "right" : "JSDocInfo jsDoc = n.getJSDocInfo();",
      "info" : "VariableDeclarationStatement[5644-5679]:VariableDeclarationStatement[5980-6015]"
    }, {
      "left" : "Node parent = n.getParent();",
      "right" : "Node parent = n.getParent();",
      "info" : "VariableDeclarationStatement[5684-5712]:VariableDeclarationStatement[6020-6048]"
    }, {
      "left" : "if (jsDoc == null)",
      "right" : "if (jsDoc == null)",
      "info" : "IfStatement[5717-6112]:IfStatement[6053-6448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5736-6112]:Block[6072-6448]"
    }, {
      "left" : "int parentType = parent.getType();",
      "right" : "int parentType = parent.getType();",
      "info" : "VariableDeclarationStatement[5744-5778]:VariableDeclarationStatement[6080-6114]"
    }, {
      "left" : "if (parentType == Token.NAME || parentType == Token.ASSIGN)",
      "right" : "if (parentType == Token.NAME || parentType == Token.ASSIGN)",
      "info" : "IfStatement[5785-6106]:IfStatement[6121-6442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5845-6106]:Block[6181-6442]"
    }, {
      "left" : "jsDoc = parent.getJSDocInfo();",
      "right" : "jsDoc = parent.getJSDocInfo();",
      "info" : "ExpressionStatement[5855-5885]:ExpressionStatement[6191-6221]"
    }, {
      "left" : "if (jsDoc == null && parentType == Token.NAME)",
      "right" : "if (jsDoc == null && parentType == Token.NAME)",
      "info" : "IfStatement[5894-6098]:IfStatement[6230-6434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5941-6098]:Block[6277-6434]"
    }, {
      "left" : "Node gramps = parent.getParent();",
      "right" : "Node gramps = parent.getParent();",
      "info" : "VariableDeclarationStatement[5953-5986]:VariableDeclarationStatement[6289-6322]"
    }, {
      "left" : "if (gramps.getType() == Token.VAR)",
      "right" : "if (gramps.getType() == Token.VAR)",
      "info" : "IfStatement[5997-6088]:IfStatement[6333-6424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6032-6088]:Block[6368-6424]"
    }, {
      "left" : "jsDoc = gramps.getJSDocInfo();",
      "right" : "jsDoc = gramps.getJSDocInfo();",
      "info" : "ExpressionStatement[6046-6076]:ExpressionStatement[6382-6412]"
    }, {
      "left" : "return jsDoc;",
      "right" : "return jsDoc;",
      "info" : "ReturnStatement[6117-6130]:ReturnStatement[6453-6466]"
    } ]
  },
  "interFileMappings" : { }
}