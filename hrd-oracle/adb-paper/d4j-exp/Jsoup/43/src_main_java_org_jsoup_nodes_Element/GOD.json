{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Element",
      "right" : "Element",
      "info" : "TypeDeclaration[285-43121]:TypeDeclaration[285-43116]"
    }, {
      "left" : "private Tag tag;",
      "right" : "private Tag tag;",
      "info" : "FieldDeclaration[597-613]:FieldDeclaration[597-613]"
    }, {
      "left" : "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
      "right" : "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
      "info" : "FieldDeclaration[619-685]:FieldDeclaration[619-685]"
    }, {
      "left" : "public Element(Tag tag, String baseUri, Attributes attributes)",
      "right" : "public Element(Tag tag, String baseUri, Attributes attributes)",
      "info" : "MethodDeclaration[691-1152]:MethodDeclaration[691-1152]"
    }, {
      "left" : "public Element(Tag tag, String baseUri)",
      "right" : "public Element(Tag tag, String baseUri)",
      "info" : "MethodDeclaration[1162-1537]:MethodDeclaration[1162-1537]"
    }, {
      "left" : "public String nodeName()",
      "right" : "public String nodeName()",
      "info" : "MethodDeclaration[1543-1619]:MethodDeclaration[1543-1619]"
    }, {
      "left" : "public String tagName()",
      "right" : "public String tagName()",
      "info" : "MethodDeclaration[1625-1804]:MethodDeclaration[1625-1804]"
    }, {
      "left" : "public Element tagName(String tagName)",
      "right" : "public Element tagName(String tagName)",
      "info" : "MethodDeclaration[1810-2233]:MethodDeclaration[1810-2233]"
    }, {
      "left" : "public Tag tag()",
      "right" : "public Tag tag()",
      "info" : "MethodDeclaration[2239-2374]:MethodDeclaration[2239-2374]"
    }, {
      "left" : "public boolean isBlock()",
      "right" : "public boolean isBlock()",
      "info" : "MethodDeclaration[2384-2664]:MethodDeclaration[2384-2664]"
    }, {
      "left" : "public String id()",
      "right" : "public String id()",
      "info" : "MethodDeclaration[2670-2882]:MethodDeclaration[2670-2882]"
    }, {
      "left" : "public Element attr(String attributeKey, String attributeValue)",
      "right" : "public Element attr(String attributeKey, String attributeValue)",
      "info" : "MethodDeclaration[2888-3250]:MethodDeclaration[2888-3250]"
    }, {
      "left" : "public Map<String, String> dataset()",
      "right" : "public Map<String, String> dataset()",
      "info" : "MethodDeclaration[3256-4026]:MethodDeclaration[3256-4026]"
    }, {
      "left" : "public final Element parent()",
      "right" : "public final Element parent()",
      "info" : "MethodDeclaration[4032-4120]:MethodDeclaration[4032-4120]"
    }, {
      "left" : "public Elements parents()",
      "right" : "public Elements parents()",
      "info" : "MethodDeclaration[4126-4420]:MethodDeclaration[4126-4420]"
    }, {
      "left" : "private static void accumulateParents(Element el, Elements parents)",
      "right" : "private static void accumulateParents(Element el, Elements parents)",
      "info" : "MethodDeclaration[4426-4697]:MethodDeclaration[4426-4697]"
    }, {
      "left" : "public Element child(int index)",
      "right" : "public Element child(int index)",
      "info" : "MethodDeclaration[4703-5295]:MethodDeclaration[4703-5295]"
    }, {
      "left" : "public Elements children()",
      "right" : "public Elements children()",
      "info" : "MethodDeclaration[5301-5982]:MethodDeclaration[5301-5982]"
    }, {
      "left" : "public List<TextNode> textNodes()",
      "right" : "public List<TextNode> textNodes()",
      "info" : "MethodDeclaration[5988-7176]:MethodDeclaration[5988-7176]"
    }, {
      "left" : "public List<DataNode> dataNodes()",
      "right" : "public List<DataNode> dataNodes()",
      "info" : "MethodDeclaration[7182-7825]:MethodDeclaration[7182-7825]"
    }, {
      "left" : "public Elements select(String cssQuery)",
      "right" : "public Elements select(String cssQuery)",
      "info" : "MethodDeclaration[7831-8886]:MethodDeclaration[7831-8886]"
    }, {
      "left" : "public Element appendChild(Node child)",
      "right" : "public Element appendChild(Node child)",
      "info" : "MethodDeclaration[8896-9379]:MethodDeclaration[8896-9379]"
    }, {
      "left" : "public Element prependChild(Node child)",
      "right" : "public Element prependChild(Node child)",
      "info" : "MethodDeclaration[9385-9721]:MethodDeclaration[9385-9721]"
    }, {
      "left" : "public Element insertChildren(int index, Collection<? extends Node> children)",
      "right" : "public Element insertChildren(int index, Collection<? extends Node> children)",
      "info" : "MethodDeclaration[9728-10766]:MethodDeclaration[9728-10766]"
    }, {
      "left" : "public Element appendElement(String tagName)",
      "right" : "public Element appendElement(String tagName)",
      "info" : "MethodDeclaration[10776-11259]:MethodDeclaration[10776-11259]"
    }, {
      "left" : "public Element prependElement(String tagName)",
      "right" : "public Element prependElement(String tagName)",
      "info" : "MethodDeclaration[11269-11756]:MethodDeclaration[11269-11756]"
    }, {
      "left" : "public Element appendText(String text)",
      "right" : "public Element appendText(String text)",
      "info" : "MethodDeclaration[11766-12069]:MethodDeclaration[11766-12069]"
    }, {
      "left" : "public Element prependText(String text)",
      "right" : "public Element prependText(String text)",
      "info" : "MethodDeclaration[12079-12385]:MethodDeclaration[12079-12385]"
    }, {
      "left" : "public Element append(String html)",
      "right" : "public Element append(String html)",
      "info" : "MethodDeclaration[12395-12893]:MethodDeclaration[12395-12893]"
    }, {
      "left" : "public Element prepend(String html)",
      "right" : "public Element prepend(String html)",
      "info" : "MethodDeclaration[12903-13429]:MethodDeclaration[12903-13429]"
    }, {
      "left" : "public Element before(String html)",
      "right" : "public Element before(String html)",
      "info" : "MethodDeclaration[13435-13771]:MethodDeclaration[13435-13771]"
    }, {
      "left" : "public Element before(Node node)",
      "right" : "public Element before(Node node)",
      "info" : "MethodDeclaration[13777-14094]:MethodDeclaration[13777-14094]"
    }, {
      "left" : "public Element after(String html)",
      "right" : "public Element after(String html)",
      "info" : "MethodDeclaration[14100-14433]:MethodDeclaration[14100-14433]"
    }, {
      "left" : "public Element after(Node node)",
      "right" : "public Element after(Node node)",
      "info" : "MethodDeclaration[14439-14753]:MethodDeclaration[14439-14753]"
    }, {
      "left" : "public Element empty()",
      "right" : "public Element empty()",
      "info" : "MethodDeclaration[14759-14961]:MethodDeclaration[14759-14961]"
    }, {
      "left" : "public Element wrap(String html)",
      "right" : "public Element wrap(String html)",
      "info" : "MethodDeclaration[14967-15298]:MethodDeclaration[14967-15298]"
    }, {
      "left" : "public String cssSelector()",
      "right" : "public String cssSelector()",
      "info" : "MethodDeclaration[15304-16459]:MethodDeclaration[15304-16459]"
    }, {
      "left" : "public Elements siblingElements()",
      "right" : "public Elements siblingElements()",
      "info" : "MethodDeclaration[16465-17046]:MethodDeclaration[16465-17046]"
    }, {
      "left" : "public Element nextElementSibling()",
      "right" : "public Element nextElementSibling()",
      "info" : "MethodDeclaration[17052-17821]:MethodDeclaration[17052-17821]"
    }, {
      "left" : "public Element previousElementSibling()",
      "right" : "public Element previousElementSibling()",
      "info" : "MethodDeclaration[17827-18347]:MethodDeclaration[17827-18347]"
    }, {
      "left" : "public Element firstElementSibling()",
      "right" : "public Element firstElementSibling()",
      "info" : "MethodDeclaration[18353-18728]:MethodDeclaration[18353-18728]"
    }, {
      "left" : "public Integer elementSiblingIndex()",
      "right" : "public Integer elementSiblingIndex()",
      "info" : "MethodDeclaration[18738-19072]:MethodDeclaration[18738-19072]"
    }, {
      "left" : "public Element lastElementSibling()",
      "right" : "public Element lastElementSibling()",
      "info" : "MethodDeclaration[19078-19413]:MethodDeclaration[19078-19413]"
    }, {
      "left" : "private static <E extends Element> Integer indexInList(Element search, List<E> elements)",
      "right" : "private static <E extends Element> Integer indexInList(Element search, List<E> elements)",
      "info" : "MethodDeclaration[19423-19780]:MethodDeclaration[19423-19775]"
    }, {
      "left" : "public Elements getElementsByTag(String tagName)",
      "right" : "public Elements getElementsByTag(String tagName)",
      "info" : "MethodDeclaration[19811-20324]:MethodDeclaration[19806-20319]"
    }, {
      "left" : "public Element getElementById(String id)",
      "right" : "public Element getElementById(String id)",
      "info" : "MethodDeclaration[20330-21112]:MethodDeclaration[20325-21107]"
    }, {
      "left" : "public Elements getElementsByClass(String className)",
      "right" : "public Elements getElementsByClass(String className)",
      "info" : "MethodDeclaration[21118-21804]:MethodDeclaration[21113-21799]"
    }, {
      "left" : "public Elements getElementsByAttribute(String key)",
      "right" : "public Elements getElementsByAttribute(String key)",
      "info" : "MethodDeclaration[21810-22229]:MethodDeclaration[21805-22224]"
    }, {
      "left" : "public Elements getElementsByAttributeStarting(String keyPrefix)",
      "right" : "public Elements getElementsByAttributeStarting(String keyPrefix)",
      "info" : "MethodDeclaration[22235-22820]:MethodDeclaration[22230-22815]"
    }, {
      "left" : "public Elements getElementsByAttributeValue(String key, String value)",
      "right" : "public Elements getElementsByAttributeValue(String key, String value)",
      "info" : "MethodDeclaration[22826-23263]:MethodDeclaration[22821-23258]"
    }, {
      "left" : "public Elements getElementsByAttributeValueNot(String key, String value)",
      "right" : "public Elements getElementsByAttributeValueNot(String key, String value)",
      "info" : "MethodDeclaration[23269-23721]:MethodDeclaration[23264-23716]"
    }, {
      "left" : "public Elements getElementsByAttributeValueStarting(String key, String valuePrefix)",
      "right" : "public Elements getElementsByAttributeValueStarting(String key, String valuePrefix)",
      "info" : "MethodDeclaration[23727-24205]:MethodDeclaration[23722-24200]"
    }, {
      "left" : "public Elements getElementsByAttributeValueEnding(String key, String valueSuffix)",
      "right" : "public Elements getElementsByAttributeValueEnding(String key, String valueSuffix)",
      "info" : "MethodDeclaration[24211-24683]:MethodDeclaration[24206-24678]"
    }, {
      "left" : "public Elements getElementsByAttributeValueContaining(String key, String match)",
      "right" : "public Elements getElementsByAttributeValueContaining(String key, String match)",
      "info" : "MethodDeclaration[24689-25154]:MethodDeclaration[24684-25149]"
    }, {
      "left" : "public Elements getElementsByAttributeValueMatching(String key, Pattern pattern)",
      "right" : "public Elements getElementsByAttributeValueMatching(String key, Pattern pattern)",
      "info" : "MethodDeclaration[25164-25669]:MethodDeclaration[25159-25664]"
    }, {
      "left" : "public Elements getElementsByAttributeValueMatching(String key, String regex)",
      "right" : "public Elements getElementsByAttributeValueMatching(String key, String regex)",
      "info" : "MethodDeclaration[25679-26525]:MethodDeclaration[25674-26520]"
    }, {
      "left" : "public Elements getElementsByIndexLessThan(int index)",
      "right" : "public Elements getElementsByIndexLessThan(int index)",
      "info" : "MethodDeclaration[26535-26836]:MethodDeclaration[26530-26831]"
    }, {
      "left" : "public Elements getElementsByIndexGreaterThan(int index)",
      "right" : "public Elements getElementsByIndexGreaterThan(int index)",
      "info" : "MethodDeclaration[26846-27159]:MethodDeclaration[26841-27154]"
    }, {
      "left" : "public Elements getElementsByIndexEquals(int index)",
      "right" : "public Elements getElementsByIndexEquals(int index)",
      "info" : "MethodDeclaration[27169-27464]:MethodDeclaration[27164-27459]"
    }, {
      "left" : "public Elements getElementsContainingText(String searchText)",
      "right" : "public Elements getElementsContainingText(String searchText)",
      "info" : "MethodDeclaration[27474-27961]:MethodDeclaration[27469-27956]"
    }, {
      "left" : "public Elements getElementsContainingOwnText(String searchText)",
      "right" : "public Elements getElementsContainingOwnText(String searchText)",
      "info" : "MethodDeclaration[27971-28482]:MethodDeclaration[27966-28477]"
    }, {
      "left" : "public Elements getElementsMatchingText(Pattern pattern)",
      "right" : "public Elements getElementsMatchingText(Pattern pattern)",
      "info" : "MethodDeclaration[28492-28873]:MethodDeclaration[28487-28868]"
    }, {
      "left" : "public Elements getElementsMatchingText(String regex)",
      "right" : "public Elements getElementsMatchingText(String regex)",
      "info" : "MethodDeclaration[28883-29630]:MethodDeclaration[28878-29625]"
    }, {
      "left" : "public Elements getElementsMatchingOwnText(Pattern pattern)",
      "right" : "public Elements getElementsMatchingOwnText(Pattern pattern)",
      "info" : "MethodDeclaration[29640-30034]:MethodDeclaration[29635-30029]"
    }, {
      "left" : "public Elements getElementsMatchingOwnText(String regex)",
      "right" : "public Elements getElementsMatchingOwnText(String regex)",
      "info" : "MethodDeclaration[30044-30800]:MethodDeclaration[30039-30795]"
    }, {
      "left" : "public Elements getAllElements()",
      "right" : "public Elements getAllElements()",
      "info" : "MethodDeclaration[30810-31059]:MethodDeclaration[30805-31054]"
    }, {
      "left" : "public String text()",
      "right" : "public String text()",
      "info" : "MethodDeclaration[31065-32294]:MethodDeclaration[31060-32289]"
    }, {
      "left" : "public void head(Node node, int depth)",
      "right" : "public void head(Node node, int depth)",
      "info" : "MethodDeclaration[31572-32153]:MethodDeclaration[31567-32148]"
    }, {
      "left" : "public void tail(Node node, int depth)",
      "right" : "public void tail(Node node, int depth)",
      "info" : "MethodDeclaration[32167-32221]:MethodDeclaration[32162-32216]"
    }, {
      "left" : "public String ownText()",
      "right" : "public String ownText()",
      "info" : "MethodDeclaration[32300-32984]:MethodDeclaration[32295-32979]"
    }, {
      "left" : "private void ownText(StringBuilder accum)",
      "right" : "private void ownText(StringBuilder accum)",
      "info" : "MethodDeclaration[32990-33370]:MethodDeclaration[32985-33365]"
    }, {
      "left" : "private static void appendNormalisedText(StringBuilder accum, TextNode textNode)",
      "right" : "private static void appendNormalisedText(StringBuilder accum, TextNode textNode)",
      "info" : "MethodDeclaration[33376-33712]:MethodDeclaration[33371-33707]"
    }, {
      "left" : "private static void appendWhitespaceIfBr(Element element, StringBuilder accum)",
      "right" : "private static void appendWhitespaceIfBr(Element element, StringBuilder accum)",
      "info" : "MethodDeclaration[33718-33924]:MethodDeclaration[33713-33919]"
    }, {
      "left" : "static boolean preserveWhitespace(Node node)",
      "right" : "static boolean preserveWhitespace(Node node)",
      "info" : "MethodDeclaration[33930-34360]:MethodDeclaration[33925-34355]"
    }, {
      "left" : "public Element text(String text)",
      "right" : "public Element text(String text)",
      "info" : "MethodDeclaration[34366-34738]:MethodDeclaration[34361-34733]"
    }, {
      "left" : "public boolean hasText()",
      "right" : "public boolean hasText()",
      "info" : "MethodDeclaration[34744-35349]:MethodDeclaration[34739-35344]"
    }, {
      "left" : "public String data()",
      "right" : "public String data()",
      "info" : "MethodDeclaration[35355-36076]:MethodDeclaration[35350-36071]"
    }, {
      "left" : "public String className()",
      "right" : "public String className()",
      "info" : "MethodDeclaration[36085-36487]:MethodDeclaration[36080-36482]"
    }, {
      "left" : "public Set<String> classNames()",
      "right" : "public Set<String> classNames()",
      "info" : "MethodDeclaration[36493-37181]:MethodDeclaration[36488-37176]"
    }, {
      "left" : "public Element classNames(Set<String> classNames)",
      "right" : "public Element classNames(Set<String> classNames)",
      "info" : "MethodDeclaration[37187-37540]:MethodDeclaration[37182-37535]"
    }, {
      "left" : "public boolean hasClass(String className)",
      "right" : "public boolean hasClass(String className)",
      "info" : "MethodDeclaration[37546-38354]:MethodDeclaration[37541-38349]"
    }, {
      "left" : "public Element addClass(String className)",
      "right" : "public Element addClass(String className)",
      "info" : "MethodDeclaration[38360-38721]:MethodDeclaration[38355-38716]"
    }, {
      "left" : "public Element removeClass(String className)",
      "right" : "public Element removeClass(String className)",
      "info" : "MethodDeclaration[38727-39102]:MethodDeclaration[38722-39097]"
    }, {
      "left" : "public Element toggleClass(String className)",
      "right" : "public Element toggleClass(String className)",
      "info" : "MethodDeclaration[39108-39616]:MethodDeclaration[39103-39611]"
    }, {
      "left" : "public String val()",
      "right" : "public String val()",
      "info" : "MethodDeclaration[39626-39922]:MethodDeclaration[39621-39917]"
    }, {
      "left" : "public Element val(String value)",
      "right" : "public Element val(String value)",
      "info" : "MethodDeclaration[39932-40262]:MethodDeclaration[39927-40257]"
    }, {
      "left" : "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out)",
      "right" : "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out)",
      "info" : "MethodDeclaration[40268-41073]:MethodDeclaration[40263-41068]"
    }, {
      "left" : "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out)",
      "right" : "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out)",
      "info" : "MethodDeclaration[41079-41578]:MethodDeclaration[41074-41573]"
    }, {
      "left" : "public String html()",
      "right" : "public String html()",
      "info" : "MethodDeclaration[41584-42063]:MethodDeclaration[41579-42058]"
    }, {
      "left" : "private void html(StringBuilder accum)",
      "right" : "private void html(StringBuilder accum)",
      "info" : "MethodDeclaration[42069-42187]:MethodDeclaration[42064-42182]"
    }, {
      "left" : "public Element html(String html)",
      "right" : "public Element html(String html)",
      "info" : "MethodDeclaration[42197-42498]:MethodDeclaration[42192-42493]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[42504-42564]:MethodDeclaration[42499-42559]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[42570-42851]:MethodDeclaration[42565-42846]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[42857-43029]:MethodDeclaration[42852-43024]"
    }, {
      "left" : "public Element clone()",
      "right" : "public Element clone()",
      "info" : "MethodDeclaration[43035-43119]:MethodDeclaration[43030-43114]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[557-563]:Modifier[557-563]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[564-569]:TYPE_DECLARATION_KIND[564-569]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleName[570-577]:SimpleName[570-577]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[586-590]:SimpleType[586-590]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[978-984]:Modifier[978-984]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleName[985-992]:SimpleName[985-992]"
    }, {
      "left" : "Tag tag",
      "right" : "Tag tag",
      "info" : "SingleVariableDeclaration[993-1000]:SingleVariableDeclaration[993-1000]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[1002-1016]:SingleVariableDeclaration[1002-1016]"
    }, {
      "left" : "Attributes attributes",
      "right" : "Attributes attributes",
      "info" : "SingleVariableDeclaration[1018-1039]:SingleVariableDeclaration[1018-1039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1041-1152]:Block[1041-1152]"
    }, {
      "left" : "super(baseUri, attributes);",
      "right" : "super(baseUri, attributes);",
      "info" : "SuperConstructorInvocation[1051-1078]:SuperConstructorInvocation[1051-1078]"
    }, {
      "left" : "Validate.notNull(tag);",
      "right" : "Validate.notNull(tag);",
      "info" : "ExpressionStatement[1096-1118]:ExpressionStatement[1096-1118]"
    }, {
      "left" : "this.tag = tag;",
      "right" : "this.tag = tag;",
      "info" : "ExpressionStatement[1131-1146]:ExpressionStatement[1131-1146]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1444-1450]:Modifier[1444-1450]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleName[1451-1458]:SimpleName[1451-1458]"
    }, {
      "left" : "Tag tag",
      "right" : "Tag tag",
      "info" : "SingleVariableDeclaration[1459-1466]:SingleVariableDeclaration[1459-1466]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[1468-1482]:SingleVariableDeclaration[1468-1482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1484-1537]:Block[1484-1537]"
    }, {
      "left" : "this(tag, baseUri, new Attributes());",
      "right" : "this(tag, baseUri, new Attributes());",
      "info" : "ConstructorInvocation[1494-1531]:ConstructorInvocation[1494-1531]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1543-1552]:MarkerAnnotation[1543-1552]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1557-1563]:Modifier[1557-1563]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[1564-1570]:SimpleType[1564-1570]"
    }, {
      "left" : "nodeName",
      "right" : "nodeName",
      "info" : "SimpleName[1571-1579]:SimpleName[1571-1579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1582-1619]:Block[1582-1619]"
    }, {
      "left" : "return tag.getName();",
      "right" : "return tag.getName();",
      "info" : "ReturnStatement[1592-1613]:ReturnStatement[1592-1613]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1743-1749]:Modifier[1743-1749]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[1750-1756]:SimpleType[1750-1756]"
    }, {
      "left" : "tagName",
      "right" : "tagName",
      "info" : "SimpleName[1757-1764]:SimpleName[1757-1764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1767-1804]:Block[1767-1804]"
    }, {
      "left" : "return tag.getName();",
      "right" : "return tag.getName();",
      "info" : "ReturnStatement[1777-1798]:ReturnStatement[1777-1798]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2063-2069]:Modifier[2063-2069]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[2070-2077]:SimpleType[2070-2077]"
    }, {
      "left" : "tagName",
      "right" : "tagName",
      "info" : "SimpleName[2078-2085]:SimpleName[2078-2085]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[2086-2100]:SingleVariableDeclaration[2086-2100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2102-2233]:Block[2102-2233]"
    }, {
      "left" : "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
      "right" : "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
      "info" : "ExpressionStatement[2112-2170]:ExpressionStatement[2112-2170]"
    }, {
      "left" : "tag = Tag.valueOf(tagName);",
      "right" : "tag = Tag.valueOf(tagName);",
      "info" : "ExpressionStatement[2179-2206]:ExpressionStatement[2179-2206]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2215-2227]:ReturnStatement[2215-2227]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2330-2336]:Modifier[2330-2336]"
    }, {
      "left" : "Tag",
      "right" : "Tag",
      "info" : "SimpleType[2337-2340]:SimpleType[2337-2340]"
    }, {
      "left" : "tag",
      "right" : "tag",
      "info" : "SimpleName[2341-2344]:SimpleName[2341-2344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2347-2374]:Block[2347-2374]"
    }, {
      "left" : "return tag;",
      "right" : "return tag;",
      "info" : "ReturnStatement[2357-2368]:ReturnStatement[2357-2368]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2602-2608]:Modifier[2602-2608]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2609-2616]:PrimitiveType[2609-2616]"
    }, {
      "left" : "isBlock",
      "right" : "isBlock",
      "info" : "SimpleName[2617-2624]:SimpleName[2617-2624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2627-2664]:Block[2627-2664]"
    }, {
      "left" : "return tag.isBlock();",
      "right" : "return tag.isBlock();",
      "info" : "ReturnStatement[2637-2658]:ReturnStatement[2637-2658]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2819-2825]:Modifier[2819-2825]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2826-2832]:SimpleType[2826-2832]"
    }, {
      "left" : "id",
      "right" : "id",
      "info" : "SimpleName[2833-2835]:SimpleName[2833-2835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2838-2882]:Block[2838-2882]"
    }, {
      "left" : "return attributes.get(\"id\");",
      "right" : "return attributes.get(\"id\");",
      "info" : "ReturnStatement[2848-2876]:ReturnStatement[2848-2876]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3108-3114]:Modifier[3108-3114]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[3115-3122]:SimpleType[3115-3122]"
    }, {
      "left" : "attr",
      "right" : "attr",
      "info" : "SimpleName[3123-3127]:SimpleName[3123-3127]"
    }, {
      "left" : "String attributeKey",
      "right" : "String attributeKey",
      "info" : "SingleVariableDeclaration[3128-3147]:SingleVariableDeclaration[3128-3147]"
    }, {
      "left" : "String attributeValue",
      "right" : "String attributeValue",
      "info" : "SingleVariableDeclaration[3149-3170]:SingleVariableDeclaration[3149-3170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3172-3250]:Block[3172-3250]"
    }, {
      "left" : "super.attr(attributeKey, attributeValue);",
      "right" : "super.attr(attributeKey, attributeValue);",
      "info" : "ExpressionStatement[3182-3223]:ExpressionStatement[3182-3223]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3232-3244]:ReturnStatement[3232-3244]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3945-3951]:Modifier[3945-3951]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[3952-3971]:ParameterizedType[3952-3971]"
    }, {
      "left" : "dataset",
      "right" : "dataset",
      "info" : "SimpleName[3972-3979]:SimpleName[3972-3979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3982-4026]:Block[3982-4026]"
    }, {
      "left" : "return attributes.dataset();",
      "right" : "return attributes.dataset();",
      "info" : "ReturnStatement[3992-4020]:ReturnStatement[3992-4020]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4032-4041]:MarkerAnnotation[4032-4041]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4046-4052]:Modifier[4046-4052]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[4053-4058]:Modifier[4053-4058]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[4059-4066]:SimpleType[4059-4066]"
    }, {
      "left" : "parent",
      "right" : "parent",
      "info" : "SimpleName[4067-4073]:SimpleName[4067-4073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4076-4120]:Block[4076-4120]"
    }, {
      "left" : "return (Element) parentNode;",
      "right" : "return (Element) parentNode;",
      "info" : "ReturnStatement[4086-4114]:ReturnStatement[4086-4114]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4278-4284]:Modifier[4278-4284]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[4285-4293]:SimpleType[4285-4293]"
    }, {
      "left" : "parents",
      "right" : "parents",
      "info" : "SimpleName[4294-4301]:SimpleName[4294-4301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4304-4420]:Block[4304-4420]"
    }, {
      "left" : "Elements parents = new Elements();",
      "right" : "Elements parents = new Elements();",
      "info" : "VariableDeclarationStatement[4314-4348]:VariableDeclarationStatement[4314-4348]"
    }, {
      "left" : "accumulateParents(this, parents);",
      "right" : "accumulateParents(this, parents);",
      "info" : "ExpressionStatement[4357-4390]:ExpressionStatement[4357-4390]"
    }, {
      "left" : "return parents;",
      "right" : "return parents;",
      "info" : "ReturnStatement[4399-4414]:ReturnStatement[4399-4414]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4426-4433]:Modifier[4426-4433]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4434-4440]:Modifier[4434-4440]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4441-4445]:PrimitiveType[4441-4445]"
    }, {
      "left" : "accumulateParents",
      "right" : "accumulateParents",
      "info" : "SimpleName[4446-4463]:SimpleName[4446-4463]"
    }, {
      "left" : "Element el",
      "right" : "Element el",
      "info" : "SingleVariableDeclaration[4464-4474]:SingleVariableDeclaration[4464-4474]"
    }, {
      "left" : "Elements parents",
      "right" : "Elements parents",
      "info" : "SingleVariableDeclaration[4476-4492]:SingleVariableDeclaration[4476-4492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4494-4697]:Block[4494-4697]"
    }, {
      "left" : "Element parent = el.parent();",
      "right" : "Element parent = el.parent();",
      "info" : "VariableDeclarationStatement[4504-4533]:VariableDeclarationStatement[4504-4533]"
    }, {
      "left" : "if (parent != null && !parent.tagName().equals(\"#root\"))",
      "right" : "if (parent != null && !parent.tagName().equals(\"#root\"))",
      "info" : "IfStatement[4542-4691]:IfStatement[4542-4691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4599-4691]:Block[4599-4691]"
    }, {
      "left" : "parents.add(parent);",
      "right" : "parents.add(parent);",
      "info" : "ExpressionStatement[4613-4633]:ExpressionStatement[4613-4633]"
    }, {
      "left" : "accumulateParents(parent, parents);",
      "right" : "accumulateParents(parent, parents);",
      "info" : "ExpressionStatement[4646-4681]:ExpressionStatement[4646-4681]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5218-5224]:Modifier[5218-5224]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[5225-5232]:SimpleType[5225-5232]"
    }, {
      "left" : "child",
      "right" : "child",
      "info" : "SimpleName[5233-5238]:SimpleName[5233-5238]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[5239-5248]:SingleVariableDeclaration[5239-5248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5250-5295]:Block[5250-5295]"
    }, {
      "left" : "return children().get(index);",
      "right" : "return children().get(index);",
      "info" : "ReturnStatement[5260-5289]:ReturnStatement[5260-5289]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5585-5591]:Modifier[5585-5591]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[5592-5600]:SimpleType[5592-5600]"
    }, {
      "left" : "children",
      "right" : "children",
      "info" : "SimpleName[5601-5609]:SimpleName[5601-5609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5612-5982]:Block[5612-5982]"
    }, {
      "left" : "List<Element> elements = new ArrayList<Element>(childNodes.size());",
      "right" : "List<Element> elements = new ArrayList<Element>(childNodes.size());",
      "info" : "VariableDeclarationStatement[5734-5801]:VariableDeclarationStatement[5734-5801]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[5810-5937]:EnhancedForStatement[5810-5937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5839-5937]:Block[5839-5937]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[5853-5927]:IfStatement[5853-5927]"
    }, {
      "left" : "elements.add((Element) node);",
      "right" : "elements.add((Element) node);",
      "info" : "ExpressionStatement[5898-5927]:ExpressionStatement[5898-5927]"
    }, {
      "left" : "return new Elements(elements);",
      "right" : "return new Elements(elements);",
      "info" : "ReturnStatement[5946-5976]:ReturnStatement[5946-5976]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6878-6884]:Modifier[6878-6884]"
    }, {
      "left" : "List<TextNode>",
      "right" : "List<TextNode>",
      "info" : "ParameterizedType[6885-6899]:ParameterizedType[6885-6899]"
    }, {
      "left" : "textNodes",
      "right" : "textNodes",
      "info" : "SimpleName[6900-6909]:SimpleName[6900-6909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6912-7176]:Block[6912-7176]"
    }, {
      "left" : "List<TextNode> textNodes = new ArrayList<TextNode>();",
      "right" : "List<TextNode> textNodes = new ArrayList<TextNode>();",
      "info" : "VariableDeclarationStatement[6922-6975]:VariableDeclarationStatement[6922-6975]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[6984-7114]:EnhancedForStatement[6984-7114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7013-7114]:Block[7013-7114]"
    }, {
      "left" : "if (node instanceof TextNode)",
      "right" : "if (node instanceof TextNode)",
      "info" : "IfStatement[7027-7104]:IfStatement[7027-7104]"
    }, {
      "left" : "textNodes.add((TextNode) node);",
      "right" : "textNodes.add((TextNode) node);",
      "info" : "ExpressionStatement[7073-7104]:ExpressionStatement[7073-7104]"
    }, {
      "left" : "return Collections.unmodifiableList(textNodes);",
      "right" : "return Collections.unmodifiableList(textNodes);",
      "info" : "ReturnStatement[7123-7170]:ReturnStatement[7123-7170]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7527-7533]:Modifier[7527-7533]"
    }, {
      "left" : "List<DataNode>",
      "right" : "List<DataNode>",
      "info" : "ParameterizedType[7534-7548]:ParameterizedType[7534-7548]"
    }, {
      "left" : "dataNodes",
      "right" : "dataNodes",
      "info" : "SimpleName[7549-7558]:SimpleName[7549-7558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7561-7825]:Block[7561-7825]"
    }, {
      "left" : "List<DataNode> dataNodes = new ArrayList<DataNode>();",
      "right" : "List<DataNode> dataNodes = new ArrayList<DataNode>();",
      "info" : "VariableDeclarationStatement[7571-7624]:VariableDeclarationStatement[7571-7624]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[7633-7763]:EnhancedForStatement[7633-7763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7662-7763]:Block[7662-7763]"
    }, {
      "left" : "if (node instanceof DataNode)",
      "right" : "if (node instanceof DataNode)",
      "info" : "IfStatement[7676-7753]:IfStatement[7676-7753]"
    }, {
      "left" : "dataNodes.add((DataNode) node);",
      "right" : "dataNodes.add((DataNode) node);",
      "info" : "ExpressionStatement[7722-7753]:ExpressionStatement[7722-7753]"
    }, {
      "left" : "return Collections.unmodifiableList(dataNodes);",
      "right" : "return Collections.unmodifiableList(dataNodes);",
      "info" : "ReturnStatement[7772-7819]:ReturnStatement[7772-7819]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8791-8797]:Modifier[8791-8797]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[8798-8806]:SimpleType[8798-8806]"
    }, {
      "left" : "select",
      "right" : "select",
      "info" : "SimpleName[8807-8813]:SimpleName[8807-8813]"
    }, {
      "left" : "String cssQuery",
      "right" : "String cssQuery",
      "info" : "SingleVariableDeclaration[8814-8829]:SingleVariableDeclaration[8814-8829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8831-8886]:Block[8831-8886]"
    }, {
      "left" : "return Selector.select(cssQuery, this);",
      "right" : "return Selector.select(cssQuery, this);",
      "info" : "ReturnStatement[8841-8880]:ReturnStatement[8841-8880]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9078-9084]:Modifier[9078-9084]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[9085-9092]:SimpleType[9085-9092]"
    }, {
      "left" : "appendChild",
      "right" : "appendChild",
      "info" : "SimpleName[9093-9104]:SimpleName[9093-9104]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[9105-9115]:SingleVariableDeclaration[9105-9115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9117-9379]:Block[9117-9379]"
    }, {
      "left" : "Validate.notNull(child);",
      "right" : "Validate.notNull(child);",
      "info" : "ExpressionStatement[9127-9151]:ExpressionStatement[9127-9151]"
    }, {
      "left" : "reparentChild(child);",
      "right" : "reparentChild(child);",
      "info" : "ExpressionStatement[9246-9267]:ExpressionStatement[9246-9267]"
    }, {
      "left" : "childNodes.add(child);",
      "right" : "childNodes.add(child);",
      "info" : "ExpressionStatement[9276-9298]:ExpressionStatement[9276-9298]"
    }, {
      "left" : "child.setSiblingIndex(childNodes.size() - 1);",
      "right" : "child.setSiblingIndex(childNodes.size() - 1);",
      "info" : "ExpressionStatement[9307-9352]:ExpressionStatement[9307-9352]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9361-9373]:ReturnStatement[9361-9373]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9580-9586]:Modifier[9580-9586]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[9587-9594]:SimpleType[9587-9594]"
    }, {
      "left" : "prependChild",
      "right" : "prependChild",
      "info" : "SimpleName[9595-9607]:SimpleName[9595-9607]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[9608-9618]:SingleVariableDeclaration[9608-9618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9620-9721]:Block[9620-9721]"
    }, {
      "left" : "Validate.notNull(child);",
      "right" : "Validate.notNull(child);",
      "info" : "ExpressionStatement[9630-9654]:ExpressionStatement[9630-9654]"
    }, {
      "left" : "addChildren(0, child);",
      "right" : "addChildren(0, child);",
      "info" : "ExpressionStatement[9672-9694]:ExpressionStatement[9672-9694]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9703-9715]:ReturnStatement[9703-9715]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10198-10204]:Modifier[10198-10204]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[10205-10212]:SimpleType[10205-10212]"
    }, {
      "left" : "insertChildren",
      "right" : "insertChildren",
      "info" : "SimpleName[10213-10227]:SimpleName[10213-10227]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[10228-10237]:SingleVariableDeclaration[10228-10237]"
    }, {
      "left" : "Collection<? extends Node> children",
      "right" : "Collection<? extends Node> children",
      "info" : "SingleVariableDeclaration[10239-10274]:SingleVariableDeclaration[10239-10274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10276-10766]:Block[10276-10766]"
    }, {
      "left" : "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
      "right" : "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
      "info" : "ExpressionStatement[10286-10369]:ExpressionStatement[10286-10369]"
    }, {
      "left" : "int currentSize = childNodeSize();",
      "right" : "int currentSize = childNodeSize();",
      "info" : "VariableDeclarationStatement[10378-10412]:VariableDeclarationStatement[10378-10412]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[10421-10460]:IfStatement[10421-10460]"
    }, {
      "left" : "index += currentSize +1;",
      "right" : "index += currentSize +1;",
      "info" : "ExpressionStatement[10436-10460]:ExpressionStatement[10436-10460]"
    }, {
      "left" : "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
      "right" : "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
      "info" : "ExpressionStatement[10484-10570]:ExpressionStatement[10484-10570]"
    }, {
      "left" : "ArrayList<Node> nodes = new ArrayList<Node>(children);",
      "right" : "ArrayList<Node> nodes = new ArrayList<Node>(children);",
      "info" : "VariableDeclarationStatement[10580-10634]:VariableDeclarationStatement[10580-10634]"
    }, {
      "left" : "Node[] nodeArray = nodes.toArray(new Node[nodes.size()]);",
      "right" : "Node[] nodeArray = nodes.toArray(new Node[nodes.size()]);",
      "info" : "VariableDeclarationStatement[10643-10700]:VariableDeclarationStatement[10643-10700]"
    }, {
      "left" : "addChildren(index, nodeArray);",
      "right" : "addChildren(index, nodeArray);",
      "info" : "ExpressionStatement[10709-10739]:ExpressionStatement[10709-10739]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10748-10760]:ReturnStatement[10748-10760]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11087-11093]:Modifier[11087-11093]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[11094-11101]:SimpleType[11094-11101]"
    }, {
      "left" : "appendElement",
      "right" : "appendElement",
      "info" : "SimpleName[11102-11115]:SimpleName[11102-11115]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[11116-11130]:SingleVariableDeclaration[11116-11130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11132-11259]:Block[11132-11259]"
    }, {
      "left" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "right" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "info" : "VariableDeclarationStatement[11142-11203]:VariableDeclarationStatement[11142-11203]"
    }, {
      "left" : "appendChild(child);",
      "right" : "appendChild(child);",
      "info" : "ExpressionStatement[11212-11231]:ExpressionStatement[11212-11231]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[11240-11253]:ReturnStatement[11240-11253]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11582-11588]:Modifier[11582-11588]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[11589-11596]:SimpleType[11589-11596]"
    }, {
      "left" : "prependElement",
      "right" : "prependElement",
      "info" : "SimpleName[11597-11611]:SimpleName[11597-11611]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[11612-11626]:SingleVariableDeclaration[11612-11626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11628-11756]:Block[11628-11756]"
    }, {
      "left" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "right" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "info" : "VariableDeclarationStatement[11638-11699]:VariableDeclarationStatement[11638-11699]"
    }, {
      "left" : "prependChild(child);",
      "right" : "prependChild(child);",
      "info" : "ExpressionStatement[11708-11728]:ExpressionStatement[11708-11728]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[11737-11750]:ReturnStatement[11737-11750]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11920-11926]:Modifier[11920-11926]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[11927-11934]:SimpleType[11927-11934]"
    }, {
      "left" : "appendText",
      "right" : "appendText",
      "info" : "SimpleName[11935-11945]:SimpleName[11935-11945]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[11946-11957]:SingleVariableDeclaration[11946-11957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11959-12069]:Block[11959-12069]"
    }, {
      "left" : "TextNode node = new TextNode(text, baseUri());",
      "right" : "TextNode node = new TextNode(text, baseUri());",
      "info" : "VariableDeclarationStatement[11969-12015]:VariableDeclarationStatement[11969-12015]"
    }, {
      "left" : "appendChild(node);",
      "right" : "appendChild(node);",
      "info" : "ExpressionStatement[12024-12042]:ExpressionStatement[12024-12042]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[12051-12063]:ReturnStatement[12051-12063]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12234-12240]:Modifier[12234-12240]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[12241-12248]:SimpleType[12241-12248]"
    }, {
      "left" : "prependText",
      "right" : "prependText",
      "info" : "SimpleName[12249-12260]:SimpleName[12249-12260]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[12261-12272]:SingleVariableDeclaration[12261-12272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12274-12385]:Block[12274-12385]"
    }, {
      "left" : "TextNode node = new TextNode(text, baseUri());",
      "right" : "TextNode node = new TextNode(text, baseUri());",
      "info" : "VariableDeclarationStatement[12284-12330]:VariableDeclarationStatement[12284-12330]"
    }, {
      "left" : "prependChild(node);",
      "right" : "prependChild(node);",
      "info" : "ExpressionStatement[12339-12358]:ExpressionStatement[12339-12358]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[12367-12379]:ReturnStatement[12367-12379]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12665-12671]:Modifier[12665-12671]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[12672-12679]:SimpleType[12672-12679]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[12680-12686]:SimpleName[12680-12686]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[12687-12698]:SingleVariableDeclaration[12687-12698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12700-12893]:Block[12700-12893]"
    }, {
      "left" : "Validate.notNull(html);",
      "right" : "Validate.notNull(html);",
      "info" : "ExpressionStatement[12710-12733]:ExpressionStatement[12710-12733]"
    }, {
      "left" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "right" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "info" : "VariableDeclarationStatement[12743-12806]:VariableDeclarationStatement[12743-12806]"
    }, {
      "left" : "addChildren(nodes.toArray(new Node[nodes.size()]));",
      "right" : "addChildren(nodes.toArray(new Node[nodes.size()]));",
      "info" : "ExpressionStatement[12815-12866]:ExpressionStatement[12815-12866]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[12875-12887]:ReturnStatement[12875-12887]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13189-13195]:Modifier[13189-13195]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[13196-13203]:SimpleType[13196-13203]"
    }, {
      "left" : "prepend",
      "right" : "prepend",
      "info" : "SimpleName[13204-13211]:SimpleName[13204-13211]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[13212-13223]:SingleVariableDeclaration[13212-13223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13225-13429]:Block[13225-13429]"
    }, {
      "left" : "Validate.notNull(html);",
      "right" : "Validate.notNull(html);",
      "info" : "ExpressionStatement[13235-13258]:ExpressionStatement[13235-13258]"
    }, {
      "left" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "right" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "info" : "VariableDeclarationStatement[13276-13339]:VariableDeclarationStatement[13276-13339]"
    }, {
      "left" : "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
      "right" : "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
      "info" : "ExpressionStatement[13348-13402]:ExpressionStatement[13348-13402]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13411-13423]:ReturnStatement[13411-13423]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13670-13679]:MarkerAnnotation[13670-13679]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13684-13690]:Modifier[13684-13690]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[13691-13698]:SimpleType[13691-13698]"
    }, {
      "left" : "before",
      "right" : "before",
      "info" : "SimpleName[13699-13705]:SimpleName[13699-13705]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[13706-13717]:SingleVariableDeclaration[13706-13717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13719-13771]:Block[13719-13771]"
    }, {
      "left" : "return (Element) super.before(html);",
      "right" : "return (Element) super.before(html);",
      "info" : "ReturnStatement[13729-13765]:ReturnStatement[13729-13765]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13995-14004]:MarkerAnnotation[13995-14004]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14009-14015]:Modifier[14009-14015]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[14016-14023]:SimpleType[14016-14023]"
    }, {
      "left" : "before",
      "right" : "before",
      "info" : "SimpleName[14024-14030]:SimpleName[14024-14030]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[14031-14040]:SingleVariableDeclaration[14031-14040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14042-14094]:Block[14042-14094]"
    }, {
      "left" : "return (Element) super.before(node);",
      "right" : "return (Element) super.before(node);",
      "info" : "ReturnStatement[14052-14088]:ReturnStatement[14052-14088]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14334-14343]:MarkerAnnotation[14334-14343]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14348-14354]:Modifier[14348-14354]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[14355-14362]:SimpleType[14355-14362]"
    }, {
      "left" : "after",
      "right" : "after",
      "info" : "SimpleName[14363-14368]:SimpleName[14363-14368]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[14369-14380]:SingleVariableDeclaration[14369-14380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14382-14433]:Block[14382-14433]"
    }, {
      "left" : "return (Element) super.after(html);",
      "right" : "return (Element) super.after(html);",
      "info" : "ReturnStatement[14392-14427]:ReturnStatement[14392-14427]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14656-14665]:MarkerAnnotation[14656-14665]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14670-14676]:Modifier[14670-14676]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[14677-14684]:SimpleType[14677-14684]"
    }, {
      "left" : "after",
      "right" : "after",
      "info" : "SimpleName[14685-14690]:SimpleName[14685-14690]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[14691-14700]:SingleVariableDeclaration[14691-14700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14702-14753]:Block[14702-14753]"
    }, {
      "left" : "return (Element) super.after(node);",
      "right" : "return (Element) super.after(node);",
      "info" : "ReturnStatement[14712-14747]:ReturnStatement[14712-14747]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14882-14888]:Modifier[14882-14888]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[14889-14896]:SimpleType[14889-14896]"
    }, {
      "left" : "empty",
      "right" : "empty",
      "info" : "SimpleName[14897-14902]:SimpleName[14897-14902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14905-14961]:Block[14905-14961]"
    }, {
      "left" : "childNodes.clear();",
      "right" : "childNodes.clear();",
      "info" : "ExpressionStatement[14915-14934]:ExpressionStatement[14915-14934]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14943-14955]:ReturnStatement[14943-14955]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15201-15210]:MarkerAnnotation[15201-15210]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15215-15221]:Modifier[15215-15221]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[15222-15229]:SimpleType[15222-15229]"
    }, {
      "left" : "wrap",
      "right" : "wrap",
      "info" : "SimpleName[15230-15234]:SimpleName[15230-15234]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[15235-15246]:SingleVariableDeclaration[15235-15246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15248-15298]:Block[15248-15298]"
    }, {
      "left" : "return (Element) super.wrap(html);",
      "right" : "return (Element) super.wrap(html);",
      "info" : "ReturnStatement[15258-15292]:ReturnStatement[15258-15292]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15718-15724]:Modifier[15718-15724]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[15725-15731]:SimpleType[15725-15731]"
    }, {
      "left" : "cssSelector",
      "right" : "cssSelector",
      "info" : "SimpleName[15732-15743]:SimpleName[15732-15743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15746-16459]:Block[15746-16459]"
    }, {
      "left" : "if (id().length() > 0)",
      "right" : "if (id().length() > 0)",
      "info" : "IfStatement[15756-15809]:IfStatement[15756-15809]"
    }, {
      "left" : "return \"#\" + id();",
      "right" : "return \"#\" + id();",
      "info" : "ReturnStatement[15791-15809]:ReturnStatement[15791-15809]"
    }, {
      "left" : "StringBuilder selector = new StringBuilder(tagName());",
      "right" : "StringBuilder selector = new StringBuilder(tagName());",
      "info" : "VariableDeclarationStatement[15819-15873]:VariableDeclarationStatement[15819-15873]"
    }, {
      "left" : "String classes = StringUtil.join(classNames(), \".\");",
      "right" : "String classes = StringUtil.join(classNames(), \".\");",
      "info" : "VariableDeclarationStatement[15882-15934]:VariableDeclarationStatement[15882-15934]"
    }, {
      "left" : "if (classes.length() > 0)",
      "right" : "if (classes.length() > 0)",
      "info" : "IfStatement[15943-16018]:IfStatement[15943-16018]"
    }, {
      "left" : "selector.append('.').append(classes);",
      "right" : "selector.append('.').append(classes);",
      "info" : "ExpressionStatement[15981-16018]:ExpressionStatement[15981-16018]"
    }, {
      "left" : "if (parent() == null || parent() instanceof Document)",
      "right" : "if (parent() == null || parent() instanceof Document)",
      "info" : "IfStatement[16028-16188]:IfStatement[16028-16188]"
    }, {
      "left" : "return selector.toString();",
      "right" : "return selector.toString();",
      "info" : "ReturnStatement[16161-16188]:ReturnStatement[16161-16188]"
    }, {
      "left" : "selector.insert(0, \" > \");",
      "right" : "selector.insert(0, \" > \");",
      "info" : "ExpressionStatement[16198-16224]:ExpressionStatement[16198-16224]"
    }, {
      "left" : "if (parent().select(selector.toString()).size() > 1)",
      "right" : "if (parent().select(selector.toString()).size() > 1)",
      "info" : "IfStatement[16233-16391]:IfStatement[16233-16391]"
    }, {
      "left" : "selector.append(String.format(\n                \":nth-child(%d)\", elementSiblingIndex() + 1));",
      "right" : "selector.append(String.format(\n                \":nth-child(%d)\", elementSiblingIndex() + 1));",
      "info" : "ExpressionStatement[16298-16391]:ExpressionStatement[16298-16391]"
    }, {
      "left" : "return parent().cssSelector() + selector.toString();",
      "right" : "return parent().cssSelector() + selector.toString();",
      "info" : "ReturnStatement[16401-16453]:ReturnStatement[16401-16453]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16697-16703]:Modifier[16697-16703]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[16704-16712]:SimpleType[16704-16712]"
    }, {
      "left" : "siblingElements",
      "right" : "siblingElements",
      "info" : "SimpleName[16713-16728]:SimpleName[16713-16728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16731-17046]:Block[16731-17046]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[16741-16800]:IfStatement[16741-16800]"
    }, {
      "left" : "return new Elements(0);",
      "right" : "return new Elements(0);",
      "info" : "ReturnStatement[16777-16800]:ReturnStatement[16777-16800]"
    }, {
      "left" : "List<Element> elements = parent().children();",
      "right" : "List<Element> elements = parent().children();",
      "info" : "VariableDeclarationStatement[16810-16855]:VariableDeclarationStatement[16810-16855]"
    }, {
      "left" : "Elements siblings = new Elements(elements.size() - 1);",
      "right" : "Elements siblings = new Elements(elements.size() - 1);",
      "info" : "VariableDeclarationStatement[16864-16918]:VariableDeclarationStatement[16864-16918]"
    }, {
      "left" : "for (Element el: elements)\n            if (el != this)\n                siblings.add(el);",
      "right" : "for (Element el: elements)\n            if (el != this)\n                siblings.add(el);",
      "info" : "EnhancedForStatement[16927-17015]:EnhancedForStatement[16927-17015]"
    }, {
      "left" : "if (el != this)",
      "right" : "if (el != this)",
      "info" : "IfStatement[16966-17015]:IfStatement[16966-17015]"
    }, {
      "left" : "siblings.add(el);",
      "right" : "siblings.add(el);",
      "info" : "ExpressionStatement[16998-17015]:ExpressionStatement[16998-17015]"
    }, {
      "left" : "return siblings;",
      "right" : "return siblings;",
      "info" : "ReturnStatement[17024-17040]:ReturnStatement[17024-17040]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17474-17480]:Modifier[17474-17480]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[17481-17488]:SimpleType[17481-17488]"
    }, {
      "left" : "nextElementSibling",
      "right" : "nextElementSibling",
      "info" : "SimpleName[17489-17507]:SimpleName[17489-17507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17510-17821]:Block[17510-17821]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[17520-17556]:IfStatement[17520-17556]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17544-17556]:ReturnStatement[17544-17556]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[17565-17610]:VariableDeclarationStatement[17565-17610]"
    }, {
      "left" : "Integer index = indexInList(this, siblings);",
      "right" : "Integer index = indexInList(this, siblings);",
      "info" : "VariableDeclarationStatement[17619-17663]:VariableDeclarationStatement[17619-17663]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[17672-17696]:ExpressionStatement[17672-17696]"
    }, {
      "left" : "if (siblings.size() > index+1)",
      "right" : "if (siblings.size() > index+1)",
      "info" : "IfStatement[17705-17815]:IfStatement[17705-17815]"
    }, {
      "left" : "return siblings.get(index+1);",
      "right" : "return siblings.get(index+1);",
      "info" : "ReturnStatement[17748-17777]:ReturnStatement[17748-17777]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17803-17815]:ReturnStatement[17803-17815]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18012-18018]:Modifier[18012-18018]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[18019-18026]:SimpleType[18019-18026]"
    }, {
      "left" : "previousElementSibling",
      "right" : "previousElementSibling",
      "info" : "SimpleName[18027-18049]:SimpleName[18027-18049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18052-18347]:Block[18052-18347]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[18062-18098]:IfStatement[18062-18098]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[18086-18098]:ReturnStatement[18086-18098]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[18107-18152]:VariableDeclarationStatement[18107-18152]"
    }, {
      "left" : "Integer index = indexInList(this, siblings);",
      "right" : "Integer index = indexInList(this, siblings);",
      "info" : "VariableDeclarationStatement[18161-18205]:VariableDeclarationStatement[18161-18205]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[18214-18238]:ExpressionStatement[18214-18238]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[18247-18341]:IfStatement[18247-18341]"
    }, {
      "left" : "return siblings.get(index-1);",
      "right" : "return siblings.get(index-1);",
      "info" : "ReturnStatement[18274-18303]:ReturnStatement[18274-18303]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[18329-18341]:ReturnStatement[18329-18341]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18516-18522]:Modifier[18516-18522]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[18523-18530]:SimpleType[18523-18530]"
    }, {
      "left" : "firstElementSibling",
      "right" : "firstElementSibling",
      "info" : "SimpleName[18531-18550]:SimpleName[18531-18550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18553-18728]:Block[18553-18728]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[18616-18661]:VariableDeclarationStatement[18616-18661]"
    }, {
      "left" : "return siblings.size() > 1 ? siblings.get(0) : null;",
      "right" : "return siblings.size() > 1 ? siblings.get(0) : null;",
      "info" : "ReturnStatement[18670-18722]:ReturnStatement[18670-18722]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18934-18940]:Modifier[18934-18940]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[18941-18948]:SimpleType[18941-18948]"
    }, {
      "left" : "elementSiblingIndex",
      "right" : "elementSiblingIndex",
      "info" : "SimpleName[18949-18968]:SimpleName[18949-18968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18971-19072]:Block[18971-19072]"
    }, {
      "left" : "if (parent() == null)",
      "right" : "if (parent() == null)",
      "info" : "IfStatement[18980-19011]:IfStatement[18980-19011]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[19002-19011]:ReturnStatement[19002-19011]"
    }, {
      "left" : "return indexInList(this, parent().children());",
      "right" : "return indexInList(this, parent().children());",
      "info" : "ReturnStatement[19019-19065]:ReturnStatement[19019-19065]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19237-19243]:Modifier[19237-19243]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[19244-19251]:SimpleType[19244-19251]"
    }, {
      "left" : "lastElementSibling",
      "right" : "lastElementSibling",
      "info" : "SimpleName[19252-19270]:SimpleName[19252-19270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19273-19413]:Block[19273-19413]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[19283-19328]:VariableDeclarationStatement[19283-19328]"
    }, {
      "left" : "return siblings.size() > 1 ? siblings.get(siblings.size() - 1) : null;",
      "right" : "return siblings.size() > 1 ? siblings.get(siblings.size() - 1) : null;",
      "info" : "ReturnStatement[19337-19407]:ReturnStatement[19337-19407]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19423-19430]:Modifier[19423-19430]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19431-19437]:Modifier[19431-19437]"
    }, {
      "left" : "E extends Element",
      "right" : "E extends Element",
      "info" : "TypeParameter[19439-19456]:TypeParameter[19439-19456]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[19458-19465]:SimpleType[19458-19465]"
    }, {
      "left" : "indexInList",
      "right" : "indexInList",
      "info" : "SimpleName[19466-19477]:SimpleName[19466-19477]"
    }, {
      "left" : "Element search",
      "right" : "Element search",
      "info" : "SingleVariableDeclaration[19478-19492]:SingleVariableDeclaration[19478-19492]"
    }, {
      "left" : "List<E> elements",
      "right" : "List<E> elements",
      "info" : "SingleVariableDeclaration[19494-19510]:SingleVariableDeclaration[19494-19510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19512-19780]:Block[19512-19775]"
    }, {
      "left" : "Validate.notNull(search);",
      "right" : "Validate.notNull(search);",
      "info" : "ExpressionStatement[19522-19547]:ExpressionStatement[19522-19547]"
    }, {
      "left" : "Validate.notNull(elements);",
      "right" : "Validate.notNull(elements);",
      "info" : "ExpressionStatement[19556-19583]:ExpressionStatement[19556-19583]"
    }, {
      "left" : "for (int i = 0; i < elements.size(); i++)",
      "right" : "for (int i = 0; i < elements.size(); i++)",
      "info" : "ForStatement[19593-19753]:ForStatement[19593-19748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19635-19753]:Block[19635-19748]"
    }, {
      "left" : "E element = elements.get(i);",
      "right" : "E element = elements.get(i);",
      "info" : "VariableDeclarationStatement[19649-19677]:VariableDeclarationStatement[19649-19677]"
    }, {
      "left" : "if (element.equals(search))",
      "right" : "if (element == search)",
      "info" : "IfStatement[19690-19743]:IfStatement[19690-19738]"
    }, {
      "left" : "element",
      "right" : "element",
      "info" : "SimpleName[19694-19701]:SimpleName[19694-19701]"
    }, {
      "left" : "search",
      "right" : "search",
      "info" : "SimpleName[19709-19715]:SimpleName[19705-19711]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[19734-19743]:ReturnStatement[19729-19738]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19762-19774]:ReturnStatement[19757-19769]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20115-20121]:Modifier[20110-20116]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[20122-20130]:SimpleType[20117-20125]"
    }, {
      "left" : "getElementsByTag",
      "right" : "getElementsByTag",
      "info" : "SimpleName[20131-20147]:SimpleName[20126-20142]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[20148-20162]:SingleVariableDeclaration[20143-20157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20164-20324]:Block[20159-20319]"
    }, {
      "left" : "Validate.notEmpty(tagName);",
      "right" : "Validate.notEmpty(tagName);",
      "info" : "ExpressionStatement[20174-20201]:ExpressionStatement[20169-20196]"
    }, {
      "left" : "tagName = tagName.toLowerCase().trim();",
      "right" : "tagName = tagName.toLowerCase().trim();",
      "info" : "ExpressionStatement[20210-20249]:ExpressionStatement[20205-20244]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Tag(tagName), this);",
      "right" : "return Collector.collect(new Evaluator.Tag(tagName), this);",
      "info" : "ReturnStatement[20259-20318]:ReturnStatement[20254-20313]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20842-20848]:Modifier[20837-20843]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[20849-20856]:SimpleType[20844-20851]"
    }, {
      "left" : "getElementById",
      "right" : "getElementById",
      "info" : "SimpleName[20857-20871]:SimpleName[20852-20866]"
    }, {
      "left" : "String id",
      "right" : "String id",
      "info" : "SingleVariableDeclaration[20872-20881]:SingleVariableDeclaration[20867-20876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20883-21112]:Block[20878-21107]"
    }, {
      "left" : "Validate.notEmpty(id);",
      "right" : "Validate.notEmpty(id);",
      "info" : "ExpressionStatement[20893-20915]:ExpressionStatement[20888-20910]"
    }, {
      "left" : "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
      "right" : "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
      "info" : "VariableDeclarationStatement[20933-20999]:VariableDeclarationStatement[20928-20994]"
    }, {
      "left" : "if (elements.size() > 0)",
      "right" : "if (elements.size() > 0)",
      "info" : "IfStatement[21008-21106]:IfStatement[21003-21101]"
    }, {
      "left" : "return elements.get(0);",
      "right" : "return elements.get(0);",
      "info" : "ReturnStatement[21045-21068]:ReturnStatement[21040-21063]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[21094-21106]:ReturnStatement[21089-21101]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21633-21639]:Modifier[21628-21634]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[21640-21648]:SimpleType[21635-21643]"
    }, {
      "left" : "getElementsByClass",
      "right" : "getElementsByClass",
      "info" : "SimpleName[21649-21667]:SimpleName[21644-21662]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[21668-21684]:SingleVariableDeclaration[21663-21679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21686-21804]:Block[21681-21799]"
    }, {
      "left" : "Validate.notEmpty(className);",
      "right" : "Validate.notEmpty(className);",
      "info" : "ExpressionStatement[21696-21725]:ExpressionStatement[21691-21720]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Class(className), this);",
      "right" : "return Collector.collect(new Evaluator.Class(className), this);",
      "info" : "ReturnStatement[21735-21798]:ReturnStatement[21730-21793]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22028-22034]:Modifier[22023-22029]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[22035-22043]:SimpleType[22030-22038]"
    }, {
      "left" : "getElementsByAttribute",
      "right" : "getElementsByAttribute",
      "info" : "SimpleName[22044-22066]:SimpleName[22039-22061]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[22067-22077]:SingleVariableDeclaration[22062-22072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22079-22229]:Block[22074-22224]"
    }, {
      "left" : "Validate.notEmpty(key);",
      "right" : "Validate.notEmpty(key);",
      "info" : "ExpressionStatement[22089-22112]:ExpressionStatement[22084-22107]"
    }, {
      "left" : "key = key.trim().toLowerCase();",
      "right" : "key = key.trim().toLowerCase();",
      "info" : "ExpressionStatement[22121-22152]:ExpressionStatement[22116-22147]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Attribute(key), this);",
      "right" : "return Collector.collect(new Evaluator.Attribute(key), this);",
      "info" : "ReturnStatement[22162-22223]:ReturnStatement[22157-22218]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22573-22579]:Modifier[22568-22574]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[22580-22588]:SimpleType[22575-22583]"
    }, {
      "left" : "getElementsByAttributeStarting",
      "right" : "getElementsByAttributeStarting",
      "info" : "SimpleName[22589-22619]:SimpleName[22584-22614]"
    }, {
      "left" : "String keyPrefix",
      "right" : "String keyPrefix",
      "info" : "SingleVariableDeclaration[22620-22636]:SingleVariableDeclaration[22615-22631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22638-22820]:Block[22633-22815]"
    }, {
      "left" : "Validate.notEmpty(keyPrefix);",
      "right" : "Validate.notEmpty(keyPrefix);",
      "info" : "ExpressionStatement[22648-22677]:ExpressionStatement[22643-22672]"
    }, {
      "left" : "keyPrefix = keyPrefix.trim().toLowerCase();",
      "right" : "keyPrefix = keyPrefix.trim().toLowerCase();",
      "info" : "ExpressionStatement[22686-22729]:ExpressionStatement[22681-22724]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
      "info" : "ReturnStatement[22739-22814]:ReturnStatement[22734-22809]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23100-23106]:Modifier[23095-23101]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[23107-23115]:SimpleType[23102-23110]"
    }, {
      "left" : "getElementsByAttributeValue",
      "right" : "getElementsByAttributeValue",
      "info" : "SimpleName[23116-23143]:SimpleName[23111-23138]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[23144-23154]:SingleVariableDeclaration[23139-23149]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[23156-23168]:SingleVariableDeclaration[23151-23163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23170-23263]:Block[23165-23258]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
      "info" : "ReturnStatement[23180-23257]:ReturnStatement[23175-23252]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23552-23558]:Modifier[23547-23553]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[23559-23567]:SimpleType[23554-23562]"
    }, {
      "left" : "getElementsByAttributeValueNot",
      "right" : "getElementsByAttributeValueNot",
      "info" : "SimpleName[23568-23598]:SimpleName[23563-23593]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[23599-23609]:SingleVariableDeclaration[23594-23604]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[23611-23623]:SingleVariableDeclaration[23606-23618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23625-23721]:Block[23620-23716]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueNot(key, value), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueNot(key, value), this);",
      "info" : "ReturnStatement[23635-23715]:ReturnStatement[23630-23710]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24014-24020]:Modifier[24009-24015]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[24021-24029]:SimpleType[24016-24024]"
    }, {
      "left" : "getElementsByAttributeValueStarting",
      "right" : "getElementsByAttributeValueStarting",
      "info" : "SimpleName[24030-24065]:SimpleName[24025-24060]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[24066-24076]:SingleVariableDeclaration[24061-24071]"
    }, {
      "left" : "String valuePrefix",
      "right" : "String valuePrefix",
      "info" : "SingleVariableDeclaration[24078-24096]:SingleVariableDeclaration[24073-24091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24098-24205]:Block[24093-24200]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
      "info" : "ReturnStatement[24108-24199]:ReturnStatement[24103-24194]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24496-24502]:Modifier[24491-24497]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[24503-24511]:SimpleType[24498-24506]"
    }, {
      "left" : "getElementsByAttributeValueEnding",
      "right" : "getElementsByAttributeValueEnding",
      "info" : "SimpleName[24512-24545]:SimpleName[24507-24540]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[24546-24556]:SingleVariableDeclaration[24541-24551]"
    }, {
      "left" : "String valueSuffix",
      "right" : "String valueSuffix",
      "info" : "SingleVariableDeclaration[24558-24576]:SingleVariableDeclaration[24553-24571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24578-24683]:Block[24573-24678]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
      "info" : "ReturnStatement[24588-24677]:ReturnStatement[24583-24672]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24971-24977]:Modifier[24966-24972]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[24978-24986]:SimpleType[24973-24981]"
    }, {
      "left" : "getElementsByAttributeValueContaining",
      "right" : "getElementsByAttributeValueContaining",
      "info" : "SimpleName[24987-25024]:SimpleName[24982-25019]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[25025-25035]:SingleVariableDeclaration[25020-25030]"
    }, {
      "left" : "String match",
      "right" : "String match",
      "info" : "SingleVariableDeclaration[25037-25049]:SingleVariableDeclaration[25032-25044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25051-25154]:Block[25046-25149]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
      "info" : "ReturnStatement[25061-25148]:ReturnStatement[25056-25143]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25476-25482]:Modifier[25471-25477]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[25483-25491]:SimpleType[25478-25486]"
    }, {
      "left" : "getElementsByAttributeValueMatching",
      "right" : "getElementsByAttributeValueMatching",
      "info" : "SimpleName[25492-25527]:SimpleName[25487-25522]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[25528-25538]:SingleVariableDeclaration[25523-25533]"
    }, {
      "left" : "Pattern pattern",
      "right" : "Pattern pattern",
      "info" : "SingleVariableDeclaration[25540-25555]:SingleVariableDeclaration[25535-25550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25557-25669]:Block[25552-25664]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
      "info" : "ReturnStatement[25567-25654]:ReturnStatement[25562-25649]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26149-26155]:Modifier[26144-26150]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[26156-26164]:SimpleType[26151-26159]"
    }, {
      "left" : "getElementsByAttributeValueMatching",
      "right" : "getElementsByAttributeValueMatching",
      "info" : "SimpleName[26165-26200]:SimpleName[26160-26195]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[26201-26211]:SingleVariableDeclaration[26196-26206]"
    }, {
      "left" : "String regex",
      "right" : "String regex",
      "info" : "SingleVariableDeclaration[26213-26225]:SingleVariableDeclaration[26208-26220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26227-26525]:Block[26222-26520]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[26237-26253]:VariableDeclarationStatement[26232-26248]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[26262-26453]:TryStatement[26257-26448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26266-26323]:Block[26261-26318]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[26280-26313]:ExpressionStatement[26275-26308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26357-26453]:Block[26352-26448]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[26371-26443]:ThrowStatement[26366-26438]"
    }, {
      "left" : "return getElementsByAttributeValueMatching(key, pattern);",
      "right" : "return getElementsByAttributeValueMatching(key, pattern);",
      "info" : "ReturnStatement[26462-26519]:ReturnStatement[26457-26514]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26699-26705]:Modifier[26694-26700]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[26706-26714]:SimpleType[26701-26709]"
    }, {
      "left" : "getElementsByIndexLessThan",
      "right" : "getElementsByIndexLessThan",
      "info" : "SimpleName[26715-26741]:SimpleName[26710-26736]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[26742-26751]:SingleVariableDeclaration[26737-26746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26753-26836]:Block[26748-26831]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexLessThan(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexLessThan(index), this);",
      "info" : "ReturnStatement[26763-26830]:ReturnStatement[26758-26825]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27016-27022]:Modifier[27011-27017]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[27023-27031]:SimpleType[27018-27026]"
    }, {
      "left" : "getElementsByIndexGreaterThan",
      "right" : "getElementsByIndexGreaterThan",
      "info" : "SimpleName[27032-27061]:SimpleName[27027-27056]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[27062-27071]:SingleVariableDeclaration[27057-27066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27073-27159]:Block[27068-27154]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
      "info" : "ReturnStatement[27083-27153]:ReturnStatement[27078-27148]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27331-27337]:Modifier[27326-27332]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[27338-27346]:SimpleType[27333-27341]"
    }, {
      "left" : "getElementsByIndexEquals",
      "right" : "getElementsByIndexEquals",
      "info" : "SimpleName[27347-27371]:SimpleName[27342-27366]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[27372-27381]:SingleVariableDeclaration[27367-27376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27383-27464]:Block[27378-27459]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexEquals(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexEquals(index), this);",
      "info" : "ReturnStatement[27393-27458]:ReturnStatement[27388-27453]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27813-27819]:Modifier[27808-27814]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[27820-27828]:SimpleType[27815-27823]"
    }, {
      "left" : "getElementsContainingText",
      "right" : "getElementsContainingText",
      "info" : "SimpleName[27829-27854]:SimpleName[27824-27849]"
    }, {
      "left" : "String searchText",
      "right" : "String searchText",
      "info" : "SingleVariableDeclaration[27855-27872]:SingleVariableDeclaration[27850-27867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27874-27961]:Block[27869-27956]"
    }, {
      "left" : "return Collector.collect(new Evaluator.ContainsText(searchText), this);",
      "right" : "return Collector.collect(new Evaluator.ContainsText(searchText), this);",
      "info" : "ReturnStatement[27884-27955]:ReturnStatement[27879-27950]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28328-28334]:Modifier[28323-28329]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[28335-28343]:SimpleType[28330-28338]"
    }, {
      "left" : "getElementsContainingOwnText",
      "right" : "getElementsContainingOwnText",
      "info" : "SimpleName[28344-28372]:SimpleName[28339-28367]"
    }, {
      "left" : "String searchText",
      "right" : "String searchText",
      "info" : "SingleVariableDeclaration[28373-28390]:SingleVariableDeclaration[28368-28385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28392-28482]:Block[28387-28477]"
    }, {
      "left" : "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
      "right" : "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
      "info" : "ReturnStatement[28402-28476]:ReturnStatement[28397-28471]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28737-28743]:Modifier[28732-28738]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[28744-28752]:SimpleType[28739-28747]"
    }, {
      "left" : "getElementsMatchingText",
      "right" : "getElementsMatchingText",
      "info" : "SimpleName[28753-28776]:SimpleName[28748-28771]"
    }, {
      "left" : "Pattern pattern",
      "right" : "Pattern pattern",
      "info" : "SingleVariableDeclaration[28777-28792]:SingleVariableDeclaration[28772-28787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28794-28873]:Block[28789-28868]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Matches(pattern), this);",
      "right" : "return Collector.collect(new Evaluator.Matches(pattern), this);",
      "info" : "ReturnStatement[28804-28867]:ReturnStatement[28799-28862]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29295-29301]:Modifier[29290-29296]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[29302-29310]:SimpleType[29297-29305]"
    }, {
      "left" : "getElementsMatchingText",
      "right" : "getElementsMatchingText",
      "info" : "SimpleName[29311-29334]:SimpleName[29306-29329]"
    }, {
      "left" : "String regex",
      "right" : "String regex",
      "info" : "SingleVariableDeclaration[29335-29347]:SingleVariableDeclaration[29330-29342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29349-29630]:Block[29344-29625]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[29359-29375]:VariableDeclarationStatement[29354-29370]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[29384-29575]:TryStatement[29379-29570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29388-29445]:Block[29383-29440]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[29402-29435]:ExpressionStatement[29397-29430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29479-29575]:Block[29474-29570]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[29493-29565]:ThrowStatement[29488-29560]"
    }, {
      "left" : "return getElementsMatchingText(pattern);",
      "right" : "return getElementsMatchingText(pattern);",
      "info" : "ReturnStatement[29584-29624]:ReturnStatement[29579-29619]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29892-29898]:Modifier[29887-29893]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[29899-29907]:SimpleType[29894-29902]"
    }, {
      "left" : "getElementsMatchingOwnText",
      "right" : "getElementsMatchingOwnText",
      "info" : "SimpleName[29908-29934]:SimpleName[29903-29929]"
    }, {
      "left" : "Pattern pattern",
      "right" : "Pattern pattern",
      "info" : "SingleVariableDeclaration[29935-29950]:SingleVariableDeclaration[29930-29945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29952-30034]:Block[29947-30029]"
    }, {
      "left" : "return Collector.collect(new Evaluator.MatchesOwn(pattern), this);",
      "right" : "return Collector.collect(new Evaluator.MatchesOwn(pattern), this);",
      "info" : "ReturnStatement[29962-30028]:ReturnStatement[29957-30023]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30459-30465]:Modifier[30454-30460]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[30466-30474]:SimpleType[30461-30469]"
    }, {
      "left" : "getElementsMatchingOwnText",
      "right" : "getElementsMatchingOwnText",
      "info" : "SimpleName[30475-30501]:SimpleName[30470-30496]"
    }, {
      "left" : "String regex",
      "right" : "String regex",
      "info" : "SingleVariableDeclaration[30502-30514]:SingleVariableDeclaration[30497-30509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30516-30800]:Block[30511-30795]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[30526-30542]:VariableDeclarationStatement[30521-30537]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[30551-30742]:TryStatement[30546-30737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30555-30612]:Block[30550-30607]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[30569-30602]:ExpressionStatement[30564-30597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30646-30742]:Block[30641-30737]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[30660-30732]:ThrowStatement[30655-30727]"
    }, {
      "left" : "return getElementsMatchingOwnText(pattern);",
      "right" : "return getElementsMatchingOwnText(pattern);",
      "info" : "ReturnStatement[30751-30794]:ReturnStatement[30746-30789]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30950-30956]:Modifier[30945-30951]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[30957-30965]:SimpleType[30952-30960]"
    }, {
      "left" : "getAllElements",
      "right" : "getAllElements",
      "info" : "SimpleName[30966-30980]:SimpleName[30961-30975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30983-31059]:Block[30978-31054]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AllElements(), this);",
      "right" : "return Collector.collect(new Evaluator.AllElements(), this);",
      "info" : "ReturnStatement[30993-31053]:ReturnStatement[30988-31048]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31434-31440]:Modifier[31429-31435]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[31441-31447]:SimpleType[31436-31442]"
    }, {
      "left" : "text",
      "right" : "text",
      "info" : "SimpleName[31448-31452]:SimpleName[31443-31447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31455-32294]:Block[31450-32289]"
    }, {
      "left" : "final StringBuilder accum = new StringBuilder();",
      "right" : "final StringBuilder accum = new StringBuilder();",
      "info" : "VariableDeclarationStatement[31465-31513]:VariableDeclarationStatement[31460-31508]"
    }, {
      "left" : "new NodeTraversor(new NodeVisitor() {\n            public void head(Node node, int depth) {\n                if (node instanceof TextNode) {\n                    TextNode textNode = (TextNode) node;\n                    appendNormalisedText(accum, textNode);\n                } else if (node instanceof Element) {\n                    Element element = (Element) node;\n                    if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))\n                        accum.append(\" \");\n                }\n            }\n\n            public void tail(Node node, int depth) {\n            }\n        }).traverse(this);",
      "right" : "new NodeTraversor(new NodeVisitor() {\n            public void head(Node node, int depth) {\n                if (node instanceof TextNode) {\n                    TextNode textNode = (TextNode) node;\n                    appendNormalisedText(accum, textNode);\n                } else if (node instanceof Element) {\n                    Element element = (Element) node;\n                    if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))\n                        accum.append(\" \");\n                }\n            }\n\n            public void tail(Node node, int depth) {\n            }\n        }).traverse(this);",
      "info" : "ExpressionStatement[31522-32248]:ExpressionStatement[31517-32243]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31572-31578]:Modifier[31567-31573]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31579-31583]:PrimitiveType[31574-31578]"
    }, {
      "left" : "head",
      "right" : "head",
      "info" : "SimpleName[31584-31588]:SimpleName[31579-31583]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[31589-31598]:SingleVariableDeclaration[31584-31593]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[31600-31609]:SingleVariableDeclaration[31595-31604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31611-32153]:Block[31606-32148]"
    }, {
      "left" : "if (node instanceof TextNode)",
      "right" : "if (node instanceof TextNode)",
      "info" : "IfStatement[31629-32139]:IfStatement[31624-32134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31659-31794]:Block[31654-31789]"
    }, {
      "left" : "TextNode textNode = (TextNode) node;",
      "right" : "TextNode textNode = (TextNode) node;",
      "info" : "VariableDeclarationStatement[31681-31717]:VariableDeclarationStatement[31676-31712]"
    }, {
      "left" : "appendNormalisedText(accum, textNode);",
      "right" : "appendNormalisedText(accum, textNode);",
      "info" : "ExpressionStatement[31738-31776]:ExpressionStatement[31733-31771]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[31800-32139]:IfStatement[31795-32134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31829-32139]:Block[31824-32134]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[31851-31884]:VariableDeclarationStatement[31846-31879]"
    }, {
      "left" : "if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))",
      "right" : "if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))",
      "info" : "IfStatement[31905-32121]:IfStatement[31900-32116]"
    }, {
      "left" : "accum.append(\" \");",
      "right" : "accum.append(\" \");",
      "info" : "ExpressionStatement[32103-32121]:ExpressionStatement[32098-32116]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32167-32173]:Modifier[32162-32168]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32174-32178]:PrimitiveType[32169-32173]"
    }, {
      "left" : "tail",
      "right" : "tail",
      "info" : "SimpleName[32179-32183]:SimpleName[32174-32178]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[32184-32193]:SingleVariableDeclaration[32179-32188]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[32195-32204]:SingleVariableDeclaration[32190-32199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32206-32221]:Block[32201-32216]"
    }, {
      "left" : "return accum.toString().trim();",
      "right" : "return accum.toString().trim();",
      "info" : "ReturnStatement[32257-32288]:ReturnStatement[32252-32283]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32847-32853]:Modifier[32842-32848]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[32854-32860]:SimpleType[32849-32855]"
    }, {
      "left" : "ownText",
      "right" : "ownText",
      "info" : "SimpleName[32861-32868]:SimpleName[32856-32863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32871-32984]:Block[32866-32979]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[32881-32920]:VariableDeclarationStatement[32876-32915]"
    }, {
      "left" : "ownText(sb);",
      "right" : "ownText(sb);",
      "info" : "ExpressionStatement[32929-32941]:ExpressionStatement[32924-32936]"
    }, {
      "left" : "return sb.toString().trim();",
      "right" : "return sb.toString().trim();",
      "info" : "ReturnStatement[32950-32978]:ReturnStatement[32945-32973]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[32990-32997]:Modifier[32985-32992]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32998-33002]:PrimitiveType[32993-32997]"
    }, {
      "left" : "ownText",
      "right" : "ownText",
      "info" : "SimpleName[33003-33010]:SimpleName[32998-33005]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[33011-33030]:SingleVariableDeclaration[33006-33025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33032-33370]:Block[33027-33365]"
    }, {
      "left" : "for (Node child : childNodes)",
      "right" : "for (Node child : childNodes)",
      "info" : "EnhancedForStatement[33042-33364]:EnhancedForStatement[33037-33359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33072-33364]:Block[33067-33359]"
    }, {
      "left" : "if (child instanceof TextNode)",
      "right" : "if (child instanceof TextNode)",
      "info" : "IfStatement[33086-33354]:IfStatement[33081-33349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33117-33241]:Block[33112-33236]"
    }, {
      "left" : "TextNode textNode = (TextNode) child;",
      "right" : "TextNode textNode = (TextNode) child;",
      "info" : "VariableDeclarationStatement[33135-33172]:VariableDeclarationStatement[33130-33167]"
    }, {
      "left" : "appendNormalisedText(accum, textNode);",
      "right" : "appendNormalisedText(accum, textNode);",
      "info" : "ExpressionStatement[33189-33227]:ExpressionStatement[33184-33222]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[33247-33354]:IfStatement[33242-33349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33277-33354]:Block[33272-33349]"
    }, {
      "left" : "appendWhitespaceIfBr((Element) child, accum);",
      "right" : "appendWhitespaceIfBr((Element) child, accum);",
      "info" : "ExpressionStatement[33295-33340]:ExpressionStatement[33290-33335]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[33376-33383]:Modifier[33371-33378]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33384-33390]:Modifier[33379-33385]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33391-33395]:PrimitiveType[33386-33390]"
    }, {
      "left" : "appendNormalisedText",
      "right" : "appendNormalisedText",
      "info" : "SimpleName[33396-33416]:SimpleName[33391-33411]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[33417-33436]:SingleVariableDeclaration[33412-33431]"
    }, {
      "left" : "TextNode textNode",
      "right" : "TextNode textNode",
      "info" : "SingleVariableDeclaration[33438-33455]:SingleVariableDeclaration[33433-33450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33457-33712]:Block[33452-33707]"
    }, {
      "left" : "String text = textNode.getWholeText();",
      "right" : "String text = textNode.getWholeText();",
      "info" : "VariableDeclarationStatement[33467-33505]:VariableDeclarationStatement[33462-33500]"
    }, {
      "left" : "if (preserveWhitespace(textNode.parentNode))",
      "right" : "if (preserveWhitespace(textNode.parentNode))",
      "info" : "IfStatement[33515-33706]:IfStatement[33510-33701]"
    }, {
      "left" : "accum.append(text);",
      "right" : "accum.append(text);",
      "info" : "ExpressionStatement[33572-33591]:ExpressionStatement[33567-33586]"
    }, {
      "left" : "StringUtil.appendNormalisedWhitespace(accum, text, TextNode.lastCharIsWhitespace(accum));",
      "right" : "StringUtil.appendNormalisedWhitespace(accum, text, TextNode.lastCharIsWhitespace(accum));",
      "info" : "ExpressionStatement[33617-33706]:ExpressionStatement[33612-33701]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[33718-33725]:Modifier[33713-33720]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33726-33732]:Modifier[33721-33727]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33733-33737]:PrimitiveType[33728-33732]"
    }, {
      "left" : "appendWhitespaceIfBr",
      "right" : "appendWhitespaceIfBr",
      "info" : "SimpleName[33738-33758]:SimpleName[33733-33753]"
    }, {
      "left" : "Element element",
      "right" : "Element element",
      "info" : "SingleVariableDeclaration[33759-33774]:SingleVariableDeclaration[33754-33769]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[33776-33795]:SingleVariableDeclaration[33771-33790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33797-33924]:Block[33792-33919]"
    }, {
      "left" : "if (element.tag.getName().equals(\"br\") && !TextNode.lastCharIsWhitespace(accum))",
      "right" : "if (element.tag.getName().equals(\"br\") && !TextNode.lastCharIsWhitespace(accum))",
      "info" : "IfStatement[33807-33918]:IfStatement[33802-33913]"
    }, {
      "left" : "accum.append(\" \");",
      "right" : "accum.append(\" \");",
      "info" : "ExpressionStatement[33900-33918]:ExpressionStatement[33895-33913]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33930-33936]:Modifier[33925-33931]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[33937-33944]:PrimitiveType[33932-33939]"
    }, {
      "left" : "preserveWhitespace",
      "right" : "preserveWhitespace",
      "info" : "SimpleName[33945-33963]:SimpleName[33940-33958]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[33964-33973]:SingleVariableDeclaration[33959-33968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33975-34360]:Block[33970-34355]"
    }, {
      "left" : "if (node != null && node instanceof Element)",
      "right" : "if (node != null && node instanceof Element)",
      "info" : "IfStatement[34088-34332]:IfStatement[34083-34327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34133-34332]:Block[34128-34327]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[34147-34180]:VariableDeclarationStatement[34142-34175]"
    }, {
      "left" : "return element.tag.preserveWhitespace() ||\n                element.parent() != null && element.parent().tag.preserveWhitespace();",
      "right" : "return element.tag.preserveWhitespace() ||\n                element.parent() != null && element.parent().tag.preserveWhitespace();",
      "info" : "ReturnStatement[34193-34322]:ReturnStatement[34188-34317]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[34341-34354]:ReturnStatement[34336-34349]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34538-34544]:Modifier[34533-34539]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[34545-34552]:SimpleType[34540-34547]"
    }, {
      "left" : "text",
      "right" : "text",
      "info" : "SimpleName[34553-34557]:SimpleName[34548-34552]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[34558-34569]:SingleVariableDeclaration[34553-34564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34571-34738]:Block[34566-34733]"
    }, {
      "left" : "Validate.notNull(text);",
      "right" : "Validate.notNull(text);",
      "info" : "ExpressionStatement[34581-34604]:ExpressionStatement[34576-34599]"
    }, {
      "left" : "empty();",
      "right" : "empty();",
      "info" : "ExpressionStatement[34614-34622]:ExpressionStatement[34609-34617]"
    }, {
      "left" : "TextNode textNode = new TextNode(text, baseUri);",
      "right" : "TextNode textNode = new TextNode(text, baseUri);",
      "info" : "VariableDeclarationStatement[34631-34679]:VariableDeclarationStatement[34626-34674]"
    }, {
      "left" : "appendChild(textNode);",
      "right" : "appendChild(textNode);",
      "info" : "ExpressionStatement[34688-34710]:ExpressionStatement[34683-34705]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[34720-34732]:ReturnStatement[34715-34727]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34895-34901]:Modifier[34890-34896]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[34902-34909]:PrimitiveType[34897-34904]"
    }, {
      "left" : "hasText",
      "right" : "hasText",
      "info" : "SimpleName[34910-34917]:SimpleName[34905-34912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34920-35349]:Block[34915-35344]"
    }, {
      "left" : "for (Node child: childNodes)",
      "right" : "for (Node child: childNodes)",
      "info" : "EnhancedForStatement[34930-35321]:EnhancedForStatement[34925-35316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34959-35321]:Block[34954-35316]"
    }, {
      "left" : "if (child instanceof TextNode)",
      "right" : "if (child instanceof TextNode)",
      "info" : "IfStatement[34973-35311]:IfStatement[34968-35306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35004-35147]:Block[34999-35142]"
    }, {
      "left" : "TextNode textNode = (TextNode) child;",
      "right" : "TextNode textNode = (TextNode) child;",
      "info" : "VariableDeclarationStatement[35022-35059]:VariableDeclarationStatement[35017-35054]"
    }, {
      "left" : "if (!textNode.isBlank())",
      "right" : "if (!textNode.isBlank())",
      "info" : "IfStatement[35076-35133]:IfStatement[35071-35128]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[35121-35133]:ReturnStatement[35116-35128]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[35153-35311]:IfStatement[35148-35306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35183-35311]:Block[35178-35306]"
    }, {
      "left" : "Element el = (Element) child;",
      "right" : "Element el = (Element) child;",
      "info" : "VariableDeclarationStatement[35201-35230]:VariableDeclarationStatement[35196-35225]"
    }, {
      "left" : "if (el.hasText())",
      "right" : "if (el.hasText())",
      "info" : "IfStatement[35247-35297]:IfStatement[35242-35292]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[35285-35297]:ReturnStatement[35280-35292]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35330-35343]:ReturnStatement[35325-35338]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35547-35553]:Modifier[35542-35548]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[35554-35560]:SimpleType[35549-35555]"
    }, {
      "left" : "data",
      "right" : "data",
      "info" : "SimpleName[35561-35565]:SimpleName[35556-35560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35568-36076]:Block[35563-36071]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[35578-35617]:VariableDeclarationStatement[35573-35612]"
    }, {
      "left" : "for (Node childNode : childNodes)",
      "right" : "for (Node childNode : childNodes)",
      "info" : "EnhancedForStatement[35627-36040]:EnhancedForStatement[35622-36035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35661-36040]:Block[35656-36035]"
    }, {
      "left" : "if (childNode instanceof DataNode)",
      "right" : "if (childNode instanceof DataNode)",
      "info" : "IfStatement[35675-36030]:IfStatement[35670-36025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35710-35827]:Block[35705-35822]"
    }, {
      "left" : "DataNode data = (DataNode) childNode;",
      "right" : "DataNode data = (DataNode) childNode;",
      "info" : "VariableDeclarationStatement[35728-35765]:VariableDeclarationStatement[35723-35760]"
    }, {
      "left" : "sb.append(data.getWholeData());",
      "right" : "sb.append(data.getWholeData());",
      "info" : "ExpressionStatement[35782-35813]:ExpressionStatement[35777-35808]"
    }, {
      "left" : "if (childNode instanceof Element)",
      "right" : "if (childNode instanceof Element)",
      "info" : "IfStatement[35833-36030]:IfStatement[35828-36025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35867-36030]:Block[35862-36025]"
    }, {
      "left" : "Element element = (Element) childNode;",
      "right" : "Element element = (Element) childNode;",
      "info" : "VariableDeclarationStatement[35885-35923]:VariableDeclarationStatement[35880-35918]"
    }, {
      "left" : "String elementData = element.data();",
      "right" : "String elementData = element.data();",
      "info" : "VariableDeclarationStatement[35940-35976]:VariableDeclarationStatement[35935-35971]"
    }, {
      "left" : "sb.append(elementData);",
      "right" : "sb.append(elementData);",
      "info" : "ExpressionStatement[35993-36016]:ExpressionStatement[35988-36011]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[36049-36070]:ReturnStatement[36044-36065]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36417-36423]:Modifier[36412-36418]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[36424-36430]:SimpleType[36419-36425]"
    }, {
      "left" : "className",
      "right" : "className",
      "info" : "SimpleName[36431-36440]:SimpleName[36426-36435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36443-36487]:Block[36438-36482]"
    }, {
      "left" : "return attr(\"class\").trim();",
      "right" : "return attr(\"class\").trim();",
      "info" : "ReturnStatement[36453-36481]:ReturnStatement[36448-36476]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36895-36901]:Modifier[36890-36896]"
    }, {
      "left" : "Set<String>",
      "right" : "Set<String>",
      "info" : "ParameterizedType[36902-36913]:ParameterizedType[36897-36908]"
    }, {
      "left" : "classNames",
      "right" : "classNames",
      "info" : "SimpleName[36914-36924]:SimpleName[36909-36919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36927-37181]:Block[36922-37176]"
    }, {
      "left" : "String[] names = classSplit.split(className());",
      "right" : "String[] names = classSplit.split(className());",
      "info" : "VariableDeclarationStatement[36934-36981]:VariableDeclarationStatement[36929-36976]"
    }, {
      "left" : "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
      "right" : "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
      "info" : "VariableDeclarationStatement[36987-37060]:VariableDeclarationStatement[36982-37055]"
    }, {
      "left" : "classNames.remove(\"\");",
      "right" : "classNames.remove(\"\");",
      "info" : "ExpressionStatement[37066-37088]:ExpressionStatement[37061-37083]"
    }, {
      "left" : "return classNames;",
      "right" : "return classNames;",
      "info" : "ReturnStatement[37157-37175]:ReturnStatement[37152-37170]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37357-37363]:Modifier[37352-37358]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[37364-37371]:SimpleType[37359-37366]"
    }, {
      "left" : "classNames",
      "right" : "classNames",
      "info" : "SimpleName[37372-37382]:SimpleName[37367-37377]"
    }, {
      "left" : "Set<String> classNames",
      "right" : "Set<String> classNames",
      "info" : "SingleVariableDeclaration[37383-37405]:SingleVariableDeclaration[37378-37400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37407-37540]:Block[37402-37535]"
    }, {
      "left" : "Validate.notNull(classNames);",
      "right" : "Validate.notNull(classNames);",
      "info" : "ExpressionStatement[37417-37446]:ExpressionStatement[37412-37441]"
    }, {
      "left" : "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
      "right" : "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
      "info" : "ExpressionStatement[37455-37513]:ExpressionStatement[37450-37508]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[37522-37534]:ReturnStatement[37517-37529]"
    }, {
      "left" : "/*\n    Used by common .class selector, so perf tweaked to reduce object creation vs hitting classnames().\n\n    Wiki: 71, 13 (5.4x)\n    CNN: 227, 91 (2.5x)\n    Alterslash: 59, 4 (14.8x)\n    Jsoup: 14, 1 (14x)\n    */",
      "right" : "/*\n    Used by common .class selector, so perf tweaked to reduce object creation vs hitting classnames().\n\n    Wiki: 71, 13 (5.4x)\n    CNN: 227, 91 (2.5x)\n    Alterslash: 59, 4 (14.8x)\n    Jsoup: 14, 1 (14x)\n    */",
      "info" : "BlockComment[37718-37932]:BlockComment[37713-37927]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37937-37943]:Modifier[37932-37938]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[37944-37951]:PrimitiveType[37939-37946]"
    }, {
      "left" : "hasClass",
      "right" : "hasClass",
      "info" : "SimpleName[37952-37960]:SimpleName[37947-37955]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[37961-37977]:SingleVariableDeclaration[37956-37972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37979-38354]:Block[37974-38349]"
    }, {
      "left" : "String classAttr = attributes.get(\"class\");",
      "right" : "String classAttr = attributes.get(\"class\");",
      "info" : "VariableDeclarationStatement[37989-38032]:VariableDeclarationStatement[37984-38027]"
    }, {
      "left" : "if (classAttr.equals(\"\") || classAttr.length() < className.length())",
      "right" : "if (classAttr.equals(\"\") || classAttr.length() < className.length())",
      "info" : "IfStatement[38041-38135]:IfStatement[38036-38130]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[38122-38135]:ReturnStatement[38117-38130]"
    }, {
      "left" : "final String[] classes = classSplit.split(classAttr);",
      "right" : "final String[] classes = classSplit.split(classAttr);",
      "info" : "VariableDeclarationStatement[38145-38198]:VariableDeclarationStatement[38140-38193]"
    }, {
      "left" : "for (String name : classes)",
      "right" : "for (String name : classes)",
      "info" : "EnhancedForStatement[38207-38325]:EnhancedForStatement[38202-38320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38235-38325]:Block[38230-38320]"
    }, {
      "left" : "if (className.equalsIgnoreCase(name))",
      "right" : "if (className.equalsIgnoreCase(name))",
      "info" : "IfStatement[38249-38315]:IfStatement[38244-38310]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[38303-38315]:ReturnStatement[38298-38310]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[38335-38348]:ReturnStatement[38330-38343]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38507-38513]:Modifier[38502-38508]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[38514-38521]:SimpleType[38509-38516]"
    }, {
      "left" : "addClass",
      "right" : "addClass",
      "info" : "SimpleName[38522-38530]:SimpleName[38517-38525]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[38531-38547]:SingleVariableDeclaration[38526-38542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38549-38721]:Block[38544-38716]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[38559-38587]:ExpressionStatement[38554-38582]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[38597-38632]:VariableDeclarationStatement[38592-38627]"
    }, {
      "left" : "classes.add(className);",
      "right" : "classes.add(className);",
      "info" : "ExpressionStatement[38641-38664]:ExpressionStatement[38636-38659]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[38673-38693]:ExpressionStatement[38668-38688]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[38703-38715]:ReturnStatement[38698-38710]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38882-38888]:Modifier[38877-38883]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[38889-38896]:SimpleType[38884-38891]"
    }, {
      "left" : "removeClass",
      "right" : "removeClass",
      "info" : "SimpleName[38897-38908]:SimpleName[38892-38903]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[38909-38925]:SingleVariableDeclaration[38904-38920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38927-39102]:Block[38922-39097]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[38937-38965]:ExpressionStatement[38932-38960]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[38975-39010]:VariableDeclarationStatement[38970-39005]"
    }, {
      "left" : "classes.remove(className);",
      "right" : "classes.remove(className);",
      "info" : "ExpressionStatement[39019-39045]:ExpressionStatement[39014-39040]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[39054-39074]:ExpressionStatement[39049-39069]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39084-39096]:ReturnStatement[39079-39091]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39302-39308]:Modifier[39297-39303]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[39309-39316]:SimpleType[39304-39311]"
    }, {
      "left" : "toggleClass",
      "right" : "toggleClass",
      "info" : "SimpleName[39317-39328]:SimpleName[39312-39323]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[39329-39345]:SingleVariableDeclaration[39324-39340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39347-39616]:Block[39342-39611]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[39357-39385]:ExpressionStatement[39352-39380]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[39395-39430]:VariableDeclarationStatement[39390-39425]"
    }, {
      "left" : "if (classes.contains(className))",
      "right" : "if (classes.contains(className))",
      "info" : "IfStatement[39439-39559]:IfStatement[39434-39554]"
    }, {
      "left" : "classes.remove(className);",
      "right" : "classes.remove(className);",
      "info" : "ExpressionStatement[39484-39510]:ExpressionStatement[39479-39505]"
    }, {
      "left" : "classes.add(className);",
      "right" : "classes.add(className);",
      "info" : "ExpressionStatement[39536-39559]:ExpressionStatement[39531-39554]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[39568-39588]:ExpressionStatement[39563-39583]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39598-39610]:ReturnStatement[39593-39605]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39779-39785]:Modifier[39774-39780]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39786-39792]:SimpleType[39781-39787]"
    }, {
      "left" : "val",
      "right" : "val",
      "info" : "SimpleName[39793-39796]:SimpleName[39788-39791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39799-39922]:Block[39794-39917]"
    }, {
      "left" : "if (tagName().equals(\"textarea\"))",
      "right" : "if (tagName().equals(\"textarea\"))",
      "info" : "IfStatement[39809-39916]:IfStatement[39804-39911]"
    }, {
      "left" : "return text();",
      "right" : "return text();",
      "info" : "ReturnStatement[39855-39869]:ReturnStatement[39850-39864]"
    }, {
      "left" : "return attr(\"value\");",
      "right" : "return attr(\"value\");",
      "info" : "ReturnStatement[39895-39916]:ReturnStatement[39890-39911]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40087-40093]:Modifier[40082-40088]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[40094-40101]:SimpleType[40089-40096]"
    }, {
      "left" : "val",
      "right" : "val",
      "info" : "SimpleName[40102-40105]:SimpleName[40097-40100]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[40106-40118]:SingleVariableDeclaration[40101-40113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40120-40262]:Block[40115-40257]"
    }, {
      "left" : "if (tagName().equals(\"textarea\"))",
      "right" : "if (tagName().equals(\"textarea\"))",
      "info" : "IfStatement[40130-40235]:IfStatement[40125-40230]"
    }, {
      "left" : "text(value);",
      "right" : "text(value);",
      "info" : "ExpressionStatement[40176-40188]:ExpressionStatement[40171-40183]"
    }, {
      "left" : "attr(\"value\", value);",
      "right" : "attr(\"value\", value);",
      "info" : "ExpressionStatement[40214-40235]:ExpressionStatement[40209-40230]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[40244-40256]:ReturnStatement[40239-40251]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40268-40272]:PrimitiveType[40263-40267]"
    }, {
      "left" : "outerHtmlHead",
      "right" : "outerHtmlHead",
      "info" : "SimpleName[40273-40286]:SimpleName[40268-40281]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[40287-40306]:SingleVariableDeclaration[40282-40301]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[40308-40317]:SingleVariableDeclaration[40303-40312]"
    }, {
      "left" : "Document.OutputSettings out",
      "right" : "Document.OutputSettings out",
      "info" : "SingleVariableDeclaration[40319-40346]:SingleVariableDeclaration[40314-40341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40348-41073]:Block[40343-41068]"
    }, {
      "left" : "if (accum.length() > 0 && out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline()))",
      "right" : "if (accum.length() > 0 && out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline()))",
      "info" : "IfStatement[40358-40540]:IfStatement[40353-40535]"
    }, {
      "left" : "indent(accum, depth, out);",
      "right" : "indent(accum, depth, out);",
      "info" : "ExpressionStatement[40514-40540]:ExpressionStatement[40509-40535]"
    }, {
      "left" : "accum\n                .append(\"<\")\n                .append(tagName());",
      "right" : "accum\n                .append(\"<\")\n                .append(tagName());",
      "info" : "ExpressionStatement[40549-40619]:ExpressionStatement[40544-40614]"
    }, {
      "left" : "attributes.html(accum, out);",
      "right" : "attributes.html(accum, out);",
      "info" : "ExpressionStatement[40628-40656]:ExpressionStatement[40623-40651]"
    }, {
      "left" : "if (childNodes.isEmpty() && tag.isSelfClosing())",
      "right" : "if (childNodes.isEmpty() && tag.isSelfClosing())",
      "info" : "IfStatement[40755-41067]:IfStatement[40750-41062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40804-41023]:Block[40799-41018]"
    }, {
      "left" : "if (out.syntax() == Document.OutputSettings.Syntax.html && tag.isEmpty())",
      "right" : "if (out.syntax() == Document.OutputSettings.Syntax.html && tag.isEmpty())",
      "info" : "IfStatement[40818-40980]:IfStatement[40813-40975]"
    }, {
      "left" : "accum.append('>');",
      "right" : "accum.append('>');",
      "info" : "ExpressionStatement[40908-40926]:ExpressionStatement[40903-40921]"
    }, {
      "left" : "accum.append(\" />\");",
      "right" : "accum.append(\" />\");",
      "info" : "ExpressionStatement[40960-40980]:ExpressionStatement[40955-40975]"
    }, {
      "left" : "accum.append(\">\");",
      "right" : "accum.append(\">\");",
      "info" : "ExpressionStatement[41049-41067]:ExpressionStatement[41044-41062]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[41079-41083]:PrimitiveType[41074-41078]"
    }, {
      "left" : "outerHtmlTail",
      "right" : "outerHtmlTail",
      "info" : "SimpleName[41084-41097]:SimpleName[41079-41092]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[41098-41117]:SingleVariableDeclaration[41093-41112]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[41119-41128]:SingleVariableDeclaration[41114-41123]"
    }, {
      "left" : "Document.OutputSettings out",
      "right" : "Document.OutputSettings out",
      "info" : "SingleVariableDeclaration[41130-41157]:SingleVariableDeclaration[41125-41152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41159-41578]:Block[41154-41573]"
    }, {
      "left" : "if (!(childNodes.isEmpty() && tag.isSelfClosing()))",
      "right" : "if (!(childNodes.isEmpty() && tag.isSelfClosing()))",
      "info" : "IfStatement[41169-41572]:IfStatement[41164-41567]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41221-41572]:Block[41216-41567]"
    }, {
      "left" : "if (out.prettyPrint() && (!childNodes.isEmpty() && (\n                    tag.formatAsBlock() || (out.outline() && (childNodes.size()>1 || (childNodes.size()==1 && !(childNodes.get(0) instanceof TextNode))))\n            )))",
      "right" : "if (out.prettyPrint() && (!childNodes.isEmpty() && (\n                    tag.formatAsBlock() || (out.outline() && (childNodes.size()>1 || (childNodes.size()==1 && !(childNodes.get(0) instanceof TextNode))))\n            )))",
      "info" : "IfStatement[41235-41500]:IfStatement[41230-41495]"
    }, {
      "left" : "indent(accum, depth, out);",
      "right" : "indent(accum, depth, out);",
      "info" : "ExpressionStatement[41474-41500]:ExpressionStatement[41469-41495]"
    }, {
      "left" : "accum.append(\"</\").append(tagName()).append(\">\");",
      "right" : "accum.append(\"</\").append(tagName()).append(\">\");",
      "info" : "ExpressionStatement[41513-41562]:ExpressionStatement[41508-41557]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41868-41874]:Modifier[41863-41869]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41875-41881]:SimpleType[41870-41876]"
    }, {
      "left" : "html",
      "right" : "html",
      "info" : "SimpleName[41882-41886]:SimpleName[41877-41881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41889-42063]:Block[41884-42058]"
    }, {
      "left" : "StringBuilder accum = new StringBuilder();",
      "right" : "StringBuilder accum = new StringBuilder();",
      "info" : "VariableDeclarationStatement[41899-41941]:VariableDeclarationStatement[41894-41936]"
    }, {
      "left" : "html(accum);",
      "right" : "html(accum);",
      "info" : "ExpressionStatement[41950-41962]:ExpressionStatement[41945-41957]"
    }, {
      "left" : "return getOutputSettings().prettyPrint() ? accum.toString().trim() : accum.toString();",
      "right" : "return getOutputSettings().prettyPrint() ? accum.toString().trim() : accum.toString();",
      "info" : "ReturnStatement[41971-42057]:ReturnStatement[41966-42052]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[42069-42076]:Modifier[42064-42071]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[42077-42081]:PrimitiveType[42072-42076]"
    }, {
      "left" : "html",
      "right" : "html",
      "info" : "SimpleName[42082-42086]:SimpleName[42077-42081]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[42087-42106]:SingleVariableDeclaration[42082-42101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42108-42187]:Block[42103-42182]"
    }, {
      "left" : "for (Node node : childNodes)\n            node.outerHtml(accum);",
      "right" : "for (Node node : childNodes)\n            node.outerHtml(accum);",
      "info" : "EnhancedForStatement[42118-42181]:EnhancedForStatement[42113-42176]"
    }, {
      "left" : "node.outerHtml(accum);",
      "right" : "node.outerHtml(accum);",
      "info" : "ExpressionStatement[42159-42181]:ExpressionStatement[42154-42176]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42398-42404]:Modifier[42393-42399]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[42405-42412]:SimpleType[42400-42407]"
    }, {
      "left" : "html",
      "right" : "html",
      "info" : "SimpleName[42413-42417]:SimpleName[42408-42412]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[42418-42429]:SingleVariableDeclaration[42413-42424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42431-42498]:Block[42426-42493]"
    }, {
      "left" : "empty();",
      "right" : "empty();",
      "info" : "ExpressionStatement[42441-42449]:ExpressionStatement[42436-42444]"
    }, {
      "left" : "append(html);",
      "right" : "append(html);",
      "info" : "ExpressionStatement[42458-42471]:ExpressionStatement[42453-42466]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[42480-42492]:ReturnStatement[42475-42487]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42504-42510]:Modifier[42499-42505]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42511-42517]:SimpleType[42506-42512]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[42518-42526]:SimpleName[42513-42521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42529-42564]:Block[42524-42559]"
    }, {
      "left" : "return outerHtml();",
      "right" : "return outerHtml();",
      "info" : "ReturnStatement[42539-42558]:ReturnStatement[42534-42553]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42570-42579]:MarkerAnnotation[42565-42574]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42584-42590]:Modifier[42579-42585]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[42591-42598]:PrimitiveType[42586-42593]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[42599-42605]:SimpleName[42594-42600]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[42606-42614]:SingleVariableDeclaration[42601-42609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42616-42851]:Block[42611-42846]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[42626-42653]:IfStatement[42621-42648]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[42641-42653]:ReturnStatement[42636-42648]"
    }, {
      "left" : "if (o == null || getClass() != o.getClass())",
      "right" : "if (o == null || getClass() != o.getClass())",
      "info" : "IfStatement[42662-42720]:IfStatement[42657-42715]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[42707-42720]:ReturnStatement[42702-42715]"
    }, {
      "left" : "if (!super.equals(o))",
      "right" : "if (!super.equals(o))",
      "info" : "IfStatement[42729-42764]:IfStatement[42724-42759]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[42751-42764]:ReturnStatement[42746-42759]"
    }, {
      "left" : "Element element = (Element) o;",
      "right" : "Element element = (Element) o;",
      "info" : "VariableDeclarationStatement[42774-42804]:VariableDeclarationStatement[42769-42799]"
    }, {
      "left" : "return tag.equals(element.tag);",
      "right" : "return tag.equals(element.tag);",
      "info" : "ReturnStatement[42814-42845]:ReturnStatement[42809-42840]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42857-42866]:MarkerAnnotation[42852-42861]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42871-42877]:Modifier[42866-42872]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[42878-42881]:PrimitiveType[42873-42876]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[42882-42890]:SimpleName[42877-42885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42893-43029]:Block[42888-43024]"
    }, {
      "left" : "int result = super.hashCode();",
      "right" : "int result = super.hashCode();",
      "info" : "VariableDeclarationStatement[42903-42933]:VariableDeclarationStatement[42898-42928]"
    }, {
      "left" : "result = 31 * result + (tag != null ? tag.hashCode() : 0);",
      "right" : "result = 31 * result + (tag != null ? tag.hashCode() : 0);",
      "info" : "ExpressionStatement[42942-43000]:ExpressionStatement[42937-42995]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[43009-43023]:ReturnStatement[43004-43018]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43035-43044]:MarkerAnnotation[43030-43039]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43049-43055]:Modifier[43044-43050]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[43056-43063]:SimpleType[43051-43058]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[43064-43069]:SimpleName[43059-43064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43072-43119]:Block[43067-43114]"
    }, {
      "left" : "return (Element) super.clone();",
      "right" : "return (Element) super.clone();",
      "info" : "ReturnStatement[43082-43113]:ReturnStatement[43077-43108]"
    } ]
  },
  "interFileMappings" : { }
}