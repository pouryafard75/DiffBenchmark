{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TypeConstrainedMappingJackson2HttpMessageConverterUnitTest",
      "right" : "TypeConstrainedMappingJackson2HttpMessageConverterUnitTest",
      "info" : "TypeDeclaration[1040-2743]:TypeDeclaration[985-2677]"
    }, {
      "left" : "public void rejectsNullType()",
      "right" : "public void rejectsNullType()",
      "info" : "MethodDeclaration[1231-1403]:MethodDeclaration[1176-1348]"
    }, {
      "left" : "public void canReadTypeIfAssignableToConfiguredType()",
      "right" : "public void canReadTypeIfAssignableToConfiguredType()",
      "info" : "MethodDeclaration[1406-1891]:MethodDeclaration[1351-1738]"
    }, {
      "left" : "public void canWriteTypeIfAssignableToConfiguredType()",
      "right" : "public void canWriteTypeIfAssignableToConfiguredType()",
      "info" : "MethodDeclaration[1894-2383]:MethodDeclaration[1741-2132]"
    }, {
      "left" : "public void doesNotSupportAnythingButTheConfiguredClassForCanReadWithContextClass()",
      "right" : "private static void assertCanRead(GenericHttpMessageConverter<Object> converter, Class<?> type, boolean expected)",
      "info" : "MethodDeclaration[2386-2741]:MethodDeclaration[2135-2402]"
    } ],
    "mappings" : [
 {
      "left" : "org.junit.Test",
      "right" : "org.springframework.http.MediaType",
      "info" : "QualifiedName[748-762]:QualifiedName[754-788]"
    }, {
      "left" : "org.springframework.hateoas.Resource",
      "right" : "org.junit.Test",
      "info" : "QualifiedName[771-807]:QualifiedName[800-814]"
    }, {
      "left" : "org.springframework.hateoas.ResourceSupport",
      "right" : "org.springframework.hateoas.Resource",
      "info" : "QualifiedName[816-859]:QualifiedName[823-859]"
    }, {
      "left" : "org.springframework.http.MediaType",
      "right" : "org.springframework.hateoas.ResourceSupport",
      "info" : "QualifiedName[868-902]:QualifiedName[868-911]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1155-1161]:Modifier[1100-1106]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1162-1167]:TYPE_DECLARATION_KIND[1107-1112]"
    }, {
      "left" : "TypeConstrainedMappingJackson2HttpMessageConverterUnitTest",
      "right" : "TypeConstrainedMappingJackson2HttpMessageConverterUnitTest",
      "info" : "SimpleName[1168-1226]:SimpleName[1113-1171]"
    }, {
      "left" : "@Test(expected = IllegalArgumentException.class)",
      "right" : "@Test(expected = IllegalArgumentException.class)",
      "info" : "NormalAnnotation[1255-1303]:NormalAnnotation[1200-1248]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1305-1311]:Modifier[1250-1256]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1312-1316]:PrimitiveType[1257-1261]"
    }, {
      "left" : "rejectsNullType",
      "right" : "rejectsNullType",
      "info" : "SimpleName[1317-1332]:SimpleName[1262-1277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1335-1403]:Block[1280-1348]"
    }, {
      "left" : "new TypeConstrainedMappingJackson2HttpMessageConverter(null);",
      "right" : "new TypeConstrainedMappingJackson2HttpMessageConverter(null);",
      "info" : "ExpressionStatement[1339-1400]:ExpressionStatement[1284-1345]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[1430-1435]:MarkerAnnotation[1381-1386]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1437-1443]:Modifier[1388-1394]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1444-1448]:PrimitiveType[1395-1399]"
    }, {
      "left" : "canReadTypeIfAssignableToConfiguredType",
      "right" : "canReadTypeIfAssignableToConfiguredType",
      "info" : "SimpleName[1449-1488]:SimpleName[1400-1439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1491-1891]:Block[1442-1738]"
    }, {
      "left" : "HttpMessageConverter",
      "right" : "GenericHttpMessageConverter",
      "info" : "SimpleName[1496-1516]:SimpleName[1447-1474]"
    }, {
      "left" : "HttpMessageConverter<Object> converter = new TypeConstrainedMappingJackson2HttpMessageConverter(\n\t\t\t\tResourceSupport.class);",
      "right" : "GenericHttpMessageConverter<Object> converter = new TypeConstrainedMappingJackson2HttpMessageConverter(\n\t\t\t\tResourceSupport.class);",
      "info" : "VariableDeclarationStatement[1496-1620]:VariableDeclarationStatement[1447-1578]"
    }, {
      "left" : "assertThat(converter.canRead(Object.class, MediaType.APPLICATION_JSON), is(false));",
      "right" : "assertCanRead(converter, Object.class, false);",
      "info" : "ExpressionStatement[1624-1707]:ExpressionStatement[1582-1628]"
    }, {
      "left" : "converter",
      "right" : "assertCanRead",
      "info" : "SimpleName[1635-1644]:SimpleName[1582-1595]"
    }, {
      "left" : "converter.canRead(Object.class, MediaType.APPLICATION_JSON)",
      "right" : "assertCanRead(converter, Object.class, false)",
      "info" : "MethodInvocation[1635-1694]:MethodInvocation[1582-1627]"
    }, {
      "left" : "canRead",
      "right" : "converter",
      "info" : "SimpleName[1645-1652]:SimpleName[1596-1605]"
    }, {
      "left" : "Object.class",
      "right" : "Object.class",
      "info" : "TypeLiteral[1653-1665]:TypeLiteral[1607-1619]"
    }, {
      "left" : "assertThat(converter.canRead(ResourceSupport.class, MediaType.APPLICATION_JSON), is(true));",
      "right" : "assertCanRead(converter, ResourceSupport.class, true);",
      "info" : "ExpressionStatement[1710-1801]:ExpressionStatement[1631-1685]"
    }, {
      "left" : "converter",
      "right" : "assertCanRead",
      "info" : "SimpleName[1721-1730]:SimpleName[1631-1644]"
    }, {
      "left" : "converter.canRead(ResourceSupport.class, MediaType.APPLICATION_JSON)",
      "right" : "assertCanRead(converter, ResourceSupport.class, true)",
      "info" : "MethodInvocation[1721-1789]:MethodInvocation[1631-1684]"
    }, {
      "left" : "canRead",
      "right" : "converter",
      "info" : "SimpleName[1731-1738]:SimpleName[1645-1654]"
    }, {
      "left" : "ResourceSupport.class",
      "right" : "ResourceSupport.class",
      "info" : "TypeLiteral[1739-1760]:TypeLiteral[1656-1677]"
    }, {
      "left" : "assertThat(converter.canRead(Resource.class, MediaType.APPLICATION_JSON), is(true));",
      "right" : "assertCanRead(converter, Resource.class, true);",
      "info" : "ExpressionStatement[1804-1888]:ExpressionStatement[1688-1735]"
    }, {
      "left" : "converter",
      "right" : "assertCanRead",
      "info" : "SimpleName[1815-1824]:SimpleName[1688-1701]"
    }, {
      "left" : "converter.canRead(Resource.class, MediaType.APPLICATION_JSON)",
      "right" : "assertCanRead(converter, Resource.class, true)",
      "info" : "MethodInvocation[1815-1876]:MethodInvocation[1688-1734]"
    }, {
      "left" : "canRead",
      "right" : "converter",
      "info" : "SimpleName[1825-1832]:SimpleName[1702-1711]"
    }, {
      "left" : "Resource.class",
      "right" : "Resource.class",
      "info" : "TypeLiteral[1833-1847]:TypeLiteral[1713-1727]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[1918-1923]:MarkerAnnotation[1771-1776]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1925-1931]:Modifier[1778-1784]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1932-1936]:PrimitiveType[1785-1789]"
    }, {
      "left" : "canWriteTypeIfAssignableToConfiguredType",
      "right" : "canWriteTypeIfAssignableToConfiguredType",
      "info" : "SimpleName[1937-1977]:SimpleName[1790-1830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1980-2383]:Block[1833-2132]"
    }, {
      "left" : "assertThat(converter.canWrite(Object.class, MediaType.APPLICATION_JSON), is(false));",
      "right" : "assertCanWrite(converter, Object.class, false);",
      "info" : "ExpressionStatement[2113-2197]:ExpressionStatement[1973-2020]"
    }, {
      "left" : "converter",
      "right" : "assertCanWrite",
      "info" : "SimpleName[2124-2133]:SimpleName[1973-1987]"
    }, {
      "left" : "converter.canWrite(Object.class, MediaType.APPLICATION_JSON)",
      "right" : "assertCanWrite(converter, Object.class, false)",
      "info" : "MethodInvocation[2124-2184]:MethodInvocation[1973-2019]"
    }, {
      "left" : "canWrite",
      "right" : "converter",
      "info" : "SimpleName[2134-2142]:SimpleName[1988-1997]"
    }, {
      "left" : "Object.class",
      "right" : "Object.class",
      "info" : "TypeLiteral[2143-2155]:TypeLiteral[1999-2011]"
    }, {
      "left" : "assertThat(converter.canWrite(ResourceSupport.class, MediaType.APPLICATION_JSON), is(true));",
      "right" : "assertCanWrite(converter, ResourceSupport.class, true);",
      "info" : "ExpressionStatement[2200-2292]:ExpressionStatement[2023-2078]"
    }, {
      "left" : "converter",
      "right" : "assertCanWrite",
      "info" : "SimpleName[2211-2220]:SimpleName[2023-2037]"
    }, {
      "left" : "converter.canWrite(ResourceSupport.class, MediaType.APPLICATION_JSON)",
      "right" : "assertCanWrite(converter, ResourceSupport.class, true)",
      "info" : "MethodInvocation[2211-2280]:MethodInvocation[2023-2077]"
    }, {
      "left" : "canWrite",
      "right" : "converter",
      "info" : "SimpleName[2221-2229]:SimpleName[2038-2047]"
    }, {
      "left" : "ResourceSupport.class",
      "right" : "ResourceSupport.class",
      "info" : "TypeLiteral[2230-2251]:TypeLiteral[2049-2070]"
    }, {
      "left" : "assertThat(converter.canWrite(Resource.class, MediaType.APPLICATION_JSON), is(true));",
      "right" : "assertCanWrite(converter, Resource.class, true);",
      "info" : "ExpressionStatement[2295-2380]:ExpressionStatement[2081-2129]"
    }, {
      "left" : "converter",
      "right" : "assertCanWrite",
      "info" : "SimpleName[2306-2315]:SimpleName[2081-2095]"
    }, {
      "left" : "converter.canWrite(Resource.class, MediaType.APPLICATION_JSON)",
      "right" : "assertCanWrite(converter, Resource.class, true)",
      "info" : "MethodInvocation[2306-2368]:MethodInvocation[2081-2128]"
    }, {
      "left" : "canWrite",
      "right" : "converter",
      "info" : "SimpleName[2316-2324]:SimpleName[2096-2105]"
    }, {
      "left" : "Resource.class",
      "right" : "Resource.class",
      "info" : "TypeLiteral[2325-2339]:TypeLiteral[2107-2121]"
    }, {
      "left" : "public",
      "right" : "static",
      "info" : "Modifier[2417-2423]:Modifier[2143-2149]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2424-2428]:PrimitiveType[2150-2154]"
    }, {
      "left" : "doesNotSupportAnythingButTheConfiguredClassForCanReadWithContextClass",
      "right" : "assertCanRead",
      "info" : "SimpleName[2429-2498]:SimpleName[2155-2168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2501-2741]:Block[2249-2402]"
    }, {
      "left" : "GenericHttpMessageConverter<Object> converter = new TypeConstrainedMappingJackson2HttpMessageConverter(\n\t\t\t\tResourceSupport.class);",
      "right" : "GenericHttpMessageConverter<Object> converter = new TypeConstrainedMappingJackson2HttpMessageConverter(\n\t\t\t\tResourceSupport.class);",
      "info" : "VariableDeclarationStatement[2506-2637]:VariableDeclarationStatement[1838-1969]"
    }, {
      "left" : "assertThat(converter.canRead(String.class, Object.class, MediaType.APPLICATION_JSON), is(false));",
      "right" : "assertThat(converter.canRead(type, APPLICATION_JSON), is(expected));",
      "info" : "ExpressionStatement[2641-2738]:ExpressionStatement[2254-2322]"
    }, {
      "left" : "converter.canRead(String.class, Object.class, MediaType.APPLICATION_JSON)",
      "right" : "converter.canRead(type, APPLICATION_JSON)",
      "info" : "MethodInvocation[2652-2725]:MethodInvocation[2265-2306]"
    }, {
      "left" : "is(false)",
      "right" : "is(expected)",
      "info" : "MethodInvocation[2727-2736]:MethodInvocation[2308-2320]"
    } ]
  },
  "interFileMappings" : { }
}