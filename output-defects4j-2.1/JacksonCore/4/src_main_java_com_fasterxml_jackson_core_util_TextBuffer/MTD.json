{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TextBuffer",
      "right" : "TextBuffer",
      "info" : "TypeDeclaration[176-22538]:TypeDeclaration[176-22551]"
    }, {
      "left" : "final static char[] NO_CHARS = new char[0];",
      "right" : "final static char[] NO_CHARS = new char[0];",
      "info" : "FieldDeclaration[894-937]:FieldDeclaration[894-937]"
    }, {
      "left" : "final static int MIN_SEGMENT_LEN = 1000;",
      "right" : "final static int MIN_SEGMENT_LEN = 1000;",
      "info" : "FieldDeclaration[943-1075]:FieldDeclaration[943-1075]"
    }, {
      "left" : "final static int MAX_SEGMENT_LEN = 0x40000;",
      "right" : "final static int MAX_SEGMENT_LEN = 0x40000;",
      "info" : "FieldDeclaration[1085-1225]:FieldDeclaration[1085-1225]"
    }, {
      "left" : "private final BufferRecycler _allocator;",
      "right" : "private final BufferRecycler _allocator;",
      "info" : "FieldDeclaration[1401-1441]:FieldDeclaration[1401-1441]"
    }, {
      "left" : "private char[] _inputBuffer;",
      "right" : "private char[] _inputBuffer;",
      "info" : "FieldDeclaration[1619-1853]:FieldDeclaration[1619-1853]"
    }, {
      "left" : "private int _inputStart;",
      "right" : "private int _inputStart;",
      "info" : "FieldDeclaration[1859-2042]:FieldDeclaration[1859-2042]"
    }, {
      "left" : "private int _inputLen;",
      "right" : "private int _inputLen;",
      "info" : "FieldDeclaration[2048-2070]:FieldDeclaration[2048-2070]"
    }, {
      "left" : "private ArrayList<char[]> _segments;",
      "right" : "private ArrayList<char[]> _segments;",
      "info" : "FieldDeclaration[2275-2386]:FieldDeclaration[2275-2386]"
    }, {
      "left" : "private boolean _hasSegments = false;",
      "right" : "private boolean _hasSegments = false;",
      "info" : "FieldDeclaration[2392-2503]:FieldDeclaration[2392-2503]"
    }, {
      "left" : "private int _segmentSize;",
      "right" : "private int _segmentSize;",
      "info" : "FieldDeclaration[2580-2682]:FieldDeclaration[2580-2682]"
    }, {
      "left" : "private char[] _currentSegment;",
      "right" : "private char[] _currentSegment;",
      "info" : "FieldDeclaration[2688-2719]:FieldDeclaration[2688-2719]"
    }, {
      "left" : "private int _currentSize;",
      "right" : "private int _currentSize;",
      "info" : "FieldDeclaration[2725-2829]:FieldDeclaration[2725-2829]"
    }, {
      "left" : "private String _resultString;",
      "right" : "private String _resultString;",
      "info" : "FieldDeclaration[3005-3184]:FieldDeclaration[3005-3184]"
    }, {
      "left" : "private char[] _resultArray;",
      "right" : "private char[] _resultArray;",
      "info" : "FieldDeclaration[3190-3218]:FieldDeclaration[3190-3218]"
    }, {
      "left" : "public TextBuffer(BufferRecycler allocator)",
      "right" : "public TextBuffer(BufferRecycler allocator)",
      "info" : "MethodDeclaration[3386-3469]:MethodDeclaration[3386-3469]"
    }, {
      "left" : "public void releaseBuffers()",
      "right" : "public void releaseBuffers()",
      "info" : "MethodDeclaration[3475-4412]:MethodDeclaration[3475-4412]"
    }, {
      "left" : "public void resetWithEmpty()",
      "right" : "public void resetWithEmpty()",
      "info" : "MethodDeclaration[4418-4928]:MethodDeclaration[4418-4928]"
    }, {
      "left" : "public void resetWithShared(char[] buf, int start, int len)",
      "right" : "public void resetWithShared(char[] buf, int start, int len)",
      "info" : "MethodDeclaration[4934-5691]:MethodDeclaration[4934-5691]"
    }, {
      "left" : "public void resetWithCopy(char[] buf, int start, int len)",
      "right" : "public void resetWithCopy(char[] buf, int start, int len)",
      "info" : "MethodDeclaration[5697-6232]:MethodDeclaration[5697-6232]"
    }, {
      "left" : "public void resetWithString(String value)",
      "right" : "public void resetWithString(String value)",
      "info" : "MethodDeclaration[6238-6533]:MethodDeclaration[6238-6533]"
    }, {
      "left" : "private char[] buf(int needed)",
      "right" : "private char[] buf(int needed)",
      "info" : "MethodDeclaration[6543-6881]:MethodDeclaration[6543-6881]"
    }, {
      "left" : "private void clearSegments()",
      "right" : "private void clearSegments()",
      "info" : "MethodDeclaration[6887-7358]:MethodDeclaration[6887-7358]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[7559-8028]:MethodDeclaration[7559-8028]"
    }, {
      "left" : "public int getTextOffset()",
      "right" : "public int getTextOffset()",
      "info" : "MethodDeclaration[8034-8335]:MethodDeclaration[8034-8335]"
    }, {
      "left" : "public boolean hasTextAsCharacters()",
      "right" : "public boolean hasTextAsCharacters()",
      "info" : "MethodDeclaration[8341-8762]:MethodDeclaration[8341-8762]"
    }, {
      "left" : "public char[] getTextBuffer()",
      "right" : "public char[] getTextBuffer()",
      "info" : "MethodDeclaration[8772-9295]:MethodDeclaration[8772-9295]"
    }, {
      "left" : "public String contentsAsString()",
      "right" : "public String contentsAsString()",
      "info" : "MethodDeclaration[9469-11182]:MethodDeclaration[9469-11182]"
    }, {
      "left" : "public char[] contentsAsArray()",
      "right" : "public char[] contentsAsArray()",
      "info" : "MethodDeclaration[11189-11380]:MethodDeclaration[11189-11380]"
    }, {
      "left" : "public BigDecimal contentsAsDecimal() throws NumberFormatException",
      "right" : "public BigDecimal contentsAsDecimal() throws NumberFormatException",
      "info" : "MethodDeclaration[11386-12243]:MethodDeclaration[11386-12243]"
    }, {
      "left" : "public double contentsAsDouble() throws NumberFormatException",
      "right" : "public double contentsAsDouble() throws NumberFormatException",
      "info" : "MethodDeclaration[12249-12486]:MethodDeclaration[12249-12486]"
    }, {
      "left" : "public void ensureNotShared()",
      "right" : "public void ensureNotShared()",
      "info" : "MethodDeclaration[12660-12923]:MethodDeclaration[12660-12923]"
    }, {
      "left" : "public void append(char c)",
      "right" : "public void append(char c)",
      "info" : "MethodDeclaration[12929-13349]:MethodDeclaration[12929-13349]"
    }, {
      "left" : "public void append(char[] c, int start, int len)",
      "right" : "public void append(char[] c, int start, int len)",
      "info" : "MethodDeclaration[13355-14556]:MethodDeclaration[13355-14556]"
    }, {
      "left" : "public void append(String str, int offset, int len)",
      "right" : "public void append(String str, int offset, int len)",
      "info" : "MethodDeclaration[14562-15758]:MethodDeclaration[14562-15758]"
    }, {
      "left" : "public char[] getCurrentSegment()",
      "right" : "public char[] getCurrentSegment()",
      "info" : "MethodDeclaration[15953-16597]:MethodDeclaration[15953-16597]"
    }, {
      "left" : "public char[] emptyAndGetCurrentSegment()",
      "right" : "public char[] emptyAndGetCurrentSegment()",
      "info" : "MethodDeclaration[16603-17169]:MethodDeclaration[16603-17169]"
    }, {
      "left" : "public int getCurrentSegmentSize()",
      "right" : "public int getCurrentSegmentSize()",
      "info" : "MethodDeclaration[17175-17234]:MethodDeclaration[17175-17234]"
    }, {
      "left" : "public void setCurrentLength(int len)",
      "right" : "public void setCurrentLength(int len)",
      "info" : "MethodDeclaration[17239-17300]:MethodDeclaration[17239-17300]"
    }, {
      "left" : "public char[] finishCurrentSegment()",
      "right" : "public char[] finishCurrentSegment()",
      "info" : "MethodDeclaration[17306-17960]:MethodDeclaration[17306-17960]"
    }, {
      "left" : "public char[] expandCurrentSegment()",
      "right" : "public char[] expandCurrentSegment()",
      "info" : "MethodDeclaration[17966-18575]:MethodDeclaration[17966-18588]"
    }, {
      "left" : "public char[] expandCurrentSegment(int minSize)",
      "right" : "public char[] expandCurrentSegment(int minSize)",
      "info" : "MethodDeclaration[18581-19111]:MethodDeclaration[18594-19124]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[19286-19535]:MethodDeclaration[19299-19548]"
    }, {
      "left" : "private void unshare(int needExtra)",
      "right" : "private void unshare(int needExtra)",
      "info" : "MethodDeclaration[19710-20482]:MethodDeclaration[19723-20495]"
    }, {
      "left" : "private void expand(int minNewSegmentSize)",
      "right" : "private void expand(int minNewSegmentSize)",
      "info" : "MethodDeclaration[20488-21302]:MethodDeclaration[20501-21315]"
    }, {
      "left" : "private char[] resultArray()",
      "right" : "private char[] resultArray()",
      "info" : "MethodDeclaration[21308-22476]:MethodDeclaration[21321-22489]"
    }, {
      "left" : "private char[] carr(int len)",
      "right" : "private char[] carr(int len)",
      "info" : "MethodDeclaration[22482-22536]:MethodDeclaration[22495-22549]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3430-3469]:Block[3430-3469]"
    }, {
      "left" : "_allocator = allocator;",
      "right" : "_allocator = allocator;",
      "info" : "ExpressionStatement[3440-3463]:ExpressionStatement[3440-3463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3933-4412]:Block[3933-4412]"
    }, {
      "left" : "if (_allocator == null)",
      "right" : "if (_allocator == null)",
      "info" : "IfStatement[3943-4406]:IfStatement[3943-4406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3967-4008]:Block[3967-4008]"
    }, {
      "left" : "resetWithEmpty();",
      "right" : "resetWithEmpty();",
      "info" : "ExpressionStatement[3981-3998]:ExpressionStatement[3981-3998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4014-4406]:Block[4014-4406]"
    }, {
      "left" : "if (_currentSegment != null)",
      "right" : "if (_currentSegment != null)",
      "info" : "IfStatement[4028-4396]:IfStatement[4028-4396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4057-4396]:Block[4057-4396]"
    }, {
      "left" : "resetWithEmpty();",
      "right" : "resetWithEmpty();",
      "info" : "ExpressionStatement[4149-4166]:ExpressionStatement[4149-4166]"
    }, {
      "left" : "char[] buf = _currentSegment;",
      "right" : "char[] buf = _currentSegment;",
      "info" : "VariableDeclarationStatement[4229-4258]:VariableDeclarationStatement[4229-4258]"
    }, {
      "left" : "_currentSegment = null;",
      "right" : "_currentSegment = null;",
      "info" : "ExpressionStatement[4275-4298]:ExpressionStatement[4275-4298]"
    }, {
      "left" : "_allocator.releaseCharBuffer(BufferRecycler.CHAR_TEXT_BUFFER, buf);",
      "right" : "_allocator.releaseCharBuffer(BufferRecycler.CHAR_TEXT_BUFFER, buf);",
      "info" : "ExpressionStatement[4315-4382]:ExpressionStatement[4315-4382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4589-4928]:Block[4589-4928]"
    }, {
      "left" : "_inputStart = -1;",
      "right" : "_inputStart = -1;",
      "info" : "ExpressionStatement[4599-4616]:ExpressionStatement[4599-4616]"
    }, {
      "left" : "_currentSize = 0;",
      "right" : "_currentSize = 0;",
      "info" : "ExpressionStatement[4661-4678]:ExpressionStatement[4661-4678]"
    }, {
      "left" : "_inputLen = 0;",
      "right" : "_inputLen = 0;",
      "info" : "ExpressionStatement[4687-4701]:ExpressionStatement[4687-4701]"
    }, {
      "left" : "_inputBuffer = null;",
      "right" : "_inputBuffer = null;",
      "info" : "ExpressionStatement[4711-4731]:ExpressionStatement[4711-4731]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[4740-4761]:ExpressionStatement[4740-4761]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[4770-4790]:ExpressionStatement[4770-4790]"
    }, {
      "left" : "if (_hasSegments)",
      "right" : "if (_hasSegments)",
      "info" : "IfStatement[4864-4922]:IfStatement[4864-4922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4882-4922]:Block[4882-4922]"
    }, {
      "left" : "clearSegments();",
      "right" : "clearSegments();",
      "info" : "ExpressionStatement[4896-4912]:ExpressionStatement[4896-4912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5290-5691]:Block[5290-5691]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[5359-5380]:ExpressionStatement[5359-5380]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[5389-5409]:ExpressionStatement[5389-5409]"
    }, {
      "left" : "_inputBuffer = buf;",
      "right" : "_inputBuffer = buf;",
      "info" : "ExpressionStatement[5480-5499]:ExpressionStatement[5480-5499]"
    }, {
      "left" : "_inputStart = start;",
      "right" : "_inputStart = start;",
      "info" : "ExpressionStatement[5508-5528]:ExpressionStatement[5508-5528]"
    }, {
      "left" : "_inputLen = len;",
      "right" : "_inputLen = len;",
      "info" : "ExpressionStatement[5537-5553]:ExpressionStatement[5537-5553]"
    }, {
      "left" : "if (_hasSegments)",
      "right" : "if (_hasSegments)",
      "info" : "IfStatement[5627-5685]:IfStatement[5627-5685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5645-5685]:Block[5645-5685]"
    }, {
      "left" : "clearSegments();",
      "right" : "clearSegments();",
      "info" : "ExpressionStatement[5659-5675]:ExpressionStatement[5659-5675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5759-6232]:Block[5759-6232]"
    }, {
      "left" : "_inputBuffer = null;",
      "right" : "_inputBuffer = null;",
      "info" : "ExpressionStatement[5769-5789]:ExpressionStatement[5769-5789]"
    }, {
      "left" : "_inputStart = -1;",
      "right" : "_inputStart = -1;",
      "info" : "ExpressionStatement[5798-5815]:ExpressionStatement[5798-5815]"
    }, {
      "left" : "_inputLen = 0;",
      "right" : "_inputLen = 0;",
      "info" : "ExpressionStatement[5860-5874]:ExpressionStatement[5860-5874]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[5884-5905]:ExpressionStatement[5884-5905]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[5914-5934]:ExpressionStatement[5914-5934]"
    }, {
      "left" : "if (_hasSegments)",
      "right" : "if (_hasSegments)",
      "info" : "IfStatement[6008-6152]:IfStatement[6008-6152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6026-6066]:Block[6026-6066]"
    }, {
      "left" : "clearSegments();",
      "right" : "clearSegments();",
      "info" : "ExpressionStatement[6040-6056]:ExpressionStatement[6040-6056]"
    }, {
      "left" : "if (_currentSegment == null)",
      "right" : "if (_currentSegment == null)",
      "info" : "IfStatement[6072-6152]:IfStatement[6072-6152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6101-6152]:Block[6101-6152]"
    }, {
      "left" : "_currentSegment = buf(len);",
      "right" : "_currentSegment = buf(len);",
      "info" : "ExpressionStatement[6115-6142]:ExpressionStatement[6115-6142]"
    }, {
      "left" : "_currentSize = _segmentSize = 0;",
      "right" : "_currentSize = _segmentSize = 0;",
      "info" : "ExpressionStatement[6161-6193]:ExpressionStatement[6161-6193]"
    }, {
      "left" : "append(buf, start, len);",
      "right" : "append(buf, start, len);",
      "info" : "ExpressionStatement[6202-6226]:ExpressionStatement[6202-6226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6284-6533]:Block[6284-6533]"
    }, {
      "left" : "_inputBuffer = null;",
      "right" : "_inputBuffer = null;",
      "info" : "ExpressionStatement[6294-6314]:ExpressionStatement[6294-6314]"
    }, {
      "left" : "_inputStart = -1;",
      "right" : "_inputStart = -1;",
      "info" : "ExpressionStatement[6323-6340]:ExpressionStatement[6323-6340]"
    }, {
      "left" : "_inputLen = 0;",
      "right" : "_inputLen = 0;",
      "info" : "ExpressionStatement[6349-6363]:ExpressionStatement[6349-6363]"
    }, {
      "left" : "_resultString = value;",
      "right" : "_resultString = value;",
      "info" : "ExpressionStatement[6373-6395]:ExpressionStatement[6373-6395]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[6404-6424]:ExpressionStatement[6404-6424]"
    }, {
      "left" : "if (_hasSegments)",
      "right" : "if (_hasSegments)",
      "info" : "IfStatement[6434-6492]:IfStatement[6434-6492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6452-6492]:Block[6452-6492]"
    }, {
      "left" : "clearSegments();",
      "right" : "clearSegments();",
      "info" : "ExpressionStatement[6466-6482]:ExpressionStatement[6466-6482]"
    }, {
      "left" : "_currentSize = 0;",
      "right" : "_currentSize = 0;",
      "info" : "ExpressionStatement[6501-6518]:ExpressionStatement[6501-6518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6682-6881]:Block[6682-6881]"
    }, {
      "left" : "if (_allocator != null)",
      "right" : "if (_allocator != null)",
      "info" : "IfStatement[6692-6815]:IfStatement[6692-6815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6716-6815]:Block[6716-6815]"
    }, {
      "left" : "return _allocator.allocCharBuffer(BufferRecycler.CHAR_TEXT_BUFFER, needed);",
      "right" : "return _allocator.allocCharBuffer(BufferRecycler.CHAR_TEXT_BUFFER, needed);",
      "info" : "ReturnStatement[6730-6805]:ReturnStatement[6730-6805]"
    }, {
      "left" : "return new char[Math.max(needed, MIN_SEGMENT_LEN)];",
      "right" : "return new char[Math.max(needed, MIN_SEGMENT_LEN)];",
      "info" : "ReturnStatement[6824-6875]:ReturnStatement[6824-6875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6920-7358]:Block[6920-7358]"
    }, {
      "left" : "_hasSegments = false;",
      "right" : "_hasSegments = false;",
      "info" : "ExpressionStatement[6930-6951]:ExpressionStatement[6930-6951]"
    }, {
      "left" : "_segments.clear();",
      "right" : "_segments.clear();",
      "info" : "ExpressionStatement[7293-7311]:ExpressionStatement[7293-7311]"
    }, {
      "left" : "_currentSize = _segmentSize = 0;",
      "right" : "_currentSize = _segmentSize = 0;",
      "info" : "ExpressionStatement[7320-7352]:ExpressionStatement[7320-7352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7664-8028]:Block[7664-8028]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[7674-7767]:IfStatement[7674-7767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7696-7767]:Block[7696-7767]"
    }, {
      "left" : "return _inputLen;",
      "right" : "return _inputLen;",
      "info" : "ReturnStatement[7740-7757]:ReturnStatement[7740-7757]"
    }, {
      "left" : "if (_resultArray != null)",
      "right" : "if (_resultArray != null)",
      "info" : "IfStatement[7776-7853]:IfStatement[7776-7853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7802-7853]:Block[7802-7853]"
    }, {
      "left" : "return _resultArray.length;",
      "right" : "return _resultArray.length;",
      "info" : "ReturnStatement[7816-7843]:ReturnStatement[7816-7843]"
    }, {
      "left" : "if (_resultString != null)",
      "right" : "if (_resultString != null)",
      "info" : "IfStatement[7862-7943]:IfStatement[7862-7943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7889-7943]:Block[7889-7943]"
    }, {
      "left" : "return _resultString.length();",
      "right" : "return _resultString.length();",
      "info" : "ReturnStatement[7903-7933]:ReturnStatement[7903-7933]"
    }, {
      "left" : "return _segmentSize + _currentSize;",
      "right" : "return _segmentSize + _currentSize;",
      "info" : "ReturnStatement[7987-8022]:ReturnStatement[7987-8022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8061-8335]:Block[8061-8335]"
    }, {
      "left" : "return (_inputStart >= 0) ? _inputStart : 0;",
      "right" : "return (_inputStart >= 0) ? _inputStart : 0;",
      "info" : "ReturnStatement[8285-8329]:ReturnStatement[8285-8329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8528-8762]:Block[8528-8762]"
    }, {
      "left" : "if (_inputStart >= 0 || _resultArray != null)",
      "right" : "if (_inputStart >= 0 || _resultArray != null)",
      "info" : "IfStatement[8585-8644]:IfStatement[8585-8644]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8632-8644]:ReturnStatement[8632-8644]"
    }, {
      "left" : "if (_resultString != null)",
      "right" : "if (_resultString != null)",
      "info" : "IfStatement[8695-8735]:IfStatement[8695-8735]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8722-8735]:ReturnStatement[8722-8735]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8744-8756]:ReturnStatement[8744-8756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8806-9295]:Block[8806-9295]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[8866-8908]:IfStatement[8866-8908]"
    }, {
      "left" : "return _inputBuffer;",
      "right" : "return _inputBuffer;",
      "info" : "ReturnStatement[8888-8908]:ReturnStatement[8888-8908]"
    }, {
      "left" : "if (_resultArray != null)",
      "right" : "if (_resultArray != null)",
      "info" : "IfStatement[8917-8964]:IfStatement[8917-8964]"
    }, {
      "left" : "return _resultArray;",
      "right" : "return _resultArray;",
      "info" : "ReturnStatement[8944-8964]:ReturnStatement[8944-8964]"
    }, {
      "left" : "if (_resultString != null)",
      "right" : "if (_resultString != null)",
      "info" : "IfStatement[8973-9076]:IfStatement[8973-9076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9000-9076]:Block[9000-9076]"
    }, {
      "left" : "return (_resultArray = _resultString.toCharArray());",
      "right" : "return (_resultArray = _resultString.toCharArray());",
      "info" : "ReturnStatement[9014-9066]:ReturnStatement[9014-9066]"
    }, {
      "left" : "if (!_hasSegments)",
      "right" : "if (!_hasSegments)",
      "info" : "IfStatement[9139-9182]:IfStatement[9139-9182]"
    }, {
      "left" : "return _currentSegment;",
      "right" : "return _currentSegment;",
      "info" : "ReturnStatement[9159-9182]:ReturnStatement[9159-9182]"
    }, {
      "left" : "return contentsAsArray();",
      "right" : "return contentsAsArray();",
      "info" : "ReturnStatement[9264-9289]:ReturnStatement[9264-9289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9506-11182]:Block[9506-11182]"
    }, {
      "left" : "if (_resultString == null)",
      "right" : "if (_resultString == null)",
      "info" : "IfStatement[9516-11146]:IfStatement[9516-11146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9543-11146]:Block[9543-11146]"
    }, {
      "left" : "if (_resultArray != null)",
      "right" : "if (_resultArray != null)",
      "info" : "IfStatement[9626-11136]:IfStatement[9626-11136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9652-9725]:Block[9652-9725]"
    }, {
      "left" : "_resultString = new String(_resultArray);",
      "right" : "_resultString = new String(_resultArray);",
      "info" : "ExpressionStatement[9670-9711]:ExpressionStatement[9670-9711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9731-11136]:Block[9731-11136]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[9792-11122]:IfStatement[9792-11122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9814-10035]:Block[9814-10035]"
    }, {
      "left" : "if (_inputLen < 1)",
      "right" : "if (_inputLen < 1)",
      "info" : "IfStatement[9836-9931]:IfStatement[9836-9931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9855-9931]:Block[9855-9931]"
    }, {
      "left" : "return (_resultString = \"\");",
      "right" : "return (_resultString = \"\");",
      "info" : "ReturnStatement[9881-9909]:ReturnStatement[9881-9909]"
    }, {
      "left" : "_resultString = new String(_inputBuffer, _inputStart, _inputLen);",
      "right" : "_resultString = new String(_inputBuffer, _inputStart, _inputLen);",
      "info" : "ExpressionStatement[9952-10017]:ExpressionStatement[9952-10017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10041-11122]:Block[10041-11122]"
    }, {
      "left" : "int segLen = _segmentSize;",
      "right" : "int segLen = _segmentSize;",
      "info" : "VariableDeclarationStatement[10158-10184]:VariableDeclarationStatement[10158-10184]"
    }, {
      "left" : "int currLen = _currentSize;",
      "right" : "int currLen = _currentSize;",
      "info" : "VariableDeclarationStatement[10205-10232]:VariableDeclarationStatement[10205-10232]"
    }, {
      "left" : "if (segLen == 0)",
      "right" : "if (segLen == 0)",
      "info" : "IfStatement[10274-11104]:IfStatement[10274-11104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10291-10424]:Block[10291-10424]"
    }, {
      "left" : "_resultString = (currLen == 0) ? \"\" : new String(_currentSegment, 0, currLen);",
      "right" : "_resultString = (currLen == 0) ? \"\" : new String(_currentSegment, 0, currLen);",
      "info" : "ExpressionStatement[10324-10402]:ExpressionStatement[10324-10402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10430-11104]:Block[10430-11104]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder(segLen + currLen);",
      "right" : "StringBuilder sb = new StringBuilder(segLen + currLen);",
      "info" : "VariableDeclarationStatement[10479-10534]:VariableDeclarationStatement[10479-10534]"
    }, {
      "left" : "if (_segments != null)",
      "right" : "if (_segments != null)",
      "info" : "IfStatement[10608-10901]:IfStatement[10608-10901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10631-10901]:Block[10631-10901]"
    }, {
      "left" : "for (int i = 0, len = _segments.size(); i < len; ++i)",
      "right" : "for (int i = 0, len = _segments.size(); i < len; ++i)",
      "info" : "ForStatement[10661-10875]:ForStatement[10661-10875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10715-10875]:Block[10715-10875]"
    }, {
      "left" : "char[] curr = _segments.get(i);",
      "right" : "char[] curr = _segments.get(i);",
      "info" : "VariableDeclarationStatement[10749-10780]:VariableDeclarationStatement[10749-10780]"
    }, {
      "left" : "sb.append(curr, 0, curr.length);",
      "right" : "sb.append(curr, 0, curr.length);",
      "info" : "ExpressionStatement[10813-10845]:ExpressionStatement[10813-10845]"
    }, {
      "left" : "sb.append(_currentSegment, 0, _currentSize);",
      "right" : "sb.append(_currentSegment, 0, _currentSize);",
      "info" : "ExpressionStatement[10983-11027]:ExpressionStatement[10983-11027]"
    }, {
      "left" : "_resultString = sb.toString();",
      "right" : "_resultString = sb.toString();",
      "info" : "ExpressionStatement[11052-11082]:ExpressionStatement[11052-11082]"
    }, {
      "left" : "return _resultString;",
      "right" : "return _resultString;",
      "info" : "ReturnStatement[11155-11176]:ReturnStatement[11155-11176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11221-11380]:Block[11221-11380]"
    }, {
      "left" : "char[] result = _resultArray;",
      "right" : "char[] result = _resultArray;",
      "info" : "VariableDeclarationStatement[11231-11260]:VariableDeclarationStatement[11231-11260]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[11269-11351]:IfStatement[11269-11351]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11289-11351]:Block[11289-11351]"
    }, {
      "left" : "_resultArray = result = resultArray();",
      "right" : "_resultArray = result = resultArray();",
      "info" : "ExpressionStatement[11303-11341]:ExpressionStatement[11303-11341]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11360-11374]:ReturnStatement[11360-11374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11571-12243]:Block[11571-12243]"
    }, {
      "left" : "if (_resultArray != null)",
      "right" : "if (_resultArray != null)",
      "info" : "IfStatement[11621-11720]:IfStatement[11621-11720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11647-11720]:Block[11647-11720]"
    }, {
      "left" : "return NumberInput.parseBigDecimal(_resultArray);",
      "right" : "return NumberInput.parseBigDecimal(_resultArray);",
      "info" : "ReturnStatement[11661-11710]:ReturnStatement[11661-11710]"
    }, {
      "left" : "if ((_inputStart >= 0) && (_inputBuffer != null))",
      "right" : "if ((_inputStart >= 0) && (_inputBuffer != null))",
      "info" : "IfStatement[11760-11907]:IfStatement[11760-11907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11810-11907]:Block[11810-11907]"
    }, {
      "left" : "return NumberInput.parseBigDecimal(_inputBuffer, _inputStart, _inputLen);",
      "right" : "return NumberInput.parseBigDecimal(_inputBuffer, _inputStart, _inputLen);",
      "info" : "ReturnStatement[11824-11897]:ReturnStatement[11824-11897]"
    }, {
      "left" : "if ((_segmentSize == 0) && (_currentSegment != null))",
      "right" : "if ((_segmentSize == 0) && (_currentSegment != null))",
      "info" : "IfStatement[11976-12123]:IfStatement[11976-12123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12030-12123]:Block[12030-12123]"
    }, {
      "left" : "return NumberInput.parseBigDecimal(_currentSegment, 0, _currentSize);",
      "right" : "return NumberInput.parseBigDecimal(_currentSegment, 0, _currentSize);",
      "info" : "ReturnStatement[12044-12113]:ReturnStatement[12044-12113]"
    }, {
      "left" : "return NumberInput.parseBigDecimal(contentsAsArray());",
      "right" : "return NumberInput.parseBigDecimal(contentsAsArray());",
      "info" : "ReturnStatement[12183-12237]:ReturnStatement[12183-12237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12419-12486]:Block[12419-12486]"
    }, {
      "left" : "return NumberInput.parseDouble(contentsAsString());",
      "right" : "return NumberInput.parseDouble(contentsAsString());",
      "info" : "ReturnStatement[12429-12480]:ReturnStatement[12429-12480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12849-12923]:Block[12849-12923]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[12859-12917]:IfStatement[12859-12917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12881-12917]:Block[12881-12917]"
    }, {
      "left" : "unshare(16);",
      "right" : "unshare(16);",
      "info" : "ExpressionStatement[12895-12907]:ExpressionStatement[12895-12907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12956-13349]:Block[12956-13349]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[13005-13063]:IfStatement[13005-13063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13027-13063]:Block[13027-13063]"
    }, {
      "left" : "unshare(16);",
      "right" : "unshare(16);",
      "info" : "ExpressionStatement[13041-13053]:ExpressionStatement[13041-13053]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[13072-13093]:ExpressionStatement[13072-13093]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[13102-13122]:ExpressionStatement[13102-13122]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[13167-13197]:VariableDeclarationStatement[13167-13197]"
    }, {
      "left" : "if (_currentSize >= curr.length)",
      "right" : "if (_currentSize >= curr.length)",
      "info" : "IfStatement[13206-13309]:IfStatement[13206-13309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13239-13309]:Block[13239-13309]"
    }, {
      "left" : "expand(1);",
      "right" : "expand(1);",
      "info" : "ExpressionStatement[13253-13263]:ExpressionStatement[13253-13263]"
    }, {
      "left" : "curr = _currentSegment;",
      "right" : "curr = _currentSegment;",
      "info" : "ExpressionStatement[13276-13299]:ExpressionStatement[13276-13299]"
    }, {
      "left" : "curr[_currentSize++] = c;",
      "right" : "curr[_currentSize++] = c;",
      "info" : "ExpressionStatement[13318-13343]:ExpressionStatement[13318-13343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13408-14556]:Block[13408-14556]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[13471-13530]:IfStatement[13471-13530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13493-13530]:Block[13493-13530]"
    }, {
      "left" : "unshare(len);",
      "right" : "unshare(len);",
      "info" : "ExpressionStatement[13507-13520]:ExpressionStatement[13507-13520]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[13539-13560]:ExpressionStatement[13539-13560]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[13569-13589]:ExpressionStatement[13569-13589]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[13635-13665]:VariableDeclarationStatement[13635-13665]"
    }, {
      "left" : "int max = curr.length - _currentSize;",
      "right" : "int max = curr.length - _currentSize;",
      "info" : "VariableDeclarationStatement[13674-13711]:VariableDeclarationStatement[13674-13711]"
    }, {
      "left" : "if (max >= len)",
      "right" : "if (max >= len)",
      "info" : "IfStatement[13733-13878]:IfStatement[13733-13878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13749-13878]:Block[13749-13878]"
    }, {
      "left" : "System.arraycopy(c, start, curr, _currentSize, len);",
      "right" : "System.arraycopy(c, start, curr, _currentSize, len);",
      "info" : "ExpressionStatement[13763-13815]:ExpressionStatement[13763-13815]"
    }, {
      "left" : "_currentSize += len;",
      "right" : "_currentSize += len;",
      "info" : "ExpressionStatement[13828-13848]:ExpressionStatement[13828-13848]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[13861-13868]:ReturnStatement[13861-13868]"
    }, {
      "left" : "if (max > 0)",
      "right" : "if (max > 0)",
      "info" : "IfStatement[13937-14076]:IfStatement[13937-14076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13950-14076]:Block[13950-14076]"
    }, {
      "left" : "System.arraycopy(c, start, curr, _currentSize, max);",
      "right" : "System.arraycopy(c, start, curr, _currentSize, max);",
      "info" : "ExpressionStatement[13964-14016]:ExpressionStatement[13964-14016]"
    }, {
      "left" : "start += max;",
      "right" : "start += max;",
      "info" : "ExpressionStatement[14029-14042]:ExpressionStatement[14029-14042]"
    }, {
      "left" : "len -= max;",
      "right" : "len -= max;",
      "info" : "ExpressionStatement[14055-14066]:ExpressionStatement[14055-14066]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[14270-14550]:DoStatement[14270-14550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14273-14533]:Block[14273-14533]"
    }, {
      "left" : "expand(len);",
      "right" : "expand(len);",
      "info" : "ExpressionStatement[14287-14299]:ExpressionStatement[14287-14299]"
    }, {
      "left" : "int amount = Math.min(_currentSegment.length, len);",
      "right" : "int amount = Math.min(_currentSegment.length, len);",
      "info" : "VariableDeclarationStatement[14312-14363]:VariableDeclarationStatement[14312-14363]"
    }, {
      "left" : "System.arraycopy(c, start, _currentSegment, 0, amount);",
      "right" : "System.arraycopy(c, start, _currentSegment, 0, amount);",
      "info" : "ExpressionStatement[14376-14431]:ExpressionStatement[14376-14431]"
    }, {
      "left" : "_currentSize += amount;",
      "right" : "_currentSize += amount;",
      "info" : "ExpressionStatement[14444-14467]:ExpressionStatement[14444-14467]"
    }, {
      "left" : "start += amount;",
      "right" : "start += amount;",
      "info" : "ExpressionStatement[14480-14496]:ExpressionStatement[14480-14496]"
    }, {
      "left" : "len -= amount;",
      "right" : "len -= amount;",
      "info" : "ExpressionStatement[14509-14523]:ExpressionStatement[14509-14523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14618-15758]:Block[14618-15758]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[14681-14740]:IfStatement[14681-14740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14703-14740]:Block[14703-14740]"
    }, {
      "left" : "unshare(len);",
      "right" : "unshare(len);",
      "info" : "ExpressionStatement[14717-14730]:ExpressionStatement[14717-14730]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[14749-14770]:ExpressionStatement[14749-14770]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[14779-14799]:ExpressionStatement[14779-14799]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[14845-14875]:VariableDeclarationStatement[14845-14875]"
    }, {
      "left" : "int max = curr.length - _currentSize;",
      "right" : "int max = curr.length - _currentSize;",
      "info" : "VariableDeclarationStatement[14884-14921]:VariableDeclarationStatement[14884-14921]"
    }, {
      "left" : "if (max >= len)",
      "right" : "if (max >= len)",
      "info" : "IfStatement[14930-15076]:IfStatement[14930-15076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14946-15076]:Block[14946-15076]"
    }, {
      "left" : "str.getChars(offset, offset+len, curr, _currentSize);",
      "right" : "str.getChars(offset, offset+len, curr, _currentSize);",
      "info" : "ExpressionStatement[14960-15013]:ExpressionStatement[14960-15013]"
    }, {
      "left" : "_currentSize += len;",
      "right" : "_currentSize += len;",
      "info" : "ExpressionStatement[15026-15046]:ExpressionStatement[15026-15046]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[15059-15066]:ReturnStatement[15059-15066]"
    }, {
      "left" : "if (max > 0)",
      "right" : "if (max > 0)",
      "info" : "IfStatement[15135-15276]:IfStatement[15135-15276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15148-15276]:Block[15148-15276]"
    }, {
      "left" : "str.getChars(offset, offset+max, curr, _currentSize);",
      "right" : "str.getChars(offset, offset+max, curr, _currentSize);",
      "info" : "ExpressionStatement[15162-15215]:ExpressionStatement[15162-15215]"
    }, {
      "left" : "len -= max;",
      "right" : "len -= max;",
      "info" : "ExpressionStatement[15228-15239]:ExpressionStatement[15228-15239]"
    }, {
      "left" : "offset += max;",
      "right" : "offset += max;",
      "info" : "ExpressionStatement[15252-15266]:ExpressionStatement[15252-15266]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[15470-15752]:DoStatement[15470-15752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15473-15735]:Block[15473-15735]"
    }, {
      "left" : "expand(len);",
      "right" : "expand(len);",
      "info" : "ExpressionStatement[15487-15499]:ExpressionStatement[15487-15499]"
    }, {
      "left" : "int amount = Math.min(_currentSegment.length, len);",
      "right" : "int amount = Math.min(_currentSegment.length, len);",
      "info" : "VariableDeclarationStatement[15512-15563]:VariableDeclarationStatement[15512-15563]"
    }, {
      "left" : "str.getChars(offset, offset+amount, _currentSegment, 0);",
      "right" : "str.getChars(offset, offset+amount, _currentSegment, 0);",
      "info" : "ExpressionStatement[15576-15632]:ExpressionStatement[15576-15632]"
    }, {
      "left" : "_currentSize += amount;",
      "right" : "_currentSize += amount;",
      "info" : "ExpressionStatement[15645-15668]:ExpressionStatement[15645-15668]"
    }, {
      "left" : "offset += amount;",
      "right" : "offset += amount;",
      "info" : "ExpressionStatement[15681-15698]:ExpressionStatement[15681-15698]"
    }, {
      "left" : "len -= amount;",
      "right" : "len -= amount;",
      "info" : "ExpressionStatement[15711-15725]:ExpressionStatement[15711-15725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15991-16597]:Block[15991-16597]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[16201-16559]:IfStatement[16201-16559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16223-16258]:Block[16223-16258]"
    }, {
      "left" : "unshare(1);",
      "right" : "unshare(1);",
      "info" : "ExpressionStatement[16237-16248]:ExpressionStatement[16237-16248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16264-16559]:Block[16264-16559]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[16278-16308]:VariableDeclarationStatement[16278-16308]"
    }, {
      "left" : "if (curr == null)",
      "right" : "if (curr == null)",
      "info" : "IfStatement[16321-16549]:IfStatement[16321-16549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16339-16396]:Block[16339-16396]"
    }, {
      "left" : "_currentSegment = buf(0);",
      "right" : "_currentSegment = buf(0);",
      "info" : "ExpressionStatement[16357-16382]:ExpressionStatement[16357-16382]"
    }, {
      "left" : "if (_currentSize >= curr.length)",
      "right" : "if (_currentSize >= curr.length)",
      "info" : "IfStatement[16402-16549]:IfStatement[16402-16549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16435-16549]:Block[16435-16549]"
    }, {
      "left" : "expand(1);",
      "right" : "expand(1);",
      "info" : "ExpressionStatement[16525-16535]:ExpressionStatement[16525-16535]"
    }, {
      "left" : "return _currentSegment;",
      "right" : "return _currentSegment;",
      "info" : "ReturnStatement[16568-16591]:ReturnStatement[16568-16591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16649-17169]:Block[16649-17169]"
    }, {
      "left" : "_inputStart = -1;",
      "right" : "_inputStart = -1;",
      "info" : "ExpressionStatement[16697-16714]:ExpressionStatement[16697-16714]"
    }, {
      "left" : "_currentSize = 0;",
      "right" : "_currentSize = 0;",
      "info" : "ExpressionStatement[16759-16776]:ExpressionStatement[16759-16776]"
    }, {
      "left" : "_inputLen = 0;",
      "right" : "_inputLen = 0;",
      "info" : "ExpressionStatement[16785-16799]:ExpressionStatement[16785-16799]"
    }, {
      "left" : "_inputBuffer = null;",
      "right" : "_inputBuffer = null;",
      "info" : "ExpressionStatement[16809-16829]:ExpressionStatement[16809-16829]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[16838-16859]:ExpressionStatement[16838-16859]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[16868-16888]:ExpressionStatement[16868-16888]"
    }, {
      "left" : "if (_hasSegments)",
      "right" : "if (_hasSegments)",
      "info" : "IfStatement[16962-17020]:IfStatement[16962-17020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16980-17020]:Block[16980-17020]"
    }, {
      "left" : "clearSegments();",
      "right" : "clearSegments();",
      "info" : "ExpressionStatement[16994-17010]:ExpressionStatement[16994-17010]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[17029-17059]:VariableDeclarationStatement[17029-17059]"
    }, {
      "left" : "if (curr == null)",
      "right" : "if (curr == null)",
      "info" : "IfStatement[17068-17142]:IfStatement[17068-17142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17086-17142]:Block[17086-17142]"
    }, {
      "left" : "_currentSegment = curr = buf(0);",
      "right" : "_currentSegment = curr = buf(0);",
      "info" : "ExpressionStatement[17100-17132]:ExpressionStatement[17100-17132]"
    }, {
      "left" : "return curr;",
      "right" : "return curr;",
      "info" : "ReturnStatement[17151-17163]:ReturnStatement[17151-17163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17210-17234]:Block[17210-17234]"
    }, {
      "left" : "return _currentSize;",
      "right" : "return _currentSize;",
      "info" : "ReturnStatement[17212-17232]:ReturnStatement[17212-17232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17277-17300]:Block[17277-17300]"
    }, {
      "left" : "_currentSize = len;",
      "right" : "_currentSize = len;",
      "info" : "ExpressionStatement[17279-17298]:ExpressionStatement[17279-17298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17343-17960]:Block[17343-17960]"
    }, {
      "left" : "if (_segments == null)",
      "right" : "if (_segments == null)",
      "info" : "IfStatement[17353-17436]:IfStatement[17353-17436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17376-17436]:Block[17376-17436]"
    }, {
      "left" : "_segments = new ArrayList<char[]>();",
      "right" : "_segments = new ArrayList<char[]>();",
      "info" : "ExpressionStatement[17390-17426]:ExpressionStatement[17390-17426]"
    }, {
      "left" : "_hasSegments = true;",
      "right" : "_hasSegments = true;",
      "info" : "ExpressionStatement[17445-17465]:ExpressionStatement[17445-17465]"
    }, {
      "left" : "_segments.add(_currentSegment);",
      "right" : "_segments.add(_currentSegment);",
      "info" : "ExpressionStatement[17474-17505]:ExpressionStatement[17474-17505]"
    }, {
      "left" : "int oldLen = _currentSegment.length;",
      "right" : "int oldLen = _currentSegment.length;",
      "info" : "VariableDeclarationStatement[17514-17550]:VariableDeclarationStatement[17514-17550]"
    }, {
      "left" : "_segmentSize += oldLen;",
      "right" : "_segmentSize += oldLen;",
      "info" : "ExpressionStatement[17559-17582]:ExpressionStatement[17559-17582]"
    }, {
      "left" : "_currentSize = 0;",
      "right" : "_currentSize = 0;",
      "info" : "ExpressionStatement[17591-17608]:ExpressionStatement[17591-17608]"
    }, {
      "left" : "int newLen = oldLen + (oldLen >> 1);",
      "right" : "int newLen = oldLen + (oldLen >> 1);",
      "info" : "VariableDeclarationStatement[17656-17692]:VariableDeclarationStatement[17656-17692]"
    }, {
      "left" : "if (newLen < MIN_SEGMENT_LEN)",
      "right" : "if (newLen < MIN_SEGMENT_LEN)",
      "info" : "IfStatement[17701-17865]:IfStatement[17701-17865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17731-17780]:Block[17731-17780]"
    }, {
      "left" : "newLen = MIN_SEGMENT_LEN;",
      "right" : "newLen = MIN_SEGMENT_LEN;",
      "info" : "ExpressionStatement[17745-17770]:ExpressionStatement[17745-17770]"
    }, {
      "left" : "if (newLen > MAX_SEGMENT_LEN)",
      "right" : "if (newLen > MAX_SEGMENT_LEN)",
      "info" : "IfStatement[17786-17865]:IfStatement[17786-17865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17816-17865]:Block[17816-17865]"
    }, {
      "left" : "newLen = MAX_SEGMENT_LEN;",
      "right" : "newLen = MAX_SEGMENT_LEN;",
      "info" : "ExpressionStatement[17830-17855]:ExpressionStatement[17830-17855]"
    }, {
      "left" : "char[] curr = carr(newLen);",
      "right" : "char[] curr = carr(newLen);",
      "info" : "VariableDeclarationStatement[17874-17901]:VariableDeclarationStatement[17874-17901]"
    }, {
      "left" : "_currentSegment = curr;",
      "right" : "_currentSegment = curr;",
      "info" : "ExpressionStatement[17910-17933]:ExpressionStatement[17910-17933]"
    }, {
      "left" : "return curr;",
      "right" : "return curr;",
      "info" : "ReturnStatement[17942-17954]:ReturnStatement[17942-17954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18204-18575]:Block[18204-18588]"
    }, {
      "left" : "final char[] curr = _currentSegment;",
      "right" : "final char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[18214-18250]:VariableDeclarationStatement[18214-18250]"
    }, {
      "left" : "final int len = curr.length;",
      "right" : "final int len = curr.length;",
      "info" : "VariableDeclarationStatement[18299-18327]:VariableDeclarationStatement[18299-18327]"
    }, {
      "left" : "int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));",
      "right" : "int newLen = len + (len >> 1);",
      "info" : "VariableDeclarationStatement[18399-18505]:VariableDeclarationStatement[18336-18366]"
    }, {
      "left" : "return (_currentSegment = Arrays.copyOf(curr, newLen));",
      "right" : "return (_currentSegment = Arrays.copyOf(curr, newLen));",
      "info" : "ReturnStatement[18514-18569]:ReturnStatement[18527-18582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18932-19111]:Block[18945-19124]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[18942-18972]:VariableDeclarationStatement[18955-18985]"
    }, {
      "left" : "if (curr.length >= minSize)",
      "right" : "if (curr.length >= minSize)",
      "info" : "IfStatement[18981-19021]:IfStatement[18994-19034]"
    }, {
      "left" : "return curr;",
      "right" : "return curr;",
      "info" : "ReturnStatement[19009-19021]:ReturnStatement[19022-19034]"
    }, {
      "left" : "_currentSegment = curr = Arrays.copyOf(curr, minSize);",
      "right" : "_currentSegment = curr = Arrays.copyOf(curr, minSize);",
      "info" : "ExpressionStatement[19030-19084]:ExpressionStatement[19043-19097]"
    }, {
      "left" : "return curr;",
      "right" : "return curr;",
      "info" : "ReturnStatement[19093-19105]:ReturnStatement[19106-19118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19505-19535]:Block[19518-19548]"
    }, {
      "left" : "return contentsAsString();",
      "right" : "return contentsAsString();",
      "info" : "ReturnStatement[19507-19533]:ReturnStatement[19520-19546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19880-20482]:Block[19893-20495]"
    }, {
      "left" : "int sharedLen = _inputLen;",
      "right" : "int sharedLen = _inputLen;",
      "info" : "VariableDeclarationStatement[19890-19916]:VariableDeclarationStatement[19903-19929]"
    }, {
      "left" : "_inputLen = 0;",
      "right" : "_inputLen = 0;",
      "info" : "ExpressionStatement[19925-19939]:ExpressionStatement[19938-19952]"
    }, {
      "left" : "char[] inputBuf = _inputBuffer;",
      "right" : "char[] inputBuf = _inputBuffer;",
      "info" : "VariableDeclarationStatement[19948-19979]:VariableDeclarationStatement[19961-19992]"
    }, {
      "left" : "_inputBuffer = null;",
      "right" : "_inputBuffer = null;",
      "info" : "ExpressionStatement[19988-20008]:ExpressionStatement[20001-20021]"
    }, {
      "left" : "int start = _inputStart;",
      "right" : "int start = _inputStart;",
      "info" : "VariableDeclarationStatement[20017-20041]:VariableDeclarationStatement[20030-20054]"
    }, {
      "left" : "_inputStart = -1;",
      "right" : "_inputStart = -1;",
      "info" : "ExpressionStatement[20050-20067]:ExpressionStatement[20063-20080]"
    }, {
      "left" : "int needed = sharedLen+needExtra;",
      "right" : "int needed = sharedLen+needExtra;",
      "info" : "VariableDeclarationStatement[20139-20172]:VariableDeclarationStatement[20152-20185]"
    }, {
      "left" : "if (_currentSegment == null || needed > _currentSegment.length)",
      "right" : "if (_currentSegment == null || needed > _currentSegment.length)",
      "info" : "IfStatement[20181-20299]:IfStatement[20194-20312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20245-20299]:Block[20258-20312]"
    }, {
      "left" : "_currentSegment = buf(needed);",
      "right" : "_currentSegment = buf(needed);",
      "info" : "ExpressionStatement[20259-20289]:ExpressionStatement[20272-20302]"
    }, {
      "left" : "if (sharedLen > 0)",
      "right" : "if (sharedLen > 0)",
      "info" : "IfStatement[20308-20416]:IfStatement[20321-20429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20327-20416]:Block[20340-20429]"
    }, {
      "left" : "System.arraycopy(inputBuf, start, _currentSegment, 0, sharedLen);",
      "right" : "System.arraycopy(inputBuf, start, _currentSegment, 0, sharedLen);",
      "info" : "ExpressionStatement[20341-20406]:ExpressionStatement[20354-20419]"
    }, {
      "left" : "_segmentSize = 0;",
      "right" : "_segmentSize = 0;",
      "info" : "ExpressionStatement[20425-20442]:ExpressionStatement[20438-20455]"
    }, {
      "left" : "_currentSize = sharedLen;",
      "right" : "_currentSize = sharedLen;",
      "info" : "ExpressionStatement[20451-20476]:ExpressionStatement[20464-20489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20634-21302]:Block[20647-21315]"
    }, {
      "left" : "if (_segments == null)",
      "right" : "if (_segments == null)",
      "info" : "IfStatement[20706-20789]:IfStatement[20719-20802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20729-20789]:Block[20742-20802]"
    }, {
      "left" : "_segments = new ArrayList<char[]>();",
      "right" : "_segments = new ArrayList<char[]>();",
      "info" : "ExpressionStatement[20743-20779]:ExpressionStatement[20756-20792]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[20798-20828]:VariableDeclarationStatement[20811-20841]"
    }, {
      "left" : "_hasSegments = true;",
      "right" : "_hasSegments = true;",
      "info" : "ExpressionStatement[20837-20857]:ExpressionStatement[20850-20870]"
    }, {
      "left" : "_segments.add(curr);",
      "right" : "_segments.add(curr);",
      "info" : "ExpressionStatement[20866-20886]:ExpressionStatement[20879-20899]"
    }, {
      "left" : "_segmentSize += curr.length;",
      "right" : "_segmentSize += curr.length;",
      "info" : "ExpressionStatement[20895-20923]:ExpressionStatement[20908-20936]"
    }, {
      "left" : "_currentSize = 0;",
      "right" : "_currentSize = 0;",
      "info" : "ExpressionStatement[20932-20949]:ExpressionStatement[20945-20962]"
    }, {
      "left" : "int oldLen = curr.length;",
      "right" : "int oldLen = curr.length;",
      "info" : "VariableDeclarationStatement[20958-20983]:VariableDeclarationStatement[20971-20996]"
    }, {
      "left" : "int newLen = oldLen + (oldLen >> 1);",
      "right" : "int newLen = oldLen + (oldLen >> 1);",
      "info" : "VariableDeclarationStatement[21047-21083]:VariableDeclarationStatement[21060-21096]"
    }, {
      "left" : "if (newLen < MIN_SEGMENT_LEN)",
      "right" : "if (newLen < MIN_SEGMENT_LEN)",
      "info" : "IfStatement[21092-21256]:IfStatement[21105-21269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21122-21171]:Block[21135-21184]"
    }, {
      "left" : "newLen = MIN_SEGMENT_LEN;",
      "right" : "newLen = MIN_SEGMENT_LEN;",
      "info" : "ExpressionStatement[21136-21161]:ExpressionStatement[21149-21174]"
    }, {
      "left" : "if (newLen > MAX_SEGMENT_LEN)",
      "right" : "if (newLen > MAX_SEGMENT_LEN)",
      "info" : "IfStatement[21177-21256]:IfStatement[21190-21269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21207-21256]:Block[21220-21269]"
    }, {
      "left" : "newLen = MAX_SEGMENT_LEN;",
      "right" : "newLen = MAX_SEGMENT_LEN;",
      "info" : "ExpressionStatement[21221-21246]:ExpressionStatement[21234-21259]"
    }, {
      "left" : "_currentSegment = carr(newLen);",
      "right" : "_currentSegment = carr(newLen);",
      "info" : "ExpressionStatement[21265-21296]:ExpressionStatement[21278-21309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21341-22476]:Block[21354-22489]"
    }, {
      "left" : "if (_resultString != null)",
      "right" : "if (_resultString != null)",
      "info" : "IfStatement[21351-21463]:IfStatement[21364-21476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21378-21463]:Block[21391-21476]"
    }, {
      "left" : "return _resultString.toCharArray();",
      "right" : "return _resultString.toCharArray();",
      "info" : "ReturnStatement[21418-21453]:ReturnStatement[21431-21466]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[21507-21868]:IfStatement[21520-21881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21529-21868]:Block[21542-21881]"
    }, {
      "left" : "final int len = _inputLen;",
      "right" : "final int len = _inputLen;",
      "info" : "VariableDeclarationStatement[21543-21569]:VariableDeclarationStatement[21556-21582]"
    }, {
      "left" : "if (len < 1)",
      "right" : "if (len < 1)",
      "info" : "IfStatement[21582-21643]:IfStatement[21595-21656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21595-21643]:Block[21608-21656]"
    }, {
      "left" : "return NO_CHARS;",
      "right" : "return NO_CHARS;",
      "info" : "ReturnStatement[21613-21629]:ReturnStatement[21626-21642]"
    }, {
      "left" : "final int start = _inputStart;",
      "right" : "final int start = _inputStart;",
      "info" : "VariableDeclarationStatement[21656-21686]:VariableDeclarationStatement[21669-21699]"
    }, {
      "left" : "if (start == 0)",
      "right" : "if (start == 0)",
      "info" : "IfStatement[21699-21787]:IfStatement[21712-21800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21715-21787]:Block[21728-21800]"
    }, {
      "left" : "return Arrays.copyOf(_inputBuffer, len);",
      "right" : "return Arrays.copyOf(_inputBuffer, len);",
      "info" : "ReturnStatement[21733-21773]:ReturnStatement[21746-21786]"
    }, {
      "left" : "return Arrays.copyOfRange(_inputBuffer, start, start+len);",
      "right" : "return Arrays.copyOfRange(_inputBuffer, start, start+len);",
      "info" : "ReturnStatement[21800-21858]:ReturnStatement[21813-21871]"
    }, {
      "left" : "int size = size();",
      "right" : "int size = size();",
      "info" : "VariableDeclarationStatement[21905-21923]:VariableDeclarationStatement[21918-21936]"
    }, {
      "left" : "if (size < 1)",
      "right" : "if (size < 1)",
      "info" : "IfStatement[21932-21986]:IfStatement[21945-21999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21946-21986]:Block[21959-21999]"
    }, {
      "left" : "return NO_CHARS;",
      "right" : "return NO_CHARS;",
      "info" : "ReturnStatement[21960-21976]:ReturnStatement[21973-21989]"
    }, {
      "left" : "int offset = 0;",
      "right" : "int offset = 0;",
      "info" : "VariableDeclarationStatement[21995-22010]:VariableDeclarationStatement[22008-22023]"
    }, {
      "left" : "final char[] result = carr(size);",
      "right" : "final char[] result = carr(size);",
      "info" : "VariableDeclarationStatement[22019-22052]:VariableDeclarationStatement[22032-22065]"
    }, {
      "left" : "if (_segments != null)",
      "right" : "if (_segments != null)",
      "info" : "IfStatement[22061-22371]:IfStatement[22074-22384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22084-22371]:Block[22097-22384]"
    }, {
      "left" : "for (int i = 0, len = _segments.size(); i < len; ++i)",
      "right" : "for (int i = 0, len = _segments.size(); i < len; ++i)",
      "info" : "ForStatement[22098-22361]:ForStatement[22111-22374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22152-22361]:Block[22165-22374]"
    }, {
      "left" : "char[] curr = _segments.get(i);",
      "right" : "char[] curr = _segments.get(i);",
      "info" : "VariableDeclarationStatement[22170-22201]:VariableDeclarationStatement[22183-22214]"
    }, {
      "left" : "int currLen = curr.length;",
      "right" : "int currLen = curr.length;",
      "info" : "VariableDeclarationStatement[22218-22244]:VariableDeclarationStatement[22231-22257]"
    }, {
      "left" : "System.arraycopy(curr, 0, result, offset, currLen);",
      "right" : "System.arraycopy(curr, 0, result, offset, currLen);",
      "info" : "ExpressionStatement[22261-22312]:ExpressionStatement[22274-22325]"
    }, {
      "left" : "offset += currLen;",
      "right" : "offset += currLen;",
      "info" : "ExpressionStatement[22329-22347]:ExpressionStatement[22342-22360]"
    }, {
      "left" : "System.arraycopy(_currentSegment, 0, result, offset, _currentSize);",
      "right" : "System.arraycopy(_currentSegment, 0, result, offset, _currentSize);",
      "info" : "ExpressionStatement[22380-22447]:ExpressionStatement[22393-22460]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[22456-22470]:ReturnStatement[22469-22483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22511-22536]:Block[22524-22549]"
    }, {
      "left" : "return new char[len];",
      "right" : "return new char[len];",
      "info" : "ReturnStatement[22513-22534]:ReturnStatement[22526-22547]"
    } ]
  },
  "interFileMappings" : { }
}