{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "HelpFormatter",
      "right" : "HelpFormatter",
      "info" : "TypeDeclaration[1032-30417]:TypeDeclaration[1032-30407]"
    }, {
      "left" : "public static final int DEFAULT_WIDTH = 74;",
      "right" : "public static final int DEFAULT_WIDTH = 74;",
      "info" : "FieldDeclaration[1306-1398]:FieldDeclaration[1306-1398]"
    }, {
      "left" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "right" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "info" : "FieldDeclaration[1404-1501]:FieldDeclaration[1404-1501]"
    }, {
      "left" : "public static final int DEFAULT_DESC_PAD = 3;",
      "right" : "public static final int DEFAULT_DESC_PAD = 3;",
      "info" : "FieldDeclaration[1507-1658]:FieldDeclaration[1507-1658]"
    }, {
      "left" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "right" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "info" : "FieldDeclaration[1664-1797]:FieldDeclaration[1664-1797]"
    }, {
      "left" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "right" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "info" : "FieldDeclaration[1803-1895]:FieldDeclaration[1803-1895]"
    }, {
      "left" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "right" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "info" : "FieldDeclaration[1901-2001]:FieldDeclaration[1901-2001]"
    }, {
      "left" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "right" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "info" : "FieldDeclaration[2007-2099]:FieldDeclaration[2007-2099]"
    }, {
      "left" : "public int defaultWidth = DEFAULT_WIDTH;",
      "right" : "public int defaultWidth = DEFAULT_WIDTH;",
      "info" : "FieldDeclaration[2187-2399]:FieldDeclaration[2187-2399]"
    }, {
      "left" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "right" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "info" : "FieldDeclaration[2405-2641]:FieldDeclaration[2405-2641]"
    }, {
      "left" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "right" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "info" : "FieldDeclaration[2647-2923]:FieldDeclaration[2647-2923]"
    }, {
      "left" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "right" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "info" : "FieldDeclaration[2929-3197]:FieldDeclaration[2929-3197]"
    }, {
      "left" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "right" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "info" : "FieldDeclaration[3203-3435]:FieldDeclaration[3203-3435]"
    }, {
      "left" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "right" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "info" : "FieldDeclaration[3441-3659]:FieldDeclaration[3441-3659]"
    }, {
      "left" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "right" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "info" : "FieldDeclaration[3665-3896]:FieldDeclaration[3665-3896]"
    }, {
      "left" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "right" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "info" : "FieldDeclaration[3902-4119]:FieldDeclaration[3902-4119]"
    }, {
      "left" : "protected Comparator optionComparator = new OptionComparator();",
      "right" : "protected Comparator optionComparator = new OptionComparator();",
      "info" : "FieldDeclaration[4125-4356]:FieldDeclaration[4125-4356]"
    }, {
      "left" : "public void setWidth(int width)",
      "right" : "public void setWidth(int width)",
      "info" : "MethodDeclaration[4362-4533]:MethodDeclaration[4362-4533]"
    }, {
      "left" : "public int getWidth()",
      "right" : "public int getWidth()",
      "info" : "MethodDeclaration[4539-4684]:MethodDeclaration[4539-4684]"
    }, {
      "left" : "public void setLeftPadding(int padding)",
      "right" : "public void setLeftPadding(int padding)",
      "info" : "MethodDeclaration[4690-4887]:MethodDeclaration[4690-4887]"
    }, {
      "left" : "public int getLeftPadding()",
      "right" : "public int getLeftPadding()",
      "info" : "MethodDeclaration[4893-5058]:MethodDeclaration[4893-5058]"
    }, {
      "left" : "public void setDescPadding(int padding)",
      "right" : "public void setDescPadding(int padding)",
      "info" : "MethodDeclaration[5064-5261]:MethodDeclaration[5064-5261]"
    }, {
      "left" : "public int getDescPadding()",
      "right" : "public int getDescPadding()",
      "info" : "MethodDeclaration[5267-5432]:MethodDeclaration[5267-5432]"
    }, {
      "left" : "public void setSyntaxPrefix(String prefix)",
      "right" : "public void setSyntaxPrefix(String prefix)",
      "info" : "MethodDeclaration[5438-5643]:MethodDeclaration[5438-5643]"
    }, {
      "left" : "public String getSyntaxPrefix()",
      "right" : "public String getSyntaxPrefix()",
      "info" : "MethodDeclaration[5649-5825]:MethodDeclaration[5649-5825]"
    }, {
      "left" : "public void setNewLine(String newline)",
      "right" : "public void setNewLine(String newline)",
      "info" : "MethodDeclaration[5831-6019]:MethodDeclaration[5831-6019]"
    }, {
      "left" : "public String getNewLine()",
      "right" : "public String getNewLine()",
      "info" : "MethodDeclaration[6025-6181]:MethodDeclaration[6025-6181]"
    }, {
      "left" : "public void setOptPrefix(String prefix)",
      "right" : "public void setOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6187-6380]:MethodDeclaration[6187-6380]"
    }, {
      "left" : "public String getOptPrefix()",
      "right" : "public String getOptPrefix()",
      "info" : "MethodDeclaration[6386-6550]:MethodDeclaration[6386-6550]"
    }, {
      "left" : "public void setLongOptPrefix(String prefix)",
      "right" : "public void setLongOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6556-6765]:MethodDeclaration[6556-6765]"
    }, {
      "left" : "public String getLongOptPrefix()",
      "right" : "public String getLongOptPrefix()",
      "info" : "MethodDeclaration[6771-6951]:MethodDeclaration[6771-6951]"
    }, {
      "left" : "public void setArgName(String name)",
      "right" : "public void setArgName(String name)",
      "info" : "MethodDeclaration[6957-7136]:MethodDeclaration[6957-7136]"
    }, {
      "left" : "public String getArgName()",
      "right" : "public String getArgName()",
      "info" : "MethodDeclaration[7142-7298]:MethodDeclaration[7142-7298]"
    }, {
      "left" : "public Comparator getOptionComparator()",
      "right" : "public Comparator getOptionComparator()",
      "info" : "MethodDeclaration[7304-7562]:MethodDeclaration[7304-7562]"
    }, {
      "left" : "public void setOptionComparator(Comparator comparator)",
      "right" : "public void setOptionComparator(Comparator comparator)",
      "info" : "MethodDeclaration[7568-8015]:MethodDeclaration[7568-8015]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options)",
      "info" : "MethodDeclaration[8104-8538]:MethodDeclaration[8104-8538]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options, \n                          boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options, \n                          boolean autoUsage)",
      "info" : "MethodDeclaration[8544-9121]:MethodDeclaration[8544-9121]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, \n                          String footer)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, \n                          String footer)",
      "info" : "MethodDeclaration[9127-9745]:MethodDeclaration[9127-9745]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, \n                          String footer, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, \n                          String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[9751-10518]:MethodDeclaration[9751-10518]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header, \n                          Options options, String footer)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header, \n                          Options options, String footer)",
      "info" : "MethodDeclaration[10524-11234]:MethodDeclaration[10524-11234]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header, \n                          Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header, \n                          Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[11240-12195]:MethodDeclaration[11240-12195]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "info" : "MethodDeclaration[12201-13222]:MethodDeclaration[12201-13222]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer, boolean autoUsage)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[13229-14918]:MethodDeclaration[13229-14918]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String app, \n                           Options options)",
      "right" : "public void printUsage(PrintWriter pw, int width, String app, \n                           Options options)",
      "info" : "MethodDeclaration[14924-17137]:MethodDeclaration[14924-17137]"
    }, {
      "left" : "private void appendOptionGroup(final StringBuffer buff, \n                                          final OptionGroup group)",
      "right" : "private void appendOptionGroup(final StringBuffer buff, \n                                          final OptionGroup group)",
      "info" : "MethodDeclaration[17143-18286]:MethodDeclaration[17143-18286]"
    }, {
      "left" : "private static void appendOption(final StringBuffer buff, \n                                     final Option option, \n                                     final boolean required)",
      "right" : "private static void appendOption(final StringBuffer buff, \n                                     final Option option, \n                                     final boolean required)",
      "info" : "MethodDeclaration[18292-19316]:MethodDeclaration[18292-19306]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "right" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "info" : "MethodDeclaration[19322-19892]:MethodDeclaration[19312-19882]"
    }, {
      "left" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "right" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "info" : "MethodDeclaration[19898-20717]:MethodDeclaration[19888-20707]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "info" : "MethodDeclaration[20723-21113]:MethodDeclaration[20713-21103]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, \n                             String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, \n                             String text)",
      "info" : "MethodDeclaration[21119-21753]:MethodDeclaration[21109-21743]"
    }, {
      "left" : "protected StringBuffer renderOptions(StringBuffer sb, int width, \n                                         Options options, int leftPad, \n                                         int descPad)",
      "right" : "protected StringBuffer renderOptions(StringBuffer sb, int width, \n                                         Options options, int leftPad, \n                                         int descPad)",
      "info" : "MethodDeclaration[21841-25091]:MethodDeclaration[21831-25081]"
    }, {
      "left" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "right" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[25097-26433]:MethodDeclaration[25087-26423]"
    }, {
      "left" : "protected int findWrapPos(String text, int width, int startPos)",
      "right" : "protected int findWrapPos(String text, int width, int startPos)",
      "info" : "MethodDeclaration[26439-28262]:MethodDeclaration[26429-28252]"
    }, {
      "left" : "protected String createPadding(int len)",
      "right" : "protected String createPadding(int len)",
      "info" : "MethodDeclaration[28268-28687]:MethodDeclaration[28258-28677]"
    }, {
      "left" : "protected String rtrim(String s)",
      "right" : "protected String rtrim(String s)",
      "info" : "MethodDeclaration[28693-29228]:MethodDeclaration[28683-29218]"
    }, {
      "left" : "OptionComparator",
      "right" : "OptionComparator",
      "info" : "TypeDeclaration[29474-30415]:TypeDeclaration[29464-30405]"
    }, {
      "left" : "public int compare(Object o1, Object o2)",
      "right" : "public int compare(Object o1, Object o2)",
      "info" : "MethodDeclaration[29673-30409]:MethodDeclaration[29663-30399]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4491-4533]:Block[4491-4533]"
    }, {
      "left" : "this.defaultWidth = width;",
      "right" : "this.defaultWidth = width;",
      "info" : "ExpressionStatement[4501-4527]:ExpressionStatement[4501-4527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4643-4684]:Block[4643-4684]"
    }, {
      "left" : "return this.defaultWidth;",
      "right" : "return this.defaultWidth;",
      "info" : "ReturnStatement[4653-4678]:ReturnStatement[4653-4678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4841-4887]:Block[4841-4887]"
    }, {
      "left" : "this.defaultLeftPad = padding;",
      "right" : "this.defaultLeftPad = padding;",
      "info" : "ExpressionStatement[4851-4881]:ExpressionStatement[4851-4881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5015-5058]:Block[5015-5058]"
    }, {
      "left" : "return this.defaultLeftPad;",
      "right" : "return this.defaultLeftPad;",
      "info" : "ReturnStatement[5025-5052]:ReturnStatement[5025-5052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5215-5261]:Block[5215-5261]"
    }, {
      "left" : "this.defaultDescPad = padding;",
      "right" : "this.defaultDescPad = padding;",
      "info" : "ExpressionStatement[5225-5255]:ExpressionStatement[5225-5255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5389-5432]:Block[5389-5432]"
    }, {
      "left" : "return this.defaultDescPad;",
      "right" : "return this.defaultDescPad;",
      "info" : "ReturnStatement[5399-5426]:ReturnStatement[5399-5426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5593-5643]:Block[5593-5643]"
    }, {
      "left" : "this.defaultSyntaxPrefix = prefix;",
      "right" : "this.defaultSyntaxPrefix = prefix;",
      "info" : "ExpressionStatement[5603-5637]:ExpressionStatement[5603-5637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5777-5825]:Block[5777-5825]"
    }, {
      "left" : "return this.defaultSyntaxPrefix;",
      "right" : "return this.defaultSyntaxPrefix;",
      "info" : "ReturnStatement[5787-5819]:ReturnStatement[5787-5819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5973-6019]:Block[5973-6019]"
    }, {
      "left" : "this.defaultNewLine = newline;",
      "right" : "this.defaultNewLine = newline;",
      "info" : "ExpressionStatement[5983-6013]:ExpressionStatement[5983-6013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6138-6181]:Block[6138-6181]"
    }, {
      "left" : "return this.defaultNewLine;",
      "right" : "return this.defaultNewLine;",
      "info" : "ReturnStatement[6148-6175]:ReturnStatement[6148-6175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6333-6380]:Block[6333-6380]"
    }, {
      "left" : "this.defaultOptPrefix = prefix;",
      "right" : "this.defaultOptPrefix = prefix;",
      "info" : "ExpressionStatement[6343-6374]:ExpressionStatement[6343-6374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6505-6550]:Block[6505-6550]"
    }, {
      "left" : "return this.defaultOptPrefix;",
      "right" : "return this.defaultOptPrefix;",
      "info" : "ReturnStatement[6515-6544]:ReturnStatement[6515-6544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6714-6765]:Block[6714-6765]"
    }, {
      "left" : "this.defaultLongOptPrefix = prefix;",
      "right" : "this.defaultLongOptPrefix = prefix;",
      "info" : "ExpressionStatement[6724-6759]:ExpressionStatement[6724-6759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6902-6951]:Block[6902-6951]"
    }, {
      "left" : "return this.defaultLongOptPrefix;",
      "right" : "return this.defaultLongOptPrefix;",
      "info" : "ReturnStatement[6912-6945]:ReturnStatement[6912-6945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7093-7136]:Block[7093-7136]"
    }, {
      "left" : "this.defaultArgName = name;",
      "right" : "this.defaultArgName = name;",
      "info" : "ExpressionStatement[7103-7130]:ExpressionStatement[7103-7130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7255-7298]:Block[7255-7298]"
    }, {
      "left" : "return this.defaultArgName;",
      "right" : "return this.defaultArgName;",
      "info" : "ReturnStatement[7265-7292]:ReturnStatement[7265-7292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7517-7562]:Block[7517-7562]"
    }, {
      "left" : "return this.optionComparator;",
      "right" : "return this.optionComparator;",
      "info" : "ReturnStatement[7527-7556]:ReturnStatement[7527-7556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7810-8015]:Block[7810-8015]"
    }, {
      "left" : "if ( comparator == null)",
      "right" : "if ( comparator == null)",
      "info" : "IfStatement[7820-8009]:IfStatement[7820-8009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7855-7926]:Block[7855-7926]"
    }, {
      "left" : "this.optionComparator = new OptionComparator();",
      "right" : "this.optionComparator = new OptionComparator();",
      "info" : "ExpressionStatement[7869-7916]:ExpressionStatement[7869-7916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7950-8009]:Block[7950-8009]"
    }, {
      "left" : "this.optionComparator = comparator;",
      "right" : "this.optionComparator = comparator;",
      "info" : "ExpressionStatement[7964-7999]:ExpressionStatement[7964-7999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8455-8538]:Block[8455-8538]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "info" : "ExpressionStatement[8465-8532]:ExpressionStatement[8465-8532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9034-9121]:Block[9034-9121]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "info" : "ExpressionStatement[9044-9115]:ExpressionStatement[9044-9115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9672-9745]:Block[9672-9745]"
    }, {
      "left" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[9682-9739]:ExpressionStatement[9682-9739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10408-10518]:Block[10408-10518]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, \n                  autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, \n                  autoUsage);",
      "info" : "ExpressionStatement[10418-10512]:ExpressionStatement[10418-10512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11154-11234]:Block[11154-11234]"
    }, {
      "left" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[11164-11228]:ExpressionStatement[11164-11228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11981-12195]:Block[11981-12195]"
    }, {
      "left" : "PrintWriter pw = new PrintWriter(System.out);",
      "right" : "PrintWriter pw = new PrintWriter(System.out);",
      "info" : "VariableDeclarationStatement[11991-12036]:VariableDeclarationStatement[11991-12036]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, \n                  defaultDescPad, footer, autoUsage);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, \n                  defaultDescPad, footer, autoUsage);",
      "info" : "ExpressionStatement[12046-12169]:ExpressionStatement[12046-12169]"
    }, {
      "left" : "pw.flush();",
      "right" : "pw.flush();",
      "info" : "ExpressionStatement[12178-12189]:ExpressionStatement[12178-12189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13101-13222]:Block[13101-13222]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, \n                  footer, false);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, \n                  footer, false);",
      "info" : "ExpressionStatement[13111-13216]:ExpressionStatement[13111-13216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14240-14918]:Block[14240-14918]"
    }, {
      "left" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "right" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "info" : "IfStatement[14250-14409]:IfStatement[14250-14409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14320-14409]:Block[14320-14409]"
    }, {
      "left" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "right" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "info" : "ThrowStatement[14334-14399]:ThrowStatement[14334-14399]"
    }, {
      "left" : "if (autoUsage)",
      "right" : "if (autoUsage)",
      "info" : "IfStatement[14419-14595]:IfStatement[14419-14595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14442-14512]:Block[14442-14512]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax, options);",
      "right" : "printUsage(pw, width, cmdLineSyntax, options);",
      "info" : "ExpressionStatement[14456-14502]:ExpressionStatement[14456-14502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14534-14595]:Block[14534-14595]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax);",
      "right" : "printUsage(pw, width, cmdLineSyntax);",
      "info" : "ExpressionStatement[14548-14585]:ExpressionStatement[14548-14585]"
    }, {
      "left" : "if ((header != null) && (header.trim().length() > 0))",
      "right" : "if ((header != null) && (header.trim().length() > 0))",
      "info" : "IfStatement[14605-14723]:IfStatement[14605-14723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14667-14723]:Block[14667-14723]"
    }, {
      "left" : "printWrapped(pw, width, header);",
      "right" : "printWrapped(pw, width, header);",
      "info" : "ExpressionStatement[14681-14713]:ExpressionStatement[14681-14713]"
    }, {
      "left" : "printOptions(pw, width, options, leftPad, descPad);",
      "right" : "printOptions(pw, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[14733-14784]:ExpressionStatement[14733-14784]"
    }, {
      "left" : "if ((footer != null) && (footer.trim().length() > 0))",
      "right" : "if ((footer != null) && (footer.trim().length() > 0))",
      "info" : "IfStatement[14794-14912]:IfStatement[14794-14912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14856-14912]:Block[14856-14912]"
    }, {
      "left" : "printWrapped(pw, width, footer);",
      "right" : "printWrapped(pw, width, footer);",
      "info" : "ExpressionStatement[14870-14902]:ExpressionStatement[14870-14902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15351-17137]:Block[15351-17137]"
    }, {
      "left" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app)\n                                                                 .append(\" \");",
      "right" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app)\n                                                                 .append(\" \");",
      "info" : "VariableDeclarationStatement[15401-15549]:VariableDeclarationStatement[15401-15549]"
    }, {
      "left" : "final Collection processedGroups = new ArrayList();",
      "right" : "final Collection processedGroups = new ArrayList();",
      "info" : "VariableDeclarationStatement[15612-15663]:VariableDeclarationStatement[15612-15663]"
    }, {
      "left" : "Option option;",
      "right" : "Option option;",
      "info" : "VariableDeclarationStatement[15698-15712]:VariableDeclarationStatement[15698-15712]"
    }, {
      "left" : "List optList = new ArrayList(options.getOptions());",
      "right" : "List optList = new ArrayList(options.getOptions());",
      "info" : "VariableDeclarationStatement[15722-15773]:VariableDeclarationStatement[15722-15773]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator() );",
      "right" : "Collections.sort(optList, getOptionComparator() );",
      "info" : "ExpressionStatement[15782-15832]:ExpressionStatement[15782-15832]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[15877-16994]:ForStatement[15877-16994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15937-16994]:Block[15937-16994]"
    }, {
      "left" : "option = (Option) i.next();",
      "right" : "option = (Option) i.next();",
      "info" : "ExpressionStatement[15986-16013]:ExpressionStatement[15986-16013]"
    }, {
      "left" : "OptionGroup group = options.getOptionGroup(option);",
      "right" : "OptionGroup group = options.getOptionGroup(option);",
      "info" : "VariableDeclarationStatement[16088-16139]:VariableDeclarationStatement[16088-16139]"
    }, {
      "left" : "if (group != null)",
      "right" : "if (group != null)",
      "info" : "IfStatement[16202-16892]:IfStatement[16202-16892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16233-16722]:Block[16233-16722]"
    }, {
      "left" : "if (!processedGroups.contains(group))",
      "right" : "if (!processedGroups.contains(group))",
      "info" : "IfStatement[16318-16596]:IfStatement[16318-16596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16372-16596]:Block[16372-16596]"
    }, {
      "left" : "processedGroups.add(group);",
      "right" : "processedGroups.add(group);",
      "info" : "ExpressionStatement[16453-16480]:ExpressionStatement[16453-16480]"
    }, {
      "left" : "appendOptionGroup(buff, group);",
      "right" : "appendOptionGroup(buff, group);",
      "info" : "ExpressionStatement[16547-16578]:ExpressionStatement[16547-16578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16812-16892]:Block[16812-16892]"
    }, {
      "left" : "appendOption(buff, option, option.isRequired());",
      "right" : "appendOption(buff, option, option.isRequired());",
      "info" : "ExpressionStatement[16830-16878]:ExpressionStatement[16830-16878]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[16906-16984]:IfStatement[16906-16984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16935-16984]:Block[16935-16984]"
    }, {
      "left" : "buff.append(\" \");",
      "right" : "buff.append(\" \");",
      "info" : "ExpressionStatement[16953-16970]:ExpressionStatement[16953-16970]"
    }, {
      "left" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, \n                     buff.toString());",
      "right" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, \n                     buff.toString());",
      "info" : "ExpressionStatement[17034-17131]:ExpressionStatement[17034-17131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17638-18286]:Block[17638-18286]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[17648-17722]:IfStatement[17648-17722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17681-17722]:Block[17681-17722]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[17695-17712]:ExpressionStatement[17695-17712]"
    }, {
      "left" : "List optList = new ArrayList(group.getOptions());",
      "right" : "List optList = new ArrayList(group.getOptions());",
      "info" : "VariableDeclarationStatement[17732-17781]:VariableDeclarationStatement[17732-17781]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator() );",
      "right" : "Collections.sort(optList, getOptionComparator() );",
      "info" : "ExpressionStatement[17790-17840]:ExpressionStatement[17790-17840]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[17895-18196]:ForStatement[17895-18196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17955-18196]:Block[17955-18196]"
    }, {
      "left" : "appendOption(buff, (Option) i.next(), true);",
      "right" : "appendOption(buff, (Option) i.next(), true);",
      "info" : "ExpressionStatement[18048-18092]:ExpressionStatement[18048-18092]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[18106-18186]:IfStatement[18106-18186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18135-18186]:Block[18135-18186]"
    }, {
      "left" : "buff.append(\" | \");",
      "right" : "buff.append(\" | \");",
      "info" : "ExpressionStatement[18153-18172]:ExpressionStatement[18153-18172]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[18206-18280]:IfStatement[18206-18280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18239-18280]:Block[18239-18280]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[18253-18270]:ExpressionStatement[18253-18270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18717-19316]:Block[18717-19306]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[18727-18791]:IfStatement[18727-18791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18750-18791]:Block[18750-18791]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[18764-18781]:ExpressionStatement[18764-18781]"
    }, {
      "left" : "if (option.getOpt() != null)",
      "right" : "if (option.getOpt() != null)",
      "info" : "IfStatement[18801-18995]:IfStatement[18801-18995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18838-18903]:Block[18838-18903]"
    }, {
      "left" : "buff.append(\"-\").append(option.getOpt());",
      "right" : "buff.append(\"-\").append(option.getOpt());",
      "info" : "ExpressionStatement[18852-18893]:ExpressionStatement[18852-18893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18925-18995]:Block[18925-18995]"
    }, {
      "left" : "buff.append(\"--\").append(option.getLongOpt());",
      "right" : "buff.append(\"--\").append(option.getLongOpt());",
      "info" : "ExpressionStatement[18939-18985]:ExpressionStatement[18939-18985]"
    }, {
      "left" : "if (option.hasArg() && (option.getArgName() != null))",
      "right" : "if (option.hasArg() && option.hasArgName())",
      "info" : "IfStatement[19042-19186]:IfStatement[19042-19176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19104-19186]:Block[19094-19176]"
    }, {
      "left" : "buff.append(\" <\").append(option.getArgName()).append(\">\");",
      "right" : "buff.append(\" <\").append(option.getArgName()).append(\">\");",
      "info" : "ExpressionStatement[19118-19176]:ExpressionStatement[19108-19166]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[19246-19310]:IfStatement[19236-19300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19269-19310]:Block[19259-19300]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[19283-19300]:ExpressionStatement[19273-19290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19700-19892]:Block[19690-19882]"
    }, {
      "left" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "right" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "info" : "VariableDeclarationStatement[19710-19754]:VariableDeclarationStatement[19700-19744]"
    }, {
      "left" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, \n                     defaultSyntaxPrefix + cmdLineSyntax);",
      "right" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, \n                     defaultSyntaxPrefix + cmdLineSyntax);",
      "info" : "ExpressionStatement[19764-19886]:ExpressionStatement[19754-19876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20567-20717]:Block[20557-20707]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer();",
      "right" : "StringBuffer sb = new StringBuffer();",
      "info" : "VariableDeclarationStatement[20577-20614]:VariableDeclarationStatement[20567-20604]"
    }, {
      "left" : "renderOptions(sb, width, options, leftPad, descPad);",
      "right" : "renderOptions(sb, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[20624-20676]:ExpressionStatement[20614-20666]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[20685-20711]:ExpressionStatement[20675-20701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21064-21113]:Block[21054-21103]"
    }, {
      "left" : "printWrapped(pw, width, 0, text);",
      "right" : "printWrapped(pw, width, 0, text);",
      "info" : "ExpressionStatement[21074-21107]:ExpressionStatement[21064-21097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21590-21753]:Block[21580-21743]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer(text.length());",
      "right" : "StringBuffer sb = new StringBuffer(text.length());",
      "info" : "VariableDeclarationStatement[21600-21650]:VariableDeclarationStatement[21590-21640]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "info" : "ExpressionStatement[21660-21712]:ExpressionStatement[21650-21702]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[21721-21747]:ExpressionStatement[21711-21737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22616-25091]:Block[22606-25081]"
    }, {
      "left" : "final String lpad = createPadding(leftPad);",
      "right" : "final String lpad = createPadding(leftPad);",
      "info" : "VariableDeclarationStatement[22626-22669]:VariableDeclarationStatement[22616-22659]"
    }, {
      "left" : "final String dpad = createPadding(descPad);",
      "right" : "final String dpad = createPadding(descPad);",
      "info" : "VariableDeclarationStatement[22678-22721]:VariableDeclarationStatement[22668-22711]"
    }, {
      "left" : "int max = 0;",
      "right" : "int max = 0;",
      "info" : "VariableDeclarationStatement[22964-22976]:VariableDeclarationStatement[22954-22966]"
    }, {
      "left" : "StringBuffer optBuf;",
      "right" : "StringBuffer optBuf;",
      "info" : "VariableDeclarationStatement[22985-23005]:VariableDeclarationStatement[22975-22995]"
    }, {
      "left" : "List prefixList = new ArrayList();",
      "right" : "List prefixList = new ArrayList();",
      "info" : "VariableDeclarationStatement[23014-23048]:VariableDeclarationStatement[23004-23038]"
    }, {
      "left" : "Option option;",
      "right" : "Option option;",
      "info" : "VariableDeclarationStatement[23057-23071]:VariableDeclarationStatement[23047-23061]"
    }, {
      "left" : "List optList = options.helpOptions();",
      "right" : "List optList = options.helpOptions();",
      "info" : "VariableDeclarationStatement[23080-23117]:VariableDeclarationStatement[23070-23107]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator() );",
      "right" : "Collections.sort(optList, getOptionComparator() );",
      "info" : "ExpressionStatement[23127-23177]:ExpressionStatement[23117-23167]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[23187-24318]:ForStatement[23177-24308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23247-24318]:Block[23237-24308]"
    }, {
      "left" : "option = (Option) i.next();",
      "right" : "option = (Option) i.next();",
      "info" : "ExpressionStatement[23261-23288]:ExpressionStatement[23251-23278]"
    }, {
      "left" : "optBuf = new StringBuffer(8);",
      "right" : "optBuf = new StringBuffer(8);",
      "info" : "ExpressionStatement[23301-23330]:ExpressionStatement[23291-23320]"
    }, {
      "left" : "if (option.getOpt() == null)",
      "right" : "if (option.getOpt() == null)",
      "info" : "IfStatement[23344-23881]:IfStatement[23334-23871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23385-23525]:Block[23375-23515]"
    }, {
      "left" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix)\n                      .append(option.getLongOpt());",
      "right" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix)\n                      .append(option.getLongOpt());",
      "info" : "ExpressionStatement[23403-23511]:ExpressionStatement[23393-23501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23555-23881]:Block[23545-23871]"
    }, {
      "left" : "optBuf.append(lpad).append(defaultOptPrefix)\n                      .append(option.getOpt());",
      "right" : "optBuf.append(lpad).append(defaultOptPrefix)\n                      .append(option.getOpt());",
      "info" : "ExpressionStatement[23573-23665]:ExpressionStatement[23563-23655]"
    }, {
      "left" : "if (option.hasLongOpt())",
      "right" : "if (option.hasLongOpt())",
      "info" : "IfStatement[23683-23867]:IfStatement[23673-23857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23724-23867]:Block[23714-23857]"
    }, {
      "left" : "optBuf.append(',').append(defaultLongOptPrefix)\n                          .append(option.getLongOpt());",
      "right" : "optBuf.append(',').append(defaultLongOptPrefix)\n                          .append(option.getLongOpt());",
      "info" : "ExpressionStatement[23746-23849]:ExpressionStatement[23736-23839]"
    }, {
      "left" : "if (option.hasArg())",
      "right" : "if (option.hasArg())",
      "info" : "IfStatement[23895-24198]:IfStatement[23885-24188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23928-24198]:Block[23918-24188]"
    }, {
      "left" : "if (option.hasArgName())",
      "right" : "if (option.hasArgName())",
      "info" : "IfStatement[23946-24184]:IfStatement[23936-24174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23987-24087]:Block[23977-24077]"
    }, {
      "left" : "optBuf.append(\" <\").append(option.getArgName()).append(\">\");",
      "right" : "optBuf.append(\" <\").append(option.getArgName()).append(\">\");",
      "info" : "ExpressionStatement[24009-24069]:ExpressionStatement[23999-24059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24125-24184]:Block[24115-24174]"
    }, {
      "left" : "optBuf.append(' ');",
      "right" : "optBuf.append(' ');",
      "info" : "ExpressionStatement[24147-24166]:ExpressionStatement[24137-24156]"
    }, {
      "left" : "prefixList.add(optBuf);",
      "right" : "prefixList.add(optBuf);",
      "info" : "ExpressionStatement[24212-24235]:ExpressionStatement[24202-24225]"
    }, {
      "left" : "max = (optBuf.length() > max)       ? optBuf.length() : max;",
      "right" : "max = (optBuf.length() > max)       ? optBuf.length() : max;",
      "info" : "ExpressionStatement[24248-24308]:ExpressionStatement[24238-24298]"
    }, {
      "left" : "int x = 0;",
      "right" : "int x = 0;",
      "info" : "VariableDeclarationStatement[24328-24338]:VariableDeclarationStatement[24318-24328]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[24348-25065]:ForStatement[24338-25055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24408-25065]:Block[24398-25055]"
    }, {
      "left" : "option = (Option) i.next();",
      "right" : "option = (Option) i.next();",
      "info" : "ExpressionStatement[24422-24449]:ExpressionStatement[24412-24439]"
    }, {
      "left" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "right" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "info" : "ExpressionStatement[24462-24520]:ExpressionStatement[24452-24510]"
    }, {
      "left" : "if (optBuf.length() < max)",
      "right" : "if (optBuf.length() < max)",
      "info" : "IfStatement[24534-24657]:IfStatement[24524-24647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24573-24657]:Block[24563-24647]"
    }, {
      "left" : "optBuf.append(createPadding(max - optBuf.length()));",
      "right" : "optBuf.append(createPadding(max - optBuf.length()));",
      "info" : "ExpressionStatement[24591-24643]:ExpressionStatement[24581-24633]"
    }, {
      "left" : "optBuf.append(dpad);",
      "right" : "optBuf.append(dpad);",
      "info" : "ExpressionStatement[24671-24691]:ExpressionStatement[24661-24681]"
    }, {
      "left" : "int nextLineTabStop = max + descPad;",
      "right" : "int nextLineTabStop = max + descPad;",
      "info" : "VariableDeclarationStatement[24705-24741]:VariableDeclarationStatement[24695-24731]"
    }, {
      "left" : "if (option.getDescription() != null)",
      "right" : "if (option.getDescription() != null)",
      "info" : "IfStatement[24755-24875]:IfStatement[24745-24865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24804-24875]:Block[24794-24865]"
    }, {
      "left" : "optBuf.append(option.getDescription());",
      "right" : "optBuf.append(option.getDescription());",
      "info" : "ExpressionStatement[24822-24861]:ExpressionStatement[24812-24851]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "info" : "ExpressionStatement[24889-24954]:ExpressionStatement[24879-24944]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[24968-25055]:IfStatement[24958-25045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24997-25055]:Block[24987-25045]"
    }, {
      "left" : "sb.append(defaultNewLine);",
      "right" : "sb.append(defaultNewLine);",
      "info" : "ExpressionStatement[25015-25041]:ExpressionStatement[25005-25031]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[25075-25085]:ReturnStatement[25065-25075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25701-26433]:Block[25691-26423]"
    }, {
      "left" : "int pos = findWrapPos(text, width, 0);",
      "right" : "int pos = findWrapPos(text, width, 0);",
      "info" : "VariableDeclarationStatement[25711-25749]:VariableDeclarationStatement[25701-25739]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[25759-25853]:IfStatement[25749-25843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25782-25853]:Block[25772-25843]"
    }, {
      "left" : "sb.append(rtrim(text));",
      "right" : "sb.append(rtrim(text));",
      "info" : "ExpressionStatement[25796-25819]:ExpressionStatement[25786-25809]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[25833-25843]:ReturnStatement[25823-25833]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[25862-25926]:ExpressionStatement[25852-25916]"
    }, {
      "left" : "final String padding = createPadding(nextLineTabStop);",
      "right" : "final String padding = createPadding(nextLineTabStop);",
      "info" : "VariableDeclarationStatement[26032-26086]:VariableDeclarationStatement[26022-26076]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[26096-26427]:WhileStatement[26086-26417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26117-26427]:Block[26107-26417]"
    }, {
      "left" : "text = padding + text.substring(pos).trim();",
      "right" : "text = padding + text.substring(pos).trim();",
      "info" : "ExpressionStatement[26131-26175]:ExpressionStatement[26121-26165]"
    }, {
      "left" : "pos = findWrapPos(text, width, 0);",
      "right" : "pos = findWrapPos(text, width, 0);",
      "info" : "ExpressionStatement[26188-26222]:ExpressionStatement[26178-26212]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[26236-26339]:IfStatement[26226-26329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26263-26339]:Block[26253-26329]"
    }, {
      "left" : "sb.append(text);",
      "right" : "sb.append(text);",
      "info" : "ExpressionStatement[26281-26297]:ExpressionStatement[26271-26287]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[26315-26325]:ReturnStatement[26305-26315]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[26353-26417]:ExpressionStatement[26343-26407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27123-28262]:Block[27113-28252]"
    }, {
      "left" : "int pos = -1;",
      "right" : "int pos = -1;",
      "info" : "VariableDeclarationStatement[27133-27146]:VariableDeclarationStatement[27123-27136]"
    }, {
      "left" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n            || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "right" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n            || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "info" : "IfStatement[27230-27514]:IfStatement[27220-27504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27380-27417]:Block[27370-27407]"
    }, {
      "left" : "return pos+1;",
      "right" : "return pos+1;",
      "info" : "ReturnStatement[27394-27407]:ReturnStatement[27384-27397]"
    }, {
      "left" : "if ((startPos + width) >= text.length())",
      "right" : "if ((startPos + width) >= text.length())",
      "info" : "IfStatement[27431-27514]:IfStatement[27421-27504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27480-27514]:Block[27470-27504]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[27494-27504]:ReturnStatement[27484-27494]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[27597-27620]:ExpressionStatement[27587-27610]"
    }, {
      "left" : "char c;",
      "right" : "char c;",
      "info" : "VariableDeclarationStatement[27630-27637]:VariableDeclarationStatement[27620-27627]"
    }, {
      "left" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))",
      "right" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))",
      "info" : "WhileStatement[27647-27791]:WhileStatement[27637-27781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27761-27791]:Block[27751-27781]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[27775-27781]:ExpressionStatement[27765-27771]"
    }, {
      "left" : "if (pos > startPos)",
      "right" : "if (pos > startPos)",
      "info" : "IfStatement[27841-27904]:IfStatement[27831-27894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27869-27904]:Block[27859-27894]"
    }, {
      "left" : "return pos;",
      "right" : "return pos;",
      "info" : "ReturnStatement[27883-27894]:ReturnStatement[27873-27884]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[28014-28037]:ExpressionStatement[28004-28027]"
    }, {
      "left" : "while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))",
      "right" : "while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))",
      "info" : "WhileStatement[28047-28196]:WhileStatement[28037-28186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28166-28196]:Block[28156-28186]"
    }, {
      "left" : "++pos;",
      "right" : "++pos;",
      "info" : "ExpressionStatement[28180-28186]:ExpressionStatement[28170-28176]"
    }, {
      "left" : "return (pos == text.length())        ? (-1) : pos;",
      "right" : "return (pos == text.length())        ? (-1) : pos;",
      "info" : "ReturnStatement[28206-28256]:ReturnStatement[28196-28246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28513-28687]:Block[28503-28677]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer(len);",
      "right" : "StringBuffer sb = new StringBuffer(len);",
      "info" : "VariableDeclarationStatement[28523-28563]:VariableDeclarationStatement[28513-28553]"
    }, {
      "left" : "for (int i = 0; i < len; ++i)",
      "right" : "for (int i = 0; i < len; ++i)",
      "info" : "ForStatement[28573-28650]:ForStatement[28563-28640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28611-28650]:Block[28601-28640]"
    }, {
      "left" : "sb.append(' ');",
      "right" : "sb.append(' ');",
      "info" : "ExpressionStatement[28625-28640]:ExpressionStatement[28615-28630]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[28660-28681]:ReturnStatement[28650-28671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28954-29228]:Block[28944-29218]"
    }, {
      "left" : "if ((s == null) || (s.length() == 0))",
      "right" : "if ((s == null) || (s.length() == 0))",
      "info" : "IfStatement[28964-29043]:IfStatement[28954-29033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29010-29043]:Block[29000-29033]"
    }, {
      "left" : "return s;",
      "right" : "return s;",
      "info" : "ReturnStatement[29024-29033]:ReturnStatement[29014-29023]"
    }, {
      "left" : "int pos = s.length();",
      "right" : "int pos = s.length();",
      "info" : "VariableDeclarationStatement[29053-29074]:VariableDeclarationStatement[29043-29064]"
    }, {
      "left" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "right" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "info" : "WhileStatement[29084-29185]:WhileStatement[29074-29175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29155-29185]:Block[29145-29175]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[29169-29175]:ExpressionStatement[29159-29165]"
    }, {
      "left" : "return s.substring(0, pos);",
      "right" : "return s.substring(0, pos);",
      "info" : "ReturnStatement[29195-29222]:ReturnStatement[29185-29212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30252-30409]:Block[30242-30399]"
    }, {
      "left" : "Option opt1 = (Option)o1;",
      "right" : "Option opt1 = (Option)o1;",
      "info" : "VariableDeclarationStatement[30266-30291]:VariableDeclarationStatement[30256-30281]"
    }, {
      "left" : "Option opt2 = (Option)o2;",
      "right" : "Option opt2 = (Option)o2;",
      "info" : "VariableDeclarationStatement[30304-30329]:VariableDeclarationStatement[30294-30319]"
    }, {
      "left" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "right" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "info" : "ReturnStatement[30343-30399]:ReturnStatement[30333-30389]"
    } ]
  },
  "interFileMappings" : { }
}