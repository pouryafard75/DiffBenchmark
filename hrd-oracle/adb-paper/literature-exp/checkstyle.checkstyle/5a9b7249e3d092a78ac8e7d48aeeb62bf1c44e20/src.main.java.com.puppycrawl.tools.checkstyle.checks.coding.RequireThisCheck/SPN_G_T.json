{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "RequireThisCheck",
      "right" : "RequireThisCheck",
      "info" : "TypeDeclaration[1318-6482]:TypeDeclaration[1318-7032]"
    }, {
      "left" : "public static final String MSG_METHOD = \"require.this.method\";",
      "right" : "public static final String MSG_METHOD = \"require.this.method\";",
      "info" : "FieldDeclaration[2531-2700]:FieldDeclaration[2531-2700]"
    }, {
      "left" : "public static final String MSG_VARIABLE = \"require.this.variable\";",
      "right" : "public static final String MSG_VARIABLE = \"require.this.variable\";",
      "info" : "FieldDeclaration[2706-2879]:FieldDeclaration[2706-2879]"
    }, {
      "left" : "private boolean checkFields = true;",
      "right" : "private boolean checkFields = true;",
      "info" : "FieldDeclaration[2885-2969]:FieldDeclaration[2885-2969]"
    }, {
      "left" : "private boolean checkMethods = true;",
      "right" : "private boolean checkMethods = true;",
      "info" : "FieldDeclaration[2974-3060]:FieldDeclaration[2974-3060]"
    }, {
      "left" : "public void setCheckFields(boolean checkFields)",
      "right" : "public void setCheckFields(boolean checkFields)",
      "info" : "MethodDeclaration[3066-3280]:MethodDeclaration[3066-3280]"
    }, {
      "left" : "public void setCheckMethods(boolean checkMethods)",
      "right" : "public void setCheckMethods(boolean checkMethods)",
      "info" : "MethodDeclaration[3286-3507]:MethodDeclaration[3286-3507]"
    }, {
      "left" : "public int[] getDefaultTokens()",
      "right" : "public int[] getDefaultTokens()",
      "info" : "MethodDeclaration[3513-3912]:MethodDeclaration[3513-3912]"
    }, {
      "left" : "public int[] getRequiredTokens()",
      "right" : "public int[] getRequiredTokens()",
      "info" : "MethodDeclaration[3918-4007]:MethodDeclaration[3918-4007]"
    }, {
      "left" : "public int[] getAcceptableTokens()",
      "right" : "public int[] getAcceptableTokens()",
      "info" : "MethodDeclaration[4013-4137]:MethodDeclaration[4013-4137]"
    }, {
      "left" : "public void visitToken(DetailAST ast)",
      "right" : "public void visitToken(DetailAST ast)",
      "info" : "MethodDeclaration[4143-4323]:MethodDeclaration[4143-4323]"
    }, {
      "left" : "private void processIDENT(DetailAST ast)",
      "right" : "private void processField(DetailAST ast, int parentType)",
      "info" : "MethodDeclaration[4329-6480]:MethodDeclaration[5326-6382]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2465-2471]:Modifier[2465-2471]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2472-2477]:TYPE_DECLARATION_KIND[2472-2477]"
    }, {
      "left" : "RequireThisCheck",
      "right" : "RequireThisCheck",
      "info" : "SimpleName[2478-2494]:SimpleName[2478-2494]"
    }, {
      "left" : "DeclarationCollector",
      "right" : "DeclarationCollector",
      "info" : "SimpleType[2503-2523]:SimpleType[2503-2523]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3185-3191]:Modifier[3185-3191]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3192-3196]:PrimitiveType[3192-3196]"
    }, {
      "left" : "setCheckFields",
      "right" : "setCheckFields",
      "info" : "SimpleName[3197-3211]:SimpleName[3197-3211]"
    }, {
      "left" : "boolean checkFields",
      "right" : "boolean checkFields",
      "info" : "SingleVariableDeclaration[3212-3231]:SingleVariableDeclaration[3212-3231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3233-3280]:Block[3233-3280]"
    }, {
      "left" : "this.checkFields = checkFields;",
      "right" : "this.checkFields = checkFields;",
      "info" : "ExpressionStatement[3243-3274]:ExpressionStatement[3243-3274]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3408-3414]:Modifier[3408-3414]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3415-3419]:PrimitiveType[3415-3419]"
    }, {
      "left" : "setCheckMethods",
      "right" : "setCheckMethods",
      "info" : "SimpleName[3420-3435]:SimpleName[3420-3435]"
    }, {
      "left" : "boolean checkMethods",
      "right" : "boolean checkMethods",
      "info" : "SingleVariableDeclaration[3436-3456]:SingleVariableDeclaration[3436-3456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3458-3507]:Block[3458-3507]"
    }, {
      "left" : "this.checkMethods = checkMethods;",
      "right" : "this.checkMethods = checkMethods;",
      "info" : "ExpressionStatement[3468-3501]:ExpressionStatement[3468-3501]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3513-3522]:MarkerAnnotation[3513-3522]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3527-3533]:Modifier[3527-3533]"
    }, {
      "left" : "int[]",
      "right" : "int[]",
      "info" : "ArrayType[3534-3539]:ArrayType[3534-3539]"
    }, {
      "left" : "getDefaultTokens",
      "right" : "getDefaultTokens",
      "info" : "SimpleName[3540-3556]:SimpleName[3540-3556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3559-3912]:Block[3559-3912]"
    }, {
      "left" : "return new int[] {\n            TokenTypes.CLASS_DEF,\n            TokenTypes.CTOR_DEF,\n            TokenTypes.ENUM_DEF,\n            TokenTypes.IDENT,\n            TokenTypes.INTERFACE_DEF,\n            TokenTypes.METHOD_DEF,\n            TokenTypes.PARAMETER_DEF,\n            TokenTypes.SLIST,\n            TokenTypes.VARIABLE_DEF,\n        };",
      "right" : "return new int[] {\n            TokenTypes.CLASS_DEF,\n            TokenTypes.CTOR_DEF,\n            TokenTypes.ENUM_DEF,\n            TokenTypes.IDENT,\n            TokenTypes.INTERFACE_DEF,\n            TokenTypes.METHOD_DEF,\n            TokenTypes.PARAMETER_DEF,\n            TokenTypes.SLIST,\n            TokenTypes.VARIABLE_DEF,\n        };",
      "info" : "ReturnStatement[3569-3906]:ReturnStatement[3569-3906]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3918-3927]:MarkerAnnotation[3918-3927]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3932-3938]:Modifier[3932-3938]"
    }, {
      "left" : "int[]",
      "right" : "int[]",
      "info" : "ArrayType[3939-3944]:ArrayType[3939-3944]"
    }, {
      "left" : "getRequiredTokens",
      "right" : "getRequiredTokens",
      "info" : "SimpleName[3945-3962]:SimpleName[3945-3962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3965-4007]:Block[3965-4007]"
    }, {
      "left" : "return getDefaultTokens();",
      "right" : "return getDefaultTokens();",
      "info" : "ReturnStatement[3975-4001]:ReturnStatement[3975-4001]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4013-4022]:MarkerAnnotation[4013-4022]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4027-4033]:Modifier[4027-4033]"
    }, {
      "left" : "int[]",
      "right" : "int[]",
      "info" : "ArrayType[4034-4039]:ArrayType[4034-4039]"
    }, {
      "left" : "getAcceptableTokens",
      "right" : "getAcceptableTokens",
      "info" : "SimpleName[4040-4059]:SimpleName[4040-4059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4062-4137]:Block[4062-4137]"
    }, {
      "left" : "return new int[] {\n            TokenTypes.IDENT,\n        };",
      "right" : "return new int[] {\n            TokenTypes.IDENT,\n        };",
      "info" : "ReturnStatement[4072-4131]:ReturnStatement[4072-4131]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4143-4152]:MarkerAnnotation[4143-4152]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4157-4163]:Modifier[4157-4163]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4164-4168]:PrimitiveType[4164-4168]"
    }, {
      "left" : "visitToken",
      "right" : "visitToken",
      "info" : "SimpleName[4169-4179]:SimpleName[4169-4179]"
    }, {
      "left" : "DetailAST ast",
      "right" : "DetailAST ast",
      "info" : "SingleVariableDeclaration[4180-4193]:SingleVariableDeclaration[4180-4193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4195-4323]:Block[4195-4323]"
    }, {
      "left" : "super.visitToken(ast);",
      "right" : "super.visitToken(ast);",
      "info" : "ExpressionStatement[4205-4227]:ExpressionStatement[4205-4227]"
    }, {
      "left" : "if (ast.getType() == TokenTypes.IDENT)",
      "right" : "if (ast.getType() == TokenTypes.IDENT)",
      "info" : "IfStatement[4236-4317]:IfStatement[4236-4317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4275-4317]:Block[4275-4317]"
    }, {
      "left" : "processIDENT(ast);",
      "right" : "processIDENT(ast);",
      "info" : "ExpressionStatement[4289-4307]:ExpressionStatement[4289-4307]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4505-4512]:Modifier[5467-5474]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4513-4517]:PrimitiveType[5475-5479]"
    }, {
      "left" : "processIDENT",
      "right" : "processField",
      "info" : "SimpleName[4518-4530]:SimpleName[5480-5492]"
    }, {
      "left" : "DetailAST ast",
      "right" : "DetailAST ast",
      "info" : "SingleVariableDeclaration[4531-4544]:SingleVariableDeclaration[5493-5506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4546-6480]:Block[5524-6382]"
    }, {
      "left" : "final int parentType = ast.getParent().getType();",
      "right" : "final int parentType = ast.getParent().getType();",
      "info" : "VariableDeclarationStatement[4556-4605]:VariableDeclarationStatement[4556-4605]"
    }, {
      "left" : "parentType",
      "right" : "parentType",
      "info" : "SimpleName[4619-4629]:SimpleName[4622-4632]"
    }, {
      "left" : "TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR",
      "right" : "TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR",
      "info" : "QualifiedName[4633-4672]:QualifiedName[4653-4692]"
    }, {
      "left" : "TokenTypes.ANNOTATION",
      "right" : "TokenTypes.ANNOTATION",
      "info" : "QualifiedName[4702-4723]:QualifiedName[4711-4732]"
    }, {
      "left" : "TokenTypes.ANNOTATION_FIELD_DEF",
      "right" : "TokenTypes.ANNOTATION_FIELD_DEF",
      "info" : "QualifiedName[4753-4784]:QualifiedName[4751-4782]"
    }, {
      "left" : "TokenTypes.METHOD_CALL",
      "right" : "TokenTypes.METHOD_CALL",
      "info" : "QualifiedName[4935-4957]:QualifiedName[4880-4902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4959-5132]:Block[4904-5140]"
    }, {
      "left" : "if (checkMethods && isClassMethod(ast.getText()))",
      "right" : "if (checkMethods && isClassMethod(ast.getText()))",
      "info" : "IfStatement[4973-5102]:IfStatement[4966-5103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5023-5102]:Block[5016-5103]"
    }, {
      "left" : "log(ast, \"require.this.method\", ast.getText());",
      "right" : "log(ast, \"require.this.method\", ast.getText());",
      "info" : "ExpressionStatement[5041-5088]:ExpressionStatement[5038-5085]"
    }, {
      "left" : "if (!checkFields)",
      "right" : "if (checkFields)",
      "info" : "IfStatement[5172-5262]:IfStatement[5180-5267]"
    }, {
      "left" : "checkFields",
      "right" : "checkFields",
      "info" : "SimpleName[5177-5188]:SimpleName[5184-5195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5190-5262]:Block[5197-5267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5190-5262]:Block[6157-6235]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5245-5252]:ReturnStatement[6218-6225]"
    }, {
      "left" : "if (ScopeUtils.getSurroundingScope(ast) == null)",
      "right" : "if (ScopeUtils.getSurroundingScope(ast) == null)",
      "info" : "IfStatement[5272-5483]:IfStatement[5534-5745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5321-5483]:Block[5583-5745]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5466-5473]:ReturnStatement[5728-5735]"
    }, {
      "left" : "if (parentType == TokenTypes.DOT\n            && ast.getPreviousSibling() != null)",
      "right" : "if (parentType == TokenTypes.DOT\n                && ast.getPreviousSibling() != null)",
      "info" : "IfStatement[5493-5671]:IfStatement[5755-5937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5575-5671]:Block[5841-5937]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5654-5661]:ReturnStatement[5920-5927]"
    }, {
      "left" : "if (parentType == TokenTypes.TYPE\n            || parentType == TokenTypes.LITERAL_NEW)",
      "right" : "if (parentType == TokenTypes.TYPE\n                || parentType == TokenTypes.LITERAL_NEW)",
      "info" : "IfStatement[5680-5842]:IfStatement[5946-6112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5767-5842]:Block[6037-6112]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[5825-5832]:ReturnStatement[6095-6102]"
    }, {
      "left" : "if (parentType == TokenTypes.VARIABLE_DEF\n            || parentType == TokenTypes.CTOR_DEF\n            || parentType == TokenTypes.METHOD_DEF\n            || parentType == TokenTypes.CLASS_DEF\n            || parentType == TokenTypes.ENUM_DEF\n            || parentType == TokenTypes.INTERFACE_DEF\n            || parentType == TokenTypes.PARAMETER_DEF\n            || parentType == TokenTypes.TYPE_ARGUMENT)",
      "right" : "if (isDeclarationToken(parentType))",
      "info" : "IfStatement[5851-6333]:IfStatement[6121-6235]"
    }, {
      "left" : "parentType == TokenTypes.VARIABLE_DEF\n            || parentType == TokenTypes.CTOR_DEF\n            || parentType == TokenTypes.METHOD_DEF\n            || parentType == TokenTypes.CLASS_DEF\n            || parentType == TokenTypes.ENUM_DEF\n            || parentType == TokenTypes.INTERFACE_DEF\n            || parentType == TokenTypes.PARAMETER_DEF\n            || parentType == TokenTypes.TYPE_ARGUMENT",
      "right" : "parentType == TokenTypes.VARIABLE_DEF\n            || parentType == TokenTypes.CTOR_DEF\n            || parentType == TokenTypes.METHOD_DEF\n            || parentType == TokenTypes.CLASS_DEF\n            || parentType == TokenTypes.ENUM_DEF\n            || parentType == TokenTypes.INTERFACE_DEF\n            || parentType == TokenTypes.PARAMETER_DEF\n            || parentType == TokenTypes.TYPE_ARGUMENT",
      "info" : "InfixExpression[5855-6253]:InfixExpression[6625-7023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6255-6333]:Block[6157-6235]"
    }, {
      "left" : "final String name = ast.getText();",
      "right" : "final String name = ast.getText();",
      "info" : "VariableDeclarationStatement[6343-6377]:VariableDeclarationStatement[6245-6279]"
    }, {
      "left" : "if (isClassField(name))",
      "right" : "if (isClassField(name))",
      "info" : "IfStatement[6386-6474]:IfStatement[6288-6376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6410-6474]:Block[6312-6376]"
    }, {
      "left" : "log(ast, \"require.this.variable\", name);",
      "right" : "log(ast, \"require.this.variable\", name);",
      "info" : "ExpressionStatement[6424-6464]:ExpressionStatement[6326-6366]"
    } ]
  },
  "interFileMappings" : { }
}