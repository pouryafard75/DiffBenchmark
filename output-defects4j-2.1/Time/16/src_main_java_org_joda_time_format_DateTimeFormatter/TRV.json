{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final DateTimePrinter iPrinter;",
      "right" : "private final DateTimePrinter iPrinter;",
      "info" : "FieldDeclaration[3300-3400]:FieldDeclaration[3300-3400]"
    }, {
      "left" : "private final DateTimeParser iParser;",
      "right" : "private final DateTimeParser iParser;",
      "info" : "FieldDeclaration[3405-3502]:FieldDeclaration[3405-3502]"
    }, {
      "left" : "private final Locale iLocale;",
      "right" : "private final Locale iLocale;",
      "info" : "FieldDeclaration[3507-3591]:FieldDeclaration[3507-3591]"
    }, {
      "left" : "private final boolean iOffsetParsed;",
      "right" : "private final boolean iOffsetParsed;",
      "info" : "FieldDeclaration[3596-3673]:FieldDeclaration[3596-3673]"
    }, {
      "left" : "private final Chronology iChrono;",
      "right" : "private final Chronology iChrono;",
      "info" : "FieldDeclaration[3678-3760]:FieldDeclaration[3678-3760]"
    }, {
      "left" : "private final DateTimeZone iZone;",
      "right" : "private final DateTimeZone iZone;",
      "info" : "FieldDeclaration[3765-3841]:FieldDeclaration[3765-3841]"
    }, {
      "left" : "private final Integer iPivotYear;",
      "right" : "private final Integer iPivotYear;",
      "info" : "FieldDeclaration[3846-3940]:FieldDeclaration[3846-3940]"
    }, {
      "left" : "private final int iDefaultYear;",
      "right" : "private final int iDefaultYear;",
      "info" : "FieldDeclaration[3945-4040]:FieldDeclaration[3945-4040]"
    }, {
      "left" : "public DateTimeFormatter(\n            DateTimePrinter printer, DateTimeParser parser)",
      "right" : "public DateTimeFormatter(\n            DateTimePrinter printer, DateTimeParser parser)",
      "info" : "MethodDeclaration[4046-4618]:MethodDeclaration[4046-4618]"
    }, {
      "left" : "private DateTimeFormatter(\n            DateTimePrinter printer, DateTimeParser parser,\n            Locale locale, boolean offsetParsed,\n            Chronology chrono, DateTimeZone zone,\n            Integer pivotYear, int defaultYear)",
      "right" : "private DateTimeFormatter(\n            DateTimePrinter printer, DateTimeParser parser,\n            Locale locale, boolean offsetParsed,\n            Chronology chrono, DateTimeZone zone,\n            Integer pivotYear, int defaultYear)",
      "info" : "MethodDeclaration[4624-5152]:MethodDeclaration[4624-5152]"
    }, {
      "left" : "public boolean isPrinter()",
      "right" : "public boolean isPrinter()",
      "info" : "MethodDeclaration[5236-5416]:MethodDeclaration[5236-5416]"
    }, {
      "left" : "public DateTimePrinter getPrinter()",
      "right" : "public DateTimePrinter getPrinter()",
      "info" : "MethodDeclaration[5422-5663]:MethodDeclaration[5422-5663]"
    }, {
      "left" : "public boolean isParser()",
      "right" : "public boolean isParser()",
      "info" : "MethodDeclaration[5669-5845]:MethodDeclaration[5669-5845]"
    }, {
      "left" : "public DateTimeParser getParser()",
      "right" : "public DateTimeParser getParser()",
      "info" : "MethodDeclaration[5851-6085]:MethodDeclaration[5851-6085]"
    }, {
      "left" : "public DateTimeFormatter withLocale(Locale locale)",
      "right" : "public DateTimeFormatter withLocale(Locale locale)",
      "info" : "MethodDeclaration[6169-6893]:MethodDeclaration[6169-6893]"
    }, {
      "left" : "public Locale getLocale()",
      "right" : "public Locale getLocale()",
      "info" : "MethodDeclaration[6899-7146]:MethodDeclaration[6899-7146]"
    }, {
      "left" : "public DateTimeFormatter withOffsetParsed()",
      "right" : "public DateTimeFormatter withOffsetParsed()",
      "info" : "MethodDeclaration[7230-8109]:MethodDeclaration[7230-8109]"
    }, {
      "left" : "public boolean isOffsetParsed()",
      "right" : "public boolean isOffsetParsed()",
      "info" : "MethodDeclaration[8115-8378]:MethodDeclaration[8115-8378]"
    }, {
      "left" : "public DateTimeFormatter withChronology(Chronology chrono)",
      "right" : "public DateTimeFormatter withChronology(Chronology chrono)",
      "info" : "MethodDeclaration[8462-9425]:MethodDeclaration[8462-9425]"
    }, {
      "left" : "public Chronology getChronology()",
      "right" : "public Chronology getChronology()",
      "info" : "MethodDeclaration[9431-9622]:MethodDeclaration[9431-9622]"
    }, {
      "left" : "public Chronology getChronolgy()",
      "right" : "public Chronology getChronolgy()",
      "info" : "MethodDeclaration[9628-9894]:MethodDeclaration[9628-9894]"
    }, {
      "left" : "public DateTimeFormatter withZoneUTC()",
      "right" : "public DateTimeFormatter withZoneUTC()",
      "info" : "MethodDeclaration[9978-10657]:MethodDeclaration[9978-10657]"
    }, {
      "left" : "public DateTimeFormatter withZone(DateTimeZone zone)",
      "right" : "public DateTimeFormatter withZone(DateTimeZone zone)",
      "info" : "MethodDeclaration[10663-11587]:MethodDeclaration[10663-11587]"
    }, {
      "left" : "public DateTimeZone getZone()",
      "right" : "public DateTimeZone getZone()",
      "info" : "MethodDeclaration[11593-11766]:MethodDeclaration[11593-11766]"
    }, {
      "left" : "public DateTimeFormatter withPivotYear(Integer pivotYear)",
      "right" : "public DateTimeFormatter withPivotYear(Integer pivotYear)",
      "info" : "MethodDeclaration[11850-13570]:MethodDeclaration[11850-13570]"
    }, {
      "left" : "public DateTimeFormatter withPivotYear(int pivotYear)",
      "right" : "public DateTimeFormatter withPivotYear(int pivotYear)",
      "info" : "MethodDeclaration[13576-15058]:MethodDeclaration[13576-15058]"
    }, {
      "left" : "public Integer getPivotYear()",
      "right" : "public Integer getPivotYear()",
      "info" : "MethodDeclaration[15064-15269]:MethodDeclaration[15064-15269]"
    }, {
      "left" : "public DateTimeFormatter withDefaultYear(int defaultYear)",
      "right" : "public DateTimeFormatter withDefaultYear(int defaultYear)",
      "info" : "MethodDeclaration[15353-16277]:MethodDeclaration[15353-16277]"
    }, {
      "left" : "public int getDefaultYear()",
      "right" : "public int getDefaultYear()",
      "info" : "MethodDeclaration[16283-16504]:MethodDeclaration[16283-16504]"
    }, {
      "left" : "public void printTo(StringBuffer buf, ReadableInstant instant)",
      "right" : "public void printTo(StringBuffer buf, ReadableInstant instant)",
      "info" : "MethodDeclaration[16588-17049]:MethodDeclaration[16588-17049]"
    }, {
      "left" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
      "right" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
      "info" : "MethodDeclaration[17055-17529]:MethodDeclaration[17055-17529]"
    }, {
      "left" : "public void printTo(Appendable appendable, ReadableInstant instant) throws IOException",
      "right" : "public void printTo(Appendable appendable, ReadableInstant instant) throws IOException",
      "info" : "MethodDeclaration[17535-17914]:MethodDeclaration[17535-17914]"
    }, {
      "left" : "public void printTo(StringBuffer buf, long instant)",
      "right" : "public void printTo(StringBuffer buf, long instant)",
      "info" : "MethodDeclaration[17998-18360]:MethodDeclaration[17998-18360]"
    }, {
      "left" : "public void printTo(Writer out, long instant) throws IOException",
      "right" : "public void printTo(Writer out, long instant) throws IOException",
      "info" : "MethodDeclaration[18366-18741]:MethodDeclaration[18366-18741]"
    }, {
      "left" : "public void printTo(Appendable appendable, long instant) throws IOException",
      "right" : "public void printTo(Appendable appendable, long instant) throws IOException",
      "info" : "MethodDeclaration[18747-19164]:MethodDeclaration[18747-19164]"
    }, {
      "left" : "public void printTo(StringBuffer buf, ReadablePartial partial)",
      "right" : "public void printTo(StringBuffer buf, ReadablePartial partial)",
      "info" : "MethodDeclaration[19248-19798]:MethodDeclaration[19248-19798]"
    }, {
      "left" : "public void printTo(Writer out, ReadablePartial partial) throws IOException",
      "right" : "public void printTo(Writer out, ReadablePartial partial) throws IOException",
      "info" : "MethodDeclaration[19804-20367]:MethodDeclaration[19804-20367]"
    }, {
      "left" : "public void printTo(Appendable appendable, ReadablePartial partial) throws IOException",
      "right" : "public void printTo(Appendable appendable, ReadablePartial partial) throws IOException",
      "info" : "MethodDeclaration[20373-20794]:MethodDeclaration[20373-20794]"
    }, {
      "left" : "public String print(ReadableInstant instant)",
      "right" : "public String print(ReadableInstant instant)",
      "info" : "MethodDeclaration[20878-21410]:MethodDeclaration[20878-21410]"
    }, {
      "left" : "public String print(long instant)",
      "right" : "public String print(long instant)",
      "info" : "MethodDeclaration[21416-21938]:MethodDeclaration[21416-21938]"
    }, {
      "left" : "public String print(ReadablePartial partial)",
      "right" : "public String print(ReadablePartial partial)",
      "info" : "MethodDeclaration[21944-22396]:MethodDeclaration[21944-22396]"
    }, {
      "left" : "private void printTo(StringBuffer buf, long instant, Chronology chrono)",
      "right" : "private void printTo(StringBuffer buf, long instant, Chronology chrono)",
      "info" : "MethodDeclaration[22402-23200]:MethodDeclaration[22402-23200]"
    }, {
      "left" : "private void printTo(Writer buf, long instant, Chronology chrono) throws IOException",
      "right" : "private void printTo(Writer buf, long instant, Chronology chrono) throws IOException",
      "info" : "MethodDeclaration[23206-24017]:MethodDeclaration[23206-24017]"
    }, {
      "left" : "private DateTimePrinter requirePrinter()",
      "right" : "private DateTimePrinter requirePrinter()",
      "info" : "MethodDeclaration[24023-24402]:MethodDeclaration[24023-24402]"
    }, {
      "left" : "public long parseMillis(String text)",
      "right" : "public long parseMillis(String text)",
      "info" : "MethodDeclaration[27542-28723]:MethodDeclaration[27561-28742]"
    }, {
      "left" : "public LocalDate parseLocalDate(String text)",
      "right" : "public LocalDate parseLocalDate(String text)",
      "info" : "MethodDeclaration[28729-29510]:MethodDeclaration[28748-29529]"
    }, {
      "left" : "public LocalTime parseLocalTime(String text)",
      "right" : "public LocalTime parseLocalTime(String text)",
      "info" : "MethodDeclaration[29516-30297]:MethodDeclaration[29535-30316]"
    }, {
      "left" : "public LocalDateTime parseLocalDateTime(String text)",
      "right" : "public LocalDateTime parseLocalDateTime(String text)",
      "info" : "MethodDeclaration[30303-32174]:MethodDeclaration[30322-32193]"
    }, {
      "left" : "public DateTime parseDateTime(String text)",
      "right" : "public DateTime parseDateTime(String text)",
      "info" : "MethodDeclaration[32180-34279]:MethodDeclaration[32199-34298]"
    }, {
      "left" : "public MutableDateTime parseMutableDateTime(String text)",
      "right" : "public MutableDateTime parseMutableDateTime(String text)",
      "info" : "MethodDeclaration[34285-36413]:MethodDeclaration[34304-36432]"
    }, {
      "left" : "private DateTimeParser requireParser()",
      "right" : "private DateTimeParser requireParser()",
      "info" : "MethodDeclaration[36419-36788]:MethodDeclaration[36438-36807]"
    }, {
      "left" : "private Chronology selectChronology(Chronology chrono)",
      "right" : "private Chronology selectChronology(Chronology chrono)",
      "info" : "MethodDeclaration[36872-37321]:MethodDeclaration[36891-37340]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4383-4618]:Block[4383-4618]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[4393-4401]:SuperConstructorInvocation[4393-4401]"
    }, {
      "left" : "iPrinter = printer;",
      "right" : "iPrinter = printer;",
      "info" : "ExpressionStatement[4410-4429]:ExpressionStatement[4410-4429]"
    }, {
      "left" : "iParser = parser;",
      "right" : "iParser = parser;",
      "info" : "ExpressionStatement[4438-4455]:ExpressionStatement[4438-4455]"
    }, {
      "left" : "iLocale = null;",
      "right" : "iLocale = null;",
      "info" : "ExpressionStatement[4464-4479]:ExpressionStatement[4464-4479]"
    }, {
      "left" : "iOffsetParsed = false;",
      "right" : "iOffsetParsed = false;",
      "info" : "ExpressionStatement[4488-4510]:ExpressionStatement[4488-4510]"
    }, {
      "left" : "iChrono = null;",
      "right" : "iChrono = null;",
      "info" : "ExpressionStatement[4519-4534]:ExpressionStatement[4519-4534]"
    }, {
      "left" : "iZone = null;",
      "right" : "iZone = null;",
      "info" : "ExpressionStatement[4543-4556]:ExpressionStatement[4543-4556]"
    }, {
      "left" : "iPivotYear = null;",
      "right" : "iPivotYear = null;",
      "info" : "ExpressionStatement[4565-4583]:ExpressionStatement[4565-4583]"
    }, {
      "left" : "iDefaultYear = 2000;",
      "right" : "iDefaultYear = 2000;",
      "info" : "ExpressionStatement[4592-4612]:ExpressionStatement[4592-4612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4894-5152]:Block[4894-5152]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[4904-4912]:SuperConstructorInvocation[4904-4912]"
    }, {
      "left" : "iPrinter = printer;",
      "right" : "iPrinter = printer;",
      "info" : "ExpressionStatement[4921-4940]:ExpressionStatement[4921-4940]"
    }, {
      "left" : "iParser = parser;",
      "right" : "iParser = parser;",
      "info" : "ExpressionStatement[4949-4966]:ExpressionStatement[4949-4966]"
    }, {
      "left" : "iLocale = locale;",
      "right" : "iLocale = locale;",
      "info" : "ExpressionStatement[4975-4992]:ExpressionStatement[4975-4992]"
    }, {
      "left" : "iOffsetParsed = offsetParsed;",
      "right" : "iOffsetParsed = offsetParsed;",
      "info" : "ExpressionStatement[5001-5030]:ExpressionStatement[5001-5030]"
    }, {
      "left" : "iChrono = chrono;",
      "right" : "iChrono = chrono;",
      "info" : "ExpressionStatement[5039-5056]:ExpressionStatement[5039-5056]"
    }, {
      "left" : "iZone = zone;",
      "right" : "iZone = zone;",
      "info" : "ExpressionStatement[5065-5078]:ExpressionStatement[5065-5078]"
    }, {
      "left" : "iPivotYear = pivotYear;",
      "right" : "iPivotYear = pivotYear;",
      "info" : "ExpressionStatement[5087-5110]:ExpressionStatement[5087-5110]"
    }, {
      "left" : "iDefaultYear = defaultYear;",
      "right" : "iDefaultYear = defaultYear;",
      "info" : "ExpressionStatement[5119-5146]:ExpressionStatement[5119-5146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5374-5416]:Block[5374-5416]"
    }, {
      "left" : "return (iPrinter != null);",
      "right" : "return (iPrinter != null);",
      "info" : "ReturnStatement[5384-5410]:ReturnStatement[5384-5410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5631-5663]:Block[5631-5663]"
    }, {
      "left" : "return iPrinter;",
      "right" : "return iPrinter;",
      "info" : "ReturnStatement[5641-5657]:ReturnStatement[5641-5657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5804-5845]:Block[5804-5845]"
    }, {
      "left" : "return (iParser != null);",
      "right" : "return (iParser != null);",
      "info" : "ReturnStatement[5814-5839]:ReturnStatement[5814-5839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6054-6085]:Block[6054-6085]"
    }, {
      "left" : "return iParser;",
      "right" : "return iParser;",
      "info" : "ReturnStatement[6064-6079]:ReturnStatement[6064-6079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6626-6893]:Block[6626-6893]"
    }, {
      "left" : "if (locale == getLocale() || (locale != null && locale.equals(getLocale())))",
      "right" : "if (locale == getLocale() || (locale != null && locale.equals(getLocale())))",
      "info" : "IfStatement[6636-6749]:IfStatement[6636-6749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6713-6749]:Block[6713-6749]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6727-6739]:ReturnStatement[6727-6739]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, locale,\n                iOffsetParsed, iChrono, iZone, iPivotYear, iDefaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, locale,\n                iOffsetParsed, iChrono, iZone, iPivotYear, iDefaultYear);",
      "info" : "ReturnStatement[6758-6887]:ReturnStatement[6758-6887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7115-7146]:Block[7115-7146]"
    }, {
      "left" : "return iLocale;",
      "right" : "return iLocale;",
      "info" : "ReturnStatement[7125-7140]:ReturnStatement[7125-7140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7901-8109]:Block[7901-8109]"
    }, {
      "left" : "if (iOffsetParsed == true)",
      "right" : "if (iOffsetParsed == true)",
      "info" : "IfStatement[7911-7974]:IfStatement[7911-7974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7938-7974]:Block[7938-7974]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[7952-7964]:ReturnStatement[7952-7964]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                true, iChrono, null, iPivotYear, iDefaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                true, iChrono, null, iPivotYear, iDefaultYear);",
      "info" : "ReturnStatement[7983-8103]:ReturnStatement[7983-8103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8341-8378]:Block[8341-8378]"
    }, {
      "left" : "return iOffsetParsed;",
      "right" : "return iOffsetParsed;",
      "info" : "ReturnStatement[8351-8372]:ReturnStatement[8351-8372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9212-9425]:Block[9212-9425]"
    }, {
      "left" : "if (iChrono == chrono)",
      "right" : "if (iChrono == chrono)",
      "info" : "IfStatement[9222-9281]:IfStatement[9222-9281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9245-9281]:Block[9245-9281]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9259-9271]:ReturnStatement[9259-9271]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, chrono, iZone, iPivotYear, iDefaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, chrono, iZone, iPivotYear, iDefaultYear);",
      "info" : "ReturnStatement[9290-9419]:ReturnStatement[9290-9419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9591-9622]:Block[9591-9622]"
    }, {
      "left" : "return iChrono;",
      "right" : "return iChrono;",
      "info" : "ReturnStatement[9601-9616]:ReturnStatement[9601-9616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9863-9894]:Block[9863-9894]"
    }, {
      "left" : "return iChrono;",
      "right" : "return iChrono;",
      "info" : "ReturnStatement[9873-9888]:ReturnStatement[9873-9888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10607-10657]:Block[10607-10657]"
    }, {
      "left" : "return withZone(DateTimeZone.UTC);",
      "right" : "return withZone(DateTimeZone.UTC);",
      "info" : "ReturnStatement[10617-10651]:ReturnStatement[10617-10651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11386-11587]:Block[11386-11587]"
    }, {
      "left" : "if (iZone == zone)",
      "right" : "if (iZone == zone)",
      "info" : "IfStatement[11396-11451]:IfStatement[11396-11451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11415-11451]:Block[11415-11451]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[11429-11441]:ReturnStatement[11429-11441]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                false, iChrono, zone, iPivotYear, iDefaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                false, iChrono, zone, iPivotYear, iDefaultYear);",
      "info" : "ReturnStatement[11460-11581]:ReturnStatement[11460-11581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11737-11766]:Block[11737-11766]"
    }, {
      "left" : "return iZone;",
      "right" : "return iZone;",
      "info" : "ReturnStatement[11747-11760]:ReturnStatement[11747-11760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13295-13570]:Block[13295-13570]"
    }, {
      "left" : "if (iPivotYear == pivotYear || (iPivotYear != null && iPivotYear.equals(pivotYear)))",
      "right" : "if (iPivotYear == pivotYear || (iPivotYear != null && iPivotYear.equals(pivotYear)))",
      "info" : "IfStatement[13305-13426]:IfStatement[13305-13426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13390-13426]:Block[13390-13426]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13404-13416]:ReturnStatement[13404-13416]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, iChrono, iZone, pivotYear, iDefaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, iChrono, iZone, pivotYear, iDefaultYear);",
      "info" : "ReturnStatement[13435-13564]:ReturnStatement[13435-13564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14993-15058]:Block[14993-15058]"
    }, {
      "left" : "return withPivotYear(Integer.valueOf(pivotYear));",
      "right" : "return withPivotYear(Integer.valueOf(pivotYear));",
      "info" : "ReturnStatement[15003-15052]:ReturnStatement[15003-15052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15237-15269]:Block[15237-15269]"
    }, {
      "left" : "return iPivotYear;",
      "right" : "return iPivotYear;",
      "info" : "ReturnStatement[15245-15263]:ReturnStatement[15245-15263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16132-16277]:Block[16132-16277]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, iChrono, iZone, iPivotYear, defaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, iChrono, iZone, iPivotYear, defaultYear);",
      "info" : "ReturnStatement[16142-16271]:ReturnStatement[16142-16271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16470-16504]:Block[16470-16504]"
    }, {
      "left" : "return iDefaultYear;",
      "right" : "return iDefaultYear;",
      "info" : "ReturnStatement[16478-16498]:ReturnStatement[16478-16498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16868-17049]:Block[16868-17049]"
    }, {
      "left" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "right" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "info" : "VariableDeclarationStatement[16878-16932]:VariableDeclarationStatement[16878-16932]"
    }, {
      "left" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "right" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "info" : "VariableDeclarationStatement[16941-17005]:VariableDeclarationStatement[16941-17005]"
    }, {
      "left" : "printTo(buf, millis, chrono);",
      "right" : "printTo(buf, millis, chrono);",
      "info" : "ExpressionStatement[17014-17043]:ExpressionStatement[17014-17043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17348-17529]:Block[17348-17529]"
    }, {
      "left" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "right" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "info" : "VariableDeclarationStatement[17358-17412]:VariableDeclarationStatement[17358-17412]"
    }, {
      "left" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "right" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "info" : "VariableDeclarationStatement[17421-17485]:VariableDeclarationStatement[17421-17485]"
    }, {
      "left" : "printTo(out, millis, chrono);",
      "right" : "printTo(out, millis, chrono);",
      "info" : "ExpressionStatement[17494-17523]:ExpressionStatement[17494-17523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17864-17914]:Block[17864-17914]"
    }, {
      "left" : "appendable.append(print(instant));",
      "right" : "appendable.append(print(instant));",
      "info" : "ExpressionStatement[17874-17908]:ExpressionStatement[17874-17908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18316-18360]:Block[18316-18360]"
    }, {
      "left" : "printTo(buf, instant, null);",
      "right" : "printTo(buf, instant, null);",
      "info" : "ExpressionStatement[18326-18354]:ExpressionStatement[18326-18354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18697-18741]:Block[18697-18741]"
    }, {
      "left" : "printTo(out, instant, null);",
      "right" : "printTo(out, instant, null);",
      "info" : "ExpressionStatement[18707-18735]:ExpressionStatement[18707-18735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19114-19164]:Block[19114-19164]"
    }, {
      "left" : "appendable.append(print(instant));",
      "right" : "appendable.append(print(instant));",
      "info" : "ExpressionStatement[19124-19158]:ExpressionStatement[19124-19158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19570-19798]:Block[19570-19798]"
    }, {
      "left" : "DateTimePrinter printer = requirePrinter();",
      "right" : "DateTimePrinter printer = requirePrinter();",
      "info" : "VariableDeclarationStatement[19580-19623]:VariableDeclarationStatement[19580-19623]"
    }, {
      "left" : "if (partial == null)",
      "right" : "if (partial == null)",
      "info" : "IfStatement[19632-19744]:IfStatement[19632-19744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19653-19744]:Block[19653-19744]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "info" : "ThrowStatement[19667-19734]:ThrowStatement[19667-19734]"
    }, {
      "left" : "printer.printTo(buf, partial, iLocale);",
      "right" : "printer.printTo(buf, partial, iLocale);",
      "info" : "ExpressionStatement[19753-19792]:ExpressionStatement[19753-19792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20139-20367]:Block[20139-20367]"
    }, {
      "left" : "DateTimePrinter printer = requirePrinter();",
      "right" : "DateTimePrinter printer = requirePrinter();",
      "info" : "VariableDeclarationStatement[20149-20192]:VariableDeclarationStatement[20149-20192]"
    }, {
      "left" : "if (partial == null)",
      "right" : "if (partial == null)",
      "info" : "IfStatement[20201-20313]:IfStatement[20201-20313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20222-20313]:Block[20222-20313]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "info" : "ThrowStatement[20236-20303]:ThrowStatement[20236-20303]"
    }, {
      "left" : "printer.printTo(out, partial, iLocale);",
      "right" : "printer.printTo(out, partial, iLocale);",
      "info" : "ExpressionStatement[20322-20361]:ExpressionStatement[20322-20361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20744-20794]:Block[20744-20794]"
    }, {
      "left" : "appendable.append(print(partial));",
      "right" : "appendable.append(print(partial));",
      "info" : "ExpressionStatement[20754-20788]:ExpressionStatement[20754-20788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21254-21410]:Block[21254-21410]"
    }, {
      "left" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "right" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "info" : "VariableDeclarationStatement[21264-21342]:VariableDeclarationStatement[21264-21342]"
    }, {
      "left" : "printTo(buf, instant);",
      "right" : "printTo(buf, instant);",
      "info" : "ExpressionStatement[21351-21373]:ExpressionStatement[21351-21373]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[21382-21404]:ReturnStatement[21382-21404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21782-21938]:Block[21782-21938]"
    }, {
      "left" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "right" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "info" : "VariableDeclarationStatement[21792-21870]:VariableDeclarationStatement[21792-21870]"
    }, {
      "left" : "printTo(buf, instant);",
      "right" : "printTo(buf, instant);",
      "info" : "ExpressionStatement[21879-21901]:ExpressionStatement[21879-21901]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[21910-21932]:ReturnStatement[21910-21932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22240-22396]:Block[22240-22396]"
    }, {
      "left" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "right" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "info" : "VariableDeclarationStatement[22250-22328]:VariableDeclarationStatement[22250-22328]"
    }, {
      "left" : "printTo(buf, partial);",
      "right" : "printTo(buf, partial);",
      "info" : "ExpressionStatement[22337-22359]:ExpressionStatement[22337-22359]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[22368-22390]:ReturnStatement[22368-22390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22474-23200]:Block[22474-23200]"
    }, {
      "left" : "DateTimePrinter printer = requirePrinter();",
      "right" : "DateTimePrinter printer = requirePrinter();",
      "info" : "VariableDeclarationStatement[22484-22527]:VariableDeclarationStatement[22484-22527]"
    }, {
      "left" : "chrono = selectChronology(chrono);",
      "right" : "chrono = selectChronology(chrono);",
      "info" : "ExpressionStatement[22536-22570]:ExpressionStatement[22536-22570]"
    }, {
      "left" : "DateTimeZone zone = chrono.getZone();",
      "right" : "DateTimeZone zone = chrono.getZone();",
      "info" : "VariableDeclarationStatement[22730-22767]:VariableDeclarationStatement[22730-22767]"
    }, {
      "left" : "int offset = zone.getOffset(instant);",
      "right" : "int offset = zone.getOffset(instant);",
      "info" : "VariableDeclarationStatement[22776-22813]:VariableDeclarationStatement[22776-22813]"
    }, {
      "left" : "long adjustedInstant = instant + offset;",
      "right" : "long adjustedInstant = instant + offset;",
      "info" : "VariableDeclarationStatement[22822-22862]:VariableDeclarationStatement[22822-22862]"
    }, {
      "left" : "if ((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)",
      "right" : "if ((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)",
      "info" : "IfStatement[22871-23106]:IfStatement[22871-23106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22935-23106]:Block[22935-23106]"
    }, {
      "left" : "zone = DateTimeZone.UTC;",
      "right" : "zone = DateTimeZone.UTC;",
      "info" : "ExpressionStatement[23009-23033]:ExpressionStatement[23009-23033]"
    }, {
      "left" : "offset = 0;",
      "right" : "offset = 0;",
      "info" : "ExpressionStatement[23046-23057]:ExpressionStatement[23046-23057]"
    }, {
      "left" : "adjustedInstant = instant;",
      "right" : "adjustedInstant = instant;",
      "info" : "ExpressionStatement[23070-23096]:ExpressionStatement[23070-23096]"
    }, {
      "left" : "printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);",
      "right" : "printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);",
      "info" : "ExpressionStatement[23115-23194]:ExpressionStatement[23115-23194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23291-24017]:Block[23291-24017]"
    }, {
      "left" : "DateTimePrinter printer = requirePrinter();",
      "right" : "DateTimePrinter printer = requirePrinter();",
      "info" : "VariableDeclarationStatement[23301-23344]:VariableDeclarationStatement[23301-23344]"
    }, {
      "left" : "chrono = selectChronology(chrono);",
      "right" : "chrono = selectChronology(chrono);",
      "info" : "ExpressionStatement[23353-23387]:ExpressionStatement[23353-23387]"
    }, {
      "left" : "DateTimeZone zone = chrono.getZone();",
      "right" : "DateTimeZone zone = chrono.getZone();",
      "info" : "VariableDeclarationStatement[23547-23584]:VariableDeclarationStatement[23547-23584]"
    }, {
      "left" : "int offset = zone.getOffset(instant);",
      "right" : "int offset = zone.getOffset(instant);",
      "info" : "VariableDeclarationStatement[23593-23630]:VariableDeclarationStatement[23593-23630]"
    }, {
      "left" : "long adjustedInstant = instant + offset;",
      "right" : "long adjustedInstant = instant + offset;",
      "info" : "VariableDeclarationStatement[23639-23679]:VariableDeclarationStatement[23639-23679]"
    }, {
      "left" : "if ((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)",
      "right" : "if ((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)",
      "info" : "IfStatement[23688-23923]:IfStatement[23688-23923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23752-23923]:Block[23752-23923]"
    }, {
      "left" : "zone = DateTimeZone.UTC;",
      "right" : "zone = DateTimeZone.UTC;",
      "info" : "ExpressionStatement[23826-23850]:ExpressionStatement[23826-23850]"
    }, {
      "left" : "offset = 0;",
      "right" : "offset = 0;",
      "info" : "ExpressionStatement[23863-23874]:ExpressionStatement[23863-23874]"
    }, {
      "left" : "adjustedInstant = instant;",
      "right" : "adjustedInstant = instant;",
      "info" : "ExpressionStatement[23887-23913]:ExpressionStatement[23887-23913]"
    }, {
      "left" : "printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);",
      "right" : "printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);",
      "info" : "ExpressionStatement[23932-24011]:ExpressionStatement[23932-24011]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24207-24402]:Block[24207-24402]"
    }, {
      "left" : "DateTimePrinter printer = iPrinter;",
      "right" : "DateTimePrinter printer = iPrinter;",
      "info" : "VariableDeclarationStatement[24217-24252]:VariableDeclarationStatement[24217-24252]"
    }, {
      "left" : "if (printer == null)",
      "right" : "if (printer == null)",
      "info" : "IfStatement[24261-24372]:IfStatement[24261-24372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24282-24372]:Block[24282-24372]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Printing not supported\");",
      "right" : "throw new UnsupportedOperationException(\"Printing not supported\");",
      "info" : "ThrowStatement[24296-24362]:ThrowStatement[24296-24362]"
    }, {
      "left" : "return printer;",
      "right" : "return printer;",
      "info" : "ReturnStatement[24381-24396]:ReturnStatement[24381-24396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28149-28723]:Block[28168-28742]"
    }, {
      "left" : "DateTimeParser parser = requireParser();",
      "right" : "DateTimeParser parser = requireParser();",
      "info" : "VariableDeclarationStatement[28159-28199]:VariableDeclarationStatement[28178-28218]"
    }, {
      "left" : "Chronology chrono = selectChronology(iChrono);",
      "right" : "Chronology chrono = selectChronology(iChrono);",
      "info" : "VariableDeclarationStatement[28217-28263]:VariableDeclarationStatement[28236-28282]"
    }, {
      "left" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "right" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "info" : "VariableDeclarationStatement[28272-28373]:VariableDeclarationStatement[28291-28392]"
    }, {
      "left" : "int newPos = parser.parseInto(bucket, text, 0);",
      "right" : "int newPos = parser.parseInto(bucket, text, 0);",
      "info" : "VariableDeclarationStatement[28382-28429]:VariableDeclarationStatement[28401-28448]"
    }, {
      "left" : "if (newPos >= 0)",
      "right" : "if (newPos >= 0)",
      "info" : "IfStatement[28438-28627]:IfStatement[28457-28646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28455-28580]:Block[28474-28599]"
    }, {
      "left" : "if (newPos >= text.length())",
      "right" : "if (newPos >= text.length())",
      "info" : "IfStatement[28469-28570]:IfStatement[28488-28589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28498-28570]:Block[28517-28589]"
    }, {
      "left" : "return bucket.computeMillis(true, text);",
      "right" : "return bucket.computeMillis(true, text);",
      "info" : "ReturnStatement[28516-28556]:ReturnStatement[28535-28575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28586-28627]:Block[28605-28646]"
    }, {
      "left" : "newPos = ~newPos;",
      "right" : "newPos = ~newPos;",
      "info" : "ExpressionStatement[28600-28617]:ExpressionStatement[28619-28636]"
    }, {
      "left" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "right" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "info" : "ThrowStatement[28636-28717]:ThrowStatement[28655-28736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29448-29510]:Block[29467-29529]"
    }, {
      "left" : "return parseLocalDateTime(text).toLocalDate();",
      "right" : "return parseLocalDateTime(text).toLocalDate();",
      "info" : "ReturnStatement[29458-29504]:ReturnStatement[29477-29523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30235-30297]:Block[30254-30316]"
    }, {
      "left" : "return parseLocalDateTime(text).toLocalTime();",
      "right" : "return parseLocalDateTime(text).toLocalTime();",
      "info" : "ReturnStatement[30245-30291]:ReturnStatement[30264-30310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31039-32174]:Block[31058-32193]"
    }, {
      "left" : "DateTimeParser parser = requireParser();",
      "right" : "DateTimeParser parser = requireParser();",
      "info" : "VariableDeclarationStatement[31049-31089]:VariableDeclarationStatement[31068-31108]"
    }, {
      "left" : "Chronology chrono = selectChronology(null).withUTC();",
      "right" : "Chronology chrono = selectChronology(null).withUTC();",
      "info" : "VariableDeclarationStatement[31107-31160]:VariableDeclarationStatement[31126-31179]"
    }, {
      "left" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "right" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "info" : "VariableDeclarationStatement[31207-31308]:VariableDeclarationStatement[31226-31327]"
    }, {
      "left" : "int newPos = parser.parseInto(bucket, text, 0);",
      "right" : "int newPos = parser.parseInto(bucket, text, 0);",
      "info" : "VariableDeclarationStatement[31317-31364]:VariableDeclarationStatement[31336-31383]"
    }, {
      "left" : "if (newPos >= 0)",
      "right" : "if (newPos >= 0)",
      "info" : "IfStatement[31373-32078]:IfStatement[31392-32097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31390-32031]:Block[31409-32050]"
    }, {
      "left" : "if (newPos >= text.length())",
      "right" : "if (newPos >= text.length())",
      "info" : "IfStatement[31404-32021]:IfStatement[31423-32040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31433-32021]:Block[31452-32040]"
    }, {
      "left" : "long millis = bucket.computeMillis(true, text);",
      "right" : "long millis = bucket.computeMillis(true, text);",
      "info" : "VariableDeclarationStatement[31451-31498]:VariableDeclarationStatement[31470-31517]"
    }, {
      "left" : "if (bucket.getOffsetInteger() != null)",
      "right" : "if (bucket.getOffsetInteger() != null)",
      "info" : "IfStatement[31515-31949]:IfStatement[31534-31968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31554-31830]:Block[31573-31849]"
    }, {
      "left" : "int parsedOffset = bucket.getOffsetInteger();",
      "right" : "int parsedOffset = bucket.getOffsetInteger();",
      "info" : "VariableDeclarationStatement[31619-31664]:VariableDeclarationStatement[31638-31683]"
    }, {
      "left" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "right" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "info" : "VariableDeclarationStatement[31685-31754]:VariableDeclarationStatement[31704-31773]"
    }, {
      "left" : "chrono = chrono.withZone(parsedZone);",
      "right" : "chrono = chrono.withZone(parsedZone);",
      "info" : "ExpressionStatement[31775-31812]:ExpressionStatement[31794-31831]"
    }, {
      "left" : "if (bucket.getZone() != null)",
      "right" : "if (bucket.getZone() != null)",
      "info" : "IfStatement[31836-31949]:IfStatement[31855-31968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31866-31949]:Block[31885-31968]"
    }, {
      "left" : "chrono = chrono.withZone(bucket.getZone());",
      "right" : "chrono = chrono.withZone(bucket.getZone());",
      "info" : "ExpressionStatement[31888-31931]:ExpressionStatement[31907-31950]"
    }, {
      "left" : "return new LocalDateTime(millis, chrono);",
      "right" : "return new LocalDateTime(millis, chrono);",
      "info" : "ReturnStatement[31966-32007]:ReturnStatement[31985-32026]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32037-32078]:Block[32056-32097]"
    }, {
      "left" : "newPos = ~newPos;",
      "right" : "newPos = ~newPos;",
      "info" : "ExpressionStatement[32051-32068]:ExpressionStatement[32070-32087]"
    }, {
      "left" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "right" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "info" : "ThrowStatement[32087-32168]:ThrowStatement[32106-32187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33089-34279]:Block[33108-34298]"
    }, {
      "left" : "DateTimeParser parser = requireParser();",
      "right" : "DateTimeParser parser = requireParser();",
      "info" : "VariableDeclarationStatement[33099-33139]:VariableDeclarationStatement[33118-33158]"
    }, {
      "left" : "Chronology chrono = selectChronology(null);",
      "right" : "Chronology chrono = selectChronology(null);",
      "info" : "VariableDeclarationStatement[33157-33200]:VariableDeclarationStatement[33176-33219]"
    }, {
      "left" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "right" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "info" : "VariableDeclarationStatement[33209-33310]:VariableDeclarationStatement[33228-33329]"
    }, {
      "left" : "int newPos = parser.parseInto(bucket, text, 0);",
      "right" : "int newPos = parser.parseInto(bucket, text, 0);",
      "info" : "VariableDeclarationStatement[33319-33366]:VariableDeclarationStatement[33338-33385]"
    }, {
      "left" : "if (newPos >= 0)",
      "right" : "if (newPos >= 0)",
      "info" : "IfStatement[33375-34183]:IfStatement[33394-34202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33392-34136]:Block[33411-34155]"
    }, {
      "left" : "if (newPos >= text.length())",
      "right" : "if (newPos >= text.length())",
      "info" : "IfStatement[33406-34126]:IfStatement[33425-34145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33435-34126]:Block[33454-34145]"
    }, {
      "left" : "long millis = bucket.computeMillis(true, text);",
      "right" : "long millis = bucket.computeMillis(true, text);",
      "info" : "VariableDeclarationStatement[33453-33500]:VariableDeclarationStatement[33472-33519]"
    }, {
      "left" : "if (iOffsetParsed && bucket.getOffsetInteger() != null)",
      "right" : "if (iOffsetParsed && bucket.getOffsetInteger() != null)",
      "info" : "IfStatement[33517-33925]:IfStatement[33536-33944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33573-33806]:Block[33592-33825]"
    }, {
      "left" : "int parsedOffset = bucket.getOffsetInteger();",
      "right" : "int parsedOffset = bucket.getOffsetInteger();",
      "info" : "VariableDeclarationStatement[33595-33640]:VariableDeclarationStatement[33614-33659]"
    }, {
      "left" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "right" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "info" : "VariableDeclarationStatement[33661-33730]:VariableDeclarationStatement[33680-33749]"
    }, {
      "left" : "chrono = chrono.withZone(parsedZone);",
      "right" : "chrono = chrono.withZone(parsedZone);",
      "info" : "ExpressionStatement[33751-33788]:ExpressionStatement[33770-33807]"
    }, {
      "left" : "if (bucket.getZone() != null)",
      "right" : "if (bucket.getZone() != null)",
      "info" : "IfStatement[33812-33925]:IfStatement[33831-33944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33842-33925]:Block[33861-33944]"
    }, {
      "left" : "chrono = chrono.withZone(bucket.getZone());",
      "right" : "chrono = chrono.withZone(bucket.getZone());",
      "info" : "ExpressionStatement[33864-33907]:ExpressionStatement[33883-33926]"
    }, {
      "left" : "DateTime dt = new DateTime(millis, chrono);",
      "right" : "DateTime dt = new DateTime(millis, chrono);",
      "info" : "VariableDeclarationStatement[33942-33985]:VariableDeclarationStatement[33961-34004]"
    }, {
      "left" : "if (iZone != null)",
      "right" : "if (iZone != null)",
      "info" : "IfStatement[34002-34085]:IfStatement[34021-34104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34021-34085]:Block[34040-34104]"
    }, {
      "left" : "dt = dt.withZone(iZone);",
      "right" : "dt = dt.withZone(iZone);",
      "info" : "ExpressionStatement[34043-34067]:ExpressionStatement[34062-34086]"
    }, {
      "left" : "return dt;",
      "right" : "return dt;",
      "info" : "ReturnStatement[34102-34112]:ReturnStatement[34121-34131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34142-34183]:Block[34161-34202]"
    }, {
      "left" : "newPos = ~newPos;",
      "right" : "newPos = ~newPos;",
      "info" : "ExpressionStatement[34156-34173]:ExpressionStatement[34175-34192]"
    }, {
      "left" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "right" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "info" : "ThrowStatement[34192-34273]:ThrowStatement[34211-34292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35215-36413]:Block[35234-36432]"
    }, {
      "left" : "DateTimeParser parser = requireParser();",
      "right" : "DateTimeParser parser = requireParser();",
      "info" : "VariableDeclarationStatement[35225-35265]:VariableDeclarationStatement[35244-35284]"
    }, {
      "left" : "Chronology chrono = selectChronology(null);",
      "right" : "Chronology chrono = selectChronology(null);",
      "info" : "VariableDeclarationStatement[35283-35326]:VariableDeclarationStatement[35302-35345]"
    }, {
      "left" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "right" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "info" : "VariableDeclarationStatement[35335-35436]:VariableDeclarationStatement[35354-35455]"
    }, {
      "left" : "int newPos = parser.parseInto(bucket, text, 0);",
      "right" : "int newPos = parser.parseInto(bucket, text, 0);",
      "info" : "VariableDeclarationStatement[35445-35492]:VariableDeclarationStatement[35464-35511]"
    }, {
      "left" : "if (newPos >= 0)",
      "right" : "if (newPos >= 0)",
      "info" : "IfStatement[35501-36317]:IfStatement[35520-36336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35518-36270]:Block[35537-36289]"
    }, {
      "left" : "if (newPos >= text.length())",
      "right" : "if (newPos >= text.length())",
      "info" : "IfStatement[35532-36260]:IfStatement[35551-36279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35561-36260]:Block[35580-36279]"
    }, {
      "left" : "long millis = bucket.computeMillis(true, text);",
      "right" : "long millis = bucket.computeMillis(true, text);",
      "info" : "VariableDeclarationStatement[35579-35626]:VariableDeclarationStatement[35598-35645]"
    }, {
      "left" : "if (iOffsetParsed && bucket.getOffsetInteger() != null)",
      "right" : "if (iOffsetParsed && bucket.getOffsetInteger() != null)",
      "info" : "IfStatement[35643-36051]:IfStatement[35662-36070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35699-35932]:Block[35718-35951]"
    }, {
      "left" : "int parsedOffset = bucket.getOffsetInteger();",
      "right" : "int parsedOffset = bucket.getOffsetInteger();",
      "info" : "VariableDeclarationStatement[35721-35766]:VariableDeclarationStatement[35740-35785]"
    }, {
      "left" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "right" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "info" : "VariableDeclarationStatement[35787-35856]:VariableDeclarationStatement[35806-35875]"
    }, {
      "left" : "chrono = chrono.withZone(parsedZone);",
      "right" : "chrono = chrono.withZone(parsedZone);",
      "info" : "ExpressionStatement[35877-35914]:ExpressionStatement[35896-35933]"
    }, {
      "left" : "if (bucket.getZone() != null)",
      "right" : "if (bucket.getZone() != null)",
      "info" : "IfStatement[35938-36051]:IfStatement[35957-36070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35968-36051]:Block[35987-36070]"
    }, {
      "left" : "chrono = chrono.withZone(bucket.getZone());",
      "right" : "chrono = chrono.withZone(bucket.getZone());",
      "info" : "ExpressionStatement[35990-36033]:ExpressionStatement[36009-36052]"
    }, {
      "left" : "MutableDateTime dt = new MutableDateTime(millis, chrono);",
      "right" : "MutableDateTime dt = new MutableDateTime(millis, chrono);",
      "info" : "VariableDeclarationStatement[36068-36125]:VariableDeclarationStatement[36087-36144]"
    }, {
      "left" : "if (iZone != null)",
      "right" : "if (iZone != null)",
      "info" : "IfStatement[36142-36219]:IfStatement[36161-36238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36161-36219]:Block[36180-36238]"
    }, {
      "left" : "dt.setZone(iZone);",
      "right" : "dt.setZone(iZone);",
      "info" : "ExpressionStatement[36183-36201]:ExpressionStatement[36202-36220]"
    }, {
      "left" : "return dt;",
      "right" : "return dt;",
      "info" : "ReturnStatement[36236-36246]:ReturnStatement[36255-36265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36276-36317]:Block[36295-36336]"
    }, {
      "left" : "newPos = ~newPos;",
      "right" : "newPos = ~newPos;",
      "info" : "ExpressionStatement[36290-36307]:ExpressionStatement[36309-36326]"
    }, {
      "left" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "right" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "info" : "ThrowStatement[36326-36407]:ThrowStatement[36345-36426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36599-36788]:Block[36618-36807]"
    }, {
      "left" : "DateTimeParser parser = iParser;",
      "right" : "DateTimeParser parser = iParser;",
      "info" : "VariableDeclarationStatement[36609-36641]:VariableDeclarationStatement[36628-36660]"
    }, {
      "left" : "if (parser == null)",
      "right" : "if (parser == null)",
      "info" : "IfStatement[36650-36759]:IfStatement[36669-36778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36670-36759]:Block[36689-36778]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Parsing not supported\");",
      "right" : "throw new UnsupportedOperationException(\"Parsing not supported\");",
      "info" : "ThrowStatement[36684-36749]:ThrowStatement[36703-36768]"
    }, {
      "left" : "return parser;",
      "right" : "return parser;",
      "info" : "ReturnStatement[36768-36782]:ReturnStatement[36787-36801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37082-37321]:Block[37101-37340]"
    }, {
      "left" : "chrono = DateTimeUtils.getChronology(chrono);",
      "right" : "chrono = DateTimeUtils.getChronology(chrono);",
      "info" : "ExpressionStatement[37092-37137]:ExpressionStatement[37111-37156]"
    }, {
      "left" : "if (iChrono != null)",
      "right" : "if (iChrono != null)",
      "info" : "IfStatement[37146-37208]:IfStatement[37165-37227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37167-37208]:Block[37186-37227]"
    }, {
      "left" : "chrono = iChrono;",
      "right" : "chrono = iChrono;",
      "info" : "ExpressionStatement[37181-37198]:ExpressionStatement[37200-37217]"
    }, {
      "left" : "if (iZone != null)",
      "right" : "if (iZone != null)",
      "info" : "IfStatement[37217-37292]:IfStatement[37236-37311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37236-37292]:Block[37255-37311]"
    }, {
      "left" : "chrono = chrono.withZone(iZone);",
      "right" : "chrono = chrono.withZone(iZone);",
      "info" : "ExpressionStatement[37250-37282]:ExpressionStatement[37269-37301]"
    }, {
      "left" : "return chrono;",
      "right" : "return chrono;",
      "info" : "ReturnStatement[37301-37315]:ReturnStatement[37320-37334]"
    } ]
  },
  "interFileMappings" : { }
}