{
  "matchedElements" : [
 {
    "left" : "class : W3CDom",
    "right" : "class : W3CDom",
    "info" : "TypeDeclaration[711-6816]:TypeDeclaration[711-6882]"
  }, {
    "left" : "factory",
    "right" : "factory",
    "info" : "FieldDeclaration[1048-1128]:FieldDeclaration[1048-1128]"
  }, {
    "left" : "public fromJsoup(in ) : ",
    "right" : "public fromJsoup(in ) : ",
    "info" : "MethodDeclaration[1134-1746]:MethodDeclaration[1134-1746]"
  }, {
    "left" : "public convert(in , out ) : void",
    "right" : "public convert(in , out ) : void",
    "info" : "MethodDeclaration[1752-2393]:MethodDeclaration[1752-2393]"
  }, {
    "left" : "class : W3CBuilder",
    "right" : "class : W3CBuilder",
    "info" : "TypeDeclaration[2399-6138]:TypeDeclaration[2399-6204]"
  }, {
    "left" : "xmlnsKey",
    "right" : "xmlnsKey",
    "info" : "FieldDeclaration[2537-2584]:FieldDeclaration[2537-2584]"
  }, {
    "left" : "xmlnsPrefix",
    "right" : "xmlnsPrefix",
    "info" : "FieldDeclaration[2593-2644]:FieldDeclaration[2593-2644]"
  }, {
    "left" : "doc",
    "right" : "doc",
    "info" : "FieldDeclaration[2654-2681]:FieldDeclaration[2654-2681]"
  }, {
    "left" : "namespaces",
    "right" : "namespaces",
    "info" : "FieldDeclaration[2690-2771]:FieldDeclaration[2690-2771]"
  }, {
    "left" : "dest",
    "right" : "dest",
    "info" : "FieldDeclaration[2797-2818]:FieldDeclaration[2797-2818]"
  }, {
    "left" : "public W3CBuilder(doc )",
    "right" : "public W3CBuilder(doc )",
    "info" : "MethodDeclaration[2828-2899]:MethodDeclaration[2828-2899]"
  }, {
    "left" : "public head(source , depth int) : void",
    "right" : "public head(source , depth int) : void",
    "info" : "MethodDeclaration[2909-4480]:MethodDeclaration[2909-4480]"
  }, {
    "left" : "public tail(source , depth int) : void",
    "right" : "public tail(source , depth int) : void",
    "info" : "MethodDeclaration[4490-4756]:MethodDeclaration[4490-4756]"
  }, {
    "left" : "private copyAttributes(source , el ) : void",
    "right" : "private copyAttributes(source , el ) : void",
    "info" : "MethodDeclaration[4766-5147]:MethodDeclaration[4766-5213]"
  }, {
    "left" : "private updateNamespaces(el ) : ",
    "right" : "private updateNamespaces(el ) : ",
    "info" : "MethodDeclaration[5157-6131]:MethodDeclaration[5223-6197]"
  }, {
    "left" : "public asString(doc ) : ",
    "right" : "public asString(doc ) : ",
    "info" : "MethodDeclaration[6144-6814]:MethodDeclaration[6210-6880]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1022-1028]:Modifier[1022-1028]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1029-1034]:TYPE_DECLARATION_KIND[1029-1034]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1251-1257]:Modifier[1251-1257]"
  }, {
    "left" : "Document",
    "right" : "Document",
    "info" : "SimpleType[1258-1266]:SimpleType[1258-1266]"
  }, {
    "left" : "fromJsoup",
    "right" : "fromJsoup",
    "info" : "SimpleName[1267-1276]:SimpleName[1267-1276]"
  }, {
    "left" : "org.jsoup.nodes.Document in",
    "right" : "org.jsoup.nodes.Document in",
    "info" : "SingleVariableDeclaration[1277-1304]:SingleVariableDeclaration[1277-1304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1306-1746]:Block[1306-1746]"
  }, {
    "left" : "Validate.notNull(in);",
    "right" : "Validate.notNull(in);",
    "info" : "ExpressionStatement[1316-1337]:ExpressionStatement[1316-1337]"
  }, {
    "left" : "DocumentBuilder builder;",
    "right" : "DocumentBuilder builder;",
    "info" : "VariableDeclarationStatement[1346-1370]:VariableDeclarationStatement[1346-1370]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[1379-1740]:TryStatement[1379-1740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1383-1641]:Block[1383-1641]"
  }, {
    "left" : "factory.setNamespaceAware(true);",
    "right" : "factory.setNamespaceAware(true);",
    "info" : "ExpressionStatement[1443-1475]:ExpressionStatement[1443-1475]"
  }, {
    "left" : "builder = factory.newDocumentBuilder();",
    "right" : "builder = factory.newDocumentBuilder();",
    "info" : "ExpressionStatement[1488-1527]:ExpressionStatement[1488-1527]"
  }, {
    "left" : "Document out = builder.newDocument();",
    "right" : "Document out = builder.newDocument();",
    "info" : "VariableDeclarationStatement[1540-1577]:VariableDeclarationStatement[1540-1577]"
  }, {
    "left" : "convert(in, out);",
    "right" : "convert(in, out);",
    "info" : "ExpressionStatement[1590-1607]:ExpressionStatement[1590-1607]"
  }, {
    "left" : "return out;",
    "right" : "return out;",
    "info" : "ReturnStatement[1620-1631]:ReturnStatement[1620-1631]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1681-1740]:Block[1681-1740]"
  }, {
    "left" : "throw new IllegalStateException(e);",
    "right" : "throw new IllegalStateException(e);",
    "info" : "ThrowStatement[1695-1730]:ThrowStatement[1695-1730]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2040-2046]:Modifier[2040-2046]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2047-2051]:PrimitiveType[2047-2051]"
  }, {
    "left" : "convert",
    "right" : "convert",
    "info" : "SimpleName[2052-2059]:SimpleName[2052-2059]"
  }, {
    "left" : "org.jsoup.nodes.Document in",
    "right" : "org.jsoup.nodes.Document in",
    "info" : "SingleVariableDeclaration[2060-2087]:SingleVariableDeclaration[2060-2087]"
  }, {
    "left" : "Document out",
    "right" : "Document out",
    "info" : "SingleVariableDeclaration[2089-2101]:SingleVariableDeclaration[2089-2101]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2103-2393]:Block[2103-2393]"
  }, {
    "left" : "if (!StringUtil.isBlank(in.location()))",
    "right" : "if (!StringUtil.isBlank(in.location()))",
    "info" : "IfStatement[2113-2199]:IfStatement[2113-2199]"
  }, {
    "left" : "out.setDocumentURI(in.location());",
    "right" : "out.setDocumentURI(in.location());",
    "info" : "ExpressionStatement[2165-2199]:ExpressionStatement[2165-2199]"
  }, {
    "left" : "org.jsoup.nodes.Element rootEl = in.child(0);",
    "right" : "org.jsoup.nodes.Element rootEl = in.child(0);",
    "info" : "VariableDeclarationStatement[2209-2254]:VariableDeclarationStatement[2209-2254]"
  }, {
    "left" : "NodeTraversor traversor = new NodeTraversor(new W3CBuilder(out));",
    "right" : "NodeTraversor traversor = new NodeTraversor(new W3CBuilder(out));",
    "info" : "VariableDeclarationStatement[2286-2351]:VariableDeclarationStatement[2286-2351]"
  }, {
    "left" : "traversor.traverse(rootEl);",
    "right" : "traversor.traverse(rootEl);",
    "info" : "ExpressionStatement[2360-2387]:ExpressionStatement[2360-2387]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[2470-2479]:Modifier[2470-2479]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2480-2486]:Modifier[2480-2486]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[2487-2492]:TYPE_DECLARATION_KIND[2487-2492]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2828-2834]:Modifier[2828-2834]"
  }, {
    "left" : "W3CBuilder",
    "right" : "W3CBuilder",
    "info" : "SimpleName[2835-2845]:SimpleName[2835-2845]"
  }, {
    "left" : "Document doc",
    "right" : "Document doc",
    "info" : "SingleVariableDeclaration[2846-2858]:SingleVariableDeclaration[2846-2858]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2860-2899]:Block[2860-2899]"
  }, {
    "left" : "this.doc = doc;",
    "right" : "this.doc = doc;",
    "info" : "ExpressionStatement[2874-2889]:ExpressionStatement[2874-2889]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2909-2915]:Modifier[2909-2915]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2916-2920]:PrimitiveType[2916-2920]"
  }, {
    "left" : "head",
    "right" : "head",
    "info" : "SimpleName[2921-2925]:SimpleName[2921-2925]"
  }, {
    "left" : "org.jsoup.nodes.Node source",
    "right" : "org.jsoup.nodes.Node source",
    "info" : "SingleVariableDeclaration[2926-2953]:SingleVariableDeclaration[2926-2953]"
  }, {
    "left" : "int depth",
    "right" : "int depth",
    "info" : "SingleVariableDeclaration[2955-2964]:SingleVariableDeclaration[2955-2964]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2966-4480]:Block[2966-4480]"
  }, {
    "left" : "if (source instanceof org.jsoup.nodes.Element)",
    "right" : "if (source instanceof org.jsoup.nodes.Element)",
    "info" : "IfStatement[2980-4470]:IfStatement[2980-4470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3027-3595]:Block[3027-3595]"
  }, {
    "left" : "org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;",
    "right" : "org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;",
    "info" : "VariableDeclarationStatement[3045-3113]:VariableDeclarationStatement[3045-3113]"
  }, {
    "left" : "String prefix = updateNamespaces(sourceEl);",
    "right" : "String prefix = updateNamespaces(sourceEl);",
    "info" : "VariableDeclarationStatement[3131-3174]:VariableDeclarationStatement[3131-3174]"
  }, {
    "left" : "String namespace = namespaces.get(prefix);",
    "right" : "String namespace = namespaces.get(prefix);",
    "info" : "VariableDeclarationStatement[3191-3233]:VariableDeclarationStatement[3191-3233]"
  }, {
    "left" : "Element el = doc.createElementNS(namespace, sourceEl.tagName());",
    "right" : "Element el = doc.createElementNS(namespace, sourceEl.tagName());",
    "info" : "VariableDeclarationStatement[3251-3315]:VariableDeclarationStatement[3251-3315]"
  }, {
    "left" : "copyAttributes(sourceEl, el);",
    "right" : "copyAttributes(sourceEl, el);",
    "info" : "ExpressionStatement[3332-3361]:ExpressionStatement[3332-3361]"
  }, {
    "left" : "if (dest == null)",
    "right" : "if (dest == null)",
    "info" : "IfStatement[3378-3543]:IfStatement[3378-3543]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3396-3476]:Block[3396-3476]"
  }, {
    "left" : "doc.appendChild(el);",
    "right" : "doc.appendChild(el);",
    "info" : "ExpressionStatement[3438-3458]:ExpressionStatement[3438-3458]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3482-3543]:Block[3482-3543]"
  }, {
    "left" : "dest.appendChild(el);",
    "right" : "dest.appendChild(el);",
    "info" : "ExpressionStatement[3504-3525]:ExpressionStatement[3504-3525]"
  }, {
    "left" : "dest = el;",
    "right" : "dest = el;",
    "info" : "ExpressionStatement[3560-3570]:ExpressionStatement[3560-3570]"
  }, {
    "left" : "if (source instanceof org.jsoup.nodes.TextNode)",
    "right" : "if (source instanceof org.jsoup.nodes.TextNode)",
    "info" : "IfStatement[3601-4470]:IfStatement[3601-4470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3649-3868]:Block[3649-3868]"
  }, {
    "left" : "org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;",
    "right" : "org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;",
    "info" : "VariableDeclarationStatement[3667-3739]:VariableDeclarationStatement[3667-3739]"
  }, {
    "left" : "Text text = doc.createTextNode(sourceText.getWholeText());",
    "right" : "Text text = doc.createTextNode(sourceText.getWholeText());",
    "info" : "VariableDeclarationStatement[3756-3814]:VariableDeclarationStatement[3756-3814]"
  }, {
    "left" : "dest.appendChild(text);",
    "right" : "dest.appendChild(text);",
    "info" : "ExpressionStatement[3831-3854]:ExpressionStatement[3831-3854]"
  }, {
    "left" : "if (source instanceof org.jsoup.nodes.Comment)",
    "right" : "if (source instanceof org.jsoup.nodes.Comment)",
    "info" : "IfStatement[3874-4470]:IfStatement[3874-4470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3921-4147]:Block[3921-4147]"
  }, {
    "left" : "org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;",
    "right" : "org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;",
    "info" : "VariableDeclarationStatement[3939-4012]:VariableDeclarationStatement[3939-4012]"
  }, {
    "left" : "Comment comment = doc.createComment(sourceComment.getData());",
    "right" : "Comment comment = doc.createComment(sourceComment.getData());",
    "info" : "VariableDeclarationStatement[4029-4090]:VariableDeclarationStatement[4029-4090]"
  }, {
    "left" : "dest.appendChild(comment);",
    "right" : "dest.appendChild(comment);",
    "info" : "ExpressionStatement[4107-4133]:ExpressionStatement[4107-4133]"
  }, {
    "left" : "if (source instanceof org.jsoup.nodes.DataNode)",
    "right" : "if (source instanceof org.jsoup.nodes.DataNode)",
    "info" : "IfStatement[4153-4470]:IfStatement[4153-4470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4201-4420]:Block[4201-4420]"
  }, {
    "left" : "org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;",
    "right" : "org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;",
    "info" : "VariableDeclarationStatement[4219-4291]:VariableDeclarationStatement[4219-4291]"
  }, {
    "left" : "Text node = doc.createTextNode(sourceData.getWholeData());",
    "right" : "Text node = doc.createTextNode(sourceData.getWholeData());",
    "info" : "VariableDeclarationStatement[4308-4366]:VariableDeclarationStatement[4308-4366]"
  }, {
    "left" : "dest.appendChild(node);",
    "right" : "dest.appendChild(node);",
    "info" : "ExpressionStatement[4383-4406]:ExpressionStatement[4383-4406]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4426-4470]:Block[4426-4470]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4490-4496]:Modifier[4490-4496]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4497-4501]:PrimitiveType[4497-4501]"
  }, {
    "left" : "tail",
    "right" : "tail",
    "info" : "SimpleName[4502-4506]:SimpleName[4502-4506]"
  }, {
    "left" : "org.jsoup.nodes.Node source",
    "right" : "org.jsoup.nodes.Node source",
    "info" : "SingleVariableDeclaration[4507-4534]:SingleVariableDeclaration[4507-4534]"
  }, {
    "left" : "int depth",
    "right" : "int depth",
    "info" : "SingleVariableDeclaration[4536-4545]:SingleVariableDeclaration[4536-4545]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4547-4756]:Block[4547-4756]"
  }, {
    "left" : "if (source instanceof org.jsoup.nodes.Element && dest.getParentNode() instanceof Element)",
    "right" : "if (source instanceof org.jsoup.nodes.Element && dest.getParentNode() instanceof Element)",
    "info" : "IfStatement[4561-4746]:IfStatement[4561-4746]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4651-4746]:Block[4651-4746]"
  }, {
    "left" : "dest = (Element) dest.getParentNode();",
    "right" : "dest = (Element) dest.getParentNode();",
    "info" : "ExpressionStatement[4669-4707]:ExpressionStatement[4669-4707]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[4766-4773]:Modifier[4766-4773]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4774-4778]:PrimitiveType[4774-4778]"
  }, {
    "left" : "copyAttributes",
    "right" : "copyAttributes",
    "info" : "SimpleName[4779-4793]:SimpleName[4779-4793]"
  }, {
    "left" : "org.jsoup.nodes.Node source",
    "right" : "org.jsoup.nodes.Node source",
    "info" : "SingleVariableDeclaration[4794-4821]:SingleVariableDeclaration[4794-4821]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[4823-4833]:SingleVariableDeclaration[4823-4833]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4835-5147]:Block[4835-5213]"
  }, {
    "left" : "for (Attribute attribute : source.attributes())",
    "right" : "for (Attribute attribute : source.attributes())",
    "info" : "EnhancedForStatement[4849-5137]:EnhancedForStatement[4849-5203]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4897-5137]:Block[4897-5203]"
  }, {
    "left" : "String key = attribute.getKey().replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");",
    "right" : "String key = attribute.getKey().replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");",
    "info" : "VariableDeclarationStatement[4992-5059]:VariableDeclarationStatement[4992-5059]"
  }, {
    "left" : "el.setAttribute(key, attribute.getValue());",
    "right" : "el.setAttribute(key, attribute.getValue());",
    "info" : "ExpressionStatement[5080-5123]:ExpressionStatement[5146-5189]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[5262-5269]:Modifier[5328-5335]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[5270-5276]:SimpleType[5336-5342]"
  }, {
    "left" : "updateNamespaces",
    "right" : "updateNamespaces",
    "info" : "SimpleName[5277-5293]:SimpleName[5343-5359]"
  }, {
    "left" : "org.jsoup.nodes.Element el",
    "right" : "org.jsoup.nodes.Element el",
    "info" : "SingleVariableDeclaration[5294-5320]:SingleVariableDeclaration[5360-5386]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5322-6131]:Block[5388-6197]"
  }, {
    "left" : "Attributes attributes = el.attributes();",
    "right" : "Attributes attributes = el.attributes();",
    "info" : "VariableDeclarationStatement[5452-5492]:VariableDeclarationStatement[5518-5558]"
  }, {
    "left" : "for (Attribute attr : attributes)",
    "right" : "for (Attribute attr : attributes)",
    "info" : "EnhancedForStatement[5505-5960]:EnhancedForStatement[5571-6026]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5539-5960]:Block[5605-6026]"
  }, {
    "left" : "String key = attr.getKey();",
    "right" : "String key = attr.getKey();",
    "info" : "VariableDeclarationStatement[5557-5584]:VariableDeclarationStatement[5623-5650]"
  }, {
    "left" : "String prefix;",
    "right" : "String prefix;",
    "info" : "VariableDeclarationStatement[5601-5615]:VariableDeclarationStatement[5667-5681]"
  }, {
    "left" : "if (key.equals(xmlnsKey))",
    "right" : "if (key.equals(xmlnsKey))",
    "info" : "IfStatement[5632-5889]:IfStatement[5698-5955]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5658-5710]:Block[5724-5776]"
  }, {
    "left" : "prefix = \"\";",
    "right" : "prefix = \"\";",
    "info" : "ExpressionStatement[5680-5692]:ExpressionStatement[5746-5758]"
  }, {
    "left" : "if (key.startsWith(xmlnsPrefix))",
    "right" : "if (key.startsWith(xmlnsPrefix))",
    "info" : "IfStatement[5716-5889]:IfStatement[5782-5955]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5749-5834]:Block[5815-5900]"
  }, {
    "left" : "prefix = key.substring(xmlnsPrefix.length());",
    "right" : "prefix = key.substring(xmlnsPrefix.length());",
    "info" : "ExpressionStatement[5771-5816]:ExpressionStatement[5837-5882]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5840-5889]:Block[5906-5955]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[5862-5871]:ContinueStatement[5928-5937]"
  }, {
    "left" : "namespaces.put(prefix, attr.getValue());",
    "right" : "namespaces.put(prefix, attr.getValue());",
    "info" : "ExpressionStatement[5906-5946]:ExpressionStatement[5972-6012]"
  }, {
    "left" : "int pos = el.tagName().indexOf(\":\");",
    "right" : "int pos = el.tagName().indexOf(\":\");",
    "info" : "VariableDeclarationStatement[6019-6055]:VariableDeclarationStatement[6085-6121]"
  }, {
    "left" : "return pos > 0 ? el.tagName().substring(0, pos) : \"\";",
    "right" : "return pos > 0 ? el.tagName().substring(0, pos) : \"\";",
    "info" : "ReturnStatement[6068-6121]:ReturnStatement[6134-6187]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6266-6272]:Modifier[6332-6338]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[6273-6279]:SimpleType[6339-6345]"
  }, {
    "left" : "asString",
    "right" : "asString",
    "info" : "SimpleName[6280-6288]:SimpleName[6346-6354]"
  }, {
    "left" : "Document doc",
    "right" : "Document doc",
    "info" : "SingleVariableDeclaration[6289-6301]:SingleVariableDeclaration[6355-6367]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6303-6814]:Block[6369-6880]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[6313-6808]:TryStatement[6379-6874]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6317-6717]:Block[6383-6783]"
  }, {
    "left" : "DOMSource domSource = new DOMSource(doc);",
    "right" : "DOMSource domSource = new DOMSource(doc);",
    "info" : "VariableDeclarationStatement[6331-6372]:VariableDeclarationStatement[6397-6438]"
  }, {
    "left" : "StringWriter writer = new StringWriter();",
    "right" : "StringWriter writer = new StringWriter();",
    "info" : "VariableDeclarationStatement[6385-6426]:VariableDeclarationStatement[6451-6492]"
  }, {
    "left" : "StreamResult result = new StreamResult(writer);",
    "right" : "StreamResult result = new StreamResult(writer);",
    "info" : "VariableDeclarationStatement[6439-6486]:VariableDeclarationStatement[6505-6552]"
  }, {
    "left" : "TransformerFactory tf = TransformerFactory.newInstance();",
    "right" : "TransformerFactory tf = TransformerFactory.newInstance();",
    "info" : "VariableDeclarationStatement[6499-6556]:VariableDeclarationStatement[6565-6622]"
  }, {
    "left" : "Transformer transformer = tf.newTransformer();",
    "right" : "Transformer transformer = tf.newTransformer();",
    "info" : "VariableDeclarationStatement[6569-6615]:VariableDeclarationStatement[6635-6681]"
  }, {
    "left" : "transformer.transform(domSource, result);",
    "right" : "transformer.transform(domSource, result);",
    "info" : "ExpressionStatement[6628-6669]:ExpressionStatement[6694-6735]"
  }, {
    "left" : "return writer.toString();",
    "right" : "return writer.toString();",
    "info" : "ReturnStatement[6682-6707]:ReturnStatement[6748-6773]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6749-6808]:Block[6815-6874]"
  }, {
    "left" : "throw new IllegalStateException(e);",
    "right" : "throw new IllegalStateException(e);",
    "info" : "ThrowStatement[6763-6798]:ThrowStatement[6829-6864]"
  } ]
}