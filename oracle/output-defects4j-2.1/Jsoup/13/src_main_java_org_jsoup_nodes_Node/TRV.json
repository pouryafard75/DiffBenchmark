{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Node parentNode;",
      "right" : "Node parentNode;",
      "info" : "FieldDeclaration[545-561]:FieldDeclaration[545-561]"
    }, {
      "left" : "List<Node> childNodes;",
      "right" : "List<Node> childNodes;",
      "info" : "FieldDeclaration[566-588]:FieldDeclaration[566-588]"
    }, {
      "left" : "Attributes attributes;",
      "right" : "Attributes attributes;",
      "info" : "FieldDeclaration[593-615]:FieldDeclaration[593-615]"
    }, {
      "left" : "String baseUri;",
      "right" : "String baseUri;",
      "info" : "FieldDeclaration[620-635]:FieldDeclaration[620-635]"
    }, {
      "left" : "int siblingIndex;",
      "right" : "int siblingIndex;",
      "info" : "FieldDeclaration[640-657]:FieldDeclaration[640-657]"
    }, {
      "left" : "protected Node(String baseUri, Attributes attributes)",
      "right" : "protected Node(String baseUri, Attributes attributes)",
      "info" : "MethodDeclaration[663-1060]:MethodDeclaration[663-1060]"
    }, {
      "left" : "protected Node(String baseUri)",
      "right" : "protected Node(String baseUri)",
      "info" : "MethodDeclaration[1066-1145]:MethodDeclaration[1066-1145]"
    }, {
      "left" : "protected Node()",
      "right" : "protected Node()",
      "info" : "MethodDeclaration[1151-1359]:MethodDeclaration[1151-1359]"
    }, {
      "left" : "public abstract String nodeName();",
      "right" : "public abstract String nodeName();",
      "info" : "MethodDeclaration[1365-1554]:MethodDeclaration[1365-1554]"
    }, {
      "left" : "public String attr(String attributeKey)",
      "right" : "public String attr(String attributeKey)",
      "info" : "MethodDeclaration[1560-2441]:MethodDeclaration[1560-2441]"
    }, {
      "left" : "public Attributes attributes()",
      "right" : "public Attributes attributes()",
      "info" : "MethodDeclaration[2447-2672]:MethodDeclaration[2447-2672]"
    }, {
      "left" : "public Node attr(String attributeKey, String attributeValue)",
      "right" : "public Node attr(String attributeKey, String attributeValue)",
      "info" : "MethodDeclaration[2678-3054]:MethodDeclaration[2678-3054]"
    }, {
      "left" : "public Node removeAttr(String attributeKey)",
      "right" : "public Node removeAttr(String attributeKey)",
      "info" : "MethodDeclaration[3382-3684]:MethodDeclaration[3615-3917]"
    }, {
      "left" : "public String baseUri()",
      "right" : "public String baseUri()",
      "info" : "MethodDeclaration[3690-3819]:MethodDeclaration[3923-4052]"
    }, {
      "left" : "public void setBaseUri(String baseUri)",
      "right" : "public void setBaseUri(String baseUri)",
      "info" : "MethodDeclaration[3825-4029]:MethodDeclaration[4058-4262]"
    }, {
      "left" : "public String absUrl(String attributeKey)",
      "right" : "public String absUrl(String attributeKey)",
      "info" : "MethodDeclaration[4035-6111]:MethodDeclaration[4268-6344]"
    }, {
      "left" : "public Node childNode(int index)",
      "right" : "public Node childNode(int index)",
      "info" : "MethodDeclaration[6117-6323]:MethodDeclaration[6350-6556]"
    }, {
      "left" : "public List<Node> childNodes()",
      "right" : "public List<Node> childNodes()",
      "info" : "MethodDeclaration[6329-6663]:MethodDeclaration[6562-6896]"
    }, {
      "left" : "protected Node[] childNodesAsArray()",
      "right" : "protected Node[] childNodesAsArray()",
      "info" : "MethodDeclaration[6673-6783]:MethodDeclaration[6906-7016]"
    }, {
      "left" : "public Node parent()",
      "right" : "public Node parent()",
      "info" : "MethodDeclaration[6789-6943]:MethodDeclaration[7022-7176]"
    }, {
      "left" : "public Document ownerDocument()",
      "right" : "public Document ownerDocument()",
      "info" : "MethodDeclaration[6953-7350]:MethodDeclaration[7186-7583]"
    }, {
      "left" : "public void remove()",
      "right" : "public void remove()",
      "info" : "MethodDeclaration[7360-7582]:MethodDeclaration[7593-7815]"
    }, {
      "left" : "public Node before(String html)",
      "right" : "public Node before(String html)",
      "info" : "MethodDeclaration[7588-7919]:MethodDeclaration[7821-8152]"
    }, {
      "left" : "public Node before(Node node)",
      "right" : "public Node before(Node node)",
      "info" : "MethodDeclaration[7925-8326]:MethodDeclaration[8158-8559]"
    }, {
      "left" : "public Node after(String html)",
      "right" : "public Node after(String html)",
      "info" : "MethodDeclaration[8332-8662]:MethodDeclaration[8565-8895]"
    }, {
      "left" : "public Node after(Node node)",
      "right" : "public Node after(Node node)",
      "info" : "MethodDeclaration[8668-9068]:MethodDeclaration[8901-9301]"
    }, {
      "left" : "private void addSiblingHtml(int index, String html)",
      "right" : "private void addSiblingHtml(int index, String html)",
      "info" : "MethodDeclaration[9074-9448]:MethodDeclaration[9307-9681]"
    }, {
      "left" : "public Node wrap(String html)",
      "right" : "public Node wrap(String html)",
      "info" : "MethodDeclaration[9454-10631]:MethodDeclaration[9687-10864]"
    }, {
      "left" : "private Element getDeepChild(Element el)",
      "right" : "private Element getDeepChild(Element el)",
      "info" : "MethodDeclaration[10637-10852]:MethodDeclaration[10870-11085]"
    }, {
      "left" : "public void replaceWith(Node in)",
      "right" : "public void replaceWith(Node in)",
      "info" : "MethodDeclaration[10862-11157]:MethodDeclaration[11095-11390]"
    }, {
      "left" : "protected void setParentNode(Node parentNode)",
      "right" : "protected void setParentNode(Node parentNode)",
      "info" : "MethodDeclaration[11163-11338]:MethodDeclaration[11396-11571]"
    }, {
      "left" : "protected void replaceChild(Node out, Node in)",
      "right" : "protected void replaceChild(Node out, Node in)",
      "info" : "MethodDeclaration[11344-11739]:MethodDeclaration[11577-11972]"
    }, {
      "left" : "protected void removeChild(Node out)",
      "right" : "protected void removeChild(Node out)",
      "info" : "MethodDeclaration[11745-11970]:MethodDeclaration[11978-12203]"
    }, {
      "left" : "protected void addChildren(Node... children)",
      "right" : "protected void addChildren(Node... children)",
      "info" : "MethodDeclaration[11976-12296]:MethodDeclaration[12209-12529]"
    }, {
      "left" : "protected void addChildren(int index, Node... children)",
      "right" : "protected void addChildren(int index, Node... children)",
      "info" : "MethodDeclaration[12302-12607]:MethodDeclaration[12535-12840]"
    }, {
      "left" : "private void reparentChild(Node child)",
      "right" : "private void reparentChild(Node child)",
      "info" : "MethodDeclaration[12613-12781]:MethodDeclaration[12846-13014]"
    }, {
      "left" : "private void reindexChildren()",
      "right" : "private void reindexChildren()",
      "info" : "MethodDeclaration[12791-12943]:MethodDeclaration[13024-13176]"
    }, {
      "left" : "public List<Node> siblingNodes()",
      "right" : "public List<Node> siblingNodes()",
      "info" : "MethodDeclaration[12953-13269]:MethodDeclaration[13186-13502]"
    }, {
      "left" : "public Node nextSibling()",
      "right" : "public Node nextSibling()",
      "info" : "MethodDeclaration[13275-13741]:MethodDeclaration[13508-13974]"
    }, {
      "left" : "public Node previousSibling()",
      "right" : "public Node previousSibling()",
      "info" : "MethodDeclaration[13747-14140]:MethodDeclaration[13980-14373]"
    }, {
      "left" : "public int siblingIndex()",
      "right" : "public int siblingIndex()",
      "info" : "MethodDeclaration[14146-14450]:MethodDeclaration[14379-14683]"
    }, {
      "left" : "protected void setSiblingIndex(int siblingIndex)",
      "right" : "protected void setSiblingIndex(int siblingIndex)",
      "info" : "MethodDeclaration[14460-14558]:MethodDeclaration[14693-14791]"
    }, {
      "left" : "public String outerHtml()",
      "right" : "public String outerHtml()",
      "info" : "MethodDeclaration[14564-14786]:MethodDeclaration[14797-15019]"
    }, {
      "left" : "protected void outerHtml(StringBuilder accum)",
      "right" : "protected void outerHtml(StringBuilder accum)",
      "info" : "MethodDeclaration[14792-14937]:MethodDeclaration[15025-15170]"
    }, {
      "left" : "private Document.OutputSettings getOutputSettings()",
      "right" : "private Document.OutputSettings getOutputSettings()",
      "info" : "MethodDeclaration[15029-15201]:MethodDeclaration[15262-15434]"
    }, {
      "left" : "abstract void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out);",
      "right" : "abstract void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out);",
      "info" : "MethodDeclaration[15207-15399]:MethodDeclaration[15440-15632]"
    }, {
      "left" : "abstract void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out);",
      "right" : "abstract void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out);",
      "info" : "MethodDeclaration[15405-15494]:MethodDeclaration[15638-15727]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[15500-15560]:MethodDeclaration[15733-15793]"
    }, {
      "left" : "protected void indent(StringBuilder accum, int depth, Document.OutputSettings out)",
      "right" : "protected void indent(StringBuilder accum, int depth, Document.OutputSettings out)",
      "info" : "MethodDeclaration[15566-15739]:MethodDeclaration[15799-15972]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[15745-15951]:MethodDeclaration[15978-16184]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[15957-16248]:MethodDeclaration[16190-16481]"
    }, {
      "left" : "public Node clone()",
      "right" : "public Node clone()",
      "info" : "MethodDeclaration[16254-16790]:MethodDeclaration[16487-17023]"
    }, {
      "left" : "protected Node doClone(Node parent)",
      "right" : "protected Node doClone(Node parent)",
      "info" : "MethodDeclaration[16796-17501]:MethodDeclaration[17029-17734]"
    }, {
      "left" : "OuterHtmlVisitor",
      "right" : "OuterHtmlVisitor",
      "info" : "TypeDeclaration[17507-18102]:TypeDeclaration[17740-18335]"
    }, {
      "left" : "private StringBuilder accum;",
      "right" : "private StringBuilder accum;",
      "info" : "FieldDeclaration[17578-17606]:FieldDeclaration[17811-17839]"
    }, {
      "left" : "private Document.OutputSettings out;",
      "right" : "private Document.OutputSettings out;",
      "info" : "FieldDeclaration[17615-17651]:FieldDeclaration[17848-17884]"
    }, {
      "left" : "OuterHtmlVisitor(StringBuilder accum, Document.OutputSettings out)",
      "right" : "OuterHtmlVisitor(StringBuilder accum, Document.OutputSettings out)",
      "info" : "MethodDeclaration[17661-17799]:MethodDeclaration[17894-18032]"
    }, {
      "left" : "public void head(Node node, int depth)",
      "right" : "public void head(Node node, int depth)",
      "info" : "MethodDeclaration[17809-17910]:MethodDeclaration[18042-18143]"
    }, {
      "left" : "public void tail(Node node, int depth)",
      "right" : "public void tail(Node node, int depth)",
      "info" : "MethodDeclaration[17920-18096]:MethodDeclaration[18153-18329]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[849-1060]:Block[849-1060]"
    }, {
      "left" : "Validate.notNull(baseUri);",
      "right" : "Validate.notNull(baseUri);",
      "info" : "ExpressionStatement[859-885]:ExpressionStatement[859-885]"
    }, {
      "left" : "Validate.notNull(attributes);",
      "right" : "Validate.notNull(attributes);",
      "info" : "ExpressionStatement[894-923]:ExpressionStatement[894-923]"
    }, {
      "left" : "childNodes = new ArrayList<Node>(4);",
      "right" : "childNodes = new ArrayList<Node>(4);",
      "info" : "ExpressionStatement[941-977]:ExpressionStatement[941-977]"
    }, {
      "left" : "this.baseUri = baseUri.trim();",
      "right" : "this.baseUri = baseUri.trim();",
      "info" : "ExpressionStatement[986-1016]:ExpressionStatement[986-1016]"
    }, {
      "left" : "this.attributes = attributes;",
      "right" : "this.attributes = attributes;",
      "info" : "ExpressionStatement[1025-1054]:ExpressionStatement[1025-1054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1097-1145]:Block[1097-1145]"
    }, {
      "left" : "this(baseUri, new Attributes());",
      "right" : "this(baseUri, new Attributes());",
      "info" : "ConstructorInvocation[1107-1139]:ConstructorInvocation[1107-1139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1279-1359]:Block[1279-1359]"
    }, {
      "left" : "childNodes = Collections.emptyList();",
      "right" : "childNodes = Collections.emptyList();",
      "info" : "ExpressionStatement[1289-1326]:ExpressionStatement[1289-1326]"
    }, {
      "left" : "attributes = null;",
      "right" : "attributes = null;",
      "info" : "ExpressionStatement[1335-1353]:ExpressionStatement[1335-1353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2143-2441]:Block[2143-2441]"
    }, {
      "left" : "Validate.notNull(attributeKey);",
      "right" : "Validate.notNull(attributeKey);",
      "info" : "ExpressionStatement[2153-2184]:ExpressionStatement[2153-2184]"
    }, {
      "left" : "if (attributes.hasKey(attributeKey))",
      "right" : "if (attributes.hasKey(attributeKey))",
      "info" : "IfStatement[2194-2435]:IfStatement[2194-2435]"
    }, {
      "left" : "return attributes.get(attributeKey);",
      "right" : "return attributes.get(attributeKey);",
      "info" : "ReturnStatement[2243-2279]:ReturnStatement[2243-2279]"
    }, {
      "left" : "if (attributeKey.toLowerCase().startsWith(\"abs:\"))",
      "right" : "if (attributeKey.toLowerCase().startsWith(\"abs:\"))",
      "info" : "IfStatement[2293-2435]:IfStatement[2293-2435]"
    }, {
      "left" : "return absUrl(attributeKey.substring(\"abs:\".length()));",
      "right" : "return absUrl(attributeKey.substring(\"abs:\".length()));",
      "info" : "ReturnStatement[2356-2411]:ReturnStatement[2356-2411]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[2425-2435]:ReturnStatement[2425-2435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2638-2672]:Block[2638-2672]"
    }, {
      "left" : "return attributes;",
      "right" : "return attributes;",
      "info" : "ReturnStatement[2648-2666]:ReturnStatement[2648-2666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2972-3054]:Block[2972-3054]"
    }, {
      "left" : "attributes.put(attributeKey, attributeValue);",
      "right" : "attributes.put(attributeKey, attributeValue);",
      "info" : "ExpressionStatement[2982-3027]:ExpressionStatement[2982-3027]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3036-3048]:ReturnStatement[3036-3048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3575-3684]:Block[3808-3917]"
    }, {
      "left" : "Validate.notNull(attributeKey);",
      "right" : "Validate.notNull(attributeKey);",
      "info" : "ExpressionStatement[3585-3616]:ExpressionStatement[3818-3849]"
    }, {
      "left" : "attributes.remove(attributeKey);",
      "right" : "attributes.remove(attributeKey);",
      "info" : "ExpressionStatement[3625-3657]:ExpressionStatement[3858-3890]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3666-3678]:ReturnStatement[3899-3911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3788-3819]:Block[4021-4052]"
    }, {
      "left" : "return baseUri;",
      "right" : "return baseUri;",
      "info" : "ReturnStatement[3798-3813]:ReturnStatement[4031-4046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3955-4029]:Block[4188-4262]"
    }, {
      "left" : "Validate.notNull(baseUri);",
      "right" : "Validate.notNull(baseUri);",
      "info" : "ExpressionStatement[3965-3991]:ExpressionStatement[4198-4224]"
    }, {
      "left" : "this.baseUri = baseUri;",
      "right" : "this.baseUri = baseUri;",
      "info" : "ExpressionStatement[4000-4023]:ExpressionStatement[4233-4256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5126-6111]:Block[5359-6344]"
    }, {
      "left" : "Validate.notEmpty(attributeKey);",
      "right" : "Validate.notEmpty(attributeKey);",
      "info" : "ExpressionStatement[5136-5168]:ExpressionStatement[5369-5401]"
    }, {
      "left" : "String relUrl = attr(attributeKey);",
      "right" : "String relUrl = attr(attributeKey);",
      "info" : "VariableDeclarationStatement[5178-5213]:VariableDeclarationStatement[5411-5446]"
    }, {
      "left" : "if (!hasAttr(attributeKey))",
      "right" : "if (!hasAttr(attributeKey))",
      "info" : "IfStatement[5222-6105]:IfStatement[5455-6338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5250-5317]:Block[5483-5550]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[5264-5274]:ReturnStatement[5497-5507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5323-6105]:Block[5556-6338]"
    }, {
      "left" : "URL base;",
      "right" : "URL base;",
      "info" : "VariableDeclarationStatement[5337-5346]:VariableDeclarationStatement[5570-5579]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5359-6095]:TryStatement[5592-6328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5363-6020]:Block[5596-6253]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5381-5697]:TryStatement[5614-5930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5385-5449]:Block[5618-5682]"
    }, {
      "left" : "base = new URL(baseUri);",
      "right" : "base = new URL(baseUri);",
      "info" : "ExpressionStatement[5407-5431]:ExpressionStatement[5640-5664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5482-5697]:Block[5715-5930]"
    }, {
      "left" : "URL abs = new URL(relUrl);",
      "right" : "URL abs = new URL(relUrl);",
      "info" : "VariableDeclarationStatement[5604-5630]:VariableDeclarationStatement[5837-5863]"
    }, {
      "left" : "return abs.toExternalForm();",
      "right" : "return abs.toExternalForm();",
      "info" : "ReturnStatement[5651-5679]:ReturnStatement[5884-5912]"
    }, {
      "left" : "if (relUrl.startsWith(\"?\"))",
      "right" : "if (relUrl.startsWith(\"?\"))",
      "info" : "IfStatement[5831-5912]:IfStatement[6064-6145]"
    }, {
      "left" : "relUrl = base.getPath() + relUrl;",
      "right" : "relUrl = base.getPath() + relUrl;",
      "info" : "ExpressionStatement[5879-5912]:ExpressionStatement[6112-6145]"
    }, {
      "left" : "URL abs = new URL(base, relUrl);",
      "right" : "URL abs = new URL(base, relUrl);",
      "info" : "VariableDeclarationStatement[5929-5961]:VariableDeclarationStatement[6162-6194]"
    }, {
      "left" : "return abs.toExternalForm();",
      "right" : "return abs.toExternalForm();",
      "info" : "ReturnStatement[5978-6006]:ReturnStatement[6211-6239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6053-6095]:Block[6286-6328]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[6071-6081]:ReturnStatement[6304-6314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6278-6323]:Block[6511-6556]"
    }, {
      "left" : "return childNodes.get(index);",
      "right" : "return childNodes.get(index);",
      "info" : "ReturnStatement[6288-6317]:ReturnStatement[6521-6550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6599-6663]:Block[6832-6896]"
    }, {
      "left" : "return Collections.unmodifiableList(childNodes);",
      "right" : "return Collections.unmodifiableList(childNodes);",
      "info" : "ReturnStatement[6609-6657]:ReturnStatement[6842-6890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6710-6783]:Block[6943-7016]"
    }, {
      "left" : "return childNodes.toArray(new Node[childNodes().size()]);",
      "right" : "return childNodes.toArray(new Node[childNodes().size()]);",
      "info" : "ReturnStatement[6720-6777]:ReturnStatement[6953-7010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6909-6943]:Block[7142-7176]"
    }, {
      "left" : "return parentNode;",
      "right" : "return parentNode;",
      "info" : "ReturnStatement[6919-6937]:ReturnStatement[7152-7170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7147-7350]:Block[7380-7583]"
    }, {
      "left" : "if (this instanceof Document)",
      "right" : "if (this instanceof Document)",
      "info" : "IfStatement[7157-7344]:IfStatement[7390-7577]"
    }, {
      "left" : "return (Document) this;",
      "right" : "return (Document) this;",
      "info" : "ReturnStatement[7199-7222]:ReturnStatement[7432-7455]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[7236-7344]:IfStatement[7469-7577]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7272-7284]:ReturnStatement[7505-7517]"
    }, {
      "left" : "return parentNode.ownerDocument();",
      "right" : "return parentNode.ownerDocument();",
      "info" : "ReturnStatement[7310-7344]:ReturnStatement[7543-7577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7499-7582]:Block[7732-7815]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[7509-7538]:ExpressionStatement[7742-7771]"
    }, {
      "left" : "parentNode.removeChild(this);",
      "right" : "parentNode.removeChild(this);",
      "info" : "ExpressionStatement[7547-7576]:ExpressionStatement[7780-7809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7845-7919]:Block[8078-8152]"
    }, {
      "left" : "addSiblingHtml(siblingIndex(), html);",
      "right" : "addSiblingHtml(siblingIndex(), html);",
      "info" : "ExpressionStatement[7855-7892]:ExpressionStatement[8088-8125]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[7901-7913]:ReturnStatement[8134-8146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8173-8326]:Block[8406-8559]"
    }, {
      "left" : "Validate.notNull(node);",
      "right" : "Validate.notNull(node);",
      "info" : "ExpressionStatement[8183-8206]:ExpressionStatement[8416-8439]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[8215-8244]:ExpressionStatement[8448-8477]"
    }, {
      "left" : "parentNode.addChildren(siblingIndex(), node);",
      "right" : "parentNode.addChildren(siblingIndex(), node);",
      "info" : "ExpressionStatement[8254-8299]:ExpressionStatement[8487-8532]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[8308-8320]:ReturnStatement[8541-8553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8586-8662]:Block[8819-8895]"
    }, {
      "left" : "addSiblingHtml(siblingIndex()+1, html);",
      "right" : "addSiblingHtml(siblingIndex()+1, html);",
      "info" : "ExpressionStatement[8596-8635]:ExpressionStatement[8829-8868]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[8644-8656]:ReturnStatement[8877-8889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8913-9068]:Block[9146-9301]"
    }, {
      "left" : "Validate.notNull(node);",
      "right" : "Validate.notNull(node);",
      "info" : "ExpressionStatement[8923-8946]:ExpressionStatement[9156-9179]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[8955-8984]:ExpressionStatement[9188-9217]"
    }, {
      "left" : "parentNode.addChildren(siblingIndex()+1, node);",
      "right" : "parentNode.addChildren(siblingIndex()+1, node);",
      "info" : "ExpressionStatement[8994-9041]:ExpressionStatement[9227-9274]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9050-9062]:ReturnStatement[9283-9295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9126-9448]:Block[9359-9681]"
    }, {
      "left" : "Validate.notNull(html);",
      "right" : "Validate.notNull(html);",
      "info" : "ExpressionStatement[9136-9159]:ExpressionStatement[9369-9392]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[9168-9197]:ExpressionStatement[9401-9430]"
    }, {
      "left" : "Element context = parent() instanceof Element ? (Element) parent() : null;",
      "right" : "Element context = parent() instanceof Element ? (Element) parent() : null;",
      "info" : "VariableDeclarationStatement[9207-9281]:VariableDeclarationStatement[9440-9514]"
    }, {
      "left" : "List<Node> nodes = Parser.parseFragment(html, context, baseUri());",
      "right" : "List<Node> nodes = Parser.parseFragment(html, context, baseUri());",
      "info" : "VariableDeclarationStatement[9298-9364]:VariableDeclarationStatement[9531-9597]"
    }, {
      "left" : "parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));",
      "right" : "parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));",
      "info" : "ExpressionStatement[9373-9442]:ExpressionStatement[9606-9675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9699-10631]:Block[9932-10864]"
    }, {
      "left" : "Validate.notEmpty(html);",
      "right" : "Validate.notEmpty(html);",
      "info" : "ExpressionStatement[9709-9733]:ExpressionStatement[9942-9966]"
    }, {
      "left" : "Element context = parent() instanceof Element ? (Element) parent() : null;",
      "right" : "Element context = parent() instanceof Element ? (Element) parent() : null;",
      "info" : "VariableDeclarationStatement[9743-9817]:VariableDeclarationStatement[9976-10050]"
    }, {
      "left" : "List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());",
      "right" : "List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());",
      "info" : "VariableDeclarationStatement[9826-9899]:VariableDeclarationStatement[10059-10132]"
    }, {
      "left" : "Node wrapNode = wrapChildren.get(0);",
      "right" : "Node wrapNode = wrapChildren.get(0);",
      "info" : "VariableDeclarationStatement[9908-9944]:VariableDeclarationStatement[10141-10177]"
    }, {
      "left" : "if (wrapNode == null || !(wrapNode instanceof Element))",
      "right" : "if (wrapNode == null || !(wrapNode instanceof Element))",
      "info" : "IfStatement[9953-10063]:IfStatement[10186-10296]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10051-10063]:ReturnStatement[10284-10296]"
    }, {
      "left" : "Element wrap = (Element) wrapNode;",
      "right" : "Element wrap = (Element) wrapNode;",
      "info" : "VariableDeclarationStatement[10073-10107]:VariableDeclarationStatement[10306-10340]"
    }, {
      "left" : "Element deepest = getDeepChild(wrap);",
      "right" : "Element deepest = getDeepChild(wrap);",
      "info" : "VariableDeclarationStatement[10116-10153]:VariableDeclarationStatement[10349-10386]"
    }, {
      "left" : "parentNode.replaceChild(this, wrap);",
      "right" : "parentNode.replaceChild(this, wrap);",
      "info" : "ExpressionStatement[10162-10198]:ExpressionStatement[10395-10431]"
    }, {
      "left" : "deepest.addChildren(this);",
      "right" : "deepest.addChildren(this);",
      "info" : "ExpressionStatement[10207-10233]:ExpressionStatement[10440-10466]"
    }, {
      "left" : "if (wrapChildren.size() > 0)",
      "right" : "if (wrapChildren.size() > 0)",
      "info" : "IfStatement[10330-10604]:IfStatement[10563-10837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10359-10604]:Block[10592-10837]"
    }, {
      "left" : "for (int i = 0; i < wrapChildren.size(); i++)",
      "right" : "for (int i = 0; i < wrapChildren.size(); i++)",
      "info" : "ForStatement[10373-10594]:ForStatement[10606-10827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10419-10594]:Block[10652-10827]"
    }, {
      "left" : "Node remainder = wrapChildren.get(i);",
      "right" : "Node remainder = wrapChildren.get(i);",
      "info" : "VariableDeclarationStatement[10437-10474]:VariableDeclarationStatement[10670-10707]"
    }, {
      "left" : "remainder.parentNode.removeChild(remainder);",
      "right" : "remainder.parentNode.removeChild(remainder);",
      "info" : "ExpressionStatement[10491-10535]:ExpressionStatement[10724-10768]"
    }, {
      "left" : "wrap.appendChild(remainder);",
      "right" : "wrap.appendChild(remainder);",
      "info" : "ExpressionStatement[10552-10580]:ExpressionStatement[10785-10813]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10613-10625]:ReturnStatement[10846-10858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10678-10852]:Block[10911-11085]"
    }, {
      "left" : "List<Element> children = el.children();",
      "right" : "List<Element> children = el.children();",
      "info" : "VariableDeclarationStatement[10688-10727]:VariableDeclarationStatement[10921-10960]"
    }, {
      "left" : "if (children.size() > 0)",
      "right" : "if (children.size() > 0)",
      "info" : "IfStatement[10736-10846]:IfStatement[10969-11079]"
    }, {
      "left" : "return getDeepChild(children.get(0));",
      "right" : "return getDeepChild(children.get(0));",
      "info" : "ReturnStatement[10773-10810]:ReturnStatement[11006-11043]"
    }, {
      "left" : "return el;",
      "right" : "return el;",
      "info" : "ReturnStatement[10836-10846]:ReturnStatement[11069-11079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11039-11157]:Block[11272-11390]"
    }, {
      "left" : "Validate.notNull(in);",
      "right" : "Validate.notNull(in);",
      "info" : "ExpressionStatement[11049-11070]:ExpressionStatement[11282-11303]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[11079-11108]:ExpressionStatement[11312-11341]"
    }, {
      "left" : "parentNode.replaceChild(this, in);",
      "right" : "parentNode.replaceChild(this, in);",
      "info" : "ExpressionStatement[11117-11151]:ExpressionStatement[11350-11384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11209-11338]:Block[11442-11571]"
    }, {
      "left" : "if (this.parentNode != null)",
      "right" : "if (this.parentNode != null)",
      "info" : "IfStatement[11219-11294]:IfStatement[11452-11527]"
    }, {
      "left" : "this.parentNode.removeChild(this);",
      "right" : "this.parentNode.removeChild(this);",
      "info" : "ExpressionStatement[11260-11294]:ExpressionStatement[11493-11527]"
    }, {
      "left" : "this.parentNode = parentNode;",
      "right" : "this.parentNode = parentNode;",
      "info" : "ExpressionStatement[11303-11332]:ExpressionStatement[11536-11565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11391-11739]:Block[11624-11972]"
    }, {
      "left" : "Validate.isTrue(out.parentNode == this);",
      "right" : "Validate.isTrue(out.parentNode == this);",
      "info" : "ExpressionStatement[11401-11441]:ExpressionStatement[11634-11674]"
    }, {
      "left" : "Validate.notNull(in);",
      "right" : "Validate.notNull(in);",
      "info" : "ExpressionStatement[11450-11471]:ExpressionStatement[11683-11704]"
    }, {
      "left" : "if (in.parentNode != null)",
      "right" : "if (in.parentNode != null)",
      "info" : "IfStatement[11480-11549]:IfStatement[11713-11782]"
    }, {
      "left" : "in.parentNode.removeChild(in);",
      "right" : "in.parentNode.removeChild(in);",
      "info" : "ExpressionStatement[11519-11549]:ExpressionStatement[11752-11782]"
    }, {
      "left" : "Integer index = out.siblingIndex();",
      "right" : "Integer index = out.siblingIndex();",
      "info" : "VariableDeclarationStatement[11567-11602]:VariableDeclarationStatement[11800-11835]"
    }, {
      "left" : "childNodes.set(index, in);",
      "right" : "childNodes.set(index, in);",
      "info" : "ExpressionStatement[11611-11637]:ExpressionStatement[11844-11870]"
    }, {
      "left" : "in.parentNode = this;",
      "right" : "in.parentNode = this;",
      "info" : "ExpressionStatement[11646-11667]:ExpressionStatement[11879-11900]"
    }, {
      "left" : "in.setSiblingIndex(index);",
      "right" : "in.setSiblingIndex(index);",
      "info" : "ExpressionStatement[11676-11702]:ExpressionStatement[11909-11935]"
    }, {
      "left" : "out.parentNode = null;",
      "right" : "out.parentNode = null;",
      "info" : "ExpressionStatement[11711-11733]:ExpressionStatement[11944-11966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11782-11970]:Block[12015-12203]"
    }, {
      "left" : "Validate.isTrue(out.parentNode == this);",
      "right" : "Validate.isTrue(out.parentNode == this);",
      "info" : "ExpressionStatement[11792-11832]:ExpressionStatement[12025-12065]"
    }, {
      "left" : "int index = out.siblingIndex();",
      "right" : "int index = out.siblingIndex();",
      "info" : "VariableDeclarationStatement[11841-11872]:VariableDeclarationStatement[12074-12105]"
    }, {
      "left" : "childNodes.remove(index);",
      "right" : "childNodes.remove(index);",
      "info" : "ExpressionStatement[11881-11906]:ExpressionStatement[12114-12139]"
    }, {
      "left" : "reindexChildren();",
      "right" : "reindexChildren();",
      "info" : "ExpressionStatement[11915-11933]:ExpressionStatement[12148-12166]"
    }, {
      "left" : "out.parentNode = null;",
      "right" : "out.parentNode = null;",
      "info" : "ExpressionStatement[11942-11964]:ExpressionStatement[12175-12197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12021-12296]:Block[12254-12529]"
    }, {
      "left" : "for (Node child: children)",
      "right" : "for (Node child: children)",
      "info" : "EnhancedForStatement[12127-12290]:EnhancedForStatement[12360-12523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12154-12290]:Block[12387-12523]"
    }, {
      "left" : "reparentChild(child);",
      "right" : "reparentChild(child);",
      "info" : "ExpressionStatement[12168-12189]:ExpressionStatement[12401-12422]"
    }, {
      "left" : "childNodes.add(child);",
      "right" : "childNodes.add(child);",
      "info" : "ExpressionStatement[12202-12224]:ExpressionStatement[12435-12457]"
    }, {
      "left" : "child.setSiblingIndex(childNodes.size()-1);",
      "right" : "child.setSiblingIndex(childNodes.size()-1);",
      "info" : "ExpressionStatement[12237-12280]:ExpressionStatement[12470-12513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12358-12607]:Block[12591-12840]"
    }, {
      "left" : "Validate.noNullElements(children);",
      "right" : "Validate.noNullElements(children);",
      "info" : "ExpressionStatement[12368-12402]:ExpressionStatement[12601-12635]"
    }, {
      "left" : "for (int i = children.length - 1; i >= 0; i--)",
      "right" : "for (int i = children.length - 1; i >= 0; i--)",
      "info" : "ForStatement[12411-12574]:ForStatement[12644-12807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12458-12574]:Block[12691-12807]"
    }, {
      "left" : "Node in = children[i];",
      "right" : "Node in = children[i];",
      "info" : "VariableDeclarationStatement[12472-12494]:VariableDeclarationStatement[12705-12727]"
    }, {
      "left" : "reparentChild(in);",
      "right" : "reparentChild(in);",
      "info" : "ExpressionStatement[12507-12525]:ExpressionStatement[12740-12758]"
    }, {
      "left" : "childNodes.add(index, in);",
      "right" : "childNodes.add(index, in);",
      "info" : "ExpressionStatement[12538-12564]:ExpressionStatement[12771-12797]"
    }, {
      "left" : "reindexChildren();",
      "right" : "reindexChildren();",
      "info" : "ExpressionStatement[12583-12601]:ExpressionStatement[12816-12834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12652-12781]:Block[12885-13014]"
    }, {
      "left" : "if (child.parentNode != null)",
      "right" : "if (child.parentNode != null)",
      "info" : "IfStatement[12662-12740]:IfStatement[12895-12973]"
    }, {
      "left" : "child.parentNode.removeChild(child);",
      "right" : "child.parentNode.removeChild(child);",
      "info" : "ExpressionStatement[12704-12740]:ExpressionStatement[12937-12973]"
    }, {
      "left" : "child.setParentNode(this);",
      "right" : "child.setParentNode(this);",
      "info" : "ExpressionStatement[12749-12775]:ExpressionStatement[12982-13008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12822-12943]:Block[13055-13176]"
    }, {
      "left" : "for (int i = 0; i < childNodes.size(); i++)",
      "right" : "for (int i = 0; i < childNodes.size(); i++)",
      "info" : "ForStatement[12832-12937]:ForStatement[13065-13170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12876-12937]:Block[13109-13170]"
    }, {
      "left" : "childNodes.get(i).setSiblingIndex(i);",
      "right" : "childNodes.get(i).setSiblingIndex(i);",
      "info" : "ExpressionStatement[12890-12927]:ExpressionStatement[13123-13160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13154-13269]:Block[13387-13502]"
    }, {
      "left" : "return parent().childNodes();",
      "right" : "return parent().childNodes();",
      "info" : "ReturnStatement[13164-13193]:ReturnStatement[13397-13426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13415-13741]:Block[13648-13974]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[13425-13473]:IfStatement[13658-13706]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13461-13473]:ReturnStatement[13694-13706]"
    }, {
      "left" : "List<Node> siblings = parentNode.childNodes;",
      "right" : "List<Node> siblings = parentNode.childNodes;",
      "info" : "VariableDeclarationStatement[13499-13543]:VariableDeclarationStatement[13732-13776]"
    }, {
      "left" : "Integer index = siblingIndex();",
      "right" : "Integer index = siblingIndex();",
      "info" : "VariableDeclarationStatement[13552-13583]:VariableDeclarationStatement[13785-13816]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[13592-13616]:ExpressionStatement[13825-13849]"
    }, {
      "left" : "if (siblings.size() > index+1)",
      "right" : "if (siblings.size() > index+1)",
      "info" : "IfStatement[13625-13735]:IfStatement[13858-13968]"
    }, {
      "left" : "return siblings.get(index+1);",
      "right" : "return siblings.get(index+1);",
      "info" : "ReturnStatement[13668-13697]:ReturnStatement[13901-13930]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13723-13735]:ReturnStatement[13956-13968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13904-14140]:Block[14137-14373]"
    }, {
      "left" : "List<Node> siblings = parentNode.childNodes;",
      "right" : "List<Node> siblings = parentNode.childNodes;",
      "info" : "VariableDeclarationStatement[13914-13958]:VariableDeclarationStatement[14147-14191]"
    }, {
      "left" : "Integer index = siblingIndex();",
      "right" : "Integer index = siblingIndex();",
      "info" : "VariableDeclarationStatement[13967-13998]:VariableDeclarationStatement[14200-14231]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[14007-14031]:ExpressionStatement[14240-14264]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[14040-14134]:IfStatement[14273-14367]"
    }, {
      "left" : "return siblings.get(index-1);",
      "right" : "return siblings.get(index-1);",
      "info" : "ReturnStatement[14067-14096]:ReturnStatement[14300-14329]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14122-14134]:ReturnStatement[14355-14367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14414-14450]:Block[14647-14683]"
    }, {
      "left" : "return siblingIndex;",
      "right" : "return siblingIndex;",
      "info" : "ReturnStatement[14424-14444]:ReturnStatement[14657-14677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14509-14558]:Block[14742-14791]"
    }, {
      "left" : "this.siblingIndex = siblingIndex;",
      "right" : "this.siblingIndex = siblingIndex;",
      "info" : "ExpressionStatement[14519-14552]:ExpressionStatement[14752-14785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14662-14786]:Block[14895-15019]"
    }, {
      "left" : "StringBuilder accum = new StringBuilder(32*1024);",
      "right" : "StringBuilder accum = new StringBuilder(32*1024);",
      "info" : "VariableDeclarationStatement[14672-14721]:VariableDeclarationStatement[14905-14954]"
    }, {
      "left" : "outerHtml(accum);",
      "right" : "outerHtml(accum);",
      "info" : "ExpressionStatement[14730-14747]:ExpressionStatement[14963-14980]"
    }, {
      "left" : "return accum.toString();",
      "right" : "return accum.toString();",
      "info" : "ReturnStatement[14756-14780]:ReturnStatement[14989-15013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14838-14937]:Block[15071-15170]"
    }, {
      "left" : "new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(this);",
      "right" : "new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(this);",
      "info" : "ExpressionStatement[14848-14931]:ExpressionStatement[15081-15164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15081-15201]:Block[15314-15434]"
    }, {
      "left" : "return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(\"\")).outputSettings();",
      "right" : "return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(\"\")).outputSettings();",
      "info" : "ReturnStatement[15091-15195]:ReturnStatement[15324-15428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15525-15560]:Block[15758-15793]"
    }, {
      "left" : "return outerHtml();",
      "right" : "return outerHtml();",
      "info" : "ReturnStatement[15535-15554]:ReturnStatement[15768-15787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15649-15739]:Block[15882-15972]"
    }, {
      "left" : "accum.append(\"\\n\").append(StringUtil.padding(depth * out.indentAmount()));",
      "right" : "accum.append(\"\\n\").append(StringUtil.padding(depth * out.indentAmount()));",
      "info" : "ExpressionStatement[15659-15733]:ExpressionStatement[15892-15966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15791-15951]:Block[16024-16184]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[15801-15828]:IfStatement[16034-16061]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[15816-15828]:ReturnStatement[16049-16061]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[15932-15945]:ReturnStatement[16165-16178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15993-16248]:Block[16226-16481]"
    }, {
      "left" : "int result = parentNode != null ? parentNode.hashCode() : 0;",
      "right" : "int result = parentNode != null ? parentNode.hashCode() : 0;",
      "info" : "VariableDeclarationStatement[16003-16063]:VariableDeclarationStatement[16236-16296]"
    }, {
      "left" : "result = 31 * result + (attributes != null ? attributes.hashCode() : 0);",
      "right" : "result = 31 * result + (attributes != null ? attributes.hashCode() : 0);",
      "info" : "ExpressionStatement[16147-16219]:ExpressionStatement[16380-16452]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[16228-16242]:ReturnStatement[16461-16475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16732-16790]:Block[16965-17023]"
    }, {
      "left" : "return doClone(null);",
      "right" : "return doClone(null);",
      "info" : "ReturnStatement[16742-16763]:ReturnStatement[16975-16996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16832-17501]:Block[17065-17734]"
    }, {
      "left" : "Node clone;",
      "right" : "Node clone;",
      "info" : "VariableDeclarationStatement[16842-16853]:VariableDeclarationStatement[17075-17086]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[16862-17011]:TryStatement[17095-17244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16866-16919]:Block[17099-17152]"
    }, {
      "left" : "clone = (Node) super.clone();",
      "right" : "clone = (Node) super.clone();",
      "info" : "ExpressionStatement[16880-16909]:ExpressionStatement[17113-17142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16957-17011]:Block[17190-17244]"
    }, {
      "left" : "throw new RuntimeException(e);",
      "right" : "throw new RuntimeException(e);",
      "info" : "ThrowStatement[16971-17001]:ThrowStatement[17204-17234]"
    }, {
      "left" : "clone.parentNode = parent;",
      "right" : "clone.parentNode = parent;",
      "info" : "ExpressionStatement[17021-17047]:ExpressionStatement[17254-17280]"
    }, {
      "left" : "clone.siblingIndex = parent == null ? 0 : siblingIndex;",
      "right" : "clone.siblingIndex = parent == null ? 0 : siblingIndex;",
      "info" : "ExpressionStatement[17098-17153]:ExpressionStatement[17331-17386]"
    }, {
      "left" : "clone.attributes = attributes != null ? attributes.clone() : null;",
      "right" : "clone.attributes = attributes != null ? attributes.clone() : null;",
      "info" : "ExpressionStatement[17162-17228]:ExpressionStatement[17395-17461]"
    }, {
      "left" : "clone.baseUri = baseUri;",
      "right" : "clone.baseUri = baseUri;",
      "info" : "ExpressionStatement[17237-17261]:ExpressionStatement[17470-17494]"
    }, {
      "left" : "clone.childNodes = new ArrayList<Node>(childNodes.size());",
      "right" : "clone.childNodes = new ArrayList<Node>(childNodes.size());",
      "info" : "ExpressionStatement[17270-17328]:ExpressionStatement[17503-17561]"
    }, {
      "left" : "for (Node child: childNodes)\n            clone.childNodes.add(child.doClone(clone));",
      "right" : "for (Node child: childNodes)\n            clone.childNodes.add(child.doClone(clone));",
      "info" : "EnhancedForStatement[17337-17421]:EnhancedForStatement[17570-17654]"
    }, {
      "left" : "clone.childNodes.add(child.doClone(clone));",
      "right" : "clone.childNodes.add(child.doClone(clone));",
      "info" : "ExpressionStatement[17378-17421]:ExpressionStatement[17611-17654]"
    }, {
      "left" : "return clone;",
      "right" : "return clone;",
      "info" : "ReturnStatement[17482-17495]:ReturnStatement[17715-17728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17728-17799]:Block[17961-18032]"
    }, {
      "left" : "this.accum = accum;",
      "right" : "this.accum = accum;",
      "info" : "ExpressionStatement[17742-17761]:ExpressionStatement[17975-17994]"
    }, {
      "left" : "this.out = out;",
      "right" : "this.out = out;",
      "info" : "ExpressionStatement[17774-17789]:ExpressionStatement[18007-18022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17848-17910]:Block[18081-18143]"
    }, {
      "left" : "node.outerHtmlHead(accum, depth, out);",
      "right" : "node.outerHtmlHead(accum, depth, out);",
      "info" : "ExpressionStatement[17862-17900]:ExpressionStatement[18095-18133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17959-18096]:Block[18192-18329]"
    }, {
      "left" : "if (!node.nodeName().equals(\"#text\"))",
      "right" : "if (!node.nodeName().equals(\"#text\"))",
      "info" : "IfStatement[17973-18086]:IfStatement[18206-18319]"
    }, {
      "left" : "node.outerHtmlTail(accum, depth, out);",
      "right" : "node.outerHtmlTail(accum, depth, out);",
      "info" : "ExpressionStatement[18048-18086]:ExpressionStatement[18281-18319]"
    } ]
  },
  "interFileMappings" : { }
}