{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final String NO_MOTHER_TONGUE = \"---\";",
      "right" : "private static final String NO_MOTHER_TONGUE = \"---\";",
      "info" : "FieldDeclaration[1704-1757]:FieldDeclaration[1746-1799]"
    }, {
      "left" : "private static final int MAX_PORT = 65536;",
      "right" : "private static final int MAX_PORT = 65536;",
      "info" : "FieldDeclaration[1760-1802]:FieldDeclaration[1802-1844]"
    }, {
      "left" : "private final ResourceBundle messages;",
      "right" : "private final ResourceBundle messages;",
      "info" : "FieldDeclaration[1806-1844]:FieldDeclaration[1848-1886]"
    }, {
      "left" : "private final Configuration original;",
      "right" : "private final Configuration original;",
      "info" : "FieldDeclaration[1847-1884]:FieldDeclaration[1889-1926]"
    }, {
      "left" : "private final Configuration config;",
      "right" : "private final Configuration config;",
      "info" : "FieldDeclaration[1887-1922]:FieldDeclaration[1929-1964]"
    }, {
      "left" : "private final Frame owner;",
      "right" : "private final Frame owner;",
      "info" : "FieldDeclaration[1925-1951]:FieldDeclaration[1967-1993]"
    }, {
      "left" : "private final boolean insideOffice;",
      "right" : "private final boolean insideOffice;",
      "info" : "FieldDeclaration[1954-1989]:FieldDeclaration[1996-2031]"
    }, {
      "left" : "private JButton okButton;",
      "right" : "private JButton okButton;",
      "info" : "FieldDeclaration[1993-2018]:FieldDeclaration[2035-2060]"
    }, {
      "left" : "private JButton cancelButton;",
      "right" : "private JButton cancelButton;",
      "info" : "FieldDeclaration[2021-2050]:FieldDeclaration[2063-2092]"
    }, {
      "left" : "private JDialog dialog;",
      "right" : "private JDialog dialog;",
      "info" : "FieldDeclaration[2053-2076]:FieldDeclaration[2095-2118]"
    }, {
      "left" : "private JComboBox<String> motherTongueBox;",
      "right" : "private JComboBox<String> motherTongueBox;",
      "info" : "FieldDeclaration[2079-2121]:FieldDeclaration[2121-2163]"
    }, {
      "left" : "private JCheckBox serverCheckbox;",
      "right" : "private JCheckBox serverCheckbox;",
      "info" : "FieldDeclaration[2124-2157]:FieldDeclaration[2166-2199]"
    }, {
      "left" : "private JTextField serverPortField;",
      "right" : "private JTextField serverPortField;",
      "info" : "FieldDeclaration[2160-2195]:FieldDeclaration[2202-2237]"
    }, {
      "left" : "private JTree configTree;",
      "right" : "private JTree configTree;",
      "info" : "FieldDeclaration[2198-2223]:FieldDeclaration[2240-2265]"
    }, {
      "left" : "private JCheckBox serverSettingsCheckbox;",
      "right" : "private JCheckBox serverSettingsCheckbox;",
      "info" : "FieldDeclaration[2226-2267]:FieldDeclaration[2268-2309]"
    }, {
      "left" : "public ConfigurationDialog(Frame owner, boolean insideOffice, Configuration config)",
      "right" : "public ConfigurationDialog(Frame owner, boolean insideOffice, Configuration config)",
      "info" : "MethodDeclaration[2271-2542]:MethodDeclaration[2313-2584]"
    }, {
      "left" : "private DefaultMutableTreeNode createTree(List<Rule> rules)",
      "right" : "private DefaultMutableTreeNode createTree(List<Rule> rules)",
      "info" : "MethodDeclaration[2546-3518]:MethodDeclaration[2588-3560]"
    }, {
      "left" : "private boolean getState(Rule rule)",
      "right" : "private boolean getState(Rule rule)",
      "info" : "MethodDeclaration[3522-4127]:MethodDeclaration[3564-4169]"
    }, {
      "left" : "private String[] getPossibleMotherTongues()",
      "right" : "private String[] getPossibleMotherTongues()",
      "info" : "MethodDeclaration[16754-17084]:MethodDeclaration[17282-17612]"
    }, {
      "left" : "public void actionPerformed(ActionEvent e)",
      "right" : "public void actionPerformed(ActionEvent e)",
      "info" : "MethodDeclaration[17088-17379]:MethodDeclaration[17616-17907]"
    }, {
      "left" : "private Language getLanguageForLocalizedName(final String languageName)",
      "right" : "private Language getLanguageForLocalizedName(final String languageName)",
      "info" : "MethodDeclaration[17383-17919]:MethodDeclaration[17911-18447]"
    }, {
      "left" : "CategoryComparator",
      "right" : "CategoryComparator",
      "info" : "TypeDeclaration[17923-18474]:TypeDeclaration[18451-19002]"
    }, {
      "left" : "public int compare(final Rule r1, final Rule r2)",
      "right" : "public int compare(final Rule r1, final Rule r2)",
      "info" : "MethodDeclaration[17990-18469]:MethodDeclaration[18518-18997]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2355-2542]:Block[2397-2584]"
    }, {
      "left" : "this.owner = owner;",
      "right" : "this.owner = owner;",
      "info" : "ExpressionStatement[2361-2380]:ExpressionStatement[2403-2422]"
    }, {
      "left" : "this.insideOffice = insideOffice;",
      "right" : "this.insideOffice = insideOffice;",
      "info" : "ExpressionStatement[2385-2418]:ExpressionStatement[2427-2460]"
    }, {
      "left" : "this.original = config;",
      "right" : "this.original = config;",
      "info" : "ExpressionStatement[2423-2446]:ExpressionStatement[2465-2488]"
    }, {
      "left" : "this.config = original.copy(original);",
      "right" : "this.config = original.copy(original);",
      "info" : "ExpressionStatement[2451-2489]:ExpressionStatement[2493-2531]"
    }, {
      "left" : "messages = JLanguageTool.getMessageBundle();",
      "right" : "messages = JLanguageTool.getMessageBundle();",
      "info" : "ExpressionStatement[2494-2538]:ExpressionStatement[2536-2580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2606-3518]:Block[2648-3560]"
    }, {
      "left" : "DefaultMutableTreeNode root = new DefaultMutableTreeNode(\"Rules\");",
      "right" : "DefaultMutableTreeNode root = new DefaultMutableTreeNode(\"Rules\");",
      "info" : "VariableDeclarationStatement[2612-2678]:VariableDeclarationStatement[2654-2720]"
    }, {
      "left" : "String lastRuleId = null;",
      "right" : "String lastRuleId = null;",
      "info" : "VariableDeclarationStatement[2683-2708]:VariableDeclarationStatement[2725-2750]"
    }, {
      "left" : "Map<String, DefaultMutableTreeNode> parents = new TreeMap<>();",
      "right" : "Map<String, DefaultMutableTreeNode> parents = new TreeMap<>();",
      "info" : "VariableDeclarationStatement[2713-2775]:VariableDeclarationStatement[2755-2817]"
    }, {
      "left" : "for (final Rule rule : rules)",
      "right" : "for (final Rule rule : rules)",
      "info" : "EnhancedForStatement[2780-3497]:EnhancedForStatement[2822-3539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2810-3497]:Block[2852-3539]"
    }, {
      "left" : "if (!parents.containsKey(rule.getCategory().getName()))",
      "right" : "if (!parents.containsKey(rule.getCategory().getName()))",
      "info" : "IfStatement[2818-3275]:IfStatement[2860-3317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2874-3275]:Block[2916-3317]"
    }, {
      "left" : "boolean enabled = true;",
      "right" : "boolean enabled = true;",
      "info" : "VariableDeclarationStatement[2884-2907]:VariableDeclarationStatement[2926-2949]"
    }, {
      "left" : "if (config.getDisabledCategoryNames() != null && config.getDisabledCategoryNames().contains(rule.getCategory().getName()))",
      "right" : "if (config.getDisabledCategoryNames() != null && config.getDisabledCategoryNames().contains(rule.getCategory().getName()))",
      "info" : "IfStatement[2916-3077]:IfStatement[2958-3119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3039-3077]:Block[3081-3119]"
    }, {
      "left" : "enabled = false;",
      "right" : "enabled = false;",
      "info" : "ExpressionStatement[3051-3067]:ExpressionStatement[3093-3109]"
    }, {
      "left" : "DefaultMutableTreeNode categoryNode = new CategoryNode(rule.getCategory(), enabled);",
      "right" : "DefaultMutableTreeNode categoryNode = new CategoryNode(rule.getCategory(), enabled);",
      "info" : "VariableDeclarationStatement[3086-3170]:VariableDeclarationStatement[3128-3212]"
    }, {
      "left" : "root.add(categoryNode);",
      "right" : "root.add(categoryNode);",
      "info" : "ExpressionStatement[3179-3202]:ExpressionStatement[3221-3244]"
    }, {
      "left" : "parents.put(rule.getCategory().getName(), categoryNode);",
      "right" : "parents.put(rule.getCategory().getName(), categoryNode);",
      "info" : "ExpressionStatement[3211-3267]:ExpressionStatement[3253-3309]"
    }, {
      "left" : "if (!rule.getId().equals(lastRuleId))",
      "right" : "if (!rule.getId().equals(lastRuleId))",
      "info" : "IfStatement[3282-3458]:IfStatement[3324-3500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3320-3458]:Block[3362-3500]"
    }, {
      "left" : "RuleNode ruleNode = new RuleNode(rule, getState(rule));",
      "right" : "RuleNode ruleNode = new RuleNode(rule, getState(rule));",
      "info" : "VariableDeclarationStatement[3330-3385]:VariableDeclarationStatement[3372-3427]"
    }, {
      "left" : "parents.get(rule.getCategory().getName()).add(ruleNode);",
      "right" : "parents.get(rule.getCategory().getName()).add(ruleNode);",
      "info" : "ExpressionStatement[3394-3450]:ExpressionStatement[3436-3492]"
    }, {
      "left" : "lastRuleId = rule.getId();",
      "right" : "lastRuleId = rule.getId();",
      "info" : "ExpressionStatement[3465-3491]:ExpressionStatement[3507-3533]"
    }, {
      "left" : "return root;",
      "right" : "return root;",
      "info" : "ReturnStatement[3502-3514]:ReturnStatement[3544-3556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3558-4127]:Block[3600-4169]"
    }, {
      "left" : "boolean ret = true;",
      "right" : "boolean ret = true;",
      "info" : "VariableDeclarationStatement[3564-3583]:VariableDeclarationStatement[3606-3625]"
    }, {
      "left" : "if (config.getDisabledRuleIds().contains(rule.getId()))",
      "right" : "if (config.getDisabledRuleIds().contains(rule.getId()))",
      "info" : "IfStatement[3589-3671]:IfStatement[3631-3713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3645-3671]:Block[3687-3713]"
    }, {
      "left" : "ret = false;",
      "right" : "ret = false;",
      "info" : "ExpressionStatement[3653-3665]:ExpressionStatement[3695-3707]"
    }, {
      "left" : "if (config.getDisabledCategoryNames().contains(rule.getCategory().getName()))",
      "right" : "if (config.getDisabledCategoryNames().contains(rule.getCategory().getName()))",
      "info" : "IfStatement[3676-3780]:IfStatement[3718-3822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3754-3780]:Block[3796-3822]"
    }, {
      "left" : "ret = false;",
      "right" : "ret = false;",
      "info" : "ExpressionStatement[3762-3774]:ExpressionStatement[3804-3816]"
    }, {
      "left" : "if (rule.isDefaultOff() && !config.getEnabledRuleIds().contains(rule.getId()))",
      "right" : "if (rule.isDefaultOff() && !config.getEnabledRuleIds().contains(rule.getId()))",
      "info" : "IfStatement[3785-3890]:IfStatement[3827-3932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3864-3890]:Block[3906-3932]"
    }, {
      "left" : "ret = false;",
      "right" : "ret = false;",
      "info" : "ExpressionStatement[3872-3884]:ExpressionStatement[3914-3926]"
    }, {
      "left" : "if (rule.isDefaultOff() && rule.getCategory().isDefaultOff()\n            && config.getEnabledRuleIds().contains(rule.getId()))",
      "right" : "if (rule.isDefaultOff() && rule.getCategory().isDefaultOff()\n            && config.getEnabledRuleIds().contains(rule.getId()))",
      "info" : "IfStatement[3895-4107]:IfStatement[3937-4149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4022-4107]:Block[4064-4149]"
    }, {
      "left" : "config.getDisabledCategoryNames().remove(rule.getCategory().getName());",
      "right" : "config.getDisabledCategoryNames().remove(rule.getCategory().getName());",
      "info" : "ExpressionStatement[4030-4101]:ExpressionStatement[4072-4143]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[4112-4123]:ReturnStatement[4154-4165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16798-17084]:Block[17326-17612]"
    }, {
      "left" : "final List<String> motherTongues = new ArrayList<>();",
      "right" : "final List<String> motherTongues = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[16804-16857]:VariableDeclarationStatement[17332-17385]"
    }, {
      "left" : "motherTongues.add(NO_MOTHER_TONGUE);",
      "right" : "motherTongues.add(NO_MOTHER_TONGUE);",
      "info" : "ExpressionStatement[16862-16898]:ExpressionStatement[17390-17426]"
    }, {
      "left" : "for (final Language lang : Languages.get())",
      "right" : "for (final Language lang : Languages.get())",
      "info" : "EnhancedForStatement[16903-17012]:EnhancedForStatement[17431-17540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16947-17012]:Block[17475-17540]"
    }, {
      "left" : "motherTongues.add(lang.getTranslatedName(messages));",
      "right" : "motherTongues.add(lang.getTranslatedName(messages));",
      "info" : "ExpressionStatement[16954-17006]:ExpressionStatement[17482-17534]"
    }, {
      "left" : "return motherTongues.toArray(new String[motherTongues.size()]);",
      "right" : "return motherTongues.toArray(new String[motherTongues.size()]);",
      "info" : "ReturnStatement[17017-17080]:ReturnStatement[17545-17608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17143-17379]:Block[17671-17907]"
    }, {
      "left" : "if (e.getSource() == okButton)",
      "right" : "if (e.getSource() == okButton)",
      "info" : "IfStatement[17149-17375]:IfStatement[17677-17903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17180-17295]:Block[17708-17823]"
    }, {
      "left" : "if(original != null)",
      "right" : "if(original != null)",
      "info" : "IfStatement[17188-17257]:IfStatement[17716-17785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17209-17257]:Block[17737-17785]"
    }, {
      "left" : "original.restoreState(config);",
      "right" : "original.restoreState(config);",
      "info" : "ExpressionStatement[17219-17249]:ExpressionStatement[17747-17777]"
    }, {
      "left" : "dialog.setVisible(false);",
      "right" : "dialog.setVisible(false);",
      "info" : "ExpressionStatement[17264-17289]:ExpressionStatement[17792-17817]"
    }, {
      "left" : "if (e.getSource() == cancelButton)",
      "right" : "if (e.getSource() == cancelButton)",
      "info" : "IfStatement[17301-17375]:IfStatement[17829-17903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17336-17375]:Block[17864-17903]"
    }, {
      "left" : "dialog.setVisible(false);",
      "right" : "dialog.setVisible(false);",
      "info" : "ExpressionStatement[17344-17369]:ExpressionStatement[17872-17897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17736-17919]:Block[18264-18447]"
    }, {
      "left" : "for (final Language element : Languages.get())",
      "right" : "for (final Language element : Languages.get())",
      "info" : "EnhancedForStatement[17742-17898]:EnhancedForStatement[18270-18426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17789-17898]:Block[18317-18426]"
    }, {
      "left" : "if (languageName.equals(element.getTranslatedName(messages)))",
      "right" : "if (languageName.equals(element.getTranslatedName(messages)))",
      "info" : "IfStatement[17797-17892]:IfStatement[18325-18420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17859-17892]:Block[18387-18420]"
    }, {
      "left" : "return element;",
      "right" : "return element;",
      "info" : "ReturnStatement[17869-17884]:ReturnStatement[18397-18412]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17903-17915]:ReturnStatement[18431-18443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18053-18469]:Block[18581-18997]"
    }, {
      "left" : "final boolean hasCat = r1.getCategory() != null && r2.getCategory() != null;",
      "right" : "final boolean hasCat = r1.getCategory() != null && r2.getCategory() != null;",
      "info" : "VariableDeclarationStatement[18061-18137]:VariableDeclarationStatement[18589-18665]"
    }, {
      "left" : "if (hasCat)",
      "right" : "if (hasCat)",
      "info" : "IfStatement[18144-18388]:IfStatement[18672-18916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18156-18388]:Block[18684-18916]"
    }, {
      "left" : "final int res = r1.getCategory().getName().compareTo(r2.getCategory().getName());",
      "right" : "final int res = r1.getCategory().getName().compareTo(r2.getCategory().getName());",
      "info" : "VariableDeclarationStatement[18166-18247]:VariableDeclarationStatement[18694-18775]"
    }, {
      "left" : "if (res == 0)",
      "right" : "if (res == 0)",
      "info" : "IfStatement[18256-18360]:IfStatement[18784-18888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18270-18360]:Block[18798-18888]"
    }, {
      "left" : "return r1.getDescription().compareToIgnoreCase(r2.getDescription());",
      "right" : "return r1.getDescription().compareToIgnoreCase(r2.getDescription());",
      "info" : "ReturnStatement[18282-18350]:ReturnStatement[18810-18878]"
    }, {
      "left" : "return res;",
      "right" : "return res;",
      "info" : "ReturnStatement[18369-18380]:ReturnStatement[18897-18908]"
    }, {
      "left" : "return r1.getDescription().compareToIgnoreCase(r2.getDescription());",
      "right" : "return r1.getDescription().compareToIgnoreCase(r2.getDescription());",
      "info" : "ReturnStatement[18395-18463]:ReturnStatement[18923-18991]"
    } ]
  },
  "interFileMappings" : { }
}