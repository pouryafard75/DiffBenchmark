{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CoreOperationRelationalExpression",
      "right" : "CoreOperationRelationalExpression",
      "info" : "TypeDeclaration[1143-3632]:TypeDeclaration[1143-3768]"
    }, {
      "left" : "protected CoreOperationRelationalExpression(Expression[] args)",
      "right" : "protected CoreOperationRelationalExpression(Expression[] args)",
      "info" : "MethodDeclaration[1403-1494]:MethodDeclaration[1403-1494]"
    }, {
      "left" : "public final Object computeValue(EvalContext context)",
      "right" : "public final Object computeValue(EvalContext context)",
      "info" : "MethodDeclaration[1500-1695]:MethodDeclaration[1500-1695]"
    }, {
      "left" : "protected final int getPrecedence()",
      "right" : "protected final int getPrecedence()",
      "info" : "MethodDeclaration[1701-1762]:MethodDeclaration[1701-1762]"
    }, {
      "left" : "protected final boolean isSymmetric()",
      "right" : "protected final boolean isSymmetric()",
      "info" : "MethodDeclaration[1768-1835]:MethodDeclaration[1768-1835]"
    }, {
      "left" : "protected abstract boolean evaluateCompare(int compare);",
      "right" : "protected abstract boolean evaluateCompare(int compare);",
      "info" : "MethodDeclaration[1841-1897]:MethodDeclaration[1841-1897]"
    }, {
      "left" : "private boolean compute(Object left, Object right)",
      "right" : "private boolean compute(Object left, Object right)",
      "info" : "MethodDeclaration[1903-2755]:MethodDeclaration[1903-2891]"
    }, {
      "left" : "private Object reduce(Object o)",
      "right" : "private Object reduce(Object o)",
      "info" : "MethodDeclaration[2761-3020]:MethodDeclaration[2897-3156]"
    }, {
      "left" : "private boolean containsMatch(Iterator it, Object value)",
      "right" : "private boolean containsMatch(Iterator it, Object value)",
      "info" : "MethodDeclaration[3026-3279]:MethodDeclaration[3162-3415]"
    }, {
      "left" : "private boolean findMatch(Iterator lit, Iterator rit)",
      "right" : "private boolean findMatch(Iterator lit, Iterator rit)",
      "info" : "MethodDeclaration[3285-3629]:MethodDeclaration[3421-3765]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1466-1494]:Block[1466-1494]"
    }, {
      "left" : "super(args);",
      "right" : "super(args);",
      "info" : "SuperConstructorInvocation[1476-1488]:SuperConstructorInvocation[1476-1488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1554-1695]:Block[1554-1695]"
    }, {
      "left" : "return compute(args[0].computeValue(context), args[1]\n                .computeValue(context)) ? Boolean.TRUE : Boolean.FALSE;",
      "right" : "return compute(args[0].computeValue(context), args[1]\n                .computeValue(context)) ? Boolean.TRUE : Boolean.FALSE;",
      "info" : "ReturnStatement[1564-1689]:ReturnStatement[1564-1689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1737-1762]:Block[1737-1762]"
    }, {
      "left" : "return 3;",
      "right" : "return 3;",
      "info" : "ReturnStatement[1747-1756]:ReturnStatement[1747-1756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1806-1835]:Block[1806-1835]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1816-1829]:ReturnStatement[1816-1829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1954-2755]:Block[1954-2891]"
    }, {
      "left" : "left = reduce(left);",
      "right" : "left = reduce(left);",
      "info" : "ExpressionStatement[1964-1984]:ExpressionStatement[1964-1984]"
    }, {
      "left" : "right = reduce(right);",
      "right" : "right = reduce(right);",
      "info" : "ExpressionStatement[1993-2015]:ExpressionStatement[1993-2015]"
    }, {
      "left" : "if (left instanceof InitialContext)",
      "right" : "if (left instanceof InitialContext)",
      "info" : "IfStatement[2025-2117]:IfStatement[2025-2117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2061-2117]:Block[2061-2117]"
    }, {
      "left" : "((InitialContext) left).reset();",
      "right" : "((InitialContext) left).reset();",
      "info" : "ExpressionStatement[2075-2107]:ExpressionStatement[2075-2107]"
    }, {
      "left" : "if (right instanceof InitialContext)",
      "right" : "if (right instanceof InitialContext)",
      "info" : "IfStatement[2126-2220]:IfStatement[2126-2220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2163-2220]:Block[2163-2220]"
    }, {
      "left" : "((InitialContext) right).reset();",
      "right" : "((InitialContext) right).reset();",
      "info" : "ExpressionStatement[2177-2210]:ExpressionStatement[2177-2210]"
    }, {
      "left" : "if (left instanceof Iterator && right instanceof Iterator)",
      "right" : "if (left instanceof Iterator && right instanceof Iterator)",
      "info" : "IfStatement[2229-2364]:IfStatement[2229-2364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2288-2364]:Block[2288-2364]"
    }, {
      "left" : "return findMatch((Iterator) left, (Iterator) right);",
      "right" : "return findMatch((Iterator) left, (Iterator) right);",
      "info" : "ReturnStatement[2302-2354]:ReturnStatement[2302-2354]"
    }, {
      "left" : "if (left instanceof Iterator)",
      "right" : "if (left instanceof Iterator)",
      "info" : "IfStatement[2373-2472]:IfStatement[2373-2472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2403-2472]:Block[2403-2472]"
    }, {
      "left" : "return containsMatch((Iterator) left, right);",
      "right" : "return containsMatch((Iterator) left, right);",
      "info" : "ReturnStatement[2417-2462]:ReturnStatement[2417-2462]"
    }, {
      "left" : "if (right instanceof Iterator)",
      "right" : "if (right instanceof Iterator)",
      "info" : "IfStatement[2481-2581]:IfStatement[2481-2581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2512-2581]:Block[2512-2581]"
    }, {
      "left" : "return containsMatch((Iterator) right, left);",
      "right" : "return containsMatch((Iterator) right, left);",
      "info" : "ReturnStatement[2526-2571]:ReturnStatement[2526-2571]"
    }, {
      "left" : "double ld = InfoSetUtil.doubleValue(left);",
      "right" : "double ld = InfoSetUtil.doubleValue(left);",
      "info" : "VariableDeclarationStatement[2590-2632]:VariableDeclarationStatement[2590-2632]"
    }, {
      "left" : "double rd = InfoSetUtil.doubleValue(right);",
      "right" : "double rd = InfoSetUtil.doubleValue(right);",
      "info" : "VariableDeclarationStatement[2641-2684]:VariableDeclarationStatement[2709-2752]"
    }, {
      "left" : "return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);",
      "right" : "return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);",
      "info" : "ReturnStatement[2693-2749]:ReturnStatement[2829-2885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2793-3020]:Block[2929-3156]"
    }, {
      "left" : "if (o instanceof SelfContext)",
      "right" : "if (o instanceof SelfContext)",
      "info" : "IfStatement[2803-2902]:IfStatement[2939-3038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2833-2902]:Block[2969-3038]"
    }, {
      "left" : "o = ((EvalContext) o).getSingleNodePointer();",
      "right" : "o = ((EvalContext) o).getSingleNodePointer();",
      "info" : "ExpressionStatement[2847-2892]:ExpressionStatement[2983-3028]"
    }, {
      "left" : "if (o instanceof Collection)",
      "right" : "if (o instanceof Collection)",
      "info" : "IfStatement[2911-2996]:IfStatement[3047-3132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2940-2996]:Block[3076-3132]"
    }, {
      "left" : "o = ((Collection) o).iterator();",
      "right" : "o = ((Collection) o).iterator();",
      "info" : "ExpressionStatement[2954-2986]:ExpressionStatement[3090-3122]"
    }, {
      "left" : "return o;",
      "right" : "return o;",
      "info" : "ReturnStatement[3005-3014]:ReturnStatement[3141-3150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3083-3279]:Block[3219-3415]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[3093-3251]:WhileStatement[3229-3387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3114-3251]:Block[3250-3387]"
    }, {
      "left" : "Object element = it.next();",
      "right" : "Object element = it.next();",
      "info" : "VariableDeclarationStatement[3128-3155]:VariableDeclarationStatement[3264-3291]"
    }, {
      "left" : "if (compute(element, value))",
      "right" : "if (compute(element, value))",
      "info" : "IfStatement[3168-3241]:IfStatement[3304-3377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3197-3241]:Block[3333-3377]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3215-3227]:ReturnStatement[3351-3363]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3260-3273]:ReturnStatement[3396-3409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3339-3629]:Block[3475-3765]"
    }, {
      "left" : "HashSet left = new HashSet();",
      "right" : "HashSet left = new HashSet();",
      "info" : "VariableDeclarationStatement[3349-3378]:VariableDeclarationStatement[3485-3514]"
    }, {
      "left" : "while (lit.hasNext())",
      "right" : "while (lit.hasNext())",
      "info" : "WhileStatement[3387-3454]:WhileStatement[3523-3590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3409-3454]:Block[3545-3590]"
    }, {
      "left" : "left.add(lit.next());",
      "right" : "left.add(lit.next());",
      "info" : "ExpressionStatement[3423-3444]:ExpressionStatement[3559-3580]"
    }, {
      "left" : "while (rit.hasNext())",
      "right" : "while (rit.hasNext())",
      "info" : "WhileStatement[3463-3601]:WhileStatement[3599-3737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3485-3601]:Block[3621-3737]"
    }, {
      "left" : "if (containsMatch(left.iterator(), rit.next()))",
      "right" : "if (containsMatch(left.iterator(), rit.next()))",
      "info" : "IfStatement[3499-3591]:IfStatement[3635-3727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3547-3591]:Block[3683-3727]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3565-3577]:ReturnStatement[3701-3713]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3610-3623]:ReturnStatement[3746-3759]"
    } ]
  },
  "interFileMappings" : { }
}