{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ReturnsDeepStubs",
      "right" : "ReturnsDeepStubs",
      "info" : "TypeDeclaration[715-3774]:TypeDeclaration[839-4957]"
    }, {
      "left" : "private static final long serialVersionUID = -7105341425736035847L;",
      "right" : "private static final long serialVersionUID = -7105341425736035847L;",
      "info" : "FieldDeclaration[1497-1564]:FieldDeclaration[1621-1688]"
    }, {
      "left" : "private ReturnsEmptyValues delegate = new ReturnsEmptyValues();",
      "right" : "private ReturnsEmptyValues delegate = new ReturnsEmptyValues();",
      "info" : "FieldDeclaration[1572-1635]:FieldDeclaration[1696-1759]"
    }, {
      "left" : "public Object answer(InvocationOnMock invocation) throws Throwable",
      "right" : "public Object answer(InvocationOnMock invocation) throws Throwable",
      "info" : "MethodDeclaration[1643-2131]:MethodDeclaration[1767-2282]"
    }, {
      "left" : "private Object getMock(InvocationOnMock invocation) throws Throwable",
      "right" : "private Object getMock(InvocationOnMock invocation, GenericMetadataSupport returnTypeGenericMetadata) throws Throwable",
      "info" : "MethodDeclaration[2139-2825]:MethodDeclaration[2290-3064]"
    }, {
      "left" : "public Object answer(InvocationOnMock invocation) throws Throwable",
      "right" : "public Object answer(InvocationOnMock invocation) throws Throwable",
      "info" : "MethodDeclaration[3326-3439]:MethodDeclaration[4509-4622]"
    }, {
      "left" : "protected GenericMetadataSupport actualParameterizedType(Object mock)",
      "right" : "protected GenericMetadataSupport actualParameterizedType(Object mock)",
      "info" : "MethodDeclaration[3498-3771]:MethodDeclaration[4681-4954]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1414-1420]:Modifier[1538-1544]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1421-1426]:TYPE_DECLARATION_KIND[1545-1550]"
    }, {
      "left" : "ReturnsDeepStubs",
      "right" : "ReturnsDeepStubs",
      "info" : "SimpleName[1427-1443]:SimpleName[1551-1567]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1643-1649]:Modifier[1767-1773]"
    }, {
      "left" : "answer",
      "right" : "answer",
      "info" : "SimpleName[1657-1663]:SimpleName[1781-1787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1710-2131]:Block[1834-2282]"
    }, {
      "left" : "GenericMetadataSupport returnTypeGenericMetadata =\r\n                actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());",
      "right" : "GenericMetadataSupport returnTypeGenericMetadata =\r\n                actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());",
      "info" : "VariableDeclarationStatement[1721-1884]:VariableDeclarationStatement[1845-2008]"
    }, {
      "left" : "Class<?> rawType = returnTypeGenericMetadata.rawType();",
      "right" : "Class<?> rawType = returnTypeGenericMetadata.rawType();",
      "info" : "VariableDeclarationStatement[1896-1951]:VariableDeclarationStatement[2020-2075]"
    }, {
      "left" : "if (!new MockCreationValidator().isTypeMockable(rawType))",
      "right" : "if (!new MockCreationValidator().isTypeMockable(rawType))",
      "info" : "IfStatement[1961-2085]:IfStatement[2085-2209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2019-2085]:Block[2143-2209]"
    }, {
      "left" : "return delegate.returnValueFor(rawType);",
      "right" : "return delegate.returnValueFor(rawType);",
      "info" : "ReturnStatement[2034-2074]:ReturnStatement[2158-2198]"
    }, {
      "left" : "return getMock(invocation);",
      "right" : "return getMock(invocation, returnTypeGenericMetadata);",
      "info" : "ReturnStatement[2097-2124]:ReturnStatement[2221-2275]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2139-2146]:Modifier[2290-2297]"
    }, {
      "left" : "getMock",
      "right" : "getMock",
      "info" : "SimpleName[2154-2161]:SimpleName[2305-2312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2208-2825]:Block[2409-3064]"
    }, {
      "left" : "InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());",
      "right" : "InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());",
      "info" : "VariableDeclarationStatement[2216-2306]:VariableDeclarationStatement[2417-2507]"
    }, {
      "left" : "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
      "right" : "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
      "info" : "VariableDeclarationStatement[2313-2408]:VariableDeclarationStatement[2514-2609]"
    }, {
      "left" : "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations())",
      "right" : "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations())",
      "info" : "EnhancedForStatement[2468-2735]:EnhancedForStatement[2669-2936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2560-2735]:Block[2761-2936]"
    }, {
      "left" : "if(container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation()))",
      "right" : "if(container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation()))",
      "info" : "IfStatement[2569-2730]:IfStatement[2770-2931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2660-2730]:Block[2861-2931]"
    }, {
      "left" : "return stubbedInvocationMatcher.answer(invocation);",
      "right" : "return stubbedInvocationMatcher.answer(invocation);",
      "info" : "ReturnStatement[2670-2721]:ReturnStatement[2871-2922]"
    }, {
      "left" : "return recordDeepStubMock(invocation, container);",
      "right" : "return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);",
      "info" : "ReturnStatement[2769-2818]:ReturnStatement[2970-3057]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3326-3332]:Modifier[4509-4515]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[3333-3339]:SimpleType[4516-4522]"
    }, {
      "left" : "answer",
      "right" : "answer",
      "info" : "SimpleName[3340-3346]:SimpleName[4523-4529]"
    }, {
      "left" : "InvocationOnMock invocation",
      "right" : "InvocationOnMock invocation",
      "info" : "SingleVariableDeclaration[3347-3374]:SingleVariableDeclaration[4530-4557]"
    }, {
      "left" : "Throwable",
      "right" : "Throwable",
      "info" : "SimpleType[3383-3392]:SimpleType[4566-4575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3393-3439]:Block[4576-4622]"
    }, {
      "left" : "return mock;",
      "right" : "return mock;",
      "info" : "ReturnStatement[3412-3424]:ReturnStatement[4595-4607]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3498-3507]:Modifier[4681-4690]"
    }, {
      "left" : "GenericMetadataSupport",
      "right" : "GenericMetadataSupport",
      "info" : "SimpleType[3508-3530]:SimpleType[4691-4713]"
    }, {
      "left" : "actualParameterizedType",
      "right" : "actualParameterizedType",
      "info" : "SimpleName[3531-3554]:SimpleName[4714-4737]"
    }, {
      "left" : "Object mock",
      "right" : "Object mock",
      "info" : "SingleVariableDeclaration[3555-3566]:SingleVariableDeclaration[4738-4749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3568-3771]:Block[4751-4954]"
    }, {
      "left" : "CreationSettings mockSettings = (CreationSettings) new MockUtil().getMockHandler(mock).getMockSettings();",
      "right" : "CreationSettings mockSettings = (CreationSettings) new MockUtil().getMockHandler(mock).getMockSettings();",
      "info" : "VariableDeclarationStatement[3579-3684]:VariableDeclarationStatement[4762-4867]"
    }, {
      "left" : "return GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock());",
      "right" : "return GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock());",
      "info" : "ReturnStatement[3694-3764]:ReturnStatement[4877-4947]"
    } ]
  },
  "interFileMappings" : { }
}