{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "TypeDeclaration[456-56603]:TypeDeclaration[456-57074]"
    }, {
      "left" : "protected final static int DEFAULT_GENERATOR_FEATURES = JsonGenerator.Feature.collectDefaults();",
      "right" : "protected final static int DEFAULT_GENERATOR_FEATURES = JsonGenerator.Feature.collectDefaults();",
      "info" : "FieldDeclaration[1199-1295]:FieldDeclaration[1199-1295]"
    }, {
      "left" : "protected ObjectCodec _objectCodec;",
      "right" : "protected ObjectCodec _objectCodec;",
      "info" : "FieldDeclaration[1466-1669]:FieldDeclaration[1466-1669]"
    }, {
      "left" : "protected int _generatorFeatures;",
      "right" : "protected int _generatorFeatures;",
      "info" : "FieldDeclaration[1675-1928]:FieldDeclaration[1675-1928]"
    }, {
      "left" : "protected boolean _closed;",
      "right" : "protected boolean _closed;",
      "info" : "FieldDeclaration[1934-1960]:FieldDeclaration[1934-1960]"
    }, {
      "left" : "protected boolean _hasNativeTypeIds;",
      "right" : "protected boolean _hasNativeTypeIds;",
      "info" : "FieldDeclaration[1966-2036]:FieldDeclaration[1966-2036]"
    }, {
      "left" : "protected boolean _hasNativeObjectIds;",
      "right" : "protected boolean _hasNativeObjectIds;",
      "info" : "FieldDeclaration[2042-2114]:FieldDeclaration[2042-2114]"
    }, {
      "left" : "protected boolean _mayHaveNativeIds;",
      "right" : "protected boolean _mayHaveNativeIds;",
      "info" : "FieldDeclaration[2120-2190]:FieldDeclaration[2120-2190]"
    }, {
      "left" : "protected Segment _first;",
      "right" : "protected Segment _first;",
      "info" : "FieldDeclaration[2373-2465]:FieldDeclaration[2373-2465]"
    }, {
      "left" : "protected Segment _last;",
      "right" : "protected Segment _last;",
      "info" : "FieldDeclaration[2471-2597]:FieldDeclaration[2471-2597]"
    }, {
      "left" : "protected int _appendAt;",
      "right" : "protected int _appendAt;",
      "info" : "FieldDeclaration[2607-2683]:FieldDeclaration[2607-2683]"
    }, {
      "left" : "protected Object _typeId;",
      "right" : "protected Object _typeId;",
      "info" : "FieldDeclaration[2689-2848]:FieldDeclaration[2689-2848]"
    }, {
      "left" : "protected Object _objectId;",
      "right" : "protected Object _objectId;",
      "info" : "FieldDeclaration[2854-3017]:FieldDeclaration[2854-3017]"
    }, {
      "left" : "protected boolean _hasNativeId = false;",
      "right" : "protected boolean _hasNativeId = false;",
      "info" : "FieldDeclaration[3023-3143]:FieldDeclaration[3023-3143]"
    }, {
      "left" : "protected JsonWriteContext _writeContext;",
      "right" : "protected JsonWriteContext _writeContext;",
      "info" : "FieldDeclaration[3313-3354]:FieldDeclaration[3313-3354]"
    }, {
      "left" : "public TokenBuffer(ObjectCodec codec)",
      "right" : "public TokenBuffer(ObjectCodec codec)",
      "info" : "MethodDeclaration[3522-3923]:MethodDeclaration[3522-3923]"
    }, {
      "left" : "public TokenBuffer(ObjectCodec codec, boolean hasNativeIds)",
      "right" : "public TokenBuffer(ObjectCodec codec, boolean hasNativeIds)",
      "info" : "MethodDeclaration[3929-4740]:MethodDeclaration[3929-4740]"
    }, {
      "left" : "public TokenBuffer(JsonParser jp)",
      "right" : "public TokenBuffer(JsonParser jp)",
      "info" : "MethodDeclaration[4746-5263]:MethodDeclaration[4746-5263]"
    }, {
      "left" : "public Version version()",
      "right" : "public Version version()",
      "info" : "MethodDeclaration[5273-5393]:MethodDeclaration[5273-5393]"
    }, {
      "left" : "public JsonParser asParser()",
      "right" : "public JsonParser asParser()",
      "info" : "MethodDeclaration[5399-5915]:MethodDeclaration[5399-5915]"
    }, {
      "left" : "public JsonParser asParser(ObjectCodec codec)",
      "right" : "public JsonParser asParser(ObjectCodec codec)",
      "info" : "MethodDeclaration[5921-6599]:MethodDeclaration[5921-6599]"
    }, {
      "left" : "public JsonParser asParser(JsonParser src)",
      "right" : "public JsonParser asParser(JsonParser src)",
      "info" : "MethodDeclaration[6605-6942]:MethodDeclaration[6605-6942]"
    }, {
      "left" : "public JsonToken firstToken()",
      "right" : "public JsonToken firstToken()",
      "info" : "MethodDeclaration[7124-7257]:MethodDeclaration[7124-7257]"
    }, {
      "left" : "public TokenBuffer append(TokenBuffer other)\n        throws IOException, JsonGenerationException",
      "right" : "public TokenBuffer append(TokenBuffer other)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[7478-8331]:MethodDeclaration[7478-8331]"
    }, {
      "left" : "public void serialize(JsonGenerator jgen)\n        throws IOException, JsonGenerationException",
      "right" : "public void serialize(JsonGenerator jgen)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[8341-13099]:MethodDeclaration[8341-13099]"
    }, {
      "left" : "public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException",
      "right" : "public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException",
      "info" : "MethodDeclaration[13105-13597]:MethodDeclaration[13105-14068]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[13607-15186]:MethodDeclaration[14078-15657]"
    }, {
      "left" : "private final void _appendNativeIds(StringBuilder sb)",
      "right" : "private final void _appendNativeIds(StringBuilder sb)",
      "info" : "MethodDeclaration[15192-15613]:MethodDeclaration[15663-16084]"
    }, {
      "left" : "public JsonGenerator enable(Feature f)",
      "right" : "public JsonGenerator enable(Feature f)",
      "info" : "MethodDeclaration[15818-15942]:MethodDeclaration[16289-16413]"
    }, {
      "left" : "public JsonGenerator disable(Feature f)",
      "right" : "public JsonGenerator disable(Feature f)",
      "info" : "MethodDeclaration[15948-16074]:MethodDeclaration[16419-16545]"
    }, {
      "left" : "public boolean isEnabled(Feature f)",
      "right" : "public boolean isEnabled(Feature f)",
      "info" : "MethodDeclaration[16161-16274]:MethodDeclaration[16632-16745]"
    }, {
      "left" : "public int getFeatureMask()",
      "right" : "public int getFeatureMask()",
      "info" : "MethodDeclaration[16280-16364]:MethodDeclaration[16751-16835]"
    }, {
      "left" : "public JsonGenerator setFeatureMask(int mask)",
      "right" : "public JsonGenerator setFeatureMask(int mask)",
      "info" : "MethodDeclaration[16370-16493]:MethodDeclaration[16841-16964]"
    }, {
      "left" : "public JsonGenerator useDefaultPrettyPrinter()",
      "right" : "public JsonGenerator useDefaultPrettyPrinter()",
      "info" : "MethodDeclaration[16503-16626]:MethodDeclaration[16974-17097]"
    }, {
      "left" : "public JsonGenerator setCodec(ObjectCodec oc)",
      "right" : "public JsonGenerator setCodec(ObjectCodec oc)",
      "info" : "MethodDeclaration[16632-16747]:MethodDeclaration[17103-17218]"
    }, {
      "left" : "public ObjectCodec getCodec()",
      "right" : "public ObjectCodec getCodec()",
      "info" : "MethodDeclaration[16753-16821]:MethodDeclaration[17224-17292]"
    }, {
      "left" : "public final JsonWriteContext getOutputContext()",
      "right" : "public final JsonWriteContext getOutputContext()",
      "info" : "MethodDeclaration[16827-16915]:MethodDeclaration[17298-17386]"
    }, {
      "left" : "public boolean canWriteBinaryNatively()",
      "right" : "public boolean canWriteBinaryNatively()",
      "info" : "MethodDeclaration[17131-17293]:MethodDeclaration[17602-17764]"
    }, {
      "left" : "public void flush() throws IOException",
      "right" : "public void flush() throws IOException",
      "info" : "MethodDeclaration[17510-17576]:MethodDeclaration[17981-18047]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[17582-17666]:MethodDeclaration[18053-18137]"
    }, {
      "left" : "public boolean isClosed()",
      "right" : "public boolean isClosed()",
      "info" : "MethodDeclaration[17672-17731]:MethodDeclaration[18143-18202]"
    }, {
      "left" : "public final void writeStartArray()\n        throws IOException, JsonGenerationException",
      "right" : "public final void writeStartArray()\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[17944-18162]:MethodDeclaration[18415-18633]"
    }, {
      "left" : "public final void writeEndArray()\n        throws IOException, JsonGenerationException",
      "right" : "public final void writeEndArray()\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[18168-18517]:MethodDeclaration[18639-18988]"
    }, {
      "left" : "public final void writeStartObject()\n        throws IOException, JsonGenerationException",
      "right" : "public final void writeStartObject()\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[18523-18744]:MethodDeclaration[18994-19215]"
    }, {
      "left" : "public final void writeEndObject()\n        throws IOException, JsonGenerationException",
      "right" : "public final void writeEndObject()\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[18750-19101]:MethodDeclaration[19221-19572]"
    }, {
      "left" : "public final void writeFieldName(String name)\n        throws IOException, JsonGenerationException",
      "right" : "public final void writeFieldName(String name)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[19107-19319]:MethodDeclaration[19578-19790]"
    }, {
      "left" : "public void writeFieldName(SerializableString name)\n        throws IOException, JsonGenerationException",
      "right" : "public void writeFieldName(SerializableString name)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[19325-19554]:MethodDeclaration[19796-20025]"
    }, {
      "left" : "public void writeString(String text) throws IOException,JsonGenerationException",
      "right" : "public void writeString(String text) throws IOException,JsonGenerationException",
      "info" : "MethodDeclaration[19768-20000]:MethodDeclaration[20239-20471]"
    }, {
      "left" : "public void writeString(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "right" : "public void writeString(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[20006-20181]:MethodDeclaration[20477-20652]"
    }, {
      "left" : "public void writeString(SerializableString text) throws IOException, JsonGenerationException",
      "right" : "public void writeString(SerializableString text) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[20187-20432]:MethodDeclaration[20658-20903]"
    }, {
      "left" : "public void writeRawUTF8String(byte[] text, int offset, int length)\n        throws IOException, JsonGenerationException",
      "right" : "public void writeRawUTF8String(byte[] text, int offset, int length)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[20442-20693]:MethodDeclaration[20913-21164]"
    }, {
      "left" : "public void writeUTF8String(byte[] text, int offset, int length)\n        throws IOException, JsonGenerationException",
      "right" : "public void writeUTF8String(byte[] text, int offset, int length)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[20699-20947]:MethodDeclaration[21170-21418]"
    }, {
      "left" : "public void writeRaw(String text) throws IOException, JsonGenerationException",
      "right" : "public void writeRaw(String text) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[20953-21091]:MethodDeclaration[21424-21562]"
    }, {
      "left" : "public void writeRaw(String text, int offset, int len) throws IOException, JsonGenerationException",
      "right" : "public void writeRaw(String text, int offset, int len) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21097-21256]:MethodDeclaration[21568-21727]"
    }, {
      "left" : "public void writeRaw(SerializableString text) throws IOException, JsonGenerationException",
      "right" : "public void writeRaw(SerializableString text) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21262-21412]:MethodDeclaration[21733-21883]"
    }, {
      "left" : "public void writeRaw(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "right" : "public void writeRaw(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21422-21581]:MethodDeclaration[21893-22052]"
    }, {
      "left" : "public void writeRaw(char c) throws IOException, JsonGenerationException",
      "right" : "public void writeRaw(char c) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21587-21720]:MethodDeclaration[22058-22191]"
    }, {
      "left" : "public void writeRawValue(String text) throws IOException, JsonGenerationException",
      "right" : "public void writeRawValue(String text) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21726-21869]:MethodDeclaration[22197-22340]"
    }, {
      "left" : "public void writeRawValue(String text, int offset, int len) throws IOException, JsonGenerationException",
      "right" : "public void writeRawValue(String text, int offset, int len) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[21875-22039]:MethodDeclaration[22346-22510]"
    }, {
      "left" : "public void writeRawValue(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "right" : "public void writeRawValue(char[] text, int offset, int len) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[22045-22209]:MethodDeclaration[22516-22680]"
    }, {
      "left" : "public void writeNumber(short i) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(short i) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[22427-22588]:MethodDeclaration[22898-23059]"
    }, {
      "left" : "public void writeNumber(int i) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(int i) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[22594-22755]:MethodDeclaration[23065-23226]"
    }, {
      "left" : "public void writeNumber(long l) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(long l) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[22761-22920]:MethodDeclaration[23232-23391]"
    }, {
      "left" : "public void writeNumber(double d) throws IOException,JsonGenerationException",
      "right" : "public void writeNumber(double d) throws IOException,JsonGenerationException",
      "info" : "MethodDeclaration[22926-23090]:MethodDeclaration[23397-23561]"
    }, {
      "left" : "public void writeNumber(float f) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(float f) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[23096-23259]:MethodDeclaration[23567-23730]"
    }, {
      "left" : "public void writeNumber(BigDecimal dec) throws IOException,JsonGenerationException",
      "right" : "public void writeNumber(BigDecimal dec) throws IOException,JsonGenerationException",
      "info" : "MethodDeclaration[23265-23504]:MethodDeclaration[23736-23975]"
    }, {
      "left" : "public void writeNumber(BigInteger v) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(BigInteger v) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[23510-23742]:MethodDeclaration[23981-24213]"
    }, {
      "left" : "public void writeNumber(String encodedValue) throws IOException, JsonGenerationException",
      "right" : "public void writeNumber(String encodedValue) throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[23748-24059]:MethodDeclaration[24219-24530]"
    }, {
      "left" : "public void writeBoolean(boolean state) throws IOException,JsonGenerationException",
      "right" : "public void writeBoolean(boolean state) throws IOException,JsonGenerationException",
      "info" : "MethodDeclaration[24065-24240]:MethodDeclaration[24536-24711]"
    }, {
      "left" : "public void writeNull() throws IOException, JsonGenerationException",
      "right" : "public void writeNull() throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[24246-24374]:MethodDeclaration[24717-24845]"
    }, {
      "left" : "public void writeObject(Object value) throws IOException",
      "right" : "public void writeObject(Object value) throws IOException",
      "info" : "MethodDeclaration[24593-25362]:MethodDeclaration[25064-25833]"
    }, {
      "left" : "public void writeTree(TreeNode node) throws IOException",
      "right" : "public void writeTree(TreeNode node) throws IOException",
      "info" : "MethodDeclaration[25368-25763]:MethodDeclaration[25839-26234]"
    }, {
      "left" : "public void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len)\n        throws IOException, JsonGenerationException",
      "right" : "public void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len)\n        throws IOException, JsonGenerationException",
      "info" : "MethodDeclaration[25959-26581]:MethodDeclaration[26430-27052]"
    }, {
      "left" : "public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength)",
      "right" : "public int writeBinary(Base64Variant b64variant, InputStream data, int dataLength)",
      "info" : "MethodDeclaration[26587-27026]:MethodDeclaration[27058-27497]"
    }, {
      "left" : "public boolean canWriteTypeId()",
      "right" : "public boolean canWriteTypeId()",
      "info" : "MethodDeclaration[27226-27313]:MethodDeclaration[27697-27784]"
    }, {
      "left" : "public boolean canWriteObjectId()",
      "right" : "public boolean canWriteObjectId()",
      "info" : "MethodDeclaration[27319-27410]:MethodDeclaration[27790-27881]"
    }, {
      "left" : "public void writeTypeId(Object id)",
      "right" : "public void writeTypeId(Object id)",
      "info" : "MethodDeclaration[27420-27527]:MethodDeclaration[27891-27998]"
    }, {
      "left" : "public void writeObjectId(Object id)",
      "right" : "public void writeObjectId(Object id)",
      "info" : "MethodDeclaration[27537-27648]:MethodDeclaration[28008-28119]"
    }, {
      "left" : "public void copyCurrentEvent(JsonParser jp) throws IOException, JsonProcessingException",
      "right" : "public void copyCurrentEvent(JsonParser jp) throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[27853-29943]:MethodDeclaration[28324-30414]"
    }, {
      "left" : "public void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException",
      "right" : "public void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[29953-31080]:MethodDeclaration[30424-31551]"
    }, {
      "left" : "private final void _checkNativeIds(JsonParser jp) throws IOException, JsonProcessingException",
      "right" : "private final void _checkNativeIds(JsonParser jp) throws IOException, JsonProcessingException",
      "info" : "MethodDeclaration[31091-31386]:MethodDeclaration[31562-31857]"
    }, {
      "left" : "protected final void _append(JsonToken type)",
      "right" : "protected final void _append(JsonToken type)",
      "info" : "MethodDeclaration[31564-31935]:MethodDeclaration[32035-32406]"
    }, {
      "left" : "protected final void _append(JsonToken type, Object value)",
      "right" : "protected final void _append(JsonToken type, Object value)",
      "info" : "MethodDeclaration[31941-32311]:MethodDeclaration[32412-32782]"
    }, {
      "left" : "protected final void _appendRaw(int rawType, Object value)",
      "right" : "protected final void _appendRaw(int rawType, Object value)",
      "info" : "MethodDeclaration[32317-32699]:MethodDeclaration[32788-33170]"
    }, {
      "left" : "protected void _reportUnsupportedOperation()",
      "right" : "protected void _reportUnsupportedOperation()",
      "info" : "MethodDeclaration[32705-32870]:MethodDeclaration[33176-33341]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "TypeDeclaration[33050-48720]:TypeDeclaration[33521-49191]"
    }, {
      "left" : "protected ObjectCodec _codec;",
      "right" : "protected ObjectCodec _codec;",
      "info" : "FieldDeclaration[33319-33348]:FieldDeclaration[33790-33819]"
    }, {
      "left" : "protected final boolean _hasNativeTypeIds;",
      "right" : "protected final boolean _hasNativeTypeIds;",
      "info" : "FieldDeclaration[33358-33446]:FieldDeclaration[33829-33917]"
    }, {
      "left" : "protected final boolean _hasNativeObjectIds;",
      "right" : "protected final boolean _hasNativeObjectIds;",
      "info" : "FieldDeclaration[33456-33546]:FieldDeclaration[33927-34017]"
    }, {
      "left" : "protected final boolean _hasNativeIds;",
      "right" : "protected final boolean _hasNativeIds;",
      "info" : "FieldDeclaration[33556-33594]:FieldDeclaration[34027-34065]"
    }, {
      "left" : "protected Segment _segment;",
      "right" : "protected Segment _segment;",
      "info" : "FieldDeclaration[33797-33884]:FieldDeclaration[34268-34355]"
    }, {
      "left" : "protected int _segmentPtr;",
      "right" : "protected int _segmentPtr;",
      "info" : "FieldDeclaration[33894-34003]:FieldDeclaration[34365-34474]"
    }, {
      "left" : "protected JsonReadContext _parsingContext;",
      "right" : "protected JsonReadContext _parsingContext;",
      "info" : "FieldDeclaration[34013-34206]:FieldDeclaration[34484-34677]"
    }, {
      "left" : "protected boolean _closed;",
      "right" : "protected boolean _closed;",
      "info" : "FieldDeclaration[34224-34250]:FieldDeclaration[34695-34721]"
    }, {
      "left" : "protected transient ByteArrayBuilder _byteBuilder;",
      "right" : "protected transient ByteArrayBuilder _byteBuilder;",
      "info" : "FieldDeclaration[34260-34310]:FieldDeclaration[34731-34781]"
    }, {
      "left" : "protected JsonLocation _location = null;",
      "right" : "protected JsonLocation _location = null;",
      "info" : "FieldDeclaration[34320-34360]:FieldDeclaration[34791-34831]"
    }, {
      "left" : "// since 2.3\n        protected Parser(Segment firstSeg, ObjectCodec codec)",
      "right" : "// since 2.3\n        protected Parser(Segment firstSeg, ObjectCodec codec)",
      "info" : "MethodDeclaration[34568-34715]:MethodDeclaration[35039-35186]"
    }, {
      "left" : "public Parser(Segment firstSeg, ObjectCodec codec,\n                boolean hasNativeTypeIds,\n                boolean hasNativeObjectIds)",
      "right" : "public Parser(Segment firstSeg, ObjectCodec codec,\n                boolean hasNativeTypeIds,\n                boolean hasNativeObjectIds)",
      "info" : "MethodDeclaration[34725-35300]:MethodDeclaration[35196-35771]"
    }, {
      "left" : "public void setLocation(JsonLocation l)",
      "right" : "public void setLocation(JsonLocation l)",
      "info" : "MethodDeclaration[35310-35388]:MethodDeclaration[35781-35859]"
    }, {
      "left" : "public ObjectCodec getCodec()",
      "right" : "public ObjectCodec getCodec()",
      "info" : "MethodDeclaration[35406-35472]:MethodDeclaration[35877-35943]"
    }, {
      "left" : "public void setCodec(ObjectCodec c)",
      "right" : "public void setCodec(ObjectCodec c)",
      "info" : "MethodDeclaration[35482-35551]:MethodDeclaration[35953-36022]"
    }, {
      "left" : "public Version version()",
      "right" : "public Version version()",
      "info" : "MethodDeclaration[35561-35693]:MethodDeclaration[36032-36164]"
    }, {
      "left" : "public JsonToken peekNextToken()\n            throws IOException, JsonParseException",
      "right" : "public JsonToken peekNextToken()\n            throws IOException, JsonParseException",
      "info" : "MethodDeclaration[35913-36385]:MethodDeclaration[36384-36856]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[36599-36741]:MethodDeclaration[37070-37212]"
    }, {
      "left" : "public JsonToken nextToken() throws IOException, JsonParseException",
      "right" : "public JsonToken nextToken() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[36952-38602]:MethodDeclaration[37423-39073]"
    }, {
      "left" : "public boolean isClosed()",
      "right" : "public boolean isClosed()",
      "info" : "MethodDeclaration[38612-38675]:MethodDeclaration[39083-39146]"
    }, {
      "left" : "public JsonStreamContext getParsingContext()",
      "right" : "public JsonStreamContext getParsingContext()",
      "info" : "MethodDeclaration[38892-38982]:MethodDeclaration[39363-39453]"
    }, {
      "left" : "public JsonLocation getTokenLocation()",
      "right" : "public JsonLocation getTokenLocation()",
      "info" : "MethodDeclaration[38992-39081]:MethodDeclaration[39463-39552]"
    }, {
      "left" : "public JsonLocation getCurrentLocation()",
      "right" : "public JsonLocation getCurrentLocation()",
      "info" : "MethodDeclaration[39091-39231]:MethodDeclaration[39562-39702]"
    }, {
      "left" : "public String getCurrentName()",
      "right" : "public String getCurrentName()",
      "info" : "MethodDeclaration[39241-39334]:MethodDeclaration[39712-39805]"
    }, {
      "left" : "public void overrideCurrentName(String name)",
      "right" : "public void overrideCurrentName(String name)",
      "info" : "MethodDeclaration[39344-39873]:MethodDeclaration[39815-40344]"
    }, {
      "left" : "public String getText()",
      "right" : "public String getText()",
      "info" : "MethodDeclaration[40116-40919]:MethodDeclaration[40587-41390]"
    }, {
      "left" : "public char[] getTextCharacters()",
      "right" : "public char[] getTextCharacters()",
      "info" : "MethodDeclaration[40929-41089]:MethodDeclaration[41400-41560]"
    }, {
      "left" : "public int getTextLength()",
      "right" : "public int getTextLength()",
      "info" : "MethodDeclaration[41099-41244]:MethodDeclaration[41570-41715]"
    }, {
      "left" : "public int getTextOffset()",
      "right" : "public int getTextOffset()",
      "info" : "MethodDeclaration[41254-41312]:MethodDeclaration[41725-41783]"
    }, {
      "left" : "public boolean hasTextCharacters()",
      "right" : "public boolean hasTextCharacters()",
      "info" : "MethodDeclaration[41322-41467]:MethodDeclaration[41793-41938]"
    }, {
      "left" : "public BigInteger getBigIntegerValue() throws IOException, JsonParseException",
      "right" : "public BigInteger getBigIntegerValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[41705-42220]:MethodDeclaration[42176-42691]"
    }, {
      "left" : "public BigDecimal getDecimalValue() throws IOException, JsonParseException",
      "right" : "public BigDecimal getDecimalValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[42230-42828]:MethodDeclaration[42701-43299]"
    }, {
      "left" : "public double getDoubleValue() throws IOException, JsonParseException",
      "right" : "public double getDoubleValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[42838-42988]:MethodDeclaration[43309-43459]"
    }, {
      "left" : "public float getFloatValue() throws IOException, JsonParseException",
      "right" : "public float getFloatValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[42998-43145]:MethodDeclaration[43469-43616]"
    }, {
      "left" : "public int getIntValue() throws IOException, JsonParseException",
      "right" : "public int getIntValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[43155-43478]:MethodDeclaration[43626-43949]"
    }, {
      "left" : "public long getLongValue() throws IOException, JsonParseException",
      "right" : "public long getLongValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[43488-43632]:MethodDeclaration[43959-44103]"
    }, {
      "left" : "public NumberType getNumberType() throws IOException, JsonParseException",
      "right" : "public NumberType getNumberType() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[43642-44290]:MethodDeclaration[44113-44761]"
    }, {
      "left" : "public final Number getNumberValue() throws IOException, JsonParseException",
      "right" : "public final Number getNumberValue() throws IOException, JsonParseException",
      "info" : "MethodDeclaration[44300-45292]:MethodDeclaration[44771-45763]"
    }, {
      "left" : "public Object getEmbeddedObject()",
      "right" : "public Object getEmbeddedObject()",
      "info" : "MethodDeclaration[45520-45736]:MethodDeclaration[45991-46207]"
    }, {
      "left" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException",
      "right" : "public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException",
      "info" : "MethodDeclaration[45746-46964]:MethodDeclaration[46217-47435]"
    }, {
      "left" : "public int readBinaryValue(Base64Variant b64variant, OutputStream out)\n            throws IOException, JsonParseException",
      "right" : "public int readBinaryValue(Base64Variant b64variant, OutputStream out)\n            throws IOException, JsonParseException",
      "info" : "MethodDeclaration[46974-47340]:MethodDeclaration[47445-47811]"
    }, {
      "left" : "public boolean canReadObjectId()",
      "right" : "public boolean canReadObjectId()",
      "info" : "MethodDeclaration[47544-47646]:MethodDeclaration[48015-48117]"
    }, {
      "left" : "public boolean canReadTypeId()",
      "right" : "public boolean canReadTypeId()",
      "info" : "MethodDeclaration[47656-47754]:MethodDeclaration[48127-48225]"
    }, {
      "left" : "public Object getTypeId()",
      "right" : "public Object getTypeId()",
      "info" : "MethodDeclaration[47764-47872]:MethodDeclaration[48235-48343]"
    }, {
      "left" : "public Object getObjectId()",
      "right" : "public Object getObjectId()",
      "info" : "MethodDeclaration[47882-47994]:MethodDeclaration[48353-48465]"
    }, {
      "left" : "protected final Object _currentObject()",
      "right" : "protected final Object _currentObject()",
      "info" : "MethodDeclaration[48200-48297]:MethodDeclaration[48671-48768]"
    }, {
      "left" : "protected final void _checkIsNumber() throws JsonParseException",
      "right" : "protected final void _checkIsNumber() throws JsonParseException",
      "info" : "MethodDeclaration[48307-48591]:MethodDeclaration[48778-49062]"
    }, {
      "left" : "protected void _handleEOF() throws JsonParseException",
      "right" : "protected void _handleEOF() throws JsonParseException",
      "info" : "MethodDeclaration[48601-48714]:MethodDeclaration[49072-49185]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "TypeDeclaration[48730-56601]:TypeDeclaration[49201-57072]"
    }, {
      "left" : "public final static int TOKENS_PER_SEGMENT = 16;",
      "right" : "public final static int TOKENS_PER_SEGMENT = 16;",
      "info" : "FieldDeclaration[49123-49171]:FieldDeclaration[49594-49642]"
    }, {
      "left" : "private final static JsonToken[] TOKEN_TYPES_BY_INDEX;",
      "right" : "private final static JsonToken[] TOKEN_TYPES_BY_INDEX;",
      "info" : "FieldDeclaration[49189-49390]:FieldDeclaration[49660-49861]"
    }, {
      "left" : "protected Segment _next;",
      "right" : "protected Segment _next;",
      "info" : "FieldDeclaration[49785-49809]:FieldDeclaration[50256-50280]"
    }, {
      "left" : "protected long _tokenTypes;",
      "right" : "protected long _tokenTypes;",
      "info" : "FieldDeclaration[49851-50029]:FieldDeclaration[50322-50500]"
    }, {
      "left" : "protected final Object[] _tokens = new Object[TOKENS_PER_SEGMENT];",
      "right" : "protected final Object[] _tokens = new Object[TOKENS_PER_SEGMENT];",
      "info" : "FieldDeclaration[50074-50140]:FieldDeclaration[50545-50611]"
    }, {
      "left" : "protected TreeMap<Integer,Object> _nativeIds;",
      "right" : "protected TreeMap<Integer,Object> _nativeIds;",
      "info" : "FieldDeclaration[50150-50300]:FieldDeclaration[50621-50771]"
    }, {
      "left" : "public Segment()",
      "right" : "public Segment()",
      "info" : "MethodDeclaration[50318-50338]:MethodDeclaration[50789-50809]"
    }, {
      "left" : "public JsonToken type(int index)",
      "right" : "public JsonToken type(int index)",
      "info" : "MethodDeclaration[50376-50624]:MethodDeclaration[50847-51095]"
    }, {
      "left" : "public int rawType(int index)",
      "right" : "public int rawType(int index)",
      "info" : "MethodDeclaration[50634-50857]:MethodDeclaration[51105-51328]"
    }, {
      "left" : "public Object get(int index)",
      "right" : "public Object get(int index)",
      "info" : "MethodDeclaration[50875-50950]:MethodDeclaration[51346-51421]"
    }, {
      "left" : "public Segment next()",
      "right" : "public Segment next()",
      "info" : "MethodDeclaration[50960-50999]:MethodDeclaration[51431-51470]"
    }, {
      "left" : "public boolean hasIds()",
      "right" : "public boolean hasIds()",
      "info" : "MethodDeclaration[51009-51208]:MethodDeclaration[51480-51679]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType)",
      "right" : "public Segment append(int index, JsonToken tokenType)",
      "info" : "MethodDeclaration[51261-51560]:MethodDeclaration[51732-52031]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "right" : "public Segment append(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[51570-51953]:MethodDeclaration[52041-52424]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType, Object value)",
      "right" : "public Segment append(int index, JsonToken tokenType, Object value)",
      "info" : "MethodDeclaration[51963-52290]:MethodDeclaration[52434-52761]"
    }, {
      "left" : "public Segment append(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "public Segment append(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[52300-52711]:MethodDeclaration[52771-53182]"
    }, {
      "left" : "public Segment appendRaw(int index, int rawTokenType, Object value)",
      "right" : "public Segment appendRaw(int index, int rawTokenType, Object value)",
      "info" : "MethodDeclaration[52721-53054]:MethodDeclaration[53192-53525]"
    }, {
      "left" : "public Segment appendRaw(int index, int rawTokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "public Segment appendRaw(int index, int rawTokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[53064-53481]:MethodDeclaration[53535-53952]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType)",
      "right" : "private void set(int index, JsonToken tokenType)",
      "info" : "MethodDeclaration[53491-53899]:MethodDeclaration[53962-54370]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "right" : "private void set(int index, JsonToken tokenType,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[53909-54251]:MethodDeclaration[54380-54722]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType, Object value)",
      "right" : "private void set(int index, JsonToken tokenType, Object value)",
      "info" : "MethodDeclaration[54261-54551]:MethodDeclaration[54732-55022]"
    }, {
      "left" : "private void set(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "right" : "private void set(int index, JsonToken tokenType, Object value,\n                Object objectId, Object typeId)",
      "info" : "MethodDeclaration[54561-54953]:MethodDeclaration[55032-55424]"
    }, {
      "left" : "private void set(int index, int rawTokenType, Object value)",
      "right" : "private void set(int index, int rawTokenType, Object value)",
      "info" : "MethodDeclaration[54963-55250]:MethodDeclaration[55434-55721]"
    }, {
      "left" : "private void set(int index, int rawTokenType, Object value, Object objectId, Object typeId)",
      "right" : "private void set(int index, int rawTokenType, Object value, Object objectId, Object typeId)",
      "info" : "MethodDeclaration[55260-55633]:MethodDeclaration[55731-56104]"
    }, {
      "left" : "private final void assignNativeIds(int index, Object objectId, Object typeId)",
      "right" : "private final void assignNativeIds(int index, Object objectId, Object typeId)",
      "info" : "MethodDeclaration[55643-56076]:MethodDeclaration[56114-56547]"
    }, {
      "left" : "public Object findObjectId(int index)",
      "right" : "public Object findObjectId(int index)",
      "info" : "MethodDeclaration[56086-56269]:MethodDeclaration[56557-56740]"
    }, {
      "left" : "public Object findTypeId(int index)",
      "right" : "public Object findTypeId(int index)",
      "info" : "MethodDeclaration[56287-56466]:MethodDeclaration[56758-56937]"
    }, {
      "left" : "private final int _typeIdIndex(int i)",
      "right" : "private final int _typeIdIndex(int i)",
      "info" : "MethodDeclaration[56476-56529]:MethodDeclaration[56947-57000]"
    }, {
      "left" : "private final int _objectIdIndex(int i)",
      "right" : "private final int _objectIdIndex(int i)",
      "info" : "MethodDeclaration[56538-56595]:MethodDeclaration[57009-57066]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1060-1066]:Modifier[1060-1066]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1067-1072]:TYPE_DECLARATION_KIND[1067-1072]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[1073-1084]:SimpleName[1073-1084]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[1179-1192]:SimpleType[1179-1192]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[3834-3845]:MarkerAnnotation[3834-3845]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3850-3856]:Modifier[3850-3856]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[3857-3868]:SimpleName[3857-3868]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[3869-3886]:SingleVariableDeclaration[3869-3886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3888-3923]:Block[3888-3923]"
    }, {
      "left" : "this(codec, false);",
      "right" : "this(codec, false);",
      "info" : "ConstructorInvocation[3898-3917]:ConstructorInvocation[3898-3917]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4252-4258]:Modifier[4252-4258]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[4259-4270]:SimpleName[4259-4270]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[4271-4288]:SingleVariableDeclaration[4271-4288]"
    }, {
      "left" : "boolean hasNativeIds",
      "right" : "boolean hasNativeIds",
      "info" : "SingleVariableDeclaration[4290-4310]:SingleVariableDeclaration[4290-4310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4316-4740]:Block[4316-4740]"
    }, {
      "left" : "_objectCodec = codec;",
      "right" : "_objectCodec = codec;",
      "info" : "ExpressionStatement[4326-4347]:ExpressionStatement[4326-4347]"
    }, {
      "left" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "right" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "info" : "ExpressionStatement[4356-4404]:ExpressionStatement[4356-4404]"
    }, {
      "left" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "right" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "info" : "ExpressionStatement[4413-4470]:ExpressionStatement[4413-4470]"
    }, {
      "left" : "_first = _last = new Segment();",
      "right" : "_first = _last = new Segment();",
      "info" : "ExpressionStatement[4524-4555]:ExpressionStatement[4524-4555]"
    }, {
      "left" : "_appendAt = 0;",
      "right" : "_appendAt = 0;",
      "info" : "ExpressionStatement[4564-4578]:ExpressionStatement[4564-4578]"
    }, {
      "left" : "_hasNativeTypeIds = hasNativeIds;",
      "right" : "_hasNativeTypeIds = hasNativeIds;",
      "info" : "ExpressionStatement[4587-4620]:ExpressionStatement[4587-4620]"
    }, {
      "left" : "_hasNativeObjectIds = hasNativeIds;",
      "right" : "_hasNativeObjectIds = hasNativeIds;",
      "info" : "ExpressionStatement[4629-4664]:ExpressionStatement[4629-4664]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "info" : "ExpressionStatement[4674-4734]:ExpressionStatement[4674-4734]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4780-4786]:Modifier[4780-4786]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleName[4787-4798]:SimpleName[4787-4798]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[4799-4812]:SingleVariableDeclaration[4799-4812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4818-5263]:Block[4818-5263]"
    }, {
      "left" : "_objectCodec = jp.getCodec();",
      "right" : "_objectCodec = jp.getCodec();",
      "info" : "ExpressionStatement[4828-4857]:ExpressionStatement[4828-4857]"
    }, {
      "left" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "right" : "_generatorFeatures = DEFAULT_GENERATOR_FEATURES;",
      "info" : "ExpressionStatement[4866-4914]:ExpressionStatement[4866-4914]"
    }, {
      "left" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "right" : "_writeContext = JsonWriteContext.createRootContext(null);",
      "info" : "ExpressionStatement[4923-4980]:ExpressionStatement[4923-4980]"
    }, {
      "left" : "_first = _last = new Segment();",
      "right" : "_first = _last = new Segment();",
      "info" : "ExpressionStatement[5034-5065]:ExpressionStatement[5034-5065]"
    }, {
      "left" : "_appendAt = 0;",
      "right" : "_appendAt = 0;",
      "info" : "ExpressionStatement[5074-5088]:ExpressionStatement[5074-5088]"
    }, {
      "left" : "_hasNativeTypeIds = jp.canReadTypeId();",
      "right" : "_hasNativeTypeIds = jp.canReadTypeId();",
      "info" : "ExpressionStatement[5097-5136]:ExpressionStatement[5097-5136]"
    }, {
      "left" : "_hasNativeObjectIds = jp.canReadObjectId();",
      "right" : "_hasNativeObjectIds = jp.canReadObjectId();",
      "info" : "ExpressionStatement[5145-5188]:ExpressionStatement[5145-5188]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "info" : "ExpressionStatement[5197-5257]:ExpressionStatement[5197-5257]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5273-5282]:MarkerAnnotation[5273-5282]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5287-5293]:Modifier[5287-5293]"
    }, {
      "left" : "Version",
      "right" : "Version",
      "info" : "SimpleType[5294-5301]:SimpleType[5294-5301]"
    }, {
      "left" : "version",
      "right" : "version",
      "info" : "SimpleName[5302-5309]:SimpleName[5302-5309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5312-5393]:Block[5312-5393]"
    }, {
      "left" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "right" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "info" : "ReturnStatement[5322-5387]:ReturnStatement[5322-5387]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5836-5842]:Modifier[5836-5842]"
    }, {
      "left" : "JsonParser",
      "right" : "JsonParser",
      "info" : "SimpleType[5843-5853]:SimpleType[5843-5853]"
    }, {
      "left" : "asParser",
      "right" : "asParser",
      "info" : "SimpleName[5854-5862]:SimpleName[5854-5862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5869-5915]:Block[5869-5915]"
    }, {
      "left" : "return asParser(_objectCodec);",
      "right" : "return asParser(_objectCodec);",
      "info" : "ReturnStatement[5879-5909]:ReturnStatement[5879-5909]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6460-6466]:Modifier[6460-6466]"
    }, {
      "left" : "JsonParser",
      "right" : "JsonParser",
      "info" : "SimpleType[6467-6477]:SimpleType[6467-6477]"
    }, {
      "left" : "asParser",
      "right" : "asParser",
      "info" : "SimpleName[6478-6486]:SimpleName[6478-6486]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[6487-6504]:SingleVariableDeclaration[6487-6504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6510-6599]:Block[6510-6599]"
    }, {
      "left" : "return new Parser(_first, codec, _hasNativeTypeIds, _hasNativeObjectIds);",
      "right" : "return new Parser(_first, codec, _hasNativeTypeIds, _hasNativeObjectIds);",
      "info" : "ReturnStatement[6520-6593]:ReturnStatement[6520-6593]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6728-6734]:Modifier[6728-6734]"
    }, {
      "left" : "JsonParser",
      "right" : "JsonParser",
      "info" : "SimpleType[6735-6745]:SimpleType[6735-6745]"
    }, {
      "left" : "asParser",
      "right" : "asParser",
      "info" : "SimpleName[6746-6754]:SimpleName[6746-6754]"
    }, {
      "left" : "JsonParser src",
      "right" : "JsonParser src",
      "info" : "SingleVariableDeclaration[6755-6769]:SingleVariableDeclaration[6755-6769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6775-6942]:Block[6775-6942]"
    }, {
      "left" : "Parser p = new Parser(_first, src.getCodec(), _hasNativeTypeIds, _hasNativeObjectIds);",
      "right" : "Parser p = new Parser(_first, src.getCodec(), _hasNativeTypeIds, _hasNativeObjectIds);",
      "info" : "VariableDeclarationStatement[6785-6871]:VariableDeclarationStatement[6785-6871]"
    }, {
      "left" : "p.setLocation(src.getTokenLocation());",
      "right" : "p.setLocation(src.getTokenLocation());",
      "info" : "ExpressionStatement[6880-6918]:ExpressionStatement[6880-6918]"
    }, {
      "left" : "return p;",
      "right" : "return p;",
      "info" : "ReturnStatement[6927-6936]:ReturnStatement[6927-6936]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7124-7130]:Modifier[7124-7130]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[7131-7140]:SimpleType[7131-7140]"
    }, {
      "left" : "firstToken",
      "right" : "firstToken",
      "info" : "SimpleName[7141-7151]:SimpleName[7141-7151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7154-7257]:Block[7154-7257]"
    }, {
      "left" : "if (_first != null)",
      "right" : "if (_first != null)",
      "info" : "IfStatement[7164-7230]:IfStatement[7164-7230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7184-7230]:Block[7184-7230]"
    }, {
      "left" : "return _first.type(0);",
      "right" : "return _first.type(0);",
      "info" : "ReturnStatement[7198-7220]:ReturnStatement[7198-7220]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7239-7251]:ReturnStatement[7239-7251]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[7689-7718]:SingleMemberAnnotation[7689-7718]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7723-7729]:Modifier[7723-7729]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleType[7730-7741]:SimpleType[7730-7741]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[7742-7748]:SimpleName[7742-7748]"
    }, {
      "left" : "TokenBuffer other",
      "right" : "TokenBuffer other",
      "info" : "SingleVariableDeclaration[7749-7766]:SingleVariableDeclaration[7749-7766]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[7783-7794]:SimpleType[7783-7794]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[7796-7819]:SimpleType[7796-7819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7824-8331]:Block[7824-8331]"
    }, {
      "left" : "if (!_hasNativeTypeIds)",
      "right" : "if (!_hasNativeTypeIds)",
      "info" : "IfStatement[7896-7989]:IfStatement[7896-7989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7920-7989]:Block[7920-7989]"
    }, {
      "left" : "_hasNativeTypeIds = other.canWriteTypeId();",
      "right" : "_hasNativeTypeIds = other.canWriteTypeId();",
      "info" : "ExpressionStatement[7936-7979]:ExpressionStatement[7936-7979]"
    }, {
      "left" : "if (!_hasNativeObjectIds)",
      "right" : "if (!_hasNativeObjectIds)",
      "info" : "IfStatement[7998-8095]:IfStatement[7998-8095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8024-8095]:Block[8024-8095]"
    }, {
      "left" : "_hasNativeObjectIds = other.canWriteObjectId();",
      "right" : "_hasNativeObjectIds = other.canWriteObjectId();",
      "info" : "ExpressionStatement[8038-8085]:ExpressionStatement[8038-8085]"
    }, {
      "left" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "right" : "_mayHaveNativeIds = _hasNativeTypeIds | _hasNativeObjectIds;",
      "info" : "ExpressionStatement[8104-8164]:ExpressionStatement[8104-8164]"
    }, {
      "left" : "JsonParser jp = other.asParser();",
      "right" : "JsonParser jp = other.asParser();",
      "info" : "VariableDeclarationStatement[8182-8215]:VariableDeclarationStatement[8182-8215]"
    }, {
      "left" : "while (jp.nextToken() != null)",
      "right" : "while (jp.nextToken() != null)",
      "info" : "WhileStatement[8224-8304]:WhileStatement[8224-8304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8255-8304]:Block[8255-8304]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[8269-8294]:ExpressionStatement[8269-8294]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[8313-8325]:ReturnStatement[8313-8325]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8740-8746]:Modifier[8740-8746]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8747-8751]:PrimitiveType[8747-8751]"
    }, {
      "left" : "serialize",
      "right" : "serialize",
      "info" : "SimpleName[8752-8761]:SimpleName[8752-8761]"
    }, {
      "left" : "JsonGenerator jgen",
      "right" : "JsonGenerator jgen",
      "info" : "SingleVariableDeclaration[8762-8780]:SingleVariableDeclaration[8762-8780]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[8797-8808]:SimpleType[8797-8808]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[8810-8833]:SimpleType[8810-8833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8838-13099]:Block[8838-13099]"
    }, {
      "left" : "Segment segment = _first;",
      "right" : "Segment segment = _first;",
      "info" : "VariableDeclarationStatement[8848-8873]:VariableDeclarationStatement[8848-8873]"
    }, {
      "left" : "int ptr = -1;",
      "right" : "int ptr = -1;",
      "info" : "VariableDeclarationStatement[8882-8895]:VariableDeclarationStatement[8882-8895]"
    }, {
      "left" : "final boolean checkIds = _mayHaveNativeIds;",
      "right" : "final boolean checkIds = _mayHaveNativeIds;",
      "info" : "VariableDeclarationStatement[8905-8948]:VariableDeclarationStatement[8905-8948]"
    }, {
      "left" : "boolean hasIds = checkIds && (segment.hasIds());",
      "right" : "boolean hasIds = checkIds && (segment.hasIds());",
      "info" : "VariableDeclarationStatement[8957-9005]:VariableDeclarationStatement[8957-9005]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[9015-13093]:WhileStatement[9015-13093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9028-13093]:Block[9028-13093]"
    }, {
      "left" : "if (++ptr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (++ptr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[9042-9266]:IfStatement[9042-9266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9083-9266]:Block[9083-9266]"
    }, {
      "left" : "ptr = 0;",
      "right" : "ptr = 0;",
      "info" : "ExpressionStatement[9101-9109]:ExpressionStatement[9101-9109]"
    }, {
      "left" : "segment = segment.next();",
      "right" : "segment = segment.next();",
      "info" : "ExpressionStatement[9126-9151]:ExpressionStatement[9126-9151]"
    }, {
      "left" : "if (segment == null)",
      "right" : "if (segment == null)",
      "info" : "IfStatement[9168-9195]:IfStatement[9168-9195]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9189-9195]:BreakStatement[9189-9195]"
    }, {
      "left" : "hasIds = checkIds && (segment.hasIds());",
      "right" : "hasIds = checkIds && (segment.hasIds());",
      "info" : "ExpressionStatement[9212-9252]:ExpressionStatement[9212-9252]"
    }, {
      "left" : "JsonToken t = segment.type(ptr);",
      "right" : "JsonToken t = segment.type(ptr);",
      "info" : "VariableDeclarationStatement[9279-9311]:VariableDeclarationStatement[9279-9311]"
    }, {
      "left" : "if (t == null)",
      "right" : "if (t == null)",
      "info" : "IfStatement[9324-9345]:IfStatement[9324-9345]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9339-9345]:BreakStatement[9339-9345]"
    }, {
      "left" : "if (hasIds)",
      "right" : "if (hasIds)",
      "info" : "IfStatement[9359-9677]:IfStatement[9359-9677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9371-9677]:Block[9371-9677]"
    }, {
      "left" : "Object id = segment.findObjectId(ptr);",
      "right" : "Object id = segment.findObjectId(ptr);",
      "info" : "VariableDeclarationStatement[9389-9427]:VariableDeclarationStatement[9389-9427]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[9444-9523]:IfStatement[9444-9523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9460-9523]:Block[9460-9523]"
    }, {
      "left" : "jgen.writeObjectId(id);",
      "right" : "jgen.writeObjectId(id);",
      "info" : "ExpressionStatement[9482-9505]:ExpressionStatement[9482-9505]"
    }, {
      "left" : "id = segment.findTypeId(ptr);",
      "right" : "id = segment.findTypeId(ptr);",
      "info" : "ExpressionStatement[9540-9569]:ExpressionStatement[9540-9569]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[9586-9663]:IfStatement[9586-9663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9602-9663]:Block[9602-9663]"
    }, {
      "left" : "jgen.writeTypeId(id);",
      "right" : "jgen.writeTypeId(id);",
      "info" : "ExpressionStatement[9624-9645]:ExpressionStatement[9624-9645]"
    }, {
      "left" : "switch (t) {\n            case START_OBJECT:\n                jgen.writeStartObject();\n                break;\n            case END_OBJECT:\n                jgen.writeEndObject();\n                break;\n            case START_ARRAY:\n                jgen.writeStartArray();\n                break;\n            case END_ARRAY:\n                jgen.writeEndArray();\n                break;\n            case FIELD_NAME:\n            {\n                // 13-Dec-2010, tatu: Maybe we should start using different type tokens to reduce casting?\n                Object ob = segment.get(ptr);\n                if (ob instanceof SerializableString) {\n                    jgen.writeFieldName((SerializableString) ob);\n                } else {\n                    jgen.writeFieldName((String) ob);\n                }\n            }\n                break;\n            case VALUE_STRING:\n                {\n                    Object ob = segment.get(ptr);\n                    if (ob instanceof SerializableString) {\n                        jgen.writeString((SerializableString) ob);\n                    } else {\n                        jgen.writeString((String) ob);\n                    }\n                }\n                break;\n            case VALUE_NUMBER_INT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Integer) {\n                        jgen.writeNumber((Integer) n);\n                    } else if (n instanceof BigInteger) {\n                        jgen.writeNumber((BigInteger) n);\n                    } else if (n instanceof Long) {\n                        jgen.writeNumber((Long) n);\n                    } else if (n instanceof Short) {\n                        jgen.writeNumber((Short) n);\n                    } else {\n                        jgen.writeNumber(((Number) n).intValue());\n                    }\n                }\n                break;\n            case VALUE_NUMBER_FLOAT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Double) {\n                        jgen.writeNumber(((Double) n).doubleValue());\n                    } else if (n instanceof BigDecimal) {\n                        jgen.writeNumber((BigDecimal) n);\n                    } else if (n instanceof Float) {\n                        jgen.writeNumber(((Float) n).floatValue());\n                    } else if (n == null) {\n                        jgen.writeNull();\n                    } else if (n instanceof String) {\n                        jgen.writeNumber((String) n);\n                    } else {\n                        throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");\n                    }\n                }\n                break;\n            case VALUE_TRUE:\n                jgen.writeBoolean(true);\n                break;\n            case VALUE_FALSE:\n                jgen.writeBoolean(false);\n                break;\n            case VALUE_NULL:\n                jgen.writeNull();\n                break;\n            case VALUE_EMBEDDED_OBJECT:\n                jgen.writeObject(segment.get(ptr));\n                break;\n            default:\n                throw new RuntimeException(\"Internal error: should never end up through this code path\");\n            }",
      "right" : "switch (t) {\n            case START_OBJECT:\n                jgen.writeStartObject();\n                break;\n            case END_OBJECT:\n                jgen.writeEndObject();\n                break;\n            case START_ARRAY:\n                jgen.writeStartArray();\n                break;\n            case END_ARRAY:\n                jgen.writeEndArray();\n                break;\n            case FIELD_NAME:\n            {\n                // 13-Dec-2010, tatu: Maybe we should start using different type tokens to reduce casting?\n                Object ob = segment.get(ptr);\n                if (ob instanceof SerializableString) {\n                    jgen.writeFieldName((SerializableString) ob);\n                } else {\n                    jgen.writeFieldName((String) ob);\n                }\n            }\n                break;\n            case VALUE_STRING:\n                {\n                    Object ob = segment.get(ptr);\n                    if (ob instanceof SerializableString) {\n                        jgen.writeString((SerializableString) ob);\n                    } else {\n                        jgen.writeString((String) ob);\n                    }\n                }\n                break;\n            case VALUE_NUMBER_INT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Integer) {\n                        jgen.writeNumber((Integer) n);\n                    } else if (n instanceof BigInteger) {\n                        jgen.writeNumber((BigInteger) n);\n                    } else if (n instanceof Long) {\n                        jgen.writeNumber((Long) n);\n                    } else if (n instanceof Short) {\n                        jgen.writeNumber((Short) n);\n                    } else {\n                        jgen.writeNumber(((Number) n).intValue());\n                    }\n                }\n                break;\n            case VALUE_NUMBER_FLOAT:\n                {\n                    Object n = segment.get(ptr);\n                    if (n instanceof Double) {\n                        jgen.writeNumber(((Double) n).doubleValue());\n                    } else if (n instanceof BigDecimal) {\n                        jgen.writeNumber((BigDecimal) n);\n                    } else if (n instanceof Float) {\n                        jgen.writeNumber(((Float) n).floatValue());\n                    } else if (n == null) {\n                        jgen.writeNull();\n                    } else if (n instanceof String) {\n                        jgen.writeNumber((String) n);\n                    } else {\n                        throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");\n                    }\n                }\n                break;\n            case VALUE_TRUE:\n                jgen.writeBoolean(true);\n                break;\n            case VALUE_FALSE:\n                jgen.writeBoolean(false);\n                break;\n            case VALUE_NULL:\n                jgen.writeNull();\n                break;\n            case VALUE_EMBEDDED_OBJECT:\n                jgen.writeObject(segment.get(ptr));\n                break;\n            default:\n                throw new RuntimeException(\"Internal error: should never end up through this code path\");\n            }",
      "info" : "SwitchStatement[9758-13083]:SwitchStatement[9758-13083]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[9783-9801]:SwitchCase[9783-9801]"
    }, {
      "left" : "jgen.writeStartObject();",
      "right" : "jgen.writeStartObject();",
      "info" : "ExpressionStatement[9818-9842]:ExpressionStatement[9818-9842]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9859-9865]:BreakStatement[9859-9865]"
    }, {
      "left" : "case END_OBJECT:",
      "right" : "case END_OBJECT:",
      "info" : "SwitchCase[9878-9894]:SwitchCase[9878-9894]"
    }, {
      "left" : "jgen.writeEndObject();",
      "right" : "jgen.writeEndObject();",
      "info" : "ExpressionStatement[9911-9933]:ExpressionStatement[9911-9933]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9950-9956]:BreakStatement[9950-9956]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[9969-9986]:SwitchCase[9969-9986]"
    }, {
      "left" : "jgen.writeStartArray();",
      "right" : "jgen.writeStartArray();",
      "info" : "ExpressionStatement[10003-10026]:ExpressionStatement[10003-10026]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10043-10049]:BreakStatement[10043-10049]"
    }, {
      "left" : "case END_ARRAY:",
      "right" : "case END_ARRAY:",
      "info" : "SwitchCase[10062-10077]:SwitchCase[10062-10077]"
    }, {
      "left" : "jgen.writeEndArray();",
      "right" : "jgen.writeEndArray();",
      "info" : "ExpressionStatement[10094-10115]:ExpressionStatement[10094-10115]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10132-10138]:BreakStatement[10132-10138]"
    }, {
      "left" : "case FIELD_NAME:",
      "right" : "case FIELD_NAME:",
      "info" : "SwitchCase[10151-10167]:SwitchCase[10151-10167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10180-10567]:Block[10180-10567]"
    }, {
      "left" : "Object ob = segment.get(ptr);",
      "right" : "Object ob = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[10305-10334]:VariableDeclarationStatement[10305-10334]"
    }, {
      "left" : "if (ob instanceof SerializableString)",
      "right" : "if (ob instanceof SerializableString)",
      "info" : "IfStatement[10351-10553]:IfStatement[10351-10553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10389-10474]:Block[10389-10474]"
    }, {
      "left" : "jgen.writeFieldName((SerializableString) ob);",
      "right" : "jgen.writeFieldName((SerializableString) ob);",
      "info" : "ExpressionStatement[10411-10456]:ExpressionStatement[10411-10456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10480-10553]:Block[10480-10553]"
    }, {
      "left" : "jgen.writeFieldName((String) ob);",
      "right" : "jgen.writeFieldName((String) ob);",
      "info" : "ExpressionStatement[10502-10535]:ExpressionStatement[10502-10535]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10584-10590]:BreakStatement[10584-10590]"
    }, {
      "left" : "case VALUE_STRING:",
      "right" : "case VALUE_STRING:",
      "info" : "SwitchCase[10603-10621]:SwitchCase[10603-10621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10638-10940]:Block[10638-10940]"
    }, {
      "left" : "Object ob = segment.get(ptr);",
      "right" : "Object ob = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[10660-10689]:VariableDeclarationStatement[10660-10689]"
    }, {
      "left" : "if (ob instanceof SerializableString)",
      "right" : "if (ob instanceof SerializableString)",
      "info" : "IfStatement[10710-10922]:IfStatement[10710-10922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10748-10838]:Block[10748-10838]"
    }, {
      "left" : "jgen.writeString((SerializableString) ob);",
      "right" : "jgen.writeString((SerializableString) ob);",
      "info" : "ExpressionStatement[10774-10816]:ExpressionStatement[10774-10816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10844-10922]:Block[10844-10922]"
    }, {
      "left" : "jgen.writeString((String) ob);",
      "right" : "jgen.writeString((String) ob);",
      "info" : "ExpressionStatement[10870-10900]:ExpressionStatement[10870-10900]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10957-10963]:BreakStatement[10957-10963]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[10976-10998]:SwitchCase[10976-10998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11015-11630]:Block[11015-11630]"
    }, {
      "left" : "Object n = segment.get(ptr);",
      "right" : "Object n = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[11037-11065]:VariableDeclarationStatement[11037-11065]"
    }, {
      "left" : "if (n instanceof Integer)",
      "right" : "if (n instanceof Integer)",
      "info" : "IfStatement[11086-11612]:IfStatement[11086-11612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11112-11190]:Block[11112-11190]"
    }, {
      "left" : "jgen.writeNumber((Integer) n);",
      "right" : "jgen.writeNumber((Integer) n);",
      "info" : "ExpressionStatement[11138-11168]:ExpressionStatement[11138-11168]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[11196-11612]:IfStatement[11196-11612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11225-11306]:Block[11225-11306]"
    }, {
      "left" : "jgen.writeNumber((BigInteger) n);",
      "right" : "jgen.writeNumber((BigInteger) n);",
      "info" : "ExpressionStatement[11251-11284]:ExpressionStatement[11251-11284]"
    }, {
      "left" : "if (n instanceof Long)",
      "right" : "if (n instanceof Long)",
      "info" : "IfStatement[11312-11612]:IfStatement[11312-11612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11335-11410]:Block[11335-11410]"
    }, {
      "left" : "jgen.writeNumber((Long) n);",
      "right" : "jgen.writeNumber((Long) n);",
      "info" : "ExpressionStatement[11361-11388]:ExpressionStatement[11361-11388]"
    }, {
      "left" : "if (n instanceof Short)",
      "right" : "if (n instanceof Short)",
      "info" : "IfStatement[11416-11612]:IfStatement[11416-11612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11440-11516]:Block[11440-11516]"
    }, {
      "left" : "jgen.writeNumber((Short) n);",
      "right" : "jgen.writeNumber((Short) n);",
      "info" : "ExpressionStatement[11466-11494]:ExpressionStatement[11466-11494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11522-11612]:Block[11522-11612]"
    }, {
      "left" : "jgen.writeNumber(((Number) n).intValue());",
      "right" : "jgen.writeNumber(((Number) n).intValue());",
      "info" : "ExpressionStatement[11548-11590]:ExpressionStatement[11548-11590]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11647-11653]:BreakStatement[11647-11653]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[11666-11690]:SwitchCase[11666-11690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11707-12530]:Block[11707-12530]"
    }, {
      "left" : "Object n = segment.get(ptr);",
      "right" : "Object n = segment.get(ptr);",
      "info" : "VariableDeclarationStatement[11729-11757]:VariableDeclarationStatement[11729-11757]"
    }, {
      "left" : "if (n instanceof Double)",
      "right" : "if (n instanceof Double)",
      "info" : "IfStatement[11778-12512]:IfStatement[11778-12512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11803-11896]:Block[11803-11896]"
    }, {
      "left" : "jgen.writeNumber(((Double) n).doubleValue());",
      "right" : "jgen.writeNumber(((Double) n).doubleValue());",
      "info" : "ExpressionStatement[11829-11874]:ExpressionStatement[11829-11874]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[11902-12512]:IfStatement[11902-12512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11931-12012]:Block[11931-12012]"
    }, {
      "left" : "jgen.writeNumber((BigDecimal) n);",
      "right" : "jgen.writeNumber((BigDecimal) n);",
      "info" : "ExpressionStatement[11957-11990]:ExpressionStatement[11957-11990]"
    }, {
      "left" : "if (n instanceof Float)",
      "right" : "if (n instanceof Float)",
      "info" : "IfStatement[12018-12512]:IfStatement[12018-12512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12042-12133]:Block[12042-12133]"
    }, {
      "left" : "jgen.writeNumber(((Float) n).floatValue());",
      "right" : "jgen.writeNumber(((Float) n).floatValue());",
      "info" : "ExpressionStatement[12068-12111]:ExpressionStatement[12068-12111]"
    }, {
      "left" : "if (n == null)",
      "right" : "if (n == null)",
      "info" : "IfStatement[12139-12512]:IfStatement[12139-12512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12154-12219]:Block[12154-12219]"
    }, {
      "left" : "jgen.writeNull();",
      "right" : "jgen.writeNull();",
      "info" : "ExpressionStatement[12180-12197]:ExpressionStatement[12180-12197]"
    }, {
      "left" : "if (n instanceof String)",
      "right" : "if (n instanceof String)",
      "info" : "IfStatement[12225-12512]:IfStatement[12225-12512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12250-12327]:Block[12250-12327]"
    }, {
      "left" : "jgen.writeNumber((String) n);",
      "right" : "jgen.writeNumber((String) n);",
      "info" : "ExpressionStatement[12276-12305]:ExpressionStatement[12276-12305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12333-12512]:Block[12333-12512]"
    }, {
      "left" : "throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");",
      "right" : "throw new JsonGenerationException(\"Unrecognized value type for VALUE_NUMBER_FLOAT: \"+n.getClass().getName()+\", can not serialize\");",
      "info" : "ThrowStatement[12359-12490]:ThrowStatement[12359-12490]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12547-12553]:BreakStatement[12547-12553]"
    }, {
      "left" : "case VALUE_TRUE:",
      "right" : "case VALUE_TRUE:",
      "info" : "SwitchCase[12566-12582]:SwitchCase[12566-12582]"
    }, {
      "left" : "jgen.writeBoolean(true);",
      "right" : "jgen.writeBoolean(true);",
      "info" : "ExpressionStatement[12599-12623]:ExpressionStatement[12599-12623]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12640-12646]:BreakStatement[12640-12646]"
    }, {
      "left" : "case VALUE_FALSE:",
      "right" : "case VALUE_FALSE:",
      "info" : "SwitchCase[12659-12676]:SwitchCase[12659-12676]"
    }, {
      "left" : "jgen.writeBoolean(false);",
      "right" : "jgen.writeBoolean(false);",
      "info" : "ExpressionStatement[12693-12718]:ExpressionStatement[12693-12718]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12735-12741]:BreakStatement[12735-12741]"
    }, {
      "left" : "case VALUE_NULL:",
      "right" : "case VALUE_NULL:",
      "info" : "SwitchCase[12754-12770]:SwitchCase[12754-12770]"
    }, {
      "left" : "jgen.writeNull();",
      "right" : "jgen.writeNull();",
      "info" : "ExpressionStatement[12787-12804]:ExpressionStatement[12787-12804]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12821-12827]:BreakStatement[12821-12827]"
    }, {
      "left" : "case VALUE_EMBEDDED_OBJECT:",
      "right" : "case VALUE_EMBEDDED_OBJECT:",
      "info" : "SwitchCase[12840-12867]:SwitchCase[12840-12867]"
    }, {
      "left" : "jgen.writeObject(segment.get(ptr));",
      "right" : "jgen.writeObject(segment.get(ptr));",
      "info" : "ExpressionStatement[12884-12919]:ExpressionStatement[12884-12919]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12936-12942]:BreakStatement[12936-12942]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[12955-12963]:SwitchCase[12955-12963]"
    }, {
      "left" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "right" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "info" : "ThrowStatement[12980-13069]:ThrowStatement[12980-13069]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13199-13205]:Modifier[13199-13205]"
    }, {
      "left" : "TokenBuffer",
      "right" : "TokenBuffer",
      "info" : "SimpleType[13206-13217]:SimpleType[13206-13217]"
    }, {
      "left" : "deserialize",
      "right" : "deserialize",
      "info" : "SimpleName[13218-13229]:SimpleName[13218-13229]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[13230-13243]:SingleVariableDeclaration[13230-13243]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[13245-13272]:SingleVariableDeclaration[13245-13272]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[13281-13292]:SimpleType[13281-13292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13297-13597]:Block[13364-13438]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[13311-13336]:ExpressionStatement[13378-13403]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13579-13591]:ReturnStatement[13416-13428]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13607-13616]:MarkerAnnotation[14078-14087]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[13621-13650]:SingleMemberAnnotation[14092-14121]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13655-13661]:Modifier[14126-14132]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[13662-13668]:SimpleType[14133-14139]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[13669-13677]:SimpleName[14140-14148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13684-15186]:Block[14155-15657]"
    }, {
      "left" : "final int MAX_COUNT = 100;",
      "right" : "final int MAX_COUNT = 100;",
      "info" : "VariableDeclarationStatement[13743-13769]:VariableDeclarationStatement[14214-14240]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[13779-13818]:VariableDeclarationStatement[14250-14289]"
    }, {
      "left" : "sb.append(\"[TokenBuffer: \");",
      "right" : "sb.append(\"[TokenBuffer: \");",
      "info" : "ExpressionStatement[13827-13855]:ExpressionStatement[14298-14326]"
    }, {
      "left" : "JsonParser jp = asParser();",
      "right" : "JsonParser jp = asParser();",
      "info" : "VariableDeclarationStatement[14026-14053]:VariableDeclarationStatement[14497-14524]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[14062-14076]:VariableDeclarationStatement[14533-14547]"
    }, {
      "left" : "final boolean hasNativeIds = _hasNativeTypeIds || _hasNativeObjectIds;",
      "right" : "final boolean hasNativeIds = _hasNativeTypeIds || _hasNativeObjectIds;",
      "info" : "VariableDeclarationStatement[14085-14155]:VariableDeclarationStatement[14556-14626]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[14165-14994]:WhileStatement[14636-15465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14178-14994]:Block[14649-15465]"
    }, {
      "left" : "JsonToken t;",
      "right" : "JsonToken t;",
      "info" : "VariableDeclarationStatement[14192-14204]:VariableDeclarationStatement[14663-14675]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[14217-14963]:TryStatement[14688-15434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14221-14847]:Block[14692-15318]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[14239-14258]:ExpressionStatement[14710-14729]"
    }, {
      "left" : "if (t == null)",
      "right" : "if (t == null)",
      "info" : "IfStatement[14275-14296]:IfStatement[14746-14767]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[14290-14296]:BreakStatement[14761-14767]"
    }, {
      "left" : "if (hasNativeIds)",
      "right" : "if (hasNativeIds)",
      "info" : "IfStatement[14314-14393]:IfStatement[14785-14864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14332-14393]:Block[14803-14864]"
    }, {
      "left" : "_appendNativeIds(sb);",
      "right" : "_appendNativeIds(sb);",
      "info" : "ExpressionStatement[14354-14375]:ExpressionStatement[14825-14846]"
    }, {
      "left" : "if (count < MAX_COUNT)",
      "right" : "if (count < MAX_COUNT)",
      "info" : "IfStatement[14435-14833]:IfStatement[14906-15304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14458-14833]:Block[14929-15304]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[14480-14559]:IfStatement[14951-15030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14495-14559]:Block[14966-15030]"
    }, {
      "left" : "sb.append(\", \");",
      "right" : "sb.append(\", \");",
      "info" : "ExpressionStatement[14521-14537]:ExpressionStatement[14992-15008]"
    }, {
      "left" : "sb.append(t.toString());",
      "right" : "sb.append(t.toString());",
      "info" : "ExpressionStatement[14580-14604]:ExpressionStatement[15051-15075]"
    }, {
      "left" : "if (t == JsonToken.FIELD_NAME)",
      "right" : "if (t == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[14625-14815]:IfStatement[15096-15286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14656-14815]:Block[15127-15286]"
    }, {
      "left" : "sb.append('(');",
      "right" : "sb.append('(');",
      "info" : "ExpressionStatement[14682-14697]:ExpressionStatement[15153-15168]"
    }, {
      "left" : "sb.append(jp.getCurrentName());",
      "right" : "sb.append(jp.getCurrentName());",
      "info" : "ExpressionStatement[14722-14753]:ExpressionStatement[15193-15224]"
    }, {
      "left" : "sb.append(')');",
      "right" : "sb.append(')');",
      "info" : "ExpressionStatement[14778-14793]:ExpressionStatement[15249-15264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14872-14963]:Block[15343-15434]"
    }, {
      "left" : "throw new IllegalStateException(ioe);",
      "right" : "throw new IllegalStateException(ioe);",
      "info" : "ThrowStatement[14912-14949]:ThrowStatement[15383-15420]"
    }, {
      "left" : "++count;",
      "right" : "++count;",
      "info" : "ExpressionStatement[14976-14984]:ExpressionStatement[15447-15455]"
    }, {
      "left" : "if (count >= MAX_COUNT)",
      "right" : "if (count >= MAX_COUNT)",
      "info" : "IfStatement[15004-15126]:IfStatement[15475-15597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15028-15126]:Block[15499-15597]"
    }, {
      "left" : "sb.append(\" ... (truncated \").append(count-MAX_COUNT).append(\" entries)\");",
      "right" : "sb.append(\" ... (truncated \").append(count-MAX_COUNT).append(\" entries)\");",
      "info" : "ExpressionStatement[15042-15116]:ExpressionStatement[15513-15587]"
    }, {
      "left" : "sb.append(']');",
      "right" : "sb.append(']');",
      "info" : "ExpressionStatement[15135-15150]:ExpressionStatement[15606-15621]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[15159-15180]:ReturnStatement[15630-15651]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[15192-15199]:Modifier[15663-15670]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[15200-15205]:Modifier[15671-15676]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15206-15210]:PrimitiveType[15677-15681]"
    }, {
      "left" : "_appendNativeIds",
      "right" : "_appendNativeIds",
      "info" : "SimpleName[15211-15227]:SimpleName[15682-15698]"
    }, {
      "left" : "StringBuilder sb",
      "right" : "StringBuilder sb",
      "info" : "SingleVariableDeclaration[15228-15244]:SingleVariableDeclaration[15699-15715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15250-15613]:Block[15721-16084]"
    }, {
      "left" : "Object objectId = _last.findObjectId(_appendAt-1);",
      "right" : "Object objectId = _last.findObjectId(_appendAt-1);",
      "info" : "VariableDeclarationStatement[15260-15310]:VariableDeclarationStatement[15731-15781]"
    }, {
      "left" : "if (objectId != null)",
      "right" : "if (objectId != null)",
      "info" : "IfStatement[15319-15434]:IfStatement[15790-15905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15341-15434]:Block[15812-15905]"
    }, {
      "left" : "sb.append(\"[objectId=\").append(String.valueOf(objectId)).append(']');",
      "right" : "sb.append(\"[objectId=\").append(String.valueOf(objectId)).append(']');",
      "info" : "ExpressionStatement[15355-15424]:ExpressionStatement[15826-15895]"
    }, {
      "left" : "Object typeId = _last.findTypeId(_appendAt-1);",
      "right" : "Object typeId = _last.findTypeId(_appendAt-1);",
      "info" : "VariableDeclarationStatement[15443-15489]:VariableDeclarationStatement[15914-15960]"
    }, {
      "left" : "if (typeId != null)",
      "right" : "if (typeId != null)",
      "info" : "IfStatement[15498-15607]:IfStatement[15969-16078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15518-15607]:Block[15989-16078]"
    }, {
      "left" : "sb.append(\"[typeId=\").append(String.valueOf(typeId)).append(']');",
      "right" : "sb.append(\"[typeId=\").append(String.valueOf(typeId)).append(']');",
      "info" : "ExpressionStatement[15532-15597]:ExpressionStatement[16003-16068]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15818-15827]:MarkerAnnotation[16289-16298]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15832-15838]:Modifier[16303-16309]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[15839-15852]:SimpleType[16310-16323]"
    }, {
      "left" : "enable",
      "right" : "enable",
      "info" : "SimpleName[15853-15859]:SimpleName[16324-16330]"
    }, {
      "left" : "Feature f",
      "right" : "Feature f",
      "info" : "SingleVariableDeclaration[15860-15869]:SingleVariableDeclaration[16331-16340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15871-15942]:Block[16342-16413]"
    }, {
      "left" : "_generatorFeatures |= f.getMask();",
      "right" : "_generatorFeatures |= f.getMask();",
      "info" : "ExpressionStatement[15881-15915]:ExpressionStatement[16352-16386]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15924-15936]:ReturnStatement[16395-16407]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15948-15957]:MarkerAnnotation[16419-16428]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15962-15968]:Modifier[16433-16439]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[15969-15982]:SimpleType[16440-16453]"
    }, {
      "left" : "disable",
      "right" : "disable",
      "info" : "SimpleName[15983-15990]:SimpleName[16454-16461]"
    }, {
      "left" : "Feature f",
      "right" : "Feature f",
      "info" : "SingleVariableDeclaration[15991-16000]:SingleVariableDeclaration[16462-16471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16002-16074]:Block[16473-16545]"
    }, {
      "left" : "_generatorFeatures &= ~f.getMask();",
      "right" : "_generatorFeatures &= ~f.getMask();",
      "info" : "ExpressionStatement[16012-16047]:ExpressionStatement[16483-16518]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16056-16068]:ReturnStatement[16527-16539]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16161-16170]:MarkerAnnotation[16632-16641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16175-16181]:Modifier[16646-16652]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[16182-16189]:PrimitiveType[16653-16660]"
    }, {
      "left" : "isEnabled",
      "right" : "isEnabled",
      "info" : "SimpleName[16190-16199]:SimpleName[16661-16670]"
    }, {
      "left" : "Feature f",
      "right" : "Feature f",
      "info" : "SingleVariableDeclaration[16200-16209]:SingleVariableDeclaration[16671-16680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16211-16274]:Block[16682-16745]"
    }, {
      "left" : "return (_generatorFeatures & f.getMask()) != 0;",
      "right" : "return (_generatorFeatures & f.getMask()) != 0;",
      "info" : "ReturnStatement[16221-16268]:ReturnStatement[16692-16739]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16280-16289]:MarkerAnnotation[16751-16760]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16294-16300]:Modifier[16765-16771]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[16301-16304]:PrimitiveType[16772-16775]"
    }, {
      "left" : "getFeatureMask",
      "right" : "getFeatureMask",
      "info" : "SimpleName[16305-16319]:SimpleName[16776-16790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16322-16364]:Block[16793-16835]"
    }, {
      "left" : "return _generatorFeatures;",
      "right" : "return _generatorFeatures;",
      "info" : "ReturnStatement[16332-16358]:ReturnStatement[16803-16829]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16370-16379]:MarkerAnnotation[16841-16850]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16384-16390]:Modifier[16855-16861]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[16391-16404]:SimpleType[16862-16875]"
    }, {
      "left" : "setFeatureMask",
      "right" : "setFeatureMask",
      "info" : "SimpleName[16405-16419]:SimpleName[16876-16890]"
    }, {
      "left" : "int mask",
      "right" : "int mask",
      "info" : "SingleVariableDeclaration[16420-16428]:SingleVariableDeclaration[16891-16899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16430-16493]:Block[16901-16964]"
    }, {
      "left" : "_generatorFeatures = mask;",
      "right" : "_generatorFeatures = mask;",
      "info" : "ExpressionStatement[16440-16466]:ExpressionStatement[16911-16937]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16475-16487]:ReturnStatement[16946-16958]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16503-16512]:MarkerAnnotation[16974-16983]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16517-16523]:Modifier[16988-16994]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[16524-16537]:SimpleType[16995-17008]"
    }, {
      "left" : "useDefaultPrettyPrinter",
      "right" : "useDefaultPrettyPrinter",
      "info" : "SimpleName[16538-16561]:SimpleName[17009-17032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16564-16626]:Block[17035-17097]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16608-16620]:ReturnStatement[17079-17091]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16632-16641]:MarkerAnnotation[17103-17112]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16646-16652]:Modifier[17117-17123]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[16653-16666]:SimpleType[17124-17137]"
    }, {
      "left" : "setCodec",
      "right" : "setCodec",
      "info" : "SimpleName[16667-16675]:SimpleName[17138-17146]"
    }, {
      "left" : "ObjectCodec oc",
      "right" : "ObjectCodec oc",
      "info" : "SingleVariableDeclaration[16676-16690]:SingleVariableDeclaration[17147-17161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16692-16747]:Block[17163-17218]"
    }, {
      "left" : "_objectCodec = oc;",
      "right" : "_objectCodec = oc;",
      "info" : "ExpressionStatement[16702-16720]:ExpressionStatement[17173-17191]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16729-16741]:ReturnStatement[17200-17212]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16753-16762]:MarkerAnnotation[17224-17233]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16767-16773]:Modifier[17238-17244]"
    }, {
      "left" : "ObjectCodec",
      "right" : "ObjectCodec",
      "info" : "SimpleType[16774-16785]:SimpleType[17245-17256]"
    }, {
      "left" : "getCodec",
      "right" : "getCodec",
      "info" : "SimpleName[16786-16794]:SimpleName[17257-17265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16797-16821]:Block[17268-17292]"
    }, {
      "left" : "return _objectCodec;",
      "right" : "return _objectCodec;",
      "info" : "ReturnStatement[16799-16819]:ReturnStatement[17270-17290]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16827-16836]:MarkerAnnotation[17298-17307]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16841-16847]:Modifier[17312-17318]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[16848-16853]:Modifier[17319-17324]"
    }, {
      "left" : "JsonWriteContext",
      "right" : "JsonWriteContext",
      "info" : "SimpleType[16854-16870]:SimpleType[17325-17341]"
    }, {
      "left" : "getOutputContext",
      "right" : "getOutputContext",
      "info" : "SimpleName[16871-16887]:SimpleName[17342-17358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16890-16915]:Block[17361-17386]"
    }, {
      "left" : "return _writeContext;",
      "right" : "return _writeContext;",
      "info" : "ReturnStatement[16892-16913]:ReturnStatement[17363-17384]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17211-17220]:MarkerAnnotation[17682-17691]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17225-17231]:Modifier[17696-17702]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[17232-17239]:PrimitiveType[17703-17710]"
    }, {
      "left" : "canWriteBinaryNatively",
      "right" : "canWriteBinaryNatively",
      "info" : "SimpleName[17240-17262]:SimpleName[17711-17733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17265-17293]:Block[17736-17764]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[17275-17287]:ReturnStatement[17746-17758]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17510-17519]:MarkerAnnotation[17981-17990]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17524-17530]:Modifier[17995-18001]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17531-17535]:PrimitiveType[18002-18006]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[17536-17541]:SimpleName[18007-18012]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17551-17562]:SimpleType[18022-18033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17563-17576]:Block[18034-18047]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17582-17591]:MarkerAnnotation[18053-18062]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17596-17602]:Modifier[18067-18073]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17603-17607]:PrimitiveType[18074-18078]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[17608-17613]:SimpleName[18079-18084]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17623-17634]:SimpleType[18094-18105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17635-17666]:Block[18106-18137]"
    }, {
      "left" : "_closed = true;",
      "right" : "_closed = true;",
      "info" : "ExpressionStatement[17645-17660]:ExpressionStatement[18116-18131]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17672-17681]:MarkerAnnotation[18143-18152]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17686-17692]:Modifier[18157-18163]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[17693-17700]:PrimitiveType[18164-18171]"
    }, {
      "left" : "isClosed",
      "right" : "isClosed",
      "info" : "SimpleName[17701-17709]:SimpleName[18172-18180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17712-17731]:Block[18183-18202]"
    }, {
      "left" : "return _closed;",
      "right" : "return _closed;",
      "info" : "ReturnStatement[17714-17729]:ReturnStatement[18185-18200]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17944-17953]:MarkerAnnotation[18415-18424]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17958-17964]:Modifier[18429-18435]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[17965-17970]:Modifier[18436-18441]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17971-17975]:PrimitiveType[18442-18446]"
    }, {
      "left" : "writeStartArray",
      "right" : "writeStartArray",
      "info" : "SimpleName[17976-17991]:SimpleName[18447-18462]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18009-18020]:SimpleType[18480-18491]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[18022-18045]:SimpleType[18493-18516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18050-18162]:Block[18521-18633]"
    }, {
      "left" : "_append(JsonToken.START_ARRAY);",
      "right" : "_append(JsonToken.START_ARRAY);",
      "info" : "ExpressionStatement[18060-18091]:ExpressionStatement[18531-18562]"
    }, {
      "left" : "_writeContext = _writeContext.createChildArrayContext();",
      "right" : "_writeContext = _writeContext.createChildArrayContext();",
      "info" : "ExpressionStatement[18100-18156]:ExpressionStatement[18571-18627]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18168-18177]:MarkerAnnotation[18639-18648]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18182-18188]:Modifier[18653-18659]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18189-18194]:Modifier[18660-18665]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18195-18199]:PrimitiveType[18666-18670]"
    }, {
      "left" : "writeEndArray",
      "right" : "writeEndArray",
      "info" : "SimpleName[18200-18213]:SimpleName[18671-18684]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18231-18242]:SimpleType[18702-18713]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[18244-18267]:SimpleType[18715-18738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18272-18517]:Block[18743-18988]"
    }, {
      "left" : "_append(JsonToken.END_ARRAY);",
      "right" : "_append(JsonToken.END_ARRAY);",
      "info" : "ExpressionStatement[18282-18311]:ExpressionStatement[18753-18782]"
    }, {
      "left" : "JsonWriteContext c = _writeContext.getParent();",
      "right" : "JsonWriteContext c = _writeContext.getParent();",
      "info" : "VariableDeclarationStatement[18398-18445]:VariableDeclarationStatement[18869-18916]"
    }, {
      "left" : "if (c != null)",
      "right" : "if (c != null)",
      "info" : "IfStatement[18454-18511]:IfStatement[18925-18982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18469-18511]:Block[18940-18982]"
    }, {
      "left" : "_writeContext = c;",
      "right" : "_writeContext = c;",
      "info" : "ExpressionStatement[18483-18501]:ExpressionStatement[18954-18972]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18523-18532]:MarkerAnnotation[18994-19003]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18537-18543]:Modifier[19008-19014]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18544-18549]:Modifier[19015-19020]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18550-18554]:PrimitiveType[19021-19025]"
    }, {
      "left" : "writeStartObject",
      "right" : "writeStartObject",
      "info" : "SimpleName[18555-18571]:SimpleName[19026-19042]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18589-18600]:SimpleType[19060-19071]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[18602-18625]:SimpleType[19073-19096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18630-18744]:Block[19101-19215]"
    }, {
      "left" : "_append(JsonToken.START_OBJECT);",
      "right" : "_append(JsonToken.START_OBJECT);",
      "info" : "ExpressionStatement[18640-18672]:ExpressionStatement[19111-19143]"
    }, {
      "left" : "_writeContext = _writeContext.createChildObjectContext();",
      "right" : "_writeContext = _writeContext.createChildObjectContext();",
      "info" : "ExpressionStatement[18681-18738]:ExpressionStatement[19152-19209]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18750-18759]:MarkerAnnotation[19221-19230]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18764-18770]:Modifier[19235-19241]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18771-18776]:Modifier[19242-19247]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18777-18781]:PrimitiveType[19248-19252]"
    }, {
      "left" : "writeEndObject",
      "right" : "writeEndObject",
      "info" : "SimpleName[18782-18796]:SimpleName[19253-19267]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18814-18825]:SimpleType[19285-19296]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[18827-18850]:SimpleType[19298-19321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18855-19101]:Block[19326-19572]"
    }, {
      "left" : "_append(JsonToken.END_OBJECT);",
      "right" : "_append(JsonToken.END_OBJECT);",
      "info" : "ExpressionStatement[18865-18895]:ExpressionStatement[19336-19366]"
    }, {
      "left" : "JsonWriteContext c = _writeContext.getParent();",
      "right" : "JsonWriteContext c = _writeContext.getParent();",
      "info" : "VariableDeclarationStatement[18982-19029]:VariableDeclarationStatement[19453-19500]"
    }, {
      "left" : "if (c != null)",
      "right" : "if (c != null)",
      "info" : "IfStatement[19038-19095]:IfStatement[19509-19566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19053-19095]:Block[19524-19566]"
    }, {
      "left" : "_writeContext = c;",
      "right" : "_writeContext = c;",
      "info" : "ExpressionStatement[19067-19085]:ExpressionStatement[19538-19556]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19107-19116]:MarkerAnnotation[19578-19587]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19121-19127]:Modifier[19592-19598]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[19128-19133]:Modifier[19599-19604]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19134-19138]:PrimitiveType[19605-19609]"
    }, {
      "left" : "writeFieldName",
      "right" : "writeFieldName",
      "info" : "SimpleName[19139-19153]:SimpleName[19610-19624]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[19154-19165]:SingleVariableDeclaration[19625-19636]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19182-19193]:SimpleType[19653-19664]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[19195-19218]:SimpleType[19666-19689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19223-19319]:Block[19694-19790]"
    }, {
      "left" : "_append(JsonToken.FIELD_NAME, name);",
      "right" : "_append(JsonToken.FIELD_NAME, name);",
      "info" : "ExpressionStatement[19233-19269]:ExpressionStatement[19704-19740]"
    }, {
      "left" : "_writeContext.writeFieldName(name);",
      "right" : "_writeContext.writeFieldName(name);",
      "info" : "ExpressionStatement[19278-19313]:ExpressionStatement[19749-19784]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19325-19334]:MarkerAnnotation[19796-19805]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19339-19345]:Modifier[19810-19816]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19346-19350]:PrimitiveType[19817-19821]"
    }, {
      "left" : "writeFieldName",
      "right" : "writeFieldName",
      "info" : "SimpleName[19351-19365]:SimpleName[19822-19836]"
    }, {
      "left" : "SerializableString name",
      "right" : "SerializableString name",
      "info" : "SingleVariableDeclaration[19366-19389]:SingleVariableDeclaration[19837-19860]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19406-19417]:SimpleType[19877-19888]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[19419-19442]:SimpleType[19890-19913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19447-19554]:Block[19918-20025]"
    }, {
      "left" : "_append(JsonToken.FIELD_NAME, name);",
      "right" : "_append(JsonToken.FIELD_NAME, name);",
      "info" : "ExpressionStatement[19457-19493]:ExpressionStatement[19928-19964]"
    }, {
      "left" : "_writeContext.writeFieldName(name.getValue());",
      "right" : "_writeContext.writeFieldName(name.getValue());",
      "info" : "ExpressionStatement[19502-19548]:ExpressionStatement[19973-20019]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19768-19777]:MarkerAnnotation[20239-20248]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19782-19788]:Modifier[20253-20259]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19789-19793]:PrimitiveType[20260-20264]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[19794-19805]:SimpleName[20265-20276]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[19806-19817]:SingleVariableDeclaration[20277-20288]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19826-19837]:SimpleType[20297-20308]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[19838-19861]:SimpleType[20309-20332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19862-20000]:Block[20333-20471]"
    }, {
      "left" : "if (text == null)",
      "right" : "if (text == null)",
      "info" : "IfStatement[19872-19994]:IfStatement[20343-20465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19890-19926]:Block[20361-20397]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[19904-19916]:ExpressionStatement[20375-20387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19932-19994]:Block[20403-20465]"
    }, {
      "left" : "_append(JsonToken.VALUE_STRING, text);",
      "right" : "_append(JsonToken.VALUE_STRING, text);",
      "info" : "ExpressionStatement[19946-19984]:ExpressionStatement[20417-20455]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20006-20015]:MarkerAnnotation[20477-20486]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20020-20026]:Modifier[20491-20497]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20027-20031]:PrimitiveType[20498-20502]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[20032-20043]:SimpleName[20503-20514]"
    }, {
      "left" : "char[] text",
      "right" : "char[] text",
      "info" : "SingleVariableDeclaration[20044-20055]:SingleVariableDeclaration[20515-20526]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[20057-20067]:SingleVariableDeclaration[20528-20538]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[20069-20076]:SingleVariableDeclaration[20540-20547]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20085-20096]:SimpleType[20556-20567]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[20098-20121]:SimpleType[20569-20592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20122-20181]:Block[20593-20652]"
    }, {
      "left" : "writeString(new String(text, offset, len));",
      "right" : "writeString(new String(text, offset, len));",
      "info" : "ExpressionStatement[20132-20175]:ExpressionStatement[20603-20646]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20187-20196]:MarkerAnnotation[20658-20667]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20201-20207]:Modifier[20672-20678]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20208-20212]:PrimitiveType[20679-20683]"
    }, {
      "left" : "writeString",
      "right" : "writeString",
      "info" : "SimpleName[20213-20224]:SimpleName[20684-20695]"
    }, {
      "left" : "SerializableString text",
      "right" : "SerializableString text",
      "info" : "SingleVariableDeclaration[20225-20248]:SingleVariableDeclaration[20696-20719]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20257-20268]:SimpleType[20728-20739]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[20270-20293]:SimpleType[20741-20764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20294-20432]:Block[20765-20903]"
    }, {
      "left" : "if (text == null)",
      "right" : "if (text == null)",
      "info" : "IfStatement[20304-20426]:IfStatement[20775-20897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20322-20358]:Block[20793-20829]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[20336-20348]:ExpressionStatement[20807-20819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20364-20426]:Block[20835-20897]"
    }, {
      "left" : "_append(JsonToken.VALUE_STRING, text);",
      "right" : "_append(JsonToken.VALUE_STRING, text);",
      "info" : "ExpressionStatement[20378-20416]:ExpressionStatement[20849-20887]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20442-20451]:MarkerAnnotation[20913-20922]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20456-20462]:Modifier[20927-20933]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20463-20467]:PrimitiveType[20934-20938]"
    }, {
      "left" : "writeRawUTF8String",
      "right" : "writeRawUTF8String",
      "info" : "SimpleName[20468-20486]:SimpleName[20939-20957]"
    }, {
      "left" : "byte[] text",
      "right" : "byte[] text",
      "info" : "SingleVariableDeclaration[20487-20498]:SingleVariableDeclaration[20958-20969]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[20500-20510]:SingleVariableDeclaration[20971-20981]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[20512-20522]:SingleVariableDeclaration[20983-20993]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20539-20550]:SimpleType[21010-21021]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[20552-20575]:SimpleType[21023-21046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20580-20693]:Block[21051-21164]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[20657-20687]:ExpressionStatement[21128-21158]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20699-20708]:MarkerAnnotation[21170-21179]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20713-20719]:Modifier[21184-21190]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20720-20724]:PrimitiveType[21191-21195]"
    }, {
      "left" : "writeUTF8String",
      "right" : "writeUTF8String",
      "info" : "SimpleName[20725-20740]:SimpleName[21196-21211]"
    }, {
      "left" : "byte[] text",
      "right" : "byte[] text",
      "info" : "SingleVariableDeclaration[20741-20752]:SingleVariableDeclaration[21212-21223]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[20754-20764]:SingleVariableDeclaration[21225-21235]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[20766-20776]:SingleVariableDeclaration[21237-21247]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[20793-20804]:SimpleType[21264-21275]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[20806-20829]:SimpleType[21277-21300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20834-20947]:Block[21305-21418]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[20911-20941]:ExpressionStatement[21382-21412]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20953-20962]:MarkerAnnotation[21424-21433]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20967-20973]:Modifier[21438-21444]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20974-20978]:PrimitiveType[21445-21449]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[20979-20987]:SimpleName[21450-21458]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[20988-20999]:SingleVariableDeclaration[21459-21470]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21008-21019]:SimpleType[21479-21490]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21021-21044]:SimpleType[21492-21515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21045-21091]:Block[21516-21562]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21055-21085]:ExpressionStatement[21526-21556]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21097-21106]:MarkerAnnotation[21568-21577]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21111-21117]:Modifier[21582-21588]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21118-21122]:PrimitiveType[21589-21593]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[21123-21131]:SimpleName[21594-21602]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[21132-21143]:SingleVariableDeclaration[21603-21614]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[21145-21155]:SingleVariableDeclaration[21616-21626]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[21157-21164]:SingleVariableDeclaration[21628-21635]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21173-21184]:SimpleType[21644-21655]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21186-21209]:SimpleType[21657-21680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21210-21256]:Block[21681-21727]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21220-21250]:ExpressionStatement[21691-21721]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21262-21271]:MarkerAnnotation[21733-21742]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21276-21282]:Modifier[21747-21753]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21283-21287]:PrimitiveType[21754-21758]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[21288-21296]:SimpleName[21759-21767]"
    }, {
      "left" : "SerializableString text",
      "right" : "SerializableString text",
      "info" : "SingleVariableDeclaration[21297-21320]:SingleVariableDeclaration[21768-21791]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21329-21340]:SimpleType[21800-21811]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21342-21365]:SimpleType[21813-21836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21366-21412]:Block[21837-21883]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21376-21406]:ExpressionStatement[21847-21877]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21422-21431]:MarkerAnnotation[21893-21902]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21436-21442]:Modifier[21907-21913]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21443-21447]:PrimitiveType[21914-21918]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[21448-21456]:SimpleName[21919-21927]"
    }, {
      "left" : "char[] text",
      "right" : "char[] text",
      "info" : "SingleVariableDeclaration[21457-21468]:SingleVariableDeclaration[21928-21939]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[21470-21480]:SingleVariableDeclaration[21941-21951]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[21482-21489]:SingleVariableDeclaration[21953-21960]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21498-21509]:SimpleType[21969-21980]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21511-21534]:SimpleType[21982-22005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21535-21581]:Block[22006-22052]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21545-21575]:ExpressionStatement[22016-22046]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21587-21596]:MarkerAnnotation[22058-22067]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21601-21607]:Modifier[22072-22078]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21608-21612]:PrimitiveType[22079-22083]"
    }, {
      "left" : "writeRaw",
      "right" : "writeRaw",
      "info" : "SimpleName[21613-21621]:SimpleName[22084-22092]"
    }, {
      "left" : "char c",
      "right" : "char c",
      "info" : "SingleVariableDeclaration[21622-21628]:SingleVariableDeclaration[22093-22099]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21637-21648]:SimpleType[22108-22119]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21650-21673]:SimpleType[22121-22144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21674-21720]:Block[22145-22191]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21684-21714]:ExpressionStatement[22155-22185]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21726-21735]:MarkerAnnotation[22197-22206]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21740-21746]:Modifier[22211-22217]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21747-21751]:PrimitiveType[22218-22222]"
    }, {
      "left" : "writeRawValue",
      "right" : "writeRawValue",
      "info" : "SimpleName[21752-21765]:SimpleName[22223-22236]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[21766-21777]:SingleVariableDeclaration[22237-22248]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21786-21797]:SimpleType[22257-22268]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21799-21822]:SimpleType[22270-22293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21823-21869]:Block[22294-22340]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[21833-21863]:ExpressionStatement[22304-22334]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21875-21884]:MarkerAnnotation[22346-22355]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21889-21895]:Modifier[22360-22366]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21896-21900]:PrimitiveType[22367-22371]"
    }, {
      "left" : "writeRawValue",
      "right" : "writeRawValue",
      "info" : "SimpleName[21901-21914]:SimpleName[22372-22385]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[21915-21926]:SingleVariableDeclaration[22386-22397]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[21928-21938]:SingleVariableDeclaration[22399-22409]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[21940-21947]:SingleVariableDeclaration[22411-22418]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[21956-21967]:SimpleType[22427-22438]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[21969-21992]:SimpleType[22440-22463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21993-22039]:Block[22464-22510]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[22003-22033]:ExpressionStatement[22474-22504]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22045-22054]:MarkerAnnotation[22516-22525]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22059-22065]:Modifier[22530-22536]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22066-22070]:PrimitiveType[22537-22541]"
    }, {
      "left" : "writeRawValue",
      "right" : "writeRawValue",
      "info" : "SimpleName[22071-22084]:SimpleName[22542-22555]"
    }, {
      "left" : "char[] text",
      "right" : "char[] text",
      "info" : "SingleVariableDeclaration[22085-22096]:SingleVariableDeclaration[22556-22567]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[22098-22108]:SingleVariableDeclaration[22569-22579]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[22110-22117]:SingleVariableDeclaration[22581-22588]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22126-22137]:SimpleType[22597-22608]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[22139-22162]:SimpleType[22610-22633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22163-22209]:Block[22634-22680]"
    }, {
      "left" : "_reportUnsupportedOperation();",
      "right" : "_reportUnsupportedOperation();",
      "info" : "ExpressionStatement[22173-22203]:ExpressionStatement[22644-22674]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22427-22436]:MarkerAnnotation[22898-22907]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22441-22447]:Modifier[22912-22918]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22448-22452]:PrimitiveType[22919-22923]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[22453-22464]:SimpleName[22924-22935]"
    }, {
      "left" : "short i",
      "right" : "short i",
      "info" : "SingleVariableDeclaration[22465-22472]:SingleVariableDeclaration[22936-22943]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22481-22492]:SimpleType[22952-22963]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[22494-22517]:SimpleType[22965-22988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22518-22588]:Block[22989-23059]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, Short.valueOf(i));",
      "info" : "ExpressionStatement[22528-22582]:ExpressionStatement[22999-23053]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22594-22603]:MarkerAnnotation[23065-23074]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22608-22614]:Modifier[23079-23085]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22615-22619]:PrimitiveType[23086-23090]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[22620-22631]:SimpleName[23091-23102]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[22632-22637]:SingleVariableDeclaration[23103-23108]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22646-22657]:SimpleType[23117-23128]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[22659-22682]:SimpleType[23130-23153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22683-22755]:Block[23154-23226]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));",
      "info" : "ExpressionStatement[22693-22749]:ExpressionStatement[23164-23220]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22761-22770]:MarkerAnnotation[23232-23241]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22775-22781]:Modifier[23246-23252]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22782-22786]:PrimitiveType[23253-23257]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[22787-22798]:SimpleName[23258-23269]"
    }, {
      "left" : "long l",
      "right" : "long l",
      "info" : "SingleVariableDeclaration[22799-22805]:SingleVariableDeclaration[23270-23276]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22814-22825]:SimpleType[23285-23296]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[22827-22850]:SimpleType[23298-23321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22851-22920]:Block[23322-23391]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));",
      "info" : "ExpressionStatement[22861-22914]:ExpressionStatement[23332-23385]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22926-22935]:MarkerAnnotation[23397-23406]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22940-22946]:Modifier[23411-23417]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22947-22951]:PrimitiveType[23418-23422]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[22952-22963]:SimpleName[23423-23434]"
    }, {
      "left" : "double d",
      "right" : "double d",
      "info" : "SingleVariableDeclaration[22964-22972]:SingleVariableDeclaration[23435-23443]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[22981-22992]:SimpleType[23452-23463]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[22993-23016]:SimpleType[23464-23487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23017-23090]:Block[23488-23561]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));",
      "info" : "ExpressionStatement[23027-23084]:ExpressionStatement[23498-23555]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23096-23105]:MarkerAnnotation[23567-23576]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23110-23116]:Modifier[23581-23587]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23117-23121]:PrimitiveType[23588-23592]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23122-23133]:SimpleName[23593-23604]"
    }, {
      "left" : "float f",
      "right" : "float f",
      "info" : "SingleVariableDeclaration[23134-23141]:SingleVariableDeclaration[23605-23612]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23150-23161]:SimpleType[23621-23632]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[23163-23186]:SimpleType[23634-23657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23187-23259]:Block[23658-23730]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));",
      "info" : "ExpressionStatement[23197-23253]:ExpressionStatement[23668-23724]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23265-23274]:MarkerAnnotation[23736-23745]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23279-23285]:Modifier[23750-23756]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23286-23290]:PrimitiveType[23757-23761]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23291-23302]:SimpleName[23762-23773]"
    }, {
      "left" : "BigDecimal dec",
      "right" : "BigDecimal dec",
      "info" : "SingleVariableDeclaration[23303-23317]:SingleVariableDeclaration[23774-23788]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23326-23337]:SimpleType[23797-23808]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[23338-23361]:SimpleType[23809-23832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23362-23504]:Block[23833-23975]"
    }, {
      "left" : "if (dec == null)",
      "right" : "if (dec == null)",
      "info" : "IfStatement[23372-23498]:IfStatement[23843-23969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23389-23425]:Block[23860-23896]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[23403-23415]:ExpressionStatement[23874-23886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23431-23498]:Block[23902-23969]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, dec);",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, dec);",
      "info" : "ExpressionStatement[23445-23488]:ExpressionStatement[23916-23959]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23510-23519]:MarkerAnnotation[23981-23990]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23524-23530]:Modifier[23995-24001]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23531-23535]:PrimitiveType[24002-24006]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23536-23547]:SimpleName[24007-24018]"
    }, {
      "left" : "BigInteger v",
      "right" : "BigInteger v",
      "info" : "SingleVariableDeclaration[23548-23560]:SingleVariableDeclaration[24019-24031]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23569-23580]:SimpleType[24040-24051]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[23582-23605]:SimpleType[24053-24076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23606-23742]:Block[24077-24213]"
    }, {
      "left" : "if (v == null)",
      "right" : "if (v == null)",
      "info" : "IfStatement[23616-23736]:IfStatement[24087-24207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23631-23667]:Block[24102-24138]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[23645-23657]:ExpressionStatement[24116-24128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23673-23736]:Block[24144-24207]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_INT, v);",
      "right" : "_append(JsonToken.VALUE_NUMBER_INT, v);",
      "info" : "ExpressionStatement[23687-23726]:ExpressionStatement[24158-24197]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23748-23757]:MarkerAnnotation[24219-24228]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23762-23768]:Modifier[24233-24239]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23769-23773]:PrimitiveType[24240-24244]"
    }, {
      "left" : "writeNumber",
      "right" : "writeNumber",
      "info" : "SimpleName[23774-23785]:SimpleName[24245-24256]"
    }, {
      "left" : "String encodedValue",
      "right" : "String encodedValue",
      "info" : "SingleVariableDeclaration[23786-23805]:SingleVariableDeclaration[24257-24276]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[23814-23825]:SimpleType[24285-24296]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[23827-23850]:SimpleType[24298-24321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23851-24059]:Block[24322-24530]"
    }, {
      "left" : "_append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);",
      "right" : "_append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);",
      "info" : "ExpressionStatement[24001-24053]:ExpressionStatement[24472-24524]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24065-24074]:MarkerAnnotation[24536-24545]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24079-24085]:Modifier[24550-24556]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24086-24090]:PrimitiveType[24557-24561]"
    }, {
      "left" : "writeBoolean",
      "right" : "writeBoolean",
      "info" : "SimpleName[24091-24103]:SimpleName[24562-24574]"
    }, {
      "left" : "boolean state",
      "right" : "boolean state",
      "info" : "SingleVariableDeclaration[24104-24117]:SingleVariableDeclaration[24575-24588]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24126-24137]:SimpleType[24597-24608]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[24138-24161]:SimpleType[24609-24632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24162-24240]:Block[24633-24711]"
    }, {
      "left" : "_append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);",
      "right" : "_append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);",
      "info" : "ExpressionStatement[24172-24234]:ExpressionStatement[24643-24705]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24246-24255]:MarkerAnnotation[24717-24726]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24260-24266]:Modifier[24731-24737]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24267-24271]:PrimitiveType[24738-24742]"
    }, {
      "left" : "writeNull",
      "right" : "writeNull",
      "info" : "SimpleName[24272-24281]:SimpleName[24743-24752]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24291-24302]:SimpleType[24762-24773]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[24304-24327]:SimpleType[24775-24798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24328-24374]:Block[24799-24845]"
    }, {
      "left" : "_append(JsonToken.VALUE_NULL);",
      "right" : "_append(JsonToken.VALUE_NULL);",
      "info" : "ExpressionStatement[24338-24368]:ExpressionStatement[24809-24839]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24593-24602]:MarkerAnnotation[25064-25073]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24607-24613]:Modifier[25078-25084]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24614-24618]:PrimitiveType[25085-25089]"
    }, {
      "left" : "writeObject",
      "right" : "writeObject",
      "info" : "SimpleName[24619-24630]:SimpleName[25090-25101]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[24631-24643]:SingleVariableDeclaration[25102-25114]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[24652-24663]:SimpleType[25123-25134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24668-25362]:Block[25139-25833]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[24678-24753]:IfStatement[25149-25224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24697-24753]:Block[25168-25224]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[24711-24723]:ExpressionStatement[25182-25194]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[24736-24743]:ReturnStatement[25207-25214]"
    }, {
      "left" : "Class<?> raw = value.getClass();",
      "right" : "Class<?> raw = value.getClass();",
      "info" : "VariableDeclarationStatement[24762-24794]:VariableDeclarationStatement[25233-25265]"
    }, {
      "left" : "if (raw == byte[].class)",
      "right" : "if (raw == byte[].class)",
      "info" : "IfStatement[24803-25356]:IfStatement[25274-25827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24828-24920]:Block[25299-25391]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "info" : "ExpressionStatement[24842-24890]:ExpressionStatement[25313-25361]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[24903-24910]:ReturnStatement[25374-25381]"
    }, {
      "left" : "if (_objectCodec == null)",
      "right" : "if (_objectCodec == null)",
      "info" : "IfStatement[24926-25356]:IfStatement[25397-25827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24952-25289]:Block[25423-25760]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, value);",
      "info" : "ExpressionStatement[25231-25279]:ExpressionStatement[25702-25750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25295-25356]:Block[25766-25827]"
    }, {
      "left" : "_objectCodec.writeValue(this, value);",
      "right" : "_objectCodec.writeValue(this, value);",
      "info" : "ExpressionStatement[25309-25346]:ExpressionStatement[25780-25817]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25368-25377]:MarkerAnnotation[25839-25848]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25382-25388]:Modifier[25853-25859]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25389-25393]:PrimitiveType[25860-25864]"
    }, {
      "left" : "writeTree",
      "right" : "writeTree",
      "info" : "SimpleName[25394-25403]:SimpleName[25865-25874]"
    }, {
      "left" : "TreeNode node",
      "right" : "TreeNode node",
      "info" : "SingleVariableDeclaration[25404-25417]:SingleVariableDeclaration[25875-25888]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[25426-25437]:SimpleType[25897-25908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25442-25763]:Block[25913-26234]"
    }, {
      "left" : "if (node == null)",
      "right" : "if (node == null)",
      "info" : "IfStatement[25452-25526]:IfStatement[25923-25997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25470-25526]:Block[25941-25997]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[25484-25496]:ExpressionStatement[25955-25967]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[25509-25516]:ReturnStatement[25980-25987]"
    }, {
      "left" : "if (_objectCodec == null)",
      "right" : "if (_objectCodec == null)",
      "info" : "IfStatement[25536-25757]:IfStatement[26007-26228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25562-25692]:Block[26033-26163]"
    }, {
      "left" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, node);",
      "right" : "_append(JsonToken.VALUE_EMBEDDED_OBJECT, node);",
      "info" : "ExpressionStatement[25635-25682]:ExpressionStatement[26106-26153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25698-25757]:Block[26169-26228]"
    }, {
      "left" : "_objectCodec.writeTree(this, node);",
      "right" : "_objectCodec.writeTree(this, node);",
      "info" : "ExpressionStatement[25712-25747]:ExpressionStatement[26183-26218]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25959-25968]:MarkerAnnotation[26430-26439]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25973-25979]:Modifier[26444-26450]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25980-25984]:PrimitiveType[26451-26455]"
    }, {
      "left" : "writeBinary",
      "right" : "writeBinary",
      "info" : "SimpleName[25985-25996]:SimpleName[26456-26467]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[25997-26021]:SingleVariableDeclaration[26468-26492]"
    }, {
      "left" : "byte[] data",
      "right" : "byte[] data",
      "info" : "SingleVariableDeclaration[26023-26034]:SingleVariableDeclaration[26494-26505]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[26036-26046]:SingleVariableDeclaration[26507-26517]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[26048-26055]:SingleVariableDeclaration[26519-26526]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[26072-26083]:SimpleType[26543-26554]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[26085-26108]:SimpleType[26556-26579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26113-26581]:Block[26584-27052]"
    }, {
      "left" : "byte[] copy = new byte[len];",
      "right" : "byte[] copy = new byte[len];",
      "info" : "VariableDeclarationStatement[26466-26494]:VariableDeclarationStatement[26937-26965]"
    }, {
      "left" : "System.arraycopy(data, offset, copy, 0, len);",
      "right" : "System.arraycopy(data, offset, copy, 0, len);",
      "info" : "ExpressionStatement[26503-26548]:ExpressionStatement[26974-27019]"
    }, {
      "left" : "writeObject(copy);",
      "right" : "writeObject(copy);",
      "info" : "ExpressionStatement[26557-26575]:ExpressionStatement[27028-27046]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26871-26880]:MarkerAnnotation[27342-27351]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26885-26891]:Modifier[27356-27362]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[26892-26895]:PrimitiveType[27363-27366]"
    }, {
      "left" : "writeBinary",
      "right" : "writeBinary",
      "info" : "SimpleName[26896-26907]:SimpleName[27367-27378]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[26908-26932]:SingleVariableDeclaration[27379-27403]"
    }, {
      "left" : "InputStream data",
      "right" : "InputStream data",
      "info" : "SingleVariableDeclaration[26934-26950]:SingleVariableDeclaration[27405-27421]"
    }, {
      "left" : "int dataLength",
      "right" : "int dataLength",
      "info" : "SingleVariableDeclaration[26952-26966]:SingleVariableDeclaration[27423-27437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26968-27026]:Block[27439-27497]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[26978-27020]:ThrowStatement[27449-27491]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27226-27235]:MarkerAnnotation[27697-27706]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27240-27246]:Modifier[27711-27717]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[27247-27254]:PrimitiveType[27718-27725]"
    }, {
      "left" : "canWriteTypeId",
      "right" : "canWriteTypeId",
      "info" : "SimpleName[27255-27269]:SimpleName[27726-27740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27272-27313]:Block[27743-27784]"
    }, {
      "left" : "return _hasNativeTypeIds;",
      "right" : "return _hasNativeTypeIds;",
      "info" : "ReturnStatement[27282-27307]:ReturnStatement[27753-27778]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27319-27328]:MarkerAnnotation[27790-27799]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27333-27339]:Modifier[27804-27810]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[27340-27347]:PrimitiveType[27811-27818]"
    }, {
      "left" : "canWriteObjectId",
      "right" : "canWriteObjectId",
      "info" : "SimpleName[27348-27364]:SimpleName[27819-27835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27367-27410]:Block[27838-27881]"
    }, {
      "left" : "return _hasNativeObjectIds;",
      "right" : "return _hasNativeObjectIds;",
      "info" : "ReturnStatement[27377-27404]:ReturnStatement[27848-27875]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27420-27429]:MarkerAnnotation[27891-27900]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27434-27440]:Modifier[27905-27911]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27441-27445]:PrimitiveType[27912-27916]"
    }, {
      "left" : "writeTypeId",
      "right" : "writeTypeId",
      "info" : "SimpleName[27446-27457]:SimpleName[27917-27928]"
    }, {
      "left" : "Object id",
      "right" : "Object id",
      "info" : "SingleVariableDeclaration[27458-27467]:SingleVariableDeclaration[27929-27938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27469-27527]:Block[27940-27998]"
    }, {
      "left" : "_typeId = id;",
      "right" : "_typeId = id;",
      "info" : "ExpressionStatement[27479-27492]:ExpressionStatement[27950-27963]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[27501-27521]:ExpressionStatement[27972-27992]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27537-27546]:MarkerAnnotation[28008-28017]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27551-27557]:Modifier[28022-28028]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27558-27562]:PrimitiveType[28029-28033]"
    }, {
      "left" : "writeObjectId",
      "right" : "writeObjectId",
      "info" : "SimpleName[27563-27576]:SimpleName[28034-28047]"
    }, {
      "left" : "Object id",
      "right" : "Object id",
      "info" : "SingleVariableDeclaration[27577-27586]:SingleVariableDeclaration[28048-28057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27588-27648]:Block[28059-28119]"
    }, {
      "left" : "_objectId = id;",
      "right" : "_objectId = id;",
      "info" : "ExpressionStatement[27598-27613]:ExpressionStatement[28069-28084]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[27622-27642]:ExpressionStatement[28093-28113]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27853-27862]:MarkerAnnotation[28324-28333]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27867-27873]:Modifier[28338-28344]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27874-27878]:PrimitiveType[28345-28349]"
    }, {
      "left" : "copyCurrentEvent",
      "right" : "copyCurrentEvent",
      "info" : "SimpleName[27879-27895]:SimpleName[28350-28366]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[27896-27909]:SingleVariableDeclaration[28367-28380]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[27918-27929]:SimpleType[28389-28400]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[27931-27954]:SimpleType[28402-28425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27959-29943]:Block[28430-30414]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[27969-28036]:IfStatement[28440-28507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27992-28036]:Block[28463-28507]"
    }, {
      "left" : "_checkNativeIds(jp);",
      "right" : "_checkNativeIds(jp);",
      "info" : "ExpressionStatement[28006-28026]:ExpressionStatement[28477-28497]"
    }, {
      "left" : "switch (jp.getCurrentToken()) {\n        case START_OBJECT:\n            writeStartObject();\n            break;\n        case END_OBJECT:\n            writeEndObject();\n            break;\n        case START_ARRAY:\n            writeStartArray();\n            break;\n        case END_ARRAY:\n            writeEndArray();\n            break;\n        case FIELD_NAME:\n            writeFieldName(jp.getCurrentName());\n            break;\n        case VALUE_STRING:\n            if (jp.hasTextCharacters()) {\n                writeString(jp.getTextCharacters(), jp.getTextOffset(), jp.getTextLength());\n            } else {\n                writeString(jp.getText());\n            }\n            break;\n        case VALUE_NUMBER_INT:\n            switch (jp.getNumberType()) {\n            case INT:\n                writeNumber(jp.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(jp.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(jp.getLongValue());\n            }\n            break;\n        case VALUE_NUMBER_FLOAT:\n            switch (jp.getNumberType()) {\n            case BIG_DECIMAL:\n                writeNumber(jp.getDecimalValue());\n                break;\n            case FLOAT:\n                writeNumber(jp.getFloatValue());\n                break;\n            default:\n                writeNumber(jp.getDoubleValue());\n            }\n            break;\n        case VALUE_TRUE:\n            writeBoolean(true);\n            break;\n        case VALUE_FALSE:\n            writeBoolean(false);\n            break;\n        case VALUE_NULL:\n            writeNull();\n            break;\n        case VALUE_EMBEDDED_OBJECT:\n            writeObject(jp.getEmbeddedObject());\n            break;\n        default:\n            throw new RuntimeException(\"Internal error: should never end up through this code path\");\n        }",
      "right" : "switch (jp.getCurrentToken()) {\n        case START_OBJECT:\n            writeStartObject();\n            break;\n        case END_OBJECT:\n            writeEndObject();\n            break;\n        case START_ARRAY:\n            writeStartArray();\n            break;\n        case END_ARRAY:\n            writeEndArray();\n            break;\n        case FIELD_NAME:\n            writeFieldName(jp.getCurrentName());\n            break;\n        case VALUE_STRING:\n            if (jp.hasTextCharacters()) {\n                writeString(jp.getTextCharacters(), jp.getTextOffset(), jp.getTextLength());\n            } else {\n                writeString(jp.getText());\n            }\n            break;\n        case VALUE_NUMBER_INT:\n            switch (jp.getNumberType()) {\n            case INT:\n                writeNumber(jp.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(jp.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(jp.getLongValue());\n            }\n            break;\n        case VALUE_NUMBER_FLOAT:\n            switch (jp.getNumberType()) {\n            case BIG_DECIMAL:\n                writeNumber(jp.getDecimalValue());\n                break;\n            case FLOAT:\n                writeNumber(jp.getFloatValue());\n                break;\n            default:\n                writeNumber(jp.getDoubleValue());\n            }\n            break;\n        case VALUE_TRUE:\n            writeBoolean(true);\n            break;\n        case VALUE_FALSE:\n            writeBoolean(false);\n            break;\n        case VALUE_NULL:\n            writeNull();\n            break;\n        case VALUE_EMBEDDED_OBJECT:\n            writeObject(jp.getEmbeddedObject());\n            break;\n        default:\n            throw new RuntimeException(\"Internal error: should never end up through this code path\");\n        }",
      "info" : "SwitchStatement[28045-29937]:SwitchStatement[28516-30408]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[28085-28103]:SwitchCase[28556-28574]"
    }, {
      "left" : "writeStartObject();",
      "right" : "writeStartObject();",
      "info" : "ExpressionStatement[28116-28135]:ExpressionStatement[28587-28606]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28148-28154]:BreakStatement[28619-28625]"
    }, {
      "left" : "case END_OBJECT:",
      "right" : "case END_OBJECT:",
      "info" : "SwitchCase[28163-28179]:SwitchCase[28634-28650]"
    }, {
      "left" : "writeEndObject();",
      "right" : "writeEndObject();",
      "info" : "ExpressionStatement[28192-28209]:ExpressionStatement[28663-28680]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28222-28228]:BreakStatement[28693-28699]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[28237-28254]:SwitchCase[28708-28725]"
    }, {
      "left" : "writeStartArray();",
      "right" : "writeStartArray();",
      "info" : "ExpressionStatement[28267-28285]:ExpressionStatement[28738-28756]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28298-28304]:BreakStatement[28769-28775]"
    }, {
      "left" : "case END_ARRAY:",
      "right" : "case END_ARRAY:",
      "info" : "SwitchCase[28313-28328]:SwitchCase[28784-28799]"
    }, {
      "left" : "writeEndArray();",
      "right" : "writeEndArray();",
      "info" : "ExpressionStatement[28341-28357]:ExpressionStatement[28812-28828]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28370-28376]:BreakStatement[28841-28847]"
    }, {
      "left" : "case FIELD_NAME:",
      "right" : "case FIELD_NAME:",
      "info" : "SwitchCase[28385-28401]:SwitchCase[28856-28872]"
    }, {
      "left" : "writeFieldName(jp.getCurrentName());",
      "right" : "writeFieldName(jp.getCurrentName());",
      "info" : "ExpressionStatement[28414-28450]:ExpressionStatement[28885-28921]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28463-28469]:BreakStatement[28934-28940]"
    }, {
      "left" : "case VALUE_STRING:",
      "right" : "case VALUE_STRING:",
      "info" : "SwitchCase[28478-28496]:SwitchCase[28949-28967]"
    }, {
      "left" : "if (jp.hasTextCharacters())",
      "right" : "if (jp.hasTextCharacters())",
      "info" : "IfStatement[28509-28709]:IfStatement[28980-29180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28537-28645]:Block[29008-29116]"
    }, {
      "left" : "writeString(jp.getTextCharacters(), jp.getTextOffset(), jp.getTextLength());",
      "right" : "writeString(jp.getTextCharacters(), jp.getTextOffset(), jp.getTextLength());",
      "info" : "ExpressionStatement[28555-28631]:ExpressionStatement[29026-29102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28651-28709]:Block[29122-29180]"
    }, {
      "left" : "writeString(jp.getText());",
      "right" : "writeString(jp.getText());",
      "info" : "ExpressionStatement[28669-28695]:ExpressionStatement[29140-29166]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28722-28728]:BreakStatement[29193-29199]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[28737-28759]:SwitchCase[29208-29230]"
    }, {
      "left" : "switch (jp.getNumberType()) {\n            case INT:\n                writeNumber(jp.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(jp.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(jp.getLongValue());\n            }",
      "right" : "switch (jp.getNumberType()) {\n            case INT:\n                writeNumber(jp.getIntValue());\n                break;\n            case BIG_INTEGER:\n                writeNumber(jp.getBigIntegerValue());\n                break;\n            default:\n                writeNumber(jp.getLongValue());\n            }",
      "info" : "SwitchStatement[28772-29083]:SwitchStatement[29243-29554]"
    }, {
      "left" : "case INT:",
      "right" : "case INT:",
      "info" : "SwitchCase[28814-28823]:SwitchCase[29285-29294]"
    }, {
      "left" : "writeNumber(jp.getIntValue());",
      "right" : "writeNumber(jp.getIntValue());",
      "info" : "ExpressionStatement[28840-28870]:ExpressionStatement[29311-29341]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28887-28893]:BreakStatement[29358-29364]"
    }, {
      "left" : "case BIG_INTEGER:",
      "right" : "case BIG_INTEGER:",
      "info" : "SwitchCase[28906-28923]:SwitchCase[29377-29394]"
    }, {
      "left" : "writeNumber(jp.getBigIntegerValue());",
      "right" : "writeNumber(jp.getBigIntegerValue());",
      "info" : "ExpressionStatement[28940-28977]:ExpressionStatement[29411-29448]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28994-29000]:BreakStatement[29465-29471]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[29013-29021]:SwitchCase[29484-29492]"
    }, {
      "left" : "writeNumber(jp.getLongValue());",
      "right" : "writeNumber(jp.getLongValue());",
      "info" : "ExpressionStatement[29038-29069]:ExpressionStatement[29509-29540]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29096-29102]:BreakStatement[29567-29573]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[29111-29135]:SwitchCase[29582-29606]"
    }, {
      "left" : "switch (jp.getNumberType()) {\n            case BIG_DECIMAL:\n                writeNumber(jp.getDecimalValue());\n                break;\n            case FLOAT:\n                writeNumber(jp.getFloatValue());\n                break;\n            default:\n                writeNumber(jp.getDoubleValue());\n            }",
      "right" : "switch (jp.getNumberType()) {\n            case BIG_DECIMAL:\n                writeNumber(jp.getDecimalValue());\n                break;\n            case FLOAT:\n                writeNumber(jp.getFloatValue());\n                break;\n            default:\n                writeNumber(jp.getDoubleValue());\n            }",
      "info" : "SwitchStatement[29148-29462]:SwitchStatement[29619-29933]"
    }, {
      "left" : "case BIG_DECIMAL:",
      "right" : "case BIG_DECIMAL:",
      "info" : "SwitchCase[29190-29207]:SwitchCase[29661-29678]"
    }, {
      "left" : "writeNumber(jp.getDecimalValue());",
      "right" : "writeNumber(jp.getDecimalValue());",
      "info" : "ExpressionStatement[29224-29258]:ExpressionStatement[29695-29729]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29275-29281]:BreakStatement[29746-29752]"
    }, {
      "left" : "case FLOAT:",
      "right" : "case FLOAT:",
      "info" : "SwitchCase[29294-29305]:SwitchCase[29765-29776]"
    }, {
      "left" : "writeNumber(jp.getFloatValue());",
      "right" : "writeNumber(jp.getFloatValue());",
      "info" : "ExpressionStatement[29322-29354]:ExpressionStatement[29793-29825]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29371-29377]:BreakStatement[29842-29848]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[29390-29398]:SwitchCase[29861-29869]"
    }, {
      "left" : "writeNumber(jp.getDoubleValue());",
      "right" : "writeNumber(jp.getDoubleValue());",
      "info" : "ExpressionStatement[29415-29448]:ExpressionStatement[29886-29919]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29475-29481]:BreakStatement[29946-29952]"
    }, {
      "left" : "case VALUE_TRUE:",
      "right" : "case VALUE_TRUE:",
      "info" : "SwitchCase[29490-29506]:SwitchCase[29961-29977]"
    }, {
      "left" : "writeBoolean(true);",
      "right" : "writeBoolean(true);",
      "info" : "ExpressionStatement[29519-29538]:ExpressionStatement[29990-30009]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29551-29557]:BreakStatement[30022-30028]"
    }, {
      "left" : "case VALUE_FALSE:",
      "right" : "case VALUE_FALSE:",
      "info" : "SwitchCase[29566-29583]:SwitchCase[30037-30054]"
    }, {
      "left" : "writeBoolean(false);",
      "right" : "writeBoolean(false);",
      "info" : "ExpressionStatement[29596-29616]:ExpressionStatement[30067-30087]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29629-29635]:BreakStatement[30100-30106]"
    }, {
      "left" : "case VALUE_NULL:",
      "right" : "case VALUE_NULL:",
      "info" : "SwitchCase[29644-29660]:SwitchCase[30115-30131]"
    }, {
      "left" : "writeNull();",
      "right" : "writeNull();",
      "info" : "ExpressionStatement[29673-29685]:ExpressionStatement[30144-30156]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29698-29704]:BreakStatement[30169-30175]"
    }, {
      "left" : "case VALUE_EMBEDDED_OBJECT:",
      "right" : "case VALUE_EMBEDDED_OBJECT:",
      "info" : "SwitchCase[29713-29740]:SwitchCase[30184-30211]"
    }, {
      "left" : "writeObject(jp.getEmbeddedObject());",
      "right" : "writeObject(jp.getEmbeddedObject());",
      "info" : "ExpressionStatement[29753-29789]:ExpressionStatement[30224-30260]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29802-29808]:BreakStatement[30273-30279]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[29817-29825]:SwitchCase[30288-30296]"
    }, {
      "left" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "right" : "throw new RuntimeException(\"Internal error: should never end up through this code path\");",
      "info" : "ThrowStatement[29838-29927]:ThrowStatement[30309-30398]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[29953-29962]:MarkerAnnotation[30424-30433]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29967-29973]:Modifier[30438-30444]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29974-29978]:PrimitiveType[30445-30449]"
    }, {
      "left" : "copyCurrentStructure",
      "right" : "copyCurrentStructure",
      "info" : "SimpleName[29979-29999]:SimpleName[30450-30470]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[30000-30013]:SingleVariableDeclaration[30471-30484]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[30022-30033]:SimpleType[30493-30504]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[30035-30058]:SimpleType[30506-30529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30063-31080]:Block[30534-31551]"
    }, {
      "left" : "JsonToken t = jp.getCurrentToken();",
      "right" : "JsonToken t = jp.getCurrentToken();",
      "info" : "VariableDeclarationStatement[30073-30108]:VariableDeclarationStatement[30544-30579]"
    }, {
      "left" : "if (t == JsonToken.FIELD_NAME)",
      "right" : "if (t == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[30170-30438]:IfStatement[30641-30909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30201-30438]:Block[30672-30909]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[30215-30290]:IfStatement[30686-30761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30238-30290]:Block[30709-30761]"
    }, {
      "left" : "_checkNativeIds(jp);",
      "right" : "_checkNativeIds(jp);",
      "info" : "ExpressionStatement[30256-30276]:ExpressionStatement[30727-30747]"
    }, {
      "left" : "writeFieldName(jp.getCurrentName());",
      "right" : "writeFieldName(jp.getCurrentName());",
      "info" : "ExpressionStatement[30303-30339]:ExpressionStatement[30774-30810]"
    }, {
      "left" : "t = jp.nextToken();",
      "right" : "t = jp.nextToken();",
      "info" : "ExpressionStatement[30352-30371]:ExpressionStatement[30823-30842]"
    }, {
      "left" : "if (_mayHaveNativeIds)",
      "right" : "if (_mayHaveNativeIds)",
      "info" : "IfStatement[30448-30515]:IfStatement[30919-30986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30471-30515]:Block[30942-30986]"
    }, {
      "left" : "_checkNativeIds(jp);",
      "right" : "_checkNativeIds(jp);",
      "info" : "ExpressionStatement[30485-30505]:ExpressionStatement[30956-30976]"
    }, {
      "left" : "switch (t) {\n        case START_ARRAY:\n            writeStartArray();\n            while (jp.nextToken() != JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            writeStartObject();\n            while (jp.nextToken() != JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default: // others are simple:\n            copyCurrentEvent(jp);\n        }",
      "right" : "switch (t) {\n        case START_ARRAY:\n            writeStartArray();\n            while (jp.nextToken() != JsonToken.END_ARRAY) {\n                copyCurrentStructure(jp);\n            }\n            writeEndArray();\n            break;\n        case START_OBJECT:\n            writeStartObject();\n            while (jp.nextToken() != JsonToken.END_OBJECT) {\n                copyCurrentStructure(jp);\n            }\n            writeEndObject();\n            break;\n        default: // others are simple:\n            copyCurrentEvent(jp);\n        }",
      "info" : "SwitchStatement[30533-31074]:SwitchStatement[31004-31545]"
    }, {
      "left" : "case START_ARRAY:",
      "right" : "case START_ARRAY:",
      "info" : "SwitchCase[30554-30571]:SwitchCase[31025-31042]"
    }, {
      "left" : "writeStartArray();",
      "right" : "writeStartArray();",
      "info" : "ExpressionStatement[30584-30602]:ExpressionStatement[31055-31073]"
    }, {
      "left" : "while (jp.nextToken() != JsonToken.END_ARRAY)",
      "right" : "while (jp.nextToken() != JsonToken.END_ARRAY)",
      "info" : "WhileStatement[30615-30718]:WhileStatement[31086-31189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30661-30718]:Block[31132-31189]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[30679-30704]:ExpressionStatement[31150-31175]"
    }, {
      "left" : "writeEndArray();",
      "right" : "writeEndArray();",
      "info" : "ExpressionStatement[30731-30747]:ExpressionStatement[31202-31218]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30760-30766]:BreakStatement[31231-31237]"
    }, {
      "left" : "case START_OBJECT:",
      "right" : "case START_OBJECT:",
      "info" : "SwitchCase[30775-30793]:SwitchCase[31246-31264]"
    }, {
      "left" : "writeStartObject();",
      "right" : "writeStartObject();",
      "info" : "ExpressionStatement[30806-30825]:ExpressionStatement[31277-31296]"
    }, {
      "left" : "while (jp.nextToken() != JsonToken.END_OBJECT)",
      "right" : "while (jp.nextToken() != JsonToken.END_OBJECT)",
      "info" : "WhileStatement[30838-30942]:WhileStatement[31309-31413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30885-30942]:Block[31356-31413]"
    }, {
      "left" : "copyCurrentStructure(jp);",
      "right" : "copyCurrentStructure(jp);",
      "info" : "ExpressionStatement[30903-30928]:ExpressionStatement[31374-31399]"
    }, {
      "left" : "writeEndObject();",
      "right" : "writeEndObject();",
      "info" : "ExpressionStatement[30955-30972]:ExpressionStatement[31426-31443]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[30985-30991]:BreakStatement[31456-31462]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[31000-31008]:SwitchCase[31471-31479]"
    }, {
      "left" : "copyCurrentEvent(jp);",
      "right" : "copyCurrentEvent(jp);",
      "info" : "ExpressionStatement[31043-31064]:ExpressionStatement[31514-31535]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[31091-31098]:Modifier[31562-31569]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31099-31104]:Modifier[31570-31575]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31105-31109]:PrimitiveType[31576-31580]"
    }, {
      "left" : "_checkNativeIds",
      "right" : "_checkNativeIds",
      "info" : "SimpleName[31110-31125]:SimpleName[31581-31596]"
    }, {
      "left" : "JsonParser jp",
      "right" : "JsonParser jp",
      "info" : "SingleVariableDeclaration[31126-31139]:SingleVariableDeclaration[31597-31610]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[31148-31159]:SimpleType[31619-31630]"
    }, {
      "left" : "JsonProcessingException",
      "right" : "JsonProcessingException",
      "info" : "SimpleType[31161-31184]:SimpleType[31632-31655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31189-31386]:Block[31660-31857]"
    }, {
      "left" : "if ((_typeId = jp.getTypeId()) != null)",
      "right" : "if ((_typeId = jp.getTypeId()) != null)",
      "info" : "IfStatement[31199-31283]:IfStatement[31670-31754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31239-31283]:Block[31710-31754]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[31253-31273]:ExpressionStatement[31724-31744]"
    }, {
      "left" : "if ((_objectId = jp.getObjectId()) != null)",
      "right" : "if ((_objectId = jp.getObjectId()) != null)",
      "info" : "IfStatement[31292-31380]:IfStatement[31763-31851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31336-31380]:Block[31807-31851]"
    }, {
      "left" : "_hasNativeId = true;",
      "right" : "_hasNativeId = true;",
      "info" : "ExpressionStatement[31350-31370]:ExpressionStatement[31821-31841]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[31564-31573]:Modifier[32035-32044]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31574-31579]:Modifier[32045-32050]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31580-31584]:PrimitiveType[32051-32055]"
    }, {
      "left" : "_append",
      "right" : "_append",
      "info" : "SimpleName[31585-31592]:SimpleName[32056-32063]"
    }, {
      "left" : "JsonToken type",
      "right" : "JsonToken type",
      "info" : "SingleVariableDeclaration[31593-31607]:SingleVariableDeclaration[32064-32078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31613-31935]:Block[32084-32406]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, _objectId, _typeId)\n                : _last.append(_appendAt, type);",
      "right" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, _objectId, _typeId)\n                : _last.append(_appendAt, type);",
      "info" : "VariableDeclarationStatement[31623-31767]:VariableDeclarationStatement[32094-32238]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[31776-31929]:IfStatement[32247-32400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31794-31830]:Block[32265-32301]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[31808-31820]:ExpressionStatement[32279-32291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31836-31929]:Block[32307-32400]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[31850-31863]:ExpressionStatement[32321-32334]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[31876-31890]:ExpressionStatement[32347-32361]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[31941-31950]:Modifier[32412-32421]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31951-31956]:Modifier[32422-32427]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31957-31961]:PrimitiveType[32428-32432]"
    }, {
      "left" : "_append",
      "right" : "_append",
      "info" : "SimpleName[31962-31969]:SimpleName[32433-32440]"
    }, {
      "left" : "JsonToken type",
      "right" : "JsonToken type",
      "info" : "SingleVariableDeclaration[31970-31984]:SingleVariableDeclaration[32441-32455]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[31986-31998]:SingleVariableDeclaration[32457-32469]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32004-32311]:Block[32475-32782]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, value, _objectId, _typeId)\n                : _last.append(_appendAt, type, value);",
      "right" : "Segment next = _hasNativeId\n                ? _last.append(_appendAt, type, value, _objectId, _typeId)\n                : _last.append(_appendAt, type, value);",
      "info" : "VariableDeclarationStatement[32014-32172]:VariableDeclarationStatement[32485-32643]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[32181-32305]:IfStatement[32652-32776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32199-32235]:Block[32670-32706]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[32213-32225]:ExpressionStatement[32684-32696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32241-32305]:Block[32712-32776]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[32255-32268]:ExpressionStatement[32726-32739]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[32281-32295]:ExpressionStatement[32752-32766]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32317-32326]:Modifier[32788-32797]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[32327-32332]:Modifier[32798-32803]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32333-32337]:PrimitiveType[32804-32808]"
    }, {
      "left" : "_appendRaw",
      "right" : "_appendRaw",
      "info" : "SimpleName[32338-32348]:SimpleName[32809-32819]"
    }, {
      "left" : "int rawType",
      "right" : "int rawType",
      "info" : "SingleVariableDeclaration[32349-32360]:SingleVariableDeclaration[32820-32831]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[32362-32374]:SingleVariableDeclaration[32833-32845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32380-32699]:Block[32851-33170]"
    }, {
      "left" : "Segment next = _hasNativeId\n                ? _last.appendRaw(_appendAt, rawType, value, _objectId, _typeId)\n                : _last.appendRaw(_appendAt, rawType, value);",
      "right" : "Segment next = _hasNativeId\n                ? _last.appendRaw(_appendAt, rawType, value, _objectId, _typeId)\n                : _last.appendRaw(_appendAt, rawType, value);",
      "info" : "VariableDeclarationStatement[32390-32560]:VariableDeclarationStatement[32861-33031]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[32569-32693]:IfStatement[33040-33164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32587-32623]:Block[33058-33094]"
    }, {
      "left" : "++_appendAt;",
      "right" : "++_appendAt;",
      "info" : "ExpressionStatement[32601-32613]:ExpressionStatement[33072-33084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32629-32693]:Block[33100-33164]"
    }, {
      "left" : "_last = next;",
      "right" : "_last = next;",
      "info" : "ExpressionStatement[32643-32656]:ExpressionStatement[33114-33127]"
    }, {
      "left" : "_appendAt = 1;",
      "right" : "_appendAt = 1;",
      "info" : "ExpressionStatement[32669-32683]:ExpressionStatement[33140-33154]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[32705-32714]:MarkerAnnotation[33176-33185]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32719-32728]:Modifier[33190-33199]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32729-32733]:PrimitiveType[33200-33204]"
    }, {
      "left" : "_reportUnsupportedOperation",
      "right" : "_reportUnsupportedOperation",
      "info" : "SimpleName[32734-32761]:SimpleName[33205-33232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32764-32870]:Block[33235-33341]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Called operation not supported for TokenBuffer\");",
      "right" : "throw new UnsupportedOperationException(\"Called operation not supported for TokenBuffer\");",
      "info" : "ThrowStatement[32774-32864]:ThrowStatement[33245-33335]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[33050-33059]:Modifier[33521-33530]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[33060-33065]:Modifier[33531-33536]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33066-33072]:Modifier[33537-33543]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[33073-33078]:TYPE_DECLARATION_KIND[33544-33549]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "SimpleName[33079-33085]:SimpleName[33550-33556]"
    }, {
      "left" : "ParserMinimalBase",
      "right" : "ParserMinimalBase",
      "info" : "SimpleType[33102-33119]:SimpleType[33573-33590]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[34568-34579]:MarkerAnnotation[35039-35050]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34601-34610]:Modifier[35072-35081]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "SimpleName[34611-34617]:SimpleName[35082-35088]"
    }, {
      "left" : "Segment firstSeg",
      "right" : "Segment firstSeg",
      "info" : "SingleVariableDeclaration[34618-34634]:SingleVariableDeclaration[35089-35105]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[34636-34653]:SingleVariableDeclaration[35107-35124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34655-34715]:Block[35126-35186]"
    }, {
      "left" : "this(firstSeg, codec, false, false);",
      "right" : "this(firstSeg, codec, false, false);",
      "info" : "ConstructorInvocation[34669-34705]:ConstructorInvocation[35140-35176]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34771-34777]:Modifier[35242-35248]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "SimpleName[34778-34784]:SimpleName[35249-35255]"
    }, {
      "left" : "Segment firstSeg",
      "right" : "Segment firstSeg",
      "info" : "SingleVariableDeclaration[34785-34801]:SingleVariableDeclaration[35256-35272]"
    }, {
      "left" : "ObjectCodec codec",
      "right" : "ObjectCodec codec",
      "info" : "SingleVariableDeclaration[34803-34820]:SingleVariableDeclaration[35274-35291]"
    }, {
      "left" : "boolean hasNativeTypeIds",
      "right" : "boolean hasNativeTypeIds",
      "info" : "SingleVariableDeclaration[34838-34862]:SingleVariableDeclaration[35309-35333]"
    }, {
      "left" : "boolean hasNativeObjectIds",
      "right" : "boolean hasNativeObjectIds",
      "info" : "SingleVariableDeclaration[34880-34906]:SingleVariableDeclaration[35351-35377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34916-35300]:Block[35387-35771]"
    }, {
      "left" : "super(0);",
      "right" : "super(0);",
      "info" : "SuperConstructorInvocation[34930-34939]:SuperConstructorInvocation[35401-35410]"
    }, {
      "left" : "_segment = firstSeg;",
      "right" : "_segment = firstSeg;",
      "info" : "ExpressionStatement[34952-34972]:ExpressionStatement[35423-35443]"
    }, {
      "left" : "_segmentPtr = -1;",
      "right" : "_segmentPtr = -1;",
      "info" : "ExpressionStatement[34985-35002]:ExpressionStatement[35456-35473]"
    }, {
      "left" : "_codec = codec;",
      "right" : "_codec = codec;",
      "info" : "ExpressionStatement[35031-35046]:ExpressionStatement[35502-35517]"
    }, {
      "left" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "right" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "info" : "ExpressionStatement[35059-35117]:ExpressionStatement[35530-35588]"
    }, {
      "left" : "_hasNativeTypeIds = hasNativeTypeIds;",
      "right" : "_hasNativeTypeIds = hasNativeTypeIds;",
      "info" : "ExpressionStatement[35130-35167]:ExpressionStatement[35601-35638]"
    }, {
      "left" : "_hasNativeObjectIds = hasNativeObjectIds;",
      "right" : "_hasNativeObjectIds = hasNativeObjectIds;",
      "info" : "ExpressionStatement[35180-35221]:ExpressionStatement[35651-35692]"
    }, {
      "left" : "_hasNativeIds = (hasNativeTypeIds | hasNativeObjectIds);",
      "right" : "_hasNativeIds = (hasNativeTypeIds | hasNativeObjectIds);",
      "info" : "ExpressionStatement[35234-35290]:ExpressionStatement[35705-35761]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35310-35316]:Modifier[35781-35787]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35317-35321]:PrimitiveType[35788-35792]"
    }, {
      "left" : "setLocation",
      "right" : "setLocation",
      "info" : "SimpleName[35322-35333]:SimpleName[35793-35804]"
    }, {
      "left" : "JsonLocation l",
      "right" : "JsonLocation l",
      "info" : "SingleVariableDeclaration[35334-35348]:SingleVariableDeclaration[35805-35819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35350-35388]:Block[35821-35859]"
    }, {
      "left" : "_location = l;",
      "right" : "_location = l;",
      "info" : "ExpressionStatement[35364-35378]:ExpressionStatement[35835-35849]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[35406-35415]:MarkerAnnotation[35877-35886]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35424-35430]:Modifier[35895-35901]"
    }, {
      "left" : "ObjectCodec",
      "right" : "ObjectCodec",
      "info" : "SimpleType[35431-35442]:SimpleType[35902-35913]"
    }, {
      "left" : "getCodec",
      "right" : "getCodec",
      "info" : "SimpleName[35443-35451]:SimpleName[35914-35922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35454-35472]:Block[35925-35943]"
    }, {
      "left" : "return _codec;",
      "right" : "return _codec;",
      "info" : "ReturnStatement[35456-35470]:ReturnStatement[35927-35941]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[35482-35491]:MarkerAnnotation[35953-35962]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35500-35506]:Modifier[35971-35977]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35507-35511]:PrimitiveType[35978-35982]"
    }, {
      "left" : "setCodec",
      "right" : "setCodec",
      "info" : "SimpleName[35512-35520]:SimpleName[35983-35991]"
    }, {
      "left" : "ObjectCodec c",
      "right" : "ObjectCodec c",
      "info" : "SingleVariableDeclaration[35521-35534]:SingleVariableDeclaration[35992-36005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35536-35551]:Block[36007-36022]"
    }, {
      "left" : "_codec = c;",
      "right" : "_codec = c;",
      "info" : "ExpressionStatement[35538-35549]:ExpressionStatement[36009-36020]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[35561-35570]:MarkerAnnotation[36032-36041]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35579-35585]:Modifier[36050-36056]"
    }, {
      "left" : "Version",
      "right" : "Version",
      "info" : "SimpleType[35586-35593]:SimpleType[36057-36064]"
    }, {
      "left" : "version",
      "right" : "version",
      "info" : "SimpleName[35594-35601]:SimpleName[36065-36072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35604-35693]:Block[36075-36164]"
    }, {
      "left" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "right" : "return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;",
      "info" : "ReturnStatement[35618-35683]:ReturnStatement[36089-36154]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35913-35919]:Modifier[36384-36390]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[35920-35929]:SimpleType[36391-36400]"
    }, {
      "left" : "peekNextToken",
      "right" : "peekNextToken",
      "info" : "SimpleName[35930-35943]:SimpleName[36401-36414]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[35965-35976]:SimpleType[36436-36447]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[35978-35996]:SimpleType[36449-36467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36005-36385]:Block[36476-36856]"
    }, {
      "left" : "if (_closed)",
      "right" : "if (_closed)",
      "info" : "IfStatement[36071-36096]:IfStatement[36542-36567]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[36084-36096]:ReturnStatement[36555-36567]"
    }, {
      "left" : "Segment seg = _segment;",
      "right" : "Segment seg = _segment;",
      "info" : "VariableDeclarationStatement[36109-36132]:VariableDeclarationStatement[36580-36603]"
    }, {
      "left" : "int ptr = _segmentPtr+1;",
      "right" : "int ptr = _segmentPtr+1;",
      "info" : "VariableDeclarationStatement[36145-36169]:VariableDeclarationStatement[36616-36640]"
    }, {
      "left" : "if (ptr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (ptr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[36182-36318]:IfStatement[36653-36789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36221-36318]:Block[36692-36789]"
    }, {
      "left" : "ptr = 0;",
      "right" : "ptr = 0;",
      "info" : "ExpressionStatement[36239-36247]:ExpressionStatement[36710-36718]"
    }, {
      "left" : "seg = (seg == null) ? null : seg.next();",
      "right" : "seg = (seg == null) ? null : seg.next();",
      "info" : "ExpressionStatement[36264-36304]:ExpressionStatement[36735-36775]"
    }, {
      "left" : "return (seg == null) ? null : seg.type(ptr);",
      "right" : "return (seg == null) ? null : seg.type(ptr);",
      "info" : "ReturnStatement[36331-36375]:ReturnStatement[36802-36846]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36599-36608]:MarkerAnnotation[37070-37079]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36617-36623]:Modifier[37088-37094]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36624-36628]:PrimitiveType[37095-37099]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[36629-36634]:SimpleName[37100-37105]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[36644-36655]:SimpleType[37115-37126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36656-36741]:Block[37127-37212]"
    }, {
      "left" : "if (!_closed)",
      "right" : "if (!_closed)",
      "info" : "IfStatement[36670-36731]:IfStatement[37141-37202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36684-36731]:Block[37155-37202]"
    }, {
      "left" : "_closed = true;",
      "right" : "_closed = true;",
      "info" : "ExpressionStatement[36702-36717]:ExpressionStatement[37173-37188]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36952-36961]:MarkerAnnotation[37423-37432]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36970-36976]:Modifier[37441-37447]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[36977-36986]:SimpleType[37448-37457]"
    }, {
      "left" : "nextToken",
      "right" : "nextToken",
      "info" : "SimpleName[36987-36996]:SimpleName[37458-37467]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[37006-37017]:SimpleType[37477-37488]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[37019-37037]:SimpleType[37490-37508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37046-38602]:Block[37517-39073]"
    }, {
      "left" : "if (_closed || (_segment == null))",
      "right" : "if (_closed || (_segment == null))",
      "info" : "IfStatement[37112-37159]:IfStatement[37583-37630]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[37147-37159]:ReturnStatement[37618-37630]"
    }, {
      "left" : "if (++_segmentPtr >= Segment.TOKENS_PER_SEGMENT)",
      "right" : "if (++_segmentPtr >= Segment.TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[37215-37447]:IfStatement[37686-37918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37264-37447]:Block[37735-37918]"
    }, {
      "left" : "_segmentPtr = 0;",
      "right" : "_segmentPtr = 0;",
      "info" : "ExpressionStatement[37282-37298]:ExpressionStatement[37753-37769]"
    }, {
      "left" : "_segment = _segment.next();",
      "right" : "_segment = _segment.next();",
      "info" : "ExpressionStatement[37315-37342]:ExpressionStatement[37786-37813]"
    }, {
      "left" : "if (_segment == null)",
      "right" : "if (_segment == null)",
      "info" : "IfStatement[37359-37433]:IfStatement[37830-37904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37381-37433]:Block[37852-37904]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[37403-37415]:ReturnStatement[37874-37886]"
    }, {
      "left" : "_currToken = _segment.type(_segmentPtr);",
      "right" : "_currToken = _segment.type(_segmentPtr);",
      "info" : "ExpressionStatement[37460-37500]:ExpressionStatement[37931-37971]"
    }, {
      "left" : "if (_currToken == JsonToken.FIELD_NAME)",
      "right" : "if (_currToken == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[37563-38561]:IfStatement[38034-39032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37603-37804]:Block[38074-38275]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[37621-37650]:VariableDeclarationStatement[38092-38121]"
    }, {
      "left" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "right" : "String name = (ob instanceof String) ? ((String) ob) : ob.toString();",
      "info" : "VariableDeclarationStatement[37667-37736]:VariableDeclarationStatement[38138-38207]"
    }, {
      "left" : "_parsingContext.setCurrentName(name);",
      "right" : "_parsingContext.setCurrentName(name);",
      "info" : "ExpressionStatement[37753-37790]:ExpressionStatement[38224-38261]"
    }, {
      "left" : "if (_currToken == JsonToken.START_OBJECT)",
      "right" : "if (_currToken == JsonToken.START_OBJECT)",
      "info" : "IfStatement[37810-38561]:IfStatement[38281-39032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37852-37951]:Block[38323-38422]"
    }, {
      "left" : "_parsingContext = _parsingContext.createChildObjectContext(-1, -1);",
      "right" : "_parsingContext = _parsingContext.createChildObjectContext(-1, -1);",
      "info" : "ExpressionStatement[37870-37937]:ExpressionStatement[38341-38408]"
    }, {
      "left" : "if (_currToken == JsonToken.START_ARRAY)",
      "right" : "if (_currToken == JsonToken.START_ARRAY)",
      "info" : "IfStatement[37957-38561]:IfStatement[38428-39032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37998-38096]:Block[38469-38567]"
    }, {
      "left" : "_parsingContext = _parsingContext.createChildArrayContext(-1, -1);",
      "right" : "_parsingContext = _parsingContext.createChildArrayContext(-1, -1);",
      "info" : "ExpressionStatement[38016-38082]:ExpressionStatement[38487-38553]"
    }, {
      "left" : "if (_currToken == JsonToken.END_OBJECT\n                    || _currToken == JsonToken.END_ARRAY)",
      "right" : "if (_currToken == JsonToken.END_OBJECT\n                    || _currToken == JsonToken.END_ARRAY)",
      "info" : "IfStatement[38102-38561]:IfStatement[38573-39032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38199-38561]:Block[38670-39032]"
    }, {
      "left" : "_parsingContext = _parsingContext.getParent();",
      "right" : "_parsingContext = _parsingContext.getParent();",
      "info" : "ExpressionStatement[38286-38332]:ExpressionStatement[38757-38803]"
    }, {
      "left" : "if (_parsingContext == null)",
      "right" : "if (_parsingContext == null)",
      "info" : "IfStatement[38420-38547]:IfStatement[38891-39018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38449-38547]:Block[38920-39018]"
    }, {
      "left" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "right" : "_parsingContext = JsonReadContext.createRootContext(null);",
      "info" : "ExpressionStatement[38471-38529]:ExpressionStatement[38942-39000]"
    }, {
      "left" : "return _currToken;",
      "right" : "return _currToken;",
      "info" : "ReturnStatement[38574-38592]:ReturnStatement[39045-39063]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38612-38621]:MarkerAnnotation[39083-39092]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38630-38636]:Modifier[39101-39107]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[38637-38644]:PrimitiveType[39108-39115]"
    }, {
      "left" : "isClosed",
      "right" : "isClosed",
      "info" : "SimpleName[38645-38653]:SimpleName[39116-39124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38656-38675]:Block[39127-39146]"
    }, {
      "left" : "return _closed;",
      "right" : "return _closed;",
      "info" : "ReturnStatement[38658-38673]:ReturnStatement[39129-39144]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38892-38901]:MarkerAnnotation[39363-39372]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38910-38916]:Modifier[39381-39387]"
    }, {
      "left" : "JsonStreamContext",
      "right" : "JsonStreamContext",
      "info" : "SimpleType[38917-38934]:SimpleType[39388-39405]"
    }, {
      "left" : "getParsingContext",
      "right" : "getParsingContext",
      "info" : "SimpleName[38935-38952]:SimpleName[39406-39423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38955-38982]:Block[39426-39453]"
    }, {
      "left" : "return _parsingContext;",
      "right" : "return _parsingContext;",
      "info" : "ReturnStatement[38957-38980]:ReturnStatement[39428-39451]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38992-39001]:MarkerAnnotation[39463-39472]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39010-39016]:Modifier[39481-39487]"
    }, {
      "left" : "JsonLocation",
      "right" : "JsonLocation",
      "info" : "SimpleType[39017-39029]:SimpleType[39488-39500]"
    }, {
      "left" : "getTokenLocation",
      "right" : "getTokenLocation",
      "info" : "SimpleName[39030-39046]:SimpleName[39501-39517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39049-39081]:Block[39520-39552]"
    }, {
      "left" : "return getCurrentLocation();",
      "right" : "return getCurrentLocation();",
      "info" : "ReturnStatement[39051-39079]:ReturnStatement[39522-39550]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39091-39100]:MarkerAnnotation[39562-39571]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39109-39115]:Modifier[39580-39586]"
    }, {
      "left" : "JsonLocation",
      "right" : "JsonLocation",
      "info" : "SimpleType[39116-39128]:SimpleType[39587-39599]"
    }, {
      "left" : "getCurrentLocation",
      "right" : "getCurrentLocation",
      "info" : "SimpleName[39129-39147]:SimpleName[39600-39618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39150-39231]:Block[39621-39702]"
    }, {
      "left" : "return (_location == null) ? JsonLocation.NA : _location;",
      "right" : "return (_location == null) ? JsonLocation.NA : _location;",
      "info" : "ReturnStatement[39164-39221]:ReturnStatement[39635-39692]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39241-39250]:MarkerAnnotation[39712-39721]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39259-39265]:Modifier[39730-39736]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39266-39272]:SimpleType[39737-39743]"
    }, {
      "left" : "getCurrentName",
      "right" : "getCurrentName",
      "info" : "SimpleName[39273-39287]:SimpleName[39744-39758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39290-39334]:Block[39761-39805]"
    }, {
      "left" : "return _parsingContext.getCurrentName();",
      "right" : "return _parsingContext.getCurrentName();",
      "info" : "ReturnStatement[39292-39332]:ReturnStatement[39763-39803]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39344-39353]:MarkerAnnotation[39815-39824]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39362-39368]:Modifier[39833-39839]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[39369-39373]:PrimitiveType[39840-39844]"
    }, {
      "left" : "overrideCurrentName",
      "right" : "overrideCurrentName",
      "info" : "SimpleName[39374-39393]:SimpleName[39845-39864]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[39394-39405]:SingleVariableDeclaration[39865-39876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39415-39873]:Block[39886-40344]"
    }, {
      "left" : "JsonReadContext ctxt = _parsingContext;",
      "right" : "JsonReadContext ctxt = _parsingContext;",
      "info" : "VariableDeclarationStatement[39514-39553]:VariableDeclarationStatement[39985-40024]"
    }, {
      "left" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "right" : "if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY)",
      "info" : "IfStatement[39566-39703]:IfStatement[40037-40174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39647-39703]:Block[40118-40174]"
    }, {
      "left" : "ctxt = ctxt.getParent();",
      "right" : "ctxt = ctxt.getParent();",
      "info" : "ExpressionStatement[39665-39689]:ExpressionStatement[40136-40160]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[39716-39863]:TryStatement[40187-40334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39720-39778]:Block[40191-40249]"
    }, {
      "left" : "ctxt.setCurrentName(name);",
      "right" : "ctxt.setCurrentName(name);",
      "info" : "ExpressionStatement[39738-39764]:ExpressionStatement[40209-40235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39801-39863]:Block[40272-40334]"
    }, {
      "left" : "throw new RuntimeException(e);",
      "right" : "throw new RuntimeException(e);",
      "info" : "ThrowStatement[39819-39849]:ThrowStatement[40290-40320]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40116-40125]:MarkerAnnotation[40587-40596]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40134-40140]:Modifier[40605-40611]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[40141-40147]:SimpleType[40612-40618]"
    }, {
      "left" : "getText",
      "right" : "getText",
      "info" : "SimpleName[40148-40155]:SimpleName[40619-40626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40166-40919]:Block[40637-41390]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_STRING\n                    || _currToken == JsonToken.FIELD_NAME)",
      "right" : "if (_currToken == JsonToken.VALUE_STRING\n                    || _currToken == JsonToken.FIELD_NAME)",
      "info" : "IfStatement[40215-40538]:IfStatement[40686-41009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40315-40538]:Block[40786-41009]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[40333-40362]:VariableDeclarationStatement[40804-40833]"
    }, {
      "left" : "if (ob instanceof String)",
      "right" : "if (ob instanceof String)",
      "info" : "IfStatement[40379-40464]:IfStatement[40850-40935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40405-40464]:Block[40876-40935]"
    }, {
      "left" : "return (String) ob;",
      "right" : "return (String) ob;",
      "info" : "ReturnStatement[40427-40446]:ReturnStatement[40898-40917]"
    }, {
      "left" : "return (ob == null) ? null : ob.toString();",
      "right" : "return (ob == null) ? null : ob.toString();",
      "info" : "ReturnStatement[40481-40524]:ReturnStatement[40952-40995]"
    }, {
      "left" : "if (_currToken == null)",
      "right" : "if (_currToken == null)",
      "info" : "IfStatement[40551-40619]:IfStatement[41022-41090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40575-40619]:Block[41046-41090]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[40593-40605]:ReturnStatement[41064-41076]"
    }, {
      "left" : "switch (_currToken) {\n            case VALUE_NUMBER_INT:\n            case VALUE_NUMBER_FLOAT:\n                Object ob = _currentObject();\n                return (ob == null) ? null : ob.toString();\n            default:\n            \treturn _currToken.asString();\n            }",
      "right" : "switch (_currToken) {\n            case VALUE_NUMBER_INT:\n            case VALUE_NUMBER_FLOAT:\n                Object ob = _currentObject();\n                return (ob == null) ? null : ob.toString();\n            default:\n            \treturn _currToken.asString();\n            }",
      "info" : "SwitchStatement[40632-40909]:SwitchStatement[41103-41380]"
    }, {
      "left" : "case VALUE_NUMBER_INT:",
      "right" : "case VALUE_NUMBER_INT:",
      "info" : "SwitchCase[40666-40688]:SwitchCase[41137-41159]"
    }, {
      "left" : "case VALUE_NUMBER_FLOAT:",
      "right" : "case VALUE_NUMBER_FLOAT:",
      "info" : "SwitchCase[40701-40725]:SwitchCase[41172-41196]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[40742-40771]:VariableDeclarationStatement[41213-41242]"
    }, {
      "left" : "return (ob == null) ? null : ob.toString();",
      "right" : "return (ob == null) ? null : ob.toString();",
      "info" : "ReturnStatement[40788-40831]:ReturnStatement[41259-41302]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[40844-40852]:SwitchCase[41315-41323]"
    }, {
      "left" : "return _currToken.asString();",
      "right" : "return _currToken.asString();",
      "info" : "ReturnStatement[40866-40895]:ReturnStatement[41337-41366]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40929-40938]:MarkerAnnotation[41400-41409]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40947-40953]:Modifier[41418-41424]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[40954-40960]:ArrayType[41425-41431]"
    }, {
      "left" : "getTextCharacters",
      "right" : "getTextCharacters",
      "info" : "SimpleName[40961-40978]:SimpleName[41432-41449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40981-41089]:Block[41452-41560]"
    }, {
      "left" : "String str = getText();",
      "right" : "String str = getText();",
      "info" : "VariableDeclarationStatement[40995-41018]:VariableDeclarationStatement[41466-41489]"
    }, {
      "left" : "return (str == null) ? null : str.toCharArray();",
      "right" : "return (str == null) ? null : str.toCharArray();",
      "info" : "ReturnStatement[41031-41079]:ReturnStatement[41502-41550]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41099-41108]:MarkerAnnotation[41570-41579]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41117-41123]:Modifier[41588-41594]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[41124-41127]:PrimitiveType[41595-41598]"
    }, {
      "left" : "getTextLength",
      "right" : "getTextLength",
      "info" : "SimpleName[41128-41141]:SimpleName[41599-41612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41144-41244]:Block[41615-41715]"
    }, {
      "left" : "String str = getText();",
      "right" : "String str = getText();",
      "info" : "VariableDeclarationStatement[41158-41181]:VariableDeclarationStatement[41629-41652]"
    }, {
      "left" : "return (str == null) ? 0 : str.length();",
      "right" : "return (str == null) ? 0 : str.length();",
      "info" : "ReturnStatement[41194-41234]:ReturnStatement[41665-41705]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41254-41263]:MarkerAnnotation[41725-41734]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41272-41278]:Modifier[41743-41749]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[41279-41282]:PrimitiveType[41750-41753]"
    }, {
      "left" : "getTextOffset",
      "right" : "getTextOffset",
      "info" : "SimpleName[41283-41296]:SimpleName[41754-41767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41299-41312]:Block[41770-41783]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[41301-41310]:ReturnStatement[41772-41781]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41322-41331]:MarkerAnnotation[41793-41802]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41340-41346]:Modifier[41811-41817]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[41347-41354]:PrimitiveType[41818-41825]"
    }, {
      "left" : "hasTextCharacters",
      "right" : "hasTextCharacters",
      "info" : "SimpleName[41355-41372]:SimpleName[41826-41843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41375-41467]:Block[41846-41938]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[41444-41457]:ReturnStatement[41915-41928]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41705-41714]:MarkerAnnotation[42176-42185]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41723-41729]:Modifier[42194-42200]"
    }, {
      "left" : "BigInteger",
      "right" : "BigInteger",
      "info" : "SimpleType[41730-41740]:SimpleType[42201-42211]"
    }, {
      "left" : "getBigIntegerValue",
      "right" : "getBigIntegerValue",
      "info" : "SimpleName[41741-41759]:SimpleName[42212-42230]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[41769-41780]:SimpleType[42240-42251]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[41782-41800]:SimpleType[42253-42271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41809-42220]:Block[42280-42691]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[41823-41851]:VariableDeclarationStatement[42294-42322]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[41864-41947]:IfStatement[42335-42418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41893-41947]:Block[42364-42418]"
    }, {
      "left" : "return (BigInteger) n;",
      "right" : "return (BigInteger) n;",
      "info" : "ReturnStatement[41911-41933]:ReturnStatement[42382-42404]"
    }, {
      "left" : "if (getNumberType() == NumberType.BIG_DECIMAL)",
      "right" : "if (getNumberType() == NumberType.BIG_DECIMAL)",
      "info" : "IfStatement[41960-42078]:IfStatement[42431-42549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42007-42078]:Block[42478-42549]"
    }, {
      "left" : "return ((BigDecimal) n).toBigInteger();",
      "right" : "return ((BigDecimal) n).toBigInteger();",
      "info" : "ReturnStatement[42025-42064]:ReturnStatement[42496-42535]"
    }, {
      "left" : "return BigInteger.valueOf(n.longValue());",
      "right" : "return BigInteger.valueOf(n.longValue());",
      "info" : "ReturnStatement[42169-42210]:ReturnStatement[42640-42681]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42230-42239]:MarkerAnnotation[42701-42710]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42248-42254]:Modifier[42719-42725]"
    }, {
      "left" : "BigDecimal",
      "right" : "BigDecimal",
      "info" : "SimpleType[42255-42265]:SimpleType[42726-42736]"
    }, {
      "left" : "getDecimalValue",
      "right" : "getDecimalValue",
      "info" : "SimpleName[42266-42281]:SimpleName[42737-42752]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[42291-42302]:SimpleType[42762-42773]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[42304-42322]:SimpleType[42775-42793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42331-42828]:Block[42802-43299]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[42345-42373]:VariableDeclarationStatement[42816-42844]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[42386-42469]:IfStatement[42857-42940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42415-42469]:Block[42886-42940]"
    }, {
      "left" : "return (BigDecimal) n;",
      "right" : "return (BigDecimal) n;",
      "info" : "ReturnStatement[42433-42455]:ReturnStatement[42904-42926]"
    }, {
      "left" : "switch (getNumberType()) {\n            case INT:\n            case LONG:\n                return BigDecimal.valueOf(n.longValue());\n            case BIG_INTEGER:\n                return new BigDecimal((BigInteger) n);\n            default:\n            }",
      "right" : "switch (getNumberType()) {\n            case INT:\n            case LONG:\n                return BigDecimal.valueOf(n.longValue());\n            case BIG_INTEGER:\n                return new BigDecimal((BigInteger) n);\n            default:\n            }",
      "info" : "SwitchStatement[42482-42731]:SwitchStatement[42953-43202]"
    }, {
      "left" : "case INT:",
      "right" : "case INT:",
      "info" : "SwitchCase[42521-42530]:SwitchCase[42992-43001]"
    }, {
      "left" : "case LONG:",
      "right" : "case LONG:",
      "info" : "SwitchCase[42543-42553]:SwitchCase[43014-43024]"
    }, {
      "left" : "return BigDecimal.valueOf(n.longValue());",
      "right" : "return BigDecimal.valueOf(n.longValue());",
      "info" : "ReturnStatement[42570-42611]:ReturnStatement[43041-43082]"
    }, {
      "left" : "case BIG_INTEGER:",
      "right" : "case BIG_INTEGER:",
      "info" : "SwitchCase[42624-42641]:SwitchCase[43095-43112]"
    }, {
      "left" : "return new BigDecimal((BigInteger) n);",
      "right" : "return new BigDecimal((BigInteger) n);",
      "info" : "ReturnStatement[42658-42696]:ReturnStatement[43129-43167]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[42709-42717]:SwitchCase[43180-43188]"
    }, {
      "left" : "return BigDecimal.valueOf(n.doubleValue());",
      "right" : "return BigDecimal.valueOf(n.doubleValue());",
      "info" : "ReturnStatement[42775-42818]:ReturnStatement[43246-43289]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42838-42847]:MarkerAnnotation[43309-43318]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42856-42862]:Modifier[43327-43333]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[42863-42869]:PrimitiveType[43334-43340]"
    }, {
      "left" : "getDoubleValue",
      "right" : "getDoubleValue",
      "info" : "SimpleName[42870-42884]:SimpleName[43341-43355]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[42894-42905]:SimpleType[43365-43376]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[42907-42925]:SimpleType[43378-43396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42926-42988]:Block[43397-43459]"
    }, {
      "left" : "return getNumberValue().doubleValue();",
      "right" : "return getNumberValue().doubleValue();",
      "info" : "ReturnStatement[42940-42978]:ReturnStatement[43411-43449]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42998-43007]:MarkerAnnotation[43469-43478]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43016-43022]:Modifier[43487-43493]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[43023-43028]:PrimitiveType[43494-43499]"
    }, {
      "left" : "getFloatValue",
      "right" : "getFloatValue",
      "info" : "SimpleName[43029-43042]:SimpleName[43500-43513]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[43052-43063]:SimpleType[43523-43534]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[43065-43083]:SimpleType[43536-43554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43084-43145]:Block[43555-43616]"
    }, {
      "left" : "return getNumberValue().floatValue();",
      "right" : "return getNumberValue().floatValue();",
      "info" : "ReturnStatement[43098-43135]:ReturnStatement[43569-43606]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43155-43164]:MarkerAnnotation[43626-43635]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43173-43179]:Modifier[43644-43650]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[43180-43183]:PrimitiveType[43651-43654]"
    }, {
      "left" : "getIntValue",
      "right" : "getIntValue",
      "info" : "SimpleName[43184-43195]:SimpleName[43655-43666]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[43205-43216]:SimpleType[43676-43687]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[43218-43236]:SimpleType[43689-43707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43245-43478]:Block[43716-43949]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_NUMBER_INT)",
      "right" : "if (_currToken == JsonToken.VALUE_NUMBER_INT)",
      "info" : "IfStatement[43296-43420]:IfStatement[43767-43891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43342-43420]:Block[43813-43891]"
    }, {
      "left" : "return ((Number) _currentObject()).intValue();",
      "right" : "return ((Number) _currentObject()).intValue();",
      "info" : "ReturnStatement[43360-43406]:ReturnStatement[43831-43877]"
    }, {
      "left" : "return getNumberValue().intValue();",
      "right" : "return getNumberValue().intValue();",
      "info" : "ReturnStatement[43433-43468]:ReturnStatement[43904-43939]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43488-43497]:MarkerAnnotation[43959-43968]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43506-43512]:Modifier[43977-43983]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[43513-43517]:PrimitiveType[43984-43988]"
    }, {
      "left" : "getLongValue",
      "right" : "getLongValue",
      "info" : "SimpleName[43518-43530]:SimpleName[43989-44001]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[43540-43551]:SimpleType[44011-44022]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[43553-43571]:SimpleType[44024-44042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43572-43632]:Block[44043-44103]"
    }, {
      "left" : "return getNumberValue().longValue();",
      "right" : "return getNumberValue().longValue();",
      "info" : "ReturnStatement[43586-43622]:ReturnStatement[44057-44093]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43642-43651]:MarkerAnnotation[44113-44122]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43660-43666]:Modifier[44131-44137]"
    }, {
      "left" : "NumberType",
      "right" : "NumberType",
      "info" : "SimpleType[43667-43677]:SimpleType[44138-44148]"
    }, {
      "left" : "getNumberType",
      "right" : "getNumberType",
      "info" : "SimpleName[43678-43691]:SimpleName[44149-44162]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[43701-43712]:SimpleType[44172-44183]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[43714-43732]:SimpleType[44185-44203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43741-44290]:Block[44212-44761]"
    }, {
      "left" : "Number n = getNumberValue();",
      "right" : "Number n = getNumberValue();",
      "info" : "VariableDeclarationStatement[43755-43783]:VariableDeclarationStatement[44226-44254]"
    }, {
      "left" : "if (n instanceof Integer)",
      "right" : "if (n instanceof Integer)",
      "info" : "IfStatement[43796-43844]:IfStatement[44267-44315]"
    }, {
      "left" : "return NumberType.INT;",
      "right" : "return NumberType.INT;",
      "info" : "ReturnStatement[43822-43844]:ReturnStatement[44293-44315]"
    }, {
      "left" : "if (n instanceof Long)",
      "right" : "if (n instanceof Long)",
      "info" : "IfStatement[43857-43903]:IfStatement[44328-44374]"
    }, {
      "left" : "return NumberType.LONG;",
      "right" : "return NumberType.LONG;",
      "info" : "ReturnStatement[43880-43903]:ReturnStatement[44351-44374]"
    }, {
      "left" : "if (n instanceof Double)",
      "right" : "if (n instanceof Double)",
      "info" : "IfStatement[43916-43966]:IfStatement[44387-44437]"
    }, {
      "left" : "return NumberType.DOUBLE;",
      "right" : "return NumberType.DOUBLE;",
      "info" : "ReturnStatement[43941-43966]:ReturnStatement[44412-44437]"
    }, {
      "left" : "if (n instanceof BigDecimal)",
      "right" : "if (n instanceof BigDecimal)",
      "info" : "IfStatement[43979-44038]:IfStatement[44450-44509]"
    }, {
      "left" : "return NumberType.BIG_DECIMAL;",
      "right" : "return NumberType.BIG_DECIMAL;",
      "info" : "ReturnStatement[44008-44038]:ReturnStatement[44479-44509]"
    }, {
      "left" : "if (n instanceof BigInteger)",
      "right" : "if (n instanceof BigInteger)",
      "info" : "IfStatement[44051-44110]:IfStatement[44522-44581]"
    }, {
      "left" : "return NumberType.BIG_INTEGER;",
      "right" : "return NumberType.BIG_INTEGER;",
      "info" : "ReturnStatement[44080-44110]:ReturnStatement[44551-44581]"
    }, {
      "left" : "if (n instanceof Float)",
      "right" : "if (n instanceof Float)",
      "info" : "IfStatement[44123-44171]:IfStatement[44594-44642]"
    }, {
      "left" : "return NumberType.FLOAT;",
      "right" : "return NumberType.FLOAT;",
      "info" : "ReturnStatement[44147-44171]:ReturnStatement[44618-44642]"
    }, {
      "left" : "if (n instanceof Short)",
      "right" : "if (n instanceof Short)",
      "info" : "IfStatement[44184-44230]:IfStatement[44655-44701]"
    }, {
      "left" : "return NumberType.INT;",
      "right" : "return NumberType.INT;",
      "info" : "ReturnStatement[44208-44230]:ReturnStatement[44679-44701]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[44268-44280]:ReturnStatement[44739-44751]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[44300-44309]:MarkerAnnotation[44771-44780]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44318-44324]:Modifier[44789-44795]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[44325-44330]:Modifier[44796-44801]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[44331-44337]:SimpleType[44802-44808]"
    }, {
      "left" : "getNumberValue",
      "right" : "getNumberValue",
      "info" : "SimpleName[44338-44352]:SimpleName[44809-44823]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[44362-44373]:SimpleType[44833-44844]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[44375-44393]:SimpleType[44846-44864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44394-45292]:Block[44865-45763]"
    }, {
      "left" : "_checkIsNumber();",
      "right" : "_checkIsNumber();",
      "info" : "ExpressionStatement[44408-44425]:ExpressionStatement[44879-44896]"
    }, {
      "left" : "Object value = _currentObject();",
      "right" : "Object value = _currentObject();",
      "info" : "VariableDeclarationStatement[44438-44470]:VariableDeclarationStatement[44909-44941]"
    }, {
      "left" : "if (value instanceof Number)",
      "right" : "if (value instanceof Number)",
      "info" : "IfStatement[44483-44566]:IfStatement[44954-45037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44512-44566]:Block[44983-45037]"
    }, {
      "left" : "return (Number) value;",
      "right" : "return (Number) value;",
      "info" : "ReturnStatement[44530-44552]:ReturnStatement[45001-45023]"
    }, {
      "left" : "if (value instanceof String)",
      "right" : "if (value instanceof String)",
      "info" : "IfStatement[44804-45052]:IfStatement[45275-45523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44833-45052]:Block[45304-45523]"
    }, {
      "left" : "String str = (String) value;",
      "right" : "String str = (String) value;",
      "info" : "VariableDeclarationStatement[44851-44879]:VariableDeclarationStatement[45322-45350]"
    }, {
      "left" : "if (str.indexOf('.') >= 0)",
      "right" : "if (str.indexOf('.') >= 0)",
      "info" : "IfStatement[44896-44994]:IfStatement[45367-45465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44923-44994]:Block[45394-45465]"
    }, {
      "left" : "return Double.parseDouble(str);",
      "right" : "return Double.parseDouble(str);",
      "info" : "ReturnStatement[44945-44976]:ReturnStatement[45416-45447]"
    }, {
      "left" : "return Long.parseLong(str);",
      "right" : "return Long.parseLong(str);",
      "info" : "ReturnStatement[45011-45038]:ReturnStatement[45482-45509]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[45065-45128]:IfStatement[45536-45599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45084-45128]:Block[45555-45599]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45102-45114]:ReturnStatement[45573-45585]"
    }, {
      "left" : "throw new IllegalStateException(\"Internal error: entry should be a Number, but is of type \"\n                    +value.getClass().getName());",
      "right" : "throw new IllegalStateException(\"Internal error: entry should be a Number, but is of type \"\n                    +value.getClass().getName());",
      "info" : "ThrowStatement[45141-45282]:ThrowStatement[45612-45753]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[45520-45529]:MarkerAnnotation[45991-46000]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45538-45544]:Modifier[46009-46015]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[45545-45551]:SimpleType[46016-46022]"
    }, {
      "left" : "getEmbeddedObject",
      "right" : "getEmbeddedObject",
      "info" : "SimpleName[45552-45569]:SimpleName[46023-46040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45580-45736]:Block[46051-46207]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "right" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "info" : "IfStatement[45594-45701]:IfStatement[46065-46172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45645-45701]:Block[46116-46172]"
    }, {
      "left" : "return _currentObject();",
      "right" : "return _currentObject();",
      "info" : "ReturnStatement[45663-45687]:ReturnStatement[46134-46158]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45714-45726]:ReturnStatement[46185-46197]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[45746-45755]:MarkerAnnotation[46217-46226]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[45764-45793]:SingleMemberAnnotation[46235-46264]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45802-45808]:Modifier[46273-46279]"
    }, {
      "left" : "byte[]",
      "right" : "byte[]",
      "info" : "ArrayType[45809-45815]:ArrayType[46280-46286]"
    }, {
      "left" : "getBinaryValue",
      "right" : "getBinaryValue",
      "info" : "SimpleName[45816-45830]:SimpleName[46287-46301]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[45831-45855]:SingleVariableDeclaration[46302-46326]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[45864-45875]:SimpleType[46335-46346]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[45877-45895]:SimpleType[46348-46366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45904-46964]:Block[46375-47435]"
    }, {
      "left" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "right" : "if (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT)",
      "info" : "IfStatement[45969-46289]:IfStatement[46440-46760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46020-46289]:Block[46491-46760]"
    }, {
      "left" : "Object ob = _currentObject();",
      "right" : "Object ob = _currentObject();",
      "info" : "VariableDeclarationStatement[46098-46127]:VariableDeclarationStatement[46569-46598]"
    }, {
      "left" : "if (ob instanceof byte[])",
      "right" : "if (ob instanceof byte[])",
      "info" : "IfStatement[46144-46229]:IfStatement[46615-46700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46170-46229]:Block[46641-46700]"
    }, {
      "left" : "return (byte[]) ob;",
      "right" : "return (byte[]) ob;",
      "info" : "ReturnStatement[46192-46211]:ReturnStatement[46663-46682]"
    }, {
      "left" : "if (_currToken != JsonToken.VALUE_STRING)",
      "right" : "if (_currToken != JsonToken.VALUE_STRING)",
      "info" : "IfStatement[46302-46514]:IfStatement[46773-46985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46344-46514]:Block[46815-46985]"
    }, {
      "left" : "throw _constructError(\"Current token (\"+_currToken+\") not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), can not access as binary\");",
      "right" : "throw _constructError(\"Current token (\"+_currToken+\") not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), can not access as binary\");",
      "info" : "ThrowStatement[46362-46500]:ThrowStatement[46833-46971]"
    }, {
      "left" : "final String str = getText();",
      "right" : "final String str = getText();",
      "info" : "VariableDeclarationStatement[46527-46556]:VariableDeclarationStatement[46998-47027]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[46569-46630]:IfStatement[47040-47101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46586-46630]:Block[47057-47101]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[46604-46616]:ReturnStatement[47075-47087]"
    }, {
      "left" : "ByteArrayBuilder builder = _byteBuilder;",
      "right" : "ByteArrayBuilder builder = _byteBuilder;",
      "info" : "VariableDeclarationStatement[46643-46683]:VariableDeclarationStatement[47114-47154]"
    }, {
      "left" : "if (builder == null)",
      "right" : "if (builder == null)",
      "info" : "IfStatement[46696-46859]:IfStatement[47167-47330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46717-46800]:Block[47188-47271]"
    }, {
      "left" : "_byteBuilder = builder = new ByteArrayBuilder(100);",
      "right" : "_byteBuilder = builder = new ByteArrayBuilder(100);",
      "info" : "ExpressionStatement[46735-46786]:ExpressionStatement[47206-47257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46806-46859]:Block[47277-47330]"
    }, {
      "left" : "_byteBuilder.reset();",
      "right" : "_byteBuilder.reset();",
      "info" : "ExpressionStatement[46824-46845]:ExpressionStatement[47295-47316]"
    }, {
      "left" : "_decodeBase64(str, builder, b64variant);",
      "right" : "_decodeBase64(str, builder, b64variant);",
      "info" : "ExpressionStatement[46872-46912]:ExpressionStatement[47343-47383]"
    }, {
      "left" : "return builder.toByteArray();",
      "right" : "return builder.toByteArray();",
      "info" : "ReturnStatement[46925-46954]:ReturnStatement[47396-47425]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[46974-46983]:MarkerAnnotation[47445-47454]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46992-46998]:Modifier[47463-47469]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[46999-47002]:PrimitiveType[47470-47473]"
    }, {
      "left" : "readBinaryValue",
      "right" : "readBinaryValue",
      "info" : "SimpleName[47003-47018]:SimpleName[47474-47489]"
    }, {
      "left" : "Base64Variant b64variant",
      "right" : "Base64Variant b64variant",
      "info" : "SingleVariableDeclaration[47019-47043]:SingleVariableDeclaration[47490-47514]"
    }, {
      "left" : "OutputStream out",
      "right" : "OutputStream out",
      "info" : "SingleVariableDeclaration[47045-47061]:SingleVariableDeclaration[47516-47532]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[47082-47093]:SimpleType[47553-47564]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[47095-47113]:SimpleType[47566-47584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47122-47340]:Block[47593-47811]"
    }, {
      "left" : "byte[] data = getBinaryValue(b64variant);",
      "right" : "byte[] data = getBinaryValue(b64variant);",
      "info" : "VariableDeclarationStatement[47136-47177]:VariableDeclarationStatement[47607-47648]"
    }, {
      "left" : "if (data != null)",
      "right" : "if (data != null)",
      "info" : "IfStatement[47190-47308]:IfStatement[47661-47779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47208-47308]:Block[47679-47779]"
    }, {
      "left" : "out.write(data, 0, data.length);",
      "right" : "out.write(data, 0, data.length);",
      "info" : "ExpressionStatement[47226-47258]:ExpressionStatement[47697-47729]"
    }, {
      "left" : "return data.length;",
      "right" : "return data.length;",
      "info" : "ReturnStatement[47275-47294]:ReturnStatement[47746-47765]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[47321-47330]:ReturnStatement[47792-47801]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47544-47553]:MarkerAnnotation[48015-48024]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47562-47568]:Modifier[48033-48039]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[47569-47576]:PrimitiveType[48040-48047]"
    }, {
      "left" : "canReadObjectId",
      "right" : "canReadObjectId",
      "info" : "SimpleName[47577-47592]:SimpleName[48048-48063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47595-47646]:Block[48066-48117]"
    }, {
      "left" : "return _hasNativeObjectIds;",
      "right" : "return _hasNativeObjectIds;",
      "info" : "ReturnStatement[47609-47636]:ReturnStatement[48080-48107]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47656-47665]:MarkerAnnotation[48127-48136]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47674-47680]:Modifier[48145-48151]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[47681-47688]:PrimitiveType[48152-48159]"
    }, {
      "left" : "canReadTypeId",
      "right" : "canReadTypeId",
      "info" : "SimpleName[47689-47702]:SimpleName[48160-48173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47705-47754]:Block[48176-48225]"
    }, {
      "left" : "return _hasNativeTypeIds;",
      "right" : "return _hasNativeTypeIds;",
      "info" : "ReturnStatement[47719-47744]:ReturnStatement[48190-48215]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47764-47773]:MarkerAnnotation[48235-48244]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47782-47788]:Modifier[48253-48259]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[47789-47795]:SimpleType[48260-48266]"
    }, {
      "left" : "getTypeId",
      "right" : "getTypeId",
      "info" : "SimpleName[47796-47805]:SimpleName[48267-48276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47808-47872]:Block[48279-48343]"
    }, {
      "left" : "return _segment.findTypeId(_segmentPtr);",
      "right" : "return _segment.findTypeId(_segmentPtr);",
      "info" : "ReturnStatement[47822-47862]:ReturnStatement[48293-48333]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47882-47891]:MarkerAnnotation[48353-48362]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47900-47906]:Modifier[48371-48377]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[47907-47913]:SimpleType[48378-48384]"
    }, {
      "left" : "getObjectId",
      "right" : "getObjectId",
      "info" : "SimpleName[47914-47925]:SimpleName[48385-48396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47928-47994]:Block[48399-48465]"
    }, {
      "left" : "return _segment.findObjectId(_segmentPtr);",
      "right" : "return _segment.findObjectId(_segmentPtr);",
      "info" : "ReturnStatement[47942-47984]:ReturnStatement[48413-48455]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[48200-48209]:Modifier[48671-48680]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[48210-48215]:Modifier[48681-48686]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[48216-48222]:SimpleType[48687-48693]"
    }, {
      "left" : "_currentObject",
      "right" : "_currentObject",
      "info" : "SimpleName[48223-48237]:SimpleName[48694-48708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48240-48297]:Block[48711-48768]"
    }, {
      "left" : "return _segment.get(_segmentPtr);",
      "right" : "return _segment.get(_segmentPtr);",
      "info" : "ReturnStatement[48254-48287]:ReturnStatement[48725-48758]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[48307-48316]:Modifier[48778-48787]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[48317-48322]:Modifier[48788-48793]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48323-48327]:PrimitiveType[48794-48798]"
    }, {
      "left" : "_checkIsNumber",
      "right" : "_checkIsNumber",
      "info" : "SimpleName[48328-48342]:SimpleName[48799-48813]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[48352-48370]:SimpleType[48823-48841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48379-48591]:Block[48850-49062]"
    }, {
      "left" : "if (_currToken == null || !_currToken.isNumeric())",
      "right" : "if (_currToken == null || !_currToken.isNumeric())",
      "info" : "IfStatement[48393-48581]:IfStatement[48864-49052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48444-48581]:Block[48915-49052]"
    }, {
      "left" : "throw _constructError(\"Current token (\"+_currToken+\") not numeric, can not use numeric value accessors\");",
      "right" : "throw _constructError(\"Current token (\"+_currToken+\") not numeric, can not use numeric value accessors\");",
      "info" : "ThrowStatement[48462-48567]:ThrowStatement[48933-49038]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[48601-48610]:MarkerAnnotation[49072-49081]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[48619-48628]:Modifier[49090-49099]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48629-48633]:PrimitiveType[49100-49104]"
    }, {
      "left" : "_handleEOF",
      "right" : "_handleEOF",
      "info" : "SimpleName[48634-48644]:SimpleName[49105-49115]"
    }, {
      "left" : "JsonParseException",
      "right" : "JsonParseException",
      "info" : "SimpleType[48654-48672]:SimpleType[49125-49143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48673-48714]:Block[49144-49185]"
    }, {
      "left" : "_throwInternal();",
      "right" : "_throwInternal();",
      "info" : "ExpressionStatement[48687-48704]:ExpressionStatement[49158-49175]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[49071-49080]:Modifier[49542-49551]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[49081-49086]:Modifier[49552-49557]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[49087-49093]:Modifier[49558-49564]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[49094-49099]:TYPE_DECLARATION_KIND[49565-49570]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleName[49100-49107]:SimpleName[49571-49578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49406-49741]:Block[49877-50212]"
    }, {
      "left" : "TOKEN_TYPES_BY_INDEX = new JsonToken[16];",
      "right" : "TOKEN_TYPES_BY_INDEX = new JsonToken[16];",
      "info" : "ExpressionStatement[49498-49539]:ExpressionStatement[49969-50010]"
    }, {
      "left" : "JsonToken[] t = JsonToken.values();",
      "right" : "JsonToken[] t = JsonToken.values();",
      "info" : "VariableDeclarationStatement[49552-49587]:VariableDeclarationStatement[50023-50058]"
    }, {
      "left" : "System.arraycopy(t, 1, TOKEN_TYPES_BY_INDEX, 1, Math.min(15, t.length - 1));",
      "right" : "System.arraycopy(t, 1, TOKEN_TYPES_BY_INDEX, 1, Math.min(15, t.length - 1));",
      "info" : "ExpressionStatement[49655-49731]:ExpressionStatement[50126-50202]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50318-50324]:Modifier[50789-50795]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleName[50325-50332]:SimpleName[50796-50803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50335-50338]:Block[50806-50809]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50376-50382]:Modifier[50847-50853]"
    }, {
      "left" : "JsonToken",
      "right" : "JsonToken",
      "info" : "SimpleType[50383-50392]:SimpleType[50854-50863]"
    }, {
      "left" : "type",
      "right" : "type",
      "info" : "SimpleName[50393-50397]:SimpleName[50864-50868]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[50398-50407]:SingleVariableDeclaration[50869-50878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50417-50624]:Block[50888-51095]"
    }, {
      "left" : "long l = _tokenTypes;",
      "right" : "long l = _tokenTypes;",
      "info" : "VariableDeclarationStatement[50431-50452]:VariableDeclarationStatement[50902-50923]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[50465-50531]:IfStatement[50936-51002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50480-50531]:Block[50951-51002]"
    }, {
      "left" : "l >>= (index << 2);",
      "right" : "l >>= (index << 2);",
      "info" : "ExpressionStatement[50498-50517]:ExpressionStatement[50969-50988]"
    }, {
      "left" : "int ix = ((int) l) & 0xF;",
      "right" : "int ix = ((int) l) & 0xF;",
      "info" : "VariableDeclarationStatement[50544-50569]:VariableDeclarationStatement[51015-51040]"
    }, {
      "left" : "return TOKEN_TYPES_BY_INDEX[ix];",
      "right" : "return TOKEN_TYPES_BY_INDEX[ix];",
      "info" : "ReturnStatement[50582-50614]:ReturnStatement[51053-51085]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50634-50640]:Modifier[51105-51111]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[50641-50644]:PrimitiveType[51112-51115]"
    }, {
      "left" : "rawType",
      "right" : "rawType",
      "info" : "SimpleName[50645-50652]:SimpleName[51116-51123]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[50653-50662]:SingleVariableDeclaration[51124-51133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50672-50857]:Block[51143-51328]"
    }, {
      "left" : "long l = _tokenTypes;",
      "right" : "long l = _tokenTypes;",
      "info" : "VariableDeclarationStatement[50686-50707]:VariableDeclarationStatement[51157-51178]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[50720-50786]:IfStatement[51191-51257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50735-50786]:Block[51206-51257]"
    }, {
      "left" : "l >>= (index << 2);",
      "right" : "l >>= (index << 2);",
      "info" : "ExpressionStatement[50753-50772]:ExpressionStatement[51224-51243]"
    }, {
      "left" : "int ix = ((int) l) & 0xF;",
      "right" : "int ix = ((int) l) & 0xF;",
      "info" : "VariableDeclarationStatement[50799-50824]:VariableDeclarationStatement[51270-51295]"
    }, {
      "left" : "return ix;",
      "right" : "return ix;",
      "info" : "ReturnStatement[50837-50847]:ReturnStatement[51308-51318]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50875-50881]:Modifier[51346-51352]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[50882-50888]:SimpleType[51353-51359]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[50889-50892]:SimpleName[51360-51363]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[50893-50902]:SingleVariableDeclaration[51364-51373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50904-50950]:Block[51375-51421]"
    }, {
      "left" : "return _tokens[index];",
      "right" : "return _tokens[index];",
      "info" : "ReturnStatement[50918-50940]:ReturnStatement[51389-51411]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50960-50966]:Modifier[51431-51437]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[50967-50974]:SimpleType[51438-51445]"
    }, {
      "left" : "next",
      "right" : "next",
      "info" : "SimpleName[50975-50979]:SimpleName[51446-51450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50982-50999]:Block[51453-51470]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[50984-50997]:ReturnStatement[51455-51468]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51134-51140]:Modifier[51605-51611]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[51141-51148]:PrimitiveType[51612-51619]"
    }, {
      "left" : "hasIds",
      "right" : "hasIds",
      "info" : "SimpleName[51149-51155]:SimpleName[51620-51626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51158-51208]:Block[51629-51679]"
    }, {
      "left" : "return _nativeIds != null;",
      "right" : "return _nativeIds != null;",
      "info" : "ReturnStatement[51172-51198]:ReturnStatement[51643-51669]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51261-51267]:Modifier[51732-51738]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[51268-51275]:SimpleType[51739-51746]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[51276-51282]:SimpleName[51747-51753]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[51283-51292]:SingleVariableDeclaration[51754-51763]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[51294-51313]:SingleVariableDeclaration[51765-51784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51323-51560]:Block[51794-52031]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[51337-51452]:IfStatement[51808-51923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51369-51452]:Block[51840-51923]"
    }, {
      "left" : "set(index, tokenType);",
      "right" : "set(index, tokenType);",
      "info" : "ExpressionStatement[51387-51409]:ExpressionStatement[51858-51880]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[51426-51438]:ReturnStatement[51897-51909]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[51465-51487]:ExpressionStatement[51936-51958]"
    }, {
      "left" : "_next.set(0, tokenType);",
      "right" : "_next.set(0, tokenType);",
      "info" : "ExpressionStatement[51500-51524]:ExpressionStatement[51971-51995]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[51537-51550]:ReturnStatement[52008-52021]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51570-51576]:Modifier[52041-52047]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[51577-51584]:SimpleType[52048-52055]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[51585-51591]:SimpleName[52056-52062]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[51592-51601]:SingleVariableDeclaration[52063-52072]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[51603-51622]:SingleVariableDeclaration[52074-52093]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[51640-51655]:SingleVariableDeclaration[52111-52126]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[51657-51670]:SingleVariableDeclaration[52128-52141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51680-51953]:Block[52151-52424]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[51694-51827]:IfStatement[52165-52298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51726-51827]:Block[52197-52298]"
    }, {
      "left" : "set(index, tokenType, objectId, typeId);",
      "right" : "set(index, tokenType, objectId, typeId);",
      "info" : "ExpressionStatement[51744-51784]:ExpressionStatement[52215-52255]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[51801-51813]:ReturnStatement[52272-52284]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[51840-51862]:ExpressionStatement[52311-52333]"
    }, {
      "left" : "_next.set(0, tokenType, objectId, typeId);",
      "right" : "_next.set(0, tokenType, objectId, typeId);",
      "info" : "ExpressionStatement[51875-51917]:ExpressionStatement[52346-52388]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[51930-51943]:ReturnStatement[52401-52414]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51963-51969]:Modifier[52434-52440]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[51970-51977]:SimpleType[52441-52448]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[51978-51984]:SimpleName[52449-52455]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[51985-51994]:SingleVariableDeclaration[52456-52465]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[51996-52015]:SingleVariableDeclaration[52467-52486]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[52017-52029]:SingleVariableDeclaration[52488-52500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52039-52290]:Block[52510-52761]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[52053-52175]:IfStatement[52524-52646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52085-52175]:Block[52556-52646]"
    }, {
      "left" : "set(index, tokenType, value);",
      "right" : "set(index, tokenType, value);",
      "info" : "ExpressionStatement[52103-52132]:ExpressionStatement[52574-52603]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[52149-52161]:ReturnStatement[52620-52632]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[52188-52210]:ExpressionStatement[52659-52681]"
    }, {
      "left" : "_next.set(0, tokenType, value);",
      "right" : "_next.set(0, tokenType, value);",
      "info" : "ExpressionStatement[52223-52254]:ExpressionStatement[52694-52725]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[52267-52280]:ReturnStatement[52738-52751]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52300-52306]:Modifier[52771-52777]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[52307-52314]:SimpleType[52778-52785]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[52315-52321]:SimpleName[52786-52792]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[52322-52331]:SingleVariableDeclaration[52793-52802]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[52333-52352]:SingleVariableDeclaration[52804-52823]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[52354-52366]:SingleVariableDeclaration[52825-52837]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[52384-52399]:SingleVariableDeclaration[52855-52870]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[52401-52414]:SingleVariableDeclaration[52872-52885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52424-52711]:Block[52895-53182]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[52438-52578]:IfStatement[52909-53049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52470-52578]:Block[52941-53049]"
    }, {
      "left" : "set(index, tokenType, value, objectId, typeId);",
      "right" : "set(index, tokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[52488-52535]:ExpressionStatement[52959-53006]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[52552-52564]:ReturnStatement[53023-53035]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[52591-52613]:ExpressionStatement[53062-53084]"
    }, {
      "left" : "_next.set(0, tokenType, value, objectId, typeId);",
      "right" : "_next.set(0, tokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[52626-52675]:ExpressionStatement[53097-53146]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[52688-52701]:ReturnStatement[53159-53172]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52721-52727]:Modifier[53192-53198]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[52728-52735]:SimpleType[53199-53206]"
    }, {
      "left" : "appendRaw",
      "right" : "appendRaw",
      "info" : "SimpleName[52736-52745]:SimpleName[53207-53216]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[52746-52755]:SingleVariableDeclaration[53217-53226]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[52757-52773]:SingleVariableDeclaration[53228-53244]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[52775-52787]:SingleVariableDeclaration[53246-53258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52797-53054]:Block[53268-53525]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[52811-52936]:IfStatement[53282-53407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52843-52936]:Block[53314-53407]"
    }, {
      "left" : "set(index, rawTokenType, value);",
      "right" : "set(index, rawTokenType, value);",
      "info" : "ExpressionStatement[52861-52893]:ExpressionStatement[53332-53364]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[52910-52922]:ReturnStatement[53381-53393]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[52949-52971]:ExpressionStatement[53420-53442]"
    }, {
      "left" : "_next.set(0, rawTokenType, value);",
      "right" : "_next.set(0, rawTokenType, value);",
      "info" : "ExpressionStatement[52984-53018]:ExpressionStatement[53455-53489]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[53031-53044]:ReturnStatement[53502-53515]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53064-53070]:Modifier[53535-53541]"
    }, {
      "left" : "Segment",
      "right" : "Segment",
      "info" : "SimpleType[53071-53078]:SimpleType[53542-53549]"
    }, {
      "left" : "appendRaw",
      "right" : "appendRaw",
      "info" : "SimpleName[53079-53088]:SimpleName[53550-53559]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[53089-53098]:SingleVariableDeclaration[53560-53569]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[53100-53116]:SingleVariableDeclaration[53571-53587]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[53118-53130]:SingleVariableDeclaration[53589-53601]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[53148-53163]:SingleVariableDeclaration[53619-53634]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[53165-53178]:SingleVariableDeclaration[53636-53649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53188-53481]:Block[53659-53952]"
    }, {
      "left" : "if (index < TOKENS_PER_SEGMENT)",
      "right" : "if (index < TOKENS_PER_SEGMENT)",
      "info" : "IfStatement[53202-53345]:IfStatement[53673-53816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53234-53345]:Block[53705-53816]"
    }, {
      "left" : "set(index, rawTokenType, value, objectId, typeId);",
      "right" : "set(index, rawTokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[53252-53302]:ExpressionStatement[53723-53773]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[53319-53331]:ReturnStatement[53790-53802]"
    }, {
      "left" : "_next = new Segment();",
      "right" : "_next = new Segment();",
      "info" : "ExpressionStatement[53358-53380]:ExpressionStatement[53829-53851]"
    }, {
      "left" : "_next.set(0, rawTokenType, value, objectId, typeId);",
      "right" : "_next.set(0, rawTokenType, value, objectId, typeId);",
      "info" : "ExpressionStatement[53393-53445]:ExpressionStatement[53864-53916]"
    }, {
      "left" : "return _next;",
      "right" : "return _next;",
      "info" : "ReturnStatement[53458-53471]:ReturnStatement[53929-53942]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[53491-53498]:Modifier[53962-53969]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[53499-53503]:PrimitiveType[53970-53974]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[53504-53507]:SimpleName[53975-53978]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[53508-53517]:SingleVariableDeclaration[53979-53988]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[53519-53538]:SingleVariableDeclaration[53990-54009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53548-53899]:Block[54019-54370]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[53730-53766]:VariableDeclarationStatement[54201-54237]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[53779-53852]:IfStatement[54250-54323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53794-53852]:Block[54265-54323]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[53812-53838]:ExpressionStatement[54283-54309]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[53865-53889]:ExpressionStatement[54336-54360]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[53909-53916]:Modifier[54380-54387]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[53917-53921]:PrimitiveType[54388-54392]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[53922-53925]:SimpleName[54393-54396]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[53926-53935]:SingleVariableDeclaration[54397-54406]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[53937-53956]:SingleVariableDeclaration[54408-54427]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[53974-53989]:SingleVariableDeclaration[54445-54460]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[53991-54004]:SingleVariableDeclaration[54462-54475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54014-54251]:Block[54485-54722]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[54028-54064]:VariableDeclarationStatement[54499-54535]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[54077-54150]:IfStatement[54548-54621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54092-54150]:Block[54563-54621]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[54110-54136]:ExpressionStatement[54581-54607]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[54163-54187]:ExpressionStatement[54634-54658]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[54200-54241]:ExpressionStatement[54671-54712]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[54261-54268]:Modifier[54732-54739]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[54269-54273]:PrimitiveType[54740-54744]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[54274-54277]:SimpleName[54745-54748]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[54278-54287]:SingleVariableDeclaration[54749-54758]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[54289-54308]:SingleVariableDeclaration[54760-54779]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[54310-54322]:SingleVariableDeclaration[54781-54793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54332-54551]:Block[54803-55022]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[54346-54369]:ExpressionStatement[54817-54840]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[54382-54418]:VariableDeclarationStatement[54853-54889]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[54431-54504]:IfStatement[54902-54975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54446-54504]:Block[54917-54975]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[54464-54490]:ExpressionStatement[54935-54961]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[54517-54541]:ExpressionStatement[54988-55012]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[54561-54568]:Modifier[55032-55039]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[54569-54573]:PrimitiveType[55040-55044]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[54574-54577]:SimpleName[55045-55048]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[54578-54587]:SingleVariableDeclaration[55049-55058]"
    }, {
      "left" : "JsonToken tokenType",
      "right" : "JsonToken tokenType",
      "info" : "SingleVariableDeclaration[54589-54608]:SingleVariableDeclaration[55060-55079]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[54610-54622]:SingleVariableDeclaration[55081-55093]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[54640-54655]:SingleVariableDeclaration[55111-55126]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[54657-54670]:SingleVariableDeclaration[55128-55141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54680-54953]:Block[55151-55424]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[54694-54717]:ExpressionStatement[55165-55188]"
    }, {
      "left" : "long typeCode = tokenType.ordinal();",
      "right" : "long typeCode = tokenType.ordinal();",
      "info" : "VariableDeclarationStatement[54730-54766]:VariableDeclarationStatement[55201-55237]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[54779-54852]:IfStatement[55250-55323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54794-54852]:Block[55265-55323]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[54812-54838]:ExpressionStatement[55283-55309]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[54865-54889]:ExpressionStatement[55336-55360]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[54902-54943]:ExpressionStatement[55373-55414]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[54963-54970]:Modifier[55434-55441]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[54971-54975]:PrimitiveType[55442-55446]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[54976-54979]:SimpleName[55447-55450]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[54980-54989]:SingleVariableDeclaration[55451-55460]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[54991-55007]:SingleVariableDeclaration[55462-55478]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[55009-55021]:SingleVariableDeclaration[55480-55492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55031-55250]:Block[55502-55721]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[55045-55068]:ExpressionStatement[55516-55539]"
    }, {
      "left" : "long typeCode = (long) rawTokenType;",
      "right" : "long typeCode = (long) rawTokenType;",
      "info" : "VariableDeclarationStatement[55081-55117]:VariableDeclarationStatement[55552-55588]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[55130-55203]:IfStatement[55601-55674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55145-55203]:Block[55616-55674]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[55163-55189]:ExpressionStatement[55634-55660]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[55216-55240]:ExpressionStatement[55687-55711]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[55260-55267]:Modifier[55731-55738]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55268-55272]:PrimitiveType[55739-55743]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[55273-55276]:SimpleName[55744-55747]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[55277-55286]:SingleVariableDeclaration[55748-55757]"
    }, {
      "left" : "int rawTokenType",
      "right" : "int rawTokenType",
      "info" : "SingleVariableDeclaration[55288-55304]:SingleVariableDeclaration[55759-55775]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[55306-55318]:SingleVariableDeclaration[55777-55789]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[55320-55335]:SingleVariableDeclaration[55791-55806]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[55337-55350]:SingleVariableDeclaration[55808-55821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55360-55633]:Block[55831-56104]"
    }, {
      "left" : "_tokens[index] = value;",
      "right" : "_tokens[index] = value;",
      "info" : "ExpressionStatement[55374-55397]:ExpressionStatement[55845-55868]"
    }, {
      "left" : "long typeCode = (long) rawTokenType;",
      "right" : "long typeCode = (long) rawTokenType;",
      "info" : "VariableDeclarationStatement[55410-55446]:VariableDeclarationStatement[55881-55917]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[55459-55532]:IfStatement[55930-56003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55474-55532]:Block[55945-56003]"
    }, {
      "left" : "typeCode <<= (index << 2);",
      "right" : "typeCode <<= (index << 2);",
      "info" : "ExpressionStatement[55492-55518]:ExpressionStatement[55963-55989]"
    }, {
      "left" : "_tokenTypes |= typeCode;",
      "right" : "_tokenTypes |= typeCode;",
      "info" : "ExpressionStatement[55545-55569]:ExpressionStatement[56016-56040]"
    }, {
      "left" : "assignNativeIds(index, objectId, typeId);",
      "right" : "assignNativeIds(index, objectId, typeId);",
      "info" : "ExpressionStatement[55582-55623]:ExpressionStatement[56053-56094]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[55643-55650]:Modifier[56114-56121]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[55651-55656]:Modifier[56122-56127]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55657-55661]:PrimitiveType[56128-56132]"
    }, {
      "left" : "assignNativeIds",
      "right" : "assignNativeIds",
      "info" : "SimpleName[55662-55677]:SimpleName[56133-56148]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[55678-55687]:SingleVariableDeclaration[56149-56158]"
    }, {
      "left" : "Object objectId",
      "right" : "Object objectId",
      "info" : "SingleVariableDeclaration[55689-55704]:SingleVariableDeclaration[56160-56175]"
    }, {
      "left" : "Object typeId",
      "right" : "Object typeId",
      "info" : "SingleVariableDeclaration[55706-55719]:SingleVariableDeclaration[56177-56190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55729-56076]:Block[56200-56547]"
    }, {
      "left" : "if (_nativeIds == null)",
      "right" : "if (_nativeIds == null)",
      "info" : "IfStatement[55743-55842]:IfStatement[56214-56313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55767-55842]:Block[56238-56313]"
    }, {
      "left" : "_nativeIds = new TreeMap<Integer,Object>();",
      "right" : "_nativeIds = new TreeMap<Integer,Object>();",
      "info" : "ExpressionStatement[55785-55828]:ExpressionStatement[56256-56299]"
    }, {
      "left" : "if (objectId != null)",
      "right" : "if (objectId != null)",
      "info" : "IfStatement[55855-55957]:IfStatement[56326-56428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55877-55957]:Block[56348-56428]"
    }, {
      "left" : "_nativeIds.put(_objectIdIndex(index), objectId);",
      "right" : "_nativeIds.put(_objectIdIndex(index), objectId);",
      "info" : "ExpressionStatement[55895-55943]:ExpressionStatement[56366-56414]"
    }, {
      "left" : "if (typeId != null)",
      "right" : "if (typeId != null)",
      "info" : "IfStatement[55970-56066]:IfStatement[56441-56537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55990-56066]:Block[56461-56537]"
    }, {
      "left" : "_nativeIds.put(_typeIdIndex(index), typeId);",
      "right" : "_nativeIds.put(_typeIdIndex(index), typeId);",
      "info" : "ExpressionStatement[56008-56052]:ExpressionStatement[56479-56523]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56132-56138]:Modifier[56603-56609]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[56139-56145]:SimpleType[56610-56616]"
    }, {
      "left" : "findObjectId",
      "right" : "findObjectId",
      "info" : "SimpleName[56146-56158]:SimpleName[56617-56629]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[56159-56168]:SingleVariableDeclaration[56630-56639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56170-56269]:Block[56641-56740]"
    }, {
      "left" : "return (_nativeIds == null) ? null : _nativeIds.get(_objectIdIndex(index));",
      "right" : "return (_nativeIds == null) ? null : _nativeIds.get(_objectIdIndex(index));",
      "info" : "ReturnStatement[56184-56259]:ReturnStatement[56655-56730]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56333-56339]:Modifier[56804-56810]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[56340-56346]:SimpleType[56811-56817]"
    }, {
      "left" : "findTypeId",
      "right" : "findTypeId",
      "info" : "SimpleName[56347-56357]:SimpleName[56818-56828]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[56358-56367]:SingleVariableDeclaration[56829-56838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56369-56466]:Block[56840-56937]"
    }, {
      "left" : "return (_nativeIds == null) ? null : _nativeIds.get(_typeIdIndex(index));",
      "right" : "return (_nativeIds == null) ? null : _nativeIds.get(_typeIdIndex(index));",
      "info" : "ReturnStatement[56383-56456]:ReturnStatement[56854-56927]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[56476-56483]:Modifier[56947-56954]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[56484-56489]:Modifier[56955-56960]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[56490-56493]:PrimitiveType[56961-56964]"
    }, {
      "left" : "_typeIdIndex",
      "right" : "_typeIdIndex",
      "info" : "SimpleName[56494-56506]:SimpleName[56965-56977]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[56507-56512]:SingleVariableDeclaration[56978-56983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56514-56529]:Block[56985-57000]"
    }, {
      "left" : "return i+i;",
      "right" : "return i+i;",
      "info" : "ReturnStatement[56516-56527]:ReturnStatement[56987-56998]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[56538-56545]:Modifier[57009-57016]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[56546-56551]:Modifier[57017-57022]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[56552-56555]:PrimitiveType[57023-57026]"
    }, {
      "left" : "_objectIdIndex",
      "right" : "_objectIdIndex",
      "info" : "SimpleName[56556-56570]:SimpleName[57027-57041]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[56571-56576]:SingleVariableDeclaration[57042-57047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56578-56595]:Block[57049-57066]"
    }, {
      "left" : "return i+i+1;",
      "right" : "return i+i+1;",
      "info" : "ReturnStatement[56580-56593]:ReturnStatement[57051-57064]"
    } ]
  },
  "interFileMappings" : { }
}