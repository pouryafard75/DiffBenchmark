{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "TypeDeclaration[1058-80825]:TypeDeclaration[1058-80810]"
    }, {
      "left" : "static final int CAPACITY = 32;",
      "right" : "static final int CAPACITY = 32;",
      "info" : "FieldDeclaration[2875-2966]:FieldDeclaration[2875-2966]"
    }, {
      "left" : "private static final long serialVersionUID = 7628716375283629643L;",
      "right" : "private static final long serialVersionUID = 7628716375283629643L;",
      "info" : "FieldDeclaration[2972-3138]:FieldDeclaration[2972-3138]"
    }, {
      "left" : "protected char[] buffer;",
      "right" : "protected char[] buffer;",
      "info" : "FieldDeclaration[3144-3202]:FieldDeclaration[3144-3202]"
    }, {
      "left" : "protected int size;",
      "right" : "protected int size;",
      "info" : "FieldDeclaration[3207-3265]:FieldDeclaration[3207-3265]"
    }, {
      "left" : "private String newLine;",
      "right" : "private String newLine;",
      "info" : "FieldDeclaration[3270-3318]:FieldDeclaration[3270-3318]"
    }, {
      "left" : "private String nullText;",
      "right" : "private String nullText;",
      "info" : "FieldDeclaration[3323-3373]:FieldDeclaration[3323-3373]"
    }, {
      "left" : "public StrBuilder()",
      "right" : "public StrBuilder()",
      "info" : "MethodDeclaration[3457-3605]:MethodDeclaration[3457-3605]"
    }, {
      "left" : "public StrBuilder(int initialCapacity)",
      "right" : "public StrBuilder(int initialCapacity)",
      "info" : "MethodDeclaration[3611-3998]:MethodDeclaration[3611-3998]"
    }, {
      "left" : "public StrBuilder(String str)",
      "right" : "public StrBuilder(String str)",
      "info" : "MethodDeclaration[4004-4434]:MethodDeclaration[4004-4434]"
    }, {
      "left" : "public String getNewLineText()",
      "right" : "public String getNewLineText()",
      "info" : "MethodDeclaration[4518-4729]:MethodDeclaration[4518-4729]"
    }, {
      "left" : "public StrBuilder setNewLineText(String newLine)",
      "right" : "public StrBuilder setNewLineText(String newLine)",
      "info" : "MethodDeclaration[4735-5041]:MethodDeclaration[4735-5041]"
    }, {
      "left" : "public String getNullText()",
      "right" : "public String getNullText()",
      "info" : "MethodDeclaration[5125-5315]:MethodDeclaration[5125-5315]"
    }, {
      "left" : "public StrBuilder setNullText(String nullText)",
      "right" : "public StrBuilder setNullText(String nullText)",
      "info" : "MethodDeclaration[5321-5706]:MethodDeclaration[5321-5706]"
    }, {
      "left" : "public int length()",
      "right" : "public int length()",
      "info" : "MethodDeclaration[5790-5933]:MethodDeclaration[5790-5933]"
    }, {
      "left" : "public StrBuilder setLength(int length)",
      "right" : "public StrBuilder setLength(int length)",
      "info" : "MethodDeclaration[5939-6755]:MethodDeclaration[5939-6755]"
    }, {
      "left" : "public int capacity()",
      "right" : "public int capacity()",
      "info" : "MethodDeclaration[6839-7018]:MethodDeclaration[6839-7018]"
    }, {
      "left" : "public StrBuilder ensureCapacity(int capacity)",
      "right" : "public StrBuilder ensureCapacity(int capacity)",
      "info" : "MethodDeclaration[7024-7467]:MethodDeclaration[7024-7467]"
    }, {
      "left" : "public StrBuilder minimizeCapacity()",
      "right" : "public StrBuilder minimizeCapacity()",
      "info" : "MethodDeclaration[7473-7846]:MethodDeclaration[7473-7846]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[7930-8190]:MethodDeclaration[7930-8190]"
    }, {
      "left" : "public boolean isEmpty()",
      "right" : "public boolean isEmpty()",
      "info" : "MethodDeclaration[8196-8558]:MethodDeclaration[8196-8558]"
    }, {
      "left" : "public StrBuilder clear()",
      "right" : "public StrBuilder clear()",
      "info" : "MethodDeclaration[8564-9093]:MethodDeclaration[8564-9093]"
    }, {
      "left" : "public char charAt(int index)",
      "right" : "public char charAt(int index)",
      "info" : "MethodDeclaration[9177-9665]:MethodDeclaration[9177-9665]"
    }, {
      "left" : "public StrBuilder setCharAt(int index, char ch)",
      "right" : "public StrBuilder setCharAt(int index, char ch)",
      "info" : "MethodDeclaration[9671-10201]:MethodDeclaration[9671-10201]"
    }, {
      "left" : "public StrBuilder deleteCharAt(int index)",
      "right" : "public StrBuilder deleteCharAt(int index)",
      "info" : "MethodDeclaration[10207-10713]:MethodDeclaration[10207-10713]"
    }, {
      "left" : "public char[] toCharArray()",
      "right" : "public char[] toCharArray()",
      "info" : "MethodDeclaration[10797-11196]:MethodDeclaration[10797-11196]"
    }, {
      "left" : "public char[] toCharArray(int startIndex, int endIndex)",
      "right" : "public char[] toCharArray(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[11202-12082]:MethodDeclaration[11202-12082]"
    }, {
      "left" : "public char[] getChars(char[] destination)",
      "right" : "public char[] getChars(char[] destination)",
      "info" : "MethodDeclaration[12088-12605]:MethodDeclaration[12088-12605]"
    }, {
      "left" : "public void getChars(int startIndex, int endIndex, char destination[], int destinationIndex)",
      "right" : "public void getChars(int startIndex, int endIndex, char destination[], int destinationIndex)",
      "info" : "MethodDeclaration[12611-13653]:MethodDeclaration[12611-13653]"
    }, {
      "left" : "public StrBuilder appendNewLine()",
      "right" : "public StrBuilder appendNewLine()",
      "info" : "MethodDeclaration[13737-14246]:MethodDeclaration[13737-14246]"
    }, {
      "left" : "public StrBuilder appendNull()",
      "right" : "public StrBuilder appendNull()",
      "info" : "MethodDeclaration[14252-14533]:MethodDeclaration[14252-14533]"
    }, {
      "left" : "public StrBuilder append(Object obj)",
      "right" : "public StrBuilder append(Object obj)",
      "info" : "MethodDeclaration[14539-14908]:MethodDeclaration[14539-14908]"
    }, {
      "left" : "public StrBuilder append(String str)",
      "right" : "public StrBuilder append(String str)",
      "info" : "MethodDeclaration[14914-15478]:MethodDeclaration[14914-15478]"
    }, {
      "left" : "public StrBuilder append(String str, int startIndex, int length)",
      "right" : "public StrBuilder append(String str, int startIndex, int length)",
      "info" : "MethodDeclaration[15484-16504]:MethodDeclaration[15484-16504]"
    }, {
      "left" : "public StrBuilder append(StringBuffer str)",
      "right" : "public StrBuilder append(StringBuffer str)",
      "info" : "MethodDeclaration[16510-17094]:MethodDeclaration[16510-17094]"
    }, {
      "left" : "public StrBuilder append(StringBuffer str, int startIndex, int length)",
      "right" : "public StrBuilder append(StringBuffer str, int startIndex, int length)",
      "info" : "MethodDeclaration[17100-18133]:MethodDeclaration[17100-18133]"
    }, {
      "left" : "public StrBuilder append(StrBuilder str)",
      "right" : "public StrBuilder append(StrBuilder str)",
      "info" : "MethodDeclaration[18139-18745]:MethodDeclaration[18139-18745]"
    }, {
      "left" : "public StrBuilder append(StrBuilder str, int startIndex, int length)",
      "right" : "public StrBuilder append(StrBuilder str, int startIndex, int length)",
      "info" : "MethodDeclaration[18751-19783]:MethodDeclaration[18751-19783]"
    }, {
      "left" : "public StrBuilder append(char[] chars)",
      "right" : "public StrBuilder append(char[] chars)",
      "info" : "MethodDeclaration[19789-20377]:MethodDeclaration[19789-20377]"
    }, {
      "left" : "public StrBuilder append(char[] chars, int startIndex, int length)",
      "right" : "public StrBuilder append(char[] chars, int startIndex, int length)",
      "info" : "MethodDeclaration[20383-21416]:MethodDeclaration[20383-21416]"
    }, {
      "left" : "public StrBuilder append(boolean value)",
      "right" : "public StrBuilder append(boolean value)",
      "info" : "MethodDeclaration[21422-22078]:MethodDeclaration[21422-22078]"
    }, {
      "left" : "public StrBuilder append(char ch)",
      "right" : "public StrBuilder append(char ch)",
      "info" : "MethodDeclaration[22084-22388]:MethodDeclaration[22084-22388]"
    }, {
      "left" : "public StrBuilder append(int value)",
      "right" : "public StrBuilder append(int value)",
      "info" : "MethodDeclaration[22394-22672]:MethodDeclaration[22394-22672]"
    }, {
      "left" : "public StrBuilder append(long value)",
      "right" : "public StrBuilder append(long value)",
      "info" : "MethodDeclaration[22678-22957]:MethodDeclaration[22678-22957]"
    }, {
      "left" : "public StrBuilder append(float value)",
      "right" : "public StrBuilder append(float value)",
      "info" : "MethodDeclaration[22963-23244]:MethodDeclaration[22963-23244]"
    }, {
      "left" : "public StrBuilder append(double value)",
      "right" : "public StrBuilder append(double value)",
      "info" : "MethodDeclaration[23250-23533]:MethodDeclaration[23250-23533]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Object[] array, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Object[] array, String separator)",
      "info" : "MethodDeclaration[23617-24407]:MethodDeclaration[23617-24407]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Collection coll, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Collection coll, String separator)",
      "info" : "MethodDeclaration[24413-25269]:MethodDeclaration[24413-25269]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Iterator it, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Iterator it, String separator)",
      "info" : "MethodDeclaration[25275-26056]:MethodDeclaration[25275-26056]"
    }, {
      "left" : "public StrBuilder appendPadding(int length, char padChar)",
      "right" : "public StrBuilder appendPadding(int length, char padChar)",
      "info" : "MethodDeclaration[26140-26668]:MethodDeclaration[26140-26668]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadLeft(Object obj, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadLeft(Object obj, int width, char padChar)",
      "info" : "MethodDeclaration[26752-27956]:MethodDeclaration[26752-27956]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadLeft(int value, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadLeft(int value, int width, char padChar)",
      "info" : "MethodDeclaration[27962-28595]:MethodDeclaration[27962-28595]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar)",
      "info" : "MethodDeclaration[28601-29792]:MethodDeclaration[28601-29792]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadRight(int value, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadRight(int value, int width, char padChar)",
      "info" : "MethodDeclaration[29798-30427]:MethodDeclaration[29798-30427]"
    }, {
      "left" : "public StrBuilder insert(int index, Object obj)",
      "right" : "public StrBuilder insert(int index, Object obj)",
      "info" : "MethodDeclaration[30511-31049]:MethodDeclaration[30511-31049]"
    }, {
      "left" : "public StrBuilder insert(int index, String str)",
      "right" : "public StrBuilder insert(int index, String str)",
      "info" : "MethodDeclaration[31055-31886]:MethodDeclaration[31055-31886]"
    }, {
      "left" : "public StrBuilder insert(int index, char chars[])",
      "right" : "public StrBuilder insert(int index, char chars[])",
      "info" : "MethodDeclaration[31892-32696]:MethodDeclaration[31892-32696]"
    }, {
      "left" : "public StrBuilder insert(int index, char chars[], int offset, int length)",
      "right" : "public StrBuilder insert(int index, char chars[], int offset, int length)",
      "info" : "MethodDeclaration[32702-33997]:MethodDeclaration[32702-33997]"
    }, {
      "left" : "public StrBuilder insert(int index, boolean value)",
      "right" : "public StrBuilder insert(int index, boolean value)",
      "info" : "MethodDeclaration[34003-35018]:MethodDeclaration[34003-35018]"
    }, {
      "left" : "public StrBuilder insert(int index, char value)",
      "right" : "public StrBuilder insert(int index, char value)",
      "info" : "MethodDeclaration[35024-35554]:MethodDeclaration[35024-35554]"
    }, {
      "left" : "public StrBuilder insert(int index, int value)",
      "right" : "public StrBuilder insert(int index, int value)",
      "info" : "MethodDeclaration[35560-35936]:MethodDeclaration[35560-35936]"
    }, {
      "left" : "public StrBuilder insert(int index, long value)",
      "right" : "public StrBuilder insert(int index, long value)",
      "info" : "MethodDeclaration[35942-36319]:MethodDeclaration[35942-36319]"
    }, {
      "left" : "public StrBuilder insert(int index, float value)",
      "right" : "public StrBuilder insert(int index, float value)",
      "info" : "MethodDeclaration[36325-36703]:MethodDeclaration[36325-36703]"
    }, {
      "left" : "public StrBuilder insert(int index, double value)",
      "right" : "public StrBuilder insert(int index, double value)",
      "info" : "MethodDeclaration[36709-37088]:MethodDeclaration[36709-37088]"
    }, {
      "left" : "private void deleteImpl(int startIndex, int endIndex, int len)",
      "right" : "private void deleteImpl(int startIndex, int endIndex, int len)",
      "info" : "MethodDeclaration[37172-37660]:MethodDeclaration[37172-37660]"
    }, {
      "left" : "public StrBuilder delete(int startIndex, int endIndex)",
      "right" : "public StrBuilder delete(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[37666-38319]:MethodDeclaration[37666-38319]"
    }, {
      "left" : "public StrBuilder deleteAll(char ch)",
      "right" : "public StrBuilder deleteAll(char ch)",
      "info" : "MethodDeclaration[38403-39025]:MethodDeclaration[38403-39025]"
    }, {
      "left" : "public StrBuilder deleteFirst(char ch)",
      "right" : "public StrBuilder deleteFirst(char ch)",
      "info" : "MethodDeclaration[39031-39431]:MethodDeclaration[39031-39431]"
    }, {
      "left" : "public StrBuilder deleteAll(String str)",
      "right" : "public StrBuilder deleteAll(String str)",
      "info" : "MethodDeclaration[39515-40041]:MethodDeclaration[39515-40041]"
    }, {
      "left" : "public StrBuilder deleteFirst(String str)",
      "right" : "public StrBuilder deleteFirst(String str)",
      "info" : "MethodDeclaration[40047-40527]:MethodDeclaration[40047-40527]"
    }, {
      "left" : "public StrBuilder deleteAll(StrMatcher matcher)",
      "right" : "public StrBuilder deleteAll(StrMatcher matcher)",
      "info" : "MethodDeclaration[40611-41138]:MethodDeclaration[40611-41138]"
    }, {
      "left" : "public StrBuilder deleteFirst(StrMatcher matcher)",
      "right" : "public StrBuilder deleteFirst(StrMatcher matcher)",
      "info" : "MethodDeclaration[41144-41670]:MethodDeclaration[41144-41670]"
    }, {
      "left" : "private void replaceImpl(int startIndex, int endIndex, int removeLen, String insertStr, int insertLen)",
      "right" : "private void replaceImpl(int startIndex, int endIndex, int removeLen, String insertStr, int insertLen)",
      "info" : "MethodDeclaration[41754-42736]:MethodDeclaration[41754-42736]"
    }, {
      "left" : "public StrBuilder replace(int startIndex, int endIndex, String replaceStr)",
      "right" : "public StrBuilder replace(int startIndex, int endIndex, String replaceStr)",
      "info" : "MethodDeclaration[42742-43617]:MethodDeclaration[42742-43617]"
    }, {
      "left" : "public StrBuilder replaceAll(char search, char replace)",
      "right" : "public StrBuilder replaceAll(char search, char replace)",
      "info" : "MethodDeclaration[43701-44235]:MethodDeclaration[43701-44235]"
    }, {
      "left" : "public StrBuilder replaceFirst(char search, char replace)",
      "right" : "public StrBuilder replaceFirst(char search, char replace)",
      "info" : "MethodDeclaration[44241-44818]:MethodDeclaration[44241-44818]"
    }, {
      "left" : "public StrBuilder replaceAll(String searchStr, String replaceStr)",
      "right" : "public StrBuilder replaceAll(String searchStr, String replaceStr)",
      "info" : "MethodDeclaration[44902-45734]:MethodDeclaration[44902-45734]"
    }, {
      "left" : "public StrBuilder replaceFirst(String searchStr, String replaceStr)",
      "right" : "public StrBuilder replaceFirst(String searchStr, String replaceStr)",
      "info" : "MethodDeclaration[45740-46510]:MethodDeclaration[45740-46510]"
    }, {
      "left" : "public StrBuilder replaceAll(StrMatcher matcher, String replaceStr)",
      "right" : "public StrBuilder replaceAll(StrMatcher matcher, String replaceStr)",
      "info" : "MethodDeclaration[46594-47237]:MethodDeclaration[46594-47237]"
    }, {
      "left" : "public StrBuilder replaceFirst(StrMatcher matcher, String replaceStr)",
      "right" : "public StrBuilder replaceFirst(StrMatcher matcher, String replaceStr)",
      "info" : "MethodDeclaration[47243-47876]:MethodDeclaration[47243-47876]"
    }, {
      "left" : "public StrBuilder replace(\n            StrMatcher matcher, String replaceStr,\n            int startIndex, int endIndex, int replaceCount)",
      "right" : "public StrBuilder replace(\n            StrMatcher matcher, String replaceStr,\n            int startIndex, int endIndex, int replaceCount)",
      "info" : "MethodDeclaration[47961-49087]:MethodDeclaration[47961-49087]"
    }, {
      "left" : "private StrBuilder replaceImpl(\n            StrMatcher matcher, String replaceStr,\n            int from, int to, int replaceCount)",
      "right" : "private StrBuilder replaceImpl(\n            StrMatcher matcher, String replaceStr,\n            int from, int to, int replaceCount)",
      "info" : "MethodDeclaration[49093-50614]:MethodDeclaration[49093-50614]"
    }, {
      "left" : "public StrBuilder reverse()",
      "right" : "public StrBuilder reverse()",
      "info" : "MethodDeclaration[50698-51241]:MethodDeclaration[50698-51241]"
    }, {
      "left" : "public StrBuilder trim()",
      "right" : "public StrBuilder trim()",
      "info" : "MethodDeclaration[51325-51972]:MethodDeclaration[51325-51972]"
    }, {
      "left" : "public boolean startsWith(String str)",
      "right" : "public boolean startsWith(String str)",
      "info" : "MethodDeclaration[52056-52776]:MethodDeclaration[52056-52776]"
    }, {
      "left" : "public boolean endsWith(String str)",
      "right" : "public boolean endsWith(String str)",
      "info" : "MethodDeclaration[52782-53534]:MethodDeclaration[52782-53534]"
    }, {
      "left" : "public String substring(int start)",
      "right" : "public String substring(int start)",
      "info" : "MethodDeclaration[53618-53943]:MethodDeclaration[53618-53943]"
    }, {
      "left" : "public String substring(int startIndex, int endIndex)",
      "right" : "public String substring(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[53949-54720]:MethodDeclaration[53949-54720]"
    }, {
      "left" : "public String leftString(int length)",
      "right" : "public String leftString(int length)",
      "info" : "MethodDeclaration[54726-55486]:MethodDeclaration[54726-55486]"
    }, {
      "left" : "public String rightString(int length)",
      "right" : "public String rightString(int length)",
      "info" : "MethodDeclaration[55492-56267]:MethodDeclaration[55492-56267]"
    }, {
      "left" : "public String midString(int index, int length)",
      "right" : "public String midString(int index, int length)",
      "info" : "MethodDeclaration[56273-57453]:MethodDeclaration[56273-57453]"
    }, {
      "left" : "public boolean contains(char ch)",
      "right" : "public boolean contains(char ch)",
      "info" : "MethodDeclaration[57537-57958]:MethodDeclaration[57537-57953]"
    }, {
      "left" : "public boolean contains(String str)",
      "right" : "public boolean contains(String str)",
      "info" : "MethodDeclaration[57964-58227]:MethodDeclaration[57959-58222]"
    }, {
      "left" : "public boolean contains(StrMatcher matcher)",
      "right" : "public boolean contains(StrMatcher matcher)",
      "info" : "MethodDeclaration[58233-58755]:MethodDeclaration[58228-58750]"
    }, {
      "left" : "public int indexOf(char ch)",
      "right" : "public int indexOf(char ch)",
      "info" : "MethodDeclaration[58839-59123]:MethodDeclaration[58834-59118]"
    }, {
      "left" : "public int indexOf(char ch, int startIndex)",
      "right" : "public int indexOf(char ch, int startIndex)",
      "info" : "MethodDeclaration[59129-59798]:MethodDeclaration[59124-59783]"
    }, {
      "left" : "public int indexOf(String str)",
      "right" : "public int indexOf(String str)",
      "info" : "MethodDeclaration[59804-60207]:MethodDeclaration[59789-60192]"
    }, {
      "left" : "public int indexOf(String str, int startIndex)",
      "right" : "public int indexOf(String str, int startIndex)",
      "info" : "MethodDeclaration[60213-61476]:MethodDeclaration[60198-61461]"
    }, {
      "left" : "public int indexOf(StrMatcher matcher)",
      "right" : "public int indexOf(StrMatcher matcher)",
      "info" : "MethodDeclaration[61482-61963]:MethodDeclaration[61467-61948]"
    }, {
      "left" : "public int indexOf(StrMatcher matcher, int startIndex)",
      "right" : "public int indexOf(StrMatcher matcher, int startIndex)",
      "info" : "MethodDeclaration[61969-62924]:MethodDeclaration[61954-62909]"
    }, {
      "left" : "public int lastIndexOf(char ch)",
      "right" : "public int lastIndexOf(char ch)",
      "info" : "MethodDeclaration[63008-63305]:MethodDeclaration[62993-63290]"
    }, {
      "left" : "public int lastIndexOf(char ch, int startIndex)",
      "right" : "public int lastIndexOf(char ch, int startIndex)",
      "info" : "MethodDeclaration[63311-63943]:MethodDeclaration[63296-63928]"
    }, {
      "left" : "public int lastIndexOf(String str)",
      "right" : "public int lastIndexOf(String str)",
      "info" : "MethodDeclaration[63949-64365]:MethodDeclaration[63934-64350]"
    }, {
      "left" : "public int lastIndexOf(String str, int startIndex)",
      "right" : "public int lastIndexOf(String str, int startIndex)",
      "info" : "MethodDeclaration[64371-65639]:MethodDeclaration[64356-65624]"
    }, {
      "left" : "public int lastIndexOf(StrMatcher matcher)",
      "right" : "public int lastIndexOf(StrMatcher matcher)",
      "info" : "MethodDeclaration[65645-66135]:MethodDeclaration[65630-66120]"
    }, {
      "left" : "public int lastIndexOf(StrMatcher matcher, int startIndex)",
      "right" : "public int lastIndexOf(StrMatcher matcher, int startIndex)",
      "info" : "MethodDeclaration[66141-67115]:MethodDeclaration[66126-67100]"
    }, {
      "left" : "public StrTokenizer asTokenizer()",
      "right" : "public StrTokenizer asTokenizer()",
      "info" : "MethodDeclaration[67199-68923]:MethodDeclaration[67184-68908]"
    }, {
      "left" : "public Reader asReader()",
      "right" : "public Reader asReader()",
      "info" : "MethodDeclaration[69007-69923]:MethodDeclaration[68992-69908]"
    }, {
      "left" : "public Writer asWriter()",
      "right" : "public Writer asWriter()",
      "info" : "MethodDeclaration[70007-71014]:MethodDeclaration[69992-70999]"
    }, {
      "left" : "public boolean equalsIgnoreCase(StrBuilder other)",
      "right" : "public boolean equalsIgnoreCase(StrBuilder other)",
      "info" : "MethodDeclaration[72356-73203]:MethodDeclaration[72341-73188]"
    }, {
      "left" : "public boolean equals(StrBuilder other)",
      "right" : "public boolean equals(StrBuilder other)",
      "info" : "MethodDeclaration[73209-73922]:MethodDeclaration[73194-73907]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[73928-74368]:MethodDeclaration[73913-74353]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[74374-74671]:MethodDeclaration[74359-74656]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[74755-75130]:MethodDeclaration[74740-75115]"
    }, {
      "left" : "public StringBuffer toStringBuffer()",
      "right" : "public StringBuffer toStringBuffer()",
      "info" : "MethodDeclaration[75136-75432]:MethodDeclaration[75121-75417]"
    }, {
      "left" : "protected int validateRange(int startIndex, int endIndex)",
      "right" : "protected int validateRange(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[75516-76276]:MethodDeclaration[75501-76261]"
    }, {
      "left" : "protected void validateIndex(int index)",
      "right" : "protected void validateIndex(int index)",
      "info" : "MethodDeclaration[76282-76645]:MethodDeclaration[76267-76630]"
    }, {
      "left" : "StrBuilderTokenizer",
      "right" : "StrBuilderTokenizer",
      "info" : "TypeDeclaration[76729-77555]:TypeDeclaration[76714-77540]"
    }, {
      "left" : "StrBuilderTokenizer()",
      "right" : "StrBuilderTokenizer()",
      "info" : "MethodDeclaration[76869-76952]:MethodDeclaration[76854-76937]"
    }, {
      "left" : "protected List tokenize(char[] chars, int offset, int count)",
      "right" : "protected List tokenize(char[] chars, int offset, int count)",
      "info" : "MethodDeclaration[76962-77282]:MethodDeclaration[76947-77267]"
    }, {
      "left" : "public String getContent()",
      "right" : "public String getContent()",
      "info" : "MethodDeclaration[77292-77549]:MethodDeclaration[77277-77534]"
    }, {
      "left" : "StrBuilderReader",
      "right" : "StrBuilderReader",
      "info" : "TypeDeclaration[77639-79667]:TypeDeclaration[77624-79652]"
    }, {
      "left" : "private int pos;",
      "right" : "private int pos;",
      "info" : "FieldDeclaration[77766-77826]:FieldDeclaration[77751-77811]"
    }, {
      "left" : "private int mark;",
      "right" : "private int mark;",
      "info" : "FieldDeclaration[77835-77891]:FieldDeclaration[77820-77876]"
    }, {
      "left" : "StrBuilderReader()",
      "right" : "StrBuilderReader()",
      "info" : "MethodDeclaration[77901-77981]:MethodDeclaration[77886-77966]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[77991-78077]:MethodDeclaration[77976-78062]"
    }, {
      "left" : "public int read()",
      "right" : "public int read()",
      "info" : "MethodDeclaration[78087-78272]:MethodDeclaration[78072-78257]"
    }, {
      "left" : "public int read(char b[], int off, int len)",
      "right" : "public int read(char b[], int off, int len)",
      "info" : "MethodDeclaration[78282-78928]:MethodDeclaration[78267-78913]"
    }, {
      "left" : "public long skip(long n)",
      "right" : "public long skip(long n)",
      "info" : "MethodDeclaration[78938-79228]:MethodDeclaration[78923-79213]"
    }, {
      "left" : "public boolean ready()",
      "right" : "public boolean ready()",
      "info" : "MethodDeclaration[79238-79350]:MethodDeclaration[79223-79335]"
    }, {
      "left" : "public boolean markSupported()",
      "right" : "public boolean markSupported()",
      "info" : "MethodDeclaration[79360-79456]:MethodDeclaration[79345-79441]"
    }, {
      "left" : "public void mark(int readAheadLimit)",
      "right" : "public void mark(int readAheadLimit)",
      "info" : "MethodDeclaration[79466-79567]:MethodDeclaration[79451-79552]"
    }, {
      "left" : "public void reset()",
      "right" : "public void reset()",
      "info" : "MethodDeclaration[79577-79661]:MethodDeclaration[79562-79646]"
    }, {
      "left" : "StrBuilderWriter",
      "right" : "StrBuilderWriter",
      "info" : "TypeDeclaration[79751-80822]:TypeDeclaration[79736-80807]"
    }, {
      "left" : "StrBuilderWriter()",
      "right" : "StrBuilderWriter()",
      "info" : "MethodDeclaration[79879-79959]:MethodDeclaration[79864-79944]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[79969-80055]:MethodDeclaration[79954-80040]"
    }, {
      "left" : "public void flush()",
      "right" : "public void flush()",
      "info" : "MethodDeclaration[80065-80151]:MethodDeclaration[80050-80136]"
    }, {
      "left" : "public void write(int c)",
      "right" : "public void write(int c)",
      "info" : "MethodDeclaration[80161-80272]:MethodDeclaration[80146-80257]"
    }, {
      "left" : "public void write(char[] cbuf)",
      "right" : "public void write(char[] cbuf)",
      "info" : "MethodDeclaration[80282-80395]:MethodDeclaration[80267-80380]"
    }, {
      "left" : "public void write(char[] cbuf, int off, int len)",
      "right" : "public void write(char[] cbuf, int off, int len)",
      "info" : "MethodDeclaration[80405-80546]:MethodDeclaration[80390-80531]"
    }, {
      "left" : "public void write(String str)",
      "right" : "public void write(String str)",
      "info" : "MethodDeclaration[80556-80667]:MethodDeclaration[80541-80652]"
    }, {
      "left" : "public void write(String str, int off, int len)",
      "right" : "public void write(String str, int off, int len)",
      "info" : "MethodDeclaration[80677-80816]:MethodDeclaration[80662-80801]"
    } ],
    "mappings" : [
 {
      "left" : "Cloneable",
      "right" : "Cloneable",
      "info" : "SimpleType[2858-2867]:SimpleType[2858-2867]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3554-3560]:Modifier[3554-3560]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleName[3561-3571]:SimpleName[3561-3571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3574-3605]:Block[3574-3605]"
    }, {
      "left" : "this(CAPACITY);",
      "right" : "this(CAPACITY);",
      "info" : "ConstructorInvocation[3584-3599]:ConstructorInvocation[3584-3599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3805-3811]:Modifier[3805-3811]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleName[3812-3822]:SimpleName[3812-3822]"
    }, {
      "left" : "int initialCapacity",
      "right" : "int initialCapacity",
      "info" : "SingleVariableDeclaration[3823-3842]:SingleVariableDeclaration[3823-3842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3844-3998]:Block[3844-3998]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[3854-3862]:SuperConstructorInvocation[3854-3862]"
    }, {
      "left" : "if (initialCapacity <= 0)",
      "right" : "if (initialCapacity <= 0)",
      "info" : "IfStatement[3871-3948]:IfStatement[3871-3948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3897-3948]:Block[3897-3948]"
    }, {
      "left" : "initialCapacity = CAPACITY;",
      "right" : "initialCapacity = CAPACITY;",
      "info" : "ExpressionStatement[3911-3938]:ExpressionStatement[3911-3938]"
    }, {
      "left" : "buffer = new char[initialCapacity];",
      "right" : "buffer = new char[initialCapacity];",
      "info" : "ExpressionStatement[3957-3992]:ExpressionStatement[3957-3992]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4204-4210]:Modifier[4204-4210]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleName[4211-4221]:SimpleName[4211-4221]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[4222-4232]:SingleVariableDeclaration[4222-4232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4234-4434]:Block[4234-4434]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[4244-4252]:SuperConstructorInvocation[4244-4252]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[4261-4428]:IfStatement[4261-4428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4278-4330]:Block[4278-4330]"
    }, {
      "left" : "buffer = new char[CAPACITY];",
      "right" : "buffer = new char[CAPACITY];",
      "info" : "ExpressionStatement[4292-4320]:ExpressionStatement[4292-4320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4336-4428]:Block[4336-4428]"
    }, {
      "left" : "buffer = new char[str.length() + CAPACITY];",
      "right" : "buffer = new char[str.length() + CAPACITY];",
      "info" : "ExpressionStatement[4350-4393]:ExpressionStatement[4350-4393]"
    }, {
      "left" : "append(str);",
      "right" : "append(str);",
      "info" : "ExpressionStatement[4406-4418]:ExpressionStatement[4406-4418]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4667-4673]:Modifier[4667-4673]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4674-4680]:SimpleType[4674-4680]"
    }, {
      "left" : "getNewLineText",
      "right" : "getNewLineText",
      "info" : "SimpleName[4681-4695]:SimpleName[4681-4695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4698-4729]:Block[4698-4729]"
    }, {
      "left" : "return newLine;",
      "right" : "return newLine;",
      "info" : "ReturnStatement[4708-4723]:ReturnStatement[4708-4723]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4932-4938]:Modifier[4932-4938]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[4939-4949]:SimpleType[4939-4949]"
    }, {
      "left" : "setNewLineText",
      "right" : "setNewLineText",
      "info" : "SimpleName[4950-4964]:SimpleName[4950-4964]"
    }, {
      "left" : "String newLine",
      "right" : "String newLine",
      "info" : "SingleVariableDeclaration[4965-4979]:SingleVariableDeclaration[4965-4979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4981-5041]:Block[4981-5041]"
    }, {
      "left" : "this.newLine = newLine;",
      "right" : "this.newLine = newLine;",
      "info" : "ExpressionStatement[4991-5014]:ExpressionStatement[4991-5014]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5023-5035]:ReturnStatement[5023-5035]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5255-5261]:Modifier[5255-5261]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5262-5268]:SimpleType[5262-5268]"
    }, {
      "left" : "getNullText",
      "right" : "getNullText",
      "info" : "SimpleName[5269-5280]:SimpleName[5269-5280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5283-5315]:Block[5283-5315]"
    }, {
      "left" : "return nullText;",
      "right" : "return nullText;",
      "info" : "ReturnStatement[5293-5309]:ReturnStatement[5293-5309]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5500-5506]:Modifier[5500-5506]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[5507-5517]:SimpleType[5507-5517]"
    }, {
      "left" : "setNullText",
      "right" : "setNullText",
      "info" : "SimpleName[5518-5529]:SimpleName[5518-5529]"
    }, {
      "left" : "String nullText",
      "right" : "String nullText",
      "info" : "SingleVariableDeclaration[5530-5545]:SingleVariableDeclaration[5530-5545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5547-5706]:Block[5547-5706]"
    }, {
      "left" : "if (nullText != null && nullText.length() == 0)",
      "right" : "if (nullText != null && nullText.length() == 0)",
      "info" : "IfStatement[5557-5645]:IfStatement[5557-5645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5605-5645]:Block[5605-5645]"
    }, {
      "left" : "nullText = null;",
      "right" : "nullText = null;",
      "info" : "ExpressionStatement[5619-5635]:ExpressionStatement[5619-5635]"
    }, {
      "left" : "this.nullText = nullText;",
      "right" : "this.nullText = nullText;",
      "info" : "ExpressionStatement[5654-5679]:ExpressionStatement[5654-5679]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5688-5700]:ReturnStatement[5688-5700]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5885-5891]:Modifier[5885-5891]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5892-5895]:PrimitiveType[5892-5895]"
    }, {
      "left" : "length",
      "right" : "length",
      "info" : "SimpleName[5896-5902]:SimpleName[5896-5902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5905-5933]:Block[5905-5933]"
    }, {
      "left" : "return size;",
      "right" : "return size;",
      "info" : "ReturnStatement[5915-5927]:ReturnStatement[5915-5927]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6259-6265]:Modifier[6259-6265]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[6266-6276]:SimpleType[6266-6276]"
    }, {
      "left" : "setLength",
      "right" : "setLength",
      "info" : "SimpleName[6277-6286]:SimpleName[6277-6286]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[6287-6297]:SingleVariableDeclaration[6287-6297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6299-6755]:Block[6299-6755]"
    }, {
      "left" : "if (length < 0)",
      "right" : "if (length < 0)",
      "info" : "IfStatement[6309-6399]:IfStatement[6309-6399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6325-6399]:Block[6325-6399]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(length);",
      "right" : "throw new StringIndexOutOfBoundsException(length);",
      "info" : "ThrowStatement[6339-6389]:ThrowStatement[6339-6389]"
    }, {
      "left" : "if (length < size)",
      "right" : "if (length < size)",
      "info" : "IfStatement[6408-6728]:IfStatement[6408-6728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6427-6465]:Block[6427-6465]"
    }, {
      "left" : "size = length;",
      "right" : "size = length;",
      "info" : "ExpressionStatement[6441-6455]:ExpressionStatement[6441-6455]"
    }, {
      "left" : "if (length > size)",
      "right" : "if (length > size)",
      "info" : "IfStatement[6471-6728]:IfStatement[6471-6728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6490-6728]:Block[6490-6728]"
    }, {
      "left" : "ensureCapacity(length);",
      "right" : "ensureCapacity(length);",
      "info" : "ExpressionStatement[6504-6527]:ExpressionStatement[6504-6527]"
    }, {
      "left" : "int oldEnd = size;",
      "right" : "int oldEnd = size;",
      "info" : "VariableDeclarationStatement[6540-6558]:VariableDeclarationStatement[6540-6558]"
    }, {
      "left" : "int newEnd = length;",
      "right" : "int newEnd = length;",
      "info" : "VariableDeclarationStatement[6571-6591]:VariableDeclarationStatement[6571-6591]"
    }, {
      "left" : "size = length;",
      "right" : "size = length;",
      "info" : "ExpressionStatement[6604-6618]:ExpressionStatement[6604-6618]"
    }, {
      "left" : "for (int i = oldEnd; i < newEnd; i++)",
      "right" : "for (int i = oldEnd; i < newEnd; i++)",
      "info" : "ForStatement[6631-6718]:ForStatement[6631-6718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6669-6718]:Block[6669-6718]"
    }, {
      "left" : "buffer[i] = '\\0';",
      "right" : "buffer[i] = '\\0';",
      "info" : "ExpressionStatement[6687-6704]:ExpressionStatement[6687-6704]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6737-6749]:ReturnStatement[6737-6749]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6959-6965]:Modifier[6959-6965]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6966-6969]:PrimitiveType[6966-6969]"
    }, {
      "left" : "capacity",
      "right" : "capacity",
      "info" : "SimpleName[6970-6978]:SimpleName[6970-6978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6981-7018]:Block[6981-7018]"
    }, {
      "left" : "return buffer.length;",
      "right" : "return buffer.length;",
      "info" : "ReturnStatement[6991-7012]:ReturnStatement[6991-7012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7213-7219]:Modifier[7213-7219]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[7220-7230]:SimpleType[7220-7230]"
    }, {
      "left" : "ensureCapacity",
      "right" : "ensureCapacity",
      "info" : "SimpleName[7231-7245]:SimpleName[7231-7245]"
    }, {
      "left" : "int capacity",
      "right" : "int capacity",
      "info" : "SingleVariableDeclaration[7246-7258]:SingleVariableDeclaration[7246-7258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7260-7467]:Block[7260-7467]"
    }, {
      "left" : "if (capacity > buffer.length)",
      "right" : "if (capacity > buffer.length)",
      "info" : "IfStatement[7270-7440]:IfStatement[7270-7440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7300-7440]:Block[7300-7440]"
    }, {
      "left" : "char[] old = buffer;",
      "right" : "char[] old = buffer;",
      "info" : "VariableDeclarationStatement[7314-7334]:VariableDeclarationStatement[7314-7334]"
    }, {
      "left" : "buffer = new char[capacity];",
      "right" : "buffer = new char[capacity];",
      "info" : "ExpressionStatement[7347-7375]:ExpressionStatement[7347-7375]"
    }, {
      "left" : "System.arraycopy(old, 0, buffer, 0, size);",
      "right" : "System.arraycopy(old, 0, buffer, 0, size);",
      "info" : "ExpressionStatement[7388-7430]:ExpressionStatement[7388-7430]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[7449-7461]:ReturnStatement[7449-7461]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7602-7608]:Modifier[7602-7608]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[7609-7619]:SimpleType[7609-7619]"
    }, {
      "left" : "minimizeCapacity",
      "right" : "minimizeCapacity",
      "info" : "SimpleName[7620-7636]:SimpleName[7620-7636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7639-7846]:Block[7639-7846]"
    }, {
      "left" : "if (buffer.length > length())",
      "right" : "if (buffer.length > length())",
      "info" : "IfStatement[7649-7819]:IfStatement[7649-7819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7679-7819]:Block[7679-7819]"
    }, {
      "left" : "char[] old = buffer;",
      "right" : "char[] old = buffer;",
      "info" : "VariableDeclarationStatement[7693-7713]:VariableDeclarationStatement[7693-7713]"
    }, {
      "left" : "buffer = new char[length()];",
      "right" : "buffer = new char[length()];",
      "info" : "ExpressionStatement[7726-7754]:ExpressionStatement[7726-7754]"
    }, {
      "left" : "System.arraycopy(old, 0, buffer, 0, size);",
      "right" : "System.arraycopy(old, 0, buffer, 0, size);",
      "info" : "ExpressionStatement[7767-7809]:ExpressionStatement[7767-7809]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[7828-7840]:ReturnStatement[7828-7840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8144-8150]:Modifier[8144-8150]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[8151-8154]:PrimitiveType[8151-8154]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[8155-8159]:SimpleName[8155-8159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8162-8190]:Block[8162-8190]"
    }, {
      "left" : "return size;",
      "right" : "return size;",
      "info" : "ReturnStatement[8172-8184]:ReturnStatement[8172-8184]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8500-8506]:Modifier[8500-8506]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8507-8514]:PrimitiveType[8507-8514]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[8515-8522]:SimpleName[8515-8522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8525-8558]:Block[8525-8558]"
    }, {
      "left" : "return size == 0;",
      "right" : "return size == 0;",
      "info" : "ReturnStatement[8535-8552]:ReturnStatement[8535-8552]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9021-9027]:Modifier[9021-9027]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[9028-9038]:SimpleType[9028-9038]"
    }, {
      "left" : "clear",
      "right" : "clear",
      "info" : "SimpleName[9039-9044]:SimpleName[9039-9044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9047-9093]:Block[9047-9093]"
    }, {
      "left" : "size = 0;",
      "right" : "size = 0;",
      "info" : "ExpressionStatement[9057-9066]:ExpressionStatement[9057-9066]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9075-9087]:ReturnStatement[9075-9087]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9480-9486]:Modifier[9480-9486]"
    }, {
      "left" : "char",
      "right" : "char",
      "info" : "PrimitiveType[9487-9491]:PrimitiveType[9487-9491]"
    }, {
      "left" : "charAt",
      "right" : "charAt",
      "info" : "SimpleName[9492-9498]:SimpleName[9492-9498]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[9499-9508]:SingleVariableDeclaration[9499-9508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9510-9665]:Block[9510-9665]"
    }, {
      "left" : "if (index < 0 || index >= length())",
      "right" : "if (index < 0 || index >= length())",
      "info" : "IfStatement[9520-9629]:IfStatement[9520-9629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9556-9629]:Block[9556-9629]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[9570-9619]:ThrowStatement[9570-9619]"
    }, {
      "left" : "return buffer[index];",
      "right" : "return buffer[index];",
      "info" : "ReturnStatement[9638-9659]:ReturnStatement[9638-9659]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9979-9985]:Modifier[9979-9985]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[9986-9996]:SimpleType[9986-9996]"
    }, {
      "left" : "setCharAt",
      "right" : "setCharAt",
      "info" : "SimpleName[9997-10006]:SimpleName[9997-10006]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[10007-10016]:SingleVariableDeclaration[10007-10016]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[10018-10025]:SingleVariableDeclaration[10018-10025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10027-10201]:Block[10027-10201]"
    }, {
      "left" : "if (index < 0 || index >= length())",
      "right" : "if (index < 0 || index >= length())",
      "info" : "IfStatement[10037-10146]:IfStatement[10037-10146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10073-10146]:Block[10073-10146]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[10087-10136]:ThrowStatement[10087-10136]"
    }, {
      "left" : "buffer[index] = ch;",
      "right" : "buffer[index] = ch;",
      "info" : "ExpressionStatement[10155-10174]:ExpressionStatement[10155-10174]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10183-10195]:ReturnStatement[10183-10195]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10488-10494]:Modifier[10488-10494]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[10495-10505]:SimpleType[10495-10505]"
    }, {
      "left" : "deleteCharAt",
      "right" : "deleteCharAt",
      "info" : "SimpleName[10506-10518]:SimpleName[10506-10518]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[10519-10528]:SingleVariableDeclaration[10519-10528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10530-10713]:Block[10530-10713]"
    }, {
      "left" : "if (index < 0 || index >= size)",
      "right" : "if (index < 0 || index >= size)",
      "info" : "IfStatement[10540-10645]:IfStatement[10540-10645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10572-10645]:Block[10572-10645]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[10586-10635]:ThrowStatement[10586-10635]"
    }, {
      "left" : "deleteImpl(index, index + 1, 1);",
      "right" : "deleteImpl(index, index + 1, 1);",
      "info" : "ExpressionStatement[10654-10686]:ExpressionStatement[10654-10686]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10695-10707]:ReturnStatement[10695-10707]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10964-10970]:Modifier[10964-10970]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[10971-10977]:ArrayType[10971-10977]"
    }, {
      "left" : "toCharArray",
      "right" : "toCharArray",
      "info" : "SimpleName[10978-10989]:SimpleName[10978-10989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10992-11196]:Block[10992-11196]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[11002-11076]:IfStatement[11002-11076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11017-11076]:Block[11017-11076]"
    }, {
      "left" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "info" : "ReturnStatement[11031-11066]:ReturnStatement[11031-11066]"
    }, {
      "left" : "char chars[] = new char[size];",
      "right" : "char chars[] = new char[size];",
      "info" : "VariableDeclarationStatement[11085-11115]:VariableDeclarationStatement[11085-11115]"
    }, {
      "left" : "System.arraycopy(buffer, 0, chars, 0, size);",
      "right" : "System.arraycopy(buffer, 0, chars, 0, size);",
      "info" : "ExpressionStatement[11124-11168]:ExpressionStatement[11124-11168]"
    }, {
      "left" : "return chars;",
      "right" : "return chars;",
      "info" : "ReturnStatement[11177-11190]:ReturnStatement[11177-11190]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11719-11725]:Modifier[11719-11725]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[11726-11732]:ArrayType[11726-11732]"
    }, {
      "left" : "toCharArray",
      "right" : "toCharArray",
      "info" : "SimpleName[11733-11744]:SimpleName[11733-11744]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[11745-11759]:SingleVariableDeclaration[11745-11759]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[11761-11773]:SingleVariableDeclaration[11761-11773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11775-12082]:Block[11775-12082]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[11785-11832]:ExpressionStatement[11785-11832]"
    }, {
      "left" : "int len = endIndex - startIndex;",
      "right" : "int len = endIndex - startIndex;",
      "info" : "VariableDeclarationStatement[11841-11873]:VariableDeclarationStatement[11841-11873]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[11882-11955]:IfStatement[11882-11955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11896-11955]:Block[11896-11955]"
    }, {
      "left" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "info" : "ReturnStatement[11910-11945]:ReturnStatement[11910-11945]"
    }, {
      "left" : "char chars[] = new char[len];",
      "right" : "char chars[] = new char[len];",
      "info" : "VariableDeclarationStatement[11964-11993]:VariableDeclarationStatement[11964-11993]"
    }, {
      "left" : "System.arraycopy(buffer, startIndex, chars, 0, len);",
      "right" : "System.arraycopy(buffer, startIndex, chars, 0, len);",
      "info" : "ExpressionStatement[12002-12054]:ExpressionStatement[12002-12054]"
    }, {
      "left" : "return chars;",
      "right" : "return chars;",
      "info" : "ReturnStatement[12063-12076]:ReturnStatement[12063-12076]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12327-12333]:Modifier[12327-12333]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[12334-12340]:ArrayType[12334-12340]"
    }, {
      "left" : "getChars",
      "right" : "getChars",
      "info" : "SimpleName[12341-12349]:SimpleName[12341-12349]"
    }, {
      "left" : "char[] destination",
      "right" : "char[] destination",
      "info" : "SingleVariableDeclaration[12350-12368]:SingleVariableDeclaration[12350-12368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12370-12605]:Block[12370-12605]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[12380-12399]:VariableDeclarationStatement[12380-12399]"
    }, {
      "left" : "if (destination == null || destination.length < len)",
      "right" : "if (destination == null || destination.length < len)",
      "info" : "IfStatement[12408-12513]:IfStatement[12408-12513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12461-12513]:Block[12461-12513]"
    }, {
      "left" : "destination = new char[len];",
      "right" : "destination = new char[len];",
      "info" : "ExpressionStatement[12475-12503]:ExpressionStatement[12475-12503]"
    }, {
      "left" : "System.arraycopy(buffer, 0, destination, 0, len);",
      "right" : "System.arraycopy(buffer, 0, destination, 0, len);",
      "info" : "ExpressionStatement[12522-12571]:ExpressionStatement[12522-12571]"
    }, {
      "left" : "return destination;",
      "right" : "return destination;",
      "info" : "ReturnStatement[12580-12599]:ReturnStatement[12580-12599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13103-13109]:Modifier[13103-13109]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13110-13114]:PrimitiveType[13110-13114]"
    }, {
      "left" : "getChars",
      "right" : "getChars",
      "info" : "SimpleName[13115-13123]:SimpleName[13115-13123]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[13124-13138]:SingleVariableDeclaration[13124-13138]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[13140-13152]:SingleVariableDeclaration[13140-13152]"
    }, {
      "left" : "char destination[]",
      "right" : "char destination[]",
      "info" : "SingleVariableDeclaration[13154-13172]:SingleVariableDeclaration[13154-13172]"
    }, {
      "left" : "int destinationIndex",
      "right" : "int destinationIndex",
      "info" : "SingleVariableDeclaration[13174-13194]:SingleVariableDeclaration[13174-13194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13196-13653]:Block[13196-13653]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[13206-13304]:IfStatement[13206-13304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13226-13304]:Block[13226-13304]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "info" : "ThrowStatement[13240-13294]:ThrowStatement[13240-13294]"
    }, {
      "left" : "if (endIndex < 0 || endIndex > length())",
      "right" : "if (endIndex < 0 || endIndex > length())",
      "info" : "IfStatement[13313-13430]:IfStatement[13313-13430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13354-13430]:Block[13354-13430]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(endIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(endIndex);",
      "info" : "ThrowStatement[13368-13420]:ThrowStatement[13368-13420]"
    }, {
      "left" : "if (startIndex > endIndex)",
      "right" : "if (startIndex > endIndex)",
      "info" : "IfStatement[13439-13547]:IfStatement[13439-13547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13466-13547]:Block[13466-13547]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "info" : "ThrowStatement[13480-13537]:ThrowStatement[13480-13537]"
    }, {
      "left" : "System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);",
      "right" : "System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);",
      "info" : "ExpressionStatement[13556-13647]:ExpressionStatement[13556-13647]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14058-14064]:Modifier[14058-14064]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[14065-14075]:SimpleType[14065-14075]"
    }, {
      "left" : "appendNewLine",
      "right" : "appendNewLine",
      "info" : "SimpleName[14076-14089]:SimpleName[14076-14089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14092-14246]:Block[14092-14246]"
    }, {
      "left" : "if (newLine == null)",
      "right" : "if (newLine == null)",
      "info" : "IfStatement[14102-14208]:IfStatement[14102-14208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14124-14208]:Block[14124-14208]"
    }, {
      "left" : "append(SystemUtils.LINE_SEPARATOR);",
      "right" : "append(SystemUtils.LINE_SEPARATOR);",
      "info" : "ExpressionStatement[14138-14173]:ExpressionStatement[14138-14173]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14186-14198]:ReturnStatement[14186-14198]"
    }, {
      "left" : "return append(newLine);",
      "right" : "return append(newLine);",
      "info" : "ReturnStatement[14217-14240]:ReturnStatement[14217-14240]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14394-14400]:Modifier[14394-14400]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[14401-14411]:SimpleType[14401-14411]"
    }, {
      "left" : "appendNull",
      "right" : "appendNull",
      "info" : "SimpleName[14412-14422]:SimpleName[14412-14422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14425-14533]:Block[14425-14533]"
    }, {
      "left" : "if (nullText == null)",
      "right" : "if (nullText == null)",
      "info" : "IfStatement[14435-14494]:IfStatement[14435-14494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14458-14494]:Block[14458-14494]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14472-14484]:ReturnStatement[14472-14484]"
    }, {
      "left" : "return append(nullText);",
      "right" : "return append(nullText);",
      "info" : "ReturnStatement[14503-14527]:ReturnStatement[14503-14527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14746-14752]:Modifier[14746-14752]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[14753-14763]:SimpleType[14753-14763]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[14764-14770]:SimpleName[14764-14770]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[14771-14781]:SingleVariableDeclaration[14771-14781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14783-14908]:Block[14783-14908]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[14793-14854]:IfStatement[14793-14854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14810-14854]:Block[14810-14854]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[14824-14844]:ReturnStatement[14824-14844]"
    }, {
      "left" : "return append(obj.toString());",
      "right" : "return append(obj.toString());",
      "info" : "ReturnStatement[14864-14894]:ReturnStatement[14864-14894]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15120-15126]:Modifier[15120-15126]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[15127-15137]:SimpleType[15127-15137]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[15138-15144]:SimpleName[15138-15144]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[15145-15155]:SingleVariableDeclaration[15145-15155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15157-15478]:Block[15157-15478]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[15167-15228]:IfStatement[15167-15228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15184-15228]:Block[15184-15228]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[15198-15218]:ReturnStatement[15198-15218]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[15237-15263]:VariableDeclarationStatement[15237-15263]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[15272-15451]:IfStatement[15272-15451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15288-15451]:Block[15288-15451]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[15302-15321]:VariableDeclarationStatement[15302-15321]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[15334-15363]:ExpressionStatement[15334-15363]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, len);",
      "right" : "str.getChars(0, strLen, buffer, len);",
      "info" : "ExpressionStatement[15376-15413]:ExpressionStatement[15376-15413]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[15426-15441]:ExpressionStatement[15426-15441]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15460-15472]:ReturnStatement[15460-15472]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15824-15830]:Modifier[15824-15830]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[15831-15841]:SimpleType[15831-15841]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[15842-15848]:SimpleName[15842-15848]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[15849-15859]:SingleVariableDeclaration[15849-15859]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[15861-15875]:SingleVariableDeclaration[15861-15875]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[15877-15887]:SingleVariableDeclaration[15877-15887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15889-16504]:Block[15889-16504]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[15899-15960]:IfStatement[15899-15960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15916-15960]:Block[15916-15960]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[15930-15950]:ReturnStatement[15930-15950]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[15969-16112]:IfStatement[15969-16112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16018-16112]:Block[16018-16112]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[16032-16102]:ThrowStatement[16032-16102]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[16121-16267]:IfStatement[16121-16267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16177-16267]:Block[16177-16267]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[16191-16257]:ThrowStatement[16191-16257]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[16276-16477]:IfStatement[16276-16477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16292-16477]:Block[16292-16477]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[16306-16325]:VariableDeclarationStatement[16306-16325]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[16338-16367]:ExpressionStatement[16338-16367]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[16380-16439]:ExpressionStatement[16380-16439]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[16452-16467]:ExpressionStatement[16452-16467]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16486-16498]:ReturnStatement[16486-16498]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16730-16736]:Modifier[16730-16736]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[16737-16747]:SimpleType[16737-16747]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[16748-16754]:SimpleName[16748-16754]"
    }, {
      "left" : "StringBuffer str",
      "right" : "StringBuffer str",
      "info" : "SingleVariableDeclaration[16755-16771]:SingleVariableDeclaration[16755-16771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16773-17094]:Block[16773-17094]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[16783-16844]:IfStatement[16783-16844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16800-16844]:Block[16800-16844]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[16814-16834]:ReturnStatement[16814-16834]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[16853-16879]:VariableDeclarationStatement[16853-16879]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[16888-17067]:IfStatement[16888-17067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16904-17067]:Block[16904-17067]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[16918-16937]:VariableDeclarationStatement[16918-16937]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[16950-16979]:ExpressionStatement[16950-16979]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, len);",
      "right" : "str.getChars(0, strLen, buffer, len);",
      "info" : "ExpressionStatement[16992-17029]:ExpressionStatement[16992-17029]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[17042-17057]:ExpressionStatement[17042-17057]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17076-17088]:ReturnStatement[17076-17088]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17447-17453]:Modifier[17447-17453]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[17454-17464]:SimpleType[17454-17464]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[17465-17471]:SimpleName[17465-17471]"
    }, {
      "left" : "StringBuffer str",
      "right" : "StringBuffer str",
      "info" : "SingleVariableDeclaration[17472-17488]:SingleVariableDeclaration[17472-17488]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[17490-17504]:SingleVariableDeclaration[17490-17504]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[17506-17516]:SingleVariableDeclaration[17506-17516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17518-18133]:Block[17518-18133]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[17528-17589]:IfStatement[17528-17589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17545-17589]:Block[17545-17589]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[17559-17579]:ReturnStatement[17559-17579]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[17598-17741]:IfStatement[17598-17741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17647-17741]:Block[17647-17741]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[17661-17731]:ThrowStatement[17661-17731]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[17750-17896]:IfStatement[17750-17896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17806-17896]:Block[17806-17896]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[17820-17886]:ThrowStatement[17820-17886]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[17905-18106]:IfStatement[17905-18106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17921-18106]:Block[17921-18106]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[17935-17954]:VariableDeclarationStatement[17935-17954]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[17967-17996]:ExpressionStatement[17967-17996]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[18009-18068]:ExpressionStatement[18009-18068]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[18081-18096]:ExpressionStatement[18081-18096]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18115-18127]:ReturnStatement[18115-18127]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18367-18373]:Modifier[18367-18373]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[18374-18384]:SimpleType[18374-18384]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[18385-18391]:SimpleName[18385-18391]"
    }, {
      "left" : "StrBuilder str",
      "right" : "StrBuilder str",
      "info" : "SingleVariableDeclaration[18392-18406]:SingleVariableDeclaration[18392-18406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18408-18745]:Block[18408-18745]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[18418-18479]:IfStatement[18418-18479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18435-18479]:Block[18435-18479]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[18449-18469]:ReturnStatement[18449-18469]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[18488-18514]:VariableDeclarationStatement[18488-18514]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[18523-18718]:IfStatement[18523-18718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18539-18718]:Block[18539-18718]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[18553-18572]:VariableDeclarationStatement[18553-18572]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[18585-18614]:ExpressionStatement[18585-18614]"
    }, {
      "left" : "System.arraycopy(str.buffer, 0, buffer, len, strLen);",
      "right" : "System.arraycopy(str.buffer, 0, buffer, len, strLen);",
      "info" : "ExpressionStatement[18627-18680]:ExpressionStatement[18627-18680]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[18693-18708]:ExpressionStatement[18693-18708]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18727-18739]:ReturnStatement[18727-18739]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19099-19105]:Modifier[19099-19105]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[19106-19116]:SimpleType[19106-19116]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[19117-19123]:SimpleName[19117-19123]"
    }, {
      "left" : "StrBuilder str",
      "right" : "StrBuilder str",
      "info" : "SingleVariableDeclaration[19124-19138]:SingleVariableDeclaration[19124-19138]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[19140-19154]:SingleVariableDeclaration[19140-19154]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[19156-19166]:SingleVariableDeclaration[19156-19166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19168-19783]:Block[19168-19783]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[19178-19239]:IfStatement[19178-19239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19195-19239]:Block[19195-19239]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[19209-19229]:ReturnStatement[19209-19229]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[19248-19391]:IfStatement[19248-19391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19297-19391]:Block[19297-19391]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[19311-19381]:ThrowStatement[19311-19381]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[19400-19546]:IfStatement[19400-19546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19456-19546]:Block[19456-19546]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[19470-19536]:ThrowStatement[19470-19536]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[19555-19756]:IfStatement[19555-19756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19571-19756]:Block[19571-19756]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[19585-19604]:VariableDeclarationStatement[19585-19604]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[19617-19646]:ExpressionStatement[19617-19646]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[19659-19718]:ExpressionStatement[19659-19718]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[19731-19746]:ExpressionStatement[19731-19746]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[19765-19777]:ReturnStatement[19765-19777]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20004-20010]:Modifier[20004-20010]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[20011-20021]:SimpleType[20011-20021]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[20022-20028]:SimpleName[20022-20028]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[20029-20041]:SingleVariableDeclaration[20029-20041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20043-20377]:Block[20043-20377]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[20053-20116]:IfStatement[20053-20116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20072-20116]:Block[20072-20116]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[20086-20106]:ReturnStatement[20086-20106]"
    }, {
      "left" : "int strLen = chars.length;",
      "right" : "int strLen = chars.length;",
      "info" : "VariableDeclarationStatement[20125-20151]:VariableDeclarationStatement[20125-20151]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[20160-20350]:IfStatement[20160-20350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20176-20350]:Block[20176-20350]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[20190-20209]:VariableDeclarationStatement[20190-20209]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[20222-20251]:ExpressionStatement[20222-20251]"
    }, {
      "left" : "System.arraycopy(chars, 0, buffer, len, strLen);",
      "right" : "System.arraycopy(chars, 0, buffer, len, strLen);",
      "info" : "ExpressionStatement[20264-20312]:ExpressionStatement[20264-20312]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[20325-20340]:ExpressionStatement[20325-20340]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[20359-20371]:ReturnStatement[20359-20371]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20724-20730]:Modifier[20724-20730]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[20731-20741]:SimpleType[20731-20741]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[20742-20748]:SimpleName[20742-20748]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[20749-20761]:SingleVariableDeclaration[20749-20761]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[20763-20777]:SingleVariableDeclaration[20763-20777]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[20779-20789]:SingleVariableDeclaration[20779-20789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20791-21416]:Block[20791-21416]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[20801-20864]:IfStatement[20801-20864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20820-20864]:Block[20820-20864]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[20834-20854]:ReturnStatement[20834-20854]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > chars.length)",
      "right" : "if (startIndex < 0 || startIndex > chars.length)",
      "info" : "IfStatement[20873-21021]:IfStatement[20873-21021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20922-21021]:Block[20922-21021]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid startIndex: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid startIndex: \" + length);",
      "info" : "ThrowStatement[20936-21011]:ThrowStatement[20936-21011]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > chars.length)",
      "right" : "if (length < 0 || (startIndex + length) > chars.length)",
      "info" : "IfStatement[21030-21181]:IfStatement[21030-21181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21086-21181]:Block[21086-21181]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "info" : "ThrowStatement[21100-21171]:ThrowStatement[21100-21171]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[21190-21389]:IfStatement[21190-21389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21206-21389]:Block[21206-21389]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[21220-21239]:VariableDeclarationStatement[21220-21239]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[21252-21281]:ExpressionStatement[21252-21281]"
    }, {
      "left" : "System.arraycopy(chars, startIndex, buffer, len, length);",
      "right" : "System.arraycopy(chars, startIndex, buffer, len, length);",
      "info" : "ExpressionStatement[21294-21351]:ExpressionStatement[21294-21351]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[21364-21379]:ExpressionStatement[21364-21379]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[21398-21410]:ReturnStatement[21398-21410]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21580-21586]:Modifier[21580-21586]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[21587-21597]:SimpleType[21587-21597]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[21598-21604]:SimpleName[21598-21604]"
    }, {
      "left" : "boolean value",
      "right" : "boolean value",
      "info" : "SingleVariableDeclaration[21605-21618]:SingleVariableDeclaration[21605-21618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21620-22078]:Block[21620-22078]"
    }, {
      "left" : "if (value)",
      "right" : "if (value)",
      "info" : "IfStatement[21630-22051]:IfStatement[21630-22051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21641-21826]:Block[21641-21826]"
    }, {
      "left" : "ensureCapacity(size + 4);",
      "right" : "ensureCapacity(size + 4);",
      "info" : "ExpressionStatement[21655-21680]:ExpressionStatement[21655-21680]"
    }, {
      "left" : "buffer[size++] = 't';",
      "right" : "buffer[size++] = 't';",
      "info" : "ExpressionStatement[21693-21714]:ExpressionStatement[21693-21714]"
    }, {
      "left" : "buffer[size++] = 'r';",
      "right" : "buffer[size++] = 'r';",
      "info" : "ExpressionStatement[21727-21748]:ExpressionStatement[21727-21748]"
    }, {
      "left" : "buffer[size++] = 'u';",
      "right" : "buffer[size++] = 'u';",
      "info" : "ExpressionStatement[21761-21782]:ExpressionStatement[21761-21782]"
    }, {
      "left" : "buffer[size++] = 'e';",
      "right" : "buffer[size++] = 'e';",
      "info" : "ExpressionStatement[21795-21816]:ExpressionStatement[21795-21816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21832-22051]:Block[21832-22051]"
    }, {
      "left" : "ensureCapacity(size + 5);",
      "right" : "ensureCapacity(size + 5);",
      "info" : "ExpressionStatement[21846-21871]:ExpressionStatement[21846-21871]"
    }, {
      "left" : "buffer[size++] = 'f';",
      "right" : "buffer[size++] = 'f';",
      "info" : "ExpressionStatement[21884-21905]:ExpressionStatement[21884-21905]"
    }, {
      "left" : "buffer[size++] = 'a';",
      "right" : "buffer[size++] = 'a';",
      "info" : "ExpressionStatement[21918-21939]:ExpressionStatement[21918-21939]"
    }, {
      "left" : "buffer[size++] = 'l';",
      "right" : "buffer[size++] = 'l';",
      "info" : "ExpressionStatement[21952-21973]:ExpressionStatement[21952-21973]"
    }, {
      "left" : "buffer[size++] = 's';",
      "right" : "buffer[size++] = 's';",
      "info" : "ExpressionStatement[21986-22007]:ExpressionStatement[21986-22007]"
    }, {
      "left" : "buffer[size++] = 'e';",
      "right" : "buffer[size++] = 'e';",
      "info" : "ExpressionStatement[22020-22041]:ExpressionStatement[22020-22041]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[22060-22072]:ReturnStatement[22060-22072]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22236-22242]:Modifier[22236-22242]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[22243-22253]:SimpleType[22243-22253]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[22254-22260]:SimpleName[22254-22260]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[22261-22268]:SingleVariableDeclaration[22261-22268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22270-22388]:Block[22270-22388]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[22280-22299]:VariableDeclarationStatement[22280-22299]"
    }, {
      "left" : "ensureCapacity(len + 1);",
      "right" : "ensureCapacity(len + 1);",
      "info" : "ExpressionStatement[22308-22332]:ExpressionStatement[22308-22332]"
    }, {
      "left" : "buffer[size++] = ch;",
      "right" : "buffer[size++] = ch;",
      "info" : "ExpressionStatement[22341-22361]:ExpressionStatement[22341-22361]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[22370-22382]:ReturnStatement[22370-22382]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22583-22589]:Modifier[22583-22589]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[22590-22600]:SimpleType[22590-22600]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[22601-22607]:SimpleName[22601-22607]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[22608-22617]:SingleVariableDeclaration[22608-22617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22619-22672]:Block[22619-22672]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[22629-22666]:ReturnStatement[22629-22666]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22867-22873]:Modifier[22867-22873]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[22874-22884]:SimpleType[22874-22884]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[22885-22891]:SimpleName[22885-22891]"
    }, {
      "left" : "long value",
      "right" : "long value",
      "info" : "SingleVariableDeclaration[22892-22902]:SingleVariableDeclaration[22892-22902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22904-22957]:Block[22904-22957]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[22914-22951]:ReturnStatement[22914-22951]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23153-23159]:Modifier[23153-23159]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[23160-23170]:SimpleType[23160-23170]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[23171-23177]:SimpleName[23171-23177]"
    }, {
      "left" : "float value",
      "right" : "float value",
      "info" : "SingleVariableDeclaration[23178-23189]:SingleVariableDeclaration[23178-23189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23191-23244]:Block[23191-23244]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[23201-23238]:ReturnStatement[23201-23238]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23441-23447]:Modifier[23441-23447]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[23448-23458]:SimpleType[23448-23458]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[23459-23465]:SimpleName[23459-23465]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[23466-23478]:SingleVariableDeclaration[23466-23478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23480-23533]:Block[23480-23533]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[23490-23527]:ReturnStatement[23490-23527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24019-24025]:Modifier[24019-24025]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[24026-24036]:SimpleType[24026-24036]"
    }, {
      "left" : "appendWithSeparators",
      "right" : "appendWithSeparators",
      "info" : "SimpleName[24037-24057]:SimpleName[24037-24057]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[24058-24072]:SingleVariableDeclaration[24058-24072]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[24074-24090]:SingleVariableDeclaration[24074-24090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24092-24407]:Block[24092-24407]"
    }, {
      "left" : "if (array != null && array.length > 0)",
      "right" : "if (array != null && array.length > 0)",
      "info" : "IfStatement[24102-24380]:IfStatement[24102-24380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24141-24380]:Block[24141-24380]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[24155-24204]:ExpressionStatement[24155-24204]"
    }, {
      "left" : "append(array[0]);",
      "right" : "append(array[0]);",
      "info" : "ExpressionStatement[24217-24234]:ExpressionStatement[24217-24234]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[24247-24370]:ForStatement[24247-24370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24286-24370]:Block[24286-24370]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[24304-24322]:ExpressionStatement[24304-24322]"
    }, {
      "left" : "append(array[i]);",
      "right" : "append(array[i]);",
      "info" : "ExpressionStatement[24339-24356]:ExpressionStatement[24339-24356]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[24389-24401]:ReturnStatement[24389-24401]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24828-24834]:Modifier[24828-24834]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[24835-24845]:SimpleType[24835-24845]"
    }, {
      "left" : "appendWithSeparators",
      "right" : "appendWithSeparators",
      "info" : "SimpleName[24846-24866]:SimpleName[24846-24866]"
    }, {
      "left" : "Collection coll",
      "right" : "Collection coll",
      "info" : "SingleVariableDeclaration[24867-24882]:SingleVariableDeclaration[24867-24882]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[24884-24900]:SingleVariableDeclaration[24884-24900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24902-25269]:Block[24902-25269]"
    }, {
      "left" : "if (coll != null && coll.size() > 0)",
      "right" : "if (coll != null && coll.size() > 0)",
      "info" : "IfStatement[24912-25242]:IfStatement[24912-25242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24949-25242]:Block[24949-25242]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[24963-25012]:ExpressionStatement[24963-25012]"
    }, {
      "left" : "Iterator it = coll.iterator();",
      "right" : "Iterator it = coll.iterator();",
      "info" : "VariableDeclarationStatement[25025-25055]:VariableDeclarationStatement[25025-25055]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[25068-25232]:WhileStatement[25068-25232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25089-25232]:Block[25089-25232]"
    }, {
      "left" : "append(it.next());",
      "right" : "append(it.next());",
      "info" : "ExpressionStatement[25107-25125]:ExpressionStatement[25107-25125]"
    }, {
      "left" : "if (it.hasNext())",
      "right" : "if (it.hasNext())",
      "info" : "IfStatement[25142-25218]:IfStatement[25142-25218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25160-25218]:Block[25160-25218]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[25182-25200]:ExpressionStatement[25182-25200]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[25251-25263]:ReturnStatement[25251-25263]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25683-25689]:Modifier[25683-25689]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[25690-25700]:SimpleType[25690-25700]"
    }, {
      "left" : "appendWithSeparators",
      "right" : "appendWithSeparators",
      "info" : "SimpleName[25701-25721]:SimpleName[25701-25721]"
    }, {
      "left" : "Iterator it",
      "right" : "Iterator it",
      "info" : "SingleVariableDeclaration[25722-25733]:SingleVariableDeclaration[25722-25733]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[25735-25751]:SingleVariableDeclaration[25735-25751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25753-26056]:Block[25753-26056]"
    }, {
      "left" : "if (it != null)",
      "right" : "if (it != null)",
      "info" : "IfStatement[25763-26029]:IfStatement[25763-26029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25779-26029]:Block[25779-26029]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[25793-25842]:ExpressionStatement[25793-25842]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[25855-26019]:WhileStatement[25855-26019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25876-26019]:Block[25876-26019]"
    }, {
      "left" : "append(it.next());",
      "right" : "append(it.next());",
      "info" : "ExpressionStatement[25894-25912]:ExpressionStatement[25894-25912]"
    }, {
      "left" : "if (it.hasNext())",
      "right" : "if (it.hasNext())",
      "info" : "IfStatement[25929-26005]:IfStatement[25929-26005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25947-26005]:Block[25947-26005]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[25969-25987]:ExpressionStatement[25969-25987]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[26038-26050]:ReturnStatement[26038-26050]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26399-26405]:Modifier[26399-26405]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[26406-26416]:SimpleType[26406-26416]"
    }, {
      "left" : "appendPadding",
      "right" : "appendPadding",
      "info" : "SimpleName[26417-26430]:SimpleName[26417-26430]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[26431-26441]:SingleVariableDeclaration[26431-26441]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[26443-26455]:SingleVariableDeclaration[26443-26455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26457-26668]:Block[26457-26668]"
    }, {
      "left" : "if (length >= 0)",
      "right" : "if (length >= 0)",
      "info" : "IfStatement[26467-26641]:IfStatement[26467-26641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26484-26641]:Block[26484-26641]"
    }, {
      "left" : "ensureCapacity(size + length);",
      "right" : "ensureCapacity(size + length);",
      "info" : "ExpressionStatement[26498-26528]:ExpressionStatement[26498-26528]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[26541-26631]:ForStatement[26541-26631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26574-26631]:Block[26574-26631]"
    }, {
      "left" : "buffer[size++] = padChar;",
      "right" : "buffer[size++] = padChar;",
      "info" : "ExpressionStatement[26592-26617]:ExpressionStatement[26592-26617]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[26650-26662]:ReturnStatement[26650-26662]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27269-27275]:Modifier[27269-27275]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[27276-27286]:SimpleType[27276-27286]"
    }, {
      "left" : "appendFixedWidthPadLeft",
      "right" : "appendFixedWidthPadLeft",
      "info" : "SimpleName[27287-27310]:SimpleName[27287-27310]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[27311-27321]:SingleVariableDeclaration[27311-27321]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[27323-27332]:SingleVariableDeclaration[27323-27332]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[27334-27346]:SingleVariableDeclaration[27334-27346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27348-27956]:Block[27348-27956]"
    }, {
      "left" : "if (width > 0)",
      "right" : "if (width > 0)",
      "info" : "IfStatement[27358-27929]:IfStatement[27358-27929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27373-27929]:Block[27373-27929]"
    }, {
      "left" : "ensureCapacity(size + width);",
      "right" : "ensureCapacity(size + width);",
      "info" : "ExpressionStatement[27387-27416]:ExpressionStatement[27387-27416]"
    }, {
      "left" : "String str = (obj == null ? getNullText() : obj.toString());",
      "right" : "String str = (obj == null ? getNullText() : obj.toString());",
      "info" : "VariableDeclarationStatement[27429-27489]:VariableDeclarationStatement[27429-27489]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[27502-27528]:VariableDeclarationStatement[27502-27528]"
    }, {
      "left" : "if (strLen >= width)",
      "right" : "if (strLen >= width)",
      "info" : "IfStatement[27541-27892]:IfStatement[27541-27892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27562-27645]:Block[27562-27645]"
    }, {
      "left" : "str.getChars(strLen - width, strLen, buffer, size);",
      "right" : "str.getChars(strLen - width, strLen, buffer, size);",
      "info" : "ExpressionStatement[27580-27631]:ExpressionStatement[27580-27631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27651-27892]:Block[27651-27892]"
    }, {
      "left" : "int padLen = width - strLen;",
      "right" : "int padLen = width - strLen;",
      "info" : "VariableDeclarationStatement[27669-27697]:VariableDeclarationStatement[27669-27697]"
    }, {
      "left" : "for (int i = 0; i < padLen; i++)",
      "right" : "for (int i = 0; i < padLen; i++)",
      "info" : "ForStatement[27714-27814]:ForStatement[27714-27814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27747-27814]:Block[27747-27814]"
    }, {
      "left" : "buffer[size + i] = padChar;",
      "right" : "buffer[size + i] = padChar;",
      "info" : "ExpressionStatement[27769-27796]:ExpressionStatement[27769-27796]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, size + padLen);",
      "right" : "str.getChars(0, strLen, buffer, size + padLen);",
      "info" : "ExpressionStatement[27831-27878]:ExpressionStatement[27831-27878]"
    }, {
      "left" : "size += width;",
      "right" : "size += width;",
      "info" : "ExpressionStatement[27905-27919]:ExpressionStatement[27905-27919]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[27938-27950]:ReturnStatement[27938-27950]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28431-28437]:Modifier[28431-28437]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[28438-28448]:SimpleType[28438-28448]"
    }, {
      "left" : "appendFixedWidthPadLeft",
      "right" : "appendFixedWidthPadLeft",
      "info" : "SimpleName[28449-28472]:SimpleName[28449-28472]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[28473-28482]:SingleVariableDeclaration[28473-28482]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[28484-28493]:SingleVariableDeclaration[28484-28493]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[28495-28507]:SingleVariableDeclaration[28495-28507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28509-28595]:Block[28509-28595]"
    }, {
      "left" : "return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",
      "right" : "return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",
      "info" : "ReturnStatement[28519-28589]:ReturnStatement[28519-28589]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29117-29123]:Modifier[29117-29123]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[29124-29134]:SimpleType[29124-29134]"
    }, {
      "left" : "appendFixedWidthPadRight",
      "right" : "appendFixedWidthPadRight",
      "info" : "SimpleName[29135-29159]:SimpleName[29135-29159]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[29160-29170]:SingleVariableDeclaration[29160-29170]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[29172-29181]:SingleVariableDeclaration[29172-29181]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[29183-29195]:SingleVariableDeclaration[29183-29195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29197-29792]:Block[29197-29792]"
    }, {
      "left" : "if (width > 0)",
      "right" : "if (width > 0)",
      "info" : "IfStatement[29207-29765]:IfStatement[29207-29765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29222-29765]:Block[29222-29765]"
    }, {
      "left" : "ensureCapacity(size + width);",
      "right" : "ensureCapacity(size + width);",
      "info" : "ExpressionStatement[29236-29265]:ExpressionStatement[29236-29265]"
    }, {
      "left" : "String str = (obj == null ? getNullText() : obj.toString());",
      "right" : "String str = (obj == null ? getNullText() : obj.toString());",
      "info" : "VariableDeclarationStatement[29278-29338]:VariableDeclarationStatement[29278-29338]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[29351-29377]:VariableDeclarationStatement[29351-29377]"
    }, {
      "left" : "if (strLen >= width)",
      "right" : "if (strLen >= width)",
      "info" : "IfStatement[29390-29728]:IfStatement[29390-29728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29411-29481]:Block[29411-29481]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, size);",
      "right" : "str.getChars(0, strLen, buffer, size);",
      "info" : "ExpressionStatement[29429-29467]:ExpressionStatement[29429-29467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29487-29728]:Block[29487-29728]"
    }, {
      "left" : "int padLen = width - strLen;",
      "right" : "int padLen = width - strLen;",
      "info" : "VariableDeclarationStatement[29505-29533]:VariableDeclarationStatement[29505-29533]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, size);",
      "right" : "str.getChars(0, strLen, buffer, size);",
      "info" : "ExpressionStatement[29550-29588]:ExpressionStatement[29550-29588]"
    }, {
      "left" : "for (int i = 0; i < padLen; i++)",
      "right" : "for (int i = 0; i < padLen; i++)",
      "info" : "ForStatement[29605-29714]:ForStatement[29605-29714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29638-29714]:Block[29638-29714]"
    }, {
      "left" : "buffer[size + strLen + i] = padChar;",
      "right" : "buffer[size + strLen + i] = padChar;",
      "info" : "ExpressionStatement[29660-29696]:ExpressionStatement[29660-29696]"
    }, {
      "left" : "size += width;",
      "right" : "size += width;",
      "info" : "ExpressionStatement[29741-29755]:ExpressionStatement[29741-29755]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[29774-29786]:ReturnStatement[29774-29786]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30261-30267]:Modifier[30261-30267]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[30268-30278]:SimpleType[30268-30278]"
    }, {
      "left" : "appendFixedWidthPadRight",
      "right" : "appendFixedWidthPadRight",
      "info" : "SimpleName[30279-30303]:SimpleName[30279-30303]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[30304-30313]:SingleVariableDeclaration[30304-30313]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[30315-30324]:SingleVariableDeclaration[30315-30324]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[30326-30338]:SingleVariableDeclaration[30326-30338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30340-30427]:Block[30340-30427]"
    }, {
      "left" : "return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",
      "right" : "return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",
      "info" : "ReturnStatement[30350-30421]:ReturnStatement[30350-30421]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30867-30873]:Modifier[30867-30873]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[30874-30884]:SimpleType[30874-30884]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[30885-30891]:SimpleName[30885-30891]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[30892-30901]:SingleVariableDeclaration[30892-30901]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[30903-30913]:SingleVariableDeclaration[30903-30913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30915-31049]:Block[30915-31049]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[30925-30997]:IfStatement[30925-30997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30942-30997]:Block[30942-30997]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[30956-30987]:ReturnStatement[30956-30987]"
    }, {
      "left" : "return insert(index, obj.toString());",
      "right" : "return insert(index, obj.toString());",
      "info" : "ReturnStatement[31006-31043]:ReturnStatement[31006-31043]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31383-31389]:Modifier[31383-31389]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[31390-31400]:SimpleType[31390-31400]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[31401-31407]:SimpleName[31401-31407]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[31408-31417]:SingleVariableDeclaration[31408-31417]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[31419-31429]:SingleVariableDeclaration[31419-31429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31431-31886]:Block[31431-31886]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[31441-31462]:ExpressionStatement[31441-31462]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[31471-31527]:IfStatement[31471-31527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31488-31527]:Block[31488-31527]"
    }, {
      "left" : "str = nullText;",
      "right" : "str = nullText;",
      "info" : "ExpressionStatement[31502-31517]:ExpressionStatement[31502-31517]"
    }, {
      "left" : "int strLen = (str == null ? 0 : str.length());",
      "right" : "int strLen = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[31536-31582]:VariableDeclarationStatement[31536-31582]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[31591-31859]:IfStatement[31591-31859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31607-31859]:Block[31607-31859]"
    }, {
      "left" : "int newSize = size + strLen;",
      "right" : "int newSize = size + strLen;",
      "info" : "VariableDeclarationStatement[31621-31649]:VariableDeclarationStatement[31621-31649]"
    }, {
      "left" : "ensureCapacity(newSize);",
      "right" : "ensureCapacity(newSize);",
      "info" : "ExpressionStatement[31662-31686]:ExpressionStatement[31662-31686]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + strLen, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + strLen, size - index);",
      "info" : "ExpressionStatement[31699-31769]:ExpressionStatement[31699-31769]"
    }, {
      "left" : "size = newSize;",
      "right" : "size = newSize;",
      "info" : "ExpressionStatement[31782-31797]:ExpressionStatement[31782-31797]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, index);",
      "right" : "str.getChars(0, strLen, buffer, index);",
      "info" : "ExpressionStatement[31810-31849]:ExpressionStatement[31810-31849]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[31868-31880]:ReturnStatement[31868-31880]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32235-32241]:Modifier[32235-32241]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[32242-32252]:SimpleType[32242-32252]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[32253-32259]:SimpleName[32253-32259]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[32260-32269]:SingleVariableDeclaration[32260-32269]"
    }, {
      "left" : "char chars[]",
      "right" : "char chars[]",
      "info" : "SingleVariableDeclaration[32271-32283]:SingleVariableDeclaration[32271-32283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32285-32696]:Block[32285-32696]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[32295-32316]:ExpressionStatement[32295-32316]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[32325-32399]:IfStatement[32325-32399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32344-32399]:Block[32344-32399]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[32358-32389]:ReturnStatement[32358-32389]"
    }, {
      "left" : "int len = chars.length;",
      "right" : "int len = chars.length;",
      "info" : "VariableDeclarationStatement[32408-32431]:VariableDeclarationStatement[32408-32431]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[32440-32669]:IfStatement[32440-32669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32453-32669]:Block[32453-32669]"
    }, {
      "left" : "ensureCapacity(size + len);",
      "right" : "ensureCapacity(size + len);",
      "info" : "ExpressionStatement[32467-32494]:ExpressionStatement[32467-32494]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + len, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + len, size - index);",
      "info" : "ExpressionStatement[32507-32574]:ExpressionStatement[32507-32574]"
    }, {
      "left" : "System.arraycopy(chars, 0, buffer, index, len);",
      "right" : "System.arraycopy(chars, 0, buffer, index, len);",
      "info" : "ExpressionStatement[32587-32634]:ExpressionStatement[32587-32634]"
    }, {
      "left" : "size += len;",
      "right" : "size += len;",
      "info" : "ExpressionStatement[32647-32659]:ExpressionStatement[32647-32659]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[32678-32690]:ReturnStatement[32678-32690]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33225-33231]:Modifier[33225-33231]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[33232-33242]:SimpleType[33232-33242]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[33243-33249]:SimpleName[33243-33249]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[33250-33259]:SingleVariableDeclaration[33250-33259]"
    }, {
      "left" : "char chars[]",
      "right" : "char chars[]",
      "info" : "SingleVariableDeclaration[33261-33273]:SingleVariableDeclaration[33261-33273]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[33275-33285]:SingleVariableDeclaration[33275-33285]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[33287-33297]:SingleVariableDeclaration[33287-33297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33299-33997]:Block[33299-33997]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[33309-33330]:ExpressionStatement[33309-33330]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[33339-33413]:IfStatement[33339-33413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33358-33413]:Block[33358-33413]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[33372-33403]:ReturnStatement[33372-33403]"
    }, {
      "left" : "if (offset < 0 || offset > chars.length)",
      "right" : "if (offset < 0 || offset > chars.length)",
      "info" : "IfStatement[33422-33558]:IfStatement[33422-33558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33463-33558]:Block[33463-33558]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid offset: \" + offset);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid offset: \" + offset);",
      "info" : "ThrowStatement[33477-33548]:ThrowStatement[33477-33548]"
    }, {
      "left" : "if (length < 0 || offset + length > chars.length)",
      "right" : "if (length < 0 || offset + length > chars.length)",
      "info" : "IfStatement[33567-33712]:IfStatement[33567-33712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33617-33712]:Block[33617-33712]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "info" : "ThrowStatement[33631-33702]:ThrowStatement[33631-33702]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[33721-33970]:IfStatement[33721-33970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33737-33970]:Block[33737-33970]"
    }, {
      "left" : "ensureCapacity(size + length);",
      "right" : "ensureCapacity(size + length);",
      "info" : "ExpressionStatement[33751-33781]:ExpressionStatement[33751-33781]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + length, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + length, size - index);",
      "info" : "ExpressionStatement[33794-33864]:ExpressionStatement[33794-33864]"
    }, {
      "left" : "System.arraycopy(chars, offset, buffer, index, length);",
      "right" : "System.arraycopy(chars, offset, buffer, index, length);",
      "info" : "ExpressionStatement[33877-33932]:ExpressionStatement[33877-33932]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[33945-33960]:ExpressionStatement[33945-33960]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[33979-33991]:ReturnStatement[33979-33991]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34272-34278]:Modifier[34272-34278]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[34279-34289]:SimpleType[34279-34289]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[34290-34296]:SimpleName[34290-34296]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[34297-34306]:SingleVariableDeclaration[34297-34306]"
    }, {
      "left" : "boolean value",
      "right" : "boolean value",
      "info" : "SingleVariableDeclaration[34308-34321]:SingleVariableDeclaration[34308-34321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34323-35018]:Block[34323-35018]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[34333-34354]:ExpressionStatement[34333-34354]"
    }, {
      "left" : "if (value)",
      "right" : "if (value)",
      "info" : "IfStatement[34363-34991]:IfStatement[34363-34991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34374-34662]:Block[34374-34662]"
    }, {
      "left" : "ensureCapacity(size + 4);",
      "right" : "ensureCapacity(size + 4);",
      "info" : "ExpressionStatement[34388-34413]:ExpressionStatement[34388-34413]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 4, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 4, size - index);",
      "info" : "ExpressionStatement[34426-34491]:ExpressionStatement[34426-34491]"
    }, {
      "left" : "buffer[index++] = 't';",
      "right" : "buffer[index++] = 't';",
      "info" : "ExpressionStatement[34504-34526]:ExpressionStatement[34504-34526]"
    }, {
      "left" : "buffer[index++] = 'r';",
      "right" : "buffer[index++] = 'r';",
      "info" : "ExpressionStatement[34539-34561]:ExpressionStatement[34539-34561]"
    }, {
      "left" : "buffer[index++] = 'u';",
      "right" : "buffer[index++] = 'u';",
      "info" : "ExpressionStatement[34574-34596]:ExpressionStatement[34574-34596]"
    }, {
      "left" : "buffer[index] = 'e';",
      "right" : "buffer[index] = 'e';",
      "info" : "ExpressionStatement[34609-34629]:ExpressionStatement[34609-34629]"
    }, {
      "left" : "size += 4;",
      "right" : "size += 4;",
      "info" : "ExpressionStatement[34642-34652]:ExpressionStatement[34642-34652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34668-34991]:Block[34668-34991]"
    }, {
      "left" : "ensureCapacity(size + 5);",
      "right" : "ensureCapacity(size + 5);",
      "info" : "ExpressionStatement[34682-34707]:ExpressionStatement[34682-34707]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 5, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 5, size - index);",
      "info" : "ExpressionStatement[34720-34785]:ExpressionStatement[34720-34785]"
    }, {
      "left" : "buffer[index++] = 'f';",
      "right" : "buffer[index++] = 'f';",
      "info" : "ExpressionStatement[34798-34820]:ExpressionStatement[34798-34820]"
    }, {
      "left" : "buffer[index++] = 'a';",
      "right" : "buffer[index++] = 'a';",
      "info" : "ExpressionStatement[34833-34855]:ExpressionStatement[34833-34855]"
    }, {
      "left" : "buffer[index++] = 'l';",
      "right" : "buffer[index++] = 'l';",
      "info" : "ExpressionStatement[34868-34890]:ExpressionStatement[34868-34890]"
    }, {
      "left" : "buffer[index++] = 's';",
      "right" : "buffer[index++] = 's';",
      "info" : "ExpressionStatement[34903-34925]:ExpressionStatement[34903-34925]"
    }, {
      "left" : "buffer[index] = 'e';",
      "right" : "buffer[index] = 'e';",
      "info" : "ExpressionStatement[34938-34958]:ExpressionStatement[34938-34958]"
    }, {
      "left" : "size += 5;",
      "right" : "size += 5;",
      "info" : "ExpressionStatement[34971-34981]:ExpressionStatement[34971-34981]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[35000-35012]:ReturnStatement[35000-35012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35293-35299]:Modifier[35293-35299]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[35300-35310]:SimpleType[35300-35310]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[35311-35317]:SimpleName[35311-35317]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[35318-35327]:SingleVariableDeclaration[35318-35327]"
    }, {
      "left" : "char value",
      "right" : "char value",
      "info" : "SingleVariableDeclaration[35329-35339]:SingleVariableDeclaration[35329-35339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35341-35554]:Block[35341-35554]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[35351-35372]:ExpressionStatement[35351-35372]"
    }, {
      "left" : "ensureCapacity(size + 1);",
      "right" : "ensureCapacity(size + 1);",
      "info" : "ExpressionStatement[35381-35406]:ExpressionStatement[35381-35406]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 1, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 1, size - index);",
      "info" : "ExpressionStatement[35415-35480]:ExpressionStatement[35415-35480]"
    }, {
      "left" : "buffer[index] = value;",
      "right" : "buffer[index] = value;",
      "info" : "ExpressionStatement[35489-35511]:ExpressionStatement[35489-35511]"
    }, {
      "left" : "size++;",
      "right" : "size++;",
      "info" : "ExpressionStatement[35520-35527]:ExpressionStatement[35520-35527]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[35536-35548]:ReturnStatement[35536-35548]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35829-35835]:Modifier[35829-35835]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[35836-35846]:SimpleType[35836-35846]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[35847-35853]:SimpleName[35847-35853]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[35854-35863]:SingleVariableDeclaration[35854-35863]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[35865-35874]:SingleVariableDeclaration[35865-35874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35876-35936]:Block[35876-35936]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[35886-35930]:ReturnStatement[35886-35930]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36211-36217]:Modifier[36211-36217]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[36218-36228]:SimpleType[36218-36228]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[36229-36235]:SimpleName[36229-36235]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[36236-36245]:SingleVariableDeclaration[36236-36245]"
    }, {
      "left" : "long value",
      "right" : "long value",
      "info" : "SingleVariableDeclaration[36247-36257]:SingleVariableDeclaration[36247-36257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36259-36319]:Block[36259-36319]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[36269-36313]:ReturnStatement[36269-36313]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36594-36600]:Modifier[36594-36600]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[36601-36611]:SimpleType[36601-36611]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[36612-36618]:SimpleName[36612-36618]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[36619-36628]:SingleVariableDeclaration[36619-36628]"
    }, {
      "left" : "float value",
      "right" : "float value",
      "info" : "SingleVariableDeclaration[36630-36641]:SingleVariableDeclaration[36630-36641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36643-36703]:Block[36643-36703]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[36653-36697]:ReturnStatement[36653-36697]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36978-36984]:Modifier[36978-36984]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[36985-36995]:SimpleType[36985-36995]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[36996-37002]:SimpleName[36996-37002]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[37003-37012]:SingleVariableDeclaration[37003-37012]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[37014-37026]:SingleVariableDeclaration[37014-37026]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37028-37088]:Block[37028-37088]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[37038-37082]:ReturnStatement[37038-37082]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37488-37495]:Modifier[37488-37495]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37496-37500]:PrimitiveType[37496-37500]"
    }, {
      "left" : "deleteImpl",
      "right" : "deleteImpl",
      "info" : "SimpleName[37501-37511]:SimpleName[37501-37511]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[37512-37526]:SingleVariableDeclaration[37512-37526]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[37528-37540]:SingleVariableDeclaration[37528-37540]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[37542-37549]:SingleVariableDeclaration[37542-37549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37551-37660]:Block[37551-37660]"
    }, {
      "left" : "System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",
      "right" : "System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",
      "info" : "ExpressionStatement[37561-37633]:ExpressionStatement[37561-37633]"
    }, {
      "left" : "size -= len;",
      "right" : "size -= len;",
      "info" : "ExpressionStatement[37642-37654]:ExpressionStatement[37642-37654]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38055-38061]:Modifier[38055-38061]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[38062-38072]:SimpleType[38062-38072]"
    }, {
      "left" : "delete",
      "right" : "delete",
      "info" : "SimpleName[38073-38079]:SimpleName[38073-38079]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[38080-38094]:SingleVariableDeclaration[38080-38094]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[38096-38108]:SingleVariableDeclaration[38096-38108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38110-38319]:Block[38110-38319]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[38120-38167]:ExpressionStatement[38120-38167]"
    }, {
      "left" : "int len = endIndex - startIndex;",
      "right" : "int len = endIndex - startIndex;",
      "info" : "VariableDeclarationStatement[38176-38208]:VariableDeclarationStatement[38176-38208]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[38217-38292]:IfStatement[38217-38292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38230-38292]:Block[38230-38292]"
    }, {
      "left" : "deleteImpl(startIndex, endIndex, len);",
      "right" : "deleteImpl(startIndex, endIndex, len);",
      "info" : "ExpressionStatement[38244-38282]:ExpressionStatement[38244-38282]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[38301-38313]:ReturnStatement[38301-38313]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38572-38578]:Modifier[38572-38578]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[38579-38589]:SimpleType[38579-38589]"
    }, {
      "left" : "deleteAll",
      "right" : "deleteAll",
      "info" : "SimpleName[38590-38599]:SimpleName[38590-38599]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[38600-38607]:SingleVariableDeclaration[38600-38607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38609-39025]:Block[38609-39025]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[38619-38998]:ForStatement[38619-38998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38650-38998]:Block[38650-38998]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[38664-38988]:IfStatement[38664-38988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38685-38988]:Block[38685-38988]"
    }, {
      "left" : "int start = i;",
      "right" : "int start = i;",
      "info" : "VariableDeclarationStatement[38703-38717]:VariableDeclarationStatement[38703-38717]"
    }, {
      "left" : "while (++i < size)",
      "right" : "while (++i < size)",
      "info" : "WhileStatement[38734-38868]:WhileStatement[38734-38868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38753-38868]:Block[38753-38868]"
    }, {
      "left" : "if (buffer[i] != ch)",
      "right" : "if (buffer[i] != ch)",
      "info" : "IfStatement[38775-38850]:IfStatement[38775-38850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38796-38850]:Block[38796-38850]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[38822-38828]:BreakStatement[38822-38828]"
    }, {
      "left" : "int len = i - start;",
      "right" : "int len = i - start;",
      "info" : "VariableDeclarationStatement[38885-38905]:VariableDeclarationStatement[38885-38905]"
    }, {
      "left" : "deleteImpl(start, i, len);",
      "right" : "deleteImpl(start, i, len);",
      "info" : "ExpressionStatement[38922-38948]:ExpressionStatement[38922-38948]"
    }, {
      "left" : "i -= len;",
      "right" : "i -= len;",
      "info" : "ExpressionStatement[38965-38974]:ExpressionStatement[38965-38974]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39007-39019]:ReturnStatement[39007-39019]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39200-39206]:Modifier[39200-39206]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[39207-39217]:SimpleType[39207-39217]"
    }, {
      "left" : "deleteFirst",
      "right" : "deleteFirst",
      "info" : "SimpleName[39218-39229]:SimpleName[39218-39229]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[39230-39237]:SingleVariableDeclaration[39230-39237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39239-39431]:Block[39239-39431]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[39249-39404]:ForStatement[39249-39404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39280-39404]:Block[39280-39404]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[39294-39394]:IfStatement[39294-39394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39315-39394]:Block[39315-39394]"
    }, {
      "left" : "deleteImpl(i, i + 1, 1);",
      "right" : "deleteImpl(i, i + 1, 1);",
      "info" : "ExpressionStatement[39333-39357]:ExpressionStatement[39333-39357]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[39374-39380]:BreakStatement[39374-39380]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39413-39425]:ReturnStatement[39413-39425]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39702-39708]:Modifier[39702-39708]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[39709-39719]:SimpleType[39709-39719]"
    }, {
      "left" : "deleteAll",
      "right" : "deleteAll",
      "info" : "SimpleName[39720-39729]:SimpleName[39720-39729]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[39730-39740]:SingleVariableDeclaration[39730-39740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39742-40041]:Block[39742-40041]"
    }, {
      "left" : "int len = (str == null ? 0 : str.length());",
      "right" : "int len = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[39752-39795]:VariableDeclarationStatement[39752-39795]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[39804-40014]:IfStatement[39804-40014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39817-40014]:Block[39817-40014]"
    }, {
      "left" : "int index = indexOf(str, 0);",
      "right" : "int index = indexOf(str, 0);",
      "info" : "VariableDeclarationStatement[39831-39859]:VariableDeclarationStatement[39831-39859]"
    }, {
      "left" : "while (index >= 0)",
      "right" : "while (index >= 0)",
      "info" : "WhileStatement[39872-40004]:WhileStatement[39872-40004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39891-40004]:Block[39891-40004]"
    }, {
      "left" : "deleteImpl(index, index + len, len);",
      "right" : "deleteImpl(index, index + len, len);",
      "info" : "ExpressionStatement[39909-39945]:ExpressionStatement[39909-39945]"
    }, {
      "left" : "index = indexOf(str, index);",
      "right" : "index = indexOf(str, index);",
      "info" : "ExpressionStatement[39962-39990]:ExpressionStatement[39962-39990]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[40023-40035]:ReturnStatement[40023-40035]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40234-40240]:Modifier[40234-40240]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[40241-40251]:SimpleType[40241-40251]"
    }, {
      "left" : "deleteFirst",
      "right" : "deleteFirst",
      "info" : "SimpleName[40252-40263]:SimpleName[40252-40263]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[40264-40274]:SingleVariableDeclaration[40264-40274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40276-40527]:Block[40276-40527]"
    }, {
      "left" : "int len = (str == null ? 0 : str.length());",
      "right" : "int len = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[40286-40329]:VariableDeclarationStatement[40286-40329]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[40338-40500]:IfStatement[40338-40500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40351-40500]:Block[40351-40500]"
    }, {
      "left" : "int index = indexOf(str, 0);",
      "right" : "int index = indexOf(str, 0);",
      "info" : "VariableDeclarationStatement[40365-40393]:VariableDeclarationStatement[40365-40393]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[40406-40490]:IfStatement[40406-40490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40422-40490]:Block[40422-40490]"
    }, {
      "left" : "deleteImpl(index, index + len, len);",
      "right" : "deleteImpl(index, index + len, len);",
      "info" : "ExpressionStatement[40440-40476]:ExpressionStatement[40440-40476]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[40509-40521]:ReturnStatement[40509-40521]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41031-41037]:Modifier[41031-41037]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[41038-41048]:SimpleType[41038-41048]"
    }, {
      "left" : "deleteAll",
      "right" : "deleteAll",
      "info" : "SimpleName[41049-41058]:SimpleName[41049-41058]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[41059-41077]:SingleVariableDeclaration[41059-41077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41079-41138]:Block[41079-41138]"
    }, {
      "left" : "return replace(matcher, null, 0, size, -1);",
      "right" : "return replace(matcher, null, 0, size, -1);",
      "info" : "ReturnStatement[41089-41132]:ReturnStatement[41089-41132]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41562-41568]:Modifier[41562-41568]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[41569-41579]:SimpleType[41569-41579]"
    }, {
      "left" : "deleteFirst",
      "right" : "deleteFirst",
      "info" : "SimpleName[41580-41591]:SimpleName[41580-41591]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[41592-41610]:SingleVariableDeclaration[41592-41610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41612-41670]:Block[41612-41670]"
    }, {
      "left" : "return replace(matcher, null, 0, size, 1);",
      "right" : "return replace(matcher, null, 0, size, 1);",
      "info" : "ReturnStatement[41622-41664]:ReturnStatement[41622-41664]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[42259-42266]:Modifier[42259-42266]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[42267-42271]:PrimitiveType[42267-42271]"
    }, {
      "left" : "replaceImpl",
      "right" : "replaceImpl",
      "info" : "SimpleName[42272-42283]:SimpleName[42272-42283]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[42284-42298]:SingleVariableDeclaration[42284-42298]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[42300-42312]:SingleVariableDeclaration[42300-42312]"
    }, {
      "left" : "int removeLen",
      "right" : "int removeLen",
      "info" : "SingleVariableDeclaration[42314-42327]:SingleVariableDeclaration[42314-42327]"
    }, {
      "left" : "String insertStr",
      "right" : "String insertStr",
      "info" : "SingleVariableDeclaration[42329-42345]:SingleVariableDeclaration[42329-42345]"
    }, {
      "left" : "int insertLen",
      "right" : "int insertLen",
      "info" : "SingleVariableDeclaration[42347-42360]:SingleVariableDeclaration[42347-42360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42362-42736]:Block[42362-42736]"
    }, {
      "left" : "int newSize = size - removeLen + insertLen;",
      "right" : "int newSize = size - removeLen + insertLen;",
      "info" : "VariableDeclarationStatement[42372-42415]:VariableDeclarationStatement[42372-42415]"
    }, {
      "left" : "if (insertLen != removeLen)",
      "right" : "if (insertLen != removeLen)",
      "info" : "IfStatement[42424-42625]:IfStatement[42424-42625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42452-42625]:Block[42452-42625]"
    }, {
      "left" : "ensureCapacity(newSize);",
      "right" : "ensureCapacity(newSize);",
      "info" : "ExpressionStatement[42466-42490]:ExpressionStatement[42466-42490]"
    }, {
      "left" : "System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",
      "right" : "System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",
      "info" : "ExpressionStatement[42503-42587]:ExpressionStatement[42503-42587]"
    }, {
      "left" : "size = newSize;",
      "right" : "size = newSize;",
      "info" : "ExpressionStatement[42600-42615]:ExpressionStatement[42600-42615]"
    }, {
      "left" : "if (insertLen > 0)",
      "right" : "if (insertLen > 0)",
      "info" : "IfStatement[42634-42730]:IfStatement[42634-42730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42653-42730]:Block[42653-42730]"
    }, {
      "left" : "insertStr.getChars(0, insertLen, buffer, startIndex);",
      "right" : "insertStr.getChars(0, insertLen, buffer, startIndex);",
      "info" : "ExpressionStatement[42667-42720]:ExpressionStatement[42667-42720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43297-43303]:Modifier[43297-43303]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[43304-43314]:SimpleType[43304-43314]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[43315-43322]:SimpleName[43315-43322]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[43323-43337]:SingleVariableDeclaration[43323-43337]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[43339-43351]:SingleVariableDeclaration[43339-43351]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[43353-43370]:SingleVariableDeclaration[43353-43370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43372-43617]:Block[43372-43617]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[43382-43429]:ExpressionStatement[43382-43429]"
    }, {
      "left" : "int insertLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int insertLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[43438-43501]:VariableDeclarationStatement[43438-43501]"
    }, {
      "left" : "replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",
      "right" : "replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",
      "info" : "ExpressionStatement[43510-43590]:ExpressionStatement[43510-43590]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[43599-43611]:ReturnStatement[43599-43611]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43947-43953]:Modifier[43947-43953]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[43954-43964]:SimpleType[43954-43964]"
    }, {
      "left" : "replaceAll",
      "right" : "replaceAll",
      "info" : "SimpleName[43965-43975]:SimpleName[43965-43975]"
    }, {
      "left" : "char search",
      "right" : "char search",
      "info" : "SingleVariableDeclaration[43976-43987]:SingleVariableDeclaration[43976-43987]"
    }, {
      "left" : "char replace",
      "right" : "char replace",
      "info" : "SingleVariableDeclaration[43989-44001]:SingleVariableDeclaration[43989-44001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44003-44235]:Block[44003-44235]"
    }, {
      "left" : "if (search != replace)",
      "right" : "if (search != replace)",
      "info" : "IfStatement[44013-44208]:IfStatement[44013-44208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44036-44208]:Block[44036-44208]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[44050-44198]:ForStatement[44050-44198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44081-44198]:Block[44081-44198]"
    }, {
      "left" : "if (buffer[i] == search)",
      "right" : "if (buffer[i] == search)",
      "info" : "IfStatement[44099-44184]:IfStatement[44099-44184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44124-44184]:Block[44124-44184]"
    }, {
      "left" : "buffer[i] = replace;",
      "right" : "buffer[i] = replace;",
      "info" : "ExpressionStatement[44146-44166]:ExpressionStatement[44146-44166]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[44217-44229]:ReturnStatement[44217-44229]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44501-44507]:Modifier[44501-44507]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[44508-44518]:SimpleType[44508-44518]"
    }, {
      "left" : "replaceFirst",
      "right" : "replaceFirst",
      "info" : "SimpleName[44519-44531]:SimpleName[44519-44531]"
    }, {
      "left" : "char search",
      "right" : "char search",
      "info" : "SingleVariableDeclaration[44532-44543]:SingleVariableDeclaration[44532-44543]"
    }, {
      "left" : "char replace",
      "right" : "char replace",
      "info" : "SingleVariableDeclaration[44545-44557]:SingleVariableDeclaration[44545-44557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44559-44818]:Block[44559-44818]"
    }, {
      "left" : "if (search != replace)",
      "right" : "if (search != replace)",
      "info" : "IfStatement[44569-44791]:IfStatement[44569-44791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44592-44791]:Block[44592-44791]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[44606-44781]:ForStatement[44606-44781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44637-44781]:Block[44637-44781]"
    }, {
      "left" : "if (buffer[i] == search)",
      "right" : "if (buffer[i] == search)",
      "info" : "IfStatement[44655-44767]:IfStatement[44655-44767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44680-44767]:Block[44680-44767]"
    }, {
      "left" : "buffer[i] = replace;",
      "right" : "buffer[i] = replace;",
      "info" : "ExpressionStatement[44702-44722]:ExpressionStatement[44702-44722]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[44743-44749]:BreakStatement[44743-44749]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[44800-44812]:ReturnStatement[44800-44812]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45206-45212]:Modifier[45206-45212]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[45213-45223]:SimpleType[45213-45223]"
    }, {
      "left" : "replaceAll",
      "right" : "replaceAll",
      "info" : "SimpleName[45224-45234]:SimpleName[45224-45234]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[45235-45251]:SingleVariableDeclaration[45235-45251]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[45253-45270]:SingleVariableDeclaration[45253-45270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45272-45734]:Block[45272-45734]"
    }, {
      "left" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "right" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "info" : "VariableDeclarationStatement[45282-45343]:VariableDeclarationStatement[45282-45343]"
    }, {
      "left" : "if (searchLen > 0)",
      "right" : "if (searchLen > 0)",
      "info" : "IfStatement[45352-45707]:IfStatement[45352-45707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45371-45707]:Block[45371-45707]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[45385-45449]:VariableDeclarationStatement[45385-45449]"
    }, {
      "left" : "int index = indexOf(searchStr, 0);",
      "right" : "int index = indexOf(searchStr, 0);",
      "info" : "VariableDeclarationStatement[45462-45496]:VariableDeclarationStatement[45462-45496]"
    }, {
      "left" : "while (index >= 0)",
      "right" : "while (index >= 0)",
      "info" : "WhileStatement[45509-45697]:WhileStatement[45509-45697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45528-45697]:Block[45528-45697]"
    }, {
      "left" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[45546-45619]:ExpressionStatement[45546-45619]"
    }, {
      "left" : "index = indexOf(searchStr, index + replaceLen);",
      "right" : "index = indexOf(searchStr, index + replaceLen);",
      "info" : "ExpressionStatement[45636-45683]:ExpressionStatement[45636-45683]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[45716-45728]:ReturnStatement[45716-45728]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46043-46049]:Modifier[46043-46049]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[46050-46060]:SimpleType[46050-46060]"
    }, {
      "left" : "replaceFirst",
      "right" : "replaceFirst",
      "info" : "SimpleName[46061-46073]:SimpleName[46061-46073]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[46074-46090]:SingleVariableDeclaration[46074-46090]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[46092-46109]:SingleVariableDeclaration[46092-46109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46111-46510]:Block[46111-46510]"
    }, {
      "left" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "right" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "info" : "VariableDeclarationStatement[46121-46182]:VariableDeclarationStatement[46121-46182]"
    }, {
      "left" : "if (searchLen > 0)",
      "right" : "if (searchLen > 0)",
      "info" : "IfStatement[46191-46483]:IfStatement[46191-46483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46210-46483]:Block[46210-46483]"
    }, {
      "left" : "int index = indexOf(searchStr, 0);",
      "right" : "int index = indexOf(searchStr, 0);",
      "info" : "VariableDeclarationStatement[46224-46258]:VariableDeclarationStatement[46224-46258]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[46271-46473]:IfStatement[46271-46473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46287-46473]:Block[46287-46473]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[46305-46369]:VariableDeclarationStatement[46305-46369]"
    }, {
      "left" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[46386-46459]:ExpressionStatement[46386-46459]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[46492-46504]:ReturnStatement[46492-46504]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47104-47110]:Modifier[47104-47110]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[47111-47121]:SimpleType[47111-47121]"
    }, {
      "left" : "replaceAll",
      "right" : "replaceAll",
      "info" : "SimpleName[47122-47132]:SimpleName[47122-47132]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[47133-47151]:SingleVariableDeclaration[47133-47151]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[47153-47170]:SingleVariableDeclaration[47153-47170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47172-47237]:Block[47172-47237]"
    }, {
      "left" : "return replace(matcher, replaceStr, 0, size, -1);",
      "right" : "return replace(matcher, replaceStr, 0, size, -1);",
      "info" : "ReturnStatement[47182-47231]:ReturnStatement[47182-47231]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47742-47748]:Modifier[47742-47748]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[47749-47759]:SimpleType[47749-47759]"
    }, {
      "left" : "replaceFirst",
      "right" : "replaceFirst",
      "info" : "SimpleName[47760-47772]:SimpleName[47760-47772]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[47773-47791]:SingleVariableDeclaration[47773-47791]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[47793-47810]:SingleVariableDeclaration[47793-47810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47812-47876]:Block[47812-47876]"
    }, {
      "left" : "return replace(matcher, replaceStr, 0, size, 1);",
      "right" : "return replace(matcher, replaceStr, 0, size, 1);",
      "info" : "ReturnStatement[47822-47870]:ReturnStatement[47822-47870]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48801-48807]:Modifier[48801-48807]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[48808-48818]:SimpleType[48808-48818]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[48819-48826]:SimpleName[48819-48826]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[48840-48858]:SingleVariableDeclaration[48840-48858]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[48860-48877]:SingleVariableDeclaration[48860-48877]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[48891-48905]:SingleVariableDeclaration[48891-48905]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[48907-48919]:SingleVariableDeclaration[48907-48919]"
    }, {
      "left" : "int replaceCount",
      "right" : "int replaceCount",
      "info" : "SingleVariableDeclaration[48921-48937]:SingleVariableDeclaration[48921-48937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48939-49087]:Block[48939-49087]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[48949-48996]:ExpressionStatement[48949-48996]"
    }, {
      "left" : "return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",
      "right" : "return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",
      "info" : "ReturnStatement[49005-49081]:ReturnStatement[49005-49081]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[49825-49832]:Modifier[49825-49832]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[49833-49843]:SimpleType[49833-49843]"
    }, {
      "left" : "replaceImpl",
      "right" : "replaceImpl",
      "info" : "SimpleName[49844-49855]:SimpleName[49844-49855]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[49869-49887]:SingleVariableDeclaration[49869-49887]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[49889-49906]:SingleVariableDeclaration[49889-49906]"
    }, {
      "left" : "int from",
      "right" : "int from",
      "info" : "SingleVariableDeclaration[49920-49928]:SingleVariableDeclaration[49920-49928]"
    }, {
      "left" : "int to",
      "right" : "int to",
      "info" : "SingleVariableDeclaration[49930-49936]:SingleVariableDeclaration[49930-49936]"
    }, {
      "left" : "int replaceCount",
      "right" : "int replaceCount",
      "info" : "SingleVariableDeclaration[49938-49954]:SingleVariableDeclaration[49938-49954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49956-50614]:Block[49956-50614]"
    }, {
      "left" : "if (matcher == null || size == 0)",
      "right" : "if (matcher == null || size == 0)",
      "info" : "IfStatement[49966-50036]:IfStatement[49966-50036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50000-50036]:Block[50000-50036]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50014-50026]:ReturnStatement[50014-50026]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[50045-50109]:VariableDeclarationStatement[50045-50109]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[50118-50138]:VariableDeclarationStatement[50118-50138]"
    }, {
      "left" : "for (int i = from; i < to && replaceCount != 0; i++)",
      "right" : "for (int i = from; i < to && replaceCount != 0; i++)",
      "info" : "ForStatement[50147-50587]:ForStatement[50147-50587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50200-50587]:Block[50200-50587]"
    }, {
      "left" : "int removeLen = matcher.isMatch(buf, i, from, to);",
      "right" : "int removeLen = matcher.isMatch(buf, i, from, to);",
      "info" : "VariableDeclarationStatement[50214-50264]:VariableDeclarationStatement[50214-50264]"
    }, {
      "left" : "if (removeLen > 0)",
      "right" : "if (removeLen > 0)",
      "info" : "IfStatement[50277-50577]:IfStatement[50277-50577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50296-50577]:Block[50296-50577]"
    }, {
      "left" : "replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[50314-50379]:ExpressionStatement[50314-50379]"
    }, {
      "left" : "to = to - removeLen + replaceLen;",
      "right" : "to = to - removeLen + replaceLen;",
      "info" : "ExpressionStatement[50396-50429]:ExpressionStatement[50396-50429]"
    }, {
      "left" : "i = i + replaceLen - 1;",
      "right" : "i = i + replaceLen - 1;",
      "info" : "ExpressionStatement[50446-50469]:ExpressionStatement[50446-50469]"
    }, {
      "left" : "if (replaceCount > 0)",
      "right" : "if (replaceCount > 0)",
      "info" : "IfStatement[50486-50563]:IfStatement[50486-50563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50508-50563]:Block[50508-50563]"
    }, {
      "left" : "replaceCount--;",
      "right" : "replaceCount--;",
      "info" : "ExpressionStatement[50530-50545]:ExpressionStatement[50530-50545]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50596-50608]:ReturnStatement[50596-50608]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50843-50849]:Modifier[50843-50849]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[50850-50860]:SimpleType[50850-50860]"
    }, {
      "left" : "reverse",
      "right" : "reverse",
      "info" : "SimpleName[50861-50868]:SimpleName[50861-50868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50871-51241]:Block[50871-51241]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[50881-50932]:IfStatement[50881-50932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50896-50932]:Block[50896-50932]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50910-50922]:ReturnStatement[50910-50922]"
    }, {
      "left" : "int half = size / 2;",
      "right" : "int half = size / 2;",
      "info" : "VariableDeclarationStatement[50950-50970]:VariableDeclarationStatement[50950-50970]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[50979-50999]:VariableDeclarationStatement[50979-50999]"
    }, {
      "left" : "for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--)",
      "right" : "for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--)",
      "info" : "ForStatement[51008-51214]:ForStatement[51008-51214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51089-51214]:Block[51089-51214]"
    }, {
      "left" : "char swap = buf[leftIdx];",
      "right" : "char swap = buf[leftIdx];",
      "info" : "VariableDeclarationStatement[51103-51128]:VariableDeclarationStatement[51103-51128]"
    }, {
      "left" : "buf[leftIdx] = buf[rightIdx];",
      "right" : "buf[leftIdx] = buf[rightIdx];",
      "info" : "ExpressionStatement[51141-51170]:ExpressionStatement[51141-51170]"
    }, {
      "left" : "buf[rightIdx] = swap;",
      "right" : "buf[rightIdx] = swap;",
      "info" : "ExpressionStatement[51183-51204]:ExpressionStatement[51183-51204]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51223-51235]:ReturnStatement[51223-51235]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51501-51507]:Modifier[51501-51507]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[51508-51518]:SimpleType[51508-51518]"
    }, {
      "left" : "trim",
      "right" : "trim",
      "info" : "SimpleName[51519-51523]:SimpleName[51519-51523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51526-51972]:Block[51526-51972]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[51536-51587]:IfStatement[51536-51587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51551-51587]:Block[51551-51587]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51565-51577]:ReturnStatement[51565-51577]"
    }, {
      "left" : "int len = size;",
      "right" : "int len = size;",
      "info" : "VariableDeclarationStatement[51596-51611]:VariableDeclarationStatement[51596-51611]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[51620-51640]:VariableDeclarationStatement[51620-51640]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[51649-51661]:VariableDeclarationStatement[51649-51661]"
    }, {
      "left" : "while (pos < len && buf[pos] <= ' ')",
      "right" : "while (pos < len && buf[pos] <= ' ')",
      "info" : "WhileStatement[51670-51737]:WhileStatement[51670-51737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51707-51737]:Block[51707-51737]"
    }, {
      "left" : "pos++;",
      "right" : "pos++;",
      "info" : "ExpressionStatement[51721-51727]:ExpressionStatement[51721-51727]"
    }, {
      "left" : "while (pos < len && buf[len - 1] <= ' ')",
      "right" : "while (pos < len && buf[len - 1] <= ' ')",
      "info" : "WhileStatement[51746-51817]:WhileStatement[51746-51817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51787-51817]:Block[51787-51817]"
    }, {
      "left" : "len--;",
      "right" : "len--;",
      "info" : "ExpressionStatement[51801-51807]:ExpressionStatement[51801-51807]"
    }, {
      "left" : "if (len < size)",
      "right" : "if (len < size)",
      "info" : "IfStatement[51826-51884]:IfStatement[51826-51884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51842-51884]:Block[51842-51884]"
    }, {
      "left" : "delete(len, size);",
      "right" : "delete(len, size);",
      "info" : "ExpressionStatement[51856-51874]:ExpressionStatement[51856-51874]"
    }, {
      "left" : "if (pos > 0)",
      "right" : "if (pos > 0)",
      "info" : "IfStatement[51893-51945]:IfStatement[51893-51945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51906-51945]:Block[51906-51945]"
    }, {
      "left" : "delete(0, pos);",
      "right" : "delete(0, pos);",
      "info" : "ExpressionStatement[51920-51935]:ExpressionStatement[51920-51935]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51954-51966]:ReturnStatement[51954-51966]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52354-52360]:Modifier[52354-52360]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[52361-52368]:PrimitiveType[52361-52368]"
    }, {
      "left" : "startsWith",
      "right" : "startsWith",
      "info" : "SimpleName[52369-52379]:SimpleName[52369-52379]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[52380-52390]:SingleVariableDeclaration[52380-52390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52392-52776]:Block[52392-52776]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[52402-52456]:IfStatement[52402-52456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52419-52456]:Block[52419-52456]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52433-52446]:ReturnStatement[52433-52446]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[52465-52488]:VariableDeclarationStatement[52465-52488]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[52497-52547]:IfStatement[52497-52547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52511-52547]:Block[52511-52547]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52525-52537]:ReturnStatement[52525-52537]"
    }, {
      "left" : "if (len > size)",
      "right" : "if (len > size)",
      "info" : "IfStatement[52556-52609]:IfStatement[52556-52609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52572-52609]:Block[52572-52609]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52586-52599]:ReturnStatement[52586-52599]"
    }, {
      "left" : "for (int i = 0; i < len; i++)",
      "right" : "for (int i = 0; i < len; i++)",
      "info" : "ForStatement[52618-52749]:ForStatement[52618-52749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52648-52749]:Block[52648-52749]"
    }, {
      "left" : "if (buffer[i] != str.charAt(i))",
      "right" : "if (buffer[i] != str.charAt(i))",
      "info" : "IfStatement[52662-52739]:IfStatement[52662-52739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52694-52739]:Block[52694-52739]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52712-52725]:ReturnStatement[52712-52725]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52758-52770]:ReturnStatement[52758-52770]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53076-53082]:Modifier[53076-53082]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[53083-53090]:PrimitiveType[53083-53090]"
    }, {
      "left" : "endsWith",
      "right" : "endsWith",
      "info" : "SimpleName[53091-53099]:SimpleName[53091-53099]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[53100-53110]:SingleVariableDeclaration[53100-53110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53112-53534]:Block[53112-53534]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[53122-53176]:IfStatement[53122-53176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53139-53176]:Block[53139-53176]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53153-53166]:ReturnStatement[53153-53166]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[53185-53208]:VariableDeclarationStatement[53185-53208]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[53217-53267]:IfStatement[53217-53267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53231-53267]:Block[53231-53267]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[53245-53257]:ReturnStatement[53245-53257]"
    }, {
      "left" : "if (len > size)",
      "right" : "if (len > size)",
      "info" : "IfStatement[53276-53329]:IfStatement[53276-53329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53292-53329]:Block[53292-53329]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53306-53319]:ReturnStatement[53306-53319]"
    }, {
      "left" : "int pos = size - len;",
      "right" : "int pos = size - len;",
      "info" : "VariableDeclarationStatement[53338-53359]:VariableDeclarationStatement[53338-53359]"
    }, {
      "left" : "for (int i = 0; i < len; i++,pos++)",
      "right" : "for (int i = 0; i < len; i++,pos++)",
      "info" : "ForStatement[53368-53507]:ForStatement[53368-53507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53404-53507]:Block[53404-53507]"
    }, {
      "left" : "if (buffer[pos] != str.charAt(i))",
      "right" : "if (buffer[pos] != str.charAt(i))",
      "info" : "IfStatement[53418-53497]:IfStatement[53418-53497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53452-53497]:Block[53452-53497]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53470-53483]:ReturnStatement[53470-53483]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[53516-53528]:ReturnStatement[53516-53528]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53862-53868]:Modifier[53862-53868]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[53869-53875]:SimpleType[53869-53875]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[53876-53885]:SimpleName[53876-53885]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[53886-53895]:SingleVariableDeclaration[53886-53895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53897-53943]:Block[53897-53943]"
    }, {
      "left" : "return substring(start, size);",
      "right" : "return substring(start, size);",
      "info" : "ReturnStatement[53907-53937]:ReturnStatement[53907-53937]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54533-54539]:Modifier[54533-54539]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[54540-54546]:SimpleType[54540-54546]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[54547-54556]:SimpleName[54547-54556]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[54557-54571]:SingleVariableDeclaration[54557-54571]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[54573-54585]:SingleVariableDeclaration[54573-54585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54587-54720]:Block[54587-54720]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[54597-54644]:ExpressionStatement[54597-54644]"
    }, {
      "left" : "return new String(buffer, startIndex, endIndex - startIndex);",
      "right" : "return new String(buffer, startIndex, endIndex - startIndex);",
      "info" : "ReturnStatement[54653-54714]:ReturnStatement[54653-54714]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55230-55236]:Modifier[55230-55236]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[55237-55243]:SimpleType[55237-55243]"
    }, {
      "left" : "leftString",
      "right" : "leftString",
      "info" : "SimpleName[55244-55254]:SimpleName[55244-55254]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[55255-55265]:SingleVariableDeclaration[55255-55265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55267-55486]:Block[55267-55486]"
    }, {
      "left" : "if (length <= 0)",
      "right" : "if (length <= 0)",
      "info" : "IfStatement[55277-55480]:IfStatement[55277-55480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55294-55328]:Block[55294-55328]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[55308-55318]:ReturnStatement[55308-55318]"
    }, {
      "left" : "if (length >= size)",
      "right" : "if (length >= size)",
      "info" : "IfStatement[55334-55480]:IfStatement[55334-55480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55354-55413]:Block[55354-55413]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[55368-55403]:ReturnStatement[55368-55403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55419-55480]:Block[55419-55480]"
    }, {
      "left" : "return new String(buffer, 0, length);",
      "right" : "return new String(buffer, 0, length);",
      "info" : "ReturnStatement[55433-55470]:ReturnStatement[55433-55470]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55998-56004]:Modifier[55998-56004]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[56005-56011]:SimpleType[56005-56011]"
    }, {
      "left" : "rightString",
      "right" : "rightString",
      "info" : "SimpleName[56012-56023]:SimpleName[56012-56023]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[56024-56034]:SingleVariableDeclaration[56024-56034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56036-56267]:Block[56036-56267]"
    }, {
      "left" : "if (length <= 0)",
      "right" : "if (length <= 0)",
      "info" : "IfStatement[56046-56261]:IfStatement[56046-56261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56063-56097]:Block[56063-56097]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[56077-56087]:ReturnStatement[56077-56087]"
    }, {
      "left" : "if (length >= size)",
      "right" : "if (length >= size)",
      "info" : "IfStatement[56103-56261]:IfStatement[56103-56261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56123-56182]:Block[56123-56182]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[56137-56172]:ReturnStatement[56137-56172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56188-56261]:Block[56188-56261]"
    }, {
      "left" : "return new String(buffer, size - length, length);",
      "right" : "return new String(buffer, size - length, length);",
      "info" : "ReturnStatement[56202-56251]:ReturnStatement[56202-56251]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57085-57091]:Modifier[57085-57091]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[57092-57098]:SimpleType[57092-57098]"
    }, {
      "left" : "midString",
      "right" : "midString",
      "info" : "SimpleName[57099-57108]:SimpleName[57099-57108]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[57109-57118]:SingleVariableDeclaration[57109-57118]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[57120-57130]:SingleVariableDeclaration[57120-57130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57132-57453]:Block[57132-57453]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[57142-57191]:IfStatement[57142-57191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57157-57191]:Block[57157-57191]"
    }, {
      "left" : "index = 0;",
      "right" : "index = 0;",
      "info" : "ExpressionStatement[57171-57181]:ExpressionStatement[57171-57181]"
    }, {
      "left" : "if (length <= 0 || index >= size)",
      "right" : "if (length <= 0 || index >= size)",
      "info" : "IfStatement[57200-57268]:IfStatement[57200-57268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57234-57268]:Block[57234-57268]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[57248-57258]:ReturnStatement[57248-57258]"
    }, {
      "left" : "if (size <= index + length)",
      "right" : "if (size <= index + length)",
      "info" : "IfStatement[57277-57447]:IfStatement[57277-57447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57305-57376]:Block[57305-57376]"
    }, {
      "left" : "return new String(buffer, index, size - index);",
      "right" : "return new String(buffer, index, size - index);",
      "info" : "ReturnStatement[57319-57366]:ReturnStatement[57319-57366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57382-57447]:Block[57382-57447]"
    }, {
      "left" : "return new String(buffer, index, length);",
      "right" : "return new String(buffer, index, length);",
      "info" : "ReturnStatement[57396-57437]:ReturnStatement[57396-57437]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57723-57729]:Modifier[57723-57729]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[57730-57737]:PrimitiveType[57730-57737]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[57738-57746]:SimpleName[57738-57746]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[57747-57754]:SingleVariableDeclaration[57747-57754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57756-57958]:Block[57756-57953]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[57766-57790]:VariableDeclarationStatement[57766-57790]"
    }, {
      "left" : "for (int i = 0; i < thisBuf.length; i++)",
      "right" : "for (int i = 0; i < this.size; i++)",
      "info" : "ForStatement[57799-57930]:ForStatement[57799-57925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57840-57930]:Block[57835-57925]"
    }, {
      "left" : "if (thisBuf[i] == ch)",
      "right" : "if (thisBuf[i] == ch)",
      "info" : "IfStatement[57854-57920]:IfStatement[57849-57915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57876-57920]:Block[57871-57915]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[57894-57906]:ReturnStatement[57889-57901]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[57939-57952]:ReturnStatement[57934-57947]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58147-58153]:Modifier[58142-58148]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[58154-58161]:PrimitiveType[58149-58156]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[58162-58170]:SimpleName[58157-58165]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[58171-58181]:SingleVariableDeclaration[58166-58176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58183-58227]:Block[58178-58222]"
    }, {
      "left" : "return indexOf(str, 0) >= 0;",
      "right" : "return indexOf(str, 0) >= 0;",
      "info" : "ReturnStatement[58193-58221]:ReturnStatement[58188-58216]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58663-58669]:Modifier[58658-58664]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[58670-58677]:PrimitiveType[58665-58672]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[58678-58686]:SimpleName[58673-58681]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[58687-58705]:SingleVariableDeclaration[58682-58700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58707-58755]:Block[58702-58750]"
    }, {
      "left" : "return indexOf(matcher, 0) >= 0;",
      "right" : "return indexOf(matcher, 0) >= 0;",
      "info" : "ReturnStatement[58717-58749]:ReturnStatement[58712-58744]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59057-59063]:Modifier[59052-59058]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[59064-59067]:PrimitiveType[59059-59062]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[59068-59075]:SimpleName[59063-59070]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[59076-59083]:SingleVariableDeclaration[59071-59078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59085-59123]:Block[59080-59118]"
    }, {
      "left" : "return indexOf(ch, 0);",
      "right" : "return indexOf(ch, 0);",
      "info" : "ReturnStatement[59095-59117]:ReturnStatement[59090-59112]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59426-59432]:Modifier[59421-59427]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[59433-59436]:PrimitiveType[59428-59431]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[59437-59444]:SimpleName[59432-59439]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[59445-59452]:SingleVariableDeclaration[59440-59447]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[59454-59468]:SingleVariableDeclaration[59449-59463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59470-59798]:Block[59465-59783]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[59480-59527]:ExpressionStatement[59475-59522]"
    }, {
      "left" : "if (startIndex >= size)",
      "right" : "if (startIndex >= size)",
      "info" : "IfStatement[59536-59594]:IfStatement[59531-59589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59560-59594]:Block[59555-59589]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[59574-59584]:ReturnStatement[59569-59579]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[59603-59627]:VariableDeclarationStatement[59598-59622]"
    }, {
      "left" : "for (int i = startIndex; i < thisBuf.length; i++)",
      "right" : "for (int i = startIndex; i < size; i++)",
      "info" : "ForStatement[59636-59773]:ForStatement[59631-59758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59686-59773]:Block[59671-59758]"
    }, {
      "left" : "if (thisBuf[i] == ch)",
      "right" : "if (thisBuf[i] == ch)",
      "info" : "IfStatement[59700-59763]:IfStatement[59685-59748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59722-59763]:Block[59707-59748]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[59740-59749]:ReturnStatement[59725-59734]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[59782-59792]:ReturnStatement[59767-59777]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60137-60143]:Modifier[60122-60128]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[60144-60147]:PrimitiveType[60129-60132]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[60148-60155]:SimpleName[60133-60140]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[60156-60166]:SingleVariableDeclaration[60141-60151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60168-60207]:Block[60153-60192]"
    }, {
      "left" : "return indexOf(str, 0);",
      "right" : "return indexOf(str, 0);",
      "info" : "ReturnStatement[60178-60201]:ReturnStatement[60163-60186]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60672-60678]:Modifier[60657-60663]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[60679-60682]:PrimitiveType[60664-60667]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[60683-60690]:SimpleName[60668-60675]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[60691-60701]:SingleVariableDeclaration[60676-60686]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[60703-60717]:SingleVariableDeclaration[60688-60702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60719-61476]:Block[60704-61461]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[60729-60776]:ExpressionStatement[60714-60761]"
    }, {
      "left" : "if (str == null || startIndex >= size)",
      "right" : "if (str == null || startIndex >= size)",
      "info" : "IfStatement[60785-60858]:IfStatement[60770-60843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60824-60858]:Block[60809-60843]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[60838-60848]:ReturnStatement[60823-60833]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[60867-60893]:VariableDeclarationStatement[60852-60878]"
    }, {
      "left" : "if (strLen == 1)",
      "right" : "if (strLen == 1)",
      "info" : "IfStatement[60902-60985]:IfStatement[60887-60970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60919-60985]:Block[60904-60970]"
    }, {
      "left" : "return indexOf(str.charAt(0), startIndex);",
      "right" : "return indexOf(str.charAt(0), startIndex);",
      "info" : "ReturnStatement[60933-60975]:ReturnStatement[60918-60960]"
    }, {
      "left" : "if (strLen == 0)",
      "right" : "if (strLen == 0)",
      "info" : "IfStatement[60994-61053]:IfStatement[60979-61038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61011-61053]:Block[60996-61038]"
    }, {
      "left" : "return startIndex;",
      "right" : "return startIndex;",
      "info" : "ReturnStatement[61025-61043]:ReturnStatement[61010-61028]"
    }, {
      "left" : "if (strLen > size)",
      "right" : "if (strLen > size)",
      "info" : "IfStatement[61062-61115]:IfStatement[61047-61100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61081-61115]:Block[61066-61100]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[61095-61105]:ReturnStatement[61080-61090]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[61124-61148]:VariableDeclarationStatement[61109-61133]"
    }, {
      "left" : "int len = size - strLen + 1;",
      "right" : "int len = size - strLen + 1;",
      "info" : "VariableDeclarationStatement[61157-61185]:VariableDeclarationStatement[61142-61170]"
    }, {
      "left" : "outer:\n        for (int i = startIndex; i < len; i++) {\n            for (int j = 0; j < strLen; j++) {\n                if (str.charAt(j) != thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "right" : "outer:\n        for (int i = startIndex; i < len; i++) {\n            for (int j = 0; j < strLen; j++) {\n                if (str.charAt(j) != thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "info" : "LabeledStatement[61194-61451]:LabeledStatement[61179-61436]"
    }, {
      "left" : "for (int i = startIndex; i < len; i++)",
      "right" : "for (int i = startIndex; i < len; i++)",
      "info" : "ForStatement[61209-61451]:ForStatement[61194-61436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61248-61451]:Block[61233-61436]"
    }, {
      "left" : "for (int j = 0; j < strLen; j++)",
      "right" : "for (int j = 0; j < strLen; j++)",
      "info" : "ForStatement[61262-61419]:ForStatement[61247-61404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61295-61419]:Block[61280-61404]"
    }, {
      "left" : "if (str.charAt(j) != thisBuf[i + j])",
      "right" : "if (str.charAt(j) != thisBuf[i + j])",
      "info" : "IfStatement[61313-61405]:IfStatement[61298-61390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61350-61405]:Block[61335-61390]"
    }, {
      "left" : "continue outer;",
      "right" : "continue outer;",
      "info" : "ContinueStatement[61372-61387]:ContinueStatement[61357-61372]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[61432-61441]:ReturnStatement[61417-61426]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[61460-61470]:ReturnStatement[61445-61455]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61881-61887]:Modifier[61866-61872]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[61888-61891]:PrimitiveType[61873-61876]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[61892-61899]:SimpleName[61877-61884]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[61900-61918]:SingleVariableDeclaration[61885-61903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61920-61963]:Block[61905-61948]"
    }, {
      "left" : "return indexOf(matcher, 0);",
      "right" : "return indexOf(matcher, 0);",
      "info" : "ReturnStatement[61930-61957]:ReturnStatement[61915-61942]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62485-62491]:Modifier[62470-62476]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[62492-62495]:PrimitiveType[62477-62480]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[62496-62503]:SimpleName[62481-62488]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[62504-62522]:SingleVariableDeclaration[62489-62507]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[62524-62538]:SingleVariableDeclaration[62509-62523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62540-62924]:Block[62525-62909]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[62550-62597]:ExpressionStatement[62535-62582]"
    }, {
      "left" : "if (matcher == null || startIndex >= size)",
      "right" : "if (matcher == null || startIndex >= size)",
      "info" : "IfStatement[62606-62683]:IfStatement[62591-62668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62649-62683]:Block[62634-62668]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[62663-62673]:ReturnStatement[62648-62658]"
    }, {
      "left" : "int len = size;",
      "right" : "int len = size;",
      "info" : "VariableDeclarationStatement[62692-62707]:VariableDeclarationStatement[62677-62692]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[62716-62736]:VariableDeclarationStatement[62701-62721]"
    }, {
      "left" : "for (int i = startIndex; i < len; i++)",
      "right" : "for (int i = startIndex; i < len; i++)",
      "info" : "ForStatement[62745-62899]:ForStatement[62730-62884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62784-62899]:Block[62769-62884]"
    }, {
      "left" : "if (matcher.isMatch(buf, i, startIndex, len) > 0)",
      "right" : "if (matcher.isMatch(buf, i, startIndex, len) > 0)",
      "info" : "IfStatement[62798-62889]:IfStatement[62783-62874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62848-62889]:Block[62833-62874]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[62866-62875]:ReturnStatement[62851-62860]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[62908-62918]:ReturnStatement[62893-62903]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63224-63230]:Modifier[63209-63215]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[63231-63234]:PrimitiveType[63216-63219]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[63235-63246]:SimpleName[63220-63231]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[63247-63254]:SingleVariableDeclaration[63232-63239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63256-63305]:Block[63241-63290]"
    }, {
      "left" : "return lastIndexOf(ch, size - 1);",
      "right" : "return lastIndexOf(ch, size - 1);",
      "info" : "ReturnStatement[63266-63299]:ReturnStatement[63251-63284]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63606-63612]:Modifier[63591-63597]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[63613-63616]:PrimitiveType[63598-63601]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[63617-63628]:SimpleName[63602-63613]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[63629-63636]:SingleVariableDeclaration[63614-63621]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[63638-63652]:SingleVariableDeclaration[63623-63637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63654-63943]:Block[63639-63928]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[63664-63722]:ExpressionStatement[63649-63707]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[63731-63785]:IfStatement[63716-63770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63751-63785]:Block[63736-63770]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[63765-63775]:ReturnStatement[63750-63760]"
    }, {
      "left" : "for (int i = startIndex; i >= 0; i--)",
      "right" : "for (int i = startIndex; i >= 0; i--)",
      "info" : "ForStatement[63794-63918]:ForStatement[63779-63903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63832-63918]:Block[63817-63903]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[63846-63908]:IfStatement[63831-63893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63867-63908]:Block[63852-63893]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[63885-63894]:ReturnStatement[63870-63879]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[63927-63937]:ReturnStatement[63912-63922]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64280-64286]:Modifier[64265-64271]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[64287-64290]:PrimitiveType[64272-64275]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[64291-64302]:SimpleName[64276-64287]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[64303-64313]:SingleVariableDeclaration[64288-64298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64315-64365]:Block[64300-64350]"
    }, {
      "left" : "return lastIndexOf(str, size - 1);",
      "right" : "return lastIndexOf(str, size - 1);",
      "info" : "ReturnStatement[64325-64359]:ReturnStatement[64310-64344]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64828-64834]:Modifier[64813-64819]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[64835-64838]:PrimitiveType[64820-64823]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[64839-64850]:SimpleName[64824-64835]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[64851-64861]:SingleVariableDeclaration[64836-64846]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[64863-64877]:SingleVariableDeclaration[64848-64862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64879-65639]:Block[64864-65624]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[64889-64947]:ExpressionStatement[64874-64932]"
    }, {
      "left" : "if (str == null || startIndex < 0)",
      "right" : "if (str == null || startIndex < 0)",
      "info" : "IfStatement[64956-65025]:IfStatement[64941-65010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64991-65025]:Block[64976-65010]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[65005-65015]:ReturnStatement[64990-65000]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[65034-65060]:VariableDeclarationStatement[65019-65045]"
    }, {
      "left" : "if (strLen > 0 && strLen <= size)",
      "right" : "if (strLen > 0 && strLen <= size)",
      "info" : "IfStatement[65069-65614]:IfStatement[65054-65599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65103-65549]:Block[65088-65534]"
    }, {
      "left" : "if (strLen == 1)",
      "right" : "if (strLen == 1)",
      "info" : "IfStatement[65117-65212]:IfStatement[65102-65197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65134-65212]:Block[65119-65197]"
    }, {
      "left" : "return lastIndexOf(str.charAt(0), startIndex);",
      "right" : "return lastIndexOf(str.charAt(0), startIndex);",
      "info" : "ReturnStatement[65152-65198]:ReturnStatement[65137-65183]"
    }, {
      "left" : "outer:\n            for (int i = startIndex - strLen + 1; i >= 0; i--) {\n                for (int j = 0; j < strLen; j++) {\n                    if (str.charAt(j) != buffer[i + j]) {\n                        continue outer;\n                    }\n                }\n                return i;\n            }",
      "right" : "outer:\n            for (int i = startIndex - strLen + 1; i >= 0; i--) {\n                for (int j = 0; j < strLen; j++) {\n                    if (str.charAt(j) != buffer[i + j]) {\n                        continue outer;\n                    }\n                }\n                return i;\n            }",
      "info" : "LabeledStatement[65226-65526]:LabeledStatement[65211-65511]"
    }, {
      "left" : "for (int i = startIndex - strLen + 1; i >= 0; i--)",
      "right" : "for (int i = startIndex - strLen + 1; i >= 0; i--)",
      "info" : "ForStatement[65245-65526]:ForStatement[65230-65511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65296-65526]:Block[65281-65511]"
    }, {
      "left" : "for (int j = 0; j < strLen; j++)",
      "right" : "for (int j = 0; j < strLen; j++)",
      "info" : "ForStatement[65314-65486]:ForStatement[65299-65471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65347-65486]:Block[65332-65471]"
    }, {
      "left" : "if (str.charAt(j) != buffer[i + j])",
      "right" : "if (str.charAt(j) != buffer[i + j])",
      "info" : "IfStatement[65369-65468]:IfStatement[65354-65453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65405-65468]:Block[65390-65453]"
    }, {
      "left" : "continue outer;",
      "right" : "continue outer;",
      "info" : "ContinueStatement[65431-65446]:ContinueStatement[65416-65431]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[65503-65512]:ReturnStatement[65488-65497]"
    }, {
      "left" : "if (strLen == 0)",
      "right" : "if (strLen == 0)",
      "info" : "IfStatement[65555-65614]:IfStatement[65540-65599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65572-65614]:Block[65557-65599]"
    }, {
      "left" : "return startIndex;",
      "right" : "return startIndex;",
      "info" : "ReturnStatement[65586-65604]:ReturnStatement[65571-65589]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[65623-65633]:ReturnStatement[65608-65618]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66042-66048]:Modifier[66027-66033]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[66049-66052]:PrimitiveType[66034-66037]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[66053-66064]:SimpleName[66038-66049]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[66065-66083]:SingleVariableDeclaration[66050-66068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66085-66135]:Block[66070-66120]"
    }, {
      "left" : "return lastIndexOf(matcher, size);",
      "right" : "return lastIndexOf(matcher, size);",
      "info" : "ReturnStatement[66095-66129]:ReturnStatement[66080-66114]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66655-66661]:Modifier[66640-66646]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[66662-66665]:PrimitiveType[66647-66650]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[66666-66677]:SimpleName[66651-66662]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[66678-66696]:SingleVariableDeclaration[66663-66681]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[66698-66712]:SingleVariableDeclaration[66683-66697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66714-67115]:Block[66699-67100]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[66724-66782]:ExpressionStatement[66709-66767]"
    }, {
      "left" : "if (matcher == null || startIndex < 0)",
      "right" : "if (matcher == null || startIndex < 0)",
      "info" : "IfStatement[66791-66864]:IfStatement[66776-66849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66830-66864]:Block[66815-66849]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[66844-66854]:ReturnStatement[66829-66839]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[66873-66893]:VariableDeclarationStatement[66858-66878]"
    }, {
      "left" : "int endIndex = startIndex + 1;",
      "right" : "int endIndex = startIndex + 1;",
      "info" : "VariableDeclarationStatement[66902-66932]:VariableDeclarationStatement[66887-66917]"
    }, {
      "left" : "for (int i = startIndex; i >= 0; i--)",
      "right" : "for (int i = startIndex; i >= 0; i--)",
      "info" : "ForStatement[66941-67090]:ForStatement[66926-67075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66979-67090]:Block[66964-67075]"
    }, {
      "left" : "if (matcher.isMatch(buf, i, 0, endIndex) > 0)",
      "right" : "if (matcher.isMatch(buf, i, 0, endIndex) > 0)",
      "info" : "IfStatement[66993-67080]:IfStatement[66978-67065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67039-67080]:Block[67024-67065]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[67057-67066]:ReturnStatement[67042-67051]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[67099-67109]:ReturnStatement[67084-67094]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68840-68846]:Modifier[68825-68831]"
    }, {
      "left" : "StrTokenizer",
      "right" : "StrTokenizer",
      "info" : "SimpleType[68847-68859]:SimpleType[68832-68844]"
    }, {
      "left" : "asTokenizer",
      "right" : "asTokenizer",
      "info" : "SimpleName[68860-68871]:SimpleName[68845-68856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68874-68923]:Block[68859-68908]"
    }, {
      "left" : "return new StrBuilderTokenizer();",
      "right" : "return new StrBuilderTokenizer();",
      "info" : "ReturnStatement[68884-68917]:ReturnStatement[68869-68902]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69852-69858]:Modifier[69837-69843]"
    }, {
      "left" : "Reader",
      "right" : "Reader",
      "info" : "SimpleType[69859-69865]:SimpleType[69844-69850]"
    }, {
      "left" : "asReader",
      "right" : "asReader",
      "info" : "SimpleName[69866-69874]:SimpleName[69851-69859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69877-69923]:Block[69862-69908]"
    }, {
      "left" : "return new StrBuilderReader();",
      "right" : "return new StrBuilderReader();",
      "info" : "ReturnStatement[69887-69917]:ReturnStatement[69872-69902]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70943-70949]:Modifier[70928-70934]"
    }, {
      "left" : "Writer",
      "right" : "Writer",
      "info" : "SimpleType[70950-70956]:SimpleType[70935-70941]"
    }, {
      "left" : "asWriter",
      "right" : "asWriter",
      "info" : "SimpleName[70957-70965]:SimpleName[70942-70950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70968-71014]:Block[70953-70999]"
    }, {
      "left" : "return new StrBuilderWriter();",
      "right" : "return new StrBuilderWriter();",
      "info" : "ReturnStatement[70978-71008]:ReturnStatement[70963-70993]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[72653-72659]:Modifier[72638-72644]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[72660-72667]:PrimitiveType[72645-72652]"
    }, {
      "left" : "equalsIgnoreCase",
      "right" : "equalsIgnoreCase",
      "info" : "SimpleName[72668-72684]:SimpleName[72653-72669]"
    }, {
      "left" : "StrBuilder other",
      "right" : "StrBuilder other",
      "info" : "SingleVariableDeclaration[72685-72701]:SingleVariableDeclaration[72670-72686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72703-73203]:Block[72688-73188]"
    }, {
      "left" : "if (this == other)",
      "right" : "if (this == other)",
      "info" : "IfStatement[72713-72768]:IfStatement[72698-72753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72732-72768]:Block[72717-72753]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[72746-72758]:ReturnStatement[72731-72743]"
    }, {
      "left" : "if (this.size != other.size)",
      "right" : "if (this.size != other.size)",
      "info" : "IfStatement[72777-72843]:IfStatement[72762-72828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72806-72843]:Block[72791-72828]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[72820-72833]:ReturnStatement[72805-72818]"
    }, {
      "left" : "char thisBuf[] = this.buffer;",
      "right" : "char thisBuf[] = this.buffer;",
      "info" : "VariableDeclarationStatement[72852-72881]:VariableDeclarationStatement[72837-72866]"
    }, {
      "left" : "char otherBuf[] = other.buffer;",
      "right" : "char otherBuf[] = other.buffer;",
      "info" : "VariableDeclarationStatement[72890-72921]:VariableDeclarationStatement[72875-72906]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[72930-73176]:ForStatement[72915-73161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72966-73176]:Block[72951-73161]"
    }, {
      "left" : "char c1 = thisBuf[i];",
      "right" : "char c1 = thisBuf[i];",
      "info" : "VariableDeclarationStatement[72980-73001]:VariableDeclarationStatement[72965-72986]"
    }, {
      "left" : "char c2 = otherBuf[i];",
      "right" : "char c2 = otherBuf[i];",
      "info" : "VariableDeclarationStatement[73014-73036]:VariableDeclarationStatement[72999-73021]"
    }, {
      "left" : "if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2))",
      "right" : "if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2))",
      "info" : "IfStatement[73049-73166]:IfStatement[73034-73151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73121-73166]:Block[73106-73151]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[73139-73152]:ReturnStatement[73124-73137]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[73185-73197]:ReturnStatement[73170-73182]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73492-73498]:Modifier[73477-73483]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[73499-73506]:PrimitiveType[73484-73491]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[73507-73513]:SimpleName[73492-73498]"
    }, {
      "left" : "StrBuilder other",
      "right" : "StrBuilder other",
      "info" : "SingleVariableDeclaration[73514-73530]:SingleVariableDeclaration[73499-73515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73532-73922]:Block[73517-73907]"
    }, {
      "left" : "if (this == other)",
      "right" : "if (this == other)",
      "info" : "IfStatement[73542-73597]:IfStatement[73527-73582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73561-73597]:Block[73546-73582]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[73575-73587]:ReturnStatement[73560-73572]"
    }, {
      "left" : "if (this.size != other.size)",
      "right" : "if (this.size != other.size)",
      "info" : "IfStatement[73606-73672]:IfStatement[73591-73657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73635-73672]:Block[73620-73657]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[73649-73662]:ReturnStatement[73634-73647]"
    }, {
      "left" : "char thisBuf[] = this.buffer;",
      "right" : "char thisBuf[] = this.buffer;",
      "info" : "VariableDeclarationStatement[73681-73710]:VariableDeclarationStatement[73666-73695]"
    }, {
      "left" : "char otherBuf[] = other.buffer;",
      "right" : "char otherBuf[] = other.buffer;",
      "info" : "VariableDeclarationStatement[73719-73750]:VariableDeclarationStatement[73704-73735]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[73759-73895]:ForStatement[73744-73880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73795-73895]:Block[73780-73880]"
    }, {
      "left" : "if (thisBuf[i] != otherBuf[i])",
      "right" : "if (thisBuf[i] != otherBuf[i])",
      "info" : "IfStatement[73809-73885]:IfStatement[73794-73870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73840-73885]:Block[73825-73870]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[73858-73871]:ReturnStatement[73843-73856]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[73904-73916]:ReturnStatement[73889-73901]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74209-74215]:Modifier[74194-74200]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[74216-74223]:PrimitiveType[74201-74208]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[74224-74230]:SimpleName[74209-74215]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[74231-74241]:SingleVariableDeclaration[74216-74226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74243-74368]:Block[74228-74353]"
    }, {
      "left" : "if (obj instanceof StrBuilder)",
      "right" : "if (obj instanceof StrBuilder)",
      "info" : "IfStatement[74253-74340]:IfStatement[74238-74325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74284-74340]:Block[74269-74325]"
    }, {
      "left" : "return equals((StrBuilder) obj);",
      "right" : "return equals((StrBuilder) obj);",
      "info" : "ReturnStatement[74298-74330]:ReturnStatement[74283-74315]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[74349-74362]:ReturnStatement[74334-74347]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74475-74481]:Modifier[74460-74466]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[74482-74485]:PrimitiveType[74467-74470]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[74486-74494]:SimpleName[74471-74479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74497-74671]:Block[74482-74656]"
    }, {
      "left" : "char buf[] = buffer;",
      "right" : "char buf[] = buffer;",
      "info" : "VariableDeclarationStatement[74507-74527]:VariableDeclarationStatement[74492-74512]"
    }, {
      "left" : "int hash = 0;",
      "right" : "int hash = 0;",
      "info" : "VariableDeclarationStatement[74536-74549]:VariableDeclarationStatement[74521-74534]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[74558-74644]:ForStatement[74543-74629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74594-74644]:Block[74579-74629]"
    }, {
      "left" : "hash = 31 * hash + buf[i];",
      "right" : "hash = 31 * hash + buf[i];",
      "info" : "ExpressionStatement[74608-74634]:ExpressionStatement[74593-74619]"
    }, {
      "left" : "return hash;",
      "right" : "return hash;",
      "info" : "ReturnStatement[74653-74665]:ReturnStatement[74638-74650]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75054-75060]:Modifier[75039-75045]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[75061-75067]:SimpleType[75046-75052]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[75068-75076]:SimpleName[75053-75061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75079-75130]:Block[75064-75115]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[75089-75124]:ReturnStatement[75074-75109]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75325-75331]:Modifier[75310-75316]"
    }, {
      "left" : "StringBuffer",
      "right" : "StringBuffer",
      "info" : "SimpleType[75332-75344]:SimpleType[75317-75329]"
    }, {
      "left" : "toStringBuffer",
      "right" : "toStringBuffer",
      "info" : "SimpleName[75345-75359]:SimpleName[75330-75344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75362-75432]:Block[75347-75417]"
    }, {
      "left" : "return new StringBuffer(size).append(buffer, 0, size);",
      "right" : "return new StringBuffer(size).append(buffer, 0, size);",
      "info" : "ReturnStatement[75372-75426]:ReturnStatement[75357-75411]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[75892-75901]:Modifier[75877-75886]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[75902-75905]:PrimitiveType[75887-75890]"
    }, {
      "left" : "validateRange",
      "right" : "validateRange",
      "info" : "SimpleName[75906-75919]:SimpleName[75891-75904]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[75920-75934]:SingleVariableDeclaration[75905-75919]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[75936-75948]:SingleVariableDeclaration[75921-75933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75950-76276]:Block[75935-76261]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[75960-76058]:IfStatement[75945-76043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75980-76058]:Block[75965-76043]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "info" : "ThrowStatement[75994-76048]:ThrowStatement[75979-76033]"
    }, {
      "left" : "if (endIndex > size)",
      "right" : "if (endIndex > size)",
      "info" : "IfStatement[76067-76128]:IfStatement[76052-76113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76088-76128]:Block[76073-76113]"
    }, {
      "left" : "endIndex = size;",
      "right" : "endIndex = size;",
      "info" : "ExpressionStatement[76102-76118]:ExpressionStatement[76087-76103]"
    }, {
      "left" : "if (startIndex > endIndex)",
      "right" : "if (startIndex > endIndex)",
      "info" : "IfStatement[76137-76245]:IfStatement[76122-76230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76164-76245]:Block[76149-76230]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "info" : "ThrowStatement[76178-76235]:ThrowStatement[76163-76220]"
    }, {
      "left" : "return endIndex;",
      "right" : "return endIndex;",
      "info" : "ReturnStatement[76254-76270]:ReturnStatement[76239-76255]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[76485-76494]:Modifier[76470-76479]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[76495-76499]:PrimitiveType[76480-76484]"
    }, {
      "left" : "validateIndex",
      "right" : "validateIndex",
      "info" : "SimpleName[76500-76513]:SimpleName[76485-76498]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[76514-76523]:SingleVariableDeclaration[76499-76508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76525-76645]:Block[76510-76630]"
    }, {
      "left" : "if (index < 0 || index > size)",
      "right" : "if (index < 0 || index > size)",
      "info" : "IfStatement[76535-76639]:IfStatement[76520-76624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76566-76639]:Block[76551-76624]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[76580-76629]:ThrowStatement[76565-76614]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[76811-76816]:TYPE_DECLARATION_KIND[76796-76801]"
    }, {
      "left" : "StrBuilderTokenizer",
      "right" : "StrBuilderTokenizer",
      "info" : "SimpleName[76817-76836]:SimpleName[76802-76821]"
    }, {
      "left" : "StrTokenizer",
      "right" : "StrTokenizer",
      "info" : "SimpleType[76845-76857]:SimpleType[76830-76842]"
    }, {
      "left" : "StrBuilderTokenizer",
      "right" : "StrBuilderTokenizer",
      "info" : "SimpleName[76898-76917]:SimpleName[76883-76902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76920-76952]:Block[76905-76937]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[76934-76942]:SuperConstructorInvocation[76919-76927]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[76991-77000]:Modifier[76976-76985]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[77001-77005]:SimpleType[76986-76990]"
    }, {
      "left" : "tokenize",
      "right" : "tokenize",
      "info" : "SimpleName[77006-77014]:SimpleName[76991-76999]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[77015-77027]:SingleVariableDeclaration[77000-77012]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[77029-77039]:SingleVariableDeclaration[77014-77024]"
    }, {
      "left" : "int count",
      "right" : "int count",
      "info" : "SingleVariableDeclaration[77041-77050]:SingleVariableDeclaration[77026-77035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77052-77282]:Block[77037-77267]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[77066-77272]:IfStatement[77051-77257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77085-77190]:Block[77070-77175]"
    }, {
      "left" : "return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",
      "right" : "return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",
      "info" : "ReturnStatement[77103-77176]:ReturnStatement[77088-77161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77196-77272]:Block[77181-77257]"
    }, {
      "left" : "return super.tokenize(chars, offset, count);",
      "right" : "return super.tokenize(chars, offset, count);",
      "info" : "ReturnStatement[77214-77258]:ReturnStatement[77199-77243]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[77321-77327]:Modifier[77306-77312]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[77328-77334]:SimpleType[77313-77319]"
    }, {
      "left" : "getContent",
      "right" : "getContent",
      "info" : "SimpleName[77335-77345]:SimpleName[77320-77330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77348-77549]:Block[77333-77534]"
    }, {
      "left" : "String str = super.getContent();",
      "right" : "String str = super.getContent();",
      "info" : "VariableDeclarationStatement[77362-77394]:VariableDeclarationStatement[77347-77379]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[77407-77539]:IfStatement[77392-77524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77424-77490]:Block[77409-77475]"
    }, {
      "left" : "return StrBuilder.this.toString();",
      "right" : "return StrBuilder.this.toString();",
      "info" : "ReturnStatement[77442-77476]:ReturnStatement[77427-77461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77496-77539]:Block[77481-77524]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[77514-77525]:ReturnStatement[77499-77510]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[77718-77723]:TYPE_DECLARATION_KIND[77703-77708]"
    }, {
      "left" : "StrBuilderReader",
      "right" : "StrBuilderReader",
      "info" : "SimpleName[77724-77740]:SimpleName[77709-77725]"
    }, {
      "left" : "Reader",
      "right" : "Reader",
      "info" : "SimpleType[77749-77755]:SimpleType[77734-77740]"
    }, {
      "left" : "StrBuilderReader",
      "right" : "StrBuilderReader",
      "info" : "SimpleName[77930-77946]:SimpleName[77915-77931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77949-77981]:Block[77934-77966]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[77963-77971]:SuperConstructorInvocation[77948-77956]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78020-78026]:Modifier[78005-78011]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[78027-78031]:PrimitiveType[78012-78016]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[78032-78037]:SimpleName[78017-78022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78040-78077]:Block[78025-78062]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78116-78122]:Modifier[78101-78107]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[78123-78126]:PrimitiveType[78108-78111]"
    }, {
      "left" : "read",
      "right" : "read",
      "info" : "SimpleName[78127-78131]:SimpleName[78112-78116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78134-78272]:Block[78119-78257]"
    }, {
      "left" : "if (ready() == false)",
      "right" : "if (ready() == false)",
      "info" : "IfStatement[78148-78212]:IfStatement[78133-78197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78170-78212]:Block[78155-78197]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[78188-78198]:ReturnStatement[78173-78183]"
    }, {
      "left" : "return StrBuilder.this.charAt(pos++);",
      "right" : "return StrBuilder.this.charAt(pos++);",
      "info" : "ReturnStatement[78225-78262]:ReturnStatement[78210-78247]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78311-78317]:Modifier[78296-78302]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[78318-78321]:PrimitiveType[78303-78306]"
    }, {
      "left" : "read",
      "right" : "read",
      "info" : "SimpleName[78322-78326]:SimpleName[78307-78311]"
    }, {
      "left" : "char b[]",
      "right" : "char b[]",
      "info" : "SingleVariableDeclaration[78327-78335]:SingleVariableDeclaration[78312-78320]"
    }, {
      "left" : "int off",
      "right" : "int off",
      "info" : "SingleVariableDeclaration[78337-78344]:SingleVariableDeclaration[78322-78329]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[78346-78353]:SingleVariableDeclaration[78331-78338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78355-78928]:Block[78340-78913]"
    }, {
      "left" : "if (off < 0 || len < 0 || off > b.length ||\n                    (off + len) > b.length || (off + len) < 0)",
      "right" : "if (off < 0 || len < 0 || off > b.length ||\n                    (off + len) > b.length || (off + len) < 0)",
      "info" : "IfStatement[78369-78546]:IfStatement[78354-78531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78476-78546]:Block[78461-78531]"
    }, {
      "left" : "throw new IndexOutOfBoundsException();",
      "right" : "throw new IndexOutOfBoundsException();",
      "info" : "ThrowStatement[78494-78532]:ThrowStatement[78479-78517]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[78559-78614]:IfStatement[78544-78599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78573-78614]:Block[78558-78599]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[78591-78600]:ReturnStatement[78576-78585]"
    }, {
      "left" : "if (pos >= StrBuilder.this.size())",
      "right" : "if (pos >= StrBuilder.this.size())",
      "info" : "IfStatement[78627-78704]:IfStatement[78612-78689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78662-78704]:Block[78647-78689]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[78680-78690]:ReturnStatement[78665-78675]"
    }, {
      "left" : "if (pos + len > size())",
      "right" : "if (pos + len > size())",
      "info" : "IfStatement[78717-78808]:IfStatement[78702-78793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78741-78808]:Block[78726-78793]"
    }, {
      "left" : "len = StrBuilder.this.size() - pos;",
      "right" : "len = StrBuilder.this.size() - pos;",
      "info" : "ExpressionStatement[78759-78794]:ExpressionStatement[78744-78779]"
    }, {
      "left" : "StrBuilder.this.getChars(pos, pos + len, b, off);",
      "right" : "StrBuilder.this.getChars(pos, pos + len, b, off);",
      "info" : "ExpressionStatement[78821-78870]:ExpressionStatement[78806-78855]"
    }, {
      "left" : "pos += len;",
      "right" : "pos += len;",
      "info" : "ExpressionStatement[78883-78894]:ExpressionStatement[78868-78879]"
    }, {
      "left" : "return len;",
      "right" : "return len;",
      "info" : "ReturnStatement[78907-78918]:ReturnStatement[78892-78903]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78967-78973]:Modifier[78952-78958]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[78974-78978]:PrimitiveType[78959-78963]"
    }, {
      "left" : "skip",
      "right" : "skip",
      "info" : "SimpleName[78979-78983]:SimpleName[78964-78968]"
    }, {
      "left" : "long n",
      "right" : "long n",
      "info" : "SingleVariableDeclaration[78984-78990]:SingleVariableDeclaration[78969-78975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78992-79228]:Block[78977-79213]"
    }, {
      "left" : "if (pos + n > StrBuilder.this.size())",
      "right" : "if (pos + n > StrBuilder.this.size())",
      "info" : "IfStatement[79006-79109]:IfStatement[78991-79094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79044-79109]:Block[79029-79094]"
    }, {
      "left" : "n = StrBuilder.this.size() - pos;",
      "right" : "n = StrBuilder.this.size() - pos;",
      "info" : "ExpressionStatement[79062-79095]:ExpressionStatement[79047-79080]"
    }, {
      "left" : "if (n < 0)",
      "right" : "if (n < 0)",
      "info" : "IfStatement[79122-79174]:IfStatement[79107-79159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79133-79174]:Block[79118-79159]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[79151-79160]:ReturnStatement[79136-79145]"
    }, {
      "left" : "pos += n;",
      "right" : "pos += n;",
      "info" : "ExpressionStatement[79187-79196]:ExpressionStatement[79172-79181]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[79209-79218]:ReturnStatement[79194-79203]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79267-79273]:Modifier[79252-79258]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[79274-79281]:PrimitiveType[79259-79266]"
    }, {
      "left" : "ready",
      "right" : "ready",
      "info" : "SimpleName[79282-79287]:SimpleName[79267-79272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79290-79350]:Block[79275-79335]"
    }, {
      "left" : "return pos < StrBuilder.this.size();",
      "right" : "return pos < StrBuilder.this.size();",
      "info" : "ReturnStatement[79304-79340]:ReturnStatement[79289-79325]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79389-79395]:Modifier[79374-79380]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[79396-79403]:PrimitiveType[79381-79388]"
    }, {
      "left" : "markSupported",
      "right" : "markSupported",
      "info" : "SimpleName[79404-79417]:SimpleName[79389-79402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79420-79456]:Block[79405-79441]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[79434-79446]:ReturnStatement[79419-79431]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79495-79501]:Modifier[79480-79486]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[79502-79506]:PrimitiveType[79487-79491]"
    }, {
      "left" : "mark",
      "right" : "mark",
      "info" : "SimpleName[79507-79511]:SimpleName[79492-79496]"
    }, {
      "left" : "int readAheadLimit",
      "right" : "int readAheadLimit",
      "info" : "SingleVariableDeclaration[79512-79530]:SingleVariableDeclaration[79497-79515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79532-79567]:Block[79517-79552]"
    }, {
      "left" : "mark = pos;",
      "right" : "mark = pos;",
      "info" : "ExpressionStatement[79546-79557]:ExpressionStatement[79531-79542]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79606-79612]:Modifier[79591-79597]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[79613-79617]:PrimitiveType[79598-79602]"
    }, {
      "left" : "reset",
      "right" : "reset",
      "info" : "SimpleName[79618-79623]:SimpleName[79603-79608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79626-79661]:Block[79611-79646]"
    }, {
      "left" : "pos = mark;",
      "right" : "pos = mark;",
      "info" : "ExpressionStatement[79640-79651]:ExpressionStatement[79625-79636]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[79830-79835]:TYPE_DECLARATION_KIND[79815-79820]"
    }, {
      "left" : "StrBuilderWriter",
      "right" : "StrBuilderWriter",
      "info" : "SimpleName[79836-79852]:SimpleName[79821-79837]"
    }, {
      "left" : "Writer",
      "right" : "Writer",
      "info" : "SimpleType[79861-79867]:SimpleType[79846-79852]"
    }, {
      "left" : "StrBuilderWriter",
      "right" : "StrBuilderWriter",
      "info" : "SimpleName[79908-79924]:SimpleName[79893-79909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79927-79959]:Block[79912-79944]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[79941-79949]:SuperConstructorInvocation[79926-79934]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79998-80004]:Modifier[79983-79989]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80005-80009]:PrimitiveType[79990-79994]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[80010-80015]:SimpleName[79995-80000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80018-80055]:Block[80003-80040]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80094-80100]:Modifier[80079-80085]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80101-80105]:PrimitiveType[80086-80090]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[80106-80111]:SimpleName[80091-80096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80114-80151]:Block[80099-80136]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80190-80196]:Modifier[80175-80181]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80197-80201]:PrimitiveType[80182-80186]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[80202-80207]:SimpleName[80187-80192]"
    }, {
      "left" : "int c",
      "right" : "int c",
      "info" : "SingleVariableDeclaration[80208-80213]:SingleVariableDeclaration[80193-80198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80215-80272]:Block[80200-80257]"
    }, {
      "left" : "StrBuilder.this.append((char) c);",
      "right" : "StrBuilder.this.append((char) c);",
      "info" : "ExpressionStatement[80229-80262]:ExpressionStatement[80214-80247]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80311-80317]:Modifier[80296-80302]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80318-80322]:PrimitiveType[80303-80307]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[80323-80328]:SimpleName[80308-80313]"
    }, {
      "left" : "char[] cbuf",
      "right" : "char[] cbuf",
      "info" : "SingleVariableDeclaration[80329-80340]:SingleVariableDeclaration[80314-80325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80342-80395]:Block[80327-80380]"
    }, {
      "left" : "StrBuilder.this.append(cbuf);",
      "right" : "StrBuilder.this.append(cbuf);",
      "info" : "ExpressionStatement[80356-80385]:ExpressionStatement[80341-80370]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80434-80440]:Modifier[80419-80425]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80441-80445]:PrimitiveType[80426-80430]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[80446-80451]:SimpleName[80431-80436]"
    }, {
      "left" : "char[] cbuf",
      "right" : "char[] cbuf",
      "info" : "SingleVariableDeclaration[80452-80463]:SingleVariableDeclaration[80437-80448]"
    }, {
      "left" : "int off",
      "right" : "int off",
      "info" : "SingleVariableDeclaration[80465-80472]:SingleVariableDeclaration[80450-80457]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[80474-80481]:SingleVariableDeclaration[80459-80466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80483-80546]:Block[80468-80531]"
    }, {
      "left" : "StrBuilder.this.append(cbuf, off, len);",
      "right" : "StrBuilder.this.append(cbuf, off, len);",
      "info" : "ExpressionStatement[80497-80536]:ExpressionStatement[80482-80521]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80585-80591]:Modifier[80570-80576]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80592-80596]:PrimitiveType[80577-80581]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[80597-80602]:SimpleName[80582-80587]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[80603-80613]:SingleVariableDeclaration[80588-80598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80615-80667]:Block[80600-80652]"
    }, {
      "left" : "StrBuilder.this.append(str);",
      "right" : "StrBuilder.this.append(str);",
      "info" : "ExpressionStatement[80629-80657]:ExpressionStatement[80614-80642]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80706-80712]:Modifier[80691-80697]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80713-80717]:PrimitiveType[80698-80702]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[80718-80723]:SimpleName[80703-80708]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[80724-80734]:SingleVariableDeclaration[80709-80719]"
    }, {
      "left" : "int off",
      "right" : "int off",
      "info" : "SingleVariableDeclaration[80736-80743]:SingleVariableDeclaration[80721-80728]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[80745-80752]:SingleVariableDeclaration[80730-80737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80754-80816]:Block[80739-80801]"
    }, {
      "left" : "StrBuilder.this.append(str, off, len);",
      "right" : "StrBuilder.this.append(str, off, len);",
      "info" : "ExpressionStatement[80768-80806]:ExpressionStatement[80753-80791]"
    } ]
  },
  "interFileMappings" : { }
}