{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static final int DEFAULT_WIDTH = 74;",
      "right" : "public static final int DEFAULT_WIDTH = 74;",
      "info" : "FieldDeclaration[1362-1454]:FieldDeclaration[1362-1454]"
    }, {
      "left" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "right" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "info" : "FieldDeclaration[1460-1557]:FieldDeclaration[1460-1557]"
    }, {
      "left" : "public static final int DEFAULT_DESC_PAD = 3;",
      "right" : "public static final int DEFAULT_DESC_PAD = 3;",
      "info" : "FieldDeclaration[1563-1714]:FieldDeclaration[1563-1714]"
    }, {
      "left" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "right" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "info" : "FieldDeclaration[1720-1854]:FieldDeclaration[1720-1854]"
    }, {
      "left" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "right" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "info" : "FieldDeclaration[1860-1952]:FieldDeclaration[1860-1952]"
    }, {
      "left" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "right" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "info" : "FieldDeclaration[1958-2058]:FieldDeclaration[1958-2058]"
    }, {
      "left" : "public static final String DEFAULT_LONG_OPT_SEPARATOR = \" \";",
      "right" : "public static final String DEFAULT_LONG_OPT_SEPARATOR = \" \";",
      "info" : "FieldDeclaration[2064-2199]:FieldDeclaration[2064-2199]"
    }, {
      "left" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "right" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "info" : "FieldDeclaration[2205-2297]:FieldDeclaration[2205-2297]"
    }, {
      "left" : "public int defaultWidth = DEFAULT_WIDTH;",
      "right" : "public int defaultWidth = DEFAULT_WIDTH;",
      "info" : "FieldDeclaration[2385-2597]:FieldDeclaration[2385-2597]"
    }, {
      "left" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "right" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "info" : "FieldDeclaration[2603-2839]:FieldDeclaration[2603-2839]"
    }, {
      "left" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "right" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "info" : "FieldDeclaration[2845-3121]:FieldDeclaration[2845-3121]"
    }, {
      "left" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "right" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "info" : "FieldDeclaration[3127-3395]:FieldDeclaration[3127-3395]"
    }, {
      "left" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "right" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "info" : "FieldDeclaration[3401-3633]:FieldDeclaration[3401-3633]"
    }, {
      "left" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "right" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "info" : "FieldDeclaration[3639-3857]:FieldDeclaration[3639-3857]"
    }, {
      "left" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "right" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "info" : "FieldDeclaration[3863-4094]:FieldDeclaration[3863-4094]"
    }, {
      "left" : "private String longOptSeparator = DEFAULT_LONG_OPT_SEPARATOR;",
      "right" : "private String longOptSeparator = DEFAULT_LONG_OPT_SEPARATOR;",
      "info" : "FieldDeclaration[4100-4235]:FieldDeclaration[4100-4235]"
    }, {
      "left" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "right" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "info" : "FieldDeclaration[4241-4458]:FieldDeclaration[4241-4458]"
    }, {
      "left" : "protected Comparator optionComparator = new OptionComparator();",
      "right" : "protected Comparator optionComparator = new OptionComparator();",
      "info" : "FieldDeclaration[4464-4695]:FieldDeclaration[4464-4695]"
    }, {
      "left" : "public void setWidth(int width)",
      "right" : "public void setWidth(int width)",
      "info" : "MethodDeclaration[4705-4876]:MethodDeclaration[4705-4876]"
    }, {
      "left" : "public int getWidth()",
      "right" : "public int getWidth()",
      "info" : "MethodDeclaration[4882-5022]:MethodDeclaration[4882-5022]"
    }, {
      "left" : "public void setLeftPadding(int padding)",
      "right" : "public void setLeftPadding(int padding)",
      "info" : "MethodDeclaration[5028-5225]:MethodDeclaration[5028-5225]"
    }, {
      "left" : "public int getLeftPadding()",
      "right" : "public int getLeftPadding()",
      "info" : "MethodDeclaration[5231-5391]:MethodDeclaration[5231-5391]"
    }, {
      "left" : "public void setDescPadding(int padding)",
      "right" : "public void setDescPadding(int padding)",
      "info" : "MethodDeclaration[5397-5594]:MethodDeclaration[5397-5594]"
    }, {
      "left" : "public int getDescPadding()",
      "right" : "public int getDescPadding()",
      "info" : "MethodDeclaration[5600-5760]:MethodDeclaration[5600-5760]"
    }, {
      "left" : "public void setSyntaxPrefix(String prefix)",
      "right" : "public void setSyntaxPrefix(String prefix)",
      "info" : "MethodDeclaration[5766-5971]:MethodDeclaration[5766-5971]"
    }, {
      "left" : "public String getSyntaxPrefix()",
      "right" : "public String getSyntaxPrefix()",
      "info" : "MethodDeclaration[5977-6148]:MethodDeclaration[5977-6148]"
    }, {
      "left" : "public void setNewLine(String newline)",
      "right" : "public void setNewLine(String newline)",
      "info" : "MethodDeclaration[6154-6342]:MethodDeclaration[6154-6342]"
    }, {
      "left" : "public String getNewLine()",
      "right" : "public String getNewLine()",
      "info" : "MethodDeclaration[6348-6499]:MethodDeclaration[6348-6499]"
    }, {
      "left" : "public void setOptPrefix(String prefix)",
      "right" : "public void setOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6505-6698]:MethodDeclaration[6505-6698]"
    }, {
      "left" : "public String getOptPrefix()",
      "right" : "public String getOptPrefix()",
      "info" : "MethodDeclaration[6704-6863]:MethodDeclaration[6704-6863]"
    }, {
      "left" : "public void setLongOptPrefix(String prefix)",
      "right" : "public void setLongOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6869-7078]:MethodDeclaration[6869-7078]"
    }, {
      "left" : "public String getLongOptPrefix()",
      "right" : "public String getLongOptPrefix()",
      "info" : "MethodDeclaration[7084-7259]:MethodDeclaration[7084-7259]"
    }, {
      "left" : "public void setLongOptSeparator(String longOptSeparator)",
      "right" : "public void setLongOptSeparator(String longOptSeparator)",
      "info" : "MethodDeclaration[7265-7670]:MethodDeclaration[7265-7670]"
    }, {
      "left" : "public String getLongOptSeparator()",
      "right" : "public String getLongOptSeparator()",
      "info" : "MethodDeclaration[7676-7903]:MethodDeclaration[7676-7903]"
    }, {
      "left" : "public void setArgName(String name)",
      "right" : "public void setArgName(String name)",
      "info" : "MethodDeclaration[7909-8088]:MethodDeclaration[7909-8088]"
    }, {
      "left" : "public String getArgName()",
      "right" : "public String getArgName()",
      "info" : "MethodDeclaration[8094-8245]:MethodDeclaration[8094-8245]"
    }, {
      "left" : "public Comparator getOptionComparator()",
      "right" : "public Comparator getOptionComparator()",
      "info" : "MethodDeclaration[8251-8523]:MethodDeclaration[8251-8523]"
    }, {
      "left" : "public void setOptionComparator(Comparator comparator)",
      "right" : "public void setOptionComparator(Comparator comparator)",
      "info" : "MethodDeclaration[8529-8990]:MethodDeclaration[8529-8990]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options)",
      "info" : "MethodDeclaration[8996-9423]:MethodDeclaration[8996-9423]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "info" : "MethodDeclaration[9429-9971]:MethodDeclaration[9429-9971]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[9977-10561]:MethodDeclaration[9977-10561]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[10567-11280]:MethodDeclaration[10567-11280]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[11286-11963]:MethodDeclaration[11286-11963]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[11969-12897]:MethodDeclaration[11969-12897]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "info" : "MethodDeclaration[12903-13978]:MethodDeclaration[12903-13978]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[13985-15744]:MethodDeclaration[13985-15744]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "right" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "info" : "MethodDeclaration[15750-17832]:MethodDeclaration[15750-17832]"
    }, {
      "left" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "right" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "info" : "MethodDeclaration[17838-18937]:MethodDeclaration[17838-18937]"
    }, {
      "left" : "private void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "right" : "private void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "info" : "MethodDeclaration[18943-20080]:MethodDeclaration[18943-20080]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "right" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "info" : "MethodDeclaration[20090-20631]:MethodDeclaration[20090-20631]"
    }, {
      "left" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "right" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "info" : "MethodDeclaration[20637-21449]:MethodDeclaration[20637-21449]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "info" : "MethodDeclaration[21455-21838]:MethodDeclaration[21455-21838]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[21844-22441]:MethodDeclaration[21844-22441]"
    }, {
      "left" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "right" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "info" : "MethodDeclaration[22529-25856]:MethodDeclaration[22529-25856]"
    }, {
      "left" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "right" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[25862-27459]:MethodDeclaration[25862-27459]"
    }, {
      "left" : "protected String createPadding(int len)",
      "right" : "protected String createPadding(int len)",
      "info" : "MethodDeclaration[29364-29729]:MethodDeclaration[29207-29572]"
    }, {
      "left" : "protected String rtrim(String s)",
      "right" : "protected String rtrim(String s)",
      "info" : "MethodDeclaration[29735-30263]:MethodDeclaration[29578-30106]"
    }, {
      "left" : "OptionComparator",
      "right" : "OptionComparator",
      "info" : "TypeDeclaration[30509-31435]:TypeDeclaration[30352-31278]"
    }, {
      "left" : "public int compare(Object o1, Object o2)",
      "right" : "public int compare(Object o1, Object o2)",
      "info" : "MethodDeclaration[30697-31429]:MethodDeclaration[30540-31272]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4834-4876]:Block[4834-4876]"
    }, {
      "left" : "this.defaultWidth = width;",
      "right" : "this.defaultWidth = width;",
      "info" : "ExpressionStatement[4844-4870]:ExpressionStatement[4844-4870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4986-5022]:Block[4986-5022]"
    }, {
      "left" : "return defaultWidth;",
      "right" : "return defaultWidth;",
      "info" : "ReturnStatement[4996-5016]:ReturnStatement[4996-5016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5179-5225]:Block[5179-5225]"
    }, {
      "left" : "this.defaultLeftPad = padding;",
      "right" : "this.defaultLeftPad = padding;",
      "info" : "ExpressionStatement[5189-5219]:ExpressionStatement[5189-5219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5353-5391]:Block[5353-5391]"
    }, {
      "left" : "return defaultLeftPad;",
      "right" : "return defaultLeftPad;",
      "info" : "ReturnStatement[5363-5385]:ReturnStatement[5363-5385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5548-5594]:Block[5548-5594]"
    }, {
      "left" : "this.defaultDescPad = padding;",
      "right" : "this.defaultDescPad = padding;",
      "info" : "ExpressionStatement[5558-5588]:ExpressionStatement[5558-5588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5722-5760]:Block[5722-5760]"
    }, {
      "left" : "return defaultDescPad;",
      "right" : "return defaultDescPad;",
      "info" : "ReturnStatement[5732-5754]:ReturnStatement[5732-5754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5921-5971]:Block[5921-5971]"
    }, {
      "left" : "this.defaultSyntaxPrefix = prefix;",
      "right" : "this.defaultSyntaxPrefix = prefix;",
      "info" : "ExpressionStatement[5931-5965]:ExpressionStatement[5931-5965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6105-6148]:Block[6105-6148]"
    }, {
      "left" : "return defaultSyntaxPrefix;",
      "right" : "return defaultSyntaxPrefix;",
      "info" : "ReturnStatement[6115-6142]:ReturnStatement[6115-6142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6296-6342]:Block[6296-6342]"
    }, {
      "left" : "this.defaultNewLine = newline;",
      "right" : "this.defaultNewLine = newline;",
      "info" : "ExpressionStatement[6306-6336]:ExpressionStatement[6306-6336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6461-6499]:Block[6461-6499]"
    }, {
      "left" : "return defaultNewLine;",
      "right" : "return defaultNewLine;",
      "info" : "ReturnStatement[6471-6493]:ReturnStatement[6471-6493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6651-6698]:Block[6651-6698]"
    }, {
      "left" : "this.defaultOptPrefix = prefix;",
      "right" : "this.defaultOptPrefix = prefix;",
      "info" : "ExpressionStatement[6661-6692]:ExpressionStatement[6661-6692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6823-6863]:Block[6823-6863]"
    }, {
      "left" : "return defaultOptPrefix;",
      "right" : "return defaultOptPrefix;",
      "info" : "ReturnStatement[6833-6857]:ReturnStatement[6833-6857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7027-7078]:Block[7027-7078]"
    }, {
      "left" : "this.defaultLongOptPrefix = prefix;",
      "right" : "this.defaultLongOptPrefix = prefix;",
      "info" : "ExpressionStatement[7037-7072]:ExpressionStatement[7037-7072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7215-7259]:Block[7215-7259]"
    }, {
      "left" : "return defaultLongOptPrefix;",
      "right" : "return defaultLongOptPrefix;",
      "info" : "ReturnStatement[7225-7253]:ReturnStatement[7225-7253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7613-7670]:Block[7613-7670]"
    }, {
      "left" : "this.longOptSeparator = longOptSeparator;",
      "right" : "this.longOptSeparator = longOptSeparator;",
      "info" : "ExpressionStatement[7623-7664]:ExpressionStatement[7623-7664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7863-7903]:Block[7863-7903]"
    }, {
      "left" : "return longOptSeparator;",
      "right" : "return longOptSeparator;",
      "info" : "ReturnStatement[7873-7897]:ReturnStatement[7873-7897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8045-8088]:Block[8045-8088]"
    }, {
      "left" : "this.defaultArgName = name;",
      "right" : "this.defaultArgName = name;",
      "info" : "ExpressionStatement[8055-8082]:ExpressionStatement[8055-8082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8207-8245]:Block[8207-8245]"
    }, {
      "left" : "return defaultArgName;",
      "right" : "return defaultArgName;",
      "info" : "ReturnStatement[8217-8239]:ReturnStatement[8217-8239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8483-8523]:Block[8483-8523]"
    }, {
      "left" : "return optionComparator;",
      "right" : "return optionComparator;",
      "info" : "ReturnStatement[8493-8517]:ReturnStatement[8493-8517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8790-8990]:Block[8790-8990]"
    }, {
      "left" : "if (comparator == null)",
      "right" : "if (comparator == null)",
      "info" : "IfStatement[8800-8984]:IfStatement[8800-8984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8832-8903]:Block[8832-8903]"
    }, {
      "left" : "this.optionComparator = new OptionComparator();",
      "right" : "this.optionComparator = new OptionComparator();",
      "info" : "ExpressionStatement[8846-8893]:ExpressionStatement[8846-8893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8925-8984]:Block[8925-8984]"
    }, {
      "left" : "this.optionComparator = comparator;",
      "right" : "this.optionComparator = comparator;",
      "info" : "ExpressionStatement[8939-8974]:ExpressionStatement[8939-8974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9340-9423]:Block[9340-9423]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "info" : "ExpressionStatement[9350-9417]:ExpressionStatement[9350-9417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9884-9971]:Block[9884-9971]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "info" : "ExpressionStatement[9894-9965]:ExpressionStatement[9894-9965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10488-10561]:Block[10488-10561]"
    }, {
      "left" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[10498-10555]:ExpressionStatement[10498-10555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11189-11280]:Block[11189-11280]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "info" : "ExpressionStatement[11199-11274]:ExpressionStatement[11199-11274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11883-11963]:Block[11883-11963]"
    }, {
      "left" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[11893-11957]:ExpressionStatement[11893-11957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12702-12897]:Block[12702-12897]"
    }, {
      "left" : "PrintWriter pw = new PrintWriter(System.out);",
      "right" : "PrintWriter pw = new PrintWriter(System.out);",
      "info" : "VariableDeclarationStatement[12712-12757]:VariableDeclarationStatement[12712-12757]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "info" : "ExpressionStatement[12767-12871]:ExpressionStatement[12767-12871]"
    }, {
      "left" : "pw.flush();",
      "right" : "pw.flush();",
      "info" : "ExpressionStatement[12880-12891]:ExpressionStatement[12880-12891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13876-13978]:Block[13876-13978]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "info" : "ExpressionStatement[13886-13972]:ExpressionStatement[13886-13972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15066-15744]:Block[15066-15744]"
    }, {
      "left" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "right" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "info" : "IfStatement[15076-15235]:IfStatement[15076-15235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15146-15235]:Block[15146-15235]"
    }, {
      "left" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "right" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "info" : "ThrowStatement[15160-15225]:ThrowStatement[15160-15225]"
    }, {
      "left" : "if (autoUsage)",
      "right" : "if (autoUsage)",
      "info" : "IfStatement[15245-15421]:IfStatement[15245-15421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15268-15338]:Block[15268-15338]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax, options);",
      "right" : "printUsage(pw, width, cmdLineSyntax, options);",
      "info" : "ExpressionStatement[15282-15328]:ExpressionStatement[15282-15328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15360-15421]:Block[15360-15421]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax);",
      "right" : "printUsage(pw, width, cmdLineSyntax);",
      "info" : "ExpressionStatement[15374-15411]:ExpressionStatement[15374-15411]"
    }, {
      "left" : "if ((header != null) && (header.trim().length() > 0))",
      "right" : "if ((header != null) && (header.trim().length() > 0))",
      "info" : "IfStatement[15431-15549]:IfStatement[15431-15549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15493-15549]:Block[15493-15549]"
    }, {
      "left" : "printWrapped(pw, width, header);",
      "right" : "printWrapped(pw, width, header);",
      "info" : "ExpressionStatement[15507-15539]:ExpressionStatement[15507-15539]"
    }, {
      "left" : "printOptions(pw, width, options, leftPad, descPad);",
      "right" : "printOptions(pw, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[15559-15610]:ExpressionStatement[15559-15610]"
    }, {
      "left" : "if ((footer != null) && (footer.trim().length() > 0))",
      "right" : "if ((footer != null) && (footer.trim().length() > 0))",
      "info" : "IfStatement[15620-15738]:IfStatement[15620-15738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15682-15738]:Block[15682-15738]"
    }, {
      "left" : "printWrapped(pw, width, footer);",
      "right" : "printWrapped(pw, width, footer);",
      "info" : "ExpressionStatement[15696-15728]:ExpressionStatement[15696-15728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16135-17832]:Block[16135-17832]"
    }, {
      "left" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "right" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "info" : "VariableDeclarationStatement[16185-16267]:VariableDeclarationStatement[16185-16267]"
    }, {
      "left" : "final Collection processedGroups = new ArrayList();",
      "right" : "final Collection processedGroups = new ArrayList();",
      "info" : "VariableDeclarationStatement[16330-16381]:VariableDeclarationStatement[16330-16381]"
    }, {
      "left" : "Option option;",
      "right" : "Option option;",
      "info" : "VariableDeclarationStatement[16416-16430]:VariableDeclarationStatement[16416-16430]"
    }, {
      "left" : "List optList = new ArrayList(options.getOptions());",
      "right" : "List optList = new ArrayList(options.getOptions());",
      "info" : "VariableDeclarationStatement[16440-16491]:VariableDeclarationStatement[16440-16491]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[16500-16549]:ExpressionStatement[16500-16549]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[16594-17711]:ForStatement[16594-17711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16654-17711]:Block[16654-17711]"
    }, {
      "left" : "option = (Option) i.next();",
      "right" : "option = (Option) i.next();",
      "info" : "ExpressionStatement[16703-16730]:ExpressionStatement[16703-16730]"
    }, {
      "left" : "OptionGroup group = options.getOptionGroup(option);",
      "right" : "OptionGroup group = options.getOptionGroup(option);",
      "info" : "VariableDeclarationStatement[16805-16856]:VariableDeclarationStatement[16805-16856]"
    }, {
      "left" : "if (group != null)",
      "right" : "if (group != null)",
      "info" : "IfStatement[16919-17609]:IfStatement[16919-17609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16950-17439]:Block[16950-17439]"
    }, {
      "left" : "if (!processedGroups.contains(group))",
      "right" : "if (!processedGroups.contains(group))",
      "info" : "IfStatement[17035-17313]:IfStatement[17035-17313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17089-17313]:Block[17089-17313]"
    }, {
      "left" : "processedGroups.add(group);",
      "right" : "processedGroups.add(group);",
      "info" : "ExpressionStatement[17170-17197]:ExpressionStatement[17170-17197]"
    }, {
      "left" : "appendOptionGroup(buff, group);",
      "right" : "appendOptionGroup(buff, group);",
      "info" : "ExpressionStatement[17264-17295]:ExpressionStatement[17264-17295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17529-17609]:Block[17529-17609]"
    }, {
      "left" : "appendOption(buff, option, option.isRequired());",
      "right" : "appendOption(buff, option, option.isRequired());",
      "info" : "ExpressionStatement[17547-17595]:ExpressionStatement[17547-17595]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[17623-17701]:IfStatement[17623-17701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17652-17701]:Block[17652-17701]"
    }, {
      "left" : "buff.append(\" \");",
      "right" : "buff.append(\" \");",
      "info" : "ExpressionStatement[17670-17687]:ExpressionStatement[17670-17687]"
    }, {
      "left" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "right" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "info" : "ExpressionStatement[17751-17826]:ExpressionStatement[17751-17826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18290-18937]:Block[18290-18937]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[18300-18374]:IfStatement[18300-18374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18333-18374]:Block[18333-18374]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[18347-18364]:ExpressionStatement[18347-18364]"
    }, {
      "left" : "List optList = new ArrayList(group.getOptions());",
      "right" : "List optList = new ArrayList(group.getOptions());",
      "info" : "VariableDeclarationStatement[18384-18433]:VariableDeclarationStatement[18384-18433]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[18442-18491]:ExpressionStatement[18442-18491]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[18546-18847]:ForStatement[18546-18847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18606-18847]:Block[18606-18847]"
    }, {
      "left" : "appendOption(buff, (Option) i.next(), true);",
      "right" : "appendOption(buff, (Option) i.next(), true);",
      "info" : "ExpressionStatement[18699-18743]:ExpressionStatement[18699-18743]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[18757-18837]:IfStatement[18757-18837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18786-18837]:Block[18786-18837]"
    }, {
      "left" : "buff.append(\" | \");",
      "right" : "buff.append(\" | \");",
      "info" : "ExpressionStatement[18804-18823]:ExpressionStatement[18804-18823]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[18857-18931]:IfStatement[18857-18931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18890-18931]:Block[18890-18931]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[18904-18921]:ExpressionStatement[18904-18921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19285-20080]:Block[19285-20080]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[19295-19359]:IfStatement[19295-19359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19318-19359]:Block[19318-19359]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[19332-19349]:ExpressionStatement[19332-19349]"
    }, {
      "left" : "if (option.getOpt() != null)",
      "right" : "if (option.getOpt() != null)",
      "info" : "IfStatement[19369-19563]:IfStatement[19369-19563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19406-19471]:Block[19406-19471]"
    }, {
      "left" : "buff.append(\"-\").append(option.getOpt());",
      "right" : "buff.append(\"-\").append(option.getOpt());",
      "info" : "ExpressionStatement[19420-19461]:ExpressionStatement[19420-19461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19493-19563]:Block[19493-19563]"
    }, {
      "left" : "buff.append(\"--\").append(option.getLongOpt());",
      "right" : "buff.append(\"--\").append(option.getLongOpt());",
      "info" : "ExpressionStatement[19507-19553]:ExpressionStatement[19507-19553]"
    }, {
      "left" : "if (option.hasArg() && (option.getArgName() == null || option.getArgName().length() != 0))",
      "right" : "if (option.hasArg() && (option.getArgName() == null || option.getArgName().length() != 0))",
      "info" : "IfStatement[19642-19942]:IfStatement[19642-19942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19741-19942]:Block[19741-19942]"
    }, {
      "left" : "buff.append(option.getOpt() == null ? longOptSeparator : \" \");",
      "right" : "buff.append(option.getOpt() == null ? longOptSeparator : \" \");",
      "info" : "ExpressionStatement[19755-19817]:ExpressionStatement[19755-19817]"
    }, {
      "left" : "buff.append(\"<\").append(option.getArgName() != null ? option.getArgName() : getArgName()).append(\">\");",
      "right" : "buff.append(\"<\").append(option.getArgName() != null ? option.getArgName() : getArgName()).append(\">\");",
      "info" : "ExpressionStatement[19830-19932]:ExpressionStatement[19830-19932]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[20010-20074]:IfStatement[20010-20074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20033-20074]:Block[20033-20074]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[20047-20064]:ExpressionStatement[20047-20064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20461-20631]:Block[20461-20631]"
    }, {
      "left" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "right" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "info" : "VariableDeclarationStatement[20471-20515]:VariableDeclarationStatement[20471-20515]"
    }, {
      "left" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "right" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "info" : "ExpressionStatement[20525-20625]:ExpressionStatement[20525-20625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21299-21449]:Block[21299-21449]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer();",
      "right" : "StringBuffer sb = new StringBuffer();",
      "info" : "VariableDeclarationStatement[21309-21346]:VariableDeclarationStatement[21309-21346]"
    }, {
      "left" : "renderOptions(sb, width, options, leftPad, descPad);",
      "right" : "renderOptions(sb, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[21356-21408]:ExpressionStatement[21356-21408]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[21417-21443]:ExpressionStatement[21417-21443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21789-21838]:Block[21789-21838]"
    }, {
      "left" : "printWrapped(pw, width, 0, text);",
      "right" : "printWrapped(pw, width, 0, text);",
      "info" : "ExpressionStatement[21799-21832]:ExpressionStatement[21799-21832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22278-22441]:Block[22278-22441]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer(text.length());",
      "right" : "StringBuffer sb = new StringBuffer(text.length());",
      "info" : "VariableDeclarationStatement[22288-22338]:VariableDeclarationStatement[22288-22338]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "info" : "ExpressionStatement[22348-22400]:ExpressionStatement[22348-22400]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[22409-22435]:ExpressionStatement[22409-22435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23213-25856]:Block[23213-25856]"
    }, {
      "left" : "final String lpad = createPadding(leftPad);",
      "right" : "final String lpad = createPadding(leftPad);",
      "info" : "VariableDeclarationStatement[23223-23266]:VariableDeclarationStatement[23223-23266]"
    }, {
      "left" : "final String dpad = createPadding(descPad);",
      "right" : "final String dpad = createPadding(descPad);",
      "info" : "VariableDeclarationStatement[23275-23318]:VariableDeclarationStatement[23275-23318]"
    }, {
      "left" : "int max = 0;",
      "right" : "int max = 0;",
      "info" : "VariableDeclarationStatement[23561-23573]:VariableDeclarationStatement[23561-23573]"
    }, {
      "left" : "StringBuffer optBuf;",
      "right" : "StringBuffer optBuf;",
      "info" : "VariableDeclarationStatement[23582-23602]:VariableDeclarationStatement[23582-23602]"
    }, {
      "left" : "List prefixList = new ArrayList();",
      "right" : "List prefixList = new ArrayList();",
      "info" : "VariableDeclarationStatement[23611-23645]:VariableDeclarationStatement[23611-23645]"
    }, {
      "left" : "List optList = options.helpOptions();",
      "right" : "List optList = options.helpOptions();",
      "info" : "VariableDeclarationStatement[23655-23692]:VariableDeclarationStatement[23655-23692]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[23702-23751]:ExpressionStatement[23702-23751]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[23761-25076]:ForStatement[23761-25076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23821-25076]:Block[23821-25076]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[23835-23869]:VariableDeclarationStatement[23835-23869]"
    }, {
      "left" : "optBuf = new StringBuffer();",
      "right" : "optBuf = new StringBuffer();",
      "info" : "ExpressionStatement[23882-23910]:ExpressionStatement[23882-23910]"
    }, {
      "left" : "if (option.getOpt() == null)",
      "right" : "if (option.getOpt() == null)",
      "info" : "IfStatement[23936-24400]:IfStatement[23936-24400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23977-24094]:Block[23977-24094]"
    }, {
      "left" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[23995-24080]:ExpressionStatement[23995-24080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24124-24400]:Block[24124-24400]"
    }, {
      "left" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "right" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "info" : "ExpressionStatement[24142-24211]:ExpressionStatement[24142-24211]"
    }, {
      "left" : "if (option.hasLongOpt())",
      "right" : "if (option.hasLongOpt())",
      "info" : "IfStatement[24229-24386]:IfStatement[24229-24386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24270-24386]:Block[24270-24386]"
    }, {
      "left" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[24292-24368]:ExpressionStatement[24292-24368]"
    }, {
      "left" : "if (option.hasArg())",
      "right" : "if (option.hasArg())",
      "info" : "IfStatement[24414-24962]:IfStatement[24414-24962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24447-24962]:Block[24447-24962]"
    }, {
      "left" : "String argName = option.getArgName();",
      "right" : "String argName = option.getArgName();",
      "info" : "VariableDeclarationStatement[24465-24502]:VariableDeclarationStatement[24465-24502]"
    }, {
      "left" : "if (argName != null && argName.length() == 0)",
      "right" : "if (argName != null && argName.length() == 0)",
      "info" : "IfStatement[24519-24948]:IfStatement[24519-24948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24581-24697]:Block[24581-24697]"
    }, {
      "left" : "optBuf.append(' ');",
      "right" : "optBuf.append(' ');",
      "info" : "ExpressionStatement[24660-24679]:ExpressionStatement[24660-24679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24735-24948]:Block[24735-24948]"
    }, {
      "left" : "optBuf.append(option.hasLongOpt() ? longOptSeparator : \" \");",
      "right" : "optBuf.append(option.hasLongOpt() ? longOptSeparator : \" \");",
      "info" : "ExpressionStatement[24757-24817]:ExpressionStatement[24757-24817]"
    }, {
      "left" : "optBuf.append(\"<\").append(argName != null ? option.getArgName() : getArgName()).append(\">\");",
      "right" : "optBuf.append(\"<\").append(argName != null ? option.getArgName() : getArgName()).append(\">\");",
      "info" : "ExpressionStatement[24838-24930]:ExpressionStatement[24838-24930]"
    }, {
      "left" : "prefixList.add(optBuf);",
      "right" : "prefixList.add(optBuf);",
      "info" : "ExpressionStatement[24976-24999]:ExpressionStatement[24976-24999]"
    }, {
      "left" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "right" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "info" : "ExpressionStatement[25012-25066]:ExpressionStatement[25012-25066]"
    }, {
      "left" : "int x = 0;",
      "right" : "int x = 0;",
      "info" : "VariableDeclarationStatement[25086-25096]:VariableDeclarationStatement[25086-25096]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[25106-25830]:ForStatement[25106-25830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25166-25830]:Block[25166-25830]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[25180-25214]:VariableDeclarationStatement[25180-25214]"
    }, {
      "left" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "right" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "info" : "ExpressionStatement[25227-25285]:ExpressionStatement[25227-25285]"
    }, {
      "left" : "if (optBuf.length() < max)",
      "right" : "if (optBuf.length() < max)",
      "info" : "IfStatement[25299-25422]:IfStatement[25299-25422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25338-25422]:Block[25338-25422]"
    }, {
      "left" : "optBuf.append(createPadding(max - optBuf.length()));",
      "right" : "optBuf.append(createPadding(max - optBuf.length()));",
      "info" : "ExpressionStatement[25356-25408]:ExpressionStatement[25356-25408]"
    }, {
      "left" : "optBuf.append(dpad);",
      "right" : "optBuf.append(dpad);",
      "info" : "ExpressionStatement[25436-25456]:ExpressionStatement[25436-25456]"
    }, {
      "left" : "int nextLineTabStop = max + descPad;",
      "right" : "int nextLineTabStop = max + descPad;",
      "info" : "VariableDeclarationStatement[25470-25506]:VariableDeclarationStatement[25470-25506]"
    }, {
      "left" : "if (option.getDescription() != null)",
      "right" : "if (option.getDescription() != null)",
      "info" : "IfStatement[25520-25640]:IfStatement[25520-25640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25569-25640]:Block[25569-25640]"
    }, {
      "left" : "optBuf.append(option.getDescription());",
      "right" : "optBuf.append(option.getDescription());",
      "info" : "ExpressionStatement[25587-25626]:ExpressionStatement[25587-25626]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "info" : "ExpressionStatement[25654-25719]:ExpressionStatement[25654-25719]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[25733-25820]:IfStatement[25733-25820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25762-25820]:Block[25762-25820]"
    }, {
      "left" : "sb.append(defaultNewLine);",
      "right" : "sb.append(defaultNewLine);",
      "info" : "ExpressionStatement[25780-25806]:ExpressionStatement[25780-25806]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[25840-25850]:ReturnStatement[25840-25850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26459-27459]:Block[26459-27459]"
    }, {
      "left" : "int pos = findWrapPos(text, width, 0);",
      "right" : "int pos = findWrapPos(text, width, 0);",
      "info" : "VariableDeclarationStatement[26469-26507]:VariableDeclarationStatement[26469-26507]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[26517-26611]:IfStatement[26517-26611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26540-26611]:Block[26540-26611]"
    }, {
      "left" : "sb.append(rtrim(text));",
      "right" : "sb.append(rtrim(text));",
      "info" : "ExpressionStatement[26554-26577]:ExpressionStatement[26554-26577]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[26591-26601]:ReturnStatement[26591-26601]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[26620-26684]:ExpressionStatement[26620-26684]"
    }, {
      "left" : "if (nextLineTabStop >= width)",
      "right" : "if (nextLineTabStop >= width)",
      "info" : "IfStatement[26694-26821]:IfStatement[26694-26821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26732-26821]:Block[26732-26821]"
    }, {
      "left" : "nextLineTabStop = 1;",
      "right" : "nextLineTabStop = 1;",
      "info" : "ExpressionStatement[26791-26811]:ExpressionStatement[26791-26811]"
    }, {
      "left" : "final String padding = createPadding(nextLineTabStop);",
      "right" : "final String padding = createPadding(nextLineTabStop);",
      "info" : "VariableDeclarationStatement[26915-26969]:VariableDeclarationStatement[26915-26969]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[26979-27453]:WhileStatement[26979-27453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27000-27453]:Block[27000-27453]"
    }, {
      "left" : "text = padding + text.substring(pos).trim();",
      "right" : "text = padding + text.substring(pos).trim();",
      "info" : "ExpressionStatement[27014-27058]:ExpressionStatement[27014-27058]"
    }, {
      "left" : "pos = findWrapPos(text, width, 0);",
      "right" : "pos = findWrapPos(text, width, 0);",
      "info" : "ExpressionStatement[27071-27105]:ExpressionStatement[27071-27105]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[27119-27222]:IfStatement[27119-27222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27146-27222]:Block[27146-27222]"
    }, {
      "left" : "sb.append(text);",
      "right" : "sb.append(text);",
      "info" : "ExpressionStatement[27164-27180]:ExpressionStatement[27164-27180]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[27198-27208]:ReturnStatement[27198-27208]"
    }, {
      "left" : "if ((text.length() > width) && (pos == nextLineTabStop - 1))",
      "right" : "if ((text.length() > width) && (pos == nextLineTabStop - 1))",
      "info" : "IfStatement[27248-27365]:IfStatement[27248-27365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27321-27365]:Block[27321-27365]"
    }, {
      "left" : "pos = width;",
      "right" : "pos = width;",
      "info" : "ExpressionStatement[27339-27351]:ExpressionStatement[27339-27351]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[27379-27443]:ExpressionStatement[27379-27443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29602-29729]:Block[29445-29572]"
    }, {
      "left" : "char[] padding = new char[len];",
      "right" : "char[] padding = new char[len];",
      "info" : "VariableDeclarationStatement[29612-29643]:VariableDeclarationStatement[29455-29486]"
    }, {
      "left" : "Arrays.fill(padding, ' ');",
      "right" : "Arrays.fill(padding, ' ');",
      "info" : "ExpressionStatement[29652-29678]:ExpressionStatement[29495-29521]"
    }, {
      "left" : "return new String(padding);",
      "right" : "return new String(padding);",
      "info" : "ReturnStatement[29696-29723]:ReturnStatement[29539-29566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29989-30263]:Block[29832-30106]"
    }, {
      "left" : "if ((s == null) || (s.length() == 0))",
      "right" : "if ((s == null) || (s.length() == 0))",
      "info" : "IfStatement[29999-30078]:IfStatement[29842-29921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30045-30078]:Block[29888-29921]"
    }, {
      "left" : "return s;",
      "right" : "return s;",
      "info" : "ReturnStatement[30059-30068]:ReturnStatement[29902-29911]"
    }, {
      "left" : "int pos = s.length();",
      "right" : "int pos = s.length();",
      "info" : "VariableDeclarationStatement[30088-30109]:VariableDeclarationStatement[29931-29952]"
    }, {
      "left" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "right" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "info" : "WhileStatement[30119-30220]:WhileStatement[29962-30063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30190-30220]:Block[30033-30063]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[30204-30210]:ExpressionStatement[30047-30053]"
    }, {
      "left" : "return s.substring(0, pos);",
      "right" : "return s.substring(0, pos);",
      "info" : "ReturnStatement[30230-30257]:ReturnStatement[30073-30100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31270-31429]:Block[31113-31272]"
    }, {
      "left" : "Option opt1 = (Option) o1;",
      "right" : "Option opt1 = (Option) o1;",
      "info" : "VariableDeclarationStatement[31284-31310]:VariableDeclarationStatement[31127-31153]"
    }, {
      "left" : "Option opt2 = (Option) o2;",
      "right" : "Option opt2 = (Option) o2;",
      "info" : "VariableDeclarationStatement[31323-31349]:VariableDeclarationStatement[31166-31192]"
    }, {
      "left" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "right" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "info" : "ReturnStatement[31363-31419]:ReturnStatement[31206-31262]"
    } ]
  },
  "interFileMappings" : { }
}