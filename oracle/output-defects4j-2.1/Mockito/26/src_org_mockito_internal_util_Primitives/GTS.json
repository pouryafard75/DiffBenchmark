{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Primitives",
      "right" : "Primitives",
      "info" : "TypeDeclaration[214-2593]:TypeDeclaration[214-2594]"
    }, {
      "left" : "public static <T> Class<T> primitiveTypeOf(Class<T> clazz)",
      "right" : "public static <T> Class<T> primitiveTypeOf(Class<T> clazz)",
      "info" : "MethodDeclaration[283-477]:MethodDeclaration[283-477]"
    }, {
      "left" : "public static boolean isPrimitiveWrapper(Class<?> type)",
      "right" : "public static boolean isPrimitiveWrapper(Class<?> type)",
      "info" : "MethodDeclaration[485-604]:MethodDeclaration[485-604]"
    }, {
      "left" : "public static <T> T primitiveWrapperOf(Class<T> type)",
      "right" : "public static <T> T primitiveWrapperOf(Class<T> type)",
      "info" : "MethodDeclaration[612-725]:MethodDeclaration[612-725]"
    }, {
      "left" : "public static <T> T primitiveValueOrNullFor(Class<T> primitiveType)",
      "right" : "public static <T> T primitiveValueOrNullFor(Class<T> primitiveType)",
      "info" : "MethodDeclaration[733-865]:MethodDeclaration[733-865]"
    }, {
      "left" : "private static Map<Class<?>, Class<?>> wrapperTypes = new HashMap<Class<?>, Class<?>>();",
      "right" : "private static Map<Class<?>, Class<?>> wrapperTypes = new HashMap<Class<?>, Class<?>>();",
      "info" : "FieldDeclaration[871-959]:FieldDeclaration[871-959]"
    }, {
      "left" : "private static Map<Class<?>, Class<?>> primitiveTypes = new HashMap<Class<?>, Class<?>>();",
      "right" : "private static Map<Class<?>, Class<?>> primitiveTypes = new HashMap<Class<?>, Class<?>>();",
      "info" : "FieldDeclaration[965-1055]:FieldDeclaration[965-1055]"
    }, {
      "left" : "private static Map<Class<?>, Object> wrapperReturnValues = new HashMap<Class<?>, Object>();",
      "right" : "private static Map<Class<?>, Object> wrapperReturnValues = new HashMap<Class<?>, Object>();",
      "info" : "FieldDeclaration[1061-1152]:FieldDeclaration[1061-1152]"
    }, {
      "left" : "private static Map<Class<?>, Object> primitiveValues = new HashMap<Class<?>, Object>();",
      "right" : "private static Map<Class<?>, Object> primitiveValues = new HashMap<Class<?>, Object>();",
      "info" : "FieldDeclaration[1158-1245]:FieldDeclaration[1158-1245]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[342-477]:Block[342-477]"
    }, {
      "left" : "if(clazz.isPrimitive())",
      "right" : "if(clazz.isPrimitive())",
      "info" : "IfStatement[353-416]:IfStatement[353-416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[377-416]:Block[377-416]"
    }, {
      "left" : "return clazz;",
      "right" : "return clazz;",
      "info" : "ReturnStatement[392-405]:ReturnStatement[392-405]"
    }, {
      "left" : "return (Class<T>) primitiveTypes.get(clazz);",
      "right" : "return (Class<T>) primitiveTypes.get(clazz);",
      "info" : "ReturnStatement[426-470]:ReturnStatement[426-470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[541-604]:Block[541-604]"
    }, {
      "left" : "return wrapperReturnValues.containsKey(type);",
      "right" : "return wrapperReturnValues.containsKey(type);",
      "info" : "ReturnStatement[552-597]:ReturnStatement[552-597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[666-725]:Block[666-725]"
    }, {
      "left" : "return (T) wrapperReturnValues.get(type);",
      "right" : "return (T) wrapperReturnValues.get(type);",
      "info" : "ReturnStatement[677-718]:ReturnStatement[677-718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[801-865]:Block[801-865]"
    }, {
      "left" : "return (T) primitiveValues.get(primitiveType);",
      "right" : "return (T) primitiveValues.get(primitiveType);",
      "info" : "ReturnStatement[812-858]:ReturnStatement[812-858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1260-1714]:Block[1260-1714]"
    }, {
      "left" : "primitiveTypes.put(Boolean.class, Boolean.TYPE);",
      "right" : "primitiveTypes.put(Boolean.class, Boolean.TYPE);",
      "info" : "ExpressionStatement[1271-1319]:ExpressionStatement[1271-1319]"
    }, {
      "left" : "primitiveTypes.put(Character.class, Character.TYPE);",
      "right" : "primitiveTypes.put(Character.class, Character.TYPE);",
      "info" : "ExpressionStatement[1329-1381]:ExpressionStatement[1329-1381]"
    }, {
      "left" : "primitiveTypes.put(Byte.class, Byte.TYPE);",
      "right" : "primitiveTypes.put(Byte.class, Byte.TYPE);",
      "info" : "ExpressionStatement[1391-1433]:ExpressionStatement[1391-1433]"
    }, {
      "left" : "primitiveTypes.put(Short.class, Short.TYPE);",
      "right" : "primitiveTypes.put(Short.class, Short.TYPE);",
      "info" : "ExpressionStatement[1443-1487]:ExpressionStatement[1443-1487]"
    }, {
      "left" : "primitiveTypes.put(Integer.class, Integer.TYPE);",
      "right" : "primitiveTypes.put(Integer.class, Integer.TYPE);",
      "info" : "ExpressionStatement[1497-1545]:ExpressionStatement[1497-1545]"
    }, {
      "left" : "primitiveTypes.put(Long.class, Long.TYPE);",
      "right" : "primitiveTypes.put(Long.class, Long.TYPE);",
      "info" : "ExpressionStatement[1555-1597]:ExpressionStatement[1555-1597]"
    }, {
      "left" : "primitiveTypes.put(Float.class, Float.TYPE);",
      "right" : "primitiveTypes.put(Float.class, Float.TYPE);",
      "info" : "ExpressionStatement[1607-1651]:ExpressionStatement[1607-1651]"
    }, {
      "left" : "primitiveTypes.put(Double.class, Double.TYPE);",
      "right" : "primitiveTypes.put(Double.class, Double.TYPE);",
      "info" : "ExpressionStatement[1661-1707]:ExpressionStatement[1661-1707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1729-2173]:Block[1729-2173]"
    }, {
      "left" : "wrapperReturnValues.put(Boolean.class, false);",
      "right" : "wrapperReturnValues.put(Boolean.class, false);",
      "info" : "ExpressionStatement[1740-1786]:ExpressionStatement[1740-1786]"
    }, {
      "left" : "wrapperReturnValues.put(Character.class, '\\u0000');",
      "right" : "wrapperReturnValues.put(Character.class, '\\u0000');",
      "info" : "ExpressionStatement[1796-1847]:ExpressionStatement[1796-1847]"
    }, {
      "left" : "wrapperReturnValues.put(Byte.class, (byte) 0);",
      "right" : "wrapperReturnValues.put(Byte.class, (byte) 0);",
      "info" : "ExpressionStatement[1857-1903]:ExpressionStatement[1857-1903]"
    }, {
      "left" : "wrapperReturnValues.put(Short.class, (short) 0);",
      "right" : "wrapperReturnValues.put(Short.class, (short) 0);",
      "info" : "ExpressionStatement[1913-1961]:ExpressionStatement[1913-1961]"
    }, {
      "left" : "wrapperReturnValues.put(Integer.class, 0);",
      "right" : "wrapperReturnValues.put(Integer.class, 0);",
      "info" : "ExpressionStatement[1971-2013]:ExpressionStatement[1971-2013]"
    }, {
      "left" : "wrapperReturnValues.put(Long.class, 0L);",
      "right" : "wrapperReturnValues.put(Long.class, 0L);",
      "info" : "ExpressionStatement[2023-2063]:ExpressionStatement[2023-2063]"
    }, {
      "left" : "wrapperReturnValues.put(Float.class, 0F);",
      "right" : "wrapperReturnValues.put(Float.class, 0F);",
      "info" : "ExpressionStatement[2073-2114]:ExpressionStatement[2073-2114]"
    }, {
      "left" : "wrapperReturnValues.put(Double.class, 0D);",
      "right" : "wrapperReturnValues.put(Double.class, 0D);",
      "info" : "ExpressionStatement[2124-2166]:ExpressionStatement[2124-2166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2188-2590]:Block[2188-2591]"
    }, {
      "left" : "primitiveValues.put(boolean.class, false);",
      "right" : "primitiveValues.put(boolean.class, false);",
      "info" : "ExpressionStatement[2199-2241]:ExpressionStatement[2199-2241]"
    }, {
      "left" : "primitiveValues.put(char.class, '\\u0000');",
      "right" : "primitiveValues.put(char.class, '\\u0000');",
      "info" : "ExpressionStatement[2251-2293]:ExpressionStatement[2251-2293]"
    }, {
      "left" : "primitiveValues.put(byte.class, (byte) 0);",
      "right" : "primitiveValues.put(byte.class, (byte) 0);",
      "info" : "ExpressionStatement[2303-2345]:ExpressionStatement[2303-2345]"
    }, {
      "left" : "primitiveValues.put(short.class, (short) 0);",
      "right" : "primitiveValues.put(short.class, (short) 0);",
      "info" : "ExpressionStatement[2355-2399]:ExpressionStatement[2355-2399]"
    }, {
      "left" : "primitiveValues.put(int.class, 0);",
      "right" : "primitiveValues.put(int.class, 0);",
      "info" : "ExpressionStatement[2409-2443]:ExpressionStatement[2409-2443]"
    }, {
      "left" : "primitiveValues.put(long.class, 0L);",
      "right" : "primitiveValues.put(long.class, 0L);",
      "info" : "ExpressionStatement[2453-2489]:ExpressionStatement[2453-2489]"
    }, {
      "left" : "primitiveValues.put(float.class, 0F);",
      "right" : "primitiveValues.put(float.class, 0F);",
      "info" : "ExpressionStatement[2499-2536]:ExpressionStatement[2499-2536]"
    }, {
      "left" : "primitiveValues.put(double.class, 0);",
      "right" : "primitiveValues.put(double.class, 0D);",
      "info" : "ExpressionStatement[2546-2583]:ExpressionStatement[2546-2584]"
    } ]
  },
  "interFileMappings" : { }
}