{
  "matchedElements" : [
 {
    "left" : "class : LockPatternUtils",
    "right" : "class : LockPatternUtils",
    "info" : "TypeDeclaration[1999-72805]:TypeDeclaration[1999-73759]"
  }, {
    "left" : "TAG",
    "right" : "TAG",
    "info" : "FieldDeclaration[2096-2149]:FieldDeclaration[2096-2149]"
  }, {
    "left" : "DEBUG",
    "right" : "DEBUG",
    "info" : "FieldDeclaration[2154-2197]:FieldDeclaration[2154-2197]"
  }, {
    "left" : "FAILED_ATTEMPTS_BEFORE_TIMEOUT",
    "right" : "FAILED_ATTEMPTS_BEFORE_TIMEOUT",
    "info" : "FieldDeclaration[2203-2420]:FieldDeclaration[2203-2420]"
  }, {
    "left" : "FAILED_ATTEMPTS_BEFORE_RESET",
    "right" : "FAILED_ATTEMPTS_BEFORE_RESET",
    "info" : "FieldDeclaration[2426-2655]:FieldDeclaration[2426-2655]"
  }, {
    "left" : "FAILED_ATTEMPT_TIMEOUT_MS",
    "right" : "FAILED_ATTEMPT_TIMEOUT_MS",
    "info" : "FieldDeclaration[2661-2849]:FieldDeclaration[2661-2849]"
  }, {
    "left" : "FAILED_ATTEMPT_COUNTDOWN_INTERVAL_MS",
    "right" : "FAILED_ATTEMPT_COUNTDOWN_INTERVAL_MS",
    "info" : "FieldDeclaration[2855-3015]:FieldDeclaration[2855-3015]"
  }, {
    "left" : "FAILED_ATTEMPTS_BEFORE_WIPE_GRACE",
    "right" : "FAILED_ATTEMPTS_BEFORE_WIPE_GRACE",
    "info" : "FieldDeclaration[3022-3214]:FieldDeclaration[3022-3214]"
  }, {
    "left" : "MIN_LOCK_PATTERN_SIZE",
    "right" : "MIN_LOCK_PATTERN_SIZE",
    "info" : "FieldDeclaration[3220-3340]:FieldDeclaration[3220-3340]"
  }, {
    "left" : "PATTERN_SIZE_DEFAULT",
    "right" : "PATTERN_SIZE_DEFAULT",
    "info" : "FieldDeclaration[3346-3471]:FieldDeclaration[3346-3471]"
  }, {
    "left" : "MIN_PATTERN_REGISTER_FAIL",
    "right" : "MIN_PATTERN_REGISTER_FAIL",
    "info" : "FieldDeclaration[3477-3798]:FieldDeclaration[3477-3798]"
  }, {
    "left" : "KEYGUARD_SHOW_USER_SWITCHER",
    "right" : "KEYGUARD_SHOW_USER_SWITCHER",
    "info" : "FieldDeclaration[3804-3978]:FieldDeclaration[3804-3978]"
  }, {
    "left" : "KEYGUARD_SHOW_SECURITY_CHALLENGE",
    "right" : "KEYGUARD_SHOW_SECURITY_CHALLENGE",
    "info" : "FieldDeclaration[3984-4173]:FieldDeclaration[3984-4173]"
  }, {
    "left" : "KEYGUARD_SHOW_APPWIDGET",
    "right" : "KEYGUARD_SHOW_APPWIDGET",
    "info" : "FieldDeclaration[4179-4361]:FieldDeclaration[4179-4361]"
  }, {
    "left" : "FLAG_BIOMETRIC_WEAK_LIVELINESS",
    "right" : "FLAG_BIOMETRIC_WEAK_LIVELINESS",
    "info" : "FieldDeclaration[4367-4552]:FieldDeclaration[4367-4552]"
  }, {
    "left" : "ID_DEFAULT_STATUS_WIDGET",
    "right" : "ID_DEFAULT_STATUS_WIDGET",
    "info" : "FieldDeclaration[4558-4707]:FieldDeclaration[4558-4707]"
  }, {
    "left" : "LOCKOUT_PERMANENT_KEY",
    "right" : "LOCKOUT_PERMANENT_KEY",
    "info" : "FieldDeclaration[4713-4798]:FieldDeclaration[4713-4798]"
  }, {
    "left" : "LOCKOUT_ATTEMPT_DEADLINE",
    "right" : "LOCKOUT_ATTEMPT_DEADLINE",
    "info" : "FieldDeclaration[4803-4893]:FieldDeclaration[4803-4893]"
  }, {
    "left" : "PATTERN_EVER_CHOSEN_KEY",
    "right" : "PATTERN_EVER_CHOSEN_KEY",
    "info" : "FieldDeclaration[4898-4982]:FieldDeclaration[4898-4982]"
  }, {
    "left" : "PASSWORD_TYPE_KEY",
    "right" : "PASSWORD_TYPE_KEY",
    "info" : "FieldDeclaration[4987-5061]:FieldDeclaration[4987-5061]"
  }, {
    "left" : "PASSWORD_TYPE_ALTERNATE_KEY",
    "right" : "PASSWORD_TYPE_ALTERNATE_KEY",
    "info" : "FieldDeclaration[5066-5160]:FieldDeclaration[5066-5160]"
  }, {
    "left" : "PASSWORD_BIOMETRIC_EXACT_TYPE",
    "right" : "PASSWORD_BIOMETRIC_EXACT_TYPE",
    "info" : "FieldDeclaration[5259-5355]:FieldDeclaration[5259-5355]"
  }, {
    "left" : "LOCK_PASSWORD_SALT_KEY",
    "right" : "LOCK_PASSWORD_SALT_KEY",
    "info" : "FieldDeclaration[5361-5440]:FieldDeclaration[5361-5440]"
  }, {
    "left" : "DISABLE_LOCKSCREEN_KEY",
    "right" : "DISABLE_LOCKSCREEN_KEY",
    "info" : "FieldDeclaration[5445-5519]:FieldDeclaration[5445-5519]"
  }, {
    "left" : "LOCKSCREEN_OPTIONS",
    "right" : "LOCKSCREEN_OPTIONS",
    "info" : "FieldDeclaration[5524-5593]:FieldDeclaration[5524-5593]"
  }, {
    "left" : "LOCKSCREEN_BIOMETRIC_WEAK_FALLBACK",
    "right" : "LOCKSCREEN_BIOMETRIC_WEAK_FALLBACK",
    "info" : "FieldDeclaration[5598-5711]:FieldDeclaration[5598-5711]"
  }, {
    "left" : "LOCKSCREEN_FINGERPRINT_FALLBACK",
    "right" : "LOCKSCREEN_FINGERPRINT_FALLBACK",
    "info" : "FieldDeclaration[5716-5811]:FieldDeclaration[5716-5811]"
  }, {
    "left" : "BIOMETRIC_WEAK_EVER_CHOSEN_KEY",
    "right" : "BIOMETRIC_WEAK_EVER_CHOSEN_KEY",
    "info" : "FieldDeclaration[5816-5925]:FieldDeclaration[5816-5925]"
  }, {
    "left" : "LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS",
    "right" : "LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS",
    "info" : "FieldDeclaration[5930-6053]:FieldDeclaration[5930-6053]"
  }, {
    "left" : "LOCKSCREEN_WIDGETS_ENABLED",
    "right" : "LOCKSCREEN_WIDGETS_ENABLED",
    "info" : "FieldDeclaration[6058-6143]:FieldDeclaration[6058-6143]"
  }, {
    "left" : "PASSWORD_HISTORY_KEY",
    "right" : "PASSWORD_HISTORY_KEY",
    "info" : "FieldDeclaration[6149-6228]:FieldDeclaration[6149-6228]"
  }, {
    "left" : "LOCK_SCREEN_OWNER_INFO",
    "right" : "LOCK_SCREEN_OWNER_INFO",
    "info" : "FieldDeclaration[6234-6326]:FieldDeclaration[6234-6326]"
  }, {
    "left" : "LOCK_SCREEN_OWNER_INFO_ENABLED",
    "right" : "LOCK_SCREEN_OWNER_INFO_ENABLED",
    "info" : "FieldDeclaration[6331-6451]:FieldDeclaration[6331-6451]"
  }, {
    "left" : "ENABLED_TRUST_AGENTS",
    "right" : "ENABLED_TRUST_AGENTS",
    "info" : "FieldDeclaration[6457-6540]:FieldDeclaration[6457-6540]"
  }, {
    "left" : "MAX_ALLOWED_SEQUENCE",
    "right" : "MAX_ALLOWED_SEQUENCE",
    "info" : "FieldDeclaration[6680-6729]:FieldDeclaration[6680-6729]"
  }, {
    "left" : "BIOMETRIC_WEAK_UNKNOWN",
    "right" : "BIOMETRIC_WEAK_UNKNOWN",
    "info" : "FieldDeclaration[6777-6829]:FieldDeclaration[6777-6829]"
  }, {
    "left" : "BIOMETRIC_WEAK_FACE",
    "right" : "BIOMETRIC_WEAK_FACE",
    "info" : "FieldDeclaration[6834-6882]:FieldDeclaration[6834-6882]"
  }, {
    "left" : "BIOMETRIC_WEAK_FINGERPRINT",
    "right" : "BIOMETRIC_WEAK_FINGERPRINT",
    "info" : "FieldDeclaration[6887-6942]:FieldDeclaration[6887-6942]"
  }, {
    "left" : "mContext",
    "right" : "mContext",
    "info" : "FieldDeclaration[6948-6979]:FieldDeclaration[6948-6979]"
  }, {
    "left" : "mContentResolver",
    "right" : "mContentResolver",
    "info" : "FieldDeclaration[6984-7031]:FieldDeclaration[6984-7031]"
  }, {
    "left" : "mDevicePolicyManager",
    "right" : "mDevicePolicyManager",
    "info" : "FieldDeclaration[7036-7085]:FieldDeclaration[7036-7085]"
  }, {
    "left" : "mLockSettingsService",
    "right" : "mLockSettingsService",
    "info" : "FieldDeclaration[7090-7133]:FieldDeclaration[7090-7133]"
  }, {
    "left" : "mProfileManager",
    "right" : "mProfileManager",
    "info" : "FieldDeclaration[7138-7177]:FieldDeclaration[7138-7177]"
  }, {
    "left" : "mMultiUserMode",
    "right" : "mMultiUserMode",
    "info" : "FieldDeclaration[7183-7220]:FieldDeclaration[7183-7220]"
  }, {
    "left" : "sCurrentUserId",
    "right" : "sCurrentUserId",
    "info" : "FieldDeclaration[7317-7383]:FieldDeclaration[7317-7383]"
  }, {
    "left" : "public getDevicePolicyManager() : ",
    "right" : "public getDevicePolicyManager() : ",
    "info" : "MethodDeclaration[7389-7882]:MethodDeclaration[7389-7882]"
  }, {
    "left" : "private getTrustManager() : ",
    "right" : "private getTrustManager() : ",
    "info" : "MethodDeclaration[7888-8225]:MethodDeclaration[7888-8225]"
  }, {
    "left" : "public LockPatternUtils(context )",
    "right" : "public LockPatternUtils(context )",
    "info" : "MethodDeclaration[8231-8904]:MethodDeclaration[8231-8904]"
  }, {
    "left" : "private getLockSettings() : ",
    "right" : "private getLockSettings() : ",
    "info" : "MethodDeclaration[8910-9225]:MethodDeclaration[8910-9225]"
  }, {
    "left" : "public getRequestedMinimumPasswordLength() : int",
    "right" : "public getRequestedMinimumPasswordLength() : int",
    "info" : "MethodDeclaration[9231-9386]:MethodDeclaration[9231-9386]"
  }, {
    "left" : "public getRequestedPasswordQuality() : int",
    "right" : "public getRequestedPasswordQuality() : int",
    "info" : "MethodDeclaration[9392-9695]:MethodDeclaration[9392-9695]"
  }, {
    "left" : "public getRequestedPasswordHistoryLength() : int",
    "right" : "public getRequestedPasswordHistoryLength() : int",
    "info" : "MethodDeclaration[9701-9856]:MethodDeclaration[9701-9856]"
  }, {
    "left" : "public getRequestedPasswordMinimumLetters() : int",
    "right" : "public getRequestedPasswordMinimumLetters() : int",
    "info" : "MethodDeclaration[9862-10035]:MethodDeclaration[9862-10035]"
  }, {
    "left" : "public getRequestedPasswordMinimumUpperCase() : int",
    "right" : "public getRequestedPasswordMinimumUpperCase() : int",
    "info" : "MethodDeclaration[10041-10218]:MethodDeclaration[10041-10218]"
  }, {
    "left" : "public getRequestedPasswordMinimumLowerCase() : int",
    "right" : "public getRequestedPasswordMinimumLowerCase() : int",
    "info" : "MethodDeclaration[10224-10401]:MethodDeclaration[10224-10401]"
  }, {
    "left" : "public getRequestedPasswordMinimumNumeric() : int",
    "right" : "public getRequestedPasswordMinimumNumeric() : int",
    "info" : "MethodDeclaration[10407-10580]:MethodDeclaration[10407-10580]"
  }, {
    "left" : "public getRequestedPasswordMinimumSymbols() : int",
    "right" : "public getRequestedPasswordMinimumSymbols() : int",
    "info" : "MethodDeclaration[10586-10759]:MethodDeclaration[10586-10759]"
  }, {
    "left" : "public getRequestedPasswordMinimumNonLetter() : int",
    "right" : "public getRequestedPasswordMinimumNonLetter() : int",
    "info" : "MethodDeclaration[10765-10942]:MethodDeclaration[10765-10942]"
  }, {
    "left" : "public reportFailedPasswordAttempt() : void",
    "right" : "public reportFailedPasswordAttempt() : void",
    "info" : "MethodDeclaration[10948-11263]:MethodDeclaration[10948-11263]"
  }, {
    "left" : "public reportSuccessfulPasswordAttempt() : void",
    "right" : "public reportSuccessfulPasswordAttempt() : void",
    "info" : "MethodDeclaration[11269-11535]:MethodDeclaration[11269-11535]"
  }, {
    "left" : "public setCurrentUser(userId int) : void",
    "right" : "public setCurrentUser(userId int) : void",
    "info" : "MethodDeclaration[11541-11620]:MethodDeclaration[11541-11620]"
  }, {
    "left" : "public getCurrentUser() : int",
    "right" : "public getCurrentUser() : int",
    "info" : "MethodDeclaration[11626-12024]:MethodDeclaration[11626-12024]"
  }, {
    "left" : "public removeUser(userId int) : void",
    "right" : "public removeUser(userId int) : void",
    "info" : "MethodDeclaration[12030-12261]:MethodDeclaration[12030-12261]"
  }, {
    "left" : "private getCurrentOrCallingUserId() : int",
    "right" : "private getCurrentOrCallingUserId() : int",
    "info" : "MethodDeclaration[12267-12604]:MethodDeclaration[12267-12604]"
  }, {
    "left" : "public checkPattern(pattern ) : boolean",
    "right" : "public checkPattern(pattern ) : boolean",
    "info" : "MethodDeclaration[12610-13140]:MethodDeclaration[12610-13140]"
  }, {
    "left" : "public checkPassword(password ) : boolean",
    "right" : "public checkPassword(password ) : boolean",
    "info" : "MethodDeclaration[13146-13649]:MethodDeclaration[13146-13649]"
  }, {
    "left" : "public checkVoldPassword() : boolean",
    "right" : "public checkVoldPassword() : boolean",
    "info" : "MethodDeclaration[13655-14096]:MethodDeclaration[13655-14096]"
  }, {
    "left" : "public checkPasswordHistory(password ) : boolean",
    "right" : "public checkPasswordHistory(password ) : boolean",
    "info" : "MethodDeclaration[14102-15277]:MethodDeclaration[14102-15277]"
  }, {
    "left" : "public savedPatternExists() : boolean",
    "right" : "public savedPatternExists() : boolean",
    "info" : "MethodDeclaration[15283-15512]:MethodDeclaration[15283-15512]"
  }, {
    "left" : "public savedPatternExists(userId int) : boolean",
    "right" : "public savedPatternExists(userId int) : boolean",
    "info" : "MethodDeclaration[15518-15840]:MethodDeclaration[15518-15840]"
  }, {
    "left" : "public savedPasswordExists() : boolean",
    "right" : "public savedPasswordExists() : boolean",
    "info" : "MethodDeclaration[15846-16077]:MethodDeclaration[15846-16077]"
  }, {
    "left" : "public savedPasswordExists(userId int) : boolean",
    "right" : "public savedPasswordExists(userId int) : boolean",
    "info" : "MethodDeclaration[16084-16408]:MethodDeclaration[16084-16408]"
  }, {
    "left" : "public isPatternEverChosen() : boolean",
    "right" : "public isPatternEverChosen() : boolean",
    "info" : "MethodDeclaration[16414-16720]:MethodDeclaration[16414-16720]"
  }, {
    "left" : "public isBiometricWeakEverChosen() : boolean",
    "right" : "public isBiometricWeakEverChosen() : boolean",
    "info" : "MethodDeclaration[16726-17056]:MethodDeclaration[16726-17056]"
  }, {
    "left" : "public getActivePasswordQuality() : int",
    "right" : "public getActivePasswordQuality() : int",
    "info" : "MethodDeclaration[17062-19414]:MethodDeclaration[17062-19414]"
  }, {
    "left" : "public clearLock(isFallback boolean) : void",
    "right" : "public clearLock(isFallback boolean) : void",
    "info" : "MethodDeclaration[19420-19529]:MethodDeclaration[19420-19529]"
  }, {
    "left" : "public clearLock(isFallback boolean, userHandle int) : void",
    "right" : "public clearLock(isFallback boolean, userHandle int) : void",
    "info" : "MethodDeclaration[19535-20216]:MethodDeclaration[19535-20216]"
  }, {
    "left" : "public setLockScreenDisabled(disable boolean) : void",
    "right" : "public setLockScreenDisabled(disable boolean) : void",
    "info" : "MethodDeclaration[20222-20568]:MethodDeclaration[20222-20568]"
  }, {
    "left" : "public isLockScreenDisabled() : boolean",
    "right" : "public isLockScreenDisabled() : boolean",
    "info" : "MethodDeclaration[20574-21414]:MethodDeclaration[20574-21414]"
  }, {
    "left" : "public deleteTempGallery() : void",
    "right" : "public deleteTempGallery() : void",
    "info" : "MethodDeclaration[21420-21723]:MethodDeclaration[21420-21723]"
  }, {
    "left" : "package deleteGallery(userId int) : void",
    "right" : "package deleteGallery(userId int) : void",
    "info" : "MethodDeclaration[21729-22139]:MethodDeclaration[21729-22139]"
  }, {
    "left" : "public saveLockPattern(pattern ) : void",
    "right" : "public saveLockPattern(pattern ) : void",
    "info" : "MethodDeclaration[22145-22360]:MethodDeclaration[22145-22360]"
  }, {
    "left" : "public saveLockPattern(pattern , isFallback boolean, isFingerprintFallback boolean) : void",
    "right" : "public saveLockPattern(pattern , isFallback boolean, isFingerprintFallback boolean) : void",
    "info" : "MethodDeclaration[22366-22710]:MethodDeclaration[22366-22710]"
  }, {
    "left" : "public saveLockPattern(pattern , isFallback boolean, isFingerprintFallback boolean, userId int) : void",
    "right" : "public saveLockPattern(pattern , isFallback boolean, isFingerprintFallback boolean, userId int) : void",
    "info" : "MethodDeclaration[22716-25312]:MethodDeclaration[22716-25312]"
  }, {
    "left" : "private updateCryptoUserInfo() : void",
    "right" : "private updateCryptoUserInfo() : void",
    "info" : "MethodDeclaration[25318-26099]:MethodDeclaration[25318-26099]"
  }, {
    "left" : "public setOwnerInfo(info , userId int) : void",
    "right" : "public setOwnerInfo(info , userId int) : void",
    "info" : "MethodDeclaration[26105-26251]:MethodDeclaration[26105-26251]"
  }, {
    "left" : "public setOwnerInfoEnabled(enabled boolean) : void",
    "right" : "public setOwnerInfoEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[26257-26406]:MethodDeclaration[26257-26406]"
  }, {
    "left" : "public getOwnerInfo(userId int) : ",
    "right" : "public getOwnerInfo(userId int) : ",
    "info" : "MethodDeclaration[26412-26508]:MethodDeclaration[26412-26508]"
  }, {
    "left" : "public isOwnerInfoEnabled() : boolean",
    "right" : "public isOwnerInfoEnabled() : boolean",
    "info" : "MethodDeclaration[26514-26623]:MethodDeclaration[26514-26623]"
  }, {
    "left" : "public computePasswordQuality(password ) : int",
    "right" : "public computePasswordQuality(password ) : int",
    "info" : "MethodDeclaration[26629-27640]:MethodDeclaration[26629-27640]"
  }, {
    "left" : "private categoryChar(c char) : int",
    "right" : "private categoryChar(c char) : int",
    "info" : "MethodDeclaration[27646-27843]:MethodDeclaration[27646-27843]"
  }, {
    "left" : "private maxDiffCategory(category int) : int",
    "right" : "private maxDiffCategory(category int) : int",
    "info" : "MethodDeclaration[27849-28020]:MethodDeclaration[27849-28020]"
  }, {
    "left" : "public maxLengthSequence(string ) : int",
    "right" : "public maxLengthSequence(string ) : int",
    "info" : "MethodDeclaration[28699-30230]:MethodDeclaration[28699-30230]"
  }, {
    "left" : "private updateEncryptionPassword(type int, password ) : void",
    "right" : "private updateEncryptionPassword(type int, password ) : void",
    "info" : "MethodDeclaration[30236-31187]:MethodDeclaration[30236-31187]"
  }, {
    "left" : "protected doInBackground() : ",
    "right" : "protected doInBackground() : ",
    "info" : "MethodDeclaration[30729-31160]:MethodDeclaration[30729-31160]"
  }, {
    "left" : "public saveLockPassword(password , quality int) : void",
    "right" : "public saveLockPassword(password , quality int) : void",
    "info" : "MethodDeclaration[31193-31642]:MethodDeclaration[31193-31642]"
  }, {
    "left" : "public saveLockPassword(password , quality int, isFallback boolean) : void",
    "right" : "public saveLockPassword(password , quality int, isFallback boolean) : void",
    "info" : "MethodDeclaration[31648-32199]:MethodDeclaration[31648-32199]"
  }, {
    "left" : "public saveLockPassword(password , quality int, isFallback boolean, isFingerprintFallback boolean) : void",
    "right" : "public saveLockPassword(password , quality int, isFallback boolean, isFingerprintFallback boolean) : void",
    "info" : "MethodDeclaration[32205-32965]:MethodDeclaration[32205-32965]"
  }, {
    "left" : "public saveLockPassword(password , quality int, isFallback boolean, isFingerprintPassword boolean, userHandle int) : void",
    "right" : "public saveLockPassword(password , quality int, isFallback boolean, isFingerprintPassword boolean, userHandle int) : void",
    "info" : "MethodDeclaration[32971-39199]:MethodDeclaration[32971-39199]"
  }, {
    "left" : "public isDeviceEncrypted() : boolean",
    "right" : "public isDeviceEncrypted() : boolean",
    "info" : "MethodDeclaration[39205-39822]:MethodDeclaration[39205-39822]"
  }, {
    "left" : "public isDeviceEncryptionEnabled() : boolean",
    "right" : "public isDeviceEncryptionEnabled() : boolean",
    "info" : "MethodDeclaration[39828-40308]:MethodDeclaration[39828-40308]"
  }, {
    "left" : "public clearEncryptionPassword() : void",
    "right" : "public clearEncryptionPassword() : void",
    "info" : "MethodDeclaration[40314-40489]:MethodDeclaration[40314-40489]"
  }, {
    "left" : "public getKeyguardStoredPasswordQuality() : int",
    "right" : "public getKeyguardStoredPasswordQuality() : int",
    "info" : "MethodDeclaration[40495-40816]:MethodDeclaration[40495-40816]"
  }, {
    "left" : "public getKeyguardStoredPasswordQuality(userHandle int) : int",
    "right" : "public getKeyguardStoredPasswordQuality(userHandle int) : int",
    "info" : "MethodDeclaration[40822-41644]:MethodDeclaration[40822-41644]"
  }, {
    "left" : "public usingBiometricWeak() : boolean",
    "right" : "public usingBiometricWeak() : boolean",
    "info" : "MethodDeclaration[41650-41843]:MethodDeclaration[41650-41843]"
  }, {
    "left" : "public usingBiometricWeak(userId int) : boolean",
    "right" : "public usingBiometricWeak(userId int) : boolean",
    "info" : "MethodDeclaration[41849-42198]:MethodDeclaration[41849-42198]"
  }, {
    "left" : "public usingFingerprint() : boolean",
    "right" : "public usingFingerprint() : boolean",
    "info" : "MethodDeclaration[42204-42403]:MethodDeclaration[42204-42403]"
  }, {
    "left" : "public usingFingerprint(userId int) : boolean",
    "right" : "public usingFingerprint(userId int) : boolean",
    "info" : "MethodDeclaration[42409-42919]:MethodDeclaration[42409-42919]"
  }, {
    "left" : "public setUseFingerprint() : void",
    "right" : "public setUseFingerprint() : void",
    "info" : "MethodDeclaration[42925-43038]:MethodDeclaration[42925-43038]"
  }, {
    "left" : "public setUseFingerprint(userId int) : void",
    "right" : "public setUseFingerprint(userId int) : void",
    "info" : "MethodDeclaration[43044-43497]:MethodDeclaration[43044-43497]"
  }, {
    "left" : "public isFingerprintInstalled(context ) : boolean",
    "right" : "public isFingerprintInstalled(context ) : boolean",
    "info" : "MethodDeclaration[43503-43739]:MethodDeclaration[43503-43739]"
  }, {
    "left" : "public stringToPattern(string ) : ",
    "right" : "public stringToPattern(string , size byte) : ",
    "info" : "MethodDeclaration[43745-44364]:MethodDeclaration[44033-44758]"
  }, {
    "left" : "public patternToString(pattern ) : ",
    "right" : "public patternToString(pattern ) : ",
    "info" : "MethodDeclaration[44370-44628]:MethodDeclaration[44764-45022]"
  }, {
    "left" : "public patternToString(pattern , patternGridSize int) : ",
    "right" : "public patternToString(pattern , patternGridSize int) : ",
    "info" : "MethodDeclaration[44634-45289]:MethodDeclaration[45028-45683]"
  }, {
    "left" : "public patternToHash(pattern ) : ",
    "right" : "public patternToHash(pattern ) : ",
    "info" : "MethodDeclaration[45623-46285]:MethodDeclaration[46577-47239]"
  }, {
    "left" : "private getSalt(userId int) : ",
    "right" : "private getSalt(userId int) : ",
    "info" : "MethodDeclaration[46291-46959]:MethodDeclaration[47245-47913]"
  }, {
    "left" : "public passwordToHash(password , userId int) : ",
    "right" : "public passwordToHash(password , userId int) : ",
    "info" : "MethodDeclaration[47346-48037]:MethodDeclaration[48300-48991]"
  }, {
    "left" : "private toHex(ary ) : ",
    "right" : "private toHex(ary ) : ",
    "info" : "MethodDeclaration[48043-48336]:MethodDeclaration[48997-49290]"
  }, {
    "left" : "public isLockPasswordEnabled() : boolean",
    "right" : "public isLockPasswordEnabled() : boolean",
    "info" : "MethodDeclaration[48342-49565]:MethodDeclaration[49296-50519]"
  }, {
    "left" : "public isLockPatternEnabled() : boolean",
    "right" : "public isLockPatternEnabled() : boolean",
    "info" : "MethodDeclaration[49571-49797]:MethodDeclaration[50525-50751]"
  }, {
    "left" : "public isLockPatternEnabled(userId int) : boolean",
    "right" : "public isLockPatternEnabled(userId int) : boolean",
    "info" : "MethodDeclaration[49803-50563]:MethodDeclaration[50757-51517]"
  }, {
    "left" : "public isBiometricWeakInstalled() : boolean",
    "right" : "public isBiometricWeakInstalled() : boolean",
    "info" : "MethodDeclaration[50569-51689]:MethodDeclaration[51523-52643]"
  }, {
    "left" : "public setBiometricWeakLivelinessEnabled(enabled boolean) : void",
    "right" : "public setBiometricWeakLivelinessEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[51695-52199]:MethodDeclaration[52649-53153]"
  }, {
    "left" : "public isBiometricWeakLivelinessEnabled() : boolean",
    "right" : "public isBiometricWeakLivelinessEnabled() : boolean",
    "info" : "MethodDeclaration[52205-52496]:MethodDeclaration[53159-53450]"
  }, {
    "left" : "public setLockPatternEnabled(enabled boolean) : void",
    "right" : "public setLockPatternEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[52502-52693]:MethodDeclaration[53456-53647]"
  }, {
    "left" : "public setLockPatternEnabled(enabled boolean, userHandle int) : void",
    "right" : "public setLockPatternEnabled(enabled boolean, userHandle int) : void",
    "info" : "MethodDeclaration[52699-52916]:MethodDeclaration[53653-53870]"
  }, {
    "left" : "public isVisiblePatternEnabled() : boolean",
    "right" : "public isVisiblePatternEnabled() : boolean",
    "info" : "MethodDeclaration[52922-53113]:MethodDeclaration[53876-54067]"
  }, {
    "left" : "public setVisiblePatternEnabled(enabled boolean) : void",
    "right" : "public setVisiblePatternEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[53119-53988]:MethodDeclaration[54073-54942]"
  }, {
    "left" : "public isTactileFeedbackEnabled() : boolean",
    "right" : "public isTactileFeedbackEnabled() : boolean",
    "info" : "MethodDeclaration[53994-54281]:MethodDeclaration[54948-55235]"
  }, {
    "left" : "public getLockPatternSize() : byte",
    "right" : "public getLockPatternSize() : byte",
    "info" : "MethodDeclaration[54287-54588]:MethodDeclaration[55241-55542]"
  }, {
    "left" : "public setLockPatternSize(size long) : void",
    "right" : "public setLockPatternSize(size long) : void",
    "info" : "MethodDeclaration[54594-54756]:MethodDeclaration[55548-55710]"
  }, {
    "left" : "public setVisibleDotsEnabled(enabled boolean) : void",
    "right" : "public setVisibleDotsEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[54762-54884]:MethodDeclaration[55716-55838]"
  }, {
    "left" : "public isVisibleDotsEnabled() : boolean",
    "right" : "public isVisibleDotsEnabled() : boolean",
    "info" : "MethodDeclaration[54890-55003]:MethodDeclaration[55844-55957]"
  }, {
    "left" : "public setShowErrorPath(enabled boolean) : void",
    "right" : "public setShowErrorPath(enabled boolean) : void",
    "info" : "MethodDeclaration[55009-55129]:MethodDeclaration[55963-56083]"
  }, {
    "left" : "public isShowErrorPath() : boolean",
    "right" : "public isShowErrorPath() : boolean",
    "info" : "MethodDeclaration[55135-55246]:MethodDeclaration[56089-56200]"
  }, {
    "left" : "public setLockoutAttemptDeadline() : long",
    "right" : "public setLockoutAttemptDeadline() : long",
    "info" : "MethodDeclaration[55252-55653]:MethodDeclaration[56206-56607]"
  }, {
    "left" : "public getLockoutAttemptDeadline() : long",
    "right" : "public getLockoutAttemptDeadline() : long",
    "info" : "MethodDeclaration[55659-56172]:MethodDeclaration[56613-57126]"
  }, {
    "left" : "public isPermanentlyLocked() : boolean",
    "right" : "public isPermanentlyLocked() : boolean",
    "info" : "MethodDeclaration[56178-56477]:MethodDeclaration[57132-57431]"
  }, {
    "left" : "public setPermanentlyLocked(locked boolean) : void",
    "right" : "public setPermanentlyLocked(locked boolean) : void",
    "info" : "MethodDeclaration[56483-56926]:MethodDeclaration[57437-57880]"
  }, {
    "left" : "public isEmergencyCallCapable() : boolean",
    "right" : "public isEmergencyCallCapable() : boolean",
    "info" : "MethodDeclaration[56932-57097]:MethodDeclaration[57886-58051]"
  }, {
    "left" : "public isPukUnlockScreenEnable() : boolean",
    "right" : "public isPukUnlockScreenEnable() : boolean",
    "info" : "MethodDeclaration[57103-57280]:MethodDeclaration[58057-58234]"
  }, {
    "left" : "public isEmergencyCallEnabledWhileSimLocked() : boolean",
    "right" : "public isEmergencyCallEnabledWhileSimLocked() : boolean",
    "info" : "MethodDeclaration[57286-57490]:MethodDeclaration[58240-58444]"
  }, {
    "left" : "public getNextAlarm() : ",
    "right" : "public getNextAlarm() : ",
    "info" : "MethodDeclaration[57496-57872]:MethodDeclaration[58450-58826]"
  }, {
    "left" : "private getBoolean(secureSettingKey , defaultValue boolean, userId int) : boolean",
    "right" : "private getBoolean(secureSettingKey , defaultValue boolean, userId int) : boolean",
    "info" : "MethodDeclaration[57878-58156]:MethodDeclaration[58832-59110]"
  }, {
    "left" : "private getBoolean(secureSettingKey , defaultValue boolean) : boolean",
    "right" : "private getBoolean(secureSettingKey , defaultValue boolean) : boolean",
    "info" : "MethodDeclaration[58162-58331]:MethodDeclaration[59116-59285]"
  }, {
    "left" : "private setBoolean(secureSettingKey , enabled boolean, userId int) : void",
    "right" : "private setBoolean(secureSettingKey , enabled boolean, userId int) : void",
    "info" : "MethodDeclaration[58337-58668]:MethodDeclaration[59291-59622]"
  }, {
    "left" : "private setBoolean(secureSettingKey , enabled boolean) : void",
    "right" : "private setBoolean(secureSettingKey , enabled boolean) : void",
    "info" : "MethodDeclaration[58674-58823]:MethodDeclaration[59628-59777]"
  }, {
    "left" : "public getAppWidgets() : ",
    "right" : "public getAppWidgets() : ",
    "info" : "MethodDeclaration[58829-58920]:MethodDeclaration[59783-59874]"
  }, {
    "left" : "private getAppWidgets(userId int) : ",
    "right" : "private getAppWidgets(userId int) : ",
    "info" : "MethodDeclaration[58926-59851]:MethodDeclaration[59880-60805]"
  }, {
    "left" : "private combineStrings(list , separator ) : ",
    "right" : "private combineStrings(list , separator ) : ",
    "info" : "MethodDeclaration[59857-60821]:MethodDeclaration[60811-61775]"
  }, {
    "left" : "public writeFallbackAppWidgetId(appWidgetId int) : void",
    "right" : "public writeFallbackAppWidgetId(appWidgetId int) : void",
    "info" : "MethodDeclaration[60933-61188]:MethodDeclaration[61887-62142]"
  }, {
    "left" : "public getFallbackAppWidgetId() : int",
    "right" : "public getFallbackAppWidgetId() : int",
    "info" : "MethodDeclaration[61300-61587]:MethodDeclaration[62254-62541]"
  }, {
    "left" : "private writeAppWidgets(appWidgetIds ...) : void",
    "right" : "private writeAppWidgets(appWidgetIds ...) : void",
    "info" : "MethodDeclaration[61593-61884]:MethodDeclaration[62547-62838]"
  }, {
    "left" : "public addAppWidget(widgetId int, index int) : boolean",
    "right" : "public addAppWidget(widgetId int, index int) : boolean",
    "info" : "MethodDeclaration[61938-62605]:MethodDeclaration[62892-63559]"
  }, {
    "left" : "public removeAppWidget(widgetId int) : boolean",
    "right" : "public removeAppWidget(widgetId int) : boolean",
    "info" : "MethodDeclaration[62611-63258]:MethodDeclaration[63565-64212]"
  }, {
    "left" : "private getLong(secureSettingKey , defaultValue long, userHandle int) : long",
    "right" : "private getLong(secureSettingKey , defaultValue long, userHandle int) : long",
    "info" : "MethodDeclaration[63264-63538]:MethodDeclaration[64218-64492]"
  }, {
    "left" : "private getLong(secureSettingKey , defaultValue long) : long",
    "right" : "private getLong(secureSettingKey , defaultValue long) : long",
    "info" : "MethodDeclaration[63544-63839]:MethodDeclaration[64498-64793]"
  }, {
    "left" : "private setLong(secureSettingKey , value long) : void",
    "right" : "private setLong(secureSettingKey , value long) : void",
    "info" : "MethodDeclaration[63845-63981]:MethodDeclaration[64799-64935]"
  }, {
    "left" : "private setLong(secureSettingKey , value long, userHandle int) : void",
    "right" : "private setLong(secureSettingKey , value long, userHandle int) : void",
    "info" : "MethodDeclaration[63987-64310]:MethodDeclaration[64941-65264]"
  }, {
    "left" : "private getString(secureSettingKey ) : ",
    "right" : "private getString(secureSettingKey ) : ",
    "info" : "MethodDeclaration[64316-64446]:MethodDeclaration[65270-65400]"
  }, {
    "left" : "private getString(secureSettingKey , userHandle int) : ",
    "right" : "private getString(secureSettingKey , userHandle int) : ",
    "info" : "MethodDeclaration[64452-64697]:MethodDeclaration[65406-65651]"
  }, {
    "left" : "private setString(secureSettingKey , value , userHandle int) : void",
    "right" : "private setString(secureSettingKey , value , userHandle int) : void",
    "info" : "MethodDeclaration[64703-65034]:MethodDeclaration[65657-65988]"
  }, {
    "left" : "public isSecure() : boolean",
    "right" : "public isSecure() : boolean",
    "info" : "MethodDeclaration[65040-65127]:MethodDeclaration[65994-66081]"
  }, {
    "left" : "public isSecure(userId int) : boolean",
    "right" : "public isSecure(userId int) : boolean",
    "info" : "MethodDeclaration[65133-65983]:MethodDeclaration[66087-66937]"
  }, {
    "left" : "public getActiveProfileLockMode() : int",
    "right" : "public getActiveProfileLockMode() : int",
    "info" : "MethodDeclaration[65989-66449]:MethodDeclaration[66943-67403]"
  }, {
    "left" : "public updateEmergencyCallButtonState(button , shown boolean, showIcon boolean) : void",
    "right" : "public updateEmergencyCallButtonState(button , shown boolean, showIcon boolean) : void",
    "info" : "MethodDeclaration[66455-67882]:MethodDeclaration[67409-68836]"
  }, {
    "left" : "public resumeCall() : void",
    "right" : "public resumeCall() : void",
    "info" : "MethodDeclaration[67888-68105]:MethodDeclaration[68842-69059]"
  }, {
    "left" : "public isInCall() : boolean",
    "right" : "public isInCall() : boolean",
    "info" : "MethodDeclaration[68111-68303]:MethodDeclaration[69065-69257]"
  }, {
    "left" : "private getTelecommManager() : ",
    "right" : "private getTelecommManager() : ",
    "info" : "MethodDeclaration[68309-68444]:MethodDeclaration[69263-69398]"
  }, {
    "left" : "private finishBiometricWeak(userId int) : void",
    "right" : "private finishBiometricWeak(userId int) : void",
    "info" : "MethodDeclaration[68450-68903]:MethodDeclaration[69404-69857]"
  }, {
    "left" : "public setPowerButtonInstantlyLocks(enabled boolean) : void",
    "right" : "public setPowerButtonInstantlyLocks(enabled boolean) : void",
    "info" : "MethodDeclaration[68909-69044]:MethodDeclaration[69863-69998]"
  }, {
    "left" : "public getPowerButtonInstantlyLocks() : boolean",
    "right" : "public getPowerButtonInstantlyLocks() : boolean",
    "info" : "MethodDeclaration[69050-69177]:MethodDeclaration[70004-70131]"
  }, {
    "left" : "public isSafeModeEnabled() : boolean",
    "right" : "public isSafeModeEnabled() : boolean",
    "info" : "MethodDeclaration[69183-69479]:MethodDeclaration[70137-70433]"
  }, {
    "left" : "public hasWidgetsEnabledInKeyguard(userid int) : boolean",
    "right" : "public hasWidgetsEnabledInKeyguard(userid int) : boolean",
    "info" : "MethodDeclaration[69485-69909]:MethodDeclaration[70439-70863]"
  }, {
    "left" : "public getWidgetsEnabled() : boolean",
    "right" : "public getWidgetsEnabled() : boolean",
    "info" : "MethodDeclaration[69915-70020]:MethodDeclaration[70869-70974]"
  }, {
    "left" : "public getWidgetsEnabled(userId int) : boolean",
    "right" : "public getWidgetsEnabled(userId int) : boolean",
    "info" : "MethodDeclaration[70026-70148]:MethodDeclaration[70980-71102]"
  }, {
    "left" : "public setWidgetsEnabled(enabled boolean) : void",
    "right" : "public setWidgetsEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[70154-70273]:MethodDeclaration[71108-71227]"
  }, {
    "left" : "public setWidgetsEnabled(enabled boolean, userId int) : void",
    "right" : "public setWidgetsEnabled(enabled boolean, userId int) : void",
    "info" : "MethodDeclaration[70279-70410]:MethodDeclaration[71233-71364]"
  }, {
    "left" : "public setEnabledTrustAgents(activeTrustAgents ...) : void",
    "right" : "public setEnabledTrustAgents(activeTrustAgents ...) : void",
    "info" : "MethodDeclaration[70416-70581]:MethodDeclaration[71370-71535]"
  }, {
    "left" : "public getEnabledTrustAgents() : ",
    "right" : "public getEnabledTrustAgents() : ",
    "info" : "MethodDeclaration[70587-70712]:MethodDeclaration[71541-71666]"
  }, {
    "left" : "public setEnabledTrustAgents(activeTrustAgents , userId int) : void",
    "right" : "public setEnabledTrustAgents(activeTrustAgents , userId int) : void",
    "info" : "MethodDeclaration[70718-71210]:MethodDeclaration[71672-72164]"
  }, {
    "left" : "public getEnabledTrustAgents(userId int) : ",
    "right" : "public getEnabledTrustAgents(userId int) : ",
    "info" : "MethodDeclaration[71216-71787]:MethodDeclaration[72170-72741]"
  }, {
    "left" : "public requireCredentialEntry(userId int) : void",
    "right" : "public requireCredentialEntry(userId int) : void",
    "info" : "MethodDeclaration[71793-72004]:MethodDeclaration[72747-72958]"
  }, {
    "left" : "private onAfterChangingPassword(userHandle int) : void",
    "right" : "private onAfterChangingPassword(userHandle int) : void",
    "info" : "MethodDeclaration[72010-72141]:MethodDeclaration[72964-73095]"
  }, {
    "left" : "public isCredentialRequiredToDecrypt(defaultValue boolean) : boolean",
    "right" : "public isCredentialRequiredToDecrypt(defaultValue boolean) : boolean",
    "info" : "MethodDeclaration[72147-72412]:MethodDeclaration[73101-73366]"
  }, {
    "left" : "public setCredentialRequiredToDecrypt(required boolean) : void",
    "right" : "public setCredentialRequiredToDecrypt(required boolean) : void",
    "info" : "MethodDeclaration[72418-72803]:MethodDeclaration[73372-73757]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7389-7395]:Modifier[7389-7395]"
  }, {
    "left" : "DevicePolicyManager",
    "right" : "DevicePolicyManager",
    "info" : "SimpleType[7396-7415]:SimpleType[7396-7415]"
  }, {
    "left" : "getDevicePolicyManager",
    "right" : "getDevicePolicyManager",
    "info" : "SimpleName[7416-7438]:SimpleName[7416-7438]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7441-7882]:Block[7441-7882]"
  }, {
    "left" : "if (mDevicePolicyManager == null)",
    "right" : "if (mDevicePolicyManager == null)",
    "info" : "IfStatement[7451-7839]:IfStatement[7451-7839]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7485-7839]:Block[7485-7839]"
  }, {
    "left" : "mDevicePolicyManager =\n                (DevicePolicyManager)mContext.getSystemService(Context.DEVICE_POLICY_SERVICE);",
    "right" : "mDevicePolicyManager =\n                (DevicePolicyManager)mContext.getSystemService(Context.DEVICE_POLICY_SERVICE);",
    "info" : "ExpressionStatement[7499-7616]:ExpressionStatement[7499-7616]"
  }, {
    "left" : "if (mDevicePolicyManager == null)",
    "right" : "if (mDevicePolicyManager == null)",
    "info" : "IfStatement[7629-7829]:IfStatement[7629-7829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7663-7829]:Block[7663-7829]"
  }, {
    "left" : "Log.e(TAG, \"Can't get DevicePolicyManagerService: is it running?\",\n                        new IllegalStateException(\"Stack trace:\"));",
    "right" : "Log.e(TAG, \"Can't get DevicePolicyManagerService: is it running?\",\n                        new IllegalStateException(\"Stack trace:\"));",
    "info" : "ExpressionStatement[7681-7815]:ExpressionStatement[7681-7815]"
  }, {
    "left" : "return mDevicePolicyManager;",
    "right" : "return mDevicePolicyManager;",
    "info" : "ReturnStatement[7848-7876]:ReturnStatement[7848-7876]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[7888-7895]:Modifier[7888-7895]"
  }, {
    "left" : "TrustManager",
    "right" : "TrustManager",
    "info" : "SimpleType[7896-7908]:SimpleType[7896-7908]"
  }, {
    "left" : "getTrustManager",
    "right" : "getTrustManager",
    "info" : "SimpleName[7909-7924]:SimpleName[7909-7924]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7927-8225]:Block[7927-8225]"
  }, {
    "left" : "TrustManager trust = (TrustManager) mContext.getSystemService(Context.TRUST_SERVICE);",
    "right" : "TrustManager trust = (TrustManager) mContext.getSystemService(Context.TRUST_SERVICE);",
    "info" : "VariableDeclarationStatement[7937-8022]:VariableDeclarationStatement[7937-8022]"
  }, {
    "left" : "if (trust == null)",
    "right" : "if (trust == null)",
    "info" : "IfStatement[8031-8197]:IfStatement[8031-8197]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8050-8197]:Block[8050-8197]"
  }, {
    "left" : "Log.e(TAG, \"Can't get TrustManagerService: is it running?\",\n                    new IllegalStateException(\"Stack trace:\"));",
    "right" : "Log.e(TAG, \"Can't get TrustManagerService: is it running?\",\n                    new IllegalStateException(\"Stack trace:\"));",
    "info" : "ExpressionStatement[8064-8187]:ExpressionStatement[8064-8187]"
  }, {
    "left" : "return trust;",
    "right" : "return trust;",
    "info" : "ReturnStatement[8206-8219]:ReturnStatement[8206-8219]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8231-8237]:Modifier[8231-8237]"
  }, {
    "left" : "LockPatternUtils",
    "right" : "LockPatternUtils",
    "info" : "SimpleName[8238-8254]:SimpleName[8238-8254]"
  }, {
    "left" : "Context context",
    "right" : "Context context",
    "info" : "SingleVariableDeclaration[8255-8270]:SingleVariableDeclaration[8255-8270]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8272-8904]:Block[8272-8904]"
  }, {
    "left" : "mContext = context;",
    "right" : "mContext = context;",
    "info" : "ExpressionStatement[8282-8301]:ExpressionStatement[8282-8301]"
  }, {
    "left" : "mContentResolver = context.getContentResolver();",
    "right" : "mContentResolver = context.getContentResolver();",
    "info" : "ExpressionStatement[8310-8358]:ExpressionStatement[8310-8358]"
  }, {
    "left" : "mProfileManager = (ProfileManager) context.getSystemService(Context.PROFILE_SERVICE);",
    "right" : "mProfileManager = (ProfileManager) context.getSystemService(Context.PROFILE_SERVICE);",
    "info" : "ExpressionStatement[8367-8452]:ExpressionStatement[8367-8452]"
  }, {
    "left" : "mMultiUserMode = context.checkCallingOrSelfPermission(\n            Manifest.permission.INTERACT_ACROSS_USERS_FULL) == PackageManager.PERMISSION_GRANTED;",
    "right" : "mMultiUserMode = context.checkCallingOrSelfPermission(\n            Manifest.permission.INTERACT_ACROSS_USERS_FULL) == PackageManager.PERMISSION_GRANTED;",
    "info" : "ExpressionStatement[8746-8898]:ExpressionStatement[8746-8898]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[8910-8917]:Modifier[8910-8917]"
  }, {
    "left" : "ILockSettings",
    "right" : "ILockSettings",
    "info" : "SimpleType[8918-8931]:SimpleType[8918-8931]"
  }, {
    "left" : "getLockSettings",
    "right" : "getLockSettings",
    "info" : "SimpleName[8932-8947]:SimpleName[8932-8947]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8950-9225]:Block[8950-9225]"
  }, {
    "left" : "if (mLockSettingsService == null)",
    "right" : "if (mLockSettingsService == null)",
    "info" : "IfStatement[8960-9182]:IfStatement[8960-9182]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8994-9182]:Block[8994-9182]"
  }, {
    "left" : "ILockSettings service = ILockSettings.Stub.asInterface(\n                    ServiceManager.getService(\"lock_settings\"));",
    "right" : "ILockSettings service = ILockSettings.Stub.asInterface(\n                    ServiceManager.getService(\"lock_settings\"));",
    "info" : "VariableDeclarationStatement[9008-9128]:VariableDeclarationStatement[9008-9128]"
  }, {
    "left" : "mLockSettingsService = service;",
    "right" : "mLockSettingsService = service;",
    "info" : "ExpressionStatement[9141-9172]:ExpressionStatement[9141-9172]"
  }, {
    "left" : "return mLockSettingsService;",
    "right" : "return mLockSettingsService;",
    "info" : "ReturnStatement[9191-9219]:ReturnStatement[9191-9219]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9231-9237]:Modifier[9231-9237]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[9238-9241]:PrimitiveType[9238-9241]"
  }, {
    "left" : "getRequestedMinimumPasswordLength",
    "right" : "getRequestedMinimumPasswordLength",
    "info" : "SimpleName[9242-9275]:SimpleName[9242-9275]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9278-9386]:Block[9278-9386]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumLength(null, getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumLength(null, getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[9288-9380]:ReturnStatement[9288-9380]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9552-9558]:Modifier[9552-9558]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[9559-9562]:PrimitiveType[9559-9562]"
  }, {
    "left" : "getRequestedPasswordQuality",
    "right" : "getRequestedPasswordQuality",
    "info" : "SimpleName[9563-9590]:SimpleName[9563-9590]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9593-9695]:Block[9593-9695]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordQuality(null, getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordQuality(null, getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[9603-9689]:ReturnStatement[9603-9689]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9701-9707]:Modifier[9701-9707]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[9708-9711]:PrimitiveType[9708-9711]"
  }, {
    "left" : "getRequestedPasswordHistoryLength",
    "right" : "getRequestedPasswordHistoryLength",
    "info" : "SimpleName[9712-9745]:SimpleName[9712-9745]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9748-9856]:Block[9748-9856]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordHistoryLength(null, getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordHistoryLength(null, getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[9758-9850]:ReturnStatement[9758-9850]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9862-9868]:Modifier[9862-9868]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[9869-9872]:PrimitiveType[9869-9872]"
  }, {
    "left" : "getRequestedPasswordMinimumLetters",
    "right" : "getRequestedPasswordMinimumLetters",
    "info" : "SimpleName[9873-9907]:SimpleName[9873-9907]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9910-10035]:Block[9910-10035]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumLetters(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumLetters(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[9920-10029]:ReturnStatement[9920-10029]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10041-10047]:Modifier[10041-10047]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[10048-10051]:PrimitiveType[10048-10051]"
  }, {
    "left" : "getRequestedPasswordMinimumUpperCase",
    "right" : "getRequestedPasswordMinimumUpperCase",
    "info" : "SimpleName[10052-10088]:SimpleName[10052-10088]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10091-10218]:Block[10091-10218]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumUpperCase(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumUpperCase(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[10101-10212]:ReturnStatement[10101-10212]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10224-10230]:Modifier[10224-10230]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[10231-10234]:PrimitiveType[10231-10234]"
  }, {
    "left" : "getRequestedPasswordMinimumLowerCase",
    "right" : "getRequestedPasswordMinimumLowerCase",
    "info" : "SimpleName[10235-10271]:SimpleName[10235-10271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10274-10401]:Block[10274-10401]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumLowerCase(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumLowerCase(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[10284-10395]:ReturnStatement[10284-10395]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10407-10413]:Modifier[10407-10413]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[10414-10417]:PrimitiveType[10414-10417]"
  }, {
    "left" : "getRequestedPasswordMinimumNumeric",
    "right" : "getRequestedPasswordMinimumNumeric",
    "info" : "SimpleName[10418-10452]:SimpleName[10418-10452]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10455-10580]:Block[10455-10580]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumNumeric(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumNumeric(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[10465-10574]:ReturnStatement[10465-10574]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10586-10592]:Modifier[10586-10592]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[10593-10596]:PrimitiveType[10593-10596]"
  }, {
    "left" : "getRequestedPasswordMinimumSymbols",
    "right" : "getRequestedPasswordMinimumSymbols",
    "info" : "SimpleName[10597-10631]:SimpleName[10597-10631]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10634-10759]:Block[10634-10759]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumSymbols(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumSymbols(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[10644-10753]:ReturnStatement[10644-10753]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10765-10771]:Modifier[10765-10771]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[10772-10775]:PrimitiveType[10772-10775]"
  }, {
    "left" : "getRequestedPasswordMinimumNonLetter",
    "right" : "getRequestedPasswordMinimumNonLetter",
    "info" : "SimpleName[10776-10812]:SimpleName[10776-10812]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10815-10942]:Block[10815-10942]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumNonLetter(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumNonLetter(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[10825-10936]:ReturnStatement[10825-10936]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10948-10954]:Modifier[10948-10954]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[10955-10959]:PrimitiveType[10955-10959]"
  }, {
    "left" : "reportFailedPasswordAttempt",
    "right" : "reportFailedPasswordAttempt",
    "info" : "SimpleName[10960-10987]:SimpleName[10960-10987]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10990-11263]:Block[10990-11263]"
  }, {
    "left" : "int userId = getCurrentOrCallingUserId();",
    "right" : "int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[11000-11041]:VariableDeclarationStatement[11000-11041]"
  }, {
    "left" : "getDevicePolicyManager().reportFailedPasswordAttempt(userId);",
    "right" : "getDevicePolicyManager().reportFailedPasswordAttempt(userId);",
    "info" : "ExpressionStatement[11050-11111]:ExpressionStatement[11050-11111]"
  }, {
    "left" : "getTrustManager().reportUnlockAttempt(false /* authenticated */, userId);",
    "right" : "getTrustManager().reportUnlockAttempt(false /* authenticated */, userId);",
    "info" : "ExpressionStatement[11120-11193]:ExpressionStatement[11120-11193]"
  }, {
    "left" : "getTrustManager().reportRequireCredentialEntry(userId);",
    "right" : "getTrustManager().reportRequireCredentialEntry(userId);",
    "info" : "ExpressionStatement[11202-11257]:ExpressionStatement[11202-11257]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11269-11275]:Modifier[11269-11275]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11276-11280]:PrimitiveType[11276-11280]"
  }, {
    "left" : "reportSuccessfulPasswordAttempt",
    "right" : "reportSuccessfulPasswordAttempt",
    "info" : "SimpleName[11281-11312]:SimpleName[11281-11312]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11315-11535]:Block[11315-11535]"
  }, {
    "left" : "getDevicePolicyManager().reportSuccessfulPasswordAttempt(getCurrentOrCallingUserId());",
    "right" : "getDevicePolicyManager().reportSuccessfulPasswordAttempt(getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[11325-11411]:ExpressionStatement[11325-11411]"
  }, {
    "left" : "getTrustManager().reportUnlockAttempt(true /* authenticated */,\n                getCurrentOrCallingUserId());",
    "right" : "getTrustManager().reportUnlockAttempt(true /* authenticated */,\n                getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[11420-11529]:ExpressionStatement[11420-11529]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11541-11547]:Modifier[11541-11547]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11548-11552]:PrimitiveType[11548-11552]"
  }, {
    "left" : "setCurrentUser",
    "right" : "setCurrentUser",
    "info" : "SimpleName[11553-11567]:SimpleName[11553-11567]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[11568-11578]:SingleVariableDeclaration[11568-11578]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11580-11620]:Block[11580-11620]"
  }, {
    "left" : "sCurrentUserId = userId;",
    "right" : "sCurrentUserId = userId;",
    "info" : "ExpressionStatement[11590-11614]:ExpressionStatement[11590-11614]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11626-11632]:Modifier[11626-11632]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[11633-11636]:PrimitiveType[11633-11636]"
  }, {
    "left" : "getCurrentUser",
    "right" : "getCurrentUser",
    "info" : "SimpleName[11637-11651]:SimpleName[11637-11651]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11654-12024]:Block[11654-12024]"
  }, {
    "left" : "if (sCurrentUserId != UserHandle.USER_NULL)",
    "right" : "if (sCurrentUserId != UserHandle.USER_NULL)",
    "info" : "IfStatement[11664-11838]:IfStatement[11664-11838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11708-11838]:Block[11708-11838]"
  }, {
    "left" : "return sCurrentUserId;",
    "right" : "return sCurrentUserId;",
    "info" : "ReturnStatement[11806-11828]:ReturnStatement[11806-11828]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[11847-12018]:TryStatement[11847-12018]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11851-11937]:Block[11851-11937]"
  }, {
    "left" : "return ActivityManagerNative.getDefault().getCurrentUser().id;",
    "right" : "return ActivityManagerNative.getDefault().getCurrentUser().id;",
    "info" : "ReturnStatement[11865-11927]:ReturnStatement[11865-11927]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11965-12018]:Block[11965-12018]"
  }, {
    "left" : "return UserHandle.USER_OWNER;",
    "right" : "return UserHandle.USER_OWNER;",
    "info" : "ReturnStatement[11979-12008]:ReturnStatement[11979-12008]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12030-12036]:Modifier[12030-12036]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12037-12041]:PrimitiveType[12037-12041]"
  }, {
    "left" : "removeUser",
    "right" : "removeUser",
    "info" : "SimpleName[12042-12052]:SimpleName[12042-12052]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[12053-12063]:SingleVariableDeclaration[12053-12063]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12065-12261]:Block[12065-12261]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[12075-12255]:TryStatement[12075-12255]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12079-12140]:Block[12079-12140]"
  }, {
    "left" : "getLockSettings().removeUser(userId);",
    "right" : "getLockSettings().removeUser(userId);",
    "info" : "ExpressionStatement[12093-12130]:ExpressionStatement[12093-12130]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12168-12255]:Block[12168-12255]"
  }, {
    "left" : "Log.e(TAG, \"Couldn't remove lock settings for user \" + userId);",
    "right" : "Log.e(TAG, \"Couldn't remove lock settings for user \" + userId);",
    "info" : "ExpressionStatement[12182-12245]:ExpressionStatement[12182-12245]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[12267-12274]:Modifier[12267-12274]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[12275-12278]:PrimitiveType[12275-12278]"
  }, {
    "left" : "getCurrentOrCallingUserId",
    "right" : "getCurrentOrCallingUserId",
    "info" : "SimpleName[12279-12304]:SimpleName[12279-12304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12307-12604]:Block[12307-12604]"
  }, {
    "left" : "if (mMultiUserMode)",
    "right" : "if (mMultiUserMode)",
    "info" : "IfStatement[12317-12598]:IfStatement[12317-12598]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12337-12531]:Block[12337-12531]"
  }, {
    "left" : "return getCurrentUser();",
    "right" : "return getCurrentUser();",
    "info" : "ReturnStatement[12497-12521]:ReturnStatement[12497-12521]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12537-12598]:Block[12537-12598]"
  }, {
    "left" : "return UserHandle.getCallingUserId();",
    "right" : "return UserHandle.getCallingUserId();",
    "info" : "ReturnStatement[12551-12588]:ReturnStatement[12551-12588]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12840-12846]:Modifier[12840-12846]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12847-12854]:PrimitiveType[12847-12854]"
  }, {
    "left" : "checkPattern",
    "right" : "checkPattern",
    "info" : "SimpleName[12855-12867]:SimpleName[12855-12867]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[12868-12902]:SingleVariableDeclaration[12868-12902]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12904-13140]:Block[12904-13140]"
  }, {
    "left" : "final int userId = getCurrentOrCallingUserId();",
    "right" : "final int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[12914-12961]:VariableDeclarationStatement[12914-12961]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[12970-13134]:TryStatement[12970-13134]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12974-13070]:Block[12974-13070]"
  }, {
    "left" : "return getLockSettings().checkPattern(patternToString(pattern), userId);",
    "right" : "return getLockSettings().checkPattern(patternToString(pattern), userId);",
    "info" : "ReturnStatement[12988-13060]:ReturnStatement[12988-13060]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13098-13134]:Block[13098-13134]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[13112-13124]:ReturnStatement[13112-13124]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13382-13388]:Modifier[13382-13388]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[13389-13396]:PrimitiveType[13389-13396]"
  }, {
    "left" : "checkPassword",
    "right" : "checkPassword",
    "info" : "SimpleName[13397-13410]:SimpleName[13397-13410]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[13411-13426]:SingleVariableDeclaration[13411-13426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13428-13649]:Block[13428-13649]"
  }, {
    "left" : "final int userId = getCurrentOrCallingUserId();",
    "right" : "final int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[13438-13485]:VariableDeclarationStatement[13438-13485]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[13494-13643]:TryStatement[13494-13643]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13498-13579]:Block[13498-13579]"
  }, {
    "left" : "return getLockSettings().checkPassword(password, userId);",
    "right" : "return getLockSettings().checkPassword(password, userId);",
    "info" : "ReturnStatement[13512-13569]:ReturnStatement[13512-13569]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13607-13643]:Block[13607-13643]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[13621-13633]:ReturnStatement[13621-13633]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13845-13851]:Modifier[13845-13851]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[13852-13859]:PrimitiveType[13852-13859]"
  }, {
    "left" : "checkVoldPassword",
    "right" : "checkVoldPassword",
    "info" : "SimpleName[13860-13877]:SimpleName[13860-13877]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13880-14096]:Block[13880-14096]"
  }, {
    "left" : "final int userId = getCurrentOrCallingUserId();",
    "right" : "final int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[13890-13937]:VariableDeclarationStatement[13890-13937]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[13946-14090]:TryStatement[13946-14090]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13950-14025]:Block[13950-14025]"
  }, {
    "left" : "return getLockSettings().checkVoldPassword(userId);",
    "right" : "return getLockSettings().checkVoldPassword(userId);",
    "info" : "ReturnStatement[13964-14015]:ReturnStatement[13964-14015]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14053-14090]:Block[14053-14090]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[14067-14080]:ReturnStatement[14067-14080]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14337-14343]:Modifier[14337-14343]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[14344-14351]:PrimitiveType[14344-14351]"
  }, {
    "left" : "checkPasswordHistory",
    "right" : "checkPasswordHistory",
    "info" : "SimpleName[14352-14372]:SimpleName[14352-14372]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[14373-14388]:SingleVariableDeclaration[14373-14388]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14390-15277]:Block[14390-15277]"
  }, {
    "left" : "String passwordHashString = new String(\n                passwordToHash(password, getCurrentOrCallingUserId()));",
    "right" : "String passwordHashString = new String(\n                passwordToHash(password, getCurrentOrCallingUserId()));",
    "info" : "VariableDeclarationStatement[14400-14511]:VariableDeclarationStatement[14400-14511]"
  }, {
    "left" : "String passwordHistory = getString(PASSWORD_HISTORY_KEY);",
    "right" : "String passwordHistory = getString(PASSWORD_HISTORY_KEY);",
    "info" : "VariableDeclarationStatement[14520-14577]:VariableDeclarationStatement[14520-14577]"
  }, {
    "left" : "if (passwordHistory == null)",
    "right" : "if (passwordHistory == null)",
    "info" : "IfStatement[14586-14652]:IfStatement[14586-14652]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14615-14652]:Block[14615-14652]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[14629-14642]:ReturnStatement[14629-14642]"
  }, {
    "left" : "int passwordHashLength = passwordHashString.length();",
    "right" : "int passwordHashLength = passwordHashString.length();",
    "info" : "VariableDeclarationStatement[14708-14761]:VariableDeclarationStatement[14708-14761]"
  }, {
    "left" : "int passwordHistoryLength = getRequestedPasswordHistoryLength();",
    "right" : "int passwordHistoryLength = getRequestedPasswordHistoryLength();",
    "info" : "VariableDeclarationStatement[14770-14834]:VariableDeclarationStatement[14770-14834]"
  }, {
    "left" : "if(passwordHistoryLength == 0)",
    "right" : "if(passwordHistoryLength == 0)",
    "info" : "IfStatement[14843-14911]:IfStatement[14843-14911]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14874-14911]:Block[14874-14911]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[14888-14901]:ReturnStatement[14888-14901]"
  }, {
    "left" : "int neededPasswordHistoryLength = passwordHashLength * passwordHistoryLength\n                + passwordHistoryLength - 1;",
    "right" : "int neededPasswordHistoryLength = passwordHashLength * passwordHistoryLength\n                + passwordHistoryLength - 1;",
    "info" : "VariableDeclarationStatement[14920-15041]:VariableDeclarationStatement[14920-15041]"
  }, {
    "left" : "if (passwordHistory.length() > neededPasswordHistoryLength)",
    "right" : "if (passwordHistory.length() > neededPasswordHistoryLength)",
    "info" : "IfStatement[15050-15210]:IfStatement[15050-15210]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15110-15210]:Block[15110-15210]"
  }, {
    "left" : "passwordHistory = passwordHistory.substring(0, neededPasswordHistoryLength);",
    "right" : "passwordHistory = passwordHistory.substring(0, neededPasswordHistoryLength);",
    "info" : "ExpressionStatement[15124-15200]:ExpressionStatement[15124-15200]"
  }, {
    "left" : "return passwordHistory.contains(passwordHashString);",
    "right" : "return passwordHistory.contains(passwordHashString);",
    "info" : "ReturnStatement[15219-15271]:ReturnStatement[15219-15271]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15405-15411]:Modifier[15405-15411]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[15412-15419]:PrimitiveType[15412-15419]"
  }, {
    "left" : "savedPatternExists",
    "right" : "savedPatternExists",
    "info" : "SimpleName[15420-15438]:SimpleName[15420-15438]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15441-15512]:Block[15441-15512]"
  }, {
    "left" : "return savedPatternExists(getCurrentOrCallingUserId());",
    "right" : "return savedPatternExists(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[15451-15506]:ReturnStatement[15451-15506]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15640-15646]:Modifier[15640-15646]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[15647-15654]:PrimitiveType[15647-15654]"
  }, {
    "left" : "savedPatternExists",
    "right" : "savedPatternExists",
    "info" : "SimpleName[15655-15673]:SimpleName[15655-15673]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[15674-15684]:SingleVariableDeclaration[15674-15684]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15686-15840]:Block[15686-15840]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[15696-15834]:TryStatement[15696-15834]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15700-15769]:Block[15700-15769]"
  }, {
    "left" : "return getLockSettings().havePattern(userId);",
    "right" : "return getLockSettings().havePattern(userId);",
    "info" : "ReturnStatement[15714-15759]:ReturnStatement[15714-15759]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15797-15834]:Block[15797-15834]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[15811-15824]:ReturnStatement[15811-15824]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15968-15974]:Modifier[15968-15974]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[15975-15982]:PrimitiveType[15975-15982]"
  }, {
    "left" : "savedPasswordExists",
    "right" : "savedPasswordExists",
    "info" : "SimpleName[15983-16002]:SimpleName[15983-16002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16005-16077]:Block[16005-16077]"
  }, {
    "left" : "return savedPasswordExists(getCurrentOrCallingUserId());",
    "right" : "return savedPasswordExists(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[16015-16071]:ReturnStatement[16015-16071]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16206-16212]:Modifier[16206-16212]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[16213-16220]:PrimitiveType[16213-16220]"
  }, {
    "left" : "savedPasswordExists",
    "right" : "savedPasswordExists",
    "info" : "SimpleName[16221-16240]:SimpleName[16221-16240]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[16241-16251]:SingleVariableDeclaration[16241-16251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16253-16408]:Block[16253-16408]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[16263-16402]:TryStatement[16263-16402]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16267-16337]:Block[16267-16337]"
  }, {
    "left" : "return getLockSettings().havePassword(userId);",
    "right" : "return getLockSettings().havePassword(userId);",
    "info" : "ReturnStatement[16281-16327]:ReturnStatement[16281-16327]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16365-16402]:Block[16365-16402]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[16379-16392]:ReturnStatement[16379-16392]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16617-16623]:Modifier[16617-16623]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[16624-16631]:PrimitiveType[16624-16631]"
  }, {
    "left" : "isPatternEverChosen",
    "right" : "isPatternEverChosen",
    "info" : "SimpleName[16632-16651]:SimpleName[16632-16651]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16654-16720]:Block[16654-16720]"
  }, {
    "left" : "return getBoolean(PATTERN_EVER_CHOSEN_KEY, false);",
    "right" : "return getBoolean(PATTERN_EVER_CHOSEN_KEY, false);",
    "info" : "ReturnStatement[16664-16714]:ReturnStatement[16664-16714]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16940-16946]:Modifier[16940-16946]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[16947-16954]:PrimitiveType[16947-16954]"
  }, {
    "left" : "isBiometricWeakEverChosen",
    "right" : "isBiometricWeakEverChosen",
    "info" : "SimpleName[16955-16980]:SimpleName[16955-16980]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16983-17056]:Block[16983-17056]"
  }, {
    "left" : "return getBoolean(BIOMETRIC_WEAK_EVER_CHOSEN_KEY, false);",
    "right" : "return getBoolean(BIOMETRIC_WEAK_EVER_CHOSEN_KEY, false);",
    "info" : "ReturnStatement[16993-17050]:ReturnStatement[16993-17050]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17175-17181]:Modifier[17175-17181]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[17182-17185]:PrimitiveType[17182-17185]"
  }, {
    "left" : "getActivePasswordQuality",
    "right" : "getActivePasswordQuality",
    "info" : "SimpleName[17186-17210]:SimpleName[17186-17210]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17213-19414]:Block[17213-19414]"
  }, {
    "left" : "int activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED;",
    "right" : "int activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED;",
    "info" : "VariableDeclarationStatement[17223-17300]:VariableDeclarationStatement[17223-17300]"
  }, {
    "left" : "int quality =\n                (int) getLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);",
    "right" : "int quality =\n                (int) getLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);",
    "info" : "VariableDeclarationStatement[17482-17593]:VariableDeclarationStatement[17482-17593]"
  }, {
    "left" : "switch (quality) {\n            case DevicePolicyManager.PASSWORD_QUALITY_SOMETHING:\n                if (isLockPatternEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK:\n                if (isBiometricWeakInstalled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_COMPLEX:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;\n                }\n                break;\n        }",
    "right" : "switch (quality) {\n            case DevicePolicyManager.PASSWORD_QUALITY_SOMETHING:\n                if (isLockPatternEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK:\n                if (isBiometricWeakInstalled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_COMPLEX:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;\n                }\n                break;\n        }",
    "info" : "SwitchStatement[17602-19369]:SwitchStatement[17602-19369]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_SOMETHING:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_SOMETHING:",
    "info" : "SwitchCase[17633-17685]:SwitchCase[17633-17685]"
  }, {
    "left" : "if (isLockPatternEnabled())",
    "right" : "if (isLockPatternEnabled())",
    "info" : "IfStatement[17702-17841]:IfStatement[17702-17841]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17730-17841]:Block[17730-17841]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "info" : "ExpressionStatement[17752-17823]:ExpressionStatement[17752-17823]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[17858-17864]:BreakStatement[17858-17864]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK:",
    "info" : "SwitchCase[17877-17934]:SwitchCase[17877-17934]"
  }, {
    "left" : "if (isBiometricWeakInstalled())",
    "right" : "if (isBiometricWeakInstalled())",
    "info" : "IfStatement[17951-18099]:IfStatement[17951-18099]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17983-18099]:Block[17983-18099]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;",
    "info" : "ExpressionStatement[18005-18081]:ExpressionStatement[18005-18081]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[18116-18122]:BreakStatement[18116-18122]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC:",
    "info" : "SwitchCase[18135-18185]:SwitchCase[18135-18185]"
  }, {
    "left" : "if (isLockPasswordEnabled())",
    "right" : "if (isLockPasswordEnabled())",
    "info" : "IfStatement[18202-18340]:IfStatement[18202-18340]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18231-18340]:Block[18231-18340]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;",
    "info" : "ExpressionStatement[18253-18322]:ExpressionStatement[18253-18322]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[18357-18363]:BreakStatement[18357-18363]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX:",
    "info" : "SwitchCase[18376-18434]:SwitchCase[18376-18434]"
  }, {
    "left" : "if (isLockPasswordEnabled())",
    "right" : "if (isLockPasswordEnabled())",
    "info" : "IfStatement[18451-18597]:IfStatement[18451-18597]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18480-18597]:Block[18480-18597]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "info" : "ExpressionStatement[18502-18579]:ExpressionStatement[18502-18579]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[18614-18620]:BreakStatement[18614-18620]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC:",
    "info" : "SwitchCase[18633-18686]:SwitchCase[18633-18686]"
  }, {
    "left" : "if (isLockPasswordEnabled())",
    "right" : "if (isLockPasswordEnabled())",
    "info" : "IfStatement[18703-18844]:IfStatement[18703-18844]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18732-18844]:Block[18732-18844]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;",
    "info" : "ExpressionStatement[18754-18826]:ExpressionStatement[18754-18826]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[18861-18867]:BreakStatement[18861-18867]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC:",
    "info" : "SwitchCase[18880-18935]:SwitchCase[18880-18935]"
  }, {
    "left" : "if (isLockPasswordEnabled())",
    "right" : "if (isLockPasswordEnabled())",
    "info" : "IfStatement[18952-19095]:IfStatement[18952-19095]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18981-19095]:Block[18981-19095]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;",
    "info" : "ExpressionStatement[19003-19077]:ExpressionStatement[19003-19077]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[19112-19118]:BreakStatement[19112-19118]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_COMPLEX:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_COMPLEX:",
    "info" : "SwitchCase[19131-19181]:SwitchCase[19131-19181]"
  }, {
    "left" : "if (isLockPasswordEnabled())",
    "right" : "if (isLockPasswordEnabled())",
    "info" : "IfStatement[19198-19336]:IfStatement[19198-19336]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19227-19336]:Block[19227-19336]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "info" : "ExpressionStatement[19249-19318]:ExpressionStatement[19249-19318]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[19353-19359]:BreakStatement[19353-19359]"
  }, {
    "left" : "return activePasswordQuality;",
    "right" : "return activePasswordQuality;",
    "info" : "ReturnStatement[19379-19408]:ReturnStatement[19379-19408]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19420-19426]:Modifier[19420-19426]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19427-19431]:PrimitiveType[19427-19431]"
  }, {
    "left" : "clearLock",
    "right" : "clearLock",
    "info" : "SimpleName[19432-19441]:SimpleName[19432-19441]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[19442-19460]:SingleVariableDeclaration[19442-19460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19462-19529]:Block[19462-19529]"
  }, {
    "left" : "clearLock(isFallback, getCurrentOrCallingUserId());",
    "right" : "clearLock(isFallback, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[19472-19523]:ExpressionStatement[19472-19523]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19594-19600]:Modifier[19594-19600]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19601-19605]:PrimitiveType[19601-19605]"
  }, {
    "left" : "clearLock",
    "right" : "clearLock",
    "info" : "SimpleName[19606-19615]:SimpleName[19606-19615]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[19616-19634]:SingleVariableDeclaration[19616-19634]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[19636-19650]:SingleVariableDeclaration[19636-19650]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19652-20216]:Block[19652-20216]"
  }, {
    "left" : "if(!isFallback)",
    "right" : "if(!isFallback)",
    "info" : "IfStatement[19662-19704]:IfStatement[19662-19704]"
  }, {
    "left" : "deleteGallery(userHandle);",
    "right" : "deleteGallery(userHandle);",
    "info" : "ExpressionStatement[19678-19704]:ExpressionStatement[19678-19704]"
  }, {
    "left" : "saveLockPassword(null, DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, isFallback, false,\n                userHandle);",
    "right" : "saveLockPassword(null, DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, isFallback, false,\n                userHandle);",
    "info" : "ExpressionStatement[19713-19831]:ExpressionStatement[19713-19831]"
  }, {
    "left" : "setLockPatternEnabled(false, userHandle);",
    "right" : "setLockPatternEnabled(false, userHandle);",
    "info" : "ExpressionStatement[19840-19881]:ExpressionStatement[19840-19881]"
  }, {
    "left" : "saveLockPattern(null, isFallback, false, userHandle);",
    "right" : "saveLockPattern(null, isFallback, false, userHandle);",
    "info" : "ExpressionStatement[19890-19943]:ExpressionStatement[19890-19943]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "right" : "setLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "info" : "ExpressionStatement[19952-20041]:ExpressionStatement[19952-20041]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                userHandle);",
    "right" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                userHandle);",
    "info" : "ExpressionStatement[20050-20165]:ExpressionStatement[20050-20165]"
  }, {
    "left" : "onAfterChangingPassword(userHandle);",
    "right" : "onAfterChangingPassword(userHandle);",
    "info" : "ExpressionStatement[20174-20210]:ExpressionStatement[20174-20210]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20452-20458]:Modifier[20452-20458]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20459-20463]:PrimitiveType[20459-20463]"
  }, {
    "left" : "setLockScreenDisabled",
    "right" : "setLockScreenDisabled",
    "info" : "SimpleName[20464-20485]:SimpleName[20464-20485]"
  }, {
    "left" : "boolean disable",
    "right" : "boolean disable",
    "info" : "SingleVariableDeclaration[20486-20501]:SingleVariableDeclaration[20486-20501]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20503-20568]:Block[20503-20568]"
  }, {
    "left" : "setLong(DISABLE_LOCKSCREEN_KEY, disable ? 1 : 0);",
    "right" : "setLong(DISABLE_LOCKSCREEN_KEY, disable ? 1 : 0);",
    "info" : "ExpressionStatement[20513-20562]:ExpressionStatement[20513-20562]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20805-20811]:Modifier[20805-20811]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[20812-20819]:PrimitiveType[20812-20819]"
  }, {
    "left" : "isLockScreenDisabled",
    "right" : "isLockScreenDisabled",
    "info" : "SimpleName[20820-20840]:SimpleName[20820-20840]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20843-21414]:Block[20843-21414]"
  }, {
    "left" : "if (!isSecure() && getLong(DISABLE_LOCKSCREEN_KEY, 0) != 0)",
    "right" : "if (!isSecure() && getLong(DISABLE_LOCKSCREEN_KEY, 0) != 0)",
    "info" : "IfStatement[20853-21386]:IfStatement[20853-21386]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20913-21386]:Block[20913-21386]"
  }, {
    "left" : "final List<UserInfo> users = UserManager.get(mContext).getUsers(true);",
    "right" : "final List<UserInfo> users = UserManager.get(mContext).getUsers(true);",
    "info" : "VariableDeclarationStatement[21005-21075]:VariableDeclarationStatement[21005-21075]"
  }, {
    "left" : "final int userCount = users.size();",
    "right" : "final int userCount = users.size();",
    "info" : "VariableDeclarationStatement[21088-21123]:VariableDeclarationStatement[21088-21123]"
  }, {
    "left" : "int switchableUsers = 0;",
    "right" : "int switchableUsers = 0;",
    "info" : "VariableDeclarationStatement[21136-21160]:VariableDeclarationStatement[21136-21160]"
  }, {
    "left" : "for (int i = 0; i < userCount; i++)",
    "right" : "for (int i = 0; i < userCount; i++)",
    "info" : "ForStatement[21173-21336]:ForStatement[21173-21336]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21209-21336]:Block[21209-21336]"
  }, {
    "left" : "if (users.get(i).supportsSwitchTo())",
    "right" : "if (users.get(i).supportsSwitchTo())",
    "info" : "IfStatement[21227-21322]:IfStatement[21227-21322]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21264-21322]:Block[21264-21322]"
  }, {
    "left" : "switchableUsers++;",
    "right" : "switchableUsers++;",
    "info" : "ExpressionStatement[21286-21304]:ExpressionStatement[21286-21304]"
  }, {
    "left" : "return switchableUsers < 2;",
    "right" : "return switchableUsers < 2;",
    "info" : "ReturnStatement[21349-21376]:ReturnStatement[21349-21376]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[21395-21408]:ReturnStatement[21395-21408]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21505-21511]:Modifier[21505-21511]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21512-21516]:PrimitiveType[21512-21516]"
  }, {
    "left" : "deleteTempGallery",
    "right" : "deleteTempGallery",
    "info" : "SimpleName[21517-21534]:SimpleName[21517-21534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21537-21723]:Block[21537-21723]"
  }, {
    "left" : "Intent intent = new Intent().setAction(\"com.android.facelock.DELETE_GALLERY\");",
    "right" : "Intent intent = new Intent().setAction(\"com.android.facelock.DELETE_GALLERY\");",
    "info" : "VariableDeclarationStatement[21547-21625]:VariableDeclarationStatement[21547-21625]"
  }, {
    "left" : "intent.putExtra(\"deleteTempGallery\", true);",
    "right" : "intent.putExtra(\"deleteTempGallery\", true);",
    "info" : "ExpressionStatement[21634-21677]:ExpressionStatement[21634-21677]"
  }, {
    "left" : "mContext.sendBroadcast(intent);",
    "right" : "mContext.sendBroadcast(intent);",
    "info" : "ExpressionStatement[21686-21717]:ExpressionStatement[21686-21717]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21833-21837]:PrimitiveType[21833-21837]"
  }, {
    "left" : "deleteGallery",
    "right" : "deleteGallery",
    "info" : "SimpleName[21838-21851]:SimpleName[21838-21851]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[21852-21862]:SingleVariableDeclaration[21852-21862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21864-22139]:Block[21864-22139]"
  }, {
    "left" : "if(usingBiometricWeak(userId))",
    "right" : "if(usingBiometricWeak(userId))",
    "info" : "IfStatement[21874-22133]:IfStatement[21874-22133]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21905-22133]:Block[21905-22133]"
  }, {
    "left" : "Intent intent = new Intent().setAction(\"com.android.facelock.DELETE_GALLERY\");",
    "right" : "Intent intent = new Intent().setAction(\"com.android.facelock.DELETE_GALLERY\");",
    "info" : "VariableDeclarationStatement[21919-21997]:VariableDeclarationStatement[21919-21997]"
  }, {
    "left" : "intent.putExtra(\"deleteGallery\", true);",
    "right" : "intent.putExtra(\"deleteGallery\", true);",
    "info" : "ExpressionStatement[22010-22049]:ExpressionStatement[22010-22049]"
  }, {
    "left" : "mContext.sendBroadcastAsUser(intent, new UserHandle(userId));",
    "right" : "mContext.sendBroadcastAsUser(intent, new UserHandle(userId));",
    "info" : "ExpressionStatement[22062-22123]:ExpressionStatement[22062-22123]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22236-22242]:Modifier[22236-22242]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22243-22247]:PrimitiveType[22243-22247]"
  }, {
    "left" : "saveLockPattern",
    "right" : "saveLockPattern",
    "info" : "SimpleName[22248-22263]:SimpleName[22248-22263]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[22264-22298]:SingleVariableDeclaration[22264-22298]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22300-22360]:Block[22300-22360]"
  }, {
    "left" : "this.saveLockPattern(pattern, false, false);",
    "right" : "this.saveLockPattern(pattern, false, false);",
    "info" : "ExpressionStatement[22310-22354]:ExpressionStatement[22310-22354]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22457-22463]:Modifier[22457-22463]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22464-22468]:PrimitiveType[22464-22468]"
  }, {
    "left" : "saveLockPattern",
    "right" : "saveLockPattern",
    "info" : "SimpleName[22469-22484]:SimpleName[22469-22484]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[22485-22519]:SingleVariableDeclaration[22485-22519]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[22521-22539]:SingleVariableDeclaration[22521-22539]"
  }, {
    "left" : "boolean isFingerprintFallback",
    "right" : "boolean isFingerprintFallback",
    "info" : "SingleVariableDeclaration[22553-22582]:SingleVariableDeclaration[22553-22582]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22584-22710]:Block[22584-22710]"
  }, {
    "left" : "this.saveLockPattern(pattern, isFallback, isFingerprintFallback,\n                getCurrentOrCallingUserId());",
    "right" : "this.saveLockPattern(pattern, isFallback, isFingerprintFallback,\n                getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[22594-22704]:ExpressionStatement[22594-22704]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22942-22948]:Modifier[22942-22948]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22949-22953]:PrimitiveType[22949-22953]"
  }, {
    "left" : "saveLockPattern",
    "right" : "saveLockPattern",
    "info" : "SimpleName[22954-22969]:SimpleName[22954-22969]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[22970-23004]:SingleVariableDeclaration[22970-23004]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[23006-23024]:SingleVariableDeclaration[23006-23024]"
  }, {
    "left" : "boolean isFingerprintFallback",
    "right" : "boolean isFingerprintFallback",
    "info" : "SingleVariableDeclaration[23038-23067]:SingleVariableDeclaration[23038-23067]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[23069-23079]:SingleVariableDeclaration[23069-23079]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23081-25312]:Block[23081-25312]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[23091-25306]:TryStatement[23091-25306]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23095-25207]:Block[23095-25207]"
  }, {
    "left" : "getLockSettings().setLockPattern(patternToString(pattern), userId);",
    "right" : "getLockSettings().setLockPattern(patternToString(pattern), userId);",
    "info" : "ExpressionStatement[23109-23176]:ExpressionStatement[23109-23176]"
  }, {
    "left" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "right" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "info" : "VariableDeclarationStatement[23189-23240]:VariableDeclarationStatement[23189-23240]"
  }, {
    "left" : "if (pattern != null)",
    "right" : "if (pattern != null)",
    "info" : "IfStatement[23253-25152]:IfStatement[23253-25152]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23274-24984]:Block[23274-24984]"
  }, {
    "left" : "if (userId == UserHandle.USER_OWNER\n                        && LockPatternUtils.isDeviceEncryptionEnabled())",
    "right" : "if (userId == UserHandle.USER_OWNER\n                        && LockPatternUtils.isDeviceEncryptionEnabled())",
    "info" : "IfStatement[23350-23872]:IfStatement[23350-23872]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23459-23872]:Block[23459-23872]"
  }, {
    "left" : "final boolean required = isCredentialRequiredToDecrypt(true);",
    "right" : "final boolean required = isCredentialRequiredToDecrypt(true);",
    "info" : "VariableDeclarationStatement[23481-23542]:VariableDeclarationStatement[23481-23542]"
  }, {
    "left" : "if (!required)",
    "right" : "if (!required)",
    "info" : "IfStatement[23563-23854]:IfStatement[23563-23854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23578-23652]:Block[23578-23652]"
  }, {
    "left" : "clearEncryptionPassword();",
    "right" : "clearEncryptionPassword();",
    "info" : "ExpressionStatement[23604-23630]:ExpressionStatement[23604-23630]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23658-23854]:Block[23658-23854]"
  }, {
    "left" : "String stringPattern = patternToString(pattern);",
    "right" : "String stringPattern = patternToString(pattern);",
    "info" : "VariableDeclarationStatement[23684-23732]:VariableDeclarationStatement[23684-23732]"
  }, {
    "left" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_PATTERN, stringPattern);",
    "right" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_PATTERN, stringPattern);",
    "info" : "ExpressionStatement[23757-23832]:ExpressionStatement[23757-23832]"
  }, {
    "left" : "setBoolean(PATTERN_EVER_CHOSEN_KEY, true, userId);",
    "right" : "setBoolean(PATTERN_EVER_CHOSEN_KEY, true, userId);",
    "info" : "ExpressionStatement[23890-23940]:ExpressionStatement[23890-23940]"
  }, {
    "left" : "if (!isFallback)",
    "right" : "if (!isFallback)",
    "info" : "IfStatement[23957-24970]:IfStatement[23957-24970]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23974-24334]:Block[23974-24334]"
  }, {
    "left" : "deleteGallery(userId);",
    "right" : "deleteGallery(userId);",
    "info" : "ExpressionStatement[23996-24018]:ExpressionStatement[23996-24018]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY,\n                            DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, userId);",
    "right" : "setLong(PASSWORD_TYPE_KEY,\n                            DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, userId);",
    "info" : "ExpressionStatement[24039-24150]:ExpressionStatement[24039-24150]"
  }, {
    "left" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_SOMETHING,\n                            pattern.size(), 0, 0, 0, 0, 0, 0, userId);",
    "right" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_SOMETHING,\n                            pattern.size(), 0, 0, 0, 0, 0, 0, userId);",
    "info" : "ExpressionStatement[24171-24316]:ExpressionStatement[24171-24316]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24340-24970]:Block[24340-24970]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                            DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, userId);",
    "right" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                            DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, userId);",
    "info" : "ExpressionStatement[24362-24483]:ExpressionStatement[24362-24483]"
  }, {
    "left" : "if (!isFingerprintFallback)",
    "right" : "if (!isFingerprintFallback)",
    "info" : "IfStatement[24504-24952]:IfStatement[24504-24952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24532-24952]:Block[24532-24952]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY,\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userId);",
    "right" : "setLong(PASSWORD_TYPE_KEY,\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userId);",
    "info" : "ExpressionStatement[24558-24678]:ExpressionStatement[24558-24678]"
  }, {
    "left" : "finishBiometricWeak(userId);",
    "right" : "finishBiometricWeak(userId);",
    "info" : "ExpressionStatement[24703-24731]:ExpressionStatement[24703-24731]"
  }, {
    "left" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                                0, 0, 0, 0, 0, 0, 0, userId);",
    "right" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                                0, 0, 0, 0, 0, 0, 0, userId);",
    "info" : "ExpressionStatement[24756-24930]:ExpressionStatement[24756-24930]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24990-25152]:Block[24990-25152]"
  }, {
    "left" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, 0, 0,\n                        0, 0, 0, 0, 0, userId);",
    "right" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, 0, 0,\n                        0, 0, 0, 0, 0, userId);",
    "info" : "ExpressionStatement[25008-25138]:ExpressionStatement[25008-25138]"
  }, {
    "left" : "onAfterChangingPassword(userId);",
    "right" : "onAfterChangingPassword(userId);",
    "info" : "ExpressionStatement[25165-25197]:ExpressionStatement[25165-25197]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25235-25306]:Block[25235-25306]"
  }, {
    "left" : "Log.e(TAG, \"Couldn't save lock pattern \" + re);",
    "right" : "Log.e(TAG, \"Couldn't save lock pattern \" + re);",
    "info" : "ExpressionStatement[25249-25296]:ExpressionStatement[25249-25296]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25318-25325]:Modifier[25318-25325]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[25326-25330]:PrimitiveType[25326-25330]"
  }, {
    "left" : "updateCryptoUserInfo",
    "right" : "updateCryptoUserInfo",
    "info" : "SimpleName[25331-25351]:SimpleName[25331-25351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25354-26099]:Block[25354-26099]"
  }, {
    "left" : "int userId = getCurrentOrCallingUserId();",
    "right" : "int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[25364-25405]:VariableDeclarationStatement[25364-25405]"
  }, {
    "left" : "if (userId != UserHandle.USER_OWNER)",
    "right" : "if (userId != UserHandle.USER_OWNER)",
    "info" : "IfStatement[25414-25482]:IfStatement[25414-25482]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25451-25482]:Block[25451-25482]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[25465-25472]:ReturnStatement[25465-25472]"
  }, {
    "left" : "final String ownerInfo = isOwnerInfoEnabled() ? getOwnerInfo(userId) : \"\";",
    "right" : "final String ownerInfo = isOwnerInfoEnabled() ? getOwnerInfo(userId) : \"\";",
    "info" : "VariableDeclarationStatement[25492-25566]:VariableDeclarationStatement[25492-25566]"
  }, {
    "left" : "IBinder service = ServiceManager.getService(\"mount\");",
    "right" : "IBinder service = ServiceManager.getService(\"mount\");",
    "info" : "VariableDeclarationStatement[25576-25629]:VariableDeclarationStatement[25576-25629]"
  }, {
    "left" : "if (service == null)",
    "right" : "if (service == null)",
    "info" : "IfStatement[25638-25774]:IfStatement[25638-25774]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25659-25774]:Block[25659-25774]"
  }, {
    "left" : "Log.e(TAG, \"Could not find the mount service to update the user info\");",
    "right" : "Log.e(TAG, \"Could not find the mount service to update the user info\");",
    "info" : "ExpressionStatement[25673-25744]:ExpressionStatement[25673-25744]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[25757-25764]:ReturnStatement[25757-25764]"
  }, {
    "left" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "right" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "info" : "VariableDeclarationStatement[25784-25853]:VariableDeclarationStatement[25784-25853]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[25862-26093]:TryStatement[25862-26093]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25866-26000]:Block[25866-26000]"
  }, {
    "left" : "Log.d(TAG, \"Setting owner info\");",
    "right" : "Log.d(TAG, \"Setting owner info\");",
    "info" : "ExpressionStatement[25880-25913]:ExpressionStatement[25880-25913]"
  }, {
    "left" : "mountService.setField(StorageManager.OWNER_INFO_KEY, ownerInfo);",
    "right" : "mountService.setField(StorageManager.OWNER_INFO_KEY, ownerInfo);",
    "info" : "ExpressionStatement[25926-25990]:ExpressionStatement[25926-25990]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26027-26093]:Block[26027-26093]"
  }, {
    "left" : "Log.e(TAG, \"Error changing user info\", e);",
    "right" : "Log.e(TAG, \"Error changing user info\", e);",
    "info" : "ExpressionStatement[26041-26083]:ExpressionStatement[26041-26083]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26105-26111]:Modifier[26105-26111]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[26112-26116]:PrimitiveType[26112-26116]"
  }, {
    "left" : "setOwnerInfo",
    "right" : "setOwnerInfo",
    "info" : "SimpleName[26117-26129]:SimpleName[26117-26129]"
  }, {
    "left" : "String info",
    "right" : "String info",
    "info" : "SingleVariableDeclaration[26130-26141]:SingleVariableDeclaration[26130-26141]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[26143-26153]:SingleVariableDeclaration[26143-26153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26155-26251]:Block[26155-26251]"
  }, {
    "left" : "setString(LOCK_SCREEN_OWNER_INFO, info, userId);",
    "right" : "setString(LOCK_SCREEN_OWNER_INFO, info, userId);",
    "info" : "ExpressionStatement[26165-26213]:ExpressionStatement[26165-26213]"
  }, {
    "left" : "updateCryptoUserInfo();",
    "right" : "updateCryptoUserInfo();",
    "info" : "ExpressionStatement[26222-26245]:ExpressionStatement[26222-26245]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26257-26263]:Modifier[26257-26263]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[26264-26268]:PrimitiveType[26264-26268]"
  }, {
    "left" : "setOwnerInfoEnabled",
    "right" : "setOwnerInfoEnabled",
    "info" : "SimpleName[26269-26288]:SimpleName[26269-26288]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[26289-26304]:SingleVariableDeclaration[26289-26304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26306-26406]:Block[26306-26406]"
  }, {
    "left" : "setBoolean(LOCK_SCREEN_OWNER_INFO_ENABLED, enabled);",
    "right" : "setBoolean(LOCK_SCREEN_OWNER_INFO_ENABLED, enabled);",
    "info" : "ExpressionStatement[26316-26368]:ExpressionStatement[26316-26368]"
  }, {
    "left" : "updateCryptoUserInfo();",
    "right" : "updateCryptoUserInfo();",
    "info" : "ExpressionStatement[26377-26400]:ExpressionStatement[26377-26400]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26412-26418]:Modifier[26412-26418]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[26419-26425]:SimpleType[26419-26425]"
  }, {
    "left" : "getOwnerInfo",
    "right" : "getOwnerInfo",
    "info" : "SimpleName[26426-26438]:SimpleName[26426-26438]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[26439-26449]:SingleVariableDeclaration[26439-26449]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26451-26508]:Block[26451-26508]"
  }, {
    "left" : "return getString(LOCK_SCREEN_OWNER_INFO);",
    "right" : "return getString(LOCK_SCREEN_OWNER_INFO);",
    "info" : "ReturnStatement[26461-26502]:ReturnStatement[26461-26502]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26514-26520]:Modifier[26514-26520]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[26521-26528]:PrimitiveType[26521-26528]"
  }, {
    "left" : "isOwnerInfoEnabled",
    "right" : "isOwnerInfoEnabled",
    "info" : "SimpleName[26529-26547]:SimpleName[26529-26547]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26550-26623]:Block[26550-26623]"
  }, {
    "left" : "return getBoolean(LOCK_SCREEN_OWNER_INFO_ENABLED, false);",
    "right" : "return getBoolean(LOCK_SCREEN_OWNER_INFO_ENABLED, false);",
    "info" : "ReturnStatement[26560-26617]:ReturnStatement[26560-26617]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[26713-26719]:Modifier[26713-26719]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26720-26726]:Modifier[26720-26726]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[26727-26730]:PrimitiveType[26727-26730]"
  }, {
    "left" : "computePasswordQuality",
    "right" : "computePasswordQuality",
    "info" : "SimpleName[26731-26753]:SimpleName[26731-26753]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[26754-26769]:SingleVariableDeclaration[26754-26769]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26771-27640]:Block[26771-27640]"
  }, {
    "left" : "boolean hasDigit = false;",
    "right" : "boolean hasDigit = false;",
    "info" : "VariableDeclarationStatement[26781-26806]:VariableDeclarationStatement[26781-26806]"
  }, {
    "left" : "boolean hasNonDigit = false;",
    "right" : "boolean hasNonDigit = false;",
    "info" : "VariableDeclarationStatement[26815-26843]:VariableDeclarationStatement[26815-26843]"
  }, {
    "left" : "final int len = password.length();",
    "right" : "final int len = password.length();",
    "info" : "VariableDeclarationStatement[26852-26886]:VariableDeclarationStatement[26852-26886]"
  }, {
    "left" : "for (int i = 0; i < len; i++)",
    "right" : "for (int i = 0; i < len; i++)",
    "info" : "ForStatement[26895-27097]:ForStatement[26895-27097]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26925-27097]:Block[26925-27097]"
  }, {
    "left" : "if (Character.isDigit(password.charAt(i)))",
    "right" : "if (Character.isDigit(password.charAt(i)))",
    "info" : "IfStatement[26939-27087]:IfStatement[26939-27087]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26982-27030]:Block[26982-27030]"
  }, {
    "left" : "hasDigit = true;",
    "right" : "hasDigit = true;",
    "info" : "ExpressionStatement[27000-27016]:ExpressionStatement[27000-27016]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27036-27087]:Block[27036-27087]"
  }, {
    "left" : "hasNonDigit = true;",
    "right" : "hasNonDigit = true;",
    "info" : "ExpressionStatement[27054-27073]:ExpressionStatement[27054-27073]"
  }, {
    "left" : "if (hasNonDigit && hasDigit)",
    "right" : "if (hasNonDigit && hasDigit)",
    "info" : "IfStatement[27107-27217]:IfStatement[27107-27217]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27136-27217]:Block[27136-27217]"
  }, {
    "left" : "return DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;",
    "right" : "return DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;",
    "info" : "ReturnStatement[27150-27207]:ReturnStatement[27150-27207]"
  }, {
    "left" : "if (hasNonDigit)",
    "right" : "if (hasNonDigit)",
    "info" : "IfStatement[27226-27322]:IfStatement[27226-27322]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27243-27322]:Block[27243-27322]"
  }, {
    "left" : "return DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;",
    "right" : "return DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;",
    "info" : "ReturnStatement[27257-27312]:ReturnStatement[27257-27312]"
  }, {
    "left" : "if (hasDigit)",
    "right" : "if (hasDigit)",
    "info" : "IfStatement[27331-27569]:IfStatement[27331-27569]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27345-27569]:Block[27345-27569]"
  }, {
    "left" : "return maxLengthSequence(password) > MAX_ALLOWED_SEQUENCE\n                    ? DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                    : DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "right" : "return maxLengthSequence(password) > MAX_ALLOWED_SEQUENCE\n                    ? DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                    : DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "info" : "ReturnStatement[27359-27559]:ReturnStatement[27359-27559]"
  }, {
    "left" : "return DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED;",
    "right" : "return DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED;",
    "info" : "ReturnStatement[27578-27634]:ReturnStatement[27578-27634]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[27646-27653]:Modifier[27646-27653]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[27654-27660]:Modifier[27654-27660]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[27661-27664]:PrimitiveType[27661-27664]"
  }, {
    "left" : "categoryChar",
    "right" : "categoryChar",
    "info" : "SimpleName[27665-27677]:SimpleName[27665-27677]"
  }, {
    "left" : "char c",
    "right" : "char c",
    "info" : "SingleVariableDeclaration[27678-27684]:SingleVariableDeclaration[27678-27684]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27686-27843]:Block[27686-27843]"
  }, {
    "left" : "if ('a' <= c && c <= 'z')",
    "right" : "if ('a' <= c && c <= 'z')",
    "info" : "IfStatement[27696-27731]:IfStatement[27696-27731]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[27722-27731]:ReturnStatement[27722-27731]"
  }, {
    "left" : "if ('A' <= c && c <= 'Z')",
    "right" : "if ('A' <= c && c <= 'Z')",
    "info" : "IfStatement[27740-27775]:IfStatement[27740-27775]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[27766-27775]:ReturnStatement[27766-27775]"
  }, {
    "left" : "if ('0' <= c && c <= '9')",
    "right" : "if ('0' <= c && c <= '9')",
    "info" : "IfStatement[27784-27819]:IfStatement[27784-27819]"
  }, {
    "left" : "return 2;",
    "right" : "return 2;",
    "info" : "ReturnStatement[27810-27819]:ReturnStatement[27810-27819]"
  }, {
    "left" : "return 3;",
    "right" : "return 3;",
    "info" : "ReturnStatement[27828-27837]:ReturnStatement[27828-27837]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[27849-27856]:Modifier[27849-27856]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[27857-27863]:Modifier[27857-27863]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[27864-27867]:PrimitiveType[27864-27867]"
  }, {
    "left" : "maxDiffCategory",
    "right" : "maxDiffCategory",
    "info" : "SimpleName[27868-27883]:SimpleName[27868-27883]"
  }, {
    "left" : "int category",
    "right" : "int category",
    "info" : "SingleVariableDeclaration[27884-27896]:SingleVariableDeclaration[27884-27896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27898-28020]:Block[27898-28020]"
  }, {
    "left" : "if (category == 0 || category == 1)",
    "right" : "if (category == 0 || category == 1)",
    "info" : "IfStatement[27908-27996]:IfStatement[27908-27996]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[27944-27953]:ReturnStatement[27944-27953]"
  }, {
    "left" : "if (category == 2)",
    "right" : "if (category == 2)",
    "info" : "IfStatement[27967-27996]:IfStatement[27967-27996]"
  }, {
    "left" : "return 10;",
    "right" : "return 10;",
    "info" : "ReturnStatement[27986-27996]:ReturnStatement[27986-27996]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[28005-28014]:ReturnStatement[28005-28014]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28699-28705]:Modifier[28699-28705]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[28706-28712]:Modifier[28706-28712]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[28713-28716]:PrimitiveType[28713-28716]"
  }, {
    "left" : "maxLengthSequence",
    "right" : "maxLengthSequence",
    "info" : "SimpleName[28717-28734]:SimpleName[28717-28734]"
  }, {
    "left" : "String string",
    "right" : "String string",
    "info" : "SingleVariableDeclaration[28735-28748]:SingleVariableDeclaration[28735-28748]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28750-30230]:Block[28750-30230]"
  }, {
    "left" : "if (string.length() == 0)",
    "right" : "if (string.length() == 0)",
    "info" : "IfStatement[28760-28795]:IfStatement[28760-28795]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[28786-28795]:ReturnStatement[28786-28795]"
  }, {
    "left" : "char previousChar = string.charAt(0);",
    "right" : "char previousChar = string.charAt(0);",
    "info" : "VariableDeclarationStatement[28804-28841]:VariableDeclarationStatement[28804-28841]"
  }, {
    "left" : "int category = categoryChar(previousChar);",
    "right" : "int category = categoryChar(previousChar);",
    "info" : "VariableDeclarationStatement[28850-28892]:VariableDeclarationStatement[28850-28892]"
  }, {
    "left" : "int diff = 0;",
    "right" : "int diff = 0;",
    "info" : "VariableDeclarationStatement[28936-28949]:VariableDeclarationStatement[28936-28949]"
  }, {
    "left" : "boolean hasDiff = false;",
    "right" : "boolean hasDiff = false;",
    "info" : "VariableDeclarationStatement[29006-29030]:VariableDeclarationStatement[29006-29030]"
  }, {
    "left" : "int maxLength = 0;",
    "right" : "int maxLength = 0;",
    "info" : "VariableDeclarationStatement[29082-29100]:VariableDeclarationStatement[29082-29100]"
  }, {
    "left" : "int startSequence = 0;",
    "right" : "int startSequence = 0;",
    "info" : "VariableDeclarationStatement[29154-29176]:VariableDeclarationStatement[29154-29176]"
  }, {
    "left" : "for (int current = 1; current < string.length(); current++)",
    "right" : "for (int current = 1; current < string.length(); current++)",
    "info" : "ForStatement[29222-30124]:ForStatement[29222-30124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29282-30124]:Block[29282-30124]"
  }, {
    "left" : "char currentChar = string.charAt(current);",
    "right" : "char currentChar = string.charAt(current);",
    "info" : "VariableDeclarationStatement[29296-29338]:VariableDeclarationStatement[29296-29338]"
  }, {
    "left" : "int categoryCurrent = categoryChar(currentChar);",
    "right" : "int categoryCurrent = categoryChar(currentChar);",
    "info" : "VariableDeclarationStatement[29351-29399]:VariableDeclarationStatement[29351-29399]"
  }, {
    "left" : "int currentDiff = (int) currentChar - (int) previousChar;",
    "right" : "int currentDiff = (int) currentChar - (int) previousChar;",
    "info" : "VariableDeclarationStatement[29412-29469]:VariableDeclarationStatement[29412-29469]"
  }, {
    "left" : "if (categoryCurrent != category || Math.abs(currentDiff) > maxDiffCategory(category))",
    "right" : "if (categoryCurrent != category || Math.abs(currentDiff) > maxDiffCategory(category))",
    "info" : "IfStatement[29482-30074]:IfStatement[29482-30074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29568-29775]:Block[29568-29775]"
  }, {
    "left" : "maxLength = Math.max(maxLength, current - startSequence);",
    "right" : "maxLength = Math.max(maxLength, current - startSequence);",
    "info" : "ExpressionStatement[29586-29643]:ExpressionStatement[29586-29643]"
  }, {
    "left" : "startSequence = current;",
    "right" : "startSequence = current;",
    "info" : "ExpressionStatement[29660-29684]:ExpressionStatement[29660-29684]"
  }, {
    "left" : "hasDiff = false;",
    "right" : "hasDiff = false;",
    "info" : "ExpressionStatement[29701-29717]:ExpressionStatement[29701-29717]"
  }, {
    "left" : "category = categoryCurrent;",
    "right" : "category = categoryCurrent;",
    "info" : "ExpressionStatement[29734-29761]:ExpressionStatement[29734-29761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29793-30074]:Block[29793-30074]"
  }, {
    "left" : "if(hasDiff && currentDiff != diff)",
    "right" : "if(hasDiff && currentDiff != diff)",
    "info" : "IfStatement[29811-29992]:IfStatement[29811-29992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29846-29992]:Block[29846-29992]"
  }, {
    "left" : "maxLength = Math.max(maxLength, current - startSequence);",
    "right" : "maxLength = Math.max(maxLength, current - startSequence);",
    "info" : "ExpressionStatement[29868-29925]:ExpressionStatement[29868-29925]"
  }, {
    "left" : "startSequence = current - 1;",
    "right" : "startSequence = current - 1;",
    "info" : "ExpressionStatement[29946-29974]:ExpressionStatement[29946-29974]"
  }, {
    "left" : "diff = currentDiff;",
    "right" : "diff = currentDiff;",
    "info" : "ExpressionStatement[30009-30028]:ExpressionStatement[30009-30028]"
  }, {
    "left" : "hasDiff = true;",
    "right" : "hasDiff = true;",
    "info" : "ExpressionStatement[30045-30060]:ExpressionStatement[30045-30060]"
  }, {
    "left" : "previousChar = currentChar;",
    "right" : "previousChar = currentChar;",
    "info" : "ExpressionStatement[30087-30114]:ExpressionStatement[30087-30114]"
  }, {
    "left" : "maxLength = Math.max(maxLength, string.length() - startSequence);",
    "right" : "maxLength = Math.max(maxLength, string.length() - startSequence);",
    "info" : "ExpressionStatement[30133-30198]:ExpressionStatement[30133-30198]"
  }, {
    "left" : "return maxLength;",
    "right" : "return maxLength;",
    "info" : "ReturnStatement[30207-30224]:ReturnStatement[30207-30224]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[30296-30303]:Modifier[30296-30303]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30304-30308]:PrimitiveType[30304-30308]"
  }, {
    "left" : "updateEncryptionPassword",
    "right" : "updateEncryptionPassword",
    "info" : "SimpleName[30309-30333]:SimpleName[30309-30333]"
  }, {
    "left" : "final int type",
    "right" : "final int type",
    "info" : "SingleVariableDeclaration[30334-30348]:SingleVariableDeclaration[30334-30348]"
  }, {
    "left" : "final String password",
    "right" : "final String password",
    "info" : "SingleVariableDeclaration[30350-30371]:SingleVariableDeclaration[30350-30371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30373-31187]:Block[30373-31187]"
  }, {
    "left" : "if (!isDeviceEncryptionEnabled())",
    "right" : "if (!isDeviceEncryptionEnabled())",
    "info" : "IfStatement[30383-30448]:IfStatement[30383-30448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30417-30448]:Block[30417-30448]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[30431-30438]:ReturnStatement[30431-30438]"
  }, {
    "left" : "final IBinder service = ServiceManager.getService(\"mount\");",
    "right" : "final IBinder service = ServiceManager.getService(\"mount\");",
    "info" : "VariableDeclarationStatement[30457-30516]:VariableDeclarationStatement[30457-30516]"
  }, {
    "left" : "if (service == null)",
    "right" : "if (service == null)",
    "info" : "IfStatement[30525-30671]:IfStatement[30525-30671]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30546-30671]:Block[30546-30671]"
  }, {
    "left" : "Log.e(TAG, \"Could not find the mount service to update the encryption password\");",
    "right" : "Log.e(TAG, \"Could not find the mount service to update the encryption password\");",
    "info" : "ExpressionStatement[30560-30641]:ExpressionStatement[30560-30641]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[30654-30661]:ReturnStatement[30654-30661]"
  }, {
    "left" : "new AsyncTask<Void, Void, Void>() {\n            @Override\n            protected Void doInBackground(Void... dummy) {\n                IMountService mountService = IMountService.Stub.asInterface(service);\n                try {\n                    mountService.changeEncryptionPassword(type, password);\n                } catch (RemoteException e) {\n                    Log.e(TAG, \"Error changing encryption password\", e);\n                }\n                return null;\n            }\n        }.execute();",
    "right" : "new AsyncTask<Void, Void, Void>() {\n            @Override\n            protected Void doInBackground(Void... dummy) {\n                IMountService mountService = IMountService.Stub.asInterface(service);\n                try {\n                    mountService.changeEncryptionPassword(type, password);\n                } catch (RemoteException e) {\n                    Log.e(TAG, \"Error changing encryption password\", e);\n                }\n                return null;\n            }\n        }.execute();",
    "info" : "ExpressionStatement[30681-31181]:ExpressionStatement[30681-31181]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[30729-30738]:MarkerAnnotation[30729-30738]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[30751-30760]:Modifier[30751-30760]"
  }, {
    "left" : "Void",
    "right" : "Void",
    "info" : "SimpleType[30761-30765]:SimpleType[30761-30765]"
  }, {
    "left" : "doInBackground",
    "right" : "doInBackground",
    "info" : "SimpleName[30766-30780]:SimpleName[30766-30780]"
  }, {
    "left" : "Void... dummy",
    "right" : "Void... dummy",
    "info" : "SingleVariableDeclaration[30781-30794]:SingleVariableDeclaration[30781-30794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30796-31160]:Block[30796-31160]"
  }, {
    "left" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "right" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "info" : "VariableDeclarationStatement[30814-30883]:VariableDeclarationStatement[30814-30883]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[30900-31117]:TryStatement[30900-31117]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30904-30998]:Block[30904-30998]"
  }, {
    "left" : "mountService.changeEncryptionPassword(type, password);",
    "right" : "mountService.changeEncryptionPassword(type, password);",
    "info" : "ExpressionStatement[30926-30980]:ExpressionStatement[30926-30980]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31025-31117]:Block[31025-31117]"
  }, {
    "left" : "Log.e(TAG, \"Error changing encryption password\", e);",
    "right" : "Log.e(TAG, \"Error changing encryption password\", e);",
    "info" : "ExpressionStatement[31047-31099]:ExpressionStatement[31047-31099]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[31134-31146]:ReturnStatement[31134-31146]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31519-31525]:Modifier[31519-31525]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[31526-31530]:PrimitiveType[31526-31530]"
  }, {
    "left" : "saveLockPassword",
    "right" : "saveLockPassword",
    "info" : "SimpleName[31531-31547]:SimpleName[31531-31547]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[31548-31563]:SingleVariableDeclaration[31548-31563]"
  }, {
    "left" : "int quality",
    "right" : "int quality",
    "info" : "SingleVariableDeclaration[31565-31576]:SingleVariableDeclaration[31565-31576]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31578-31642]:Block[31578-31642]"
  }, {
    "left" : "this.saveLockPassword(password, quality, false);",
    "right" : "this.saveLockPassword(password, quality, false);",
    "info" : "ExpressionStatement[31588-31636]:ExpressionStatement[31588-31636]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32049-32055]:Modifier[32049-32055]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[32056-32060]:PrimitiveType[32056-32060]"
  }, {
    "left" : "saveLockPassword",
    "right" : "saveLockPassword",
    "info" : "SimpleName[32061-32077]:SimpleName[32061-32077]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[32078-32093]:SingleVariableDeclaration[32078-32093]"
  }, {
    "left" : "int quality",
    "right" : "int quality",
    "info" : "SingleVariableDeclaration[32095-32106]:SingleVariableDeclaration[32095-32106]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[32108-32126]:SingleVariableDeclaration[32108-32126]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32128-32199]:Block[32128-32199]"
  }, {
    "left" : "saveLockPassword(password, quality, isFallback, false);",
    "right" : "saveLockPassword(password, quality, isFallback, false);",
    "info" : "ExpressionStatement[32138-32193]:ExpressionStatement[32138-32193]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32690-32696]:Modifier[32690-32696]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[32697-32701]:PrimitiveType[32697-32701]"
  }, {
    "left" : "saveLockPassword",
    "right" : "saveLockPassword",
    "info" : "SimpleName[32702-32718]:SimpleName[32702-32718]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[32719-32734]:SingleVariableDeclaration[32719-32734]"
  }, {
    "left" : "int quality",
    "right" : "int quality",
    "info" : "SingleVariableDeclaration[32736-32747]:SingleVariableDeclaration[32736-32747]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[32749-32767]:SingleVariableDeclaration[32749-32767]"
  }, {
    "left" : "boolean isFingerprintFallback",
    "right" : "boolean isFingerprintFallback",
    "info" : "SingleVariableDeclaration[32802-32831]:SingleVariableDeclaration[32802-32831]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32833-32965]:Block[32833-32965]"
  }, {
    "left" : "saveLockPassword(password, quality, isFallback, isFingerprintFallback,\n                getCurrentOrCallingUserId());",
    "right" : "saveLockPassword(password, quality, isFallback, isFingerprintFallback,\n                getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[32843-32959]:ExpressionStatement[32843-32959]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33447-33453]:Modifier[33447-33453]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[33454-33458]:PrimitiveType[33454-33458]"
  }, {
    "left" : "saveLockPassword",
    "right" : "saveLockPassword",
    "info" : "SimpleName[33459-33475]:SimpleName[33459-33475]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[33476-33491]:SingleVariableDeclaration[33476-33491]"
  }, {
    "left" : "int quality",
    "right" : "int quality",
    "info" : "SingleVariableDeclaration[33493-33504]:SingleVariableDeclaration[33493-33504]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[33506-33524]:SingleVariableDeclaration[33506-33524]"
  }, {
    "left" : "boolean isFingerprintPassword",
    "right" : "boolean isFingerprintPassword",
    "info" : "SingleVariableDeclaration[33526-33555]:SingleVariableDeclaration[33526-33555]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[33557-33571]:SingleVariableDeclaration[33557-33571]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33573-39199]:Block[33573-39199]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[33583-39193]:TryStatement[33583-39193]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33587-39064]:Block[33587-39064]"
  }, {
    "left" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "right" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "info" : "VariableDeclarationStatement[33601-33652]:VariableDeclarationStatement[33601-33652]"
  }, {
    "left" : "if (!TextUtils.isEmpty(password))",
    "right" : "if (!TextUtils.isEmpty(password))",
    "info" : "IfStatement[33665-39005]:IfStatement[33665-39005]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33699-38477]:Block[33699-38477]"
  }, {
    "left" : "getLockSettings().setLockPassword(password, userHandle);",
    "right" : "getLockSettings().setLockPassword(password, userHandle);",
    "info" : "ExpressionStatement[33717-33773]:ExpressionStatement[33717-33773]"
  }, {
    "left" : "int computedQuality = computePasswordQuality(password);",
    "right" : "int computedQuality = computePasswordQuality(password);",
    "info" : "VariableDeclarationStatement[33790-33845]:VariableDeclarationStatement[33790-33845]"
  }, {
    "left" : "if (userHandle == UserHandle.USER_OWNER\n                        && LockPatternUtils.isDeviceEncryptionEnabled())",
    "right" : "if (userHandle == UserHandle.USER_OWNER\n                        && LockPatternUtils.isDeviceEncryptionEnabled())",
    "info" : "IfStatement[33921-34741]:IfStatement[33921-34741]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34034-34741]:Block[34034-34741]"
  }, {
    "left" : "if (!isCredentialRequiredToDecrypt(true))",
    "right" : "if (!isCredentialRequiredToDecrypt(true))",
    "info" : "IfStatement[34056-34723]:IfStatement[34056-34723]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34098-34172]:Block[34098-34172]"
  }, {
    "left" : "clearEncryptionPassword();",
    "right" : "clearEncryptionPassword();",
    "info" : "ExpressionStatement[34124-34150]:ExpressionStatement[34124-34150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34178-34723]:Block[34178-34723]"
  }, {
    "left" : "boolean numeric = computedQuality\n                                == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;",
    "right" : "boolean numeric = computedQuality\n                                == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;",
    "info" : "VariableDeclarationStatement[34204-34318]:VariableDeclarationStatement[34204-34318]"
  }, {
    "left" : "boolean numericComplex = computedQuality\n                                == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "right" : "boolean numericComplex = computedQuality\n                                == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "info" : "VariableDeclarationStatement[34343-34472]:VariableDeclarationStatement[34343-34472]"
  }, {
    "left" : "int type = numeric || numericComplex ? StorageManager.CRYPT_TYPE_PIN\n                                : StorageManager.CRYPT_TYPE_PASSWORD;",
    "right" : "int type = numeric || numericComplex ? StorageManager.CRYPT_TYPE_PIN\n                                : StorageManager.CRYPT_TYPE_PASSWORD;",
    "info" : "VariableDeclarationStatement[34497-34635]:VariableDeclarationStatement[34497-34635]"
  }, {
    "left" : "updateEncryptionPassword(type, password);",
    "right" : "updateEncryptionPassword(type, password);",
    "info" : "ExpressionStatement[34660-34701]:ExpressionStatement[34660-34701]"
  }, {
    "left" : "if (!isFallback)",
    "right" : "if (!isFallback)",
    "info" : "IfStatement[34759-37303]:IfStatement[34759-37303]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34776-36590]:Block[34776-36590]"
  }, {
    "left" : "deleteGallery(userHandle);",
    "right" : "deleteGallery(userHandle);",
    "info" : "ExpressionStatement[34798-34824]:ExpressionStatement[34798-34824]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY, Math.max(quality, computedQuality), userHandle);",
    "right" : "setLong(PASSWORD_TYPE_KEY, Math.max(quality, computedQuality), userHandle);",
    "info" : "ExpressionStatement[34845-34920]:ExpressionStatement[34845-34920]"
  }, {
    "left" : "if (computedQuality != DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED)",
    "right" : "if (computedQuality != DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED)",
    "info" : "IfStatement[34941-36572]:IfStatement[34941-36572]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35014-36286]:Block[35014-36286]"
  }, {
    "left" : "int letters = 0;",
    "right" : "int letters = 0;",
    "info" : "VariableDeclarationStatement[35040-35056]:VariableDeclarationStatement[35040-35056]"
  }, {
    "left" : "int uppercase = 0;",
    "right" : "int uppercase = 0;",
    "info" : "VariableDeclarationStatement[35081-35099]:VariableDeclarationStatement[35081-35099]"
  }, {
    "left" : "int lowercase = 0;",
    "right" : "int lowercase = 0;",
    "info" : "VariableDeclarationStatement[35124-35142]:VariableDeclarationStatement[35124-35142]"
  }, {
    "left" : "int numbers = 0;",
    "right" : "int numbers = 0;",
    "info" : "VariableDeclarationStatement[35167-35183]:VariableDeclarationStatement[35167-35183]"
  }, {
    "left" : "int symbols = 0;",
    "right" : "int symbols = 0;",
    "info" : "VariableDeclarationStatement[35208-35224]:VariableDeclarationStatement[35208-35224]"
  }, {
    "left" : "int nonletter = 0;",
    "right" : "int nonletter = 0;",
    "info" : "VariableDeclarationStatement[35249-35267]:VariableDeclarationStatement[35249-35267]"
  }, {
    "left" : "for (int i = 0; i < password.length(); i++)",
    "right" : "for (int i = 0; i < password.length(); i++)",
    "info" : "ForStatement[35292-36021]:ForStatement[35292-36021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35336-36021]:Block[35336-36021]"
  }, {
    "left" : "char c = password.charAt(i);",
    "right" : "char c = password.charAt(i);",
    "info" : "VariableDeclarationStatement[35366-35394]:VariableDeclarationStatement[35366-35394]"
  }, {
    "left" : "if (c >= 'A' && c <= 'Z')",
    "right" : "if (c >= 'A' && c <= 'Z')",
    "info" : "IfStatement[35423-35995]:IfStatement[35423-35995]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35449-35568]:Block[35449-35568]"
  }, {
    "left" : "letters++;",
    "right" : "letters++;",
    "info" : "ExpressionStatement[35483-35493]:ExpressionStatement[35483-35493]"
  }, {
    "left" : "uppercase++;",
    "right" : "uppercase++;",
    "info" : "ExpressionStatement[35526-35538]:ExpressionStatement[35526-35538]"
  }, {
    "left" : "if (c >= 'a' && c <= 'z')",
    "right" : "if (c >= 'a' && c <= 'z')",
    "info" : "IfStatement[35574-35995]:IfStatement[35574-35995]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35600-35719]:Block[35600-35719]"
  }, {
    "left" : "letters++;",
    "right" : "letters++;",
    "info" : "ExpressionStatement[35634-35644]:ExpressionStatement[35634-35644]"
  }, {
    "left" : "lowercase++;",
    "right" : "lowercase++;",
    "info" : "ExpressionStatement[35677-35689]:ExpressionStatement[35677-35689]"
  }, {
    "left" : "if (c >= '0' && c <= '9')",
    "right" : "if (c >= '0' && c <= '9')",
    "info" : "IfStatement[35725-35995]:IfStatement[35725-35995]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35751-35870]:Block[35751-35870]"
  }, {
    "left" : "numbers++;",
    "right" : "numbers++;",
    "info" : "ExpressionStatement[35785-35795]:ExpressionStatement[35785-35795]"
  }, {
    "left" : "nonletter++;",
    "right" : "nonletter++;",
    "info" : "ExpressionStatement[35828-35840]:ExpressionStatement[35828-35840]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35876-35995]:Block[35876-35995]"
  }, {
    "left" : "symbols++;",
    "right" : "symbols++;",
    "info" : "ExpressionStatement[35910-35920]:ExpressionStatement[35910-35920]"
  }, {
    "left" : "nonletter++;",
    "right" : "nonletter++;",
    "info" : "ExpressionStatement[35953-35965]:ExpressionStatement[35953-35965]"
  }, {
    "left" : "dpm.setActivePasswordState(Math.max(quality, computedQuality),\n                                password.length(), letters, uppercase, lowercase,\n                                numbers, symbols, nonletter, userHandle);",
    "right" : "dpm.setActivePasswordState(Math.max(quality, computedQuality),\n                                password.length(), letters, uppercase, lowercase,\n                                numbers, symbols, nonletter, userHandle);",
    "info" : "ExpressionStatement[36046-36264]:ExpressionStatement[36046-36264]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36292-36572]:Block[36292-36572]"
  }, {
    "left" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                                0, 0, 0, 0, 0, 0, 0, userHandle);",
    "right" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                                0, 0, 0, 0, 0, 0, 0, userHandle);",
    "info" : "ExpressionStatement[36375-36550]:ExpressionStatement[36375-36550]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36596-37303]:Block[36596-37303]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY, Math.max(quality, computedQuality),\n                            userHandle);",
    "right" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY, Math.max(quality, computedQuality),\n                            userHandle);",
    "info" : "ExpressionStatement[36618-36731]:ExpressionStatement[36618-36731]"
  }, {
    "left" : "if (!isFingerprintPassword)",
    "right" : "if (!isFingerprintPassword)",
    "info" : "IfStatement[36752-37285]:IfStatement[36752-37285]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36780-37285]:Block[36780-37285]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY,\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userHandle);",
    "right" : "setLong(PASSWORD_TYPE_KEY,\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userHandle);",
    "info" : "ExpressionStatement[36879-37003]:ExpressionStatement[36879-37003]"
  }, {
    "left" : "finishBiometricWeak(userHandle);",
    "right" : "finishBiometricWeak(userHandle);",
    "info" : "ExpressionStatement[37028-37060]:ExpressionStatement[37028-37060]"
  }, {
    "left" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                                0, 0, 0, 0, 0, 0, 0, userHandle);",
    "right" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                                0, 0, 0, 0, 0, 0, 0, userHandle);",
    "info" : "ExpressionStatement[37085-37263]:ExpressionStatement[37085-37263]"
  }, {
    "left" : "String passwordHistory = getString(PASSWORD_HISTORY_KEY, userHandle);",
    "right" : "String passwordHistory = getString(PASSWORD_HISTORY_KEY, userHandle);",
    "info" : "VariableDeclarationStatement[37485-37554]:VariableDeclarationStatement[37485-37554]"
  }, {
    "left" : "if (passwordHistory == null)",
    "right" : "if (passwordHistory == null)",
    "info" : "IfStatement[37571-37661]:IfStatement[37571-37661]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37600-37661]:Block[37600-37661]"
  }, {
    "left" : "passwordHistory = \"\";",
    "right" : "passwordHistory = \"\";",
    "info" : "ExpressionStatement[37622-37643]:ExpressionStatement[37622-37643]"
  }, {
    "left" : "int passwordHistoryLength = getRequestedPasswordHistoryLength();",
    "right" : "int passwordHistoryLength = getRequestedPasswordHistoryLength();",
    "info" : "VariableDeclarationStatement[37678-37742]:VariableDeclarationStatement[37678-37742]"
  }, {
    "left" : "if (passwordHistoryLength == 0)",
    "right" : "if (passwordHistoryLength == 0)",
    "info" : "IfStatement[37759-38385]:IfStatement[37759-38385]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37791-37852]:Block[37791-37852]"
  }, {
    "left" : "passwordHistory = \"\";",
    "right" : "passwordHistory = \"\";",
    "info" : "ExpressionStatement[37813-37834]:ExpressionStatement[37813-37834]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37858-38385]:Block[37858-38385]"
  }, {
    "left" : "byte[] hash = passwordToHash(password, userHandle);",
    "right" : "byte[] hash = passwordToHash(password, userHandle);",
    "info" : "VariableDeclarationStatement[37880-37931]:VariableDeclarationStatement[37880-37931]"
  }, {
    "left" : "passwordHistory = new String(hash) + \",\" + passwordHistory;",
    "right" : "passwordHistory = new String(hash) + \",\" + passwordHistory;",
    "info" : "ExpressionStatement[37952-38011]:ExpressionStatement[37952-38011]"
  }, {
    "left" : "passwordHistory = passwordHistory.substring(0, Math.min(hash.length\n                            * passwordHistoryLength + passwordHistoryLength - 1, passwordHistory\n                            .length()));",
    "right" : "passwordHistory = passwordHistory.substring(0, Math.min(hash.length\n                            * passwordHistoryLength + passwordHistoryLength - 1, passwordHistory\n                            .length()));",
    "info" : "ExpressionStatement[38162-38367]:ExpressionStatement[38162-38367]"
  }, {
    "left" : "setString(PASSWORD_HISTORY_KEY, passwordHistory, userHandle);",
    "right" : "setString(PASSWORD_HISTORY_KEY, passwordHistory, userHandle);",
    "info" : "ExpressionStatement[38402-38463]:ExpressionStatement[38402-38463]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38483-39005]:Block[38483-39005]"
  }, {
    "left" : "getLockSettings().setLockPassword(null, userHandle);",
    "right" : "getLockSettings().setLockPassword(null, userHandle);",
    "info" : "ExpressionStatement[38535-38587]:ExpressionStatement[38535-38587]"
  }, {
    "left" : "if (userHandle == UserHandle.USER_OWNER)",
    "right" : "if (userHandle == UserHandle.USER_OWNER)",
    "info" : "IfStatement[38604-38814]:IfStatement[38604-38814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38645-38814]:Block[38645-38814]"
  }, {
    "left" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_DEFAULT, null);",
    "right" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_DEFAULT, null);",
    "info" : "ExpressionStatement[38730-38796]:ExpressionStatement[38730-38796]"
  }, {
    "left" : "dpm.setActivePasswordState(\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, 0, 0, 0, 0, 0, 0, 0,\n                        userHandle);",
    "right" : "dpm.setActivePasswordState(\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, 0, 0, 0, 0, 0, 0, 0,\n                        userHandle);",
    "info" : "ExpressionStatement[38832-38991]:ExpressionStatement[38832-38991]"
  }, {
    "left" : "onAfterChangingPassword(userHandle);",
    "right" : "onAfterChangingPassword(userHandle);",
    "info" : "ExpressionStatement[39018-39054]:ExpressionStatement[39018-39054]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39092-39193]:Block[39092-39193]"
  }, {
    "left" : "Log.e(TAG, \"Unable to save lock password \" + re);",
    "right" : "Log.e(TAG, \"Unable to save lock password \" + re);",
    "info" : "ExpressionStatement[39134-39183]:ExpressionStatement[39134-39183]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39321-39327]:Modifier[39321-39327]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[39328-39334]:Modifier[39328-39334]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[39335-39342]:PrimitiveType[39335-39342]"
  }, {
    "left" : "isDeviceEncrypted",
    "right" : "isDeviceEncrypted",
    "info" : "SimpleName[39343-39360]:SimpleName[39343-39360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39363-39822]:Block[39363-39822]"
  }, {
    "left" : "IMountService mountService = IMountService.Stub.asInterface(\n                ServiceManager.getService(\"mount\"));",
    "right" : "IMountService mountService = IMountService.Stub.asInterface(\n                ServiceManager.getService(\"mount\"));",
    "info" : "VariableDeclarationStatement[39373-39486]:VariableDeclarationStatement[39373-39486]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[39495-39795]:TryStatement[39495-39795]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39499-39694]:Block[39499-39694]"
  }, {
    "left" : "return mountService.getEncryptionState() != IMountService.ENCRYPTION_STATE_NONE\n                    && mountService.getPasswordType() != StorageManager.CRYPT_TYPE_DEFAULT;",
    "right" : "return mountService.getEncryptionState() != IMountService.ENCRYPTION_STATE_NONE\n                    && mountService.getPasswordType() != StorageManager.CRYPT_TYPE_DEFAULT;",
    "info" : "ReturnStatement[39513-39684]:ReturnStatement[39513-39684]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39722-39795]:Block[39722-39795]"
  }, {
    "left" : "Log.e(TAG, \"Error getting encryption state\", re);",
    "right" : "Log.e(TAG, \"Error getting encryption state\", re);",
    "info" : "ExpressionStatement[39736-39785]:ExpressionStatement[39736-39785]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[39804-39816]:ReturnStatement[39804-39816]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40112-40118]:Modifier[40112-40118]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[40119-40125]:Modifier[40119-40125]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[40126-40133]:PrimitiveType[40126-40133]"
  }, {
    "left" : "isDeviceEncryptionEnabled",
    "right" : "isDeviceEncryptionEnabled",
    "info" : "SimpleName[40134-40159]:SimpleName[40134-40159]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40162-40308]:Block[40162-40308]"
  }, {
    "left" : "final String status = SystemProperties.get(\"ro.crypto.state\", \"unsupported\");",
    "right" : "final String status = SystemProperties.get(\"ro.crypto.state\", \"unsupported\");",
    "info" : "VariableDeclarationStatement[40172-40249]:VariableDeclarationStatement[40172-40249]"
  }, {
    "left" : "return \"encrypted\".equalsIgnoreCase(status);",
    "right" : "return \"encrypted\".equalsIgnoreCase(status);",
    "info" : "ReturnStatement[40258-40302]:ReturnStatement[40258-40302]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40369-40375]:Modifier[40369-40375]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[40376-40380]:PrimitiveType[40376-40380]"
  }, {
    "left" : "clearEncryptionPassword",
    "right" : "clearEncryptionPassword",
    "info" : "SimpleName[40381-40404]:SimpleName[40381-40404]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40407-40489]:Block[40407-40489]"
  }, {
    "left" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_DEFAULT, null);",
    "right" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_DEFAULT, null);",
    "info" : "ExpressionStatement[40417-40483]:ExpressionStatement[40417-40483]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40685-40691]:Modifier[40685-40691]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[40692-40695]:PrimitiveType[40692-40695]"
  }, {
    "left" : "getKeyguardStoredPasswordQuality",
    "right" : "getKeyguardStoredPasswordQuality",
    "info" : "SimpleName[40696-40728]:SimpleName[40696-40728]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40731-40816]:Block[40731-40816]"
  }, {
    "left" : "return getKeyguardStoredPasswordQuality(getCurrentOrCallingUserId());",
    "right" : "return getKeyguardStoredPasswordQuality(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[40741-40810]:ReturnStatement[40741-40810]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41027-41033]:Modifier[41027-41033]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[41034-41037]:PrimitiveType[41034-41037]"
  }, {
    "left" : "getKeyguardStoredPasswordQuality",
    "right" : "getKeyguardStoredPasswordQuality",
    "info" : "SimpleName[41038-41070]:SimpleName[41038-41070]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[41071-41085]:SingleVariableDeclaration[41071-41085]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41087-41644]:Block[41087-41644]"
  }, {
    "left" : "int quality = (int) getLong(PASSWORD_TYPE_KEY,\n                DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "right" : "int quality = (int) getLong(PASSWORD_TYPE_KEY,\n                DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "info" : "VariableDeclarationStatement[41097-41222]:VariableDeclarationStatement[41097-41222]"
  }, {
    "left" : "if (quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK)",
    "right" : "if (quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK)",
    "info" : "IfStatement[41383-41614]:IfStatement[41383-41614]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41451-41614]:Block[41451-41614]"
  }, {
    "left" : "quality = (int) getLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "right" : "quality = (int) getLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "info" : "ExpressionStatement[41465-41604]:ExpressionStatement[41465-41604]"
  }, {
    "left" : "return quality;",
    "right" : "return quality;",
    "info" : "ReturnStatement[41623-41638]:ReturnStatement[41623-41638]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41736-41742]:Modifier[41736-41742]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[41743-41750]:PrimitiveType[41743-41750]"
  }, {
    "left" : "usingBiometricWeak",
    "right" : "usingBiometricWeak",
    "info" : "SimpleName[41751-41769]:SimpleName[41751-41769]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41772-41843]:Block[41772-41843]"
  }, {
    "left" : "return usingBiometricWeak(getCurrentOrCallingUserId());",
    "right" : "return usingBiometricWeak(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[41782-41837]:ReturnStatement[41782-41837]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41935-41941]:Modifier[41935-41941]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[41942-41949]:PrimitiveType[41942-41949]"
  }, {
    "left" : "usingBiometricWeak",
    "right" : "usingBiometricWeak",
    "info" : "SimpleName[41950-41968]:SimpleName[41950-41968]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[41969-41979]:SingleVariableDeclaration[41969-41979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41981-42198]:Block[41981-42198]"
  }, {
    "left" : "int quality = (int) getLong(\n                PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId);",
    "right" : "int quality = (int) getLong(\n                PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId);",
    "info" : "VariableDeclarationStatement[41991-42113]:VariableDeclarationStatement[41991-42113]"
  }, {
    "left" : "return quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;",
    "right" : "return quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;",
    "info" : "ReturnStatement[42122-42192]:ReturnStatement[42122-42192]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42300-42306]:Modifier[42300-42306]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[42307-42314]:PrimitiveType[42307-42314]"
  }, {
    "left" : "usingFingerprint",
    "right" : "usingFingerprint",
    "info" : "SimpleName[42315-42331]:SimpleName[42315-42331]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42334-42403]:Block[42334-42403]"
  }, {
    "left" : "return usingFingerprint(getCurrentOrCallingUserId());",
    "right" : "return usingFingerprint(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[42344-42397]:ReturnStatement[42344-42397]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42505-42511]:Modifier[42505-42511]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[42512-42519]:PrimitiveType[42512-42519]"
  }, {
    "left" : "usingFingerprint",
    "right" : "usingFingerprint",
    "info" : "SimpleName[42520-42536]:SimpleName[42520-42536]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[42537-42547]:SingleVariableDeclaration[42537-42547]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42549-42919]:Block[42549-42919]"
  }, {
    "left" : "int quality = (int) getLong(\n                PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId);",
    "right" : "int quality = (int) getLong(\n                PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId);",
    "info" : "VariableDeclarationStatement[42559-42681]:VariableDeclarationStatement[42559-42681]"
  }, {
    "left" : "int exactType = (int) getLong(PASSWORD_BIOMETRIC_EXACT_TYPE, BIOMETRIC_WEAK_UNKNOWN);",
    "right" : "int exactType = (int) getLong(PASSWORD_BIOMETRIC_EXACT_TYPE, BIOMETRIC_WEAK_UNKNOWN);",
    "info" : "VariableDeclarationStatement[42690-42775]:VariableDeclarationStatement[42690-42775]"
  }, {
    "left" : "return quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK &&\n                exactType == BIOMETRIC_WEAK_FINGERPRINT;",
    "right" : "return quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK &&\n                exactType == BIOMETRIC_WEAK_FINGERPRINT;",
    "info" : "ReturnStatement[42784-42913]:ReturnStatement[42784-42913]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42954-42960]:Modifier[42954-42960]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[42961-42965]:PrimitiveType[42961-42965]"
  }, {
    "left" : "setUseFingerprint",
    "right" : "setUseFingerprint",
    "info" : "SimpleName[42966-42983]:SimpleName[42966-42983]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42986-43038]:Block[42986-43038]"
  }, {
    "left" : "setUseFingerprint(getCurrentUser());",
    "right" : "setUseFingerprint(getCurrentUser());",
    "info" : "ExpressionStatement[42996-43032]:ExpressionStatement[42996-43032]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43073-43079]:Modifier[43073-43079]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[43080-43084]:PrimitiveType[43080-43084]"
  }, {
    "left" : "setUseFingerprint",
    "right" : "setUseFingerprint",
    "info" : "SimpleName[43085-43102]:SimpleName[43085-43102]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[43103-43113]:SingleVariableDeclaration[43103-43113]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43115-43497]:Block[43115-43497]"
  }, {
    "left" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "right" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "info" : "VariableDeclarationStatement[43125-43176]:VariableDeclarationStatement[43125-43176]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userId);",
    "right" : "setLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userId);",
    "info" : "ExpressionStatement[43185-43273]:ExpressionStatement[43185-43273]"
  }, {
    "left" : "setLong(PASSWORD_BIOMETRIC_EXACT_TYPE, BIOMETRIC_WEAK_FINGERPRINT, userId);",
    "right" : "setLong(PASSWORD_BIOMETRIC_EXACT_TYPE, BIOMETRIC_WEAK_FINGERPRINT, userId);",
    "info" : "ExpressionStatement[43282-43357]:ExpressionStatement[43282-43357]"
  }, {
    "left" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                0, 0, 0, 0, 0, 0, 0, userId);",
    "right" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                0, 0, 0, 0, 0, 0, 0, userId);",
    "info" : "ExpressionStatement[43366-43491]:ExpressionStatement[43366-43491]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43580-43586]:Modifier[43580-43586]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[43587-43594]:PrimitiveType[43587-43594]"
  }, {
    "left" : "isFingerprintInstalled",
    "right" : "isFingerprintInstalled",
    "info" : "SimpleName[43595-43617]:SimpleName[43595-43617]"
  }, {
    "left" : "Context context",
    "right" : "Context context",
    "info" : "SingleVariableDeclaration[43618-43633]:SingleVariableDeclaration[43618-43633]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43635-43739]:Block[43635-43739]"
  }, {
    "left" : "return context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_FINGERPRINT);",
    "right" : "return context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_FINGERPRINT);",
    "info" : "ReturnStatement[43645-43733]:ReturnStatement[43645-43733]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43893-43899]:Modifier[44107-44113]"
  }, {
    "left" : "List<LockPatternView.Cell>",
    "right" : "List<LockPatternView.Cell>",
    "info" : "ParameterizedType[43900-43926]:ParameterizedType[44121-44147]"
  }, {
    "left" : "stringToPattern",
    "right" : "stringToPattern",
    "info" : "SimpleName[43927-43942]:SimpleName[44148-44163]"
  }, {
    "left" : "String string",
    "right" : "String string",
    "info" : "SingleVariableDeclaration[43943-43956]:SingleVariableDeclaration[44164-44177]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43958-44364]:Block[44190-44758]"
  }, {
    "left" : "List<LockPatternView.Cell> result = Lists.newArrayList();",
    "right" : "List<LockPatternView.Cell> result = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[43968-44025]:VariableDeclarationStatement[44200-44257]"
  }, {
    "left" : "final byte size = getLockPatternSize();",
    "right" : "LockPatternView.Cell[][] tmp = new LockPatternView.Cell[size][size];",
    "info" : "VariableDeclarationStatement[44035-44074]:VariableDeclarationStatement[44267-44335]"
  }, {
    "left" : "size",
    "right" : "size",
    "info" : "SimpleName[44046-44050]:SimpleName[44323-44327]"
  }, {
    "left" : "getLockPatternSize()",
    "right" : "getLockPatternSize()",
    "info" : "MethodInvocation[44053-44073]:MethodInvocation[43999-44019]"
  }, {
    "left" : "LockPatternView.Cell.updateSize(size);",
    "right" : "tmp[i][j] = new LockPatternView.Cell(i, j, size);",
    "info" : "ExpressionStatement[44083-44121]:ExpressionStatement[44436-44485]"
  }, {
    "left" : "LockPatternView.Cell",
    "right" : "LockPatternView.Cell",
    "info" : "QualifiedName[44083-44103]:QualifiedName[44452-44472]"
  }, {
    "left" : "updateSize",
    "right" : "i",
    "info" : "SimpleName[44104-44114]:SimpleName[44473-44474]"
  }, {
    "left" : "size",
    "right" : "size",
    "info" : "SimpleName[44115-44119]:SimpleName[44479-44483]"
  }, {
    "left" : "final byte[] bytes = string.getBytes();",
    "right" : "final byte[] bytes = string.getBytes();",
    "info" : "VariableDeclarationStatement[44131-44170]:VariableDeclarationStatement[44519-44558]"
  }, {
    "left" : "for (int i = 0; i < bytes.length; i++)",
    "right" : "for (int i = 0; i < bytes.length; i++)",
    "info" : "ForStatement[44179-44335]:ForStatement[44567-44728]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44218-44335]:Block[44606-44728]"
  }, {
    "left" : "byte b = bytes[i];",
    "right" : "byte b = bytes[i];",
    "info" : "VariableDeclarationStatement[44232-44250]:VariableDeclarationStatement[44620-44638]"
  }, {
    "left" : "result.add(LockPatternView.Cell.of(b / size, b % size, size));",
    "right" : "result.add(LockPatternView.Cell.of(tmp, b / size, b % size, size));",
    "info" : "ExpressionStatement[44263-44325]:ExpressionStatement[44651-44718]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[44344-44358]:ReturnStatement[44738-44752]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[44492-44498]:Modifier[44886-44892]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[44499-44505]:SimpleType[44893-44899]"
  }, {
    "left" : "patternToString",
    "right" : "patternToString",
    "info" : "SimpleName[44506-44521]:SimpleName[44900-44915]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[44522-44556]:SingleVariableDeclaration[44916-44950]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44558-44628]:Block[44952-45022]"
  }, {
    "left" : "return patternToString(pattern, getLockPatternSize());",
    "right" : "return patternToString(pattern, getLockPatternSize());",
    "info" : "ReturnStatement[44568-44622]:ReturnStatement[44962-45016]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[44803-44809]:Modifier[45197-45203]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[44810-44816]:Modifier[45204-45210]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[44817-44823]:SimpleType[45211-45217]"
  }, {
    "left" : "patternToString",
    "right" : "patternToString",
    "info" : "SimpleName[44824-44839]:SimpleName[45218-45233]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[44840-44874]:SingleVariableDeclaration[45234-45268]"
  }, {
    "left" : "int patternGridSize",
    "right" : "int patternGridSize",
    "info" : "SingleVariableDeclaration[44876-44895]:SingleVariableDeclaration[45270-45289]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44897-45289]:Block[45291-45683]"
  }, {
    "left" : "if (pattern == null)",
    "right" : "if (pattern == null)",
    "info" : "IfStatement[44907-44962]:IfStatement[45301-45356]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44928-44962]:Block[45322-45356]"
  }, {
    "left" : "return \"\";",
    "right" : "return \"\";",
    "info" : "ReturnStatement[44942-44952]:ReturnStatement[45336-45346]"
  }, {
    "left" : "final int patternSize = pattern.size();",
    "right" : "final int patternSize = pattern.size();",
    "info" : "VariableDeclarationStatement[44971-45010]:VariableDeclarationStatement[45365-45404]"
  }, {
    "left" : "byte[] res = new byte[patternSize];",
    "right" : "byte[] res = new byte[patternSize];",
    "info" : "VariableDeclarationStatement[45020-45055]:VariableDeclarationStatement[45414-45449]"
  }, {
    "left" : "for (int i = 0; i < patternSize; i++)",
    "right" : "for (int i = 0; i < patternSize; i++)",
    "info" : "ForStatement[45064-45251]:ForStatement[45458-45645]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45102-45251]:Block[45496-45645]"
  }, {
    "left" : "LockPatternView.Cell cell = pattern.get(i);",
    "right" : "LockPatternView.Cell cell = pattern.get(i);",
    "info" : "VariableDeclarationStatement[45116-45159]:VariableDeclarationStatement[45510-45553]"
  }, {
    "left" : "res[i] = (byte) (cell.getRow() * patternGridSize + cell.getColumn());",
    "right" : "res[i] = (byte) (cell.getRow() * patternGridSize + cell.getColumn());",
    "info" : "ExpressionStatement[45172-45241]:ExpressionStatement[45566-45635]"
  }, {
    "left" : "return new String(res);",
    "right" : "return new String(res);",
    "info" : "ReturnStatement[45260-45283]:ReturnStatement[45654-45677]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[45623-45629]:Modifier[46577-46583]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[45630-45636]:ArrayType[46584-46590]"
  }, {
    "left" : "patternToHash",
    "right" : "patternToHash",
    "info" : "SimpleName[45637-45650]:SimpleName[46591-46604]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[45651-45685]:SingleVariableDeclaration[46605-46639]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45687-46285]:Block[46641-47239]"
  }, {
    "left" : "if (pattern == null)",
    "right" : "if (pattern == null)",
    "info" : "IfStatement[45697-45754]:IfStatement[46651-46708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45718-45754]:Block[46672-46708]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[45732-45744]:ReturnStatement[46686-46698]"
  }, {
    "left" : "final int patternSize = pattern.size();",
    "right" : "final int patternSize = pattern.size();",
    "info" : "VariableDeclarationStatement[45764-45803]:VariableDeclarationStatement[46718-46757]"
  }, {
    "left" : "byte[] res = new byte[patternSize];",
    "right" : "byte[] res = new byte[patternSize];",
    "info" : "VariableDeclarationStatement[45812-45847]:VariableDeclarationStatement[46766-46801]"
  }, {
    "left" : "for (int i = 0; i < patternSize; i++)",
    "right" : "for (int i = 0; i < patternSize; i++)",
    "info" : "ForStatement[45856-46048]:ForStatement[46810-47002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45894-46048]:Block[46848-47002]"
  }, {
    "left" : "LockPatternView.Cell cell = pattern.get(i);",
    "right" : "LockPatternView.Cell cell = pattern.get(i);",
    "info" : "VariableDeclarationStatement[45908-45951]:VariableDeclarationStatement[46862-46905]"
  }, {
    "left" : "res[i] = (byte) (cell.getRow() * getLockPatternSize() + cell.getColumn());",
    "right" : "res[i] = (byte) (cell.getRow() * getLockPatternSize() + cell.getColumn());",
    "info" : "ExpressionStatement[45964-46038]:ExpressionStatement[46918-46992]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[46057-46279]:TryStatement[47011-47233]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46061-46206]:Block[47015-47160]"
  }, {
    "left" : "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
    "right" : "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
    "info" : "VariableDeclarationStatement[46075-46129]:VariableDeclarationStatement[47029-47083]"
  }, {
    "left" : "byte[] hash = md.digest(res);",
    "right" : "byte[] hash = md.digest(res);",
    "info" : "VariableDeclarationStatement[46142-46171]:VariableDeclarationStatement[47096-47125]"
  }, {
    "left" : "return hash;",
    "right" : "return hash;",
    "info" : "ReturnStatement[46184-46196]:ReturnStatement[47138-47150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46244-46279]:Block[47198-47233]"
  }, {
    "left" : "return res;",
    "right" : "return res;",
    "info" : "ReturnStatement[46258-46269]:ReturnStatement[47212-47223]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[46291-46298]:Modifier[47245-47252]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[46299-46305]:SimpleType[47253-47259]"
  }, {
    "left" : "getSalt",
    "right" : "getSalt",
    "info" : "SimpleName[46306-46313]:SimpleName[47260-47267]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[46314-46324]:SingleVariableDeclaration[47268-47278]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46326-46959]:Block[47280-47913]"
  }, {
    "left" : "long salt = getLong(LOCK_PASSWORD_SALT_KEY, 0, userId);",
    "right" : "long salt = getLong(LOCK_PASSWORD_SALT_KEY, 0, userId);",
    "info" : "VariableDeclarationStatement[46336-46391]:VariableDeclarationStatement[47290-47345]"
  }, {
    "left" : "if (salt == 0)",
    "right" : "if (salt == 0)",
    "info" : "IfStatement[46400-46914]:IfStatement[47354-47868]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46415-46914]:Block[47369-47868]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[46429-46904]:TryStatement[47383-47858]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46433-46665]:Block[47387-47619]"
  }, {
    "left" : "salt = SecureRandom.getInstance(\"SHA1PRNG\").nextLong();",
    "right" : "salt = SecureRandom.getInstance(\"SHA1PRNG\").nextLong();",
    "info" : "ExpressionStatement[46451-46506]:ExpressionStatement[47405-47460]"
  }, {
    "left" : "setLong(LOCK_PASSWORD_SALT_KEY, salt, userId);",
    "right" : "setLong(LOCK_PASSWORD_SALT_KEY, salt, userId);",
    "info" : "ExpressionStatement[46523-46569]:ExpressionStatement[47477-47523]"
  }, {
    "left" : "Log.v(TAG, \"Initialized lock password salt for user: \" + userId);",
    "right" : "Log.v(TAG, \"Initialized lock password salt for user: \" + userId);",
    "info" : "ExpressionStatement[46586-46651]:ExpressionStatement[47540-47605]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46701-46904]:Block[47655-47858]"
  }, {
    "left" : "throw new IllegalStateException(\"Couldn't get SecureRandom number\", e);",
    "right" : "throw new IllegalStateException(\"Couldn't get SecureRandom number\", e);",
    "info" : "ThrowStatement[46819-46890]:ThrowStatement[47773-47844]"
  }, {
    "left" : "return Long.toHexString(salt);",
    "right" : "return Long.toHexString(salt);",
    "info" : "ReturnStatement[46923-46953]:ReturnStatement[47877-47907]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47346-47352]:Modifier[48300-48306]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[47353-47359]:ArrayType[48307-48313]"
  }, {
    "left" : "passwordToHash",
    "right" : "passwordToHash",
    "info" : "SimpleName[47360-47374]:SimpleName[48314-48328]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[47375-47390]:SingleVariableDeclaration[48329-48344]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[47392-47402]:SingleVariableDeclaration[48346-48356]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47404-48037]:Block[48358-48991]"
  }, {
    "left" : "if (password == null)",
    "right" : "if (password == null)",
    "info" : "IfStatement[47414-47472]:IfStatement[48368-48426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47436-47472]:Block[48390-48426]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[47450-47462]:ReturnStatement[48404-48416]"
  }, {
    "left" : "String algo = null;",
    "right" : "String algo = null;",
    "info" : "VariableDeclarationStatement[47481-47500]:VariableDeclarationStatement[48435-48454]"
  }, {
    "left" : "byte[] hashed = null;",
    "right" : "byte[] hashed = null;",
    "info" : "VariableDeclarationStatement[47509-47530]:VariableDeclarationStatement[48463-48484]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[47539-48008]:TryStatement[48493-48962]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47543-47872]:Block[48497-48826]"
  }, {
    "left" : "byte[] saltedPassword = (password + getSalt(userId)).getBytes();",
    "right" : "byte[] saltedPassword = (password + getSalt(userId)).getBytes();",
    "info" : "VariableDeclarationStatement[47557-47621]:VariableDeclarationStatement[48511-48575]"
  }, {
    "left" : "byte[] sha1 = MessageDigest.getInstance(algo = \"SHA-1\").digest(saltedPassword);",
    "right" : "byte[] sha1 = MessageDigest.getInstance(algo = \"SHA-1\").digest(saltedPassword);",
    "info" : "VariableDeclarationStatement[47634-47713]:VariableDeclarationStatement[48588-48667]"
  }, {
    "left" : "byte[] md5 = MessageDigest.getInstance(algo = \"MD5\").digest(saltedPassword);",
    "right" : "byte[] md5 = MessageDigest.getInstance(algo = \"MD5\").digest(saltedPassword);",
    "info" : "VariableDeclarationStatement[47726-47802]:VariableDeclarationStatement[48680-48756]"
  }, {
    "left" : "hashed = (toHex(sha1) + toHex(md5)).getBytes();",
    "right" : "hashed = (toHex(sha1) + toHex(md5)).getBytes();",
    "info" : "ExpressionStatement[47815-47862]:ExpressionStatement[48769-48816]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47908-48008]:Block[48862-48962]"
  }, {
    "left" : "Log.w(TAG, \"Failed to encode string because of missing algorithm: \" + algo);",
    "right" : "Log.w(TAG, \"Failed to encode string because of missing algorithm: \" + algo);",
    "info" : "ExpressionStatement[47922-47998]:ExpressionStatement[48876-48952]"
  }, {
    "left" : "return hashed;",
    "right" : "return hashed;",
    "info" : "ReturnStatement[48017-48031]:ReturnStatement[48971-48985]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[48043-48050]:Modifier[48997-49004]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[48051-48057]:Modifier[49005-49011]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[48058-48064]:SimpleType[49012-49018]"
  }, {
    "left" : "toHex",
    "right" : "toHex",
    "info" : "SimpleName[48065-48070]:SimpleName[49019-49024]"
  }, {
    "left" : "byte[] ary",
    "right" : "byte[] ary",
    "info" : "SingleVariableDeclaration[48071-48081]:SingleVariableDeclaration[49025-49035]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48083-48336]:Block[49037-49290]"
  }, {
    "left" : "final String hex = \"0123456789ABCDEF\";",
    "right" : "final String hex = \"0123456789ABCDEF\";",
    "info" : "VariableDeclarationStatement[48093-48131]:VariableDeclarationStatement[49047-49085]"
  }, {
    "left" : "String ret = \"\";",
    "right" : "String ret = \"\";",
    "info" : "VariableDeclarationStatement[48140-48156]:VariableDeclarationStatement[49094-49110]"
  }, {
    "left" : "for (int i = 0; i < ary.length; i++)",
    "right" : "for (int i = 0; i < ary.length; i++)",
    "info" : "ForStatement[48165-48310]:ForStatement[49119-49264]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48202-48310]:Block[49156-49264]"
  }, {
    "left" : "ret += hex.charAt((ary[i] >> 4) & 0xf);",
    "right" : "ret += hex.charAt((ary[i] >> 4) & 0xf);",
    "info" : "ExpressionStatement[48216-48255]:ExpressionStatement[49170-49209]"
  }, {
    "left" : "ret += hex.charAt(ary[i] & 0xf);",
    "right" : "ret += hex.charAt(ary[i] & 0xf);",
    "info" : "ExpressionStatement[48268-48300]:ExpressionStatement[49222-49254]"
  }, {
    "left" : "return ret;",
    "right" : "return ret;",
    "info" : "ReturnStatement[48319-48330]:ReturnStatement[49273-49284]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48458-48464]:Modifier[49412-49418]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[48465-48472]:PrimitiveType[49419-49426]"
  }, {
    "left" : "isLockPasswordEnabled",
    "right" : "isLockPasswordEnabled",
    "info" : "SimpleName[48473-48494]:SimpleName[49427-49448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48497-49565]:Block[49451-50519]"
  }, {
    "left" : "long mode = getLong(PASSWORD_TYPE_KEY, 0);",
    "right" : "long mode = getLong(PASSWORD_TYPE_KEY, 0);",
    "info" : "VariableDeclarationStatement[48507-48549]:VariableDeclarationStatement[49461-49503]"
  }, {
    "left" : "long backupMode = getLong(PASSWORD_TYPE_ALTERNATE_KEY, 0);",
    "right" : "long backupMode = getLong(PASSWORD_TYPE_ALTERNATE_KEY, 0);",
    "info" : "VariableDeclarationStatement[48558-48616]:VariableDeclarationStatement[49512-49570]"
  }, {
    "left" : "final boolean passwordEnabled = mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "right" : "final boolean passwordEnabled = mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "info" : "VariableDeclarationStatement[48625-49014]:VariableDeclarationStatement[49579-49968]"
  }, {
    "left" : "final boolean backupEnabled = backupMode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "right" : "final boolean backupEnabled = backupMode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "info" : "VariableDeclarationStatement[49023-49440]:VariableDeclarationStatement[49977-50394]"
  }, {
    "left" : "return savedPasswordExists() && (passwordEnabled ||\n                (usingBiometricWeak() && backupEnabled));",
    "right" : "return savedPasswordExists() && (passwordEnabled ||\n                (usingBiometricWeak() && backupEnabled));",
    "info" : "ReturnStatement[49450-49559]:ReturnStatement[50404-50513]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[49686-49692]:Modifier[50640-50646]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[49693-49700]:PrimitiveType[50647-50654]"
  }, {
    "left" : "isLockPatternEnabled",
    "right" : "isLockPatternEnabled",
    "info" : "SimpleName[49701-49721]:SimpleName[50655-50675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49724-49797]:Block[50678-50751]"
  }, {
    "left" : "return isLockPatternEnabled(getCurrentOrCallingUserId());",
    "right" : "return isLockPatternEnabled(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[49734-49791]:ReturnStatement[50688-50745]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[49918-49924]:Modifier[50872-50878]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[49925-49932]:PrimitiveType[50879-50886]"
  }, {
    "left" : "isLockPatternEnabled",
    "right" : "isLockPatternEnabled",
    "info" : "SimpleName[49933-49953]:SimpleName[50887-50907]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[49954-49964]:SingleVariableDeclaration[50908-50918]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49966-50563]:Block[50920-51517]"
  }, {
    "left" : "final boolean backupEnabled =\n                getLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId)\n                                == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "right" : "final boolean backupEnabled =\n                getLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId)\n                                == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "info" : "VariableDeclarationStatement[49976-50223]:VariableDeclarationStatement[50930-51177]"
  }, {
    "left" : "return getBoolean(Settings.Secure.LOCK_PATTERN_ENABLED, false, userId)\n                && (getLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                        userId) == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING\n                        || (usingBiometricWeak(userId) && backupEnabled));",
    "right" : "return getBoolean(Settings.Secure.LOCK_PATTERN_ENABLED, false, userId)\n                && (getLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                        userId) == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING\n                        || (usingBiometricWeak(userId) && backupEnabled));",
    "info" : "ReturnStatement[50233-50557]:ReturnStatement[51187-51511]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[50681-50687]:Modifier[51635-51641]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[50688-50695]:PrimitiveType[51642-51649]"
  }, {
    "left" : "isBiometricWeakInstalled",
    "right" : "isBiometricWeakInstalled",
    "info" : "SimpleName[50696-50720]:SimpleName[51650-51674]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50723-51689]:Block[51677-52643]"
  }, {
    "left" : "PackageManager pm = mContext.getPackageManager();",
    "right" : "PackageManager pm = mContext.getPackageManager();",
    "info" : "VariableDeclarationStatement[50770-50819]:VariableDeclarationStatement[51724-51773]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[50828-51014]:TryStatement[51782-51968]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50832-50929]:Block[51786-51883]"
  }, {
    "left" : "pm.getPackageInfo(\"com.android.facelock\", PackageManager.GET_ACTIVITIES);",
    "right" : "pm.getPackageInfo(\"com.android.facelock\", PackageManager.GET_ACTIVITIES);",
    "info" : "ExpressionStatement[50846-50919]:ExpressionStatement[51800-51873]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50977-51014]:Block[51931-51968]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[50991-51004]:ReturnStatement[51945-51958]"
  }, {
    "left" : "if (!pm.hasSystemFeature(PackageManager.FEATURE_CAMERA_FRONT))",
    "right" : "if (!pm.hasSystemFeature(PackageManager.FEATURE_CAMERA_FRONT))",
    "info" : "IfStatement[51068-51168]:IfStatement[52022-52122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51131-51168]:Block[52085-52122]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[51145-51158]:ReturnStatement[52099-52112]"
  }, {
    "left" : "if (getDevicePolicyManager().getCameraDisabled(null, getCurrentOrCallingUserId()))",
    "right" : "if (getDevicePolicyManager().getCameraDisabled(null, getCurrentOrCallingUserId()))",
    "info" : "IfStatement[51177-51297]:IfStatement[52131-52251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51260-51297]:Block[52214-52251]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[51274-51287]:ReturnStatement[52228-52241]"
  }, {
    "left" : "if (DEBUG)",
    "right" : "if (DEBUG)",
    "info" : "IfStatement[51571-51661]:IfStatement[52525-52615]"
  }, {
    "left" : "Log.d(TAG, \"Forcing isBiometricWeakInstalled() to return false to disable it\");",
    "right" : "Log.d(TAG, \"Forcing isBiometricWeakInstalled() to return false to disable it\");",
    "info" : "ExpressionStatement[51582-51661]:ExpressionStatement[52536-52615]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[51670-51683]:ReturnStatement[52624-52637]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[51768-51774]:Modifier[52722-52728]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[51775-51779]:PrimitiveType[52729-52733]"
  }, {
    "left" : "setBiometricWeakLivelinessEnabled",
    "right" : "setBiometricWeakLivelinessEnabled",
    "info" : "SimpleName[51780-51813]:SimpleName[52734-52767]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[51814-51829]:SingleVariableDeclaration[52768-52783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51831-52199]:Block[52785-53153]"
  }, {
    "left" : "long currentFlag = getLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, 0L);",
    "right" : "long currentFlag = getLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, 0L);",
    "info" : "VariableDeclarationStatement[51841-51915]:VariableDeclarationStatement[52795-52869]"
  }, {
    "left" : "long newFlag;",
    "right" : "long newFlag;",
    "info" : "VariableDeclarationStatement[51924-51937]:VariableDeclarationStatement[52878-52891]"
  }, {
    "left" : "if (enabled)",
    "right" : "if (enabled)",
    "info" : "IfStatement[51946-52124]:IfStatement[52900-53078]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51959-52038]:Block[52913-52992]"
  }, {
    "left" : "newFlag = currentFlag | FLAG_BIOMETRIC_WEAK_LIVELINESS;",
    "right" : "newFlag = currentFlag | FLAG_BIOMETRIC_WEAK_LIVELINESS;",
    "info" : "ExpressionStatement[51973-52028]:ExpressionStatement[52927-52982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52044-52124]:Block[52998-53078]"
  }, {
    "left" : "newFlag = currentFlag & ~FLAG_BIOMETRIC_WEAK_LIVELINESS;",
    "right" : "newFlag = currentFlag & ~FLAG_BIOMETRIC_WEAK_LIVELINESS;",
    "info" : "ExpressionStatement[52058-52114]:ExpressionStatement[53012-53068]"
  }, {
    "left" : "setLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, newFlag);",
    "right" : "setLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, newFlag);",
    "info" : "ExpressionStatement[52133-52193]:ExpressionStatement[53087-53147]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52286-52292]:Modifier[53240-53246]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[52293-52300]:PrimitiveType[53247-53254]"
  }, {
    "left" : "isBiometricWeakLivelinessEnabled",
    "right" : "isBiometricWeakLivelinessEnabled",
    "info" : "SimpleName[52301-52333]:SimpleName[53255-53287]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52336-52496]:Block[53290-53450]"
  }, {
    "left" : "long currentFlag = getLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, 0L);",
    "right" : "long currentFlag = getLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, 0L);",
    "info" : "VariableDeclarationStatement[52346-52420]:VariableDeclarationStatement[53300-53374]"
  }, {
    "left" : "return ((currentFlag & FLAG_BIOMETRIC_WEAK_LIVELINESS) != 0);",
    "right" : "return ((currentFlag & FLAG_BIOMETRIC_WEAK_LIVELINESS) != 0);",
    "info" : "ReturnStatement[52429-52490]:ReturnStatement[53383-53444]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52566-52572]:Modifier[53520-53526]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[52573-52577]:PrimitiveType[53527-53531]"
  }, {
    "left" : "setLockPatternEnabled",
    "right" : "setLockPatternEnabled",
    "info" : "SimpleName[52578-52599]:SimpleName[53532-53553]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[52600-52615]:SingleVariableDeclaration[53554-53569]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52617-52693]:Block[53571-53647]"
  }, {
    "left" : "setLockPatternEnabled(enabled, getCurrentOrCallingUserId());",
    "right" : "setLockPatternEnabled(enabled, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[52627-52687]:ExpressionStatement[53581-53641]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52763-52769]:Modifier[53717-53723]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[52770-52774]:PrimitiveType[53724-53728]"
  }, {
    "left" : "setLockPatternEnabled",
    "right" : "setLockPatternEnabled",
    "info" : "SimpleName[52775-52796]:SimpleName[53729-53750]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[52797-52812]:SingleVariableDeclaration[53751-53766]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[52814-52828]:SingleVariableDeclaration[53768-53782]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52830-52916]:Block[53784-53870]"
  }, {
    "left" : "setBoolean(Settings.Secure.LOCK_PATTERN_ENABLED, enabled, userHandle);",
    "right" : "setBoolean(Settings.Secure.LOCK_PATTERN_ENABLED, enabled, userHandle);",
    "info" : "ExpressionStatement[52840-52910]:ExpressionStatement[53794-53864]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52993-52999]:Modifier[53947-53953]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[53000-53007]:PrimitiveType[53954-53961]"
  }, {
    "left" : "isVisiblePatternEnabled",
    "right" : "isVisiblePatternEnabled",
    "info" : "SimpleName[53008-53031]:SimpleName[53962-53985]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53034-53113]:Block[53988-54067]"
  }, {
    "left" : "return getBoolean(Settings.Secure.LOCK_PATTERN_VISIBLE, false);",
    "right" : "return getBoolean(Settings.Secure.LOCK_PATTERN_VISIBLE, false);",
    "info" : "ReturnStatement[53044-53107]:ReturnStatement[53998-54061]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[53186-53192]:Modifier[54140-54146]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[53193-53197]:PrimitiveType[54147-54151]"
  }, {
    "left" : "setVisiblePatternEnabled",
    "right" : "setVisiblePatternEnabled",
    "info" : "SimpleName[53198-53222]:SimpleName[54152-54176]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[53223-53238]:SingleVariableDeclaration[54177-54192]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53240-53988]:Block[54194-54942]"
  }, {
    "left" : "setBoolean(Settings.Secure.LOCK_PATTERN_VISIBLE, enabled);",
    "right" : "setBoolean(Settings.Secure.LOCK_PATTERN_VISIBLE, enabled);",
    "info" : "ExpressionStatement[53250-53308]:ExpressionStatement[54204-54262]"
  }, {
    "left" : "int userId = getCurrentOrCallingUserId();",
    "right" : "int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[53356-53397]:VariableDeclarationStatement[54310-54351]"
  }, {
    "left" : "if (userId != UserHandle.USER_OWNER)",
    "right" : "if (userId != UserHandle.USER_OWNER)",
    "info" : "IfStatement[53406-53474]:IfStatement[54360-54428]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53443-53474]:Block[54397-54428]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[53457-53464]:ReturnStatement[54411-54418]"
  }, {
    "left" : "IBinder service = ServiceManager.getService(\"mount\");",
    "right" : "IBinder service = ServiceManager.getService(\"mount\");",
    "info" : "VariableDeclarationStatement[53484-53537]:VariableDeclarationStatement[54438-54491]"
  }, {
    "left" : "if (service == null)",
    "right" : "if (service == null)",
    "info" : "IfStatement[53546-53682]:IfStatement[54500-54636]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53567-53682]:Block[54521-54636]"
  }, {
    "left" : "Log.e(TAG, \"Could not find the mount service to update the user info\");",
    "right" : "Log.e(TAG, \"Could not find the mount service to update the user info\");",
    "info" : "ExpressionStatement[53581-53652]:ExpressionStatement[54535-54606]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[53665-53672]:ReturnStatement[54619-54626]"
  }, {
    "left" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "right" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "info" : "VariableDeclarationStatement[53692-53761]:VariableDeclarationStatement[54646-54715]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[53770-53982]:TryStatement[54724-54936]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53774-53877]:Block[54728-54831]"
  }, {
    "left" : "mountService.setField(StorageManager.PATTERN_VISIBLE_KEY, enabled ? \"1\" : \"0\");",
    "right" : "mountService.setField(StorageManager.PATTERN_VISIBLE_KEY, enabled ? \"1\" : \"0\");",
    "info" : "ExpressionStatement[53788-53867]:ExpressionStatement[54742-54821]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53904-53982]:Block[54858-54936]"
  }, {
    "left" : "Log.e(TAG, \"Error changing pattern visible state\", e);",
    "right" : "Log.e(TAG, \"Error changing pattern visible state\", e);",
    "info" : "ExpressionStatement[53918-53972]:ExpressionStatement[54872-54926]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54078-54084]:Modifier[55032-55038]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[54085-54092]:PrimitiveType[55039-55046]"
  }, {
    "left" : "isTactileFeedbackEnabled",
    "right" : "isTactileFeedbackEnabled",
    "info" : "SimpleName[54093-54117]:SimpleName[55047-55071]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54120-54281]:Block[55074-55235]"
  }, {
    "left" : "return Settings.System.getIntForUser(mContentResolver,\n                Settings.System.HAPTIC_FEEDBACK_ENABLED, 1, UserHandle.USER_CURRENT) != 0;",
    "right" : "return Settings.System.getIntForUser(mContentResolver,\n                Settings.System.HAPTIC_FEEDBACK_ENABLED, 1, UserHandle.USER_CURRENT) != 0;",
    "info" : "ReturnStatement[54130-54275]:ReturnStatement[55084-55229]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54346-54352]:Modifier[55300-55306]"
  }, {
    "left" : "byte",
    "right" : "byte",
    "info" : "PrimitiveType[54353-54357]:PrimitiveType[55307-55311]"
  }, {
    "left" : "getLockPatternSize",
    "right" : "getLockPatternSize",
    "info" : "SimpleName[54358-54376]:SimpleName[55312-55330]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54379-54588]:Block[55333-55542]"
  }, {
    "left" : "long size = getLong(Settings.Secure.LOCK_PATTERN_SIZE, -1);",
    "right" : "long size = getLong(Settings.Secure.LOCK_PATTERN_SIZE, -1);",
    "info" : "VariableDeclarationStatement[54389-54448]:VariableDeclarationStatement[55343-55402]"
  }, {
    "left" : "if (size > 0 && size < 128)",
    "right" : "if (size > 0 && size < 128)",
    "info" : "IfStatement[54457-54528]:IfStatement[55411-55482]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54485-54528]:Block[55439-55482]"
  }, {
    "left" : "return (byte) size;",
    "right" : "return (byte) size;",
    "info" : "ReturnStatement[54499-54518]:ReturnStatement[55453-55472]"
  }, {
    "left" : "return LockPatternUtils.PATTERN_SIZE_DEFAULT;",
    "right" : "return LockPatternUtils.PATTERN_SIZE_DEFAULT;",
    "info" : "ReturnStatement[54537-54582]:ReturnStatement[55491-55536]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54649-54655]:Modifier[55603-55609]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[54656-54660]:PrimitiveType[55610-55614]"
  }, {
    "left" : "setLockPatternSize",
    "right" : "setLockPatternSize",
    "info" : "SimpleName[54661-54679]:SimpleName[55615-55633]"
  }, {
    "left" : "long size",
    "right" : "long size",
    "info" : "SingleVariableDeclaration[54680-54689]:SingleVariableDeclaration[55634-55643]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54691-54756]:Block[55645-55710]"
  }, {
    "left" : "setLong(Settings.Secure.LOCK_PATTERN_SIZE, size);",
    "right" : "setLong(Settings.Secure.LOCK_PATTERN_SIZE, size);",
    "info" : "ExpressionStatement[54701-54750]:ExpressionStatement[55655-55704]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54762-54768]:Modifier[55716-55722]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[54769-54773]:PrimitiveType[55723-55727]"
  }, {
    "left" : "setVisibleDotsEnabled",
    "right" : "setVisibleDotsEnabled",
    "info" : "SimpleName[54774-54795]:SimpleName[55728-55749]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[54796-54811]:SingleVariableDeclaration[55750-55765]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54813-54884]:Block[55767-55838]"
  }, {
    "left" : "setBoolean(Settings.Secure.LOCK_DOTS_VISIBLE, enabled);",
    "right" : "setBoolean(Settings.Secure.LOCK_DOTS_VISIBLE, enabled);",
    "info" : "ExpressionStatement[54823-54878]:ExpressionStatement[55777-55832]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54890-54896]:Modifier[55844-55850]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[54897-54904]:PrimitiveType[55851-55858]"
  }, {
    "left" : "isVisibleDotsEnabled",
    "right" : "isVisibleDotsEnabled",
    "info" : "SimpleName[54905-54925]:SimpleName[55859-55879]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54928-55003]:Block[55882-55957]"
  }, {
    "left" : "return getBoolean(Settings.Secure.LOCK_DOTS_VISIBLE, true);",
    "right" : "return getBoolean(Settings.Secure.LOCK_DOTS_VISIBLE, true);",
    "info" : "ReturnStatement[54938-54997]:ReturnStatement[55892-55951]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[55009-55015]:Modifier[55963-55969]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[55016-55020]:PrimitiveType[55970-55974]"
  }, {
    "left" : "setShowErrorPath",
    "right" : "setShowErrorPath",
    "info" : "SimpleName[55021-55037]:SimpleName[55975-55991]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[55038-55053]:SingleVariableDeclaration[55992-56007]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55055-55129]:Block[56009-56083]"
  }, {
    "left" : "setBoolean(Settings.Secure.LOCK_SHOW_ERROR_PATH, enabled);",
    "right" : "setBoolean(Settings.Secure.LOCK_SHOW_ERROR_PATH, enabled);",
    "info" : "ExpressionStatement[55065-55123]:ExpressionStatement[56019-56077]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[55135-55141]:Modifier[56089-56095]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[55142-55149]:PrimitiveType[56096-56103]"
  }, {
    "left" : "isShowErrorPath",
    "right" : "isShowErrorPath",
    "info" : "SimpleName[55150-55165]:SimpleName[56104-56119]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55168-55246]:Block[56122-56200]"
  }, {
    "left" : "return getBoolean(Settings.Secure.LOCK_SHOW_ERROR_PATH, true);",
    "right" : "return getBoolean(Settings.Secure.LOCK_SHOW_ERROR_PATH, true);",
    "info" : "ReturnStatement[55178-55240]:ReturnStatement[56132-56194]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[55439-55445]:Modifier[56393-56399]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[55446-55450]:PrimitiveType[56400-56404]"
  }, {
    "left" : "setLockoutAttemptDeadline",
    "right" : "setLockoutAttemptDeadline",
    "info" : "SimpleName[55451-55476]:SimpleName[56405-56430]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55479-55653]:Block[56433-56607]"
  }, {
    "left" : "final long deadline = SystemClock.elapsedRealtime() + FAILED_ATTEMPT_TIMEOUT_MS;",
    "right" : "final long deadline = SystemClock.elapsedRealtime() + FAILED_ATTEMPT_TIMEOUT_MS;",
    "info" : "VariableDeclarationStatement[55489-55569]:VariableDeclarationStatement[56443-56523]"
  }, {
    "left" : "setLong(LOCKOUT_ATTEMPT_DEADLINE, deadline);",
    "right" : "setLong(LOCKOUT_ATTEMPT_DEADLINE, deadline);",
    "info" : "ExpressionStatement[55578-55622]:ExpressionStatement[56532-56576]"
  }, {
    "left" : "return deadline;",
    "right" : "return deadline;",
    "info" : "ReturnStatement[55631-55647]:ReturnStatement[56585-56601]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[55864-55870]:Modifier[56818-56824]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[55871-55875]:PrimitiveType[56825-56829]"
  }, {
    "left" : "getLockoutAttemptDeadline",
    "right" : "getLockoutAttemptDeadline",
    "info" : "SimpleName[55876-55901]:SimpleName[56830-56855]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55904-56172]:Block[56858-57126]"
  }, {
    "left" : "final long deadline = getLong(LOCKOUT_ATTEMPT_DEADLINE, 0L);",
    "right" : "final long deadline = getLong(LOCKOUT_ATTEMPT_DEADLINE, 0L);",
    "info" : "VariableDeclarationStatement[55914-55974]:VariableDeclarationStatement[56868-56928]"
  }, {
    "left" : "final long now = SystemClock.elapsedRealtime();",
    "right" : "final long now = SystemClock.elapsedRealtime();",
    "info" : "VariableDeclarationStatement[55983-56030]:VariableDeclarationStatement[56937-56984]"
  }, {
    "left" : "if (deadline < now || deadline > (now + FAILED_ATTEMPT_TIMEOUT_MS))",
    "right" : "if (deadline < now || deadline > (now + FAILED_ATTEMPT_TIMEOUT_MS))",
    "info" : "IfStatement[56039-56141]:IfStatement[56993-57095]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56107-56141]:Block[57061-57095]"
  }, {
    "left" : "return 0L;",
    "right" : "return 0L;",
    "info" : "ReturnStatement[56121-56131]:ReturnStatement[57075-57085]"
  }, {
    "left" : "return deadline;",
    "right" : "return deadline;",
    "info" : "ReturnStatement[56150-56166]:ReturnStatement[57104-57120]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56376-56382]:Modifier[57330-57336]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[56383-56390]:PrimitiveType[57337-57344]"
  }, {
    "left" : "isPermanentlyLocked",
    "right" : "isPermanentlyLocked",
    "info" : "SimpleName[56391-56410]:SimpleName[57345-57364]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56413-56477]:Block[57367-57431]"
  }, {
    "left" : "return getBoolean(LOCKOUT_PERMANENT_KEY, false);",
    "right" : "return getBoolean(LOCKOUT_PERMANENT_KEY, false);",
    "info" : "ReturnStatement[56423-56471]:ReturnStatement[57377-57425]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56819-56825]:Modifier[57773-57779]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[56826-56830]:PrimitiveType[57780-57784]"
  }, {
    "left" : "setPermanentlyLocked",
    "right" : "setPermanentlyLocked",
    "info" : "SimpleName[56831-56851]:SimpleName[57785-57805]"
  }, {
    "left" : "boolean locked",
    "right" : "boolean locked",
    "info" : "SingleVariableDeclaration[56852-56866]:SingleVariableDeclaration[57806-57820]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56868-56926]:Block[57822-57880]"
  }, {
    "left" : "setBoolean(LOCKOUT_PERMANENT_KEY, locked);",
    "right" : "setBoolean(LOCKOUT_PERMANENT_KEY, locked);",
    "info" : "ExpressionStatement[56878-56920]:ExpressionStatement[57832-57874]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56932-56938]:Modifier[57886-57892]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[56939-56946]:PrimitiveType[57893-57900]"
  }, {
    "left" : "isEmergencyCallCapable",
    "right" : "isEmergencyCallCapable",
    "info" : "SimpleName[56947-56969]:SimpleName[57901-57923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56972-57097]:Block[57926-58051]"
  }, {
    "left" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_voice_capable);",
    "right" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_voice_capable);",
    "info" : "ReturnStatement[56982-57091]:ReturnStatement[57936-58045]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[57103-57109]:Modifier[58057-58063]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[57110-57117]:PrimitiveType[58064-58071]"
  }, {
    "left" : "isPukUnlockScreenEnable",
    "right" : "isPukUnlockScreenEnable",
    "info" : "SimpleName[57118-57141]:SimpleName[58072-58095]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57144-57280]:Block[58098-58234]"
  }, {
    "left" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_enable_puk_unlock_screen);",
    "right" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_enable_puk_unlock_screen);",
    "info" : "ReturnStatement[57154-57274]:ReturnStatement[58108-58228]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[57286-57292]:Modifier[58240-58246]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[57293-57300]:PrimitiveType[58247-58254]"
  }, {
    "left" : "isEmergencyCallEnabledWhileSimLocked",
    "right" : "isEmergencyCallEnabledWhileSimLocked",
    "info" : "SimpleName[57301-57337]:SimpleName[58255-58291]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57340-57490]:Block[58294-58444]"
  }, {
    "left" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_enable_emergency_call_while_sim_locked);",
    "right" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_enable_emergency_call_while_sim_locked);",
    "info" : "ReturnStatement[57350-57484]:ReturnStatement[58304-58438]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[57642-57648]:Modifier[58596-58602]"
  }, {
    "left" : "AlarmManager.AlarmClockInfo",
    "right" : "AlarmManager.AlarmClockInfo",
    "info" : "SimpleType[57649-57676]:SimpleType[58603-58630]"
  }, {
    "left" : "getNextAlarm",
    "right" : "getNextAlarm",
    "info" : "SimpleName[57677-57689]:SimpleName[58631-58643]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57692-57872]:Block[58646-58826]"
  }, {
    "left" : "AlarmManager alarmManager = (AlarmManager) mContext.getSystemService(Context.ALARM_SERVICE);",
    "right" : "AlarmManager alarmManager = (AlarmManager) mContext.getSystemService(Context.ALARM_SERVICE);",
    "info" : "VariableDeclarationStatement[57702-57794]:VariableDeclarationStatement[58656-58748]"
  }, {
    "left" : "return alarmManager.getNextAlarmClock(UserHandle.USER_CURRENT);",
    "right" : "return alarmManager.getNextAlarmClock(UserHandle.USER_CURRENT);",
    "info" : "ReturnStatement[57803-57866]:ReturnStatement[58757-58820]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[57878-57885]:Modifier[58832-58839]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[57886-57893]:PrimitiveType[58840-58847]"
  }, {
    "left" : "getBoolean",
    "right" : "getBoolean",
    "info" : "SimpleName[57894-57904]:SimpleName[58848-58858]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[57905-57928]:SingleVariableDeclaration[58859-58882]"
  }, {
    "left" : "boolean defaultValue",
    "right" : "boolean defaultValue",
    "info" : "SingleVariableDeclaration[57930-57950]:SingleVariableDeclaration[58884-58904]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[57952-57962]:SingleVariableDeclaration[58906-58916]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57964-58156]:Block[58918-59110]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[57974-58150]:TryStatement[58928-59104]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57978-58078]:Block[58932-59032]"
  }, {
    "left" : "return getLockSettings().getBoolean(secureSettingKey, defaultValue, userId);",
    "right" : "return getLockSettings().getBoolean(secureSettingKey, defaultValue, userId);",
    "info" : "ReturnStatement[57992-58068]:ReturnStatement[58946-59022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58106-58150]:Block[59060-59104]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[58120-58140]:ReturnStatement[59074-59094]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[58162-58169]:Modifier[59116-59123]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[58170-58177]:PrimitiveType[59124-59131]"
  }, {
    "left" : "getBoolean",
    "right" : "getBoolean",
    "info" : "SimpleName[58178-58188]:SimpleName[59132-59142]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[58189-58212]:SingleVariableDeclaration[59143-59166]"
  }, {
    "left" : "boolean defaultValue",
    "right" : "boolean defaultValue",
    "info" : "SingleVariableDeclaration[58214-58234]:SingleVariableDeclaration[59168-59188]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58236-58331]:Block[59190-59285]"
  }, {
    "left" : "return getBoolean(secureSettingKey, defaultValue, getCurrentOrCallingUserId());",
    "right" : "return getBoolean(secureSettingKey, defaultValue, getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[58246-58325]:ReturnStatement[59200-59279]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[58337-58344]:Modifier[59291-59298]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[58345-58349]:PrimitiveType[59299-59303]"
  }, {
    "left" : "setBoolean",
    "right" : "setBoolean",
    "info" : "SimpleName[58350-58360]:SimpleName[59304-59314]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[58361-58384]:SingleVariableDeclaration[59315-59338]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[58386-58401]:SingleVariableDeclaration[59340-59355]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[58403-58413]:SingleVariableDeclaration[59357-59367]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58415-58668]:Block[59369-59622]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[58425-58662]:TryStatement[59379-59616]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58429-58517]:Block[59383-59471]"
  }, {
    "left" : "getLockSettings().setBoolean(secureSettingKey, enabled, userId);",
    "right" : "getLockSettings().setBoolean(secureSettingKey, enabled, userId);",
    "info" : "ExpressionStatement[58443-58507]:ExpressionStatement[59397-59461]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58545-58662]:Block[59499-59616]"
  }, {
    "left" : "Log.e(TAG, \"Couldn't write boolean \" + secureSettingKey + re);",
    "right" : "Log.e(TAG, \"Couldn't write boolean \" + secureSettingKey + re);",
    "info" : "ExpressionStatement[58590-58652]:ExpressionStatement[59544-59606]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[58674-58681]:Modifier[59628-59635]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[58682-58686]:PrimitiveType[59636-59640]"
  }, {
    "left" : "setBoolean",
    "right" : "setBoolean",
    "info" : "SimpleName[58687-58697]:SimpleName[59641-59651]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[58698-58721]:SingleVariableDeclaration[59652-59675]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[58723-58738]:SingleVariableDeclaration[59677-59692]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58740-58823]:Block[59694-59777]"
  }, {
    "left" : "setBoolean(secureSettingKey, enabled, getCurrentOrCallingUserId());",
    "right" : "setBoolean(secureSettingKey, enabled, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[58750-58817]:ExpressionStatement[59704-59771]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[58829-58835]:Modifier[59783-59789]"
  }, {
    "left" : "int[]",
    "right" : "int[]",
    "info" : "ArrayType[58836-58841]:ArrayType[59790-59795]"
  }, {
    "left" : "getAppWidgets",
    "right" : "getAppWidgets",
    "info" : "SimpleName[58842-58855]:SimpleName[59796-59809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58858-58920]:Block[59812-59874]"
  }, {
    "left" : "return getAppWidgets(UserHandle.USER_CURRENT);",
    "right" : "return getAppWidgets(UserHandle.USER_CURRENT);",
    "info" : "ReturnStatement[58868-58914]:ReturnStatement[59822-59868]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[58926-58933]:Modifier[59880-59887]"
  }, {
    "left" : "int[]",
    "right" : "int[]",
    "info" : "ArrayType[58934-58939]:ArrayType[59888-59893]"
  }, {
    "left" : "getAppWidgets",
    "right" : "getAppWidgets",
    "info" : "SimpleName[58940-58953]:SimpleName[59894-59907]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[58954-58964]:SingleVariableDeclaration[59908-59918]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58966-59851]:Block[59920-60805]"
  }, {
    "left" : "String appWidgetIdString = Settings.Secure.getStringForUser(\n                mContentResolver, Settings.Secure.LOCK_SCREEN_APPWIDGET_IDS, userId);",
    "right" : "String appWidgetIdString = Settings.Secure.getStringForUser(\n                mContentResolver, Settings.Secure.LOCK_SCREEN_APPWIDGET_IDS, userId);",
    "info" : "VariableDeclarationStatement[58976-59122]:VariableDeclarationStatement[59930-60076]"
  }, {
    "left" : "String delims = \",\";",
    "right" : "String delims = \",\";",
    "info" : "VariableDeclarationStatement[59131-59151]:VariableDeclarationStatement[60085-60105]"
  }, {
    "left" : "if (appWidgetIdString != null && appWidgetIdString.length() > 0)",
    "right" : "if (appWidgetIdString != null && appWidgetIdString.length() > 0)",
    "info" : "IfStatement[59160-59818]:IfStatement[60114-60772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59225-59818]:Block[60179-60772]"
  }, {
    "left" : "String[] appWidgetStringIds = appWidgetIdString.split(delims);",
    "right" : "String[] appWidgetStringIds = appWidgetIdString.split(delims);",
    "info" : "VariableDeclarationStatement[59239-59301]:VariableDeclarationStatement[60193-60255]"
  }, {
    "left" : "int[] appWidgetIds = new int[appWidgetStringIds.length];",
    "right" : "int[] appWidgetIds = new int[appWidgetStringIds.length];",
    "info" : "VariableDeclarationStatement[59314-59370]:VariableDeclarationStatement[60268-60324]"
  }, {
    "left" : "for (int i = 0; i < appWidgetStringIds.length; i++)",
    "right" : "for (int i = 0; i < appWidgetStringIds.length; i++)",
    "info" : "ForStatement[59383-59775]:ForStatement[60337-60729]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59435-59775]:Block[60389-60729]"
  }, {
    "left" : "String appWidget = appWidgetStringIds[i];",
    "right" : "String appWidget = appWidgetStringIds[i];",
    "info" : "VariableDeclarationStatement[59453-59494]:VariableDeclarationStatement[60407-60448]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[59511-59761]:TryStatement[60465-60715]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59515-59599]:Block[60469-60553]"
  }, {
    "left" : "appWidgetIds[i] = Integer.decode(appWidget);",
    "right" : "appWidgetIds[i] = Integer.decode(appWidget);",
    "info" : "ExpressionStatement[59537-59581]:ExpressionStatement[60491-60535]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59632-59761]:Block[60586-60715]"
  }, {
    "left" : "Log.d(TAG, \"Error when parsing widget id \" + appWidget);",
    "right" : "Log.d(TAG, \"Error when parsing widget id \" + appWidget);",
    "info" : "ExpressionStatement[59654-59710]:ExpressionStatement[60608-60664]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[59731-59743]:ReturnStatement[60685-60697]"
  }, {
    "left" : "return appWidgetIds;",
    "right" : "return appWidgetIds;",
    "info" : "ReturnStatement[59788-59808]:ReturnStatement[60742-60762]"
  }, {
    "left" : "return new int[0];",
    "right" : "return new int[0];",
    "info" : "ReturnStatement[59827-59845]:ReturnStatement[60781-60799]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[59857-59864]:Modifier[60811-60818]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[59865-59871]:Modifier[60819-60825]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[59872-59878]:SimpleType[60826-60832]"
  }, {
    "left" : "combineStrings",
    "right" : "combineStrings",
    "info" : "SimpleName[59879-59893]:SimpleName[60833-60847]"
  }, {
    "left" : "int[] list",
    "right" : "int[] list",
    "info" : "SingleVariableDeclaration[59894-59904]:SingleVariableDeclaration[60848-60858]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[59906-59922]:SingleVariableDeclaration[60860-60876]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59924-60821]:Block[60878-61775]"
  }, {
    "left" : "int listLength = list.length;",
    "right" : "int listLength = list.length;",
    "info" : "VariableDeclarationStatement[59934-59963]:VariableDeclarationStatement[60888-60917]"
  }, {
    "left" : "switch (listLength) {\n            case 0: {\n                return \"\";\n            }\n            case 1: {\n                return Integer.toString(list[0]);\n            }\n        }",
    "right" : "switch (listLength) {\n            case 0: {\n                return \"\";\n            }\n            case 1: {\n                return Integer.toString(list[0]);\n            }\n        }",
    "info" : "SwitchStatement[59973-60153]:SwitchStatement[60927-61107]"
  }, {
    "left" : "case 0:",
    "right" : "case 0:",
    "info" : "SwitchCase[60007-60014]:SwitchCase[60961-60968]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60015-60057]:Block[60969-61011]"
  }, {
    "left" : "return \"\";",
    "right" : "return \"\";",
    "info" : "ReturnStatement[60033-60043]:ReturnStatement[60987-60997]"
  }, {
    "left" : "case 1:",
    "right" : "case 1:",
    "info" : "SwitchCase[60070-60077]:SwitchCase[61024-61031]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60078-60143]:Block[61032-61097]"
  }, {
    "left" : "return Integer.toString(list[0]);",
    "right" : "return Integer.toString(list[0]);",
    "info" : "ReturnStatement[60096-60129]:ReturnStatement[61050-61083]"
  }, {
    "left" : "int strLength = 0;",
    "right" : "int strLength = 0;",
    "info" : "VariableDeclarationStatement[60163-60181]:VariableDeclarationStatement[61117-61135]"
  }, {
    "left" : "int separatorLength = separator.length();",
    "right" : "int separatorLength = separator.length();",
    "info" : "VariableDeclarationStatement[60190-60231]:VariableDeclarationStatement[61144-61185]"
  }, {
    "left" : "String[] stringList = new String[list.length];",
    "right" : "String[] stringList = new String[list.length];",
    "info" : "VariableDeclarationStatement[60241-60287]:VariableDeclarationStatement[61195-61241]"
  }, {
    "left" : "for (int i = 0; i < listLength; i++)",
    "right" : "for (int i = 0; i < listLength; i++)",
    "info" : "ForStatement[60296-60546]:ForStatement[61250-61500]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60333-60546]:Block[61287-61500]"
  }, {
    "left" : "stringList[i] = Integer.toString(list[i]);",
    "right" : "stringList[i] = Integer.toString(list[i]);",
    "info" : "ExpressionStatement[60347-60389]:ExpressionStatement[61301-61343]"
  }, {
    "left" : "strLength += stringList[i].length();",
    "right" : "strLength += stringList[i].length();",
    "info" : "ExpressionStatement[60402-60438]:ExpressionStatement[61356-61392]"
  }, {
    "left" : "if (i < listLength - 1)",
    "right" : "if (i < listLength - 1)",
    "info" : "IfStatement[60451-60536]:IfStatement[61405-61490]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60475-60536]:Block[61429-61490]"
  }, {
    "left" : "strLength += separatorLength;",
    "right" : "strLength += separatorLength;",
    "info" : "ExpressionStatement[60493-60522]:ExpressionStatement[61447-61476]"
  }, {
    "left" : "StringBuilder sb = new StringBuilder(strLength);",
    "right" : "StringBuilder sb = new StringBuilder(strLength);",
    "info" : "VariableDeclarationStatement[60556-60604]:VariableDeclarationStatement[61510-61558]"
  }, {
    "left" : "for (int i = 0; i < listLength; i++)",
    "right" : "for (int i = 0; i < listLength; i++)",
    "info" : "ForStatement[60614-60784]:ForStatement[61568-61738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60651-60784]:Block[61605-61738]"
  }, {
    "left" : "sb.append(list[i]);",
    "right" : "sb.append(list[i]);",
    "info" : "ExpressionStatement[60665-60684]:ExpressionStatement[61619-61638]"
  }, {
    "left" : "if (i < listLength - 1)",
    "right" : "if (i < listLength - 1)",
    "info" : "IfStatement[60697-60774]:IfStatement[61651-61728]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60721-60774]:Block[61675-61728]"
  }, {
    "left" : "sb.append(separator);",
    "right" : "sb.append(separator);",
    "info" : "ExpressionStatement[60739-60760]:ExpressionStatement[61693-61714]"
  }, {
    "left" : "return sb.toString();",
    "right" : "return sb.toString();",
    "info" : "ReturnStatement[60794-60815]:ReturnStatement[61748-61769]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[60933-60939]:Modifier[61887-61893]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[60940-60944]:PrimitiveType[61894-61898]"
  }, {
    "left" : "writeFallbackAppWidgetId",
    "right" : "writeFallbackAppWidgetId",
    "info" : "SimpleName[60945-60969]:SimpleName[61899-61923]"
  }, {
    "left" : "int appWidgetId",
    "right" : "int appWidgetId",
    "info" : "SingleVariableDeclaration[60970-60985]:SingleVariableDeclaration[61924-61939]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60987-61188]:Block[61941-62142]"
  }, {
    "left" : "Settings.Secure.putIntForUser(mContentResolver,\n                Settings.Secure.LOCK_SCREEN_FALLBACK_APPWIDGET_ID,\n                appWidgetId,\n                UserHandle.USER_CURRENT);",
    "right" : "Settings.Secure.putIntForUser(mContentResolver,\n                Settings.Secure.LOCK_SCREEN_FALLBACK_APPWIDGET_ID,\n                appWidgetId,\n                UserHandle.USER_CURRENT);",
    "info" : "ExpressionStatement[60997-61182]:ExpressionStatement[61951-62136]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[61300-61306]:Modifier[62254-62260]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[61307-61310]:PrimitiveType[62261-62264]"
  }, {
    "left" : "getFallbackAppWidgetId",
    "right" : "getFallbackAppWidgetId",
    "info" : "SimpleName[61311-61333]:SimpleName[62265-62287]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61336-61587]:Block[62290-62541]"
  }, {
    "left" : "return Settings.Secure.getIntForUser(\n                mContentResolver,\n                Settings.Secure.LOCK_SCREEN_FALLBACK_APPWIDGET_ID,\n                AppWidgetManager.INVALID_APPWIDGET_ID,\n                UserHandle.USER_CURRENT);",
    "right" : "return Settings.Secure.getIntForUser(\n                mContentResolver,\n                Settings.Secure.LOCK_SCREEN_FALLBACK_APPWIDGET_ID,\n                AppWidgetManager.INVALID_APPWIDGET_ID,\n                UserHandle.USER_CURRENT);",
    "info" : "ReturnStatement[61346-61581]:ReturnStatement[62300-62535]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[61593-61600]:Modifier[62547-62554]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[61601-61605]:PrimitiveType[62555-62559]"
  }, {
    "left" : "writeAppWidgets",
    "right" : "writeAppWidgets",
    "info" : "SimpleName[61606-61621]:SimpleName[62560-62575]"
  }, {
    "left" : "int[] appWidgetIds",
    "right" : "int[] appWidgetIds",
    "info" : "SingleVariableDeclaration[61622-61640]:SingleVariableDeclaration[62576-62594]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61642-61884]:Block[62596-62838]"
  }, {
    "left" : "Settings.Secure.putStringForUser(mContentResolver,\n                        Settings.Secure.LOCK_SCREEN_APPWIDGET_IDS,\n                        combineStrings(appWidgetIds, \",\"),\n                        UserHandle.USER_CURRENT);",
    "right" : "Settings.Secure.putStringForUser(mContentResolver,\n                        Settings.Secure.LOCK_SCREEN_APPWIDGET_IDS,\n                        combineStrings(appWidgetIds, \",\"),\n                        UserHandle.USER_CURRENT);",
    "info" : "ExpressionStatement[61652-61878]:ExpressionStatement[62606-62832]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[61938-61944]:Modifier[62892-62898]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[61945-61952]:PrimitiveType[62899-62906]"
  }, {
    "left" : "addAppWidget",
    "right" : "addAppWidget",
    "info" : "SimpleName[61953-61965]:SimpleName[62907-62919]"
  }, {
    "left" : "int widgetId",
    "right" : "int widgetId",
    "info" : "SingleVariableDeclaration[61966-61978]:SingleVariableDeclaration[62920-62932]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[61980-61989]:SingleVariableDeclaration[62934-62943]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61991-62605]:Block[62945-63559]"
  }, {
    "left" : "int[] widgets = getAppWidgets();",
    "right" : "int[] widgets = getAppWidgets();",
    "info" : "VariableDeclarationStatement[62001-62033]:VariableDeclarationStatement[62955-62987]"
  }, {
    "left" : "if (widgets == null)",
    "right" : "if (widgets == null)",
    "info" : "IfStatement[62042-62100]:IfStatement[62996-63054]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62063-62100]:Block[63017-63054]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[62077-62090]:ReturnStatement[63031-63044]"
  }, {
    "left" : "if (index < 0 || index > widgets.length)",
    "right" : "if (index < 0 || index > widgets.length)",
    "info" : "IfStatement[62109-62187]:IfStatement[63063-63141]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62150-62187]:Block[63104-63141]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[62164-62177]:ReturnStatement[63118-63131]"
  }, {
    "left" : "int[] newWidgets = new int[widgets.length + 1];",
    "right" : "int[] newWidgets = new int[widgets.length + 1];",
    "info" : "VariableDeclarationStatement[62196-62243]:VariableDeclarationStatement[63150-63197]"
  }, {
    "left" : "for (int i = 0, j = 0; i < newWidgets.length; i++)",
    "right" : "for (int i = 0, j = 0; i < newWidgets.length; i++)",
    "info" : "ForStatement[62252-62541]:ForStatement[63206-63495]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62303-62541]:Block[63257-63495]"
  }, {
    "left" : "if (index == i)",
    "right" : "if (index == i)",
    "info" : "IfStatement[62317-62411]:IfStatement[63271-63365]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62333-62411]:Block[63287-63365]"
  }, {
    "left" : "newWidgets[i] = widgetId;",
    "right" : "newWidgets[i] = widgetId;",
    "info" : "ExpressionStatement[62351-62376]:ExpressionStatement[63305-63330]"
  }, {
    "left" : "i++;",
    "right" : "i++;",
    "info" : "ExpressionStatement[62393-62397]:ExpressionStatement[63347-63351]"
  }, {
    "left" : "if (i < newWidgets.length)",
    "right" : "if (i < newWidgets.length)",
    "info" : "IfStatement[62424-62531]:IfStatement[63378-63485]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62451-62531]:Block[63405-63485]"
  }, {
    "left" : "newWidgets[i] = widgets[j];",
    "right" : "newWidgets[i] = widgets[j];",
    "info" : "ExpressionStatement[62469-62496]:ExpressionStatement[63423-63450]"
  }, {
    "left" : "j++;",
    "right" : "j++;",
    "info" : "ExpressionStatement[62513-62517]:ExpressionStatement[63467-63471]"
  }, {
    "left" : "writeAppWidgets(newWidgets);",
    "right" : "writeAppWidgets(newWidgets);",
    "info" : "ExpressionStatement[62550-62578]:ExpressionStatement[63504-63532]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[62587-62599]:ReturnStatement[63541-63553]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[62611-62617]:Modifier[63565-63571]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[62618-62625]:PrimitiveType[63572-63579]"
  }, {
    "left" : "removeAppWidget",
    "right" : "removeAppWidget",
    "info" : "SimpleName[62626-62641]:SimpleName[63580-63595]"
  }, {
    "left" : "int widgetId",
    "right" : "int widgetId",
    "info" : "SingleVariableDeclaration[62642-62654]:SingleVariableDeclaration[63596-63608]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62656-63258]:Block[63610-64212]"
  }, {
    "left" : "int[] widgets = getAppWidgets();",
    "right" : "int[] widgets = getAppWidgets();",
    "info" : "VariableDeclarationStatement[62666-62698]:VariableDeclarationStatement[63620-63652]"
  }, {
    "left" : "if (widgets.length == 0)",
    "right" : "if (widgets.length == 0)",
    "info" : "IfStatement[62708-62770]:IfStatement[63662-63724]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62733-62770]:Block[63687-63724]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[62747-62760]:ReturnStatement[63701-63714]"
  }, {
    "left" : "int[] newWidgets = new int[widgets.length - 1];",
    "right" : "int[] newWidgets = new int[widgets.length - 1];",
    "info" : "VariableDeclarationStatement[62780-62827]:VariableDeclarationStatement[63734-63781]"
  }, {
    "left" : "for (int i = 0, j = 0; i < widgets.length; i++)",
    "right" : "for (int i = 0, j = 0; i < widgets.length; i++)",
    "info" : "ForStatement[62836-63194]:ForStatement[63790-64148]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62884-63194]:Block[63838-64148]"
  }, {
    "left" : "if (widgets[i] == widgetId)",
    "right" : "if (widgets[i] == widgetId)",
    "info" : "IfStatement[62898-63184]:IfStatement[63852-64138]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62926-62972]:Block[63880-63926]"
  }, {
    "left" : "if (j >= newWidgets.length)",
    "right" : "if (j >= newWidgets.length)",
    "info" : "IfStatement[62978-63184]:IfStatement[63932-64138]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63006-63098]:Block[63960-64052]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[63071-63084]:ReturnStatement[64025-64038]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63104-63184]:Block[64058-64138]"
  }, {
    "left" : "newWidgets[j] = widgets[i];",
    "right" : "newWidgets[j] = widgets[i];",
    "info" : "ExpressionStatement[63122-63149]:ExpressionStatement[64076-64103]"
  }, {
    "left" : "j++;",
    "right" : "j++;",
    "info" : "ExpressionStatement[63166-63170]:ExpressionStatement[64120-64124]"
  }, {
    "left" : "writeAppWidgets(newWidgets);",
    "right" : "writeAppWidgets(newWidgets);",
    "info" : "ExpressionStatement[63203-63231]:ExpressionStatement[64157-64185]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[63240-63252]:ReturnStatement[64194-64206]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[63264-63271]:Modifier[64218-64225]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[63272-63276]:PrimitiveType[64226-64230]"
  }, {
    "left" : "getLong",
    "right" : "getLong",
    "info" : "SimpleName[63277-63284]:SimpleName[64231-64238]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[63285-63308]:SingleVariableDeclaration[64239-64262]"
  }, {
    "left" : "long defaultValue",
    "right" : "long defaultValue",
    "info" : "SingleVariableDeclaration[63310-63327]:SingleVariableDeclaration[64264-64281]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[63329-63343]:SingleVariableDeclaration[64283-64297]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63345-63538]:Block[64299-64492]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[63355-63532]:TryStatement[64309-64486]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63359-63460]:Block[64313-64414]"
  }, {
    "left" : "return getLockSettings().getLong(secureSettingKey, defaultValue, userHandle);",
    "right" : "return getLockSettings().getLong(secureSettingKey, defaultValue, userHandle);",
    "info" : "ReturnStatement[63373-63450]:ReturnStatement[64327-64404]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63488-63532]:Block[64442-64486]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[63502-63522]:ReturnStatement[64456-64476]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[63544-63551]:Modifier[64498-64505]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[63552-63556]:PrimitiveType[64506-64510]"
  }, {
    "left" : "getLong",
    "right" : "getLong",
    "info" : "SimpleName[63557-63564]:SimpleName[64511-64518]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[63565-63588]:SingleVariableDeclaration[64519-64542]"
  }, {
    "left" : "long defaultValue",
    "right" : "long defaultValue",
    "info" : "SingleVariableDeclaration[63590-63607]:SingleVariableDeclaration[64544-64561]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63609-63839]:Block[64563-64793]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[63619-63833]:TryStatement[64573-64787]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63623-63761]:Block[64577-64715]"
  }, {
    "left" : "return getLockSettings().getLong(secureSettingKey, defaultValue,\n                    getCurrentOrCallingUserId());",
    "right" : "return getLockSettings().getLong(secureSettingKey, defaultValue,\n                    getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[63637-63751]:ReturnStatement[64591-64705]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63789-63833]:Block[64743-64787]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[63803-63823]:ReturnStatement[64757-64777]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[63845-63852]:Modifier[64799-64806]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[63853-63857]:PrimitiveType[64807-64811]"
  }, {
    "left" : "setLong",
    "right" : "setLong",
    "info" : "SimpleName[63858-63865]:SimpleName[64812-64819]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[63866-63889]:SingleVariableDeclaration[64820-64843]"
  }, {
    "left" : "long value",
    "right" : "long value",
    "info" : "SingleVariableDeclaration[63891-63901]:SingleVariableDeclaration[64845-64855]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63903-63981]:Block[64857-64935]"
  }, {
    "left" : "setLong(secureSettingKey, value, getCurrentOrCallingUserId());",
    "right" : "setLong(secureSettingKey, value, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[63913-63975]:ExpressionStatement[64867-64929]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[63987-63994]:Modifier[64941-64948]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[63995-63999]:PrimitiveType[64949-64953]"
  }, {
    "left" : "setLong",
    "right" : "setLong",
    "info" : "SimpleName[64000-64007]:SimpleName[64954-64961]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[64008-64031]:SingleVariableDeclaration[64962-64985]"
  }, {
    "left" : "long value",
    "right" : "long value",
    "info" : "SingleVariableDeclaration[64033-64043]:SingleVariableDeclaration[64987-64997]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[64045-64059]:SingleVariableDeclaration[64999-65013]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64061-64310]:Block[65015-65264]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[64071-64304]:TryStatement[65025-65258]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64075-64162]:Block[65029-65116]"
  }, {
    "left" : "getLockSettings().setLong(secureSettingKey, value, userHandle);",
    "right" : "getLockSettings().setLong(secureSettingKey, value, userHandle);",
    "info" : "ExpressionStatement[64089-64152]:ExpressionStatement[65043-65106]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64190-64304]:Block[65144-65258]"
  }, {
    "left" : "Log.e(TAG, \"Couldn't write long \" + secureSettingKey + re);",
    "right" : "Log.e(TAG, \"Couldn't write long \" + secureSettingKey + re);",
    "info" : "ExpressionStatement[64235-64294]:ExpressionStatement[65189-65248]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[64316-64323]:Modifier[65270-65277]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[64324-64330]:SimpleType[65278-65284]"
  }, {
    "left" : "getString",
    "right" : "getString",
    "info" : "SimpleName[64331-64340]:SimpleName[65285-65294]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[64341-64364]:SingleVariableDeclaration[65295-65318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64366-64446]:Block[65320-65400]"
  }, {
    "left" : "return getString(secureSettingKey, getCurrentOrCallingUserId());",
    "right" : "return getString(secureSettingKey, getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[64376-64440]:ReturnStatement[65330-65394]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[64452-64459]:Modifier[65406-65413]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[64460-64466]:SimpleType[65414-65420]"
  }, {
    "left" : "getString",
    "right" : "getString",
    "info" : "SimpleName[64467-64476]:SimpleName[65421-65430]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[64477-64500]:SingleVariableDeclaration[65431-65454]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[64502-64516]:SingleVariableDeclaration[65456-65470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64518-64697]:Block[65472-65651]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[64528-64691]:TryStatement[65482-65645]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64532-64627]:Block[65486-65581]"
  }, {
    "left" : "return getLockSettings().getString(secureSettingKey, null, userHandle);",
    "right" : "return getLockSettings().getString(secureSettingKey, null, userHandle);",
    "info" : "ReturnStatement[64546-64617]:ReturnStatement[65500-65571]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64655-64691]:Block[65609-65645]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[64669-64681]:ReturnStatement[65623-65635]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[64703-64710]:Modifier[65657-65664]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[64711-64715]:PrimitiveType[65665-65669]"
  }, {
    "left" : "setString",
    "right" : "setString",
    "info" : "SimpleName[64716-64725]:SimpleName[65670-65679]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[64726-64749]:SingleVariableDeclaration[65680-65703]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[64751-64763]:SingleVariableDeclaration[65705-65717]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[64765-64779]:SingleVariableDeclaration[65719-65733]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64781-65034]:Block[65735-65988]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[64791-65028]:TryStatement[65745-65982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64795-64884]:Block[65749-65838]"
  }, {
    "left" : "getLockSettings().setString(secureSettingKey, value, userHandle);",
    "right" : "getLockSettings().setString(secureSettingKey, value, userHandle);",
    "info" : "ExpressionStatement[64809-64874]:ExpressionStatement[65763-65828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64912-65028]:Block[65866-65982]"
  }, {
    "left" : "Log.e(TAG, \"Couldn't write string \" + secureSettingKey + re);",
    "right" : "Log.e(TAG, \"Couldn't write string \" + secureSettingKey + re);",
    "info" : "ExpressionStatement[64957-65018]:ExpressionStatement[65911-65972]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[65040-65046]:Modifier[65994-66000]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[65047-65054]:PrimitiveType[66001-66008]"
  }, {
    "left" : "isSecure",
    "right" : "isSecure",
    "info" : "SimpleName[65055-65063]:SimpleName[66009-66017]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65066-65127]:Block[66020-66081]"
  }, {
    "left" : "return isSecure(getCurrentOrCallingUserId());",
    "right" : "return isSecure(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[65076-65121]:ReturnStatement[66030-66075]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[65133-65139]:Modifier[66087-66093]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[65140-65147]:PrimitiveType[66094-66101]"
  }, {
    "left" : "isSecure",
    "right" : "isSecure",
    "info" : "SimpleName[65148-65156]:SimpleName[66102-66110]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[65157-65167]:SingleVariableDeclaration[66111-66121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65169-65983]:Block[66123-66937]"
  }, {
    "left" : "long mode = getKeyguardStoredPasswordQuality(userId);",
    "right" : "long mode = getKeyguardStoredPasswordQuality(userId);",
    "info" : "VariableDeclarationStatement[65179-65232]:VariableDeclarationStatement[66133-66186]"
  }, {
    "left" : "final boolean isPattern = mode == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "right" : "final boolean isPattern = mode == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "info" : "VariableDeclarationStatement[65241-65322]:VariableDeclarationStatement[66195-66276]"
  }, {
    "left" : "final boolean isPassword = mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "right" : "final boolean isPassword = mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "info" : "VariableDeclarationStatement[65331-65715]:VariableDeclarationStatement[66285-66669]"
  }, {
    "left" : "final boolean secure =\n                isPattern && isLockPatternEnabled(userId) && savedPatternExists(userId)\n                || isPassword && savedPasswordExists(userId);",
    "right" : "final boolean secure =\n                isPattern && isLockPatternEnabled(userId) && savedPatternExists(userId)\n                || isPassword && savedPasswordExists(userId);",
    "info" : "VariableDeclarationStatement[65724-65896]:VariableDeclarationStatement[66678-66850]"
  }, {
    "left" : "return secure && getActiveProfileLockMode() != Profile.LockMode.DISABLE;",
    "right" : "return secure && getActiveProfileLockMode() != Profile.LockMode.DISABLE;",
    "info" : "ReturnStatement[65905-65977]:ReturnStatement[66859-66931]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[65989-65995]:Modifier[66943-66949]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[65996-65999]:PrimitiveType[66950-66953]"
  }, {
    "left" : "getActiveProfileLockMode",
    "right" : "getActiveProfileLockMode",
    "info" : "SimpleName[66000-66024]:SimpleName[66954-66978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66027-66449]:Block[66981-67403]"
  }, {
    "left" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "right" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "info" : "VariableDeclarationStatement[66068-66119]:VariableDeclarationStatement[67022-67073]"
  }, {
    "left" : "if (dpm.requireSecureKeyguard(getCurrentOrCallingUserId()))",
    "right" : "if (dpm.requireSecureKeyguard(getCurrentOrCallingUserId()))",
    "info" : "IfStatement[66128-66286]:IfStatement[67082-67240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66188-66286]:Block[67142-67240]"
  }, {
    "left" : "return Profile.LockMode.DEFAULT;",
    "right" : "return Profile.LockMode.DEFAULT;",
    "info" : "ReturnStatement[66244-66276]:ReturnStatement[67198-67230]"
  }, {
    "left" : "final Profile profile = mProfileManager.getActiveProfile();",
    "right" : "final Profile profile = mProfileManager.getActiveProfile();",
    "info" : "VariableDeclarationStatement[66295-66354]:VariableDeclarationStatement[67249-67308]"
  }, {
    "left" : "return profile == null ? Profile.LockMode.DEFAULT : profile.getScreenLockMode();",
    "right" : "return profile == null ? Profile.LockMode.DEFAULT : profile.getScreenLockMode();",
    "info" : "ReturnStatement[66363-66443]:ReturnStatement[67317-67397]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[66994-67000]:Modifier[67948-67954]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[67001-67005]:PrimitiveType[67955-67959]"
  }, {
    "left" : "updateEmergencyCallButtonState",
    "right" : "updateEmergencyCallButtonState",
    "info" : "SimpleName[67006-67036]:SimpleName[67960-67990]"
  }, {
    "left" : "Button button",
    "right" : "Button button",
    "info" : "SingleVariableDeclaration[67037-67050]:SingleVariableDeclaration[67991-68004]"
  }, {
    "left" : "boolean shown",
    "right" : "boolean shown",
    "info" : "SingleVariableDeclaration[67052-67065]:SingleVariableDeclaration[68006-68019]"
  }, {
    "left" : "boolean showIcon",
    "right" : "boolean showIcon",
    "info" : "SingleVariableDeclaration[67067-67083]:SingleVariableDeclaration[68021-68037]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67085-67882]:Block[68039-68836]"
  }, {
    "left" : "if (isEmergencyCallCapable() && shown)",
    "right" : "if (isEmergencyCallCapable() && shown)",
    "info" : "IfStatement[67095-67275]:IfStatement[68049-68229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67134-67193]:Block[68088-68147]"
  }, {
    "left" : "button.setVisibility(View.VISIBLE);",
    "right" : "button.setVisibility(View.VISIBLE);",
    "info" : "ExpressionStatement[67148-67183]:ExpressionStatement[68102-68137]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67199-67275]:Block[68153-68229]"
  }, {
    "left" : "button.setVisibility(View.GONE);",
    "right" : "button.setVisibility(View.GONE);",
    "info" : "ExpressionStatement[67213-67245]:ExpressionStatement[68167-68199]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[67258-67265]:ReturnStatement[68212-68219]"
  }, {
    "left" : "int textId;",
    "right" : "int textId;",
    "info" : "VariableDeclarationStatement[67285-67296]:VariableDeclarationStatement[68239-68250]"
  }, {
    "left" : "if (isInCall())",
    "right" : "if (isInCall())",
    "info" : "IfStatement[67305-67844]:IfStatement[68259-68798]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67321-67614]:Block[68275-68568]"
  }, {
    "left" : "textId = R.string.lockscreen_return_to_call;",
    "right" : "textId = R.string.lockscreen_return_to_call;",
    "info" : "ExpressionStatement[67397-67441]:ExpressionStatement[68351-68395]"
  }, {
    "left" : "int phoneCallIcon = showIcon ? R.drawable.stat_sys_phone_call : 0;",
    "right" : "int phoneCallIcon = showIcon ? R.drawable.stat_sys_phone_call : 0;",
    "info" : "VariableDeclarationStatement[67454-67520]:VariableDeclarationStatement[68408-68474]"
  }, {
    "left" : "button.setCompoundDrawablesWithIntrinsicBounds(phoneCallIcon, 0, 0, 0);",
    "right" : "button.setCompoundDrawablesWithIntrinsicBounds(phoneCallIcon, 0, 0, 0);",
    "info" : "ExpressionStatement[67533-67604]:ExpressionStatement[68487-68558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67620-67844]:Block[68574-68798]"
  }, {
    "left" : "textId = R.string.lockscreen_emergency_call;",
    "right" : "textId = R.string.lockscreen_emergency_call;",
    "info" : "ExpressionStatement[67634-67678]:ExpressionStatement[68588-68632]"
  }, {
    "left" : "int emergencyIcon = showIcon ? R.drawable.ic_emergency : 0;",
    "right" : "int emergencyIcon = showIcon ? R.drawable.ic_emergency : 0;",
    "info" : "VariableDeclarationStatement[67691-67750]:VariableDeclarationStatement[68645-68704]"
  }, {
    "left" : "button.setCompoundDrawablesWithIntrinsicBounds(emergencyIcon, 0, 0, 0);",
    "right" : "button.setCompoundDrawablesWithIntrinsicBounds(emergencyIcon, 0, 0, 0);",
    "info" : "ExpressionStatement[67763-67834]:ExpressionStatement[68717-68788]"
  }, {
    "left" : "button.setText(textId);",
    "right" : "button.setText(textId);",
    "info" : "ExpressionStatement[67853-67876]:ExpressionStatement[68807-68830]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[68019-68025]:Modifier[68973-68979]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[68026-68030]:PrimitiveType[68980-68984]"
  }, {
    "left" : "resumeCall",
    "right" : "resumeCall",
    "info" : "SimpleName[68031-68041]:SimpleName[68985-68995]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68044-68105]:Block[68998-69059]"
  }, {
    "left" : "getTelecommManager().showInCallScreen(false);",
    "right" : "getTelecommManager().showInCallScreen(false);",
    "info" : "ExpressionStatement[68054-68099]:ExpressionStatement[69008-69053]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[68222-68228]:Modifier[69176-69182]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[68229-68236]:PrimitiveType[69183-69190]"
  }, {
    "left" : "isInCall",
    "right" : "isInCall",
    "info" : "SimpleName[68237-68245]:SimpleName[69191-69199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68248-68303]:Block[69202-69257]"
  }, {
    "left" : "return getTelecommManager().isInCall();",
    "right" : "return getTelecommManager().isInCall();",
    "info" : "ReturnStatement[68258-68297]:ReturnStatement[69212-69251]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[68309-68316]:Modifier[69263-69270]"
  }, {
    "left" : "TelecomManager",
    "right" : "TelecomManager",
    "info" : "SimpleType[68317-68331]:SimpleType[69271-69285]"
  }, {
    "left" : "getTelecommManager",
    "right" : "getTelecommManager",
    "info" : "SimpleName[68332-68350]:SimpleName[69286-69304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68353-68444]:Block[69307-69398]"
  }, {
    "left" : "return (TelecomManager) mContext.getSystemService(Context.TELECOM_SERVICE);",
    "right" : "return (TelecomManager) mContext.getSystemService(Context.TELECOM_SERVICE);",
    "info" : "ReturnStatement[68363-68438]:ReturnStatement[69317-69392]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[68450-68457]:Modifier[69404-69411]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[68458-68462]:PrimitiveType[69412-69416]"
  }, {
    "left" : "finishBiometricWeak",
    "right" : "finishBiometricWeak",
    "info" : "SimpleName[68463-68482]:SimpleName[69417-69436]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[68483-68493]:SingleVariableDeclaration[69437-69447]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68495-68903]:Block[69449-69857]"
  }, {
    "left" : "setBoolean(BIOMETRIC_WEAK_EVER_CHOSEN_KEY, true, userId);",
    "right" : "setBoolean(BIOMETRIC_WEAK_EVER_CHOSEN_KEY, true, userId);",
    "info" : "ExpressionStatement[68505-68562]:ExpressionStatement[69459-69516]"
  }, {
    "left" : "Intent intent = new Intent();",
    "right" : "Intent intent = new Intent();",
    "info" : "VariableDeclarationStatement[68690-68719]:VariableDeclarationStatement[69644-69673]"
  }, {
    "left" : "intent.setClassName(\"com.android.facelock\",\n                \"com.android.facelock.SetupEndScreen\");",
    "right" : "intent.setClassName(\"com.android.facelock\",\n                \"com.android.facelock.SetupEndScreen\");",
    "info" : "ExpressionStatement[68728-68827]:ExpressionStatement[69682-69781]"
  }, {
    "left" : "mContext.startActivityAsUser(intent, new UserHandle(userId));",
    "right" : "mContext.startActivityAsUser(intent, new UserHandle(userId));",
    "info" : "ExpressionStatement[68836-68897]:ExpressionStatement[69790-69851]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[68909-68915]:Modifier[69863-69869]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[68916-68920]:PrimitiveType[69870-69874]"
  }, {
    "left" : "setPowerButtonInstantlyLocks",
    "right" : "setPowerButtonInstantlyLocks",
    "info" : "SimpleName[68921-68949]:SimpleName[69875-69903]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[68950-68965]:SingleVariableDeclaration[69904-69919]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68967-69044]:Block[69921-69998]"
  }, {
    "left" : "setBoolean(LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS, enabled);",
    "right" : "setBoolean(LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS, enabled);",
    "info" : "ExpressionStatement[68977-69038]:ExpressionStatement[69931-69992]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69050-69056]:Modifier[70004-70010]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[69057-69064]:PrimitiveType[70011-70018]"
  }, {
    "left" : "getPowerButtonInstantlyLocks",
    "right" : "getPowerButtonInstantlyLocks",
    "info" : "SimpleName[69065-69093]:SimpleName[70019-70047]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69096-69177]:Block[70050-70131]"
  }, {
    "left" : "return getBoolean(LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS, true);",
    "right" : "return getBoolean(LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS, true);",
    "info" : "ReturnStatement[69106-69171]:ReturnStatement[70060-70125]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69183-69189]:Modifier[70137-70143]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[69190-69196]:Modifier[70144-70150]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[69197-69204]:PrimitiveType[70151-70158]"
  }, {
    "left" : "isSafeModeEnabled",
    "right" : "isSafeModeEnabled",
    "info" : "SimpleName[69205-69222]:SimpleName[70159-70176]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69225-69479]:Block[70179-70433]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[69235-69451]:TryStatement[70189-70405]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69239-69380]:Block[70193-70334]"
  }, {
    "left" : "return IWindowManager.Stub.asInterface(\n                    ServiceManager.getService(\"window\")).isSafeModeEnabled();",
    "right" : "return IWindowManager.Stub.asInterface(\n                    ServiceManager.getService(\"window\")).isSafeModeEnabled();",
    "info" : "ReturnStatement[69253-69370]:ReturnStatement[70207-70324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69407-69451]:Block[70361-70405]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[69460-69473]:ReturnStatement[70414-70427]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69640-69646]:Modifier[70594-70600]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[69647-69654]:PrimitiveType[70601-70608]"
  }, {
    "left" : "hasWidgetsEnabledInKeyguard",
    "right" : "hasWidgetsEnabledInKeyguard",
    "info" : "SimpleName[69655-69682]:SimpleName[70609-70636]"
  }, {
    "left" : "int userid",
    "right" : "int userid",
    "info" : "SingleVariableDeclaration[69683-69693]:SingleVariableDeclaration[70637-70647]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69695-69909]:Block[70649-70863]"
  }, {
    "left" : "int widgets[] = getAppWidgets(userid);",
    "right" : "int widgets[] = getAppWidgets(userid);",
    "info" : "VariableDeclarationStatement[69705-69743]:VariableDeclarationStatement[70659-70697]"
  }, {
    "left" : "for (int i = 0; i < widgets.length; i++)",
    "right" : "for (int i = 0; i < widgets.length; i++)",
    "info" : "ForStatement[69752-69881]:ForStatement[70706-70835]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69793-69881]:Block[70747-70835]"
  }, {
    "left" : "if (widgets[i] > 0)",
    "right" : "if (widgets[i] > 0)",
    "info" : "IfStatement[69807-69871]:IfStatement[70761-70825]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69827-69871]:Block[70781-70825]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[69845-69857]:ReturnStatement[70799-70811]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[69890-69903]:ReturnStatement[70844-70857]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69915-69921]:Modifier[70869-70875]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[69922-69929]:PrimitiveType[70876-70883]"
  }, {
    "left" : "getWidgetsEnabled",
    "right" : "getWidgetsEnabled",
    "info" : "SimpleName[69930-69947]:SimpleName[70884-70901]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69950-70020]:Block[70904-70974]"
  }, {
    "left" : "return getWidgetsEnabled(getCurrentOrCallingUserId());",
    "right" : "return getWidgetsEnabled(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[69960-70014]:ReturnStatement[70914-70968]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[70026-70032]:Modifier[70980-70986]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[70033-70040]:PrimitiveType[70987-70994]"
  }, {
    "left" : "getWidgetsEnabled",
    "right" : "getWidgetsEnabled",
    "info" : "SimpleName[70041-70058]:SimpleName[70995-71012]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[70059-70069]:SingleVariableDeclaration[71013-71023]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70071-70148]:Block[71025-71102]"
  }, {
    "left" : "return getBoolean(LOCKSCREEN_WIDGETS_ENABLED, false, userId);",
    "right" : "return getBoolean(LOCKSCREEN_WIDGETS_ENABLED, false, userId);",
    "info" : "ReturnStatement[70081-70142]:ReturnStatement[71035-71096]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[70154-70160]:Modifier[71108-71114]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[70161-70165]:PrimitiveType[71115-71119]"
  }, {
    "left" : "setWidgetsEnabled",
    "right" : "setWidgetsEnabled",
    "info" : "SimpleName[70166-70183]:SimpleName[71120-71137]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[70184-70199]:SingleVariableDeclaration[71138-71153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70201-70273]:Block[71155-71227]"
  }, {
    "left" : "setWidgetsEnabled(enabled, getCurrentOrCallingUserId());",
    "right" : "setWidgetsEnabled(enabled, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[70211-70267]:ExpressionStatement[71165-71221]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[70279-70285]:Modifier[71233-71239]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[70286-70290]:PrimitiveType[71240-71244]"
  }, {
    "left" : "setWidgetsEnabled",
    "right" : "setWidgetsEnabled",
    "info" : "SimpleName[70291-70308]:SimpleName[71245-71262]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[70309-70324]:SingleVariableDeclaration[71263-71278]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[70326-70336]:SingleVariableDeclaration[71280-71290]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70338-70410]:Block[71292-71364]"
  }, {
    "left" : "setBoolean(LOCKSCREEN_WIDGETS_ENABLED, enabled, userId);",
    "right" : "setBoolean(LOCKSCREEN_WIDGETS_ENABLED, enabled, userId);",
    "info" : "ExpressionStatement[70348-70404]:ExpressionStatement[71302-71358]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[70416-70422]:Modifier[71370-71376]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[70423-70427]:PrimitiveType[71377-71381]"
  }, {
    "left" : "setEnabledTrustAgents",
    "right" : "setEnabledTrustAgents",
    "info" : "SimpleName[70428-70449]:SimpleName[71382-71403]"
  }, {
    "left" : "Collection<ComponentName> activeTrustAgents",
    "right" : "Collection<ComponentName> activeTrustAgents",
    "info" : "SingleVariableDeclaration[70450-70493]:SingleVariableDeclaration[71404-71447]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70495-70581]:Block[71449-71535]"
  }, {
    "left" : "setEnabledTrustAgents(activeTrustAgents, getCurrentOrCallingUserId());",
    "right" : "setEnabledTrustAgents(activeTrustAgents, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[70505-70575]:ExpressionStatement[71459-71529]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[70587-70593]:Modifier[71541-71547]"
  }, {
    "left" : "List<ComponentName>",
    "right" : "List<ComponentName>",
    "info" : "ParameterizedType[70594-70613]:ParameterizedType[71548-71567]"
  }, {
    "left" : "getEnabledTrustAgents",
    "right" : "getEnabledTrustAgents",
    "info" : "SimpleName[70614-70635]:SimpleName[71568-71589]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70638-70712]:Block[71592-71666]"
  }, {
    "left" : "return getEnabledTrustAgents(getCurrentOrCallingUserId());",
    "right" : "return getEnabledTrustAgents(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[70648-70706]:ReturnStatement[71602-71660]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[70718-70724]:Modifier[71672-71678]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[70725-70729]:PrimitiveType[71679-71683]"
  }, {
    "left" : "setEnabledTrustAgents",
    "right" : "setEnabledTrustAgents",
    "info" : "SimpleName[70730-70751]:SimpleName[71684-71705]"
  }, {
    "left" : "Collection<ComponentName> activeTrustAgents",
    "right" : "Collection<ComponentName> activeTrustAgents",
    "info" : "SingleVariableDeclaration[70752-70795]:SingleVariableDeclaration[71706-71749]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[70797-70807]:SingleVariableDeclaration[71751-71761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70809-71210]:Block[71763-72164]"
  }, {
    "left" : "StringBuilder sb = new StringBuilder();",
    "right" : "StringBuilder sb = new StringBuilder();",
    "info" : "VariableDeclarationStatement[70819-70858]:VariableDeclarationStatement[71773-71812]"
  }, {
    "left" : "for (ComponentName cn : activeTrustAgents)",
    "right" : "for (ComponentName cn : activeTrustAgents)",
    "info" : "EnhancedForStatement[70867-71052]:EnhancedForStatement[71821-72006]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70910-71052]:Block[71864-72006]"
  }, {
    "left" : "if (sb.length() > 0)",
    "right" : "if (sb.length() > 0)",
    "info" : "IfStatement[70924-70992]:IfStatement[71878-71946]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70945-70992]:Block[71899-71946]"
  }, {
    "left" : "sb.append(',');",
    "right" : "sb.append(',');",
    "info" : "ExpressionStatement[70963-70978]:ExpressionStatement[71917-71932]"
  }, {
    "left" : "sb.append(cn.flattenToShortString());",
    "right" : "sb.append(cn.flattenToShortString());",
    "info" : "ExpressionStatement[71005-71042]:ExpressionStatement[71959-71996]"
  }, {
    "left" : "setString(ENABLED_TRUST_AGENTS, sb.toString(), userId);",
    "right" : "setString(ENABLED_TRUST_AGENTS, sb.toString(), userId);",
    "info" : "ExpressionStatement[71061-71116]:ExpressionStatement[72015-72070]"
  }, {
    "left" : "getTrustManager().reportEnabledTrustAgentsChanged(getCurrentOrCallingUserId());",
    "right" : "getTrustManager().reportEnabledTrustAgentsChanged(getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[71125-71204]:ExpressionStatement[72079-72158]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[71216-71222]:Modifier[72170-72176]"
  }, {
    "left" : "List<ComponentName>",
    "right" : "List<ComponentName>",
    "info" : "ParameterizedType[71223-71242]:ParameterizedType[72177-72196]"
  }, {
    "left" : "getEnabledTrustAgents",
    "right" : "getEnabledTrustAgents",
    "info" : "SimpleName[71243-71264]:SimpleName[72197-72218]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[71265-71275]:SingleVariableDeclaration[72219-72229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71277-71787]:Block[72231-72741]"
  }, {
    "left" : "String serialized = getString(ENABLED_TRUST_AGENTS, userId);",
    "right" : "String serialized = getString(ENABLED_TRUST_AGENTS, userId);",
    "info" : "VariableDeclarationStatement[71287-71347]:VariableDeclarationStatement[72241-72301]"
  }, {
    "left" : "if (TextUtils.isEmpty(serialized))",
    "right" : "if (TextUtils.isEmpty(serialized))",
    "info" : "IfStatement[71356-71427]:IfStatement[72310-72381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71391-71427]:Block[72345-72381]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[71405-71417]:ReturnStatement[72359-72371]"
  }, {
    "left" : "String[] split = serialized.split(\",\");",
    "right" : "String[] split = serialized.split(\",\");",
    "info" : "VariableDeclarationStatement[71436-71475]:VariableDeclarationStatement[72390-72429]"
  }, {
    "left" : "ArrayList<ComponentName> activeTrustAgents = new ArrayList<ComponentName>(split.length);",
    "right" : "ArrayList<ComponentName> activeTrustAgents = new ArrayList<ComponentName>(split.length);",
    "info" : "VariableDeclarationStatement[71484-71572]:VariableDeclarationStatement[72438-72526]"
  }, {
    "left" : "for (String s : split)",
    "right" : "for (String s : split)",
    "info" : "EnhancedForStatement[71581-71747]:EnhancedForStatement[72535-72701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71604-71747]:Block[72558-72701]"
  }, {
    "left" : "if (!TextUtils.isEmpty(s))",
    "right" : "if (!TextUtils.isEmpty(s))",
    "info" : "IfStatement[71618-71737]:IfStatement[72572-72691]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71645-71737]:Block[72599-72691]"
  }, {
    "left" : "activeTrustAgents.add(ComponentName.unflattenFromString(s));",
    "right" : "activeTrustAgents.add(ComponentName.unflattenFromString(s));",
    "info" : "ExpressionStatement[71663-71723]:ExpressionStatement[72617-72677]"
  }, {
    "left" : "return activeTrustAgents;",
    "right" : "return activeTrustAgents;",
    "info" : "ReturnStatement[71756-71781]:ReturnStatement[72710-72735]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[71886-71892]:Modifier[72840-72846]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[71893-71897]:PrimitiveType[72847-72851]"
  }, {
    "left" : "requireCredentialEntry",
    "right" : "requireCredentialEntry",
    "info" : "SimpleName[71898-71920]:SimpleName[72852-72874]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[71921-71931]:SingleVariableDeclaration[72875-72885]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71933-72004]:Block[72887-72958]"
  }, {
    "left" : "getTrustManager().reportRequireCredentialEntry(userId);",
    "right" : "getTrustManager().reportRequireCredentialEntry(userId);",
    "info" : "ExpressionStatement[71943-71998]:ExpressionStatement[72897-72952]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[72010-72017]:Modifier[72964-72971]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[72018-72022]:PrimitiveType[72972-72976]"
  }, {
    "left" : "onAfterChangingPassword",
    "right" : "onAfterChangingPassword",
    "info" : "SimpleName[72023-72046]:SimpleName[72977-73000]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[72047-72061]:SingleVariableDeclaration[73001-73015]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72063-72141]:Block[73017-73095]"
  }, {
    "left" : "getTrustManager().reportEnabledTrustAgentsChanged(userHandle);",
    "right" : "getTrustManager().reportEnabledTrustAgentsChanged(userHandle);",
    "info" : "ExpressionStatement[72073-72135]:ExpressionStatement[73027-73089]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[72147-72153]:Modifier[73101-73107]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[72154-72161]:PrimitiveType[73108-73115]"
  }, {
    "left" : "isCredentialRequiredToDecrypt",
    "right" : "isCredentialRequiredToDecrypt",
    "info" : "SimpleName[72162-72191]:SimpleName[73116-73145]"
  }, {
    "left" : "boolean defaultValue",
    "right" : "boolean defaultValue",
    "info" : "SingleVariableDeclaration[72192-72212]:SingleVariableDeclaration[73146-73166]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72214-72412]:Block[73168-73366]"
  }, {
    "left" : "final int value = Settings.Global.getInt(mContentResolver,\n                Settings.Global.REQUIRE_PASSWORD_TO_DECRYPT, -1);",
    "right" : "final int value = Settings.Global.getInt(mContentResolver,\n                Settings.Global.REQUIRE_PASSWORD_TO_DECRYPT, -1);",
    "info" : "VariableDeclarationStatement[72224-72348]:VariableDeclarationStatement[73178-73302]"
  }, {
    "left" : "return value == -1 ? defaultValue : (value != 0);",
    "right" : "return value == -1 ? defaultValue : (value != 0);",
    "info" : "ReturnStatement[72357-72406]:ReturnStatement[73311-73360]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[72418-72424]:Modifier[73372-73378]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[72425-72429]:PrimitiveType[73379-73383]"
  }, {
    "left" : "setCredentialRequiredToDecrypt",
    "right" : "setCredentialRequiredToDecrypt",
    "info" : "SimpleName[72430-72460]:SimpleName[73384-73414]"
  }, {
    "left" : "boolean required",
    "right" : "boolean required",
    "info" : "SingleVariableDeclaration[72461-72477]:SingleVariableDeclaration[73415-73431]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72479-72803]:Block[73433-73757]"
  }, {
    "left" : "if (getCurrentUser() != UserHandle.USER_OWNER)",
    "right" : "if (getCurrentUser() != UserHandle.USER_OWNER)",
    "info" : "IfStatement[72489-72655]:IfStatement[73443-73609]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72536-72655]:Block[73490-73609]"
  }, {
    "left" : "Log.w(TAG, \"Only device owner may call setCredentialRequiredForDecrypt()\");",
    "right" : "Log.w(TAG, \"Only device owner may call setCredentialRequiredForDecrypt()\");",
    "info" : "ExpressionStatement[72550-72625]:ExpressionStatement[73504-73579]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[72638-72645]:ReturnStatement[73592-73599]"
  }, {
    "left" : "Settings.Global.putInt(mContext.getContentResolver(),\n                Settings.Global.REQUIRE_PASSWORD_TO_DECRYPT, required ? 1 : 0);",
    "right" : "Settings.Global.putInt(mContext.getContentResolver(),\n                Settings.Global.REQUIRE_PASSWORD_TO_DECRYPT, required ? 1 : 0);",
    "info" : "ExpressionStatement[72664-72797]:ExpressionStatement[73618-73751]"
  } ]
}