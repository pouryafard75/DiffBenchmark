{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CharacterReader",
      "right" : "CharacterReader",
      "info" : "TypeDeclaration[232-14002]:TypeDeclaration[232-14048]"
    }, {
      "left" : "static final char EOF = (char) -1;",
      "right" : "static final char EOF = (char) -1;",
      "info" : "FieldDeclaration[378-412]:FieldDeclaration[378-412]"
    }, {
      "left" : "private static final int maxStringCacheLen = 12;",
      "right" : "private static final int maxStringCacheLen = 12;",
      "info" : "FieldDeclaration[417-465]:FieldDeclaration[417-465]"
    }, {
      "left" : "static final int maxBufferLen = 1024 * 32;",
      "right" : "static final int maxBufferLen = 1024 * 32;",
      "info" : "FieldDeclaration[470-512]:FieldDeclaration[470-512]"
    }, {
      "left" : "private static final int readAheadLimit = (int) (maxBufferLen * 0.75);",
      "right" : "private static final int readAheadLimit = (int) (maxBufferLen * 0.75);",
      "info" : "FieldDeclaration[540-610]:FieldDeclaration[540-610]"
    }, {
      "left" : "private final char[] charBuf;",
      "right" : "private final char[] charBuf;",
      "info" : "FieldDeclaration[616-645]:FieldDeclaration[616-645]"
    }, {
      "left" : "private final Reader reader;",
      "right" : "private final Reader reader;",
      "info" : "FieldDeclaration[650-678]:FieldDeclaration[650-678]"
    }, {
      "left" : "private int bufLength;",
      "right" : "private int bufLength;",
      "info" : "FieldDeclaration[683-705]:FieldDeclaration[683-705]"
    }, {
      "left" : "private int bufSplitPoint;",
      "right" : "private int bufSplitPoint;",
      "info" : "FieldDeclaration[710-736]:FieldDeclaration[710-736]"
    }, {
      "left" : "private int bufPos;",
      "right" : "private int bufPos;",
      "info" : "FieldDeclaration[741-760]:FieldDeclaration[741-760]"
    }, {
      "left" : "private int readerPos;",
      "right" : "private int readerPos;",
      "info" : "FieldDeclaration[765-787]:FieldDeclaration[765-787]"
    }, {
      "left" : "private int bufMark;",
      "right" : "private int bufMark;",
      "info" : "FieldDeclaration[792-812]:FieldDeclaration[792-812]"
    }, {
      "left" : "private final String[] stringCache = new String[512];",
      "right" : "private final String[] stringCache = new String[512];",
      "info" : "FieldDeclaration[817-870]:FieldDeclaration[817-870]"
    }, {
      "left" : "public CharacterReader(Reader input, int sz)",
      "right" : "public CharacterReader(Reader input, int sz)",
      "info" : "MethodDeclaration[931-1175]:MethodDeclaration[931-1175]"
    }, {
      "left" : "public CharacterReader(Reader input)",
      "right" : "public CharacterReader(Reader input)",
      "info" : "MethodDeclaration[1181-1260]:MethodDeclaration[1181-1260]"
    }, {
      "left" : "public CharacterReader(String input)",
      "right" : "public CharacterReader(String input)",
      "info" : "MethodDeclaration[1266-1365]:MethodDeclaration[1266-1365]"
    }, {
      "left" : "private void bufferUp()",
      "right" : "private void bufferUp()",
      "info" : "MethodDeclaration[1371-1877]:MethodDeclaration[1371-1877]"
    }, {
      "left" : "public int pos()",
      "right" : "public int pos()",
      "info" : "MethodDeclaration[1883-2046]:MethodDeclaration[1883-2046]"
    }, {
      "left" : "public boolean isEmpty()",
      "right" : "public boolean isEmpty()",
      "info" : "MethodDeclaration[2052-2228]:MethodDeclaration[2052-2228]"
    }, {
      "left" : "public char current()",
      "right" : "public char current()",
      "info" : "MethodDeclaration[2234-2414]:MethodDeclaration[2234-2414]"
    }, {
      "left" : "char consume()",
      "right" : "char consume()",
      "info" : "MethodDeclaration[2420-2554]:MethodDeclaration[2420-2554]"
    }, {
      "left" : "void unconsume()",
      "right" : "void unconsume()",
      "info" : "MethodDeclaration[2560-2602]:MethodDeclaration[2560-2602]"
    }, {
      "left" : "public void advance()",
      "right" : "public void advance()",
      "info" : "MethodDeclaration[2608-2713]:MethodDeclaration[2608-2713]"
    }, {
      "left" : "void mark()",
      "right" : "void mark()",
      "info" : "MethodDeclaration[2719-2764]:MethodDeclaration[2719-2764]"
    }, {
      "left" : "void rewindToMark()",
      "right" : "void rewindToMark()",
      "info" : "MethodDeclaration[2770-2823]:MethodDeclaration[2770-2823]"
    }, {
      "left" : "int nextIndexOf(char c)",
      "right" : "int nextIndexOf(char c)",
      "info" : "MethodDeclaration[2829-3324]:MethodDeclaration[2829-3324]"
    }, {
      "left" : "int nextIndexOf(CharSequence seq)",
      "right" : "int nextIndexOf(CharSequence seq)",
      "info" : "MethodDeclaration[3330-4370]:MethodDeclaration[3330-4370]"
    }, {
      "left" : "public String consumeTo(char c)",
      "right" : "public String consumeTo(char c)",
      "info" : "MethodDeclaration[4376-4807]:MethodDeclaration[4376-4807]"
    }, {
      "left" : "String consumeTo(String seq)",
      "right" : "String consumeTo(String seq)",
      "info" : "MethodDeclaration[4813-5118]:MethodDeclaration[4813-5118]"
    }, {
      "left" : "public String consumeToAny(final char... chars)",
      "right" : "public String consumeToAny(final char... chars)",
      "info" : "MethodDeclaration[5124-5788]:MethodDeclaration[5124-5788]"
    }, {
      "left" : "String consumeToAnySorted(final char... chars)",
      "right" : "String consumeToAnySorted(final char... chars)",
      "info" : "MethodDeclaration[5794-6229]:MethodDeclaration[5794-6229]"
    }, {
      "left" : "String consumeData()",
      "right" : "String consumeData()",
      "info" : "MethodDeclaration[6235-6715]:MethodDeclaration[6235-6715]"
    }, {
      "left" : "String consumeTagName()",
      "right" : "String consumeTagName()",
      "info" : "MethodDeclaration[6721-7304]:MethodDeclaration[6721-7304]"
    }, {
      "left" : "String consumeToEnd()",
      "right" : "String consumeToEnd()",
      "info" : "MethodDeclaration[7310-7493]:MethodDeclaration[7310-7493]"
    }, {
      "left" : "String consumeLetterSequence()",
      "right" : "String consumeLetterSequence()",
      "info" : "MethodDeclaration[7499-7901]:MethodDeclaration[7499-7901]"
    }, {
      "left" : "String consumeLetterThenDigitSequence()",
      "right" : "String consumeLetterThenDigitSequence()",
      "info" : "MethodDeclaration[7907-8499]:MethodDeclaration[7907-8499]"
    }, {
      "left" : "String consumeHexSequence()",
      "right" : "String consumeHexSequence()",
      "info" : "MethodDeclaration[8505-8904]:MethodDeclaration[8505-8904]"
    }, {
      "left" : "String consumeDigitSequence()",
      "right" : "String consumeDigitSequence()",
      "info" : "MethodDeclaration[8910-9257]:MethodDeclaration[8910-9257]"
    }, {
      "left" : "boolean matches(char c)",
      "right" : "boolean matches(char c)",
      "info" : "MethodDeclaration[9263-9346]:MethodDeclaration[9263-9346]"
    }, {
      "left" : "boolean matches(String seq)",
      "right" : "boolean matches(String seq)",
      "info" : "MethodDeclaration[9352-9692]:MethodDeclaration[9352-9692]"
    }, {
      "left" : "boolean matchesIgnoreCase(String seq)",
      "right" : "boolean matchesIgnoreCase(String seq)",
      "info" : "MethodDeclaration[9698-10179]:MethodDeclaration[9698-10179]"
    }, {
      "left" : "boolean matchesAny(char... seq)",
      "right" : "boolean matchesAny(char... seq)",
      "info" : "MethodDeclaration[10185-10448]:MethodDeclaration[10185-10448]"
    }, {
      "left" : "boolean matchesAnySorted(char[] seq)",
      "right" : "boolean matchesAnySorted(char[] seq)",
      "info" : "MethodDeclaration[10454-10595]:MethodDeclaration[10454-10595]"
    }, {
      "left" : "boolean matchesLetter()",
      "right" : "boolean matchesLetter()",
      "info" : "MethodDeclaration[10601-10805]:MethodDeclaration[10601-10805]"
    }, {
      "left" : "boolean matchesDigit()",
      "right" : "boolean matchesDigit()",
      "info" : "MethodDeclaration[10811-10963]:MethodDeclaration[10811-10963]"
    }, {
      "left" : "boolean matchConsume(String seq)",
      "right" : "boolean matchConsume(String seq)",
      "info" : "MethodDeclaration[10969-11171]:MethodDeclaration[10969-11171]"
    }, {
      "left" : "boolean matchConsumeIgnoreCase(String seq)",
      "right" : "boolean matchConsumeIgnoreCase(String seq)",
      "info" : "MethodDeclaration[11177-11379]:MethodDeclaration[11177-11379]"
    }, {
      "left" : "boolean containsIgnoreCase(String seq)",
      "right" : "boolean containsIgnoreCase(String seq)",
      "info" : "MethodDeclaration[11385-11703]:MethodDeclaration[11385-11703]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[11709-11819]:MethodDeclaration[11709-11819]"
    }, {
      "left" : "private static String cacheString(final char[] charBuf, final String[] stringCache, final int start, final int count)",
      "right" : "private static String cacheString(final char[] charBuf, final String[] stringCache, final int start, final int count)",
      "info" : "MethodDeclaration[11825-13344]:MethodDeclaration[11825-13390]"
    }, {
      "left" : "static boolean rangeEquals(final char[] charBuf, final int start, int count, final String cached)",
      "right" : "static boolean rangeEquals(final char[] charBuf, final int start, int count, final String cached)",
      "info" : "MethodDeclaration[13350-13824]:MethodDeclaration[13396-13870]"
    }, {
      "left" : "boolean rangeEquals(final int start, final int count, final String cached)",
      "right" : "boolean rangeEquals(final int start, final int count, final String cached)",
      "info" : "MethodDeclaration[13859-14000]:MethodDeclaration[13905-14046]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[976-1175]:Block[976-1175]"
    }, {
      "left" : "Validate.notNull(input);",
      "right" : "Validate.notNull(input);",
      "info" : "ExpressionStatement[986-1010]:ExpressionStatement[986-1010]"
    }, {
      "left" : "Validate.isTrue(input.markSupported());",
      "right" : "Validate.isTrue(input.markSupported());",
      "info" : "ExpressionStatement[1019-1058]:ExpressionStatement[1019-1058]"
    }, {
      "left" : "reader = input;",
      "right" : "reader = input;",
      "info" : "ExpressionStatement[1067-1082]:ExpressionStatement[1067-1082]"
    }, {
      "left" : "charBuf = new char[sz > maxBufferLen ? maxBufferLen : sz];",
      "right" : "charBuf = new char[sz > maxBufferLen ? maxBufferLen : sz];",
      "info" : "ExpressionStatement[1091-1149]:ExpressionStatement[1091-1149]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[1158-1169]:ExpressionStatement[1158-1169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1218-1260]:Block[1218-1260]"
    }, {
      "left" : "this(input, maxBufferLen);",
      "right" : "this(input, maxBufferLen);",
      "info" : "ConstructorInvocation[1228-1254]:ConstructorInvocation[1228-1254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1303-1365]:Block[1303-1365]"
    }, {
      "left" : "this(new StringReader(input), input.length());",
      "right" : "this(new StringReader(input), input.length());",
      "info" : "ConstructorInvocation[1313-1359]:ConstructorInvocation[1313-1359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1395-1877]:Block[1395-1877]"
    }, {
      "left" : "if (bufPos < bufSplitPoint)",
      "right" : "if (bufPos < bufSplitPoint)",
      "info" : "IfStatement[1405-1452]:IfStatement[1405-1452]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[1445-1452]:ReturnStatement[1445-1452]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[1462-1871]:TryStatement[1462-1871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1466-1790]:Block[1466-1790]"
    }, {
      "left" : "readerPos += bufPos;",
      "right" : "readerPos += bufPos;",
      "info" : "ExpressionStatement[1480-1500]:ExpressionStatement[1480-1500]"
    }, {
      "left" : "reader.skip(bufPos);",
      "right" : "reader.skip(bufPos);",
      "info" : "ExpressionStatement[1513-1533]:ExpressionStatement[1513-1533]"
    }, {
      "left" : "reader.mark(maxBufferLen);",
      "right" : "reader.mark(maxBufferLen);",
      "info" : "ExpressionStatement[1546-1572]:ExpressionStatement[1546-1572]"
    }, {
      "left" : "bufLength = reader.read(charBuf);",
      "right" : "bufLength = reader.read(charBuf);",
      "info" : "ExpressionStatement[1585-1618]:ExpressionStatement[1585-1618]"
    }, {
      "left" : "reader.reset();",
      "right" : "reader.reset();",
      "info" : "ExpressionStatement[1631-1646]:ExpressionStatement[1631-1646]"
    }, {
      "left" : "bufPos = 0;",
      "right" : "bufPos = 0;",
      "info" : "ExpressionStatement[1659-1670]:ExpressionStatement[1659-1670]"
    }, {
      "left" : "bufMark = 0;",
      "right" : "bufMark = 0;",
      "info" : "ExpressionStatement[1683-1695]:ExpressionStatement[1683-1695]"
    }, {
      "left" : "bufSplitPoint = bufLength > readAheadLimit ? readAheadLimit : bufLength;",
      "right" : "bufSplitPoint = bufLength > readAheadLimit ? readAheadLimit : bufLength;",
      "info" : "ExpressionStatement[1708-1780]:ExpressionStatement[1708-1780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1813-1871]:Block[1813-1871]"
    }, {
      "left" : "throw new UncheckedIOException(e);",
      "right" : "throw new UncheckedIOException(e);",
      "info" : "ThrowStatement[1827-1861]:ThrowStatement[1827-1861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2004-2046]:Block[2004-2046]"
    }, {
      "left" : "return readerPos + bufPos;",
      "right" : "return readerPos + bufPos;",
      "info" : "ReturnStatement[2014-2040]:ReturnStatement[2014-2040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2185-2228]:Block[2185-2228]"
    }, {
      "left" : "return bufPos >= bufLength;",
      "right" : "return bufPos >= bufLength;",
      "info" : "ReturnStatement[2195-2222]:ReturnStatement[2195-2222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2337-2414]:Block[2337-2414]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[2347-2358]:ExpressionStatement[2347-2358]"
    }, {
      "left" : "return isEmpty() ? EOF : charBuf[bufPos];",
      "right" : "return isEmpty() ? EOF : charBuf[bufPos];",
      "info" : "ReturnStatement[2367-2408]:ReturnStatement[2367-2408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2435-2554]:Block[2435-2554]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[2445-2456]:ExpressionStatement[2445-2456]"
    }, {
      "left" : "char val = isEmpty() ? EOF : charBuf[bufPos];",
      "right" : "char val = isEmpty() ? EOF : charBuf[bufPos];",
      "info" : "VariableDeclarationStatement[2465-2510]:VariableDeclarationStatement[2465-2510]"
    }, {
      "left" : "bufPos++;",
      "right" : "bufPos++;",
      "info" : "ExpressionStatement[2519-2528]:ExpressionStatement[2519-2528]"
    }, {
      "left" : "return val;",
      "right" : "return val;",
      "info" : "ReturnStatement[2537-2548]:ReturnStatement[2537-2548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2577-2602]:Block[2577-2602]"
    }, {
      "left" : "bufPos--;",
      "right" : "bufPos--;",
      "info" : "ExpressionStatement[2587-2596]:ExpressionStatement[2587-2596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2688-2713]:Block[2688-2713]"
    }, {
      "left" : "bufPos++;",
      "right" : "bufPos++;",
      "info" : "ExpressionStatement[2698-2707]:ExpressionStatement[2698-2707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2731-2764]:Block[2731-2764]"
    }, {
      "left" : "bufMark = bufPos;",
      "right" : "bufMark = bufPos;",
      "info" : "ExpressionStatement[2741-2758]:ExpressionStatement[2741-2758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2790-2823]:Block[2790-2823]"
    }, {
      "left" : "bufPos = bufMark;",
      "right" : "bufPos = bufMark;",
      "info" : "ExpressionStatement[2800-2817]:ExpressionStatement[2800-2817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3099-3324]:Block[3099-3324]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[3159-3170]:ExpressionStatement[3159-3170]"
    }, {
      "left" : "for (int i = bufPos; i < bufLength; i++)",
      "right" : "for (int i = bufPos; i < bufLength; i++)",
      "info" : "ForStatement[3179-3299]:ForStatement[3179-3299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3220-3299]:Block[3220-3299]"
    }, {
      "left" : "if (c == charBuf[i])",
      "right" : "if (c == charBuf[i])",
      "info" : "IfStatement[3234-3289]:IfStatement[3234-3289]"
    }, {
      "left" : "return i - bufPos;",
      "right" : "return i - bufPos;",
      "info" : "ReturnStatement[3271-3289]:ReturnStatement[3271-3289]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[3308-3318]:ReturnStatement[3308-3318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3623-4370]:Block[3623-4370]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[3633-3644]:ExpressionStatement[3633-3644]"
    }, {
      "left" : "char startChar = seq.charAt(0);",
      "right" : "char startChar = seq.charAt(0);",
      "info" : "VariableDeclarationStatement[3703-3734]:VariableDeclarationStatement[3703-3734]"
    }, {
      "left" : "for (int offset = bufPos; offset < bufLength; offset++)",
      "right" : "for (int offset = bufPos; offset < bufLength; offset++)",
      "info" : "ForStatement[3743-4345]:ForStatement[3743-4345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3799-4345]:Block[3799-4345]"
    }, {
      "left" : "if (startChar != charBuf[offset])",
      "right" : "if (startChar != charBuf[offset])",
      "info" : "IfStatement[3865-3990]:IfStatement[3865-3990]"
    }, {
      "left" : "while(++offset < bufLength && startChar != charBuf[offset])",
      "right" : "while(++offset < bufLength && startChar != charBuf[offset])",
      "info" : "WhileStatement[3915-3990]:WhileStatement[3915-3990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3975-3990]:Block[3975-3990]"
    }, {
      "left" : "int i = offset + 1;",
      "right" : "int i = offset + 1;",
      "info" : "VariableDeclarationStatement[4003-4022]:VariableDeclarationStatement[4003-4022]"
    }, {
      "left" : "int last = i + seq.length()-1;",
      "right" : "int last = i + seq.length()-1;",
      "info" : "VariableDeclarationStatement[4035-4065]:VariableDeclarationStatement[4035-4065]"
    }, {
      "left" : "if (offset < bufLength && last <= bufLength)",
      "right" : "if (offset < bufLength && last <= bufLength)",
      "info" : "IfStatement[4078-4335]:IfStatement[4078-4335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4123-4335]:Block[4123-4335]"
    }, {
      "left" : "for (int j = 1; i < last && seq.charAt(j) == charBuf[i]; i++, j++)",
      "right" : "for (int j = 1; i < last && seq.charAt(j) == charBuf[i]; i++, j++)",
      "info" : "ForStatement[4141-4223]:ForStatement[4141-4223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4208-4223]:Block[4208-4223]"
    }, {
      "left" : "if (i == last)",
      "right" : "if (i == last)",
      "info" : "IfStatement[4240-4321]:IfStatement[4240-4321]"
    }, {
      "left" : "return offset - bufPos;",
      "right" : "return offset - bufPos;",
      "info" : "ReturnStatement[4298-4321]:ReturnStatement[4298-4321]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[4354-4364]:ReturnStatement[4354-4364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4533-4807]:Block[4533-4807]"
    }, {
      "left" : "int offset = nextIndexOf(c);",
      "right" : "int offset = nextIndexOf(c);",
      "info" : "VariableDeclarationStatement[4543-4571]:VariableDeclarationStatement[4543-4571]"
    }, {
      "left" : "if (offset != -1)",
      "right" : "if (offset != -1)",
      "info" : "IfStatement[4580-4801]:IfStatement[4580-4801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4598-4749]:Block[4598-4749]"
    }, {
      "left" : "String consumed = cacheString(charBuf, stringCache, bufPos, offset);",
      "right" : "String consumed = cacheString(charBuf, stringCache, bufPos, offset);",
      "info" : "VariableDeclarationStatement[4612-4680]:VariableDeclarationStatement[4612-4680]"
    }, {
      "left" : "bufPos += offset;",
      "right" : "bufPos += offset;",
      "info" : "ExpressionStatement[4693-4710]:ExpressionStatement[4693-4710]"
    }, {
      "left" : "return consumed;",
      "right" : "return consumed;",
      "info" : "ReturnStatement[4723-4739]:ReturnStatement[4723-4739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4755-4801]:Block[4755-4801]"
    }, {
      "left" : "return consumeToEnd();",
      "right" : "return consumeToEnd();",
      "info" : "ReturnStatement[4769-4791]:ReturnStatement[4769-4791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4842-5118]:Block[4842-5118]"
    }, {
      "left" : "int offset = nextIndexOf(seq);",
      "right" : "int offset = nextIndexOf(seq);",
      "info" : "VariableDeclarationStatement[4852-4882]:VariableDeclarationStatement[4852-4882]"
    }, {
      "left" : "if (offset != -1)",
      "right" : "if (offset != -1)",
      "info" : "IfStatement[4891-5112]:IfStatement[4891-5112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4909-5060]:Block[4909-5060]"
    }, {
      "left" : "String consumed = cacheString(charBuf, stringCache, bufPos, offset);",
      "right" : "String consumed = cacheString(charBuf, stringCache, bufPos, offset);",
      "info" : "VariableDeclarationStatement[4923-4991]:VariableDeclarationStatement[4923-4991]"
    }, {
      "left" : "bufPos += offset;",
      "right" : "bufPos += offset;",
      "info" : "ExpressionStatement[5004-5021]:ExpressionStatement[5004-5021]"
    }, {
      "left" : "return consumed;",
      "right" : "return consumed;",
      "info" : "ReturnStatement[5034-5050]:ReturnStatement[5034-5050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5066-5112]:Block[5066-5112]"
    }, {
      "left" : "return consumeToEnd();",
      "right" : "return consumeToEnd();",
      "info" : "ReturnStatement[5080-5102]:ReturnStatement[5080-5102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5358-5788]:Block[5358-5788]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[5368-5379]:ExpressionStatement[5368-5379]"
    }, {
      "left" : "final int start = bufPos;",
      "right" : "final int start = bufPos;",
      "info" : "VariableDeclarationStatement[5388-5413]:VariableDeclarationStatement[5388-5413]"
    }, {
      "left" : "final int remaining = bufLength;",
      "right" : "final int remaining = bufLength;",
      "info" : "VariableDeclarationStatement[5422-5454]:VariableDeclarationStatement[5422-5454]"
    }, {
      "left" : "final char[] val = charBuf;",
      "right" : "final char[] val = charBuf;",
      "info" : "VariableDeclarationStatement[5463-5490]:VariableDeclarationStatement[5463-5490]"
    }, {
      "left" : "OUTER: while (bufPos < remaining) {\n            for (char c : chars) {\n                if (val[bufPos] == c)\n                    break OUTER;\n            }\n            bufPos++;\n        }",
      "right" : "OUTER: while (bufPos < remaining) {\n            for (char c : chars) {\n                if (val[bufPos] == c)\n                    break OUTER;\n            }\n            bufPos++;\n        }",
      "info" : "LabeledStatement[5500-5687]:LabeledStatement[5500-5687]"
    }, {
      "left" : "while (bufPos < remaining)",
      "right" : "while (bufPos < remaining)",
      "info" : "WhileStatement[5507-5687]:WhileStatement[5507-5687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5534-5687]:Block[5534-5687]"
    }, {
      "left" : "for (char c : chars)",
      "right" : "for (char c : chars)",
      "info" : "EnhancedForStatement[5548-5655]:EnhancedForStatement[5548-5655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5569-5655]:Block[5569-5655]"
    }, {
      "left" : "if (val[bufPos] == c)",
      "right" : "if (val[bufPos] == c)",
      "info" : "IfStatement[5587-5641]:IfStatement[5587-5641]"
    }, {
      "left" : "break OUTER;",
      "right" : "break OUTER;",
      "info" : "BreakStatement[5629-5641]:BreakStatement[5629-5641]"
    }, {
      "left" : "bufPos++;",
      "right" : "bufPos++;",
      "info" : "ExpressionStatement[5668-5677]:ExpressionStatement[5668-5677]"
    }, {
      "left" : "return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : \"\";",
      "right" : "return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : \"\";",
      "info" : "ReturnStatement[5697-5782]:ReturnStatement[5697-5782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5841-6229]:Block[5841-6229]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[5851-5862]:ExpressionStatement[5851-5862]"
    }, {
      "left" : "final int start = bufPos;",
      "right" : "final int start = bufPos;",
      "info" : "VariableDeclarationStatement[5871-5896]:VariableDeclarationStatement[5871-5896]"
    }, {
      "left" : "final int remaining = bufLength;",
      "right" : "final int remaining = bufLength;",
      "info" : "VariableDeclarationStatement[5905-5937]:VariableDeclarationStatement[5905-5937]"
    }, {
      "left" : "final char[] val = charBuf;",
      "right" : "final char[] val = charBuf;",
      "info" : "VariableDeclarationStatement[5946-5973]:VariableDeclarationStatement[5946-5973]"
    }, {
      "left" : "while (bufPos < remaining)",
      "right" : "while (bufPos < remaining)",
      "info" : "WhileStatement[5983-6128]:WhileStatement[5983-6128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6010-6128]:Block[6010-6128]"
    }, {
      "left" : "if (Arrays.binarySearch(chars, val[bufPos]) >= 0)",
      "right" : "if (Arrays.binarySearch(chars, val[bufPos]) >= 0)",
      "info" : "IfStatement[6024-6096]:IfStatement[6024-6096]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6090-6096]:BreakStatement[6090-6096]"
    }, {
      "left" : "bufPos++;",
      "right" : "bufPos++;",
      "info" : "ExpressionStatement[6109-6118]:ExpressionStatement[6109-6118]"
    }, {
      "left" : "return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : \"\";",
      "right" : "return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : \"\";",
      "info" : "ReturnStatement[6138-6223]:ReturnStatement[6138-6223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6256-6715]:Block[6256-6715]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[6288-6299]:ExpressionStatement[6288-6299]"
    }, {
      "left" : "final int start = bufPos;",
      "right" : "final int start = bufPos;",
      "info" : "VariableDeclarationStatement[6308-6333]:VariableDeclarationStatement[6308-6333]"
    }, {
      "left" : "final int remaining = bufLength;",
      "right" : "final int remaining = bufLength;",
      "info" : "VariableDeclarationStatement[6342-6374]:VariableDeclarationStatement[6342-6374]"
    }, {
      "left" : "final char[] val = charBuf;",
      "right" : "final char[] val = charBuf;",
      "info" : "VariableDeclarationStatement[6383-6410]:VariableDeclarationStatement[6383-6410]"
    }, {
      "left" : "while (bufPos < remaining)",
      "right" : "while (bufPos < remaining)",
      "info" : "WhileStatement[6420-6614]:WhileStatement[6420-6614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6447-6614]:Block[6447-6614]"
    }, {
      "left" : "final char c = val[bufPos];",
      "right" : "final char c = val[bufPos];",
      "info" : "VariableDeclarationStatement[6461-6488]:VariableDeclarationStatement[6461-6488]"
    }, {
      "left" : "if (c == '&'|| c ==  '<' || c ==  TokeniserState.nullChar)",
      "right" : "if (c == '&'|| c ==  '<' || c ==  TokeniserState.nullChar)",
      "info" : "IfStatement[6501-6582]:IfStatement[6501-6582]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6576-6582]:BreakStatement[6576-6582]"
    }, {
      "left" : "bufPos++;",
      "right" : "bufPos++;",
      "info" : "ExpressionStatement[6595-6604]:ExpressionStatement[6595-6604]"
    }, {
      "left" : "return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : \"\";",
      "right" : "return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : \"\";",
      "info" : "ReturnStatement[6624-6709]:ReturnStatement[6624-6709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6745-7304]:Block[6745-7304]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[6814-6825]:ExpressionStatement[6814-6825]"
    }, {
      "left" : "final int start = bufPos;",
      "right" : "final int start = bufPos;",
      "info" : "VariableDeclarationStatement[6834-6859]:VariableDeclarationStatement[6834-6859]"
    }, {
      "left" : "final int remaining = bufLength;",
      "right" : "final int remaining = bufLength;",
      "info" : "VariableDeclarationStatement[6868-6900]:VariableDeclarationStatement[6868-6900]"
    }, {
      "left" : "final char[] val = charBuf;",
      "right" : "final char[] val = charBuf;",
      "info" : "VariableDeclarationStatement[6909-6936]:VariableDeclarationStatement[6909-6936]"
    }, {
      "left" : "while (bufPos < remaining)",
      "right" : "while (bufPos < remaining)",
      "info" : "WhileStatement[6946-7203]:WhileStatement[6946-7203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6973-7203]:Block[6973-7203]"
    }, {
      "left" : "final char c = val[bufPos];",
      "right" : "final char c = val[bufPos];",
      "info" : "VariableDeclarationStatement[6987-7014]:VariableDeclarationStatement[6987-7014]"
    }, {
      "left" : "if (c == '\\t'|| c ==  '\\n'|| c ==  '\\r'|| c ==  '\\f'|| c ==  ' '|| c ==  '/'|| c ==  '>'|| c ==  TokeniserState.nullChar)",
      "right" : "if (c == '\\t'|| c ==  '\\n'|| c ==  '\\r'|| c ==  '\\f'|| c ==  ' '|| c ==  '/'|| c ==  '>'|| c ==  TokeniserState.nullChar)",
      "info" : "IfStatement[7027-7171]:IfStatement[7027-7171]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[7165-7171]:BreakStatement[7165-7171]"
    }, {
      "left" : "bufPos++;",
      "right" : "bufPos++;",
      "info" : "ExpressionStatement[7184-7193]:ExpressionStatement[7184-7193]"
    }, {
      "left" : "return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : \"\";",
      "right" : "return bufPos > start ? cacheString(charBuf, stringCache, start, bufPos -start) : \"\";",
      "info" : "ReturnStatement[7213-7298]:ReturnStatement[7213-7298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7332-7493]:Block[7332-7493]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[7342-7353]:ExpressionStatement[7342-7353]"
    }, {
      "left" : "String data = cacheString(charBuf, stringCache, bufPos, bufLength - bufPos);",
      "right" : "String data = cacheString(charBuf, stringCache, bufPos, bufLength - bufPos);",
      "info" : "VariableDeclarationStatement[7362-7438]:VariableDeclarationStatement[7362-7438]"
    }, {
      "left" : "bufPos = bufLength;",
      "right" : "bufPos = bufLength;",
      "info" : "ExpressionStatement[7447-7466]:ExpressionStatement[7447-7466]"
    }, {
      "left" : "return data;",
      "right" : "return data;",
      "info" : "ReturnStatement[7475-7487]:ReturnStatement[7475-7487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7530-7901]:Block[7530-7901]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[7540-7551]:ExpressionStatement[7540-7551]"
    }, {
      "left" : "int start = bufPos;",
      "right" : "int start = bufPos;",
      "info" : "VariableDeclarationStatement[7560-7579]:VariableDeclarationStatement[7560-7579]"
    }, {
      "left" : "while (bufPos < bufLength)",
      "right" : "while (bufPos < bufLength)",
      "info" : "WhileStatement[7588-7821]:WhileStatement[7588-7821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7615-7821]:Block[7615-7821]"
    }, {
      "left" : "char c = charBuf[bufPos];",
      "right" : "char c = charBuf[bufPos];",
      "info" : "VariableDeclarationStatement[7629-7654]:VariableDeclarationStatement[7629-7654]"
    }, {
      "left" : "if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || Character.isLetter(c))",
      "right" : "if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || Character.isLetter(c))",
      "info" : "IfStatement[7667-7811]:IfStatement[7667-7811]"
    }, {
      "left" : "bufPos++;",
      "right" : "bufPos++;",
      "info" : "ExpressionStatement[7762-7771]:ExpressionStatement[7762-7771]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[7805-7811]:BreakStatement[7805-7811]"
    }, {
      "left" : "return cacheString(charBuf, stringCache, start, bufPos - start);",
      "right" : "return cacheString(charBuf, stringCache, start, bufPos - start);",
      "info" : "ReturnStatement[7831-7895]:ReturnStatement[7831-7895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7947-8499]:Block[7947-8499]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[7957-7968]:ExpressionStatement[7957-7968]"
    }, {
      "left" : "int start = bufPos;",
      "right" : "int start = bufPos;",
      "info" : "VariableDeclarationStatement[7977-7996]:VariableDeclarationStatement[7977-7996]"
    }, {
      "left" : "while (bufPos < bufLength)",
      "right" : "while (bufPos < bufLength)",
      "info" : "WhileStatement[8005-8238]:WhileStatement[8005-8238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8032-8238]:Block[8032-8238]"
    }, {
      "left" : "char c = charBuf[bufPos];",
      "right" : "char c = charBuf[bufPos];",
      "info" : "VariableDeclarationStatement[8046-8071]:VariableDeclarationStatement[8046-8071]"
    }, {
      "left" : "if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || Character.isLetter(c))",
      "right" : "if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || Character.isLetter(c))",
      "info" : "IfStatement[8084-8228]:IfStatement[8084-8228]"
    }, {
      "left" : "bufPos++;",
      "right" : "bufPos++;",
      "info" : "ExpressionStatement[8179-8188]:ExpressionStatement[8179-8188]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[8222-8228]:BreakStatement[8222-8228]"
    }, {
      "left" : "while (!isEmpty())",
      "right" : "while (!isEmpty())",
      "info" : "WhileStatement[8247-8419]:WhileStatement[8247-8419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8266-8419]:Block[8266-8419]"
    }, {
      "left" : "char c = charBuf[bufPos];",
      "right" : "char c = charBuf[bufPos];",
      "info" : "VariableDeclarationStatement[8280-8305]:VariableDeclarationStatement[8280-8305]"
    }, {
      "left" : "if (c >= '0' && c <= '9')",
      "right" : "if (c >= '0' && c <= '9')",
      "info" : "IfStatement[8318-8409]:IfStatement[8318-8409]"
    }, {
      "left" : "bufPos++;",
      "right" : "bufPos++;",
      "info" : "ExpressionStatement[8360-8369]:ExpressionStatement[8360-8369]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[8403-8409]:BreakStatement[8403-8409]"
    }, {
      "left" : "return cacheString(charBuf, stringCache, start, bufPos - start);",
      "right" : "return cacheString(charBuf, stringCache, start, bufPos - start);",
      "info" : "ReturnStatement[8429-8493]:ReturnStatement[8429-8493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8533-8904]:Block[8533-8904]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[8543-8554]:ExpressionStatement[8543-8554]"
    }, {
      "left" : "int start = bufPos;",
      "right" : "int start = bufPos;",
      "info" : "VariableDeclarationStatement[8563-8582]:VariableDeclarationStatement[8563-8582]"
    }, {
      "left" : "while (bufPos < bufLength)",
      "right" : "while (bufPos < bufLength)",
      "info" : "WhileStatement[8591-8825]:WhileStatement[8591-8825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8618-8825]:Block[8618-8825]"
    }, {
      "left" : "char c = charBuf[bufPos];",
      "right" : "char c = charBuf[bufPos];",
      "info" : "VariableDeclarationStatement[8632-8657]:VariableDeclarationStatement[8632-8657]"
    }, {
      "left" : "if ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'F') || (c >= 'a' && c <= 'f'))",
      "right" : "if ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'F') || (c >= 'a' && c <= 'f'))",
      "info" : "IfStatement[8670-8815]:IfStatement[8670-8815]"
    }, {
      "left" : "bufPos++;",
      "right" : "bufPos++;",
      "info" : "ExpressionStatement[8766-8775]:ExpressionStatement[8766-8775]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[8809-8815]:BreakStatement[8809-8815]"
    }, {
      "left" : "return cacheString(charBuf, stringCache, start, bufPos - start);",
      "right" : "return cacheString(charBuf, stringCache, start, bufPos - start);",
      "info" : "ReturnStatement[8834-8898]:ReturnStatement[8834-8898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8940-9257]:Block[8940-9257]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[8950-8961]:ExpressionStatement[8950-8961]"
    }, {
      "left" : "int start = bufPos;",
      "right" : "int start = bufPos;",
      "info" : "VariableDeclarationStatement[8970-8989]:VariableDeclarationStatement[8970-8989]"
    }, {
      "left" : "while (bufPos < bufLength)",
      "right" : "while (bufPos < bufLength)",
      "info" : "WhileStatement[8998-9178]:WhileStatement[8998-9178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9025-9178]:Block[9025-9178]"
    }, {
      "left" : "char c = charBuf[bufPos];",
      "right" : "char c = charBuf[bufPos];",
      "info" : "VariableDeclarationStatement[9039-9064]:VariableDeclarationStatement[9039-9064]"
    }, {
      "left" : "if (c >= '0' && c <= '9')",
      "right" : "if (c >= '0' && c <= '9')",
      "info" : "IfStatement[9077-9168]:IfStatement[9077-9168]"
    }, {
      "left" : "bufPos++;",
      "right" : "bufPos++;",
      "info" : "ExpressionStatement[9119-9128]:ExpressionStatement[9119-9128]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9162-9168]:BreakStatement[9162-9168]"
    }, {
      "left" : "return cacheString(charBuf, stringCache, start, bufPos - start);",
      "right" : "return cacheString(charBuf, stringCache, start, bufPos - start);",
      "info" : "ReturnStatement[9187-9251]:ReturnStatement[9187-9251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9287-9346]:Block[9287-9346]"
    }, {
      "left" : "return !isEmpty() && charBuf[bufPos] == c;",
      "right" : "return !isEmpty() && charBuf[bufPos] == c;",
      "info" : "ReturnStatement[9297-9339]:ReturnStatement[9297-9339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9380-9692]:Block[9380-9692]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[9390-9401]:ExpressionStatement[9390-9401]"
    }, {
      "left" : "int scanLength = seq.length();",
      "right" : "int scanLength = seq.length();",
      "info" : "VariableDeclarationStatement[9410-9440]:VariableDeclarationStatement[9410-9440]"
    }, {
      "left" : "if (scanLength > bufLength - bufPos)",
      "right" : "if (scanLength > bufLength - bufPos)",
      "info" : "IfStatement[9449-9511]:IfStatement[9449-9511]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9498-9511]:ReturnStatement[9498-9511]"
    }, {
      "left" : "for (int offset = 0; offset < scanLength; offset++)\n            if (seq.charAt(offset) != charBuf[bufPos +offset])\n                return false;",
      "right" : "for (int offset = 0; offset < scanLength; offset++)\n            if (seq.charAt(offset) != charBuf[bufPos +offset])\n                return false;",
      "info" : "ForStatement[9521-9665]:ForStatement[9521-9665]"
    }, {
      "left" : "if (seq.charAt(offset) != charBuf[bufPos +offset])",
      "right" : "if (seq.charAt(offset) != charBuf[bufPos +offset])",
      "info" : "IfStatement[9585-9665]:IfStatement[9585-9665]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9652-9665]:ReturnStatement[9652-9665]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9674-9686]:ReturnStatement[9674-9686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9736-10179]:Block[9736-10179]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[9746-9757]:ExpressionStatement[9746-9757]"
    }, {
      "left" : "int scanLength = seq.length();",
      "right" : "int scanLength = seq.length();",
      "info" : "VariableDeclarationStatement[9766-9796]:VariableDeclarationStatement[9766-9796]"
    }, {
      "left" : "if (scanLength > bufLength - bufPos)",
      "right" : "if (scanLength > bufLength - bufPos)",
      "info" : "IfStatement[9805-9867]:IfStatement[9805-9867]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9854-9867]:ReturnStatement[9854-9867]"
    }, {
      "left" : "for (int offset = 0; offset < scanLength; offset++)",
      "right" : "for (int offset = 0; offset < scanLength; offset++)",
      "info" : "ForStatement[9877-10152]:ForStatement[9877-10152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9929-10152]:Block[9929-10152]"
    }, {
      "left" : "char upScan = Character.toUpperCase(seq.charAt(offset));",
      "right" : "char upScan = Character.toUpperCase(seq.charAt(offset));",
      "info" : "VariableDeclarationStatement[9943-9999]:VariableDeclarationStatement[9943-9999]"
    }, {
      "left" : "char upTarget = Character.toUpperCase(charBuf[bufPos + offset]);",
      "right" : "char upTarget = Character.toUpperCase(charBuf[bufPos + offset]);",
      "info" : "VariableDeclarationStatement[10012-10076]:VariableDeclarationStatement[10012-10076]"
    }, {
      "left" : "if (upScan != upTarget)",
      "right" : "if (upScan != upTarget)",
      "info" : "IfStatement[10089-10142]:IfStatement[10089-10142]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10129-10142]:ReturnStatement[10129-10142]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[10161-10173]:ReturnStatement[10161-10173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10217-10448]:Block[10217-10448]"
    }, {
      "left" : "if (isEmpty())",
      "right" : "if (isEmpty())",
      "info" : "IfStatement[10227-10267]:IfStatement[10227-10267]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10254-10267]:ReturnStatement[10254-10267]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[10277-10288]:ExpressionStatement[10277-10288]"
    }, {
      "left" : "char c = charBuf[bufPos];",
      "right" : "char c = charBuf[bufPos];",
      "info" : "VariableDeclarationStatement[10297-10322]:VariableDeclarationStatement[10297-10322]"
    }, {
      "left" : "for (char seek : seq)",
      "right" : "for (char seek : seq)",
      "info" : "EnhancedForStatement[10331-10420]:EnhancedForStatement[10331-10420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10353-10420]:Block[10353-10420]"
    }, {
      "left" : "if (seek == c)",
      "right" : "if (seek == c)",
      "info" : "IfStatement[10367-10410]:IfStatement[10367-10410]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[10398-10410]:ReturnStatement[10398-10410]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10429-10442]:ReturnStatement[10429-10442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10491-10595]:Block[10491-10595]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[10501-10512]:ExpressionStatement[10501-10512]"
    }, {
      "left" : "return !isEmpty() && Arrays.binarySearch(seq, charBuf[bufPos]) >= 0;",
      "right" : "return !isEmpty() && Arrays.binarySearch(seq, charBuf[bufPos]) >= 0;",
      "info" : "ReturnStatement[10521-10589]:ReturnStatement[10521-10589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10625-10805]:Block[10625-10805]"
    }, {
      "left" : "if (isEmpty())",
      "right" : "if (isEmpty())",
      "info" : "IfStatement[10635-10675]:IfStatement[10635-10675]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10662-10675]:ReturnStatement[10662-10675]"
    }, {
      "left" : "char c = charBuf[bufPos];",
      "right" : "char c = charBuf[bufPos];",
      "info" : "VariableDeclarationStatement[10684-10709]:VariableDeclarationStatement[10684-10709]"
    }, {
      "left" : "return (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || Character.isLetter(c);",
      "right" : "return (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || Character.isLetter(c);",
      "info" : "ReturnStatement[10718-10799]:ReturnStatement[10718-10799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10834-10963]:Block[10834-10963]"
    }, {
      "left" : "if (isEmpty())",
      "right" : "if (isEmpty())",
      "info" : "IfStatement[10844-10884]:IfStatement[10844-10884]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10871-10884]:ReturnStatement[10871-10884]"
    }, {
      "left" : "char c = charBuf[bufPos];",
      "right" : "char c = charBuf[bufPos];",
      "info" : "VariableDeclarationStatement[10893-10918]:VariableDeclarationStatement[10893-10918]"
    }, {
      "left" : "return (c >= '0' && c <= '9');",
      "right" : "return (c >= '0' && c <= '9');",
      "info" : "ReturnStatement[10927-10957]:ReturnStatement[10927-10957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11002-11171]:Block[11002-11171]"
    }, {
      "left" : "bufferUp();",
      "right" : "bufferUp();",
      "info" : "ExpressionStatement[11012-11023]:ExpressionStatement[11012-11023]"
    }, {
      "left" : "if (matches(seq))",
      "right" : "if (matches(seq))",
      "info" : "IfStatement[11032-11165]:IfStatement[11032-11165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11050-11122]:Block[11050-11122]"
    }, {
      "left" : "bufPos += seq.length();",
      "right" : "bufPos += seq.length();",
      "info" : "ExpressionStatement[11064-11087]:ExpressionStatement[11064-11087]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11100-11112]:ReturnStatement[11100-11112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11128-11165]:Block[11128-11165]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11142-11155]:ReturnStatement[11142-11155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11220-11379]:Block[11220-11379]"
    }, {
      "left" : "if (matchesIgnoreCase(seq))",
      "right" : "if (matchesIgnoreCase(seq))",
      "info" : "IfStatement[11230-11373]:IfStatement[11230-11373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11258-11330]:Block[11258-11330]"
    }, {
      "left" : "bufPos += seq.length();",
      "right" : "bufPos += seq.length();",
      "info" : "ExpressionStatement[11272-11295]:ExpressionStatement[11272-11295]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11308-11320]:ReturnStatement[11308-11320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11336-11373]:Block[11336-11373]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11350-11363]:ReturnStatement[11350-11363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11424-11703]:Block[11424-11703]"
    }, {
      "left" : "String loScan = seq.toLowerCase(Locale.ENGLISH);",
      "right" : "String loScan = seq.toLowerCase(Locale.ENGLISH);",
      "info" : "VariableDeclarationStatement[11519-11567]:VariableDeclarationStatement[11519-11567]"
    }, {
      "left" : "String hiScan = seq.toUpperCase(Locale.ENGLISH);",
      "right" : "String hiScan = seq.toUpperCase(Locale.ENGLISH);",
      "info" : "VariableDeclarationStatement[11576-11624]:VariableDeclarationStatement[11576-11624]"
    }, {
      "left" : "return (nextIndexOf(loScan) > -1) || (nextIndexOf(hiScan) > -1);",
      "right" : "return (nextIndexOf(loScan) > -1) || (nextIndexOf(hiScan) > -1);",
      "info" : "ReturnStatement[11633-11697]:ReturnStatement[11633-11697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11748-11819]:Block[11748-11819]"
    }, {
      "left" : "return new String(charBuf, bufPos, bufLength - bufPos);",
      "right" : "return new String(charBuf, bufPos, bufLength - bufPos);",
      "info" : "ReturnStatement[11758-11813]:ReturnStatement[11758-11813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12344-13344]:Block[12344-13390]"
    }, {
      "left" : "if (count > maxStringCacheLen)",
      "right" : "if (count > maxStringCacheLen)",
      "info" : "IfStatement[12383-12467]:IfStatement[12383-12467]"
    }, {
      "left" : "return new String(charBuf, start, count);",
      "right" : "return new String(charBuf, start, count);",
      "info" : "ReturnStatement[12426-12467]:ReturnStatement[12426-12467]"
    }, {
      "left" : "int hash = 0;",
      "right" : "int hash = 0;",
      "info" : "VariableDeclarationStatement[12504-12517]:VariableDeclarationStatement[12550-12563]"
    }, {
      "left" : "int offset = start;",
      "right" : "int offset = start;",
      "info" : "VariableDeclarationStatement[12526-12545]:VariableDeclarationStatement[12572-12591]"
    }, {
      "left" : "for (int i = 0; i < count; i++)",
      "right" : "for (int i = 0; i < count; i++)",
      "info" : "ForStatement[12554-12647]:ForStatement[12600-12693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12586-12647]:Block[12632-12693]"
    }, {
      "left" : "hash = 31 * hash + charBuf[offset++];",
      "right" : "hash = 31 * hash + charBuf[offset++];",
      "info" : "ExpressionStatement[12600-12637]:ExpressionStatement[12646-12683]"
    }, {
      "left" : "final int index = hash & stringCache.length - 1;",
      "right" : "final int index = hash & stringCache.length - 1;",
      "info" : "VariableDeclarationStatement[12683-12731]:VariableDeclarationStatement[12729-12777]"
    }, {
      "left" : "String cached = stringCache[index];",
      "right" : "String cached = stringCache[index];",
      "info" : "VariableDeclarationStatement[12740-12775]:VariableDeclarationStatement[12786-12821]"
    }, {
      "left" : "if (cached == null)",
      "right" : "if (cached == null)",
      "info" : "IfStatement[12785-13315]:IfStatement[12831-13361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12805-12926]:Block[12851-12972]"
    }, {
      "left" : "cached = new String(charBuf, start, count);",
      "right" : "cached = new String(charBuf, start, count);",
      "info" : "ExpressionStatement[12832-12875]:ExpressionStatement[12878-12921]"
    }, {
      "left" : "stringCache[index] = cached;",
      "right" : "stringCache[index] = cached;",
      "info" : "ExpressionStatement[12888-12916]:ExpressionStatement[12934-12962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12932-13315]:Block[12978-13361]"
    }, {
      "left" : "if (rangeEquals(charBuf, start, count, cached))",
      "right" : "if (rangeEquals(charBuf, start, count, cached))",
      "info" : "IfStatement[12978-13305]:IfStatement[13024-13351]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13026-13079]:Block[13072-13125]"
    }, {
      "left" : "return cached;",
      "right" : "return cached;",
      "info" : "ReturnStatement[13051-13065]:ReturnStatement[13097-13111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13085-13305]:Block[13131-13351]"
    }, {
      "left" : "cached = new String(charBuf, start, count);",
      "right" : "cached = new String(charBuf, start, count);",
      "info" : "ExpressionStatement[13124-13167]:ExpressionStatement[13170-13213]"
    }, {
      "left" : "stringCache[index] = cached;",
      "right" : "stringCache[index] = cached;",
      "info" : "ExpressionStatement[13184-13212]:ExpressionStatement[13230-13258]"
    }, {
      "left" : "return cached;",
      "right" : "return cached;",
      "info" : "ReturnStatement[13324-13338]:ReturnStatement[13370-13384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13531-13824]:Block[13577-13870]"
    }, {
      "left" : "if (count == cached.length())",
      "right" : "if (count == cached.length())",
      "info" : "IfStatement[13541-13796]:IfStatement[13587-13842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13571-13796]:Block[13617-13842]"
    }, {
      "left" : "int i = start;",
      "right" : "int i = start;",
      "info" : "VariableDeclarationStatement[13585-13599]:VariableDeclarationStatement[13631-13645]"
    }, {
      "left" : "int j = 0;",
      "right" : "int j = 0;",
      "info" : "VariableDeclarationStatement[13612-13622]:VariableDeclarationStatement[13658-13668]"
    }, {
      "left" : "while (count-- != 0)",
      "right" : "while (count-- != 0)",
      "info" : "WhileStatement[13635-13761]:WhileStatement[13681-13807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13656-13761]:Block[13702-13807]"
    }, {
      "left" : "if (charBuf[i++] != cached.charAt(j++))",
      "right" : "if (charBuf[i++] != cached.charAt(j++))",
      "info" : "IfStatement[13674-13747]:IfStatement[13720-13793]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[13734-13747]:ReturnStatement[13780-13793]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[13774-13786]:ReturnStatement[13820-13832]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[13805-13818]:ReturnStatement[13851-13864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13934-14000]:Block[13980-14046]"
    }, {
      "left" : "return rangeEquals(charBuf, start, count, cached);",
      "right" : "return rangeEquals(charBuf, start, count, cached);",
      "info" : "ReturnStatement[13944-13994]:ReturnStatement[13990-14040]"
    } ]
  },
  "interFileMappings" : { }
}