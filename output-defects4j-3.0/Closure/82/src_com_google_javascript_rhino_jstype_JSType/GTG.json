{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "TypeDeclaration[1967-32126]:TypeDeclaration[1967-32226]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[2674-2722]:FieldDeclaration[2674-2722]"
    }, {
      "left" : "private boolean resolved = false;",
      "right" : "private boolean resolved = false;",
      "info" : "FieldDeclaration[2726-2759]:FieldDeclaration[2726-2759]"
    }, {
      "left" : "private JSType resolveResult = null;",
      "right" : "private JSType resolveResult = null;",
      "info" : "FieldDeclaration[2762-2798]:FieldDeclaration[2762-2798]"
    }, {
      "left" : "public static final String UNKNOWN_NAME =\n      \"Unknown class name\";",
      "right" : "public static final String UNKNOWN_NAME =\n      \"Unknown class name\";",
      "info" : "FieldDeclaration[2802-2871]:FieldDeclaration[2802-2871]"
    }, {
      "left" : "public static final String NOT_A_CLASS =\n      \"Not declared as a constructor\";",
      "right" : "public static final String NOT_A_CLASS =\n      \"Not declared as a constructor\";",
      "info" : "FieldDeclaration[2875-2954]:FieldDeclaration[2875-2954]"
    }, {
      "left" : "public static final String NOT_A_TYPE =\n      \"Not declared as a type name\";",
      "right" : "public static final String NOT_A_TYPE =\n      \"Not declared as a type name\";",
      "info" : "FieldDeclaration[2958-3034]:FieldDeclaration[2958-3034]"
    }, {
      "left" : "public static final String EMPTY_TYPE_COMPONENT =\n      \"Named type with empty name component\";",
      "right" : "public static final String EMPTY_TYPE_COMPONENT =\n      \"Named type with empty name component\";",
      "info" : "FieldDeclaration[3038-3133]:FieldDeclaration[3038-3133]"
    }, {
      "left" : "static final Comparator<JSType> ALPHA = new Comparator<JSType>() {\n    public int compare(JSType t1, JSType t2) {\n      return t1.toString().compareTo(t2.toString());\n    }\n  };",
      "right" : "static final Comparator<JSType> ALPHA = new Comparator<JSType>() {\n    public int compare(JSType t1, JSType t2) {\n      return t1.toString().compareTo(t2.toString());\n    }\n  };",
      "info" : "FieldDeclaration[3137-3525]:FieldDeclaration[3137-3525]"
    }, {
      "left" : "public int compare(JSType t1, JSType t2)",
      "right" : "public int compare(JSType t1, JSType t2)",
      "info" : "MethodDeclaration[3419-3520]:MethodDeclaration[3419-3520]"
    }, {
      "left" : "public static final int ENUMDECL = 1;",
      "right" : "public static final int ENUMDECL = 1;",
      "info" : "FieldDeclaration[3575-3612]:FieldDeclaration[3575-3612]"
    }, {
      "left" : "public static final int NOT_ENUMDECL = 0;",
      "right" : "public static final int NOT_ENUMDECL = 0;",
      "info" : "FieldDeclaration[3615-3656]:FieldDeclaration[3615-3656]"
    }, {
      "left" : "final JSTypeRegistry registry;",
      "right" : "final JSTypeRegistry registry;",
      "info" : "FieldDeclaration[3660-3690]:FieldDeclaration[3660-3690]"
    }, {
      "left" : "JSType(JSTypeRegistry registry)",
      "right" : "JSType(JSTypeRegistry registry)",
      "info" : "MethodDeclaration[3694-3761]:MethodDeclaration[3694-3761]"
    }, {
      "left" : "JSType getNativeType(JSTypeNative typeId)",
      "right" : "JSType getNativeType(JSTypeNative typeId)",
      "info" : "MethodDeclaration[3765-3910]:MethodDeclaration[3765-3910]"
    }, {
      "left" : "public JSDocInfo getJSDocInfo()",
      "right" : "public JSDocInfo getJSDocInfo()",
      "info" : "MethodDeclaration[3914-4146]:MethodDeclaration[3914-4146]"
    }, {
      "left" : "public String getDisplayName()",
      "right" : "public String getDisplayName()",
      "info" : "MethodDeclaration[4150-4625]:MethodDeclaration[4150-4625]"
    }, {
      "left" : "public boolean hasDisplayName()",
      "right" : "public boolean hasDisplayName()",
      "info" : "MethodDeclaration[4629-4840]:MethodDeclaration[4629-4840]"
    }, {
      "left" : "void forgiveUnknownNames()",
      "right" : "void forgiveUnknownNames()",
      "info" : "MethodDeclaration[4844-5047]:MethodDeclaration[4844-5047]"
    }, {
      "left" : "public boolean isNoType()",
      "right" : "public boolean isNoType()",
      "info" : "MethodDeclaration[5051-5100]:MethodDeclaration[5051-5100]"
    }, {
      "left" : "public boolean isNoResolvedType()",
      "right" : "public boolean isNoResolvedType()",
      "info" : "MethodDeclaration[5104-5161]:MethodDeclaration[5104-5161]"
    }, {
      "left" : "public boolean isNoObjectType()",
      "right" : "public boolean isNoObjectType()",
      "info" : "MethodDeclaration[5165-5220]:MethodDeclaration[5165-5220]"
    }, {
      "left" : "public final boolean isEmptyType()",
      "right" : "public final boolean isEmptyType()",
      "info" : "MethodDeclaration[5224-5329]:MethodDeclaration[5224-5429]"
    }, {
      "left" : "public boolean isNumberObjectType()",
      "right" : "public boolean isNumberObjectType()",
      "info" : "MethodDeclaration[5333-5392]:MethodDeclaration[5433-5492]"
    }, {
      "left" : "public boolean isNumberValueType()",
      "right" : "public boolean isNumberValueType()",
      "info" : "MethodDeclaration[5396-5454]:MethodDeclaration[5496-5554]"
    }, {
      "left" : "public boolean isFunctionPrototypeType()",
      "right" : "public boolean isFunctionPrototypeType()",
      "info" : "MethodDeclaration[5458-5576]:MethodDeclaration[5558-5676]"
    }, {
      "left" : "public boolean isStringObjectType()",
      "right" : "public boolean isStringObjectType()",
      "info" : "MethodDeclaration[5580-5639]:MethodDeclaration[5680-5739]"
    }, {
      "left" : "boolean isTheObjectType()",
      "right" : "boolean isTheObjectType()",
      "info" : "MethodDeclaration[5643-5692]:MethodDeclaration[5743-5792]"
    }, {
      "left" : "public boolean isStringValueType()",
      "right" : "public boolean isStringValueType()",
      "info" : "MethodDeclaration[5696-5754]:MethodDeclaration[5796-5854]"
    }, {
      "left" : "public final boolean isString()",
      "right" : "public final boolean isString()",
      "info" : "MethodDeclaration[5758-6008]:MethodDeclaration[5858-6108]"
    }, {
      "left" : "public final boolean isNumber()",
      "right" : "public final boolean isNumber()",
      "info" : "MethodDeclaration[6012-6262]:MethodDeclaration[6112-6362]"
    }, {
      "left" : "public boolean isArrayType()",
      "right" : "public boolean isArrayType()",
      "info" : "MethodDeclaration[6266-6318]:MethodDeclaration[6366-6418]"
    }, {
      "left" : "public boolean isBooleanObjectType()",
      "right" : "public boolean isBooleanObjectType()",
      "info" : "MethodDeclaration[6322-6382]:MethodDeclaration[6422-6482]"
    }, {
      "left" : "public boolean isBooleanValueType()",
      "right" : "public boolean isBooleanValueType()",
      "info" : "MethodDeclaration[6386-6445]:MethodDeclaration[6486-6545]"
    }, {
      "left" : "public boolean isRegexpType()",
      "right" : "public boolean isRegexpType()",
      "info" : "MethodDeclaration[6449-6502]:MethodDeclaration[6549-6602]"
    }, {
      "left" : "public boolean isDateType()",
      "right" : "public boolean isDateType()",
      "info" : "MethodDeclaration[6506-6557]:MethodDeclaration[6606-6657]"
    }, {
      "left" : "public boolean isNullType()",
      "right" : "public boolean isNullType()",
      "info" : "MethodDeclaration[6561-6612]:MethodDeclaration[6661-6712]"
    }, {
      "left" : "public boolean isVoidType()",
      "right" : "public boolean isVoidType()",
      "info" : "MethodDeclaration[6616-6667]:MethodDeclaration[6716-6767]"
    }, {
      "left" : "public boolean isAllType()",
      "right" : "public boolean isAllType()",
      "info" : "MethodDeclaration[6671-6721]:MethodDeclaration[6771-6821]"
    }, {
      "left" : "public boolean isUnknownType()",
      "right" : "public boolean isUnknownType()",
      "info" : "MethodDeclaration[6725-6779]:MethodDeclaration[6825-6879]"
    }, {
      "left" : "public boolean isCheckedUnknownType()",
      "right" : "public boolean isCheckedUnknownType()",
      "info" : "MethodDeclaration[6783-6844]:MethodDeclaration[6883-6944]"
    }, {
      "left" : "public boolean isUnionType()",
      "right" : "public boolean isUnionType()",
      "info" : "MethodDeclaration[6848-6900]:MethodDeclaration[6948-7000]"
    }, {
      "left" : "public boolean isFunctionType()",
      "right" : "public boolean isFunctionType()",
      "info" : "MethodDeclaration[6904-6959]:MethodDeclaration[7004-7059]"
    }, {
      "left" : "public boolean isEnumElementType()",
      "right" : "public boolean isEnumElementType()",
      "info" : "MethodDeclaration[6963-7021]:MethodDeclaration[7063-7121]"
    }, {
      "left" : "public boolean isEnumType()",
      "right" : "public boolean isEnumType()",
      "info" : "MethodDeclaration[7025-7076]:MethodDeclaration[7125-7176]"
    }, {
      "left" : "boolean isNamedType()",
      "right" : "boolean isNamedType()",
      "info" : "MethodDeclaration[7080-7125]:MethodDeclaration[7180-7225]"
    }, {
      "left" : "public boolean isRecordType()",
      "right" : "public boolean isRecordType()",
      "info" : "MethodDeclaration[7129-7182]:MethodDeclaration[7229-7282]"
    }, {
      "left" : "public boolean isTemplateType()",
      "right" : "public boolean isTemplateType()",
      "info" : "MethodDeclaration[7186-7241]:MethodDeclaration[7286-7341]"
    }, {
      "left" : "public boolean isObject()",
      "right" : "public boolean isObject()",
      "info" : "MethodDeclaration[7245-7420]:MethodDeclaration[7345-7520]"
    }, {
      "left" : "public boolean isConstructor()",
      "right" : "public boolean isConstructor()",
      "info" : "MethodDeclaration[7424-7610]:MethodDeclaration[7524-7710]"
    }, {
      "left" : "public boolean isNominalType()",
      "right" : "public boolean isNominalType()",
      "info" : "MethodDeclaration[7614-7769]:MethodDeclaration[7714-7869]"
    }, {
      "left" : "public boolean isInstanceType()",
      "right" : "public boolean isInstanceType()",
      "info" : "MethodDeclaration[7773-7906]:MethodDeclaration[7873-8006]"
    }, {
      "left" : "public boolean isInterface()",
      "right" : "public boolean isInterface()",
      "info" : "MethodDeclaration[7910-8093]:MethodDeclaration[8010-8193]"
    }, {
      "left" : "public boolean isOrdinaryFunction()",
      "right" : "public boolean isOrdinaryFunction()",
      "info" : "MethodDeclaration[8097-8295]:MethodDeclaration[8197-8395]"
    }, {
      "left" : "public boolean isEquivalentTo(JSType jsType)",
      "right" : "public boolean isEquivalentTo(JSType jsType)",
      "info" : "MethodDeclaration[8299-8801]:MethodDeclaration[8399-8901]"
    }, {
      "left" : "public static boolean isEquivalent(JSType typeA, JSType typeB)",
      "right" : "public static boolean isEquivalent(JSType typeA, JSType typeB)",
      "info" : "MethodDeclaration[8805-8973]:MethodDeclaration[8905-9073]"
    }, {
      "left" : "public boolean equals(Object jsType)",
      "right" : "public boolean equals(Object jsType)",
      "info" : "MethodDeclaration[8977-9120]:MethodDeclaration[9077-9220]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[9124-9205]:MethodDeclaration[9224-9305]"
    }, {
      "left" : "public final boolean matchesInt32Context()",
      "right" : "public final boolean matchesInt32Context()",
      "info" : "MethodDeclaration[9209-9573]:MethodDeclaration[9309-9673]"
    }, {
      "left" : "public final boolean matchesUint32Context()",
      "right" : "public final boolean matchesUint32Context()",
      "info" : "MethodDeclaration[9577-9841]:MethodDeclaration[9677-9941]"
    }, {
      "left" : "public boolean matchesNumberContext()",
      "right" : "public boolean matchesNumberContext()",
      "info" : "MethodDeclaration[9845-10056]:MethodDeclaration[9945-10156]"
    }, {
      "left" : "public boolean matchesStringContext()",
      "right" : "public boolean matchesStringContext()",
      "info" : "MethodDeclaration[10060-10519]:MethodDeclaration[10160-10619]"
    }, {
      "left" : "public boolean matchesObjectContext()",
      "right" : "public boolean matchesObjectContext()",
      "info" : "MethodDeclaration[10523-10924]:MethodDeclaration[10623-11024]"
    }, {
      "left" : "public JSType findPropertyType(String propertyName)",
      "right" : "public JSType findPropertyType(String propertyName)",
      "info" : "MethodDeclaration[10928-11517]:MethodDeclaration[11028-11617]"
    }, {
      "left" : "public boolean canBeCalled()",
      "right" : "public boolean canBeCalled()",
      "info" : "MethodDeclaration[11521-11760]:MethodDeclaration[11621-11860]"
    }, {
      "left" : "public boolean canAssignTo(JSType that)",
      "right" : "public boolean canAssignTo(JSType that)",
      "info" : "MethodDeclaration[11764-12108]:MethodDeclaration[11864-12208]"
    }, {
      "left" : "public JSType autoboxesTo()",
      "right" : "public JSType autoboxesTo()",
      "info" : "MethodDeclaration[12112-12309]:MethodDeclaration[12212-12409]"
    }, {
      "left" : "public JSType unboxesTo()",
      "right" : "public JSType unboxesTo()",
      "info" : "MethodDeclaration[12313-12500]:MethodDeclaration[12413-12600]"
    }, {
      "left" : "public ObjectType toObjectType()",
      "right" : "public ObjectType toObjectType()",
      "info" : "MethodDeclaration[12504-12912]:MethodDeclaration[12604-13012]"
    }, {
      "left" : "public final ObjectType dereference()",
      "right" : "public final ObjectType dereference()",
      "info" : "MethodDeclaration[12916-13289]:MethodDeclaration[13016-13389]"
    }, {
      "left" : "public final boolean canTestForEqualityWith(JSType that)",
      "right" : "public final boolean canTestForEqualityWith(JSType that)",
      "info" : "MethodDeclaration[13293-13710]:MethodDeclaration[13393-13810]"
    }, {
      "left" : "public TernaryValue testForEquality(JSType that)",
      "right" : "public TernaryValue testForEquality(JSType that)",
      "info" : "MethodDeclaration[13714-14398]:MethodDeclaration[13814-14498]"
    }, {
      "left" : "TernaryValue testForEqualityHelper(JSType aType, JSType bType)",
      "right" : "TernaryValue testForEqualityHelper(JSType aType, JSType bType)",
      "info" : "MethodDeclaration[14402-15760]:MethodDeclaration[14502-15860]"
    }, {
      "left" : "public final boolean canTestForShallowEqualityWith(JSType that)",
      "right" : "public final boolean canTestForShallowEqualityWith(JSType that)",
      "info" : "MethodDeclaration[15764-16222]:MethodDeclaration[15864-16322]"
    }, {
      "left" : "public boolean isNullable()",
      "right" : "public boolean isNullable()",
      "info" : "MethodDeclaration[16226-16379]:MethodDeclaration[16326-16479]"
    }, {
      "left" : "public JSType getLeastSupertype(JSType that)",
      "right" : "public JSType getLeastSupertype(JSType that)",
      "info" : "MethodDeclaration[16383-17063]:MethodDeclaration[16483-17163]"
    }, {
      "left" : "static JSType getLeastSupertype(JSType thisType, JSType thatType)",
      "right" : "static JSType getLeastSupertype(JSType thisType, JSType thatType)",
      "info" : "MethodDeclaration[17067-17459]:MethodDeclaration[17167-17559]"
    }, {
      "left" : "public JSType getGreatestSubtype(JSType that)",
      "right" : "public JSType getGreatestSubtype(JSType that)",
      "info" : "MethodDeclaration[17463-18140]:MethodDeclaration[17563-18240]"
    }, {
      "left" : "static JSType getGreatestSubtype(JSType thisType, JSType thatType)",
      "right" : "static JSType getGreatestSubtype(JSType thisType, JSType thatType)",
      "info" : "MethodDeclaration[18144-19283]:MethodDeclaration[18244-19383]"
    }, {
      "left" : "static JSType filterNoResolvedType(JSType type)",
      "right" : "static JSType filterNoResolvedType(JSType type)",
      "info" : "MethodDeclaration[19287-20431]:MethodDeclaration[19387-20531]"
    }, {
      "left" : "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome)",
      "right" : "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome)",
      "info" : "MethodDeclaration[20435-21275]:MethodDeclaration[20535-21375]"
    }, {
      "left" : "public abstract BooleanLiteralSet getPossibleToBooleanOutcomes();",
      "right" : "public abstract BooleanLiteralSet getPossibleToBooleanOutcomes();",
      "info" : "MethodDeclaration[21279-22097]:MethodDeclaration[21379-22197]"
    }, {
      "left" : "public TypePair getTypesUnderEquality(JSType that)",
      "right" : "public TypePair getTypesUnderEquality(JSType that)",
      "info" : "MethodDeclaration[22101-23218]:MethodDeclaration[22201-23318]"
    }, {
      "left" : "public TypePair getTypesUnderInequality(JSType that)",
      "right" : "public TypePair getTypesUnderInequality(JSType that)",
      "info" : "MethodDeclaration[23222-24423]:MethodDeclaration[23322-24523]"
    }, {
      "left" : "public TypePair getTypesUnderShallowEquality(JSType that)",
      "right" : "public TypePair getTypesUnderShallowEquality(JSType that)",
      "info" : "MethodDeclaration[24427-24979]:MethodDeclaration[24527-25079]"
    }, {
      "left" : "public TypePair getTypesUnderShallowInequality(JSType that)",
      "right" : "public TypePair getTypesUnderShallowInequality(JSType that)",
      "info" : "MethodDeclaration[24983-25967]:MethodDeclaration[25083-26067]"
    }, {
      "left" : "public JSType restrictByNotNullOrUndefined()",
      "right" : "public JSType restrictByNotNullOrUndefined()",
      "info" : "MethodDeclaration[25971-26156]:MethodDeclaration[26071-26256]"
    }, {
      "left" : "public abstract boolean isSubtype(JSType that);",
      "right" : "public abstract boolean isSubtype(JSType that);",
      "info" : "MethodDeclaration[26160-27505]:MethodDeclaration[26260-27605]"
    }, {
      "left" : "public boolean differsFrom(JSType that)",
      "right" : "public boolean differsFrom(JSType that)",
      "info" : "MethodDeclaration[27509-28138]:MethodDeclaration[27609-28238]"
    }, {
      "left" : "static boolean isSubtype(JSType thisType, JSType thatType)",
      "right" : "static boolean isSubtype(JSType thisType, JSType thatType)",
      "info" : "MethodDeclaration[28142-28943]:MethodDeclaration[28242-29043]"
    }, {
      "left" : "public abstract <T> T visit(Visitor<T> visitor);",
      "right" : "public abstract <T> T visit(Visitor<T> visitor);",
      "info" : "MethodDeclaration[28947-29152]:MethodDeclaration[29047-29252]"
    }, {
      "left" : "public final JSType forceResolve(ErrorReporter t, StaticScope<JSType> scope)",
      "right" : "public final JSType forceResolve(ErrorReporter t, StaticScope<JSType> scope)",
      "info" : "MethodDeclaration[29156-29572]:MethodDeclaration[29256-29672]"
    }, {
      "left" : "public final JSType resolve(ErrorReporter t, StaticScope<JSType> scope)",
      "right" : "public final JSType resolve(ErrorReporter t, StaticScope<JSType> scope)",
      "info" : "MethodDeclaration[29577-30697]:MethodDeclaration[29677-30797]"
    }, {
      "left" : "abstract JSType resolveInternal(ErrorReporter t, StaticScope<JSType> scope);",
      "right" : "abstract JSType resolveInternal(ErrorReporter t, StaticScope<JSType> scope);",
      "info" : "MethodDeclaration[30701-30808]:MethodDeclaration[30801-30908]"
    }, {
      "left" : "void setResolvedTypeInternal(JSType type)",
      "right" : "void setResolvedTypeInternal(JSType type)",
      "info" : "MethodDeclaration[30812-30906]:MethodDeclaration[30912-31006]"
    }, {
      "left" : "public final boolean isResolved()",
      "right" : "public final boolean isResolved()",
      "info" : "MethodDeclaration[30910-31015]:MethodDeclaration[31010-31115]"
    }, {
      "left" : "public final void clearResolved()",
      "right" : "public final void clearResolved()",
      "info" : "MethodDeclaration[31019-31142]:MethodDeclaration[31119-31242]"
    }, {
      "left" : "static final JSType safeResolve(\n      JSType type, ErrorReporter t, StaticScope<JSType> scope)",
      "right" : "static final JSType safeResolve(\n      JSType type, ErrorReporter t, StaticScope<JSType> scope)",
      "info" : "MethodDeclaration[31146-31361]:MethodDeclaration[31246-31461]"
    }, {
      "left" : "public boolean setValidator(Predicate<JSType> validator)",
      "right" : "public boolean setValidator(Predicate<JSType> validator)",
      "info" : "MethodDeclaration[31365-31729]:MethodDeclaration[31465-31829]"
    }, {
      "left" : "TypePair",
      "right" : "TypePair",
      "info" : "TypeDeclaration[31733-31938]:TypeDeclaration[31833-32038]"
    }, {
      "left" : "public final JSType typeA;",
      "right" : "public final JSType typeA;",
      "info" : "FieldDeclaration[31768-31794]:FieldDeclaration[31868-31894]"
    }, {
      "left" : "public final JSType typeB;",
      "right" : "public final JSType typeB;",
      "info" : "FieldDeclaration[31799-31825]:FieldDeclaration[31899-31925]"
    }, {
      "left" : "public TypePair(JSType typeA, JSType typeB)",
      "right" : "public TypePair(JSType typeA, JSType typeB)",
      "info" : "MethodDeclaration[31831-31934]:MethodDeclaration[31931-32034]"
    }, {
      "left" : "public String toDebugHashCodeString()",
      "right" : "public String toDebugHashCodeString()",
      "info" : "MethodDeclaration[31942-32124]:MethodDeclaration[32042-32224]"
    } ],
    "mappings" : [
 {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[2657-2669]:SimpleType[2657-2669]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3419-3425]:Modifier[3419-3425]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[3426-3429]:PrimitiveType[3426-3429]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[3430-3437]:SimpleName[3430-3437]"
    }, {
      "left" : "JSType t1",
      "right" : "JSType t1",
      "info" : "SingleVariableDeclaration[3438-3447]:SingleVariableDeclaration[3438-3447]"
    }, {
      "left" : "JSType t2",
      "right" : "JSType t2",
      "info" : "SingleVariableDeclaration[3449-3458]:SingleVariableDeclaration[3449-3458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3460-3520]:Block[3460-3520]"
    }, {
      "left" : "return t1.toString().compareTo(t2.toString());",
      "right" : "return t1.toString().compareTo(t2.toString());",
      "info" : "ReturnStatement[3468-3514]:ReturnStatement[3468-3514]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleName[3694-3700]:SimpleName[3694-3700]"
    }, {
      "left" : "JSTypeRegistry registry",
      "right" : "JSTypeRegistry registry",
      "info" : "SingleVariableDeclaration[3701-3724]:SingleVariableDeclaration[3701-3724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3726-3761]:Block[3726-3761]"
    }, {
      "left" : "this.registry = registry;",
      "right" : "this.registry = registry;",
      "info" : "ExpressionStatement[3732-3757]:ExpressionStatement[3732-3757]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[3820-3826]:SimpleType[3820-3826]"
    }, {
      "left" : "getNativeType",
      "right" : "getNativeType",
      "info" : "SimpleName[3827-3840]:SimpleName[3827-3840]"
    }, {
      "left" : "JSTypeNative typeId",
      "right" : "JSTypeNative typeId",
      "info" : "SingleVariableDeclaration[3841-3860]:SingleVariableDeclaration[3841-3860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3862-3910]:Block[3862-3910]"
    }, {
      "left" : "return registry.getNativeType(typeId);",
      "right" : "return registry.getNativeType(typeId);",
      "info" : "ReturnStatement[3868-3906]:ReturnStatement[3868-3906]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4092-4098]:Modifier[4092-4098]"
    }, {
      "left" : "JSDocInfo",
      "right" : "JSDocInfo",
      "info" : "SimpleType[4099-4108]:SimpleType[4099-4108]"
    }, {
      "left" : "getJSDocInfo",
      "right" : "getJSDocInfo",
      "info" : "SimpleName[4109-4121]:SimpleName[4109-4121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4124-4146]:Block[4124-4146]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4130-4142]:ReturnStatement[4130-4142]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4572-4578]:Modifier[4572-4578]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4579-4585]:SimpleType[4579-4585]"
    }, {
      "left" : "getDisplayName",
      "right" : "getDisplayName",
      "info" : "SimpleName[4586-4600]:SimpleName[4586-4600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4603-4625]:Block[4603-4625]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4609-4621]:ReturnStatement[4609-4621]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4702-4708]:Modifier[4702-4708]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4709-4716]:PrimitiveType[4709-4716]"
    }, {
      "left" : "hasDisplayName",
      "right" : "hasDisplayName",
      "info" : "SimpleName[4717-4731]:SimpleName[4717-4731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4734-4840]:Block[4734-4840]"
    }, {
      "left" : "String displayName = getDisplayName();",
      "right" : "String displayName = getDisplayName();",
      "info" : "VariableDeclarationStatement[4740-4778]:VariableDeclarationStatement[4740-4778]"
    }, {
      "left" : "return displayName != null && !displayName.isEmpty();",
      "right" : "return displayName != null && !displayName.isEmpty();",
      "info" : "ReturnStatement[4783-4836]:ReturnStatement[4783-4836]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5018-5022]:PrimitiveType[5018-5022]"
    }, {
      "left" : "forgiveUnknownNames",
      "right" : "forgiveUnknownNames",
      "info" : "SimpleName[5023-5042]:SimpleName[5023-5042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5045-5047]:Block[5045-5047]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5051-5057]:Modifier[5051-5057]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5058-5065]:PrimitiveType[5058-5065]"
    }, {
      "left" : "isNoType",
      "right" : "isNoType",
      "info" : "SimpleName[5066-5074]:SimpleName[5066-5074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5077-5100]:Block[5077-5100]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5083-5096]:ReturnStatement[5083-5096]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5104-5110]:Modifier[5104-5110]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5111-5118]:PrimitiveType[5111-5118]"
    }, {
      "left" : "isNoResolvedType",
      "right" : "isNoResolvedType",
      "info" : "SimpleName[5119-5135]:SimpleName[5119-5135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5138-5161]:Block[5138-5161]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5144-5157]:ReturnStatement[5144-5157]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5165-5171]:Modifier[5165-5171]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5172-5179]:PrimitiveType[5172-5179]"
    }, {
      "left" : "isNoObjectType",
      "right" : "isNoObjectType",
      "info" : "SimpleName[5180-5194]:SimpleName[5180-5194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5197-5220]:Block[5197-5220]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5203-5216]:ReturnStatement[5203-5216]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5224-5230]:Modifier[5224-5230]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5231-5236]:Modifier[5231-5236]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5237-5244]:PrimitiveType[5237-5244]"
    }, {
      "left" : "isEmptyType",
      "right" : "isEmptyType",
      "info" : "SimpleName[5245-5256]:SimpleName[5245-5256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5259-5329]:Block[5259-5429]"
    }, {
      "left" : "return isNoType() || isNoObjectType() || isNoResolvedType();",
      "right" : "return isNoType() || isNoObjectType() || isNoResolvedType() ||\n        (registry.getNativeFunctionType(\n             JSTypeNative.LEAST_FUNCTION_TYPE) == this);",
      "info" : "ReturnStatement[5265-5325]:ReturnStatement[5265-5425]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5333-5339]:Modifier[5433-5439]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5340-5347]:PrimitiveType[5440-5447]"
    }, {
      "left" : "isNumberObjectType",
      "right" : "isNumberObjectType",
      "info" : "SimpleName[5348-5366]:SimpleName[5448-5466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5369-5392]:Block[5469-5492]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5375-5388]:ReturnStatement[5475-5488]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5396-5402]:Modifier[5496-5502]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5403-5410]:PrimitiveType[5503-5510]"
    }, {
      "left" : "isNumberValueType",
      "right" : "isNumberValueType",
      "info" : "SimpleName[5411-5428]:SimpleName[5511-5528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5431-5454]:Block[5531-5554]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5437-5450]:ReturnStatement[5537-5550]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5512-5518]:Modifier[5612-5618]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5519-5526]:PrimitiveType[5619-5626]"
    }, {
      "left" : "isFunctionPrototypeType",
      "right" : "isFunctionPrototypeType",
      "info" : "SimpleName[5527-5550]:SimpleName[5627-5650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5553-5576]:Block[5653-5676]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5559-5572]:ReturnStatement[5659-5672]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5580-5586]:Modifier[5680-5686]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5587-5594]:PrimitiveType[5687-5694]"
    }, {
      "left" : "isStringObjectType",
      "right" : "isStringObjectType",
      "info" : "SimpleName[5595-5613]:SimpleName[5695-5713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5616-5639]:Block[5716-5739]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5622-5635]:ReturnStatement[5722-5735]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5643-5650]:PrimitiveType[5743-5750]"
    }, {
      "left" : "isTheObjectType",
      "right" : "isTheObjectType",
      "info" : "SimpleName[5651-5666]:SimpleName[5751-5766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5669-5692]:Block[5769-5792]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5675-5688]:ReturnStatement[5775-5788]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5696-5702]:Modifier[5796-5802]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5703-5710]:PrimitiveType[5803-5810]"
    }, {
      "left" : "isStringValueType",
      "right" : "isStringValueType",
      "info" : "SimpleName[5711-5728]:SimpleName[5811-5828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5731-5754]:Block[5831-5854]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5737-5750]:ReturnStatement[5837-5850]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5878-5884]:Modifier[5978-5984]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5885-5890]:Modifier[5985-5990]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5891-5898]:PrimitiveType[5991-5998]"
    }, {
      "left" : "isString",
      "right" : "isString",
      "info" : "SimpleName[5899-5907]:SimpleName[5999-6007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5910-6008]:Block[6010-6108]"
    }, {
      "left" : "return this.isSubtype(\n        getNativeType(JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE));",
      "right" : "return this.isSubtype(\n        getNativeType(JSTypeNative.STRING_VALUE_OR_OBJECT_TYPE));",
      "info" : "ReturnStatement[5916-6004]:ReturnStatement[6016-6104]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6132-6138]:Modifier[6232-6238]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6139-6144]:Modifier[6239-6244]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6145-6152]:PrimitiveType[6245-6252]"
    }, {
      "left" : "isNumber",
      "right" : "isNumber",
      "info" : "SimpleName[6153-6161]:SimpleName[6253-6261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6164-6262]:Block[6264-6362]"
    }, {
      "left" : "return this.isSubtype(\n        getNativeType(JSTypeNative.NUMBER_VALUE_OR_OBJECT_TYPE));",
      "right" : "return this.isSubtype(\n        getNativeType(JSTypeNative.NUMBER_VALUE_OR_OBJECT_TYPE));",
      "info" : "ReturnStatement[6170-6258]:ReturnStatement[6270-6358]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6266-6272]:Modifier[6366-6372]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6273-6280]:PrimitiveType[6373-6380]"
    }, {
      "left" : "isArrayType",
      "right" : "isArrayType",
      "info" : "SimpleName[6281-6292]:SimpleName[6381-6392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6295-6318]:Block[6395-6418]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6301-6314]:ReturnStatement[6401-6414]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6322-6328]:Modifier[6422-6428]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6329-6336]:PrimitiveType[6429-6436]"
    }, {
      "left" : "isBooleanObjectType",
      "right" : "isBooleanObjectType",
      "info" : "SimpleName[6337-6356]:SimpleName[6437-6456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6359-6382]:Block[6459-6482]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6365-6378]:ReturnStatement[6465-6478]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6386-6392]:Modifier[6486-6492]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6393-6400]:PrimitiveType[6493-6500]"
    }, {
      "left" : "isBooleanValueType",
      "right" : "isBooleanValueType",
      "info" : "SimpleName[6401-6419]:SimpleName[6501-6519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6422-6445]:Block[6522-6545]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6428-6441]:ReturnStatement[6528-6541]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6449-6455]:Modifier[6549-6555]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6456-6463]:PrimitiveType[6556-6563]"
    }, {
      "left" : "isRegexpType",
      "right" : "isRegexpType",
      "info" : "SimpleName[6464-6476]:SimpleName[6564-6576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6479-6502]:Block[6579-6602]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6485-6498]:ReturnStatement[6585-6598]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6506-6512]:Modifier[6606-6612]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6513-6520]:PrimitiveType[6613-6620]"
    }, {
      "left" : "isDateType",
      "right" : "isDateType",
      "info" : "SimpleName[6521-6531]:SimpleName[6621-6631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6534-6557]:Block[6634-6657]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6540-6553]:ReturnStatement[6640-6653]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6561-6567]:Modifier[6661-6667]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6568-6575]:PrimitiveType[6668-6675]"
    }, {
      "left" : "isNullType",
      "right" : "isNullType",
      "info" : "SimpleName[6576-6586]:SimpleName[6676-6686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6589-6612]:Block[6689-6712]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6595-6608]:ReturnStatement[6695-6708]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6616-6622]:Modifier[6716-6722]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6623-6630]:PrimitiveType[6723-6730]"
    }, {
      "left" : "isVoidType",
      "right" : "isVoidType",
      "info" : "SimpleName[6631-6641]:SimpleName[6731-6741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6644-6667]:Block[6744-6767]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6650-6663]:ReturnStatement[6750-6763]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6671-6677]:Modifier[6771-6777]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6678-6685]:PrimitiveType[6778-6785]"
    }, {
      "left" : "isAllType",
      "right" : "isAllType",
      "info" : "SimpleName[6686-6695]:SimpleName[6786-6795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6698-6721]:Block[6798-6821]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6704-6717]:ReturnStatement[6804-6817]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6725-6731]:Modifier[6825-6831]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6732-6739]:PrimitiveType[6832-6839]"
    }, {
      "left" : "isUnknownType",
      "right" : "isUnknownType",
      "info" : "SimpleName[6740-6753]:SimpleName[6840-6853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6756-6779]:Block[6856-6879]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6762-6775]:ReturnStatement[6862-6875]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6783-6789]:Modifier[6883-6889]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6790-6797]:PrimitiveType[6890-6897]"
    }, {
      "left" : "isCheckedUnknownType",
      "right" : "isCheckedUnknownType",
      "info" : "SimpleName[6798-6818]:SimpleName[6898-6918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6821-6844]:Block[6921-6944]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6827-6840]:ReturnStatement[6927-6940]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6848-6854]:Modifier[6948-6954]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6855-6862]:PrimitiveType[6955-6962]"
    }, {
      "left" : "isUnionType",
      "right" : "isUnionType",
      "info" : "SimpleName[6863-6874]:SimpleName[6963-6974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6877-6900]:Block[6977-7000]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6883-6896]:ReturnStatement[6983-6996]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6904-6910]:Modifier[7004-7010]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6911-6918]:PrimitiveType[7011-7018]"
    }, {
      "left" : "isFunctionType",
      "right" : "isFunctionType",
      "info" : "SimpleName[6919-6933]:SimpleName[7019-7033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6936-6959]:Block[7036-7059]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6942-6955]:ReturnStatement[7042-7055]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6963-6969]:Modifier[7063-7069]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6970-6977]:PrimitiveType[7070-7077]"
    }, {
      "left" : "isEnumElementType",
      "right" : "isEnumElementType",
      "info" : "SimpleName[6978-6995]:SimpleName[7078-7095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6998-7021]:Block[7098-7121]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7004-7017]:ReturnStatement[7104-7117]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7025-7031]:Modifier[7125-7131]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7032-7039]:PrimitiveType[7132-7139]"
    }, {
      "left" : "isEnumType",
      "right" : "isEnumType",
      "info" : "SimpleName[7040-7050]:SimpleName[7140-7150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7053-7076]:Block[7153-7176]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7059-7072]:ReturnStatement[7159-7172]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7080-7087]:PrimitiveType[7180-7187]"
    }, {
      "left" : "isNamedType",
      "right" : "isNamedType",
      "info" : "SimpleName[7088-7099]:SimpleName[7188-7199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7102-7125]:Block[7202-7225]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7108-7121]:ReturnStatement[7208-7221]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7129-7135]:Modifier[7229-7235]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7136-7143]:PrimitiveType[7236-7243]"
    }, {
      "left" : "isRecordType",
      "right" : "isRecordType",
      "info" : "SimpleName[7144-7156]:SimpleName[7244-7256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7159-7182]:Block[7259-7282]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7165-7178]:ReturnStatement[7265-7278]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7186-7192]:Modifier[7286-7292]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7193-7200]:PrimitiveType[7293-7300]"
    }, {
      "left" : "isTemplateType",
      "right" : "isTemplateType",
      "info" : "SimpleName[7201-7215]:SimpleName[7301-7315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7218-7241]:Block[7318-7341]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7224-7237]:ReturnStatement[7324-7337]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7371-7377]:Modifier[7471-7477]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7378-7385]:PrimitiveType[7478-7485]"
    }, {
      "left" : "isObject",
      "right" : "isObject",
      "info" : "SimpleName[7386-7394]:SimpleName[7486-7494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7397-7420]:Block[7497-7520]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7403-7416]:ReturnStatement[7503-7516]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7556-7562]:Modifier[7656-7662]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7563-7570]:PrimitiveType[7663-7670]"
    }, {
      "left" : "isConstructor",
      "right" : "isConstructor",
      "info" : "SimpleName[7571-7584]:SimpleName[7671-7684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7587-7610]:Block[7687-7710]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7593-7606]:ReturnStatement[7693-7706]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7715-7721]:Modifier[7815-7821]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7722-7729]:PrimitiveType[7822-7829]"
    }, {
      "left" : "isNominalType",
      "right" : "isNominalType",
      "info" : "SimpleName[7730-7743]:SimpleName[7830-7843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7746-7769]:Block[7846-7869]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7752-7765]:ReturnStatement[7852-7865]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7851-7857]:Modifier[7951-7957]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7858-7865]:PrimitiveType[7958-7965]"
    }, {
      "left" : "isInstanceType",
      "right" : "isInstanceType",
      "info" : "SimpleName[7866-7880]:SimpleName[7966-7980]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7883-7906]:Block[7983-8006]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7889-7902]:ReturnStatement[7989-8002]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8041-8047]:Modifier[8141-8147]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8048-8055]:PrimitiveType[8148-8155]"
    }, {
      "left" : "isInterface",
      "right" : "isInterface",
      "info" : "SimpleName[8056-8067]:SimpleName[8156-8167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8070-8093]:Block[8170-8193]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8076-8089]:ReturnStatement[8176-8189]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8236-8242]:Modifier[8336-8342]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8243-8250]:PrimitiveType[8343-8350]"
    }, {
      "left" : "isOrdinaryFunction",
      "right" : "isOrdinaryFunction",
      "info" : "SimpleName[8251-8269]:SimpleName[8351-8369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8272-8295]:Block[8372-8395]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8278-8291]:ReturnStatement[8378-8391]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8352-8358]:Modifier[8452-8458]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8359-8366]:PrimitiveType[8459-8466]"
    }, {
      "left" : "isEquivalentTo",
      "right" : "isEquivalentTo",
      "info" : "SimpleName[8367-8381]:SimpleName[8467-8481]"
    }, {
      "left" : "JSType jsType",
      "right" : "JSType jsType",
      "info" : "SingleVariableDeclaration[8382-8395]:SingleVariableDeclaration[8482-8495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8397-8801]:Block[8497-8901]"
    }, {
      "left" : "if (jsType instanceof ProxyObjectType)",
      "right" : "if (jsType instanceof ProxyObjectType)",
      "info" : "IfStatement[8403-8491]:IfStatement[8503-8591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8442-8491]:Block[8542-8591]"
    }, {
      "left" : "return jsType.isEquivalentTo(this);",
      "right" : "return jsType.isEquivalentTo(this);",
      "info" : "ReturnStatement[8450-8485]:ReturnStatement[8550-8585]"
    }, {
      "left" : "return this == jsType;",
      "right" : "return this == jsType;",
      "info" : "ReturnStatement[8775-8797]:ReturnStatement[8875-8897]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8805-8811]:Modifier[8905-8911]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8812-8818]:Modifier[8912-8918]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8819-8826]:PrimitiveType[8919-8926]"
    }, {
      "left" : "isEquivalent",
      "right" : "isEquivalent",
      "info" : "SimpleName[8827-8839]:SimpleName[8927-8939]"
    }, {
      "left" : "JSType typeA",
      "right" : "JSType typeA",
      "info" : "SingleVariableDeclaration[8840-8852]:SingleVariableDeclaration[8940-8952]"
    }, {
      "left" : "JSType typeB",
      "right" : "JSType typeB",
      "info" : "SingleVariableDeclaration[8854-8866]:SingleVariableDeclaration[8954-8966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8868-8973]:Block[8968-9073]"
    }, {
      "left" : "return (typeA == null || typeB == null) ?\n        typeA == typeB : typeA.isEquivalentTo(typeB);",
      "right" : "return (typeA == null || typeB == null) ?\n        typeA == typeB : typeA.isEquivalentTo(typeB);",
      "info" : "ReturnStatement[8874-8969]:ReturnStatement[8974-9069]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8977-8986]:MarkerAnnotation[9077-9086]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8989-8995]:Modifier[9089-9095]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8996-9003]:PrimitiveType[9096-9103]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[9004-9010]:SimpleName[9104-9110]"
    }, {
      "left" : "Object jsType",
      "right" : "Object jsType",
      "info" : "SingleVariableDeclaration[9011-9024]:SingleVariableDeclaration[9111-9124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9026-9120]:Block[9126-9220]"
    }, {
      "left" : "return (jsType instanceof JSType) ?\n        isEquivalentTo((JSType) jsType) : false;",
      "right" : "return (jsType instanceof JSType) ?\n        isEquivalentTo((JSType) jsType) : false;",
      "info" : "ReturnStatement[9032-9116]:ReturnStatement[9132-9216]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9124-9133]:MarkerAnnotation[9224-9233]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9136-9142]:Modifier[9236-9242]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[9143-9146]:PrimitiveType[9243-9246]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[9147-9155]:SimpleName[9247-9255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9158-9205]:Block[9258-9305]"
    }, {
      "left" : "return System.identityHashCode(this);",
      "right" : "return System.identityHashCode(this);",
      "info" : "ReturnStatement[9164-9201]:ReturnStatement[9264-9301]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9490-9496]:Modifier[9590-9596]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9497-9502]:Modifier[9597-9602]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9503-9510]:PrimitiveType[9603-9610]"
    }, {
      "left" : "matchesInt32Context",
      "right" : "matchesInt32Context",
      "info" : "SimpleName[9511-9530]:SimpleName[9611-9630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9533-9573]:Block[9633-9673]"
    }, {
      "left" : "return matchesNumberContext();",
      "right" : "return matchesNumberContext();",
      "info" : "ReturnStatement[9539-9569]:ReturnStatement[9639-9669]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9757-9763]:Modifier[9857-9863]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9764-9769]:Modifier[9864-9869]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9770-9777]:PrimitiveType[9870-9877]"
    }, {
      "left" : "matchesUint32Context",
      "right" : "matchesUint32Context",
      "info" : "SimpleName[9778-9798]:SimpleName[9878-9898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9801-9841]:Block[9901-9941]"
    }, {
      "left" : "return matchesNumberContext();",
      "right" : "return matchesNumberContext();",
      "info" : "ReturnStatement[9807-9837]:ReturnStatement[9907-9937]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9995-10001]:Modifier[10095-10101]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[10002-10009]:PrimitiveType[10102-10109]"
    }, {
      "left" : "matchesNumberContext",
      "right" : "matchesNumberContext",
      "info" : "SimpleName[10010-10030]:SimpleName[10110-10130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10033-10056]:Block[10133-10156]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10039-10052]:ReturnStatement[10139-10152]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10458-10464]:Modifier[10558-10564]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[10465-10472]:PrimitiveType[10565-10572]"
    }, {
      "left" : "matchesStringContext",
      "right" : "matchesStringContext",
      "info" : "SimpleName[10473-10493]:SimpleName[10573-10593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10496-10519]:Block[10596-10619]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10502-10515]:ReturnStatement[10602-10615]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10863-10869]:Modifier[10963-10969]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[10870-10877]:PrimitiveType[10970-10977]"
    }, {
      "left" : "matchesObjectContext",
      "right" : "matchesObjectContext",
      "info" : "SimpleName[10878-10898]:SimpleName[10978-10998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10901-10924]:Block[11001-11024]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10907-10920]:ReturnStatement[11007-11020]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11278-11284]:Modifier[11378-11384]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[11285-11291]:SimpleType[11385-11391]"
    }, {
      "left" : "findPropertyType",
      "right" : "findPropertyType",
      "info" : "SimpleName[11292-11308]:SimpleName[11392-11408]"
    }, {
      "left" : "String propertyName",
      "right" : "String propertyName",
      "info" : "SingleVariableDeclaration[11309-11328]:SingleVariableDeclaration[11409-11428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11330-11517]:Block[11430-11617]"
    }, {
      "left" : "ObjectType autoboxObjType = ObjectType.cast(autoboxesTo());",
      "right" : "ObjectType autoboxObjType = ObjectType.cast(autoboxesTo());",
      "info" : "VariableDeclarationStatement[11336-11395]:VariableDeclarationStatement[11436-11495]"
    }, {
      "left" : "if (autoboxObjType != null)",
      "right" : "if (autoboxObjType != null)",
      "info" : "IfStatement[11400-11495]:IfStatement[11500-11595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11428-11495]:Block[11528-11595]"
    }, {
      "left" : "return autoboxObjType.findPropertyType(propertyName);",
      "right" : "return autoboxObjType.findPropertyType(propertyName);",
      "info" : "ReturnStatement[11436-11489]:ReturnStatement[11536-11589]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11501-11513]:ReturnStatement[11601-11613]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11708-11714]:Modifier[11808-11814]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11715-11722]:PrimitiveType[11815-11822]"
    }, {
      "left" : "canBeCalled",
      "right" : "canBeCalled",
      "info" : "SimpleName[11723-11734]:SimpleName[11823-11834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11737-11760]:Block[11837-11860]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11743-11756]:ReturnStatement[11843-11856]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11988-11994]:Modifier[12088-12094]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11995-12002]:PrimitiveType[12095-12102]"
    }, {
      "left" : "canAssignTo",
      "right" : "canAssignTo",
      "info" : "SimpleName[12003-12014]:SimpleName[12103-12114]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[12015-12026]:SingleVariableDeclaration[12115-12126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12028-12108]:Block[12128-12208]"
    }, {
      "left" : "if (this.isSubtype(that))",
      "right" : "if (this.isSubtype(that))",
      "info" : "IfStatement[12034-12086]:IfStatement[12134-12186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12060-12086]:Block[12160-12186]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[12068-12080]:ReturnStatement[12168-12180]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[12091-12104]:ReturnStatement[12191-12204]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12259-12265]:Modifier[12359-12365]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[12266-12272]:SimpleType[12366-12372]"
    }, {
      "left" : "autoboxesTo",
      "right" : "autoboxesTo",
      "info" : "SimpleName[12273-12284]:SimpleName[12373-12384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12287-12309]:Block[12387-12409]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[12293-12305]:ReturnStatement[12393-12405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12452-12458]:Modifier[12552-12558]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[12459-12465]:SimpleType[12559-12565]"
    }, {
      "left" : "unboxesTo",
      "right" : "unboxesTo",
      "info" : "SimpleName[12466-12475]:SimpleName[12566-12575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12478-12500]:Block[12578-12600]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[12484-12496]:ReturnStatement[12584-12596]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12808-12814]:Modifier[12908-12914]"
    }, {
      "left" : "ObjectType",
      "right" : "ObjectType",
      "info" : "SimpleType[12815-12825]:SimpleType[12915-12925]"
    }, {
      "left" : "toObjectType",
      "right" : "toObjectType",
      "info" : "SimpleName[12826-12838]:SimpleName[12926-12938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12841-12912]:Block[12941-13012]"
    }, {
      "left" : "return this instanceof ObjectType ? (ObjectType) this : null;",
      "right" : "return this instanceof ObjectType ? (ObjectType) this : null;",
      "info" : "ReturnStatement[12847-12908]:ReturnStatement[12947-13008]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13075-13081]:Modifier[13175-13181]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[13082-13087]:Modifier[13182-13187]"
    }, {
      "left" : "ObjectType",
      "right" : "ObjectType",
      "info" : "SimpleType[13088-13098]:SimpleType[13188-13198]"
    }, {
      "left" : "dereference",
      "right" : "dereference",
      "info" : "SimpleName[13099-13110]:SimpleName[13199-13210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13113-13289]:Block[13213-13389]"
    }, {
      "left" : "JSType restricted = restrictByNotNullOrUndefined();",
      "right" : "JSType restricted = restrictByNotNullOrUndefined();",
      "info" : "VariableDeclarationStatement[13119-13170]:VariableDeclarationStatement[13219-13270]"
    }, {
      "left" : "JSType autobox = restricted.autoboxesTo();",
      "right" : "JSType autobox = restricted.autoboxesTo();",
      "info" : "VariableDeclarationStatement[13175-13217]:VariableDeclarationStatement[13275-13317]"
    }, {
      "left" : "return ObjectType.cast(autobox == null ? restricted : autobox);",
      "right" : "return ObjectType.cast(autobox == null ? restricted : autobox);",
      "info" : "ReturnStatement[13222-13285]:ReturnStatement[13322-13385]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13593-13599]:Modifier[13693-13699]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[13600-13605]:Modifier[13700-13705]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[13606-13613]:PrimitiveType[13706-13713]"
    }, {
      "left" : "canTestForEqualityWith",
      "right" : "canTestForEqualityWith",
      "info" : "SimpleName[13614-13636]:SimpleName[13714-13736]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[13637-13648]:SingleVariableDeclaration[13737-13748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13650-13710]:Block[13750-13810]"
    }, {
      "left" : "return this.testForEquality(that).equals(UNKNOWN);",
      "right" : "return this.testForEquality(that).equals(UNKNOWN);",
      "info" : "ReturnStatement[13656-13706]:ReturnStatement[13756-13806]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14298-14304]:Modifier[14398-14404]"
    }, {
      "left" : "TernaryValue",
      "right" : "TernaryValue",
      "info" : "SimpleType[14305-14317]:SimpleType[14405-14417]"
    }, {
      "left" : "testForEquality",
      "right" : "testForEquality",
      "info" : "SimpleName[14318-14333]:SimpleName[14418-14433]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[14334-14345]:SingleVariableDeclaration[14434-14445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14347-14398]:Block[14447-14498]"
    }, {
      "left" : "return testForEqualityHelper(this, that);",
      "right" : "return testForEqualityHelper(this, that);",
      "info" : "ReturnStatement[14353-14394]:ReturnStatement[14453-14494]"
    }, {
      "left" : "TernaryValue",
      "right" : "TernaryValue",
      "info" : "SimpleType[14402-14414]:SimpleType[14502-14514]"
    }, {
      "left" : "testForEqualityHelper",
      "right" : "testForEqualityHelper",
      "info" : "SimpleName[14415-14436]:SimpleName[14515-14536]"
    }, {
      "left" : "JSType aType",
      "right" : "JSType aType",
      "info" : "SingleVariableDeclaration[14437-14449]:SingleVariableDeclaration[14537-14549]"
    }, {
      "left" : "JSType bType",
      "right" : "JSType bType",
      "info" : "SingleVariableDeclaration[14451-14463]:SingleVariableDeclaration[14551-14563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14465-15760]:Block[14565-15860]"
    }, {
      "left" : "if (bType.isAllType() || bType.isUnknownType() ||\n        bType.isNoResolvedType() ||\n        aType.isAllType() || aType.isUnknownType() ||\n        aType.isNoResolvedType())",
      "right" : "if (bType.isAllType() || bType.isUnknownType() ||\n        bType.isNoResolvedType() ||\n        aType.isAllType() || aType.isUnknownType() ||\n        aType.isNoResolvedType())",
      "info" : "IfStatement[14471-14674]:IfStatement[14571-14774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14645-14674]:Block[14745-14774]"
    }, {
      "left" : "return UNKNOWN;",
      "right" : "return UNKNOWN;",
      "info" : "ReturnStatement[14653-14668]:ReturnStatement[14753-14768]"
    }, {
      "left" : "boolean aIsEmpty = aType.isEmptyType();",
      "right" : "boolean aIsEmpty = aType.isEmptyType();",
      "info" : "VariableDeclarationStatement[14680-14719]:VariableDeclarationStatement[14780-14819]"
    }, {
      "left" : "boolean bIsEmpty = bType.isEmptyType();",
      "right" : "boolean bIsEmpty = bType.isEmptyType();",
      "info" : "VariableDeclarationStatement[14724-14763]:VariableDeclarationStatement[14824-14863]"
    }, {
      "left" : "if (aIsEmpty || bIsEmpty)",
      "right" : "if (aIsEmpty || bIsEmpty)",
      "info" : "IfStatement[14768-14916]:IfStatement[14868-15016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14794-14916]:Block[14894-15016]"
    }, {
      "left" : "if (aIsEmpty && bIsEmpty)",
      "right" : "if (aIsEmpty && bIsEmpty)",
      "info" : "IfStatement[14802-14910]:IfStatement[14902-15010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14828-14871]:Block[14928-14971]"
    }, {
      "left" : "return TernaryValue.TRUE;",
      "right" : "return TernaryValue.TRUE;",
      "info" : "ReturnStatement[14838-14863]:ReturnStatement[14938-14963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14877-14910]:Block[14977-15010]"
    }, {
      "left" : "return UNKNOWN;",
      "right" : "return UNKNOWN;",
      "info" : "ReturnStatement[14887-14902]:ReturnStatement[14987-15002]"
    }, {
      "left" : "if (aType.isFunctionType() || bType.isFunctionType())",
      "right" : "if (aType.isFunctionType() || bType.isFunctionType())",
      "info" : "IfStatement[14922-15630]:IfStatement[15022-15730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14976-15630]:Block[15076-15730]"
    }, {
      "left" : "JSType otherType = aType.isFunctionType() ? bType : aType;",
      "right" : "JSType otherType = aType.isFunctionType() ? bType : aType;",
      "info" : "VariableDeclarationStatement[14984-15042]:VariableDeclarationStatement[15084-15142]"
    }, {
      "left" : "JSType meet = otherType.getGreatestSubtype(\n          getNativeType(JSTypeNative.OBJECT_TYPE));",
      "right" : "JSType meet = otherType.getGreatestSubtype(\n          getNativeType(JSTypeNative.OBJECT_TYPE));",
      "info" : "VariableDeclarationStatement[15380-15475]:VariableDeclarationStatement[15480-15575]"
    }, {
      "left" : "if (meet.isNoType() || meet.isNoObjectType())",
      "right" : "if (meet.isNoType() || meet.isNoObjectType())",
      "info" : "IfStatement[15482-15624]:IfStatement[15582-15724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15528-15572]:Block[15628-15672]"
    }, {
      "left" : "return TernaryValue.FALSE;",
      "right" : "return TernaryValue.FALSE;",
      "info" : "ReturnStatement[15538-15564]:ReturnStatement[15638-15664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15578-15624]:Block[15678-15724]"
    }, {
      "left" : "return TernaryValue.UNKNOWN;",
      "right" : "return TernaryValue.UNKNOWN;",
      "info" : "ReturnStatement[15588-15616]:ReturnStatement[15688-15716]"
    }, {
      "left" : "if (bType.isEnumElementType() || bType.isUnionType())",
      "right" : "if (bType.isEnumElementType() || bType.isUnionType())",
      "info" : "IfStatement[15635-15739]:IfStatement[15735-15839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15689-15739]:Block[15789-15839]"
    }, {
      "left" : "return bType.testForEquality(aType);",
      "right" : "return bType.testForEquality(aType);",
      "info" : "ReturnStatement[15697-15733]:ReturnStatement[15797-15833]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[15744-15756]:ReturnStatement[15844-15856]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16096-16102]:Modifier[16196-16202]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[16103-16108]:Modifier[16203-16208]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[16109-16116]:PrimitiveType[16209-16216]"
    }, {
      "left" : "canTestForShallowEqualityWith",
      "right" : "canTestForShallowEqualityWith",
      "info" : "SimpleName[16117-16146]:SimpleName[16217-16246]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[16147-16158]:SingleVariableDeclaration[16247-16258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16160-16222]:Block[16260-16322]"
    }, {
      "left" : "return this.isSubtype(that) || that.isSubtype(this);",
      "right" : "return this.isSubtype(that) || that.isSubtype(this);",
      "info" : "ReturnStatement[16166-16218]:ReturnStatement[16266-16318]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16280-16286]:Modifier[16380-16386]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[16287-16294]:PrimitiveType[16387-16394]"
    }, {
      "left" : "isNullable",
      "right" : "isNullable",
      "info" : "SimpleName[16295-16305]:SimpleName[16395-16405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16308-16379]:Block[16408-16479]"
    }, {
      "left" : "return this.isSubtype(getNativeType(JSTypeNative.NULL_TYPE));",
      "right" : "return this.isSubtype(getNativeType(JSTypeNative.NULL_TYPE));",
      "info" : "ReturnStatement[16314-16375]:ReturnStatement[16414-16475]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16819-16825]:Modifier[16919-16925]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[16826-16832]:SimpleType[16926-16932]"
    }, {
      "left" : "getLeastSupertype",
      "right" : "getLeastSupertype",
      "info" : "SimpleName[16833-16850]:SimpleName[16933-16950]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[16851-16862]:SingleVariableDeclaration[16951-16962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16864-17063]:Block[16964-17163]"
    }, {
      "left" : "if (that.isUnionType())",
      "right" : "if (that.isUnionType())",
      "info" : "IfStatement[16870-17017]:IfStatement[16970-17117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16894-17017]:Block[16994-17117]"
    }, {
      "left" : "return that.getLeastSupertype(this);",
      "right" : "return that.getLeastSupertype(this);",
      "info" : "ReturnStatement[16975-17011]:ReturnStatement[17075-17111]"
    }, {
      "left" : "return getLeastSupertype(this, that);",
      "right" : "return getLeastSupertype(this, that);",
      "info" : "ReturnStatement[17022-17059]:ReturnStatement[17122-17159]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17189-17195]:Modifier[17289-17295]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17196-17202]:SimpleType[17296-17302]"
    }, {
      "left" : "getLeastSupertype",
      "right" : "getLeastSupertype",
      "info" : "SimpleName[17203-17220]:SimpleName[17303-17320]"
    }, {
      "left" : "JSType thisType",
      "right" : "JSType thisType",
      "info" : "SingleVariableDeclaration[17221-17236]:SingleVariableDeclaration[17321-17336]"
    }, {
      "left" : "JSType thatType",
      "right" : "JSType thatType",
      "info" : "SingleVariableDeclaration[17238-17253]:SingleVariableDeclaration[17338-17353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17255-17459]:Block[17355-17559]"
    }, {
      "left" : "boolean areEquivalent = thisType.isEquivalentTo(thatType);",
      "right" : "boolean areEquivalent = thisType.isEquivalentTo(thatType);",
      "info" : "VariableDeclarationStatement[17261-17319]:VariableDeclarationStatement[17361-17419]"
    }, {
      "left" : "return areEquivalent ? thisType :\n        filterNoResolvedType(\n            thisType.registry.createUnionType(thisType, thatType));",
      "right" : "return areEquivalent ? thisType :\n        filterNoResolvedType(\n            thisType.registry.createUnionType(thisType, thatType));",
      "info" : "ReturnStatement[17324-17455]:ReturnStatement[17424-17555]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17890-17896]:Modifier[17990-17996]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[17897-17903]:SimpleType[17997-18003]"
    }, {
      "left" : "getGreatestSubtype",
      "right" : "getGreatestSubtype",
      "info" : "SimpleName[17904-17922]:SimpleName[18004-18022]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[17923-17934]:SingleVariableDeclaration[18023-18034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17936-18140]:Block[18036-18240]"
    }, {
      "left" : "if (that.isRecordType())",
      "right" : "if (that.isRecordType())",
      "info" : "IfStatement[17942-18093]:IfStatement[18042-18193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17967-18093]:Block[18067-18193]"
    }, {
      "left" : "return that.getGreatestSubtype(this);",
      "right" : "return that.getGreatestSubtype(this);",
      "info" : "ReturnStatement[18050-18087]:ReturnStatement[18150-18187]"
    }, {
      "left" : "return getGreatestSubtype(this, that);",
      "right" : "return getGreatestSubtype(this, that);",
      "info" : "ReturnStatement[18098-18136]:ReturnStatement[18198-18236]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18267-18273]:Modifier[18367-18373]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[18274-18280]:SimpleType[18374-18380]"
    }, {
      "left" : "getGreatestSubtype",
      "right" : "getGreatestSubtype",
      "info" : "SimpleName[18281-18299]:SimpleName[18381-18399]"
    }, {
      "left" : "JSType thisType",
      "right" : "JSType thisType",
      "info" : "SingleVariableDeclaration[18300-18315]:SingleVariableDeclaration[18400-18415]"
    }, {
      "left" : "JSType thatType",
      "right" : "JSType thatType",
      "info" : "SingleVariableDeclaration[18317-18332]:SingleVariableDeclaration[18417-18432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18334-19283]:Block[18434-19383]"
    }, {
      "left" : "if (thisType.isEquivalentTo(thatType))",
      "right" : "if (thisType.isEquivalentTo(thatType))",
      "info" : "IfStatement[18340-19222]:IfStatement[18440-19322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18379-18409]:Block[18479-18509]"
    }, {
      "left" : "return thisType;",
      "right" : "return thisType;",
      "info" : "ReturnStatement[18387-18403]:ReturnStatement[18487-18503]"
    }, {
      "left" : "if (thisType.isUnknownType() || thatType.isUnknownType())",
      "right" : "if (thisType.isUnknownType() || thatType.isUnknownType())",
      "info" : "IfStatement[18415-19222]:IfStatement[18515-19322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18473-18725]:Block[18573-18825]"
    }, {
      "left" : "return thisType.isEquivalentTo(thatType) ? thisType :\n          thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);",
      "right" : "return thisType.isEquivalentTo(thatType) ? thisType :\n          thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);",
      "info" : "ReturnStatement[18605-18719]:ReturnStatement[18705-18819]"
    }, {
      "left" : "if (thisType.isSubtype(thatType))",
      "right" : "if (thisType.isSubtype(thatType))",
      "info" : "IfStatement[18731-19222]:IfStatement[18831-19322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18765-18817]:Block[18865-18917]"
    }, {
      "left" : "return filterNoResolvedType(thisType);",
      "right" : "return filterNoResolvedType(thisType);",
      "info" : "ReturnStatement[18773-18811]:ReturnStatement[18873-18911]"
    }, {
      "left" : "if (thatType.isSubtype(thisType))",
      "right" : "if (thatType.isSubtype(thisType))",
      "info" : "IfStatement[18823-19222]:IfStatement[18923-19322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18857-18909]:Block[18957-19009]"
    }, {
      "left" : "return filterNoResolvedType(thatType);",
      "right" : "return filterNoResolvedType(thatType);",
      "info" : "ReturnStatement[18865-18903]:ReturnStatement[18965-19003]"
    }, {
      "left" : "if (thisType.isUnionType())",
      "right" : "if (thisType.isUnionType())",
      "info" : "IfStatement[18915-19222]:IfStatement[19015-19322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18943-19002]:Block[19043-19102]"
    }, {
      "left" : "return ((UnionType) thisType).meet(thatType);",
      "right" : "return ((UnionType) thisType).meet(thatType);",
      "info" : "ReturnStatement[18951-18996]:ReturnStatement[19051-19096]"
    }, {
      "left" : "if (thatType.isUnionType())",
      "right" : "if (thatType.isUnionType())",
      "info" : "IfStatement[19008-19222]:IfStatement[19108-19322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19036-19095]:Block[19136-19195]"
    }, {
      "left" : "return ((UnionType) thatType).meet(thisType);",
      "right" : "return ((UnionType) thatType).meet(thisType);",
      "info" : "ReturnStatement[19044-19089]:ReturnStatement[19144-19189]"
    }, {
      "left" : "if (thisType.isObject() && thatType.isObject())",
      "right" : "if (thisType.isObject() && thatType.isObject())",
      "info" : "IfStatement[19101-19222]:IfStatement[19201-19322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19149-19222]:Block[19249-19322]"
    }, {
      "left" : "return thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);",
      "right" : "return thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);",
      "info" : "ReturnStatement[19157-19216]:ReturnStatement[19257-19316]"
    }, {
      "left" : "return thisType.getNativeType(JSTypeNative.NO_TYPE);",
      "right" : "return thisType.getNativeType(JSTypeNative.NO_TYPE);",
      "info" : "ReturnStatement[19227-19279]:ReturnStatement[19327-19379]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19534-19540]:Modifier[19634-19640]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[19541-19547]:SimpleType[19641-19647]"
    }, {
      "left" : "filterNoResolvedType",
      "right" : "filterNoResolvedType",
      "info" : "SimpleName[19548-19568]:SimpleName[19648-19668]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[19569-19580]:SingleVariableDeclaration[19669-19680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19582-20431]:Block[19682-20531]"
    }, {
      "left" : "if (type.isNoResolvedType())",
      "right" : "if (type.isNoResolvedType())",
      "info" : "IfStatement[19588-20410]:IfStatement[19688-20510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19617-19825]:Block[19717-19925]"
    }, {
      "left" : "return type.getNativeType(JSTypeNative.NO_RESOLVED_TYPE);",
      "right" : "return type.getNativeType(JSTypeNative.NO_RESOLVED_TYPE);",
      "info" : "ReturnStatement[19762-19819]:ReturnStatement[19862-19919]"
    }, {
      "left" : "if (type instanceof UnionType)",
      "right" : "if (type instanceof UnionType)",
      "info" : "IfStatement[19831-20410]:IfStatement[19931-20510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19862-20410]:Block[19962-20510]"
    }, {
      "left" : "UnionType unionType = (UnionType) type;",
      "right" : "UnionType unionType = (UnionType) type;",
      "info" : "VariableDeclarationStatement[19870-19909]:VariableDeclarationStatement[19970-20009]"
    }, {
      "left" : "boolean needsFiltering = false;",
      "right" : "boolean needsFiltering = false;",
      "info" : "VariableDeclarationStatement[19916-19947]:VariableDeclarationStatement[20016-20047]"
    }, {
      "left" : "for (JSType alt : unionType.getAlternates())",
      "right" : "for (JSType alt : unionType.getAlternates())",
      "info" : "EnhancedForStatement[19954-20106]:EnhancedForStatement[20054-20206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19999-20106]:Block[20099-20206]"
    }, {
      "left" : "if (alt.isNoResolvedType())",
      "right" : "if (alt.isNoResolvedType())",
      "info" : "IfStatement[20009-20098]:IfStatement[20109-20198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20037-20098]:Block[20137-20198]"
    }, {
      "left" : "needsFiltering = true;",
      "right" : "needsFiltering = true;",
      "info" : "ExpressionStatement[20049-20071]:ExpressionStatement[20149-20171]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20082-20088]:BreakStatement[20182-20188]"
    }, {
      "left" : "if (needsFiltering)",
      "right" : "if (needsFiltering)",
      "info" : "IfStatement[20114-20404]:IfStatement[20214-20504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20134-20404]:Block[20234-20504]"
    }, {
      "left" : "UnionTypeBuilder builder = new UnionTypeBuilder(type.registry);",
      "right" : "UnionTypeBuilder builder = new UnionTypeBuilder(type.registry);",
      "info" : "VariableDeclarationStatement[20144-20207]:VariableDeclarationStatement[20244-20307]"
    }, {
      "left" : "for (JSType alt : unionType.getAlternates())",
      "right" : "for (JSType alt : unionType.getAlternates())",
      "info" : "EnhancedForStatement[20216-20364]:EnhancedForStatement[20316-20464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20261-20364]:Block[20361-20464]"
    }, {
      "left" : "if (!alt.isNoResolvedType())",
      "right" : "if (!alt.isNoResolvedType())",
      "info" : "IfStatement[20273-20354]:IfStatement[20373-20454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20302-20354]:Block[20402-20454]"
    }, {
      "left" : "builder.addAlternate(alt);",
      "right" : "builder.addAlternate(alt);",
      "info" : "ExpressionStatement[20316-20342]:ExpressionStatement[20416-20442]"
    }, {
      "left" : "return builder.build();",
      "right" : "return builder.build();",
      "info" : "ReturnStatement[20373-20396]:ReturnStatement[20473-20496]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[20415-20427]:ReturnStatement[20515-20527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21009-21015]:Modifier[21109-21115]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[21016-21022]:SimpleType[21116-21122]"
    }, {
      "left" : "getRestrictedTypeGivenToBooleanOutcome",
      "right" : "getRestrictedTypeGivenToBooleanOutcome",
      "info" : "SimpleName[21023-21061]:SimpleName[21123-21161]"
    }, {
      "left" : "boolean outcome",
      "right" : "boolean outcome",
      "info" : "SingleVariableDeclaration[21062-21077]:SingleVariableDeclaration[21162-21177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21079-21275]:Block[21179-21375]"
    }, {
      "left" : "BooleanLiteralSet literals = getPossibleToBooleanOutcomes();",
      "right" : "BooleanLiteralSet literals = getPossibleToBooleanOutcomes();",
      "info" : "VariableDeclarationStatement[21085-21145]:VariableDeclarationStatement[21185-21245]"
    }, {
      "left" : "if (literals.contains(outcome))",
      "right" : "if (literals.contains(outcome))",
      "info" : "IfStatement[21150-21271]:IfStatement[21250-21371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21182-21208]:Block[21282-21308]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[21190-21202]:ReturnStatement[21290-21302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21214-21271]:Block[21314-21371]"
    }, {
      "left" : "return getNativeType(JSTypeNative.NO_TYPE);",
      "right" : "return getNativeType(JSTypeNative.NO_TYPE);",
      "info" : "ReturnStatement[21222-21265]:ReturnStatement[21322-21365]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22032-22038]:Modifier[22132-22138]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[22039-22047]:Modifier[22139-22147]"
    }, {
      "left" : "BooleanLiteralSet",
      "right" : "BooleanLiteralSet",
      "info" : "SimpleType[22048-22065]:SimpleType[22148-22165]"
    }, {
      "left" : "getPossibleToBooleanOutcomes",
      "right" : "getPossibleToBooleanOutcomes",
      "info" : "SimpleName[22066-22094]:SimpleName[22166-22194]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22722-22728]:Modifier[22822-22828]"
    }, {
      "left" : "TypePair",
      "right" : "TypePair",
      "info" : "SimpleType[22729-22737]:SimpleType[22829-22837]"
    }, {
      "left" : "getTypesUnderEquality",
      "right" : "getTypesUnderEquality",
      "info" : "SimpleName[22738-22759]:SimpleName[22838-22859]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[22760-22771]:SingleVariableDeclaration[22860-22871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22773-23218]:Block[22873-23318]"
    }, {
      "left" : "if (that instanceof UnionType)",
      "right" : "if (that instanceof UnionType)",
      "info" : "IfStatement[22799-22935]:IfStatement[22899-23035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22830-22935]:Block[22930-23035]"
    }, {
      "left" : "TypePair p = that.getTypesUnderEquality(this);",
      "right" : "TypePair p = that.getTypesUnderEquality(this);",
      "info" : "VariableDeclarationStatement[22838-22884]:VariableDeclarationStatement[22938-22984]"
    }, {
      "left" : "return new TypePair(p.typeB, p.typeA);",
      "right" : "return new TypePair(p.typeB, p.typeA);",
      "info" : "ReturnStatement[22891-22929]:ReturnStatement[22991-23029]"
    }, {
      "left" : "switch (this.testForEquality(that)) {\n      case FALSE:\n        return new TypePair(null, null);\n\n      case TRUE:\n      case UNKNOWN:\n        return new TypePair(this, that);\n    }",
      "right" : "switch (this.testForEquality(that)) {\n      case FALSE:\n        return new TypePair(null, null);\n\n      case TRUE:\n      case UNKNOWN:\n        return new TypePair(this, that);\n    }",
      "info" : "SwitchStatement[22960-23141]:SwitchStatement[23060-23241]"
    }, {
      "left" : "case FALSE:",
      "right" : "case FALSE:",
      "info" : "SwitchCase[23004-23015]:SwitchCase[23104-23115]"
    }, {
      "left" : "return new TypePair(null, null);",
      "right" : "return new TypePair(null, null);",
      "info" : "ReturnStatement[23024-23056]:ReturnStatement[23124-23156]"
    }, {
      "left" : "case TRUE:",
      "right" : "case TRUE:",
      "info" : "SwitchCase[23064-23074]:SwitchCase[23164-23174]"
    }, {
      "left" : "case UNKNOWN:",
      "right" : "case UNKNOWN:",
      "info" : "SwitchCase[23081-23094]:SwitchCase[23181-23194]"
    }, {
      "left" : "return new TypePair(this, that);",
      "right" : "return new TypePair(this, that);",
      "info" : "ReturnStatement[23103-23135]:ReturnStatement[23203-23235]"
    }, {
      "left" : "throw new IllegalStateException();",
      "right" : "throw new IllegalStateException();",
      "info" : "ThrowStatement[23180-23214]:ThrowStatement[23280-23314]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23858-23864]:Modifier[23958-23964]"
    }, {
      "left" : "TypePair",
      "right" : "TypePair",
      "info" : "SimpleType[23865-23873]:SimpleType[23965-23973]"
    }, {
      "left" : "getTypesUnderInequality",
      "right" : "getTypesUnderInequality",
      "info" : "SimpleName[23874-23897]:SimpleName[23974-23997]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[23898-23909]:SingleVariableDeclaration[23998-24009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23911-24423]:Block[24011-24523]"
    }, {
      "left" : "if (that instanceof UnionType)",
      "right" : "if (that instanceof UnionType)",
      "info" : "IfStatement[23937-24075]:IfStatement[24037-24175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23968-24075]:Block[24068-24175]"
    }, {
      "left" : "TypePair p = that.getTypesUnderInequality(this);",
      "right" : "TypePair p = that.getTypesUnderInequality(this);",
      "info" : "VariableDeclarationStatement[23976-24024]:VariableDeclarationStatement[24076-24124]"
    }, {
      "left" : "return new TypePair(p.typeB, p.typeA);",
      "right" : "return new TypePair(p.typeB, p.typeA);",
      "info" : "ReturnStatement[24031-24069]:ReturnStatement[24131-24169]"
    }, {
      "left" : "switch (this.testForEquality(that)) {\n      case TRUE:\n        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n        return new TypePair(noType, noType);\n\n      case FALSE:\n      case UNKNOWN:\n        return new TypePair(this, that);\n    }",
      "right" : "switch (this.testForEquality(that)) {\n      case TRUE:\n        JSType noType = getNativeType(JSTypeNative.NO_TYPE);\n        return new TypePair(noType, noType);\n\n      case FALSE:\n      case UNKNOWN:\n        return new TypePair(this, that);\n    }",
      "info" : "SwitchStatement[24100-24346]:SwitchStatement[24200-24446]"
    }, {
      "left" : "case TRUE:",
      "right" : "case TRUE:",
      "info" : "SwitchCase[24144-24154]:SwitchCase[24244-24254]"
    }, {
      "left" : "JSType noType = getNativeType(JSTypeNative.NO_TYPE);",
      "right" : "JSType noType = getNativeType(JSTypeNative.NO_TYPE);",
      "info" : "VariableDeclarationStatement[24163-24215]:VariableDeclarationStatement[24263-24315]"
    }, {
      "left" : "return new TypePair(noType, noType);",
      "right" : "return new TypePair(noType, noType);",
      "info" : "ReturnStatement[24224-24260]:ReturnStatement[24324-24360]"
    }, {
      "left" : "case FALSE:",
      "right" : "case FALSE:",
      "info" : "SwitchCase[24268-24279]:SwitchCase[24368-24379]"
    }, {
      "left" : "case UNKNOWN:",
      "right" : "case UNKNOWN:",
      "info" : "SwitchCase[24286-24299]:SwitchCase[24386-24399]"
    }, {
      "left" : "return new TypePair(this, that);",
      "right" : "return new TypePair(this, that);",
      "info" : "ReturnStatement[24308-24340]:ReturnStatement[24408-24440]"
    }, {
      "left" : "throw new IllegalStateException();",
      "right" : "throw new IllegalStateException();",
      "info" : "ThrowStatement[24385-24419]:ThrowStatement[24485-24519]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24817-24823]:Modifier[24917-24923]"
    }, {
      "left" : "TypePair",
      "right" : "TypePair",
      "info" : "SimpleType[24824-24832]:SimpleType[24924-24932]"
    }, {
      "left" : "getTypesUnderShallowEquality",
      "right" : "getTypesUnderShallowEquality",
      "info" : "SimpleName[24833-24861]:SimpleName[24933-24961]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[24862-24873]:SingleVariableDeclaration[24962-24973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24875-24979]:Block[24975-25079]"
    }, {
      "left" : "JSType commonType = getGreatestSubtype(that);",
      "right" : "JSType commonType = getGreatestSubtype(that);",
      "info" : "VariableDeclarationStatement[24881-24926]:VariableDeclarationStatement[24981-25026]"
    }, {
      "left" : "return new TypePair(commonType, commonType);",
      "right" : "return new TypePair(commonType, commonType);",
      "info" : "ReturnStatement[24931-24975]:ReturnStatement[25031-25075]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25374-25380]:Modifier[25474-25480]"
    }, {
      "left" : "TypePair",
      "right" : "TypePair",
      "info" : "SimpleType[25381-25389]:SimpleType[25481-25489]"
    }, {
      "left" : "getTypesUnderShallowInequality",
      "right" : "getTypesUnderShallowInequality",
      "info" : "SimpleName[25390-25420]:SimpleName[25490-25520]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[25421-25432]:SingleVariableDeclaration[25521-25532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25434-25967]:Block[25534-26067]"
    }, {
      "left" : "if (that instanceof UnionType)",
      "right" : "if (that instanceof UnionType)",
      "info" : "IfStatement[25459-25604]:IfStatement[25559-25704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25490-25604]:Block[25590-25704]"
    }, {
      "left" : "TypePair p = that.getTypesUnderShallowInequality(this);",
      "right" : "TypePair p = that.getTypesUnderShallowInequality(this);",
      "info" : "VariableDeclarationStatement[25498-25553]:VariableDeclarationStatement[25598-25653]"
    }, {
      "left" : "return new TypePair(p.typeB, p.typeA);",
      "right" : "return new TypePair(p.typeB, p.typeA);",
      "info" : "ReturnStatement[25560-25598]:ReturnStatement[25660-25698]"
    }, {
      "left" : "if (this.isNullType() && that.isNullType() ||\n        this.isVoidType() && that.isVoidType())",
      "right" : "if (this.isNullType() && that.isNullType() ||\n        this.isVoidType() && that.isVoidType())",
      "info" : "IfStatement[25771-25963]:IfStatement[25871-26063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25865-25911]:Block[25965-26011]"
    }, {
      "left" : "return new TypePair(null, null);",
      "right" : "return new TypePair(null, null);",
      "info" : "ReturnStatement[25873-25905]:ReturnStatement[25973-26005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25917-25963]:Block[26017-26063]"
    }, {
      "left" : "return new TypePair(this, that);",
      "right" : "return new TypePair(this, that);",
      "info" : "ReturnStatement[25925-25957]:ReturnStatement[26025-26057]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26089-26095]:Modifier[26189-26195]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[26096-26102]:SimpleType[26196-26202]"
    }, {
      "left" : "restrictByNotNullOrUndefined",
      "right" : "restrictByNotNullOrUndefined",
      "info" : "SimpleName[26103-26131]:SimpleName[26203-26231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26134-26156]:Block[26234-26256]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[26140-26152]:ReturnStatement[26240-26252]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27458-27464]:Modifier[27558-27564]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[27465-27473]:Modifier[27565-27573]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[27474-27481]:PrimitiveType[27574-27581]"
    }, {
      "left" : "isSubtype",
      "right" : "isSubtype",
      "info" : "SimpleName[27482-27491]:SimpleName[27582-27591]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[27492-27503]:SingleVariableDeclaration[27592-27603]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27796-27802]:Modifier[27896-27902]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[27803-27810]:PrimitiveType[27903-27910]"
    }, {
      "left" : "differsFrom",
      "right" : "differsFrom",
      "info" : "SimpleName[27811-27822]:SimpleName[27911-27922]"
    }, {
      "left" : "JSType that",
      "right" : "JSType that",
      "info" : "SingleVariableDeclaration[27823-27834]:SingleVariableDeclaration[27923-27934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27836-28138]:Block[27936-28238]"
    }, {
      "left" : "if (!this.isUnknownType() && !that.isUnknownType())",
      "right" : "if (!this.isUnknownType() && !that.isUnknownType())",
      "info" : "IfStatement[27901-28001]:IfStatement[28001-28101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27953-28001]:Block[28053-28101]"
    }, {
      "left" : "return !this.isEquivalentTo(that);",
      "right" : "return !this.isEquivalentTo(that);",
      "info" : "ReturnStatement[27961-27995]:ReturnStatement[28061-28095]"
    }, {
      "left" : "return this.isUnknownType() ^ that.isUnknownType();",
      "right" : "return this.isUnknownType() ^ that.isUnknownType();",
      "info" : "ReturnStatement[28083-28134]:ReturnStatement[28183-28234]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[28246-28252]:Modifier[28346-28352]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[28253-28260]:PrimitiveType[28353-28360]"
    }, {
      "left" : "isSubtype",
      "right" : "isSubtype",
      "info" : "SimpleName[28261-28270]:SimpleName[28361-28370]"
    }, {
      "left" : "JSType thisType",
      "right" : "JSType thisType",
      "info" : "SingleVariableDeclaration[28271-28286]:SingleVariableDeclaration[28371-28386]"
    }, {
      "left" : "JSType thatType",
      "right" : "JSType thatType",
      "info" : "SingleVariableDeclaration[28288-28303]:SingleVariableDeclaration[28388-28403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28305-28943]:Block[28405-29043]"
    }, {
      "left" : "if (thatType.isUnknownType())",
      "right" : "if (thatType.isUnknownType())",
      "info" : "IfStatement[28326-28382]:IfStatement[28426-28482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28356-28382]:Block[28456-28482]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[28364-28376]:ReturnStatement[28464-28476]"
    }, {
      "left" : "if (thisType.isEquivalentTo(thatType))",
      "right" : "if (thisType.isEquivalentTo(thatType))",
      "info" : "IfStatement[28403-28468]:IfStatement[28503-28568]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28442-28468]:Block[28542-28568]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[28450-28462]:ReturnStatement[28550-28562]"
    }, {
      "left" : "if (thatType.isAllType())",
      "right" : "if (thatType.isAllType())",
      "info" : "IfStatement[28489-28541]:IfStatement[28589-28641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28515-28541]:Block[28615-28641]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[28523-28535]:ReturnStatement[28623-28635]"
    }, {
      "left" : "if (thatType instanceof UnionType)",
      "right" : "if (thatType instanceof UnionType)",
      "info" : "IfStatement[28560-28779]:IfStatement[28660-28879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28595-28779]:Block[28695-28879]"
    }, {
      "left" : "UnionType union = (UnionType)thatType;",
      "right" : "UnionType union = (UnionType)thatType;",
      "info" : "VariableDeclarationStatement[28603-28641]:VariableDeclarationStatement[28703-28741]"
    }, {
      "left" : "for (JSType element : union.alternates)",
      "right" : "for (JSType element : union.alternates)",
      "info" : "EnhancedForStatement[28648-28773]:EnhancedForStatement[28748-28873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28688-28773]:Block[28788-28873]"
    }, {
      "left" : "if (thisType.isSubtype(element))",
      "right" : "if (thisType.isSubtype(element))",
      "info" : "IfStatement[28698-28765]:IfStatement[28798-28865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28731-28765]:Block[28831-28865]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[28743-28755]:ReturnStatement[28843-28855]"
    }, {
      "left" : "if (thatType instanceof NamedType)",
      "right" : "if (thatType instanceof NamedType)",
      "info" : "IfStatement[28803-28921]:IfStatement[28903-29021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28838-28921]:Block[28938-29021]"
    }, {
      "left" : "return thisType.isSubtype(((NamedType)thatType).getReferencedType());",
      "right" : "return thisType.isSubtype(((NamedType)thatType).getReferencedType());",
      "info" : "ReturnStatement[28846-28915]:ReturnStatement[28946-29015]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[28926-28939]:ReturnStatement[29026-29039]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29104-29110]:Modifier[29204-29210]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[29111-29119]:Modifier[29211-29219]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[29121-29122]:TypeParameter[29221-29222]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[29124-29125]:SimpleType[29224-29225]"
    }, {
      "left" : "visit",
      "right" : "visit",
      "info" : "SimpleName[29126-29131]:SimpleName[29226-29231]"
    }, {
      "left" : "Visitor<T> visitor",
      "right" : "Visitor<T> visitor",
      "info" : "SingleVariableDeclaration[29132-29150]:SingleVariableDeclaration[29232-29250]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29275-29281]:Modifier[29375-29381]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[29282-29287]:Modifier[29382-29387]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[29288-29294]:SimpleType[29388-29394]"
    }, {
      "left" : "forceResolve",
      "right" : "forceResolve",
      "info" : "SimpleName[29295-29307]:SimpleName[29395-29407]"
    }, {
      "left" : "ErrorReporter t",
      "right" : "ErrorReporter t",
      "info" : "SingleVariableDeclaration[29308-29323]:SingleVariableDeclaration[29408-29423]"
    }, {
      "left" : "StaticScope<JSType> scope",
      "right" : "StaticScope<JSType> scope",
      "info" : "SingleVariableDeclaration[29325-29350]:SingleVariableDeclaration[29425-29450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29352-29572]:Block[29452-29672]"
    }, {
      "left" : "ResolveMode oldResolveMode = registry.getResolveMode();",
      "right" : "ResolveMode oldResolveMode = registry.getResolveMode();",
      "info" : "VariableDeclarationStatement[29358-29413]:VariableDeclarationStatement[29458-29513]"
    }, {
      "left" : "registry.setResolveMode(ResolveMode.IMMEDIATE);",
      "right" : "registry.setResolveMode(ResolveMode.IMMEDIATE);",
      "info" : "ExpressionStatement[29418-29465]:ExpressionStatement[29518-29565]"
    }, {
      "left" : "JSType result = resolve(t, scope);",
      "right" : "JSType result = resolve(t, scope);",
      "info" : "VariableDeclarationStatement[29470-29504]:VariableDeclarationStatement[29570-29604]"
    }, {
      "left" : "registry.setResolveMode(oldResolveMode);",
      "right" : "registry.setResolveMode(oldResolveMode);",
      "info" : "ExpressionStatement[29509-29549]:ExpressionStatement[29609-29649]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[29554-29568]:ReturnStatement[29654-29668]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30177-30183]:Modifier[30277-30283]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30184-30189]:Modifier[30284-30289]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[30190-30196]:SimpleType[30290-30296]"
    }, {
      "left" : "resolve",
      "right" : "resolve",
      "info" : "SimpleName[30197-30204]:SimpleName[30297-30304]"
    }, {
      "left" : "ErrorReporter t",
      "right" : "ErrorReporter t",
      "info" : "SingleVariableDeclaration[30205-30220]:SingleVariableDeclaration[30305-30320]"
    }, {
      "left" : "StaticScope<JSType> scope",
      "right" : "StaticScope<JSType> scope",
      "info" : "SingleVariableDeclaration[30222-30247]:SingleVariableDeclaration[30322-30347]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30249-30697]:Block[30349-30797]"
    }, {
      "left" : "if (resolved)",
      "right" : "if (resolved)",
      "info" : "IfStatement[30255-30541]:IfStatement[30355-30641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30269-30541]:Block[30369-30641]"
    }, {
      "left" : "if (resolveResult == null)",
      "right" : "if (resolveResult == null)",
      "info" : "IfStatement[30405-30507]:IfStatement[30505-30607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30432-30507]:Block[30532-30607]"
    }, {
      "left" : "return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);",
      "right" : "return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);",
      "info" : "ReturnStatement[30442-30499]:ReturnStatement[30542-30599]"
    }, {
      "left" : "return resolveResult;",
      "right" : "return resolveResult;",
      "info" : "ReturnStatement[30514-30535]:ReturnStatement[30614-30635]"
    }, {
      "left" : "resolved = true;",
      "right" : "resolved = true;",
      "info" : "ExpressionStatement[30546-30562]:ExpressionStatement[30646-30662]"
    }, {
      "left" : "resolveResult = resolveInternal(t, scope);",
      "right" : "resolveResult = resolveInternal(t, scope);",
      "info" : "ExpressionStatement[30567-30609]:ExpressionStatement[30667-30709]"
    }, {
      "left" : "resolveResult.setResolvedTypeInternal(resolveResult);",
      "right" : "resolveResult.setResolvedTypeInternal(resolveResult);",
      "info" : "ExpressionStatement[30614-30667]:ExpressionStatement[30714-30767]"
    }, {
      "left" : "return resolveResult;",
      "right" : "return resolveResult;",
      "info" : "ReturnStatement[30672-30693]:ReturnStatement[30772-30793]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[30732-30740]:Modifier[30832-30840]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[30741-30747]:SimpleType[30841-30847]"
    }, {
      "left" : "resolveInternal",
      "right" : "resolveInternal",
      "info" : "SimpleName[30748-30763]:SimpleName[30848-30863]"
    }, {
      "left" : "ErrorReporter t",
      "right" : "ErrorReporter t",
      "info" : "SingleVariableDeclaration[30764-30779]:SingleVariableDeclaration[30864-30879]"
    }, {
      "left" : "StaticScope<JSType> scope",
      "right" : "StaticScope<JSType> scope",
      "info" : "SingleVariableDeclaration[30781-30806]:SingleVariableDeclaration[30881-30906]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30812-30816]:PrimitiveType[30912-30916]"
    }, {
      "left" : "setResolvedTypeInternal",
      "right" : "setResolvedTypeInternal",
      "info" : "SimpleName[30817-30840]:SimpleName[30917-30940]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[30841-30852]:SingleVariableDeclaration[30941-30952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30854-30906]:Block[30954-31006]"
    }, {
      "left" : "resolveResult = type;",
      "right" : "resolveResult = type;",
      "info" : "ExpressionStatement[30860-30881]:ExpressionStatement[30960-30981]"
    }, {
      "left" : "resolved = true;",
      "right" : "resolved = true;",
      "info" : "ExpressionStatement[30886-30902]:ExpressionStatement[30986-31002]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30955-30961]:Modifier[31055-31061]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30962-30967]:Modifier[31062-31067]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[30968-30975]:PrimitiveType[31068-31075]"
    }, {
      "left" : "isResolved",
      "right" : "isResolved",
      "info" : "SimpleName[30976-30986]:SimpleName[31076-31086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30989-31015]:Block[31089-31115]"
    }, {
      "left" : "return resolved;",
      "right" : "return resolved;",
      "info" : "ReturnStatement[30995-31011]:ReturnStatement[31095-31111]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31055-31061]:Modifier[31155-31161]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31062-31067]:Modifier[31162-31167]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31068-31072]:PrimitiveType[31168-31172]"
    }, {
      "left" : "clearResolved",
      "right" : "clearResolved",
      "info" : "SimpleName[31073-31086]:SimpleName[31173-31186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31089-31142]:Block[31189-31242]"
    }, {
      "left" : "resolved = false;",
      "right" : "resolved = false;",
      "info" : "ExpressionStatement[31095-31112]:ExpressionStatement[31195-31212]"
    }, {
      "left" : "resolveResult = null;",
      "right" : "resolveResult = null;",
      "info" : "ExpressionStatement[31117-31138]:ExpressionStatement[31217-31238]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31203-31209]:Modifier[31303-31309]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31210-31215]:Modifier[31310-31315]"
    }, {
      "left" : "JSType",
      "right" : "JSType",
      "info" : "SimpleType[31216-31222]:SimpleType[31316-31322]"
    }, {
      "left" : "safeResolve",
      "right" : "safeResolve",
      "info" : "SimpleName[31223-31234]:SimpleName[31323-31334]"
    }, {
      "left" : "JSType type",
      "right" : "JSType type",
      "info" : "SingleVariableDeclaration[31242-31253]:SingleVariableDeclaration[31342-31353]"
    }, {
      "left" : "ErrorReporter t",
      "right" : "ErrorReporter t",
      "info" : "SingleVariableDeclaration[31255-31270]:SingleVariableDeclaration[31355-31370]"
    }, {
      "left" : "StaticScope<JSType> scope",
      "right" : "StaticScope<JSType> scope",
      "info" : "SingleVariableDeclaration[31272-31297]:SingleVariableDeclaration[31372-31397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31299-31361]:Block[31399-31461]"
    }, {
      "left" : "return type == null ? null : type.resolve(t, scope);",
      "right" : "return type == null ? null : type.resolve(t, scope);",
      "info" : "ReturnStatement[31305-31357]:ReturnStatement[31405-31457]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31633-31639]:Modifier[31733-31739]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[31640-31647]:PrimitiveType[31740-31747]"
    }, {
      "left" : "setValidator",
      "right" : "setValidator",
      "info" : "SimpleName[31648-31660]:SimpleName[31748-31760]"
    }, {
      "left" : "Predicate<JSType> validator",
      "right" : "Predicate<JSType> validator",
      "info" : "SingleVariableDeclaration[31661-31688]:SingleVariableDeclaration[31761-31788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31690-31729]:Block[31790-31829]"
    }, {
      "left" : "return validator.apply(this);",
      "right" : "return validator.apply(this);",
      "info" : "ReturnStatement[31696-31725]:ReturnStatement[31796-31825]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31733-31739]:Modifier[31833-31839]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31740-31746]:Modifier[31840-31846]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[31747-31752]:TYPE_DECLARATION_KIND[31847-31852]"
    }, {
      "left" : "TypePair",
      "right" : "TypePair",
      "info" : "SimpleName[31753-31761]:SimpleName[31853-31861]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31831-31837]:Modifier[31931-31937]"
    }, {
      "left" : "TypePair",
      "right" : "TypePair",
      "info" : "SimpleName[31838-31846]:SimpleName[31938-31946]"
    }, {
      "left" : "JSType typeA",
      "right" : "JSType typeA",
      "info" : "SingleVariableDeclaration[31847-31859]:SingleVariableDeclaration[31947-31959]"
    }, {
      "left" : "JSType typeB",
      "right" : "JSType typeB",
      "info" : "SingleVariableDeclaration[31861-31873]:SingleVariableDeclaration[31961-31973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31875-31934]:Block[31975-32034]"
    }, {
      "left" : "this.typeA = typeA;",
      "right" : "this.typeA = typeA;",
      "info" : "ExpressionStatement[31883-31902]:ExpressionStatement[31983-32002]"
    }, {
      "left" : "this.typeB = typeB;",
      "right" : "this.typeB = typeB;",
      "info" : "ExpressionStatement[31909-31928]:ExpressionStatement[32009-32028]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32041-32047]:Modifier[32141-32147]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[32048-32054]:SimpleType[32148-32154]"
    }, {
      "left" : "toDebugHashCodeString",
      "right" : "toDebugHashCodeString",
      "info" : "SimpleName[32055-32076]:SimpleName[32155-32176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32079-32124]:Block[32179-32224]"
    }, {
      "left" : "return \"{\" + this.hashCode() + \"}\";",
      "right" : "return \"{\" + this.hashCode() + \"}\";",
      "info" : "ReturnStatement[32085-32120]:ReturnStatement[32185-32220]"
    } ]
  },
  "interFileMappings" : { }
}