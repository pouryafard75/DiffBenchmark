{
  "matchedElements" : [ {
    "left" : "class : Swagger2Reader",
    "right" : "class : Swagger2Reader",
    "info" : "TypeDeclaration[1863-25049]:TypeDeclaration[1930-27762]"
  }, {
    "left" : "LOGGER",
    "right" : "LOGGER",
    "info" : "FieldDeclaration[1945-2055]:FieldDeclaration[2012-2122]"
  }, {
    "left" : "private fillDeclaredParameters(swagger , definition , parameters ...) : void",
    "right" : "private fillDeclaredParameters(swagger , definition , parameters ...) : void",
    "info" : "MethodDeclaration[2061-3725]:MethodDeclaration[2128-3792]"
  }, {
    "left" : "private fillInputPayload(swaggerOperation , operation , contract ) : void",
    "right" : "private fillInputPayload(swaggerOperation , operation , contract ) : void",
    "info" : "MethodDeclaration[3731-4403]:MethodDeclaration[3798-4470]"
  }, {
    "left" : "private fillOutputPayload(swaggerResponse , response , swaggerOperation , contract , parameters ...) : void",
    "right" : "private fillOutputPayload(swaggerResponse , response , swaggerOperation , contract , parameters ...) : void",
    "info" : "MethodDeclaration[4409-5707]:MethodDeclaration[4476-5774]"
  }, {
    "left" : "private fillPayload(bodyParameter , payload ) : void",
    "right" : "private fillPayload(bodyParameter , payload ) : void",
    "info" : "MethodDeclaration[5713-6441]:MethodDeclaration[5780-6508]"
  }, {
    "left" : "private fillRepresentations(swagger , contract ) : void",
    "right" : "private fillRepresentation(model , name , contract ) : void",
    "info" : "MethodDeclaration[6447-7161]:MethodDeclaration[9264-9874]"
  }, {
    "left" : "private fillResources(swagger , contract , produces , consumes , parameters ...) : void",
    "right" : "private fillResources(swagger , contract , produces , consumes , parameters ...) : void",
    "info" : "MethodDeclaration[7167-9014]:MethodDeclaration[9880-11727]"
  }, {
    "left" : "private fillEndpoints(swagger , definition ) : void",
    "right" : "private fillEndpoints(swagger , definition ) : void",
    "info" : "MethodDeclaration[9020-10400]:MethodDeclaration[11733-13113]"
  }, {
    "left" : "private fillGeneralInformation(swagger , definition , produces , consumes ...) : void",
    "right" : "private fillGeneralInformation(swagger , definition , produces , consumes ...) : void",
    "info" : "MethodDeclaration[10406-12058]:MethodDeclaration[13119-14771]"
  }, {
    "left" : "private fillHeader(header , swaggerHeader ) : void",
    "right" : "private fillHeader(header , swaggerHeader ) : void",
    "info" : "MethodDeclaration[12064-12757]:MethodDeclaration[14777-15470]"
  }, {
    "left" : "private fillOperation(swaggerOperation , resource , contract , methodName , produces , consumes , parameters ...) : void",
    "right" : "private fillOperation(swaggerOperation , resource , contract , methodName , produces , consumes , parameters ...) : void",
    "info" : "MethodDeclaration[12763-13865]:MethodDeclaration[15476-16578]"
  }, {
    "left" : "private fillOperations(path , resource , contract , produces , consumes , parameters ...) : void",
    "right" : "private fillOperations(path , resource , contract , produces , consumes , parameters ...) : void",
    "info" : "MethodDeclaration[13871-14853]:MethodDeclaration[16584-17566]"
  }, {
    "left" : "private fillParameters(swaggerOperation , operation , resource , parameters ...) : void",
    "right" : "private fillParameters(swaggerOperation , operation , resource , parameters ...) : void",
    "info" : "MethodDeclaration[14859-18228]:MethodDeclaration[17572-20941]"
  }, {
    "left" : "private fillPathVariable(pathVariable , swaggerPathVariable ) : void",
    "right" : "private fillPathVariable(pathVariable , swaggerPathVariable ) : void",
    "info" : "MethodDeclaration[18234-18905]:MethodDeclaration[20947-21618]"
  }, {
    "left" : "private fillProperties(model , representation ) : void",
    "right" : "private fillProperties(model , representation ) : void",
    "info" : "MethodDeclaration[18911-20405]:MethodDeclaration[21624-23118]"
  }, {
    "left" : "private fillQueryParameter(queryParameter , swaggerQueryParameter ) : void",
    "right" : "private fillQueryParameter(queryParameter , swaggerQueryParameter ) : void",
    "info" : "MethodDeclaration[20411-21815]:MethodDeclaration[23124-24528]"
  }, {
    "left" : "private fillResponses(swaggerOperation , operation , contract , parameters ...) : void",
    "right" : "private fillResponses(swaggerOperation , operation , contract , parameters ...) : void",
    "info" : "MethodDeclaration[21821-23338]:MethodDeclaration[24534-26051]"
  }, {
    "left" : "private fillSections(swagger , contract ) : void",
    "right" : "private fillSections(swagger , contract ) : void",
    "info" : "MethodDeclaration[23344-23742]:MethodDeclaration[26057-26455]"
  }, {
    "left" : "public translate(swagger ) : ",
    "right" : "public translate(swagger ) : ",
    "info" : "MethodDeclaration[23748-25047]:MethodDeclaration[26461-27760]"
  } ],
  "mappings" : [ {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[2061-2068]:Modifier[2128-2135]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2069-2075]:Modifier[2136-2142]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2076-2080]:PrimitiveType[2143-2147]"
  }, {
    "left" : "fillDeclaredParameters",
    "right" : "fillDeclaredParameters",
    "info" : "SimpleName[2081-2103]:SimpleName[2148-2170]"
  }, {
    "left" : "Swagger swagger",
    "right" : "Swagger swagger",
    "info" : "SingleVariableDeclaration[2104-2119]:SingleVariableDeclaration[2171-2186]"
  }, {
    "left" : "Definition definition",
    "right" : "Definition definition",
    "info" : "SingleVariableDeclaration[2121-2142]:SingleVariableDeclaration[2188-2209]"
  }, {
    "left" : "Map<String, Object> parameters",
    "right" : "Map<String, Object> parameters",
    "info" : "SingleVariableDeclaration[2156-2186]:SingleVariableDeclaration[2223-2253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2188-3725]:Block[2255-3792]"
  }, {
    "left" : "if (swagger.getParameters() == null)",
    "right" : "if (swagger.getParameters() == null)",
    "info" : "IfStatement[2198-2266]:IfStatement[2265-2333]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2235-2266]:Block[2302-2333]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[2249-2256]:ReturnStatement[2316-2323]"
  }, {
    "left" : "for (String key : swagger.getParameters().keySet())",
    "right" : "for (String key : swagger.getParameters().keySet())",
    "info" : "EnhancedForStatement[2276-3719]:EnhancedForStatement[2343-3786]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2328-3719]:Block[2395-3786]"
  }, {
    "left" : "Parameter swaggerParameter = swagger.getParameters().get(key);",
    "right" : "Parameter swaggerParameter = swagger.getParameters().get(key);",
    "info" : "VariableDeclarationStatement[2342-2404]:VariableDeclarationStatement[2409-2471]"
  }, {
    "left" : "if (swaggerParameter instanceof QueryParameter)",
    "right" : "if (swaggerParameter instanceof QueryParameter)",
    "info" : "IfStatement[2417-3709]:IfStatement[2484-3776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2465-2795]:Block[2532-2862]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.QueryParameter queryParameter =\n                        new org.restlet.ext.apispark.internal.model.QueryParameter();",
    "right" : "org.restlet.ext.apispark.internal.model.QueryParameter queryParameter =\n                        new org.restlet.ext.apispark.internal.model.QueryParameter();",
    "info" : "VariableDeclarationStatement[2483-2640]:VariableDeclarationStatement[2550-2707]"
  }, {
    "left" : "fillQueryParameter(queryParameter, (QueryParameter) swaggerParameter);",
    "right" : "fillQueryParameter(queryParameter, (QueryParameter) swaggerParameter);",
    "info" : "ExpressionStatement[2657-2727]:ExpressionStatement[2724-2794]"
  }, {
    "left" : "parameters.put(key, queryParameter);",
    "right" : "parameters.put(key, queryParameter);",
    "info" : "ExpressionStatement[2744-2780]:ExpressionStatement[2811-2847]"
  }, {
    "left" : "if (swaggerParameter instanceof PathParameter)",
    "right" : "if (swaggerParameter instanceof PathParameter)",
    "info" : "IfStatement[2801-3709]:IfStatement[2868-3776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2848-3061]:Block[2915-3128]"
  }, {
    "left" : "PathVariable pathVariable = new PathVariable();",
    "right" : "PathVariable pathVariable = new PathVariable();",
    "info" : "VariableDeclarationStatement[2866-2913]:VariableDeclarationStatement[2933-2980]"
  }, {
    "left" : "fillPathVariable(pathVariable, (PathParameter) swaggerParameter);",
    "right" : "fillPathVariable(pathVariable, (PathParameter) swaggerParameter);",
    "info" : "ExpressionStatement[2930-2995]:ExpressionStatement[2997-3062]"
  }, {
    "left" : "parameters.put(key, pathVariable);",
    "right" : "parameters.put(key, pathVariable);",
    "info" : "ExpressionStatement[3012-3046]:ExpressionStatement[3079-3113]"
  }, {
    "left" : "if (swaggerParameter instanceof HeaderParameter)",
    "right" : "if (swaggerParameter instanceof HeaderParameter)",
    "info" : "IfStatement[3067-3709]:IfStatement[3134-3776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3116-3295]:Block[3183-3362]"
  }, {
    "left" : "Header header = new Header();",
    "right" : "Header header = new Header();",
    "info" : "VariableDeclarationStatement[3134-3163]:VariableDeclarationStatement[3201-3230]"
  }, {
    "left" : "fillHeader(header, (HeaderParameter) swaggerParameter);",
    "right" : "fillHeader(header, (HeaderParameter) swaggerParameter);",
    "info" : "ExpressionStatement[3180-3235]:ExpressionStatement[3247-3302]"
  }, {
    "left" : "parameters.put(key, header);",
    "right" : "parameters.put(key, header);",
    "info" : "ExpressionStatement[3252-3280]:ExpressionStatement[3319-3347]"
  }, {
    "left" : "if (swaggerParameter instanceof BodyParameter)",
    "right" : "if (swaggerParameter instanceof BodyParameter)",
    "info" : "IfStatement[3301-3709]:IfStatement[3368-3776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3348-3530]:Block[3415-3597]"
  }, {
    "left" : "PayLoad payload = new PayLoad();",
    "right" : "PayLoad payload = new PayLoad();",
    "info" : "VariableDeclarationStatement[3366-3398]:VariableDeclarationStatement[3433-3465]"
  }, {
    "left" : "fillPayload((BodyParameter) swaggerParameter, payload);",
    "right" : "fillPayload((BodyParameter) swaggerParameter, payload);",
    "info" : "ExpressionStatement[3415-3470]:ExpressionStatement[3482-3537]"
  }, {
    "left" : "parameters.put(key, payload);",
    "right" : "parameters.put(key, payload);",
    "info" : "ExpressionStatement[3487-3516]:ExpressionStatement[3554-3583]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3536-3709]:Block[3603-3776]"
  }, {
    "left" : "LOGGER.warning(\"The type of the parameter \" + key + \" was not recognized: \"\n                        + swaggerParameter.getClass().getName());",
    "right" : "LOGGER.warning(\"The type of the parameter \" + key + \" was not recognized: \"\n                        + swaggerParameter.getClass().getName());",
    "info" : "ExpressionStatement[3554-3695]:ExpressionStatement[3621-3762]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[3731-3738]:Modifier[3798-3805]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3739-3745]:Modifier[3806-3812]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[3746-3750]:PrimitiveType[3813-3817]"
  }, {
    "left" : "fillInputPayload",
    "right" : "fillInputPayload",
    "info" : "SimpleName[3751-3767]:SimpleName[3818-3834]"
  }, {
    "left" : "Operation swaggerOperation",
    "right" : "Operation swaggerOperation",
    "info" : "SingleVariableDeclaration[3768-3794]:SingleVariableDeclaration[3835-3861]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.Operation operation",
    "right" : "org.restlet.ext.apispark.internal.model.Operation operation",
    "info" : "SingleVariableDeclaration[3808-3867]:SingleVariableDeclaration[3875-3934]"
  }, {
    "left" : "Contract contract",
    "right" : "Contract contract",
    "info" : "SingleVariableDeclaration[3881-3898]:SingleVariableDeclaration[3948-3965]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3900-4403]:Block[3967-4470]"
  }, {
    "left" : "BodyParameter bodyParameter = SwaggerUtils.getInputPayload(swaggerOperation);",
    "right" : "BodyParameter bodyParameter = SwaggerUtils.getInputPayload(swaggerOperation);",
    "info" : "VariableDeclarationStatement[3910-3987]:VariableDeclarationStatement[3977-4054]"
  }, {
    "left" : "if (bodyParameter != null)",
    "right" : "if (bodyParameter != null)",
    "info" : "IfStatement[3997-4397]:IfStatement[4064-4464]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4024-4397]:Block[4091-4464]"
  }, {
    "left" : "PayLoad payload = new PayLoad();",
    "right" : "PayLoad payload = new PayLoad();",
    "info" : "VariableDeclarationStatement[4038-4070]:VariableDeclarationStatement[4105-4137]"
  }, {
    "left" : "fillPayload(bodyParameter, payload);",
    "right" : "fillPayload(bodyParameter, payload);",
    "info" : "ExpressionStatement[4083-4119]:ExpressionStatement[4150-4186]"
  }, {
    "left" : "Representation representation = contract.getRepresentation(payload.getType());",
    "right" : "Representation representation = contract.getRepresentation(payload.getType());",
    "info" : "VariableDeclarationStatement[4133-4211]:VariableDeclarationStatement[4200-4278]"
  }, {
    "left" : "if (representation != null)",
    "right" : "if (representation != null)",
    "info" : "IfStatement[4224-4339]:IfStatement[4291-4406]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4252-4339]:Block[4319-4406]"
  }, {
    "left" : "representation.addSections(swaggerOperation.getTags());",
    "right" : "representation.addSections(swaggerOperation.getTags());",
    "info" : "ExpressionStatement[4270-4325]:ExpressionStatement[4337-4392]"
  }, {
    "left" : "operation.setInputPayLoad(payload);",
    "right" : "operation.setInputPayLoad(payload);",
    "info" : "ExpressionStatement[4352-4387]:ExpressionStatement[4419-4454]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[4409-4416]:Modifier[4476-4483]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[4417-4423]:Modifier[4484-4490]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4424-4428]:PrimitiveType[4491-4495]"
  }, {
    "left" : "fillOutputPayload",
    "right" : "fillOutputPayload",
    "info" : "SimpleName[4429-4446]:SimpleName[4496-4513]"
  }, {
    "left" : "Response swaggerResponse",
    "right" : "Response swaggerResponse",
    "info" : "SingleVariableDeclaration[4447-4471]:SingleVariableDeclaration[4514-4538]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.Response response",
    "right" : "org.restlet.ext.apispark.internal.model.Response response",
    "info" : "SingleVariableDeclaration[4485-4542]:SingleVariableDeclaration[4552-4609]"
  }, {
    "left" : "Operation swaggerOperation",
    "right" : "Operation swaggerOperation",
    "info" : "SingleVariableDeclaration[4556-4582]:SingleVariableDeclaration[4623-4649]"
  }, {
    "left" : "Contract contract",
    "right" : "Contract contract",
    "info" : "SingleVariableDeclaration[4584-4601]:SingleVariableDeclaration[4651-4668]"
  }, {
    "left" : "Map<String, Object> parameters",
    "right" : "Map<String, Object> parameters",
    "info" : "SingleVariableDeclaration[4616-4646]:SingleVariableDeclaration[4683-4713]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4648-5707]:Block[4715-5774]"
  }, {
    "left" : "Property property = swaggerResponse.getSchema();",
    "right" : "Property property = swaggerResponse.getSchema();",
    "info" : "VariableDeclarationStatement[4658-4706]:VariableDeclarationStatement[4725-4773]"
  }, {
    "left" : "if (property == null)",
    "right" : "if (property == null)",
    "info" : "IfStatement[4715-4768]:IfStatement[4782-4835]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4737-4768]:Block[4804-4835]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[4751-4758]:ReturnStatement[4818-4825]"
  }, {
    "left" : "PayLoad payload = null;",
    "right" : "PayLoad payload = null;",
    "info" : "VariableDeclarationStatement[4778-4801]:VariableDeclarationStatement[4845-4868]"
  }, {
    "left" : "if (property instanceof RefProperty)",
    "right" : "if (property instanceof RefProperty)",
    "info" : "IfStatement[4819-5174]:IfStatement[4886-5241]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4856-5174]:Block[4923-5241]"
  }, {
    "left" : "RefProperty refProperty = (RefProperty) property;",
    "right" : "RefProperty refProperty = (RefProperty) property;",
    "info" : "VariableDeclarationStatement[4870-4919]:VariableDeclarationStatement[4937-4986]"
  }, {
    "left" : "Object declaredPayload = parameters.get(refProperty.get$ref());",
    "right" : "Object declaredPayload = parameters.get(refProperty.get$ref());",
    "info" : "VariableDeclarationStatement[4932-4995]:VariableDeclarationStatement[4999-5062]"
  }, {
    "left" : "if (declaredPayload != null\n                    && declaredPayload instanceof PayLoad)",
    "right" : "if (declaredPayload != null\n                    && declaredPayload instanceof PayLoad)",
    "info" : "IfStatement[5008-5163]:IfStatement[5075-5230]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5095-5163]:Block[5162-5230]"
  }, {
    "left" : "payload = (PayLoad) declaredPayload;",
    "right" : "payload = (PayLoad) declaredPayload;",
    "info" : "ExpressionStatement[5113-5149]:ExpressionStatement[5180-5216]"
  }, {
    "left" : "if (payload == null)",
    "right" : "if (payload == null)",
    "info" : "IfStatement[5184-5452]:IfStatement[5251-5519]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5205-5452]:Block[5272-5519]"
  }, {
    "left" : "payload = new PayLoad();",
    "right" : "payload = new PayLoad();",
    "info" : "ExpressionStatement[5219-5243]:ExpressionStatement[5286-5310]"
  }, {
    "left" : "payload.setDescription(property.getDescription());",
    "right" : "payload.setDescription(property.getDescription());",
    "info" : "ExpressionStatement[5256-5306]:ExpressionStatement[5323-5373]"
  }, {
    "left" : "payload.setArray(property instanceof ArrayProperty);",
    "right" : "payload.setArray(property instanceof ArrayProperty);",
    "info" : "ExpressionStatement[5319-5371]:ExpressionStatement[5386-5438]"
  }, {
    "left" : "payload.setType(SwaggerTypes.toDefinitionType(property));",
    "right" : "payload.setType(SwaggerTypes.toDefinitionType(property));",
    "info" : "ExpressionStatement[5384-5441]:ExpressionStatement[5451-5508]"
  }, {
    "left" : "Representation representation = contract.getRepresentation(payload.getType());",
    "right" : "Representation representation = contract.getRepresentation(payload.getType());",
    "info" : "VariableDeclarationStatement[5462-5540]:VariableDeclarationStatement[5529-5607]"
  }, {
    "left" : "if (representation != null)",
    "right" : "if (representation != null)",
    "info" : "IfStatement[5549-5656]:IfStatement[5616-5723]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5577-5656]:Block[5644-5723]"
  }, {
    "left" : "representation.addSections(swaggerOperation.getTags());",
    "right" : "representation.addSections(swaggerOperation.getTags());",
    "info" : "ExpressionStatement[5591-5646]:ExpressionStatement[5658-5713]"
  }, {
    "left" : "response.setOutputPayLoad(payload);",
    "right" : "response.setOutputPayLoad(payload);",
    "info" : "ExpressionStatement[5666-5701]:ExpressionStatement[5733-5768]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[5713-5720]:Modifier[5780-5787]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5721-5727]:Modifier[5788-5794]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5728-5732]:PrimitiveType[5795-5799]"
  }, {
    "left" : "fillPayload",
    "right" : "fillPayload",
    "info" : "SimpleName[5733-5744]:SimpleName[5800-5811]"
  }, {
    "left" : "BodyParameter bodyParameter",
    "right" : "BodyParameter bodyParameter",
    "info" : "SingleVariableDeclaration[5745-5772]:SingleVariableDeclaration[5812-5839]"
  }, {
    "left" : "PayLoad payload",
    "right" : "PayLoad payload",
    "info" : "SingleVariableDeclaration[5774-5789]:SingleVariableDeclaration[5841-5856]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5791-6441]:Block[5858-6508]"
  }, {
    "left" : "Model model = bodyParameter.getSchema();",
    "right" : "Model model = bodyParameter.getSchema();",
    "info" : "VariableDeclarationStatement[5801-5841]:VariableDeclarationStatement[5868-5908]"
  }, {
    "left" : "payload.setDescription(model.getDescription());",
    "right" : "payload.setDescription(model.getDescription());",
    "info" : "ExpressionStatement[5850-5897]:ExpressionStatement[5917-5964]"
  }, {
    "left" : "if (model instanceof ArrayModel)",
    "right" : "if (model instanceof ArrayModel)",
    "info" : "IfStatement[5907-6435]:IfStatement[5974-6502]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5940-6127]:Block[6007-6194]"
  }, {
    "left" : "ArrayModel arrayModel = (ArrayModel) model;",
    "right" : "ArrayModel arrayModel = (ArrayModel) model;",
    "info" : "VariableDeclarationStatement[5954-5997]:VariableDeclarationStatement[6021-6064]"
  }, {
    "left" : "payload.setArray(true);",
    "right" : "payload.setArray(true);",
    "info" : "ExpressionStatement[6010-6033]:ExpressionStatement[6077-6100]"
  }, {
    "left" : "payload.setType(SwaggerTypes.toDefinitionType(arrayModel.getItems()));",
    "right" : "payload.setType(SwaggerTypes.toDefinitionType(arrayModel.getItems()));",
    "info" : "ExpressionStatement[6046-6116]:ExpressionStatement[6113-6183]"
  }, {
    "left" : "if (model instanceof RefModel)",
    "right" : "if (model instanceof RefModel)",
    "info" : "IfStatement[6133-6435]:IfStatement[6200-6502]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6164-6280]:Block[6231-6347]"
  }, {
    "left" : "RefModel refModel = (RefModel) model;",
    "right" : "RefModel refModel = (RefModel) model;",
    "info" : "VariableDeclarationStatement[6178-6215]:VariableDeclarationStatement[6245-6282]"
  }, {
    "left" : "payload.setType(refModel.getSimpleRef());",
    "right" : "payload.setType(refModel.getSimpleRef());",
    "info" : "ExpressionStatement[6228-6269]:ExpressionStatement[6295-6336]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6286-6435]:Block[6353-6502]"
  }, {
    "left" : "LOGGER.warning(\"Unsupported input payload type: \" + model.getClass().getSimpleName());",
    "right" : "LOGGER.warning(\"Unsupported input payload type: \" + model.getClass().getSimpleName());",
    "info" : "ExpressionStatement[6339-6425]:ExpressionStatement[6406-6492]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[6447-6454]:Modifier[9264-9271]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6455-6461]:Modifier[9272-9278]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6462-6466]:PrimitiveType[9279-9283]"
  }, {
    "left" : "fillRepresentations",
    "right" : "fillRepresentation",
    "info" : "SimpleName[6467-6486]:SimpleName[9284-9302]"
  }, {
    "left" : "Swagger swagger",
    "right" : "Swagger swagger",
    "info" : "SingleVariableDeclaration[6487-6502]:SingleVariableDeclaration[6554-6569]"
  }, {
    "left" : "Contract contract",
    "right" : "Contract contract",
    "info" : "SingleVariableDeclaration[6504-6521]:SingleVariableDeclaration[9341-9358]"
  }, {
    "left" : "if (swagger.getDefinitions() == null)",
    "right" : "if (model.getReference() != null)",
    "info" : "IfStatement[6533-6602]:IfStatement[9370-9466]"
  }, {
    "left" : "swagger.getDefinitions()",
    "right" : "swagger.getPaths()",
    "info" : "MethodInvocation[6537-6561]:MethodInvocation[7185-7203]"
  }, {
    "left" : "getDefinitions",
    "right" : "getPaths",
    "info" : "SimpleName[6545-6559]:SimpleName[7193-7201]"
  }, {
    "left" : "==",
    "right" : "!=",
    "info" : "INFIX_EXPRESSION_OPERATOR[6562-6564]:INFIX_EXPRESSION_OPERATOR[9395-9397]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6571-6602]:Block[9404-9466]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[6585-6592]:ReturnStatement[9418-9425]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[6617-6623]:SimpleType[9073-9079]"
  }, {
    "left" : "swagger.getDefinitions().keySet()",
    "right" : "swagger.getDefinitions()\n                .entrySet()",
    "info" : "MethodInvocation[6630-6663]:MethodInvocation[9101-9153]"
  }, {
    "left" : "keySet",
    "right" : "entrySet",
    "info" : "SimpleName[6655-6661]:SimpleName[9143-9151]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6665-7155]:Block[9360-9874]"
  }, {
    "left" : "Model",
    "right" : "Model",
    "info" : "SimpleType[6679-6684]:SimpleType[9081-9086]"
  }, {
    "left" : "swagger",
    "right" : "model",
    "info" : "METHOD_INVOCATION_RECEIVER[6693-6700]:METHOD_INVOCATION_RECEIVER[9374-9379]"
  }, {
    "left" : "swagger.getDefinitions().get(key)",
    "right" : "model.getReference()",
    "info" : "MethodInvocation[6693-6726]:MethodInvocation[9374-9394]"
  }, {
    "left" : "get",
    "right" : "getReference",
    "info" : "SimpleName[6718-6721]:SimpleName[9380-9392]"
  }, {
    "left" : "Representation representation = new Representation();",
    "right" : "Representation representation = new Representation();",
    "info" : "VariableDeclarationStatement[6740-6793]:VariableDeclarationStatement[9475-9528]"
  }, {
    "left" : "representation.setDescription(model.getDescription());",
    "right" : "representation.setDescription(model.getDescription());",
    "info" : "ExpressionStatement[6806-6860]:ExpressionStatement[9537-9591]"
  }, {
    "left" : "representation.setName(key);",
    "right" : "representation.setName(name);",
    "info" : "ExpressionStatement[6873-6901]:ExpressionStatement[9600-9629]"
  }, {
    "left" : "key",
    "right" : "name",
    "info" : "SimpleName[6896-6899]:SimpleName[9623-9627]"
  }, {
    "left" : "representation.setRaw(false);",
    "right" : "representation.setRaw(false);",
    "info" : "ExpressionStatement[6914-6943]:ExpressionStatement[9638-9667]"
  }, {
    "left" : "fillProperties(model, representation);",
    "right" : "fillProperties(model, representation);",
    "info" : "ExpressionStatement[7044-7082]:ExpressionStatement[9771-9809]"
  }, {
    "left" : "contract.getRepresentations().add(representation);",
    "right" : "contract.getRepresentations().add(representation);",
    "info" : "ExpressionStatement[7095-7145]:ExpressionStatement[9818-9868]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[7167-7174]:Modifier[9880-9887]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7175-7181]:Modifier[9888-9894]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7182-7186]:PrimitiveType[9895-9899]"
  }, {
    "left" : "fillResources",
    "right" : "fillResources",
    "info" : "SimpleName[7187-7200]:SimpleName[9900-9913]"
  }, {
    "left" : "Swagger swagger",
    "right" : "Swagger swagger",
    "info" : "SingleVariableDeclaration[7201-7216]:SingleVariableDeclaration[9914-9929]"
  }, {
    "left" : "Contract contract",
    "right" : "Contract contract",
    "info" : "SingleVariableDeclaration[7218-7235]:SingleVariableDeclaration[9931-9948]"
  }, {
    "left" : "List<String> produces",
    "right" : "List<String> produces",
    "info" : "SingleVariableDeclaration[7249-7270]:SingleVariableDeclaration[9962-9983]"
  }, {
    "left" : "List<String> consumes",
    "right" : "List<String> consumes",
    "info" : "SingleVariableDeclaration[7272-7293]:SingleVariableDeclaration[9985-10006]"
  }, {
    "left" : "Map<String, Object> parameters",
    "right" : "Map<String, Object> parameters",
    "info" : "SingleVariableDeclaration[7307-7337]:SingleVariableDeclaration[10020-10050]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7339-9014]:Block[10052-11727]"
  }, {
    "left" : "if (swagger.getPaths() == null)",
    "right" : "if (swagger.getPaths() == null)",
    "info" : "IfStatement[7349-7412]:IfStatement[10062-10125]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7381-7412]:Block[10094-10125]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[7395-7402]:ReturnStatement[10108-10115]"
  }, {
    "left" : "for (String key : swagger.getPaths().keySet())",
    "right" : "for (String key : swagger.getPaths().keySet())",
    "info" : "EnhancedForStatement[7422-9007]:EnhancedForStatement[10135-11720]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7469-9007]:Block[10182-11720]"
  }, {
    "left" : "Resource resource = new Resource();",
    "right" : "Resource resource = new Resource();",
    "info" : "VariableDeclarationStatement[7483-7518]:VariableDeclarationStatement[10196-10231]"
  }, {
    "left" : "Path path = swagger.getPath(key);",
    "right" : "Path path = swagger.getPath(key);",
    "info" : "VariableDeclarationStatement[7531-7564]:VariableDeclarationStatement[10244-10277]"
  }, {
    "left" : "resource.setName(ConversionUtils.processResourceName(key));",
    "right" : "resource.setName(ConversionUtils.processResourceName(key));",
    "info" : "ExpressionStatement[7642-7701]:ExpressionStatement[10355-10414]"
  }, {
    "left" : "resource.setResourcePath(key);",
    "right" : "resource.setResourcePath(key);",
    "info" : "ExpressionStatement[7714-7744]:ExpressionStatement[10427-10457]"
  }, {
    "left" : "for (Operation operation : path.getOperations())",
    "right" : "for (Operation operation : path.getOperations())",
    "info" : "EnhancedForStatement[7757-7880]:EnhancedForStatement[10470-10593]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7806-7880]:Block[10519-10593]"
  }, {
    "left" : "resource.addSections(operation.getTags());",
    "right" : "resource.addSections(operation.getTags());",
    "info" : "ExpressionStatement[7824-7866]:ExpressionStatement[10537-10579]"
  }, {
    "left" : "if (path.getParameters() != null)",
    "right" : "if (path.getParameters() != null)",
    "info" : "IfStatement[7894-8859]:IfStatement[10607-11572]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7928-8859]:Block[10641-11572]"
  }, {
    "left" : "for (Parameter parameter : path.getParameters())",
    "right" : "for (Parameter parameter : path.getParameters())",
    "info" : "EnhancedForStatement[7946-8845]:EnhancedForStatement[10659-11558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7995-8845]:Block[10708-11558]"
  }, {
    "left" : "PathVariable pathVariable = null;",
    "right" : "PathVariable pathVariable = null;",
    "info" : "VariableDeclarationStatement[8017-8050]:VariableDeclarationStatement[10730-10763]"
  }, {
    "left" : "if (parameter instanceof PathParameter)",
    "right" : "if (parameter instanceof PathParameter)",
    "info" : "IfStatement[8071-8685]:IfStatement[10784-11398]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8111-8276]:Block[10824-10989]"
  }, {
    "left" : "pathVariable = new PathVariable();",
    "right" : "pathVariable = new PathVariable();",
    "info" : "ExpressionStatement[8137-8171]:ExpressionStatement[10850-10884]"
  }, {
    "left" : "fillPathVariable(pathVariable, (PathParameter) parameter);",
    "right" : "fillPathVariable(pathVariable, (PathParameter) parameter);",
    "info" : "ExpressionStatement[8196-8254]:ExpressionStatement[10909-10967]"
  }, {
    "left" : "if (parameter instanceof RefParameter)",
    "right" : "if (parameter instanceof RefParameter)",
    "info" : "IfStatement[8282-8685]:IfStatement[10995-11398]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8321-8685]:Block[11034-11398]"
  }, {
    "left" : "RefParameter refParameter = (RefParameter) parameter;",
    "right" : "RefParameter refParameter = (RefParameter) parameter;",
    "info" : "VariableDeclarationStatement[8347-8400]:VariableDeclarationStatement[11060-11113]"
  }, {
    "left" : "Object savedParameter = parameters.get(refParameter.getSimpleRef());",
    "right" : "Object savedParameter = parameters.get(refParameter.getSimpleRef());",
    "info" : "VariableDeclarationStatement[8425-8493]:VariableDeclarationStatement[11138-11206]"
  }, {
    "left" : "if (savedParameter instanceof PathVariable)",
    "right" : "if (savedParameter instanceof PathVariable)",
    "info" : "IfStatement[8518-8663]:IfStatement[11231-11376]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8562-8663]:Block[11275-11376]"
  }, {
    "left" : "pathVariable = (PathVariable) savedParameter;",
    "right" : "pathVariable = (PathVariable) savedParameter;",
    "info" : "ExpressionStatement[8592-8637]:ExpressionStatement[11305-11350]"
  }, {
    "left" : "if (pathVariable != null)",
    "right" : "if (pathVariable != null)",
    "info" : "IfStatement[8707-8827]:IfStatement[11420-11540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8733-8827]:Block[11446-11540]"
  }, {
    "left" : "resource.getPathVariables().add(pathVariable);",
    "right" : "resource.getPathVariables().add(pathVariable);",
    "info" : "ExpressionStatement[8759-8805]:ExpressionStatement[11472-11518]"
  }, {
    "left" : "fillOperations(path, resource, contract, produces, consumes, parameters);",
    "right" : "fillOperations(path, resource, contract, produces, consumes, parameters);",
    "info" : "ExpressionStatement[8872-8945]:ExpressionStatement[11585-11658]"
  }, {
    "left" : "contract.getResources().add(resource);",
    "right" : "contract.getResources().add(resource);",
    "info" : "ExpressionStatement[8959-8997]:ExpressionStatement[11672-11710]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[9020-9027]:Modifier[11733-11740]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9028-9034]:Modifier[11741-11747]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9035-9039]:PrimitiveType[11748-11752]"
  }, {
    "left" : "fillEndpoints",
    "right" : "fillEndpoints",
    "info" : "SimpleName[9040-9053]:SimpleName[11753-11766]"
  }, {
    "left" : "Swagger swagger",
    "right" : "Swagger swagger",
    "info" : "SingleVariableDeclaration[9054-9069]:SingleVariableDeclaration[11767-11782]"
  }, {
    "left" : "Definition definition",
    "right" : "Definition definition",
    "info" : "SingleVariableDeclaration[9071-9092]:SingleVariableDeclaration[11784-11805]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9094-10400]:Block[11807-13113]"
  }, {
    "left" : "String authenticationProtocol = null;",
    "right" : "String authenticationProtocol = null;",
    "info" : "VariableDeclarationStatement[9104-9141]:VariableDeclarationStatement[11817-11854]"
  }, {
    "left" : "if (swagger.getSecurityDefinitions() != null)",
    "right" : "if (swagger.getSecurityDefinitions() != null)",
    "info" : "IfStatement[9151-9896]:IfStatement[11864-12609]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9197-9896]:Block[11910-12609]"
  }, {
    "left" : "for (String key : swagger.getSecurityDefinitions().keySet())",
    "right" : "for (String key : swagger.getSecurityDefinitions().keySet())",
    "info" : "EnhancedForStatement[9211-9886]:EnhancedForStatement[11924-12599]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9272-9886]:Block[11985-12599]"
  }, {
    "left" : "SecuritySchemeDefinition securityDefinition = swagger.getSecurityDefinitions().get(key);",
    "right" : "SecuritySchemeDefinition securityDefinition = swagger.getSecurityDefinitions().get(key);",
    "info" : "VariableDeclarationStatement[9290-9378]:VariableDeclarationStatement[12003-12091]"
  }, {
    "left" : "if (securityDefinition instanceof BasicAuthDefinition)",
    "right" : "if (securityDefinition instanceof BasicAuthDefinition)",
    "info" : "IfStatement[9395-9872]:IfStatement[12108-12585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9450-9552]:Block[12163-12265]"
  }, {
    "left" : "authenticationProtocol = ChallengeScheme.HTTP_BASIC.getName();",
    "right" : "authenticationProtocol = ChallengeScheme.HTTP_BASIC.getName();",
    "info" : "ExpressionStatement[9472-9534]:ExpressionStatement[12185-12247]"
  }, {
    "left" : "if (securityDefinition instanceof OAuth2Definition)",
    "right" : "if (securityDefinition instanceof OAuth2Definition)",
    "info" : "IfStatement[9558-9872]:IfStatement[12271-12585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9610-9712]:Block[12323-12425]"
  }, {
    "left" : "authenticationProtocol = ChallengeScheme.HTTP_OAUTH.getName();",
    "right" : "authenticationProtocol = ChallengeScheme.HTTP_OAUTH.getName();",
    "info" : "ExpressionStatement[9632-9694]:ExpressionStatement[12345-12407]"
  }, {
    "left" : "if (securityDefinition instanceof ApiKeyAuthDefinition)",
    "right" : "if (securityDefinition instanceof ApiKeyAuthDefinition)",
    "info" : "IfStatement[9718-9872]:IfStatement[12431-12585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9774-9872]:Block[12487-12585]"
  }, {
    "left" : "authenticationProtocol = ChallengeScheme.CUSTOM.getName();",
    "right" : "authenticationProtocol = ChallengeScheme.CUSTOM.getName();",
    "info" : "ExpressionStatement[9796-9854]:ExpressionStatement[12509-12567]"
  }, {
    "left" : "if (swagger.getSchemes() != null\n            && swagger.getHost() != null)",
    "right" : "if (swagger.getSchemes() != null\n            && swagger.getHost() != null)",
    "info" : "IfStatement[9906-10394]:IfStatement[12619-13107]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9981-10394]:Block[12694-13107]"
  }, {
    "left" : "for (Scheme scheme : swagger.getSchemes())",
    "right" : "for (Scheme scheme : swagger.getSchemes())",
    "info" : "EnhancedForStatement[9995-10384]:EnhancedForStatement[12708-13097]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10038-10384]:Block[12751-13097]"
  }, {
    "left" : "Endpoint endpoint = new Endpoint(scheme.toString().toLowerCase() + \"://\" + swagger.getHost()\n                        + (swagger.getBasePath() == null ? \"\" : swagger.getBasePath()));",
    "right" : "Endpoint endpoint = new Endpoint(scheme.toString().toLowerCase() + \"://\" + swagger.getHost()\n                        + (swagger.getBasePath() == null ? \"\" : swagger.getBasePath()));",
    "info" : "VariableDeclarationStatement[10056-10237]:VariableDeclarationStatement[12769-12950]"
  }, {
    "left" : "endpoint.setAuthenticationProtocol(authenticationProtocol);",
    "right" : "endpoint.setAuthenticationProtocol(authenticationProtocol);",
    "info" : "ExpressionStatement[10254-10313]:ExpressionStatement[12967-13026]"
  }, {
    "left" : "definition.getEndpoints().add(endpoint);",
    "right" : "definition.getEndpoints().add(endpoint);",
    "info" : "ExpressionStatement[10330-10370]:ExpressionStatement[13043-13083]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[10406-10413]:Modifier[13119-13126]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10414-10420]:Modifier[13127-13133]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[10421-10425]:PrimitiveType[13134-13138]"
  }, {
    "left" : "fillGeneralInformation",
    "right" : "fillGeneralInformation",
    "info" : "SimpleName[10426-10448]:SimpleName[13139-13161]"
  }, {
    "left" : "Swagger swagger",
    "right" : "Swagger swagger",
    "info" : "SingleVariableDeclaration[10449-10464]:SingleVariableDeclaration[13162-13177]"
  }, {
    "left" : "Definition definition",
    "right" : "Definition definition",
    "info" : "SingleVariableDeclaration[10466-10487]:SingleVariableDeclaration[13179-13200]"
  }, {
    "left" : "List<String> produces",
    "right" : "List<String> produces",
    "info" : "SingleVariableDeclaration[10501-10522]:SingleVariableDeclaration[13214-13235]"
  }, {
    "left" : "List<String> consumes",
    "right" : "List<String> consumes",
    "info" : "SingleVariableDeclaration[10524-10545]:SingleVariableDeclaration[13237-13258]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10547-12058]:Block[13260-14771]"
  }, {
    "left" : "Info info = swagger.getInfo();",
    "right" : "Info info = swagger.getInfo();",
    "info" : "VariableDeclarationStatement[10558-10588]:VariableDeclarationStatement[13271-13301]"
  }, {
    "left" : "if (info.getContact() != null)",
    "right" : "if (info.getContact() != null)",
    "info" : "IfStatement[10617-11002]:IfStatement[13330-13715]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10648-11002]:Block[13361-13715]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.Contact contact = new org.restlet.ext.apispark.internal.model.Contact();",
    "right" : "org.restlet.ext.apispark.internal.model.Contact contact = new org.restlet.ext.apispark.internal.model.Contact();",
    "info" : "VariableDeclarationStatement[10662-10774]:VariableDeclarationStatement[13375-13487]"
  }, {
    "left" : "contact.setEmail(info.getContact().getEmail());",
    "right" : "contact.setEmail(info.getContact().getEmail());",
    "info" : "ExpressionStatement[10787-10834]:ExpressionStatement[13500-13547]"
  }, {
    "left" : "contact.setName(info.getContact().getName());",
    "right" : "contact.setName(info.getContact().getName());",
    "info" : "ExpressionStatement[10847-10892]:ExpressionStatement[13560-13605]"
  }, {
    "left" : "contact.setUrl(info.getContact().getUrl());",
    "right" : "contact.setUrl(info.getContact().getUrl());",
    "info" : "ExpressionStatement[10905-10948]:ExpressionStatement[13618-13661]"
  }, {
    "left" : "definition.setContact(contact);",
    "right" : "definition.setContact(contact);",
    "info" : "ExpressionStatement[10961-10992]:ExpressionStatement[13674-13705]"
  }, {
    "left" : "if (info.getLicense() != null)",
    "right" : "if (info.getLicense() != null)",
    "info" : "IfStatement[11012-11360]:IfStatement[13725-14073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11043-11360]:Block[13756-14073]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.License license = new org.restlet.ext.apispark.internal.model.License();",
    "right" : "org.restlet.ext.apispark.internal.model.License license = new org.restlet.ext.apispark.internal.model.License();",
    "info" : "VariableDeclarationStatement[11080-11192]:VariableDeclarationStatement[13793-13905]"
  }, {
    "left" : "license.setName(info.getLicense().getName());",
    "right" : "license.setName(info.getLicense().getName());",
    "info" : "ExpressionStatement[11205-11250]:ExpressionStatement[13918-13963]"
  }, {
    "left" : "license.setUrl(info.getLicense().getUrl());",
    "right" : "license.setUrl(info.getLicense().getUrl());",
    "info" : "ExpressionStatement[11263-11306]:ExpressionStatement[13976-14019]"
  }, {
    "left" : "definition.setLicense(license);",
    "right" : "definition.setLicense(license);",
    "info" : "ExpressionStatement[11319-11350]:ExpressionStatement[14032-14063]"
  }, {
    "left" : "Contract contract = new Contract();",
    "right" : "Contract contract = new Contract();",
    "info" : "VariableDeclarationStatement[11390-11425]:VariableDeclarationStatement[14103-14138]"
  }, {
    "left" : "contract.setDescription(info.getDescription());",
    "right" : "contract.setDescription(info.getDescription());",
    "info" : "ExpressionStatement[11434-11481]:ExpressionStatement[14147-14194]"
  }, {
    "left" : "contract.setName(info.getTitle());",
    "right" : "contract.setName(info.getTitle());",
    "info" : "ExpressionStatement[11490-11524]:ExpressionStatement[14203-14237]"
  }, {
    "left" : "definition.setContract(contract);",
    "right" : "definition.setContract(contract);",
    "info" : "ExpressionStatement[11533-11566]:ExpressionStatement[14246-14279]"
  }, {
    "left" : "if (swagger.getProduces() != null)",
    "right" : "if (swagger.getProduces() != null)",
    "info" : "IfStatement[11599-11697]:IfStatement[14312-14410]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11634-11697]:Block[14347-14410]"
  }, {
    "left" : "produces.addAll(swagger.getProduces());",
    "right" : "produces.addAll(swagger.getProduces());",
    "info" : "ExpressionStatement[11648-11687]:ExpressionStatement[14361-14400]"
  }, {
    "left" : "if (swagger.getConsumes() != null)",
    "right" : "if (swagger.getConsumes() != null)",
    "info" : "IfStatement[11706-11804]:IfStatement[14419-14517]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11741-11804]:Block[14454-14517]"
  }, {
    "left" : "consumes.addAll(swagger.getConsumes());",
    "right" : "consumes.addAll(swagger.getConsumes());",
    "info" : "ExpressionStatement[11755-11794]:ExpressionStatement[14468-14507]"
  }, {
    "left" : "definition.setVersion(info.getVersion());",
    "right" : "definition.setVersion(info.getVersion());",
    "info" : "ExpressionStatement[11833-11874]:ExpressionStatement[14546-14587]"
  }, {
    "left" : "definition.setTermsOfService(info.getTermsOfService());",
    "right" : "definition.setTermsOfService(info.getTermsOfService());",
    "info" : "ExpressionStatement[11883-11938]:ExpressionStatement[14596-14651]"
  }, {
    "left" : "definition.setAttribution(null);",
    "right" : "definition.setAttribution(null);",
    "info" : "ExpressionStatement[12020-12052]:ExpressionStatement[14733-14765]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[12064-12071]:Modifier[14777-14784]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12072-12078]:Modifier[14785-14791]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12079-12083]:PrimitiveType[14792-14796]"
  }, {
    "left" : "fillHeader",
    "right" : "fillHeader",
    "info" : "SimpleName[12084-12094]:SimpleName[14797-14807]"
  }, {
    "left" : "Header header",
    "right" : "Header header",
    "info" : "SingleVariableDeclaration[12095-12108]:SingleVariableDeclaration[14808-14821]"
  }, {
    "left" : "HeaderParameter swaggerHeader",
    "right" : "HeaderParameter swaggerHeader",
    "info" : "SingleVariableDeclaration[12110-12139]:SingleVariableDeclaration[14823-14852]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12141-12757]:Block[14854-15470]"
  }, {
    "left" : "header.setName(swaggerHeader.getName());",
    "right" : "header.setName(swaggerHeader.getName());",
    "info" : "ExpressionStatement[12151-12191]:ExpressionStatement[14864-14904]"
  }, {
    "left" : "header.setRequired(swaggerHeader.getRequired());",
    "right" : "header.setRequired(swaggerHeader.getRequired());",
    "info" : "ExpressionStatement[12200-12248]:ExpressionStatement[14913-14961]"
  }, {
    "left" : "header.setDescription(swaggerHeader.getDescription());",
    "right" : "header.setDescription(swaggerHeader.getDescription());",
    "info" : "ExpressionStatement[12257-12311]:ExpressionStatement[14970-15024]"
  }, {
    "left" : "header.setAllowMultiple(true);",
    "right" : "header.setAllowMultiple(true);",
    "info" : "ExpressionStatement[12320-12350]:ExpressionStatement[15033-15063]"
  }, {
    "left" : "header.setDefaultValue(swaggerHeader.getDefaultValue());",
    "right" : "header.setDefaultValue(swaggerHeader.getDefaultValue());",
    "info" : "ExpressionStatement[12359-12415]:ExpressionStatement[15072-15128]"
  }, {
    "left" : "SwaggerTypeFormat swaggerTypeFormat = new SwaggerTypeFormat(\n                swaggerHeader.getType(),\n                swaggerHeader.getFormat(),\n                swaggerHeader.getItems());",
    "right" : "SwaggerTypeFormat swaggerTypeFormat = new SwaggerTypeFormat(\n                swaggerHeader.getType(),\n                swaggerHeader.getFormat(),\n                swaggerHeader.getItems());",
    "info" : "VariableDeclarationStatement[12481-12668]:VariableDeclarationStatement[15194-15381]"
  }, {
    "left" : "header.setType(SwaggerTypes.toDefinitionPrimitiveType(swaggerTypeFormat));",
    "right" : "header.setType(SwaggerTypes.toDefinitionPrimitiveType(swaggerTypeFormat));",
    "info" : "ExpressionStatement[12677-12751]:ExpressionStatement[15390-15464]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[12763-12770]:Modifier[15476-15483]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12771-12777]:Modifier[15484-15490]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12778-12782]:PrimitiveType[15491-15495]"
  }, {
    "left" : "fillOperation",
    "right" : "fillOperation",
    "info" : "SimpleName[12783-12796]:SimpleName[15496-15509]"
  }, {
    "left" : "Operation swaggerOperation",
    "right" : "Operation swaggerOperation",
    "info" : "SingleVariableDeclaration[12797-12823]:SingleVariableDeclaration[15510-15536]"
  }, {
    "left" : "Resource resource",
    "right" : "Resource resource",
    "info" : "SingleVariableDeclaration[12825-12842]:SingleVariableDeclaration[15538-15555]"
  }, {
    "left" : "Contract contract",
    "right" : "Contract contract",
    "info" : "SingleVariableDeclaration[12856-12873]:SingleVariableDeclaration[15569-15586]"
  }, {
    "left" : "String methodName",
    "right" : "String methodName",
    "info" : "SingleVariableDeclaration[12875-12892]:SingleVariableDeclaration[15588-15605]"
  }, {
    "left" : "List<String> produces",
    "right" : "List<String> produces",
    "info" : "SingleVariableDeclaration[12906-12927]:SingleVariableDeclaration[15619-15640]"
  }, {
    "left" : "List<String> consumes",
    "right" : "List<String> consumes",
    "info" : "SingleVariableDeclaration[12929-12950]:SingleVariableDeclaration[15642-15663]"
  }, {
    "left" : "Map<String, Object> parameters",
    "right" : "Map<String, Object> parameters",
    "info" : "SingleVariableDeclaration[12964-12994]:SingleVariableDeclaration[15677-15707]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12996-13865]:Block[15709-16578]"
  }, {
    "left" : "if (swaggerOperation == null)",
    "right" : "if (swaggerOperation == null)",
    "info" : "IfStatement[13006-13067]:IfStatement[15719-15780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13036-13067]:Block[15749-15780]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[13050-13057]:ReturnStatement[15763-15770]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.Operation operation =\n                new org.restlet.ext.apispark.internal.model.Operation();",
    "right" : "org.restlet.ext.apispark.internal.model.Operation operation =\n                new org.restlet.ext.apispark.internal.model.Operation();",
    "info" : "VariableDeclarationStatement[13077-13211]:VariableDeclarationStatement[15790-15924]"
  }, {
    "left" : "operation.addProduces(produces);",
    "right" : "operation.addProduces(produces);",
    "info" : "ExpressionStatement[13221-13253]:ExpressionStatement[15934-15966]"
  }, {
    "left" : "operation.addProduces(swaggerOperation.getProduces());",
    "right" : "operation.addProduces(swaggerOperation.getProduces());",
    "info" : "ExpressionStatement[13262-13316]:ExpressionStatement[15975-16029]"
  }, {
    "left" : "operation.addConsumes(consumes);",
    "right" : "operation.addConsumes(consumes);",
    "info" : "ExpressionStatement[13326-13358]:ExpressionStatement[16039-16071]"
  }, {
    "left" : "operation.addConsumes(swaggerOperation.getConsumes());",
    "right" : "operation.addConsumes(swaggerOperation.getConsumes());",
    "info" : "ExpressionStatement[13367-13421]:ExpressionStatement[16080-16134]"
  }, {
    "left" : "operation.setDescription(swaggerOperation.getDescription());",
    "right" : "operation.setDescription(swaggerOperation.getDescription());",
    "info" : "ExpressionStatement[13431-13491]:ExpressionStatement[16144-16204]"
  }, {
    "left" : "operation.setMethod(methodName);",
    "right" : "operation.setMethod(methodName);",
    "info" : "ExpressionStatement[13500-13532]:ExpressionStatement[16213-16245]"
  }, {
    "left" : "operation.setName(swaggerOperation.getOperationId());",
    "right" : "operation.setName(swaggerOperation.getOperationId());",
    "info" : "ExpressionStatement[13541-13594]:ExpressionStatement[16254-16307]"
  }, {
    "left" : "fillParameters(swaggerOperation, operation, resource, parameters);",
    "right" : "fillParameters(swaggerOperation, operation, resource, parameters);",
    "info" : "ExpressionStatement[13604-13670]:ExpressionStatement[16317-16383]"
  }, {
    "left" : "fillResponses(swaggerOperation, operation, contract, parameters);",
    "right" : "fillResponses(swaggerOperation, operation, contract, parameters);",
    "info" : "ExpressionStatement[13679-13744]:ExpressionStatement[16392-16457]"
  }, {
    "left" : "fillInputPayload(swaggerOperation, operation, contract);",
    "right" : "fillInputPayload(swaggerOperation, operation, contract);",
    "info" : "ExpressionStatement[13753-13809]:ExpressionStatement[16466-16522]"
  }, {
    "left" : "resource.getOperations().add(operation);",
    "right" : "resource.getOperations().add(operation);",
    "info" : "ExpressionStatement[13819-13859]:ExpressionStatement[16532-16572]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[13871-13878]:Modifier[16584-16591]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[13879-13885]:Modifier[16592-16598]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13886-13890]:PrimitiveType[16599-16603]"
  }, {
    "left" : "fillOperations",
    "right" : "fillOperations",
    "info" : "SimpleName[13891-13905]:SimpleName[16604-16618]"
  }, {
    "left" : "Path path",
    "right" : "Path path",
    "info" : "SingleVariableDeclaration[13906-13915]:SingleVariableDeclaration[16619-16628]"
  }, {
    "left" : "Resource resource",
    "right" : "Resource resource",
    "info" : "SingleVariableDeclaration[13917-13934]:SingleVariableDeclaration[16630-16647]"
  }, {
    "left" : "Contract contract",
    "right" : "Contract contract",
    "info" : "SingleVariableDeclaration[13948-13965]:SingleVariableDeclaration[16661-16678]"
  }, {
    "left" : "List<String> produces",
    "right" : "List<String> produces",
    "info" : "SingleVariableDeclaration[13967-13988]:SingleVariableDeclaration[16680-16701]"
  }, {
    "left" : "List<String> consumes",
    "right" : "List<String> consumes",
    "info" : "SingleVariableDeclaration[13990-14011]:SingleVariableDeclaration[16703-16724]"
  }, {
    "left" : "Map<String, Object> parameters",
    "right" : "Map<String, Object> parameters",
    "info" : "SingleVariableDeclaration[14025-14055]:SingleVariableDeclaration[16738-16768]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14057-14853]:Block[16770-17566]"
  }, {
    "left" : "fillOperation(path.getGet(), resource, contract, Method.GET.getName(),\n                produces, consumes, parameters);",
    "right" : "fillOperation(path.getGet(), resource, contract, Method.GET.getName(),\n                produces, consumes, parameters);",
    "info" : "ExpressionStatement[14068-14187]:ExpressionStatement[16781-16900]"
  }, {
    "left" : "fillOperation(path.getPost(), resource, contract, Method.POST.getName(),\n                produces, consumes, parameters);",
    "right" : "fillOperation(path.getPost(), resource, contract, Method.POST.getName(),\n                produces, consumes, parameters);",
    "info" : "ExpressionStatement[14196-14317]:ExpressionStatement[16909-17030]"
  }, {
    "left" : "fillOperation(path.getPut(), resource, contract, Method.PUT.getName(),\n                produces, consumes, parameters);",
    "right" : "fillOperation(path.getPut(), resource, contract, Method.PUT.getName(),\n                produces, consumes, parameters);",
    "info" : "ExpressionStatement[14326-14445]:ExpressionStatement[17039-17158]"
  }, {
    "left" : "fillOperation(path.getDelete(), resource, contract, Method.DELETE.getName(),\n                produces, consumes, parameters);",
    "right" : "fillOperation(path.getDelete(), resource, contract, Method.DELETE.getName(),\n                produces, consumes, parameters);",
    "info" : "ExpressionStatement[14454-14579]:ExpressionStatement[17167-17292]"
  }, {
    "left" : "fillOperation(path.getOptions(), resource, contract, Method.OPTIONS.getName(),\n                produces, consumes, parameters);",
    "right" : "fillOperation(path.getOptions(), resource, contract, Method.OPTIONS.getName(),\n                produces, consumes, parameters);",
    "info" : "ExpressionStatement[14588-14715]:ExpressionStatement[17301-17428]"
  }, {
    "left" : "fillOperation(path.getPatch(), resource, contract, Method.PATCH.getName(),\n                produces, consumes, parameters);",
    "right" : "fillOperation(path.getPatch(), resource, contract, Method.PATCH.getName(),\n                produces, consumes, parameters);",
    "info" : "ExpressionStatement[14724-14847]:ExpressionStatement[17437-17560]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[14859-14866]:Modifier[17572-17579]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[14867-14873]:Modifier[17580-17586]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14874-14878]:PrimitiveType[17587-17591]"
  }, {
    "left" : "fillParameters",
    "right" : "fillParameters",
    "info" : "SimpleName[14879-14893]:SimpleName[17592-17606]"
  }, {
    "left" : "Operation swaggerOperation",
    "right" : "Operation swaggerOperation",
    "info" : "SingleVariableDeclaration[14894-14920]:SingleVariableDeclaration[17607-17633]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.Operation operation",
    "right" : "org.restlet.ext.apispark.internal.model.Operation operation",
    "info" : "SingleVariableDeclaration[14934-14993]:SingleVariableDeclaration[17647-17706]"
  }, {
    "left" : "Resource resource",
    "right" : "Resource resource",
    "info" : "SingleVariableDeclaration[14995-15012]:SingleVariableDeclaration[17708-17725]"
  }, {
    "left" : "Map<String, Object> parameters",
    "right" : "Map<String, Object> parameters",
    "info" : "SingleVariableDeclaration[15026-15056]:SingleVariableDeclaration[17739-17769]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15058-18228]:Block[17771-20941]"
  }, {
    "left" : "if (swaggerOperation.getParameters() == null)",
    "right" : "if (swaggerOperation.getParameters() == null)",
    "info" : "IfStatement[15068-15145]:IfStatement[17781-17858]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15114-15145]:Block[17827-17858]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[15128-15135]:ReturnStatement[17841-17848]"
  }, {
    "left" : "for (Parameter swaggerParameter : swaggerOperation.getParameters())",
    "right" : "for (Parameter swaggerParameter : swaggerOperation.getParameters())",
    "info" : "EnhancedForStatement[15155-18222]:EnhancedForStatement[17868-20935]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15223-18222]:Block[17936-20935]"
  }, {
    "left" : "if (swaggerParameter instanceof RefParameter)",
    "right" : "if (swaggerParameter instanceof RefParameter)",
    "info" : "IfStatement[15238-18212]:IfStatement[17951-20925]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15284-16598]:Block[17997-19311]"
  }, {
    "left" : "RefParameter refParameter = (RefParameter) swaggerParameter;",
    "right" : "RefParameter refParameter = (RefParameter) swaggerParameter;",
    "info" : "VariableDeclarationStatement[15302-15362]:VariableDeclarationStatement[18015-18075]"
  }, {
    "left" : "Object rwadefParameter = parameters.get(refParameter.getSimpleRef());",
    "right" : "Object rwadefParameter = parameters.get(refParameter.getSimpleRef());",
    "info" : "VariableDeclarationStatement[15379-15448]:VariableDeclarationStatement[18092-18161]"
  }, {
    "left" : "if (rwadefParameter == null)",
    "right" : "if (rwadefParameter == null)",
    "info" : "IfStatement[15466-16583]:IfStatement[18179-19296]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15495-15676]:Block[18208-18389]"
  }, {
    "left" : "LOGGER.warning(\"The parameter \" + refParameter.getName()\n                            + \" was not found in the list of declared parameters.\");",
    "right" : "LOGGER.warning(\"The parameter \" + refParameter.getName()\n                            + \" was not found in the list of declared parameters.\");",
    "info" : "ExpressionStatement[15517-15658]:ExpressionStatement[18230-18371]"
  }, {
    "left" : "if (rwadefParameter instanceof Header)",
    "right" : "if (rwadefParameter instanceof Header)",
    "info" : "IfStatement[15682-16583]:IfStatement[18395-19296]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15721-15814]:Block[18434-18527]"
  }, {
    "left" : "operation.getHeaders().add((Header) rwadefParameter);",
    "right" : "operation.getHeaders().add((Header) rwadefParameter);",
    "info" : "ExpressionStatement[15743-15796]:ExpressionStatement[18456-18509]"
  }, {
    "left" : "if (rwadefParameter instanceof PathVariable)",
    "right" : "if (rwadefParameter instanceof PathVariable)",
    "info" : "IfStatement[15820-16583]:IfStatement[18533-19296]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15865-15963]:Block[18578-18676]"
  }, {
    "left" : "resource.addPathVariable((PathVariable) rwadefParameter);",
    "right" : "resource.addPathVariable((PathVariable) rwadefParameter);",
    "info" : "ExpressionStatement[15887-15944]:ExpressionStatement[18600-18657]"
  }, {
    "left" : "if (rwadefParameter instanceof org.restlet.ext.apispark.internal.model.QueryParameter)",
    "right" : "if (rwadefParameter instanceof org.restlet.ext.apispark.internal.model.QueryParameter)",
    "info" : "IfStatement[15969-16583]:IfStatement[18682-19296]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16056-16235]:Block[18769-18948]"
  }, {
    "left" : "operation.getQueryParameters().add(\n                            (org.restlet.ext.apispark.internal.model.QueryParameter) rwadefParameter);",
    "right" : "operation.getQueryParameters().add(\n                            (org.restlet.ext.apispark.internal.model.QueryParameter) rwadefParameter);",
    "info" : "ExpressionStatement[16078-16216]:ExpressionStatement[18791-18929]"
  }, {
    "left" : "if (rwadefParameter instanceof PayLoad)",
    "right" : "if (rwadefParameter instanceof PayLoad)",
    "info" : "IfStatement[16241-16583]:IfStatement[18954-19296]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16281-16375]:Block[18994-19088]"
  }, {
    "left" : "operation.setInputPayLoad((PayLoad) rwadefParameter);",
    "right" : "operation.setInputPayLoad((PayLoad) rwadefParameter);",
    "info" : "ExpressionStatement[16303-16356]:ExpressionStatement[19016-19069]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16381-16583]:Block[19094-19296]"
  }, {
    "left" : "LOGGER.warning(\"The type of declared parameter \" + refParameter.getName() + \", \" +\n                            rwadefParameter.getClass() + \" is not supported.\");",
    "right" : "LOGGER.warning(\"The type of declared parameter \" + refParameter.getName() + \", \" +\n                            rwadefParameter.getClass() + \" is not supported.\");",
    "info" : "ExpressionStatement[16403-16565]:ExpressionStatement[19116-19278]"
  }, {
    "left" : "if (swaggerParameter instanceof QueryParameter)",
    "right" : "if (swaggerParameter instanceof QueryParameter)",
    "info" : "IfStatement[16604-18212]:IfStatement[19317-20925]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16652-17075]:Block[19365-19788]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.QueryParameter queryParameter =\n                        new org.restlet.ext.apispark.internal.model.QueryParameter();",
    "right" : "org.restlet.ext.apispark.internal.model.QueryParameter queryParameter =\n                        new org.restlet.ext.apispark.internal.model.QueryParameter();",
    "info" : "VariableDeclarationStatement[16670-16827]:VariableDeclarationStatement[19383-19540]"
  }, {
    "left" : "QueryParameter swaggerQueryParameter = (QueryParameter) swaggerParameter;",
    "right" : "QueryParameter swaggerQueryParameter = (QueryParameter) swaggerParameter;",
    "info" : "VariableDeclarationStatement[16844-16917]:VariableDeclarationStatement[19557-19630]"
  }, {
    "left" : "fillQueryParameter(queryParameter, swaggerQueryParameter);",
    "right" : "fillQueryParameter(queryParameter, swaggerQueryParameter);",
    "info" : "ExpressionStatement[16935-16993]:ExpressionStatement[19648-19706]"
  }, {
    "left" : "operation.getQueryParameters().add(queryParameter);",
    "right" : "operation.getQueryParameters().add(queryParameter);",
    "info" : "ExpressionStatement[17010-17061]:ExpressionStatement[19723-19774]"
  }, {
    "left" : "if (swaggerParameter instanceof PathParameter)",
    "right" : "if (swaggerParameter instanceof PathParameter)",
    "info" : "IfStatement[17081-18212]:IfStatement[19794-20925]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17128-17632]:Block[19841-20345]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.PathVariable pathVariable =\n                        new org.restlet.ext.apispark.internal.model.PathVariable();",
    "right" : "org.restlet.ext.apispark.internal.model.PathVariable pathVariable =\n                        new org.restlet.ext.apispark.internal.model.PathVariable();",
    "info" : "VariableDeclarationStatement[17146-17297]:VariableDeclarationStatement[19859-20010]"
  }, {
    "left" : "PathParameter swaggerPathVariable = (PathParameter) swaggerParameter;",
    "right" : "PathParameter swaggerPathVariable = (PathParameter) swaggerParameter;",
    "info" : "VariableDeclarationStatement[17314-17383]:VariableDeclarationStatement[20027-20096]"
  }, {
    "left" : "fillPathVariable(pathVariable, swaggerPathVariable);",
    "right" : "fillPathVariable(pathVariable, swaggerPathVariable);",
    "info" : "ExpressionStatement[17401-17453]:ExpressionStatement[20114-20166]"
  }, {
    "left" : "if (resource.getPathVariable(pathVariable.getName()) == null)",
    "right" : "if (resource.getPathVariable(pathVariable.getName()) == null)",
    "info" : "IfStatement[17470-17618]:IfStatement[20183-20331]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17532-17618]:Block[20245-20331]"
  }, {
    "left" : "resource.getPathVariables().add(pathVariable);",
    "right" : "resource.getPathVariables().add(pathVariable);",
    "info" : "ExpressionStatement[17554-17600]:ExpressionStatement[20267-20313]"
  }, {
    "left" : "if (swaggerParameter instanceof HeaderParameter)",
    "right" : "if (swaggerParameter instanceof HeaderParameter)",
    "info" : "IfStatement[17638-18212]:IfStatement[20351-20925]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17687-17923]:Block[20400-20636]"
  }, {
    "left" : "Header header = new Header();",
    "right" : "Header header = new Header();",
    "info" : "VariableDeclarationStatement[17705-17734]:VariableDeclarationStatement[20418-20447]"
  }, {
    "left" : "HeaderParameter swaggerHeader = new HeaderParameter();",
    "right" : "HeaderParameter swaggerHeader = new HeaderParameter();",
    "info" : "VariableDeclarationStatement[17751-17805]:VariableDeclarationStatement[20464-20518]"
  }, {
    "left" : "fillHeader(header, swaggerHeader);",
    "right" : "fillHeader(header, swaggerHeader);",
    "info" : "ExpressionStatement[17823-17857]:ExpressionStatement[20536-20570]"
  }, {
    "left" : "operation.getHeaders().add(header);",
    "right" : "operation.getHeaders().add(header);",
    "info" : "ExpressionStatement[17874-17909]:ExpressionStatement[20587-20622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17929-18212]:Block[20642-20925]"
  }, {
    "left" : "if (!(swaggerParameter instanceof BodyParameter))",
    "right" : "if (!(swaggerParameter instanceof BodyParameter))",
    "info" : "IfStatement[17947-18198]:IfStatement[20660-20911]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17997-18198]:Block[20710-20911]"
  }, {
    "left" : "LOGGER.warning(\"Unsupported parameter type for \" + swaggerParameter.getName() +\n                            \" of type \" + swaggerParameter.getClass().getName());",
    "right" : "LOGGER.warning(\"Unsupported parameter type for \" + swaggerParameter.getName() +\n                            \" of type \" + swaggerParameter.getClass().getName());",
    "info" : "ExpressionStatement[18019-18180]:ExpressionStatement[20732-20893]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[18234-18241]:Modifier[20947-20954]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[18242-18248]:Modifier[20955-20961]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18249-18253]:PrimitiveType[20962-20966]"
  }, {
    "left" : "fillPathVariable",
    "right" : "fillPathVariable",
    "info" : "SimpleName[18254-18270]:SimpleName[20967-20983]"
  }, {
    "left" : "PathVariable pathVariable",
    "right" : "PathVariable pathVariable",
    "info" : "SingleVariableDeclaration[18271-18296]:SingleVariableDeclaration[20984-21009]"
  }, {
    "left" : "PathParameter swaggerPathVariable",
    "right" : "PathParameter swaggerPathVariable",
    "info" : "SingleVariableDeclaration[18298-18331]:SingleVariableDeclaration[21011-21044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18333-18905]:Block[21046-21618]"
  }, {
    "left" : "pathVariable.setName(swaggerPathVariable.getName());",
    "right" : "pathVariable.setName(swaggerPathVariable.getName());",
    "info" : "ExpressionStatement[18343-18395]:ExpressionStatement[21056-21108]"
  }, {
    "left" : "pathVariable.setRequired(swaggerPathVariable.getRequired());",
    "right" : "pathVariable.setRequired(swaggerPathVariable.getRequired());",
    "info" : "ExpressionStatement[18404-18464]:ExpressionStatement[21117-21177]"
  }, {
    "left" : "pathVariable.setDescription(swaggerPathVariable.getDescription());",
    "right" : "pathVariable.setDescription(swaggerPathVariable.getDescription());",
    "info" : "ExpressionStatement[18473-18539]:ExpressionStatement[21186-21252]"
  }, {
    "left" : "SwaggerTypeFormat swaggerTypeFormat = new SwaggerTypeFormat(\n                swaggerPathVariable.getType(),\n                swaggerPathVariable.getFormat(),\n                swaggerPathVariable.getItems());",
    "right" : "SwaggerTypeFormat swaggerTypeFormat = new SwaggerTypeFormat(\n                swaggerPathVariable.getType(),\n                swaggerPathVariable.getFormat(),\n                swaggerPathVariable.getItems());",
    "info" : "VariableDeclarationStatement[18605-18810]:VariableDeclarationStatement[21318-21523]"
  }, {
    "left" : "pathVariable.setType(SwaggerTypes.toDefinitionPrimitiveType(swaggerTypeFormat));",
    "right" : "pathVariable.setType(SwaggerTypes.toDefinitionPrimitiveType(swaggerTypeFormat));",
    "info" : "ExpressionStatement[18819-18899]:ExpressionStatement[21532-21612]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[18911-18918]:Modifier[21624-21631]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[18919-18925]:Modifier[21632-21638]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18926-18930]:PrimitiveType[21639-21643]"
  }, {
    "left" : "fillProperties",
    "right" : "fillProperties",
    "info" : "SimpleName[18931-18945]:SimpleName[21644-21658]"
  }, {
    "left" : "Model model",
    "right" : "Model model",
    "info" : "SingleVariableDeclaration[18946-18957]:SingleVariableDeclaration[21659-21670]"
  }, {
    "left" : "Representation representation",
    "right" : "Representation representation",
    "info" : "SingleVariableDeclaration[18959-18988]:SingleVariableDeclaration[21672-21701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18990-20405]:Block[21703-23118]"
  }, {
    "left" : "if (model.getProperties() == null)",
    "right" : "if (model.getProperties() == null)",
    "info" : "IfStatement[19000-19066]:IfStatement[21713-21779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19035-19066]:Block[21748-21779]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[19049-19056]:ReturnStatement[21762-21769]"
  }, {
    "left" : "for (String key : model.getProperties().keySet())",
    "right" : "for (String key : model.getProperties().keySet())",
    "info" : "EnhancedForStatement[19076-20399]:EnhancedForStatement[21789-23112]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19126-20399]:Block[21839-23112]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.Property property =\n                    new org.restlet.ext.apispark.internal.model.Property();",
    "right" : "org.restlet.ext.apispark.internal.model.Property property =\n                    new org.restlet.ext.apispark.internal.model.Property();",
    "info" : "VariableDeclarationStatement[19140-19275]:VariableDeclarationStatement[21853-21988]"
  }, {
    "left" : "Property swaggerProperty = model.getProperties().get(key);",
    "right" : "Property swaggerProperty = model.getProperties().get(key);",
    "info" : "VariableDeclarationStatement[19288-19346]:VariableDeclarationStatement[22001-22059]"
  }, {
    "left" : "property.setDefaultValue(SwaggerUtils.toString(SwaggerUtils\n                    .getDefaultValue(swaggerProperty)));",
    "right" : "property.setDefaultValue(SwaggerUtils.toString(SwaggerUtils\n                    .getDefaultValue(swaggerProperty)));",
    "info" : "ExpressionStatement[19360-19476]:ExpressionStatement[22073-22189]"
  }, {
    "left" : "property.setDescription(swaggerProperty.getDescription());",
    "right" : "property.setDescription(swaggerProperty.getDescription());",
    "info" : "ExpressionStatement[19489-19547]:ExpressionStatement[22202-22260]"
  }, {
    "left" : "property.setExample(swaggerProperty.getExample());",
    "right" : "property.setExample(swaggerProperty.getExample());",
    "info" : "ExpressionStatement[19624-19674]:ExpressionStatement[22337-22387]"
  }, {
    "left" : "property.setRequired(swaggerProperty.getRequired());",
    "right" : "property.setRequired(swaggerProperty.getRequired());",
    "info" : "ExpressionStatement[19687-19739]:ExpressionStatement[22400-22452]"
  }, {
    "left" : "property.setList(swaggerProperty instanceof ArrayProperty);",
    "right" : "property.setList(swaggerProperty instanceof ArrayProperty);",
    "info" : "ExpressionStatement[19752-19811]:ExpressionStatement[22465-22524]"
  }, {
    "left" : "property.setName(key);",
    "right" : "property.setName(key);",
    "info" : "ExpressionStatement[19824-19846]:ExpressionStatement[22537-22559]"
  }, {
    "left" : "property.setUniqueItems(false);",
    "right" : "property.setUniqueItems(false);",
    "info" : "ExpressionStatement[19990-20021]:ExpressionStatement[22703-22734]"
  }, {
    "left" : "if (swaggerProperty instanceof ArrayProperty)",
    "right" : "if (swaggerProperty instanceof ArrayProperty)",
    "info" : "IfStatement[20035-20251]:IfStatement[22748-22964]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20081-20251]:Block[22794-22964]"
  }, {
    "left" : "ArrayProperty arrayProperty = (ArrayProperty) swaggerProperty;",
    "right" : "ArrayProperty arrayProperty = (ArrayProperty) swaggerProperty;",
    "info" : "VariableDeclarationStatement[20099-20161]:VariableDeclarationStatement[22812-22874]"
  }, {
    "left" : "property.setExample(arrayProperty.getItems().getExample());",
    "right" : "property.setExample(arrayProperty.getItems().getExample());",
    "info" : "ExpressionStatement[20178-20237]:ExpressionStatement[22891-22950]"
  }, {
    "left" : "property.setType(SwaggerTypes.toDefinitionType(swaggerProperty));",
    "right" : "property.setType(SwaggerTypes.toDefinitionType(swaggerProperty));",
    "info" : "ExpressionStatement[20265-20330]:ExpressionStatement[22978-23043]"
  }, {
    "left" : "representation.getProperties().add(property);",
    "right" : "representation.getProperties().add(property);",
    "info" : "ExpressionStatement[20344-20389]:ExpressionStatement[23057-23102]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[20691-20698]:Modifier[23404-23411]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[20699-20705]:Modifier[23412-23418]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20706-20710]:PrimitiveType[23419-23423]"
  }, {
    "left" : "fillQueryParameter",
    "right" : "fillQueryParameter",
    "info" : "SimpleName[20711-20729]:SimpleName[23424-23442]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.QueryParameter queryParameter",
    "right" : "org.restlet.ext.apispark.internal.model.QueryParameter queryParameter",
    "info" : "SingleVariableDeclaration[20730-20799]:SingleVariableDeclaration[23443-23512]"
  }, {
    "left" : "QueryParameter swaggerQueryParameter",
    "right" : "QueryParameter swaggerQueryParameter",
    "info" : "SingleVariableDeclaration[20813-20849]:SingleVariableDeclaration[23526-23562]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20851-21815]:Block[23564-24528]"
  }, {
    "left" : "queryParameter.setAllowMultiple(true);",
    "right" : "queryParameter.setAllowMultiple(true);",
    "info" : "ExpressionStatement[20924-20962]:ExpressionStatement[23637-23675]"
  }, {
    "left" : "queryParameter.setDefaultValue(swaggerQueryParameter.getDefaultValue());",
    "right" : "queryParameter.setDefaultValue(swaggerQueryParameter.getDefaultValue());",
    "info" : "ExpressionStatement[20971-21043]:ExpressionStatement[23684-23756]"
  }, {
    "left" : "queryParameter.setDescription(swaggerQueryParameter.getDescription());",
    "right" : "queryParameter.setDescription(swaggerQueryParameter.getDescription());",
    "info" : "ExpressionStatement[21052-21122]:ExpressionStatement[23765-23835]"
  }, {
    "left" : "queryParameter.setEnumeration(swaggerQueryParameter.getEnum());",
    "right" : "queryParameter.setEnumeration(swaggerQueryParameter.getEnum());",
    "info" : "ExpressionStatement[21131-21194]:ExpressionStatement[23844-23907]"
  }, {
    "left" : "queryParameter.setName(swaggerQueryParameter.getName());",
    "right" : "queryParameter.setName(swaggerQueryParameter.getName());",
    "info" : "ExpressionStatement[21259-21315]:ExpressionStatement[23972-24028]"
  }, {
    "left" : "queryParameter.setRequired(swaggerQueryParameter.getRequired());",
    "right" : "queryParameter.setRequired(swaggerQueryParameter.getRequired());",
    "info" : "ExpressionStatement[21324-21388]:ExpressionStatement[24037-24101]"
  }, {
    "left" : "queryParameter.setSeparator(SwaggerUtils.getSeparator(swaggerQueryParameter.getCollectionFormat()));",
    "right" : "queryParameter.setSeparator(SwaggerUtils.getSeparator(swaggerQueryParameter.getCollectionFormat()));",
    "info" : "ExpressionStatement[21397-21497]:ExpressionStatement[24110-24210]"
  }, {
    "left" : "SwaggerTypeFormat swaggerTypeFormat = new SwaggerTypeFormat(\n                swaggerQueryParameter.getType(),\n                swaggerQueryParameter.getFormat(),\n                swaggerQueryParameter.getItems());",
    "right" : "SwaggerTypeFormat swaggerTypeFormat = new SwaggerTypeFormat(\n                swaggerQueryParameter.getType(),\n                swaggerQueryParameter.getFormat(),\n                swaggerQueryParameter.getItems());",
    "info" : "VariableDeclarationStatement[21507-21718]:VariableDeclarationStatement[24220-24431]"
  }, {
    "left" : "queryParameter.setType(SwaggerTypes.toDefinitionPrimitiveType(swaggerTypeFormat));",
    "right" : "queryParameter.setType(SwaggerTypes.toDefinitionPrimitiveType(swaggerTypeFormat));",
    "info" : "ExpressionStatement[21727-21809]:ExpressionStatement[24440-24522]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[21821-21828]:Modifier[24534-24541]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[21829-21835]:Modifier[24542-24548]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21836-21840]:PrimitiveType[24549-24553]"
  }, {
    "left" : "fillResponses",
    "right" : "fillResponses",
    "info" : "SimpleName[21841-21854]:SimpleName[24554-24567]"
  }, {
    "left" : "Operation swaggerOperation",
    "right" : "Operation swaggerOperation",
    "info" : "SingleVariableDeclaration[21855-21881]:SingleVariableDeclaration[24568-24594]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.Operation operation",
    "right" : "org.restlet.ext.apispark.internal.model.Operation operation",
    "info" : "SingleVariableDeclaration[21895-21954]:SingleVariableDeclaration[24608-24667]"
  }, {
    "left" : "Contract contract",
    "right" : "Contract contract",
    "info" : "SingleVariableDeclaration[21968-21985]:SingleVariableDeclaration[24681-24698]"
  }, {
    "left" : "Map<String, Object> parameters",
    "right" : "Map<String, Object> parameters",
    "info" : "SingleVariableDeclaration[21987-22017]:SingleVariableDeclaration[24700-24730]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22019-23338]:Block[24732-26051]"
  }, {
    "left" : "if (swaggerOperation == null)",
    "right" : "if (swaggerOperation == null)",
    "info" : "IfStatement[22029-22090]:IfStatement[24742-24803]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22059-22090]:Block[24772-24803]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[22073-22080]:ReturnStatement[24786-24793]"
  }, {
    "left" : "if (swaggerOperation.getResponses() != null)",
    "right" : "if (swaggerOperation.getResponses() != null)",
    "info" : "IfStatement[22100-23332]:IfStatement[24813-26045]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22145-23332]:Block[24858-26045]"
  }, {
    "left" : "for (String key : swaggerOperation.getResponses().keySet())",
    "right" : "for (String key : swaggerOperation.getResponses().keySet())",
    "info" : "EnhancedForStatement[22159-23322]:EnhancedForStatement[24872-26035]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22219-23322]:Block[24932-26035]"
  }, {
    "left" : "Response swaggerResponse = swaggerOperation.getResponses().get(key);",
    "right" : "Response swaggerResponse = swaggerOperation.getResponses().get(key);",
    "info" : "VariableDeclarationStatement[22237-22305]:VariableDeclarationStatement[24950-25018]"
  }, {
    "left" : "org.restlet.ext.apispark.internal.model.Response response =\n                        new org.restlet.ext.apispark.internal.model.Response();",
    "right" : "org.restlet.ext.apispark.internal.model.Response response =\n                        new org.restlet.ext.apispark.internal.model.Response();",
    "info" : "VariableDeclarationStatement[22322-22461]:VariableDeclarationStatement[25035-25174]"
  }, {
    "left" : "int statusCode;",
    "right" : "int statusCode;",
    "info" : "VariableDeclarationStatement[22479-22494]:VariableDeclarationStatement[25192-25207]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[22511-22988]:TryStatement[25224-25701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22515-22640]:Block[25228-25353]"
  }, {
    "left" : "statusCode = Integer.parseInt(key);",
    "right" : "statusCode = Integer.parseInt(key);",
    "info" : "ExpressionStatement[22537-22572]:ExpressionStatement[25250-25285]"
  }, {
    "left" : "response.setCode(statusCode);",
    "right" : "response.setCode(statusCode);",
    "info" : "ExpressionStatement[22593-22622]:ExpressionStatement[25306-25335]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22661-22988]:Block[25374-25701]"
  }, {
    "left" : "LOGGER.warning(\"Response \" + key + \" for operation \" + swaggerOperation.getOperationId() +\n                            \" could not be retrieved because its key is not a valid status code.\");",
    "right" : "LOGGER.warning(\"Response \" + key + \" for operation \" + swaggerOperation.getOperationId() +\n                            \" could not be retrieved because its key is not a valid status code.\");",
    "info" : "ExpressionStatement[22750-22940]:ExpressionStatement[25463-25653]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[22961-22970]:ContinueStatement[25674-25683]"
  }, {
    "left" : "response.setDescription(swaggerResponse.getDescription());",
    "right" : "response.setDescription(swaggerResponse.getDescription());",
    "info" : "ExpressionStatement[23006-23064]:ExpressionStatement[25719-25777]"
  }, {
    "left" : "response.setName(ConversionUtils.generateResponseName(statusCode));",
    "right" : "response.setName(ConversionUtils.generateResponseName(statusCode));",
    "info" : "ExpressionStatement[23081-23148]:ExpressionStatement[25794-25861]"
  }, {
    "left" : "fillOutputPayload(swaggerResponse, response, swaggerOperation, contract, parameters);",
    "right" : "fillOutputPayload(swaggerResponse, response, swaggerOperation, contract, parameters);",
    "info" : "ExpressionStatement[23166-23251]:ExpressionStatement[25879-25964]"
  }, {
    "left" : "operation.getResponses().add(response);",
    "right" : "operation.getResponses().add(response);",
    "info" : "ExpressionStatement[23269-23308]:ExpressionStatement[25982-26021]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[23344-23351]:Modifier[26057-26064]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[23352-23358]:Modifier[26065-26071]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23359-23363]:PrimitiveType[26072-26076]"
  }, {
    "left" : "fillSections",
    "right" : "fillSections",
    "info" : "SimpleName[23364-23376]:SimpleName[26077-26089]"
  }, {
    "left" : "Swagger swagger",
    "right" : "Swagger swagger",
    "info" : "SingleVariableDeclaration[23377-23392]:SingleVariableDeclaration[26090-26105]"
  }, {
    "left" : "Contract contract",
    "right" : "Contract contract",
    "info" : "SingleVariableDeclaration[23394-23411]:SingleVariableDeclaration[26107-26124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23413-23742]:Block[26126-26455]"
  }, {
    "left" : "if (swagger.getTags() == null)",
    "right" : "if (swagger.getTags() == null)",
    "info" : "IfStatement[23423-23485]:IfStatement[26136-26198]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23454-23485]:Block[26167-26198]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[23468-23475]:ReturnStatement[26181-26188]"
  }, {
    "left" : "for (Tag tag : swagger.getTags())",
    "right" : "for (Tag tag : swagger.getTags())",
    "info" : "EnhancedForStatement[23495-23736]:EnhancedForStatement[26208-26449]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23529-23736]:Block[26242-26449]"
  }, {
    "left" : "Section section = new Section();",
    "right" : "Section section = new Section();",
    "info" : "VariableDeclarationStatement[23543-23575]:VariableDeclarationStatement[26256-26288]"
  }, {
    "left" : "section.setName(tag.getName());",
    "right" : "section.setName(tag.getName());",
    "info" : "ExpressionStatement[23588-23619]:ExpressionStatement[26301-26332]"
  }, {
    "left" : "section.setDescription(tag.getDescription());",
    "right" : "section.setDescription(tag.getDescription());",
    "info" : "ExpressionStatement[23632-23677]:ExpressionStatement[26345-26390]"
  }, {
    "left" : "contract.getSections().add(section);",
    "right" : "contract.getSections().add(section);",
    "info" : "ExpressionStatement[23690-23726]:ExpressionStatement[26403-26439]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23975-23981]:Modifier[26688-26694]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[23982-23988]:Modifier[26695-26701]"
  }, {
    "left" : "Definition",
    "right" : "Definition",
    "info" : "SimpleType[23989-23999]:SimpleType[26702-26712]"
  }, {
    "left" : "translate",
    "right" : "translate",
    "info" : "SimpleName[24000-24009]:SimpleName[26713-26722]"
  }, {
    "left" : "Swagger swagger",
    "right" : "Swagger swagger",
    "info" : "SingleVariableDeclaration[24010-24025]:SingleVariableDeclaration[26723-26738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24027-25047]:Block[26740-27760]"
  }, {
    "left" : "Definition definition = new Definition();",
    "right" : "Definition definition = new Definition();",
    "info" : "VariableDeclarationStatement[24060-24101]:VariableDeclarationStatement[26773-26814]"
  }, {
    "left" : "fillEndpoints(swagger, definition);",
    "right" : "fillEndpoints(swagger, definition);",
    "info" : "ExpressionStatement[24150-24185]:ExpressionStatement[26863-26898]"
  }, {
    "left" : "List<String> produces = new ArrayList<>();",
    "right" : "List<String> produces = new ArrayList<>();",
    "info" : "VariableDeclarationStatement[24195-24237]:VariableDeclarationStatement[26908-26950]"
  }, {
    "left" : "List<String> consumes = new ArrayList<>();",
    "right" : "List<String> consumes = new ArrayList<>();",
    "info" : "VariableDeclarationStatement[24246-24288]:VariableDeclarationStatement[26959-27001]"
  }, {
    "left" : "fillGeneralInformation(swagger, definition, produces, consumes);",
    "right" : "fillGeneralInformation(swagger, definition, produces, consumes);",
    "info" : "ExpressionStatement[24297-24361]:ExpressionStatement[27010-27074]"
  }, {
    "left" : "Contract contract = definition.getContract();",
    "right" : "Contract contract = definition.getContract();",
    "info" : "VariableDeclarationStatement[24407-24452]:VariableDeclarationStatement[27120-27165]"
  }, {
    "left" : "fillSections(swagger, contract);",
    "right" : "fillSections(swagger, contract);",
    "info" : "ExpressionStatement[24461-24493]:ExpressionStatement[27174-27206]"
  }, {
    "left" : "Map<String, Object> parameters = new LinkedHashMap<>();",
    "right" : "Map<String, Object> parameters = new LinkedHashMap<>();",
    "info" : "VariableDeclarationStatement[24538-24593]:VariableDeclarationStatement[27251-27306]"
  }, {
    "left" : "fillDeclaredParameters(swagger, definition, parameters);",
    "right" : "fillDeclaredParameters(swagger, definition, parameters);",
    "info" : "ExpressionStatement[24602-24658]:ExpressionStatement[27315-27371]"
  }, {
    "left" : "fillRepresentations(swagger, contract);",
    "right" : "fillRepresentations(swagger, contract);",
    "info" : "ExpressionStatement[24711-24750]:ExpressionStatement[27424-27463]"
  }, {
    "left" : "fillResources(swagger, contract, produces, consumes, parameters);",
    "right" : "fillResources(swagger, contract, produces, consumes, parameters);",
    "info" : "ExpressionStatement[24797-24862]:ExpressionStatement[27510-27575]"
  }, {
    "left" : "for (Representation representation : contract.getRepresentations())",
    "right" : "for (Representation representation : contract.getRepresentations())",
    "info" : "EnhancedForStatement[24872-25013]:EnhancedForStatement[27585-27726]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24940-25013]:Block[27653-27726]"
  }, {
    "left" : "representation.addSectionsToProperties(contract);",
    "right" : "representation.addSectionsToProperties(contract);",
    "info" : "ExpressionStatement[24954-25003]:ExpressionStatement[27667-27716]"
  }, {
    "left" : "return definition;",
    "right" : "return definition;",
    "info" : "ReturnStatement[25023-25041]:ReturnStatement[27736-27754]"
  } ]
}