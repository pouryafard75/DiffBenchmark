{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Options",
      "right" : "Options",
      "info" : "TypeDeclaration[1083-9584]:TypeDeclaration[1083-9691]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1564-1647]:FieldDeclaration[1564-1647]"
    }, {
      "left" : "private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>();",
      "right" : "private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>();",
      "info" : "FieldDeclaration[1653-1790]:FieldDeclaration[1653-1790]"
    }, {
      "left" : "private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>();",
      "right" : "private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>();",
      "info" : "FieldDeclaration[1796-1927]:FieldDeclaration[1796-1927]"
    }, {
      "left" : "// N.B. This can contain either a String (addOption) or an OptionGroup (addOptionGroup)\n    // TODO this seems wrong\n    private final List<Object> requiredOpts = new ArrayList<Object>();",
      "right" : "// N.B. This can contain either a String (addOption) or an OptionGroup (addOptionGroup)\n    // TODO this seems wrong\n    private final List<Object> requiredOpts = new ArrayList<Object>();",
      "info" : "FieldDeclaration[1933-2161]:FieldDeclaration[1933-2161]"
    }, {
      "left" : "private final Map<String, OptionGroup> optionGroups = new HashMap<String, OptionGroup>();",
      "right" : "private final Map<String, OptionGroup> optionGroups = new HashMap<String, OptionGroup>();",
      "info" : "FieldDeclaration[2167-2294]:FieldDeclaration[2167-2294]"
    }, {
      "left" : "public Options addOptionGroup(OptionGroup group)",
      "right" : "public Options addOptionGroup(OptionGroup group)",
      "info" : "MethodDeclaration[2300-2984]:MethodDeclaration[2300-2984]"
    }, {
      "left" : "Collection<OptionGroup> getOptionGroups()",
      "right" : "Collection<OptionGroup> getOptionGroups()",
      "info" : "MethodDeclaration[2990-3257]:MethodDeclaration[2990-3257]"
    }, {
      "left" : "public Options addOption(String opt, String description)",
      "right" : "public Options addOption(String opt, String description)",
      "info" : "MethodDeclaration[3263-3704]:MethodDeclaration[3263-3704]"
    }, {
      "left" : "public Options addOption(String opt, boolean hasArg, String description)",
      "right" : "public Options addOption(String opt, boolean hasArg, String description)",
      "info" : "MethodDeclaration[3710-4238]:MethodDeclaration[3710-4238]"
    }, {
      "left" : "public Options addOption(String opt, String longOpt, boolean hasArg, String description)",
      "right" : "public Options addOption(String opt, String longOpt, boolean hasArg, String description)",
      "info" : "MethodDeclaration[4244-4877]:MethodDeclaration[4244-4877]"
    }, {
      "left" : "public Options addOption(Option opt)",
      "right" : "public Options addOption(Option opt)",
      "info" : "MethodDeclaration[4883-5600]:MethodDeclaration[4883-5600]"
    }, {
      "left" : "public Collection<Option> getOptions()",
      "right" : "public Collection<Option> getOptions()",
      "info" : "MethodDeclaration[5606-5882]:MethodDeclaration[5606-5882]"
    }, {
      "left" : "List<Option> helpOptions()",
      "right" : "List<Option> helpOptions()",
      "info" : "MethodDeclaration[5888-6099]:MethodDeclaration[5888-6099]"
    }, {
      "left" : "public List getRequiredOptions()",
      "right" : "public List getRequiredOptions()",
      "info" : "MethodDeclaration[6105-6318]:MethodDeclaration[6105-6318]"
    }, {
      "left" : "public Option getOption(String opt)",
      "right" : "public Option getOption(String opt)",
      "info" : "MethodDeclaration[6324-6818]:MethodDeclaration[6324-6818]"
    }, {
      "left" : "public List<String> getMatchingOptions(String opt)",
      "right" : "public List<String> getMatchingOptions(String opt)",
      "info" : "MethodDeclaration[6824-7549]:MethodDeclaration[6824-7656]"
    }, {
      "left" : "public boolean hasOption(String opt)",
      "right" : "public boolean hasOption(String opt)",
      "info" : "MethodDeclaration[7555-7972]:MethodDeclaration[7662-8079]"
    }, {
      "left" : "public boolean hasLongOption(String opt)",
      "right" : "public boolean hasLongOption(String opt)",
      "info" : "MethodDeclaration[7978-8378]:MethodDeclaration[8085-8485]"
    }, {
      "left" : "public boolean hasShortOption(String opt)",
      "right" : "public boolean hasShortOption(String opt)",
      "info" : "MethodDeclaration[8384-8787]:MethodDeclaration[8491-8894]"
    }, {
      "left" : "public OptionGroup getOptionGroup(Option opt)",
      "right" : "public OptionGroup getOptionGroup(Option opt)",
      "info" : "MethodDeclaration[8793-9156]:MethodDeclaration[8900-9263]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[9162-9582]:MethodDeclaration[9269-9689]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2517-2984]:Block[2517-2984]"
    }, {
      "left" : "if (group.isRequired())",
      "right" : "if (group.isRequired())",
      "info" : "IfStatement[2527-2607]:IfStatement[2527-2607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2559-2607]:Block[2559-2607]"
    }, {
      "left" : "requiredOpts.add(group);",
      "right" : "requiredOpts.add(group);",
      "info" : "ExpressionStatement[2573-2597]:ExpressionStatement[2573-2597]"
    }, {
      "left" : "for (Option option : group.getOptions())",
      "right" : "for (Option option : group.getOptions())",
      "info" : "EnhancedForStatement[2617-2956]:EnhancedForStatement[2617-2956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2666-2956]:Block[2666-2956]"
    }, {
      "left" : "option.setRequired(false);",
      "right" : "option.setRequired(false);",
      "info" : "ExpressionStatement[2834-2860]:ExpressionStatement[2834-2860]"
    }, {
      "left" : "addOption(option);",
      "right" : "addOption(option);",
      "info" : "ExpressionStatement[2873-2891]:ExpressionStatement[2873-2891]"
    }, {
      "left" : "optionGroups.put(option.getKey(), group);",
      "right" : "optionGroups.put(option.getKey(), group);",
      "info" : "ExpressionStatement[2905-2946]:ExpressionStatement[2905-2946]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2966-2978]:ReturnStatement[2966-2978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3186-3257]:Block[3186-3257]"
    }, {
      "left" : "return new HashSet<OptionGroup>(optionGroups.values());",
      "right" : "return new HashSet<OptionGroup>(optionGroups.values());",
      "info" : "ReturnStatement[3196-3251]:ReturnStatement[3196-3251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3626-3704]:Block[3626-3704]"
    }, {
      "left" : "addOption(opt, null, false, description);",
      "right" : "addOption(opt, null, false, description);",
      "info" : "ExpressionStatement[3636-3677]:ExpressionStatement[3636-3677]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3686-3698]:ReturnStatement[3686-3698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4159-4238]:Block[4159-4238]"
    }, {
      "left" : "addOption(opt, null, hasArg, description);",
      "right" : "addOption(opt, null, hasArg, description);",
      "info" : "ExpressionStatement[4169-4211]:ExpressionStatement[4169-4211]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4220-4232]:ReturnStatement[4220-4232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4783-4877]:Block[4783-4877]"
    }, {
      "left" : "addOption(new Option(opt, longOpt, hasArg, description));",
      "right" : "addOption(new Option(opt, longOpt, hasArg, description));",
      "info" : "ExpressionStatement[4793-4850]:ExpressionStatement[4793-4850]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4859-4871]:ReturnStatement[4859-4871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5073-5600]:Block[5073-5600]"
    }, {
      "left" : "String key = opt.getKey();",
      "right" : "String key = opt.getKey();",
      "info" : "VariableDeclarationStatement[5083-5109]:VariableDeclarationStatement[5083-5109]"
    }, {
      "left" : "if (opt.hasLongOpt())",
      "right" : "if (opt.hasLongOpt())",
      "info" : "IfStatement[5161-5251]:IfStatement[5161-5251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5191-5251]:Block[5191-5251]"
    }, {
      "left" : "longOpts.put(opt.getLongOpt(), opt);",
      "right" : "longOpts.put(opt.getLongOpt(), opt);",
      "info" : "ExpressionStatement[5205-5241]:ExpressionStatement[5205-5241]"
    }, {
      "left" : "if (opt.isRequired())",
      "right" : "if (opt.isRequired())",
      "info" : "IfStatement[5326-5538]:IfStatement[5326-5538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5356-5538]:Block[5356-5538]"
    }, {
      "left" : "if (requiredOpts.contains(key))",
      "right" : "if (requiredOpts.contains(key))",
      "info" : "IfStatement[5370-5493]:IfStatement[5370-5493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5414-5493]:Block[5414-5493]"
    }, {
      "left" : "requiredOpts.remove(requiredOpts.indexOf(key));",
      "right" : "requiredOpts.remove(requiredOpts.indexOf(key));",
      "info" : "ExpressionStatement[5432-5479]:ExpressionStatement[5432-5479]"
    }, {
      "left" : "requiredOpts.add(key);",
      "right" : "requiredOpts.add(key);",
      "info" : "ExpressionStatement[5506-5528]:ExpressionStatement[5506-5528]"
    }, {
      "left" : "shortOpts.put(key, opt);",
      "right" : "shortOpts.put(key, opt);",
      "info" : "ExpressionStatement[5548-5572]:ExpressionStatement[5548-5572]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5582-5594]:ReturnStatement[5582-5594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5809-5882]:Block[5809-5882]"
    }, {
      "left" : "return Collections.unmodifiableCollection(helpOptions());",
      "right" : "return Collections.unmodifiableCollection(helpOptions());",
      "info" : "ReturnStatement[5819-5876]:ReturnStatement[5819-5876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6034-6099]:Block[6034-6099]"
    }, {
      "left" : "return new ArrayList<Option>(shortOpts.values());",
      "right" : "return new ArrayList<Option>(shortOpts.values());",
      "info" : "ReturnStatement[6044-6093]:ReturnStatement[6044-6093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6252-6318]:Block[6252-6318]"
    }, {
      "left" : "return Collections.unmodifiableList(requiredOpts);",
      "right" : "return Collections.unmodifiableList(requiredOpts);",
      "info" : "ReturnStatement[6262-6312]:ReturnStatement[6262-6312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6631-6818]:Block[6631-6818]"
    }, {
      "left" : "opt = Util.stripLeadingHyphens(opt);",
      "right" : "opt = Util.stripLeadingHyphens(opt);",
      "info" : "ExpressionStatement[6641-6677]:ExpressionStatement[6641-6677]"
    }, {
      "left" : "if (shortOpts.containsKey(opt))",
      "right" : "if (shortOpts.containsKey(opt))",
      "info" : "IfStatement[6687-6777]:IfStatement[6687-6777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6727-6777]:Block[6727-6777]"
    }, {
      "left" : "return shortOpts.get(opt);",
      "right" : "return shortOpts.get(opt);",
      "info" : "ReturnStatement[6741-6767]:ReturnStatement[6741-6767]"
    }, {
      "left" : "return longOpts.get(opt);",
      "right" : "return longOpts.get(opt);",
      "info" : "ReturnStatement[6787-6812]:ReturnStatement[6787-6812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7145-7549]:Block[7145-7656]"
    }, {
      "left" : "opt = Util.stripLeadingHyphens(opt);",
      "right" : "opt = Util.stripLeadingHyphens(opt);",
      "info" : "ExpressionStatement[7155-7191]:ExpressionStatement[7155-7191]"
    }, {
      "left" : "List<String> matchingOpts = new ArrayList<String>();",
      "right" : "List<String> matchingOpts = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[7209-7261]:VariableDeclarationStatement[7209-7261]"
    }, {
      "left" : "for (String longOpt : longOpts.keySet())",
      "right" : "for (String longOpt : longOpts.keySet())",
      "info" : "EnhancedForStatement[7333-7505]:EnhancedForStatement[7440-7612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7382-7505]:Block[7489-7612]"
    }, {
      "left" : "if (longOpt.startsWith(opt))",
      "right" : "if (longOpt.startsWith(opt))",
      "info" : "IfStatement[7396-7495]:IfStatement[7503-7602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7437-7495]:Block[7544-7602]"
    }, {
      "left" : "matchingOpts.add(longOpt);",
      "right" : "matchingOpts.add(longOpt);",
      "info" : "ExpressionStatement[7455-7481]:ExpressionStatement[7562-7588]"
    }, {
      "left" : "return matchingOpts;",
      "right" : "return matchingOpts;",
      "info" : "ReturnStatement[7523-7543]:ReturnStatement[7630-7650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7847-7972]:Block[7954-8079]"
    }, {
      "left" : "opt = Util.stripLeadingHyphens(opt);",
      "right" : "opt = Util.stripLeadingHyphens(opt);",
      "info" : "ExpressionStatement[7857-7893]:ExpressionStatement[7964-8000]"
    }, {
      "left" : "return shortOpts.containsKey(opt) || longOpts.containsKey(opt);",
      "right" : "return shortOpts.containsKey(opt) || longOpts.containsKey(opt);",
      "info" : "ReturnStatement[7903-7966]:ReturnStatement[8010-8073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8283-8378]:Block[8390-8485]"
    }, {
      "left" : "opt = Util.stripLeadingHyphens(opt);",
      "right" : "opt = Util.stripLeadingHyphens(opt);",
      "info" : "ExpressionStatement[8293-8329]:ExpressionStatement[8400-8436]"
    }, {
      "left" : "return longOpts.containsKey(opt);",
      "right" : "return longOpts.containsKey(opt);",
      "info" : "ReturnStatement[8339-8372]:ReturnStatement[8446-8479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8691-8787]:Block[8798-8894]"
    }, {
      "left" : "opt = Util.stripLeadingHyphens(opt);",
      "right" : "opt = Util.stripLeadingHyphens(opt);",
      "info" : "ExpressionStatement[8701-8737]:ExpressionStatement[8808-8844]"
    }, {
      "left" : "return shortOpts.containsKey(opt);",
      "right" : "return shortOpts.containsKey(opt);",
      "info" : "ReturnStatement[8747-8781]:ReturnStatement[8854-8888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9102-9156]:Block[9209-9263]"
    }, {
      "left" : "return optionGroups.get(opt.getKey());",
      "right" : "return optionGroups.get(opt.getKey());",
      "info" : "ReturnStatement[9112-9150]:ReturnStatement[9219-9257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9318-9582]:Block[9425-9689]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder();",
      "right" : "StringBuilder buf = new StringBuilder();",
      "info" : "VariableDeclarationStatement[9328-9368]:VariableDeclarationStatement[9435-9475]"
    }, {
      "left" : "buf.append(\"[ Options: [
 short \");",
      "right" : "buf.append(\"[ Options: [
 short \");",
      "info" : "ExpressionStatement[9378-9412]:ExpressionStatement[9485-9519]"
    }, {
      "left" : "buf.append(shortOpts.toString());",
      "right" : "buf.append(shortOpts.toString());",
      "info" : "ExpressionStatement[9421-9454]:ExpressionStatement[9528-9561]"
    }, {
      "left" : "buf.append(\" ] [ long \");",
      "right" : "buf.append(\" ] [ long \");",
      "info" : "ExpressionStatement[9463-9488]:ExpressionStatement[9570-9595]"
    }, {
      "left" : "buf.append(longOpts);",
      "right" : "buf.append(longOpts);",
      "info" : "ExpressionStatement[9497-9518]:ExpressionStatement[9604-9625]"
    }, {
      "left" : "buf.append(\" ]\");",
      "right" : "buf.append(\" ]\");",
      "info" : "ExpressionStatement[9527-9544]:ExpressionStatement[9634-9651]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[9554-9576]:ReturnStatement[9661-9683]"
    } ]
  },
  "interFileMappings" : { }
}