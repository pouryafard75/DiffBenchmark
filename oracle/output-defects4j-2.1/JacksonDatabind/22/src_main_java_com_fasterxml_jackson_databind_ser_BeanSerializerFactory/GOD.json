{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BeanSerializerFactory",
      "right" : "BeanSerializerFactory",
      "info" : "TypeDeclaration[1153-35487]:TypeDeclaration[1153-35499]"
    }, {
      "left" : "private static final long serialVersionUID = 1;",
      "right" : "private static final long serialVersionUID = 1;",
      "info" : "FieldDeclaration[2720-2767]:FieldDeclaration[2720-2767]"
    }, {
      "left" : "public final static BeanSerializerFactory instance = new BeanSerializerFactory(null);",
      "right" : "public final static BeanSerializerFactory instance = new BeanSerializerFactory(null);",
      "info" : "FieldDeclaration[2773-3057]:FieldDeclaration[2773-3057]"
    }, {
      "left" : "protected BeanSerializerFactory(SerializerFactoryConfig config)",
      "right" : "protected BeanSerializerFactory(SerializerFactoryConfig config)",
      "info" : "MethodDeclaration[3250-3436]:MethodDeclaration[3250-3436]"
    }, {
      "left" : "public SerializerFactory withConfig(SerializerFactoryConfig config)",
      "right" : "public SerializerFactory withConfig(SerializerFactoryConfig config)",
      "info" : "MethodDeclaration[3446-4772]:MethodDeclaration[3446-4772]"
    }, {
      "left" : "protected Iterable<Serializers> customSerializers()",
      "right" : "protected Iterable<Serializers> customSerializers()",
      "info" : "MethodDeclaration[4778-4896]:MethodDeclaration[4778-4896]"
    }, {
      "left" : "public JsonSerializer<Object> createSerializer(SerializerProvider prov,\n            JavaType origType)\n        throws JsonMappingException",
      "right" : "public JsonSerializer<Object> createSerializer(SerializerProvider prov,\n            JavaType origType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[5080-7770]:MethodDeclaration[5080-7770]"
    }, {
      "left" : "protected JsonSerializer<?> _createSerializer2(SerializerProvider prov,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> _createSerializer2(SerializerProvider prov,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7776-11573]:MethodDeclaration[7776-11585]"
    }, {
      "left" : "public JsonSerializer<Object> findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonSerializer<Object> findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[11809-12507]:MethodDeclaration[11821-12519]"
    }, {
      "left" : "public TypeSerializer findPropertyTypeSerializer(JavaType baseType,\n            SerializationConfig config, AnnotatedMember accessor)\n        throws JsonMappingException",
      "right" : "public TypeSerializer findPropertyTypeSerializer(JavaType baseType,\n            SerializationConfig config, AnnotatedMember accessor)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[12513-13765]:MethodDeclaration[12525-13777]"
    }, {
      "left" : "public TypeSerializer findPropertyContentTypeSerializer(JavaType containerType,\n            SerializationConfig config, AnnotatedMember accessor)\n        throws JsonMappingException",
      "right" : "public TypeSerializer findPropertyContentTypeSerializer(JavaType containerType,\n            SerializationConfig config, AnnotatedMember accessor)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[13771-15148]:MethodDeclaration[13783-15160]"
    }, {
      "left" : "protected JsonSerializer<Object> constructBeanSerializer(SerializerProvider prov,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<Object> constructBeanSerializer(SerializerProvider prov,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[15344-20400]:MethodDeclaration[15356-20412]"
    }, {
      "left" : "protected ObjectIdWriter constructObjectIdHandler(SerializerProvider prov,\n            BeanDescription beanDesc, List<BeanPropertyWriter> props)\n        throws JsonMappingException",
      "right" : "protected ObjectIdWriter constructObjectIdHandler(SerializerProvider prov,\n            BeanDescription beanDesc, List<BeanPropertyWriter> props)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[20406-22816]:MethodDeclaration[20418-22828]"
    }, {
      "left" : "protected BeanPropertyWriter constructFilteredBeanWriter(BeanPropertyWriter writer,\n            Class<?>[] inViews)",
      "right" : "protected BeanPropertyWriter constructFilteredBeanWriter(BeanPropertyWriter writer,\n            Class<?>[] inViews)",
      "info" : "MethodDeclaration[22822-23249]:MethodDeclaration[22834-23261]"
    }, {
      "left" : "protected PropertyBuilder constructPropertyBuilder(SerializationConfig config,\n            BeanDescription beanDesc)",
      "right" : "protected PropertyBuilder constructPropertyBuilder(SerializationConfig config,\n            BeanDescription beanDesc)",
      "info" : "MethodDeclaration[23259-23441]:MethodDeclaration[23271-23453]"
    }, {
      "left" : "protected BeanSerializerBuilder constructBeanSerializerBuilder(BeanDescription beanDesc)",
      "right" : "protected BeanSerializerBuilder constructBeanSerializerBuilder(BeanDescription beanDesc)",
      "info" : "MethodDeclaration[23447-23595]:MethodDeclaration[23459-23607]"
    }, {
      "left" : "protected boolean isPotentialBeanType(Class<?> type)",
      "right" : "protected boolean isPotentialBeanType(Class<?> type)",
      "info" : "MethodDeclaration[23805-24292]:MethodDeclaration[23817-24304]"
    }, {
      "left" : "protected List<BeanPropertyWriter> findBeanProperties(SerializerProvider prov,\n            BeanDescription beanDesc, BeanSerializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected List<BeanPropertyWriter> findBeanProperties(SerializerProvider prov,\n            BeanDescription beanDesc, BeanSerializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[24298-26878]:MethodDeclaration[24310-26890]"
    }, {
      "left" : "protected List<BeanPropertyWriter> filterBeanProperties(SerializationConfig config,\n            BeanDescription beanDesc, List<BeanPropertyWriter> props)",
      "right" : "protected List<BeanPropertyWriter> filterBeanProperties(SerializationConfig config,\n            BeanDescription beanDesc, List<BeanPropertyWriter> props)",
      "info" : "MethodDeclaration[27103-27989]:MethodDeclaration[27115-28001]"
    }, {
      "left" : "protected void processViews(SerializationConfig config, BeanSerializerBuilder builder)",
      "right" : "protected void processViews(SerializationConfig config, BeanSerializerBuilder builder)",
      "info" : "MethodDeclaration[27995-29693]:MethodDeclaration[28007-29705]"
    }, {
      "left" : "protected void removeIgnorableTypes(SerializationConfig config, BeanDescription beanDesc,\n            List<BeanPropertyDefinition> properties)",
      "right" : "protected void removeIgnorableTypes(SerializationConfig config, BeanDescription beanDesc,\n            List<BeanPropertyDefinition> properties)",
      "info" : "MethodDeclaration[29699-31271]:MethodDeclaration[29711-31283]"
    }, {
      "left" : "protected void removeSetterlessGetters(SerializationConfig config, BeanDescription beanDesc,\n            List<BeanPropertyDefinition> properties)",
      "right" : "protected void removeSetterlessGetters(SerializationConfig config, BeanDescription beanDesc,\n            List<BeanPropertyDefinition> properties)",
      "info" : "MethodDeclaration[31277-31962]:MethodDeclaration[31289-31974]"
    }, {
      "left" : "protected List<BeanPropertyWriter> removeOverlappingTypeIds(SerializerProvider prov,\n            BeanDescription beanDesc, BeanSerializerBuilder builder,\n            List<BeanPropertyWriter> props)",
      "right" : "protected List<BeanPropertyWriter> removeOverlappingTypeIds(SerializerProvider prov,\n            BeanDescription beanDesc, BeanSerializerBuilder builder,\n            List<BeanPropertyWriter> props)",
      "info" : "MethodDeclaration[31968-33011]:MethodDeclaration[31980-33023]"
    }, {
      "left" : "protected BeanPropertyWriter _constructWriter(SerializerProvider prov,\n            BeanPropertyDefinition propDef, TypeBindings typeContext,\n            PropertyBuilder pb, boolean staticTyping, AnnotatedMember accessor)\n        throws JsonMappingException",
      "right" : "protected BeanPropertyWriter _constructWriter(SerializerProvider prov,\n            BeanPropertyDefinition propDef, TypeBindings typeContext,\n            PropertyBuilder pb, boolean staticTyping, AnnotatedMember accessor)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[33196-35485]:MethodDeclaration[33208-35497]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3406-3436]:Block[3406-3436]"
    }, {
      "left" : "super(config);",
      "right" : "super(config);",
      "info" : "SuperConstructorInvocation[3416-3430]:SuperConstructorInvocation[3416-3430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3814-4772]:Block[3814-4772]"
    }, {
      "left" : "if (_factoryConfig == config)",
      "right" : "if (_factoryConfig == config)",
      "info" : "IfStatement[3824-3890]:IfStatement[3824-3890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3854-3890]:Block[3854-3890]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3868-3880]:ReturnStatement[3868-3880]"
    }, {
      "left" : "if (getClass() != BeanSerializerFactory.class)",
      "right" : "if (getClass() != BeanSerializerFactory.class)",
      "info" : "IfStatement[4374-4716]:IfStatement[4374-4716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4421-4716]:Block[4421-4716]"
    }, {
      "left" : "throw new IllegalStateException(\"Subtype of BeanSerializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalSerializers': can not instantiate subtype with \"\n                    +\"additional serializer definitions\");",
      "right" : "throw new IllegalStateException(\"Subtype of BeanSerializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalSerializers': can not instantiate subtype with \"\n                    +\"additional serializer definitions\");",
      "info" : "ThrowStatement[4435-4706]:ThrowStatement[4435-4706]"
    }, {
      "left" : "return new BeanSerializerFactory(config);",
      "right" : "return new BeanSerializerFactory(config);",
      "info" : "ReturnStatement[4725-4766]:ReturnStatement[4725-4766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4844-4896]:Block[4844-4896]"
    }, {
      "left" : "return _factoryConfig.serializers();",
      "right" : "return _factoryConfig.serializers();",
      "info" : "ReturnStatement[4854-4890]:ReturnStatement[4854-4890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5783-7770]:Block[5783-7770]"
    }, {
      "left" : "final SerializationConfig config = prov.getConfig();",
      "right" : "final SerializationConfig config = prov.getConfig();",
      "info" : "VariableDeclarationStatement[5878-5930]:VariableDeclarationStatement[5878-5930]"
    }, {
      "left" : "BeanDescription beanDesc = config.introspect(origType);",
      "right" : "BeanDescription beanDesc = config.introspect(origType);",
      "info" : "VariableDeclarationStatement[5939-5994]:VariableDeclarationStatement[5939-5994]"
    }, {
      "left" : "JsonSerializer<?> ser = findSerializerFromAnnotation(prov, beanDesc.getClassInfo());",
      "right" : "JsonSerializer<?> ser = findSerializerFromAnnotation(prov, beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[6003-6087]:VariableDeclarationStatement[6003-6087]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[6096-6173]:IfStatement[6096-6173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6113-6173]:Block[6113-6173]"
    }, {
      "left" : "return (JsonSerializer<Object>) ser;",
      "right" : "return (JsonSerializer<Object>) ser;",
      "info" : "ReturnStatement[6127-6163]:ReturnStatement[6127-6163]"
    }, {
      "left" : "boolean staticTyping;",
      "right" : "boolean staticTyping;",
      "info" : "VariableDeclarationStatement[6182-6203]:VariableDeclarationStatement[6182-6203]"
    }, {
      "left" : "JavaType type = modifyTypeByAnnotation(config, beanDesc.getClassInfo(), origType);",
      "right" : "JavaType type = modifyTypeByAnnotation(config, beanDesc.getClassInfo(), origType);",
      "info" : "VariableDeclarationStatement[6289-6371]:VariableDeclarationStatement[6289-6371]"
    }, {
      "left" : "if (type == origType)",
      "right" : "if (type == origType)",
      "info" : "IfStatement[6380-6744]:IfStatement[6380-6744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6402-6488]:Block[6402-6488]"
    }, {
      "left" : "staticTyping = false;",
      "right" : "staticTyping = false;",
      "info" : "ExpressionStatement[6457-6478]:ExpressionStatement[6457-6478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6494-6744]:Block[6494-6744]"
    }, {
      "left" : "staticTyping = true;",
      "right" : "staticTyping = true;",
      "info" : "ExpressionStatement[6587-6607]:ExpressionStatement[6587-6607]"
    }, {
      "left" : "if (!type.hasRawClass(origType.getRawClass()))",
      "right" : "if (!type.hasRawClass(origType.getRawClass()))",
      "info" : "IfStatement[6620-6734]:IfStatement[6620-6734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6667-6734]:Block[6667-6734]"
    }, {
      "left" : "beanDesc = config.introspect(type);",
      "right" : "beanDesc = config.introspect(type);",
      "info" : "ExpressionStatement[6685-6720]:ExpressionStatement[6685-6720]"
    }, {
      "left" : "Converter<Object,Object> conv = beanDesc.findSerializationConverter();",
      "right" : "Converter<Object,Object> conv = beanDesc.findSerializationConverter();",
      "info" : "VariableDeclarationStatement[6815-6885]:VariableDeclarationStatement[6815-6885]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[6894-7037]:IfStatement[6894-7037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6912-7037]:Block[6912-7037]"
    }, {
      "left" : "return (JsonSerializer<Object>) _createSerializer2(prov, type, beanDesc, staticTyping);",
      "right" : "return (JsonSerializer<Object>) _createSerializer2(prov, type, beanDesc, staticTyping);",
      "info" : "ReturnStatement[6940-7027]:ReturnStatement[6940-7027]"
    }, {
      "left" : "JavaType delegateType = conv.getOutputType(prov.getTypeFactory());",
      "right" : "JavaType delegateType = conv.getOutputType(prov.getTypeFactory());",
      "info" : "VariableDeclarationStatement[7046-7112]:VariableDeclarationStatement[7046-7112]"
    }, {
      "left" : "if (!delegateType.hasRawClass(type.getRawClass()))",
      "right" : "if (!delegateType.hasRawClass(type.getRawClass()))",
      "info" : "IfStatement[7211-7479]:IfStatement[7211-7479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7262-7479]:Block[7262-7479]"
    }, {
      "left" : "beanDesc = config.introspect(delegateType);",
      "right" : "beanDesc = config.introspect(delegateType);",
      "info" : "ExpressionStatement[7276-7319]:ExpressionStatement[7276-7319]"
    }, {
      "left" : "ser = findSerializerFromAnnotation(prov, beanDesc.getClassInfo());",
      "right" : "ser = findSerializerFromAnnotation(prov, beanDesc.getClassInfo());",
      "info" : "ExpressionStatement[7403-7469]:ExpressionStatement[7403-7469]"
    }, {
      "left" : "if (ser == null && !delegateType.isJavaLangObject())",
      "right" : "if (ser == null && !delegateType.isJavaLangObject())",
      "info" : "IfStatement[7557-7695]:IfStatement[7557-7695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7610-7695]:Block[7610-7695]"
    }, {
      "left" : "ser = _createSerializer2(prov, delegateType, beanDesc, true);",
      "right" : "ser = _createSerializer2(prov, delegateType, beanDesc, true);",
      "info" : "ExpressionStatement[7624-7685]:ExpressionStatement[7624-7685]"
    }, {
      "left" : "return new StdDelegatingSerializer(conv, delegateType, ser);",
      "right" : "return new StdDelegatingSerializer(conv, delegateType, ser);",
      "info" : "ReturnStatement[7704-7764]:ReturnStatement[7704-7764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7963-11573]:Block[7963-11585]"
    }, {
      "left" : "JsonSerializer<?> ser = findSerializerByAnnotations(prov, type, beanDesc);",
      "right" : "JsonSerializer<?> ser = null;",
      "info" : "VariableDeclarationStatement[7973-8047]:VariableDeclarationStatement[7973-8002]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[8056-8108]:IfStatement[9592-9697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8073-8108]:Block[9609-9697]"
    }, {
      "left" : "final SerializationConfig config = prov.getConfig();",
      "right" : "final SerializationConfig config = prov.getConfig();",
      "info" : "VariableDeclarationStatement[8117-8169]:VariableDeclarationStatement[8011-8063]"
    }, {
      "left" : "if (type.isContainerType())",
      "right" : "if (type.isContainerType())",
      "info" : "IfStatement[8318-9695]:IfStatement[8212-9707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8346-9207]:Block[8240-9101]"
    }, {
      "left" : "if (!staticTyping)",
      "right" : "if (!staticTyping)",
      "info" : "IfStatement[8360-8878]:IfStatement[8254-8772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8379-8878]:Block[8273-8772]"
    }, {
      "left" : "staticTyping = usesStaticTyping(config, beanDesc, null);",
      "right" : "staticTyping = usesStaticTyping(config, beanDesc, null);",
      "info" : "ExpressionStatement[8397-8453]:ExpressionStatement[8291-8347]"
    }, {
      "left" : "ser =  buildContainerSerializer(prov, type, beanDesc, staticTyping);",
      "right" : "ser =  buildContainerSerializer(prov, type, beanDesc, staticTyping);",
      "info" : "ExpressionStatement[8975-9043]:ExpressionStatement[8869-8937]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[9137-9197]:IfStatement[9031-9091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9154-9197]:Block[9048-9091]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[9172-9183]:ReturnStatement[9066-9077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9213-9695]:Block[9107-9707]"
    }, {
      "left" : "for (Serializers serializers : customSerializers())",
      "right" : "for (Serializers serializers : customSerializers())",
      "info" : "EnhancedForStatement[9289-9510]:EnhancedForStatement[9183-9404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9341-9510]:Block[9235-9404]"
    }, {
      "left" : "ser = serializers.findSerializer(config, type, beanDesc);",
      "right" : "ser = serializers.findSerializer(config, type, beanDesc);",
      "info" : "ExpressionStatement[9359-9416]:ExpressionStatement[9253-9310]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[9433-9496]:IfStatement[9327-9390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9450-9496]:Block[9344-9390]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9472-9478]:BreakStatement[9366-9372]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[9713-11205]:IfStatement[9725-11217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9730-11205]:Block[9742-11217]"
    }, {
      "left" : "ser = findSerializerByLookup(type, config, beanDesc, staticTyping);",
      "right" : "ser = findSerializerByLookup(type, config, beanDesc, staticTyping);",
      "info" : "ExpressionStatement[9957-10024]:ExpressionStatement[9969-10036]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[10037-11195]:IfStatement[10049-11207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10054-11195]:Block[10066-11207]"
    }, {
      "left" : "ser = findSerializerByPrimaryType(prov, type, beanDesc, staticTyping);",
      "right" : "ser = findSerializerByPrimaryType(prov, type, beanDesc, staticTyping);",
      "info" : "ExpressionStatement[10072-10142]:ExpressionStatement[10084-10154]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[10159-11181]:IfStatement[10171-11193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10176-11181]:Block[10188-11193]"
    }, {
      "left" : "ser = findBeanSerializer(prov, type, beanDesc);",
      "right" : "ser = findBeanSerializer(prov, type, beanDesc);",
      "info" : "ExpressionStatement[10445-10492]:ExpressionStatement[10457-10504]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[10627-11163]:IfStatement[10639-11175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10644-11163]:Block[10656-11175]"
    }, {
      "left" : "ser = findSerializerByAddonType(config, type, beanDesc, staticTyping);",
      "right" : "ser = findSerializerByAddonType(config, type, beanDesc, staticTyping);",
      "info" : "ExpressionStatement[10670-10740]:ExpressionStatement[10682-10752]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[11007-11141]:IfStatement[11019-11153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11024-11141]:Block[11036-11153]"
    }, {
      "left" : "ser = prov.getUnknownTypeSerializer(beanDesc.getBeanClass());",
      "right" : "ser = prov.getUnknownTypeSerializer(beanDesc.getBeanClass());",
      "info" : "ExpressionStatement[11054-11115]:ExpressionStatement[11066-11127]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[11214-11547]:IfStatement[11226-11559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11231-11547]:Block[11243-11559]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[11298-11537]:IfStatement[11310-11549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11343-11537]:Block[11355-11549]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[11361-11523]:EnhancedForStatement[11373-11535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11433-11523]:Block[11445-11535]"
    }, {
      "left" : "ser = mod.modifySerializer(config, beanDesc, ser);",
      "right" : "ser = mod.modifySerializer(config, beanDesc, ser);",
      "info" : "ExpressionStatement[11455-11505]:ExpressionStatement[11467-11517]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[11556-11567]:ReturnStatement[11568-11579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12111-12507]:Block[12123-12519]"
    }, {
      "left" : "if (!isPotentialBeanType(type.getRawClass()))",
      "right" : "if (!isPotentialBeanType(type.getRawClass()))",
      "info" : "IfStatement[12188-12445]:IfStatement[12200-12457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12234-12445]:Block[12246-12457]"
    }, {
      "left" : "if (!type.isEnumType())",
      "right" : "if (!type.isEnumType())",
      "info" : "IfStatement[12367-12435]:IfStatement[12379-12447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12391-12435]:Block[12403-12447]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[12409-12421]:ReturnStatement[12421-12433]"
    }, {
      "left" : "return constructBeanSerializer(prov, beanDesc);",
      "right" : "return constructBeanSerializer(prov, beanDesc);",
      "info" : "ReturnStatement[12454-12501]:ReturnStatement[12466-12513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13116-13765]:Block[13128-13777]"
    }, {
      "left" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[13126-13189]:VariableDeclarationStatement[13138-13201]"
    }, {
      "left" : "TypeResolverBuilder<?> b = ai.findPropertyTypeResolver(config, accessor, baseType);",
      "right" : "TypeResolverBuilder<?> b = ai.findPropertyTypeResolver(config, accessor, baseType);",
      "info" : "VariableDeclarationStatement[13198-13281]:VariableDeclarationStatement[13210-13293]"
    }, {
      "left" : "TypeSerializer typeSer;",
      "right" : "TypeSerializer typeSer;",
      "info" : "VariableDeclarationStatement[13298-13321]:VariableDeclarationStatement[13310-13333]"
    }, {
      "left" : "if (b == null)",
      "right" : "if (b == null)",
      "info" : "IfStatement[13401-13735]:IfStatement[13413-13747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13416-13489]:Block[13428-13501]"
    }, {
      "left" : "typeSer = createTypeSerializer(config, baseType);",
      "right" : "typeSer = createTypeSerializer(config, baseType);",
      "info" : "ExpressionStatement[13430-13479]:ExpressionStatement[13442-13491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13495-13735]:Block[13507-13747]"
    }, {
      "left" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByClass(\n                    config, accessor, baseType);",
      "right" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByClass(\n                    config, accessor, baseType);",
      "info" : "VariableDeclarationStatement[13509-13652]:VariableDeclarationStatement[13521-13664]"
    }, {
      "left" : "typeSer = b.buildTypeSerializer(config, baseType, subtypes);",
      "right" : "typeSer = b.buildTypeSerializer(config, baseType, subtypes);",
      "info" : "ExpressionStatement[13665-13725]:ExpressionStatement[13677-13737]"
    }, {
      "left" : "return typeSer;",
      "right" : "return typeSer;",
      "info" : "ReturnStatement[13744-13759]:ReturnStatement[13756-13771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14416-15148]:Block[14428-15160]"
    }, {
      "left" : "JavaType contentType = containerType.getContentType();",
      "right" : "JavaType contentType = containerType.getContentType();",
      "info" : "VariableDeclarationStatement[14426-14480]:VariableDeclarationStatement[14438-14492]"
    }, {
      "left" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[14489-14552]:VariableDeclarationStatement[14501-14564]"
    }, {
      "left" : "TypeResolverBuilder<?> b = ai.findPropertyContentTypeResolver(config, accessor, containerType);",
      "right" : "TypeResolverBuilder<?> b = ai.findPropertyContentTypeResolver(config, accessor, containerType);",
      "info" : "VariableDeclarationStatement[14561-14656]:VariableDeclarationStatement[14573-14668]"
    }, {
      "left" : "TypeSerializer typeSer;",
      "right" : "TypeSerializer typeSer;",
      "info" : "VariableDeclarationStatement[14673-14696]:VariableDeclarationStatement[14685-14708]"
    }, {
      "left" : "if (b == null)",
      "right" : "if (b == null)",
      "info" : "IfStatement[14776-15118]:IfStatement[14788-15130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14791-14867]:Block[14803-14879]"
    }, {
      "left" : "typeSer = createTypeSerializer(config, contentType);",
      "right" : "typeSer = createTypeSerializer(config, contentType);",
      "info" : "ExpressionStatement[14805-14857]:ExpressionStatement[14817-14869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14873-15118]:Block[14885-15130]"
    }, {
      "left" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByClass(config,\n                    accessor, contentType);",
      "right" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByClass(config,\n                    accessor, contentType);",
      "info" : "VariableDeclarationStatement[14887-15032]:VariableDeclarationStatement[14899-15044]"
    }, {
      "left" : "typeSer = b.buildTypeSerializer(config, contentType, subtypes);",
      "right" : "typeSer = b.buildTypeSerializer(config, contentType, subtypes);",
      "info" : "ExpressionStatement[15045-15108]:ExpressionStatement[15057-15120]"
    }, {
      "left" : "return typeSer;",
      "right" : "return typeSer;",
      "info" : "ReturnStatement[15127-15142]:ReturnStatement[15139-15154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15663-20400]:Block[15675-20412]"
    }, {
      "left" : "if (beanDesc.getBeanClass() == Object.class)",
      "right" : "if (beanDesc.getBeanClass() == Object.class)",
      "info" : "IfStatement[15881-16102]:IfStatement[15893-16114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15926-16102]:Block[15938-16114]"
    }, {
      "left" : "return prov.getUnknownTypeSerializer(Object.class);",
      "right" : "return prov.getUnknownTypeSerializer(Object.class);",
      "info" : "ReturnStatement[15940-15991]:ReturnStatement[15952-16003]"
    }, {
      "left" : "final SerializationConfig config = prov.getConfig();",
      "right" : "final SerializationConfig config = prov.getConfig();",
      "info" : "VariableDeclarationStatement[16111-16163]:VariableDeclarationStatement[16123-16175]"
    }, {
      "left" : "BeanSerializerBuilder builder = constructBeanSerializerBuilder(beanDesc);",
      "right" : "BeanSerializerBuilder builder = constructBeanSerializerBuilder(beanDesc);",
      "info" : "VariableDeclarationStatement[16172-16245]:VariableDeclarationStatement[16184-16257]"
    }, {
      "left" : "builder.setConfig(config);",
      "right" : "builder.setConfig(config);",
      "info" : "ExpressionStatement[16254-16280]:ExpressionStatement[16266-16292]"
    }, {
      "left" : "List<BeanPropertyWriter> props = findBeanProperties(prov, beanDesc, builder);",
      "right" : "List<BeanPropertyWriter> props = findBeanProperties(prov, beanDesc, builder);",
      "info" : "VariableDeclarationStatement[16375-16452]:VariableDeclarationStatement[16387-16464]"
    }, {
      "left" : "if (props == null)",
      "right" : "if (props == null)",
      "info" : "IfStatement[16461-16643]:IfStatement[16473-16655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16480-16548]:Block[16492-16560]"
    }, {
      "left" : "props = new ArrayList<BeanPropertyWriter>();",
      "right" : "props = new ArrayList<BeanPropertyWriter>();",
      "info" : "ExpressionStatement[16494-16538]:ExpressionStatement[16506-16550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16554-16643]:Block[16566-16655]"
    }, {
      "left" : "props = removeOverlappingTypeIds(prov, beanDesc, builder, props);",
      "right" : "props = removeOverlappingTypeIds(prov, beanDesc, builder, props);",
      "info" : "ExpressionStatement[16568-16633]:ExpressionStatement[16580-16645]"
    }, {
      "left" : "prov.getAnnotationIntrospector().findAndAddVirtualProperties(config, beanDesc.getClassInfo(), props);",
      "right" : "prov.getAnnotationIntrospector().findAndAddVirtualProperties(config, beanDesc.getClassInfo(), props);",
      "info" : "ExpressionStatement[16729-16830]:ExpressionStatement[16741-16842]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[16922-17149]:IfStatement[16934-17161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16967-17149]:Block[16979-17161]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[16981-17139]:EnhancedForStatement[16993-17151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17053-17139]:Block[17065-17151]"
    }, {
      "left" : "props = mod.changeProperties(config, beanDesc, props);",
      "right" : "props = mod.changeProperties(config, beanDesc, props);",
      "info" : "ExpressionStatement[17071-17125]:ExpressionStatement[17083-17137]"
    }, {
      "left" : "props = filterBeanProperties(config, beanDesc, props);",
      "right" : "props = filterBeanProperties(config, beanDesc, props);",
      "info" : "ExpressionStatement[17198-17252]:ExpressionStatement[17210-17264]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[17339-17565]:IfStatement[17351-17577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17384-17565]:Block[17396-17577]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[17398-17555]:EnhancedForStatement[17410-17567]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17470-17555]:Block[17482-17567]"
    }, {
      "left" : "props = mod.orderProperties(config, beanDesc, props);",
      "right" : "props = mod.orderProperties(config, beanDesc, props);",
      "info" : "ExpressionStatement[17488-17541]:ExpressionStatement[17500-17553]"
    }, {
      "left" : "builder.setObjectIdWriter(constructObjectIdHandler(prov, beanDesc, props));",
      "right" : "builder.setObjectIdWriter(constructObjectIdHandler(prov, beanDesc, props));",
      "info" : "ExpressionStatement[17778-17853]:ExpressionStatement[17790-17865]"
    }, {
      "left" : "builder.setProperties(props);",
      "right" : "builder.setProperties(props);",
      "info" : "ExpressionStatement[17871-17900]:ExpressionStatement[17883-17912]"
    }, {
      "left" : "builder.setFilterId(findFilterId(config, beanDesc));",
      "right" : "builder.setFilterId(findFilterId(config, beanDesc));",
      "info" : "ExpressionStatement[17909-17961]:ExpressionStatement[17921-17973]"
    }, {
      "left" : "AnnotatedMember anyGetter = beanDesc.findAnyGetter();",
      "right" : "AnnotatedMember anyGetter = beanDesc.findAnyGetter();",
      "info" : "VariableDeclarationStatement[17979-18032]:VariableDeclarationStatement[17991-18044]"
    }, {
      "left" : "if (anyGetter != null)",
      "right" : "if (anyGetter != null)",
      "info" : "IfStatement[18041-19464]:IfStatement[18053-19476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18064-19464]:Block[18076-19476]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[18078-18173]:IfStatement[18090-18185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18119-18173]:Block[18131-18185]"
    }, {
      "left" : "anyGetter.fixAccess();",
      "right" : "anyGetter.fixAccess();",
      "info" : "ExpressionStatement[18137-18159]:ExpressionStatement[18149-18171]"
    }, {
      "left" : "JavaType type = anyGetter.getType(beanDesc.bindingsForBeanType());",
      "right" : "JavaType type = anyGetter.getType(beanDesc.bindingsForBeanType());",
      "info" : "VariableDeclarationStatement[18186-18252]:VariableDeclarationStatement[18198-18264]"
    }, {
      "left" : "boolean staticTyping = config.isEnabled(MapperFeature.USE_STATIC_TYPING);",
      "right" : "boolean staticTyping = config.isEnabled(MapperFeature.USE_STATIC_TYPING);",
      "info" : "VariableDeclarationStatement[18337-18410]:VariableDeclarationStatement[18349-18422]"
    }, {
      "left" : "JavaType valueType = type.getContentType();",
      "right" : "JavaType valueType = type.getContentType();",
      "info" : "VariableDeclarationStatement[18423-18466]:VariableDeclarationStatement[18435-18478]"
    }, {
      "left" : "TypeSerializer typeSer = createTypeSerializer(config, valueType);",
      "right" : "TypeSerializer typeSer = createTypeSerializer(config, valueType);",
      "info" : "VariableDeclarationStatement[18479-18544]:VariableDeclarationStatement[18491-18556]"
    }, {
      "left" : "JsonSerializer<?> anySer = findSerializerFromAnnotation(prov, anyGetter);",
      "right" : "JsonSerializer<?> anySer = findSerializerFromAnnotation(prov, anyGetter);",
      "info" : "VariableDeclarationStatement[18710-18783]:VariableDeclarationStatement[18722-18795]"
    }, {
      "left" : "if (anySer == null)",
      "right" : "if (anySer == null)",
      "info" : "IfStatement[18796-19064]:IfStatement[18808-19076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18816-19064]:Block[18828-19076]"
    }, {
      "left" : "anySer = MapSerializer.construct(/* ignored props*/ null, type, staticTyping,\n                        typeSer, null, null, /*filterId*/ null);",
      "right" : "anySer = MapSerializer.construct(/* ignored props*/ null, type, staticTyping,\n                        typeSer, null, null, /*filterId*/ null);",
      "info" : "ExpressionStatement[18908-19050]:ExpressionStatement[18920-19062]"
    }, {
      "left" : "PropertyName name = PropertyName.construct(anyGetter.getName());",
      "right" : "PropertyName name = PropertyName.construct(anyGetter.getName());",
      "info" : "VariableDeclarationStatement[19129-19193]:VariableDeclarationStatement[19141-19205]"
    }, {
      "left" : "BeanProperty.Std anyProp = new BeanProperty.Std(name, valueType, null,\n                    beanDesc.getClassAnnotations(), anyGetter, PropertyMetadata.STD_OPTIONAL);",
      "right" : "BeanProperty.Std anyProp = new BeanProperty.Std(name, valueType, null,\n                    beanDesc.getClassAnnotations(), anyGetter, PropertyMetadata.STD_OPTIONAL);",
      "info" : "VariableDeclarationStatement[19206-19371]:VariableDeclarationStatement[19218-19383]"
    }, {
      "left" : "builder.setAnyGetter(new AnyGetterWriter(anyProp, anyGetter, anySer));",
      "right" : "builder.setAnyGetter(new AnyGetterWriter(anyProp, anyGetter, anySer));",
      "info" : "ExpressionStatement[19384-19454]:ExpressionStatement[19396-19466]"
    }, {
      "left" : "processViews(config, builder);",
      "right" : "processViews(config, builder);",
      "info" : "ExpressionStatement[19531-19561]:ExpressionStatement[19543-19573]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[19647-19875]:IfStatement[19659-19887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19692-19875]:Block[19704-19887]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[19706-19865]:EnhancedForStatement[19718-19877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19778-19865]:Block[19790-19877]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[19796-19851]:ExpressionStatement[19808-19863]"
    }, {
      "left" : "JsonSerializer<Object> ser = (JsonSerializer<Object>) builder.build();",
      "right" : "JsonSerializer<Object> ser = (JsonSerializer<Object>) builder.build();",
      "info" : "VariableDeclarationStatement[19893-19963]:VariableDeclarationStatement[19905-19975]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[19981-20374]:IfStatement[19993-20386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19998-20374]:Block[20010-20386]"
    }, {
      "left" : "if (beanDesc.hasKnownClassAnnotations())",
      "right" : "if (beanDesc.hasKnownClassAnnotations())",
      "info" : "IfStatement[20262-20364]:IfStatement[20274-20376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20303-20364]:Block[20315-20376]"
    }, {
      "left" : "return builder.createDummy();",
      "right" : "return builder.createDummy();",
      "info" : "ReturnStatement[20321-20350]:ReturnStatement[20333-20362]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[20383-20394]:ReturnStatement[20395-20406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20591-22816]:Block[20603-22828]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "info" : "VariableDeclarationStatement[20601-20656]:VariableDeclarationStatement[20613-20668]"
    }, {
      "left" : "if (objectIdInfo == null)",
      "right" : "if (objectIdInfo == null)",
      "info" : "IfStatement[20665-20727]:IfStatement[20677-20739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20691-20727]:Block[20703-20739]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20705-20717]:ReturnStatement[20717-20729]"
    }, {
      "left" : "ObjectIdGenerator<?> gen;",
      "right" : "ObjectIdGenerator<?> gen;",
      "info" : "VariableDeclarationStatement[20736-20761]:VariableDeclarationStatement[20748-20773]"
    }, {
      "left" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "right" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "info" : "VariableDeclarationStatement[20770-20823]:VariableDeclarationStatement[20782-20835]"
    }, {
      "left" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "right" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "info" : "IfStatement[20904-22307]:IfStatement[20916-22319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20965-22307]:Block[20977-22319]"
    }, {
      "left" : "String propName = objectIdInfo.getPropertyName().getSimpleName();",
      "right" : "String propName = objectIdInfo.getPropertyName().getSimpleName();",
      "info" : "VariableDeclarationStatement[21017-21082]:VariableDeclarationStatement[21029-21094]"
    }, {
      "left" : "BeanPropertyWriter idProp = null;",
      "right" : "BeanPropertyWriter idProp = null;",
      "info" : "VariableDeclarationStatement[21095-21128]:VariableDeclarationStatement[21107-21140]"
    }, {
      "left" : "for (int i = 0, len = props.size() ;; ++i)",
      "right" : "for (int i = 0, len = props.size() ;; ++i)",
      "info" : "ForStatement[21142-21953]:ForStatement[21154-21965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21185-21953]:Block[21197-21965]"
    }, {
      "left" : "if (i == len)",
      "right" : "if (i == len)",
      "info" : "IfStatement[21203-21443]:IfStatement[21215-21455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21217-21443]:Block[21229-21455]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"+beanDesc.getBeanClass().getName()\n                            +\": can not find property with name '\"+propName+\"'\");",
      "right" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"+beanDesc.getBeanClass().getName()\n                            +\": can not find property with name '\"+propName+\"'\");",
      "info" : "ThrowStatement[21239-21425]:ThrowStatement[21251-21437]"
    }, {
      "left" : "BeanPropertyWriter prop = props.get(i);",
      "right" : "BeanPropertyWriter prop = props.get(i);",
      "info" : "VariableDeclarationStatement[21460-21499]:VariableDeclarationStatement[21472-21511]"
    }, {
      "left" : "if (propName.equals(prop.getName()))",
      "right" : "if (propName.equals(prop.getName()))",
      "info" : "IfStatement[21516-21939]:IfStatement[21528-21951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21553-21939]:Block[21565-21951]"
    }, {
      "left" : "idProp = prop;",
      "right" : "idProp = prop;",
      "info" : "ExpressionStatement[21575-21589]:ExpressionStatement[21587-21601]"
    }, {
      "left" : "if (i > 0)",
      "right" : "if (i > 0)",
      "info" : "IfStatement[21773-21894]:IfStatement[21785-21906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21784-21894]:Block[21796-21906]"
    }, {
      "left" : "props.remove(i);",
      "right" : "props.remove(i);",
      "info" : "ExpressionStatement[21810-21826]:ExpressionStatement[21822-21838]"
    }, {
      "left" : "props.add(0, idProp);",
      "right" : "props.add(0, idProp);",
      "info" : "ExpressionStatement[21851-21872]:ExpressionStatement[21863-21884]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21915-21921]:BreakStatement[21927-21933]"
    }, {
      "left" : "JavaType idType = idProp.getType();",
      "right" : "JavaType idType = idProp.getType();",
      "info" : "VariableDeclarationStatement[21966-22001]:VariableDeclarationStatement[21978-22013]"
    }, {
      "left" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo, idProp);",
      "right" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo, idProp);",
      "info" : "ExpressionStatement[22014-22077]:ExpressionStatement[22026-22089]"
    }, {
      "left" : "return ObjectIdWriter.construct(idType, (PropertyName) null, gen, objectIdInfo.getAlwaysAsId());",
      "right" : "return ObjectIdWriter.construct(idType, (PropertyName) null, gen, objectIdInfo.getAlwaysAsId());",
      "info" : "ReturnStatement[22188-22284]:ReturnStatement[22200-22296]"
    }, {
      "left" : "JavaType type = prov.constructType(implClass);",
      "right" : "JavaType type = prov.constructType(implClass);",
      "info" : "VariableDeclarationStatement[22352-22398]:VariableDeclarationStatement[22364-22410]"
    }, {
      "left" : "JavaType idType = prov.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "right" : "JavaType idType = prov.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "info" : "VariableDeclarationStatement[22500-22593]:VariableDeclarationStatement[22512-22605]"
    }, {
      "left" : "gen = prov.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "gen = prov.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "ExpressionStatement[22602-22678]:ExpressionStatement[22614-22690]"
    }, {
      "left" : "return ObjectIdWriter.construct(idType, objectIdInfo.getPropertyName(), gen,\n                objectIdInfo.getAlwaysAsId());",
      "right" : "return ObjectIdWriter.construct(idType, objectIdInfo.getPropertyName(), gen,\n                objectIdInfo.getAlwaysAsId());",
      "info" : "ReturnStatement[22687-22810]:ReturnStatement[22699-22822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23163-23249]:Block[23175-23261]"
    }, {
      "left" : "return FilteredBeanPropertyWriter.constructViewBased(writer, inViews);",
      "right" : "return FilteredBeanPropertyWriter.constructViewBased(writer, inViews);",
      "info" : "ReturnStatement[23173-23243]:ReturnStatement[23185-23255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23380-23441]:Block[23392-23453]"
    }, {
      "left" : "return new PropertyBuilder(config, beanDesc);",
      "right" : "return new PropertyBuilder(config, beanDesc);",
      "info" : "ReturnStatement[23390-23435]:ReturnStatement[23402-23447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23536-23595]:Block[23548-23607]"
    }, {
      "left" : "return new BeanSerializerBuilder(beanDesc);",
      "right" : "return new BeanSerializerBuilder(beanDesc);",
      "info" : "ReturnStatement[23546-23589]:ReturnStatement[23558-23601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24196-24292]:Block[24208-24304]"
    }, {
      "left" : "return (ClassUtil.canBeABeanType(type) == null) && !ClassUtil.isProxyType(type);",
      "right" : "return (ClassUtil.canBeABeanType(type) == null) && !ClassUtil.isProxyType(type);",
      "info" : "ReturnStatement[24206-24286]:ReturnStatement[24218-24298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24632-26878]:Block[24644-26890]"
    }, {
      "left" : "List<BeanPropertyDefinition> properties = beanDesc.findProperties();",
      "right" : "List<BeanPropertyDefinition> properties = beanDesc.findProperties();",
      "info" : "VariableDeclarationStatement[24642-24710]:VariableDeclarationStatement[24654-24722]"
    }, {
      "left" : "final SerializationConfig config = prov.getConfig();",
      "right" : "final SerializationConfig config = prov.getConfig();",
      "info" : "VariableDeclarationStatement[24719-24771]:VariableDeclarationStatement[24731-24783]"
    }, {
      "left" : "removeIgnorableTypes(config, beanDesc, properties);",
      "right" : "removeIgnorableTypes(config, beanDesc, properties);",
      "info" : "ExpressionStatement[24830-24881]:ExpressionStatement[24842-24893]"
    }, {
      "left" : "if (config.isEnabled(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS))",
      "right" : "if (config.isEnabled(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS))",
      "info" : "IfStatement[24963-25106]:IfStatement[24975-25118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25028-25106]:Block[25040-25118]"
    }, {
      "left" : "removeSetterlessGetters(config, beanDesc, properties);",
      "right" : "removeSetterlessGetters(config, beanDesc, properties);",
      "info" : "ExpressionStatement[25042-25096]:ExpressionStatement[25054-25108]"
    }, {
      "left" : "if (properties.isEmpty())",
      "right" : "if (properties.isEmpty())",
      "info" : "IfStatement[25201-25263]:IfStatement[25213-25275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25227-25263]:Block[25239-25275]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[25241-25253]:ReturnStatement[25253-25265]"
    }, {
      "left" : "boolean staticTyping = usesStaticTyping(config, beanDesc, null);",
      "right" : "boolean staticTyping = usesStaticTyping(config, beanDesc, null);",
      "info" : "VariableDeclarationStatement[25380-25444]:VariableDeclarationStatement[25392-25456]"
    }, {
      "left" : "PropertyBuilder pb = constructPropertyBuilder(config, beanDesc);",
      "right" : "PropertyBuilder pb = constructPropertyBuilder(config, beanDesc);",
      "info" : "VariableDeclarationStatement[25453-25517]:VariableDeclarationStatement[25465-25529]"
    }, {
      "left" : "ArrayList<BeanPropertyWriter> result = new ArrayList<BeanPropertyWriter>(properties.size());",
      "right" : "ArrayList<BeanPropertyWriter> result = new ArrayList<BeanPropertyWriter>(properties.size());",
      "info" : "VariableDeclarationStatement[25535-25627]:VariableDeclarationStatement[25547-25639]"
    }, {
      "left" : "TypeBindings typeBind = beanDesc.bindingsForBeanType();",
      "right" : "TypeBindings typeBind = beanDesc.bindingsForBeanType();",
      "info" : "VariableDeclarationStatement[25636-25691]:VariableDeclarationStatement[25648-25703]"
    }, {
      "left" : "for (BeanPropertyDefinition property : properties)",
      "right" : "for (BeanPropertyDefinition property : properties)",
      "info" : "EnhancedForStatement[25700-26849]:EnhancedForStatement[25712-26861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25751-26849]:Block[25763-26861]"
    }, {
      "left" : "final AnnotatedMember accessor = property.getAccessor();",
      "right" : "final AnnotatedMember accessor = property.getAccessor();",
      "info" : "VariableDeclarationStatement[25765-25821]:VariableDeclarationStatement[25777-25833]"
    }, {
      "left" : "if (property.isTypeId())",
      "right" : "if (property.isTypeId())",
      "info" : "IfStatement[25900-26251]:IfStatement[25912-26263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25925-26251]:Block[25937-26263]"
    }, {
      "left" : "if (accessor != null)",
      "right" : "if (accessor != null)",
      "info" : "IfStatement[25943-26211]:IfStatement[25955-26223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25965-26211]:Block[25977-26223]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[26034-26144]:IfStatement[26046-26156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26075-26144]:Block[26087-26156]"
    }, {
      "left" : "accessor.fixAccess();",
      "right" : "accessor.fixAccess();",
      "info" : "ExpressionStatement[26101-26122]:ExpressionStatement[26113-26134]"
    }, {
      "left" : "builder.setTypeId(accessor);",
      "right" : "builder.setTypeId(accessor);",
      "info" : "ExpressionStatement[26165-26193]:ExpressionStatement[26177-26205]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[26228-26237]:ContinueStatement[26240-26249]"
    }, {
      "left" : "AnnotationIntrospector.ReferenceProperty refType = property.findReferenceType();",
      "right" : "AnnotationIntrospector.ReferenceProperty refType = property.findReferenceType();",
      "info" : "VariableDeclarationStatement[26330-26410]:VariableDeclarationStatement[26342-26422]"
    }, {
      "left" : "if (refType != null && refType.isBackReference())",
      "right" : "if (refType != null && refType.isBackReference())",
      "info" : "IfStatement[26423-26514]:IfStatement[26435-26526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26473-26514]:Block[26485-26526]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[26491-26500]:ContinueStatement[26503-26512]"
    }, {
      "left" : "if (accessor instanceof AnnotatedMethod)",
      "right" : "if (accessor instanceof AnnotatedMethod)",
      "info" : "IfStatement[26527-26839]:IfStatement[26539-26851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26568-26701]:Block[26580-26713]"
    }, {
      "left" : "result.add(_constructWriter(prov, property, typeBind, pb, staticTyping, (AnnotatedMethod) accessor));",
      "right" : "result.add(_constructWriter(prov, property, typeBind, pb, staticTyping, (AnnotatedMethod) accessor));",
      "info" : "ExpressionStatement[26586-26687]:ExpressionStatement[26598-26699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26707-26839]:Block[26719-26851]"
    }, {
      "left" : "result.add(_constructWriter(prov, property, typeBind, pb, staticTyping, (AnnotatedField) accessor));",
      "right" : "result.add(_constructWriter(prov, property, typeBind, pb, staticTyping, (AnnotatedField) accessor));",
      "info" : "ExpressionStatement[26725-26825]:ExpressionStatement[26737-26837]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[26858-26872]:ReturnStatement[26870-26884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27400-27989]:Block[27412-28001]"
    }, {
      "left" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[27410-27475]:VariableDeclarationStatement[27422-27487]"
    }, {
      "left" : "AnnotatedClass ac = beanDesc.getClassInfo();",
      "right" : "AnnotatedClass ac = beanDesc.getClassInfo();",
      "info" : "VariableDeclarationStatement[27484-27528]:VariableDeclarationStatement[27496-27540]"
    }, {
      "left" : "String[] ignored = intr.findPropertiesToIgnore(ac, true);",
      "right" : "String[] ignored = intr.findPropertiesToIgnore(ac, true);",
      "info" : "VariableDeclarationStatement[27537-27594]:VariableDeclarationStatement[27549-27606]"
    }, {
      "left" : "if (ignored != null && ignored.length > 0)",
      "right" : "if (ignored != null && ignored.length > 0)",
      "info" : "IfStatement[27603-27961]:IfStatement[27615-27973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27646-27961]:Block[27658-27973]"
    }, {
      "left" : "HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(ignored);",
      "right" : "HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(ignored);",
      "info" : "VariableDeclarationStatement[27660-27723]:VariableDeclarationStatement[27672-27735]"
    }, {
      "left" : "Iterator<BeanPropertyWriter> it = props.iterator();",
      "right" : "Iterator<BeanPropertyWriter> it = props.iterator();",
      "info" : "VariableDeclarationStatement[27736-27787]:VariableDeclarationStatement[27748-27799]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[27800-27951]:WhileStatement[27812-27963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27821-27951]:Block[27833-27963]"
    }, {
      "left" : "if (ignoredSet.contains(it.next().getName()))",
      "right" : "if (ignoredSet.contains(it.next().getName()))",
      "info" : "IfStatement[27839-27937]:IfStatement[27851-27949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27885-27937]:Block[27897-27949]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[27907-27919]:ExpressionStatement[27919-27931]"
    }, {
      "left" : "return props;",
      "right" : "return props;",
      "info" : "ReturnStatement[27970-27983]:ReturnStatement[27982-27995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28483-29693]:Block[28495-29705]"
    }, {
      "left" : "List<BeanPropertyWriter> props = builder.getProperties();",
      "right" : "List<BeanPropertyWriter> props = builder.getProperties();",
      "info" : "VariableDeclarationStatement[28595-28652]:VariableDeclarationStatement[28607-28664]"
    }, {
      "left" : "boolean includeByDefault = config.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION);",
      "right" : "boolean includeByDefault = config.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION);",
      "info" : "VariableDeclarationStatement[28661-28743]:VariableDeclarationStatement[28673-28755]"
    }, {
      "left" : "final int propCount = props.size();",
      "right" : "final int propCount = props.size();",
      "info" : "VariableDeclarationStatement[28752-28787]:VariableDeclarationStatement[28764-28799]"
    }, {
      "left" : "int viewsFound = 0;",
      "right" : "int viewsFound = 0;",
      "info" : "VariableDeclarationStatement[28796-28815]:VariableDeclarationStatement[28808-28827]"
    }, {
      "left" : "BeanPropertyWriter[] filtered = new BeanPropertyWriter[propCount];",
      "right" : "BeanPropertyWriter[] filtered = new BeanPropertyWriter[propCount];",
      "info" : "VariableDeclarationStatement[28824-28890]:VariableDeclarationStatement[28836-28902]"
    }, {
      "left" : "for (int i = 0; i < propCount; ++i)",
      "right" : "for (int i = 0; i < propCount; ++i)",
      "info" : "ForStatement[28989-29448]:ForStatement[29001-29460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29025-29448]:Block[29037-29460]"
    }, {
      "left" : "BeanPropertyWriter bpw = props.get(i);",
      "right" : "BeanPropertyWriter bpw = props.get(i);",
      "info" : "VariableDeclarationStatement[29039-29077]:VariableDeclarationStatement[29051-29089]"
    }, {
      "left" : "Class<?>[] views = bpw.getViews();",
      "right" : "Class<?>[] views = bpw.getViews();",
      "info" : "VariableDeclarationStatement[29090-29124]:VariableDeclarationStatement[29102-29136]"
    }, {
      "left" : "if (views == null)",
      "right" : "if (views == null)",
      "info" : "IfStatement[29137-29438]:IfStatement[29149-29450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29156-29316]:Block[29168-29328]"
    }, {
      "left" : "if (includeByDefault)",
      "right" : "if (includeByDefault)",
      "info" : "IfStatement[29222-29302]:IfStatement[29234-29314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29244-29302]:Block[29256-29314]"
    }, {
      "left" : "filtered[i] = bpw;",
      "right" : "filtered[i] = bpw;",
      "info" : "ExpressionStatement[29266-29284]:ExpressionStatement[29278-29296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29322-29438]:Block[29334-29450]"
    }, {
      "left" : "++viewsFound;",
      "right" : "++viewsFound;",
      "info" : "ExpressionStatement[29340-29353]:ExpressionStatement[29352-29365]"
    }, {
      "left" : "filtered[i] = constructFilteredBeanWriter(bpw, views);",
      "right" : "filtered[i] = constructFilteredBeanWriter(bpw, views);",
      "info" : "ExpressionStatement[29370-29424]:ExpressionStatement[29382-29436]"
    }, {
      "left" : "if (includeByDefault && viewsFound == 0)",
      "right" : "if (includeByDefault && viewsFound == 0)",
      "info" : "IfStatement[29566-29638]:IfStatement[29578-29650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29607-29638]:Block[29619-29650]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[29621-29628]:ReturnStatement[29633-29640]"
    }, {
      "left" : "builder.setFilteredProperties(filtered);",
      "right" : "builder.setFilteredProperties(filtered);",
      "info" : "ExpressionStatement[29647-29687]:ExpressionStatement[29659-29699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30103-31271]:Block[30115-31283]"
    }, {
      "left" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[30113-30178]:VariableDeclarationStatement[30125-30190]"
    }, {
      "left" : "HashMap<Class<?>,Boolean> ignores = new HashMap<Class<?>,Boolean>();",
      "right" : "HashMap<Class<?>,Boolean> ignores = new HashMap<Class<?>,Boolean>();",
      "info" : "VariableDeclarationStatement[30187-30255]:VariableDeclarationStatement[30199-30267]"
    }, {
      "left" : "Iterator<BeanPropertyDefinition> it = properties.iterator();",
      "right" : "Iterator<BeanPropertyDefinition> it = properties.iterator();",
      "info" : "VariableDeclarationStatement[30264-30324]:VariableDeclarationStatement[30276-30336]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[30333-31265]:WhileStatement[30345-31277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30354-31265]:Block[30366-31277]"
    }, {
      "left" : "BeanPropertyDefinition property = it.next();",
      "right" : "BeanPropertyDefinition property = it.next();",
      "info" : "VariableDeclarationStatement[30368-30412]:VariableDeclarationStatement[30380-30424]"
    }, {
      "left" : "AnnotatedMember accessor = property.getAccessor();",
      "right" : "AnnotatedMember accessor = property.getAccessor();",
      "info" : "VariableDeclarationStatement[30425-30475]:VariableDeclarationStatement[30437-30487]"
    }, {
      "left" : "if (accessor == null)",
      "right" : "if (accessor == null)",
      "info" : "IfStatement[30488-30580]:IfStatement[30500-30592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30510-30580]:Block[30522-30592]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[30528-30540]:ExpressionStatement[30540-30552]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[30557-30566]:ContinueStatement[30569-30578]"
    }, {
      "left" : "Class<?> type = accessor.getRawType();",
      "right" : "Class<?> type = accessor.getRawType();",
      "info" : "VariableDeclarationStatement[30593-30631]:VariableDeclarationStatement[30605-30643]"
    }, {
      "left" : "Boolean result = ignores.get(type);",
      "right" : "Boolean result = ignores.get(type);",
      "info" : "VariableDeclarationStatement[30644-30679]:VariableDeclarationStatement[30656-30691]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[30692-31109]:IfStatement[30704-31121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30712-31109]:Block[30724-31121]"
    }, {
      "left" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "right" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "info" : "VariableDeclarationStatement[30730-30793]:VariableDeclarationStatement[30742-30805]"
    }, {
      "left" : "AnnotatedClass ac = desc.getClassInfo();",
      "right" : "AnnotatedClass ac = desc.getClassInfo();",
      "info" : "VariableDeclarationStatement[30810-30850]:VariableDeclarationStatement[30822-30862]"
    }, {
      "left" : "result = intr.isIgnorableType(ac);",
      "right" : "result = intr.isIgnorableType(ac);",
      "info" : "ExpressionStatement[30867-30901]:ExpressionStatement[30879-30913]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[30969-31052]:IfStatement[30981-31064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30989-31052]:Block[31001-31064]"
    }, {
      "left" : "result = Boolean.FALSE;",
      "right" : "result = Boolean.FALSE;",
      "info" : "ExpressionStatement[31011-31034]:ExpressionStatement[31023-31046]"
    }, {
      "left" : "ignores.put(type, result);",
      "right" : "ignores.put(type, result);",
      "info" : "ExpressionStatement[31069-31095]:ExpressionStatement[31081-31107]"
    }, {
      "left" : "if (result.booleanValue())",
      "right" : "if (result.booleanValue())",
      "info" : "IfStatement[31184-31255]:IfStatement[31196-31267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31211-31255]:Block[31223-31267]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[31229-31241]:ExpressionStatement[31241-31253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31524-31962]:Block[31536-31974]"
    }, {
      "left" : "Iterator<BeanPropertyDefinition> it = properties.iterator();",
      "right" : "Iterator<BeanPropertyDefinition> it = properties.iterator();",
      "info" : "VariableDeclarationStatement[31534-31594]:VariableDeclarationStatement[31546-31606]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[31603-31956]:WhileStatement[31615-31968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31624-31956]:Block[31636-31968]"
    }, {
      "left" : "BeanPropertyDefinition property = it.next();",
      "right" : "BeanPropertyDefinition property = it.next();",
      "info" : "VariableDeclarationStatement[31638-31682]:VariableDeclarationStatement[31650-31694]"
    }, {
      "left" : "if (!property.couldDeserialize() && !property.isExplicitlyIncluded())",
      "right" : "if (!property.couldDeserialize() && !property.isExplicitlyIncluded())",
      "info" : "IfStatement[31832-31946]:IfStatement[31844-31958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31902-31946]:Block[31914-31958]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[31920-31932]:ExpressionStatement[31932-31944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32330-33011]:Block[32342-33023]"
    }, {
      "left" : "for (int i = 0, end = props.size(); i < end; ++i)",
      "right" : "for (int i = 0, end = props.size(); i < end; ++i)",
      "info" : "ForStatement[32340-32983]:ForStatement[32352-32995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32390-32983]:Block[32402-32995]"
    }, {
      "left" : "BeanPropertyWriter bpw = props.get(i);",
      "right" : "BeanPropertyWriter bpw = props.get(i);",
      "info" : "VariableDeclarationStatement[32404-32442]:VariableDeclarationStatement[32416-32454]"
    }, {
      "left" : "TypeSerializer td = bpw.getTypeSerializer();",
      "right" : "TypeSerializer td = bpw.getTypeSerializer();",
      "info" : "VariableDeclarationStatement[32455-32499]:VariableDeclarationStatement[32467-32511]"
    }, {
      "left" : "if ((td == null) || (td.getTypeInclusion() != As.EXTERNAL_PROPERTY))",
      "right" : "if ((td == null) || (td.getTypeInclusion() != As.EXTERNAL_PROPERTY))",
      "info" : "IfStatement[32512-32622]:IfStatement[32524-32634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32581-32622]:Block[32593-32634]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[32599-32608]:ContinueStatement[32611-32620]"
    }, {
      "left" : "String n = td.getPropertyName();",
      "right" : "String n = td.getPropertyName();",
      "info" : "VariableDeclarationStatement[32635-32667]:VariableDeclarationStatement[32647-32679]"
    }, {
      "left" : "PropertyName typePropName = PropertyName.construct(n);",
      "right" : "PropertyName typePropName = PropertyName.construct(n);",
      "info" : "VariableDeclarationStatement[32680-32734]:VariableDeclarationStatement[32692-32746]"
    }, {
      "left" : "for (BeanPropertyWriter w2 : props)",
      "right" : "for (BeanPropertyWriter w2 : props)",
      "info" : "EnhancedForStatement[32748-32973]:EnhancedForStatement[32760-32985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32784-32973]:Block[32796-32985]"
    }, {
      "left" : "if ((w2 != bpw) && w2.wouldConflictWithName(typePropName))",
      "right" : "if ((w2 != bpw) && w2.wouldConflictWithName(typePropName))",
      "info" : "IfStatement[32802-32959]:IfStatement[32814-32971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32861-32959]:Block[32873-32971]"
    }, {
      "left" : "bpw.assignTypeSerializer(null);",
      "right" : "bpw.assignTypeSerializer(null);",
      "info" : "ExpressionStatement[32883-32914]:ExpressionStatement[32895-32926]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[32935-32941]:BreakStatement[32947-32953]"
    }, {
      "left" : "return props;",
      "right" : "return props;",
      "info" : "ReturnStatement[32992-33005]:ReturnStatement[33004-33017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33591-35485]:Block[33603-35497]"
    }, {
      "left" : "final PropertyName name = propDef.getFullName();",
      "right" : "final PropertyName name = propDef.getFullName();",
      "info" : "VariableDeclarationStatement[33601-33649]:VariableDeclarationStatement[33613-33661]"
    }, {
      "left" : "if (prov.canOverrideAccessModifiers())",
      "right" : "if (prov.canOverrideAccessModifiers())",
      "info" : "IfStatement[33658-33742]:IfStatement[33670-33754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33697-33742]:Block[33709-33754]"
    }, {
      "left" : "accessor.fixAccess();",
      "right" : "accessor.fixAccess();",
      "info" : "ExpressionStatement[33711-33732]:ExpressionStatement[33723-33744]"
    }, {
      "left" : "JavaType type = accessor.getType(typeContext);",
      "right" : "JavaType type = accessor.getType(typeContext);",
      "info" : "VariableDeclarationStatement[33751-33797]:VariableDeclarationStatement[33763-33809]"
    }, {
      "left" : "BeanProperty.Std property = new BeanProperty.Std(name, type, propDef.getWrapperName(),\n                pb.getClassAnnotations(), accessor, propDef.getMetadata());",
      "right" : "BeanProperty.Std property = new BeanProperty.Std(name, type, propDef.getWrapperName(),\n                pb.getClassAnnotations(), accessor, propDef.getMetadata());",
      "info" : "VariableDeclarationStatement[33806-33968]:VariableDeclarationStatement[33818-33980]"
    }, {
      "left" : "JsonSerializer<?> annotatedSerializer = findSerializerFromAnnotation(prov,\n                accessor);",
      "right" : "JsonSerializer<?> annotatedSerializer = findSerializerFromAnnotation(prov,\n                accessor);",
      "info" : "VariableDeclarationStatement[34044-34145]:VariableDeclarationStatement[34056-34157]"
    }, {
      "left" : "if (annotatedSerializer instanceof ResolvableSerializer)",
      "right" : "if (annotatedSerializer instanceof ResolvableSerializer)",
      "info" : "IfStatement[34325-34465]:IfStatement[34337-34477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34382-34465]:Block[34394-34477]"
    }, {
      "left" : "((ResolvableSerializer) annotatedSerializer).resolve(prov);",
      "right" : "((ResolvableSerializer) annotatedSerializer).resolve(prov);",
      "info" : "ExpressionStatement[34396-34455]:ExpressionStatement[34408-34467]"
    }, {
      "left" : "annotatedSerializer = prov.handlePrimaryContextualization(annotatedSerializer, property);",
      "right" : "annotatedSerializer = prov.handlePrimaryContextualization(annotatedSerializer, property);",
      "info" : "ExpressionStatement[34546-34635]:ExpressionStatement[34558-34647]"
    }, {
      "left" : "TypeSerializer contentTypeSer = null;",
      "right" : "TypeSerializer contentTypeSer = null;",
      "info" : "VariableDeclarationStatement[34737-34774]:VariableDeclarationStatement[34749-34786]"
    }, {
      "left" : "if (ClassUtil.isCollectionMapOrArray(type.getRawClass())\n                || type.isCollectionLikeType() || type.isMapLikeType())",
      "right" : "if (ClassUtil.isCollectionMapOrArray(type.getRawClass())\n                || type.isCollectionLikeType() || type.isMapLikeType())",
      "info" : "IfStatement[34875-35113]:IfStatement[34887-35125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35004-35113]:Block[35016-35125]"
    }, {
      "left" : "contentTypeSer = findPropertyContentTypeSerializer(type, prov.getConfig(), accessor);",
      "right" : "contentTypeSer = findPropertyContentTypeSerializer(type, prov.getConfig(), accessor);",
      "info" : "ExpressionStatement[35018-35103]:ExpressionStatement[35030-35115]"
    }, {
      "left" : "TypeSerializer typeSer = findPropertyTypeSerializer(type, prov.getConfig(), accessor);",
      "right" : "TypeSerializer typeSer = findPropertyTypeSerializer(type, prov.getConfig(), accessor);",
      "info" : "VariableDeclarationStatement[35209-35295]:VariableDeclarationStatement[35221-35307]"
    }, {
      "left" : "BeanPropertyWriter pbw = pb.buildWriter(prov, propDef, type, annotatedSerializer,\n                        typeSer, contentTypeSer, accessor, staticTyping);",
      "right" : "BeanPropertyWriter pbw = pb.buildWriter(prov, propDef, type, annotatedSerializer,\n                        typeSer, contentTypeSer, accessor, staticTyping);",
      "info" : "VariableDeclarationStatement[35304-35459]:VariableDeclarationStatement[35316-35471]"
    }, {
      "left" : "return pbw;",
      "right" : "return pbw;",
      "info" : "ReturnStatement[35468-35479]:ReturnStatement[35480-35491]"
    } ]
  },
  "interFileMappings" : { }
}