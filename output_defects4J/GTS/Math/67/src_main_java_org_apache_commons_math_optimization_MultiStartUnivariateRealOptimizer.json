{
  "matchedElements" : [
 {
    "left" : "class : MultiStartUnivariateRealOptimizer",
    "right" : "class : MultiStartUnivariateRealOptimizer",
    "info" : "TypeDeclaration[1191-12160]:TypeDeclaration[1191-12135]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[1675-1785]:FieldDeclaration[1675-1785]"
  }, {
    "left" : "optimizer",
    "right" : "optimizer",
    "info" : "FieldDeclaration[1791-1882]:FieldDeclaration[1791-1882]"
  }, {
    "left" : "maxIterations",
    "right" : "maxIterations",
    "info" : "FieldDeclaration[1888-1963]:FieldDeclaration[1888-1963]"
  }, {
    "left" : "maxEvaluations",
    "right" : "maxEvaluations",
    "info" : "FieldDeclaration[1969-2046]:FieldDeclaration[1969-2046]"
  }, {
    "left" : "totalIterations",
    "right" : "totalIterations",
    "info" : "FieldDeclaration[2052-2146]:FieldDeclaration[2052-2146]"
  }, {
    "left" : "totalEvaluations",
    "right" : "totalEvaluations",
    "info" : "FieldDeclaration[2152-2248]:FieldDeclaration[2152-2248]"
  }, {
    "left" : "starts",
    "right" : "starts",
    "info" : "FieldDeclaration[2254-2308]:FieldDeclaration[2254-2308]"
  }, {
    "left" : "generator",
    "right" : "generator",
    "info" : "FieldDeclaration[2314-2393]:FieldDeclaration[2314-2393]"
  }, {
    "left" : "optima",
    "right" : "optima",
    "info" : "FieldDeclaration[2399-2448]:FieldDeclaration[2399-2448]"
  }, {
    "left" : "optimaValues",
    "right" : "optimaValues",
    "info" : "FieldDeclaration[2454-2528]:FieldDeclaration[2454-2528]"
  }, {
    "left" : "public MultiStartUnivariateRealOptimizer(optimizer , starts int, generator )",
    "right" : "public MultiStartUnivariateRealOptimizer(optimizer , starts int, generator )",
    "info" : "MethodDeclaration[2534-3412]:MethodDeclaration[2534-3412]"
  }, {
    "left" : "public getFunctionValue() : double",
    "right" : "public getFunctionValue() : double",
    "info" : "MethodDeclaration[3418-3528]:MethodDeclaration[3418-3515]"
  }, {
    "left" : "public getResult() : double",
    "right" : "public getResult() : double",
    "info" : "MethodDeclaration[3534-3630]:MethodDeclaration[3521-3605]"
  }, {
    "left" : "public getAbsoluteAccuracy() : double",
    "right" : "public getAbsoluteAccuracy() : double",
    "info" : "MethodDeclaration[3636-3752]:MethodDeclaration[3611-3727]"
  }, {
    "left" : "public getIterationCount() : int",
    "right" : "public getIterationCount() : int",
    "info" : "MethodDeclaration[3758-3853]:MethodDeclaration[3733-3828]"
  }, {
    "left" : "public getMaximalIterationCount() : int",
    "right" : "public getMaximalIterationCount() : int",
    "info" : "MethodDeclaration[3859-3959]:MethodDeclaration[3834-3934]"
  }, {
    "left" : "public getMaxEvaluations() : int",
    "right" : "public getMaxEvaluations() : int",
    "info" : "MethodDeclaration[3965-4059]:MethodDeclaration[3940-4034]"
  }, {
    "left" : "public getEvaluations() : int",
    "right" : "public getEvaluations() : int",
    "info" : "MethodDeclaration[4065-4158]:MethodDeclaration[4040-4133]"
  }, {
    "left" : "public getRelativeAccuracy() : double",
    "right" : "public getRelativeAccuracy() : double",
    "info" : "MethodDeclaration[4164-4280]:MethodDeclaration[4139-4255]"
  }, {
    "left" : "public resetAbsoluteAccuracy() : void",
    "right" : "public resetAbsoluteAccuracy() : void",
    "info" : "MethodDeclaration[4286-4397]:MethodDeclaration[4261-4372]"
  }, {
    "left" : "public resetMaximalIterationCount() : void",
    "right" : "public resetMaximalIterationCount() : void",
    "info" : "MethodDeclaration[4403-4524]:MethodDeclaration[4378-4499]"
  }, {
    "left" : "public resetRelativeAccuracy() : void",
    "right" : "public resetRelativeAccuracy() : void",
    "info" : "MethodDeclaration[4530-4641]:MethodDeclaration[4505-4616]"
  }, {
    "left" : "public setAbsoluteAccuracy(accuracy double) : void",
    "right" : "public setAbsoluteAccuracy(accuracy double) : void",
    "info" : "MethodDeclaration[4647-4777]:MethodDeclaration[4622-4752]"
  }, {
    "left" : "public setMaximalIterationCount(count int) : void",
    "right" : "public setMaximalIterationCount(count int) : void",
    "info" : "MethodDeclaration[4783-4899]:MethodDeclaration[4758-4874]"
  }, {
    "left" : "public setMaxEvaluations(maxEvaluations int) : void",
    "right" : "public setMaxEvaluations(maxEvaluations int) : void",
    "info" : "MethodDeclaration[4905-5033]:MethodDeclaration[4880-5008]"
  }, {
    "left" : "public setRelativeAccuracy(accuracy double) : void",
    "right" : "public setRelativeAccuracy(accuracy double) : void",
    "info" : "MethodDeclaration[5039-5169]:MethodDeclaration[5014-5144]"
  }, {
    "left" : "public getOptima() : ",
    "right" : "public getOptima() : ",
    "info" : "MethodDeclaration[5175-6976]:MethodDeclaration[5150-6951]"
  }, {
    "left" : "public getOptimaValues() : ",
    "right" : "public getOptimaValues() : ",
    "info" : "MethodDeclaration[6982-8365]:MethodDeclaration[6957-8340]"
  }, {
    "left" : "public optimize(f , goalType , min double, max double) : double",
    "right" : "public optimize(f , goalType , min double, max double) : double",
    "info" : "MethodDeclaration[8371-11835]:MethodDeclaration[8346-11810]"
  }, {
    "left" : "public optimize(f , goalType , min double, max double, startValue double) : double",
    "right" : "public optimize(f , goalType , min double, max double, startValue double) : double",
    "info" : "MethodDeclaration[11841-12158]:MethodDeclaration[11816-12133]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1586-1592]:Modifier[1586-1592]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1593-1598]:TYPE_DECLARATION_KIND[1593-1598]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2884-2890]:Modifier[2884-2890]"
  }, {
    "left" : "MultiStartUnivariateRealOptimizer",
    "right" : "MultiStartUnivariateRealOptimizer",
    "info" : "SimpleName[2891-2924]:SimpleName[2891-2924]"
  }, {
    "left" : "final UnivariateRealOptimizer optimizer",
    "right" : "final UnivariateRealOptimizer optimizer",
    "info" : "SingleVariableDeclaration[2925-2964]:SingleVariableDeclaration[2925-2964]"
  }, {
    "left" : "final int starts",
    "right" : "final int starts",
    "info" : "SingleVariableDeclaration[3011-3027]:SingleVariableDeclaration[3011-3027]"
  }, {
    "left" : "final RandomGenerator generator",
    "right" : "final RandomGenerator generator",
    "info" : "SingleVariableDeclaration[3074-3105]:SingleVariableDeclaration[3074-3105]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3107-3412]:Block[3107-3412]"
  }, {
    "left" : "this.optimizer        = optimizer;",
    "right" : "this.optimizer        = optimizer;",
    "info" : "ExpressionStatement[3117-3151]:ExpressionStatement[3117-3151]"
  }, {
    "left" : "this.totalIterations  = 0;",
    "right" : "this.totalIterations  = 0;",
    "info" : "ExpressionStatement[3160-3186]:ExpressionStatement[3160-3186]"
  }, {
    "left" : "this.starts           = starts;",
    "right" : "this.starts           = starts;",
    "info" : "ExpressionStatement[3195-3226]:ExpressionStatement[3195-3226]"
  }, {
    "left" : "this.generator        = generator;",
    "right" : "this.generator        = generator;",
    "info" : "ExpressionStatement[3235-3269]:ExpressionStatement[3235-3269]"
  }, {
    "left" : "this.optima           = null;",
    "right" : "this.optima           = null;",
    "info" : "ExpressionStatement[3278-3307]:ExpressionStatement[3278-3307]"
  }, {
    "left" : "setMaximalIterationCount(Integer.MAX_VALUE);",
    "right" : "setMaximalIterationCount(Integer.MAX_VALUE);",
    "info" : "ExpressionStatement[3316-3360]:ExpressionStatement[3316-3360]"
  }, {
    "left" : "setMaxEvaluations(Integer.MAX_VALUE);",
    "right" : "setMaxEvaluations(Integer.MAX_VALUE);",
    "info" : "ExpressionStatement[3369-3406]:ExpressionStatement[3369-3406]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3443-3449]:Modifier[3443-3449]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[3450-3456]:PrimitiveType[3450-3456]"
  }, {
    "left" : "getFunctionValue",
    "right" : "getFunctionValue",
    "info" : "SimpleName[3457-3473]:SimpleName[3457-3473]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3476-3528]:Block[3476-3515]"
  }, {
    "left" : "return optimizer.getFunctionValue();",
    "right" : "return optimaValues[0];",
    "info" : "ReturnStatement[3486-3522]:ReturnStatement[3486-3509]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3559-3565]:Modifier[3546-3552]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[3566-3572]:PrimitiveType[3553-3559]"
  }, {
    "left" : "getResult",
    "right" : "getResult",
    "info" : "SimpleName[3573-3582]:SimpleName[3560-3569]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3585-3630]:Block[3572-3605]"
  }, {
    "left" : "return optimizer.getResult();",
    "right" : "return optima[0];",
    "info" : "ReturnStatement[3595-3624]:ReturnStatement[3582-3599]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3661-3667]:Modifier[3636-3642]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[3668-3674]:PrimitiveType[3643-3649]"
  }, {
    "left" : "getAbsoluteAccuracy",
    "right" : "getAbsoluteAccuracy",
    "info" : "SimpleName[3675-3694]:SimpleName[3650-3669]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3697-3752]:Block[3672-3727]"
  }, {
    "left" : "return optimizer.getAbsoluteAccuracy();",
    "right" : "return optimizer.getAbsoluteAccuracy();",
    "info" : "ReturnStatement[3707-3746]:ReturnStatement[3682-3721]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3783-3789]:Modifier[3758-3764]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[3790-3793]:PrimitiveType[3765-3768]"
  }, {
    "left" : "getIterationCount",
    "right" : "getIterationCount",
    "info" : "SimpleName[3794-3811]:SimpleName[3769-3786]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3814-3853]:Block[3789-3828]"
  }, {
    "left" : "return totalIterations;",
    "right" : "return totalIterations;",
    "info" : "ReturnStatement[3824-3847]:ReturnStatement[3799-3822]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3884-3890]:Modifier[3859-3865]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[3891-3894]:PrimitiveType[3866-3869]"
  }, {
    "left" : "getMaximalIterationCount",
    "right" : "getMaximalIterationCount",
    "info" : "SimpleName[3895-3919]:SimpleName[3870-3894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3922-3959]:Block[3897-3934]"
  }, {
    "left" : "return maxIterations;",
    "right" : "return maxIterations;",
    "info" : "ReturnStatement[3932-3953]:ReturnStatement[3907-3928]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3990-3996]:Modifier[3965-3971]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[3997-4000]:PrimitiveType[3972-3975]"
  }, {
    "left" : "getMaxEvaluations",
    "right" : "getMaxEvaluations",
    "info" : "SimpleName[4001-4018]:SimpleName[3976-3993]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4021-4059]:Block[3996-4034]"
  }, {
    "left" : "return maxEvaluations;",
    "right" : "return maxEvaluations;",
    "info" : "ReturnStatement[4031-4053]:ReturnStatement[4006-4028]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4090-4096]:Modifier[4065-4071]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[4097-4100]:PrimitiveType[4072-4075]"
  }, {
    "left" : "getEvaluations",
    "right" : "getEvaluations",
    "info" : "SimpleName[4101-4115]:SimpleName[4076-4090]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4118-4158]:Block[4093-4133]"
  }, {
    "left" : "return totalEvaluations;",
    "right" : "return totalEvaluations;",
    "info" : "ReturnStatement[4128-4152]:ReturnStatement[4103-4127]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4189-4195]:Modifier[4164-4170]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[4196-4202]:PrimitiveType[4171-4177]"
  }, {
    "left" : "getRelativeAccuracy",
    "right" : "getRelativeAccuracy",
    "info" : "SimpleName[4203-4222]:SimpleName[4178-4197]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4225-4280]:Block[4200-4255]"
  }, {
    "left" : "return optimizer.getRelativeAccuracy();",
    "right" : "return optimizer.getRelativeAccuracy();",
    "info" : "ReturnStatement[4235-4274]:ReturnStatement[4210-4249]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4311-4317]:Modifier[4286-4292]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4318-4322]:PrimitiveType[4293-4297]"
  }, {
    "left" : "resetAbsoluteAccuracy",
    "right" : "resetAbsoluteAccuracy",
    "info" : "SimpleName[4323-4344]:SimpleName[4298-4319]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4347-4397]:Block[4322-4372]"
  }, {
    "left" : "optimizer.resetAbsoluteAccuracy();",
    "right" : "optimizer.resetAbsoluteAccuracy();",
    "info" : "ExpressionStatement[4357-4391]:ExpressionStatement[4332-4366]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4428-4434]:Modifier[4403-4409]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4435-4439]:PrimitiveType[4410-4414]"
  }, {
    "left" : "resetMaximalIterationCount",
    "right" : "resetMaximalIterationCount",
    "info" : "SimpleName[4440-4466]:SimpleName[4415-4441]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4469-4524]:Block[4444-4499]"
  }, {
    "left" : "optimizer.resetMaximalIterationCount();",
    "right" : "optimizer.resetMaximalIterationCount();",
    "info" : "ExpressionStatement[4479-4518]:ExpressionStatement[4454-4493]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4555-4561]:Modifier[4530-4536]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4562-4566]:PrimitiveType[4537-4541]"
  }, {
    "left" : "resetRelativeAccuracy",
    "right" : "resetRelativeAccuracy",
    "info" : "SimpleName[4567-4588]:SimpleName[4542-4563]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4591-4641]:Block[4566-4616]"
  }, {
    "left" : "optimizer.resetRelativeAccuracy();",
    "right" : "optimizer.resetRelativeAccuracy();",
    "info" : "ExpressionStatement[4601-4635]:ExpressionStatement[4576-4610]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4672-4678]:Modifier[4647-4653]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4679-4683]:PrimitiveType[4654-4658]"
  }, {
    "left" : "setAbsoluteAccuracy",
    "right" : "setAbsoluteAccuracy",
    "info" : "SimpleName[4684-4703]:SimpleName[4659-4678]"
  }, {
    "left" : "double accuracy",
    "right" : "double accuracy",
    "info" : "SingleVariableDeclaration[4704-4719]:SingleVariableDeclaration[4679-4694]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4721-4777]:Block[4696-4752]"
  }, {
    "left" : "optimizer.setAbsoluteAccuracy(accuracy);",
    "right" : "optimizer.setAbsoluteAccuracy(accuracy);",
    "info" : "ExpressionStatement[4731-4771]:ExpressionStatement[4706-4746]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4808-4814]:Modifier[4783-4789]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4815-4819]:PrimitiveType[4790-4794]"
  }, {
    "left" : "setMaximalIterationCount",
    "right" : "setMaximalIterationCount",
    "info" : "SimpleName[4820-4844]:SimpleName[4795-4819]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[4845-4854]:SingleVariableDeclaration[4820-4829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4856-4899]:Block[4831-4874]"
  }, {
    "left" : "this.maxIterations = count;",
    "right" : "this.maxIterations = count;",
    "info" : "ExpressionStatement[4866-4893]:ExpressionStatement[4841-4868]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4930-4936]:Modifier[4905-4911]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4937-4941]:PrimitiveType[4912-4916]"
  }, {
    "left" : "setMaxEvaluations",
    "right" : "setMaxEvaluations",
    "info" : "SimpleName[4942-4959]:SimpleName[4917-4934]"
  }, {
    "left" : "int maxEvaluations",
    "right" : "int maxEvaluations",
    "info" : "SingleVariableDeclaration[4960-4978]:SingleVariableDeclaration[4935-4953]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4980-5033]:Block[4955-5008]"
  }, {
    "left" : "this.maxEvaluations = maxEvaluations;",
    "right" : "this.maxEvaluations = maxEvaluations;",
    "info" : "ExpressionStatement[4990-5027]:ExpressionStatement[4965-5002]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5064-5070]:Modifier[5039-5045]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5071-5075]:PrimitiveType[5046-5050]"
  }, {
    "left" : "setRelativeAccuracy",
    "right" : "setRelativeAccuracy",
    "info" : "SimpleName[5076-5095]:SimpleName[5051-5070]"
  }, {
    "left" : "double accuracy",
    "right" : "double accuracy",
    "info" : "SingleVariableDeclaration[5096-5111]:SingleVariableDeclaration[5071-5086]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5113-5169]:Block[5088-5144]"
  }, {
    "left" : "optimizer.setRelativeAccuracy(accuracy);",
    "right" : "optimizer.setRelativeAccuracy(accuracy);",
    "info" : "ExpressionStatement[5123-5163]:ExpressionStatement[5098-5138]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6731-6737]:Modifier[6706-6712]"
  }, {
    "left" : "double[]",
    "right" : "double[]",
    "info" : "ArrayType[6738-6746]:ArrayType[6713-6721]"
  }, {
    "left" : "getOptima",
    "right" : "getOptima",
    "info" : "SimpleName[6747-6756]:SimpleName[6722-6731]"
  }, {
    "left" : "IllegalStateException",
    "right" : "IllegalStateException",
    "info" : "SimpleType[6766-6787]:SimpleType[6741-6762]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6788-6976]:Block[6763-6951]"
  }, {
    "left" : "if (optima == null)",
    "right" : "if (optima == null)",
    "info" : "IfStatement[6798-6939]:IfStatement[6773-6914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6818-6939]:Block[6793-6914]"
  }, {
    "left" : "throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);",
    "right" : "throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);",
    "info" : "ThrowStatement[6832-6929]:ThrowStatement[6807-6904]"
  }, {
    "left" : "return optima.clone();",
    "right" : "return optima.clone();",
    "info" : "ReturnStatement[6948-6970]:ReturnStatement[6923-6945]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8102-8108]:Modifier[8077-8083]"
  }, {
    "left" : "double[]",
    "right" : "double[]",
    "info" : "ArrayType[8109-8117]:ArrayType[8084-8092]"
  }, {
    "left" : "getOptimaValues",
    "right" : "getOptimaValues",
    "info" : "SimpleName[8118-8133]:SimpleName[8093-8108]"
  }, {
    "left" : "IllegalStateException",
    "right" : "IllegalStateException",
    "info" : "SimpleType[8143-8164]:SimpleType[8118-8139]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8165-8365]:Block[8140-8340]"
  }, {
    "left" : "if (optimaValues == null)",
    "right" : "if (optimaValues == null)",
    "info" : "IfStatement[8175-8322]:IfStatement[8150-8297]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8201-8322]:Block[8176-8297]"
  }, {
    "left" : "throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);",
    "right" : "throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);",
    "info" : "ThrowStatement[8215-8312]:ThrowStatement[8190-8287]"
  }, {
    "left" : "return optimaValues.clone();",
    "right" : "return optimaValues.clone();",
    "info" : "ReturnStatement[8331-8359]:ReturnStatement[8306-8334]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8396-8402]:Modifier[8371-8377]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[8403-8409]:PrimitiveType[8378-8384]"
  }, {
    "left" : "optimize",
    "right" : "optimize",
    "info" : "SimpleName[8410-8418]:SimpleName[8385-8393]"
  }, {
    "left" : "final UnivariateRealFunction f",
    "right" : "final UnivariateRealFunction f",
    "info" : "SingleVariableDeclaration[8419-8449]:SingleVariableDeclaration[8394-8424]"
  }, {
    "left" : "final GoalType goalType",
    "right" : "final GoalType goalType",
    "info" : "SingleVariableDeclaration[8451-8474]:SingleVariableDeclaration[8426-8449]"
  }, {
    "left" : "final double min",
    "right" : "final double min",
    "info" : "SingleVariableDeclaration[8503-8519]:SingleVariableDeclaration[8478-8494]"
  }, {
    "left" : "final double max",
    "right" : "final double max",
    "info" : "SingleVariableDeclaration[8521-8537]:SingleVariableDeclaration[8496-8512]"
  }, {
    "left" : "ConvergenceException",
    "right" : "ConvergenceException",
    "info" : "SimpleType[8554-8574]:SimpleType[8529-8549]"
  }, {
    "left" : "FunctionEvaluationException",
    "right" : "FunctionEvaluationException",
    "info" : "SimpleType[8588-8615]:SimpleType[8563-8590]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8616-11835]:Block[8591-11810]"
  }, {
    "left" : "optima           = new double[starts];",
    "right" : "optima           = new double[starts];",
    "info" : "ExpressionStatement[8627-8665]:ExpressionStatement[8602-8640]"
  }, {
    "left" : "optimaValues     = new double[starts];",
    "right" : "optimaValues     = new double[starts];",
    "info" : "ExpressionStatement[8674-8712]:ExpressionStatement[8649-8687]"
  }, {
    "left" : "totalIterations  = 0;",
    "right" : "totalIterations  = 0;",
    "info" : "ExpressionStatement[8721-8742]:ExpressionStatement[8696-8717]"
  }, {
    "left" : "totalEvaluations = 0;",
    "right" : "totalEvaluations = 0;",
    "info" : "ExpressionStatement[8751-8772]:ExpressionStatement[8726-8747]"
  }, {
    "left" : "for (int i = 0; i < starts; ++i)",
    "right" : "for (int i = 0; i < starts; ++i)",
    "info" : "ForStatement[8810-9952]:ForStatement[8785-9927]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8843-9952]:Block[8818-9927]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[8858-9817]:TryStatement[8833-9792]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8862-9529]:Block[8837-9504]"
  }, {
    "left" : "optimizer.setMaximalIterationCount(maxIterations - totalIterations);",
    "right" : "optimizer.setMaximalIterationCount(maxIterations - totalIterations);",
    "info" : "ExpressionStatement[8880-8948]:ExpressionStatement[8855-8923]"
  }, {
    "left" : "optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations);",
    "right" : "optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations);",
    "info" : "ExpressionStatement[8965-9028]:ExpressionStatement[8940-9003]"
  }, {
    "left" : "final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);",
    "right" : "final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);",
    "info" : "VariableDeclarationStatement[9045-9127]:VariableDeclarationStatement[9020-9102]"
  }, {
    "left" : "final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);",
    "right" : "final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);",
    "info" : "VariableDeclarationStatement[9144-9226]:VariableDeclarationStatement[9119-9201]"
  }, {
    "left" : "optima[i]       = optimizer.optimize(f, goalType,\n                                                     Math.min(bound1, bound2),\n                                                     Math.max(bound1, bound2));",
    "right" : "optima[i]       = optimizer.optimize(f, goalType,\n                                                     Math.min(bound1, bound2),\n                                                     Math.max(bound1, bound2));",
    "info" : "ExpressionStatement[9243-9451]:ExpressionStatement[9218-9426]"
  }, {
    "left" : "optimaValues[i] = optimizer.getFunctionValue();",
    "right" : "optimaValues[i] = optimizer.getFunctionValue();",
    "info" : "ExpressionStatement[9468-9515]:ExpressionStatement[9443-9490]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9570-9677]:Block[9545-9652]"
  }, {
    "left" : "optima[i]       = Double.NaN;",
    "right" : "optima[i]       = Double.NaN;",
    "info" : "ExpressionStatement[9588-9617]:ExpressionStatement[9563-9592]"
  }, {
    "left" : "optimaValues[i] = Double.NaN;",
    "right" : "optimaValues[i] = Double.NaN;",
    "info" : "ExpressionStatement[9634-9663]:ExpressionStatement[9609-9638]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9710-9817]:Block[9685-9792]"
  }, {
    "left" : "optima[i]       = Double.NaN;",
    "right" : "optima[i]       = Double.NaN;",
    "info" : "ExpressionStatement[9728-9757]:ExpressionStatement[9703-9732]"
  }, {
    "left" : "optimaValues[i] = Double.NaN;",
    "right" : "optimaValues[i] = Double.NaN;",
    "info" : "ExpressionStatement[9774-9803]:ExpressionStatement[9749-9778]"
  }, {
    "left" : "totalIterations  += optimizer.getIterationCount();",
    "right" : "totalIterations  += optimizer.getIterationCount();",
    "info" : "ExpressionStatement[9831-9881]:ExpressionStatement[9806-9856]"
  }, {
    "left" : "totalEvaluations += optimizer.getEvaluations();",
    "right" : "totalEvaluations += optimizer.getEvaluations();",
    "info" : "ExpressionStatement[9894-9941]:ExpressionStatement[9869-9916]"
  }, {
    "left" : "int lastNaN = optima.length;",
    "right" : "int lastNaN = optima.length;",
    "info" : "VariableDeclarationStatement[10034-10062]:VariableDeclarationStatement[10009-10037]"
  }, {
    "left" : "for (int i = 0; i < lastNaN; ++i)",
    "right" : "for (int i = 0; i < lastNaN; ++i)",
    "info" : "ForStatement[10071-10385]:ForStatement[10046-10360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10105-10385]:Block[10080-10360]"
  }, {
    "left" : "if (Double.isNaN(optima[i]))",
    "right" : "if (Double.isNaN(optima[i]))",
    "info" : "IfStatement[10119-10375]:IfStatement[10094-10350]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10148-10375]:Block[10123-10350]"
  }, {
    "left" : "optima[i] = optima[--lastNaN];",
    "right" : "optima[i] = optima[--lastNaN];",
    "info" : "ExpressionStatement[10166-10196]:ExpressionStatement[10141-10171]"
  }, {
    "left" : "optima[lastNaN + 1] = Double.NaN;",
    "right" : "optima[lastNaN + 1] = Double.NaN;",
    "info" : "ExpressionStatement[10213-10246]:ExpressionStatement[10188-10221]"
  }, {
    "left" : "optimaValues[i] = optimaValues[--lastNaN];",
    "right" : "optimaValues[i] = optimaValues[--lastNaN];",
    "info" : "ExpressionStatement[10263-10305]:ExpressionStatement[10238-10280]"
  }, {
    "left" : "optimaValues[lastNaN + 1] = Double.NaN;",
    "right" : "optimaValues[lastNaN + 1] = Double.NaN;",
    "info" : "ExpressionStatement[10322-10361]:ExpressionStatement[10297-10336]"
  }, {
    "left" : "double currX = optima[0];",
    "right" : "double currX = optima[0];",
    "info" : "VariableDeclarationStatement[10395-10420]:VariableDeclarationStatement[10370-10395]"
  }, {
    "left" : "double currY = optimaValues[0];",
    "right" : "double currY = optimaValues[0];",
    "info" : "VariableDeclarationStatement[10429-10460]:VariableDeclarationStatement[10404-10435]"
  }, {
    "left" : "for (int j = 1; j < lastNaN; ++j)",
    "right" : "for (int j = 1; j < lastNaN; ++j)",
    "info" : "ForStatement[10469-11529]:ForStatement[10444-11504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10503-11529]:Block[10478-11504]"
  }, {
    "left" : "final double prevY = currY;",
    "right" : "final double prevY = currY;",
    "info" : "VariableDeclarationStatement[10517-10544]:VariableDeclarationStatement[10492-10519]"
  }, {
    "left" : "currX = optima[j];",
    "right" : "currX = optima[j];",
    "info" : "ExpressionStatement[10557-10575]:ExpressionStatement[10532-10550]"
  }, {
    "left" : "currY = optimaValues[j];",
    "right" : "currY = optimaValues[j];",
    "info" : "ExpressionStatement[10588-10612]:ExpressionStatement[10563-10587]"
  }, {
    "left" : "if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY))",
    "right" : "if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY))",
    "info" : "IfStatement[10625-11519]:IfStatement[10600-11494]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10680-11519]:Block[10655-11494]"
  }, {
    "left" : "int i = j - 1;",
    "right" : "int i = j - 1;",
    "info" : "VariableDeclarationStatement[10780-10794]:VariableDeclarationStatement[10755-10769]"
  }, {
    "left" : "double mIX = optima[i];",
    "right" : "double mIX = optima[i];",
    "info" : "VariableDeclarationStatement[10811-10834]:VariableDeclarationStatement[10786-10809]"
  }, {
    "left" : "double mIY = optimaValues[i];",
    "right" : "double mIY = optimaValues[i];",
    "info" : "VariableDeclarationStatement[10851-10880]:VariableDeclarationStatement[10826-10855]"
  }, {
    "left" : "while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY)))",
    "right" : "while ((i >= 0) && ((goalType == GoalType.MAXIMIZE) ^ (currY < mIY)))",
    "info" : "WhileStatement[10897-11339]:WhileStatement[10872-11314]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10967-11339]:Block[10942-11314]"
  }, {
    "left" : "optima[i + 1]       = mIX;",
    "right" : "optima[i + 1]       = mIX;",
    "info" : "ExpressionStatement[10989-11015]:ExpressionStatement[10964-10990]"
  }, {
    "left" : "optimaValues[i + 1] = mIY;",
    "right" : "optimaValues[i + 1] = mIY;",
    "info" : "ExpressionStatement[11036-11062]:ExpressionStatement[11011-11037]"
  }, {
    "left" : "if (i-- != 0)",
    "right" : "if (i-- != 0)",
    "info" : "IfStatement[11083-11321]:IfStatement[11058-11296]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11097-11208]:Block[11072-11183]"
  }, {
    "left" : "mIX = optima[i];",
    "right" : "mIX = optima[i];",
    "info" : "ExpressionStatement[11123-11139]:ExpressionStatement[11098-11114]"
  }, {
    "left" : "mIY = optimaValues[i];",
    "right" : "mIY = optimaValues[i];",
    "info" : "ExpressionStatement[11164-11186]:ExpressionStatement[11139-11161]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11214-11321]:Block[11189-11296]"
  }, {
    "left" : "mIX = Double.NaN;",
    "right" : "mIX = Double.NaN;",
    "info" : "ExpressionStatement[11240-11257]:ExpressionStatement[11215-11232]"
  }, {
    "left" : "mIY = Double.NaN;",
    "right" : "mIY = Double.NaN;",
    "info" : "ExpressionStatement[11282-11299]:ExpressionStatement[11257-11274]"
  }, {
    "left" : "optima[i + 1]       = currX;",
    "right" : "optima[i + 1]       = currX;",
    "info" : "ExpressionStatement[11356-11384]:ExpressionStatement[11331-11359]"
  }, {
    "left" : "optimaValues[i + 1] = currY;",
    "right" : "optimaValues[i + 1] = currY;",
    "info" : "ExpressionStatement[11401-11429]:ExpressionStatement[11376-11404]"
  }, {
    "left" : "currX = optima[j];",
    "right" : "currX = optima[j];",
    "info" : "ExpressionStatement[11446-11464]:ExpressionStatement[11421-11439]"
  }, {
    "left" : "currY = optimaValues[j];",
    "right" : "currY = optimaValues[j];",
    "info" : "ExpressionStatement[11481-11505]:ExpressionStatement[11456-11480]"
  }, {
    "left" : "if (Double.isNaN(optima[0]))",
    "right" : "if (Double.isNaN(optima[0]))",
    "info" : "IfStatement[11539-11727]:IfStatement[11514-11702]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11568-11727]:Block[11543-11702]"
  }, {
    "left" : "throw new OptimizationException(\n                    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,\n                    starts);",
    "right" : "throw new OptimizationException(\n                    LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,\n                    starts);",
    "info" : "ThrowStatement[11582-11717]:ThrowStatement[11557-11692]"
  }, {
    "left" : "return optima[0];",
    "right" : "return optima[0];",
    "info" : "ReturnStatement[11811-11828]:ReturnStatement[11786-11803]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11866-11872]:Modifier[11841-11847]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[11873-11879]:PrimitiveType[11848-11854]"
  }, {
    "left" : "optimize",
    "right" : "optimize",
    "info" : "SimpleName[11880-11888]:SimpleName[11855-11863]"
  }, {
    "left" : "final UnivariateRealFunction f",
    "right" : "final UnivariateRealFunction f",
    "info" : "SingleVariableDeclaration[11889-11919]:SingleVariableDeclaration[11864-11894]"
  }, {
    "left" : "final GoalType goalType",
    "right" : "final GoalType goalType",
    "info" : "SingleVariableDeclaration[11921-11944]:SingleVariableDeclaration[11896-11919]"
  }, {
    "left" : "final double min",
    "right" : "final double min",
    "info" : "SingleVariableDeclaration[11973-11989]:SingleVariableDeclaration[11948-11964]"
  }, {
    "left" : "final double max",
    "right" : "final double max",
    "info" : "SingleVariableDeclaration[11991-12007]:SingleVariableDeclaration[11966-11982]"
  }, {
    "left" : "final double startValue",
    "right" : "final double startValue",
    "info" : "SingleVariableDeclaration[12009-12032]:SingleVariableDeclaration[11984-12007]"
  }, {
    "left" : "ConvergenceException",
    "right" : "ConvergenceException",
    "info" : "SimpleType[12053-12073]:SimpleType[12028-12048]"
  }, {
    "left" : "FunctionEvaluationException",
    "right" : "FunctionEvaluationException",
    "info" : "SimpleType[12075-12102]:SimpleType[12050-12077]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12103-12158]:Block[12078-12133]"
  }, {
    "left" : "return optimize(f, goalType, min, max);",
    "right" : "return optimize(f, goalType, min, max);",
    "info" : "ReturnStatement[12113-12152]:ReturnStatement[12088-12127]"
  } ]
}