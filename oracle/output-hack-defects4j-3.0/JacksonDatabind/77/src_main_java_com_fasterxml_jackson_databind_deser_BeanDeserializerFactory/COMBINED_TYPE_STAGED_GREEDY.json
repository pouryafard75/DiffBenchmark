{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BeanDeserializerFactory",
      "right" : "BeanDeserializerFactory",
      "info" : "TypeDeclaration[847-38844]:TypeDeclaration[847-39506]"
    }, {
      "left" : "private static final long serialVersionUID = 1;",
      "right" : "private static final long serialVersionUID = 1;",
      "info" : "FieldDeclaration[1498-1545]:FieldDeclaration[1498-1545]"
    }, {
      "left" : "private final static Class<?>[] INIT_CAUSE_PARAMS = new Class<?>[] { Throwable.class };",
      "right" : "private final static Class<?>[] INIT_CAUSE_PARAMS = new Class<?>[] { Throwable.class };",
      "info" : "FieldDeclaration[1551-1709]:FieldDeclaration[1551-1709]"
    }, {
      "left" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "right" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "info" : "FieldDeclaration[1715-1774]:FieldDeclaration[1715-1774]"
    }, {
      "left" : "public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(\n            new DeserializerFactoryConfig());",
      "right" : "public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(\n            new DeserializerFactoryConfig());",
      "info" : "FieldDeclaration[1950-2205]:FieldDeclaration[1950-2205]"
    }, {
      "left" : "public BeanDeserializerFactory(DeserializerFactoryConfig config)",
      "right" : "public BeanDeserializerFactory(DeserializerFactoryConfig config)",
      "info" : "MethodDeclaration[2211-2306]:MethodDeclaration[2211-2306]"
    }, {
      "left" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
      "right" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
      "info" : "MethodDeclaration[2316-3549]:MethodDeclaration[2316-3549]"
    }, {
      "left" : "public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[3749-6151]:MethodDeclaration[3749-6200]"
    }, {
      "left" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc,\n    \t\tClass<?> builderClass)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc,\n    \t\tClass<?> builderClass)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[6157-6682]:MethodDeclaration[6206-6731]"
    }, {
      "left" : "protected JsonDeserializer<?> findStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> findStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[6692-7607]:MethodDeclaration[6741-7656]"
    }, {
      "left" : "protected JavaType materializeAbstractType(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JavaType materializeAbstractType(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7617-8158]:MethodDeclaration[7666-8207]"
    }, {
      "left" : "public JsonDeserializer<Object> buildBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> buildBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[8452-11268]:MethodDeclaration[8501-11317]"
    }, {
      "left" : "protected JsonDeserializer<Object> buildBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> buildBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[11278-14072]:MethodDeclaration[11327-14121]"
    }, {
      "left" : "protected void addObjectIdReader(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addObjectIdReader(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[14082-15932]:MethodDeclaration[14131-15981]"
    }, {
      "left" : "public JsonDeserializer<Object> buildThrowableDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> buildThrowableDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[15942-19004]:MethodDeclaration[15991-19053]"
    }, {
      "left" : "protected BeanDeserializerBuilder constructBeanDeserializerBuilder(DeserializationContext ctxt,\n            BeanDescription beanDesc)",
      "right" : "protected BeanDeserializerBuilder constructBeanDeserializerBuilder(DeserializationContext ctxt,\n            BeanDescription beanDesc)",
      "info" : "MethodDeclaration[19246-19645]:MethodDeclaration[19295-19694]"
    }, {
      "left" : "protected void addBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[19655-26078]:MethodDeclaration[19704-26127]"
    }, {
      "left" : "protected List<BeanPropertyDefinition> filterBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder,\n            List<BeanPropertyDefinition> propDefsIn,\n            Set<String> ignored)\n        throws JsonMappingException",
      "right" : "protected List<BeanPropertyDefinition> filterBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder,\n            List<BeanPropertyDefinition> propDefsIn,\n            Set<String> ignored)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[26088-28063]:MethodDeclaration[26137-28112]"
    }, {
      "left" : "protected void addReferenceProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addReferenceProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[28069-29323]:MethodDeclaration[28118-29372]"
    }, {
      "left" : "protected void addInjectables(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addInjectables(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[29329-30461]:MethodDeclaration[29378-30510]"
    }, {
      "left" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedMethod setter)\n        throws JsonMappingException",
      "right" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedMethod setter)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[30467-32217]:MethodDeclaration[30516-32266]"
    }, {
      "left" : "protected SettableBeanProperty constructSettableProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef,\n            JavaType propType0)\n        throws JsonMappingException",
      "right" : "protected SettableBeanProperty constructSettableProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef,\n            JavaType propType0)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[32223-35228]:MethodDeclaration[32272-35277]"
    }, {
      "left" : "protected SettableBeanProperty constructSetterlessProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef)\n        throws JsonMappingException",
      "right" : "protected SettableBeanProperty constructSetterlessProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[35234-36532]:MethodDeclaration[35283-36581]"
    }, {
      "left" : "protected boolean isPotentialBeanType(Class<?> type)",
      "right" : "protected boolean isPotentialBeanType(Class<?> type)",
      "info" : "MethodDeclaration[36733-37935]:MethodDeclaration[36782-37984]"
    }, {
      "left" : "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc,\n            Class<?> type, Map<Class<?>,Boolean> ignoredTypes)",
      "right" : "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc,\n            Class<?> type, Map<Class<?>,Boolean> ignoredTypes)",
      "info" : "MethodDeclaration[37941-38677]:MethodDeclaration[37990-38726]"
    } ],
    "mappings" : [
 {
      "left" : "BasicDeserializerFactory",
      "right" : "BasicDeserializerFactory",
      "info" : "SimpleType[1418-1442]:SimpleType[1418-1442]"
    }, {
      "left" : "java.io.Serializable",
      "right" : "java.io.Serializable",
      "info" : "SimpleType[1458-1478]:SimpleType[1458-1478]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2211-2217]:Modifier[2211-2217]"
    }, {
      "left" : "BeanDeserializerFactory",
      "right" : "BeanDeserializerFactory",
      "info" : "SimpleName[2218-2241]:SimpleName[2218-2241]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[2242-2274]:SingleVariableDeclaration[2242-2274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2276-2306]:Block[2276-2306]"
    }, {
      "left" : "super(config);",
      "right" : "super(config);",
      "info" : "SuperConstructorInvocation[2286-2300]:SuperConstructorInvocation[2286-2300]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2487-2496]:MarkerAnnotation[2487-2496]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2501-2507]:Modifier[2501-2507]"
    }, {
      "left" : "DeserializerFactory",
      "right" : "DeserializerFactory",
      "info" : "SimpleType[2508-2527]:SimpleType[2508-2527]"
    }, {
      "left" : "withConfig",
      "right" : "withConfig",
      "info" : "SimpleName[2528-2538]:SimpleName[2528-2538]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[2539-2571]:SingleVariableDeclaration[2539-2571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2577-3549]:Block[2577-3549]"
    }, {
      "left" : "if (_factoryConfig == config)",
      "right" : "if (_factoryConfig == config)",
      "info" : "IfStatement[2587-2653]:IfStatement[2587-2653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2617-2653]:Block[2617-2653]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2631-2643]:ReturnStatement[2631-2643]"
    }, {
      "left" : "if (getClass() != BeanDeserializerFactory.class)",
      "right" : "if (getClass() != BeanDeserializerFactory.class)",
      "info" : "IfStatement[3141-3491]:IfStatement[3141-3491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3190-3491]:Block[3190-3491]"
    }, {
      "left" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
      "right" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
      "info" : "ThrowStatement[3204-3481]:ThrowStatement[3204-3481]"
    }, {
      "left" : "return new BeanDeserializerFactory(config);",
      "right" : "return new BeanDeserializerFactory(config);",
      "info" : "ReturnStatement[3500-3543]:ReturnStatement[3500-3543]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3917-3926]:MarkerAnnotation[3917-3926]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3931-3937]:Modifier[3931-3937]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[3938-3962]:ParameterizedType[3938-3962]"
    }, {
      "left" : "createBeanDeserializer",
      "right" : "createBeanDeserializer",
      "info" : "SimpleName[3963-3985]:SimpleName[3963-3985]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[3986-4013]:SingleVariableDeclaration[3986-4013]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[4027-4040]:SingleVariableDeclaration[4027-4040]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[4042-4066]:SingleVariableDeclaration[4042-4066]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[4083-4103]:SimpleType[4083-4103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4108-6151]:Block[4108-6200]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[4118-4172]:VariableDeclarationStatement[4118-4172]"
    }, {
      "left" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
      "right" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
      "info" : "VariableDeclarationStatement[4227-4313]:VariableDeclarationStatement[4227-4313]"
    }, {
      "left" : "if (custom != null)",
      "right" : "if (custom != null)",
      "info" : "IfStatement[4322-4380]:IfStatement[4322-4380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4342-4380]:Block[4342-4380]"
    }, {
      "left" : "return custom;",
      "right" : "return custom;",
      "info" : "ReturnStatement[4356-4370]:ReturnStatement[4356-4370]"
    }, {
      "left" : "if (type.isThrowable())",
      "right" : "if (type.isThrowable())",
      "info" : "IfStatement[4561-4665]:IfStatement[4561-4665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4585-4665]:Block[4585-4665]"
    }, {
      "left" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
      "right" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[4599-4655]:ReturnStatement[4599-4655]"
    }, {
      "left" : "if (type.isAbstract() && !type.isPrimitive())",
      "right" : "if (type.isAbstract() && !type.isPrimitive())",
      "info" : "IfStatement[4946-5512]:IfStatement[4946-5512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4992-5512]:Block[4992-5512]"
    }, {
      "left" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
      "right" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[5075-5145]:VariableDeclarationStatement[5075-5145]"
    }, {
      "left" : "if (concreteType != null)",
      "right" : "if (concreteType != null)",
      "info" : "IfStatement[5158-5502]:IfStatement[5158-5502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5184-5502]:Block[5184-5502]"
    }, {
      "left" : "beanDesc = config.introspect(concreteType);",
      "right" : "beanDesc = config.introspect(concreteType);",
      "info" : "ExpressionStatement[5369-5412]:ExpressionStatement[5369-5412]"
    }, {
      "left" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
      "right" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
      "info" : "ReturnStatement[5429-5488]:ReturnStatement[5429-5488]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
      "right" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[5608-5749]:VariableDeclarationStatement[5608-5749]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[5758-5814]:IfStatement[5758-5814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5777-5814]:Block[5777-5814]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[5791-5804]:ReturnStatement[5791-5804]"
    }, {
      "left" : "if (!isPotentialBeanType(type.getRawClass()))",
      "right" : "if (!isPotentialBeanType(type.getRawClass()))",
      "info" : "IfStatement[5896-5978]:IfStatement[5896-5978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5942-5978]:Block[5942-5978]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5956-5968]:ReturnStatement[5956-5968]"
    }, {
      "left" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
      "right" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[6094-6145]:ReturnStatement[6143-6194]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6157-6166]:MarkerAnnotation[6206-6215]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6171-6177]:Modifier[6220-6226]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[6178-6202]:ParameterizedType[6227-6251]"
    }, {
      "left" : "createBuilderBasedDeserializer",
      "right" : "createBuilderBasedDeserializer",
      "info" : "SimpleName[6203-6233]:SimpleName[6252-6282]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[6241-6268]:SingleVariableDeclaration[6290-6317]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[6270-6288]:SingleVariableDeclaration[6319-6337]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[6290-6314]:SingleVariableDeclaration[6339-6363]"
    }, {
      "left" : "Class<?> builderClass",
      "right" : "Class<?> builderClass",
      "info" : "SingleVariableDeclaration[6322-6343]:SingleVariableDeclaration[6371-6392]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[6360-6380]:SimpleType[6409-6429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6385-6682]:Block[6434-6731]"
    }, {
      "left" : "JavaType builderType = ctxt.constructType(builderClass);",
      "right" : "JavaType builderType = ctxt.constructType(builderClass);",
      "info" : "VariableDeclarationStatement[6454-6510]:VariableDeclarationStatement[6503-6559]"
    }, {
      "left" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
      "right" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
      "info" : "VariableDeclarationStatement[6519-6600]:VariableDeclarationStatement[6568-6649]"
    }, {
      "left" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
      "right" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
      "info" : "ReturnStatement[6609-6676]:ReturnStatement[6658-6725]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6847-6856]:Modifier[6896-6905]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[6857-6876]:ParameterizedType[6906-6925]"
    }, {
      "left" : "findStdDeserializer",
      "right" : "findStdDeserializer",
      "info" : "SimpleName[6877-6896]:SimpleName[6926-6945]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[6897-6924]:SingleVariableDeclaration[6946-6973]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[6938-6951]:SingleVariableDeclaration[6987-7000]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[6953-6977]:SingleVariableDeclaration[7002-7026]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[6994-7014]:SimpleType[7043-7063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7019-7607]:Block[7068-7656]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
      "right" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[7133-7207]:VariableDeclarationStatement[7182-7256]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[7275-7579]:IfStatement[7324-7628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7294-7579]:Block[7343-7628]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[7308-7569]:IfStatement[7357-7618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7355-7569]:Block[7404-7618]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[7373-7555]:EnhancedForStatement[7422-7604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7449-7555]:Block[7498-7604]"
    }, {
      "left" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
      "right" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
      "info" : "ExpressionStatement[7471-7537]:ExpressionStatement[7520-7586]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[7588-7601]:ReturnStatement[7637-7650]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7617-7626]:Modifier[7666-7675]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[7627-7635]:SimpleType[7676-7684]"
    }, {
      "left" : "materializeAbstractType",
      "right" : "materializeAbstractType",
      "info" : "SimpleName[7636-7659]:SimpleName[7685-7708]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[7660-7687]:SingleVariableDeclaration[7709-7736]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[7701-7714]:SingleVariableDeclaration[7750-7763]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[7716-7740]:SingleVariableDeclaration[7765-7789]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7757-7777]:SimpleType[7806-7826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7782-8158]:Block[7831-8207]"
    }, {
      "left" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
      "right" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
      "info" : "EnhancedForStatement[7884-8131]:EnhancedForStatement[7933-8180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7954-8131]:Block[8003-8180]"
    }, {
      "left" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
      "right" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
      "info" : "VariableDeclarationStatement[7968-8038]:VariableDeclarationStatement[8017-8087]"
    }, {
      "left" : "if (concrete != null)",
      "right" : "if (concrete != null)",
      "info" : "IfStatement[8051-8121]:IfStatement[8100-8170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8073-8121]:Block[8122-8170]"
    }, {
      "left" : "return concrete;",
      "right" : "return concrete;",
      "info" : "ReturnStatement[8091-8107]:ReturnStatement[8140-8156]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8140-8152]:ReturnStatement[8189-8201]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[8702-8732]:SingleMemberAnnotation[8751-8781]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8737-8743]:Modifier[8786-8792]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[8744-8768]:ParameterizedType[8793-8817]"
    }, {
      "left" : "buildBeanDeserializer",
      "right" : "buildBeanDeserializer",
      "info" : "SimpleName[8769-8790]:SimpleName[8818-8839]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[8791-8818]:SingleVariableDeclaration[8840-8867]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[8832-8845]:SingleVariableDeclaration[8881-8894]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[8847-8871]:SingleVariableDeclaration[8896-8920]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[8888-8908]:SimpleType[8937-8957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8913-11268]:Block[8962-11317]"
    }, {
      "left" : "ValueInstantiator valueInstantiator;",
      "right" : "ValueInstantiator valueInstantiator;",
      "info" : "VariableDeclarationStatement[8980-9016]:VariableDeclarationStatement[9029-9065]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[9336-9536]:TryStatement[9385-9585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9340-9422]:Block[9389-9471]"
    }, {
      "left" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
      "right" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
      "info" : "ExpressionStatement[9354-9412]:ExpressionStatement[9403-9461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9458-9536]:Block[9507-9585]"
    }, {
      "left" : "return new NoClassDefFoundDeserializer<Object>(error);",
      "right" : "return new NoClassDefFoundDeserializer<Object>(error);",
      "info" : "ReturnStatement[9472-9526]:ReturnStatement[9521-9575]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[9545-9628]:VariableDeclarationStatement[9594-9677]"
    }, {
      "left" : "builder.setValueInstantiator(valueInstantiator);",
      "right" : "builder.setValueInstantiator(valueInstantiator);",
      "info" : "ExpressionStatement[9637-9685]:ExpressionStatement[9686-9734]"
    }, {
      "left" : "addBeanProps(ctxt, beanDesc, builder);",
      "right" : "addBeanProps(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[9758-9796]:ExpressionStatement[9807-9845]"
    }, {
      "left" : "addObjectIdReader(ctxt, beanDesc, builder);",
      "right" : "addObjectIdReader(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[9805-9848]:ExpressionStatement[9854-9897]"
    }, {
      "left" : "addReferenceProperties(ctxt, beanDesc, builder);",
      "right" : "addReferenceProperties(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[9943-9991]:ExpressionStatement[9992-10040]"
    }, {
      "left" : "addInjectables(ctxt, beanDesc, builder);",
      "right" : "addInjectables(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[10000-10040]:ExpressionStatement[10049-10089]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[10058-10112]:VariableDeclarationStatement[10107-10161]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[10194-10428]:IfStatement[10243-10477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10241-10428]:Block[10290-10477]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[10255-10418]:EnhancedForStatement[10304-10467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10331-10418]:Block[10380-10467]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[10349-10404]:ExpressionStatement[10398-10453]"
    }, {
      "left" : "JsonDeserializer<?> deserializer;",
      "right" : "JsonDeserializer<?> deserializer;",
      "info" : "VariableDeclarationStatement[10437-10470]:VariableDeclarationStatement[10486-10519]"
    }, {
      "left" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
      "right" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
      "info" : "IfStatement[10656-10842]:IfStatement[10705-10891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10718-10781]:Block[10767-10830]"
    }, {
      "left" : "deserializer = builder.buildAbstract();",
      "right" : "deserializer = builder.buildAbstract();",
      "info" : "ExpressionStatement[10732-10771]:ExpressionStatement[10781-10820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10787-10842]:Block[10836-10891]"
    }, {
      "left" : "deserializer = builder.build();",
      "right" : "deserializer = builder.build();",
      "info" : "ExpressionStatement[10801-10832]:ExpressionStatement[10850-10881]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[10957-11206]:IfStatement[11006-11255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11004-11206]:Block[11053-11255]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[11018-11196]:EnhancedForStatement[11067-11245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11094-11196]:Block[11143-11245]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "info" : "ExpressionStatement[11112-11182]:ExpressionStatement[11161-11231]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[11215-11262]:ReturnStatement[11264-11311]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[11562-11592]:SingleMemberAnnotation[11611-11641]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11597-11606]:Modifier[11646-11655]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[11607-11631]:ParameterizedType[11656-11680]"
    }, {
      "left" : "buildBuilderBasedDeserializer",
      "right" : "buildBuilderBasedDeserializer",
      "info" : "SimpleName[11632-11661]:SimpleName[11681-11710]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[11669-11696]:SingleVariableDeclaration[11718-11745]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[11698-11716]:SingleVariableDeclaration[11747-11765]"
    }, {
      "left" : "BeanDescription builderDesc",
      "right" : "BeanDescription builderDesc",
      "info" : "SingleVariableDeclaration[11718-11745]:SingleVariableDeclaration[11767-11794]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[11762-11782]:SimpleType[11811-11831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11787-14072]:Block[11836-14121]"
    }, {
      "left" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
      "right" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
      "info" : "VariableDeclarationStatement[11850-11929]:VariableDeclarationStatement[11899-11978]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[11938-11992]:VariableDeclarationStatement[11987-12041]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
      "info" : "VariableDeclarationStatement[12001-12087]:VariableDeclarationStatement[12050-12136]"
    }, {
      "left" : "builder.setValueInstantiator(valueInstantiator);",
      "right" : "builder.setValueInstantiator(valueInstantiator);",
      "info" : "ExpressionStatement[12096-12144]:ExpressionStatement[12145-12193]"
    }, {
      "left" : "addBeanProps(ctxt, builderDesc, builder);",
      "right" : "addBeanProps(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[12224-12265]:ExpressionStatement[12273-12314]"
    }, {
      "left" : "addObjectIdReader(ctxt, builderDesc, builder);",
      "right" : "addObjectIdReader(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[12274-12320]:ExpressionStatement[12323-12369]"
    }, {
      "left" : "addReferenceProperties(ctxt, builderDesc, builder);",
      "right" : "addReferenceProperties(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[12423-12474]:ExpressionStatement[12472-12523]"
    }, {
      "left" : "addInjectables(ctxt, builderDesc, builder);",
      "right" : "addInjectables(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[12483-12526]:ExpressionStatement[12532-12575]"
    }, {
      "left" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
      "right" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
      "info" : "VariableDeclarationStatement[12536-12610]:VariableDeclarationStatement[12585-12659]"
    }, {
      "left" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
      "right" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
      "info" : "VariableDeclarationStatement[12619-12732]:VariableDeclarationStatement[12668-12781]"
    }, {
      "left" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
      "right" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
      "info" : "VariableDeclarationStatement[12799-12875]:VariableDeclarationStatement[12848-12924]"
    }, {
      "left" : "if (buildMethod != null)",
      "right" : "if (buildMethod != null)",
      "info" : "IfStatement[12884-13180]:IfStatement[12933-13229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12909-13180]:Block[12958-13229]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[12981-13170]:IfStatement[13030-13219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13022-13170]:Block[13071-13219]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[13037-13156]:ExpressionStatement[13086-13205]"
    }, {
      "left" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
      "right" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
      "info" : "ExpressionStatement[13189-13240]:ExpressionStatement[13238-13289]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[13297-13534]:IfStatement[13346-13583]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13344-13534]:Block[13393-13583]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[13358-13524]:EnhancedForStatement[13407-13573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13434-13524]:Block[13483-13573]"
    }, {
      "left" : "builder = mod.updateBuilder(config, builderDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, builderDesc, builder);",
      "info" : "ExpressionStatement[13452-13510]:ExpressionStatement[13501-13559]"
    }, {
      "left" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
      "right" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
      "info" : "VariableDeclarationStatement[13543-13643]:VariableDeclarationStatement[13592-13692]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[13758-14010]:IfStatement[13807-14059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13805-14010]:Block[13854-14059]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[13819-14000]:EnhancedForStatement[13868-14049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13895-14000]:Block[13944-14049]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
      "info" : "ExpressionStatement[13913-13986]:ExpressionStatement[13962-14035]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[14019-14066]:ReturnStatement[14068-14115]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14082-14091]:Modifier[14131-14140]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14092-14096]:PrimitiveType[14141-14145]"
    }, {
      "left" : "addObjectIdReader",
      "right" : "addObjectIdReader",
      "info" : "SimpleName[14097-14114]:SimpleName[14146-14163]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[14115-14142]:SingleVariableDeclaration[14164-14191]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[14156-14180]:SingleVariableDeclaration[14205-14229]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[14182-14213]:SingleVariableDeclaration[14231-14262]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[14230-14250]:SimpleType[14279-14299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14255-15932]:Block[14304-15981]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "info" : "VariableDeclarationStatement[14265-14320]:VariableDeclarationStatement[14314-14369]"
    }, {
      "left" : "if (objectIdInfo == null)",
      "right" : "if (objectIdInfo == null)",
      "info" : "IfStatement[14329-14386]:IfStatement[14378-14435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14355-14386]:Block[14404-14435]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[14369-14376]:ReturnStatement[14418-14425]"
    }, {
      "left" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "right" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "info" : "VariableDeclarationStatement[14395-14448]:VariableDeclarationStatement[14444-14497]"
    }, {
      "left" : "JavaType idType;",
      "right" : "JavaType idType;",
      "info" : "VariableDeclarationStatement[14457-14473]:VariableDeclarationStatement[14506-14522]"
    }, {
      "left" : "SettableBeanProperty idProp;",
      "right" : "SettableBeanProperty idProp;",
      "info" : "VariableDeclarationStatement[14482-14510]:VariableDeclarationStatement[14531-14559]"
    }, {
      "left" : "ObjectIdGenerator<?> gen;",
      "right" : "ObjectIdGenerator<?> gen;",
      "info" : "VariableDeclarationStatement[14519-14544]:VariableDeclarationStatement[14568-14593]"
    }, {
      "left" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "VariableDeclarationStatement[14554-14651]:VariableDeclarationStatement[14603-14700]"
    }, {
      "left" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "right" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "info" : "IfStatement[14732-15617]:IfStatement[14781-15666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14793-15328]:Block[14842-15377]"
    }, {
      "left" : "PropertyName propName = objectIdInfo.getPropertyName();",
      "right" : "PropertyName propName = objectIdInfo.getPropertyName();",
      "info" : "VariableDeclarationStatement[14845-14900]:VariableDeclarationStatement[14894-14949]"
    }, {
      "left" : "idProp = builder.findProperty(propName);",
      "right" : "idProp = builder.findProperty(propName);",
      "info" : "ExpressionStatement[14913-14953]:ExpressionStatement[14962-15002]"
    }, {
      "left" : "if (idProp == null)",
      "right" : "if (idProp == null)",
      "info" : "IfStatement[14966-15200]:IfStatement[15015-15249]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14986-15200]:Block[15035-15249]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
      "right" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
      "info" : "ThrowStatement[15004-15186]:ThrowStatement[15053-15235]"
    }, {
      "left" : "idType = idProp.getType();",
      "right" : "idType = idProp.getType();",
      "info" : "ExpressionStatement[15213-15239]:ExpressionStatement[15262-15288]"
    }, {
      "left" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
      "right" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
      "info" : "ExpressionStatement[15252-15318]:ExpressionStatement[15301-15367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15334-15617]:Block[15383-15666]"
    }, {
      "left" : "JavaType type = ctxt.constructType(implClass);",
      "right" : "JavaType type = ctxt.constructType(implClass);",
      "info" : "VariableDeclarationStatement[15348-15394]:VariableDeclarationStatement[15397-15443]"
    }, {
      "left" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "right" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "info" : "ExpressionStatement[15407-15491]:ExpressionStatement[15456-15540]"
    }, {
      "left" : "idProp = null;",
      "right" : "idProp = null;",
      "info" : "ExpressionStatement[15504-15518]:ExpressionStatement[15553-15567]"
    }, {
      "left" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "ExpressionStatement[15531-15607]:ExpressionStatement[15580-15656]"
    }, {
      "left" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
      "right" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
      "info" : "VariableDeclarationStatement[15712-15779]:VariableDeclarationStatement[15761-15828]"
    }, {
      "left" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
      "right" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
      "info" : "ExpressionStatement[15788-15926]:ExpressionStatement[15837-15975]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[15942-15972]:SingleMemberAnnotation[15991-16021]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15977-15983]:Modifier[16026-16032]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[15984-16008]:ParameterizedType[16033-16057]"
    }, {
      "left" : "buildThrowableDeserializer",
      "right" : "buildThrowableDeserializer",
      "info" : "SimpleName[16009-16035]:SimpleName[16058-16084]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[16036-16063]:SingleVariableDeclaration[16085-16112]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[16077-16090]:SingleVariableDeclaration[16126-16139]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[16092-16116]:SingleVariableDeclaration[16141-16165]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[16133-16153]:SimpleType[16182-16202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16158-19004]:Block[16207-19053]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[16168-16222]:VariableDeclarationStatement[16217-16271]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[16295-16378]:VariableDeclarationStatement[16344-16427]"
    }, {
      "left" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
      "right" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
      "info" : "ExpressionStatement[16387-16455]:ExpressionStatement[16436-16504]"
    }, {
      "left" : "addBeanProps(ctxt, beanDesc, builder);",
      "right" : "addBeanProps(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[16465-16503]:ExpressionStatement[16514-16552]"
    }, {
      "left" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
      "right" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
      "info" : "VariableDeclarationStatement[16756-16829]:VariableDeclarationStatement[16805-16878]"
    }, {
      "left" : "if (am != null)",
      "right" : "if (am != null)",
      "info" : "IfStatement[16838-17517]:IfStatement[16887-17566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16854-17517]:Block[16903-17566]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
      "info" : "VariableDeclarationStatement[16892-17039]:VariableDeclarationStatement[16941-17088]"
    }, {
      "left" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
      "right" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
      "info" : "VariableDeclarationStatement[17052-17175]:VariableDeclarationStatement[17101-17224]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[17188-17507]:IfStatement[17237-17556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17206-17507]:Block[17255-17556]"
    }, {
      "left" : "builder.addOrReplaceProperty(prop, true);",
      "right" : "builder.addOrReplaceProperty(prop, true);",
      "info" : "ExpressionStatement[17452-17493]:ExpressionStatement[17501-17542]"
    }, {
      "left" : "builder.addIgnorable(\"localizedMessage\");",
      "right" : "builder.addIgnorable(\"localizedMessage\");",
      "info" : "ExpressionStatement[17581-17622]:ExpressionStatement[17630-17671]"
    }, {
      "left" : "builder.addIgnorable(\"suppressed\");",
      "right" : "builder.addIgnorable(\"suppressed\");",
      "info" : "ExpressionStatement[17704-17739]:ExpressionStatement[17753-17788]"
    }, {
      "left" : "builder.addIgnorable(\"message\");",
      "right" : "builder.addIgnorable(\"message\");",
      "info" : "ExpressionStatement[17874-17906]:ExpressionStatement[17923-17955]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[17974-18208]:IfStatement[18023-18257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18021-18208]:Block[18070-18257]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[18035-18198]:EnhancedForStatement[18084-18247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18111-18198]:Block[18160-18247]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[18129-18184]:ExpressionStatement[18178-18233]"
    }, {
      "left" : "JsonDeserializer<?> deserializer = builder.build();",
      "right" : "JsonDeserializer<?> deserializer = builder.build();",
      "info" : "VariableDeclarationStatement[18217-18268]:VariableDeclarationStatement[18266-18317]"
    }, {
      "left" : "if (deserializer instanceof BeanDeserializer)",
      "right" : "if (deserializer instanceof BeanDeserializer)",
      "info" : "IfStatement[18449-18593]:IfStatement[18498-18642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18495-18593]:Block[18544-18642]"
    }, {
      "left" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
      "right" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
      "info" : "ExpressionStatement[18509-18583]:ExpressionStatement[18558-18632]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[18693-18942]:IfStatement[18742-18991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18740-18942]:Block[18789-18991]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[18754-18932]:EnhancedForStatement[18803-18981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18830-18932]:Block[18879-18981]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "info" : "ExpressionStatement[18848-18918]:ExpressionStatement[18897-18967]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[18951-18998]:ReturnStatement[19000-19047]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[19432-19441]:Modifier[19481-19490]"
    }, {
      "left" : "BeanDeserializerBuilder",
      "right" : "BeanDeserializerBuilder",
      "info" : "SimpleType[19442-19465]:SimpleType[19491-19514]"
    }, {
      "left" : "constructBeanDeserializerBuilder",
      "right" : "constructBeanDeserializerBuilder",
      "info" : "SimpleName[19466-19498]:SimpleName[19515-19547]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[19499-19526]:SingleVariableDeclaration[19548-19575]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[19540-19564]:SingleVariableDeclaration[19589-19613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19566-19645]:Block[19615-19694]"
    }, {
      "left" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
      "right" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
      "info" : "ReturnStatement[19576-19639]:ReturnStatement[19625-19688]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[19888-19897]:Modifier[19937-19946]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19898-19902]:PrimitiveType[19947-19951]"
    }, {
      "left" : "addBeanProps",
      "right" : "addBeanProps",
      "info" : "SimpleName[19903-19915]:SimpleName[19952-19964]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[19916-19943]:SingleVariableDeclaration[19965-19992]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[19957-19981]:SingleVariableDeclaration[20006-20030]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[19983-20014]:SingleVariableDeclaration[20032-20063]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[20031-20051]:SimpleType[20080-20100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20056-26078]:Block[20105-26127]"
    }, {
      "left" : "final SettableBeanProperty[] creatorProps =\n                builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig());",
      "right" : "final SettableBeanProperty[] creatorProps =\n                builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig());",
      "info" : "VariableDeclarationStatement[20066-20198]:VariableDeclarationStatement[20115-20247]"
    }, {
      "left" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
      "right" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
      "info" : "VariableDeclarationStatement[20207-20267]:VariableDeclarationStatement[20256-20316]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[20332-20395]:VariableDeclarationStatement[20381-20444]"
    }, {
      "left" : "if (intr != null)",
      "right" : "if (intr != null)",
      "info" : "IfStatement[20404-20629]:IfStatement[20453-20678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20422-20629]:Block[20471-20678]"
    }, {
      "left" : "Boolean B = intr.findIgnoreUnknownProperties(beanDesc.getClassInfo());",
      "right" : "Boolean B = intr.findIgnoreUnknownProperties(beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[20436-20506]:VariableDeclarationStatement[20485-20555]"
    }, {
      "left" : "if (B != null)",
      "right" : "if (B != null)",
      "info" : "IfStatement[20519-20619]:IfStatement[20568-20668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20534-20619]:Block[20583-20668]"
    }, {
      "left" : "builder.setIgnoreUnknownProperties(B.booleanValue());",
      "right" : "builder.setIgnoreUnknownProperties(B.booleanValue());",
      "info" : "ExpressionStatement[20552-20605]:ExpressionStatement[20601-20654]"
    }, {
      "left" : "Set<String> ignored = ArrayBuilders.arrayToSet(intr.findPropertiesToIgnore(beanDesc.getClassInfo(), false));",
      "right" : "Set<String> ignored = ArrayBuilders.arrayToSet(intr.findPropertiesToIgnore(beanDesc.getClassInfo(), false));",
      "info" : "VariableDeclarationStatement[20683-20791]:VariableDeclarationStatement[20732-20840]"
    }, {
      "left" : "for (String propName : ignored)",
      "right" : "for (String propName : ignored)",
      "info" : "EnhancedForStatement[20808-20895]:EnhancedForStatement[20857-20944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20840-20895]:Block[20889-20944]"
    }, {
      "left" : "builder.addIgnorable(propName);",
      "right" : "builder.addIgnorable(propName);",
      "info" : "ExpressionStatement[20854-20885]:ExpressionStatement[20903-20934]"
    }, {
      "left" : "AnnotatedMethod anySetter = beanDesc.findAnySetter();",
      "right" : "AnnotatedMethod anySetter = beanDesc.findAnySetter();",
      "info" : "VariableDeclarationStatement[20957-21010]:VariableDeclarationStatement[21006-21059]"
    }, {
      "left" : "if (anySetter != null)",
      "right" : "if (anySetter != null)",
      "info" : "IfStatement[21019-21134]:IfStatement[21068-21183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21042-21134]:Block[21091-21183]"
    }, {
      "left" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetter));",
      "right" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetter));",
      "info" : "ExpressionStatement[21056-21124]:ExpressionStatement[21105-21173]"
    }, {
      "left" : "if (anySetter == null)",
      "right" : "if (anySetter == null)",
      "info" : "IfStatement[21296-21734]:IfStatement[21345-21783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21319-21734]:Block[21368-21783]"
    }, {
      "left" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
      "right" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
      "info" : "VariableDeclarationStatement[21333-21398]:VariableDeclarationStatement[21382-21447]"
    }, {
      "left" : "if (ignored2 != null)",
      "right" : "if (ignored2 != null)",
      "info" : "IfStatement[21411-21724]:IfStatement[21460-21773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21433-21724]:Block[21482-21773]"
    }, {
      "left" : "for (String propName : ignored2)",
      "right" : "for (String propName : ignored2)",
      "info" : "EnhancedForStatement[21451-21710]:EnhancedForStatement[21500-21759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21484-21710]:Block[21533-21759]"
    }, {
      "left" : "builder.addIgnorable(propName);",
      "right" : "builder.addIgnorable(propName);",
      "info" : "ExpressionStatement[21661-21692]:ExpressionStatement[21710-21741]"
    }, {
      "left" : "final boolean useGettersAsSetters = (ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS));",
      "right" : "final boolean useGettersAsSetters = (ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS));",
      "info" : "VariableDeclarationStatement[21743-21903]:VariableDeclarationStatement[21792-21952]"
    }, {
      "left" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
      "right" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
      "info" : "VariableDeclarationStatement[21971-22104]:VariableDeclarationStatement[22020-22153]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[22175-22424]:IfStatement[22224-22473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22222-22424]:Block[22271-22473]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[22236-22414]:EnhancedForStatement[22285-22463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22312-22414]:Block[22361-22463]"
    }, {
      "left" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
      "right" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
      "info" : "ExpressionStatement[22330-22400]:ExpressionStatement[22379-22449]"
    }, {
      "left" : "for (BeanPropertyDefinition propDef : propDefs)",
      "right" : "for (BeanPropertyDefinition propDef : propDefs)",
      "info" : "EnhancedForStatement[22530-26072]:EnhancedForStatement[22579-26121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22578-26072]:Block[22627-26121]"
    }, {
      "left" : "SettableBeanProperty prop = null;",
      "right" : "SettableBeanProperty prop = null;",
      "info" : "VariableDeclarationStatement[22592-22625]:VariableDeclarationStatement[22641-22674]"
    }, {
      "left" : "if (propDef.hasSetter())",
      "right" : "if (propDef.hasSetter())",
      "info" : "IfStatement[22917-23991]:IfStatement[22966-24040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22942-23127]:Block[22991-23176]"
    }, {
      "left" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
      "right" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
      "info" : "VariableDeclarationStatement[22960-23024]:VariableDeclarationStatement[23009-23073]"
    }, {
      "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "info" : "ExpressionStatement[23041-23113]:ExpressionStatement[23090-23162]"
    }, {
      "left" : "if (propDef.hasField())",
      "right" : "if (propDef.hasField())",
      "info" : "IfStatement[23133-23991]:IfStatement[23182-24040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23157-23331]:Block[23206-23380]"
    }, {
      "left" : "JavaType propertyType = propDef.getField().getType();",
      "right" : "JavaType propertyType = propDef.getField().getType();",
      "info" : "VariableDeclarationStatement[23175-23228]:VariableDeclarationStatement[23224-23277]"
    }, {
      "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "info" : "ExpressionStatement[23245-23317]:ExpressionStatement[23294-23366]"
    }, {
      "left" : "if (useGettersAsSetters && propDef.hasGetter())",
      "right" : "if (useGettersAsSetters && propDef.hasGetter())",
      "info" : "IfStatement[23337-23991]:IfStatement[23386-24040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23385-23991]:Block[23434-24040]"
    }, {
      "left" : "AnnotatedMethod getter = propDef.getGetter();",
      "right" : "AnnotatedMethod getter = propDef.getGetter();",
      "info" : "VariableDeclarationStatement[23553-23598]:VariableDeclarationStatement[23602-23647]"
    }, {
      "left" : "Class<?> rawPropertyType = getter.getRawType();",
      "right" : "Class<?> rawPropertyType = getter.getRawType();",
      "info" : "VariableDeclarationStatement[23686-23733]:VariableDeclarationStatement[23735-23782]"
    }, {
      "left" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
      "right" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
      "info" : "IfStatement[23750-23977]:IfStatement[23799-24026]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23877-23977]:Block[23926-24026]"
    }, {
      "left" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
      "right" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
      "info" : "ExpressionStatement[23899-23959]:ExpressionStatement[23948-24008]"
    }, {
      "left" : "if (isConcrete && propDef.hasConstructorParameter())",
      "right" : "if (isConcrete && propDef.hasConstructorParameter())",
      "info" : "IfStatement[24152-25497]:IfStatement[24201-25546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24205-25497]:Block[24254-25546]"
    }, {
      "left" : "final String name = propDef.getName();",
      "right" : "final String name = propDef.getName();",
      "info" : "VariableDeclarationStatement[24588-24626]:VariableDeclarationStatement[24637-24675]"
    }, {
      "left" : "CreatorProperty cprop = null;",
      "right" : "CreatorProperty cprop = null;",
      "info" : "VariableDeclarationStatement[24643-24672]:VariableDeclarationStatement[24692-24721]"
    }, {
      "left" : "if (creatorProps != null)",
      "right" : "if (creatorProps != null)",
      "info" : "IfStatement[24689-25034]:IfStatement[24738-25083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24715-25034]:Block[24764-25083]"
    }, {
      "left" : "for (SettableBeanProperty cp : creatorProps)",
      "right" : "for (SettableBeanProperty cp : creatorProps)",
      "info" : "EnhancedForStatement[24737-25016]:EnhancedForStatement[24786-25065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24782-25016]:Block[24831-25065]"
    }, {
      "left" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
      "right" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
      "info" : "IfStatement[24808-24994]:IfStatement[24857-25043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24874-24994]:Block[24923-25043]"
    }, {
      "left" : "cprop = (CreatorProperty) cp;",
      "right" : "cprop = (CreatorProperty) cp;",
      "info" : "ExpressionStatement[24904-24933]:ExpressionStatement[24953-24982]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[24962-24968]:BreakStatement[25011-25017]"
    }, {
      "left" : "if (cprop == null)",
      "right" : "if (cprop == null)",
      "info" : "IfStatement[25051-25271]:IfStatement[25100-25320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25070-25271]:Block[25119-25320]"
    }, {
      "left" : "throw ctxt.mappingException(\"Could not find creator property with name '%s' (in class %s)\",\n                            name, beanDesc.getBeanClass().getName());",
      "right" : "throw ctxt.mappingException(\"Could not find creator property with name '%s' (in class %s)\",\n                            name, beanDesc.getBeanClass().getName());",
      "info" : "ThrowStatement[25092-25253]:ThrowStatement[25141-25302]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[25288-25376]:IfStatement[25337-25425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25306-25376]:Block[25355-25425]"
    }, {
      "left" : "cprop.setFallbackSetter(prop);",
      "right" : "cprop.setFallbackSetter(prop);",
      "info" : "ExpressionStatement[25328-25358]:ExpressionStatement[25377-25407]"
    }, {
      "left" : "prop = cprop;",
      "right" : "prop = cprop;",
      "info" : "ExpressionStatement[25393-25406]:ExpressionStatement[25442-25455]"
    }, {
      "left" : "builder.addCreatorProperty(cprop);",
      "right" : "builder.addCreatorProperty(cprop);",
      "info" : "ExpressionStatement[25423-25457]:ExpressionStatement[25472-25506]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[25474-25483]:ContinueStatement[25523-25532]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[25511-26062]:IfStatement[25560-26111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25529-26062]:Block[25578-26111]"
    }, {
      "left" : "Class<?>[] views = propDef.findViews();",
      "right" : "Class<?>[] views = propDef.findViews();",
      "info" : "VariableDeclarationStatement[25547-25586]:VariableDeclarationStatement[25596-25635]"
    }, {
      "left" : "if (views == null)",
      "right" : "if (views == null)",
      "info" : "IfStatement[25603-25889]:IfStatement[25652-25938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25622-25889]:Block[25671-25938]"
    }, {
      "left" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "right" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "info" : "IfStatement[25747-25871]:IfStatement[25796-25920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25806-25871]:Block[25855-25920]"
    }, {
      "left" : "views = NO_VIEWS;",
      "right" : "views = NO_VIEWS;",
      "info" : "ExpressionStatement[25832-25849]:ExpressionStatement[25881-25898]"
    }, {
      "left" : "prop.setViews(views);",
      "right" : "prop.setViews(views);",
      "info" : "ExpressionStatement[25984-26005]:ExpressionStatement[26033-26054]"
    }, {
      "left" : "builder.addProperty(prop);",
      "right" : "builder.addProperty(prop);",
      "info" : "ExpressionStatement[26022-26048]:ExpressionStatement[26071-26097]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[26311-26320]:Modifier[26360-26369]"
    }, {
      "left" : "List<BeanPropertyDefinition>",
      "right" : "List<BeanPropertyDefinition>",
      "info" : "ParameterizedType[26321-26349]:ParameterizedType[26370-26398]"
    }, {
      "left" : "filterBeanProps",
      "right" : "filterBeanProps",
      "info" : "SimpleName[26350-26365]:SimpleName[26399-26414]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[26366-26393]:SingleVariableDeclaration[26415-26442]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[26407-26431]:SingleVariableDeclaration[26456-26480]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[26433-26464]:SingleVariableDeclaration[26482-26513]"
    }, {
      "left" : "List<BeanPropertyDefinition> propDefsIn",
      "right" : "List<BeanPropertyDefinition> propDefsIn",
      "info" : "SingleVariableDeclaration[26478-26517]:SingleVariableDeclaration[26527-26566]"
    }, {
      "left" : "Set<String> ignored",
      "right" : "Set<String> ignored",
      "info" : "SingleVariableDeclaration[26531-26550]:SingleVariableDeclaration[26580-26599]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[26567-26587]:SimpleType[26616-26636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26592-28063]:Block[26641-28112]"
    }, {
      "left" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
      "right" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
      "info" : "VariableDeclarationStatement[26602-26732]:VariableDeclarationStatement[26651-26781]"
    }, {
      "left" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
      "right" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
      "info" : "VariableDeclarationStatement[26741-26814]:VariableDeclarationStatement[26790-26863]"
    }, {
      "left" : "for (BeanPropertyDefinition property : propDefsIn)",
      "right" : "for (BeanPropertyDefinition property : propDefsIn)",
      "info" : "EnhancedForStatement[26901-28034]:EnhancedForStatement[26950-28083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26952-28034]:Block[27001-28083]"
    }, {
      "left" : "String name = property.getName();",
      "right" : "String name = property.getName();",
      "info" : "VariableDeclarationStatement[26966-26999]:VariableDeclarationStatement[27015-27048]"
    }, {
      "left" : "if (ignored.contains(name))",
      "right" : "if (ignored.contains(name))",
      "info" : "IfStatement[27012-27152]:IfStatement[27061-27201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27040-27152]:Block[27089-27201]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[27129-27138]:ContinueStatement[27178-27187]"
    }, {
      "left" : "if (!property.hasConstructorParameter())",
      "right" : "if (!property.hasConstructorParameter())",
      "info" : "IfStatement[27165-27990]:IfStatement[27214-28039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27206-27990]:Block[27255-28039]"
    }, {
      "left" : "Class<?> rawPropertyType = null;",
      "right" : "Class<?> rawPropertyType = null;",
      "info" : "VariableDeclarationStatement[27257-27289]:VariableDeclarationStatement[27306-27338]"
    }, {
      "left" : "if (property.hasSetter())",
      "right" : "if (property.hasSetter())",
      "info" : "IfStatement[27306-27556]:IfStatement[27355-27605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27332-27434]:Block[27381-27483]"
    }, {
      "left" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
      "right" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
      "info" : "ExpressionStatement[27354-27416]:ExpressionStatement[27403-27465]"
    }, {
      "left" : "if (property.hasField())",
      "right" : "if (property.hasField())",
      "info" : "IfStatement[27440-27556]:IfStatement[27489-27605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27465-27556]:Block[27514-27605]"
    }, {
      "left" : "rawPropertyType = property.getField().getRawType();",
      "right" : "rawPropertyType = property.getField().getRawType();",
      "info" : "ExpressionStatement[27487-27538]:ExpressionStatement[27536-27587]"
    }, {
      "left" : "if ((rawPropertyType != null)\n                        && (isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes)))",
      "right" : "if ((rawPropertyType != null)\n                        && (isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes)))",
      "info" : "IfStatement[27652-27976]:IfStatement[27701-28025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27787-27976]:Block[27836-28025]"
    }, {
      "left" : "builder.addIgnorable(name);",
      "right" : "builder.addIgnorable(name);",
      "info" : "ExpressionStatement[27901-27928]:ExpressionStatement[27950-27977]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[27949-27958]:ContinueStatement[27998-28007]"
    }, {
      "left" : "result.add(property);",
      "right" : "result.add(property);",
      "info" : "ExpressionStatement[28003-28024]:ExpressionStatement[28052-28073]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[28043-28057]:ReturnStatement[28092-28106]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[28242-28251]:Modifier[28291-28300]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28252-28256]:PrimitiveType[28301-28305]"
    }, {
      "left" : "addReferenceProperties",
      "right" : "addReferenceProperties",
      "info" : "SimpleName[28257-28279]:SimpleName[28306-28328]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[28280-28307]:SingleVariableDeclaration[28329-28356]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[28321-28345]:SingleVariableDeclaration[28370-28394]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[28347-28378]:SingleVariableDeclaration[28396-28427]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[28395-28415]:SimpleType[28444-28464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28420-29323]:Block[28469-29372]"
    }, {
      "left" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
      "right" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
      "info" : "VariableDeclarationStatement[28511-28585]:VariableDeclarationStatement[28560-28634]"
    }, {
      "left" : "if (refs != null)",
      "right" : "if (refs != null)",
      "info" : "IfStatement[28594-29317]:IfStatement[28643-29366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28612-29317]:Block[28661-29366]"
    }, {
      "left" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
      "right" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
      "info" : "EnhancedForStatement[28626-29307]:EnhancedForStatement[28675-29356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28688-29307]:Block[28737-29356]"
    }, {
      "left" : "String name = en.getKey();",
      "right" : "String name = en.getKey();",
      "info" : "VariableDeclarationStatement[28706-28732]:VariableDeclarationStatement[28755-28781]"
    }, {
      "left" : "AnnotatedMember m = en.getValue();",
      "right" : "AnnotatedMember m = en.getValue();",
      "info" : "VariableDeclarationStatement[28749-28783]:VariableDeclarationStatement[28798-28832]"
    }, {
      "left" : "JavaType type;",
      "right" : "JavaType type;",
      "info" : "VariableDeclarationStatement[28800-28814]:VariableDeclarationStatement[28849-28863]"
    }, {
      "left" : "if (m instanceof AnnotatedMethod)",
      "right" : "if (m instanceof AnnotatedMethod)",
      "info" : "IfStatement[28831-29019]:IfStatement[28880-29068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28865-28954]:Block[28914-29003]"
    }, {
      "left" : "type = ((AnnotatedMethod) m).getParameterType(0);",
      "right" : "type = ((AnnotatedMethod) m).getParameterType(0);",
      "info" : "ExpressionStatement[28887-28936]:ExpressionStatement[28936-28985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28960-29019]:Block[29009-29068]"
    }, {
      "left" : "type = m.getType();",
      "right" : "type = m.getType();",
      "info" : "ExpressionStatement[28982-29001]:ExpressionStatement[29031-29050]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                \t\tctxt.getConfig(), m);",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                \t\tctxt.getConfig(), m);",
      "info" : "VariableDeclarationStatement[29036-29154]:VariableDeclarationStatement[29085-29203]"
    }, {
      "left" : "builder.addBackReferenceProperty(name, constructSettableProperty(\n                        ctxt, beanDesc, propDef, type));",
      "right" : "builder.addBackReferenceProperty(name, constructSettableProperty(\n                        ctxt, beanDesc, propDef, type));",
      "info" : "ExpressionStatement[29171-29293]:ExpressionStatement[29220-29342]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[29539-29548]:Modifier[29588-29597]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29549-29553]:PrimitiveType[29598-29602]"
    }, {
      "left" : "addInjectables",
      "right" : "addInjectables",
      "info" : "SimpleName[29554-29568]:SimpleName[29603-29617]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[29569-29596]:SingleVariableDeclaration[29618-29645]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[29610-29634]:SingleVariableDeclaration[29659-29683]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[29636-29667]:SingleVariableDeclaration[29685-29716]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[29684-29704]:SimpleType[29733-29753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29709-30461]:Block[29758-30510]"
    }, {
      "left" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
      "right" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
      "info" : "VariableDeclarationStatement[29719-29781]:VariableDeclarationStatement[29768-29830]"
    }, {
      "left" : "if (raw != null)",
      "right" : "if (raw != null)",
      "info" : "IfStatement[29790-30455]:IfStatement[29839-30504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29807-30455]:Block[29856-30504]"
    }, {
      "left" : "boolean fixAccess = ctxt.canOverrideAccessModifiers();",
      "right" : "boolean fixAccess = ctxt.canOverrideAccessModifiers();",
      "info" : "VariableDeclarationStatement[29821-29875]:VariableDeclarationStatement[29870-29924]"
    }, {
      "left" : "boolean forceAccess = fixAccess && ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS);",
      "right" : "boolean forceAccess = fixAccess && ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS);",
      "info" : "VariableDeclarationStatement[29888-29986]:VariableDeclarationStatement[29937-30035]"
    }, {
      "left" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
      "right" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
      "info" : "EnhancedForStatement[29999-30445]:EnhancedForStatement[30048-30494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30063-30445]:Block[30112-30494]"
    }, {
      "left" : "AnnotatedMember m = entry.getValue();",
      "right" : "AnnotatedMember m = entry.getValue();",
      "info" : "VariableDeclarationStatement[30081-30118]:VariableDeclarationStatement[30130-30167]"
    }, {
      "left" : "if (fixAccess)",
      "right" : "if (fixAccess)",
      "info" : "IfStatement[30135-30243]:IfStatement[30184-30292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30150-30243]:Block[30199-30292]"
    }, {
      "left" : "m.fixAccess(forceAccess);",
      "right" : "m.fixAccess(forceAccess);",
      "info" : "ExpressionStatement[30172-30197]:ExpressionStatement[30221-30246]"
    }, {
      "left" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
      "right" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
      "info" : "ExpressionStatement[30260-30431]:ExpressionStatement[30309-30480]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[30662-30671]:Modifier[30711-30720]"
    }, {
      "left" : "SettableAnyProperty",
      "right" : "SettableAnyProperty",
      "info" : "SimpleType[30672-30691]:SimpleType[30721-30740]"
    }, {
      "left" : "constructAnySetter",
      "right" : "constructAnySetter",
      "info" : "SimpleName[30692-30710]:SimpleName[30741-30759]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[30711-30738]:SingleVariableDeclaration[30760-30787]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[30752-30776]:SingleVariableDeclaration[30801-30825]"
    }, {
      "left" : "AnnotatedMethod setter",
      "right" : "AnnotatedMethod setter",
      "info" : "SingleVariableDeclaration[30778-30800]:SingleVariableDeclaration[30827-30849]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[30817-30837]:SimpleType[30866-30886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30842-32217]:Block[30891-32266]"
    }, {
      "left" : "if (ctxt.canOverrideAccessModifiers())",
      "right" : "if (ctxt.canOverrideAccessModifiers())",
      "info" : "IfStatement[30852-31024]:IfStatement[30901-31073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30891-31024]:Block[30940-31073]"
    }, {
      "left" : "setter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "setter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[30905-30986]:ExpressionStatement[30954-31035]"
    }, {
      "left" : "JavaType type = setter.getParameterType(1);",
      "right" : "JavaType type = setter.getParameterType(1);",
      "info" : "VariableDeclarationStatement[31097-31140]:VariableDeclarationStatement[31146-31189]"
    }, {
      "left" : "BeanProperty.Std property = new BeanProperty.Std(PropertyName.construct(setter.getName()),\n                type, null, beanDesc.getClassAnnotations(), setter,\n                PropertyMetadata.STD_OPTIONAL);",
      "right" : "BeanProperty.Std property = new BeanProperty.Std(PropertyName.construct(setter.getName()),\n                type, null, beanDesc.getClassAnnotations(), setter,\n                PropertyMetadata.STD_OPTIONAL);",
      "info" : "VariableDeclarationStatement[31149-31355]:VariableDeclarationStatement[31198-31404]"
    }, {
      "left" : "type = resolveType(ctxt, beanDesc, type, setter);",
      "right" : "type = resolveType(ctxt, beanDesc, type, setter);",
      "info" : "ExpressionStatement[31364-31413]:ExpressionStatement[31413-31462]"
    }, {
      "left" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, setter);",
      "right" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, setter);",
      "info" : "VariableDeclarationStatement[31681-31759]:VariableDeclarationStatement[31730-31808]"
    }, {
      "left" : "type = modifyTypeByAnnotation(ctxt, setter, type);",
      "right" : "type = modifyTypeByAnnotation(ctxt, setter, type);",
      "info" : "ExpressionStatement[31920-31970]:ExpressionStatement[31969-32019]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[31979-32053]:IfStatement[32028-32102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31998-32053]:Block[32047-32102]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[32012-32043]:ExpressionStatement[32061-32092]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[32062-32113]:VariableDeclarationStatement[32111-32162]"
    }, {
      "left" : "return new SettableAnyProperty(property, setter, type,\n                deser, typeDeser);",
      "right" : "return new SettableAnyProperty(property, setter, type,\n                deser, typeDeser);",
      "info" : "ReturnStatement[32122-32211]:ReturnStatement[32171-32260]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32484-32493]:Modifier[32533-32542]"
    }, {
      "left" : "SettableBeanProperty",
      "right" : "SettableBeanProperty",
      "info" : "SimpleType[32494-32514]:SimpleType[32543-32563]"
    }, {
      "left" : "constructSettableProperty",
      "right" : "constructSettableProperty",
      "info" : "SimpleName[32515-32540]:SimpleName[32564-32589]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[32541-32568]:SingleVariableDeclaration[32590-32617]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[32582-32606]:SingleVariableDeclaration[32631-32655]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[32608-32638]:SingleVariableDeclaration[32657-32687]"
    }, {
      "left" : "JavaType propType0",
      "right" : "JavaType propType0",
      "info" : "SingleVariableDeclaration[32652-32670]:SingleVariableDeclaration[32701-32719]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[32687-32707]:SimpleType[32736-32756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32712-35228]:Block[32761-35277]"
    }, {
      "left" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
      "right" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
      "info" : "VariableDeclarationStatement[32784-32845]:VariableDeclarationStatement[32833-32894]"
    }, {
      "left" : "if (ctxt.canOverrideAccessModifiers())",
      "right" : "if (ctxt.canOverrideAccessModifiers())",
      "info" : "IfStatement[32855-33488]:IfStatement[32904-33537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32894-33488]:Block[32943-33537]"
    }, {
      "left" : "if ((mutator instanceof AnnotatedField)\n                    && \"cause\".equals(mutator.getName())\n                    && Throwable.class.isAssignableFrom(propType0.getRawClass()))",
      "right" : "if ((mutator instanceof AnnotatedField)\n                    && \"cause\".equals(mutator.getName())\n                    && Throwable.class.isAssignableFrom(propType0.getRawClass()))",
      "info" : "IfStatement[33146-33478]:IfStatement[33195-33527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33325-33358]:Block[33374-33407]"
    }, {
      "left" : ";",
      "right" : ";",
      "info" : "EmptyStatement[33343-33344]:EmptyStatement[33392-33393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33364-33478]:Block[33413-33527]"
    }, {
      "left" : "mutator.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "mutator.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[33382-33464]:ExpressionStatement[33431-33513]"
    }, {
      "left" : "BeanProperty.Std property = new BeanProperty.Std(propDef.getFullName(),\n                propType0, propDef.getWrapperName(),\n                beanDesc.getClassAnnotations(), mutator, propDef.getMetadata());",
      "right" : "BeanProperty.Std property = new BeanProperty.Std(propDef.getFullName(),\n                propType0, propDef.getWrapperName(),\n                beanDesc.getClassAnnotations(), mutator, propDef.getMetadata());",
      "info" : "VariableDeclarationStatement[33580-33785]:VariableDeclarationStatement[33629-33834]"
    }, {
      "left" : "JavaType type = resolveType(ctxt, beanDesc, propType0, mutator);",
      "right" : "JavaType type = resolveType(ctxt, beanDesc, propType0, mutator);",
      "info" : "VariableDeclarationStatement[33794-33858]:VariableDeclarationStatement[33843-33907]"
    }, {
      "left" : "if (type != propType0)",
      "right" : "if (type != propType0)",
      "info" : "IfStatement[33895-33977]:IfStatement[33944-34026]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33918-33977]:Block[33967-34026]"
    }, {
      "left" : "property = property.withType(type);",
      "right" : "property = property.withType(type);",
      "info" : "ExpressionStatement[33932-33967]:ExpressionStatement[33981-34016]"
    }, {
      "left" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, mutator);",
      "right" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, mutator);",
      "info" : "VariableDeclarationStatement[34075-34158]:VariableDeclarationStatement[34124-34207]"
    }, {
      "left" : "type = modifyTypeByAnnotation(ctxt, mutator, type);",
      "right" : "type = modifyTypeByAnnotation(ctxt, mutator, type);",
      "info" : "ExpressionStatement[34167-34218]:ExpressionStatement[34216-34267]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[34227-34278]:VariableDeclarationStatement[34276-34327]"
    }, {
      "left" : "SettableBeanProperty prop;",
      "right" : "SettableBeanProperty prop;",
      "info" : "VariableDeclarationStatement[34287-34313]:VariableDeclarationStatement[34336-34362]"
    }, {
      "left" : "if (mutator instanceof AnnotatedMethod)",
      "right" : "if (mutator instanceof AnnotatedMethod)",
      "info" : "IfStatement[34322-34676]:IfStatement[34371-34725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34362-34517]:Block[34411-34566]"
    }, {
      "left" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
      "right" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
      "info" : "ExpressionStatement[34376-34507]:ExpressionStatement[34425-34556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34523-34676]:Block[34572-34725]"
    }, {
      "left" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
      "right" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
      "info" : "ExpressionStatement[34537-34666]:ExpressionStatement[34586-34715]"
    }, {
      "left" : "if (propDeser != null)",
      "right" : "if (propDeser != null)",
      "info" : "IfStatement[34685-34777]:IfStatement[34734-34826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34708-34777]:Block[34757-34826]"
    }, {
      "left" : "prop = prop.withValueDeserializer(propDeser);",
      "right" : "prop = prop.withValueDeserializer(propDeser);",
      "info" : "ExpressionStatement[34722-34767]:ExpressionStatement[34771-34816]"
    }, {
      "left" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
      "right" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
      "info" : "VariableDeclarationStatement[34848-34923]:VariableDeclarationStatement[34897-34972]"
    }, {
      "left" : "if (ref != null && ref.isManagedReference())",
      "right" : "if (ref != null && ref.isManagedReference())",
      "info" : "IfStatement[34932-35045]:IfStatement[34981-35094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34977-35045]:Block[35026-35094]"
    }, {
      "left" : "prop.setManagedReferenceName(ref.getName());",
      "right" : "prop.setManagedReferenceName(ref.getName());",
      "info" : "ExpressionStatement[34991-35035]:ExpressionStatement[35040-35084]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
      "info" : "VariableDeclarationStatement[35054-35109]:VariableDeclarationStatement[35103-35158]"
    }, {
      "left" : "if(objectIdInfo != null)",
      "right" : "if(objectIdInfo != null)",
      "info" : "IfStatement[35118-35201]:IfStatement[35167-35250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35142-35201]:Block[35191-35250]"
    }, {
      "left" : "prop.setObjectIdInfo(objectIdInfo);",
      "right" : "prop.setObjectIdInfo(objectIdInfo);",
      "info" : "ExpressionStatement[35156-35191]:ExpressionStatement[35205-35240]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[35210-35222]:ReturnStatement[35259-35271]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[35353-35362]:Modifier[35402-35411]"
    }, {
      "left" : "SettableBeanProperty",
      "right" : "SettableBeanProperty",
      "info" : "SimpleType[35363-35383]:SimpleType[35412-35432]"
    }, {
      "left" : "constructSetterlessProperty",
      "right" : "constructSetterlessProperty",
      "info" : "SimpleName[35384-35411]:SimpleName[35433-35460]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[35412-35439]:SingleVariableDeclaration[35461-35488]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[35453-35477]:SingleVariableDeclaration[35502-35526]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[35479-35509]:SingleVariableDeclaration[35528-35558]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[35526-35546]:SimpleType[35575-35595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35551-36532]:Block[35600-36581]"
    }, {
      "left" : "final AnnotatedMethod getter = propDef.getGetter();",
      "right" : "final AnnotatedMethod getter = propDef.getGetter();",
      "info" : "VariableDeclarationStatement[35561-35612]:VariableDeclarationStatement[35610-35661]"
    }, {
      "left" : "if (ctxt.canOverrideAccessModifiers())",
      "right" : "if (ctxt.canOverrideAccessModifiers())",
      "info" : "IfStatement[35667-35811]:IfStatement[35716-35860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35706-35811]:Block[35755-35860]"
    }, {
      "left" : "getter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "getter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[35720-35801]:ExpressionStatement[35769-35850]"
    }, {
      "left" : "JavaType type = getter.getType();",
      "right" : "JavaType type = getter.getType();",
      "info" : "VariableDeclarationStatement[35820-35853]:VariableDeclarationStatement[35869-35902]"
    }, {
      "left" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, getter);",
      "right" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, getter);",
      "info" : "VariableDeclarationStatement[35950-36032]:VariableDeclarationStatement[35999-36081]"
    }, {
      "left" : "type = modifyTypeByAnnotation(ctxt, getter, type);",
      "right" : "type = modifyTypeByAnnotation(ctxt, getter, type);",
      "info" : "ExpressionStatement[36041-36091]:ExpressionStatement[36090-36140]"
    }, {
      "left" : "type = resolveType(ctxt, beanDesc, type, getter);",
      "right" : "type = resolveType(ctxt, beanDesc, type, getter);",
      "info" : "ExpressionStatement[36153-36202]:ExpressionStatement[36202-36251]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[36211-36262]:VariableDeclarationStatement[36260-36311]"
    }, {
      "left" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
      "right" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
      "info" : "VariableDeclarationStatement[36271-36404]:VariableDeclarationStatement[36320-36453]"
    }, {
      "left" : "if (propDeser != null)",
      "right" : "if (propDeser != null)",
      "info" : "IfStatement[36413-36505]:IfStatement[36462-36554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36436-36505]:Block[36485-36554]"
    }, {
      "left" : "prop = prop.withValueDeserializer(propDeser);",
      "right" : "prop = prop.withValueDeserializer(propDeser);",
      "info" : "ExpressionStatement[36450-36495]:ExpressionStatement[36499-36544]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[36514-36526]:ReturnStatement[36563-36575]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[37067-37076]:Modifier[37116-37125]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[37077-37084]:PrimitiveType[37126-37133]"
    }, {
      "left" : "isPotentialBeanType",
      "right" : "isPotentialBeanType",
      "info" : "SimpleName[37085-37104]:SimpleName[37134-37153]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[37105-37118]:SingleVariableDeclaration[37154-37167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37124-37935]:Block[37173-37984]"
    }, {
      "left" : "String typeStr = ClassUtil.canBeABeanType(type);",
      "right" : "String typeStr = ClassUtil.canBeABeanType(type);",
      "info" : "VariableDeclarationStatement[37134-37182]:VariableDeclarationStatement[37183-37231]"
    }, {
      "left" : "if (typeStr != null)",
      "right" : "if (typeStr != null)",
      "info" : "IfStatement[37191-37351]:IfStatement[37240-37400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37212-37351]:Block[37261-37400]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "info" : "ThrowStatement[37226-37341]:ThrowStatement[37275-37390]"
    }, {
      "left" : "if (ClassUtil.isProxyType(type))",
      "right" : "if (ClassUtil.isProxyType(type))",
      "info" : "IfStatement[37360-37516]:IfStatement[37409-37565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37393-37516]:Block[37442-37565]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
      "info" : "ThrowStatement[37407-37506]:ThrowStatement[37456-37555]"
    }, {
      "left" : "typeStr = ClassUtil.isLocalType(type, true);",
      "right" : "typeStr = ClassUtil.isLocalType(type, true);",
      "info" : "ExpressionStatement[37695-37739]:ExpressionStatement[37744-37788]"
    }, {
      "left" : "if (typeStr != null)",
      "right" : "if (typeStr != null)",
      "info" : "IfStatement[37748-37908]:IfStatement[37797-37957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37769-37908]:Block[37818-37957]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "info" : "ThrowStatement[37783-37898]:ThrowStatement[37832-37947]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[37917-37929]:ReturnStatement[37966-37978]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[38101-38110]:Modifier[38150-38159]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[38111-38118]:PrimitiveType[38160-38167]"
    }, {
      "left" : "isIgnorableType",
      "right" : "isIgnorableType",
      "info" : "SimpleName[38119-38134]:SimpleName[38168-38183]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[38135-38163]:SingleVariableDeclaration[38184-38212]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[38165-38189]:SingleVariableDeclaration[38214-38238]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[38203-38216]:SingleVariableDeclaration[38252-38265]"
    }, {
      "left" : "Map<Class<?>,Boolean> ignoredTypes",
      "right" : "Map<Class<?>,Boolean> ignoredTypes",
      "info" : "SingleVariableDeclaration[38218-38252]:SingleVariableDeclaration[38267-38301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38258-38677]:Block[38307-38726]"
    }, {
      "left" : "Boolean status = ignoredTypes.get(type);",
      "right" : "Boolean status = ignoredTypes.get(type);",
      "info" : "VariableDeclarationStatement[38268-38308]:VariableDeclarationStatement[38317-38357]"
    }, {
      "left" : "if (status != null)",
      "right" : "if (status != null)",
      "info" : "IfStatement[38317-38390]:IfStatement[38366-38439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38337-38390]:Block[38386-38439]"
    }, {
      "left" : "return status.booleanValue();",
      "right" : "return status.booleanValue();",
      "info" : "ReturnStatement[38351-38380]:ReturnStatement[38400-38429]"
    }, {
      "left" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "right" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "info" : "VariableDeclarationStatement[38399-38462]:VariableDeclarationStatement[38448-38511]"
    }, {
      "left" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
      "right" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
      "info" : "ExpressionStatement[38471-38552]:ExpressionStatement[38520-38601]"
    }, {
      "left" : "return (status == null) ? false : status.booleanValue();",
      "right" : "return (status == null) ? false : status.booleanValue();",
      "info" : "ReturnStatement[38614-38670]:ReturnStatement[38663-38719]"
    } ]
  },
  "interFileMappings" : { }
}