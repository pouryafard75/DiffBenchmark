{
  "matchedElements" : [
 {
    "left" : "class : CommandLineRunner",
    "right" : "class : CommandLineRunner",
    "info" : "TypeDeclaration[1834-37064]:TypeDeclaration[1834-37145]"
  }, {
    "left" : "class : GuardLevel",
    "right" : "class : GuardLevel",
    "info" : "TypeDeclaration[3048-3240]:TypeDeclaration[3048-3240]"
  }, {
    "left" : "name",
    "right" : "name",
    "info" : "FieldDeclaration[3086-3104]:FieldDeclaration[3086-3104]"
  }, {
    "left" : "level",
    "right" : "level",
    "info" : "FieldDeclaration[3109-3132]:FieldDeclaration[3109-3132]"
  }, {
    "left" : "package GuardLevel(name , level )",
    "right" : "package GuardLevel(name , level )",
    "info" : "MethodDeclaration[3137-3236]:MethodDeclaration[3137-3236]"
  }, {
    "left" : "class : Flags",
    "right" : "class : Flags",
    "info" : "TypeDeclaration[3309-23746]:TypeDeclaration[3309-23746]"
  }, {
    "left" : "guardLevels",
    "right" : "guardLevels",
    "info" : "FieldDeclaration[3375-3442]:FieldDeclaration[3375-3442]"
  }, {
    "left" : "displayHelp",
    "right" : "displayHelp",
    "info" : "FieldDeclaration[3448-3600]:FieldDeclaration[3448-3600]"
  }, {
    "left" : "printTree",
    "right" : "printTree",
    "info" : "FieldDeclaration[3606-3776]:FieldDeclaration[3606-3776]"
  }, {
    "left" : "printAst",
    "right" : "printAst",
    "info" : "FieldDeclaration[3782-4000]:FieldDeclaration[3782-4000]"
  }, {
    "left" : "printPassGraph",
    "right" : "printPassGraph",
    "info" : "FieldDeclaration[4006-4232]:FieldDeclaration[4006-4232]"
  }, {
    "left" : "jscompDevMode",
    "right" : "jscompDevMode",
    "info" : "FieldDeclaration[4329-4515]:FieldDeclaration[4329-4515]"
  }, {
    "left" : "loggingLevel",
    "right" : "loggingLevel",
    "info" : "FieldDeclaration[4521-4819]:FieldDeclaration[4521-4819]"
  }, {
    "left" : "externs",
    "right" : "externs",
    "info" : "FieldDeclaration[4825-5006]:FieldDeclaration[4825-5006]"
  }, {
    "left" : "js",
    "right" : "js",
    "info" : "FieldDeclaration[5012-5155]:FieldDeclaration[5012-5155]"
  }, {
    "left" : "jsOutputFile",
    "right" : "jsOutputFile",
    "info" : "FieldDeclaration[5161-5336]:FieldDeclaration[5161-5336]"
  }, {
    "left" : "module",
    "right" : "module",
    "info" : "FieldDeclaration[5342-5965]:FieldDeclaration[5342-5965]"
  }, {
    "left" : "variableMapInputFile",
    "right" : "variableMapInputFile",
    "info" : "FieldDeclaration[5971-6195]:FieldDeclaration[5971-6195]"
  }, {
    "left" : "propertyMapInputFile",
    "right" : "propertyMapInputFile",
    "info" : "FieldDeclaration[6201-6425]:FieldDeclaration[6201-6425]"
  }, {
    "left" : "variableMapOutputFile",
    "right" : "variableMapOutputFile",
    "info" : "FieldDeclaration[6431-6642]:FieldDeclaration[6431-6642]"
  }, {
    "left" : "createNameMapFiles",
    "right" : "createNameMapFiles",
    "info" : "FieldDeclaration[6648-7105]:FieldDeclaration[6648-7105]"
  }, {
    "left" : "propertyMapOutputFile",
    "right" : "propertyMapOutputFile",
    "info" : "FieldDeclaration[7111-7322]:FieldDeclaration[7111-7322]"
  }, {
    "left" : "thirdParty",
    "right" : "thirdParty",
    "info" : "FieldDeclaration[7328-7554]:FieldDeclaration[7328-7554]"
  }, {
    "left" : "summaryDetailLevel",
    "right" : "summaryDetailLevel",
    "info" : "FieldDeclaration[7560-7989]:FieldDeclaration[7560-7989]"
  }, {
    "left" : "outputWrapper",
    "right" : "outputWrapper",
    "info" : "FieldDeclaration[7995-8275]:FieldDeclaration[7995-8275]"
  }, {
    "left" : "moduleWrapper",
    "right" : "moduleWrapper",
    "info" : "FieldDeclaration[8281-8759]:FieldDeclaration[8281-8759]"
  }, {
    "left" : "moduleOutputPathPrefix",
    "right" : "moduleOutputPathPrefix",
    "info" : "FieldDeclaration[8765-9057]:FieldDeclaration[8765-9057]"
  }, {
    "left" : "createSourceMap",
    "right" : "createSourceMap",
    "info" : "FieldDeclaration[9063-9455]:FieldDeclaration[9063-9455]"
  }, {
    "left" : "sourceMapFormat",
    "right" : "sourceMapFormat",
    "info" : "FieldDeclaration[9461-9688]:FieldDeclaration[9461-9688]"
  }, {
    "left" : "jscompError",
    "right" : "jscompError",
    "info" : "FieldDeclaration[9760-10062]:FieldDeclaration[9760-10062]"
  }, {
    "left" : "jscompWarning",
    "right" : "jscompWarning",
    "info" : "FieldDeclaration[10134-10455]:FieldDeclaration[10134-10455]"
  }, {
    "left" : "jscompOff",
    "right" : "jscompOff",
    "info" : "FieldDeclaration[10527-10818]:FieldDeclaration[10527-10818]"
  }, {
    "left" : "define",
    "right" : "define",
    "info" : "FieldDeclaration[10824-11281]:FieldDeclaration[10824-11281]"
  }, {
    "left" : "charset",
    "right" : "charset",
    "info" : "FieldDeclaration[11287-11484]:FieldDeclaration[11287-11484]"
  }, {
    "left" : "compilationLevel",
    "right" : "compilationLevel",
    "info" : "FieldDeclaration[11490-11765]:FieldDeclaration[11490-11765]"
  }, {
    "left" : "useTypesForOptimization",
    "right" : "useTypesForOptimization",
    "info" : "FieldDeclaration[11771-12056]:FieldDeclaration[11771-12056]"
  }, {
    "left" : "warningLevel",
    "right" : "warningLevel",
    "info" : "FieldDeclaration[12062-12258]:FieldDeclaration[12062-12258]"
  }, {
    "left" : "useOnlyCustomExterns",
    "right" : "useOnlyCustomExterns",
    "info" : "FieldDeclaration[12264-12479]:FieldDeclaration[12264-12479]"
  }, {
    "left" : "debug",
    "right" : "debug",
    "info" : "FieldDeclaration[12485-12635]:FieldDeclaration[12485-12635]"
  }, {
    "left" : "generateExports",
    "right" : "generateExports",
    "info" : "FieldDeclaration[12641-12839]:FieldDeclaration[12641-12839]"
  }, {
    "left" : "formatting",
    "right" : "formatting",
    "info" : "FieldDeclaration[12845-13130]:FieldDeclaration[12845-13130]"
  }, {
    "left" : "processCommonJsModules",
    "right" : "processCommonJsModules",
    "info" : "FieldDeclaration[13136-13301]:FieldDeclaration[13136-13301]"
  }, {
    "left" : "commonJsPathPrefix",
    "right" : "commonJsPathPrefix",
    "info" : "FieldDeclaration[13307-13524]:FieldDeclaration[13307-13524]"
  }, {
    "left" : "commonJsEntryModule",
    "right" : "commonJsEntryModule",
    "info" : "FieldDeclaration[13530-13711]:FieldDeclaration[13530-13711]"
  }, {
    "left" : "transformAmdModules",
    "right" : "transformAmdModules",
    "info" : "FieldDeclaration[13717-13861]:FieldDeclaration[13717-13861]"
  }, {
    "left" : "processClosurePrimitives",
    "right" : "processClosurePrimitives",
    "info" : "FieldDeclaration[13867-14154]:FieldDeclaration[13867-14154]"
  }, {
    "left" : "manageClosureDependencies",
    "right" : "manageClosureDependencies",
    "info" : "FieldDeclaration[14160-14639]:FieldDeclaration[14160-14639]"
  }, {
    "left" : "onlyClosureDependencies",
    "right" : "onlyClosureDependencies",
    "info" : "FieldDeclaration[14645-15050]:FieldDeclaration[14645-15050]"
  }, {
    "left" : "closureEntryPoint",
    "right" : "closureEntryPoint",
    "info" : "FieldDeclaration[15056-15647]:FieldDeclaration[15056-15647]"
  }, {
    "left" : "processJqueryPrimitives",
    "right" : "processJqueryPrimitives",
    "info" : "FieldDeclaration[15653-15912]:FieldDeclaration[15653-15912]"
  }, {
    "left" : "angularPass",
    "right" : "angularPass",
    "info" : "FieldDeclaration[15918-16150]:FieldDeclaration[15918-16150]"
  }, {
    "left" : "outputManifest",
    "right" : "outputManifest",
    "info" : "FieldDeclaration[16156-16632]:FieldDeclaration[16156-16632]"
  }, {
    "left" : "outputModuleDependencies",
    "right" : "outputModuleDependencies",
    "info" : "FieldDeclaration[16638-16809]:FieldDeclaration[16638-16809]"
  }, {
    "left" : "acceptConstKeyword",
    "right" : "acceptConstKeyword",
    "info" : "FieldDeclaration[16815-16953]:FieldDeclaration[16815-16953]"
  }, {
    "left" : "languageIn",
    "right" : "languageIn",
    "info" : "FieldDeclaration[16959-17185]:FieldDeclaration[16959-17185]"
  }, {
    "left" : "version",
    "right" : "version",
    "info" : "FieldDeclaration[17191-17359]:FieldDeclaration[17191-17359]"
  }, {
    "left" : "translationsFile",
    "right" : "translationsFile",
    "info" : "FieldDeclaration[17365-17523]:FieldDeclaration[17365-17523]"
  }, {
    "left" : "translationsProject",
    "right" : "translationsProject",
    "info" : "FieldDeclaration[17529-17832]:FieldDeclaration[17529-17832]"
  }, {
    "left" : "flagFile",
    "right" : "flagFile",
    "info" : "FieldDeclaration[17838-17970]:FieldDeclaration[17838-17970]"
  }, {
    "left" : "warningsWhitelistFile",
    "right" : "warningsWhitelistFile",
    "info" : "FieldDeclaration[17976-18242]:FieldDeclaration[17976-18242]"
  }, {
    "left" : "extraAnnotationName",
    "right" : "extraAnnotationName",
    "info" : "FieldDeclaration[18248-18437]:FieldDeclaration[18248-18437]"
  }, {
    "left" : "tracerMode",
    "right" : "tracerMode",
    "info" : "FieldDeclaration[18443-18724]:FieldDeclaration[18443-18724]"
  }, {
    "left" : "arguments",
    "right" : "arguments",
    "info" : "FieldDeclaration[18730-18798]:FieldDeclaration[18730-18798]"
  }, {
    "left" : "package getJsFiles() : ",
    "right" : "package getJsFiles() : ",
    "info" : "MethodDeclaration[18804-20070]:MethodDeclaration[18804-20070]"
  }, {
    "left" : "class : BooleanOptionHandler",
    "right" : "class : BooleanOptionHandler",
    "info" : "TypeDeclaration[20212-21488]:TypeDeclaration[20212-21488]"
  }, {
    "left" : "TRUES",
    "right" : "TRUES",
    "info" : "FieldDeclaration[20292-20385]:FieldDeclaration[20292-20385]"
  }, {
    "left" : "FALSES",
    "right" : "FALSES",
    "info" : "FieldDeclaration[20392-20487]:FieldDeclaration[20392-20487]"
  }, {
    "left" : "public BooleanOptionHandler(parser , option , setter )",
    "right" : "public BooleanOptionHandler(parser , option , setter )",
    "info" : "MethodDeclaration[20495-20664]:MethodDeclaration[20495-20664]"
  }, {
    "left" : "public parseArguments(params ) : int",
    "right" : "public parseArguments(params ) : int",
    "info" : "MethodDeclaration[20672-21389]:MethodDeclaration[20672-21389]"
  }, {
    "left" : "public getDefaultMetaVariable() : ",
    "right" : "public getDefaultMetaVariable() : ",
    "info" : "MethodDeclaration[21397-21482]:MethodDeclaration[21397-21482]"
  }, {
    "left" : "class : WarningGuardErrorOptionHandler",
    "right" : "class : WarningGuardErrorOptionHandler",
    "info" : "TypeDeclaration[21590-21911]:TypeDeclaration[21590-21911]"
  }, {
    "left" : "public WarningGuardErrorOptionHandler(parser , option , setter )",
    "right" : "public WarningGuardErrorOptionHandler(parser , option , setter )",
    "info" : "MethodDeclaration[21685-21905]:MethodDeclaration[21685-21905]"
  }, {
    "left" : "class : WarningGuardWarningOptionHandler",
    "right" : "class : WarningGuardWarningOptionHandler",
    "info" : "TypeDeclaration[21917-22256]:TypeDeclaration[21917-22256]"
  }, {
    "left" : "public WarningGuardWarningOptionHandler(parser , option , setter )",
    "right" : "public WarningGuardWarningOptionHandler(parser , option , setter )",
    "info" : "MethodDeclaration[22014-22250]:MethodDeclaration[22014-22250]"
  }, {
    "left" : "class : WarningGuardOffOptionHandler",
    "right" : "class : WarningGuardOffOptionHandler",
    "info" : "TypeDeclaration[22262-22577]:TypeDeclaration[22262-22577]"
  }, {
    "left" : "public WarningGuardOffOptionHandler(parser , option , setter )",
    "right" : "public WarningGuardOffOptionHandler(parser , option , setter )",
    "info" : "MethodDeclaration[22355-22571]:MethodDeclaration[22355-22571]"
  }, {
    "left" : "class : WarningGuardSetter",
    "right" : "class : WarningGuardSetter",
    "info" : "TypeDeclaration[22583-23492]:TypeDeclaration[22583-23492]"
  }, {
    "left" : "proxy",
    "right" : "proxy",
    "info" : "FieldDeclaration[22657-22700]:FieldDeclaration[22657-22700]"
  }, {
    "left" : "level",
    "right" : "level",
    "info" : "FieldDeclaration[22707-22738]:FieldDeclaration[22707-22738]"
  }, {
    "left" : "private WarningGuardSetter(proxy , level )",
    "right" : "private WarningGuardSetter(proxy , level )",
    "info" : "MethodDeclaration[22746-22897]:MethodDeclaration[22746-22897]"
  }, {
    "left" : "public isMultiValued() : boolean",
    "right" : "public isMultiValued() : boolean",
    "info" : "MethodDeclaration[22905-22993]:MethodDeclaration[22905-22993]"
  }, {
    "left" : "public getType() : ",
    "right" : "public getType() : ",
    "info" : "MethodDeclaration[23001-23099]:MethodDeclaration[23001-23099]"
  }, {
    "left" : "public addValue(value ) : void",
    "right" : "public addValue(value ) : void",
    "info" : "MethodDeclaration[23107-23271]:MethodDeclaration[23107-23271]"
  }, {
    "left" : "public asFieldSetter() : ",
    "right" : "public asFieldSetter() : ",
    "info" : "MethodDeclaration[23279-23371]:MethodDeclaration[23279-23371]"
  }, {
    "left" : "public asAnnotatedElement() : ",
    "right" : "public asAnnotatedElement() : ",
    "info" : "MethodDeclaration[23379-23486]:MethodDeclaration[23379-23486]"
  }, {
    "left" : "public getWarningGuardSpec() : ",
    "right" : "public getWarningGuardSpec() : ",
    "info" : "MethodDeclaration[23498-23742]:MethodDeclaration[23498-23742]"
  }, {
    "left" : "private applyToOptions(options ...) : void",
    "right" : "private applyToOptions(options ...) : void",
    "info" : "MethodDeclaration[23940-24396]:MethodDeclaration[23940-24396]"
  }, {
    "left" : "flags",
    "right" : "flags",
    "info" : "FieldDeclaration[24404-24444]:FieldDeclaration[24404-24444]"
  }, {
    "left" : "isConfigValid",
    "right" : "isConfigValid",
    "info" : "FieldDeclaration[24448-24486]:FieldDeclaration[24448-24486]"
  }, {
    "left" : "protected CommandLineRunner(args ...)",
    "right" : "protected CommandLineRunner(args ...)",
    "info" : "MethodDeclaration[24490-24782]:MethodDeclaration[24490-24782]"
  }, {
    "left" : "protected CommandLineRunner(args , out , err )",
    "right" : "protected CommandLineRunner(args , out , err )",
    "info" : "MethodDeclaration[24786-24925]:MethodDeclaration[24786-24925]"
  }, {
    "left" : "private tokenizeKeepingQuotedStrings(lines ...) : ",
    "right" : "private tokenizeKeepingQuotedStrings(lines ...) : ",
    "info" : "MethodDeclaration[24929-25737]:MethodDeclaration[24929-25737]"
  }, {
    "left" : "private processArgs(args ...) : ",
    "right" : "private processArgs(args ...) : ",
    "info" : "MethodDeclaration[25741-26642]:MethodDeclaration[25741-26642]"
  }, {
    "left" : "private processFlagFile(err ) : void",
    "right" : "private processFlagFile(err ) : void",
    "info" : "MethodDeclaration[26646-27688]:MethodDeclaration[26646-27688]"
  }, {
    "left" : "private initConfigFromFlags(args , err ) : void",
    "right" : "private initConfigFromFlags(args , err ) : void",
    "info" : "MethodDeclaration[27692-31467]:MethodDeclaration[27692-31467]"
  }, {
    "left" : "protected createOptions() : ",
    "right" : "protected createOptions() : ",
    "info" : "MethodDeclaration[31471-33559]:MethodDeclaration[31471-33640]"
  }, {
    "left" : "protected createCompiler() : ",
    "right" : "protected createCompiler() : ",
    "info" : "MethodDeclaration[33563-33664]:MethodDeclaration[33644-33745]"
  }, {
    "left" : "protected createExterns() : ",
    "right" : "protected createExterns() : ",
    "info" : "MethodDeclaration[33668-34052]:MethodDeclaration[33749-34133]"
  }, {
    "left" : "DEFAULT_EXTERNS_NAMES",
    "right" : "DEFAULT_EXTERNS_NAMES",
    "info" : "FieldDeclaration[34115-35162]:FieldDeclaration[34196-35243]"
  }, {
    "left" : "public getDefaultExterns() : ",
    "right" : "public getDefaultExterns() : ",
    "info" : "MethodDeclaration[35166-36642]:MethodDeclaration[35247-36723]"
  }, {
    "left" : "public shouldRunCompiler() : boolean",
    "right" : "public shouldRunCompiler() : boolean",
    "info" : "MethodDeclaration[36646-36778]:MethodDeclaration[36727-36859]"
  }, {
    "left" : "public main(args ...) : void",
    "right" : "public main(args ...) : void",
    "info" : "MethodDeclaration[36782-37062]:MethodDeclaration[36863-37143]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2948-2954]:Modifier[2948-2954]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[2955-2960]:TYPE_DECLARATION_KIND[2955-2960]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[3048-3055]:Modifier[3048-3055]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3056-3062]:Modifier[3056-3062]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[3063-3068]:TYPE_DECLARATION_KIND[3063-3068]"
  }, {
    "left" : "GuardLevel",
    "right" : "GuardLevel",
    "info" : "SimpleName[3137-3147]:SimpleName[3137-3147]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[3148-3159]:SingleVariableDeclaration[3148-3159]"
  }, {
    "left" : "CheckLevel level",
    "right" : "CheckLevel level",
    "info" : "SingleVariableDeclaration[3161-3177]:SingleVariableDeclaration[3161-3177]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3179-3236]:Block[3179-3236]"
  }, {
    "left" : "this.name = name;",
    "right" : "this.name = name;",
    "info" : "ExpressionStatement[3187-3204]:ExpressionStatement[3187-3204]"
  }, {
    "left" : "this.level = level;",
    "right" : "this.level = level;",
    "info" : "ExpressionStatement[3211-3230]:ExpressionStatement[3211-3230]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")",
    "right" : "@SuppressWarnings(\"unchecked\")",
    "info" : "SingleMemberAnnotation[3309-3339]:SingleMemberAnnotation[3309-3339]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[3342-3349]:Modifier[3342-3349]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3350-3356]:Modifier[3350-3356]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[3357-3362]:TYPE_DECLARATION_KIND[3357-3362]"
  }, {
    "left" : "List<String>",
    "right" : "List<String>",
    "info" : "ParameterizedType[19838-19850]:ParameterizedType[19838-19850]"
  }, {
    "left" : "getJsFiles",
    "right" : "getJsFiles",
    "info" : "SimpleName[19851-19861]:SimpleName[19851-19861]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19864-20070]:Block[19864-20070]"
  }, {
    "left" : "List<String> allJsInputs = Lists.newArrayListWithCapacity(\n          js.size() + arguments.size());",
    "right" : "List<String> allJsInputs = Lists.newArrayListWithCapacity(\n          js.size() + arguments.size());",
    "info" : "VariableDeclarationStatement[19872-19971]:VariableDeclarationStatement[19872-19971]"
  }, {
    "left" : "allJsInputs.addAll(js);",
    "right" : "allJsInputs.addAll(js);",
    "info" : "ExpressionStatement[19978-20001]:ExpressionStatement[19978-20001]"
  }, {
    "left" : "allJsInputs.addAll(arguments);",
    "right" : "allJsInputs.addAll(arguments);",
    "info" : "ExpressionStatement[20008-20038]:ExpressionStatement[20008-20038]"
  }, {
    "left" : "return allJsInputs;",
    "right" : "return allJsInputs;",
    "info" : "ReturnStatement[20045-20064]:ReturnStatement[20045-20064]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20212-20218]:Modifier[20212-20218]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[20219-20225]:Modifier[20219-20225]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[20226-20231]:TYPE_DECLARATION_KIND[20226-20231]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20495-20501]:Modifier[20495-20501]"
  }, {
    "left" : "BooleanOptionHandler",
    "right" : "BooleanOptionHandler",
    "info" : "SimpleName[20502-20522]:SimpleName[20502-20522]"
  }, {
    "left" : "CmdLineParser parser",
    "right" : "CmdLineParser parser",
    "info" : "SingleVariableDeclaration[20534-20554]:SingleVariableDeclaration[20534-20554]"
  }, {
    "left" : "OptionDef option",
    "right" : "OptionDef option",
    "info" : "SingleVariableDeclaration[20556-20572]:SingleVariableDeclaration[20556-20572]"
  }, {
    "left" : "Setter<? super Boolean> setter",
    "right" : "Setter<? super Boolean> setter",
    "info" : "SingleVariableDeclaration[20584-20614]:SingleVariableDeclaration[20584-20614]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20616-20664]:Block[20616-20664]"
  }, {
    "left" : "super(parser, option, setter);",
    "right" : "super(parser, option, setter);",
    "info" : "SuperConstructorInvocation[20626-20656]:SuperConstructorInvocation[20626-20656]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[20672-20681]:MarkerAnnotation[20672-20681]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20688-20694]:Modifier[20688-20694]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[20695-20698]:PrimitiveType[20695-20698]"
  }, {
    "left" : "parseArguments",
    "right" : "parseArguments",
    "info" : "SimpleName[20699-20713]:SimpleName[20699-20713]"
  }, {
    "left" : "Parameters params",
    "right" : "Parameters params",
    "info" : "SingleVariableDeclaration[20714-20731]:SingleVariableDeclaration[20714-20731]"
  }, {
    "left" : "CmdLineException",
    "right" : "CmdLineException",
    "info" : "SimpleType[20740-20756]:SimpleType[20740-20756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20757-21389]:Block[20757-21389]"
  }, {
    "left" : "String param = null;",
    "right" : "String param = null;",
    "info" : "VariableDeclarationStatement[20767-20787]:VariableDeclarationStatement[20767-20787]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[20796-20945]:TryStatement[20796-20945]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20800-20853]:Block[20800-20853]"
  }, {
    "left" : "param = params.getParameter(0);",
    "right" : "param = params.getParameter(0);",
    "info" : "ExpressionStatement[20812-20843]:ExpressionStatement[20812-20843]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20881-20945]:Block[20881-20945]"
  }, {
    "left" : "param = null;",
    "right" : "param = null;",
    "info" : "ExpressionStatement[20893-20906]:ExpressionStatement[20893-20906]"
  }, {
    "left" : "if (param == null)",
    "right" : "if (param == null)",
    "info" : "IfStatement[20955-21381]:IfStatement[20955-21381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20974-21038]:Block[20974-21038]"
  }, {
    "left" : "setter.addValue(true);",
    "right" : "setter.addValue(true);",
    "info" : "ExpressionStatement[20986-21008]:ExpressionStatement[20986-21008]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[21019-21028]:ReturnStatement[21019-21028]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21044-21381]:Block[21044-21381]"
  }, {
    "left" : "String lowerParam = param.toLowerCase();",
    "right" : "String lowerParam = param.toLowerCase();",
    "info" : "VariableDeclarationStatement[21056-21096]:VariableDeclarationStatement[21056-21096]"
  }, {
    "left" : "if (TRUES.contains(lowerParam))",
    "right" : "if (TRUES.contains(lowerParam))",
    "info" : "IfStatement[21107-21351]:IfStatement[21107-21351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21139-21187]:Block[21139-21187]"
  }, {
    "left" : "setter.addValue(true);",
    "right" : "setter.addValue(true);",
    "info" : "ExpressionStatement[21153-21175]:ExpressionStatement[21153-21175]"
  }, {
    "left" : "if (FALSES.contains(lowerParam))",
    "right" : "if (FALSES.contains(lowerParam))",
    "info" : "IfStatement[21193-21351]:IfStatement[21193-21351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21226-21275]:Block[21226-21275]"
  }, {
    "left" : "setter.addValue(false);",
    "right" : "setter.addValue(false);",
    "info" : "ExpressionStatement[21240-21263]:ExpressionStatement[21240-21263]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21281-21351]:Block[21281-21351]"
  }, {
    "left" : "setter.addValue(true);",
    "right" : "setter.addValue(true);",
    "info" : "ExpressionStatement[21295-21317]:ExpressionStatement[21295-21317]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[21330-21339]:ReturnStatement[21330-21339]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[21362-21371]:ReturnStatement[21362-21371]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[21397-21406]:MarkerAnnotation[21397-21406]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21413-21419]:Modifier[21413-21419]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[21420-21426]:SimpleType[21420-21426]"
  }, {
    "left" : "getDefaultMetaVariable",
    "right" : "getDefaultMetaVariable",
    "info" : "SimpleName[21427-21449]:SimpleName[21427-21449]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21452-21482]:Block[21452-21482]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[21462-21474]:ReturnStatement[21462-21474]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21590-21596]:Modifier[21590-21596]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[21597-21603]:Modifier[21597-21603]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[21604-21609]:TYPE_DECLARATION_KIND[21604-21609]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21685-21691]:Modifier[21685-21691]"
  }, {
    "left" : "WarningGuardErrorOptionHandler",
    "right" : "WarningGuardErrorOptionHandler",
    "info" : "SimpleName[21692-21722]:SimpleName[21692-21722]"
  }, {
    "left" : "CmdLineParser parser",
    "right" : "CmdLineParser parser",
    "info" : "SingleVariableDeclaration[21734-21754]:SingleVariableDeclaration[21734-21754]"
  }, {
    "left" : "OptionDef option",
    "right" : "OptionDef option",
    "info" : "SingleVariableDeclaration[21756-21772]:SingleVariableDeclaration[21756-21772]"
  }, {
    "left" : "Setter<? super String> setter",
    "right" : "Setter<? super String> setter",
    "info" : "SingleVariableDeclaration[21784-21813]:SingleVariableDeclaration[21784-21813]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21815-21905]:Block[21815-21905]"
  }, {
    "left" : "super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));",
    "right" : "super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));",
    "info" : "SuperConstructorInvocation[21825-21897]:SuperConstructorInvocation[21825-21897]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21917-21923]:Modifier[21917-21923]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[21924-21930]:Modifier[21924-21930]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[21931-21936]:TYPE_DECLARATION_KIND[21931-21936]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22014-22020]:Modifier[22014-22020]"
  }, {
    "left" : "WarningGuardWarningOptionHandler",
    "right" : "WarningGuardWarningOptionHandler",
    "info" : "SimpleName[22021-22053]:SimpleName[22021-22053]"
  }, {
    "left" : "CmdLineParser parser",
    "right" : "CmdLineParser parser",
    "info" : "SingleVariableDeclaration[22065-22085]:SingleVariableDeclaration[22065-22085]"
  }, {
    "left" : "OptionDef option",
    "right" : "OptionDef option",
    "info" : "SingleVariableDeclaration[22087-22103]:SingleVariableDeclaration[22087-22103]"
  }, {
    "left" : "Setter<? super String> setter",
    "right" : "Setter<? super String> setter",
    "info" : "SingleVariableDeclaration[22115-22144]:SingleVariableDeclaration[22115-22144]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22146-22250]:Block[22146-22250]"
  }, {
    "left" : "super(parser, option,\n            new WarningGuardSetter(setter, CheckLevel.WARNING));",
    "right" : "super(parser, option,\n            new WarningGuardSetter(setter, CheckLevel.WARNING));",
    "info" : "SuperConstructorInvocation[22156-22242]:SuperConstructorInvocation[22156-22242]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22262-22268]:Modifier[22262-22268]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[22269-22275]:Modifier[22269-22275]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[22276-22281]:TYPE_DECLARATION_KIND[22276-22281]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22355-22361]:Modifier[22355-22361]"
  }, {
    "left" : "WarningGuardOffOptionHandler",
    "right" : "WarningGuardOffOptionHandler",
    "info" : "SimpleName[22362-22390]:SimpleName[22362-22390]"
  }, {
    "left" : "CmdLineParser parser",
    "right" : "CmdLineParser parser",
    "info" : "SingleVariableDeclaration[22402-22422]:SingleVariableDeclaration[22402-22422]"
  }, {
    "left" : "OptionDef option",
    "right" : "OptionDef option",
    "info" : "SingleVariableDeclaration[22424-22440]:SingleVariableDeclaration[22424-22440]"
  }, {
    "left" : "Setter<? super String> setter",
    "right" : "Setter<? super String> setter",
    "info" : "SingleVariableDeclaration[22452-22481]:SingleVariableDeclaration[22452-22481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22483-22571]:Block[22483-22571]"
  }, {
    "left" : "super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));",
    "right" : "super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));",
    "info" : "SuperConstructorInvocation[22493-22563]:SuperConstructorInvocation[22493-22563]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22583-22590]:Modifier[22583-22590]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[22591-22597]:Modifier[22591-22597]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[22598-22603]:TYPE_DECLARATION_KIND[22598-22603]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22746-22753]:Modifier[22746-22753]"
  }, {
    "left" : "WarningGuardSetter",
    "right" : "WarningGuardSetter",
    "info" : "SimpleName[22754-22772]:SimpleName[22754-22772]"
  }, {
    "left" : "Setter<? super String> proxy",
    "right" : "Setter<? super String> proxy",
    "info" : "SingleVariableDeclaration[22784-22812]:SingleVariableDeclaration[22784-22812]"
  }, {
    "left" : "CheckLevel level",
    "right" : "CheckLevel level",
    "info" : "SingleVariableDeclaration[22814-22830]:SingleVariableDeclaration[22814-22830]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22832-22897]:Block[22832-22897]"
  }, {
    "left" : "this.proxy = proxy;",
    "right" : "this.proxy = proxy;",
    "info" : "ExpressionStatement[22842-22861]:ExpressionStatement[22842-22861]"
  }, {
    "left" : "this.level = level;",
    "right" : "this.level = level;",
    "info" : "ExpressionStatement[22870-22889]:ExpressionStatement[22870-22889]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[22905-22914]:MarkerAnnotation[22905-22914]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22915-22921]:Modifier[22915-22921]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[22922-22929]:PrimitiveType[22922-22929]"
  }, {
    "left" : "isMultiValued",
    "right" : "isMultiValued",
    "info" : "SimpleName[22930-22943]:SimpleName[22930-22943]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22946-22993]:Block[22946-22993]"
  }, {
    "left" : "return proxy.isMultiValued();",
    "right" : "return proxy.isMultiValued();",
    "info" : "ReturnStatement[22956-22985]:ReturnStatement[22956-22985]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[23001-23010]:MarkerAnnotation[23001-23010]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23011-23017]:Modifier[23011-23017]"
  }, {
    "left" : "Class<String>",
    "right" : "Class<String>",
    "info" : "ParameterizedType[23018-23031]:ParameterizedType[23018-23031]"
  }, {
    "left" : "getType",
    "right" : "getType",
    "info" : "SimpleName[23032-23039]:SimpleName[23032-23039]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23042-23099]:Block[23042-23099]"
  }, {
    "left" : "return (Class<String>) proxy.getType();",
    "right" : "return (Class<String>) proxy.getType();",
    "info" : "ReturnStatement[23052-23091]:ReturnStatement[23052-23091]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[23107-23116]:MarkerAnnotation[23107-23116]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23117-23123]:Modifier[23117-23123]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23124-23128]:PrimitiveType[23124-23128]"
  }, {
    "left" : "addValue",
    "right" : "addValue",
    "info" : "SimpleName[23129-23137]:SimpleName[23129-23137]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[23138-23150]:SingleVariableDeclaration[23138-23150]"
  }, {
    "left" : "CmdLineException",
    "right" : "CmdLineException",
    "info" : "SimpleType[23159-23175]:SimpleType[23159-23175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23176-23271]:Block[23176-23271]"
  }, {
    "left" : "proxy.addValue(value);",
    "right" : "proxy.addValue(value);",
    "info" : "ExpressionStatement[23186-23208]:ExpressionStatement[23186-23208]"
  }, {
    "left" : "guardLevels.add(new GuardLevel(value, level));",
    "right" : "guardLevels.add(new GuardLevel(value, level));",
    "info" : "ExpressionStatement[23217-23263]:ExpressionStatement[23217-23263]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[23279-23288]:MarkerAnnotation[23279-23288]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23289-23295]:Modifier[23289-23295]"
  }, {
    "left" : "FieldSetter",
    "right" : "FieldSetter",
    "info" : "SimpleType[23296-23307]:SimpleType[23296-23307]"
  }, {
    "left" : "asFieldSetter",
    "right" : "asFieldSetter",
    "info" : "SimpleName[23308-23321]:SimpleName[23308-23321]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23324-23371]:Block[23324-23371]"
  }, {
    "left" : "return proxy.asFieldSetter();",
    "right" : "return proxy.asFieldSetter();",
    "info" : "ReturnStatement[23334-23363]:ReturnStatement[23334-23363]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[23379-23388]:MarkerAnnotation[23379-23388]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23389-23395]:Modifier[23389-23395]"
  }, {
    "left" : "AnnotatedElement",
    "right" : "AnnotatedElement",
    "info" : "SimpleType[23396-23412]:SimpleType[23396-23412]"
  }, {
    "left" : "asAnnotatedElement",
    "right" : "asAnnotatedElement",
    "info" : "SimpleName[23413-23431]:SimpleName[23413-23431]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23434-23486]:Block[23434-23486]"
  }, {
    "left" : "return proxy.asAnnotatedElement();",
    "right" : "return proxy.asAnnotatedElement();",
    "info" : "ReturnStatement[23444-23478]:ReturnStatement[23444-23478]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23498-23504]:Modifier[23498-23504]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[23505-23511]:Modifier[23505-23511]"
  }, {
    "left" : "WarningGuardSpec",
    "right" : "WarningGuardSpec",
    "info" : "SimpleType[23512-23528]:SimpleType[23512-23528]"
  }, {
    "left" : "getWarningGuardSpec",
    "right" : "getWarningGuardSpec",
    "info" : "SimpleName[23529-23548]:SimpleName[23529-23548]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23551-23742]:Block[23551-23742]"
  }, {
    "left" : "WarningGuardSpec spec = new WarningGuardSpec();",
    "right" : "WarningGuardSpec spec = new WarningGuardSpec();",
    "info" : "VariableDeclarationStatement[23559-23606]:VariableDeclarationStatement[23559-23606]"
  }, {
    "left" : "for (GuardLevel guardLevel : guardLevels)",
    "right" : "for (GuardLevel guardLevel : guardLevels)",
    "info" : "EnhancedForStatement[23613-23717]:EnhancedForStatement[23613-23717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23655-23717]:Block[23655-23717]"
  }, {
    "left" : "spec.add(guardLevel.level, guardLevel.name);",
    "right" : "spec.add(guardLevel.level, guardLevel.name);",
    "info" : "ExpressionStatement[23665-23709]:ExpressionStatement[23665-23709]"
  }, {
    "left" : "return spec;",
    "right" : "return spec;",
    "info" : "ReturnStatement[23724-23736]:ReturnStatement[23724-23736]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[23940-23947]:Modifier[23940-23947]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23948-23952]:PrimitiveType[23948-23952]"
  }, {
    "left" : "applyToOptions",
    "right" : "applyToOptions",
    "info" : "SimpleName[23953-23967]:SimpleName[23953-23967]"
  }, {
    "left" : "CompilerOptions options",
    "right" : "CompilerOptions options",
    "info" : "SingleVariableDeclaration[23968-23991]:SingleVariableDeclaration[23968-23991]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23993-24396]:Block[23993-24396]"
  }, {
    "left" : "switch (this) {\n        case PRETTY_PRINT:\n          options.prettyPrint = true;\n          break;\n        case PRINT_INPUT_DELIMITER:\n          options.printInputDelimiter = true;\n          break;\n        case SINGLE_QUOTES:\n          options.setPreferSingleQuotes(true);\n          break;\n        default:\n          throw new RuntimeException(\"Unknown formatting option: \" + this);\n      }",
    "right" : "switch (this) {\n        case PRETTY_PRINT:\n          options.prettyPrint = true;\n          break;\n        case PRINT_INPUT_DELIMITER:\n          options.printInputDelimiter = true;\n          break;\n        case SINGLE_QUOTES:\n          options.setPreferSingleQuotes(true);\n          break;\n        default:\n          throw new RuntimeException(\"Unknown formatting option: \" + this);\n      }",
    "info" : "SwitchStatement[24001-24390]:SwitchStatement[24001-24390]"
  }, {
    "left" : "case PRETTY_PRINT:",
    "right" : "case PRETTY_PRINT:",
    "info" : "SwitchCase[24025-24043]:SwitchCase[24025-24043]"
  }, {
    "left" : "options.prettyPrint = true;",
    "right" : "options.prettyPrint = true;",
    "info" : "ExpressionStatement[24054-24081]:ExpressionStatement[24054-24081]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24092-24098]:BreakStatement[24092-24098]"
  }, {
    "left" : "case PRINT_INPUT_DELIMITER:",
    "right" : "case PRINT_INPUT_DELIMITER:",
    "info" : "SwitchCase[24107-24134]:SwitchCase[24107-24134]"
  }, {
    "left" : "options.printInputDelimiter = true;",
    "right" : "options.printInputDelimiter = true;",
    "info" : "ExpressionStatement[24145-24180]:ExpressionStatement[24145-24180]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24191-24197]:BreakStatement[24191-24197]"
  }, {
    "left" : "case SINGLE_QUOTES:",
    "right" : "case SINGLE_QUOTES:",
    "info" : "SwitchCase[24206-24225]:SwitchCase[24206-24225]"
  }, {
    "left" : "options.setPreferSingleQuotes(true);",
    "right" : "options.setPreferSingleQuotes(true);",
    "info" : "ExpressionStatement[24236-24272]:ExpressionStatement[24236-24272]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24283-24289]:BreakStatement[24283-24289]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[24298-24306]:SwitchCase[24298-24306]"
  }, {
    "left" : "throw new RuntimeException(\"Unknown formatting option: \" + this);",
    "right" : "throw new RuntimeException(\"Unknown formatting option: \" + this);",
    "info" : "ThrowStatement[24317-24382]:ThrowStatement[24317-24382]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[24678-24687]:Modifier[24678-24687]"
  }, {
    "left" : "CommandLineRunner",
    "right" : "CommandLineRunner",
    "info" : "SimpleName[24688-24705]:SimpleName[24688-24705]"
  }, {
    "left" : "String[] args",
    "right" : "String[] args",
    "info" : "SingleVariableDeclaration[24706-24719]:SingleVariableDeclaration[24706-24719]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24721-24782]:Block[24721-24782]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[24727-24735]:SuperConstructorInvocation[24727-24735]"
  }, {
    "left" : "initConfigFromFlags(args, System.err);",
    "right" : "initConfigFromFlags(args, System.err);",
    "info" : "ExpressionStatement[24740-24778]:ExpressionStatement[24740-24778]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[24786-24795]:Modifier[24786-24795]"
  }, {
    "left" : "CommandLineRunner",
    "right" : "CommandLineRunner",
    "info" : "SimpleName[24796-24813]:SimpleName[24796-24813]"
  }, {
    "left" : "String[] args",
    "right" : "String[] args",
    "info" : "SingleVariableDeclaration[24814-24827]:SingleVariableDeclaration[24814-24827]"
  }, {
    "left" : "PrintStream out",
    "right" : "PrintStream out",
    "info" : "SingleVariableDeclaration[24829-24844]:SingleVariableDeclaration[24829-24844]"
  }, {
    "left" : "PrintStream err",
    "right" : "PrintStream err",
    "info" : "SingleVariableDeclaration[24846-24861]:SingleVariableDeclaration[24846-24861]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24863-24925]:Block[24863-24925]"
  }, {
    "left" : "super(out, err);",
    "right" : "super(out, err);",
    "info" : "SuperConstructorInvocation[24869-24885]:SuperConstructorInvocation[24869-24885]"
  }, {
    "left" : "initConfigFromFlags(args, err);",
    "right" : "initConfigFromFlags(args, err);",
    "info" : "ExpressionStatement[24890-24921]:ExpressionStatement[24890-24921]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25327-25334]:Modifier[25327-25334]"
  }, {
    "left" : "List<String>",
    "right" : "List<String>",
    "info" : "ParameterizedType[25335-25347]:ParameterizedType[25335-25347]"
  }, {
    "left" : "tokenizeKeepingQuotedStrings",
    "right" : "tokenizeKeepingQuotedStrings",
    "info" : "SimpleName[25348-25376]:SimpleName[25348-25376]"
  }, {
    "left" : "List<String> lines",
    "right" : "List<String> lines",
    "info" : "SingleVariableDeclaration[25377-25395]:SingleVariableDeclaration[25377-25395]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25397-25737]:Block[25397-25737]"
  }, {
    "left" : "List<String> tokens = Lists.newArrayList();",
    "right" : "List<String> tokens = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[25403-25446]:VariableDeclarationStatement[25403-25446]"
  }, {
    "left" : "Pattern tokenPattern =\n        Pattern.compile(\"(?:[^ \\t\\f\\\\x0B'\\\"]|(?:'[^']*'|\\\"[^\\\"]*\\\"))+\");",
    "right" : "Pattern tokenPattern =\n        Pattern.compile(\"(?:[^ \\t\\f\\\\x0B'\\\"]|(?:'[^']*'|\\\"[^\\\"]*\\\"))+\");",
    "info" : "VariableDeclarationStatement[25451-25546]:VariableDeclarationStatement[25451-25546]"
  }, {
    "left" : "for (String line : lines)",
    "right" : "for (String line : lines)",
    "info" : "EnhancedForStatement[25552-25714]:EnhancedForStatement[25552-25714]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25578-25714]:Block[25578-25714]"
  }, {
    "left" : "Matcher matcher = tokenPattern.matcher(line);",
    "right" : "Matcher matcher = tokenPattern.matcher(line);",
    "info" : "VariableDeclarationStatement[25586-25631]:VariableDeclarationStatement[25586-25631]"
  }, {
    "left" : "while (matcher.find())",
    "right" : "while (matcher.find())",
    "info" : "WhileStatement[25638-25708]:WhileStatement[25638-25708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25661-25708]:Block[25661-25708]"
  }, {
    "left" : "tokens.add(matcher.group(0));",
    "right" : "tokens.add(matcher.group(0));",
    "info" : "ExpressionStatement[25671-25700]:ExpressionStatement[25671-25700]"
  }, {
    "left" : "return tokens;",
    "right" : "return tokens;",
    "info" : "ReturnStatement[25719-25733]:ReturnStatement[25719-25733]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25741-25748]:Modifier[25741-25748]"
  }, {
    "left" : "List<String>",
    "right" : "List<String>",
    "info" : "ParameterizedType[25749-25761]:ParameterizedType[25749-25761]"
  }, {
    "left" : "processArgs",
    "right" : "processArgs",
    "info" : "SimpleName[25762-25773]:SimpleName[25762-25773]"
  }, {
    "left" : "String[] args",
    "right" : "String[] args",
    "info" : "SingleVariableDeclaration[25774-25787]:SingleVariableDeclaration[25774-25787]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25789-26642]:Block[25789-26642]"
  }, {
    "left" : "Pattern argPattern = Pattern.compile(\"(--[a-zA-Z_]+)=(.*)\");",
    "right" : "Pattern argPattern = Pattern.compile(\"(--[a-zA-Z_]+)=(.*)\");",
    "info" : "VariableDeclarationStatement[25955-26015]:VariableDeclarationStatement[25955-26015]"
  }, {
    "left" : "Pattern quotesPattern = Pattern.compile(\"^['\\\"](.*)['\\\"]$\");",
    "right" : "Pattern quotesPattern = Pattern.compile(\"^['\\\"](.*)['\\\"]$\");",
    "info" : "VariableDeclarationStatement[26020-26080]:VariableDeclarationStatement[26020-26080]"
  }, {
    "left" : "List<String> processedArgs = Lists.newArrayList();",
    "right" : "List<String> processedArgs = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[26085-26135]:VariableDeclarationStatement[26085-26135]"
  }, {
    "left" : "for (String arg : args)",
    "right" : "for (String arg : args)",
    "info" : "EnhancedForStatement[26141-26611]:EnhancedForStatement[26141-26611]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26165-26611]:Block[26165-26611]"
  }, {
    "left" : "Matcher matcher = argPattern.matcher(arg);",
    "right" : "Matcher matcher = argPattern.matcher(arg);",
    "info" : "VariableDeclarationStatement[26173-26215]:VariableDeclarationStatement[26173-26215]"
  }, {
    "left" : "if (matcher.matches())",
    "right" : "if (matcher.matches())",
    "info" : "IfStatement[26222-26605]:IfStatement[26222-26605]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26245-26558]:Block[26245-26558]"
  }, {
    "left" : "processedArgs.add(matcher.group(1));",
    "right" : "processedArgs.add(matcher.group(1));",
    "info" : "ExpressionStatement[26255-26291]:ExpressionStatement[26255-26291]"
  }, {
    "left" : "String value = matcher.group(2);",
    "right" : "String value = matcher.group(2);",
    "info" : "VariableDeclarationStatement[26301-26333]:VariableDeclarationStatement[26301-26333]"
  }, {
    "left" : "Matcher quotesMatcher = quotesPattern.matcher(value);",
    "right" : "Matcher quotesMatcher = quotesPattern.matcher(value);",
    "info" : "VariableDeclarationStatement[26342-26395]:VariableDeclarationStatement[26342-26395]"
  }, {
    "left" : "if (quotesMatcher.matches())",
    "right" : "if (quotesMatcher.matches())",
    "info" : "IfStatement[26404-26550]:IfStatement[26404-26550]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26433-26497]:Block[26433-26497]"
  }, {
    "left" : "processedArgs.add(quotesMatcher.group(1));",
    "right" : "processedArgs.add(quotesMatcher.group(1));",
    "info" : "ExpressionStatement[26445-26487]:ExpressionStatement[26445-26487]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26503-26550]:Block[26503-26550]"
  }, {
    "left" : "processedArgs.add(value);",
    "right" : "processedArgs.add(value);",
    "info" : "ExpressionStatement[26515-26540]:ExpressionStatement[26515-26540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26564-26605]:Block[26564-26605]"
  }, {
    "left" : "processedArgs.add(arg);",
    "right" : "processedArgs.add(arg);",
    "info" : "ExpressionStatement[26574-26597]:ExpressionStatement[26574-26597]"
  }, {
    "left" : "return processedArgs;",
    "right" : "return processedArgs;",
    "info" : "ReturnStatement[26617-26638]:ReturnStatement[26617-26638]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[26646-26653]:Modifier[26646-26653]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[26654-26658]:PrimitiveType[26654-26658]"
  }, {
    "left" : "processFlagFile",
    "right" : "processFlagFile",
    "info" : "SimpleName[26659-26674]:SimpleName[26659-26674]"
  }, {
    "left" : "PrintStream err",
    "right" : "PrintStream err",
    "info" : "SingleVariableDeclaration[26675-26690]:SingleVariableDeclaration[26675-26690]"
  }, {
    "left" : "CmdLineException",
    "right" : "CmdLineException",
    "info" : "SimpleType[26711-26727]:SimpleType[26711-26727]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[26729-26740]:SimpleType[26729-26740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26741-27688]:Block[26741-27688]"
  }, {
    "left" : "File flagFileInput = new File(flags.flagFile);",
    "right" : "File flagFileInput = new File(flags.flagFile);",
    "info" : "VariableDeclarationStatement[26747-26793]:VariableDeclarationStatement[26747-26793]"
  }, {
    "left" : "List<String> argsInFile = tokenizeKeepingQuotedStrings(\n        Files.readLines(flagFileInput, Charset.defaultCharset()));",
    "right" : "List<String> argsInFile = tokenizeKeepingQuotedStrings(\n        Files.readLines(flagFileInput, Charset.defaultCharset()));",
    "info" : "VariableDeclarationStatement[26798-26920]:VariableDeclarationStatement[26798-26920]"
  }, {
    "left" : "flags.flagFile = \"\";",
    "right" : "flags.flagFile = \"\";",
    "info" : "ExpressionStatement[26926-26946]:ExpressionStatement[26926-26946]"
  }, {
    "left" : "List<String> processedFileArgs\n        = processArgs(argsInFile.toArray(new String[] {}));",
    "right" : "List<String> processedFileArgs\n        = processArgs(argsInFile.toArray(new String[] {}));",
    "info" : "VariableDeclarationStatement[26951-27041]:VariableDeclarationStatement[26951-27041]"
  }, {
    "left" : "CmdLineParser parserFileArgs = new CmdLineParser(flags);",
    "right" : "CmdLineParser parserFileArgs = new CmdLineParser(flags);",
    "info" : "VariableDeclarationStatement[27046-27102]:VariableDeclarationStatement[27046-27102]"
  }, {
    "left" : "List<GuardLevel> previous = Lists.newArrayList(Flags.guardLevels);",
    "right" : "List<GuardLevel> previous = Lists.newArrayList(Flags.guardLevels);",
    "info" : "VariableDeclarationStatement[27218-27284]:VariableDeclarationStatement[27218-27284]"
  }, {
    "left" : "Flags.guardLevels.clear();",
    "right" : "Flags.guardLevels.clear();",
    "info" : "ExpressionStatement[27289-27315]:ExpressionStatement[27289-27315]"
  }, {
    "left" : "parserFileArgs.parseArgument(processedFileArgs.toArray(new String[] {}));",
    "right" : "parserFileArgs.parseArgument(processedFileArgs.toArray(new String[] {}));",
    "info" : "ExpressionStatement[27320-27393]:ExpressionStatement[27320-27393]"
  }, {
    "left" : "Flags.guardLevels.addAll(previous);",
    "right" : "Flags.guardLevels.addAll(previous);",
    "info" : "ExpressionStatement[27398-27433]:ExpressionStatement[27398-27433]"
  }, {
    "left" : "if (!flags.flagFile.equals(\"\"))",
    "right" : "if (!flags.flagFile.equals(\"\"))",
    "info" : "IfStatement[27515-27684]:IfStatement[27515-27684]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27547-27684]:Block[27547-27684]"
  }, {
    "left" : "err.println(\"ERROR - Arguments in the file cannot contain \"\n          + \"--flagfile option.\");",
    "right" : "err.println(\"ERROR - Arguments in the file cannot contain \"\n          + \"--flagfile option.\");",
    "info" : "ExpressionStatement[27555-27649]:ExpressionStatement[27555-27649]"
  }, {
    "left" : "isConfigValid = false;",
    "right" : "isConfigValid = false;",
    "info" : "ExpressionStatement[27656-27678]:ExpressionStatement[27656-27678]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[27692-27699]:Modifier[27692-27699]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[27700-27704]:PrimitiveType[27700-27704]"
  }, {
    "left" : "initConfigFromFlags",
    "right" : "initConfigFromFlags",
    "info" : "SimpleName[27705-27724]:SimpleName[27705-27724]"
  }, {
    "left" : "String[] args",
    "right" : "String[] args",
    "info" : "SingleVariableDeclaration[27725-27738]:SingleVariableDeclaration[27725-27738]"
  }, {
    "left" : "PrintStream err",
    "right" : "PrintStream err",
    "info" : "SingleVariableDeclaration[27740-27755]:SingleVariableDeclaration[27740-27755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27757-31467]:Block[27757-31467]"
  }, {
    "left" : "List<String> processedArgs = processArgs(args);",
    "right" : "List<String> processedArgs = processArgs(args);",
    "info" : "VariableDeclarationStatement[27764-27811]:VariableDeclarationStatement[27764-27811]"
  }, {
    "left" : "CmdLineParser parser = new CmdLineParser(flags);",
    "right" : "CmdLineParser parser = new CmdLineParser(flags);",
    "info" : "VariableDeclarationStatement[27817-27865]:VariableDeclarationStatement[27817-27865]"
  }, {
    "left" : "Flags.guardLevels.clear();",
    "right" : "Flags.guardLevels.clear();",
    "info" : "ExpressionStatement[27870-27896]:ExpressionStatement[27870-27896]"
  }, {
    "left" : "isConfigValid = true;",
    "right" : "isConfigValid = true;",
    "info" : "ExpressionStatement[27901-27922]:ExpressionStatement[27901-27922]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[27927-28349]:TryStatement[27927-28349]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27931-28122]:Block[27931-28122]"
  }, {
    "left" : "parser.parseArgument(processedArgs.toArray(new String[] {}));",
    "right" : "parser.parseArgument(processedArgs.toArray(new String[] {}));",
    "info" : "ExpressionStatement[27939-28000]:ExpressionStatement[27939-28000]"
  }, {
    "left" : "if (!flags.flagFile.equals(\"\"))",
    "right" : "if (!flags.flagFile.equals(\"\"))",
    "info" : "IfStatement[28045-28116]:IfStatement[28045-28116]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28077-28116]:Block[28077-28116]"
  }, {
    "left" : "processFlagFile(err);",
    "right" : "processFlagFile(err);",
    "info" : "ExpressionStatement[28087-28108]:ExpressionStatement[28087-28108]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28150-28221]:Block[28150-28221]"
  }, {
    "left" : "err.println(e.getMessage());",
    "right" : "err.println(e.getMessage());",
    "info" : "ExpressionStatement[28158-28186]:ExpressionStatement[28158-28186]"
  }, {
    "left" : "isConfigValid = false;",
    "right" : "isConfigValid = false;",
    "info" : "ExpressionStatement[28193-28215]:ExpressionStatement[28193-28215]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28248-28349]:Block[28248-28349]"
  }, {
    "left" : "err.println(\"ERROR - \" + flags.flagFile + \" read error.\");",
    "right" : "err.println(\"ERROR - \" + flags.flagFile + \" read error.\");",
    "info" : "ExpressionStatement[28256-28314]:ExpressionStatement[28256-28314]"
  }, {
    "left" : "isConfigValid = false;",
    "right" : "isConfigValid = false;",
    "info" : "ExpressionStatement[28321-28343]:ExpressionStatement[28321-28343]"
  }, {
    "left" : "if (flags.version)",
    "right" : "if (flags.version)",
    "info" : "IfStatement[28355-28609]:IfStatement[28355-28609]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28374-28609]:Block[28374-28609]"
  }, {
    "left" : "err.println(\n          \"Closure Compiler (http://code.google.com/closure/compiler)\\n\" +\n          \"Version: \" + Compiler.getReleaseVersion() + \"\\n\" +\n          \"Built on: \" + Compiler.getReleaseDate());",
    "right" : "err.println(\n          \"Closure Compiler (http://code.google.com/closure/compiler)\\n\" +\n          \"Version: \" + Compiler.getReleaseVersion() + \"\\n\" +\n          \"Built on: \" + Compiler.getReleaseDate());",
    "info" : "ExpressionStatement[28382-28584]:ExpressionStatement[28382-28584]"
  }, {
    "left" : "err.flush();",
    "right" : "err.flush();",
    "info" : "ExpressionStatement[28591-28603]:ExpressionStatement[28591-28603]"
  }, {
    "left" : "if (flags.processCommonJsModules)",
    "right" : "if (flags.processCommonJsModules)",
    "info" : "IfStatement[28615-29046]:IfStatement[28615-29046]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28649-29046]:Block[28649-29046]"
  }, {
    "left" : "flags.processClosurePrimitives = true;",
    "right" : "flags.processClosurePrimitives = true;",
    "info" : "ExpressionStatement[28657-28695]:ExpressionStatement[28657-28695]"
  }, {
    "left" : "flags.manageClosureDependencies = true;",
    "right" : "flags.manageClosureDependencies = true;",
    "info" : "ExpressionStatement[28702-28741]:ExpressionStatement[28702-28741]"
  }, {
    "left" : "if (flags.commonJsEntryModule == null)",
    "right" : "if (flags.commonJsEntryModule == null)",
    "info" : "IfStatement[28748-28913]:IfStatement[28748-28913]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28787-28913]:Block[28787-28913]"
  }, {
    "left" : "err.println(\"Please specify --common_js_entry_module.\");",
    "right" : "err.println(\"Please specify --common_js_entry_module.\");",
    "info" : "ExpressionStatement[28797-28853]:ExpressionStatement[28797-28853]"
  }, {
    "left" : "err.flush();",
    "right" : "err.flush();",
    "info" : "ExpressionStatement[28862-28874]:ExpressionStatement[28862-28874]"
  }, {
    "left" : "isConfigValid = false;",
    "right" : "isConfigValid = false;",
    "info" : "ExpressionStatement[28883-28905]:ExpressionStatement[28883-28905]"
  }, {
    "left" : "flags.closureEntryPoint = Lists.newArrayList(\n          ProcessCommonJSModules.toModuleName(flags.commonJsEntryModule));",
    "right" : "flags.closureEntryPoint = Lists.newArrayList(\n          ProcessCommonJSModules.toModuleName(flags.commonJsEntryModule));",
    "info" : "ExpressionStatement[28920-29040]:ExpressionStatement[28920-29040]"
  }, {
    "left" : "if (!isConfigValid || flags.displayHelp)",
    "right" : "if (!isConfigValid || flags.displayHelp)",
    "info" : "IfStatement[29052-31463]:IfStatement[29052-31463]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29093-29159]:Block[29093-29159]"
  }, {
    "left" : "isConfigValid = false;",
    "right" : "isConfigValid = false;",
    "info" : "ExpressionStatement[29101-29123]:ExpressionStatement[29101-29123]"
  }, {
    "left" : "parser.printUsage(err);",
    "right" : "parser.printUsage(err);",
    "info" : "ExpressionStatement[29130-29153]:ExpressionStatement[29130-29153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29165-31463]:Block[29165-31463]"
  }, {
    "left" : "CodingConvention conv;",
    "right" : "CodingConvention conv;",
    "info" : "VariableDeclarationStatement[29173-29195]:VariableDeclarationStatement[29173-29195]"
  }, {
    "left" : "if (flags.thirdParty)",
    "right" : "if (flags.thirdParty)",
    "info" : "IfStatement[29202-29436]:IfStatement[29202-29436]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29224-29280]:Block[29224-29280]"
  }, {
    "left" : "conv = CodingConventions.getDefault();",
    "right" : "conv = CodingConventions.getDefault();",
    "info" : "ExpressionStatement[29234-29272]:ExpressionStatement[29234-29272]"
  }, {
    "left" : "if (flags.processJqueryPrimitives)",
    "right" : "if (flags.processJqueryPrimitives)",
    "info" : "IfStatement[29286-29436]:IfStatement[29286-29436]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29321-29375]:Block[29321-29375]"
  }, {
    "left" : "conv = new JqueryCodingConvention();",
    "right" : "conv = new JqueryCodingConvention();",
    "info" : "ExpressionStatement[29331-29367]:ExpressionStatement[29331-29367]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29381-29436]:Block[29381-29436]"
  }, {
    "left" : "conv = new ClosureCodingConvention();",
    "right" : "conv = new ClosureCodingConvention();",
    "info" : "ExpressionStatement[29391-29428]:ExpressionStatement[29391-29428]"
  }, {
    "left" : "getCommandLineConfig()\n          .setPrintTree(flags.printTree)\n          .setPrintAst(flags.printAst)\n          .setPrintPassGraph(flags.printPassGraph)\n          .setJscompDevMode(flags.jscompDevMode)\n          .setLoggingLevel(flags.loggingLevel)\n          .setExterns(flags.externs)\n          .setJs(flags.getJsFiles())\n          .setJsOutputFile(flags.jsOutputFile)\n          .setModule(flags.module)\n          .setVariableMapInputFile(flags.variableMapInputFile)\n          .setPropertyMapInputFile(flags.propertyMapInputFile)\n          .setVariableMapOutputFile(flags.variableMapOutputFile)\n          .setCreateNameMapFiles(flags.createNameMapFiles)\n          .setPropertyMapOutputFile(flags.propertyMapOutputFile)\n          .setCodingConvention(conv)\n          .setSummaryDetailLevel(flags.summaryDetailLevel)\n          .setOutputWrapper(flags.outputWrapper)\n          .setModuleWrapper(flags.moduleWrapper)\n          .setModuleOutputPathPrefix(flags.moduleOutputPathPrefix)\n          .setCreateSourceMap(flags.createSourceMap)\n          .setSourceMapFormat(flags.sourceMapFormat)\n          .setWarningGuardSpec(Flags.getWarningGuardSpec())\n          .setDefine(flags.define)\n          .setCharset(flags.charset)\n          .setManageClosureDependencies(flags.manageClosureDependencies)\n          .setOnlyClosureDependencies(flags.onlyClosureDependencies)\n          .setClosureEntryPoints(flags.closureEntryPoint)\n          .setOutputManifest(ImmutableList.of(flags.outputManifest))\n          .setOutputModuleDependencies(flags.outputModuleDependencies)\n          .setAcceptConstKeyword(flags.acceptConstKeyword)\n          .setLanguageIn(flags.languageIn)\n          .setProcessCommonJSModules(flags.processCommonJsModules)\n          .setCommonJSModulePathPrefix(flags.commonJsPathPrefix)\n          .setTransformAMDToCJSModules(flags.transformAmdModules)\n          .setWarningsWhitelistFile(flags.warningsWhitelistFile)\n          .setAngularPass(flags.angularPass)\n          .setTracerMode(flags.tracerMode);",
    "right" : "getCommandLineConfig()\n          .setPrintTree(flags.printTree)\n          .setPrintAst(flags.printAst)\n          .setPrintPassGraph(flags.printPassGraph)\n          .setJscompDevMode(flags.jscompDevMode)\n          .setLoggingLevel(flags.loggingLevel)\n          .setExterns(flags.externs)\n          .setJs(flags.getJsFiles())\n          .setJsOutputFile(flags.jsOutputFile)\n          .setModule(flags.module)\n          .setVariableMapInputFile(flags.variableMapInputFile)\n          .setPropertyMapInputFile(flags.propertyMapInputFile)\n          .setVariableMapOutputFile(flags.variableMapOutputFile)\n          .setCreateNameMapFiles(flags.createNameMapFiles)\n          .setPropertyMapOutputFile(flags.propertyMapOutputFile)\n          .setCodingConvention(conv)\n          .setSummaryDetailLevel(flags.summaryDetailLevel)\n          .setOutputWrapper(flags.outputWrapper)\n          .setModuleWrapper(flags.moduleWrapper)\n          .setModuleOutputPathPrefix(flags.moduleOutputPathPrefix)\n          .setCreateSourceMap(flags.createSourceMap)\n          .setSourceMapFormat(flags.sourceMapFormat)\n          .setWarningGuardSpec(Flags.getWarningGuardSpec())\n          .setDefine(flags.define)\n          .setCharset(flags.charset)\n          .setManageClosureDependencies(flags.manageClosureDependencies)\n          .setOnlyClosureDependencies(flags.onlyClosureDependencies)\n          .setClosureEntryPoints(flags.closureEntryPoint)\n          .setOutputManifest(ImmutableList.of(flags.outputManifest))\n          .setOutputModuleDependencies(flags.outputModuleDependencies)\n          .setAcceptConstKeyword(flags.acceptConstKeyword)\n          .setLanguageIn(flags.languageIn)\n          .setProcessCommonJSModules(flags.processCommonJsModules)\n          .setCommonJSModulePathPrefix(flags.commonJsPathPrefix)\n          .setTransformAMDToCJSModules(flags.transformAmdModules)\n          .setWarningsWhitelistFile(flags.warningsWhitelistFile)\n          .setAngularPass(flags.angularPass)\n          .setTracerMode(flags.tracerMode);",
    "info" : "ExpressionStatement[29444-31457]:ExpressionStatement[29444-31457]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[31471-31480]:MarkerAnnotation[31471-31480]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[31483-31492]:Modifier[31483-31492]"
  }, {
    "left" : "CompilerOptions",
    "right" : "CompilerOptions",
    "info" : "SimpleType[31493-31508]:SimpleType[31493-31508]"
  }, {
    "left" : "createOptions",
    "right" : "createOptions",
    "info" : "SimpleName[31509-31522]:SimpleName[31509-31522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31525-33559]:Block[31525-33640]"
  }, {
    "left" : "CompilerOptions options = new CompilerOptions();",
    "right" : "CompilerOptions options = new CompilerOptions();",
    "info" : "VariableDeclarationStatement[31531-31579]:VariableDeclarationStatement[31531-31579]"
  }, {
    "left" : "if (flags.processJqueryPrimitives)",
    "right" : "if (flags.processJqueryPrimitives)",
    "info" : "IfStatement[31584-31770]:IfStatement[31584-31770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31619-31691]:Block[31619-31691]"
  }, {
    "left" : "options.setCodingConvention(new JqueryCodingConvention());",
    "right" : "options.setCodingConvention(new JqueryCodingConvention());",
    "info" : "ExpressionStatement[31627-31685]:ExpressionStatement[31627-31685]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31697-31770]:Block[31697-31770]"
  }, {
    "left" : "options.setCodingConvention(new ClosureCodingConvention());",
    "right" : "options.setCodingConvention(new ClosureCodingConvention());",
    "info" : "ExpressionStatement[31705-31764]:ExpressionStatement[31705-31764]"
  }, {
    "left" : "options.setExtraAnnotationNames(flags.extraAnnotationName);",
    "right" : "options.setExtraAnnotationNames(flags.extraAnnotationName);",
    "info" : "ExpressionStatement[31776-31835]:ExpressionStatement[31776-31835]"
  }, {
    "left" : "CompilationLevel level = flags.compilationLevel;",
    "right" : "CompilationLevel level = flags.compilationLevel;",
    "info" : "VariableDeclarationStatement[31841-31889]:VariableDeclarationStatement[31841-31889]"
  }, {
    "left" : "level.setOptionsForCompilationLevel(options);",
    "right" : "level.setOptionsForCompilationLevel(options);",
    "info" : "ExpressionStatement[31894-31939]:ExpressionStatement[31894-31939]"
  }, {
    "left" : "if (flags.debug)",
    "right" : "if (flags.debug)",
    "info" : "IfStatement[31945-32026]:IfStatement[31945-32026]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31962-32026]:Block[31962-32026]"
  }, {
    "left" : "level.setDebugOptionsForCompilationLevel(options);",
    "right" : "level.setDebugOptionsForCompilationLevel(options);",
    "info" : "ExpressionStatement[31970-32020]:ExpressionStatement[31970-32020]"
  }, {
    "left" : "if (flags.useTypesForOptimization)",
    "right" : "if (flags.useTypesForOptimization)",
    "info" : "IfStatement[32032-32128]:IfStatement[32032-32128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32067-32128]:Block[32067-32128]"
  }, {
    "left" : "level.setTypeBasedOptimizationOptions(options);",
    "right" : "level.setTypeBasedOptimizationOptions(options);",
    "info" : "ExpressionStatement[32075-32122]:ExpressionStatement[32075-32122]"
  }, {
    "left" : "if (flags.generateExports)",
    "right" : "if (flags.generateExports)",
    "info" : "IfStatement[32134-32225]:IfStatement[32134-32225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32161-32225]:Block[32161-32225]"
  }, {
    "left" : "options.setGenerateExports(flags.generateExports);",
    "right" : "options.setGenerateExports(flags.generateExports);",
    "info" : "ExpressionStatement[32169-32219]:ExpressionStatement[32169-32219]"
  }, {
    "left" : "WarningLevel wLevel = flags.warningLevel;",
    "right" : "WarningLevel wLevel = flags.warningLevel;",
    "info" : "VariableDeclarationStatement[32231-32272]:VariableDeclarationStatement[32231-32272]"
  }, {
    "left" : "wLevel.setOptionsForWarningLevel(options);",
    "right" : "wLevel.setOptionsForWarningLevel(options);",
    "info" : "ExpressionStatement[32277-32319]:ExpressionStatement[32277-32319]"
  }, {
    "left" : "for (FormattingOption formattingOption : flags.formatting)",
    "right" : "for (FormattingOption formattingOption : flags.formatting)",
    "info" : "EnhancedForStatement[32324-32438]:EnhancedForStatement[32324-32438]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32383-32438]:Block[32383-32438]"
  }, {
    "left" : "formattingOption.applyToOptions(options);",
    "right" : "formattingOption.applyToOptions(options);",
    "info" : "ExpressionStatement[32391-32432]:ExpressionStatement[32391-32432]"
  }, {
    "left" : "options.closurePass = flags.processClosurePrimitives;",
    "right" : "options.closurePass = flags.processClosurePrimitives;",
    "info" : "ExpressionStatement[32444-32497]:ExpressionStatement[32444-32497]"
  }, {
    "left" : "options.jqueryPass = CompilationLevel.ADVANCED_OPTIMIZATIONS == level &&\n        flags.processJqueryPrimitives;",
    "right" : "options.jqueryPass = CompilationLevel.ADVANCED_OPTIMIZATIONS == level &&\n        flags.processJqueryPrimitives;",
    "info" : "ExpressionStatement[32503-32614]:ExpressionStatement[32503-32614]"
  }, {
    "left" : "options.angularPass = flags.angularPass;",
    "right" : "options.angularPass = flags.angularPass;",
    "info" : "ExpressionStatement[32620-32660]:ExpressionStatement[32620-32660]"
  }, {
    "left" : "if (!flags.translationsFile.isEmpty())",
    "right" : "if (!flags.translationsFile.isEmpty())",
    "info" : "IfStatement[32666-33534]:IfStatement[32666-33615]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32705-32974]:Block[32705-32974]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[32713-32968]:TryStatement[32713-32968]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32717-32877]:Block[32717-32877]"
  }, {
    "left" : "options.messageBundle = new XtbMessageBundle(\n            new FileInputStream(flags.translationsFile),\n            flags.translationsProject);",
    "right" : "options.messageBundle = new XtbMessageBundle(\n            new FileInputStream(flags.translationsFile),\n            flags.translationsProject);",
    "info" : "ExpressionStatement[32727-32869]:ExpressionStatement[32727-32869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32900-32968]:Block[32900-32968]"
  }, {
    "left" : "throw new RuntimeException(\"Reading XTB file\", e);",
    "right" : "throw new RuntimeException(\"Reading XTB file\", e);",
    "info" : "ThrowStatement[32910-32960]:ThrowStatement[32910-32960]"
  }, {
    "left" : "if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level)",
    "right" : "if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level)",
    "info" : "IfStatement[32980-33534]:IfStatement[32980-33615]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33034-33534]:Block[33034-33615]"
  }, {
    "left" : "options.messageBundle = new EmptyMessageBundle();",
    "right" : "options.messageBundle = new EmptyMessageBundle();",
    "info" : "ExpressionStatement[33479-33528]:ExpressionStatement[33479-33528]"
  }, {
    "left" : "return options;",
    "right" : "return options;",
    "info" : "ReturnStatement[33540-33555]:ReturnStatement[33621-33636]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[33563-33572]:MarkerAnnotation[33644-33653]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[33575-33584]:Modifier[33656-33665]"
  }, {
    "left" : "Compiler",
    "right" : "Compiler",
    "info" : "SimpleType[33585-33593]:SimpleType[33666-33674]"
  }, {
    "left" : "createCompiler",
    "right" : "createCompiler",
    "info" : "SimpleName[33594-33608]:SimpleName[33675-33689]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33611-33664]:Block[33692-33745]"
  }, {
    "left" : "return new Compiler(getErrorPrintStream());",
    "right" : "return new Compiler(getErrorPrintStream());",
    "info" : "ReturnStatement[33617-33660]:ReturnStatement[33698-33741]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[33668-33677]:MarkerAnnotation[33749-33758]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[33680-33689]:Modifier[33761-33770]"
  }, {
    "left" : "List<SourceFile>",
    "right" : "List<SourceFile>",
    "info" : "ParameterizedType[33690-33706]:ParameterizedType[33771-33787]"
  }, {
    "left" : "createExterns",
    "right" : "createExterns",
    "info" : "SimpleName[33707-33720]:SimpleName[33788-33801]"
  }, {
    "left" : "FlagUsageException",
    "right" : "FlagUsageException",
    "info" : "SimpleType[33730-33748]:SimpleType[33811-33829]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[33756-33767]:SimpleType[33837-33848]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33768-34052]:Block[33849-34133]"
  }, {
    "left" : "List<SourceFile> externs = super.createExterns();",
    "right" : "List<SourceFile> externs = super.createExterns();",
    "info" : "VariableDeclarationStatement[33774-33823]:VariableDeclarationStatement[33855-33904]"
  }, {
    "left" : "if (flags.useOnlyCustomExterns || isInTestMode())",
    "right" : "if (flags.useOnlyCustomExterns || isInTestMode())",
    "info" : "IfStatement[33828-34048]:IfStatement[33909-34129]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33878-33907]:Block[33959-33988]"
  }, {
    "left" : "return externs;",
    "right" : "return externs;",
    "info" : "ReturnStatement[33886-33901]:ReturnStatement[33967-33982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33913-34048]:Block[33994-34129]"
  }, {
    "left" : "List<SourceFile> defaultExterns = getDefaultExterns();",
    "right" : "List<SourceFile> defaultExterns = getDefaultExterns();",
    "info" : "VariableDeclarationStatement[33921-33975]:VariableDeclarationStatement[34002-34056]"
  }, {
    "left" : "defaultExterns.addAll(externs);",
    "right" : "defaultExterns.addAll(externs);",
    "info" : "ExpressionStatement[33982-34013]:ExpressionStatement[34063-34094]"
  }, {
    "left" : "return defaultExterns;",
    "right" : "return defaultExterns;",
    "info" : "ReturnStatement[34020-34042]:ReturnStatement[34101-34123]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35231-35237]:Modifier[35312-35318]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[35238-35244]:Modifier[35319-35325]"
  }, {
    "left" : "List<SourceFile>",
    "right" : "List<SourceFile>",
    "info" : "ParameterizedType[35245-35261]:ParameterizedType[35326-35342]"
  }, {
    "left" : "getDefaultExterns",
    "right" : "getDefaultExterns",
    "info" : "SimpleName[35262-35279]:SimpleName[35343-35360]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[35289-35300]:SimpleType[35370-35381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35301-36642]:Block[35382-36723]"
  }, {
    "left" : "InputStream input = CommandLineRunner.class.getResourceAsStream(\n        \"/externs.zip\");",
    "right" : "InputStream input = CommandLineRunner.class.getResourceAsStream(\n        \"/externs.zip\");",
    "info" : "VariableDeclarationStatement[35307-35396]:VariableDeclarationStatement[35388-35477]"
  }, {
    "left" : "if (input == null)",
    "right" : "if (input == null)",
    "info" : "IfStatement[35401-35575]:IfStatement[35482-35656]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35420-35575]:Block[35501-35656]"
  }, {
    "left" : "input = CommandLineRunner.class.getResourceAsStream(\"externs.zip\");",
    "right" : "input = CommandLineRunner.class.getResourceAsStream(\"externs.zip\");",
    "info" : "ExpressionStatement[35502-35569]:ExpressionStatement[35583-35650]"
  }, {
    "left" : "Preconditions.checkNotNull(input);",
    "right" : "Preconditions.checkNotNull(input);",
    "info" : "ExpressionStatement[35580-35614]:ExpressionStatement[35661-35695]"
  }, {
    "left" : "ZipInputStream zip = new ZipInputStream(input);",
    "right" : "ZipInputStream zip = new ZipInputStream(input);",
    "info" : "VariableDeclarationStatement[35620-35667]:VariableDeclarationStatement[35701-35748]"
  }, {
    "left" : "Map<String, SourceFile> externsMap = Maps.newHashMap();",
    "right" : "Map<String, SourceFile> externsMap = Maps.newHashMap();",
    "info" : "VariableDeclarationStatement[35672-35727]:VariableDeclarationStatement[35753-35808]"
  }, {
    "left" : "for (ZipEntry entry = null; (entry = zip.getNextEntry()) != null)",
    "right" : "for (ZipEntry entry = null; (entry = zip.getNextEntry()) != null)",
    "info" : "ForStatement[35732-36194]:ForStatement[35813-36275]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35800-36194]:Block[35881-36275]"
  }, {
    "left" : "BufferedInputStream entryStream = new BufferedInputStream(\n          ByteStreams.limit(zip, entry.getSize()));",
    "right" : "BufferedInputStream entryStream = new BufferedInputStream(\n          ByteStreams.limit(zip, entry.getSize()));",
    "info" : "VariableDeclarationStatement[35808-35918]:VariableDeclarationStatement[35889-35999]"
  }, {
    "left" : "externsMap.put(entry.getName(),\n          SourceFile.fromInputStream(\n              // Give the files an odd prefix, so that they do not conflict\n              // with the user's files.\n              \"externs.zip//\" + entry.getName(),\n              entryStream));",
    "right" : "externsMap.put(entry.getName(),\n          SourceFile.fromInputStream(\n              // Give the files an odd prefix, so that they do not conflict\n              // with the user's files.\n              \"externs.zip//\" + entry.getName(),\n              entryStream));",
    "info" : "ExpressionStatement[35925-36188]:ExpressionStatement[36006-36269]"
  }, {
    "left" : "Preconditions.checkState(\n        externsMap.keySet().equals(Sets.newHashSet(DEFAULT_EXTERNS_NAMES)),\n        \"Externs zip must match our hard-coded list of externs.\");",
    "right" : "Preconditions.checkState(\n        externsMap.keySet().equals(Sets.newHashSet(DEFAULT_EXTERNS_NAMES)),\n        \"Externs zip must match our hard-coded list of externs.\");",
    "info" : "ExpressionStatement[36200-36368]:ExpressionStatement[36281-36449]"
  }, {
    "left" : "List<SourceFile> externs = Lists.newArrayList();",
    "right" : "List<SourceFile> externs = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[36476-36524]:VariableDeclarationStatement[36557-36605]"
  }, {
    "left" : "for (String key : DEFAULT_EXTERNS_NAMES)",
    "right" : "for (String key : DEFAULT_EXTERNS_NAMES)",
    "info" : "EnhancedForStatement[36529-36617]:EnhancedForStatement[36610-36698]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36570-36617]:Block[36651-36698]"
  }, {
    "left" : "externs.add(externsMap.get(key));",
    "right" : "externs.add(externsMap.get(key));",
    "info" : "ExpressionStatement[36578-36611]:ExpressionStatement[36659-36692]"
  }, {
    "left" : "return externs;",
    "right" : "return externs;",
    "info" : "ReturnStatement[36623-36638]:ReturnStatement[36704-36719]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36707-36713]:Modifier[36788-36794]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[36714-36721]:PrimitiveType[36795-36802]"
  }, {
    "left" : "shouldRunCompiler",
    "right" : "shouldRunCompiler",
    "info" : "SimpleName[36722-36739]:SimpleName[36803-36820]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36742-36778]:Block[36823-36859]"
  }, {
    "left" : "return this.isConfigValid;",
    "right" : "return this.isConfigValid;",
    "info" : "ReturnStatement[36748-36774]:ReturnStatement[36829-36855]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36858-36864]:Modifier[36939-36945]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[36865-36871]:Modifier[36946-36952]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[36872-36876]:PrimitiveType[36953-36957]"
  }, {
    "left" : "main",
    "right" : "main",
    "info" : "SimpleName[36877-36881]:SimpleName[36958-36962]"
  }, {
    "left" : "String[] args",
    "right" : "String[] args",
    "info" : "SingleVariableDeclaration[36882-36895]:SingleVariableDeclaration[36963-36976]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36897-37062]:Block[36978-37143]"
  }, {
    "left" : "CommandLineRunner runner = new CommandLineRunner(args);",
    "right" : "CommandLineRunner runner = new CommandLineRunner(args);",
    "info" : "VariableDeclarationStatement[36903-36958]:VariableDeclarationStatement[36984-37039]"
  }, {
    "left" : "if (runner.shouldRunCompiler())",
    "right" : "if (runner.shouldRunCompiler())",
    "info" : "IfStatement[36963-37058]:IfStatement[37044-37139]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36995-37022]:Block[37076-37103]"
  }, {
    "left" : "runner.run();",
    "right" : "runner.run();",
    "info" : "ExpressionStatement[37003-37016]:ExpressionStatement[37084-37097]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37028-37058]:Block[37109-37139]"
  }, {
    "left" : "System.exit(-1);",
    "right" : "System.exit(-1);",
    "info" : "ExpressionStatement[37036-37052]:ExpressionStatement[37117-37133]"
  } ]
}