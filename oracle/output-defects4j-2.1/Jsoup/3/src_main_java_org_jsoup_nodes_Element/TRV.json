{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final Tag tag;",
      "right" : "private final Tag tag;",
      "info" : "FieldDeclaration[609-631]:FieldDeclaration[609-631]"
    }, {
      "left" : "private Set<String> classNames;",
      "right" : "private Set<String> classNames;",
      "info" : "FieldDeclaration[636-667]:FieldDeclaration[636-667]"
    }, {
      "left" : "public Element(Tag tag, String baseUri, Attributes attributes)",
      "right" : "public Element(Tag tag, String baseUri, Attributes attributes)",
      "info" : "MethodDeclaration[677-1138]:MethodDeclaration[677-1138]"
    }, {
      "left" : "public Element(Tag tag, String baseUri)",
      "right" : "public Element(Tag tag, String baseUri)",
      "info" : "MethodDeclaration[1148-1523]:MethodDeclaration[1148-1523]"
    }, {
      "left" : "public String nodeName()",
      "right" : "public String nodeName()",
      "info" : "MethodDeclaration[1529-1605]:MethodDeclaration[1529-1605]"
    }, {
      "left" : "public String tagName()",
      "right" : "public String tagName()",
      "info" : "MethodDeclaration[1611-1790]:MethodDeclaration[1611-1790]"
    }, {
      "left" : "public Tag tag()",
      "right" : "public Tag tag()",
      "info" : "MethodDeclaration[1796-1931]:MethodDeclaration[1796-1931]"
    }, {
      "left" : "public boolean isBlock()",
      "right" : "public boolean isBlock()",
      "info" : "MethodDeclaration[1941-2221]:MethodDeclaration[1941-2221]"
    }, {
      "left" : "public String id()",
      "right" : "public String id()",
      "info" : "MethodDeclaration[2227-2471]:MethodDeclaration[2227-2471]"
    }, {
      "left" : "public Element attr(String attributeKey, String attributeValue)",
      "right" : "public Element attr(String attributeKey, String attributeValue)",
      "info" : "MethodDeclaration[2477-2839]:MethodDeclaration[2477-2839]"
    }, {
      "left" : "public Element parent()",
      "right" : "public Element parent()",
      "info" : "MethodDeclaration[2845-2931]:MethodDeclaration[2845-2931]"
    }, {
      "left" : "public Elements parents()",
      "right" : "public Elements parents()",
      "info" : "MethodDeclaration[2937-3231]:MethodDeclaration[2937-3231]"
    }, {
      "left" : "private static void accumulateParents(Element el, Elements parents)",
      "right" : "private static void accumulateParents(Element el, Elements parents)",
      "info" : "MethodDeclaration[3237-3508]:MethodDeclaration[3237-3508]"
    }, {
      "left" : "public Element child(int index)",
      "right" : "public Element child(int index)",
      "info" : "MethodDeclaration[3514-4068]:MethodDeclaration[3514-4068]"
    }, {
      "left" : "public Elements children()",
      "right" : "public Elements children()",
      "info" : "MethodDeclaration[4074-4727]:MethodDeclaration[4074-4727]"
    }, {
      "left" : "public Elements select(String query)",
      "right" : "public Elements select(String query)",
      "info" : "MethodDeclaration[4733-5651]:MethodDeclaration[4733-5651]"
    }, {
      "left" : "public Element appendChild(Node child)",
      "right" : "public Element appendChild(Node child)",
      "info" : "MethodDeclaration[5661-6057]:MethodDeclaration[5661-6057]"
    }, {
      "left" : "public Element prependChild(Node child)",
      "right" : "public Element prependChild(Node child)",
      "info" : "MethodDeclaration[6067-6473]:MethodDeclaration[6067-6473]"
    }, {
      "left" : "public Element appendElement(String tagName)",
      "right" : "public Element appendElement(String tagName)",
      "info" : "MethodDeclaration[6483-6966]:MethodDeclaration[6483-6966]"
    }, {
      "left" : "public Element prependElement(String tagName)",
      "right" : "public Element prependElement(String tagName)",
      "info" : "MethodDeclaration[6976-7463]:MethodDeclaration[6976-7463]"
    }, {
      "left" : "public Element appendText(String text)",
      "right" : "public Element appendText(String text)",
      "info" : "MethodDeclaration[7473-7776]:MethodDeclaration[7473-7776]"
    }, {
      "left" : "public Element prependText(String text)",
      "right" : "public Element prependText(String text)",
      "info" : "MethodDeclaration[7786-8092]:MethodDeclaration[7786-8092]"
    }, {
      "left" : "public Element empty()",
      "right" : "public Element empty()",
      "info" : "MethodDeclaration[9372-9574]:MethodDeclaration[9390-9592]"
    }, {
      "left" : "private Element getDeepChild(Element el)",
      "right" : "private Element getDeepChild(Element el)",
      "info" : "MethodDeclaration[10670-10885]:MethodDeclaration[10695-10910]"
    }, {
      "left" : "public Elements siblingElements()",
      "right" : "public Elements siblingElements()",
      "info" : "MethodDeclaration[10895-11049]:MethodDeclaration[10920-11074]"
    }, {
      "left" : "public Element nextElementSibling()",
      "right" : "public Element nextElementSibling()",
      "info" : "MethodDeclaration[11055-11768]:MethodDeclaration[11080-11793]"
    }, {
      "left" : "public Element previousElementSibling()",
      "right" : "public Element previousElementSibling()",
      "info" : "MethodDeclaration[11774-12249]:MethodDeclaration[11799-12274]"
    }, {
      "left" : "public Element firstElementSibling()",
      "right" : "public Element firstElementSibling()",
      "info" : "MethodDeclaration[12255-12630]:MethodDeclaration[12280-12655]"
    }, {
      "left" : "public Integer elementSiblingIndex()",
      "right" : "public Integer elementSiblingIndex()",
      "info" : "MethodDeclaration[12640-12974]:MethodDeclaration[12665-12999]"
    }, {
      "left" : "public Element lastElementSibling()",
      "right" : "public Element lastElementSibling()",
      "info" : "MethodDeclaration[12980-13315]:MethodDeclaration[13005-13340]"
    }, {
      "left" : "public Elements getElementsByTag(String tagName)",
      "right" : "public Elements getElementsByTag(String tagName)",
      "info" : "MethodDeclaration[13346-13859]:MethodDeclaration[13371-13884]"
    }, {
      "left" : "public Element getElementById(String id)",
      "right" : "public Element getElementById(String id)",
      "info" : "MethodDeclaration[13865-14647]:MethodDeclaration[13890-14672]"
    }, {
      "left" : "public Elements getElementsByClass(String className)",
      "right" : "public Elements getElementsByClass(String className)",
      "info" : "MethodDeclaration[14653-15339]:MethodDeclaration[14678-15364]"
    }, {
      "left" : "public Elements getElementsByAttribute(String key)",
      "right" : "public Elements getElementsByAttribute(String key)",
      "info" : "MethodDeclaration[15345-15745]:MethodDeclaration[15370-15770]"
    }, {
      "left" : "public Elements getElementsByAttributeValue(String key, String value)",
      "right" : "public Elements getElementsByAttributeValue(String key, String value)",
      "info" : "MethodDeclaration[15751-16188]:MethodDeclaration[15776-16213]"
    }, {
      "left" : "public Elements getElementsByAttributeValueNot(String key, String value)",
      "right" : "public Elements getElementsByAttributeValueNot(String key, String value)",
      "info" : "MethodDeclaration[16194-16646]:MethodDeclaration[16219-16671]"
    }, {
      "left" : "public Elements getElementsByAttributeValueStarting(String key, String valuePrefix)",
      "right" : "public Elements getElementsByAttributeValueStarting(String key, String valuePrefix)",
      "info" : "MethodDeclaration[16652-17130]:MethodDeclaration[16677-17155]"
    }, {
      "left" : "public Elements getElementsByAttributeValueEnding(String key, String valueSuffix)",
      "right" : "public Elements getElementsByAttributeValueEnding(String key, String valueSuffix)",
      "info" : "MethodDeclaration[17136-17608]:MethodDeclaration[17161-17633]"
    }, {
      "left" : "public Elements getElementsByAttributeValueContaining(String key, String match)",
      "right" : "public Elements getElementsByAttributeValueContaining(String key, String match)",
      "info" : "MethodDeclaration[17614-18079]:MethodDeclaration[17639-18104]"
    }, {
      "left" : "public Elements getElementsByIndexLessThan(int index)",
      "right" : "public Elements getElementsByIndexLessThan(int index)",
      "info" : "MethodDeclaration[18089-18390]:MethodDeclaration[18114-18415]"
    }, {
      "left" : "public Elements getElementsByIndexGreaterThan(int index)",
      "right" : "public Elements getElementsByIndexGreaterThan(int index)",
      "info" : "MethodDeclaration[18400-18713]:MethodDeclaration[18425-18738]"
    }, {
      "left" : "public Elements getElementsByIndexEquals(int index)",
      "right" : "public Elements getElementsByIndexEquals(int index)",
      "info" : "MethodDeclaration[18723-19018]:MethodDeclaration[18748-19043]"
    }, {
      "left" : "public Elements getAllElements()",
      "right" : "public Elements getAllElements()",
      "info" : "MethodDeclaration[19028-19277]:MethodDeclaration[19053-19302]"
    }, {
      "left" : "public String text()",
      "right" : "public String text()",
      "info" : "MethodDeclaration[19283-19562]:MethodDeclaration[19308-19587]"
    }, {
      "left" : "private void text(StringBuilder accum)",
      "right" : "private void text(StringBuilder accum)",
      "info" : "MethodDeclaration[19568-20408]:MethodDeclaration[19593-20433]"
    }, {
      "left" : "boolean preserveWhitespace()",
      "right" : "boolean preserveWhitespace()",
      "info" : "MethodDeclaration[20414-20544]:MethodDeclaration[20439-20569]"
    }, {
      "left" : "public Element text(String text)",
      "right" : "public Element text(String text)",
      "info" : "MethodDeclaration[20550-20922]:MethodDeclaration[20575-20947]"
    }, {
      "left" : "public boolean hasText()",
      "right" : "public boolean hasText()",
      "info" : "MethodDeclaration[20928-21533]:MethodDeclaration[20953-21558]"
    }, {
      "left" : "public String data()",
      "right" : "public String data()",
      "info" : "MethodDeclaration[21539-22228]:MethodDeclaration[21564-22253]"
    }, {
      "left" : "public String className()",
      "right" : "public String className()",
      "info" : "MethodDeclaration[22237-22673]:MethodDeclaration[22262-22698]"
    }, {
      "left" : "public Set<String> classNames()",
      "right" : "public Set<String> classNames()",
      "info" : "MethodDeclaration[22679-23322]:MethodDeclaration[22704-23347]"
    }, {
      "left" : "public Element classNames(Set<String> classNames)",
      "right" : "public Element classNames(Set<String> classNames)",
      "info" : "MethodDeclaration[23328-23682]:MethodDeclaration[23353-23707]"
    }, {
      "left" : "public boolean hasClass(String className)",
      "right" : "public boolean hasClass(String className)",
      "info" : "MethodDeclaration[23688-23940]:MethodDeclaration[23713-23965]"
    }, {
      "left" : "public Element addClass(String className)",
      "right" : "public Element addClass(String className)",
      "info" : "MethodDeclaration[23946-24307]:MethodDeclaration[23971-24332]"
    }, {
      "left" : "public Element removeClass(String className)",
      "right" : "public Element removeClass(String className)",
      "info" : "MethodDeclaration[24313-24688]:MethodDeclaration[24338-24713]"
    }, {
      "left" : "public Element toggleClass(String className)",
      "right" : "public Element toggleClass(String className)",
      "info" : "MethodDeclaration[24694-25202]:MethodDeclaration[24719-25227]"
    }, {
      "left" : "public String val()",
      "right" : "public String val()",
      "info" : "MethodDeclaration[25212-25508]:MethodDeclaration[25237-25533]"
    }, {
      "left" : "public Element val(String value)",
      "right" : "public Element val(String value)",
      "info" : "MethodDeclaration[25518-25848]:MethodDeclaration[25543-25873]"
    }, {
      "left" : "void outerHtml(StringBuilder accum)",
      "right" : "void outerHtml(StringBuilder accum)",
      "info" : "MethodDeclaration[25854-26436]:MethodDeclaration[25879-26461]"
    }, {
      "left" : "public String html()",
      "right" : "public String html()",
      "info" : "MethodDeclaration[26442-26867]:MethodDeclaration[26467-26892]"
    }, {
      "left" : "private void html(StringBuilder accum)",
      "right" : "private void html(StringBuilder accum)",
      "info" : "MethodDeclaration[26873-26991]:MethodDeclaration[26898-27016]"
    }, {
      "left" : "public Element html(String html)",
      "right" : "public Element html(String html)",
      "info" : "MethodDeclaration[27001-27302]:MethodDeclaration[27026-27327]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[27308-27368]:MethodDeclaration[27333-27393]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[27374-27709]:MethodDeclaration[27399-27734]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[27715-27887]:MethodDeclaration[27740-27912]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1027-1138]:Block[1027-1138]"
    }, {
      "left" : "super(baseUri, attributes);",
      "right" : "super(baseUri, attributes);",
      "info" : "SuperConstructorInvocation[1037-1064]:SuperConstructorInvocation[1037-1064]"
    }, {
      "left" : "Validate.notNull(tag);",
      "right" : "Validate.notNull(tag);",
      "info" : "ExpressionStatement[1082-1104]:ExpressionStatement[1082-1104]"
    }, {
      "left" : "this.tag = tag;",
      "right" : "this.tag = tag;",
      "info" : "ExpressionStatement[1117-1132]:ExpressionStatement[1117-1132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1470-1523]:Block[1470-1523]"
    }, {
      "left" : "this(tag, baseUri, new Attributes());",
      "right" : "this(tag, baseUri, new Attributes());",
      "info" : "ConstructorInvocation[1480-1517]:ConstructorInvocation[1480-1517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1568-1605]:Block[1568-1605]"
    }, {
      "left" : "return tag.getName();",
      "right" : "return tag.getName();",
      "info" : "ReturnStatement[1578-1599]:ReturnStatement[1578-1599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1753-1790]:Block[1753-1790]"
    }, {
      "left" : "return tag.getName();",
      "right" : "return tag.getName();",
      "info" : "ReturnStatement[1763-1784]:ReturnStatement[1763-1784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1904-1931]:Block[1904-1931]"
    }, {
      "left" : "return tag;",
      "right" : "return tag;",
      "info" : "ReturnStatement[1914-1925]:ReturnStatement[1914-1925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2184-2221]:Block[2184-2221]"
    }, {
      "left" : "return tag.isBlock();",
      "right" : "return tag.isBlock();",
      "info" : "ReturnStatement[2194-2215]:ReturnStatement[2194-2215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2395-2471]:Block[2395-2471]"
    }, {
      "left" : "String id = attr(\"id\");",
      "right" : "String id = attr(\"id\");",
      "info" : "VariableDeclarationStatement[2405-2428]:VariableDeclarationStatement[2405-2428]"
    }, {
      "left" : "return id == null ? \"\" : id;",
      "right" : "return id == null ? \"\" : id;",
      "info" : "ReturnStatement[2437-2465]:ReturnStatement[2437-2465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2761-2839]:Block[2761-2839]"
    }, {
      "left" : "super.attr(attributeKey, attributeValue);",
      "right" : "super.attr(attributeKey, attributeValue);",
      "info" : "ExpressionStatement[2771-2812]:ExpressionStatement[2771-2812]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2821-2833]:ReturnStatement[2821-2833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2883-2931]:Block[2883-2931]"
    }, {
      "left" : "return (Element) super.parent();",
      "right" : "return (Element) super.parent();",
      "info" : "ReturnStatement[2893-2925]:ReturnStatement[2893-2925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3115-3231]:Block[3115-3231]"
    }, {
      "left" : "Elements parents = new Elements();",
      "right" : "Elements parents = new Elements();",
      "info" : "VariableDeclarationStatement[3125-3159]:VariableDeclarationStatement[3125-3159]"
    }, {
      "left" : "accumulateParents(this, parents);",
      "right" : "accumulateParents(this, parents);",
      "info" : "ExpressionStatement[3168-3201]:ExpressionStatement[3168-3201]"
    }, {
      "left" : "return parents;",
      "right" : "return parents;",
      "info" : "ReturnStatement[3210-3225]:ReturnStatement[3210-3225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3305-3508]:Block[3305-3508]"
    }, {
      "left" : "Element parent = el.parent();",
      "right" : "Element parent = el.parent();",
      "info" : "VariableDeclarationStatement[3315-3344]:VariableDeclarationStatement[3315-3344]"
    }, {
      "left" : "if (parent != null && !parent.tagName().equals(\"#root\"))",
      "right" : "if (parent != null && !parent.tagName().equals(\"#root\"))",
      "info" : "IfStatement[3353-3502]:IfStatement[3353-3502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3410-3502]:Block[3410-3502]"
    }, {
      "left" : "parents.add(parent);",
      "right" : "parents.add(parent);",
      "info" : "ExpressionStatement[3424-3444]:ExpressionStatement[3424-3444]"
    }, {
      "left" : "accumulateParents(parent, parents);",
      "right" : "accumulateParents(parent, parents);",
      "info" : "ExpressionStatement[3457-3492]:ExpressionStatement[3457-3492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4023-4068]:Block[4023-4068]"
    }, {
      "left" : "return children().get(index);",
      "right" : "return children().get(index);",
      "info" : "ReturnStatement[4033-4062]:ReturnStatement[4033-4062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4374-4727]:Block[4374-4727]"
    }, {
      "left" : "List<Element> elements = new ArrayList<Element>();",
      "right" : "List<Element> elements = new ArrayList<Element>();",
      "info" : "VariableDeclarationStatement[4496-4546]:VariableDeclarationStatement[4496-4546]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[4555-4682]:EnhancedForStatement[4555-4682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4584-4682]:Block[4584-4682]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[4598-4672]:IfStatement[4598-4672]"
    }, {
      "left" : "elements.add((Element) node);",
      "right" : "elements.add((Element) node);",
      "info" : "ExpressionStatement[4643-4672]:ExpressionStatement[4643-4672]"
    }, {
      "left" : "return new Elements(elements);",
      "right" : "return new Elements(elements);",
      "info" : "ReturnStatement[4691-4721]:ReturnStatement[4691-4721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5599-5651]:Block[5599-5651]"
    }, {
      "left" : "return Selector.select(query, this);",
      "right" : "return Selector.select(query, this);",
      "info" : "ReturnStatement[5609-5645]:ReturnStatement[5609-5645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5921-6057]:Block[5921-6057]"
    }, {
      "left" : "Validate.notNull(child);",
      "right" : "Validate.notNull(child);",
      "info" : "ExpressionStatement[5931-5955]:ExpressionStatement[5931-5955]"
    }, {
      "left" : "child.setParentNode(this);",
      "right" : "child.setParentNode(this);",
      "info" : "ExpressionStatement[5973-5999]:ExpressionStatement[5973-5999]"
    }, {
      "left" : "childNodes.add(child);",
      "right" : "childNodes.add(child);",
      "info" : "ExpressionStatement[6008-6030]:ExpressionStatement[6008-6030]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6039-6051]:ReturnStatement[6039-6051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6334-6473]:Block[6334-6473]"
    }, {
      "left" : "Validate.notNull(child);",
      "right" : "Validate.notNull(child);",
      "info" : "ExpressionStatement[6344-6368]:ExpressionStatement[6344-6368]"
    }, {
      "left" : "child.setParentNode(this);",
      "right" : "child.setParentNode(this);",
      "info" : "ExpressionStatement[6386-6412]:ExpressionStatement[6386-6412]"
    }, {
      "left" : "childNodes.add(0, child);",
      "right" : "childNodes.add(0, child);",
      "info" : "ExpressionStatement[6421-6446]:ExpressionStatement[6421-6446]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6455-6467]:ReturnStatement[6455-6467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6839-6966]:Block[6839-6966]"
    }, {
      "left" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "right" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "info" : "VariableDeclarationStatement[6849-6910]:VariableDeclarationStatement[6849-6910]"
    }, {
      "left" : "appendChild(child);",
      "right" : "appendChild(child);",
      "info" : "ExpressionStatement[6919-6938]:ExpressionStatement[6919-6938]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[6947-6960]:ReturnStatement[6947-6960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7335-7463]:Block[7335-7463]"
    }, {
      "left" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "right" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "info" : "VariableDeclarationStatement[7345-7406]:VariableDeclarationStatement[7345-7406]"
    }, {
      "left" : "prependChild(child);",
      "right" : "prependChild(child);",
      "info" : "ExpressionStatement[7415-7435]:ExpressionStatement[7415-7435]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[7444-7457]:ReturnStatement[7444-7457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7666-7776]:Block[7666-7776]"
    }, {
      "left" : "TextNode node = new TextNode(text, baseUri());",
      "right" : "TextNode node = new TextNode(text, baseUri());",
      "info" : "VariableDeclarationStatement[7676-7722]:VariableDeclarationStatement[7676-7722]"
    }, {
      "left" : "appendChild(node);",
      "right" : "appendChild(node);",
      "info" : "ExpressionStatement[7731-7749]:ExpressionStatement[7731-7749]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[7758-7770]:ReturnStatement[7758-7770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7981-8092]:Block[7981-8092]"
    }, {
      "left" : "TextNode node = new TextNode(text, baseUri());",
      "right" : "TextNode node = new TextNode(text, baseUri());",
      "info" : "VariableDeclarationStatement[7991-8037]:VariableDeclarationStatement[7991-8037]"
    }, {
      "left" : "prependChild(node);",
      "right" : "prependChild(node);",
      "info" : "ExpressionStatement[8046-8065]:ExpressionStatement[8046-8065]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[8074-8086]:ReturnStatement[8074-8086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9518-9574]:Block[9536-9592]"
    }, {
      "left" : "childNodes.clear();",
      "right" : "childNodes.clear();",
      "info" : "ExpressionStatement[9528-9547]:ExpressionStatement[9546-9565]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9556-9568]:ReturnStatement[9574-9586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10711-10885]:Block[10736-10910]"
    }, {
      "left" : "List<Element> children = el.children();",
      "right" : "List<Element> children = el.children();",
      "info" : "VariableDeclarationStatement[10721-10760]:VariableDeclarationStatement[10746-10785]"
    }, {
      "left" : "if (children.size() > 0)",
      "right" : "if (children.size() > 0)",
      "info" : "IfStatement[10769-10879]:IfStatement[10794-10904]"
    }, {
      "left" : "return getDeepChild(children.get(0));",
      "right" : "return getDeepChild(children.get(0));",
      "info" : "ReturnStatement[10806-10843]:ReturnStatement[10831-10868]"
    }, {
      "left" : "return el;",
      "right" : "return el;",
      "info" : "ReturnStatement[10869-10879]:ReturnStatement[10894-10904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11006-11049]:Block[11031-11074]"
    }, {
      "left" : "return parent().children();",
      "right" : "return parent().children();",
      "info" : "ReturnStatement[11016-11043]:ReturnStatement[11041-11068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11502-11768]:Block[11527-11793]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[11512-11557]:VariableDeclarationStatement[11537-11582]"
    }, {
      "left" : "Integer index = indexInList(this, siblings);",
      "right" : "Integer index = indexInList(this, siblings);",
      "info" : "VariableDeclarationStatement[11566-11610]:VariableDeclarationStatement[11591-11635]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[11619-11643]:ExpressionStatement[11644-11668]"
    }, {
      "left" : "if (siblings.size() > index+1)",
      "right" : "if (siblings.size() > index+1)",
      "info" : "IfStatement[11652-11762]:IfStatement[11677-11787]"
    }, {
      "left" : "return siblings.get(index+1);",
      "right" : "return siblings.get(index+1);",
      "info" : "ReturnStatement[11695-11724]:ReturnStatement[11720-11749]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11750-11762]:ReturnStatement[11775-11787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11999-12249]:Block[12024-12274]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[12009-12054]:VariableDeclarationStatement[12034-12079]"
    }, {
      "left" : "Integer index = indexInList(this, siblings);",
      "right" : "Integer index = indexInList(this, siblings);",
      "info" : "VariableDeclarationStatement[12063-12107]:VariableDeclarationStatement[12088-12132]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[12116-12140]:ExpressionStatement[12141-12165]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[12149-12243]:IfStatement[12174-12268]"
    }, {
      "left" : "return siblings.get(index-1);",
      "right" : "return siblings.get(index-1);",
      "info" : "ReturnStatement[12176-12205]:ReturnStatement[12201-12230]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[12231-12243]:ReturnStatement[12256-12268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12455-12630]:Block[12480-12655]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[12518-12563]:VariableDeclarationStatement[12543-12588]"
    }, {
      "left" : "return siblings.size() > 1 ? siblings.get(0) : null;",
      "right" : "return siblings.size() > 1 ? siblings.get(0) : null;",
      "info" : "ReturnStatement[12572-12624]:ReturnStatement[12597-12649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12873-12974]:Block[12898-12999]"
    }, {
      "left" : "if (parent() == null)",
      "right" : "if (parent() == null)",
      "info" : "IfStatement[12882-12913]:IfStatement[12907-12938]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[12904-12913]:ReturnStatement[12929-12938]"
    }, {
      "left" : "return indexInList(this, parent().children());",
      "right" : "return indexInList(this, parent().children());",
      "info" : "ReturnStatement[12921-12967]:ReturnStatement[12946-12992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13175-13315]:Block[13200-13340]"
    }, {
      "left" : "List<Element> siblings = parent().children();",
      "right" : "List<Element> siblings = parent().children();",
      "info" : "VariableDeclarationStatement[13185-13230]:VariableDeclarationStatement[13210-13255]"
    }, {
      "left" : "return siblings.size() > 1 ? siblings.get(siblings.size() - 1) : null;",
      "right" : "return siblings.size() > 1 ? siblings.get(siblings.size() - 1) : null;",
      "info" : "ReturnStatement[13239-13309]:ReturnStatement[13264-13334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13699-13859]:Block[13724-13884]"
    }, {
      "left" : "Validate.notEmpty(tagName);",
      "right" : "Validate.notEmpty(tagName);",
      "info" : "ExpressionStatement[13709-13736]:ExpressionStatement[13734-13761]"
    }, {
      "left" : "tagName = tagName.toLowerCase().trim();",
      "right" : "tagName = tagName.toLowerCase().trim();",
      "info" : "ExpressionStatement[13745-13784]:ExpressionStatement[13770-13809]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Tag(tagName), this);",
      "right" : "return Collector.collect(new Evaluator.Tag(tagName), this);",
      "info" : "ReturnStatement[13794-13853]:ReturnStatement[13819-13878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14418-14647]:Block[14443-14672]"
    }, {
      "left" : "Validate.notEmpty(id);",
      "right" : "Validate.notEmpty(id);",
      "info" : "ExpressionStatement[14428-14450]:ExpressionStatement[14453-14475]"
    }, {
      "left" : "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
      "right" : "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
      "info" : "VariableDeclarationStatement[14468-14534]:VariableDeclarationStatement[14493-14559]"
    }, {
      "left" : "if (elements.size() > 0)",
      "right" : "if (elements.size() > 0)",
      "info" : "IfStatement[14543-14641]:IfStatement[14568-14666]"
    }, {
      "left" : "return elements.get(0);",
      "right" : "return elements.get(0);",
      "info" : "ReturnStatement[14580-14603]:ReturnStatement[14605-14628]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14629-14641]:ReturnStatement[14654-14666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15221-15339]:Block[15246-15364]"
    }, {
      "left" : "Validate.notEmpty(className);",
      "right" : "Validate.notEmpty(className);",
      "info" : "ExpressionStatement[15231-15260]:ExpressionStatement[15256-15285]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Class(className), this);",
      "right" : "return Collector.collect(new Evaluator.Class(className), this);",
      "info" : "ReturnStatement[15270-15333]:ReturnStatement[15295-15358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15595-15745]:Block[15620-15770]"
    }, {
      "left" : "Validate.notEmpty(key);",
      "right" : "Validate.notEmpty(key);",
      "info" : "ExpressionStatement[15605-15628]:ExpressionStatement[15630-15653]"
    }, {
      "left" : "key = key.trim().toLowerCase();",
      "right" : "key = key.trim().toLowerCase();",
      "info" : "ExpressionStatement[15637-15668]:ExpressionStatement[15662-15693]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Attribute(key), this);",
      "right" : "return Collector.collect(new Evaluator.Attribute(key), this);",
      "info" : "ReturnStatement[15678-15739]:ReturnStatement[15703-15764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16095-16188]:Block[16120-16213]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
      "info" : "ReturnStatement[16105-16182]:ReturnStatement[16130-16207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16550-16646]:Block[16575-16671]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueNot(key, value), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueNot(key, value), this);",
      "info" : "ReturnStatement[16560-16640]:ReturnStatement[16585-16665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17023-17130]:Block[17048-17155]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
      "info" : "ReturnStatement[17033-17124]:ReturnStatement[17058-17149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17503-17608]:Block[17528-17633]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
      "info" : "ReturnStatement[17513-17602]:ReturnStatement[17538-17627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17976-18079]:Block[18001-18104]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
      "info" : "ReturnStatement[17986-18073]:ReturnStatement[18011-18098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18307-18390]:Block[18332-18415]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexLessThan(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexLessThan(index), this);",
      "info" : "ReturnStatement[18317-18384]:ReturnStatement[18342-18409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18627-18713]:Block[18652-18738]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
      "info" : "ReturnStatement[18637-18707]:ReturnStatement[18662-18732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18937-19018]:Block[18962-19043]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexEquals(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexEquals(index), this);",
      "info" : "ReturnStatement[18947-19012]:ReturnStatement[18972-19037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19201-19277]:Block[19226-19302]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AllElements(), this);",
      "right" : "return Collector.collect(new Evaluator.AllElements(), this);",
      "info" : "ReturnStatement[19211-19271]:ReturnStatement[19236-19296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19452-19562]:Block[19477-19587]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[19462-19501]:VariableDeclarationStatement[19487-19526]"
    }, {
      "left" : "text(sb);",
      "right" : "text(sb);",
      "info" : "ExpressionStatement[19510-19519]:ExpressionStatement[19535-19544]"
    }, {
      "left" : "return sb.toString().trim();",
      "right" : "return sb.toString().trim();",
      "info" : "ReturnStatement[19528-19556]:ReturnStatement[19553-19581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19607-20408]:Block[19632-20433]"
    }, {
      "left" : "for (Node child : childNodes)",
      "right" : "for (Node child : childNodes)",
      "info" : "EnhancedForStatement[19617-20402]:EnhancedForStatement[19642-20427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19647-20402]:Block[19672-20427]"
    }, {
      "left" : "if (child instanceof TextNode)",
      "right" : "if (child instanceof TextNode)",
      "info" : "IfStatement[19661-20392]:IfStatement[19686-20417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19692-20112]:Block[19717-20137]"
    }, {
      "left" : "TextNode textNode = (TextNode) child;",
      "right" : "TextNode textNode = (TextNode) child;",
      "info" : "VariableDeclarationStatement[19710-19747]:VariableDeclarationStatement[19735-19772]"
    }, {
      "left" : "String text = textNode.getWholeText();",
      "right" : "String text = textNode.getWholeText();",
      "info" : "VariableDeclarationStatement[19764-19802]:VariableDeclarationStatement[19789-19827]"
    }, {
      "left" : "if (!preserveWhitespace())",
      "right" : "if (!preserveWhitespace())",
      "info" : "IfStatement[19820-20061]:IfStatement[19845-20086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19847-20061]:Block[19872-20086]"
    }, {
      "left" : "text = TextNode.normaliseWhitespace(text);",
      "right" : "text = TextNode.normaliseWhitespace(text);",
      "info" : "ExpressionStatement[19869-19911]:ExpressionStatement[19894-19936]"
    }, {
      "left" : "if (TextNode.lastCharIsWhitespace(accum))",
      "right" : "if (TextNode.lastCharIsWhitespace(accum))",
      "info" : "IfStatement[19932-20043]:IfStatement[19957-20068]"
    }, {
      "left" : "text = TextNode.stripLeadingWhitespace(text);",
      "right" : "text = TextNode.stripLeadingWhitespace(text);",
      "info" : "ExpressionStatement[19998-20043]:ExpressionStatement[20023-20068]"
    }, {
      "left" : "accum.append(text);",
      "right" : "accum.append(text);",
      "info" : "ExpressionStatement[20078-20097]:ExpressionStatement[20103-20122]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[20118-20392]:IfStatement[20143-20417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20148-20392]:Block[20173-20417]"
    }, {
      "left" : "Element element = (Element) child;",
      "right" : "Element element = (Element) child;",
      "info" : "VariableDeclarationStatement[20166-20200]:VariableDeclarationStatement[20191-20225]"
    }, {
      "left" : "if (accum.length() > 0 && element.isBlock() && !TextNode.lastCharIsWhitespace(accum))",
      "right" : "if (accum.length() > 0 && element.isBlock() && !TextNode.lastCharIsWhitespace(accum))",
      "info" : "IfStatement[20217-20341]:IfStatement[20242-20366]"
    }, {
      "left" : "accum.append(\" \");",
      "right" : "accum.append(\" \");",
      "info" : "ExpressionStatement[20323-20341]:ExpressionStatement[20348-20366]"
    }, {
      "left" : "element.text(accum);",
      "right" : "element.text(accum);",
      "info" : "ExpressionStatement[20358-20378]:ExpressionStatement[20383-20403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20443-20544]:Block[20468-20569]"
    }, {
      "left" : "return tag.preserveWhitespace() || parent() != null && parent().preserveWhitespace();",
      "right" : "return tag.preserveWhitespace() || parent() != null && parent().preserveWhitespace();",
      "info" : "ReturnStatement[20453-20538]:ReturnStatement[20478-20563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20755-20922]:Block[20780-20947]"
    }, {
      "left" : "Validate.notNull(text);",
      "right" : "Validate.notNull(text);",
      "info" : "ExpressionStatement[20765-20788]:ExpressionStatement[20790-20813]"
    }, {
      "left" : "empty();",
      "right" : "empty();",
      "info" : "ExpressionStatement[20798-20806]:ExpressionStatement[20823-20831]"
    }, {
      "left" : "TextNode textNode = new TextNode(text, baseUri);",
      "right" : "TextNode textNode = new TextNode(text, baseUri);",
      "info" : "VariableDeclarationStatement[20815-20863]:VariableDeclarationStatement[20840-20888]"
    }, {
      "left" : "appendChild(textNode);",
      "right" : "appendChild(textNode);",
      "info" : "ExpressionStatement[20872-20894]:ExpressionStatement[20897-20919]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[20904-20916]:ReturnStatement[20929-20941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21104-21533]:Block[21129-21558]"
    }, {
      "left" : "for (Node child: childNodes)",
      "right" : "for (Node child: childNodes)",
      "info" : "EnhancedForStatement[21114-21505]:EnhancedForStatement[21139-21530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21143-21505]:Block[21168-21530]"
    }, {
      "left" : "if (child instanceof TextNode)",
      "right" : "if (child instanceof TextNode)",
      "info" : "IfStatement[21157-21495]:IfStatement[21182-21520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21188-21331]:Block[21213-21356]"
    }, {
      "left" : "TextNode textNode = (TextNode) child;",
      "right" : "TextNode textNode = (TextNode) child;",
      "info" : "VariableDeclarationStatement[21206-21243]:VariableDeclarationStatement[21231-21268]"
    }, {
      "left" : "if (!textNode.isBlank())",
      "right" : "if (!textNode.isBlank())",
      "info" : "IfStatement[21260-21317]:IfStatement[21285-21342]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[21305-21317]:ReturnStatement[21330-21342]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[21337-21495]:IfStatement[21362-21520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21367-21495]:Block[21392-21520]"
    }, {
      "left" : "Element el = (Element) child;",
      "right" : "Element el = (Element) child;",
      "info" : "VariableDeclarationStatement[21385-21414]:VariableDeclarationStatement[21410-21439]"
    }, {
      "left" : "if (el.hasText())",
      "right" : "if (el.hasText())",
      "info" : "IfStatement[21431-21481]:IfStatement[21456-21506]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[21469-21481]:ReturnStatement[21494-21506]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[21514-21527]:ReturnStatement[21539-21552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21720-22228]:Block[21745-22253]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[21730-21769]:VariableDeclarationStatement[21755-21794]"
    }, {
      "left" : "for (Node childNode : childNodes)",
      "right" : "for (Node childNode : childNodes)",
      "info" : "EnhancedForStatement[21779-22192]:EnhancedForStatement[21804-22217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21813-22192]:Block[21838-22217]"
    }, {
      "left" : "if (childNode instanceof DataNode)",
      "right" : "if (childNode instanceof DataNode)",
      "info" : "IfStatement[21827-22182]:IfStatement[21852-22207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21862-21979]:Block[21887-22004]"
    }, {
      "left" : "DataNode data = (DataNode) childNode;",
      "right" : "DataNode data = (DataNode) childNode;",
      "info" : "VariableDeclarationStatement[21880-21917]:VariableDeclarationStatement[21905-21942]"
    }, {
      "left" : "sb.append(data.getWholeData());",
      "right" : "sb.append(data.getWholeData());",
      "info" : "ExpressionStatement[21934-21965]:ExpressionStatement[21959-21990]"
    }, {
      "left" : "if (childNode instanceof Element)",
      "right" : "if (childNode instanceof Element)",
      "info" : "IfStatement[21985-22182]:IfStatement[22010-22207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22019-22182]:Block[22044-22207]"
    }, {
      "left" : "Element element = (Element) childNode;",
      "right" : "Element element = (Element) childNode;",
      "info" : "VariableDeclarationStatement[22037-22075]:VariableDeclarationStatement[22062-22100]"
    }, {
      "left" : "String elementData = element.data();",
      "right" : "String elementData = element.data();",
      "info" : "VariableDeclarationStatement[22092-22128]:VariableDeclarationStatement[22117-22153]"
    }, {
      "left" : "sb.append(elementData);",
      "right" : "sb.append(elementData);",
      "info" : "ExpressionStatement[22145-22168]:ExpressionStatement[22170-22193]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[22201-22222]:ReturnStatement[22226-22247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22592-22673]:Block[22617-22698]"
    }, {
      "left" : "return attributes.hasKey(\"class\") ? attributes.get(\"class\") : \"\";",
      "right" : "return attributes.hasKey(\"class\") ? attributes.get(\"class\") : \"\";",
      "info" : "ReturnStatement[22602-22667]:ReturnStatement[22627-22692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23114-23322]:Block[23139-23347]"
    }, {
      "left" : "if (classNames == null)",
      "right" : "if (classNames == null)",
      "info" : "IfStatement[23124-23289]:IfStatement[23149-23314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23148-23289]:Block[23173-23314]"
    }, {
      "left" : "String[] names = className().split(\"\\\\s+\");",
      "right" : "String[] names = className().split(\"\\\\s+\");",
      "info" : "VariableDeclarationStatement[23162-23205]:VariableDeclarationStatement[23187-23230]"
    }, {
      "left" : "classNames = new LinkedHashSet<String>(Arrays.asList(names));",
      "right" : "classNames = new LinkedHashSet<String>(Arrays.asList(names));",
      "info" : "ExpressionStatement[23218-23279]:ExpressionStatement[23243-23304]"
    }, {
      "left" : "return classNames;",
      "right" : "return classNames;",
      "info" : "ReturnStatement[23298-23316]:ReturnStatement[23323-23341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23548-23682]:Block[23573-23707]"
    }, {
      "left" : "Validate.notNull(classNames);",
      "right" : "Validate.notNull(classNames);",
      "info" : "ExpressionStatement[23558-23587]:ExpressionStatement[23583-23612]"
    }, {
      "left" : "attributes.put(\"class\", StringUtils.join(classNames, \" \"));",
      "right" : "attributes.put(\"class\", StringUtils.join(classNames, \" \"));",
      "info" : "ExpressionStatement[23596-23655]:ExpressionStatement[23621-23680]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[23664-23676]:ReturnStatement[23689-23701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23884-23940]:Block[23909-23965]"
    }, {
      "left" : "return classNames().contains(className);",
      "right" : "return classNames().contains(className);",
      "info" : "ReturnStatement[23894-23934]:ReturnStatement[23919-23959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24135-24307]:Block[24160-24332]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[24145-24173]:ExpressionStatement[24170-24198]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[24183-24218]:VariableDeclarationStatement[24208-24243]"
    }, {
      "left" : "classes.add(className);",
      "right" : "classes.add(className);",
      "info" : "ExpressionStatement[24227-24250]:ExpressionStatement[24252-24275]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[24259-24279]:ExpressionStatement[24284-24304]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[24289-24301]:ReturnStatement[24314-24326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24513-24688]:Block[24538-24713]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[24523-24551]:ExpressionStatement[24548-24576]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[24561-24596]:VariableDeclarationStatement[24586-24621]"
    }, {
      "left" : "classes.remove(className);",
      "right" : "classes.remove(className);",
      "info" : "ExpressionStatement[24605-24631]:ExpressionStatement[24630-24656]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[24640-24660]:ExpressionStatement[24665-24685]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[24670-24682]:ReturnStatement[24695-24707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24933-25202]:Block[24958-25227]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[24943-24971]:ExpressionStatement[24968-24996]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[24981-25016]:VariableDeclarationStatement[25006-25041]"
    }, {
      "left" : "if (classes.contains(className))",
      "right" : "if (classes.contains(className))",
      "info" : "IfStatement[25025-25145]:IfStatement[25050-25170]"
    }, {
      "left" : "classes.remove(className);",
      "right" : "classes.remove(className);",
      "info" : "ExpressionStatement[25070-25096]:ExpressionStatement[25095-25121]"
    }, {
      "left" : "classes.add(className);",
      "right" : "classes.add(className);",
      "info" : "ExpressionStatement[25122-25145]:ExpressionStatement[25147-25170]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[25154-25174]:ExpressionStatement[25179-25199]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[25184-25196]:ReturnStatement[25209-25221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25385-25508]:Block[25410-25533]"
    }, {
      "left" : "if (tagName().equals(\"textarea\"))",
      "right" : "if (tagName().equals(\"textarea\"))",
      "info" : "IfStatement[25395-25502]:IfStatement[25420-25527]"
    }, {
      "left" : "return text();",
      "right" : "return text();",
      "info" : "ReturnStatement[25441-25455]:ReturnStatement[25466-25480]"
    }, {
      "left" : "return attr(\"value\");",
      "right" : "return attr(\"value\");",
      "info" : "ReturnStatement[25481-25502]:ReturnStatement[25506-25527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25706-25848]:Block[25731-25873]"
    }, {
      "left" : "if (tagName().equals(\"textarea\"))",
      "right" : "if (tagName().equals(\"textarea\"))",
      "info" : "IfStatement[25716-25821]:IfStatement[25741-25846]"
    }, {
      "left" : "text(value);",
      "right" : "text(value);",
      "info" : "ExpressionStatement[25762-25774]:ExpressionStatement[25787-25799]"
    }, {
      "left" : "attr(\"value\", value);",
      "right" : "attr(\"value\", value);",
      "info" : "ExpressionStatement[25800-25821]:ExpressionStatement[25825-25846]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[25830-25842]:ReturnStatement[25855-25867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25890-26436]:Block[25915-26461]"
    }, {
      "left" : "if (isBlock() || (parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0))",
      "right" : "if (isBlock() || (parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0))",
      "info" : "IfStatement[25900-26022]:IfStatement[25925-26047]"
    }, {
      "left" : "indent(accum);",
      "right" : "indent(accum);",
      "info" : "ExpressionStatement[26008-26022]:ExpressionStatement[26033-26047]"
    }, {
      "left" : "accum\n                .append(\"<\")\n                .append(tagName())\n                .append(attributes.html());",
      "right" : "accum\n                .append(\"<\")\n                .append(tagName())\n                .append(attributes.html());",
      "info" : "ExpressionStatement[26031-26144]:ExpressionStatement[26056-26169]"
    }, {
      "left" : "if (childNodes.isEmpty() && tag.isEmpty())",
      "right" : "if (childNodes.isEmpty() && tag.isEmpty())",
      "info" : "IfStatement[26154-26430]:IfStatement[26179-26455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26197-26241]:Block[26222-26266]"
    }, {
      "left" : "accum.append(\" />\");",
      "right" : "accum.append(\" />\");",
      "info" : "ExpressionStatement[26211-26231]:ExpressionStatement[26236-26256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26247-26430]:Block[26272-26455]"
    }, {
      "left" : "accum.append(\">\");",
      "right" : "accum.append(\">\");",
      "info" : "ExpressionStatement[26261-26279]:ExpressionStatement[26286-26304]"
    }, {
      "left" : "html(accum);",
      "right" : "html(accum);",
      "info" : "ExpressionStatement[26292-26304]:ExpressionStatement[26317-26329]"
    }, {
      "left" : "if (tag.canContainBlock())",
      "right" : "if (tag.canContainBlock())",
      "info" : "IfStatement[26317-26358]:IfStatement[26342-26383]"
    }, {
      "left" : "indent(accum);",
      "right" : "indent(accum);",
      "info" : "ExpressionStatement[26344-26358]:ExpressionStatement[26369-26383]"
    }, {
      "left" : "accum.append(\"</\").append(tagName()).append(\">\");",
      "right" : "accum.append(\"</\").append(tagName()).append(\">\");",
      "info" : "ExpressionStatement[26371-26420]:ExpressionStatement[26396-26445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26747-26867]:Block[26772-26892]"
    }, {
      "left" : "StringBuilder accum = new StringBuilder();",
      "right" : "StringBuilder accum = new StringBuilder();",
      "info" : "VariableDeclarationStatement[26757-26799]:VariableDeclarationStatement[26782-26824]"
    }, {
      "left" : "html(accum);",
      "right" : "html(accum);",
      "info" : "ExpressionStatement[26808-26820]:ExpressionStatement[26833-26845]"
    }, {
      "left" : "return accum.toString().trim();",
      "right" : "return accum.toString().trim();",
      "info" : "ReturnStatement[26830-26861]:ReturnStatement[26855-26886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26912-26991]:Block[26937-27016]"
    }, {
      "left" : "for (Node node : childNodes)\n            node.outerHtml(accum);",
      "right" : "for (Node node : childNodes)\n            node.outerHtml(accum);",
      "info" : "EnhancedForStatement[26922-26985]:EnhancedForStatement[26947-27010]"
    }, {
      "left" : "node.outerHtml(accum);",
      "right" : "node.outerHtml(accum);",
      "info" : "ExpressionStatement[26963-26985]:ExpressionStatement[26988-27010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27235-27302]:Block[27260-27327]"
    }, {
      "left" : "empty();",
      "right" : "empty();",
      "info" : "ExpressionStatement[27245-27253]:ExpressionStatement[27270-27278]"
    }, {
      "left" : "append(html);",
      "right" : "append(html);",
      "info" : "ExpressionStatement[27262-27275]:ExpressionStatement[27287-27300]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[27284-27296]:ReturnStatement[27309-27321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27333-27368]:Block[27358-27393]"
    }, {
      "left" : "return outerHtml();",
      "right" : "return outerHtml();",
      "info" : "ReturnStatement[27343-27362]:ReturnStatement[27368-27387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27420-27709]:Block[27445-27734]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[27430-27457]:IfStatement[27455-27482]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[27445-27457]:ReturnStatement[27470-27482]"
    }, {
      "left" : "if (!(o instanceof Element))",
      "right" : "if (!(o instanceof Element))",
      "info" : "IfStatement[27466-27508]:IfStatement[27491-27533]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[27495-27508]:ReturnStatement[27520-27533]"
    }, {
      "left" : "if (!super.equals(o))",
      "right" : "if (!super.equals(o))",
      "info" : "IfStatement[27517-27552]:IfStatement[27542-27577]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[27539-27552]:ReturnStatement[27564-27577]"
    }, {
      "left" : "Element element = (Element) o;",
      "right" : "Element element = (Element) o;",
      "info" : "VariableDeclarationStatement[27562-27592]:VariableDeclarationStatement[27587-27617]"
    }, {
      "left" : "if (tag != null ? !tag.equals(element.tag) : element.tag != null)",
      "right" : "if (tag != null ? !tag.equals(element.tag) : element.tag != null)",
      "info" : "IfStatement[27602-27681]:IfStatement[27627-27706]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[27668-27681]:ReturnStatement[27693-27706]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[27691-27703]:ReturnStatement[27716-27728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27751-27887]:Block[27776-27912]"
    }, {
      "left" : "int result = super.hashCode();",
      "right" : "int result = super.hashCode();",
      "info" : "VariableDeclarationStatement[27761-27791]:VariableDeclarationStatement[27786-27816]"
    }, {
      "left" : "result = 31 * result + (tag != null ? tag.hashCode() : 0);",
      "right" : "result = 31 * result + (tag != null ? tag.hashCode() : 0);",
      "info" : "ExpressionStatement[27800-27858]:ExpressionStatement[27825-27883]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[27867-27881]:ReturnStatement[27892-27906]"
    } ]
  },
  "interFileMappings" : { }
}