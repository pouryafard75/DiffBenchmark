{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Node",
      "right" : "Node",
      "info" : "TypeDeclaration[315-13141]:TypeDeclaration[315-13305]"
    }, {
      "left" : "Node parentNode;",
      "right" : "Node parentNode;",
      "info" : "FieldDeclaration[492-508]:FieldDeclaration[492-508]"
    }, {
      "left" : "List<Node> childNodes;",
      "right" : "List<Node> childNodes;",
      "info" : "FieldDeclaration[513-535]:FieldDeclaration[513-535]"
    }, {
      "left" : "Attributes attributes;",
      "right" : "Attributes attributes;",
      "info" : "FieldDeclaration[540-562]:FieldDeclaration[540-562]"
    }, {
      "left" : "String baseUri;",
      "right" : "String baseUri;",
      "info" : "FieldDeclaration[567-582]:FieldDeclaration[567-582]"
    }, {
      "left" : "int siblingIndex;",
      "right" : "int siblingIndex;",
      "info" : "FieldDeclaration[587-604]:FieldDeclaration[587-604]"
    }, {
      "left" : "protected Node(String baseUri, Attributes attributes)",
      "right" : "protected Node(String baseUri, Attributes attributes)",
      "info" : "MethodDeclaration[610-1007]:MethodDeclaration[610-1007]"
    }, {
      "left" : "protected Node(String baseUri)",
      "right" : "protected Node(String baseUri)",
      "info" : "MethodDeclaration[1013-1092]:MethodDeclaration[1013-1092]"
    }, {
      "left" : "protected Node()",
      "right" : "protected Node()",
      "info" : "MethodDeclaration[1098-1305]:MethodDeclaration[1098-1305]"
    }, {
      "left" : "public abstract String nodeName();",
      "right" : "public abstract String nodeName();",
      "info" : "MethodDeclaration[1311-1500]:MethodDeclaration[1311-1500]"
    }, {
      "left" : "public String attr(String attributeKey)",
      "right" : "public String attr(String attributeKey)",
      "info" : "MethodDeclaration[1506-2377]:MethodDeclaration[1506-2377]"
    }, {
      "left" : "public Attributes attributes()",
      "right" : "public Attributes attributes()",
      "info" : "MethodDeclaration[2383-2608]:MethodDeclaration[2383-2608]"
    }, {
      "left" : "public Node attr(String attributeKey, String attributeValue)",
      "right" : "public Node attr(String attributeKey, String attributeValue)",
      "info" : "MethodDeclaration[2614-2990]:MethodDeclaration[2614-2990]"
    }, {
      "left" : "public boolean hasAttr(String attributeKey)",
      "right" : "public boolean hasAttr(String attributeKey)",
      "info" : "MethodDeclaration[2996-3311]:MethodDeclaration[2996-3311]"
    }, {
      "left" : "public Node removeAttr(String attributeKey)",
      "right" : "public Node removeAttr(String attributeKey)",
      "info" : "MethodDeclaration[3317-3619]:MethodDeclaration[3317-3619]"
    }, {
      "left" : "public String baseUri()",
      "right" : "public String baseUri()",
      "info" : "MethodDeclaration[3625-3754]:MethodDeclaration[3625-3754]"
    }, {
      "left" : "public void setBaseUri(String baseUri)",
      "right" : "public void setBaseUri(String baseUri)",
      "info" : "MethodDeclaration[3760-3964]:MethodDeclaration[3760-3964]"
    }, {
      "left" : "public String absUrl(String attributeKey)",
      "right" : "public String absUrl(String attributeKey)",
      "info" : "MethodDeclaration[3970-5831]:MethodDeclaration[3970-5831]"
    }, {
      "left" : "public Node childNode(int index)",
      "right" : "public Node childNode(int index)",
      "info" : "MethodDeclaration[5837-6043]:MethodDeclaration[5837-6043]"
    }, {
      "left" : "public List<Node> childNodes()",
      "right" : "public List<Node> childNodes()",
      "info" : "MethodDeclaration[6049-6383]:MethodDeclaration[6049-6383]"
    }, {
      "left" : "protected Node[] childNodesAsArray()",
      "right" : "protected Node[] childNodesAsArray()",
      "info" : "MethodDeclaration[6393-6503]:MethodDeclaration[6393-6503]"
    }, {
      "left" : "public Node parent()",
      "right" : "public Node parent()",
      "info" : "MethodDeclaration[6509-6663]:MethodDeclaration[6509-6663]"
    }, {
      "left" : "public Document ownerDocument()",
      "right" : "public Document ownerDocument()",
      "info" : "MethodDeclaration[6673-7070]:MethodDeclaration[6673-7070]"
    }, {
      "left" : "public void remove()",
      "right" : "public void remove()",
      "info" : "MethodDeclaration[7080-7302]:MethodDeclaration[7080-7302]"
    }, {
      "left" : "public void replaceWith(Node in)",
      "right" : "public void replaceWith(Node in)",
      "info" : "MethodDeclaration[7312-7607]:MethodDeclaration[7312-7607]"
    }, {
      "left" : "protected void setParentNode(Node parentNode)",
      "right" : "protected void setParentNode(Node parentNode)",
      "info" : "MethodDeclaration[7613-7788]:MethodDeclaration[7613-7788]"
    }, {
      "left" : "protected void replaceChild(Node out, Node in)",
      "right" : "protected void replaceChild(Node out, Node in)",
      "info" : "MethodDeclaration[7794-8189]:MethodDeclaration[7794-8189]"
    }, {
      "left" : "protected void removeChild(Node out)",
      "right" : "protected void removeChild(Node out)",
      "info" : "MethodDeclaration[8195-8420]:MethodDeclaration[8195-8420]"
    }, {
      "left" : "protected void addChildren(Node... children)",
      "right" : "protected void addChildren(Node... children)",
      "info" : "MethodDeclaration[8426-8746]:MethodDeclaration[8426-8746]"
    }, {
      "left" : "protected void addChildren(int index, Node... children)",
      "right" : "protected void addChildren(int index, Node... children)",
      "info" : "MethodDeclaration[8752-9057]:MethodDeclaration[8752-9057]"
    }, {
      "left" : "private void reparentChild(Node child)",
      "right" : "private void reparentChild(Node child)",
      "info" : "MethodDeclaration[9063-9231]:MethodDeclaration[9063-9231]"
    }, {
      "left" : "private void reindexChildren()",
      "right" : "private void reindexChildren()",
      "info" : "MethodDeclaration[9241-9393]:MethodDeclaration[9241-9393]"
    }, {
      "left" : "public List<Node> siblingNodes()",
      "right" : "public List<Node> siblingNodes()",
      "info" : "MethodDeclaration[9403-9719]:MethodDeclaration[9403-9719]"
    }, {
      "left" : "public Node nextSibling()",
      "right" : "public Node nextSibling()",
      "info" : "MethodDeclaration[9725-10191]:MethodDeclaration[9725-10191]"
    }, {
      "left" : "public Node previousSibling()",
      "right" : "public Node previousSibling()",
      "info" : "MethodDeclaration[10197-10590]:MethodDeclaration[10197-10590]"
    }, {
      "left" : "public Integer siblingIndex()",
      "right" : "public Integer siblingIndex()",
      "info" : "MethodDeclaration[10596-10904]:MethodDeclaration[10596-10904]"
    }, {
      "left" : "protected void setSiblingIndex(int siblingIndex)",
      "right" : "protected void setSiblingIndex(int siblingIndex)",
      "info" : "MethodDeclaration[10914-11012]:MethodDeclaration[10914-11012]"
    }, {
      "left" : "public String outerHtml()",
      "right" : "public String outerHtml()",
      "info" : "MethodDeclaration[11018-11240]:MethodDeclaration[11018-11240]"
    }, {
      "left" : "abstract void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out);",
      "right" : "abstract void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out);",
      "info" : "MethodDeclaration[11497-11689]:MethodDeclaration[11661-11853]"
    }, {
      "left" : "abstract void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out);",
      "right" : "abstract void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out);",
      "info" : "MethodDeclaration[11695-11784]:MethodDeclaration[11859-11948]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[11790-11850]:MethodDeclaration[11954-12014]"
    }, {
      "left" : "protected void indent(StringBuilder accum, int depth, Document.OutputSettings out)",
      "right" : "protected void indent(StringBuilder accum, int depth, Document.OutputSettings out)",
      "info" : "MethodDeclaration[11856-12029]:MethodDeclaration[12020-12193]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[12035-12241]:MethodDeclaration[12199-12405]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[12247-12538]:MethodDeclaration[12411-12702]"
    }, {
      "left" : "OuterHtmlVisitor",
      "right" : "OuterHtmlVisitor",
      "info" : "TypeDeclaration[12544-13139]:TypeDeclaration[12708-13303]"
    }, {
      "left" : "private StringBuilder accum;",
      "right" : "private StringBuilder accum;",
      "info" : "FieldDeclaration[12615-12643]:FieldDeclaration[12779-12807]"
    }, {
      "left" : "private Document.OutputSettings out;",
      "right" : "private Document.OutputSettings out;",
      "info" : "FieldDeclaration[12652-12688]:FieldDeclaration[12816-12852]"
    }, {
      "left" : "OuterHtmlVisitor(StringBuilder accum, Document.OutputSettings out)",
      "right" : "OuterHtmlVisitor(StringBuilder accum, Document.OutputSettings out)",
      "info" : "MethodDeclaration[12698-12836]:MethodDeclaration[12862-13000]"
    }, {
      "left" : "public void head(Node node, int depth)",
      "right" : "public void head(Node node, int depth)",
      "info" : "MethodDeclaration[12846-12947]:MethodDeclaration[13010-13111]"
    }, {
      "left" : "public void tail(Node node, int depth)",
      "right" : "public void tail(Node node, int depth)",
      "info" : "MethodDeclaration[12957-13133]:MethodDeclaration[13121-13297]"
    } ],
    "mappings" : [
 {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[742-751]:Modifier[742-751]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[752-756]:SimpleName[752-756]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[757-771]:SingleVariableDeclaration[757-771]"
    }, {
      "left" : "Attributes attributes",
      "right" : "Attributes attributes",
      "info" : "SingleVariableDeclaration[773-794]:SingleVariableDeclaration[773-794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[796-1007]:Block[796-1007]"
    }, {
      "left" : "Validate.notNull(baseUri);",
      "right" : "Validate.notNull(baseUri);",
      "info" : "ExpressionStatement[806-832]:ExpressionStatement[806-832]"
    }, {
      "left" : "Validate.notNull(attributes);",
      "right" : "Validate.notNull(attributes);",
      "info" : "ExpressionStatement[841-870]:ExpressionStatement[841-870]"
    }, {
      "left" : "childNodes = new ArrayList<Node>(4);",
      "right" : "childNodes = new ArrayList<Node>(4);",
      "info" : "ExpressionStatement[888-924]:ExpressionStatement[888-924]"
    }, {
      "left" : "this.baseUri = baseUri.trim();",
      "right" : "this.baseUri = baseUri.trim();",
      "info" : "ExpressionStatement[933-963]:ExpressionStatement[933-963]"
    }, {
      "left" : "this.attributes = attributes;",
      "right" : "this.attributes = attributes;",
      "info" : "ExpressionStatement[972-1001]:ExpressionStatement[972-1001]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1013-1022]:Modifier[1013-1022]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[1023-1027]:SimpleName[1023-1027]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[1028-1042]:SingleVariableDeclaration[1028-1042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1044-1092]:Block[1044-1092]"
    }, {
      "left" : "this(baseUri, new Attributes());",
      "right" : "this(baseUri, new Attributes());",
      "info" : "ConstructorInvocation[1054-1086]:ConstructorInvocation[1054-1086]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1209-1218]:Modifier[1209-1218]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleName[1219-1223]:SimpleName[1219-1223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1226-1305]:Block[1226-1305]"
    }, {
      "left" : "childNodes = Collections.EMPTY_LIST;",
      "right" : "childNodes = Collections.EMPTY_LIST;",
      "info" : "ExpressionStatement[1236-1272]:ExpressionStatement[1236-1272]"
    }, {
      "left" : "attributes = null;",
      "right" : "attributes = null;",
      "info" : "ExpressionStatement[1281-1299]:ExpressionStatement[1281-1299]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1466-1472]:Modifier[1466-1472]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1473-1481]:Modifier[1473-1481]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[1482-1488]:SimpleType[1482-1488]"
    }, {
      "left" : "nodeName",
      "right" : "nodeName",
      "info" : "SimpleName[1489-1497]:SimpleName[1489-1497]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2049-2055]:Modifier[2049-2055]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2056-2062]:SimpleType[2056-2062]"
    }, {
      "left" : "attr",
      "right" : "attr",
      "info" : "SimpleName[2063-2067]:SimpleName[2063-2067]"
    }, {
      "left" : "String attributeKey",
      "right" : "String attributeKey",
      "info" : "SingleVariableDeclaration[2068-2087]:SingleVariableDeclaration[2068-2087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2089-2377]:Block[2089-2377]"
    }, {
      "left" : "Validate.notNull(attributeKey);",
      "right" : "Validate.notNull(attributeKey);",
      "info" : "ExpressionStatement[2099-2130]:ExpressionStatement[2099-2130]"
    }, {
      "left" : "if (hasAttr(attributeKey))",
      "right" : "if (hasAttr(attributeKey))",
      "info" : "IfStatement[2140-2371]:IfStatement[2140-2371]"
    }, {
      "left" : "return attributes.get(attributeKey);",
      "right" : "return attributes.get(attributeKey);",
      "info" : "ReturnStatement[2179-2215]:ReturnStatement[2179-2215]"
    }, {
      "left" : "if (attributeKey.toLowerCase().startsWith(\"abs:\"))",
      "right" : "if (attributeKey.toLowerCase().startsWith(\"abs:\"))",
      "info" : "IfStatement[2229-2371]:IfStatement[2229-2371]"
    }, {
      "left" : "return absUrl(attributeKey.substring(\"abs:\".length()));",
      "right" : "return absUrl(attributeKey.substring(\"abs:\".length()));",
      "info" : "ReturnStatement[2292-2347]:ReturnStatement[2292-2347]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[2361-2371]:ReturnStatement[2361-2371]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2543-2549]:Modifier[2543-2549]"
    }, {
      "left" : "Attributes",
      "right" : "Attributes",
      "info" : "SimpleType[2550-2560]:SimpleType[2550-2560]"
    }, {
      "left" : "attributes",
      "right" : "attributes",
      "info" : "SimpleName[2561-2571]:SimpleName[2561-2571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2574-2608]:Block[2574-2608]"
    }, {
      "left" : "return attributes;",
      "right" : "return attributes;",
      "info" : "ReturnStatement[2584-2602]:ReturnStatement[2584-2602]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2847-2853]:Modifier[2847-2853]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[2854-2858]:SimpleType[2854-2858]"
    }, {
      "left" : "attr",
      "right" : "attr",
      "info" : "SimpleName[2859-2863]:SimpleName[2859-2863]"
    }, {
      "left" : "String attributeKey",
      "right" : "String attributeKey",
      "info" : "SingleVariableDeclaration[2864-2883]:SingleVariableDeclaration[2864-2883]"
    }, {
      "left" : "String attributeValue",
      "right" : "String attributeValue",
      "info" : "SingleVariableDeclaration[2885-2906]:SingleVariableDeclaration[2885-2906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2908-2990]:Block[2908-2990]"
    }, {
      "left" : "attributes.put(attributeKey, attributeValue);",
      "right" : "attributes.put(attributeKey, attributeValue);",
      "info" : "ExpressionStatement[2918-2963]:ExpressionStatement[2918-2963]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2972-2984]:ReturnStatement[2972-2984]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3172-3178]:Modifier[3172-3178]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3179-3186]:PrimitiveType[3179-3186]"
    }, {
      "left" : "hasAttr",
      "right" : "hasAttr",
      "info" : "SimpleName[3187-3194]:SimpleName[3187-3194]"
    }, {
      "left" : "String attributeKey",
      "right" : "String attributeKey",
      "info" : "SingleVariableDeclaration[3195-3214]:SingleVariableDeclaration[3195-3214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3216-3311]:Block[3216-3311]"
    }, {
      "left" : "Validate.notNull(attributeKey);",
      "right" : "Validate.notNull(attributeKey);",
      "info" : "ExpressionStatement[3226-3257]:ExpressionStatement[3226-3257]"
    }, {
      "left" : "return attributes.hasKey(attributeKey);",
      "right" : "return attributes.hasKey(attributeKey);",
      "info" : "ReturnStatement[3266-3305]:ReturnStatement[3266-3305]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3466-3472]:Modifier[3466-3472]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[3473-3477]:SimpleType[3473-3477]"
    }, {
      "left" : "removeAttr",
      "right" : "removeAttr",
      "info" : "SimpleName[3478-3488]:SimpleName[3478-3488]"
    }, {
      "left" : "String attributeKey",
      "right" : "String attributeKey",
      "info" : "SingleVariableDeclaration[3489-3508]:SingleVariableDeclaration[3489-3508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3510-3619]:Block[3510-3619]"
    }, {
      "left" : "Validate.notNull(attributeKey);",
      "right" : "Validate.notNull(attributeKey);",
      "info" : "ExpressionStatement[3520-3551]:ExpressionStatement[3520-3551]"
    }, {
      "left" : "attributes.remove(attributeKey);",
      "right" : "attributes.remove(attributeKey);",
      "info" : "ExpressionStatement[3560-3592]:ExpressionStatement[3560-3592]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3601-3613]:ReturnStatement[3601-3613]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3699-3705]:Modifier[3699-3705]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3706-3712]:SimpleType[3706-3712]"
    }, {
      "left" : "baseUri",
      "right" : "baseUri",
      "info" : "SimpleName[3713-3720]:SimpleName[3713-3720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3723-3754]:Block[3723-3754]"
    }, {
      "left" : "return baseUri;",
      "right" : "return baseUri;",
      "info" : "ReturnStatement[3733-3748]:ReturnStatement[3733-3748]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3851-3857]:Modifier[3851-3857]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3858-3862]:PrimitiveType[3858-3862]"
    }, {
      "left" : "setBaseUri",
      "right" : "setBaseUri",
      "info" : "SimpleName[3863-3873]:SimpleName[3863-3873]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[3874-3888]:SingleVariableDeclaration[3874-3888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3890-3964]:Block[3890-3964]"
    }, {
      "left" : "Validate.notNull(baseUri);",
      "right" : "Validate.notNull(baseUri);",
      "info" : "ExpressionStatement[3900-3926]:ExpressionStatement[3900-3926]"
    }, {
      "left" : "this.baseUri = baseUri;",
      "right" : "this.baseUri = baseUri;",
      "info" : "ExpressionStatement[3935-3958]:ExpressionStatement[3935-3958]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5019-5025]:Modifier[5019-5025]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5026-5032]:SimpleType[5026-5032]"
    }, {
      "left" : "absUrl",
      "right" : "absUrl",
      "info" : "SimpleName[5033-5039]:SimpleName[5033-5039]"
    }, {
      "left" : "String attributeKey",
      "right" : "String attributeKey",
      "info" : "SingleVariableDeclaration[5040-5059]:SingleVariableDeclaration[5040-5059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5061-5831]:Block[5061-5831]"
    }, {
      "left" : "Validate.notEmpty(attributeKey);",
      "right" : "Validate.notEmpty(attributeKey);",
      "info" : "ExpressionStatement[5071-5103]:ExpressionStatement[5071-5103]"
    }, {
      "left" : "String relUrl = attr(attributeKey);",
      "right" : "String relUrl = attr(attributeKey);",
      "info" : "VariableDeclarationStatement[5113-5148]:VariableDeclarationStatement[5113-5148]"
    }, {
      "left" : "if (!hasAttr(attributeKey))",
      "right" : "if (!hasAttr(attributeKey))",
      "info" : "IfStatement[5157-5825]:IfStatement[5157-5825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5185-5252]:Block[5185-5252]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[5199-5209]:ReturnStatement[5199-5209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5258-5825]:Block[5258-5825]"
    }, {
      "left" : "URL base;",
      "right" : "URL base;",
      "info" : "VariableDeclarationStatement[5272-5281]:VariableDeclarationStatement[5272-5281]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5294-5815]:TryStatement[5294-5815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5298-5740]:Block[5298-5740]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5316-5632]:TryStatement[5316-5632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5320-5384]:Block[5320-5384]"
    }, {
      "left" : "base = new URL(baseUri);",
      "right" : "base = new URL(baseUri);",
      "info" : "ExpressionStatement[5342-5366]:ExpressionStatement[5342-5366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5417-5632]:Block[5417-5632]"
    }, {
      "left" : "URL abs = new URL(relUrl);",
      "right" : "URL abs = new URL(relUrl);",
      "info" : "VariableDeclarationStatement[5539-5565]:VariableDeclarationStatement[5539-5565]"
    }, {
      "left" : "return abs.toExternalForm();",
      "right" : "return abs.toExternalForm();",
      "info" : "ReturnStatement[5586-5614]:ReturnStatement[5586-5614]"
    }, {
      "left" : "URL abs = new URL(base, relUrl);",
      "right" : "URL abs = new URL(base, relUrl);",
      "info" : "VariableDeclarationStatement[5649-5681]:VariableDeclarationStatement[5649-5681]"
    }, {
      "left" : "return abs.toExternalForm();",
      "right" : "return abs.toExternalForm();",
      "info" : "ReturnStatement[5698-5726]:ReturnStatement[5698-5726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5773-5815]:Block[5773-5815]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[5791-5801]:ReturnStatement[5791-5801]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5965-5971]:Modifier[5965-5971]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[5972-5976]:SimpleType[5972-5976]"
    }, {
      "left" : "childNode",
      "right" : "childNode",
      "info" : "SimpleName[5977-5986]:SimpleName[5977-5986]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[5987-5996]:SingleVariableDeclaration[5987-5996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5998-6043]:Block[5998-6043]"
    }, {
      "left" : "return childNodes.get(index);",
      "right" : "return childNodes.get(index);",
      "info" : "ReturnStatement[6008-6037]:ReturnStatement[6008-6037]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6288-6294]:Modifier[6288-6294]"
    }, {
      "left" : "List<Node>",
      "right" : "List<Node>",
      "info" : "ParameterizedType[6295-6305]:ParameterizedType[6295-6305]"
    }, {
      "left" : "childNodes",
      "right" : "childNodes",
      "info" : "SimpleName[6306-6316]:SimpleName[6306-6316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6319-6383]:Block[6319-6383]"
    }, {
      "left" : "return Collections.unmodifiableList(childNodes);",
      "right" : "return Collections.unmodifiableList(childNodes);",
      "info" : "ReturnStatement[6329-6377]:ReturnStatement[6329-6377]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6393-6402]:Modifier[6393-6402]"
    }, {
      "left" : "Node[]",
      "right" : "Node[]",
      "info" : "ArrayType[6403-6409]:ArrayType[6403-6409]"
    }, {
      "left" : "childNodesAsArray",
      "right" : "childNodesAsArray",
      "info" : "SimpleName[6410-6427]:SimpleName[6410-6427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6430-6503]:Block[6430-6503]"
    }, {
      "left" : "return childNodes.toArray(new Node[childNodes().size()]);",
      "right" : "return childNodes.toArray(new Node[childNodes().size()]);",
      "info" : "ReturnStatement[6440-6497]:ReturnStatement[6440-6497]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6608-6614]:Modifier[6608-6614]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[6615-6619]:SimpleType[6615-6619]"
    }, {
      "left" : "parent",
      "right" : "parent",
      "info" : "SimpleName[6620-6626]:SimpleName[6620-6626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6629-6663]:Block[6629-6663]"
    }, {
      "left" : "return parentNode;",
      "right" : "return parentNode;",
      "info" : "ReturnStatement[6639-6657]:ReturnStatement[6639-6657]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6835-6841]:Modifier[6835-6841]"
    }, {
      "left" : "Document",
      "right" : "Document",
      "info" : "SimpleType[6842-6850]:SimpleType[6842-6850]"
    }, {
      "left" : "ownerDocument",
      "right" : "ownerDocument",
      "info" : "SimpleName[6851-6864]:SimpleName[6851-6864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6867-7070]:Block[6867-7070]"
    }, {
      "left" : "if (this instanceof Document)",
      "right" : "if (this instanceof Document)",
      "info" : "IfStatement[6877-7064]:IfStatement[6877-7064]"
    }, {
      "left" : "return (Document) this;",
      "right" : "return (Document) this;",
      "info" : "ReturnStatement[6919-6942]:ReturnStatement[6919-6942]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[6956-7064]:IfStatement[6956-7064]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6992-7004]:ReturnStatement[6992-7004]"
    }, {
      "left" : "return parentNode.ownerDocument();",
      "right" : "return parentNode.ownerDocument();",
      "info" : "ReturnStatement[7030-7064]:ReturnStatement[7030-7064]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7198-7204]:Modifier[7198-7204]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7205-7209]:PrimitiveType[7205-7209]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[7210-7216]:SimpleName[7210-7216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7219-7302]:Block[7219-7302]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[7229-7258]:ExpressionStatement[7229-7258]"
    }, {
      "left" : "parentNode.removeChild(this);",
      "right" : "parentNode.removeChild(this);",
      "info" : "ExpressionStatement[7267-7296]:ExpressionStatement[7267-7296]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7456-7462]:Modifier[7456-7462]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7463-7467]:PrimitiveType[7463-7467]"
    }, {
      "left" : "replaceWith",
      "right" : "replaceWith",
      "info" : "SimpleName[7468-7479]:SimpleName[7468-7479]"
    }, {
      "left" : "Node in",
      "right" : "Node in",
      "info" : "SingleVariableDeclaration[7480-7487]:SingleVariableDeclaration[7480-7487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7489-7607]:Block[7489-7607]"
    }, {
      "left" : "Validate.notNull(in);",
      "right" : "Validate.notNull(in);",
      "info" : "ExpressionStatement[7499-7520]:ExpressionStatement[7499-7520]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[7529-7558]:ExpressionStatement[7529-7558]"
    }, {
      "left" : "parentNode.replaceChild(this, in);",
      "right" : "parentNode.replaceChild(this, in);",
      "info" : "ExpressionStatement[7567-7601]:ExpressionStatement[7567-7601]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7613-7622]:Modifier[7613-7622]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7623-7627]:PrimitiveType[7623-7627]"
    }, {
      "left" : "setParentNode",
      "right" : "setParentNode",
      "info" : "SimpleName[7628-7641]:SimpleName[7628-7641]"
    }, {
      "left" : "Node parentNode",
      "right" : "Node parentNode",
      "info" : "SingleVariableDeclaration[7642-7657]:SingleVariableDeclaration[7642-7657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7659-7788]:Block[7659-7788]"
    }, {
      "left" : "if (this.parentNode != null)",
      "right" : "if (this.parentNode != null)",
      "info" : "IfStatement[7669-7744]:IfStatement[7669-7744]"
    }, {
      "left" : "this.parentNode.removeChild(this);",
      "right" : "this.parentNode.removeChild(this);",
      "info" : "ExpressionStatement[7710-7744]:ExpressionStatement[7710-7744]"
    }, {
      "left" : "this.parentNode = parentNode;",
      "right" : "this.parentNode = parentNode;",
      "info" : "ExpressionStatement[7753-7782]:ExpressionStatement[7753-7782]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7794-7803]:Modifier[7794-7803]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7804-7808]:PrimitiveType[7804-7808]"
    }, {
      "left" : "replaceChild",
      "right" : "replaceChild",
      "info" : "SimpleName[7809-7821]:SimpleName[7809-7821]"
    }, {
      "left" : "Node out",
      "right" : "Node out",
      "info" : "SingleVariableDeclaration[7822-7830]:SingleVariableDeclaration[7822-7830]"
    }, {
      "left" : "Node in",
      "right" : "Node in",
      "info" : "SingleVariableDeclaration[7832-7839]:SingleVariableDeclaration[7832-7839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7841-8189]:Block[7841-8189]"
    }, {
      "left" : "Validate.isTrue(out.parentNode == this);",
      "right" : "Validate.isTrue(out.parentNode == this);",
      "info" : "ExpressionStatement[7851-7891]:ExpressionStatement[7851-7891]"
    }, {
      "left" : "Validate.notNull(in);",
      "right" : "Validate.notNull(in);",
      "info" : "ExpressionStatement[7900-7921]:ExpressionStatement[7900-7921]"
    }, {
      "left" : "if (in.parentNode != null)",
      "right" : "if (in.parentNode != null)",
      "info" : "IfStatement[7930-7999]:IfStatement[7930-7999]"
    }, {
      "left" : "in.parentNode.removeChild(in);",
      "right" : "in.parentNode.removeChild(in);",
      "info" : "ExpressionStatement[7969-7999]:ExpressionStatement[7969-7999]"
    }, {
      "left" : "Integer index = out.siblingIndex();",
      "right" : "Integer index = out.siblingIndex();",
      "info" : "VariableDeclarationStatement[8017-8052]:VariableDeclarationStatement[8017-8052]"
    }, {
      "left" : "childNodes.set(index, in);",
      "right" : "childNodes.set(index, in);",
      "info" : "ExpressionStatement[8061-8087]:ExpressionStatement[8061-8087]"
    }, {
      "left" : "in.parentNode = this;",
      "right" : "in.parentNode = this;",
      "info" : "ExpressionStatement[8096-8117]:ExpressionStatement[8096-8117]"
    }, {
      "left" : "in.setSiblingIndex(index);",
      "right" : "in.setSiblingIndex(index);",
      "info" : "ExpressionStatement[8126-8152]:ExpressionStatement[8126-8152]"
    }, {
      "left" : "out.parentNode = null;",
      "right" : "out.parentNode = null;",
      "info" : "ExpressionStatement[8161-8183]:ExpressionStatement[8161-8183]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8195-8204]:Modifier[8195-8204]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8205-8209]:PrimitiveType[8205-8209]"
    }, {
      "left" : "removeChild",
      "right" : "removeChild",
      "info" : "SimpleName[8210-8221]:SimpleName[8210-8221]"
    }, {
      "left" : "Node out",
      "right" : "Node out",
      "info" : "SingleVariableDeclaration[8222-8230]:SingleVariableDeclaration[8222-8230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8232-8420]:Block[8232-8420]"
    }, {
      "left" : "Validate.isTrue(out.parentNode == this);",
      "right" : "Validate.isTrue(out.parentNode == this);",
      "info" : "ExpressionStatement[8242-8282]:ExpressionStatement[8242-8282]"
    }, {
      "left" : "int index = out.siblingIndex();",
      "right" : "int index = out.siblingIndex();",
      "info" : "VariableDeclarationStatement[8291-8322]:VariableDeclarationStatement[8291-8322]"
    }, {
      "left" : "childNodes.remove(index);",
      "right" : "childNodes.remove(index);",
      "info" : "ExpressionStatement[8331-8356]:ExpressionStatement[8331-8356]"
    }, {
      "left" : "reindexChildren();",
      "right" : "reindexChildren();",
      "info" : "ExpressionStatement[8365-8383]:ExpressionStatement[8365-8383]"
    }, {
      "left" : "out.parentNode = null;",
      "right" : "out.parentNode = null;",
      "info" : "ExpressionStatement[8392-8414]:ExpressionStatement[8392-8414]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8426-8435]:Modifier[8426-8435]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8436-8440]:PrimitiveType[8436-8440]"
    }, {
      "left" : "addChildren",
      "right" : "addChildren",
      "info" : "SimpleName[8441-8452]:SimpleName[8441-8452]"
    }, {
      "left" : "Node... children",
      "right" : "Node... children",
      "info" : "SingleVariableDeclaration[8453-8469]:SingleVariableDeclaration[8453-8469]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8471-8746]:Block[8471-8746]"
    }, {
      "left" : "for (Node child: children)",
      "right" : "for (Node child: children)",
      "info" : "EnhancedForStatement[8577-8740]:EnhancedForStatement[8577-8740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8604-8740]:Block[8604-8740]"
    }, {
      "left" : "reparentChild(child);",
      "right" : "reparentChild(child);",
      "info" : "ExpressionStatement[8618-8639]:ExpressionStatement[8618-8639]"
    }, {
      "left" : "childNodes.add(child);",
      "right" : "childNodes.add(child);",
      "info" : "ExpressionStatement[8652-8674]:ExpressionStatement[8652-8674]"
    }, {
      "left" : "child.setSiblingIndex(childNodes.size()-1);",
      "right" : "child.setSiblingIndex(childNodes.size()-1);",
      "info" : "ExpressionStatement[8687-8730]:ExpressionStatement[8687-8730]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8752-8761]:Modifier[8752-8761]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8762-8766]:PrimitiveType[8762-8766]"
    }, {
      "left" : "addChildren",
      "right" : "addChildren",
      "info" : "SimpleName[8767-8778]:SimpleName[8767-8778]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[8779-8788]:SingleVariableDeclaration[8779-8788]"
    }, {
      "left" : "Node... children",
      "right" : "Node... children",
      "info" : "SingleVariableDeclaration[8790-8806]:SingleVariableDeclaration[8790-8806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8808-9057]:Block[8808-9057]"
    }, {
      "left" : "Validate.noNullElements(children);",
      "right" : "Validate.noNullElements(children);",
      "info" : "ExpressionStatement[8818-8852]:ExpressionStatement[8818-8852]"
    }, {
      "left" : "for (int i = children.length - 1; i >= 0; i--)",
      "right" : "for (int i = children.length - 1; i >= 0; i--)",
      "info" : "ForStatement[8861-9024]:ForStatement[8861-9024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8908-9024]:Block[8908-9024]"
    }, {
      "left" : "Node in = children[i];",
      "right" : "Node in = children[i];",
      "info" : "VariableDeclarationStatement[8922-8944]:VariableDeclarationStatement[8922-8944]"
    }, {
      "left" : "reparentChild(in);",
      "right" : "reparentChild(in);",
      "info" : "ExpressionStatement[8957-8975]:ExpressionStatement[8957-8975]"
    }, {
      "left" : "childNodes.add(index, in);",
      "right" : "childNodes.add(index, in);",
      "info" : "ExpressionStatement[8988-9014]:ExpressionStatement[8988-9014]"
    }, {
      "left" : "reindexChildren();",
      "right" : "reindexChildren();",
      "info" : "ExpressionStatement[9033-9051]:ExpressionStatement[9033-9051]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[9063-9070]:Modifier[9063-9070]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9071-9075]:PrimitiveType[9071-9075]"
    }, {
      "left" : "reparentChild",
      "right" : "reparentChild",
      "info" : "SimpleName[9076-9089]:SimpleName[9076-9089]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[9090-9100]:SingleVariableDeclaration[9090-9100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9102-9231]:Block[9102-9231]"
    }, {
      "left" : "if (child.parentNode != null)",
      "right" : "if (child.parentNode != null)",
      "info" : "IfStatement[9112-9190]:IfStatement[9112-9190]"
    }, {
      "left" : "child.parentNode.removeChild(child);",
      "right" : "child.parentNode.removeChild(child);",
      "info" : "ExpressionStatement[9154-9190]:ExpressionStatement[9154-9190]"
    }, {
      "left" : "child.setParentNode(this);",
      "right" : "child.setParentNode(this);",
      "info" : "ExpressionStatement[9199-9225]:ExpressionStatement[9199-9225]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[9241-9248]:Modifier[9241-9248]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9249-9253]:PrimitiveType[9249-9253]"
    }, {
      "left" : "reindexChildren",
      "right" : "reindexChildren",
      "info" : "SimpleName[9254-9269]:SimpleName[9254-9269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9272-9393]:Block[9272-9393]"
    }, {
      "left" : "for (int i = 0; i < childNodes.size(); i++)",
      "right" : "for (int i = 0; i < childNodes.size(); i++)",
      "info" : "ForStatement[9282-9387]:ForStatement[9282-9387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9326-9387]:Block[9326-9387]"
    }, {
      "left" : "childNodes.get(i).setSiblingIndex(i);",
      "right" : "childNodes.get(i).setSiblingIndex(i);",
      "info" : "ExpressionStatement[9340-9377]:ExpressionStatement[9340-9377]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9571-9577]:Modifier[9571-9577]"
    }, {
      "left" : "List<Node>",
      "right" : "List<Node>",
      "info" : "ParameterizedType[9578-9588]:ParameterizedType[9578-9588]"
    }, {
      "left" : "siblingNodes",
      "right" : "siblingNodes",
      "info" : "SimpleName[9589-9601]:SimpleName[9589-9601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9604-9719]:Block[9604-9719]"
    }, {
      "left" : "return parent().childNodes();",
      "right" : "return parent().childNodes();",
      "info" : "ReturnStatement[9614-9643]:ReturnStatement[9614-9643]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9839-9845]:Modifier[9839-9845]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[9846-9850]:SimpleType[9846-9850]"
    }, {
      "left" : "nextSibling",
      "right" : "nextSibling",
      "info" : "SimpleName[9851-9862]:SimpleName[9851-9862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9865-10191]:Block[9865-10191]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[9875-9923]:IfStatement[9875-9923]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9911-9923]:ReturnStatement[9911-9923]"
    }, {
      "left" : "List<Node> siblings = parentNode.childNodes;",
      "right" : "List<Node> siblings = parentNode.childNodes;",
      "info" : "VariableDeclarationStatement[9949-9993]:VariableDeclarationStatement[9949-9993]"
    }, {
      "left" : "Integer index = siblingIndex();",
      "right" : "Integer index = siblingIndex();",
      "info" : "VariableDeclarationStatement[10002-10033]:VariableDeclarationStatement[10002-10033]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[10042-10066]:ExpressionStatement[10042-10066]"
    }, {
      "left" : "if (siblings.size() > index+1)",
      "right" : "if (siblings.size() > index+1)",
      "info" : "IfStatement[10075-10185]:IfStatement[10075-10185]"
    }, {
      "left" : "return siblings.get(index+1);",
      "right" : "return siblings.get(index+1);",
      "info" : "ReturnStatement[10118-10147]:ReturnStatement[10118-10147]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10173-10185]:ReturnStatement[10173-10185]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10324-10330]:Modifier[10324-10330]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[10331-10335]:SimpleType[10331-10335]"
    }, {
      "left" : "previousSibling",
      "right" : "previousSibling",
      "info" : "SimpleName[10336-10351]:SimpleName[10336-10351]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10354-10590]:Block[10354-10590]"
    }, {
      "left" : "List<Node> siblings = parentNode.childNodes;",
      "right" : "List<Node> siblings = parentNode.childNodes;",
      "info" : "VariableDeclarationStatement[10364-10408]:VariableDeclarationStatement[10364-10408]"
    }, {
      "left" : "Integer index = siblingIndex();",
      "right" : "Integer index = siblingIndex();",
      "info" : "VariableDeclarationStatement[10417-10448]:VariableDeclarationStatement[10417-10448]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[10457-10481]:ExpressionStatement[10457-10481]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[10490-10584]:IfStatement[10490-10584]"
    }, {
      "left" : "return siblings.get(index-1);",
      "right" : "return siblings.get(index-1);",
      "info" : "ReturnStatement[10517-10546]:ReturnStatement[10517-10546]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10572-10584]:ReturnStatement[10572-10584]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10838-10844]:Modifier[10838-10844]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[10845-10852]:SimpleType[10845-10852]"
    }, {
      "left" : "siblingIndex",
      "right" : "siblingIndex",
      "info" : "SimpleName[10853-10865]:SimpleName[10853-10865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10868-10904]:Block[10868-10904]"
    }, {
      "left" : "return siblingIndex;",
      "right" : "return siblingIndex;",
      "info" : "ReturnStatement[10878-10898]:ReturnStatement[10878-10898]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[10914-10923]:Modifier[10914-10923]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10924-10928]:PrimitiveType[10924-10928]"
    }, {
      "left" : "setSiblingIndex",
      "right" : "setSiblingIndex",
      "info" : "SimpleName[10929-10944]:SimpleName[10929-10944]"
    }, {
      "left" : "int siblingIndex",
      "right" : "int siblingIndex",
      "info" : "SingleVariableDeclaration[10945-10961]:SingleVariableDeclaration[10945-10961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10963-11012]:Block[10963-11012]"
    }, {
      "left" : "this.siblingIndex = siblingIndex;",
      "right" : "this.siblingIndex = siblingIndex;",
      "info" : "ExpressionStatement[10973-11006]:ExpressionStatement[10973-11006]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11090-11096]:Modifier[11090-11096]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11097-11103]:SimpleType[11097-11103]"
    }, {
      "left" : "outerHtml",
      "right" : "outerHtml",
      "info" : "SimpleName[11104-11113]:SimpleName[11104-11113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11116-11240]:Block[11116-11240]"
    }, {
      "left" : "StringBuilder accum = new StringBuilder(32*1024);",
      "right" : "StringBuilder accum = new StringBuilder(32*1024);",
      "info" : "VariableDeclarationStatement[11126-11175]:VariableDeclarationStatement[11126-11175]"
    }, {
      "left" : "outerHtml(accum);",
      "right" : "outerHtml(accum);",
      "info" : "ExpressionStatement[11184-11201]:ExpressionStatement[11184-11201]"
    }, {
      "left" : "return accum.toString();",
      "right" : "return accum.toString();",
      "info" : "ReturnStatement[11210-11234]:ReturnStatement[11210-11234]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[11271-11290]:SingleVariableDeclaration[11271-11290]"
    }, {
      "left" : "NodeTraversor",
      "right" : "NodeTraversor",
      "info" : "SimpleType[11306-11319]:SimpleType[11306-11319]"
    }, {
      "left" : "OuterHtmlVisitor",
      "right" : "OuterHtmlVisitor",
      "info" : "SimpleType[11324-11340]:SimpleType[11324-11340]"
    }, {
      "left" : "ownerDocument().outputSettings()",
      "right" : "ownerDocument().outputSettings()",
      "info" : "MethodInvocation[11348-11380]:MethodInvocation[11578-11610]"
    }, {
      "left" : "this",
      "right" : "this",
      "info" : "METHOD_INVOCATION_ARGUMENTS[11392-11396]:METHOD_INVOCATION_ARGUMENTS[11379-11383]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[11600-11608]:Modifier[11764-11772]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11609-11613]:PrimitiveType[11773-11777]"
    }, {
      "left" : "outerHtmlHead",
      "right" : "outerHtmlHead",
      "info" : "SimpleName[11614-11627]:SimpleName[11778-11791]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[11628-11647]:SingleVariableDeclaration[11792-11811]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[11649-11658]:SingleVariableDeclaration[11813-11822]"
    }, {
      "left" : "Document.OutputSettings out",
      "right" : "Document.OutputSettings out",
      "info" : "SingleVariableDeclaration[11660-11687]:SingleVariableDeclaration[11824-11851]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[11695-11703]:Modifier[11859-11867]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11704-11708]:PrimitiveType[11868-11872]"
    }, {
      "left" : "outerHtmlTail",
      "right" : "outerHtmlTail",
      "info" : "SimpleName[11709-11722]:SimpleName[11873-11886]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[11723-11742]:SingleVariableDeclaration[11887-11906]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[11744-11753]:SingleVariableDeclaration[11908-11917]"
    }, {
      "left" : "Document.OutputSettings out",
      "right" : "Document.OutputSettings out",
      "info" : "SingleVariableDeclaration[11755-11782]:SingleVariableDeclaration[11919-11946]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11790-11796]:Modifier[11954-11960]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11797-11803]:SimpleType[11961-11967]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[11804-11812]:SimpleName[11968-11976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11815-11850]:Block[11979-12014]"
    }, {
      "left" : "return outerHtml();",
      "right" : "return outerHtml();",
      "info" : "ReturnStatement[11825-11844]:ReturnStatement[11989-12008]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11856-11865]:Modifier[12020-12029]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11866-11870]:PrimitiveType[12030-12034]"
    }, {
      "left" : "indent",
      "right" : "indent",
      "info" : "SimpleName[11871-11877]:SimpleName[12035-12041]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[11878-11897]:SingleVariableDeclaration[12042-12061]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[11899-11908]:SingleVariableDeclaration[12063-12072]"
    }, {
      "left" : "Document.OutputSettings out",
      "right" : "Document.OutputSettings out",
      "info" : "SingleVariableDeclaration[11910-11937]:SingleVariableDeclaration[12074-12101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11939-12029]:Block[12103-12193]"
    }, {
      "left" : "accum.append(\"\\n\").append(StringUtil.padding(depth * out.indentAmount()));",
      "right" : "accum.append(\"\\n\").append(StringUtil.padding(depth * out.indentAmount()));",
      "info" : "ExpressionStatement[11949-12023]:ExpressionStatement[12113-12187]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12035-12044]:MarkerAnnotation[12199-12208]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12049-12055]:Modifier[12213-12219]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[12056-12063]:PrimitiveType[12220-12227]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[12064-12070]:SimpleName[12228-12234]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[12071-12079]:SingleVariableDeclaration[12235-12243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12081-12241]:Block[12245-12405]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[12091-12118]:IfStatement[12255-12282]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[12106-12118]:ReturnStatement[12270-12282]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[12222-12235]:ReturnStatement[12386-12399]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12247-12256]:MarkerAnnotation[12411-12420]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12261-12267]:Modifier[12425-12431]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[12268-12271]:PrimitiveType[12432-12435]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[12272-12280]:SimpleName[12436-12444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12283-12538]:Block[12447-12702]"
    }, {
      "left" : "int result = parentNode != null ? parentNode.hashCode() : 0;",
      "right" : "int result = parentNode != null ? parentNode.hashCode() : 0;",
      "info" : "VariableDeclarationStatement[12293-12353]:VariableDeclarationStatement[12457-12517]"
    }, {
      "left" : "result = 31 * result + (attributes != null ? attributes.hashCode() : 0);",
      "right" : "result = 31 * result + (attributes != null ? attributes.hashCode() : 0);",
      "info" : "ExpressionStatement[12437-12509]:ExpressionStatement[12601-12673]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[12518-12532]:ReturnStatement[12682-12696]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[12544-12551]:Modifier[12708-12715]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12552-12558]:Modifier[12716-12722]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[12559-12564]:TYPE_DECLARATION_KIND[12723-12728]"
    }, {
      "left" : "OuterHtmlVisitor",
      "right" : "OuterHtmlVisitor",
      "info" : "SimpleName[12565-12581]:SimpleName[12729-12745]"
    }, {
      "left" : "NodeVisitor",
      "right" : "NodeVisitor",
      "info" : "SimpleType[12593-12604]:SimpleType[12757-12768]"
    }, {
      "left" : "OuterHtmlVisitor",
      "right" : "OuterHtmlVisitor",
      "info" : "SimpleName[12698-12714]:SimpleName[12862-12878]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[12715-12734]:SingleVariableDeclaration[12879-12898]"
    }, {
      "left" : "Document.OutputSettings out",
      "right" : "Document.OutputSettings out",
      "info" : "SingleVariableDeclaration[12736-12763]:SingleVariableDeclaration[12900-12927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12765-12836]:Block[12929-13000]"
    }, {
      "left" : "this.accum = accum;",
      "right" : "this.accum = accum;",
      "info" : "ExpressionStatement[12779-12798]:ExpressionStatement[12943-12962]"
    }, {
      "left" : "this.out = out;",
      "right" : "this.out = out;",
      "info" : "ExpressionStatement[12811-12826]:ExpressionStatement[12975-12990]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12846-12852]:Modifier[13010-13016]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12853-12857]:PrimitiveType[13017-13021]"
    }, {
      "left" : "head",
      "right" : "head",
      "info" : "SimpleName[12858-12862]:SimpleName[13022-13026]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[12863-12872]:SingleVariableDeclaration[13027-13036]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[12874-12883]:SingleVariableDeclaration[13038-13047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12885-12947]:Block[13049-13111]"
    }, {
      "left" : "node.outerHtmlHead(accum, depth, out);",
      "right" : "node.outerHtmlHead(accum, depth, out);",
      "info" : "ExpressionStatement[12899-12937]:ExpressionStatement[13063-13101]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12957-12963]:Modifier[13121-13127]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12964-12968]:PrimitiveType[13128-13132]"
    }, {
      "left" : "tail",
      "right" : "tail",
      "info" : "SimpleName[12969-12973]:SimpleName[13133-13137]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[12974-12983]:SingleVariableDeclaration[13138-13147]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[12985-12994]:SingleVariableDeclaration[13149-13158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12996-13133]:Block[13160-13297]"
    }, {
      "left" : "if (!node.nodeName().equals(\"#text\"))",
      "right" : "if (!node.nodeName().equals(\"#text\"))",
      "info" : "IfStatement[13010-13123]:IfStatement[13174-13287]"
    }, {
      "left" : "node.outerHtmlTail(accum, depth, out);",
      "right" : "node.outerHtmlTail(accum, depth, out);",
      "info" : "ExpressionStatement[13085-13123]:ExpressionStatement[13249-13287]"
    } ]
  },
  "interFileMappings" : { }
}