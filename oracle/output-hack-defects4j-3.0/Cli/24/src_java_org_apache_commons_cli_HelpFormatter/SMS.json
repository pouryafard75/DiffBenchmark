{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "HelpFormatter",
      "right" : "HelpFormatter",
      "info" : "TypeDeclaration[1032-30146]:TypeDeclaration[1032-29997]"
    }, {
      "left" : "public static final int DEFAULT_WIDTH = 74;",
      "right" : "public static final int DEFAULT_WIDTH = 74;",
      "info" : "FieldDeclaration[1337-1429]:FieldDeclaration[1337-1429]"
    }, {
      "left" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "right" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "info" : "FieldDeclaration[1435-1532]:FieldDeclaration[1435-1532]"
    }, {
      "left" : "public static final int DEFAULT_DESC_PAD = 3;",
      "right" : "public static final int DEFAULT_DESC_PAD = 3;",
      "info" : "FieldDeclaration[1538-1689]:FieldDeclaration[1538-1689]"
    }, {
      "left" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "right" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "info" : "FieldDeclaration[1695-1828]:FieldDeclaration[1695-1828]"
    }, {
      "left" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "right" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "info" : "FieldDeclaration[1834-1926]:FieldDeclaration[1834-1926]"
    }, {
      "left" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "right" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "info" : "FieldDeclaration[1932-2032]:FieldDeclaration[1932-2032]"
    }, {
      "left" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "right" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "info" : "FieldDeclaration[2038-2130]:FieldDeclaration[2038-2130]"
    }, {
      "left" : "public int defaultWidth = DEFAULT_WIDTH;",
      "right" : "public int defaultWidth = DEFAULT_WIDTH;",
      "info" : "FieldDeclaration[2218-2430]:FieldDeclaration[2218-2430]"
    }, {
      "left" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "right" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "info" : "FieldDeclaration[2436-2672]:FieldDeclaration[2436-2672]"
    }, {
      "left" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "right" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "info" : "FieldDeclaration[2678-2954]:FieldDeclaration[2678-2954]"
    }, {
      "left" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "right" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "info" : "FieldDeclaration[2960-3228]:FieldDeclaration[2960-3228]"
    }, {
      "left" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "right" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "info" : "FieldDeclaration[3234-3466]:FieldDeclaration[3234-3466]"
    }, {
      "left" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "right" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "info" : "FieldDeclaration[3472-3690]:FieldDeclaration[3472-3690]"
    }, {
      "left" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "right" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "info" : "FieldDeclaration[3696-3927]:FieldDeclaration[3696-3927]"
    }, {
      "left" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "right" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "info" : "FieldDeclaration[3933-4150]:FieldDeclaration[3933-4150]"
    }, {
      "left" : "protected Comparator optionComparator = new OptionComparator();",
      "right" : "protected Comparator optionComparator = new OptionComparator();",
      "info" : "FieldDeclaration[4156-4387]:FieldDeclaration[4156-4387]"
    }, {
      "left" : "public void setWidth(int width)",
      "right" : "public void setWidth(int width)",
      "info" : "MethodDeclaration[4393-4564]:MethodDeclaration[4393-4564]"
    }, {
      "left" : "public int getWidth()",
      "right" : "public int getWidth()",
      "info" : "MethodDeclaration[4570-4710]:MethodDeclaration[4570-4710]"
    }, {
      "left" : "public void setLeftPadding(int padding)",
      "right" : "public void setLeftPadding(int padding)",
      "info" : "MethodDeclaration[4716-4913]:MethodDeclaration[4716-4913]"
    }, {
      "left" : "public int getLeftPadding()",
      "right" : "public int getLeftPadding()",
      "info" : "MethodDeclaration[4919-5079]:MethodDeclaration[4919-5079]"
    }, {
      "left" : "public void setDescPadding(int padding)",
      "right" : "public void setDescPadding(int padding)",
      "info" : "MethodDeclaration[5085-5282]:MethodDeclaration[5085-5282]"
    }, {
      "left" : "public int getDescPadding()",
      "right" : "public int getDescPadding()",
      "info" : "MethodDeclaration[5288-5448]:MethodDeclaration[5288-5448]"
    }, {
      "left" : "public void setSyntaxPrefix(String prefix)",
      "right" : "public void setSyntaxPrefix(String prefix)",
      "info" : "MethodDeclaration[5454-5659]:MethodDeclaration[5454-5659]"
    }, {
      "left" : "public String getSyntaxPrefix()",
      "right" : "public String getSyntaxPrefix()",
      "info" : "MethodDeclaration[5665-5836]:MethodDeclaration[5665-5836]"
    }, {
      "left" : "public void setNewLine(String newline)",
      "right" : "public void setNewLine(String newline)",
      "info" : "MethodDeclaration[5842-6030]:MethodDeclaration[5842-6030]"
    }, {
      "left" : "public String getNewLine()",
      "right" : "public String getNewLine()",
      "info" : "MethodDeclaration[6036-6187]:MethodDeclaration[6036-6187]"
    }, {
      "left" : "public void setOptPrefix(String prefix)",
      "right" : "public void setOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6193-6386]:MethodDeclaration[6193-6386]"
    }, {
      "left" : "public String getOptPrefix()",
      "right" : "public String getOptPrefix()",
      "info" : "MethodDeclaration[6392-6551]:MethodDeclaration[6392-6551]"
    }, {
      "left" : "public void setLongOptPrefix(String prefix)",
      "right" : "public void setLongOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6557-6766]:MethodDeclaration[6557-6766]"
    }, {
      "left" : "public String getLongOptPrefix()",
      "right" : "public String getLongOptPrefix()",
      "info" : "MethodDeclaration[6772-6947]:MethodDeclaration[6772-6947]"
    }, {
      "left" : "public void setArgName(String name)",
      "right" : "public void setArgName(String name)",
      "info" : "MethodDeclaration[6953-7132]:MethodDeclaration[6953-7132]"
    }, {
      "left" : "public String getArgName()",
      "right" : "public String getArgName()",
      "info" : "MethodDeclaration[7138-7289]:MethodDeclaration[7138-7289]"
    }, {
      "left" : "public Comparator getOptionComparator()",
      "right" : "public Comparator getOptionComparator()",
      "info" : "MethodDeclaration[7295-7547]:MethodDeclaration[7295-7547]"
    }, {
      "left" : "public void setOptionComparator(Comparator comparator)",
      "right" : "public void setOptionComparator(Comparator comparator)",
      "info" : "MethodDeclaration[7553-7994]:MethodDeclaration[7553-7994]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options)",
      "info" : "MethodDeclaration[8000-8427]:MethodDeclaration[8000-8427]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "info" : "MethodDeclaration[8433-8975]:MethodDeclaration[8433-8975]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[8981-9565]:MethodDeclaration[8981-9565]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[9571-10284]:MethodDeclaration[9571-10284]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[10290-10966]:MethodDeclaration[10290-10966]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[10972-11900]:MethodDeclaration[10972-11900]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "info" : "MethodDeclaration[11906-12981]:MethodDeclaration[11906-12981]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[12988-14747]:MethodDeclaration[12988-14747]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "right" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "info" : "MethodDeclaration[14753-16849]:MethodDeclaration[14753-16849]"
    }, {
      "left" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "right" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "info" : "MethodDeclaration[16855-17954]:MethodDeclaration[16855-17954]"
    }, {
      "left" : "private static void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "right" : "private static void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "info" : "MethodDeclaration[17960-18898]:MethodDeclaration[17960-18898]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "right" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "info" : "MethodDeclaration[18904-19445]:MethodDeclaration[18904-19445]"
    }, {
      "left" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "right" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "info" : "MethodDeclaration[19451-20270]:MethodDeclaration[19451-20270]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "info" : "MethodDeclaration[20276-20659]:MethodDeclaration[20276-20659]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[20665-21262]:MethodDeclaration[20665-21262]"
    }, {
      "left" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "right" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "info" : "MethodDeclaration[21350-24421]:MethodDeclaration[21350-24421]"
    }, {
      "left" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "right" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[24427-26196]:MethodDeclaration[24427-26047]"
    }, {
      "left" : "protected int findWrapPos(String text, int width, int startPos)",
      "right" : "protected int findWrapPos(String text, int width, int startPos)",
      "info" : "MethodDeclaration[26202-28020]:MethodDeclaration[26053-27871]"
    }, {
      "left" : "protected String createPadding(int len)",
      "right" : "protected String createPadding(int len)",
      "info" : "MethodDeclaration[28026-28438]:MethodDeclaration[27877-28289]"
    }, {
      "left" : "protected String rtrim(String s)",
      "right" : "protected String rtrim(String s)",
      "info" : "MethodDeclaration[28444-28972]:MethodDeclaration[28295-28823]"
    }, {
      "left" : "OptionComparator",
      "right" : "OptionComparator",
      "info" : "TypeDeclaration[29218-30144]:TypeDeclaration[29069-29995]"
    }, {
      "left" : "public int compare(Object o1, Object o2)",
      "right" : "public int compare(Object o1, Object o2)",
      "info" : "MethodDeclaration[29406-30138]:MethodDeclaration[29257-29989]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1222-1228]:Modifier[1222-1228]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1229-1234]:TYPE_DECLARATION_KIND[1229-1234]"
    }, {
      "left" : "HelpFormatter",
      "right" : "HelpFormatter",
      "info" : "SimpleName[1235-1248]:SimpleName[1235-1248]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4486-4492]:Modifier[4486-4492]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4493-4497]:PrimitiveType[4493-4497]"
    }, {
      "left" : "setWidth",
      "right" : "setWidth",
      "info" : "SimpleName[4498-4506]:SimpleName[4498-4506]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[4507-4516]:SingleVariableDeclaration[4507-4516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4522-4564]:Block[4522-4564]"
    }, {
      "left" : "this.defaultWidth = width;",
      "right" : "this.defaultWidth = width;",
      "info" : "ExpressionStatement[4532-4558]:ExpressionStatement[4532-4558]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4648-4654]:Modifier[4648-4654]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[4655-4658]:PrimitiveType[4655-4658]"
    }, {
      "left" : "getWidth",
      "right" : "getWidth",
      "info" : "SimpleName[4659-4667]:SimpleName[4659-4667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4674-4710]:Block[4674-4710]"
    }, {
      "left" : "return defaultWidth;",
      "right" : "return defaultWidth;",
      "info" : "ReturnStatement[4684-4704]:ReturnStatement[4684-4704]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4823-4829]:Modifier[4823-4829]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4830-4834]:PrimitiveType[4830-4834]"
    }, {
      "left" : "setLeftPadding",
      "right" : "setLeftPadding",
      "info" : "SimpleName[4835-4849]:SimpleName[4835-4849]"
    }, {
      "left" : "int padding",
      "right" : "int padding",
      "info" : "SingleVariableDeclaration[4850-4861]:SingleVariableDeclaration[4850-4861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4867-4913]:Block[4867-4913]"
    }, {
      "left" : "this.defaultLeftPad = padding;",
      "right" : "this.defaultLeftPad = padding;",
      "info" : "ExpressionStatement[4877-4907]:ExpressionStatement[4877-4907]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5009-5015]:Modifier[5009-5015]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5016-5019]:PrimitiveType[5016-5019]"
    }, {
      "left" : "getLeftPadding",
      "right" : "getLeftPadding",
      "info" : "SimpleName[5020-5034]:SimpleName[5020-5034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5041-5079]:Block[5041-5079]"
    }, {
      "left" : "return defaultLeftPad;",
      "right" : "return defaultLeftPad;",
      "info" : "ReturnStatement[5051-5073]:ReturnStatement[5051-5073]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5192-5198]:Modifier[5192-5198]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5199-5203]:PrimitiveType[5199-5203]"
    }, {
      "left" : "setDescPadding",
      "right" : "setDescPadding",
      "info" : "SimpleName[5204-5218]:SimpleName[5204-5218]"
    }, {
      "left" : "int padding",
      "right" : "int padding",
      "info" : "SingleVariableDeclaration[5219-5230]:SingleVariableDeclaration[5219-5230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5236-5282]:Block[5236-5282]"
    }, {
      "left" : "this.defaultDescPad = padding;",
      "right" : "this.defaultDescPad = padding;",
      "info" : "ExpressionStatement[5246-5276]:ExpressionStatement[5246-5276]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5378-5384]:Modifier[5378-5384]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5385-5388]:PrimitiveType[5385-5388]"
    }, {
      "left" : "getDescPadding",
      "right" : "getDescPadding",
      "info" : "SimpleName[5389-5403]:SimpleName[5389-5403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5410-5448]:Block[5410-5448]"
    }, {
      "left" : "return defaultDescPad;",
      "right" : "return defaultDescPad;",
      "info" : "ReturnStatement[5420-5442]:ReturnStatement[5420-5442]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5562-5568]:Modifier[5562-5568]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5569-5573]:PrimitiveType[5569-5573]"
    }, {
      "left" : "setSyntaxPrefix",
      "right" : "setSyntaxPrefix",
      "info" : "SimpleName[5574-5589]:SimpleName[5574-5589]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[5590-5603]:SingleVariableDeclaration[5590-5603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5609-5659]:Block[5609-5659]"
    }, {
      "left" : "this.defaultSyntaxPrefix = prefix;",
      "right" : "this.defaultSyntaxPrefix = prefix;",
      "info" : "ExpressionStatement[5619-5653]:ExpressionStatement[5619-5653]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5757-5763]:Modifier[5757-5763]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5764-5770]:SimpleType[5764-5770]"
    }, {
      "left" : "getSyntaxPrefix",
      "right" : "getSyntaxPrefix",
      "info" : "SimpleName[5771-5786]:SimpleName[5771-5786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5793-5836]:Block[5793-5836]"
    }, {
      "left" : "return defaultSyntaxPrefix;",
      "right" : "return defaultSyntaxPrefix;",
      "info" : "ReturnStatement[5803-5830]:ReturnStatement[5803-5830]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5941-5947]:Modifier[5941-5947]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5948-5952]:PrimitiveType[5948-5952]"
    }, {
      "left" : "setNewLine",
      "right" : "setNewLine",
      "info" : "SimpleName[5953-5963]:SimpleName[5953-5963]"
    }, {
      "left" : "String newline",
      "right" : "String newline",
      "info" : "SingleVariableDeclaration[5964-5978]:SingleVariableDeclaration[5964-5978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5984-6030]:Block[5984-6030]"
    }, {
      "left" : "this.defaultNewLine = newline;",
      "right" : "this.defaultNewLine = newline;",
      "info" : "ExpressionStatement[5994-6024]:ExpressionStatement[5994-6024]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6118-6124]:Modifier[6118-6124]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6125-6131]:SimpleType[6125-6131]"
    }, {
      "left" : "getNewLine",
      "right" : "getNewLine",
      "info" : "SimpleName[6132-6142]:SimpleName[6132-6142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6149-6187]:Block[6149-6187]"
    }, {
      "left" : "return defaultNewLine;",
      "right" : "return defaultNewLine;",
      "info" : "ReturnStatement[6159-6181]:ReturnStatement[6159-6181]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6295-6301]:Modifier[6295-6301]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6302-6306]:PrimitiveType[6302-6306]"
    }, {
      "left" : "setOptPrefix",
      "right" : "setOptPrefix",
      "info" : "SimpleName[6307-6319]:SimpleName[6307-6319]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[6320-6333]:SingleVariableDeclaration[6320-6333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6339-6386]:Block[6339-6386]"
    }, {
      "left" : "this.defaultOptPrefix = prefix;",
      "right" : "this.defaultOptPrefix = prefix;",
      "info" : "ExpressionStatement[6349-6380]:ExpressionStatement[6349-6380]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6478-6484]:Modifier[6478-6484]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6485-6491]:SimpleType[6485-6491]"
    }, {
      "left" : "getOptPrefix",
      "right" : "getOptPrefix",
      "info" : "SimpleName[6492-6504]:SimpleName[6492-6504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6511-6551]:Block[6511-6551]"
    }, {
      "left" : "return defaultOptPrefix;",
      "right" : "return defaultOptPrefix;",
      "info" : "ReturnStatement[6521-6545]:ReturnStatement[6521-6545]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6667-6673]:Modifier[6667-6673]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6674-6678]:PrimitiveType[6674-6678]"
    }, {
      "left" : "setLongOptPrefix",
      "right" : "setLongOptPrefix",
      "info" : "SimpleName[6679-6695]:SimpleName[6679-6695]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[6696-6709]:SingleVariableDeclaration[6696-6709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6715-6766]:Block[6715-6766]"
    }, {
      "left" : "this.defaultLongOptPrefix = prefix;",
      "right" : "this.defaultLongOptPrefix = prefix;",
      "info" : "ExpressionStatement[6725-6760]:ExpressionStatement[6725-6760]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6866-6872]:Modifier[6866-6872]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6873-6879]:SimpleType[6873-6879]"
    }, {
      "left" : "getLongOptPrefix",
      "right" : "getLongOptPrefix",
      "info" : "SimpleName[6880-6896]:SimpleName[6880-6896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6903-6947]:Block[6903-6947]"
    }, {
      "left" : "return defaultLongOptPrefix;",
      "right" : "return defaultLongOptPrefix;",
      "info" : "ReturnStatement[6913-6941]:ReturnStatement[6913-6941]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7049-7055]:Modifier[7049-7055]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7056-7060]:PrimitiveType[7056-7060]"
    }, {
      "left" : "setArgName",
      "right" : "setArgName",
      "info" : "SimpleName[7061-7071]:SimpleName[7061-7071]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[7072-7083]:SingleVariableDeclaration[7072-7083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7089-7132]:Block[7089-7132]"
    }, {
      "left" : "this.defaultArgName = name;",
      "right" : "this.defaultArgName = name;",
      "info" : "ExpressionStatement[7099-7126]:ExpressionStatement[7099-7126]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7220-7226]:Modifier[7220-7226]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[7227-7233]:SimpleType[7227-7233]"
    }, {
      "left" : "getArgName",
      "right" : "getArgName",
      "info" : "SimpleName[7234-7244]:SimpleName[7234-7244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7251-7289]:Block[7251-7289]"
    }, {
      "left" : "return defaultArgName;",
      "right" : "return defaultArgName;",
      "info" : "ReturnStatement[7261-7283]:ReturnStatement[7261-7283]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7463-7469]:Modifier[7463-7469]"
    }, {
      "left" : "Comparator",
      "right" : "Comparator",
      "info" : "SimpleType[7470-7480]:SimpleType[7470-7480]"
    }, {
      "left" : "getOptionComparator",
      "right" : "getOptionComparator",
      "info" : "SimpleName[7481-7500]:SimpleName[7481-7500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7507-7547]:Block[7507-7547]"
    }, {
      "left" : "return optionComparator;",
      "right" : "return optionComparator;",
      "info" : "ReturnStatement[7517-7541]:ReturnStatement[7517-7541]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7735-7741]:Modifier[7735-7741]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7742-7746]:PrimitiveType[7742-7746]"
    }, {
      "left" : "setOptionComparator",
      "right" : "setOptionComparator",
      "info" : "SimpleName[7747-7766]:SimpleName[7747-7766]"
    }, {
      "left" : "Comparator comparator",
      "right" : "Comparator comparator",
      "info" : "SingleVariableDeclaration[7767-7788]:SingleVariableDeclaration[7767-7788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7794-7994]:Block[7794-7994]"
    }, {
      "left" : "if (comparator == null)",
      "right" : "if (comparator == null)",
      "info" : "IfStatement[7804-7988]:IfStatement[7804-7988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7836-7907]:Block[7836-7907]"
    }, {
      "left" : "this.optionComparator = new OptionComparator();",
      "right" : "this.optionComparator = new OptionComparator();",
      "info" : "ExpressionStatement[7850-7897]:ExpressionStatement[7850-7897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7929-7988]:Block[7929-7988]"
    }, {
      "left" : "this.optionComparator = comparator;",
      "right" : "this.optionComparator = comparator;",
      "info" : "ExpressionStatement[7943-7978]:ExpressionStatement[7943-7978]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8279-8285]:Modifier[8279-8285]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8286-8290]:PrimitiveType[8286-8290]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[8291-8300]:SimpleName[8291-8300]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[8301-8321]:SingleVariableDeclaration[8301-8321]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[8323-8338]:SingleVariableDeclaration[8323-8338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8344-8427]:Block[8344-8427]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "info" : "ExpressionStatement[8354-8421]:ExpressionStatement[8354-8421]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8804-8810]:Modifier[8804-8810]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8811-8815]:PrimitiveType[8811-8815]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[8816-8825]:SimpleName[8816-8825]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[8826-8846]:SingleVariableDeclaration[8826-8846]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[8848-8863]:SingleVariableDeclaration[8848-8863]"
    }, {
      "left" : "boolean autoUsage",
      "right" : "boolean autoUsage",
      "info" : "SingleVariableDeclaration[8865-8882]:SingleVariableDeclaration[8865-8882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8888-8975]:Block[8888-8975]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "info" : "ExpressionStatement[8898-8969]:ExpressionStatement[8898-8969]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9397-9403]:Modifier[9397-9403]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9404-9408]:PrimitiveType[9404-9408]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[9409-9418]:SimpleName[9409-9418]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[9419-9439]:SingleVariableDeclaration[9419-9439]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[9441-9454]:SingleVariableDeclaration[9441-9454]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[9456-9471]:SingleVariableDeclaration[9456-9471]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[9473-9486]:SingleVariableDeclaration[9473-9486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9492-9565]:Block[9492-9565]"
    }, {
      "left" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[9502-9559]:ExpressionStatement[9502-9559]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10079-10085]:Modifier[10079-10085]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10086-10090]:PrimitiveType[10086-10090]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[10091-10100]:SimpleName[10091-10100]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[10101-10121]:SingleVariableDeclaration[10101-10121]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[10123-10136]:SingleVariableDeclaration[10123-10136]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[10138-10153]:SingleVariableDeclaration[10138-10153]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[10155-10168]:SingleVariableDeclaration[10155-10168]"
    }, {
      "left" : "boolean autoUsage",
      "right" : "boolean autoUsage",
      "info" : "SingleVariableDeclaration[10170-10187]:SingleVariableDeclaration[10170-10187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10193-10284]:Block[10193-10284]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "info" : "ExpressionStatement[10203-10278]:ExpressionStatement[10203-10278]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10780-10786]:Modifier[10780-10786]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10787-10791]:PrimitiveType[10787-10791]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[10792-10801]:SimpleName[10792-10801]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[10802-10811]:SingleVariableDeclaration[10802-10811]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[10813-10833]:SingleVariableDeclaration[10813-10833]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[10835-10848]:SingleVariableDeclaration[10835-10848]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[10850-10865]:SingleVariableDeclaration[10850-10865]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[10867-10880]:SingleVariableDeclaration[10867-10880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10886-10966]:Block[10886-10966]"
    }, {
      "left" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[10896-10960]:ExpressionStatement[10896-10960]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11554-11560]:Modifier[11554-11560]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11561-11565]:PrimitiveType[11561-11565]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[11566-11575]:SimpleName[11566-11575]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[11576-11585]:SingleVariableDeclaration[11576-11585]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[11587-11607]:SingleVariableDeclaration[11587-11607]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[11609-11622]:SingleVariableDeclaration[11609-11622]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[11650-11665]:SingleVariableDeclaration[11650-11665]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[11667-11680]:SingleVariableDeclaration[11667-11680]"
    }, {
      "left" : "boolean autoUsage",
      "right" : "boolean autoUsage",
      "info" : "SingleVariableDeclaration[11682-11699]:SingleVariableDeclaration[11682-11699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11705-11900]:Block[11705-11900]"
    }, {
      "left" : "PrintWriter pw = new PrintWriter(System.out);",
      "right" : "PrintWriter pw = new PrintWriter(System.out);",
      "info" : "VariableDeclarationStatement[11715-11760]:VariableDeclarationStatement[11715-11760]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "info" : "ExpressionStatement[11770-11874]:ExpressionStatement[11770-11874]"
    }, {
      "left" : "pw.flush();",
      "right" : "pw.flush();",
      "info" : "ExpressionStatement[11883-11894]:ExpressionStatement[11883-11894]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12677-12683]:Modifier[12677-12683]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12684-12688]:PrimitiveType[12684-12688]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[12689-12698]:SimpleName[12689-12698]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[12699-12713]:SingleVariableDeclaration[12699-12713]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[12715-12724]:SingleVariableDeclaration[12715-12724]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[12726-12746]:SingleVariableDeclaration[12726-12746]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[12775-12788]:SingleVariableDeclaration[12775-12788]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[12790-12805]:SingleVariableDeclaration[12790-12805]"
    }, {
      "left" : "int leftPad",
      "right" : "int leftPad",
      "info" : "SingleVariableDeclaration[12807-12818]:SingleVariableDeclaration[12807-12818]"
    }, {
      "left" : "int descPad",
      "right" : "int descPad",
      "info" : "SingleVariableDeclaration[12847-12858]:SingleVariableDeclaration[12847-12858]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[12860-12873]:SingleVariableDeclaration[12860-12873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12879-12981]:Block[12879-12981]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "info" : "ExpressionStatement[12889-12975]:ExpressionStatement[12889-12975]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13850-13856]:Modifier[13850-13856]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13857-13861]:PrimitiveType[13857-13861]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[13862-13871]:SimpleName[13862-13871]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[13872-13886]:SingleVariableDeclaration[13872-13886]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[13888-13897]:SingleVariableDeclaration[13888-13897]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[13899-13919]:SingleVariableDeclaration[13899-13919]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[13947-13960]:SingleVariableDeclaration[13947-13960]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[13962-13977]:SingleVariableDeclaration[13962-13977]"
    }, {
      "left" : "int leftPad",
      "right" : "int leftPad",
      "info" : "SingleVariableDeclaration[13979-13990]:SingleVariableDeclaration[13979-13990]"
    }, {
      "left" : "int descPad",
      "right" : "int descPad",
      "info" : "SingleVariableDeclaration[14018-14029]:SingleVariableDeclaration[14018-14029]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[14031-14044]:SingleVariableDeclaration[14031-14044]"
    }, {
      "left" : "boolean autoUsage",
      "right" : "boolean autoUsage",
      "info" : "SingleVariableDeclaration[14046-14063]:SingleVariableDeclaration[14046-14063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14069-14747]:Block[14069-14747]"
    }, {
      "left" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "right" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "info" : "IfStatement[14079-14238]:IfStatement[14079-14238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14149-14238]:Block[14149-14238]"
    }, {
      "left" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "right" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "info" : "ThrowStatement[14163-14228]:ThrowStatement[14163-14228]"
    }, {
      "left" : "if (autoUsage)",
      "right" : "if (autoUsage)",
      "info" : "IfStatement[14248-14424]:IfStatement[14248-14424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14271-14341]:Block[14271-14341]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax, options);",
      "right" : "printUsage(pw, width, cmdLineSyntax, options);",
      "info" : "ExpressionStatement[14285-14331]:ExpressionStatement[14285-14331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14363-14424]:Block[14363-14424]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax);",
      "right" : "printUsage(pw, width, cmdLineSyntax);",
      "info" : "ExpressionStatement[14377-14414]:ExpressionStatement[14377-14414]"
    }, {
      "left" : "if ((header != null) && (header.trim().length() > 0))",
      "right" : "if ((header != null) && (header.trim().length() > 0))",
      "info" : "IfStatement[14434-14552]:IfStatement[14434-14552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14496-14552]:Block[14496-14552]"
    }, {
      "left" : "printWrapped(pw, width, header);",
      "right" : "printWrapped(pw, width, header);",
      "info" : "ExpressionStatement[14510-14542]:ExpressionStatement[14510-14542]"
    }, {
      "left" : "printOptions(pw, width, options, leftPad, descPad);",
      "right" : "printOptions(pw, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[14562-14613]:ExpressionStatement[14562-14613]"
    }, {
      "left" : "if ((footer != null) && (footer.trim().length() > 0))",
      "right" : "if ((footer != null) && (footer.trim().length() > 0))",
      "info" : "IfStatement[14623-14741]:IfStatement[14623-14741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14685-14741]:Block[14685-14741]"
    }, {
      "left" : "printWrapped(pw, width, footer);",
      "right" : "printWrapped(pw, width, footer);",
      "info" : "ExpressionStatement[14699-14731]:ExpressionStatement[14699-14731]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15069-15075]:Modifier[15069-15075]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15076-15080]:PrimitiveType[15076-15080]"
    }, {
      "left" : "printUsage",
      "right" : "printUsage",
      "info" : "SimpleName[15081-15091]:SimpleName[15081-15091]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[15092-15106]:SingleVariableDeclaration[15092-15106]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[15108-15117]:SingleVariableDeclaration[15108-15117]"
    }, {
      "left" : "String app",
      "right" : "String app",
      "info" : "SingleVariableDeclaration[15119-15129]:SingleVariableDeclaration[15119-15129]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[15131-15146]:SingleVariableDeclaration[15131-15146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15152-16849]:Block[15152-16849]"
    }, {
      "left" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "right" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "info" : "VariableDeclarationStatement[15202-15284]:VariableDeclarationStatement[15202-15284]"
    }, {
      "left" : "final Collection processedGroups = new ArrayList();",
      "right" : "final Collection processedGroups = new ArrayList();",
      "info" : "VariableDeclarationStatement[15347-15398]:VariableDeclarationStatement[15347-15398]"
    }, {
      "left" : "Option option;",
      "right" : "Option option;",
      "info" : "VariableDeclarationStatement[15433-15447]:VariableDeclarationStatement[15433-15447]"
    }, {
      "left" : "List optList = new ArrayList(options.getOptions());",
      "right" : "List optList = new ArrayList(options.getOptions());",
      "info" : "VariableDeclarationStatement[15457-15508]:VariableDeclarationStatement[15457-15508]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[15517-15566]:ExpressionStatement[15517-15566]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[15611-16728]:ForStatement[15611-16728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15671-16728]:Block[15671-16728]"
    }, {
      "left" : "option = (Option) i.next();",
      "right" : "option = (Option) i.next();",
      "info" : "ExpressionStatement[15720-15747]:ExpressionStatement[15720-15747]"
    }, {
      "left" : "OptionGroup group = options.getOptionGroup(option);",
      "right" : "OptionGroup group = options.getOptionGroup(option);",
      "info" : "VariableDeclarationStatement[15822-15873]:VariableDeclarationStatement[15822-15873]"
    }, {
      "left" : "if (group != null)",
      "right" : "if (group != null)",
      "info" : "IfStatement[15936-16626]:IfStatement[15936-16626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15967-16456]:Block[15967-16456]"
    }, {
      "left" : "if (!processedGroups.contains(group))",
      "right" : "if (!processedGroups.contains(group))",
      "info" : "IfStatement[16052-16330]:IfStatement[16052-16330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16106-16330]:Block[16106-16330]"
    }, {
      "left" : "processedGroups.add(group);",
      "right" : "processedGroups.add(group);",
      "info" : "ExpressionStatement[16187-16214]:ExpressionStatement[16187-16214]"
    }, {
      "left" : "appendOptionGroup(buff, group);",
      "right" : "appendOptionGroup(buff, group);",
      "info" : "ExpressionStatement[16281-16312]:ExpressionStatement[16281-16312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16546-16626]:Block[16546-16626]"
    }, {
      "left" : "appendOption(buff, option, option.isRequired());",
      "right" : "appendOption(buff, option, option.isRequired());",
      "info" : "ExpressionStatement[16564-16612]:ExpressionStatement[16564-16612]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[16640-16718]:IfStatement[16640-16718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16669-16718]:Block[16669-16718]"
    }, {
      "left" : "buff.append(\" \");",
      "right" : "buff.append(\" \");",
      "info" : "ExpressionStatement[16687-16704]:ExpressionStatement[16687-16704]"
    }, {
      "left" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "right" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "info" : "ExpressionStatement[16768-16843]:ExpressionStatement[16768-16843]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17222-17229]:Modifier[17222-17229]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17230-17234]:PrimitiveType[17230-17234]"
    }, {
      "left" : "appendOptionGroup",
      "right" : "appendOptionGroup",
      "info" : "SimpleName[17235-17252]:SimpleName[17235-17252]"
    }, {
      "left" : "final StringBuffer buff",
      "right" : "final StringBuffer buff",
      "info" : "SingleVariableDeclaration[17253-17276]:SingleVariableDeclaration[17253-17276]"
    }, {
      "left" : "final OptionGroup group",
      "right" : "final OptionGroup group",
      "info" : "SingleVariableDeclaration[17278-17301]:SingleVariableDeclaration[17278-17301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17307-17954]:Block[17307-17954]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[17317-17391]:IfStatement[17317-17391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17350-17391]:Block[17350-17391]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[17364-17381]:ExpressionStatement[17364-17381]"
    }, {
      "left" : "List optList = new ArrayList(group.getOptions());",
      "right" : "List optList = new ArrayList(group.getOptions());",
      "info" : "VariableDeclarationStatement[17401-17450]:VariableDeclarationStatement[17401-17450]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[17459-17508]:ExpressionStatement[17459-17508]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[17563-17864]:ForStatement[17563-17864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17623-17864]:Block[17623-17864]"
    }, {
      "left" : "appendOption(buff, (Option) i.next(), true);",
      "right" : "appendOption(buff, (Option) i.next(), true);",
      "info" : "ExpressionStatement[17716-17760]:ExpressionStatement[17716-17760]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[17774-17854]:IfStatement[17774-17854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17803-17854]:Block[17803-17854]"
    }, {
      "left" : "buff.append(\" | \");",
      "right" : "buff.append(\" | \");",
      "info" : "ExpressionStatement[17821-17840]:ExpressionStatement[17821-17840]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[17874-17948]:IfStatement[17874-17948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17907-17948]:Block[17907-17948]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[17921-17938]:ExpressionStatement[17921-17938]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18202-18209]:Modifier[18202-18209]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18210-18216]:Modifier[18210-18216]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18217-18221]:PrimitiveType[18217-18221]"
    }, {
      "left" : "appendOption",
      "right" : "appendOption",
      "info" : "SimpleName[18222-18234]:SimpleName[18222-18234]"
    }, {
      "left" : "final StringBuffer buff",
      "right" : "final StringBuffer buff",
      "info" : "SingleVariableDeclaration[18235-18258]:SingleVariableDeclaration[18235-18258]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[18260-18279]:SingleVariableDeclaration[18260-18279]"
    }, {
      "left" : "final boolean required",
      "right" : "final boolean required",
      "info" : "SingleVariableDeclaration[18281-18303]:SingleVariableDeclaration[18281-18303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18309-18898]:Block[18309-18898]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[18319-18383]:IfStatement[18319-18383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18342-18383]:Block[18342-18383]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[18356-18373]:ExpressionStatement[18356-18373]"
    }, {
      "left" : "if (option.getOpt() != null)",
      "right" : "if (option.getOpt() != null)",
      "info" : "IfStatement[18393-18587]:IfStatement[18393-18587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18430-18495]:Block[18430-18495]"
    }, {
      "left" : "buff.append(\"-\").append(option.getOpt());",
      "right" : "buff.append(\"-\").append(option.getOpt());",
      "info" : "ExpressionStatement[18444-18485]:ExpressionStatement[18444-18485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18517-18587]:Block[18517-18587]"
    }, {
      "left" : "buff.append(\"--\").append(option.getLongOpt());",
      "right" : "buff.append(\"--\").append(option.getLongOpt());",
      "info" : "ExpressionStatement[18531-18577]:ExpressionStatement[18531-18577]"
    }, {
      "left" : "if (option.hasArg() && option.hasArgName())",
      "right" : "if (option.hasArg() && option.hasArgName())",
      "info" : "IfStatement[18634-18768]:IfStatement[18634-18768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18686-18768]:Block[18686-18768]"
    }, {
      "left" : "buff.append(\" <\").append(option.getArgName()).append(\">\");",
      "right" : "buff.append(\" <\").append(option.getArgName()).append(\">\");",
      "info" : "ExpressionStatement[18700-18758]:ExpressionStatement[18700-18758]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[18828-18892]:IfStatement[18828-18892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18851-18892]:Block[18851-18892]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[18865-18882]:ExpressionStatement[18865-18882]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19199-19205]:Modifier[19199-19205]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19206-19210]:PrimitiveType[19206-19210]"
    }, {
      "left" : "printUsage",
      "right" : "printUsage",
      "info" : "SimpleName[19211-19221]:SimpleName[19211-19221]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[19222-19236]:SingleVariableDeclaration[19222-19236]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[19238-19247]:SingleVariableDeclaration[19238-19247]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[19249-19269]:SingleVariableDeclaration[19249-19269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19275-19445]:Block[19275-19445]"
    }, {
      "left" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "right" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "info" : "VariableDeclarationStatement[19285-19329]:VariableDeclarationStatement[19285-19329]"
    }, {
      "left" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "right" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "info" : "ExpressionStatement[19339-19439]:ExpressionStatement[19339-19439]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19991-19997]:Modifier[19991-19997]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19998-20002]:PrimitiveType[19998-20002]"
    }, {
      "left" : "printOptions",
      "right" : "printOptions",
      "info" : "SimpleName[20003-20015]:SimpleName[20003-20015]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[20016-20030]:SingleVariableDeclaration[20016-20030]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[20032-20041]:SingleVariableDeclaration[20032-20041]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[20043-20058]:SingleVariableDeclaration[20043-20058]"
    }, {
      "left" : "int leftPad",
      "right" : "int leftPad",
      "info" : "SingleVariableDeclaration[20090-20101]:SingleVariableDeclaration[20090-20101]"
    }, {
      "left" : "int descPad",
      "right" : "int descPad",
      "info" : "SingleVariableDeclaration[20103-20114]:SingleVariableDeclaration[20103-20114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20120-20270]:Block[20120-20270]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer();",
      "right" : "StringBuffer sb = new StringBuffer();",
      "info" : "VariableDeclarationStatement[20130-20167]:VariableDeclarationStatement[20130-20167]"
    }, {
      "left" : "renderOptions(sb, width, options, leftPad, descPad);",
      "right" : "renderOptions(sb, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[20177-20229]:ExpressionStatement[20177-20229]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[20238-20264]:ExpressionStatement[20238-20264]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20541-20547]:Modifier[20541-20547]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20548-20552]:PrimitiveType[20548-20552]"
    }, {
      "left" : "printWrapped",
      "right" : "printWrapped",
      "info" : "SimpleName[20553-20565]:SimpleName[20553-20565]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[20566-20580]:SingleVariableDeclaration[20566-20580]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[20582-20591]:SingleVariableDeclaration[20582-20591]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[20593-20604]:SingleVariableDeclaration[20593-20604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20610-20659]:Block[20610-20659]"
    }, {
      "left" : "printWrapped(pw, width, 0, text);",
      "right" : "printWrapped(pw, width, 0, text);",
      "info" : "ExpressionStatement[20620-20653]:ExpressionStatement[20620-20653]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21009-21015]:Modifier[21009-21015]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21016-21020]:PrimitiveType[21016-21020]"
    }, {
      "left" : "printWrapped",
      "right" : "printWrapped",
      "info" : "SimpleName[21021-21033]:SimpleName[21021-21033]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[21034-21048]:SingleVariableDeclaration[21034-21048]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[21050-21059]:SingleVariableDeclaration[21050-21059]"
    }, {
      "left" : "int nextLineTabStop",
      "right" : "int nextLineTabStop",
      "info" : "SingleVariableDeclaration[21061-21080]:SingleVariableDeclaration[21061-21080]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[21082-21093]:SingleVariableDeclaration[21082-21093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21099-21262]:Block[21099-21262]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer(text.length());",
      "right" : "StringBuffer sb = new StringBuffer(text.length());",
      "info" : "VariableDeclarationStatement[21109-21159]:VariableDeclarationStatement[21109-21159]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "info" : "ExpressionStatement[21169-21221]:ExpressionStatement[21169-21221]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[21230-21256]:ExpressionStatement[21230-21256]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[21922-21931]:Modifier[21922-21931]"
    }, {
      "left" : "StringBuffer",
      "right" : "StringBuffer",
      "info" : "SimpleType[21932-21944]:SimpleType[21932-21944]"
    }, {
      "left" : "renderOptions",
      "right" : "renderOptions",
      "info" : "SimpleName[21945-21958]:SimpleName[21945-21958]"
    }, {
      "left" : "StringBuffer sb",
      "right" : "StringBuffer sb",
      "info" : "SingleVariableDeclaration[21959-21974]:SingleVariableDeclaration[21959-21974]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[21976-21985]:SingleVariableDeclaration[21976-21985]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[21987-22002]:SingleVariableDeclaration[21987-22002]"
    }, {
      "left" : "int leftPad",
      "right" : "int leftPad",
      "info" : "SingleVariableDeclaration[22004-22015]:SingleVariableDeclaration[22004-22015]"
    }, {
      "left" : "int descPad",
      "right" : "int descPad",
      "info" : "SingleVariableDeclaration[22017-22028]:SingleVariableDeclaration[22017-22028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22034-24421]:Block[22034-24421]"
    }, {
      "left" : "final String lpad = createPadding(leftPad);",
      "right" : "final String lpad = createPadding(leftPad);",
      "info" : "VariableDeclarationStatement[22044-22087]:VariableDeclarationStatement[22044-22087]"
    }, {
      "left" : "final String dpad = createPadding(descPad);",
      "right" : "final String dpad = createPadding(descPad);",
      "info" : "VariableDeclarationStatement[22096-22139]:VariableDeclarationStatement[22096-22139]"
    }, {
      "left" : "int max = 0;",
      "right" : "int max = 0;",
      "info" : "VariableDeclarationStatement[22382-22394]:VariableDeclarationStatement[22382-22394]"
    }, {
      "left" : "StringBuffer optBuf;",
      "right" : "StringBuffer optBuf;",
      "info" : "VariableDeclarationStatement[22403-22423]:VariableDeclarationStatement[22403-22423]"
    }, {
      "left" : "List prefixList = new ArrayList();",
      "right" : "List prefixList = new ArrayList();",
      "info" : "VariableDeclarationStatement[22432-22466]:VariableDeclarationStatement[22432-22466]"
    }, {
      "left" : "List optList = options.helpOptions();",
      "right" : "List optList = options.helpOptions();",
      "info" : "VariableDeclarationStatement[22476-22513]:VariableDeclarationStatement[22476-22513]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[22523-22572]:ExpressionStatement[22523-22572]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[22582-23641]:ForStatement[22582-23641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22642-23641]:Block[22642-23641]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[22656-22690]:VariableDeclarationStatement[22656-22690]"
    }, {
      "left" : "optBuf = new StringBuffer(8);",
      "right" : "optBuf = new StringBuffer(8);",
      "info" : "ExpressionStatement[22703-22732]:ExpressionStatement[22703-22732]"
    }, {
      "left" : "if (option.getOpt() == null)",
      "right" : "if (option.getOpt() == null)",
      "info" : "IfStatement[22746-23210]:IfStatement[22746-23210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22787-22904]:Block[22787-22904]"
    }, {
      "left" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[22805-22890]:ExpressionStatement[22805-22890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22934-23210]:Block[22934-23210]"
    }, {
      "left" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "right" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "info" : "ExpressionStatement[22952-23021]:ExpressionStatement[22952-23021]"
    }, {
      "left" : "if (option.hasLongOpt())",
      "right" : "if (option.hasLongOpt())",
      "info" : "IfStatement[23039-23196]:IfStatement[23039-23196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23080-23196]:Block[23080-23196]"
    }, {
      "left" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[23102-23178]:ExpressionStatement[23102-23178]"
    }, {
      "left" : "if (option.hasArg())",
      "right" : "if (option.hasArg())",
      "info" : "IfStatement[23224-23527]:IfStatement[23224-23527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23257-23527]:Block[23257-23527]"
    }, {
      "left" : "if (option.hasArgName())",
      "right" : "if (option.hasArgName())",
      "info" : "IfStatement[23275-23513]:IfStatement[23275-23513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23316-23416]:Block[23316-23416]"
    }, {
      "left" : "optBuf.append(\" <\").append(option.getArgName()).append(\">\");",
      "right" : "optBuf.append(\" <\").append(option.getArgName()).append(\">\");",
      "info" : "ExpressionStatement[23338-23398]:ExpressionStatement[23338-23398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23454-23513]:Block[23454-23513]"
    }, {
      "left" : "optBuf.append(' ');",
      "right" : "optBuf.append(' ');",
      "info" : "ExpressionStatement[23476-23495]:ExpressionStatement[23476-23495]"
    }, {
      "left" : "prefixList.add(optBuf);",
      "right" : "prefixList.add(optBuf);",
      "info" : "ExpressionStatement[23541-23564]:ExpressionStatement[23541-23564]"
    }, {
      "left" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "right" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "info" : "ExpressionStatement[23577-23631]:ExpressionStatement[23577-23631]"
    }, {
      "left" : "int x = 0;",
      "right" : "int x = 0;",
      "info" : "VariableDeclarationStatement[23651-23661]:VariableDeclarationStatement[23651-23661]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[23671-24395]:ForStatement[23671-24395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23731-24395]:Block[23731-24395]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[23745-23779]:VariableDeclarationStatement[23745-23779]"
    }, {
      "left" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "right" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "info" : "ExpressionStatement[23792-23850]:ExpressionStatement[23792-23850]"
    }, {
      "left" : "if (optBuf.length() < max)",
      "right" : "if (optBuf.length() < max)",
      "info" : "IfStatement[23864-23987]:IfStatement[23864-23987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23903-23987]:Block[23903-23987]"
    }, {
      "left" : "optBuf.append(createPadding(max - optBuf.length()));",
      "right" : "optBuf.append(createPadding(max - optBuf.length()));",
      "info" : "ExpressionStatement[23921-23973]:ExpressionStatement[23921-23973]"
    }, {
      "left" : "optBuf.append(dpad);",
      "right" : "optBuf.append(dpad);",
      "info" : "ExpressionStatement[24001-24021]:ExpressionStatement[24001-24021]"
    }, {
      "left" : "int nextLineTabStop = max + descPad;",
      "right" : "int nextLineTabStop = max + descPad;",
      "info" : "VariableDeclarationStatement[24035-24071]:VariableDeclarationStatement[24035-24071]"
    }, {
      "left" : "if (option.getDescription() != null)",
      "right" : "if (option.getDescription() != null)",
      "info" : "IfStatement[24085-24205]:IfStatement[24085-24205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24134-24205]:Block[24134-24205]"
    }, {
      "left" : "optBuf.append(option.getDescription());",
      "right" : "optBuf.append(option.getDescription());",
      "info" : "ExpressionStatement[24152-24191]:ExpressionStatement[24152-24191]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "info" : "ExpressionStatement[24219-24284]:ExpressionStatement[24219-24284]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[24298-24385]:IfStatement[24298-24385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24327-24385]:Block[24327-24385]"
    }, {
      "left" : "sb.append(defaultNewLine);",
      "right" : "sb.append(defaultNewLine);",
      "info" : "ExpressionStatement[24345-24371]:ExpressionStatement[24345-24371]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[24405-24415]:ReturnStatement[24405-24415]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[24871-24880]:Modifier[24871-24880]"
    }, {
      "left" : "StringBuffer",
      "right" : "StringBuffer",
      "info" : "SimpleType[24881-24893]:SimpleType[24881-24893]"
    }, {
      "left" : "renderWrappedText",
      "right" : "renderWrappedText",
      "info" : "SimpleName[24894-24911]:SimpleName[24894-24911]"
    }, {
      "left" : "StringBuffer sb",
      "right" : "StringBuffer sb",
      "info" : "SingleVariableDeclaration[24912-24927]:SingleVariableDeclaration[24912-24927]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[24929-24938]:SingleVariableDeclaration[24929-24938]"
    }, {
      "left" : "int nextLineTabStop",
      "right" : "int nextLineTabStop",
      "info" : "SingleVariableDeclaration[24986-25005]:SingleVariableDeclaration[24986-25005]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[25007-25018]:SingleVariableDeclaration[25007-25018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25024-26196]:Block[25024-26047]"
    }, {
      "left" : "int pos = findWrapPos(text, width, 0);",
      "right" : "int pos = findWrapPos(text, width, 0);",
      "info" : "VariableDeclarationStatement[25034-25072]:VariableDeclarationStatement[25034-25072]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[25082-25176]:IfStatement[25082-25176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25105-25176]:Block[25105-25176]"
    }, {
      "left" : "sb.append(rtrim(text));",
      "right" : "sb.append(rtrim(text));",
      "info" : "ExpressionStatement[25119-25142]:ExpressionStatement[25119-25142]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[25156-25166]:ReturnStatement[25156-25166]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[25185-25249]:ExpressionStatement[25185-25249]"
    }, {
      "left" : "if (nextLineTabStop >= width)",
      "right" : "if (nextLineTabStop >= width)",
      "info" : "IfStatement[25259-25543]:IfStatement[25259-25394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25297-25543]:Block[25297-25394]"
    }, {
      "left" : "final String padding = createPadding(nextLineTabStop);",
      "right" : "final String padding = createPadding(nextLineTabStop);",
      "info" : "VariableDeclarationStatement[25649-25703]:VariableDeclarationStatement[25500-25554]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[25713-26190]:WhileStatement[25564-26041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25734-26190]:Block[25585-26041]"
    }, {
      "left" : "text = padding + text.substring(pos).trim();",
      "right" : "text = padding + text.substring(pos).trim();",
      "info" : "ExpressionStatement[25748-25792]:ExpressionStatement[25599-25643]"
    }, {
      "left" : "pos = findWrapPos(text, width, 0);",
      "right" : "pos = findWrapPos(text, width, 0);",
      "info" : "ExpressionStatement[25805-25839]:ExpressionStatement[25656-25690]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[25853-25956]:IfStatement[25704-25807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25880-25956]:Block[25731-25807]"
    }, {
      "left" : "sb.append(text);",
      "right" : "sb.append(text);",
      "info" : "ExpressionStatement[25898-25914]:ExpressionStatement[25749-25765]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[25932-25942]:ReturnStatement[25783-25793]"
    }, {
      "left" : "if ( (text.length() > width) && (pos == nextLineTabStop - 1))",
      "right" : "if ( (text.length() > width) && (pos == nextLineTabStop - 1))",
      "info" : "IfStatement[25982-26102]:IfStatement[25833-25953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26058-26102]:Block[25909-25953]"
    }, {
      "left" : "pos = width;",
      "right" : "pos = width;",
      "info" : "ExpressionStatement[26076-26088]:ExpressionStatement[25927-25939]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[26116-26180]:ExpressionStatement[25967-26031]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[26815-26824]:Modifier[26666-26675]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[26825-26828]:PrimitiveType[26676-26679]"
    }, {
      "left" : "findWrapPos",
      "right" : "findWrapPos",
      "info" : "SimpleName[26829-26840]:SimpleName[26680-26691]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[26841-26852]:SingleVariableDeclaration[26692-26703]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[26854-26863]:SingleVariableDeclaration[26705-26714]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[26865-26877]:SingleVariableDeclaration[26716-26728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26883-28020]:Block[26734-27871]"
    }, {
      "left" : "int pos = -1;",
      "right" : "int pos = -1;",
      "info" : "VariableDeclarationStatement[26893-26906]:VariableDeclarationStatement[26744-26757]"
    }, {
      "left" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "right" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "info" : "IfStatement[26990-27278]:IfStatement[26841-27129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27144-27183]:Block[26995-27034]"
    }, {
      "left" : "return pos + 1;",
      "right" : "return pos + 1;",
      "info" : "ReturnStatement[27158-27173]:ReturnStatement[27009-27024]"
    }, {
      "left" : "if (startPos + width >= text.length())",
      "right" : "if (startPos + width >= text.length())",
      "info" : "IfStatement[27197-27278]:IfStatement[27048-27129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27244-27278]:Block[27095-27129]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[27258-27268]:ReturnStatement[27109-27119]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[27361-27384]:ExpressionStatement[27212-27235]"
    }, {
      "left" : "char c;",
      "right" : "char c;",
      "info" : "VariableDeclarationStatement[27394-27401]:VariableDeclarationStatement[27245-27252]"
    }, {
      "left" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))",
      "right" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))",
      "info" : "WhileStatement[27411-27556]:WhileStatement[27262-27407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27526-27556]:Block[27377-27407]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[27540-27546]:ExpressionStatement[27391-27397]"
    }, {
      "left" : "if (pos > startPos)",
      "right" : "if (pos > startPos)",
      "info" : "IfStatement[27606-27669]:IfStatement[27457-27520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27634-27669]:Block[27485-27520]"
    }, {
      "left" : "return pos;",
      "right" : "return pos;",
      "info" : "ReturnStatement[27648-27659]:ReturnStatement[27499-27510]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[27779-27802]:ExpressionStatement[27630-27653]"
    }, {
      "left" : "while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))",
      "right" : "while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))",
      "info" : "WhileStatement[27812-27961]:WhileStatement[27663-27812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27931-27961]:Block[27782-27812]"
    }, {
      "left" : "++pos;",
      "right" : "++pos;",
      "info" : "ExpressionStatement[27945-27951]:ExpressionStatement[27796-27802]"
    }, {
      "left" : "return (pos == text.length()) ? (-1) : pos;",
      "right" : "return (pos == text.length()) ? (-1) : pos;",
      "info" : "ReturnStatement[27971-28014]:ReturnStatement[27822-27865]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[28220-28229]:Modifier[28071-28080]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[28230-28236]:SimpleType[28081-28087]"
    }, {
      "left" : "createPadding",
      "right" : "createPadding",
      "info" : "SimpleName[28237-28250]:SimpleName[28088-28101]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[28251-28258]:SingleVariableDeclaration[28102-28109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28264-28438]:Block[28115-28289]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer(len);",
      "right" : "StringBuffer sb = new StringBuffer(len);",
      "info" : "VariableDeclarationStatement[28274-28314]:VariableDeclarationStatement[28125-28165]"
    }, {
      "left" : "for (int i = 0; i < len; ++i)",
      "right" : "for (int i = 0; i < len; ++i)",
      "info" : "ForStatement[28324-28401]:ForStatement[28175-28252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28362-28401]:Block[28213-28252]"
    }, {
      "left" : "sb.append(' ');",
      "right" : "sb.append(' ');",
      "info" : "ExpressionStatement[28376-28391]:ExpressionStatement[28227-28242]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[28411-28432]:ReturnStatement[28262-28283]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[28661-28670]:Modifier[28512-28521]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[28671-28677]:SimpleType[28522-28528]"
    }, {
      "left" : "rtrim",
      "right" : "rtrim",
      "info" : "SimpleName[28678-28683]:SimpleName[28529-28534]"
    }, {
      "left" : "String s",
      "right" : "String s",
      "info" : "SingleVariableDeclaration[28684-28692]:SingleVariableDeclaration[28535-28543]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28698-28972]:Block[28549-28823]"
    }, {
      "left" : "if ((s == null) || (s.length() == 0))",
      "right" : "if ((s == null) || (s.length() == 0))",
      "info" : "IfStatement[28708-28787]:IfStatement[28559-28638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28754-28787]:Block[28605-28638]"
    }, {
      "left" : "return s;",
      "right" : "return s;",
      "info" : "ReturnStatement[28768-28777]:ReturnStatement[28619-28628]"
    }, {
      "left" : "int pos = s.length();",
      "right" : "int pos = s.length();",
      "info" : "VariableDeclarationStatement[28797-28818]:VariableDeclarationStatement[28648-28669]"
    }, {
      "left" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "right" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "info" : "WhileStatement[28828-28929]:WhileStatement[28679-28780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28899-28929]:Block[28750-28780]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[28913-28919]:ExpressionStatement[28764-28770]"
    }, {
      "left" : "return s.substring(0, pos);",
      "right" : "return s.substring(0, pos);",
      "info" : "ReturnStatement[28939-28966]:ReturnStatement[28790-28817]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[29331-29338]:Modifier[29182-29189]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[29339-29345]:Modifier[29190-29196]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[29346-29351]:TYPE_DECLARATION_KIND[29197-29202]"
    }, {
      "left" : "OptionComparator",
      "right" : "OptionComparator",
      "info" : "SimpleName[29352-29368]:SimpleName[29203-29219]"
    }, {
      "left" : "Comparator",
      "right" : "Comparator",
      "info" : "SimpleType[29380-29390]:SimpleType[29231-29241]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29930-29936]:Modifier[29781-29787]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[29937-29940]:PrimitiveType[29788-29791]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[29941-29948]:SimpleName[29792-29799]"
    }, {
      "left" : "Object o1",
      "right" : "Object o1",
      "info" : "SingleVariableDeclaration[29949-29958]:SingleVariableDeclaration[29800-29809]"
    }, {
      "left" : "Object o2",
      "right" : "Object o2",
      "info" : "SingleVariableDeclaration[29960-29969]:SingleVariableDeclaration[29811-29820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29979-30138]:Block[29830-29989]"
    }, {
      "left" : "Option opt1 = (Option) o1;",
      "right" : "Option opt1 = (Option) o1;",
      "info" : "VariableDeclarationStatement[29993-30019]:VariableDeclarationStatement[29844-29870]"
    }, {
      "left" : "Option opt2 = (Option) o2;",
      "right" : "Option opt2 = (Option) o2;",
      "info" : "VariableDeclarationStatement[30032-30058]:VariableDeclarationStatement[29883-29909]"
    }, {
      "left" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "right" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "info" : "ReturnStatement[30072-30128]:ReturnStatement[29923-29979]"
    } ]
  },
  "interFileMappings" : { }
}