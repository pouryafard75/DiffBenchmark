{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DurationFormatUtils",
      "right" : "DurationFormatUtils",
      "info" : "TypeDeclaration[967-24541]:TypeDeclaration[967-23707]"
    }, {
      "left" : "public DurationFormatUtils()",
      "right" : "public DurationFormatUtils()",
      "info" : "MethodDeclaration[1862-2142]:MethodDeclaration[1862-2142]"
    }, {
      "left" : "public static final String ISO_EXTENDED_FORMAT_PATTERN = \"'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'\";",
      "right" : "public static final String ISO_EXTENDED_FORMAT_PATTERN = \"'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'\";",
      "info" : "FieldDeclaration[2148-2510]:FieldDeclaration[2148-2510]"
    }, {
      "left" : "public static String formatDurationHMS(long durationMillis)",
      "right" : "public static String formatDurationHMS(long durationMillis)",
      "info" : "MethodDeclaration[2594-2983]:MethodDeclaration[2594-2983]"
    }, {
      "left" : "public static String formatDurationISO(long durationMillis)",
      "right" : "public static String formatDurationISO(long durationMillis)",
      "info" : "MethodDeclaration[2989-3510]:MethodDeclaration[2989-3510]"
    }, {
      "left" : "public static String formatDuration(long durationMillis, String format)",
      "right" : "public static String formatDuration(long durationMillis, String format)",
      "info" : "MethodDeclaration[3516-4116]:MethodDeclaration[3516-4116]"
    }, {
      "left" : "public static String formatDuration(long durationMillis, String format, boolean padWithZeros)",
      "right" : "public static String formatDuration(long durationMillis, String format, boolean padWithZeros)",
      "info" : "MethodDeclaration[4122-6122]:MethodDeclaration[4122-6122]"
    }, {
      "left" : "public static String formatDurationWords(\n        long durationMillis,\n        boolean suppressLeadingZeroElements,\n        boolean suppressTrailingZeroElements)",
      "right" : "public static String formatDurationWords(\n        long durationMillis,\n        boolean suppressLeadingZeroElements,\n        boolean suppressTrailingZeroElements)",
      "info" : "MethodDeclaration[6128-9133]:MethodDeclaration[6128-9133]"
    }, {
      "left" : "public static String formatPeriodISO(long startMillis, long endMillis)",
      "right" : "public static String formatPeriodISO(long startMillis, long endMillis)",
      "info" : "MethodDeclaration[9217-9705]:MethodDeclaration[9217-9705]"
    }, {
      "left" : "public static String formatPeriod(long startMillis, long endMillis, String format)",
      "right" : "public static String formatPeriod(long startMillis, long endMillis, String format)",
      "info" : "MethodDeclaration[9711-10257]:MethodDeclaration[9711-10257]"
    }, {
      "left" : "public static String formatPeriod(long startMillis, long endMillis, String format, boolean padWithZeros, \n            TimeZone timezone)",
      "right" : "public static String formatPeriod(long startMillis, long endMillis, String format, boolean padWithZeros, \n            TimeZone timezone)",
      "info" : "MethodDeclaration[10263-14932]:MethodDeclaration[10263-14522]"
    }, {
      "left" : "static String format(Token[] tokens, int years, int months, int days, int hours, int minutes, int seconds,\n            int milliseconds, boolean padWithZeros)",
      "right" : "static String format(Token[] tokens, int years, int months, int days, int hours, int minutes, int seconds,\n            int milliseconds, boolean padWithZeros)",
      "info" : "MethodDeclaration[15016-18383]:MethodDeclaration[14606-17973]"
    }, {
      "left" : "static final Object y = \"y\";",
      "right" : "static final Object y = \"y\";",
      "info" : "FieldDeclaration[18813-18841]:FieldDeclaration[17979-18007]"
    }, {
      "left" : "static final Object M = \"M\";",
      "right" : "static final Object M = \"M\";",
      "info" : "FieldDeclaration[18846-18874]:FieldDeclaration[18012-18040]"
    }, {
      "left" : "static final Object d = \"d\";",
      "right" : "static final Object d = \"d\";",
      "info" : "FieldDeclaration[18879-18907]:FieldDeclaration[18045-18073]"
    }, {
      "left" : "static final Object H = \"H\";",
      "right" : "static final Object H = \"H\";",
      "info" : "FieldDeclaration[18912-18940]:FieldDeclaration[18078-18106]"
    }, {
      "left" : "static final Object m = \"m\";",
      "right" : "static final Object m = \"m\";",
      "info" : "FieldDeclaration[18945-18973]:FieldDeclaration[18111-18139]"
    }, {
      "left" : "static final Object s = \"s\";",
      "right" : "static final Object s = \"s\";",
      "info" : "FieldDeclaration[18978-19006]:FieldDeclaration[18144-18172]"
    }, {
      "left" : "static final Object S = \"S\";",
      "right" : "static final Object S = \"S\";",
      "info" : "FieldDeclaration[19011-19039]:FieldDeclaration[18177-18205]"
    }, {
      "left" : "static Token[] lexx(String format)",
      "right" : "static Token[] lexx(String format)",
      "info" : "MethodDeclaration[19049-21126]:MethodDeclaration[18215-20292]"
    }, {
      "left" : "Token",
      "right" : "Token",
      "info" : "TypeDeclaration[21132-24538]:TypeDeclaration[20298-23704]"
    }, {
      "left" : "static boolean containsTokenWithValue(Token[] tokens, Object value)",
      "right" : "static boolean containsTokenWithValue(Token[] tokens, Object value)",
      "info" : "MethodDeclaration[21233-21777]:MethodDeclaration[20399-20943]"
    }, {
      "left" : "private Object value;",
      "right" : "private Object value;",
      "info" : "FieldDeclaration[21787-21808]:FieldDeclaration[20953-20974]"
    }, {
      "left" : "private int count;",
      "right" : "private int count;",
      "info" : "FieldDeclaration[21817-21835]:FieldDeclaration[20983-21001]"
    }, {
      "left" : "Token(Object value)",
      "right" : "Token(Object value)",
      "info" : "MethodDeclaration[21845-22083]:MethodDeclaration[21011-21249]"
    }, {
      "left" : "Token(Object value, int count)",
      "right" : "Token(Object value, int count)",
      "info" : "MethodDeclaration[22093-22441]:MethodDeclaration[21259-21607]"
    }, {
      "left" : "void increment()",
      "right" : "void increment()",
      "info" : "MethodDeclaration[22451-22566]:MethodDeclaration[21617-21732]"
    }, {
      "left" : "int getCount()",
      "right" : "int getCount()",
      "info" : "MethodDeclaration[22576-22772]:MethodDeclaration[21742-21938]"
    }, {
      "left" : "Object getValue()",
      "right" : "Object getValue()",
      "info" : "MethodDeclaration[22782-22965]:MethodDeclaration[21948-22131]"
    }, {
      "left" : "public boolean equals(Object obj2)",
      "right" : "public boolean equals(Object obj2)",
      "info" : "MethodDeclaration[22975-23947]:MethodDeclaration[22141-23113]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[23957-24277]:MethodDeclaration[23123-23443]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[24287-24532]:MethodDeclaration[23453-23698]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1822-1828]:Modifier[1822-1828]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1829-1834]:TYPE_DECLARATION_KIND[1829-1834]"
    }, {
      "left" : "DurationFormatUtils",
      "right" : "DurationFormatUtils",
      "info" : "SimpleName[1835-1854]:SimpleName[1835-1854]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2089-2095]:Modifier[2089-2095]"
    }, {
      "left" : "DurationFormatUtils",
      "right" : "DurationFormatUtils",
      "info" : "SimpleName[2096-2115]:SimpleName[2096-2115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2118-2142]:Block[2118-2142]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[2128-2136]:SuperConstructorInvocation[2128-2136]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2854-2860]:Modifier[2854-2860]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2861-2867]:Modifier[2861-2867]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2868-2874]:SimpleType[2868-2874]"
    }, {
      "left" : "formatDurationHMS",
      "right" : "formatDurationHMS",
      "info" : "SimpleName[2875-2892]:SimpleName[2875-2892]"
    }, {
      "left" : "long durationMillis",
      "right" : "long durationMillis",
      "info" : "SingleVariableDeclaration[2893-2912]:SingleVariableDeclaration[2893-2912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2914-2983]:Block[2914-2983]"
    }, {
      "left" : "return formatDuration(durationMillis, \"H:mm:ss.SSS\");",
      "right" : "return formatDuration(durationMillis, \"H:mm:ss.SSS\");",
      "info" : "ReturnStatement[2924-2977]:ReturnStatement[2924-2977]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3360-3366]:Modifier[3360-3366]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3367-3373]:Modifier[3367-3373]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3374-3380]:SimpleType[3374-3380]"
    }, {
      "left" : "formatDurationISO",
      "right" : "formatDurationISO",
      "info" : "SimpleName[3381-3398]:SimpleName[3381-3398]"
    }, {
      "left" : "long durationMillis",
      "right" : "long durationMillis",
      "info" : "SingleVariableDeclaration[3399-3418]:SingleVariableDeclaration[3399-3418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3420-3510]:Block[3420-3510]"
    }, {
      "left" : "return formatDuration(durationMillis, ISO_EXTENDED_FORMAT_PATTERN, false);",
      "right" : "return formatDuration(durationMillis, ISO_EXTENDED_FORMAT_PATTERN, false);",
      "info" : "ReturnStatement[3430-3504]:ReturnStatement[3430-3504]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3976-3982]:Modifier[3976-3982]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3983-3989]:Modifier[3983-3989]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3990-3996]:SimpleType[3990-3996]"
    }, {
      "left" : "formatDuration",
      "right" : "formatDuration",
      "info" : "SimpleName[3997-4011]:SimpleName[3997-4011]"
    }, {
      "left" : "long durationMillis",
      "right" : "long durationMillis",
      "info" : "SingleVariableDeclaration[4012-4031]:SingleVariableDeclaration[4012-4031]"
    }, {
      "left" : "String format",
      "right" : "String format",
      "info" : "SingleVariableDeclaration[4033-4046]:SingleVariableDeclaration[4033-4046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4048-4116]:Block[4048-4116]"
    }, {
      "left" : "return formatDuration(durationMillis, format, true);",
      "right" : "return formatDuration(durationMillis, format, true);",
      "info" : "ReturnStatement[4058-4110]:ReturnStatement[4058-4110]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4713-4719]:Modifier[4713-4719]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4720-4726]:Modifier[4720-4726]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4727-4733]:SimpleType[4727-4733]"
    }, {
      "left" : "formatDuration",
      "right" : "formatDuration",
      "info" : "SimpleName[4734-4748]:SimpleName[4734-4748]"
    }, {
      "left" : "long durationMillis",
      "right" : "long durationMillis",
      "info" : "SingleVariableDeclaration[4749-4768]:SingleVariableDeclaration[4749-4768]"
    }, {
      "left" : "String format",
      "right" : "String format",
      "info" : "SingleVariableDeclaration[4770-4783]:SingleVariableDeclaration[4770-4783]"
    }, {
      "left" : "boolean padWithZeros",
      "right" : "boolean padWithZeros",
      "info" : "SingleVariableDeclaration[4785-4805]:SingleVariableDeclaration[4785-4805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4807-6122]:Block[4807-6122]"
    }, {
      "left" : "Token[] tokens = lexx(format);",
      "right" : "Token[] tokens = lexx(format);",
      "info" : "VariableDeclarationStatement[4818-4848]:VariableDeclarationStatement[4818-4848]"
    }, {
      "left" : "int days         = 0;",
      "right" : "int days         = 0;",
      "info" : "VariableDeclarationStatement[4858-4879]:VariableDeclarationStatement[4858-4879]"
    }, {
      "left" : "int hours        = 0;",
      "right" : "int hours        = 0;",
      "info" : "VariableDeclarationStatement[4888-4909]:VariableDeclarationStatement[4888-4909]"
    }, {
      "left" : "int minutes      = 0;",
      "right" : "int minutes      = 0;",
      "info" : "VariableDeclarationStatement[4918-4939]:VariableDeclarationStatement[4918-4939]"
    }, {
      "left" : "int seconds      = 0;",
      "right" : "int seconds      = 0;",
      "info" : "VariableDeclarationStatement[4948-4969]:VariableDeclarationStatement[4948-4969]"
    }, {
      "left" : "int milliseconds = 0;",
      "right" : "int milliseconds = 0;",
      "info" : "VariableDeclarationStatement[4978-4999]:VariableDeclarationStatement[4978-4999]"
    }, {
      "left" : "if (Token.containsTokenWithValue(tokens, d))",
      "right" : "if (Token.containsTokenWithValue(tokens, d))",
      "info" : "IfStatement[5017-5225]:IfStatement[5017-5225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5063-5225]:Block[5063-5225]"
    }, {
      "left" : "days = (int) (durationMillis / DateUtils.MILLIS_PER_DAY);",
      "right" : "days = (int) (durationMillis / DateUtils.MILLIS_PER_DAY);",
      "info" : "ExpressionStatement[5077-5134]:ExpressionStatement[5077-5134]"
    }, {
      "left" : "durationMillis = durationMillis - (days * DateUtils.MILLIS_PER_DAY);",
      "right" : "durationMillis = durationMillis - (days * DateUtils.MILLIS_PER_DAY);",
      "info" : "ExpressionStatement[5147-5215]:ExpressionStatement[5147-5215]"
    }, {
      "left" : "if (Token.containsTokenWithValue(tokens, H))",
      "right" : "if (Token.containsTokenWithValue(tokens, H))",
      "info" : "IfStatement[5234-5446]:IfStatement[5234-5446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5280-5446]:Block[5280-5446]"
    }, {
      "left" : "hours = (int) (durationMillis / DateUtils.MILLIS_PER_HOUR);",
      "right" : "hours = (int) (durationMillis / DateUtils.MILLIS_PER_HOUR);",
      "info" : "ExpressionStatement[5294-5353]:ExpressionStatement[5294-5353]"
    }, {
      "left" : "durationMillis = durationMillis - (hours * DateUtils.MILLIS_PER_HOUR);",
      "right" : "durationMillis = durationMillis - (hours * DateUtils.MILLIS_PER_HOUR);",
      "info" : "ExpressionStatement[5366-5436]:ExpressionStatement[5366-5436]"
    }, {
      "left" : "if (Token.containsTokenWithValue(tokens, m))",
      "right" : "if (Token.containsTokenWithValue(tokens, m))",
      "info" : "IfStatement[5455-5675]:IfStatement[5455-5675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5501-5675]:Block[5501-5675]"
    }, {
      "left" : "minutes = (int) (durationMillis / DateUtils.MILLIS_PER_MINUTE);",
      "right" : "minutes = (int) (durationMillis / DateUtils.MILLIS_PER_MINUTE);",
      "info" : "ExpressionStatement[5515-5578]:ExpressionStatement[5515-5578]"
    }, {
      "left" : "durationMillis = durationMillis - (minutes * DateUtils.MILLIS_PER_MINUTE);",
      "right" : "durationMillis = durationMillis - (minutes * DateUtils.MILLIS_PER_MINUTE);",
      "info" : "ExpressionStatement[5591-5665]:ExpressionStatement[5591-5665]"
    }, {
      "left" : "if (Token.containsTokenWithValue(tokens, s))",
      "right" : "if (Token.containsTokenWithValue(tokens, s))",
      "info" : "IfStatement[5684-5904]:IfStatement[5684-5904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5730-5904]:Block[5730-5904]"
    }, {
      "left" : "seconds = (int) (durationMillis / DateUtils.MILLIS_PER_SECOND);",
      "right" : "seconds = (int) (durationMillis / DateUtils.MILLIS_PER_SECOND);",
      "info" : "ExpressionStatement[5744-5807]:ExpressionStatement[5744-5807]"
    }, {
      "left" : "durationMillis = durationMillis - (seconds * DateUtils.MILLIS_PER_SECOND);",
      "right" : "durationMillis = durationMillis - (seconds * DateUtils.MILLIS_PER_SECOND);",
      "info" : "ExpressionStatement[5820-5894]:ExpressionStatement[5820-5894]"
    }, {
      "left" : "if (Token.containsTokenWithValue(tokens, S))",
      "right" : "if (Token.containsTokenWithValue(tokens, S))",
      "info" : "IfStatement[5913-6019]:IfStatement[5913-6019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5959-6019]:Block[5959-6019]"
    }, {
      "left" : "milliseconds = (int) durationMillis;",
      "right" : "milliseconds = (int) durationMillis;",
      "info" : "ExpressionStatement[5973-6009]:ExpressionStatement[5973-6009]"
    }, {
      "left" : "return format(tokens, 0, 0, days, hours, minutes, seconds, milliseconds, padWithZeros);",
      "right" : "return format(tokens, 0, 0, days, hours, minutes, seconds, milliseconds, padWithZeros);",
      "info" : "ReturnStatement[6029-6116]:ReturnStatement[6029-6116]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6659-6665]:Modifier[6659-6665]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6666-6672]:Modifier[6666-6672]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6673-6679]:SimpleType[6673-6679]"
    }, {
      "left" : "formatDurationWords",
      "right" : "formatDurationWords",
      "info" : "SimpleName[6680-6699]:SimpleName[6680-6699]"
    }, {
      "left" : "long durationMillis",
      "right" : "long durationMillis",
      "info" : "SingleVariableDeclaration[6709-6728]:SingleVariableDeclaration[6709-6728]"
    }, {
      "left" : "boolean suppressLeadingZeroElements",
      "right" : "boolean suppressLeadingZeroElements",
      "info" : "SingleVariableDeclaration[6738-6773]:SingleVariableDeclaration[6738-6773]"
    }, {
      "left" : "boolean suppressTrailingZeroElements",
      "right" : "boolean suppressTrailingZeroElements",
      "info" : "SingleVariableDeclaration[6783-6819]:SingleVariableDeclaration[6783-6819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6821-9133]:Block[6821-9133]"
    }, {
      "left" : "String duration = formatDuration(durationMillis, \"d' days 'H' hours 'm' minutes 's' seconds'\");",
      "right" : "String duration = formatDuration(durationMillis, \"d' days 'H' hours 'm' minutes 's' seconds'\");",
      "info" : "VariableDeclarationStatement[7012-7107]:VariableDeclarationStatement[7012-7107]"
    }, {
      "left" : "if (suppressLeadingZeroElements)",
      "right" : "if (suppressLeadingZeroElements)",
      "info" : "IfStatement[7116-8063]:IfStatement[7116-8063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7149-8063]:Block[7149-8063]"
    }, {
      "left" : "duration = \" \" + duration;",
      "right" : "duration = \" \" + duration;",
      "info" : "ExpressionStatement[7237-7263]:ExpressionStatement[7237-7263]"
    }, {
      "left" : "String tmp = StringUtils.replaceOnce(duration, \" 0 days\", \"\");",
      "right" : "String tmp = StringUtils.replaceOnce(duration, \" 0 days\", \"\");",
      "info" : "VariableDeclarationStatement[7276-7338]:VariableDeclarationStatement[7276-7338]"
    }, {
      "left" : "if (tmp.length() != duration.length())",
      "right" : "if (tmp.length() != duration.length())",
      "info" : "IfStatement[7351-7902]:IfStatement[7351-7902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7390-7902]:Block[7390-7902]"
    }, {
      "left" : "duration = tmp;",
      "right" : "duration = tmp;",
      "info" : "ExpressionStatement[7408-7423]:ExpressionStatement[7408-7423]"
    }, {
      "left" : "tmp = StringUtils.replaceOnce(duration, \" 0 hours\", \"\");",
      "right" : "tmp = StringUtils.replaceOnce(duration, \" 0 hours\", \"\");",
      "info" : "ExpressionStatement[7440-7496]:ExpressionStatement[7440-7496]"
    }, {
      "left" : "if (tmp.length() != duration.length())",
      "right" : "if (tmp.length() != duration.length())",
      "info" : "IfStatement[7513-7888]:IfStatement[7513-7888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7552-7888]:Block[7552-7888]"
    }, {
      "left" : "duration = tmp;",
      "right" : "duration = tmp;",
      "info" : "ExpressionStatement[7574-7589]:ExpressionStatement[7574-7589]"
    }, {
      "left" : "tmp = StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");",
      "right" : "tmp = StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");",
      "info" : "ExpressionStatement[7610-7668]:ExpressionStatement[7610-7668]"
    }, {
      "left" : "duration = tmp;",
      "right" : "duration = tmp;",
      "info" : "ExpressionStatement[7689-7704]:ExpressionStatement[7689-7704]"
    }, {
      "left" : "if (tmp.length() != duration.length())",
      "right" : "if (tmp.length() != duration.length())",
      "info" : "IfStatement[7725-7870]:IfStatement[7725-7870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7764-7870]:Block[7764-7870]"
    }, {
      "left" : "duration = StringUtils.replaceOnce(tmp, \" 0 seconds\", \"\");",
      "right" : "duration = StringUtils.replaceOnce(tmp, \" 0 seconds\", \"\");",
      "info" : "ExpressionStatement[7790-7848]:ExpressionStatement[7790-7848]"
    }, {
      "left" : "if (duration.length() != 0)",
      "right" : "if (duration.length() != 0)",
      "info" : "IfStatement[7915-8053]:IfStatement[7915-8053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7943-8053]:Block[7943-8053]"
    }, {
      "left" : "duration = duration.substring(1);",
      "right" : "duration = duration.substring(1);",
      "info" : "ExpressionStatement[8006-8039]:ExpressionStatement[8006-8039]"
    }, {
      "left" : "if (suppressTrailingZeroElements)",
      "right" : "if (suppressTrailingZeroElements)",
      "info" : "IfStatement[8072-8720]:IfStatement[8072-8720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8106-8720]:Block[8106-8720]"
    }, {
      "left" : "String tmp = StringUtils.replaceOnce(duration, \" 0 seconds\", \"\");",
      "right" : "String tmp = StringUtils.replaceOnce(duration, \" 0 seconds\", \"\");",
      "info" : "VariableDeclarationStatement[8120-8185]:VariableDeclarationStatement[8120-8185]"
    }, {
      "left" : "if (tmp.length() != duration.length())",
      "right" : "if (tmp.length() != duration.length())",
      "info" : "IfStatement[8198-8710]:IfStatement[8198-8710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8237-8710]:Block[8237-8710]"
    }, {
      "left" : "duration = tmp;",
      "right" : "duration = tmp;",
      "info" : "ExpressionStatement[8255-8270]:ExpressionStatement[8255-8270]"
    }, {
      "left" : "tmp = StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");",
      "right" : "tmp = StringUtils.replaceOnce(duration, \" 0 minutes\", \"\");",
      "info" : "ExpressionStatement[8287-8345]:ExpressionStatement[8287-8345]"
    }, {
      "left" : "if (tmp.length() != duration.length())",
      "right" : "if (tmp.length() != duration.length())",
      "info" : "IfStatement[8362-8696]:IfStatement[8362-8696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8401-8696]:Block[8401-8696]"
    }, {
      "left" : "duration = tmp;",
      "right" : "duration = tmp;",
      "info" : "ExpressionStatement[8423-8438]:ExpressionStatement[8423-8438]"
    }, {
      "left" : "tmp = StringUtils.replaceOnce(duration, \" 0 hours\", \"\");",
      "right" : "tmp = StringUtils.replaceOnce(duration, \" 0 hours\", \"\");",
      "info" : "ExpressionStatement[8459-8515]:ExpressionStatement[8459-8515]"
    }, {
      "left" : "if (tmp.length() != duration.length())",
      "right" : "if (tmp.length() != duration.length())",
      "info" : "IfStatement[8536-8678]:IfStatement[8536-8678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8575-8678]:Block[8575-8678]"
    }, {
      "left" : "duration = StringUtils.replaceOnce(tmp, \" 0 days\", \"\");",
      "right" : "duration = StringUtils.replaceOnce(tmp, \" 0 days\", \"\");",
      "info" : "ExpressionStatement[8601-8656]:ExpressionStatement[8601-8656]"
    }, {
      "left" : "duration = \" \" + duration;",
      "right" : "duration = \" \" + duration;",
      "info" : "ExpressionStatement[8755-8781]:ExpressionStatement[8755-8781]"
    }, {
      "left" : "duration = StringUtils.replaceOnce(duration, \" 1 seconds\", \" 1 second\");",
      "right" : "duration = StringUtils.replaceOnce(duration, \" 1 seconds\", \" 1 second\");",
      "info" : "ExpressionStatement[8790-8862]:ExpressionStatement[8790-8862]"
    }, {
      "left" : "duration = StringUtils.replaceOnce(duration, \" 1 minutes\", \" 1 minute\");",
      "right" : "duration = StringUtils.replaceOnce(duration, \" 1 minutes\", \" 1 minute\");",
      "info" : "ExpressionStatement[8871-8943]:ExpressionStatement[8871-8943]"
    }, {
      "left" : "duration = StringUtils.replaceOnce(duration, \" 1 hours\", \" 1 hour\");",
      "right" : "duration = StringUtils.replaceOnce(duration, \" 1 hours\", \" 1 hour\");",
      "info" : "ExpressionStatement[8952-9020]:ExpressionStatement[8952-9020]"
    }, {
      "left" : "duration = StringUtils.replaceOnce(duration, \" 1 days\", \" 1 day\");",
      "right" : "duration = StringUtils.replaceOnce(duration, \" 1 days\", \" 1 day\");",
      "info" : "ExpressionStatement[9029-9095]:ExpressionStatement[9029-9095]"
    }, {
      "left" : "return duration.trim();",
      "right" : "return duration.trim();",
      "info" : "ReturnStatement[9104-9127]:ReturnStatement[9104-9127]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9515-9521]:Modifier[9515-9521]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9522-9528]:Modifier[9522-9528]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[9529-9535]:SimpleType[9529-9535]"
    }, {
      "left" : "formatPeriodISO",
      "right" : "formatPeriodISO",
      "info" : "SimpleName[9536-9551]:SimpleName[9536-9551]"
    }, {
      "left" : "long startMillis",
      "right" : "long startMillis",
      "info" : "SingleVariableDeclaration[9552-9568]:SingleVariableDeclaration[9552-9568]"
    }, {
      "left" : "long endMillis",
      "right" : "long endMillis",
      "info" : "SingleVariableDeclaration[9570-9584]:SingleVariableDeclaration[9570-9584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9586-9705]:Block[9586-9705]"
    }, {
      "left" : "return formatPeriod(startMillis, endMillis, ISO_EXTENDED_FORMAT_PATTERN, false, TimeZone.getDefault());",
      "right" : "return formatPeriod(startMillis, endMillis, ISO_EXTENDED_FORMAT_PATTERN, false, TimeZone.getDefault());",
      "info" : "ReturnStatement[9596-9699]:ReturnStatement[9596-9699]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10077-10083]:Modifier[10077-10083]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10084-10090]:Modifier[10084-10090]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10091-10097]:SimpleType[10091-10097]"
    }, {
      "left" : "formatPeriod",
      "right" : "formatPeriod",
      "info" : "SimpleName[10098-10110]:SimpleName[10098-10110]"
    }, {
      "left" : "long startMillis",
      "right" : "long startMillis",
      "info" : "SingleVariableDeclaration[10111-10127]:SingleVariableDeclaration[10111-10127]"
    }, {
      "left" : "long endMillis",
      "right" : "long endMillis",
      "info" : "SingleVariableDeclaration[10129-10143]:SingleVariableDeclaration[10129-10143]"
    }, {
      "left" : "String format",
      "right" : "String format",
      "info" : "SingleVariableDeclaration[10145-10158]:SingleVariableDeclaration[10145-10158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10160-10257]:Block[10160-10257]"
    }, {
      "left" : "return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",
      "right" : "return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",
      "info" : "ReturnStatement[10170-10251]:ReturnStatement[10170-10251]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10802-10808]:Modifier[10802-10808]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10809-10815]:Modifier[10809-10815]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10816-10822]:SimpleType[10816-10822]"
    }, {
      "left" : "formatPeriod",
      "right" : "formatPeriod",
      "info" : "SimpleName[10823-10835]:SimpleName[10823-10835]"
    }, {
      "left" : "long startMillis",
      "right" : "long startMillis",
      "info" : "SingleVariableDeclaration[10836-10852]:SingleVariableDeclaration[10836-10852]"
    }, {
      "left" : "long endMillis",
      "right" : "long endMillis",
      "info" : "SingleVariableDeclaration[10854-10868]:SingleVariableDeclaration[10854-10868]"
    }, {
      "left" : "String format",
      "right" : "String format",
      "info" : "SingleVariableDeclaration[10870-10883]:SingleVariableDeclaration[10870-10883]"
    }, {
      "left" : "boolean padWithZeros",
      "right" : "boolean padWithZeros",
      "info" : "SingleVariableDeclaration[10885-10905]:SingleVariableDeclaration[10885-10905]"
    }, {
      "left" : "TimeZone timezone",
      "right" : "TimeZone timezone",
      "info" : "SingleVariableDeclaration[10920-10937]:SingleVariableDeclaration[10920-10937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10939-14932]:Block[10939-14522]"
    }, {
      "left" : "long millis = endMillis - startMillis;",
      "right" : "long millis = endMillis - startMillis;",
      "info" : "VariableDeclarationStatement[10950-10988]:VariableDeclarationStatement[10950-10988]"
    }, {
      "left" : "if (millis < 28 * DateUtils.MILLIS_PER_DAY)",
      "right" : "if (millis < 28 * DateUtils.MILLIS_PER_DAY)",
      "info" : "IfStatement[10997-11117]:IfStatement[10997-11117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11041-11117]:Block[11041-11117]"
    }, {
      "left" : "return formatDuration(millis, format, padWithZeros);",
      "right" : "return formatDuration(millis, format, padWithZeros);",
      "info" : "ReturnStatement[11055-11107]:ReturnStatement[11055-11107]"
    }, {
      "left" : "Token[] tokens = lexx(format);",
      "right" : "Token[] tokens = lexx(format);",
      "info" : "VariableDeclarationStatement[11127-11157]:VariableDeclarationStatement[11127-11157]"
    }, {
      "left" : "Calendar start = Calendar.getInstance(timezone);",
      "right" : "Calendar start = Calendar.getInstance(timezone);",
      "info" : "VariableDeclarationStatement[11279-11327]:VariableDeclarationStatement[11279-11327]"
    }, {
      "left" : "start.setTime(new Date(startMillis));",
      "right" : "start.setTime(new Date(startMillis));",
      "info" : "ExpressionStatement[11336-11373]:ExpressionStatement[11336-11373]"
    }, {
      "left" : "Calendar end = Calendar.getInstance(timezone);",
      "right" : "Calendar end = Calendar.getInstance(timezone);",
      "info" : "VariableDeclarationStatement[11382-11428]:VariableDeclarationStatement[11382-11428]"
    }, {
      "left" : "end.setTime(new Date(endMillis));",
      "right" : "end.setTime(new Date(endMillis));",
      "info" : "ExpressionStatement[11437-11470]:ExpressionStatement[11437-11470]"
    }, {
      "left" : "int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);",
      "right" : "int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);",
      "info" : "VariableDeclarationStatement[11509-11592]:VariableDeclarationStatement[11509-11592]"
    }, {
      "left" : "int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);",
      "right" : "int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);",
      "info" : "VariableDeclarationStatement[11601-11669]:VariableDeclarationStatement[11601-11669]"
    }, {
      "left" : "int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);",
      "right" : "int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);",
      "info" : "VariableDeclarationStatement[11678-11746]:VariableDeclarationStatement[11678-11746]"
    }, {
      "left" : "int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);",
      "right" : "int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);",
      "info" : "VariableDeclarationStatement[11755-11831]:VariableDeclarationStatement[11755-11831]"
    }, {
      "left" : "int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);",
      "right" : "int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);",
      "info" : "VariableDeclarationStatement[11840-11917]:VariableDeclarationStatement[11840-11917]"
    }, {
      "left" : "int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);",
      "right" : "int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);",
      "info" : "VariableDeclarationStatement[11926-11991]:VariableDeclarationStatement[11926-11991]"
    }, {
      "left" : "int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);",
      "right" : "int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);",
      "info" : "VariableDeclarationStatement[12000-12062]:VariableDeclarationStatement[12000-12062]"
    }, {
      "left" : "while (milliseconds < 0)",
      "right" : "while (milliseconds < 0)",
      "info" : "WhileStatement[12139-12235]:WhileStatement[12139-12235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12164-12235]:Block[12164-12235]"
    }, {
      "left" : "milliseconds += 1000;",
      "right" : "milliseconds += 1000;",
      "info" : "ExpressionStatement[12178-12199]:ExpressionStatement[12178-12199]"
    }, {
      "left" : "seconds -= 1;",
      "right" : "seconds -= 1;",
      "info" : "ExpressionStatement[12212-12225]:ExpressionStatement[12212-12225]"
    }, {
      "left" : "while (seconds < 0)",
      "right" : "while (seconds < 0)",
      "info" : "WhileStatement[12244-12328]:WhileStatement[12244-12328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12264-12328]:Block[12264-12328]"
    }, {
      "left" : "seconds += 60;",
      "right" : "seconds += 60;",
      "info" : "ExpressionStatement[12278-12292]:ExpressionStatement[12278-12292]"
    }, {
      "left" : "minutes -= 1;",
      "right" : "minutes -= 1;",
      "info" : "ExpressionStatement[12305-12318]:ExpressionStatement[12305-12318]"
    }, {
      "left" : "while (minutes < 0)",
      "right" : "while (minutes < 0)",
      "info" : "WhileStatement[12337-12419]:WhileStatement[12337-12419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12357-12419]:Block[12357-12419]"
    }, {
      "left" : "minutes += 60;",
      "right" : "minutes += 60;",
      "info" : "ExpressionStatement[12371-12385]:ExpressionStatement[12371-12385]"
    }, {
      "left" : "hours -= 1;",
      "right" : "hours -= 1;",
      "info" : "ExpressionStatement[12398-12409]:ExpressionStatement[12398-12409]"
    }, {
      "left" : "while (hours < 0)",
      "right" : "while (hours < 0)",
      "info" : "WhileStatement[12428-12505]:WhileStatement[12428-12505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12446-12505]:Block[12446-12505]"
    }, {
      "left" : "hours += 24;",
      "right" : "hours += 24;",
      "info" : "ExpressionStatement[12460-12472]:ExpressionStatement[12460-12472]"
    }, {
      "left" : "days -= 1;",
      "right" : "days -= 1;",
      "info" : "ExpressionStatement[12485-12495]:ExpressionStatement[12485-12495]"
    }, {
      "left" : "while (days < 0)",
      "right" : "while (days < 0)",
      "info" : "WhileStatement[12514-12953]:WhileStatement[12514-13075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12531-12953]:Block[12531-13075]"
    }, {
      "left" : "days += 31;",
      "right" : "days += end.getActualMaximum(Calendar.DAY_OF_MONTH);",
      "info" : "ExpressionStatement[12545-12556]:ExpressionStatement[12586-12638]"
    }, {
      "left" : "months -= 1;",
      "right" : "months -= 1;",
      "info" : "ExpressionStatement[12931-12943]:ExpressionStatement[13013-13025]"
    }, {
      "left" : "while (months < 0)",
      "right" : "while (months < 0)",
      "info" : "WhileStatement[12962-13042]:WhileStatement[13084-13164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12981-13042]:Block[13103-13164]"
    }, {
      "left" : "months += 12;",
      "right" : "months += 12;",
      "info" : "ExpressionStatement[12995-13008]:ExpressionStatement[13117-13130]"
    }, {
      "left" : "years -= 1;",
      "right" : "years -= 1;",
      "info" : "ExpressionStatement[13021-13032]:ExpressionStatement[13143-13154]"
    }, {
      "left" : "if (!Token.containsTokenWithValue(tokens, y))",
      "right" : "if (!Token.containsTokenWithValue(tokens, y))",
      "info" : "IfStatement[13777-14138]:IfStatement[13367-13728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13823-14138]:Block[13413-13728]"
    }, {
      "left" : "if (Token.containsTokenWithValue(tokens, M))",
      "right" : "if (Token.containsTokenWithValue(tokens, M))",
      "info" : "IfStatement[13837-14128]:IfStatement[13427-13718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13882-13962]:Block[13472-13552]"
    }, {
      "left" : "months += 12 * years;",
      "right" : "months += 12 * years;",
      "info" : "ExpressionStatement[13900-13921]:ExpressionStatement[13490-13511]"
    }, {
      "left" : "years = 0;",
      "right" : "years = 0;",
      "info" : "ExpressionStatement[13938-13948]:ExpressionStatement[13528-13538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13968-14128]:Block[13558-13718]"
    }, {
      "left" : "days += 365 * years;",
      "right" : "days += 365 * years;",
      "info" : "ExpressionStatement[14067-14087]:ExpressionStatement[13657-13677]"
    }, {
      "left" : "years = 0;",
      "right" : "years = 0;",
      "info" : "ExpressionStatement[14104-14114]:ExpressionStatement[13694-13704]"
    }, {
      "left" : "if (!Token.containsTokenWithValue(tokens, M))",
      "right" : "if (!Token.containsTokenWithValue(tokens, M))",
      "info" : "IfStatement[14147-14313]:IfStatement[13737-13903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14193-14313]:Block[13783-13903]"
    }, {
      "left" : "days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR);",
      "right" : "days += end.get(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR);",
      "info" : "ExpressionStatement[14207-14279]:ExpressionStatement[13797-13869]"
    }, {
      "left" : "months = 0;",
      "right" : "months = 0;",
      "info" : "ExpressionStatement[14292-14303]:ExpressionStatement[13882-13893]"
    }, {
      "left" : "if (!Token.containsTokenWithValue(tokens, d))",
      "right" : "if (!Token.containsTokenWithValue(tokens, d))",
      "info" : "IfStatement[14322-14433]:IfStatement[13912-14023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14368-14433]:Block[13958-14023]"
    }, {
      "left" : "hours += 24 * days;",
      "right" : "hours += 24 * days;",
      "info" : "ExpressionStatement[14382-14401]:ExpressionStatement[13972-13991]"
    }, {
      "left" : "days = 0;",
      "right" : "days = 0;",
      "info" : "ExpressionStatement[14414-14423]:ExpressionStatement[14004-14013]"
    }, {
      "left" : "if (!Token.containsTokenWithValue(tokens, H))",
      "right" : "if (!Token.containsTokenWithValue(tokens, H))",
      "info" : "IfStatement[14442-14557]:IfStatement[14032-14147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14488-14557]:Block[14078-14147]"
    }, {
      "left" : "minutes += 60 * hours;",
      "right" : "minutes += 60 * hours;",
      "info" : "ExpressionStatement[14502-14524]:ExpressionStatement[14092-14114]"
    }, {
      "left" : "hours = 0;",
      "right" : "hours = 0;",
      "info" : "ExpressionStatement[14537-14547]:ExpressionStatement[14127-14137]"
    }, {
      "left" : "if (!Token.containsTokenWithValue(tokens, m))",
      "right" : "if (!Token.containsTokenWithValue(tokens, m))",
      "info" : "IfStatement[14566-14685]:IfStatement[14156-14275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14612-14685]:Block[14202-14275]"
    }, {
      "left" : "seconds += 60 * minutes;",
      "right" : "seconds += 60 * minutes;",
      "info" : "ExpressionStatement[14626-14650]:ExpressionStatement[14216-14240]"
    }, {
      "left" : "minutes = 0;",
      "right" : "minutes = 0;",
      "info" : "ExpressionStatement[14663-14675]:ExpressionStatement[14253-14265]"
    }, {
      "left" : "if (!Token.containsTokenWithValue(tokens, s))",
      "right" : "if (!Token.containsTokenWithValue(tokens, s))",
      "info" : "IfStatement[14694-14820]:IfStatement[14284-14410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14740-14820]:Block[14330-14410]"
    }, {
      "left" : "milliseconds += 1000 * seconds;",
      "right" : "milliseconds += 1000 * seconds;",
      "info" : "ExpressionStatement[14754-14785]:ExpressionStatement[14344-14375]"
    }, {
      "left" : "seconds = 0;",
      "right" : "seconds = 0;",
      "info" : "ExpressionStatement[14798-14810]:ExpressionStatement[14388-14400]"
    }, {
      "left" : "return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",
      "right" : "return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",
      "info" : "ReturnStatement[14830-14926]:ReturnStatement[14420-14516]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15511-15517]:Modifier[15101-15107]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[15518-15524]:SimpleType[15108-15114]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[15525-15531]:SimpleName[15115-15121]"
    }, {
      "left" : "Token[] tokens",
      "right" : "Token[] tokens",
      "info" : "SingleVariableDeclaration[15532-15546]:SingleVariableDeclaration[15122-15136]"
    }, {
      "left" : "int years",
      "right" : "int years",
      "info" : "SingleVariableDeclaration[15548-15557]:SingleVariableDeclaration[15138-15147]"
    }, {
      "left" : "int months",
      "right" : "int months",
      "info" : "SingleVariableDeclaration[15559-15569]:SingleVariableDeclaration[15149-15159]"
    }, {
      "left" : "int days",
      "right" : "int days",
      "info" : "SingleVariableDeclaration[15571-15579]:SingleVariableDeclaration[15161-15169]"
    }, {
      "left" : "int hours",
      "right" : "int hours",
      "info" : "SingleVariableDeclaration[15581-15590]:SingleVariableDeclaration[15171-15180]"
    }, {
      "left" : "int minutes",
      "right" : "int minutes",
      "info" : "SingleVariableDeclaration[15592-15603]:SingleVariableDeclaration[15182-15193]"
    }, {
      "left" : "int seconds",
      "right" : "int seconds",
      "info" : "SingleVariableDeclaration[15605-15616]:SingleVariableDeclaration[15195-15206]"
    }, {
      "left" : "int milliseconds",
      "right" : "int milliseconds",
      "info" : "SingleVariableDeclaration[15630-15646]:SingleVariableDeclaration[15220-15236]"
    }, {
      "left" : "boolean padWithZeros",
      "right" : "boolean padWithZeros",
      "info" : "SingleVariableDeclaration[15648-15668]:SingleVariableDeclaration[15238-15258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15670-18383]:Block[15260-17973]"
    }, {
      "left" : "StringBuffer buffer = new StringBuffer();",
      "right" : "StringBuffer buffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[15680-15721]:VariableDeclarationStatement[15270-15311]"
    }, {
      "left" : "boolean lastOutputSeconds = false;",
      "right" : "boolean lastOutputSeconds = false;",
      "info" : "VariableDeclarationStatement[15730-15764]:VariableDeclarationStatement[15320-15354]"
    }, {
      "left" : "int sz = tokens.length;",
      "right" : "int sz = tokens.length;",
      "info" : "VariableDeclarationStatement[15773-15796]:VariableDeclarationStatement[15363-15386]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[15805-18343]:ForStatement[15395-17933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15834-18343]:Block[15424-17933]"
    }, {
      "left" : "Token token = tokens[i];",
      "right" : "Token token = tokens[i];",
      "info" : "VariableDeclarationStatement[15848-15872]:VariableDeclarationStatement[15438-15462]"
    }, {
      "left" : "Object value = token.getValue();",
      "right" : "Object value = token.getValue();",
      "info" : "VariableDeclarationStatement[15885-15917]:VariableDeclarationStatement[15475-15507]"
    }, {
      "left" : "int count = token.getCount();",
      "right" : "int count = token.getCount();",
      "info" : "VariableDeclarationStatement[15930-15959]:VariableDeclarationStatement[15520-15549]"
    }, {
      "left" : "if (value instanceof StringBuffer)",
      "right" : "if (value instanceof StringBuffer)",
      "info" : "IfStatement[15972-18333]:IfStatement[15562-17923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16007-16071]:Block[15597-15661]"
    }, {
      "left" : "buffer.append(value.toString());",
      "right" : "buffer.append(value.toString());",
      "info" : "ExpressionStatement[16025-16057]:ExpressionStatement[15615-15647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16077-18333]:Block[15667-17923]"
    }, {
      "left" : "if (value == y)",
      "right" : "if (value == y)",
      "info" : "IfStatement[16095-18319]:IfStatement[15685-17909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16111-16340]:Block[15701-15930]"
    }, {
      "left" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(years), count, '0') : Integer\n                            .toString(years));",
      "right" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(years), count, '0') : Integer\n                            .toString(years));",
      "info" : "ExpressionStatement[16133-16275]:ExpressionStatement[15723-15865]"
    }, {
      "left" : "lastOutputSeconds = false;",
      "right" : "lastOutputSeconds = false;",
      "info" : "ExpressionStatement[16296-16322]:ExpressionStatement[15886-15912]"
    }, {
      "left" : "if (value == M)",
      "right" : "if (value == M)",
      "info" : "IfStatement[16346-18319]:IfStatement[15936-17909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16362-16593]:Block[15952-16183]"
    }, {
      "left" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer\n                            .toString(months));",
      "right" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer\n                            .toString(months));",
      "info" : "ExpressionStatement[16384-16528]:ExpressionStatement[15974-16118]"
    }, {
      "left" : "lastOutputSeconds = false;",
      "right" : "lastOutputSeconds = false;",
      "info" : "ExpressionStatement[16549-16575]:ExpressionStatement[16139-16165]"
    }, {
      "left" : "if (value == d)",
      "right" : "if (value == d)",
      "info" : "IfStatement[16599-18319]:IfStatement[16189-17909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16615-16842]:Block[16205-16432]"
    }, {
      "left" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(days), count, '0') : Integer\n                            .toString(days));",
      "right" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(days), count, '0') : Integer\n                            .toString(days));",
      "info" : "ExpressionStatement[16637-16777]:ExpressionStatement[16227-16367]"
    }, {
      "left" : "lastOutputSeconds = false;",
      "right" : "lastOutputSeconds = false;",
      "info" : "ExpressionStatement[16798-16824]:ExpressionStatement[16388-16414]"
    }, {
      "left" : "if (value == H)",
      "right" : "if (value == H)",
      "info" : "IfStatement[16848-18319]:IfStatement[16438-17909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16864-17093]:Block[16454-16683]"
    }, {
      "left" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(hours), count, '0') : Integer\n                            .toString(hours));",
      "right" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(hours), count, '0') : Integer\n                            .toString(hours));",
      "info" : "ExpressionStatement[16886-17028]:ExpressionStatement[16476-16618]"
    }, {
      "left" : "lastOutputSeconds = false;",
      "right" : "lastOutputSeconds = false;",
      "info" : "ExpressionStatement[17049-17075]:ExpressionStatement[16639-16665]"
    }, {
      "left" : "if (value == m)",
      "right" : "if (value == m)",
      "info" : "IfStatement[17099-18319]:IfStatement[16689-17909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17115-17348]:Block[16705-16938]"
    }, {
      "left" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(minutes), count, '0') : Integer\n                            .toString(minutes));",
      "right" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(minutes), count, '0') : Integer\n                            .toString(minutes));",
      "info" : "ExpressionStatement[17137-17283]:ExpressionStatement[16727-16873]"
    }, {
      "left" : "lastOutputSeconds = false;",
      "right" : "lastOutputSeconds = false;",
      "info" : "ExpressionStatement[17304-17330]:ExpressionStatement[16894-16920]"
    }, {
      "left" : "if (value == s)",
      "right" : "if (value == s)",
      "info" : "IfStatement[17354-18319]:IfStatement[16944-17909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17370-17602]:Block[16960-17192]"
    }, {
      "left" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(seconds), count, '0') : Integer\n                            .toString(seconds));",
      "right" : "buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(seconds), count, '0') : Integer\n                            .toString(seconds));",
      "info" : "ExpressionStatement[17392-17538]:ExpressionStatement[16982-17128]"
    }, {
      "left" : "lastOutputSeconds = true;",
      "right" : "lastOutputSeconds = true;",
      "info" : "ExpressionStatement[17559-17584]:ExpressionStatement[17149-17174]"
    }, {
      "left" : "if (value == S)",
      "right" : "if (value == S)",
      "info" : "IfStatement[17608-18319]:IfStatement[17198-17909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17624-18319]:Block[17214-17909]"
    }, {
      "left" : "if (lastOutputSeconds)",
      "right" : "if (lastOutputSeconds)",
      "info" : "IfStatement[17646-18254]:IfStatement[17236-17844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17669-18009]:Block[17259-17599]"
    }, {
      "left" : "milliseconds += 1000;",
      "right" : "milliseconds += 1000;",
      "info" : "ExpressionStatement[17695-17716]:ExpressionStatement[17285-17306]"
    }, {
      "left" : "String str = padWithZeros\n                                ? StringUtils.leftPad(Integer.toString(milliseconds), count, '0')\n                                : Integer.toString(milliseconds);",
      "right" : "String str = padWithZeros\n                                ? StringUtils.leftPad(Integer.toString(milliseconds), count, '0')\n                                : Integer.toString(milliseconds);",
      "info" : "VariableDeclarationStatement[17741-17930]:VariableDeclarationStatement[17331-17520]"
    }, {
      "left" : "buffer.append(str.substring(1));",
      "right" : "buffer.append(str.substring(1));",
      "info" : "ExpressionStatement[17955-17987]:ExpressionStatement[17545-17577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18015-18254]:Block[17605-17844]"
    }, {
      "left" : "buffer.append(padWithZeros\n                                ? StringUtils.leftPad(Integer.toString(milliseconds), count, '0')\n                                : Integer.toString(milliseconds));",
      "right" : "buffer.append(padWithZeros\n                                ? StringUtils.leftPad(Integer.toString(milliseconds), count, '0')\n                                : Integer.toString(milliseconds));",
      "info" : "ExpressionStatement[18041-18232]:ExpressionStatement[17631-17822]"
    }, {
      "left" : "lastOutputSeconds = false;",
      "right" : "lastOutputSeconds = false;",
      "info" : "ExpressionStatement[18275-18301]:ExpressionStatement[17865-17891]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[18352-18377]:ReturnStatement[17942-17967]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19190-19196]:Modifier[18356-18362]"
    }, {
      "left" : "Token[]",
      "right" : "Token[]",
      "info" : "ArrayType[19197-19204]:ArrayType[18363-18370]"
    }, {
      "left" : "lexx",
      "right" : "lexx",
      "info" : "SimpleName[19205-19209]:SimpleName[18371-18375]"
    }, {
      "left" : "String format",
      "right" : "String format",
      "info" : "SingleVariableDeclaration[19210-19223]:SingleVariableDeclaration[18376-18389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19225-21126]:Block[18391-20292]"
    }, {
      "left" : "char[] array = format.toCharArray();",
      "right" : "char[] array = format.toCharArray();",
      "info" : "VariableDeclarationStatement[19235-19271]:VariableDeclarationStatement[18401-18437]"
    }, {
      "left" : "java.util.ArrayList list = new java.util.ArrayList(array.length);",
      "right" : "java.util.ArrayList list = new java.util.ArrayList(array.length);",
      "info" : "VariableDeclarationStatement[19280-19345]:VariableDeclarationStatement[18446-18511]"
    }, {
      "left" : "boolean inLiteral = false;",
      "right" : "boolean inLiteral = false;",
      "info" : "VariableDeclarationStatement[19355-19381]:VariableDeclarationStatement[18521-18547]"
    }, {
      "left" : "StringBuffer buffer = null;",
      "right" : "StringBuffer buffer = null;",
      "info" : "VariableDeclarationStatement[19390-19417]:VariableDeclarationStatement[18556-18583]"
    }, {
      "left" : "Token previous = null;",
      "right" : "Token previous = null;",
      "info" : "VariableDeclarationStatement[19426-19448]:VariableDeclarationStatement[18592-18614]"
    }, {
      "left" : "int sz = array.length;",
      "right" : "int sz = array.length;",
      "info" : "VariableDeclarationStatement[19457-19479]:VariableDeclarationStatement[18623-18645]"
    }, {
      "left" : "for(int i=0; i<sz; i++)",
      "right" : "for(int i=0; i<sz; i++)",
      "info" : "ForStatement[19488-21065]:ForStatement[18654-20231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19512-21065]:Block[18678-20231]"
    }, {
      "left" : "char ch = array[i];",
      "right" : "char ch = array[i];",
      "info" : "VariableDeclarationStatement[19526-19545]:VariableDeclarationStatement[18692-18711]"
    }, {
      "left" : "if(inLiteral && ch != '\\'')",
      "right" : "if(inLiteral && ch != '\\'')",
      "info" : "IfStatement[19558-19662]:IfStatement[18724-18828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19586-19662]:Block[18752-18828]"
    }, {
      "left" : "buffer.append(ch);",
      "right" : "buffer.append(ch);",
      "info" : "ExpressionStatement[19604-19622]:ExpressionStatement[18770-18788]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[19639-19648]:ContinueStatement[18805-18814]"
    }, {
      "left" : "Object value = null;",
      "right" : "Object value = null;",
      "info" : "VariableDeclarationStatement[19675-19695]:VariableDeclarationStatement[18841-18861]"
    }, {
      "left" : "switch(ch) {\n                // TODO: Need to handle escaping of '\n                case '\\'' : \n                  if(inLiteral) {\n                      buffer = null;\n                      inLiteral = false;\n                  } else {\n                      buffer = new StringBuffer();\n                      list.add(new Token(buffer));\n                      inLiteral = true;\n                  }\n                  break;\n                case 'y'  : value = y; break;\n                case 'M'  : value = M; break;\n                case 'd'  : value = d; break;\n                case 'H'  : value = H; break;\n                case 'm'  : value = m; break;\n                case 's'  : value = s; break;\n                case 'S'  : value = S; break;\n                default   : \n                  if(buffer == null) {\n                      buffer = new StringBuffer();\n                      list.add(new Token(buffer));\n                  }\n                  buffer.append(ch);\n            }",
      "right" : "switch(ch) {\n                // TODO: Need to handle escaping of '\n                case '\\'' : \n                  if(inLiteral) {\n                      buffer = null;\n                      inLiteral = false;\n                  } else {\n                      buffer = new StringBuffer();\n                      list.add(new Token(buffer));\n                      inLiteral = true;\n                  }\n                  break;\n                case 'y'  : value = y; break;\n                case 'M'  : value = M; break;\n                case 'd'  : value = d; break;\n                case 'H'  : value = H; break;\n                case 'm'  : value = m; break;\n                case 's'  : value = s; break;\n                case 'S'  : value = S; break;\n                default   : \n                  if(buffer == null) {\n                      buffer = new StringBuffer();\n                      list.add(new Token(buffer));\n                  }\n                  buffer.append(ch);\n            }",
      "info" : "SwitchStatement[19708-20692]:SwitchStatement[18874-19858]"
    }, {
      "left" : "case '\\'' :",
      "right" : "case '\\'' :",
      "info" : "SwitchCase[19791-19802]:SwitchCase[18957-18968]"
    }, {
      "left" : "if(inLiteral)",
      "right" : "if(inLiteral)",
      "info" : "IfStatement[19822-20104]:IfStatement[18988-19270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19836-19935]:Block[19002-19101]"
    }, {
      "left" : "buffer = null;",
      "right" : "buffer = null;",
      "info" : "ExpressionStatement[19860-19874]:ExpressionStatement[19026-19040]"
    }, {
      "left" : "inLiteral = false;",
      "right" : "inLiteral = false;",
      "info" : "ExpressionStatement[19897-19915]:ExpressionStatement[19063-19081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19941-20104]:Block[19107-19270]"
    }, {
      "left" : "buffer = new StringBuffer();",
      "right" : "buffer = new StringBuffer();",
      "info" : "ExpressionStatement[19965-19993]:ExpressionStatement[19131-19159]"
    }, {
      "left" : "list.add(new Token(buffer));",
      "right" : "list.add(new Token(buffer));",
      "info" : "ExpressionStatement[20016-20044]:ExpressionStatement[19182-19210]"
    }, {
      "left" : "inLiteral = true;",
      "right" : "inLiteral = true;",
      "info" : "ExpressionStatement[20067-20084]:ExpressionStatement[19233-19250]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20123-20129]:BreakStatement[19289-19295]"
    }, {
      "left" : "case 'y'  :",
      "right" : "case 'y'  :",
      "info" : "SwitchCase[20146-20157]:SwitchCase[19312-19323]"
    }, {
      "left" : "value = y;",
      "right" : "value = y;",
      "info" : "ExpressionStatement[20158-20168]:ExpressionStatement[19324-19334]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20169-20175]:BreakStatement[19335-19341]"
    }, {
      "left" : "case 'M'  :",
      "right" : "case 'M'  :",
      "info" : "SwitchCase[20192-20203]:SwitchCase[19358-19369]"
    }, {
      "left" : "value = M;",
      "right" : "value = M;",
      "info" : "ExpressionStatement[20204-20214]:ExpressionStatement[19370-19380]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20215-20221]:BreakStatement[19381-19387]"
    }, {
      "left" : "case 'd'  :",
      "right" : "case 'd'  :",
      "info" : "SwitchCase[20238-20249]:SwitchCase[19404-19415]"
    }, {
      "left" : "value = d;",
      "right" : "value = d;",
      "info" : "ExpressionStatement[20250-20260]:ExpressionStatement[19416-19426]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20261-20267]:BreakStatement[19427-19433]"
    }, {
      "left" : "case 'H'  :",
      "right" : "case 'H'  :",
      "info" : "SwitchCase[20284-20295]:SwitchCase[19450-19461]"
    }, {
      "left" : "value = H;",
      "right" : "value = H;",
      "info" : "ExpressionStatement[20296-20306]:ExpressionStatement[19462-19472]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20307-20313]:BreakStatement[19473-19479]"
    }, {
      "left" : "case 'm'  :",
      "right" : "case 'm'  :",
      "info" : "SwitchCase[20330-20341]:SwitchCase[19496-19507]"
    }, {
      "left" : "value = m;",
      "right" : "value = m;",
      "info" : "ExpressionStatement[20342-20352]:ExpressionStatement[19508-19518]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20353-20359]:BreakStatement[19519-19525]"
    }, {
      "left" : "case 's'  :",
      "right" : "case 's'  :",
      "info" : "SwitchCase[20376-20387]:SwitchCase[19542-19553]"
    }, {
      "left" : "value = s;",
      "right" : "value = s;",
      "info" : "ExpressionStatement[20388-20398]:ExpressionStatement[19554-19564]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20399-20405]:BreakStatement[19565-19571]"
    }, {
      "left" : "case 'S'  :",
      "right" : "case 'S'  :",
      "info" : "SwitchCase[20422-20433]:SwitchCase[19588-19599]"
    }, {
      "left" : "value = S;",
      "right" : "value = S;",
      "info" : "ExpressionStatement[20434-20444]:ExpressionStatement[19600-19610]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20445-20451]:BreakStatement[19611-19617]"
    }, {
      "left" : "default   :",
      "right" : "default   :",
      "info" : "SwitchCase[20468-20479]:SwitchCase[19634-19645]"
    }, {
      "left" : "if(buffer == null)",
      "right" : "if(buffer == null)",
      "info" : "IfStatement[20499-20641]:IfStatement[19665-19807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20518-20641]:Block[19684-19807]"
    }, {
      "left" : "buffer = new StringBuffer();",
      "right" : "buffer = new StringBuffer();",
      "info" : "ExpressionStatement[20542-20570]:ExpressionStatement[19708-19736]"
    }, {
      "left" : "list.add(new Token(buffer));",
      "right" : "list.add(new Token(buffer));",
      "info" : "ExpressionStatement[20593-20621]:ExpressionStatement[19759-19787]"
    }, {
      "left" : "buffer.append(ch);",
      "right" : "buffer.append(ch);",
      "info" : "ExpressionStatement[20660-20678]:ExpressionStatement[19826-19844]"
    }, {
      "left" : "if(value != null)",
      "right" : "if(value != null)",
      "info" : "IfStatement[20706-21055]:IfStatement[19872-20221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20724-21055]:Block[19890-20221]"
    }, {
      "left" : "if(previous != null && previous.getValue() == value)",
      "right" : "if(previous != null && previous.getValue() == value)",
      "info" : "IfStatement[20742-21009]:IfStatement[19908-20175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20795-20856]:Block[19961-20022]"
    }, {
      "left" : "previous.increment();",
      "right" : "previous.increment();",
      "info" : "ExpressionStatement[20817-20838]:ExpressionStatement[19983-20004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20862-21009]:Block[20028-20175]"
    }, {
      "left" : "Token token = new Token(value);",
      "right" : "Token token = new Token(value);",
      "info" : "VariableDeclarationStatement[20884-20915]:VariableDeclarationStatement[20050-20081]"
    }, {
      "left" : "list.add(token);",
      "right" : "list.add(token);",
      "info" : "ExpressionStatement[20936-20952]:ExpressionStatement[20102-20118]"
    }, {
      "left" : "previous = token;",
      "right" : "previous = token;",
      "info" : "ExpressionStatement[20974-20991]:ExpressionStatement[20140-20157]"
    }, {
      "left" : "buffer = null;",
      "right" : "buffer = null;",
      "info" : "ExpressionStatement[21026-21040]:ExpressionStatement[20192-20206]"
    }, {
      "left" : "return (Token[]) list.toArray( new Token[0] );",
      "right" : "return (Token[]) list.toArray( new Token[0] );",
      "info" : "ReturnStatement[21074-21120]:ReturnStatement[20240-20286]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[21203-21209]:Modifier[20369-20375]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[21210-21215]:TYPE_DECLARATION_KIND[20376-20381]"
    }, {
      "left" : "Token",
      "right" : "Token",
      "info" : "SimpleName[21216-21221]:SimpleName[20382-20387]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[21475-21481]:Modifier[20641-20647]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[21482-21489]:PrimitiveType[20648-20655]"
    }, {
      "left" : "containsTokenWithValue",
      "right" : "containsTokenWithValue",
      "info" : "SimpleName[21490-21512]:SimpleName[20656-20678]"
    }, {
      "left" : "Token[] tokens",
      "right" : "Token[] tokens",
      "info" : "SingleVariableDeclaration[21513-21527]:SingleVariableDeclaration[20679-20693]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[21529-21541]:SingleVariableDeclaration[20695-20707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21543-21777]:Block[20709-20943]"
    }, {
      "left" : "int sz = tokens.length;",
      "right" : "int sz = tokens.length;",
      "info" : "VariableDeclarationStatement[21557-21580]:VariableDeclarationStatement[20723-20746]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[21593-21741]:ForStatement[20759-20907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21622-21741]:Block[20788-20907]"
    }, {
      "left" : "if (tokens[i].getValue() == value)",
      "right" : "if (tokens[i].getValue() == value)",
      "info" : "IfStatement[21640-21727]:IfStatement[20806-20893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21675-21727]:Block[20841-20893]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[21697-21709]:ReturnStatement[20863-20875]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[21754-21767]:ReturnStatement[20920-20933]"
    }, {
      "left" : "Token",
      "right" : "Token",
      "info" : "SimpleName[21992-21997]:SimpleName[21158-21163]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[21998-22010]:SingleVariableDeclaration[21164-21176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22012-22083]:Block[21178-21249]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[22026-22045]:ExpressionStatement[21192-21211]"
    }, {
      "left" : "this.count = 1;",
      "right" : "this.count = 1;",
      "info" : "ExpressionStatement[22058-22073]:ExpressionStatement[21224-21239]"
    }, {
      "left" : "Token",
      "right" : "Token",
      "info" : "SimpleName[22335-22340]:SimpleName[21501-21506]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[22341-22353]:SingleVariableDeclaration[21507-21519]"
    }, {
      "left" : "int count",
      "right" : "int count",
      "info" : "SingleVariableDeclaration[22355-22364]:SingleVariableDeclaration[21521-21530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22366-22441]:Block[21532-21607]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[22380-22399]:ExpressionStatement[21546-21565]"
    }, {
      "left" : "this.count = count;",
      "right" : "this.count = count;",
      "info" : "ExpressionStatement[22412-22431]:ExpressionStatement[21578-21597]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22516-22520]:PrimitiveType[21682-21686]"
    }, {
      "left" : "increment",
      "right" : "increment",
      "info" : "SimpleName[22521-22530]:SimpleName[21687-21696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22533-22566]:Block[21699-21732]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[22548-22556]:ExpressionStatement[21714-21722]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[22720-22723]:PrimitiveType[21886-21889]"
    }, {
      "left" : "getCount",
      "right" : "getCount",
      "info" : "SimpleName[22724-22732]:SimpleName[21890-21898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22735-22772]:Block[21901-21938]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[22749-22762]:ReturnStatement[21915-21928]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[22910-22916]:SimpleType[22076-22082]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[22917-22925]:SimpleName[22083-22091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22928-22965]:Block[22094-22131]"
    }, {
      "left" : "return value;",
      "right" : "return value;",
      "info" : "ReturnStatement[22942-22955]:ReturnStatement[22108-22121]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23179-23185]:Modifier[22345-22351]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[23186-23193]:PrimitiveType[22352-22359]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[23194-23200]:SimpleName[22360-22366]"
    }, {
      "left" : "Object obj2",
      "right" : "Object obj2",
      "info" : "SingleVariableDeclaration[23201-23212]:SingleVariableDeclaration[22367-22378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23214-23947]:Block[22380-23113]"
    }, {
      "left" : "if (obj2 instanceof Token)",
      "right" : "if (obj2 instanceof Token)",
      "info" : "IfStatement[23228-23937]:IfStatement[22394-23103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23255-23886]:Block[22421-23052]"
    }, {
      "left" : "Token tok2 = (Token) obj2;",
      "right" : "Token tok2 = (Token) obj2;",
      "info" : "VariableDeclarationStatement[23273-23299]:VariableDeclarationStatement[22439-22465]"
    }, {
      "left" : "if (this.value.getClass() != tok2.value.getClass())",
      "right" : "if (this.value.getClass() != tok2.value.getClass())",
      "info" : "IfStatement[23316-23421]:IfStatement[22482-22587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23368-23421]:Block[22534-22587]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[23390-23403]:ReturnStatement[22556-22569]"
    }, {
      "left" : "if (this.count != tok2.count)",
      "right" : "if (this.count != tok2.count)",
      "info" : "IfStatement[23438-23521]:IfStatement[22604-22687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23468-23521]:Block[22634-22687]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[23490-23503]:ReturnStatement[22656-22669]"
    }, {
      "left" : "if (this.value instanceof StringBuffer)",
      "right" : "if (this.value instanceof StringBuffer)",
      "info" : "IfStatement[23538-23872]:IfStatement[22704-23038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23578-23677]:Block[22744-22843]"
    }, {
      "left" : "return this.value.toString().equals(tok2.value.toString());",
      "right" : "return this.value.toString().equals(tok2.value.toString());",
      "info" : "ReturnStatement[23600-23659]:ReturnStatement[22766-22825]"
    }, {
      "left" : "if (this.value instanceof Number)",
      "right" : "if (this.value instanceof Number)",
      "info" : "IfStatement[23683-23872]:IfStatement[22849-23038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23717-23794]:Block[22883-22960]"
    }, {
      "left" : "return this.value.equals(tok2.value);",
      "right" : "return this.value.equals(tok2.value);",
      "info" : "ReturnStatement[23739-23776]:ReturnStatement[22905-22942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23800-23872]:Block[22966-23038]"
    }, {
      "left" : "return this.value == tok2.value;",
      "right" : "return this.value == tok2.value;",
      "info" : "ReturnStatement[23822-23854]:ReturnStatement[22988-23020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23892-23937]:Block[23058-23103]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[23910-23923]:ReturnStatement[23076-23089]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24202-24208]:Modifier[23368-23374]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[24209-24212]:PrimitiveType[23375-23378]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[24213-24221]:SimpleName[23379-23387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24224-24277]:Block[23390-23443]"
    }, {
      "left" : "return this.value.hashCode();",
      "right" : "return this.value.hashCode();",
      "info" : "ReturnStatement[24238-24267]:ReturnStatement[23404-23433]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24422-24428]:Modifier[23588-23594]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[24429-24435]:SimpleType[23595-23601]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[24436-24444]:SimpleName[23602-23610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24447-24532]:Block[23613-23698]"
    }, {
      "left" : "return StringUtils.repeat(this.value.toString(), this.count);",
      "right" : "return StringUtils.repeat(this.value.toString(), this.count);",
      "info" : "ReturnStatement[24461-24522]:ReturnStatement[23627-23688]"
    } ]
  },
  "interFileMappings" : { }
}