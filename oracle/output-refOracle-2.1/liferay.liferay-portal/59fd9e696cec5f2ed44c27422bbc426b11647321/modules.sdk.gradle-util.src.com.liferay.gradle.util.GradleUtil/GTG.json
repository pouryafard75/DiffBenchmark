{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "GradleUtil",
      "right" : "GradleUtil",
      "info" : "TypeDeclaration[1676-8529]:TypeDeclaration[1676-8901]"
    }, {
      "left" : "public static Configuration addConfiguration(Project project, String name)",
      "right" : "public static Configuration addConfiguration(Project project, String name)",
      "info" : "MethodDeclaration[1740-1948]:MethodDeclaration[1740-1948]"
    }, {
      "left" : "public static Dependency addDependency(\n\t\tProject project, String configurationName, File file)",
      "right" : "public static Dependency addDependency(\n\t\tProject project, String configurationName, File file)",
      "info" : "MethodDeclaration[1951-2126]:MethodDeclaration[1951-2126]"
    }, {
      "left" : "public static Dependency addDependency(\n\t\tProject project, String configurationName,\n\t\tFileCollection fileCollection)",
      "right" : "public static Dependency addDependency(\n\t\tProject project, String configurationName,\n\t\tFileCollection fileCollection)",
      "info" : "MethodDeclaration[2129-2321]:MethodDeclaration[2129-2321]"
    }, {
      "left" : "public static Dependency addDependency(\n\t\tProject project, String configurationName, String dependencyNotation)",
      "right" : "public static Dependency addDependency(\n\t\tProject project, String configurationName, String dependencyNotation)",
      "info" : "MethodDeclaration[2324-2514]:MethodDeclaration[2324-2514]"
    }, {
      "left" : "public static Dependency addDependency(\n\t\tProject project, String configurationName, String group, String name,\n\t\tString version)",
      "right" : "public static Dependency addDependency(\n\t\tProject project, String configurationName, String group, String name,\n\t\tString version)",
      "info" : "MethodDeclaration[2517-2736]:MethodDeclaration[2517-2736]"
    }, {
      "left" : "public static Dependency addDependency(\n\t\tProject project, String configurationName, String group, String name,\n\t\tString version, boolean transitive)",
      "right" : "public static Dependency addDependency(\n\t\tProject project, String configurationName, String group, String name,\n\t\tString version, String classifier, boolean transitive)",
      "info" : "MethodDeclaration[2739-3209]:MethodDeclaration[2993-3581]"
    }, {
      "left" : "public static <T> T addExtension(\n\t\tProject project, String name, Class<T> clazz)",
      "right" : "public static <T> T addExtension(\n\t\tProject project, String name, Class<T> clazz)",
      "info" : "MethodDeclaration[3212-3425]:MethodDeclaration[3584-3797]"
    }, {
      "left" : "public static SourceSet addSourceSet(Project project, String name)",
      "right" : "public static SourceSet addSourceSet(Project project, String name)",
      "info" : "MethodDeclaration[3428-3728]:MethodDeclaration[3800-4100]"
    }, {
      "left" : "public static <T extends Task> T addTask(\n\t\tProject project, String name, Class<T> clazz)",
      "right" : "public static <T extends Task> T addTask(\n\t\tProject project, String name, Class<T> clazz)",
      "info" : "MethodDeclaration[3731-3949]:MethodDeclaration[4103-4321]"
    }, {
      "left" : "public static <T extends Plugin<? extends Project>> void applyPlugin(\n\t\tProject project, Class<T> clazz)",
      "right" : "public static <T extends Plugin<? extends Project>> void applyPlugin(\n\t\tProject project, Class<T> clazz)",
      "info" : "MethodDeclaration[3952-4160]:MethodDeclaration[4324-4532]"
    }, {
      "left" : "public static void applyScript(Project project, String name, Object obj)",
      "right" : "public static void applyScript(Project project, String name, Object obj)",
      "info" : "MethodDeclaration[4163-4584]:MethodDeclaration[4535-4956]"
    }, {
      "left" : "public static void executeIfEmpty(\n\t\tfinal Configuration configuration, final Action<Configuration> action)",
      "right" : "public static void executeIfEmpty(\n\t\tfinal Configuration configuration, final Action<Configuration> action)",
      "info" : "MethodDeclaration[4587-5255]:MethodDeclaration[4959-5627]"
    }, {
      "left" : "public void execute(\n\t\t\t\t\tResolvableDependencies resolvableDependencies)",
      "right" : "public void execute(\n\t\t\t\t\tResolvableDependencies resolvableDependencies)",
      "info" : "MethodDeclaration[4868-5244]:MethodDeclaration[5240-5616]"
    }, {
      "left" : "public static Configuration getConfiguration(Project project, String name)",
      "right" : "public static Configuration getConfiguration(Project project, String name)",
      "info" : "MethodDeclaration[5258-5469]:MethodDeclaration[5630-5841]"
    }, {
      "left" : "public static <T> T getConvention(Project project, Class<T> clazz)",
      "right" : "public static <T> T getConvention(Project project, Class<T> clazz)",
      "info" : "MethodDeclaration[5472-5633]:MethodDeclaration[5844-6005]"
    }, {
      "left" : "public static <T> T getExtension(Project project, Class<T> clazz)",
      "right" : "public static <T> T getExtension(Project project, Class<T> clazz)",
      "info" : "MethodDeclaration[5636-5820]:MethodDeclaration[6008-6192]"
    }, {
      "left" : "public static FileTree getFilteredFileTree(\n\t\tFileTree fileTree, final String[] excludes, final String[] includes)",
      "right" : "public static FileTree getFilteredFileTree(\n\t\tFileTree fileTree, final String[] excludes, final String[] includes)",
      "info" : "MethodDeclaration[5823-6356]:MethodDeclaration[6195-6728]"
    }, {
      "left" : "public void doCall(PatternFilterable patternFilterable)",
      "right" : "public void doCall(PatternFilterable patternFilterable)",
      "info" : "MethodDeclaration[5997-6309]:MethodDeclaration[6369-6681]"
    }, {
      "left" : "public static Project getProject(Project rootProject, File projectDir)",
      "right" : "public static Project getProject(Project rootProject, File projectDir)",
      "info" : "MethodDeclaration[6359-6589]:MethodDeclaration[6731-6961]"
    }, {
      "left" : "public static SourceSet getSourceSet(Project project, String name)",
      "right" : "public static SourceSet getSourceSet(Project project, String name)",
      "info" : "MethodDeclaration[6592-6895]:MethodDeclaration[6964-7267]"
    }, {
      "left" : "public static Task getTask(Project project, String name)",
      "right" : "public static Task getTask(Project project, String name)",
      "info" : "MethodDeclaration[6898-7052]:MethodDeclaration[7270-7424]"
    }, {
      "left" : "public static String getTaskName(String prefix, File file)",
      "right" : "public static String getTaskName(String prefix, File file)",
      "info" : "MethodDeclaration[7055-7277]:MethodDeclaration[7427-7649]"
    }, {
      "left" : "public static void removeDependencies(\n\t\tProject project, String configurationName,\n\t\tString[] dependencyNotations)",
      "right" : "public static void removeDependencies(\n\t\tProject project, String configurationName,\n\t\tString[] dependencyNotations)",
      "info" : "MethodDeclaration[7280-7857]:MethodDeclaration[7652-8229]"
    }, {
      "left" : "private static Dependency _addDependency(\n\t\tProject project, String configurationName, Object dependencyNotation)",
      "right" : "private static Dependency _addDependency(\n\t\tProject project, String configurationName, Object dependencyNotation)",
      "info" : "MethodDeclaration[7860-8118]:MethodDeclaration[8232-8490]"
    }, {
      "left" : "private static String _getDependencyNotation(Dependency dependency)",
      "right" : "private static String _getDependencyNotation(Dependency dependency)",
      "info" : "MethodDeclaration[8121-8526]:MethodDeclaration[8493-8898]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1815-1948]:Block[1815-1948]"
    }, {
      "left" : "ConfigurationContainer configurationContainer =\n\t\t\tproject.getConfigurations();",
      "right" : "ConfigurationContainer configurationContainer =\n\t\t\tproject.getConfigurations();",
      "info" : "VariableDeclarationStatement[1819-1898]:VariableDeclarationStatement[1819-1898]"
    }, {
      "left" : "return configurationContainer.create(name);",
      "right" : "return configurationContainer.create(name);",
      "info" : "ReturnStatement[1902-1945]:ReturnStatement[1902-1945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2047-2126]:Block[2047-2126]"
    }, {
      "left" : "return _addDependency(project, configurationName, project.files(file));",
      "right" : "return _addDependency(project, configurationName, project.files(file));",
      "info" : "ReturnStatement[2052-2123]:ReturnStatement[2052-2123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2247-2321]:Block[2247-2321]"
    }, {
      "left" : "return _addDependency(project, configurationName, fileCollection);",
      "right" : "return _addDependency(project, configurationName, fileCollection);",
      "info" : "ReturnStatement[2252-2318]:ReturnStatement[2252-2318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2436-2514]:Block[2436-2514]"
    }, {
      "left" : "return _addDependency(project, configurationName, dependencyNotation);",
      "right" : "return _addDependency(project, configurationName, dependencyNotation);",
      "info" : "ReturnStatement[2441-2511]:ReturnStatement[2441-2511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2647-2736]:Block[2647-2736]"
    }, {
      "left" : "return addDependency(\n\t\t\tproject, configurationName, group, name, version, true);",
      "right" : "return addDependency(\n\t\t\tproject, configurationName, group, name, version, true);",
      "info" : "ReturnStatement[2652-2733]:ReturnStatement[2652-2733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2889-3209]:Block[3162-3581]"
    }, {
      "left" : "Map<String, Object> dependencyNotation = new HashMap<>();",
      "right" : "Map<String, Object> dependencyNotation = new HashMap<>();",
      "info" : "VariableDeclarationStatement[2894-2951]:VariableDeclarationStatement[3167-3224]"
    }, {
      "left" : "dependencyNotation.put(\"group\", group);",
      "right" : "dependencyNotation.put(\"group\", group);",
      "info" : "ExpressionStatement[2955-2994]:ExpressionStatement[3327-3366]"
    }, {
      "left" : "dependencyNotation.put(\"name\", name);",
      "right" : "dependencyNotation.put(\"name\", name);",
      "info" : "ExpressionStatement[2997-3034]:ExpressionStatement[3369-3406]"
    }, {
      "left" : "dependencyNotation.put(\"transitive\", transitive);",
      "right" : "dependencyNotation.put(\"transitive\", transitive);",
      "info" : "ExpressionStatement[3037-3086]:ExpressionStatement[3409-3458]"
    }, {
      "left" : "dependencyNotation.put(\"version\", version);",
      "right" : "dependencyNotation.put(\"version\", version);",
      "info" : "ExpressionStatement[3089-3132]:ExpressionStatement[3461-3504]"
    }, {
      "left" : "return _addDependency(project, configurationName, dependencyNotation);",
      "right" : "return _addDependency(project, configurationName, dependencyNotation);",
      "info" : "ReturnStatement[3136-3206]:ReturnStatement[3508-3578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3294-3425]:Block[3666-3797]"
    }, {
      "left" : "ExtensionContainer extensionContainer = project.getExtensions();",
      "right" : "ExtensionContainer extensionContainer = project.getExtensions();",
      "info" : "VariableDeclarationStatement[3299-3363]:VariableDeclarationStatement[3671-3735]"
    }, {
      "left" : "return extensionContainer.create(name, clazz, project);",
      "right" : "return extensionContainer.create(name, clazz, project);",
      "info" : "ReturnStatement[3367-3422]:ReturnStatement[3739-3794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3495-3728]:Block[3867-4100]"
    }, {
      "left" : "JavaPluginConvention javaPluginConvention = getConvention(\n\t\t\tproject, JavaPluginConvention.class);",
      "right" : "JavaPluginConvention javaPluginConvention = getConvention(\n\t\t\tproject, JavaPluginConvention.class);",
      "info" : "VariableDeclarationStatement[3499-3598]:VariableDeclarationStatement[3871-3970]"
    }, {
      "left" : "SourceSetContainer sourceSetContainer =\n\t\t\tjavaPluginConvention.getSourceSets();",
      "right" : "SourceSetContainer sourceSetContainer =\n\t\t\tjavaPluginConvention.getSourceSets();",
      "info" : "VariableDeclarationStatement[3602-3682]:VariableDeclarationStatement[3974-4054]"
    }, {
      "left" : "return sourceSetContainer.create(name);",
      "right" : "return sourceSetContainer.create(name);",
      "info" : "ReturnStatement[3686-3725]:ReturnStatement[4058-4097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3821-3949]:Block[4193-4321]"
    }, {
      "left" : "Map<String, Class<T>> args = Collections.singletonMap(\n\t\t\tTask.TASK_TYPE, clazz);",
      "right" : "Map<String, Class<T>> args = Collections.singletonMap(\n\t\t\tTask.TASK_TYPE, clazz);",
      "info" : "VariableDeclarationStatement[3826-3907]:VariableDeclarationStatement[4198-4279]"
    }, {
      "left" : "return (T)project.task(args, name);",
      "right" : "return (T)project.task(args, name);",
      "info" : "ReturnStatement[3911-3946]:ReturnStatement[4283-4318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4057-4160]:Block[4429-4532]"
    }, {
      "left" : "Map<String, Class<T>> args = Collections.singletonMap(\"plugin\", clazz);",
      "right" : "Map<String, Class<T>> args = Collections.singletonMap(\"plugin\", clazz);",
      "info" : "VariableDeclarationStatement[4062-4133]:VariableDeclarationStatement[4434-4505]"
    }, {
      "left" : "project.apply(args);",
      "right" : "project.apply(args);",
      "info" : "ExpressionStatement[4137-4157]:ExpressionStatement[4509-4529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4236-4584]:Block[4608-4956]"
    }, {
      "left" : "Map<String, Object> args = new HashMap<>();",
      "right" : "Map<String, Object> args = new HashMap<>();",
      "info" : "VariableDeclarationStatement[4240-4283]:VariableDeclarationStatement[4612-4655]"
    }, {
      "left" : "ClassLoader classLoader = GradleUtil.class.getClassLoader();",
      "right" : "ClassLoader classLoader = GradleUtil.class.getClassLoader();",
      "info" : "VariableDeclarationStatement[4287-4347]:VariableDeclarationStatement[4659-4719]"
    }, {
      "left" : "URL url = classLoader.getResource(name);",
      "right" : "URL url = classLoader.getResource(name);",
      "info" : "VariableDeclarationStatement[4351-4391]:VariableDeclarationStatement[4723-4763]"
    }, {
      "left" : "if (url == null)",
      "right" : "if (url == null)",
      "info" : "IfStatement[4395-4481]:IfStatement[4767-4853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4412-4481]:Block[4784-4853]"
    }, {
      "left" : "throw new GradleException(\"Unable to apply script \" + name);",
      "right" : "throw new GradleException(\"Unable to apply script \" + name);",
      "info" : "ThrowStatement[4417-4477]:ThrowStatement[4789-4849]"
    }, {
      "left" : "args.put(\"from\", url);",
      "right" : "args.put(\"from\", url);",
      "info" : "ExpressionStatement[4485-4507]:ExpressionStatement[4857-4879]"
    }, {
      "left" : "if (obj != null)",
      "right" : "if (obj != null)",
      "info" : "IfStatement[4511-4557]:IfStatement[4883-4929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4528-4557]:Block[4900-4929]"
    }, {
      "left" : "args.put(\"to\", obj);",
      "right" : "args.put(\"to\", obj);",
      "info" : "ExpressionStatement[4533-4553]:ExpressionStatement[4905-4925]"
    }, {
      "left" : "project.apply(args);",
      "right" : "project.apply(args);",
      "info" : "ExpressionStatement[4561-4581]:ExpressionStatement[4933-4953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4695-5255]:Block[5067-5627]"
    }, {
      "left" : "ResolvableDependencies resolvableDependencies =\n\t\t\tconfiguration.getIncoming();",
      "right" : "ResolvableDependencies resolvableDependencies =\n\t\t\tconfiguration.getIncoming();",
      "info" : "VariableDeclarationStatement[4700-4779]:VariableDeclarationStatement[5072-5151]"
    }, {
      "left" : "resolvableDependencies.beforeResolve(\n\t\t\tnew Action<ResolvableDependencies>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic void execute(\n\t\t\t\t\tResolvableDependencies resolvableDependencies) {\n\n\t\t\t\t\tSet<Dependency> dependencies =\n\t\t\t\t\t\tconfiguration.getDependencies();\n\t\t\t\t\tSet<Configuration> parentConfigurations =\n\t\t\t\t\t\tconfiguration.getExtendsFrom();\n\n\t\t\t\t\tif (dependencies.isEmpty() &&\n\t\t\t\t\t\tparentConfigurations.isEmpty()) {\n\n\t\t\t\t\t\taction.execute(configuration);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t});",
      "right" : "resolvableDependencies.beforeResolve(\n\t\t\tnew Action<ResolvableDependencies>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic void execute(\n\t\t\t\t\tResolvableDependencies resolvableDependencies) {\n\n\t\t\t\t\tSet<Dependency> dependencies =\n\t\t\t\t\t\tconfiguration.getDependencies();\n\t\t\t\t\tSet<Configuration> parentConfigurations =\n\t\t\t\t\t\tconfiguration.getExtendsFrom();\n\n\t\t\t\t\tif (dependencies.isEmpty() &&\n\t\t\t\t\t\tparentConfigurations.isEmpty()) {\n\n\t\t\t\t\t\taction.execute(configuration);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t});",
      "info" : "ExpressionStatement[4783-5252]:ExpressionStatement[5155-5624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4955-5244]:Block[5327-5616]"
    }, {
      "left" : "Set<Dependency> dependencies =\n\t\t\t\t\t\tconfiguration.getDependencies();",
      "right" : "Set<Dependency> dependencies =\n\t\t\t\t\t\tconfiguration.getDependencies();",
      "info" : "VariableDeclarationStatement[4963-5032]:VariableDeclarationStatement[5335-5404]"
    }, {
      "left" : "Set<Configuration> parentConfigurations =\n\t\t\t\t\t\tconfiguration.getExtendsFrom();",
      "right" : "Set<Configuration> parentConfigurations =\n\t\t\t\t\t\tconfiguration.getExtendsFrom();",
      "info" : "VariableDeclarationStatement[5038-5117]:VariableDeclarationStatement[5410-5489]"
    }, {
      "left" : "if (dependencies.isEmpty() &&\n\t\t\t\t\t\tparentConfigurations.isEmpty())",
      "right" : "if (dependencies.isEmpty() &&\n\t\t\t\t\t\tparentConfigurations.isEmpty())",
      "info" : "IfStatement[5124-5238]:IfStatement[5496-5610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5192-5238]:Block[5564-5610]"
    }, {
      "left" : "action.execute(configuration);",
      "right" : "action.execute(configuration);",
      "info" : "ExpressionStatement[5201-5231]:ExpressionStatement[5573-5603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5333-5469]:Block[5705-5841]"
    }, {
      "left" : "ConfigurationContainer configurationContainer =\n\t\t\tproject.getConfigurations();",
      "right" : "ConfigurationContainer configurationContainer =\n\t\t\tproject.getConfigurations();",
      "info" : "VariableDeclarationStatement[5337-5416]:VariableDeclarationStatement[5709-5788]"
    }, {
      "left" : "return configurationContainer.getByName(name);",
      "right" : "return configurationContainer.getByName(name);",
      "info" : "ReturnStatement[5420-5466]:ReturnStatement[5792-5838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5539-5633]:Block[5911-6005]"
    }, {
      "left" : "Convention convention = project.getConvention();",
      "right" : "Convention convention = project.getConvention();",
      "info" : "VariableDeclarationStatement[5543-5591]:VariableDeclarationStatement[5915-5963]"
    }, {
      "left" : "return convention.getPlugin(clazz);",
      "right" : "return convention.getPlugin(clazz);",
      "info" : "ReturnStatement[5595-5630]:ReturnStatement[5967-6002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5702-5820]:Block[6074-6192]"
    }, {
      "left" : "ExtensionContainer extensionContainer = project.getExtensions();",
      "right" : "ExtensionContainer extensionContainer = project.getExtensions();",
      "info" : "VariableDeclarationStatement[5706-5770]:VariableDeclarationStatement[6078-6142]"
    }, {
      "left" : "return extensionContainer.getByType(clazz);",
      "right" : "return extensionContainer.getByType(clazz);",
      "info" : "ReturnStatement[5774-5817]:ReturnStatement[6146-6189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5938-6356]:Block[6310-6728]"
    }, {
      "left" : "Closure<Void> closure = new Closure<Void>(null) {\n\n\t\t\t@SuppressWarnings(\"unused\")\n\t\t\tpublic void doCall(PatternFilterable patternFilterable) {\n\t\t\t\tif (ArrayUtil.isNotEmpty(excludes)) {\n\t\t\t\t\tpatternFilterable.setExcludes(Arrays.asList(excludes));\n\t\t\t\t}\n\n\t\t\t\tif (ArrayUtil.isNotEmpty(includes)) {\n\t\t\t\t\tpatternFilterable.setIncludes(Arrays.asList(includes));\n\t\t\t\t}\n\t\t\t}\n\n\t\t};",
      "right" : "Closure<Void> closure = new Closure<Void>(null) {\n\n\t\t\t@SuppressWarnings(\"unused\")\n\t\t\tpublic void doCall(PatternFilterable patternFilterable) {\n\t\t\t\tif (ArrayUtil.isNotEmpty(excludes)) {\n\t\t\t\t\tpatternFilterable.setExcludes(Arrays.asList(excludes));\n\t\t\t\t}\n\n\t\t\t\tif (ArrayUtil.isNotEmpty(includes)) {\n\t\t\t\t\tpatternFilterable.setIncludes(Arrays.asList(includes));\n\t\t\t\t}\n\t\t\t}\n\n\t\t};",
      "info" : "VariableDeclarationStatement[5943-6315]:VariableDeclarationStatement[6315-6687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6084-6309]:Block[6456-6681]"
    }, {
      "left" : "if (ArrayUtil.isNotEmpty(excludes))",
      "right" : "if (ArrayUtil.isNotEmpty(excludes))",
      "info" : "IfStatement[6090-6194]:IfStatement[6462-6566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6126-6194]:Block[6498-6566]"
    }, {
      "left" : "patternFilterable.setExcludes(Arrays.asList(excludes));",
      "right" : "patternFilterable.setExcludes(Arrays.asList(excludes));",
      "info" : "ExpressionStatement[6133-6188]:ExpressionStatement[6505-6560]"
    }, {
      "left" : "if (ArrayUtil.isNotEmpty(includes))",
      "right" : "if (ArrayUtil.isNotEmpty(includes))",
      "info" : "IfStatement[6200-6304]:IfStatement[6572-6676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6236-6304]:Block[6608-6676]"
    }, {
      "left" : "patternFilterable.setIncludes(Arrays.asList(includes));",
      "right" : "patternFilterable.setIncludes(Arrays.asList(includes));",
      "info" : "ExpressionStatement[6243-6298]:ExpressionStatement[6615-6670]"
    }, {
      "left" : "return fileTree.matching(closure);",
      "right" : "return fileTree.matching(closure);",
      "info" : "ReturnStatement[6319-6353]:ReturnStatement[6691-6725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6430-6589]:Block[6802-6961]"
    }, {
      "left" : "for (Project project : rootProject.getAllprojects())",
      "right" : "for (Project project : rootProject.getAllprojects())",
      "info" : "EnhancedForStatement[6434-6570]:EnhancedForStatement[6806-6942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6487-6570]:Block[6859-6942]"
    }, {
      "left" : "if (projectDir.equals(project.getProjectDir()))",
      "right" : "if (projectDir.equals(project.getProjectDir()))",
      "info" : "IfStatement[6492-6566]:IfStatement[6864-6938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6540-6566]:Block[6912-6938]"
    }, {
      "left" : "return project;",
      "right" : "return project;",
      "info" : "ReturnStatement[6546-6561]:ReturnStatement[6918-6933]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6574-6586]:ReturnStatement[6946-6958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6659-6895]:Block[7031-7267]"
    }, {
      "left" : "JavaPluginConvention javaPluginConvention = getConvention(\n\t\t\tproject, JavaPluginConvention.class);",
      "right" : "JavaPluginConvention javaPluginConvention = getConvention(\n\t\t\tproject, JavaPluginConvention.class);",
      "info" : "VariableDeclarationStatement[6663-6762]:VariableDeclarationStatement[7035-7134]"
    }, {
      "left" : "SourceSetContainer sourceSetContainer =\n\t\t\tjavaPluginConvention.getSourceSets();",
      "right" : "SourceSetContainer sourceSetContainer =\n\t\t\tjavaPluginConvention.getSourceSets();",
      "info" : "VariableDeclarationStatement[6766-6846]:VariableDeclarationStatement[7138-7218]"
    }, {
      "left" : "return sourceSetContainer.getByName(name);",
      "right" : "return sourceSetContainer.getByName(name);",
      "info" : "ReturnStatement[6850-6892]:ReturnStatement[7222-7264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6955-7052]:Block[7327-7424]"
    }, {
      "left" : "TaskContainer taskContainer = project.getTasks();",
      "right" : "TaskContainer taskContainer = project.getTasks();",
      "info" : "VariableDeclarationStatement[6959-7008]:VariableDeclarationStatement[7331-7380]"
    }, {
      "left" : "return taskContainer.getByName(name);",
      "right" : "return taskContainer.getByName(name);",
      "info" : "ReturnStatement[7012-7049]:ReturnStatement[7384-7421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7114-7277]:Block[7486-7649]"
    }, {
      "left" : "String fileName = FileUtil.stripExtension(file.getName());",
      "right" : "String fileName = FileUtil.stripExtension(file.getName());",
      "info" : "VariableDeclarationStatement[7118-7176]:VariableDeclarationStatement[7490-7548]"
    }, {
      "left" : "fileName = fileName.replaceAll(\"\\\\W\", \"\");",
      "right" : "fileName = fileName.replaceAll(\"\\\\W\", \"\");",
      "info" : "ExpressionStatement[7180-7222]:ExpressionStatement[7552-7594]"
    }, {
      "left" : "return prefix + StringUtil.capitalize(fileName);",
      "right" : "return prefix + StringUtil.capitalize(fileName);",
      "info" : "ReturnStatement[7226-7274]:ReturnStatement[7598-7646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7396-7857]:Block[7768-8229]"
    }, {
      "left" : "Configuration configuration = getConfiguration(\n\t\t\tproject, configurationName);",
      "right" : "Configuration configuration = getConfiguration(\n\t\t\tproject, configurationName);",
      "info" : "VariableDeclarationStatement[7401-7480]:VariableDeclarationStatement[7773-7852]"
    }, {
      "left" : "Set<Dependency> dependencies = configuration.getDependencies();",
      "right" : "Set<Dependency> dependencies = configuration.getDependencies();",
      "info" : "VariableDeclarationStatement[7484-7547]:VariableDeclarationStatement[7856-7919]"
    }, {
      "left" : "Iterator<Dependency> iterator = dependencies.iterator();",
      "right" : "Iterator<Dependency> iterator = dependencies.iterator();",
      "info" : "VariableDeclarationStatement[7551-7607]:VariableDeclarationStatement[7923-7979]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[7611-7854]:WhileStatement[7983-8226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7638-7854]:Block[8010-8226]"
    }, {
      "left" : "Dependency dependency = iterator.next();",
      "right" : "Dependency dependency = iterator.next();",
      "info" : "VariableDeclarationStatement[7643-7683]:VariableDeclarationStatement[8015-8055]"
    }, {
      "left" : "String dependencyNotation = _getDependencyNotation(dependency);",
      "right" : "String dependencyNotation = _getDependencyNotation(dependency);",
      "info" : "VariableDeclarationStatement[7688-7751]:VariableDeclarationStatement[8060-8123]"
    }, {
      "left" : "if (ArrayUtil.contains(dependencyNotations, dependencyNotation))",
      "right" : "if (ArrayUtil.contains(dependencyNotations, dependencyNotation))",
      "info" : "IfStatement[7756-7850]:IfStatement[8128-8222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7821-7850]:Block[8193-8222]"
    }, {
      "left" : "iterator.remove();",
      "right" : "iterator.remove();",
      "info" : "ExpressionStatement[7827-7845]:ExpressionStatement[8199-8217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7974-8118]:Block[8346-8490]"
    }, {
      "left" : "DependencyHandler dependencyHandler = project.getDependencies();",
      "right" : "DependencyHandler dependencyHandler = project.getDependencies();",
      "info" : "VariableDeclarationStatement[7979-8043]:VariableDeclarationStatement[8351-8415]"
    }, {
      "left" : "return dependencyHandler.add(configurationName, dependencyNotation);",
      "right" : "return dependencyHandler.add(configurationName, dependencyNotation);",
      "info" : "ReturnStatement[8047-8115]:ReturnStatement[8419-8487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8189-8526]:Block[8561-8898]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[8193-8232]:VariableDeclarationStatement[8565-8604]"
    }, {
      "left" : "if (Validator.isNotNull(dependency.getGroup()))",
      "right" : "if (Validator.isNotNull(dependency.getGroup()))",
      "info" : "IfStatement[8236-8345]:IfStatement[8608-8717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8284-8345]:Block[8656-8717]"
    }, {
      "left" : "sb.append(dependency.getGroup());",
      "right" : "sb.append(dependency.getGroup());",
      "info" : "ExpressionStatement[8289-8322]:ExpressionStatement[8661-8694]"
    }, {
      "left" : "sb.append(\":\");",
      "right" : "sb.append(\":\");",
      "info" : "ExpressionStatement[8326-8341]:ExpressionStatement[8698-8713]"
    }, {
      "left" : "sb.append(dependency.getName());",
      "right" : "sb.append(dependency.getName());",
      "info" : "ExpressionStatement[8349-8381]:ExpressionStatement[8721-8753]"
    }, {
      "left" : "if (Validator.isNotNull(dependency.getVersion()))",
      "right" : "if (Validator.isNotNull(dependency.getVersion()))",
      "info" : "IfStatement[8385-8498]:IfStatement[8757-8870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8435-8498]:Block[8807-8870]"
    }, {
      "left" : "sb.append(\":\");",
      "right" : "sb.append(\":\");",
      "info" : "ExpressionStatement[8440-8455]:ExpressionStatement[8812-8827]"
    }, {
      "left" : "sb.append(dependency.getVersion());",
      "right" : "sb.append(dependency.getVersion());",
      "info" : "ExpressionStatement[8459-8494]:ExpressionStatement[8831-8866]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[8502-8523]:ReturnStatement[8874-8895]"
    } ]
  },
  "interFileMappings" : { }
}