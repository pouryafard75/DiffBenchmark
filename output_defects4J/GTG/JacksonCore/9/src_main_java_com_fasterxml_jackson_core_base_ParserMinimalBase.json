{
  "matchedElements" : [
 {
    "left" : "class : ParserMinimalBase",
    "right" : "class : ParserMinimalBase",
    "info" : "TypeDeclaration[379-19727]:TypeDeclaration[379-19921]"
  }, {
    "left" : "INT_TAB",
    "right" : "INT_TAB",
    "info" : "FieldDeclaration[865-907]:FieldDeclaration[865-907]"
  }, {
    "left" : "INT_LF",
    "right" : "INT_LF",
    "info" : "FieldDeclaration[912-953]:FieldDeclaration[912-953]"
  }, {
    "left" : "INT_CR",
    "right" : "INT_CR",
    "info" : "FieldDeclaration[958-999]:FieldDeclaration[958-999]"
  }, {
    "left" : "INT_SPACE",
    "right" : "INT_SPACE",
    "info" : "FieldDeclaration[1004-1050]:FieldDeclaration[1004-1050]"
  }, {
    "left" : "INT_LBRACKET",
    "right" : "INT_LBRACKET",
    "info" : "FieldDeclaration[1070-1116]:FieldDeclaration[1070-1116]"
  }, {
    "left" : "INT_RBRACKET",
    "right" : "INT_RBRACKET",
    "info" : "FieldDeclaration[1121-1167]:FieldDeclaration[1121-1167]"
  }, {
    "left" : "INT_LCURLY",
    "right" : "INT_LCURLY",
    "info" : "FieldDeclaration[1172-1216]:FieldDeclaration[1172-1216]"
  }, {
    "left" : "INT_RCURLY",
    "right" : "INT_RCURLY",
    "info" : "FieldDeclaration[1221-1265]:FieldDeclaration[1221-1265]"
  }, {
    "left" : "INT_QUOTE",
    "right" : "INT_QUOTE",
    "info" : "FieldDeclaration[1270-1313]:FieldDeclaration[1270-1313]"
  }, {
    "left" : "INT_BACKSLASH",
    "right" : "INT_BACKSLASH",
    "info" : "FieldDeclaration[1318-1366]:FieldDeclaration[1318-1366]"
  }, {
    "left" : "INT_SLASH",
    "right" : "INT_SLASH",
    "info" : "FieldDeclaration[1371-1414]:FieldDeclaration[1371-1414]"
  }, {
    "left" : "INT_COLON",
    "right" : "INT_COLON",
    "info" : "FieldDeclaration[1419-1462]:FieldDeclaration[1419-1462]"
  }, {
    "left" : "INT_COMMA",
    "right" : "INT_COMMA",
    "info" : "FieldDeclaration[1467-1510]:FieldDeclaration[1467-1510]"
  }, {
    "left" : "INT_HASH",
    "right" : "INT_HASH",
    "info" : "FieldDeclaration[1515-1557]:FieldDeclaration[1515-1557]"
  }, {
    "left" : "INT_PERIOD",
    "right" : "INT_PERIOD",
    "info" : "FieldDeclaration[1581-1625]:FieldDeclaration[1581-1625]"
  }, {
    "left" : "INT_e",
    "right" : "INT_e",
    "info" : "FieldDeclaration[1630-1669]:FieldDeclaration[1630-1669]"
  }, {
    "left" : "INT_E",
    "right" : "INT_E",
    "info" : "FieldDeclaration[1674-1713]:FieldDeclaration[1674-1713]"
  }, {
    "left" : "_currToken",
    "right" : "_currToken",
    "info" : "FieldDeclaration[1905-2130]:FieldDeclaration[1905-2130]"
  }, {
    "left" : "_lastClearedToken",
    "right" : "_lastClearedToken",
    "info" : "FieldDeclaration[2136-2310]:FieldDeclaration[2136-2310]"
  }, {
    "left" : "protected ParserMinimalBase()",
    "right" : "protected ParserMinimalBase()",
    "info" : "MethodDeclaration[2478-2511]:MethodDeclaration[2478-2511]"
  }, {
    "left" : "protected ParserMinimalBase(features int)",
    "right" : "protected ParserMinimalBase(features int)",
    "info" : "MethodDeclaration[2516-2578]:MethodDeclaration[2516-2578]"
  }, {
    "left" : "public abstract nextToken() : ",
    "right" : "public abstract nextToken() : ",
    "info" : "MethodDeclaration[3253-3320]:MethodDeclaration[3253-3320]"
  }, {
    "left" : "public getCurrentToken() : ",
    "right" : "public getCurrentToken() : ",
    "info" : "MethodDeclaration[3325-3392]:MethodDeclaration[3325-3392]"
  }, {
    "left" : "public getCurrentTokenId() : int",
    "right" : "public getCurrentTokenId() : int",
    "info" : "MethodDeclaration[3398-3555]:MethodDeclaration[3398-3555]"
  }, {
    "left" : "public hasCurrentToken() : boolean",
    "right" : "public hasCurrentToken() : boolean",
    "info" : "MethodDeclaration[3561-3634]:MethodDeclaration[3561-3634]"
  }, {
    "left" : "public hasTokenId(id int) : boolean",
    "right" : "public hasTokenId(id int) : boolean",
    "info" : "MethodDeclaration[3639-3846]:MethodDeclaration[3639-3846]"
  }, {
    "left" : "public hasToken(t ) : boolean",
    "right" : "public hasToken(t ) : boolean",
    "info" : "MethodDeclaration[3852-3946]:MethodDeclaration[3852-3946]"
  }, {
    "left" : "public isExpectedStartArrayToken() : boolean",
    "right" : "public isExpectedStartArrayToken() : boolean",
    "info" : "MethodDeclaration[3956-4056]:MethodDeclaration[3956-4056]"
  }, {
    "left" : "public isExpectedStartObjectToken() : boolean",
    "right" : "public isExpectedStartObjectToken() : boolean",
    "info" : "MethodDeclaration[4061-4163]:MethodDeclaration[4061-4163]"
  }, {
    "left" : "public nextValue() : ",
    "right" : "public nextValue() : ",
    "info" : "MethodDeclaration[4173-4570]:MethodDeclaration[4173-4570]"
  }, {
    "left" : "public skipChildren() : ",
    "right" : "public skipChildren() : ",
    "info" : "MethodDeclaration[4576-5542]:MethodDeclaration[4576-5542]"
  }, {
    "left" : "protected abstract _handleEOF() : void",
    "right" : "protected abstract _handleEOF() : void",
    "info" : "MethodDeclaration[5548-5671]:MethodDeclaration[5548-5671]"
  }, {
    "left" : "public abstract getCurrentName() : ",
    "right" : "public abstract getCurrentName() : ",
    "info" : "MethodDeclaration[5758-5827]:MethodDeclaration[5758-5827]"
  }, {
    "left" : "public abstract close() : void",
    "right" : "public abstract close() : void",
    "info" : "MethodDeclaration[5832-5890]:MethodDeclaration[5832-5890]"
  }, {
    "left" : "public abstract isClosed() : boolean",
    "right" : "public abstract isClosed() : boolean",
    "info" : "MethodDeclaration[5895-5940]:MethodDeclaration[5895-5940]"
  }, {
    "left" : "public abstract getParsingContext() : ",
    "right" : "public abstract getParsingContext() : ",
    "info" : "MethodDeclaration[5946-6010]:MethodDeclaration[5946-6010]"
  }, {
    "left" : "public clearCurrentToken() : void",
    "right" : "public clearCurrentToken() : void",
    "info" : "MethodDeclaration[6314-6482]:MethodDeclaration[6314-6482]"
  }, {
    "left" : "public getLastClearedToken() : ",
    "right" : "public getLastClearedToken() : ",
    "info" : "MethodDeclaration[6488-6566]:MethodDeclaration[6488-6566]"
  }, {
    "left" : "public abstract overrideCurrentName(name ) : void",
    "right" : "public abstract overrideCurrentName(name ) : void",
    "info" : "MethodDeclaration[6572-6636]:MethodDeclaration[6572-6636]"
  }, {
    "left" : "public abstract getText() : ",
    "right" : "public abstract getText() : ",
    "info" : "MethodDeclaration[6843-6905]:MethodDeclaration[6843-6905]"
  }, {
    "left" : "public abstract getTextCharacters() : ",
    "right" : "public abstract getTextCharacters() : ",
    "info" : "MethodDeclaration[6910-6982]:MethodDeclaration[6910-6982]"
  }, {
    "left" : "public abstract hasTextCharacters() : boolean",
    "right" : "public abstract hasTextCharacters() : boolean",
    "info" : "MethodDeclaration[6987-7041]:MethodDeclaration[6987-7041]"
  }, {
    "left" : "public abstract getTextLength() : int",
    "right" : "public abstract getTextLength() : int",
    "info" : "MethodDeclaration[7046-7111]:MethodDeclaration[7046-7111]"
  }, {
    "left" : "public abstract getTextOffset() : int",
    "right" : "public abstract getTextOffset() : int",
    "info" : "MethodDeclaration[7116-7181]:MethodDeclaration[7116-7181]"
  }, {
    "left" : "public abstract getBinaryValue(b64variant ) : ",
    "right" : "public abstract getBinaryValue(b64variant ) : ",
    "info" : "MethodDeclaration[7388-7481]:MethodDeclaration[7388-7481]"
  }, {
    "left" : "public getValueAsBoolean(defaultValue boolean) : boolean",
    "right" : "public getValueAsBoolean(defaultValue boolean) : boolean",
    "info" : "MethodDeclaration[7682-8766]:MethodDeclaration[7682-8766]"
  }, {
    "left" : "public getValueAsInt() : int",
    "right" : "public getValueAsInt() : int",
    "info" : "MethodDeclaration[8772-9094]:MethodDeclaration[8772-9094]"
  }, {
    "left" : "public getValueAsInt(defaultValue int) : int",
    "right" : "public getValueAsInt(defaultValue int) : int",
    "info" : "MethodDeclaration[9100-10111]:MethodDeclaration[9100-10111]"
  }, {
    "left" : "public getValueAsLong() : long",
    "right" : "public getValueAsLong() : long",
    "info" : "MethodDeclaration[10117-10445]:MethodDeclaration[10117-10445]"
  }, {
    "left" : "public getValueAsLong(defaultValue long) : long",
    "right" : "public getValueAsLong(defaultValue long) : long",
    "info" : "MethodDeclaration[10455-11450]:MethodDeclaration[10455-11450]"
  }, {
    "left" : "public getValueAsDouble(defaultValue double) : double",
    "right" : "public getValueAsDouble(defaultValue double) : double",
    "info" : "MethodDeclaration[11456-12384]:MethodDeclaration[11456-12384]"
  }, {
    "left" : "public getValueAsString() : ",
    "right" : "public getValueAsString() : ",
    "info" : "MethodDeclaration[12390-12594]:MethodDeclaration[12390-12691]"
  }, {
    "left" : "public getValueAsString(defaultValue ) : ",
    "right" : "public getValueAsString(defaultValue ) : ",
    "info" : "MethodDeclaration[12604-12960]:MethodDeclaration[12701-13154]"
  }, {
    "left" : "protected _decodeBase64(str , builder , b64variant ) : void",
    "right" : "protected _decodeBase64(str , builder , b64variant ) : void",
    "info" : "MethodDeclaration[13137-13620]:MethodDeclaration[13331-13814]"
  }, {
    "left" : "protected _reportInvalidBase64(b64variant , ch char, bindex int, msg ) : void",
    "right" : "protected _reportInvalidBase64(b64variant , ch char, bindex int, msg ) : void",
    "info" : "MethodDeclaration[13626-14960]:MethodDeclaration[13820-15154]"
  }, {
    "left" : "protected _reportBase64EOF() : void",
    "right" : "protected _reportBase64EOF() : void",
    "info" : "MethodDeclaration[14966-15201]:MethodDeclaration[15160-15395]"
  }, {
    "left" : "protected _hasTextualNull(value ) : boolean",
    "right" : "protected _hasTextualNull(value ) : boolean",
    "info" : "MethodDeclaration[15400-15749]:MethodDeclaration[15594-15943]"
  }, {
    "left" : "protected _reportUnexpectedChar(ch int, comment ) : void",
    "right" : "protected _reportUnexpectedChar(ch int, comment ) : void",
    "info" : "MethodDeclaration[15930-16278]:MethodDeclaration[16124-16472]"
  }, {
    "left" : "protected _reportInvalidEOF() : void",
    "right" : "protected _reportInvalidEOF() : void",
    "info" : "MethodDeclaration[16284-16398]:MethodDeclaration[16478-16592]"
  }, {
    "left" : "protected _reportInvalidEOF(msg ) : void",
    "right" : "protected _reportInvalidEOF(msg ) : void",
    "info" : "MethodDeclaration[16404-16535]:MethodDeclaration[16598-16729]"
  }, {
    "left" : "protected _reportInvalidEOFInValue() : void",
    "right" : "protected _reportInvalidEOFInValue() : void",
    "info" : "MethodDeclaration[16541-16658]:MethodDeclaration[16735-16852]"
  }, {
    "left" : "protected _reportMissingRootWS(ch int) : void",
    "right" : "protected _reportMissingRootWS(ch int) : void",
    "info" : "MethodDeclaration[16664-16823]:MethodDeclaration[16858-17017]"
  }, {
    "left" : "protected _throwInvalidSpace(i int) : void",
    "right" : "protected _throwInvalidSpace(i int) : void",
    "info" : "MethodDeclaration[16833-17093]:MethodDeclaration[17027-17287]"
  }, {
    "left" : "protected _throwUnquotedSpace(i int, ctxtDesc ) : void",
    "right" : "protected _throwUnquotedSpace(i int, ctxtDesc ) : void",
    "info" : "MethodDeclaration[17099-17782]:MethodDeclaration[17293-17976]"
  }, {
    "left" : "protected _handleUnrecognizedCharacterEscape(ch char) : char",
    "right" : "protected _handleUnrecognizedCharacterEscape(ch char) : char",
    "info" : "MethodDeclaration[17788-18245]:MethodDeclaration[17982-18439]"
  }, {
    "left" : "protected _getCharDesc(ch int) : ",
    "right" : "protected _getCharDesc(ch int) : ",
    "info" : "MethodDeclaration[18431-18769]:MethodDeclaration[18625-18963]"
  }, {
    "left" : "protected _reportError(msg ) : void",
    "right" : "protected _reportError(msg ) : void",
    "info" : "MethodDeclaration[18775-18890]:MethodDeclaration[18969-19084]"
  }, {
    "left" : "protected _wrapError(msg , t ) : void",
    "right" : "protected _wrapError(msg , t ) : void",
    "info" : "MethodDeclaration[18896-19025]:MethodDeclaration[19090-19219]"
  }, {
    "left" : "protected _throwInternal() : void",
    "right" : "protected _throwInternal() : void",
    "info" : "MethodDeclaration[19031-19113]:MethodDeclaration[19225-19307]"
  }, {
    "left" : "protected _constructError(msg , t ) : ",
    "right" : "protected _constructError(msg , t ) : ",
    "info" : "MethodDeclaration[19119-19271]:MethodDeclaration[19313-19465]"
  }, {
    "left" : "protected _asciiBytes(str ) : ",
    "right" : "protected _asciiBytes(str ) : ",
    "info" : "MethodDeclaration[19277-19504]:MethodDeclaration[19471-19698]"
  }, {
    "left" : "protected _ascii(b ) : ",
    "right" : "protected _ascii(b ) : ",
    "info" : "MethodDeclaration[19514-19725]:MethodDeclaration[19708-19919]"
  } ],
  "mappings" : [
 {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[2478-2487]:Modifier[2478-2487]"
  }, {
    "left" : "ParserMinimalBase",
    "right" : "ParserMinimalBase",
    "info" : "SimpleName[2488-2505]:SimpleName[2488-2505]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2508-2511]:Block[2508-2511]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[2516-2525]:Modifier[2516-2525]"
  }, {
    "left" : "ParserMinimalBase",
    "right" : "ParserMinimalBase",
    "info" : "SimpleName[2526-2543]:SimpleName[2526-2543]"
  }, {
    "left" : "int features",
    "right" : "int features",
    "info" : "SingleVariableDeclaration[2544-2556]:SingleVariableDeclaration[2544-2556]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2558-2578]:Block[2558-2578]"
  }, {
    "left" : "super(features);",
    "right" : "super(features);",
    "info" : "SuperConstructorInvocation[2560-2576]:SuperConstructorInvocation[2560-2576]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3253-3262]:MarkerAnnotation[3253-3262]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3263-3269]:Modifier[3263-3269]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[3270-3278]:Modifier[3270-3278]"
  }, {
    "left" : "JsonToken",
    "right" : "JsonToken",
    "info" : "SimpleType[3279-3288]:SimpleType[3279-3288]"
  }, {
    "left" : "nextToken",
    "right" : "nextToken",
    "info" : "SimpleName[3289-3298]:SimpleName[3289-3298]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[3308-3319]:SimpleType[3308-3319]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3325-3334]:MarkerAnnotation[3325-3334]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3335-3341]:Modifier[3335-3341]"
  }, {
    "left" : "JsonToken",
    "right" : "JsonToken",
    "info" : "SimpleType[3342-3351]:SimpleType[3342-3351]"
  }, {
    "left" : "getCurrentToken",
    "right" : "getCurrentToken",
    "info" : "SimpleName[3352-3367]:SimpleName[3352-3367]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3370-3392]:Block[3370-3392]"
  }, {
    "left" : "return _currToken;",
    "right" : "return _currToken;",
    "info" : "ReturnStatement[3372-3390]:ReturnStatement[3372-3390]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3398-3407]:MarkerAnnotation[3398-3407]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3408-3414]:Modifier[3408-3414]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[3415-3420]:Modifier[3415-3420]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[3421-3424]:PrimitiveType[3421-3424]"
  }, {
    "left" : "getCurrentTokenId",
    "right" : "getCurrentTokenId",
    "info" : "SimpleName[3425-3442]:SimpleName[3425-3442]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3445-3555]:Block[3445-3555]"
  }, {
    "left" : "final JsonToken t = _currToken;",
    "right" : "final JsonToken t = _currToken;",
    "info" : "VariableDeclarationStatement[3455-3486]:VariableDeclarationStatement[3455-3486]"
  }, {
    "left" : "return (t == null) ? JsonTokenId.ID_NO_TOKEN : t.id();",
    "right" : "return (t == null) ? JsonTokenId.ID_NO_TOKEN : t.id();",
    "info" : "ReturnStatement[3495-3549]:ReturnStatement[3495-3549]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3561-3570]:MarkerAnnotation[3561-3570]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3571-3577]:Modifier[3571-3577]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[3578-3585]:PrimitiveType[3578-3585]"
  }, {
    "left" : "hasCurrentToken",
    "right" : "hasCurrentToken",
    "info" : "SimpleName[3586-3601]:SimpleName[3586-3601]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3604-3634]:Block[3604-3634]"
  }, {
    "left" : "return _currToken != null;",
    "right" : "return _currToken != null;",
    "info" : "ReturnStatement[3606-3632]:ReturnStatement[3606-3632]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3639-3648]:MarkerAnnotation[3639-3648]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3649-3655]:Modifier[3649-3655]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[3656-3663]:PrimitiveType[3656-3663]"
  }, {
    "left" : "hasTokenId",
    "right" : "hasTokenId",
    "info" : "SimpleName[3664-3674]:SimpleName[3664-3674]"
  }, {
    "left" : "int id",
    "right" : "int id",
    "info" : "SingleVariableDeclaration[3675-3681]:SingleVariableDeclaration[3675-3681]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3683-3846]:Block[3683-3846]"
  }, {
    "left" : "final JsonToken t = _currToken;",
    "right" : "final JsonToken t = _currToken;",
    "info" : "VariableDeclarationStatement[3693-3724]:VariableDeclarationStatement[3693-3724]"
  }, {
    "left" : "if (t == null)",
    "right" : "if (t == null)",
    "info" : "IfStatement[3733-3811]:IfStatement[3733-3811]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3748-3811]:Block[3748-3811]"
  }, {
    "left" : "return (JsonTokenId.ID_NO_TOKEN == id);",
    "right" : "return (JsonTokenId.ID_NO_TOKEN == id);",
    "info" : "ReturnStatement[3762-3801]:ReturnStatement[3762-3801]"
  }, {
    "left" : "return t.id() == id;",
    "right" : "return t.id() == id;",
    "info" : "ReturnStatement[3820-3840]:ReturnStatement[3820-3840]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3852-3861]:MarkerAnnotation[3852-3861]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3862-3868]:Modifier[3862-3868]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[3869-3874]:Modifier[3869-3874]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[3875-3882]:PrimitiveType[3875-3882]"
  }, {
    "left" : "hasToken",
    "right" : "hasToken",
    "info" : "SimpleName[3883-3891]:SimpleName[3883-3891]"
  }, {
    "left" : "JsonToken t",
    "right" : "JsonToken t",
    "info" : "SingleVariableDeclaration[3892-3903]:SingleVariableDeclaration[3892-3903]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3905-3946]:Block[3905-3946]"
  }, {
    "left" : "return (_currToken == t);",
    "right" : "return (_currToken == t);",
    "info" : "ReturnStatement[3915-3940]:ReturnStatement[3915-3940]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3956-3965]:MarkerAnnotation[3956-3965]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3966-3972]:Modifier[3966-3972]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[3973-3980]:PrimitiveType[3973-3980]"
  }, {
    "left" : "isExpectedStartArrayToken",
    "right" : "isExpectedStartArrayToken",
    "info" : "SimpleName[3981-4006]:SimpleName[3981-4006]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4009-4056]:Block[4009-4056]"
  }, {
    "left" : "return _currToken == JsonToken.START_ARRAY;",
    "right" : "return _currToken == JsonToken.START_ARRAY;",
    "info" : "ReturnStatement[4011-4054]:ReturnStatement[4011-4054]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4061-4070]:MarkerAnnotation[4061-4070]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4071-4077]:Modifier[4071-4077]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[4078-4085]:PrimitiveType[4078-4085]"
  }, {
    "left" : "isExpectedStartObjectToken",
    "right" : "isExpectedStartObjectToken",
    "info" : "SimpleName[4086-4112]:SimpleName[4086-4112]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4115-4163]:Block[4115-4163]"
  }, {
    "left" : "return _currToken == JsonToken.START_OBJECT;",
    "right" : "return _currToken == JsonToken.START_OBJECT;",
    "info" : "ReturnStatement[4117-4161]:ReturnStatement[4117-4161]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4173-4182]:MarkerAnnotation[4173-4182]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4187-4193]:Modifier[4187-4193]"
  }, {
    "left" : "JsonToken",
    "right" : "JsonToken",
    "info" : "SimpleType[4194-4203]:SimpleType[4194-4203]"
  }, {
    "left" : "nextValue",
    "right" : "nextValue",
    "info" : "SimpleName[4204-4213]:SimpleName[4204-4213]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[4223-4234]:SimpleType[4223-4234]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4235-4570]:Block[4235-4570]"
  }, {
    "left" : "JsonToken t = nextToken();",
    "right" : "JsonToken t = nextToken();",
    "info" : "VariableDeclarationStatement[4440-4466]:VariableDeclarationStatement[4440-4466]"
  }, {
    "left" : "if (t == JsonToken.FIELD_NAME)",
    "right" : "if (t == JsonToken.FIELD_NAME)",
    "info" : "IfStatement[4475-4546]:IfStatement[4475-4546]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4506-4546]:Block[4506-4546]"
  }, {
    "left" : "t = nextToken();",
    "right" : "t = nextToken();",
    "info" : "ExpressionStatement[4520-4536]:ExpressionStatement[4520-4536]"
  }, {
    "left" : "return t;",
    "right" : "return t;",
    "info" : "ReturnStatement[4555-4564]:ReturnStatement[4555-4564]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4576-4585]:MarkerAnnotation[4576-4585]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4590-4596]:Modifier[4590-4596]"
  }, {
    "left" : "JsonParser",
    "right" : "JsonParser",
    "info" : "SimpleType[4597-4607]:SimpleType[4597-4607]"
  }, {
    "left" : "skipChildren",
    "right" : "skipChildren",
    "info" : "SimpleName[4608-4620]:SimpleName[4608-4620]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[4630-4641]:SimpleType[4630-4641]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4646-5542]:Block[4646-5542]"
  }, {
    "left" : "if (_currToken != JsonToken.START_OBJECT\n            && _currToken != JsonToken.START_ARRAY)",
    "right" : "if (_currToken != JsonToken.START_OBJECT\n            && _currToken != JsonToken.START_ARRAY)",
    "info" : "IfStatement[4656-4785]:IfStatement[4656-4785]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4749-4785]:Block[4749-4785]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[4763-4775]:ReturnStatement[4763-4775]"
  }, {
    "left" : "int open = 1;",
    "right" : "int open = 1;",
    "info" : "VariableDeclarationStatement[4794-4807]:VariableDeclarationStatement[4794-4807]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[4958-5536]:WhileStatement[4958-5536]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4971-5536]:Block[4971-5536]"
  }, {
    "left" : "JsonToken t = nextToken();",
    "right" : "JsonToken t = nextToken();",
    "info" : "VariableDeclarationStatement[4985-5011]:VariableDeclarationStatement[4985-5011]"
  }, {
    "left" : "if (t == null)",
    "right" : "if (t == null)",
    "info" : "IfStatement[5024-5323]:IfStatement[5024-5323]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5039-5323]:Block[5039-5323]"
  }, {
    "left" : "_handleEOF();",
    "right" : "_handleEOF();",
    "info" : "ExpressionStatement[5057-5070]:ExpressionStatement[5057-5070]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[5297-5309]:ReturnStatement[5297-5309]"
  }, {
    "left" : "if (t.isStructStart())",
    "right" : "if (t.isStructStart())",
    "info" : "IfStatement[5336-5526]:IfStatement[5336-5526]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5359-5398]:Block[5359-5398]"
  }, {
    "left" : "++open;",
    "right" : "++open;",
    "info" : "ExpressionStatement[5377-5384]:ExpressionStatement[5377-5384]"
  }, {
    "left" : "if (t.isStructEnd())",
    "right" : "if (t.isStructEnd())",
    "info" : "IfStatement[5404-5526]:IfStatement[5404-5526]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5425-5526]:Block[5425-5526]"
  }, {
    "left" : "if (--open == 0)",
    "right" : "if (--open == 0)",
    "info" : "IfStatement[5443-5512]:IfStatement[5443-5512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5460-5512]:Block[5460-5512]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[5482-5494]:ReturnStatement[5482-5494]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[5608-5617]:Modifier[5608-5617]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[5618-5626]:Modifier[5618-5626]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5627-5631]:PrimitiveType[5627-5631]"
  }, {
    "left" : "_handleEOF",
    "right" : "_handleEOF",
    "info" : "SimpleName[5632-5642]:SimpleName[5632-5642]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[5652-5670]:SimpleType[5652-5670]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[5758-5767]:MarkerAnnotation[5758-5767]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5768-5774]:Modifier[5768-5774]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[5775-5783]:Modifier[5775-5783]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[5784-5790]:SimpleType[5784-5790]"
  }, {
    "left" : "getCurrentName",
    "right" : "getCurrentName",
    "info" : "SimpleName[5791-5805]:SimpleName[5791-5805]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5815-5826]:SimpleType[5815-5826]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[5832-5841]:MarkerAnnotation[5832-5841]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5842-5848]:Modifier[5842-5848]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[5849-5857]:Modifier[5849-5857]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5858-5862]:PrimitiveType[5858-5862]"
  }, {
    "left" : "close",
    "right" : "close",
    "info" : "SimpleName[5863-5868]:SimpleName[5863-5868]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5878-5889]:SimpleType[5878-5889]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[5895-5904]:MarkerAnnotation[5895-5904]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5905-5911]:Modifier[5905-5911]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[5912-5920]:Modifier[5912-5920]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5921-5928]:PrimitiveType[5921-5928]"
  }, {
    "left" : "isClosed",
    "right" : "isClosed",
    "info" : "SimpleName[5929-5937]:SimpleName[5929-5937]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[5946-5955]:MarkerAnnotation[5946-5955]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5956-5962]:Modifier[5956-5962]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[5963-5971]:Modifier[5963-5971]"
  }, {
    "left" : "JsonStreamContext",
    "right" : "JsonStreamContext",
    "info" : "SimpleType[5972-5989]:SimpleType[5972-5989]"
  }, {
    "left" : "getParsingContext",
    "right" : "getParsingContext",
    "info" : "SimpleName[5990-6007]:SimpleName[5990-6007]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6314-6323]:MarkerAnnotation[6314-6323]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6324-6330]:Modifier[6324-6330]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6331-6335]:PrimitiveType[6331-6335]"
  }, {
    "left" : "clearCurrentToken",
    "right" : "clearCurrentToken",
    "info" : "SimpleName[6336-6353]:SimpleName[6336-6353]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6356-6482]:Block[6356-6482]"
  }, {
    "left" : "if (_currToken != null)",
    "right" : "if (_currToken != null)",
    "info" : "IfStatement[6366-6476]:IfStatement[6366-6476]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6390-6476]:Block[6390-6476]"
  }, {
    "left" : "_lastClearedToken = _currToken;",
    "right" : "_lastClearedToken = _currToken;",
    "info" : "ExpressionStatement[6404-6435]:ExpressionStatement[6404-6435]"
  }, {
    "left" : "_currToken = null;",
    "right" : "_currToken = null;",
    "info" : "ExpressionStatement[6448-6466]:ExpressionStatement[6448-6466]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6488-6497]:MarkerAnnotation[6488-6497]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6498-6504]:Modifier[6498-6504]"
  }, {
    "left" : "JsonToken",
    "right" : "JsonToken",
    "info" : "SimpleType[6505-6514]:SimpleType[6505-6514]"
  }, {
    "left" : "getLastClearedToken",
    "right" : "getLastClearedToken",
    "info" : "SimpleName[6515-6534]:SimpleName[6515-6534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6537-6566]:Block[6537-6566]"
  }, {
    "left" : "return _lastClearedToken;",
    "right" : "return _lastClearedToken;",
    "info" : "ReturnStatement[6539-6564]:ReturnStatement[6539-6564]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6572-6581]:MarkerAnnotation[6572-6581]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6582-6588]:Modifier[6582-6588]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[6589-6597]:Modifier[6589-6597]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6598-6602]:PrimitiveType[6598-6602]"
  }, {
    "left" : "overrideCurrentName",
    "right" : "overrideCurrentName",
    "info" : "SimpleName[6603-6622]:SimpleName[6603-6622]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[6623-6634]:SingleVariableDeclaration[6623-6634]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6843-6852]:MarkerAnnotation[6843-6852]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6853-6859]:Modifier[6853-6859]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[6860-6868]:Modifier[6860-6868]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[6869-6875]:SimpleType[6869-6875]"
  }, {
    "left" : "getText",
    "right" : "getText",
    "info" : "SimpleName[6876-6883]:SimpleName[6876-6883]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[6893-6904]:SimpleType[6893-6904]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6910-6919]:MarkerAnnotation[6910-6919]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6920-6926]:Modifier[6920-6926]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[6927-6935]:Modifier[6927-6935]"
  }, {
    "left" : "char[]",
    "right" : "char[]",
    "info" : "ArrayType[6936-6942]:ArrayType[6936-6942]"
  }, {
    "left" : "getTextCharacters",
    "right" : "getTextCharacters",
    "info" : "SimpleName[6943-6960]:SimpleName[6943-6960]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[6970-6981]:SimpleType[6970-6981]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6987-6996]:MarkerAnnotation[6987-6996]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6997-7003]:Modifier[6997-7003]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[7004-7012]:Modifier[7004-7012]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[7013-7020]:PrimitiveType[7013-7020]"
  }, {
    "left" : "hasTextCharacters",
    "right" : "hasTextCharacters",
    "info" : "SimpleName[7021-7038]:SimpleName[7021-7038]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7046-7055]:MarkerAnnotation[7046-7055]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7056-7062]:Modifier[7056-7062]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[7063-7071]:Modifier[7063-7071]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[7072-7075]:PrimitiveType[7072-7075]"
  }, {
    "left" : "getTextLength",
    "right" : "getTextLength",
    "info" : "SimpleName[7076-7089]:SimpleName[7076-7089]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[7099-7110]:SimpleType[7099-7110]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7116-7125]:MarkerAnnotation[7116-7125]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7126-7132]:Modifier[7126-7132]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[7133-7141]:Modifier[7133-7141]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[7142-7145]:PrimitiveType[7142-7145]"
  }, {
    "left" : "getTextOffset",
    "right" : "getTextOffset",
    "info" : "SimpleName[7146-7159]:SimpleName[7146-7159]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[7169-7180]:SimpleType[7169-7180]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7388-7397]:MarkerAnnotation[7388-7397]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7398-7404]:Modifier[7398-7404]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[7405-7413]:Modifier[7405-7413]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[7414-7420]:ArrayType[7414-7420]"
  }, {
    "left" : "getBinaryValue",
    "right" : "getBinaryValue",
    "info" : "SimpleName[7421-7435]:SimpleName[7421-7435]"
  }, {
    "left" : "Base64Variant b64variant",
    "right" : "Base64Variant b64variant",
    "info" : "SingleVariableDeclaration[7436-7460]:SingleVariableDeclaration[7436-7460]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[7469-7480]:SimpleType[7469-7480]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7682-7691]:MarkerAnnotation[7682-7691]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7696-7702]:Modifier[7696-7702]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[7703-7710]:PrimitiveType[7703-7710]"
  }, {
    "left" : "getValueAsBoolean",
    "right" : "getValueAsBoolean",
    "info" : "SimpleName[7711-7728]:SimpleName[7711-7728]"
  }, {
    "left" : "boolean defaultValue",
    "right" : "boolean defaultValue",
    "info" : "SingleVariableDeclaration[7729-7749]:SingleVariableDeclaration[7729-7749]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[7758-7769]:SimpleType[7758-7769]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7774-8766]:Block[7774-8766]"
  }, {
    "left" : "JsonToken t = _currToken;",
    "right" : "JsonToken t = _currToken;",
    "info" : "VariableDeclarationStatement[7784-7809]:VariableDeclarationStatement[7784-7809]"
  }, {
    "left" : "if (t != null)",
    "right" : "if (t != null)",
    "info" : "IfStatement[7818-8731]:IfStatement[7818-8731]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7833-8731]:Block[7833-8731]"
  }, {
    "left" : "switch (t.id()) {\n            case ID_STRING:\n                String str = getText().trim();\n                if (\"true\".equals(str)) {\n                    return true;\n                }\n                if (\"false\".equals(str)) {\n                    return false;\n                }\n                if (_hasTextualNull(str)) {\n                    return false;\n                }\n                break;\n            case ID_NUMBER_INT:\n                return getIntValue() != 0;\n            case ID_TRUE:\n                return true;\n            case ID_FALSE:\n            case ID_NULL:\n                return false;\n            case ID_EMBEDDED_OBJECT:\n                Object value = this.getEmbeddedObject();\n                if (value instanceof Boolean) {\n                    return (Boolean) value;\n                }\n                break;\n            default:\n            }",
    "right" : "switch (t.id()) {\n            case ID_STRING:\n                String str = getText().trim();\n                if (\"true\".equals(str)) {\n                    return true;\n                }\n                if (\"false\".equals(str)) {\n                    return false;\n                }\n                if (_hasTextualNull(str)) {\n                    return false;\n                }\n                break;\n            case ID_NUMBER_INT:\n                return getIntValue() != 0;\n            case ID_TRUE:\n                return true;\n            case ID_FALSE:\n            case ID_NULL:\n                return false;\n            case ID_EMBEDDED_OBJECT:\n                Object value = this.getEmbeddedObject();\n                if (value instanceof Boolean) {\n                    return (Boolean) value;\n                }\n                break;\n            default:\n            }",
    "info" : "SwitchStatement[7847-8721]:SwitchStatement[7847-8721]"
  }, {
    "left" : "case ID_STRING:",
    "right" : "case ID_STRING:",
    "info" : "SwitchCase[7877-7892]:SwitchCase[7877-7892]"
  }, {
    "left" : "String str = getText().trim();",
    "right" : "String str = getText().trim();",
    "info" : "VariableDeclarationStatement[7909-7939]:VariableDeclarationStatement[7909-7939]"
  }, {
    "left" : "if (\"true\".equals(str))",
    "right" : "if (\"true\".equals(str))",
    "info" : "IfStatement[7956-8032]:IfStatement[7956-8032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7980-8032]:Block[7980-8032]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[8002-8014]:ReturnStatement[8002-8014]"
  }, {
    "left" : "if (\"false\".equals(str))",
    "right" : "if (\"false\".equals(str))",
    "info" : "IfStatement[8049-8127]:IfStatement[8049-8127]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8074-8127]:Block[8074-8127]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[8096-8109]:ReturnStatement[8096-8109]"
  }, {
    "left" : "if (_hasTextualNull(str))",
    "right" : "if (_hasTextualNull(str))",
    "info" : "IfStatement[8144-8223]:IfStatement[8144-8223]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8170-8223]:Block[8170-8223]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[8192-8205]:ReturnStatement[8192-8205]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[8240-8246]:BreakStatement[8240-8246]"
  }, {
    "left" : "case ID_NUMBER_INT:",
    "right" : "case ID_NUMBER_INT:",
    "info" : "SwitchCase[8259-8278]:SwitchCase[8259-8278]"
  }, {
    "left" : "return getIntValue() != 0;",
    "right" : "return getIntValue() != 0;",
    "info" : "ReturnStatement[8295-8321]:ReturnStatement[8295-8321]"
  }, {
    "left" : "case ID_TRUE:",
    "right" : "case ID_TRUE:",
    "info" : "SwitchCase[8334-8347]:SwitchCase[8334-8347]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[8364-8376]:ReturnStatement[8364-8376]"
  }, {
    "left" : "case ID_FALSE:",
    "right" : "case ID_FALSE:",
    "info" : "SwitchCase[8389-8403]:SwitchCase[8389-8403]"
  }, {
    "left" : "case ID_NULL:",
    "right" : "case ID_NULL:",
    "info" : "SwitchCase[8416-8429]:SwitchCase[8416-8429]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[8446-8459]:ReturnStatement[8446-8459]"
  }, {
    "left" : "case ID_EMBEDDED_OBJECT:",
    "right" : "case ID_EMBEDDED_OBJECT:",
    "info" : "SwitchCase[8472-8496]:SwitchCase[8472-8496]"
  }, {
    "left" : "Object value = this.getEmbeddedObject();",
    "right" : "Object value = this.getEmbeddedObject();",
    "info" : "VariableDeclarationStatement[8513-8553]:VariableDeclarationStatement[8513-8553]"
  }, {
    "left" : "if (value instanceof Boolean)",
    "right" : "if (value instanceof Boolean)",
    "info" : "IfStatement[8570-8663]:IfStatement[8570-8663]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8600-8663]:Block[8600-8663]"
  }, {
    "left" : "return (Boolean) value;",
    "right" : "return (Boolean) value;",
    "info" : "ReturnStatement[8622-8645]:ReturnStatement[8622-8645]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[8680-8686]:BreakStatement[8680-8686]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[8699-8707]:SwitchCase[8699-8707]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[8740-8760]:ReturnStatement[8740-8760]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[8772-8781]:MarkerAnnotation[8772-8781]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8786-8792]:Modifier[8786-8792]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[8793-8796]:PrimitiveType[8793-8796]"
  }, {
    "left" : "getValueAsInt",
    "right" : "getValueAsInt",
    "info" : "SimpleName[8797-8810]:SimpleName[8797-8810]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[8820-8831]:SimpleType[8820-8831]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8836-9094]:Block[8836-9094]"
  }, {
    "left" : "JsonToken t = _currToken;",
    "right" : "JsonToken t = _currToken;",
    "info" : "VariableDeclarationStatement[8846-8871]:VariableDeclarationStatement[8846-8871]"
  }, {
    "left" : "if (t == JsonToken.VALUE_NUMBER_INT)",
    "right" : "if (t == JsonToken.VALUE_NUMBER_INT)",
    "info" : "IfStatement[8880-8962]:IfStatement[8880-8962]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8917-8962]:Block[8917-8962]"
  }, {
    "left" : "return getIntValue();",
    "right" : "return getIntValue();",
    "info" : "ReturnStatement[8931-8952]:ReturnStatement[8931-8952]"
  }, {
    "left" : "if (t == JsonToken.VALUE_NUMBER_FLOAT)",
    "right" : "if (t == JsonToken.VALUE_NUMBER_FLOAT)",
    "info" : "IfStatement[8971-9055]:IfStatement[8971-9055]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9010-9055]:Block[9010-9055]"
  }, {
    "left" : "return getIntValue();",
    "right" : "return getIntValue();",
    "info" : "ReturnStatement[9024-9045]:ReturnStatement[9024-9045]"
  }, {
    "left" : "return getValueAsInt(0);",
    "right" : "return getValueAsInt(0);",
    "info" : "ReturnStatement[9064-9088]:ReturnStatement[9064-9088]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[9100-9109]:MarkerAnnotation[9100-9109]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9114-9120]:Modifier[9114-9120]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[9121-9124]:PrimitiveType[9121-9124]"
  }, {
    "left" : "getValueAsInt",
    "right" : "getValueAsInt",
    "info" : "SimpleName[9125-9138]:SimpleName[9125-9138]"
  }, {
    "left" : "int defaultValue",
    "right" : "int defaultValue",
    "info" : "SingleVariableDeclaration[9139-9155]:SingleVariableDeclaration[9139-9155]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[9164-9175]:SimpleType[9164-9175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9180-10111]:Block[9180-10111]"
  }, {
    "left" : "JsonToken t = _currToken;",
    "right" : "JsonToken t = _currToken;",
    "info" : "VariableDeclarationStatement[9190-9215]:VariableDeclarationStatement[9190-9215]"
  }, {
    "left" : "if (t == JsonToken.VALUE_NUMBER_INT)",
    "right" : "if (t == JsonToken.VALUE_NUMBER_INT)",
    "info" : "IfStatement[9224-9306]:IfStatement[9224-9306]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9261-9306]:Block[9261-9306]"
  }, {
    "left" : "return getIntValue();",
    "right" : "return getIntValue();",
    "info" : "ReturnStatement[9275-9296]:ReturnStatement[9275-9296]"
  }, {
    "left" : "if (t == JsonToken.VALUE_NUMBER_FLOAT)",
    "right" : "if (t == JsonToken.VALUE_NUMBER_FLOAT)",
    "info" : "IfStatement[9315-9399]:IfStatement[9315-9399]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9354-9399]:Block[9354-9399]"
  }, {
    "left" : "return getIntValue();",
    "right" : "return getIntValue();",
    "info" : "ReturnStatement[9368-9389]:ReturnStatement[9368-9389]"
  }, {
    "left" : "if (t != null)",
    "right" : "if (t != null)",
    "info" : "IfStatement[9408-10076]:IfStatement[9408-10076]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9423-10076]:Block[9423-10076]"
  }, {
    "left" : "switch (t.id()) {\n            case ID_STRING:\n                String str = getText();\n                if (_hasTextualNull(str)) {\n                    return 0;\n                }\n                return NumberInput.parseAsInt(str, defaultValue);\n            case ID_TRUE:\n                return 1;\n            case ID_FALSE:\n                return 0;\n            case ID_NULL:\n                return 0;\n            case ID_EMBEDDED_OBJECT:\n                Object value = this.getEmbeddedObject();\n                if (value instanceof Number) {\n                    return ((Number) value).intValue();\n                }\n            }",
    "right" : "switch (t.id()) {\n            case ID_STRING:\n                String str = getText();\n                if (_hasTextualNull(str)) {\n                    return 0;\n                }\n                return NumberInput.parseAsInt(str, defaultValue);\n            case ID_TRUE:\n                return 1;\n            case ID_FALSE:\n                return 0;\n            case ID_NULL:\n                return 0;\n            case ID_EMBEDDED_OBJECT:\n                Object value = this.getEmbeddedObject();\n                if (value instanceof Number) {\n                    return ((Number) value).intValue();\n                }\n            }",
    "info" : "SwitchStatement[9437-10066]:SwitchStatement[9437-10066]"
  }, {
    "left" : "case ID_STRING:",
    "right" : "case ID_STRING:",
    "info" : "SwitchCase[9467-9482]:SwitchCase[9467-9482]"
  }, {
    "left" : "String str = getText();",
    "right" : "String str = getText();",
    "info" : "VariableDeclarationStatement[9499-9522]:VariableDeclarationStatement[9499-9522]"
  }, {
    "left" : "if (_hasTextualNull(str))",
    "right" : "if (_hasTextualNull(str))",
    "info" : "IfStatement[9539-9614]:IfStatement[9539-9614]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9565-9614]:Block[9565-9614]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[9587-9596]:ReturnStatement[9587-9596]"
  }, {
    "left" : "return NumberInput.parseAsInt(str, defaultValue);",
    "right" : "return NumberInput.parseAsInt(str, defaultValue);",
    "info" : "ReturnStatement[9631-9680]:ReturnStatement[9631-9680]"
  }, {
    "left" : "case ID_TRUE:",
    "right" : "case ID_TRUE:",
    "info" : "SwitchCase[9693-9706]:SwitchCase[9693-9706]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[9723-9732]:ReturnStatement[9723-9732]"
  }, {
    "left" : "case ID_FALSE:",
    "right" : "case ID_FALSE:",
    "info" : "SwitchCase[9745-9759]:SwitchCase[9745-9759]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[9776-9785]:ReturnStatement[9776-9785]"
  }, {
    "left" : "case ID_NULL:",
    "right" : "case ID_NULL:",
    "info" : "SwitchCase[9798-9811]:SwitchCase[9798-9811]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[9828-9837]:ReturnStatement[9828-9837]"
  }, {
    "left" : "case ID_EMBEDDED_OBJECT:",
    "right" : "case ID_EMBEDDED_OBJECT:",
    "info" : "SwitchCase[9850-9874]:SwitchCase[9850-9874]"
  }, {
    "left" : "Object value = this.getEmbeddedObject();",
    "right" : "Object value = this.getEmbeddedObject();",
    "info" : "VariableDeclarationStatement[9891-9931]:VariableDeclarationStatement[9891-9931]"
  }, {
    "left" : "if (value instanceof Number)",
    "right" : "if (value instanceof Number)",
    "info" : "IfStatement[9948-10052]:IfStatement[9948-10052]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9977-10052]:Block[9977-10052]"
  }, {
    "left" : "return ((Number) value).intValue();",
    "right" : "return ((Number) value).intValue();",
    "info" : "ReturnStatement[9999-10034]:ReturnStatement[9999-10034]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[10085-10105]:ReturnStatement[10085-10105]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[10117-10126]:MarkerAnnotation[10117-10126]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10131-10137]:Modifier[10131-10137]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[10138-10142]:PrimitiveType[10138-10142]"
  }, {
    "left" : "getValueAsLong",
    "right" : "getValueAsLong",
    "info" : "SimpleName[10143-10157]:SimpleName[10143-10157]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[10167-10178]:SimpleType[10167-10178]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10183-10445]:Block[10183-10445]"
  }, {
    "left" : "JsonToken t = _currToken;",
    "right" : "JsonToken t = _currToken;",
    "info" : "VariableDeclarationStatement[10193-10218]:VariableDeclarationStatement[10193-10218]"
  }, {
    "left" : "if (t == JsonToken.VALUE_NUMBER_INT)",
    "right" : "if (t == JsonToken.VALUE_NUMBER_INT)",
    "info" : "IfStatement[10227-10310]:IfStatement[10227-10310]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10264-10310]:Block[10264-10310]"
  }, {
    "left" : "return getLongValue();",
    "right" : "return getLongValue();",
    "info" : "ReturnStatement[10278-10300]:ReturnStatement[10278-10300]"
  }, {
    "left" : "if (t == JsonToken.VALUE_NUMBER_FLOAT)",
    "right" : "if (t == JsonToken.VALUE_NUMBER_FLOAT)",
    "info" : "IfStatement[10319-10404]:IfStatement[10319-10404]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10358-10404]:Block[10358-10404]"
  }, {
    "left" : "return getLongValue();",
    "right" : "return getLongValue();",
    "info" : "ReturnStatement[10372-10394]:ReturnStatement[10372-10394]"
  }, {
    "left" : "return getValueAsLong(0L);",
    "right" : "return getValueAsLong(0L);",
    "info" : "ReturnStatement[10413-10439]:ReturnStatement[10413-10439]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[10455-10464]:MarkerAnnotation[10455-10464]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10469-10475]:Modifier[10469-10475]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[10476-10480]:PrimitiveType[10476-10480]"
  }, {
    "left" : "getValueAsLong",
    "right" : "getValueAsLong",
    "info" : "SimpleName[10481-10495]:SimpleName[10481-10495]"
  }, {
    "left" : "long defaultValue",
    "right" : "long defaultValue",
    "info" : "SingleVariableDeclaration[10496-10513]:SingleVariableDeclaration[10496-10513]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[10522-10533]:SimpleType[10522-10533]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10538-11450]:Block[10538-11450]"
  }, {
    "left" : "JsonToken t = _currToken;",
    "right" : "JsonToken t = _currToken;",
    "info" : "VariableDeclarationStatement[10548-10573]:VariableDeclarationStatement[10548-10573]"
  }, {
    "left" : "if (t == JsonToken.VALUE_NUMBER_INT)",
    "right" : "if (t == JsonToken.VALUE_NUMBER_INT)",
    "info" : "IfStatement[10582-10665]:IfStatement[10582-10665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10619-10665]:Block[10619-10665]"
  }, {
    "left" : "return getLongValue();",
    "right" : "return getLongValue();",
    "info" : "ReturnStatement[10633-10655]:ReturnStatement[10633-10655]"
  }, {
    "left" : "if (t == JsonToken.VALUE_NUMBER_FLOAT)",
    "right" : "if (t == JsonToken.VALUE_NUMBER_FLOAT)",
    "info" : "IfStatement[10674-10759]:IfStatement[10674-10759]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10713-10759]:Block[10713-10759]"
  }, {
    "left" : "return getLongValue();",
    "right" : "return getLongValue();",
    "info" : "ReturnStatement[10727-10749]:ReturnStatement[10727-10749]"
  }, {
    "left" : "if (t != null)",
    "right" : "if (t != null)",
    "info" : "IfStatement[10768-11415]:IfStatement[10768-11415]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10783-11415]:Block[10783-11415]"
  }, {
    "left" : "switch (t.id()) {\n            case ID_STRING:\n                String str = getText();\n                if (_hasTextualNull(str)) {\n                    return 0L;\n                }\n                return NumberInput.parseAsLong(str, defaultValue);\n            case ID_TRUE:\n                return 1L;\n            case ID_FALSE:\n            case ID_NULL:\n                return 0L;\n            case ID_EMBEDDED_OBJECT:\n                Object value = this.getEmbeddedObject();\n                if (value instanceof Number) {\n                    return ((Number) value).longValue();\n                }\n            }",
    "right" : "switch (t.id()) {\n            case ID_STRING:\n                String str = getText();\n                if (_hasTextualNull(str)) {\n                    return 0L;\n                }\n                return NumberInput.parseAsLong(str, defaultValue);\n            case ID_TRUE:\n                return 1L;\n            case ID_FALSE:\n            case ID_NULL:\n                return 0L;\n            case ID_EMBEDDED_OBJECT:\n                Object value = this.getEmbeddedObject();\n                if (value instanceof Number) {\n                    return ((Number) value).longValue();\n                }\n            }",
    "info" : "SwitchStatement[10797-11405]:SwitchStatement[10797-11405]"
  }, {
    "left" : "case ID_STRING:",
    "right" : "case ID_STRING:",
    "info" : "SwitchCase[10827-10842]:SwitchCase[10827-10842]"
  }, {
    "left" : "String str = getText();",
    "right" : "String str = getText();",
    "info" : "VariableDeclarationStatement[10859-10882]:VariableDeclarationStatement[10859-10882]"
  }, {
    "left" : "if (_hasTextualNull(str))",
    "right" : "if (_hasTextualNull(str))",
    "info" : "IfStatement[10899-10975]:IfStatement[10899-10975]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10925-10975]:Block[10925-10975]"
  }, {
    "left" : "return 0L;",
    "right" : "return 0L;",
    "info" : "ReturnStatement[10947-10957]:ReturnStatement[10947-10957]"
  }, {
    "left" : "return NumberInput.parseAsLong(str, defaultValue);",
    "right" : "return NumberInput.parseAsLong(str, defaultValue);",
    "info" : "ReturnStatement[10992-11042]:ReturnStatement[10992-11042]"
  }, {
    "left" : "case ID_TRUE:",
    "right" : "case ID_TRUE:",
    "info" : "SwitchCase[11055-11068]:SwitchCase[11055-11068]"
  }, {
    "left" : "return 1L;",
    "right" : "return 1L;",
    "info" : "ReturnStatement[11085-11095]:ReturnStatement[11085-11095]"
  }, {
    "left" : "case ID_FALSE:",
    "right" : "case ID_FALSE:",
    "info" : "SwitchCase[11108-11122]:SwitchCase[11108-11122]"
  }, {
    "left" : "case ID_NULL:",
    "right" : "case ID_NULL:",
    "info" : "SwitchCase[11135-11148]:SwitchCase[11135-11148]"
  }, {
    "left" : "return 0L;",
    "right" : "return 0L;",
    "info" : "ReturnStatement[11165-11175]:ReturnStatement[11165-11175]"
  }, {
    "left" : "case ID_EMBEDDED_OBJECT:",
    "right" : "case ID_EMBEDDED_OBJECT:",
    "info" : "SwitchCase[11188-11212]:SwitchCase[11188-11212]"
  }, {
    "left" : "Object value = this.getEmbeddedObject();",
    "right" : "Object value = this.getEmbeddedObject();",
    "info" : "VariableDeclarationStatement[11229-11269]:VariableDeclarationStatement[11229-11269]"
  }, {
    "left" : "if (value instanceof Number)",
    "right" : "if (value instanceof Number)",
    "info" : "IfStatement[11286-11391]:IfStatement[11286-11391]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11315-11391]:Block[11315-11391]"
  }, {
    "left" : "return ((Number) value).longValue();",
    "right" : "return ((Number) value).longValue();",
    "info" : "ReturnStatement[11337-11373]:ReturnStatement[11337-11373]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[11424-11444]:ReturnStatement[11424-11444]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[11456-11465]:MarkerAnnotation[11456-11465]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11470-11476]:Modifier[11470-11476]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[11477-11483]:PrimitiveType[11477-11483]"
  }, {
    "left" : "getValueAsDouble",
    "right" : "getValueAsDouble",
    "info" : "SimpleName[11484-11500]:SimpleName[11484-11500]"
  }, {
    "left" : "double defaultValue",
    "right" : "double defaultValue",
    "info" : "SingleVariableDeclaration[11501-11520]:SingleVariableDeclaration[11501-11520]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[11529-11540]:SimpleType[11529-11540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11545-12384]:Block[11545-12384]"
  }, {
    "left" : "JsonToken t = _currToken;",
    "right" : "JsonToken t = _currToken;",
    "info" : "VariableDeclarationStatement[11555-11580]:VariableDeclarationStatement[11555-11580]"
  }, {
    "left" : "if (t != null)",
    "right" : "if (t != null)",
    "info" : "IfStatement[11589-12349]:IfStatement[11589-12349]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11604-12349]:Block[11604-12349]"
  }, {
    "left" : "switch (t.id()) {\n            case ID_STRING:\n                String str = getText();\n                if (_hasTextualNull(str)) {\n                    return 0L;\n                }\n                return NumberInput.parseAsDouble(str, defaultValue);\n            case ID_NUMBER_INT:\n            case ID_NUMBER_FLOAT:\n                return getDoubleValue();\n            case ID_TRUE:\n                return 1.0;\n            case ID_FALSE:\n            case ID_NULL:\n                return 0.0;\n            case ID_EMBEDDED_OBJECT:\n                Object value = this.getEmbeddedObject();\n                if (value instanceof Number) {\n                    return ((Number) value).doubleValue();\n                }\n            }",
    "right" : "switch (t.id()) {\n            case ID_STRING:\n                String str = getText();\n                if (_hasTextualNull(str)) {\n                    return 0L;\n                }\n                return NumberInput.parseAsDouble(str, defaultValue);\n            case ID_NUMBER_INT:\n            case ID_NUMBER_FLOAT:\n                return getDoubleValue();\n            case ID_TRUE:\n                return 1.0;\n            case ID_FALSE:\n            case ID_NULL:\n                return 0.0;\n            case ID_EMBEDDED_OBJECT:\n                Object value = this.getEmbeddedObject();\n                if (value instanceof Number) {\n                    return ((Number) value).doubleValue();\n                }\n            }",
    "info" : "SwitchStatement[11618-12339]:SwitchStatement[11618-12339]"
  }, {
    "left" : "case ID_STRING:",
    "right" : "case ID_STRING:",
    "info" : "SwitchCase[11648-11663]:SwitchCase[11648-11663]"
  }, {
    "left" : "String str = getText();",
    "right" : "String str = getText();",
    "info" : "VariableDeclarationStatement[11680-11703]:VariableDeclarationStatement[11680-11703]"
  }, {
    "left" : "if (_hasTextualNull(str))",
    "right" : "if (_hasTextualNull(str))",
    "info" : "IfStatement[11720-11796]:IfStatement[11720-11796]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11746-11796]:Block[11746-11796]"
  }, {
    "left" : "return 0L;",
    "right" : "return 0L;",
    "info" : "ReturnStatement[11768-11778]:ReturnStatement[11768-11778]"
  }, {
    "left" : "return NumberInput.parseAsDouble(str, defaultValue);",
    "right" : "return NumberInput.parseAsDouble(str, defaultValue);",
    "info" : "ReturnStatement[11813-11865]:ReturnStatement[11813-11865]"
  }, {
    "left" : "case ID_NUMBER_INT:",
    "right" : "case ID_NUMBER_INT:",
    "info" : "SwitchCase[11878-11897]:SwitchCase[11878-11897]"
  }, {
    "left" : "case ID_NUMBER_FLOAT:",
    "right" : "case ID_NUMBER_FLOAT:",
    "info" : "SwitchCase[11910-11931]:SwitchCase[11910-11931]"
  }, {
    "left" : "return getDoubleValue();",
    "right" : "return getDoubleValue();",
    "info" : "ReturnStatement[11948-11972]:ReturnStatement[11948-11972]"
  }, {
    "left" : "case ID_TRUE:",
    "right" : "case ID_TRUE:",
    "info" : "SwitchCase[11985-11998]:SwitchCase[11985-11998]"
  }, {
    "left" : "return 1.0;",
    "right" : "return 1.0;",
    "info" : "ReturnStatement[12015-12026]:ReturnStatement[12015-12026]"
  }, {
    "left" : "case ID_FALSE:",
    "right" : "case ID_FALSE:",
    "info" : "SwitchCase[12039-12053]:SwitchCase[12039-12053]"
  }, {
    "left" : "case ID_NULL:",
    "right" : "case ID_NULL:",
    "info" : "SwitchCase[12066-12079]:SwitchCase[12066-12079]"
  }, {
    "left" : "return 0.0;",
    "right" : "return 0.0;",
    "info" : "ReturnStatement[12096-12107]:ReturnStatement[12096-12107]"
  }, {
    "left" : "case ID_EMBEDDED_OBJECT:",
    "right" : "case ID_EMBEDDED_OBJECT:",
    "info" : "SwitchCase[12120-12144]:SwitchCase[12120-12144]"
  }, {
    "left" : "Object value = this.getEmbeddedObject();",
    "right" : "Object value = this.getEmbeddedObject();",
    "info" : "VariableDeclarationStatement[12161-12201]:VariableDeclarationStatement[12161-12201]"
  }, {
    "left" : "if (value instanceof Number)",
    "right" : "if (value instanceof Number)",
    "info" : "IfStatement[12218-12325]:IfStatement[12218-12325]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12247-12325]:Block[12247-12325]"
  }, {
    "left" : "return ((Number) value).doubleValue();",
    "right" : "return ((Number) value).doubleValue();",
    "info" : "ReturnStatement[12269-12307]:ReturnStatement[12269-12307]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[12358-12378]:ReturnStatement[12358-12378]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[12390-12399]:MarkerAnnotation[12390-12399]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12404-12410]:Modifier[12404-12410]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[12411-12417]:SimpleType[12411-12417]"
  }, {
    "left" : "getValueAsString",
    "right" : "getValueAsString",
    "info" : "SimpleName[12418-12434]:SimpleName[12418-12434]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[12444-12455]:SimpleType[12444-12455]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12456-12594]:Block[12456-12691]"
  }, {
    "left" : "if (_currToken == JsonToken.VALUE_STRING)",
    "right" : "if (_currToken == JsonToken.VALUE_STRING)",
    "info" : "IfStatement[12466-12549]:IfStatement[12466-12549]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12508-12549]:Block[12508-12549]"
  }, {
    "left" : "return getText();",
    "right" : "return getText();",
    "info" : "ReturnStatement[12522-12539]:ReturnStatement[12522-12539]"
  }, {
    "left" : "return getValueAsString(null);",
    "right" : "return getValueAsString(null);",
    "info" : "ReturnStatement[12558-12588]:ReturnStatement[12655-12685]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[12604-12613]:MarkerAnnotation[12701-12710]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12618-12624]:Modifier[12715-12721]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[12625-12631]:SimpleType[12722-12728]"
  }, {
    "left" : "getValueAsString",
    "right" : "getValueAsString",
    "info" : "SimpleName[12632-12648]:SimpleName[12729-12745]"
  }, {
    "left" : "String defaultValue",
    "right" : "String defaultValue",
    "info" : "SingleVariableDeclaration[12649-12668]:SingleVariableDeclaration[12746-12765]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[12677-12688]:SimpleType[12774-12785]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12689-12960]:Block[12786-13154]"
  }, {
    "left" : "if (_currToken == JsonToken.VALUE_STRING)",
    "right" : "if (_currToken == JsonToken.VALUE_STRING)",
    "info" : "IfStatement[12699-12782]:IfStatement[12796-12879]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12741-12782]:Block[12838-12879]"
  }, {
    "left" : "return getText();",
    "right" : "return getText();",
    "info" : "ReturnStatement[12755-12772]:ReturnStatement[12852-12869]"
  }, {
    "left" : "if (_currToken == null || _currToken == JsonToken.VALUE_NULL || !_currToken.isScalarValue())",
    "right" : "if (_currToken == null || _currToken == JsonToken.VALUE_NULL || !_currToken.isScalarValue())",
    "info" : "IfStatement[12791-12928]:IfStatement[12985-13122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12884-12928]:Block[13078-13122]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[12898-12918]:ReturnStatement[13092-13112]"
  }, {
    "left" : "return getText();",
    "right" : "return getText();",
    "info" : "ReturnStatement[12937-12954]:ReturnStatement[13131-13148]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[13284-13293]:Modifier[13478-13487]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13294-13298]:PrimitiveType[13488-13492]"
  }, {
    "left" : "_decodeBase64",
    "right" : "_decodeBase64",
    "info" : "SimpleName[13299-13312]:SimpleName[13493-13506]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[13313-13323]:SingleVariableDeclaration[13507-13517]"
  }, {
    "left" : "ByteArrayBuilder builder",
    "right" : "ByteArrayBuilder builder",
    "info" : "SingleVariableDeclaration[13325-13349]:SingleVariableDeclaration[13519-13543]"
  }, {
    "left" : "Base64Variant b64variant",
    "right" : "Base64Variant b64variant",
    "info" : "SingleVariableDeclaration[13351-13375]:SingleVariableDeclaration[13545-13569]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[13384-13395]:SimpleType[13578-13589]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13400-13620]:Block[13594-13814]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[13465-13614]:TryStatement[13659-13808]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13469-13525]:Block[13663-13719]"
  }, {
    "left" : "b64variant.decode(str, builder);",
    "right" : "b64variant.decode(str, builder);",
    "info" : "ExpressionStatement[13483-13515]:ExpressionStatement[13677-13709]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13561-13614]:Block[13755-13808]"
  }, {
    "left" : "_reportError(e.getMessage());",
    "right" : "_reportError(e.getMessage());",
    "info" : "ExpressionStatement[13575-13604]:ExpressionStatement[13769-13798]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[13827-13838]:MarkerAnnotation[14021-14032]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[13843-13852]:Modifier[14037-14046]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13853-13857]:PrimitiveType[14047-14051]"
  }, {
    "left" : "_reportInvalidBase64",
    "right" : "_reportInvalidBase64",
    "info" : "SimpleName[13858-13878]:SimpleName[14052-14072]"
  }, {
    "left" : "Base64Variant b64variant",
    "right" : "Base64Variant b64variant",
    "info" : "SingleVariableDeclaration[13879-13903]:SingleVariableDeclaration[14073-14097]"
  }, {
    "left" : "char ch",
    "right" : "char ch",
    "info" : "SingleVariableDeclaration[13905-13912]:SingleVariableDeclaration[14099-14106]"
  }, {
    "left" : "int bindex",
    "right" : "int bindex",
    "info" : "SingleVariableDeclaration[13914-13924]:SingleVariableDeclaration[14108-14118]"
  }, {
    "left" : "String msg",
    "right" : "String msg",
    "info" : "SingleVariableDeclaration[13926-13936]:SingleVariableDeclaration[14120-14130]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[13953-13971]:SimpleType[14147-14165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13976-14960]:Block[14170-15154]"
  }, {
    "left" : "String base;",
    "right" : "String base;",
    "info" : "VariableDeclarationStatement[13986-13998]:VariableDeclarationStatement[14180-14192]"
  }, {
    "left" : "if (ch <= INT_SPACE)",
    "right" : "if (ch <= INT_SPACE)",
    "info" : "IfStatement[14007-14842]:IfStatement[14201-15036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14028-14208]:Block[14222-14402]"
  }, {
    "left" : "base = \"Illegal white space character (code 0x\"+Integer.toHexString(ch)+\") as character #\"+(bindex+1)+\" of 4-char base64 unit: can only used between units\";",
    "right" : "base = \"Illegal white space character (code 0x\"+Integer.toHexString(ch)+\") as character #\"+(bindex+1)+\" of 4-char base64 unit: can only used between units\";",
    "info" : "ExpressionStatement[14042-14198]:ExpressionStatement[14236-14392]"
  }, {
    "left" : "if (b64variant.usesPaddingChar(ch))",
    "right" : "if (b64variant.usesPaddingChar(ch))",
    "info" : "IfStatement[14214-14842]:IfStatement[14408-15036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14250-14443]:Block[14444-14637]"
  }, {
    "left" : "base = \"Unexpected padding character ('\"+b64variant.getPaddingChar()+\"') as character #\"+(bindex+1)+\" of 4-char base64 unit: padding only legal as 3rd or 4th character\";",
    "right" : "base = \"Unexpected padding character ('\"+b64variant.getPaddingChar()+\"') as character #\"+(bindex+1)+\" of 4-char base64 unit: padding only legal as 3rd or 4th character\";",
    "info" : "ExpressionStatement[14264-14433]:ExpressionStatement[14458-14627]"
  }, {
    "left" : "if (!Character.isDefined(ch) || Character.isISOControl(ch))",
    "right" : "if (!Character.isDefined(ch) || Character.isISOControl(ch))",
    "info" : "IfStatement[14449-14842]:IfStatement[14643-15036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14509-14721]:Block[14703-14915]"
  }, {
    "left" : "base = \"Illegal character (code 0x\"+Integer.toHexString(ch)+\") in base64 content\";",
    "right" : "base = \"Illegal character (code 0x\"+Integer.toHexString(ch)+\") in base64 content\";",
    "info" : "ExpressionStatement[14629-14711]:ExpressionStatement[14823-14905]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14727-14842]:Block[14921-15036]"
  }, {
    "left" : "base = \"Illegal character '\"+ch+\"' (code 0x\"+Integer.toHexString(ch)+\") in base64 content\";",
    "right" : "base = \"Illegal character '\"+ch+\"' (code 0x\"+Integer.toHexString(ch)+\") in base64 content\";",
    "info" : "ExpressionStatement[14741-14832]:ExpressionStatement[14935-15026]"
  }, {
    "left" : "if (msg != null)",
    "right" : "if (msg != null)",
    "info" : "IfStatement[14851-14917]:IfStatement[15045-15111]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14868-14917]:Block[15062-15111]"
  }, {
    "left" : "base = base + \": \" + msg;",
    "right" : "base = base + \": \" + msg;",
    "info" : "ExpressionStatement[14882-14907]:ExpressionStatement[15076-15101]"
  }, {
    "left" : "throw _constructError(base);",
    "right" : "throw _constructError(base);",
    "info" : "ThrowStatement[14926-14954]:ThrowStatement[15120-15148]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[15041-15052]:MarkerAnnotation[15235-15246]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[15057-15066]:Modifier[15251-15260]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15067-15071]:PrimitiveType[15261-15265]"
  }, {
    "left" : "_reportBase64EOF",
    "right" : "_reportBase64EOF",
    "info" : "SimpleName[15072-15088]:SimpleName[15266-15282]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[15098-15116]:SimpleType[15292-15310]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15117-15201]:Block[15311-15395]"
  }, {
    "left" : "throw _constructError(\"Unexpected end-of-String in base64 content\");",
    "right" : "throw _constructError(\"Unexpected end-of-String in base64 content\");",
    "info" : "ThrowStatement[15127-15195]:ThrowStatement[15321-15389]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[15669-15678]:Modifier[15863-15872]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[15679-15686]:PrimitiveType[15873-15880]"
  }, {
    "left" : "_hasTextualNull",
    "right" : "_hasTextualNull",
    "info" : "SimpleName[15687-15702]:SimpleName[15881-15896]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[15703-15715]:SingleVariableDeclaration[15897-15909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15717-15749]:Block[15911-15943]"
  }, {
    "left" : "return \"null\".equals(value);",
    "right" : "return \"null\".equals(value);",
    "info" : "ReturnStatement[15719-15747]:ReturnStatement[15913-15941]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[15930-15939]:Modifier[16124-16133]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15940-15944]:PrimitiveType[16134-16138]"
  }, {
    "left" : "_reportUnexpectedChar",
    "right" : "_reportUnexpectedChar",
    "info" : "SimpleName[15945-15966]:SimpleName[16139-16160]"
  }, {
    "left" : "int ch",
    "right" : "int ch",
    "info" : "SingleVariableDeclaration[15967-15973]:SingleVariableDeclaration[16161-16167]"
  }, {
    "left" : "String comment",
    "right" : "String comment",
    "info" : "SingleVariableDeclaration[15975-15989]:SingleVariableDeclaration[16169-16183]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[15998-16016]:SimpleType[16192-16210]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16021-16278]:Block[16215-16472]"
  }, {
    "left" : "if (ch < 0)",
    "right" : "if (ch < 0)",
    "info" : "IfStatement[16031-16103]:IfStatement[16225-16297]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16043-16103]:Block[16237-16297]"
  }, {
    "left" : "_reportInvalidEOF();",
    "right" : "_reportInvalidEOF();",
    "info" : "ExpressionStatement[16073-16093]:ExpressionStatement[16267-16287]"
  }, {
    "left" : "String msg = \"Unexpected character (\"+_getCharDesc(ch)+\")\";",
    "right" : "String msg = \"Unexpected character (\"+_getCharDesc(ch)+\")\";",
    "info" : "VariableDeclarationStatement[16112-16171]:VariableDeclarationStatement[16306-16365]"
  }, {
    "left" : "if (comment != null)",
    "right" : "if (comment != null)",
    "info" : "IfStatement[16180-16245]:IfStatement[16374-16439]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16201-16245]:Block[16395-16439]"
  }, {
    "left" : "msg += \": \"+comment;",
    "right" : "msg += \": \"+comment;",
    "info" : "ExpressionStatement[16215-16235]:ExpressionStatement[16409-16429]"
  }, {
    "left" : "_reportError(msg);",
    "right" : "_reportError(msg);",
    "info" : "ExpressionStatement[16254-16272]:ExpressionStatement[16448-16466]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16284-16293]:Modifier[16478-16487]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16294-16298]:PrimitiveType[16488-16492]"
  }, {
    "left" : "_reportInvalidEOF",
    "right" : "_reportInvalidEOF",
    "info" : "SimpleName[16299-16316]:SimpleName[16493-16510]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[16326-16344]:SimpleType[16520-16538]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16345-16398]:Block[16539-16592]"
  }, {
    "left" : "_reportInvalidEOF(\" in \"+_currToken);",
    "right" : "_reportInvalidEOF(\" in \"+_currToken);",
    "info" : "ExpressionStatement[16355-16392]:ExpressionStatement[16549-16586]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16404-16413]:Modifier[16598-16607]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16414-16418]:PrimitiveType[16608-16612]"
  }, {
    "left" : "_reportInvalidEOF",
    "right" : "_reportInvalidEOF",
    "info" : "SimpleName[16419-16436]:SimpleName[16613-16630]"
  }, {
    "left" : "String msg",
    "right" : "String msg",
    "info" : "SingleVariableDeclaration[16437-16447]:SingleVariableDeclaration[16631-16641]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[16456-16474]:SimpleType[16650-16668]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16475-16535]:Block[16669-16729]"
  }, {
    "left" : "_reportError(\"Unexpected end-of-input\"+msg);",
    "right" : "_reportError(\"Unexpected end-of-input\"+msg);",
    "info" : "ExpressionStatement[16485-16529]:ExpressionStatement[16679-16723]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16541-16550]:Modifier[16735-16744]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16551-16555]:PrimitiveType[16745-16749]"
  }, {
    "left" : "_reportInvalidEOFInValue",
    "right" : "_reportInvalidEOFInValue",
    "info" : "SimpleName[16556-16580]:SimpleName[16750-16774]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[16590-16608]:SimpleType[16784-16802]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16609-16658]:Block[16803-16852]"
  }, {
    "left" : "_reportInvalidEOF(\" in a value\");",
    "right" : "_reportInvalidEOF(\" in a value\");",
    "info" : "ExpressionStatement[16619-16652]:ExpressionStatement[16813-16846]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16664-16673]:Modifier[16858-16867]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16674-16678]:PrimitiveType[16868-16872]"
  }, {
    "left" : "_reportMissingRootWS",
    "right" : "_reportMissingRootWS",
    "info" : "SimpleName[16679-16699]:SimpleName[16873-16893]"
  }, {
    "left" : "int ch",
    "right" : "int ch",
    "info" : "SingleVariableDeclaration[16700-16706]:SingleVariableDeclaration[16894-16900]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[16715-16733]:SimpleType[16909-16927]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16734-16823]:Block[16928-17017]"
  }, {
    "left" : "_reportUnexpectedChar(ch, \"Expected space separating root-level values\");",
    "right" : "_reportUnexpectedChar(ch, \"Expected space separating root-level values\");",
    "info" : "ExpressionStatement[16744-16817]:ExpressionStatement[16938-17011]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[16833-16842]:Modifier[17027-17036]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16843-16847]:PrimitiveType[17037-17041]"
  }, {
    "left" : "_throwInvalidSpace",
    "right" : "_throwInvalidSpace",
    "info" : "SimpleName[16848-16866]:SimpleName[17042-17060]"
  }, {
    "left" : "int i",
    "right" : "int i",
    "info" : "SingleVariableDeclaration[16867-16872]:SingleVariableDeclaration[17061-17066]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[16881-16899]:SimpleType[17075-17093]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16900-17093]:Block[17094-17287]"
  }, {
    "left" : "char c = (char) i;",
    "right" : "char c = (char) i;",
    "info" : "VariableDeclarationStatement[16910-16928]:VariableDeclarationStatement[17104-17122]"
  }, {
    "left" : "String msg = \"Illegal character (\"+_getCharDesc(c)+\"): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\";",
    "right" : "String msg = \"Illegal character (\"+_getCharDesc(c)+\"): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\";",
    "info" : "VariableDeclarationStatement[16937-17060]:VariableDeclarationStatement[17131-17254]"
  }, {
    "left" : "_reportError(msg);",
    "right" : "_reportError(msg);",
    "info" : "ExpressionStatement[17069-17087]:ExpressionStatement[17263-17281]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[17331-17340]:Modifier[17525-17534]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[17341-17345]:PrimitiveType[17535-17539]"
  }, {
    "left" : "_throwUnquotedSpace",
    "right" : "_throwUnquotedSpace",
    "info" : "SimpleName[17346-17365]:SimpleName[17540-17559]"
  }, {
    "left" : "int i",
    "right" : "int i",
    "info" : "SingleVariableDeclaration[17366-17371]:SingleVariableDeclaration[17560-17565]"
  }, {
    "left" : "String ctxtDesc",
    "right" : "String ctxtDesc",
    "info" : "SingleVariableDeclaration[17373-17388]:SingleVariableDeclaration[17567-17582]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[17397-17415]:SimpleType[17591-17609]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17416-17782]:Block[17610-17976]"
  }, {
    "left" : "if (!isEnabled(Feature.ALLOW_UNQUOTED_CONTROL_CHARS) || i > INT_SPACE)",
    "right" : "if (!isEnabled(Feature.ALLOW_UNQUOTED_CONTROL_CHARS) || i > INT_SPACE)",
    "info" : "IfStatement[17492-17776]:IfStatement[17686-17970]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17563-17776]:Block[17757-17970]"
  }, {
    "left" : "char c = (char) i;",
    "right" : "char c = (char) i;",
    "info" : "VariableDeclarationStatement[17577-17595]:VariableDeclarationStatement[17771-17789]"
  }, {
    "left" : "String msg = \"Illegal unquoted character (\"+_getCharDesc(c)+\"): has to be escaped using backslash to be included in \"+ctxtDesc;",
    "right" : "String msg = \"Illegal unquoted character (\"+_getCharDesc(c)+\"): has to be escaped using backslash to be included in \"+ctxtDesc;",
    "info" : "VariableDeclarationStatement[17608-17735]:VariableDeclarationStatement[17802-17929]"
  }, {
    "left" : "_reportError(msg);",
    "right" : "_reportError(msg);",
    "info" : "ExpressionStatement[17748-17766]:ExpressionStatement[17942-17960]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[17788-17797]:Modifier[17982-17991]"
  }, {
    "left" : "char",
    "right" : "char",
    "info" : "PrimitiveType[17798-17802]:PrimitiveType[17992-17996]"
  }, {
    "left" : "_handleUnrecognizedCharacterEscape",
    "right" : "_handleUnrecognizedCharacterEscape",
    "info" : "SimpleName[17803-17837]:SimpleName[17997-18031]"
  }, {
    "left" : "char ch",
    "right" : "char ch",
    "info" : "SingleVariableDeclaration[17838-17845]:SingleVariableDeclaration[18032-18039]"
  }, {
    "left" : "JsonProcessingException",
    "right" : "JsonProcessingException",
    "info" : "SimpleType[17854-17877]:SimpleType[18048-18071]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17878-18245]:Block[18072-18439]"
  }, {
    "left" : "if (isEnabled(Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER))",
    "right" : "if (isEnabled(Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER))",
    "info" : "IfStatement[17920-18017]:IfStatement[18114-18211]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17983-18017]:Block[18177-18211]"
  }, {
    "left" : "return ch;",
    "right" : "return ch;",
    "info" : "ReturnStatement[17997-18007]:ReturnStatement[18191-18201]"
  }, {
    "left" : "if (ch == '\\'' && isEnabled(Feature.ALLOW_SINGLE_QUOTES))",
    "right" : "if (ch == '\\'' && isEnabled(Feature.ALLOW_SINGLE_QUOTES))",
    "info" : "IfStatement[18055-18147]:IfStatement[18249-18341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18113-18147]:Block[18307-18341]"
  }, {
    "left" : "return ch;",
    "right" : "return ch;",
    "info" : "ReturnStatement[18127-18137]:ReturnStatement[18321-18331]"
  }, {
    "left" : "_reportError(\"Unrecognized character escape \"+_getCharDesc(ch));",
    "right" : "_reportError(\"Unrecognized character escape \"+_getCharDesc(ch));",
    "info" : "ExpressionStatement[18156-18220]:ExpressionStatement[18350-18414]"
  }, {
    "left" : "return ch;",
    "right" : "return ch;",
    "info" : "ReturnStatement[18229-18239]:ReturnStatement[18423-18433]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[18431-18440]:Modifier[18625-18634]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[18441-18446]:Modifier[18635-18640]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[18447-18453]:Modifier[18641-18647]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[18454-18460]:SimpleType[18648-18654]"
  }, {
    "left" : "_getCharDesc",
    "right" : "_getCharDesc",
    "info" : "SimpleName[18461-18473]:SimpleName[18655-18667]"
  }, {
    "left" : "int ch",
    "right" : "int ch",
    "info" : "SingleVariableDeclaration[18474-18480]:SingleVariableDeclaration[18668-18674]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18486-18769]:Block[18680-18963]"
  }, {
    "left" : "char c = (char) ch;",
    "right" : "char c = (char) ch;",
    "info" : "VariableDeclarationStatement[18496-18515]:VariableDeclarationStatement[18690-18709]"
  }, {
    "left" : "if (Character.isISOControl(c))",
    "right" : "if (Character.isISOControl(c))",
    "info" : "IfStatement[18524-18613]:IfStatement[18718-18807]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18555-18613]:Block[18749-18807]"
  }, {
    "left" : "return \"(CTRL-CHAR, code \"+ch+\")\";",
    "right" : "return \"(CTRL-CHAR, code \"+ch+\")\";",
    "info" : "ReturnStatement[18569-18603]:ReturnStatement[18763-18797]"
  }, {
    "left" : "if (ch > 255)",
    "right" : "if (ch > 255)",
    "info" : "IfStatement[18622-18723]:IfStatement[18816-18917]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18636-18723]:Block[18830-18917]"
  }, {
    "left" : "return \"'\"+c+\"' (code \"+ch+\" / 0x\"+Integer.toHexString(ch)+\")\";",
    "right" : "return \"'\"+c+\"' (code \"+ch+\" / 0x\"+Integer.toHexString(ch)+\")\";",
    "info" : "ReturnStatement[18650-18713]:ReturnStatement[18844-18907]"
  }, {
    "left" : "return \"'\"+c+\"' (code \"+ch+\")\";",
    "right" : "return \"'\"+c+\"' (code \"+ch+\")\";",
    "info" : "ReturnStatement[18732-18763]:ReturnStatement[18926-18957]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[18775-18784]:Modifier[18969-18978]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[18785-18790]:Modifier[18979-18984]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18791-18795]:PrimitiveType[18985-18989]"
  }, {
    "left" : "_reportError",
    "right" : "_reportError",
    "info" : "SimpleName[18796-18808]:SimpleName[18990-19002]"
  }, {
    "left" : "String msg",
    "right" : "String msg",
    "info" : "SingleVariableDeclaration[18809-18819]:SingleVariableDeclaration[19003-19013]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[18828-18846]:SimpleType[19022-19040]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18847-18890]:Block[19041-19084]"
  }, {
    "left" : "throw _constructError(msg);",
    "right" : "throw _constructError(msg);",
    "info" : "ThrowStatement[18857-18884]:ThrowStatement[19051-19078]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[18896-18905]:Modifier[19090-19099]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[18906-18911]:Modifier[19100-19105]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18912-18916]:PrimitiveType[19106-19110]"
  }, {
    "left" : "_wrapError",
    "right" : "_wrapError",
    "info" : "SimpleName[18917-18927]:SimpleName[19111-19121]"
  }, {
    "left" : "String msg",
    "right" : "String msg",
    "info" : "SingleVariableDeclaration[18928-18938]:SingleVariableDeclaration[19122-19132]"
  }, {
    "left" : "Throwable t",
    "right" : "Throwable t",
    "info" : "SingleVariableDeclaration[18940-18951]:SingleVariableDeclaration[19134-19145]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[18960-18978]:SimpleType[19154-19172]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18979-19025]:Block[19173-19219]"
  }, {
    "left" : "throw _constructError(msg, t);",
    "right" : "throw _constructError(msg, t);",
    "info" : "ThrowStatement[18989-19019]:ThrowStatement[19183-19213]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[19031-19040]:Modifier[19225-19234]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[19041-19046]:Modifier[19235-19240]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19047-19051]:PrimitiveType[19241-19245]"
  }, {
    "left" : "_throwInternal",
    "right" : "_throwInternal",
    "info" : "SimpleName[19052-19066]:SimpleName[19246-19260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19069-19113]:Block[19263-19307]"
  }, {
    "left" : "VersionUtil.throwInternal();",
    "right" : "VersionUtil.throwInternal();",
    "info" : "ExpressionStatement[19079-19107]:ExpressionStatement[19273-19301]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[19119-19128]:Modifier[19313-19322]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[19129-19134]:Modifier[19323-19328]"
  }, {
    "left" : "JsonParseException",
    "right" : "JsonParseException",
    "info" : "SimpleType[19135-19153]:SimpleType[19329-19347]"
  }, {
    "left" : "_constructError",
    "right" : "_constructError",
    "info" : "SimpleName[19154-19169]:SimpleName[19348-19363]"
  }, {
    "left" : "String msg",
    "right" : "String msg",
    "info" : "SingleVariableDeclaration[19170-19180]:SingleVariableDeclaration[19364-19374]"
  }, {
    "left" : "Throwable t",
    "right" : "Throwable t",
    "info" : "SingleVariableDeclaration[19182-19193]:SingleVariableDeclaration[19376-19387]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19195-19271]:Block[19389-19465]"
  }, {
    "left" : "return new JsonParseException(msg, getCurrentLocation(), t);",
    "right" : "return new JsonParseException(msg, getCurrentLocation(), t);",
    "info" : "ReturnStatement[19205-19265]:ReturnStatement[19399-19459]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[19277-19286]:Modifier[19471-19480]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[19287-19293]:Modifier[19481-19487]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[19294-19300]:ArrayType[19488-19494]"
  }, {
    "left" : "_asciiBytes",
    "right" : "_asciiBytes",
    "info" : "SimpleName[19301-19312]:SimpleName[19495-19506]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[19313-19323]:SingleVariableDeclaration[19507-19517]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19325-19504]:Block[19519-19698]"
  }, {
    "left" : "byte[] b = new byte[str.length()];",
    "right" : "byte[] b = new byte[str.length()];",
    "info" : "VariableDeclarationStatement[19335-19369]:VariableDeclarationStatement[19529-19563]"
  }, {
    "left" : "for (int i = 0, len = str.length(); i < len; ++i)",
    "right" : "for (int i = 0, len = str.length(); i < len; ++i)",
    "info" : "ForStatement[19378-19480]:ForStatement[19572-19674]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19428-19480]:Block[19622-19674]"
  }, {
    "left" : "b[i] = (byte) str.charAt(i);",
    "right" : "b[i] = (byte) str.charAt(i);",
    "info" : "ExpressionStatement[19442-19470]:ExpressionStatement[19636-19664]"
  }, {
    "left" : "return b;",
    "right" : "return b;",
    "info" : "ReturnStatement[19489-19498]:ReturnStatement[19683-19692]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[19514-19523]:Modifier[19708-19717]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[19524-19530]:Modifier[19718-19724]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[19531-19537]:SimpleType[19725-19731]"
  }, {
    "left" : "_ascii",
    "right" : "_ascii",
    "info" : "SimpleName[19538-19544]:SimpleName[19732-19738]"
  }, {
    "left" : "byte[] b",
    "right" : "byte[] b",
    "info" : "SingleVariableDeclaration[19545-19553]:SingleVariableDeclaration[19739-19747]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19555-19725]:Block[19749-19919]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[19565-19719]:TryStatement[19759-19913]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19569-19626]:Block[19763-19820]"
  }, {
    "left" : "return new String(b, \"US-ASCII\");",
    "right" : "return new String(b, \"US-ASCII\");",
    "info" : "ReturnStatement[19583-19616]:ReturnStatement[19777-19810]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19649-19719]:Block[19843-19913]"
  }, {
    "left" : "throw new RuntimeException(e);",
    "right" : "throw new RuntimeException(e);",
    "info" : "ThrowStatement[19679-19709]:ThrowStatement[19873-19903]"
  } ]
}