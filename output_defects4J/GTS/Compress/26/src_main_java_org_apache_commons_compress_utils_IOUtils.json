{
  "matchedElements" : [
 {
    "left" : "class : IOUtils",
    "right" : "class : IOUtils",
    "info" : "TypeDeclaration[1000-6455]:TypeDeclaration[1000-6846]"
  }, {
    "left" : "COPY_BUF_SIZE",
    "right" : "COPY_BUF_SIZE",
    "info" : "FieldDeclaration[1077-1123]:FieldDeclaration[1077-1123]"
  }, {
    "left" : "SKIP_BUF_SIZE",
    "right" : "SKIP_BUF_SIZE",
    "info" : "FieldDeclaration[1128-1174]:FieldDeclaration[1128-1174]"
  }, {
    "left" : "private IOUtils()",
    "right" : "private IOUtils()",
    "info" : "MethodDeclaration[1180-1283]:MethodDeclaration[1180-1283]"
  }, {
    "left" : "public copy(input , output ) : long",
    "right" : "public copy(input , output ) : long",
    "info" : "MethodDeclaration[1289-1763]:MethodDeclaration[1289-1763]"
  }, {
    "left" : "public copy(input , output , buffersize int) : long",
    "right" : "public copy(input , output , buffersize int) : long",
    "info" : "MethodDeclaration[1769-2462]:MethodDeclaration[1769-2462]"
  }, {
    "left" : "public skip(input , numToSkip long) : long",
    "right" : "public skip(input , numToSkip long) : long",
    "info" : "MethodDeclaration[2472-3497]:MethodDeclaration[2472-3888]"
  }, {
    "left" : "public readFully(input , b ) : int",
    "right" : "public readFully(input , b ) : int",
    "info" : "MethodDeclaration[3503-4063]:MethodDeclaration[3894-4454]"
  }, {
    "left" : "public readFully(input , b , offset int, len int) : int",
    "right" : "public readFully(input , b , offset int, len int) : int",
    "info" : "MethodDeclaration[4069-5157]:MethodDeclaration[4460-5548]"
  }, {
    "left" : "public toByteArray(input ) : ",
    "right" : "public toByteArray(input ) : ",
    "info" : "MethodDeclaration[5400-6087]:MethodDeclaration[5791-6478]"
  }, {
    "left" : "public closeQuietly(c ) : void",
    "right" : "public closeQuietly(c ) : void",
    "info" : "MethodDeclaration[6093-6453]:MethodDeclaration[6484-6844]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1043-1049]:Modifier[1043-1049]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[1050-1055]:Modifier[1050-1055]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1056-1061]:TYPE_DECLARATION_KIND[1056-1061]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[1259-1266]:Modifier[1259-1266]"
  }, {
    "left" : "IOUtils",
    "right" : "IOUtils",
    "info" : "SimpleName[1267-1274]:SimpleName[1267-1274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1276-1283]:Block[1276-1283]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1610-1616]:Modifier[1610-1616]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1617-1623]:Modifier[1617-1623]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[1624-1628]:PrimitiveType[1624-1628]"
  }, {
    "left" : "copy",
    "right" : "copy",
    "info" : "SimpleName[1629-1633]:SimpleName[1629-1633]"
  }, {
    "left" : "final InputStream input",
    "right" : "final InputStream input",
    "info" : "SingleVariableDeclaration[1634-1657]:SingleVariableDeclaration[1634-1657]"
  }, {
    "left" : "final OutputStream output",
    "right" : "final OutputStream output",
    "info" : "SingleVariableDeclaration[1659-1684]:SingleVariableDeclaration[1659-1684]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[1693-1704]:SimpleType[1693-1704]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1705-1763]:Block[1705-1763]"
  }, {
    "left" : "return copy(input, output, COPY_BUF_SIZE);",
    "right" : "return copy(input, output, COPY_BUF_SIZE);",
    "info" : "ReturnStatement[1715-1757]:ReturnStatement[1715-1757]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2106-2112]:Modifier[2106-2112]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2113-2119]:Modifier[2113-2119]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[2120-2124]:PrimitiveType[2120-2124]"
  }, {
    "left" : "copy",
    "right" : "copy",
    "info" : "SimpleName[2125-2129]:SimpleName[2125-2129]"
  }, {
    "left" : "final InputStream input",
    "right" : "final InputStream input",
    "info" : "SingleVariableDeclaration[2130-2153]:SingleVariableDeclaration[2130-2153]"
  }, {
    "left" : "final OutputStream output",
    "right" : "final OutputStream output",
    "info" : "SingleVariableDeclaration[2155-2180]:SingleVariableDeclaration[2155-2180]"
  }, {
    "left" : "int buffersize",
    "right" : "int buffersize",
    "info" : "SingleVariableDeclaration[2182-2196]:SingleVariableDeclaration[2182-2196]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[2205-2216]:SimpleType[2205-2216]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2217-2462]:Block[2217-2462]"
  }, {
    "left" : "final byte[] buffer = new byte[buffersize];",
    "right" : "final byte[] buffer = new byte[buffersize];",
    "info" : "VariableDeclarationStatement[2227-2270]:VariableDeclarationStatement[2227-2270]"
  }, {
    "left" : "int n = 0;",
    "right" : "int n = 0;",
    "info" : "VariableDeclarationStatement[2279-2289]:VariableDeclarationStatement[2279-2289]"
  }, {
    "left" : "long count=0;",
    "right" : "long count=0;",
    "info" : "VariableDeclarationStatement[2298-2311]:VariableDeclarationStatement[2298-2311]"
  }, {
    "left" : "while (-1 != (n = input.read(buffer)))",
    "right" : "while (-1 != (n = input.read(buffer)))",
    "info" : "WhileStatement[2320-2434]:WhileStatement[2320-2434]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2359-2434]:Block[2359-2434]"
  }, {
    "left" : "output.write(buffer, 0, n);",
    "right" : "output.write(buffer, 0, n);",
    "info" : "ExpressionStatement[2373-2400]:ExpressionStatement[2373-2400]"
  }, {
    "left" : "count += n;",
    "right" : "count += n;",
    "info" : "ExpressionStatement[2413-2424]:ExpressionStatement[2413-2424]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[2443-2456]:ReturnStatement[2443-2456]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3130-3136]:Modifier[3130-3136]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3137-3143]:Modifier[3137-3143]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[3144-3148]:PrimitiveType[3144-3148]"
  }, {
    "left" : "skip",
    "right" : "skip",
    "info" : "SimpleName[3149-3153]:SimpleName[3149-3153]"
  }, {
    "left" : "InputStream input",
    "right" : "InputStream input",
    "info" : "SingleVariableDeclaration[3154-3171]:SingleVariableDeclaration[3154-3171]"
  }, {
    "left" : "long numToSkip",
    "right" : "long numToSkip",
    "info" : "SingleVariableDeclaration[3173-3187]:SingleVariableDeclaration[3173-3187]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[3196-3207]:SimpleType[3196-3207]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3208-3497]:Block[3208-3888]"
  }, {
    "left" : "long available = numToSkip;",
    "right" : "long available = numToSkip;",
    "info" : "VariableDeclarationStatement[3218-3245]:VariableDeclarationStatement[3218-3245]"
  }, {
    "left" : "while (numToSkip > 0)",
    "right" : "while (numToSkip > 0)",
    "info" : "WhileStatement[3254-3440]:WhileStatement[3254-3440]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3276-3440]:Block[3276-3440]"
  }, {
    "left" : "long skipped = input.skip(numToSkip);",
    "right" : "long skipped = input.skip(numToSkip);",
    "info" : "VariableDeclarationStatement[3290-3327]:VariableDeclarationStatement[3290-3327]"
  }, {
    "left" : "if (skipped == 0)",
    "right" : "if (skipped == 0)",
    "info" : "IfStatement[3340-3396]:IfStatement[3340-3396]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3358-3396]:Block[3358-3396]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[3376-3382]:BreakStatement[3376-3382]"
  }, {
    "left" : "numToSkip -= skipped;",
    "right" : "numToSkip -= skipped;",
    "info" : "ExpressionStatement[3409-3430]:ExpressionStatement[3409-3430]"
  }, {
    "left" : "return available - numToSkip;",
    "right" : "return available - numToSkip;",
    "info" : "ReturnStatement[3462-3491]:ReturnStatement[3853-3882]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3931-3937]:Modifier[4322-4328]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3938-3944]:Modifier[4329-4335]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[3945-3948]:PrimitiveType[4336-4339]"
  }, {
    "left" : "readFully",
    "right" : "readFully",
    "info" : "SimpleName[3949-3958]:SimpleName[4340-4349]"
  }, {
    "left" : "InputStream input",
    "right" : "InputStream input",
    "info" : "SingleVariableDeclaration[3959-3976]:SingleVariableDeclaration[4350-4367]"
  }, {
    "left" : "byte[] b",
    "right" : "byte[] b",
    "info" : "SingleVariableDeclaration[3978-3986]:SingleVariableDeclaration[4369-4377]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[3995-4006]:SimpleType[4386-4397]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4007-4063]:Block[4398-4454]"
  }, {
    "left" : "return readFully(input, b, 0, b.length);",
    "right" : "return readFully(input, b, 0, b.length);",
    "info" : "ReturnStatement[4017-4057]:ReturnStatement[4408-4448]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4679-4685]:Modifier[5070-5076]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[4686-4692]:Modifier[5077-5083]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[4693-4696]:PrimitiveType[5084-5087]"
  }, {
    "left" : "readFully",
    "right" : "readFully",
    "info" : "SimpleName[4697-4706]:SimpleName[5088-5097]"
  }, {
    "left" : "InputStream input",
    "right" : "InputStream input",
    "info" : "SingleVariableDeclaration[4707-4724]:SingleVariableDeclaration[5098-5115]"
  }, {
    "left" : "byte[] b",
    "right" : "byte[] b",
    "info" : "SingleVariableDeclaration[4726-4734]:SingleVariableDeclaration[5117-5125]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[4736-4746]:SingleVariableDeclaration[5127-5137]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[4748-4755]:SingleVariableDeclaration[5139-5146]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[4772-4783]:SimpleType[5163-5174]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4784-5157]:Block[5175-5548]"
  }, {
    "left" : "if (len < 0 || offset < 0 || len + offset > b.length)",
    "right" : "if (len < 0 || offset < 0 || len + offset > b.length)",
    "info" : "IfStatement[4794-4910]:IfStatement[5185-5301]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4848-4910]:Block[5239-5301]"
  }, {
    "left" : "throw new IndexOutOfBoundsException();",
    "right" : "throw new IndexOutOfBoundsException();",
    "info" : "ThrowStatement[4862-4900]:ThrowStatement[5253-5291]"
  }, {
    "left" : "int count = 0, x = 0;",
    "right" : "int count = 0, x = 0;",
    "info" : "VariableDeclarationStatement[4919-4940]:VariableDeclarationStatement[5310-5331]"
  }, {
    "left" : "while (count != len)",
    "right" : "while (count != len)",
    "info" : "WhileStatement[4949-5129]:WhileStatement[5340-5520]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4970-5129]:Block[5361-5520]"
  }, {
    "left" : "x = input.read(b, offset + count, len - count);",
    "right" : "x = input.read(b, offset + count, len - count);",
    "info" : "ExpressionStatement[4984-5031]:ExpressionStatement[5375-5422]"
  }, {
    "left" : "if (x == -1)",
    "right" : "if (x == -1)",
    "info" : "IfStatement[5044-5095]:IfStatement[5435-5486]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5057-5095]:Block[5448-5486]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[5075-5081]:BreakStatement[5466-5472]"
  }, {
    "left" : "count += x;",
    "right" : "count += x;",
    "info" : "ExpressionStatement[5108-5119]:ExpressionStatement[5499-5510]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[5138-5151]:ReturnStatement[5529-5542]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5863-5869]:Modifier[6254-6260]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5870-5876]:Modifier[6261-6267]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[5877-5883]:ArrayType[6268-6274]"
  }, {
    "left" : "toByteArray",
    "right" : "toByteArray",
    "info" : "SimpleName[5884-5895]:SimpleName[6275-6286]"
  }, {
    "left" : "final InputStream input",
    "right" : "final InputStream input",
    "info" : "SingleVariableDeclaration[5896-5919]:SingleVariableDeclaration[6287-6310]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5928-5939]:SimpleType[6319-6330]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5940-6087]:Block[6331-6478]"
  }, {
    "left" : "final ByteArrayOutputStream output = new ByteArrayOutputStream();",
    "right" : "final ByteArrayOutputStream output = new ByteArrayOutputStream();",
    "info" : "VariableDeclarationStatement[5950-6015]:VariableDeclarationStatement[6341-6406]"
  }, {
    "left" : "copy(input, output);",
    "right" : "copy(input, output);",
    "info" : "ExpressionStatement[6024-6044]:ExpressionStatement[6415-6435]"
  }, {
    "left" : "return output.toByteArray();",
    "right" : "return output.toByteArray();",
    "info" : "ReturnStatement[6053-6081]:ReturnStatement[6444-6472]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6254-6260]:Modifier[6645-6651]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6261-6267]:Modifier[6652-6658]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6268-6272]:PrimitiveType[6659-6663]"
  }, {
    "left" : "closeQuietly",
    "right" : "closeQuietly",
    "info" : "SimpleName[6273-6285]:SimpleName[6664-6676]"
  }, {
    "left" : "Closeable c",
    "right" : "Closeable c",
    "info" : "SingleVariableDeclaration[6286-6297]:SingleVariableDeclaration[6677-6688]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6299-6453]:Block[6690-6844]"
  }, {
    "left" : "if (c != null)",
    "right" : "if (c != null)",
    "info" : "IfStatement[6309-6447]:IfStatement[6700-6838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6324-6447]:Block[6715-6838]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[6338-6437]:TryStatement[6729-6828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6342-6384]:Block[6733-6775]"
  }, {
    "left" : "c.close();",
    "right" : "c.close();",
    "info" : "ExpressionStatement[6360-6370]:ExpressionStatement[6751-6761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6413-6437]:Block[6804-6828]"
  } ]
}