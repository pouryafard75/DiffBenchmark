{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BeanDeserializerFactory",
      "right" : "BeanDeserializerFactory",
      "info" : "TypeDeclaration[847-40804]:TypeDeclaration[847-41210]"
    }, {
      "left" : "private static final long serialVersionUID = 1;",
      "right" : "private static final long serialVersionUID = 1;",
      "info" : "FieldDeclaration[1498-1545]:FieldDeclaration[1498-1545]"
    }, {
      "left" : "private final static Class<?>[] INIT_CAUSE_PARAMS = new Class<?>[] { Throwable.class };",
      "right" : "private final static Class<?>[] INIT_CAUSE_PARAMS = new Class<?>[] { Throwable.class };",
      "info" : "FieldDeclaration[1551-1709]:FieldDeclaration[1551-1709]"
    }, {
      "left" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "right" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "info" : "FieldDeclaration[1715-1774]:FieldDeclaration[1715-1774]"
    }, {
      "left" : "protected final static Set<String> DEFAULT_NO_DESER_CLASS_NAMES;",
      "right" : "protected final static Set<String> DEFAULT_NO_DESER_CLASS_NAMES;",
      "info" : "FieldDeclaration[1780-2000]:FieldDeclaration[1780-2000]"
    }, {
      "left" : "protected Set<String> _cfgIllegalClassNames = DEFAULT_NO_DESER_CLASS_NAMES;",
      "right" : "protected Set<String> _cfgIllegalClassNames = DEFAULT_NO_DESER_CLASS_NAMES;",
      "info" : "FieldDeclaration[3087-3248]:FieldDeclaration[3493-3654]"
    }, {
      "left" : "public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(\n            new DeserializerFactoryConfig());",
      "right" : "public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(\n            new DeserializerFactoryConfig());",
      "info" : "FieldDeclaration[3420-3675]:FieldDeclaration[3826-4081]"
    }, {
      "left" : "public BeanDeserializerFactory(DeserializerFactoryConfig config)",
      "right" : "public BeanDeserializerFactory(DeserializerFactoryConfig config)",
      "info" : "MethodDeclaration[3681-3776]:MethodDeclaration[4087-4182]"
    }, {
      "left" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
      "right" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
      "info" : "MethodDeclaration[3786-5019]:MethodDeclaration[4192-5425]"
    }, {
      "left" : "public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[5219-7670]:MethodDeclaration[5625-8076]"
    }, {
      "left" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc,\n    \t\tClass<?> builderClass)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc,\n    \t\tClass<?> builderClass)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7676-8201]:MethodDeclaration[8082-8607]"
    }, {
      "left" : "protected JsonDeserializer<?> findStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> findStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[8211-9126]:MethodDeclaration[8617-9532]"
    }, {
      "left" : "protected JavaType materializeAbstractType(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JavaType materializeAbstractType(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[9136-9677]:MethodDeclaration[9542-10083]"
    }, {
      "left" : "public JsonDeserializer<Object> buildBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> buildBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[9971-12787]:MethodDeclaration[10377-13193]"
    }, {
      "left" : "protected JsonDeserializer<Object> buildBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> buildBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[12797-15591]:MethodDeclaration[13203-15997]"
    }, {
      "left" : "protected void addObjectIdReader(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addObjectIdReader(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[15601-17451]:MethodDeclaration[16007-17857]"
    }, {
      "left" : "public JsonDeserializer<Object> buildThrowableDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> buildThrowableDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[17461-20523]:MethodDeclaration[17867-20929]"
    }, {
      "left" : "protected BeanDeserializerBuilder constructBeanDeserializerBuilder(DeserializationContext ctxt,\n            BeanDescription beanDesc)",
      "right" : "protected BeanDeserializerBuilder constructBeanDeserializerBuilder(DeserializationContext ctxt,\n            BeanDescription beanDesc)",
      "info" : "MethodDeclaration[20765-21164]:MethodDeclaration[21171-21570]"
    }, {
      "left" : "protected void addBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[21174-27597]:MethodDeclaration[21580-28003]"
    }, {
      "left" : "protected List<BeanPropertyDefinition> filterBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder,\n            List<BeanPropertyDefinition> propDefsIn,\n            Set<String> ignored)\n        throws JsonMappingException",
      "right" : "protected List<BeanPropertyDefinition> filterBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder,\n            List<BeanPropertyDefinition> propDefsIn,\n            Set<String> ignored)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[27607-29582]:MethodDeclaration[28013-29988]"
    }, {
      "left" : "protected void addReferenceProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addReferenceProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[29588-30842]:MethodDeclaration[29994-31248]"
    }, {
      "left" : "protected void addInjectables(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addInjectables(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[30848-31980]:MethodDeclaration[31254-32386]"
    }, {
      "left" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedMethod setter)\n        throws JsonMappingException",
      "right" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedMethod setter)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[31986-33736]:MethodDeclaration[32392-34142]"
    }, {
      "left" : "protected SettableBeanProperty constructSettableProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef,\n            JavaType propType0)\n        throws JsonMappingException",
      "right" : "protected SettableBeanProperty constructSettableProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef,\n            JavaType propType0)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[33742-36747]:MethodDeclaration[34148-37153]"
    }, {
      "left" : "protected SettableBeanProperty constructSetterlessProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef)\n        throws JsonMappingException",
      "right" : "protected SettableBeanProperty constructSetterlessProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[36753-38051]:MethodDeclaration[37159-38457]"
    }, {
      "left" : "protected boolean isPotentialBeanType(Class<?> type)",
      "right" : "protected boolean isPotentialBeanType(Class<?> type)",
      "info" : "MethodDeclaration[38252-39454]:MethodDeclaration[38658-39860]"
    }, {
      "left" : "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc,\n            Class<?> type, Map<Class<?>,Boolean> ignoredTypes)",
      "right" : "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc,\n            Class<?> type, Map<Class<?>,Boolean> ignoredTypes)",
      "info" : "MethodDeclaration[39460-40196]:MethodDeclaration[39866-40602]"
    }, {
      "left" : "protected void checkIllegalTypes(DeserializationContext ctxt, JavaType type,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected void checkIllegalTypes(DeserializationContext ctxt, JavaType type,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[40202-40802]:MethodDeclaration[40608-41208]"
    } ],
    "mappings" : [
 {
      "left" : "BasicDeserializerFactory",
      "right" : "BasicDeserializerFactory",
      "info" : "SimpleType[1418-1442]:SimpleType[1418-1442]"
    }, {
      "left" : "java.io.Serializable",
      "right" : "java.io.Serializable",
      "info" : "SimpleType[1458-1478]:SimpleType[1458-1478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2012-3081]:Block[2012-3487]"
    }, {
      "left" : "Set<String> s = new HashSet<String>();",
      "right" : "Set<String> s = new HashSet<String>();",
      "info" : "VariableDeclarationStatement[2022-2060]:VariableDeclarationStatement[2022-2060]"
    }, {
      "left" : "s.add(\"org.apache.commons.collections.functors.InvokerTransformer\");",
      "right" : "s.add(\"org.apache.commons.collections.functors.InvokerTransformer\");",
      "info" : "ExpressionStatement[2171-2239]:ExpressionStatement[2171-2239]"
    }, {
      "left" : "s.add(\"org.apache.commons.collections.functors.InstantiateTransformer\");",
      "right" : "s.add(\"org.apache.commons.collections.functors.InstantiateTransformer\");",
      "info" : "ExpressionStatement[2248-2320]:ExpressionStatement[2248-2320]"
    }, {
      "left" : "s.add(\"org.apache.commons.collections4.functors.InvokerTransformer\");",
      "right" : "s.add(\"org.apache.commons.collections4.functors.InvokerTransformer\");",
      "info" : "ExpressionStatement[2329-2398]:ExpressionStatement[2329-2398]"
    }, {
      "left" : "s.add(\"org.apache.commons.collections4.functors.InstantiateTransformer\");",
      "right" : "s.add(\"org.apache.commons.collections4.functors.InstantiateTransformer\");",
      "info" : "ExpressionStatement[2407-2480]:ExpressionStatement[2407-2480]"
    }, {
      "left" : "s.add(\"org.codehaus.groovy.runtime.ConvertedClosure\");",
      "right" : "s.add(\"org.codehaus.groovy.runtime.ConvertedClosure\");",
      "info" : "ExpressionStatement[2489-2543]:ExpressionStatement[2489-2543]"
    }, {
      "left" : "s.add(\"org.codehaus.groovy.runtime.MethodClosure\");",
      "right" : "s.add(\"org.codehaus.groovy.runtime.MethodClosure\");",
      "info" : "ExpressionStatement[2552-2603]:ExpressionStatement[2552-2603]"
    }, {
      "left" : "s.add(\"org.springframework.beans.factory.ObjectFactory\");",
      "right" : "s.add(\"org.springframework.beans.factory.ObjectFactory\");",
      "info" : "ExpressionStatement[2612-2669]:ExpressionStatement[2612-2669]"
    }, {
      "left" : "s.add(\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\");",
      "right" : "s.add(\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\");",
      "info" : "ExpressionStatement[2678-2746]:ExpressionStatement[2678-2746]"
    }, {
      "left" : "s.add(\"org.apache.xalan.xsltc.trax.TemplatesImpl\");",
      "right" : "s.add(\"org.apache.xalan.xsltc.trax.TemplatesImpl\");",
      "info" : "ExpressionStatement[2755-2806]:ExpressionStatement[2755-2806]"
    }, {
      "left" : "s.add(\"com.sun.rowset.JdbcRowSetImpl\");",
      "right" : "s.add(\"com.sun.rowset.JdbcRowSetImpl\");",
      "info" : "ExpressionStatement[2885-2924]:ExpressionStatement[2885-2924]"
    }, {
      "left" : "DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);",
      "right" : "DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);",
      "info" : "ExpressionStatement[3013-3075]:ExpressionStatement[3419-3481]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3681-3687]:Modifier[4087-4093]"
    }, {
      "left" : "BeanDeserializerFactory",
      "right" : "BeanDeserializerFactory",
      "info" : "SimpleName[3688-3711]:SimpleName[4094-4117]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[3712-3744]:SingleVariableDeclaration[4118-4150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3746-3776]:Block[4152-4182]"
    }, {
      "left" : "super(config);",
      "right" : "super(config);",
      "info" : "SuperConstructorInvocation[3756-3770]:SuperConstructorInvocation[4162-4176]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3957-3966]:MarkerAnnotation[4363-4372]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3971-3977]:Modifier[4377-4383]"
    }, {
      "left" : "DeserializerFactory",
      "right" : "DeserializerFactory",
      "info" : "SimpleType[3978-3997]:SimpleType[4384-4403]"
    }, {
      "left" : "withConfig",
      "right" : "withConfig",
      "info" : "SimpleName[3998-4008]:SimpleName[4404-4414]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[4009-4041]:SingleVariableDeclaration[4415-4447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4047-5019]:Block[4453-5425]"
    }, {
      "left" : "if (_factoryConfig == config)",
      "right" : "if (_factoryConfig == config)",
      "info" : "IfStatement[4057-4123]:IfStatement[4463-4529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4087-4123]:Block[4493-4529]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4101-4113]:ReturnStatement[4507-4519]"
    }, {
      "left" : "if (getClass() != BeanDeserializerFactory.class)",
      "right" : "if (getClass() != BeanDeserializerFactory.class)",
      "info" : "IfStatement[4611-4961]:IfStatement[5017-5367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4660-4961]:Block[5066-5367]"
    }, {
      "left" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
      "right" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
      "info" : "ThrowStatement[4674-4951]:ThrowStatement[5080-5357]"
    }, {
      "left" : "return new BeanDeserializerFactory(config);",
      "right" : "return new BeanDeserializerFactory(config);",
      "info" : "ReturnStatement[4970-5013]:ReturnStatement[5376-5419]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5387-5396]:MarkerAnnotation[5793-5802]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5401-5407]:Modifier[5807-5813]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[5408-5432]:ParameterizedType[5814-5838]"
    }, {
      "left" : "createBeanDeserializer",
      "right" : "createBeanDeserializer",
      "info" : "SimpleName[5433-5455]:SimpleName[5839-5861]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[5456-5483]:SingleVariableDeclaration[5862-5889]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[5497-5510]:SingleVariableDeclaration[5903-5916]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[5512-5536]:SingleVariableDeclaration[5918-5942]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[5553-5573]:SimpleType[5959-5979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5578-7670]:Block[5984-8076]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[5588-5642]:VariableDeclarationStatement[5994-6048]"
    }, {
      "left" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
      "right" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
      "info" : "VariableDeclarationStatement[5697-5783]:VariableDeclarationStatement[6103-6189]"
    }, {
      "left" : "if (custom != null)",
      "right" : "if (custom != null)",
      "info" : "IfStatement[5792-5850]:IfStatement[6198-6256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5812-5850]:Block[6218-6256]"
    }, {
      "left" : "return custom;",
      "right" : "return custom;",
      "info" : "ReturnStatement[5826-5840]:ReturnStatement[6232-6246]"
    }, {
      "left" : "if (type.isThrowable())",
      "right" : "if (type.isThrowable())",
      "info" : "IfStatement[6031-6135]:IfStatement[6437-6541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6055-6135]:Block[6461-6541]"
    }, {
      "left" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
      "right" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[6069-6125]:ReturnStatement[6475-6531]"
    }, {
      "left" : "if (type.isAbstract() && !type.isPrimitive())",
      "right" : "if (type.isAbstract() && !type.isPrimitive())",
      "info" : "IfStatement[6416-6982]:IfStatement[6822-7388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6462-6982]:Block[6868-7388]"
    }, {
      "left" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
      "right" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[6545-6615]:VariableDeclarationStatement[6951-7021]"
    }, {
      "left" : "if (concreteType != null)",
      "right" : "if (concreteType != null)",
      "info" : "IfStatement[6628-6972]:IfStatement[7034-7378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6654-6972]:Block[7060-7378]"
    }, {
      "left" : "beanDesc = config.introspect(concreteType);",
      "right" : "beanDesc = config.introspect(concreteType);",
      "info" : "ExpressionStatement[6839-6882]:ExpressionStatement[7245-7288]"
    }, {
      "left" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
      "right" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
      "info" : "ReturnStatement[6899-6958]:ReturnStatement[7305-7364]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
      "right" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[7078-7219]:VariableDeclarationStatement[7484-7625]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[7228-7284]:IfStatement[7634-7690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7247-7284]:Block[7653-7690]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[7261-7274]:ReturnStatement[7667-7680]"
    }, {
      "left" : "if (!isPotentialBeanType(type.getRawClass()))",
      "right" : "if (!isPotentialBeanType(type.getRawClass()))",
      "info" : "IfStatement[7366-7448]:IfStatement[7772-7854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7412-7448]:Block[7818-7854]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7426-7438]:ReturnStatement[7832-7844]"
    }, {
      "left" : "checkIllegalTypes(ctxt, type, beanDesc);",
      "right" : "checkIllegalTypes(ctxt, type, beanDesc);",
      "info" : "ExpressionStatement[7500-7540]:ExpressionStatement[7906-7946]"
    }, {
      "left" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
      "right" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[7613-7664]:ReturnStatement[8019-8070]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7676-7685]:MarkerAnnotation[8082-8091]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7690-7696]:Modifier[8096-8102]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[7697-7721]:ParameterizedType[8103-8127]"
    }, {
      "left" : "createBuilderBasedDeserializer",
      "right" : "createBuilderBasedDeserializer",
      "info" : "SimpleName[7722-7752]:SimpleName[8128-8158]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[7760-7787]:SingleVariableDeclaration[8166-8193]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[7789-7807]:SingleVariableDeclaration[8195-8213]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[7809-7833]:SingleVariableDeclaration[8215-8239]"
    }, {
      "left" : "Class<?> builderClass",
      "right" : "Class<?> builderClass",
      "info" : "SingleVariableDeclaration[7841-7862]:SingleVariableDeclaration[8247-8268]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7879-7899]:SimpleType[8285-8305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7904-8201]:Block[8310-8607]"
    }, {
      "left" : "JavaType builderType = ctxt.constructType(builderClass);",
      "right" : "JavaType builderType = ctxt.constructType(builderClass);",
      "info" : "VariableDeclarationStatement[7973-8029]:VariableDeclarationStatement[8379-8435]"
    }, {
      "left" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
      "right" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
      "info" : "VariableDeclarationStatement[8038-8119]:VariableDeclarationStatement[8444-8525]"
    }, {
      "left" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
      "right" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
      "info" : "ReturnStatement[8128-8195]:ReturnStatement[8534-8601]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8366-8375]:Modifier[8772-8781]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[8376-8395]:ParameterizedType[8782-8801]"
    }, {
      "left" : "findStdDeserializer",
      "right" : "findStdDeserializer",
      "info" : "SimpleName[8396-8415]:SimpleName[8802-8821]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[8416-8443]:SingleVariableDeclaration[8822-8849]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[8457-8470]:SingleVariableDeclaration[8863-8876]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[8472-8496]:SingleVariableDeclaration[8878-8902]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[8513-8533]:SimpleType[8919-8939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8538-9126]:Block[8944-9532]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
      "right" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[8652-8726]:VariableDeclarationStatement[9058-9132]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[8794-9098]:IfStatement[9200-9504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8813-9098]:Block[9219-9504]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[8827-9088]:IfStatement[9233-9494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8874-9088]:Block[9280-9494]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[8892-9074]:EnhancedForStatement[9298-9480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8968-9074]:Block[9374-9480]"
    }, {
      "left" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
      "right" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
      "info" : "ExpressionStatement[8990-9056]:ExpressionStatement[9396-9462]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[9107-9120]:ReturnStatement[9513-9526]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[9136-9145]:Modifier[9542-9551]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[9146-9154]:SimpleType[9552-9560]"
    }, {
      "left" : "materializeAbstractType",
      "right" : "materializeAbstractType",
      "info" : "SimpleName[9155-9178]:SimpleName[9561-9584]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[9179-9206]:SingleVariableDeclaration[9585-9612]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[9220-9233]:SingleVariableDeclaration[9626-9639]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[9235-9259]:SingleVariableDeclaration[9641-9665]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[9276-9296]:SimpleType[9682-9702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9301-9677]:Block[9707-10083]"
    }, {
      "left" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
      "right" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
      "info" : "EnhancedForStatement[9403-9650]:EnhancedForStatement[9809-10056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9473-9650]:Block[9879-10056]"
    }, {
      "left" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
      "right" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
      "info" : "VariableDeclarationStatement[9487-9557]:VariableDeclarationStatement[9893-9963]"
    }, {
      "left" : "if (concrete != null)",
      "right" : "if (concrete != null)",
      "info" : "IfStatement[9570-9640]:IfStatement[9976-10046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9592-9640]:Block[9998-10046]"
    }, {
      "left" : "return concrete;",
      "right" : "return concrete;",
      "info" : "ReturnStatement[9610-9626]:ReturnStatement[10016-10032]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9659-9671]:ReturnStatement[10065-10077]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[10221-10251]:SingleMemberAnnotation[10627-10657]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10256-10262]:Modifier[10662-10668]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[10263-10287]:ParameterizedType[10669-10693]"
    }, {
      "left" : "buildBeanDeserializer",
      "right" : "buildBeanDeserializer",
      "info" : "SimpleName[10288-10309]:SimpleName[10694-10715]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[10310-10337]:SingleVariableDeclaration[10716-10743]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[10351-10364]:SingleVariableDeclaration[10757-10770]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[10366-10390]:SingleVariableDeclaration[10772-10796]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[10407-10427]:SimpleType[10813-10833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10432-12787]:Block[10838-13193]"
    }, {
      "left" : "ValueInstantiator valueInstantiator;",
      "right" : "ValueInstantiator valueInstantiator;",
      "info" : "VariableDeclarationStatement[10499-10535]:VariableDeclarationStatement[10905-10941]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[10855-11055]:TryStatement[11261-11461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10859-10941]:Block[11265-11347]"
    }, {
      "left" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
      "right" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
      "info" : "ExpressionStatement[10873-10931]:ExpressionStatement[11279-11337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10977-11055]:Block[11383-11461]"
    }, {
      "left" : "return new NoClassDefFoundDeserializer<Object>(error);",
      "right" : "return new NoClassDefFoundDeserializer<Object>(error);",
      "info" : "ReturnStatement[10991-11045]:ReturnStatement[11397-11451]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[11064-11147]:VariableDeclarationStatement[11470-11553]"
    }, {
      "left" : "builder.setValueInstantiator(valueInstantiator);",
      "right" : "builder.setValueInstantiator(valueInstantiator);",
      "info" : "ExpressionStatement[11156-11204]:ExpressionStatement[11562-11610]"
    }, {
      "left" : "addBeanProps(ctxt, beanDesc, builder);",
      "right" : "addBeanProps(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11277-11315]:ExpressionStatement[11683-11721]"
    }, {
      "left" : "addObjectIdReader(ctxt, beanDesc, builder);",
      "right" : "addObjectIdReader(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11324-11367]:ExpressionStatement[11730-11773]"
    }, {
      "left" : "addReferenceProperties(ctxt, beanDesc, builder);",
      "right" : "addReferenceProperties(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11462-11510]:ExpressionStatement[11868-11916]"
    }, {
      "left" : "addInjectables(ctxt, beanDesc, builder);",
      "right" : "addInjectables(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[11519-11559]:ExpressionStatement[11925-11965]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[11577-11631]:VariableDeclarationStatement[11983-12037]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[11713-11947]:IfStatement[12119-12353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11760-11947]:Block[12166-12353]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[11774-11937]:EnhancedForStatement[12180-12343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11850-11937]:Block[12256-12343]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[11868-11923]:ExpressionStatement[12274-12329]"
    }, {
      "left" : "JsonDeserializer<?> deserializer;",
      "right" : "JsonDeserializer<?> deserializer;",
      "info" : "VariableDeclarationStatement[11956-11989]:VariableDeclarationStatement[12362-12395]"
    }, {
      "left" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
      "right" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
      "info" : "IfStatement[12175-12361]:IfStatement[12581-12767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12237-12300]:Block[12643-12706]"
    }, {
      "left" : "deserializer = builder.buildAbstract();",
      "right" : "deserializer = builder.buildAbstract();",
      "info" : "ExpressionStatement[12251-12290]:ExpressionStatement[12657-12696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12306-12361]:Block[12712-12767]"
    }, {
      "left" : "deserializer = builder.build();",
      "right" : "deserializer = builder.build();",
      "info" : "ExpressionStatement[12320-12351]:ExpressionStatement[12726-12757]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[12476-12725]:IfStatement[12882-13131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12523-12725]:Block[12929-13131]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[12537-12715]:EnhancedForStatement[12943-13121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12613-12715]:Block[13019-13121]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "info" : "ExpressionStatement[12631-12701]:ExpressionStatement[13037-13107]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[12734-12781]:ReturnStatement[13140-13187]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[13081-13111]:SingleMemberAnnotation[13487-13517]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[13116-13125]:Modifier[13522-13531]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[13126-13150]:ParameterizedType[13532-13556]"
    }, {
      "left" : "buildBuilderBasedDeserializer",
      "right" : "buildBuilderBasedDeserializer",
      "info" : "SimpleName[13151-13180]:SimpleName[13557-13586]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[13188-13215]:SingleVariableDeclaration[13594-13621]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[13217-13235]:SingleVariableDeclaration[13623-13641]"
    }, {
      "left" : "BeanDescription builderDesc",
      "right" : "BeanDescription builderDesc",
      "info" : "SingleVariableDeclaration[13237-13264]:SingleVariableDeclaration[13643-13670]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[13281-13301]:SimpleType[13687-13707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13306-15591]:Block[13712-15997]"
    }, {
      "left" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
      "right" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
      "info" : "VariableDeclarationStatement[13369-13448]:VariableDeclarationStatement[13775-13854]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[13457-13511]:VariableDeclarationStatement[13863-13917]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
      "info" : "VariableDeclarationStatement[13520-13606]:VariableDeclarationStatement[13926-14012]"
    }, {
      "left" : "builder.setValueInstantiator(valueInstantiator);",
      "right" : "builder.setValueInstantiator(valueInstantiator);",
      "info" : "ExpressionStatement[13615-13663]:ExpressionStatement[14021-14069]"
    }, {
      "left" : "addBeanProps(ctxt, builderDesc, builder);",
      "right" : "addBeanProps(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[13743-13784]:ExpressionStatement[14149-14190]"
    }, {
      "left" : "addObjectIdReader(ctxt, builderDesc, builder);",
      "right" : "addObjectIdReader(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[13793-13839]:ExpressionStatement[14199-14245]"
    }, {
      "left" : "addReferenceProperties(ctxt, builderDesc, builder);",
      "right" : "addReferenceProperties(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[13942-13993]:ExpressionStatement[14348-14399]"
    }, {
      "left" : "addInjectables(ctxt, builderDesc, builder);",
      "right" : "addInjectables(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[14002-14045]:ExpressionStatement[14408-14451]"
    }, {
      "left" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
      "right" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
      "info" : "VariableDeclarationStatement[14055-14129]:VariableDeclarationStatement[14461-14535]"
    }, {
      "left" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
      "right" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
      "info" : "VariableDeclarationStatement[14138-14251]:VariableDeclarationStatement[14544-14657]"
    }, {
      "left" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
      "right" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
      "info" : "VariableDeclarationStatement[14318-14394]:VariableDeclarationStatement[14724-14800]"
    }, {
      "left" : "if (buildMethod != null)",
      "right" : "if (buildMethod != null)",
      "info" : "IfStatement[14403-14699]:IfStatement[14809-15105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14428-14699]:Block[14834-15105]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[14500-14689]:IfStatement[14906-15095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14541-14689]:Block[14947-15095]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[14556-14675]:ExpressionStatement[14962-15081]"
    }, {
      "left" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
      "right" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
      "info" : "ExpressionStatement[14708-14759]:ExpressionStatement[15114-15165]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[14816-15053]:IfStatement[15222-15459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14863-15053]:Block[15269-15459]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[14877-15043]:EnhancedForStatement[15283-15449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14953-15043]:Block[15359-15449]"
    }, {
      "left" : "builder = mod.updateBuilder(config, builderDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, builderDesc, builder);",
      "info" : "ExpressionStatement[14971-15029]:ExpressionStatement[15377-15435]"
    }, {
      "left" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
      "right" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
      "info" : "VariableDeclarationStatement[15062-15162]:VariableDeclarationStatement[15468-15568]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[15277-15529]:IfStatement[15683-15935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15324-15529]:Block[15730-15935]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[15338-15519]:EnhancedForStatement[15744-15925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15414-15519]:Block[15820-15925]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
      "info" : "ExpressionStatement[15432-15505]:ExpressionStatement[15838-15911]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[15538-15585]:ReturnStatement[15944-15991]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[15601-15610]:Modifier[16007-16016]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15611-15615]:PrimitiveType[16017-16021]"
    }, {
      "left" : "addObjectIdReader",
      "right" : "addObjectIdReader",
      "info" : "SimpleName[15616-15633]:SimpleName[16022-16039]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[15634-15661]:SingleVariableDeclaration[16040-16067]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[15675-15699]:SingleVariableDeclaration[16081-16105]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[15701-15732]:SingleVariableDeclaration[16107-16138]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[15749-15769]:SimpleType[16155-16175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15774-17451]:Block[16180-17857]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "info" : "VariableDeclarationStatement[15784-15839]:VariableDeclarationStatement[16190-16245]"
    }, {
      "left" : "if (objectIdInfo == null)",
      "right" : "if (objectIdInfo == null)",
      "info" : "IfStatement[15848-15905]:IfStatement[16254-16311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15874-15905]:Block[16280-16311]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[15888-15895]:ReturnStatement[16294-16301]"
    }, {
      "left" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "right" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "info" : "VariableDeclarationStatement[15914-15967]:VariableDeclarationStatement[16320-16373]"
    }, {
      "left" : "JavaType idType;",
      "right" : "JavaType idType;",
      "info" : "VariableDeclarationStatement[15976-15992]:VariableDeclarationStatement[16382-16398]"
    }, {
      "left" : "SettableBeanProperty idProp;",
      "right" : "SettableBeanProperty idProp;",
      "info" : "VariableDeclarationStatement[16001-16029]:VariableDeclarationStatement[16407-16435]"
    }, {
      "left" : "ObjectIdGenerator<?> gen;",
      "right" : "ObjectIdGenerator<?> gen;",
      "info" : "VariableDeclarationStatement[16038-16063]:VariableDeclarationStatement[16444-16469]"
    }, {
      "left" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "VariableDeclarationStatement[16073-16170]:VariableDeclarationStatement[16479-16576]"
    }, {
      "left" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "right" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "info" : "IfStatement[16251-17136]:IfStatement[16657-17542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16312-16847]:Block[16718-17253]"
    }, {
      "left" : "PropertyName propName = objectIdInfo.getPropertyName();",
      "right" : "PropertyName propName = objectIdInfo.getPropertyName();",
      "info" : "VariableDeclarationStatement[16364-16419]:VariableDeclarationStatement[16770-16825]"
    }, {
      "left" : "idProp = builder.findProperty(propName);",
      "right" : "idProp = builder.findProperty(propName);",
      "info" : "ExpressionStatement[16432-16472]:ExpressionStatement[16838-16878]"
    }, {
      "left" : "if (idProp == null)",
      "right" : "if (idProp == null)",
      "info" : "IfStatement[16485-16719]:IfStatement[16891-17125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16505-16719]:Block[16911-17125]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
      "right" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
      "info" : "ThrowStatement[16523-16705]:ThrowStatement[16929-17111]"
    }, {
      "left" : "idType = idProp.getType();",
      "right" : "idType = idProp.getType();",
      "info" : "ExpressionStatement[16732-16758]:ExpressionStatement[17138-17164]"
    }, {
      "left" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
      "right" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
      "info" : "ExpressionStatement[16771-16837]:ExpressionStatement[17177-17243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16853-17136]:Block[17259-17542]"
    }, {
      "left" : "JavaType type = ctxt.constructType(implClass);",
      "right" : "JavaType type = ctxt.constructType(implClass);",
      "info" : "VariableDeclarationStatement[16867-16913]:VariableDeclarationStatement[17273-17319]"
    }, {
      "left" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "right" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "info" : "ExpressionStatement[16926-17010]:ExpressionStatement[17332-17416]"
    }, {
      "left" : "idProp = null;",
      "right" : "idProp = null;",
      "info" : "ExpressionStatement[17023-17037]:ExpressionStatement[17429-17443]"
    }, {
      "left" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "ExpressionStatement[17050-17126]:ExpressionStatement[17456-17532]"
    }, {
      "left" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
      "right" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
      "info" : "VariableDeclarationStatement[17231-17298]:VariableDeclarationStatement[17637-17704]"
    }, {
      "left" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
      "right" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
      "info" : "ExpressionStatement[17307-17445]:ExpressionStatement[17713-17851]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[17461-17491]:SingleMemberAnnotation[17867-17897]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17496-17502]:Modifier[17902-17908]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[17503-17527]:ParameterizedType[17909-17933]"
    }, {
      "left" : "buildThrowableDeserializer",
      "right" : "buildThrowableDeserializer",
      "info" : "SimpleName[17528-17554]:SimpleName[17934-17960]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[17555-17582]:SingleVariableDeclaration[17961-17988]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[17596-17609]:SingleVariableDeclaration[18002-18015]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[17611-17635]:SingleVariableDeclaration[18017-18041]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[17652-17672]:SimpleType[18058-18078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17677-20523]:Block[18083-20929]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[17687-17741]:VariableDeclarationStatement[18093-18147]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[17814-17897]:VariableDeclarationStatement[18220-18303]"
    }, {
      "left" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
      "right" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
      "info" : "ExpressionStatement[17906-17974]:ExpressionStatement[18312-18380]"
    }, {
      "left" : "addBeanProps(ctxt, beanDesc, builder);",
      "right" : "addBeanProps(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[17984-18022]:ExpressionStatement[18390-18428]"
    }, {
      "left" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
      "right" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
      "info" : "VariableDeclarationStatement[18275-18348]:VariableDeclarationStatement[18681-18754]"
    }, {
      "left" : "if (am != null)",
      "right" : "if (am != null)",
      "info" : "IfStatement[18357-19036]:IfStatement[18763-19442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18373-19036]:Block[18779-19442]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
      "info" : "VariableDeclarationStatement[18411-18558]:VariableDeclarationStatement[18817-18964]"
    }, {
      "left" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
      "right" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
      "info" : "VariableDeclarationStatement[18571-18694]:VariableDeclarationStatement[18977-19100]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[18707-19026]:IfStatement[19113-19432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18725-19026]:Block[19131-19432]"
    }, {
      "left" : "builder.addOrReplaceProperty(prop, true);",
      "right" : "builder.addOrReplaceProperty(prop, true);",
      "info" : "ExpressionStatement[18971-19012]:ExpressionStatement[19377-19418]"
    }, {
      "left" : "builder.addIgnorable(\"localizedMessage\");",
      "right" : "builder.addIgnorable(\"localizedMessage\");",
      "info" : "ExpressionStatement[19100-19141]:ExpressionStatement[19506-19547]"
    }, {
      "left" : "builder.addIgnorable(\"suppressed\");",
      "right" : "builder.addIgnorable(\"suppressed\");",
      "info" : "ExpressionStatement[19223-19258]:ExpressionStatement[19629-19664]"
    }, {
      "left" : "builder.addIgnorable(\"message\");",
      "right" : "builder.addIgnorable(\"message\");",
      "info" : "ExpressionStatement[19393-19425]:ExpressionStatement[19799-19831]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[19493-19727]:IfStatement[19899-20133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19540-19727]:Block[19946-20133]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[19554-19717]:EnhancedForStatement[19960-20123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19630-19717]:Block[20036-20123]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[19648-19703]:ExpressionStatement[20054-20109]"
    }, {
      "left" : "JsonDeserializer<?> deserializer = builder.build();",
      "right" : "JsonDeserializer<?> deserializer = builder.build();",
      "info" : "VariableDeclarationStatement[19736-19787]:VariableDeclarationStatement[20142-20193]"
    }, {
      "left" : "if (deserializer instanceof BeanDeserializer)",
      "right" : "if (deserializer instanceof BeanDeserializer)",
      "info" : "IfStatement[19968-20112]:IfStatement[20374-20518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20014-20112]:Block[20420-20518]"
    }, {
      "left" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
      "right" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
      "info" : "ExpressionStatement[20028-20102]:ExpressionStatement[20434-20508]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[20212-20461]:IfStatement[20618-20867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20259-20461]:Block[20665-20867]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[20273-20451]:EnhancedForStatement[20679-20857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20349-20451]:Block[20755-20857]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "info" : "ExpressionStatement[20367-20437]:ExpressionStatement[20773-20843]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[20470-20517]:ReturnStatement[20876-20923]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[20951-20960]:Modifier[21357-21366]"
    }, {
      "left" : "BeanDeserializerBuilder",
      "right" : "BeanDeserializerBuilder",
      "info" : "SimpleType[20961-20984]:SimpleType[21367-21390]"
    }, {
      "left" : "constructBeanDeserializerBuilder",
      "right" : "constructBeanDeserializerBuilder",
      "info" : "SimpleName[20985-21017]:SimpleName[21391-21423]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[21018-21045]:SingleVariableDeclaration[21424-21451]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[21059-21083]:SingleVariableDeclaration[21465-21489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21085-21164]:Block[21491-21570]"
    }, {
      "left" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
      "right" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
      "info" : "ReturnStatement[21095-21158]:ReturnStatement[21501-21564]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[21407-21416]:Modifier[21813-21822]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21417-21421]:PrimitiveType[21823-21827]"
    }, {
      "left" : "addBeanProps",
      "right" : "addBeanProps",
      "info" : "SimpleName[21422-21434]:SimpleName[21828-21840]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[21435-21462]:SingleVariableDeclaration[21841-21868]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[21476-21500]:SingleVariableDeclaration[21882-21906]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[21502-21533]:SingleVariableDeclaration[21908-21939]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[21550-21570]:SimpleType[21956-21976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21575-27597]:Block[21981-28003]"
    }, {
      "left" : "final SettableBeanProperty[] creatorProps =\n                builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig());",
      "right" : "final SettableBeanProperty[] creatorProps =\n                builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig());",
      "info" : "VariableDeclarationStatement[21585-21717]:VariableDeclarationStatement[21991-22123]"
    }, {
      "left" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
      "right" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
      "info" : "VariableDeclarationStatement[21726-21786]:VariableDeclarationStatement[22132-22192]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[21851-21914]:VariableDeclarationStatement[22257-22320]"
    }, {
      "left" : "if (intr != null)",
      "right" : "if (intr != null)",
      "info" : "IfStatement[21923-22148]:IfStatement[22329-22554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21941-22148]:Block[22347-22554]"
    }, {
      "left" : "Boolean B = intr.findIgnoreUnknownProperties(beanDesc.getClassInfo());",
      "right" : "Boolean B = intr.findIgnoreUnknownProperties(beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[21955-22025]:VariableDeclarationStatement[22361-22431]"
    }, {
      "left" : "if (B != null)",
      "right" : "if (B != null)",
      "info" : "IfStatement[22038-22138]:IfStatement[22444-22544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22053-22138]:Block[22459-22544]"
    }, {
      "left" : "builder.setIgnoreUnknownProperties(B.booleanValue());",
      "right" : "builder.setIgnoreUnknownProperties(B.booleanValue());",
      "info" : "ExpressionStatement[22071-22124]:ExpressionStatement[22477-22530]"
    }, {
      "left" : "Set<String> ignored = ArrayBuilders.arrayToSet(intr.findPropertiesToIgnore(beanDesc.getClassInfo(), false));",
      "right" : "Set<String> ignored = ArrayBuilders.arrayToSet(intr.findPropertiesToIgnore(beanDesc.getClassInfo(), false));",
      "info" : "VariableDeclarationStatement[22202-22310]:VariableDeclarationStatement[22608-22716]"
    }, {
      "left" : "for (String propName : ignored)",
      "right" : "for (String propName : ignored)",
      "info" : "EnhancedForStatement[22327-22414]:EnhancedForStatement[22733-22820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22359-22414]:Block[22765-22820]"
    }, {
      "left" : "builder.addIgnorable(propName);",
      "right" : "builder.addIgnorable(propName);",
      "info" : "ExpressionStatement[22373-22404]:ExpressionStatement[22779-22810]"
    }, {
      "left" : "AnnotatedMethod anySetter = beanDesc.findAnySetter();",
      "right" : "AnnotatedMethod anySetter = beanDesc.findAnySetter();",
      "info" : "VariableDeclarationStatement[22476-22529]:VariableDeclarationStatement[22882-22935]"
    }, {
      "left" : "if (anySetter != null)",
      "right" : "if (anySetter != null)",
      "info" : "IfStatement[22538-22653]:IfStatement[22944-23059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22561-22653]:Block[22967-23059]"
    }, {
      "left" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetter));",
      "right" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetter));",
      "info" : "ExpressionStatement[22575-22643]:ExpressionStatement[22981-23049]"
    }, {
      "left" : "if (anySetter == null)",
      "right" : "if (anySetter == null)",
      "info" : "IfStatement[22815-23253]:IfStatement[23221-23659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22838-23253]:Block[23244-23659]"
    }, {
      "left" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
      "right" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
      "info" : "VariableDeclarationStatement[22852-22917]:VariableDeclarationStatement[23258-23323]"
    }, {
      "left" : "if (ignored2 != null)",
      "right" : "if (ignored2 != null)",
      "info" : "IfStatement[22930-23243]:IfStatement[23336-23649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22952-23243]:Block[23358-23649]"
    }, {
      "left" : "for (String propName : ignored2)",
      "right" : "for (String propName : ignored2)",
      "info" : "EnhancedForStatement[22970-23229]:EnhancedForStatement[23376-23635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23003-23229]:Block[23409-23635]"
    }, {
      "left" : "builder.addIgnorable(propName);",
      "right" : "builder.addIgnorable(propName);",
      "info" : "ExpressionStatement[23180-23211]:ExpressionStatement[23586-23617]"
    }, {
      "left" : "final boolean useGettersAsSetters = (ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS));",
      "right" : "final boolean useGettersAsSetters = (ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS));",
      "info" : "VariableDeclarationStatement[23262-23422]:VariableDeclarationStatement[23668-23828]"
    }, {
      "left" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
      "right" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
      "info" : "VariableDeclarationStatement[23490-23623]:VariableDeclarationStatement[23896-24029]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[23694-23943]:IfStatement[24100-24349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23741-23943]:Block[24147-24349]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[23755-23933]:EnhancedForStatement[24161-24339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23831-23933]:Block[24237-24339]"
    }, {
      "left" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
      "right" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
      "info" : "ExpressionStatement[23849-23919]:ExpressionStatement[24255-24325]"
    }, {
      "left" : "for (BeanPropertyDefinition propDef : propDefs)",
      "right" : "for (BeanPropertyDefinition propDef : propDefs)",
      "info" : "EnhancedForStatement[24049-27591]:EnhancedForStatement[24455-27997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24097-27591]:Block[24503-27997]"
    }, {
      "left" : "SettableBeanProperty prop = null;",
      "right" : "SettableBeanProperty prop = null;",
      "info" : "VariableDeclarationStatement[24111-24144]:VariableDeclarationStatement[24517-24550]"
    }, {
      "left" : "if (propDef.hasSetter())",
      "right" : "if (propDef.hasSetter())",
      "info" : "IfStatement[24436-25510]:IfStatement[24842-25916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24461-24646]:Block[24867-25052]"
    }, {
      "left" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
      "right" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
      "info" : "VariableDeclarationStatement[24479-24543]:VariableDeclarationStatement[24885-24949]"
    }, {
      "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "info" : "ExpressionStatement[24560-24632]:ExpressionStatement[24966-25038]"
    }, {
      "left" : "if (propDef.hasField())",
      "right" : "if (propDef.hasField())",
      "info" : "IfStatement[24652-25510]:IfStatement[25058-25916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24676-24850]:Block[25082-25256]"
    }, {
      "left" : "JavaType propertyType = propDef.getField().getType();",
      "right" : "JavaType propertyType = propDef.getField().getType();",
      "info" : "VariableDeclarationStatement[24694-24747]:VariableDeclarationStatement[25100-25153]"
    }, {
      "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "info" : "ExpressionStatement[24764-24836]:ExpressionStatement[25170-25242]"
    }, {
      "left" : "if (useGettersAsSetters && propDef.hasGetter())",
      "right" : "if (useGettersAsSetters && propDef.hasGetter())",
      "info" : "IfStatement[24856-25510]:IfStatement[25262-25916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24904-25510]:Block[25310-25916]"
    }, {
      "left" : "AnnotatedMethod getter = propDef.getGetter();",
      "right" : "AnnotatedMethod getter = propDef.getGetter();",
      "info" : "VariableDeclarationStatement[25072-25117]:VariableDeclarationStatement[25478-25523]"
    }, {
      "left" : "Class<?> rawPropertyType = getter.getRawType();",
      "right" : "Class<?> rawPropertyType = getter.getRawType();",
      "info" : "VariableDeclarationStatement[25205-25252]:VariableDeclarationStatement[25611-25658]"
    }, {
      "left" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
      "right" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
      "info" : "IfStatement[25269-25496]:IfStatement[25675-25902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25396-25496]:Block[25802-25902]"
    }, {
      "left" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
      "right" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
      "info" : "ExpressionStatement[25418-25478]:ExpressionStatement[25824-25884]"
    }, {
      "left" : "if (isConcrete && propDef.hasConstructorParameter())",
      "right" : "if (isConcrete && propDef.hasConstructorParameter())",
      "info" : "IfStatement[25671-27016]:IfStatement[26077-27422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25724-27016]:Block[26130-27422]"
    }, {
      "left" : "final String name = propDef.getName();",
      "right" : "final String name = propDef.getName();",
      "info" : "VariableDeclarationStatement[26107-26145]:VariableDeclarationStatement[26513-26551]"
    }, {
      "left" : "CreatorProperty cprop = null;",
      "right" : "CreatorProperty cprop = null;",
      "info" : "VariableDeclarationStatement[26162-26191]:VariableDeclarationStatement[26568-26597]"
    }, {
      "left" : "if (creatorProps != null)",
      "right" : "if (creatorProps != null)",
      "info" : "IfStatement[26208-26553]:IfStatement[26614-26959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26234-26553]:Block[26640-26959]"
    }, {
      "left" : "for (SettableBeanProperty cp : creatorProps)",
      "right" : "for (SettableBeanProperty cp : creatorProps)",
      "info" : "EnhancedForStatement[26256-26535]:EnhancedForStatement[26662-26941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26301-26535]:Block[26707-26941]"
    }, {
      "left" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
      "right" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
      "info" : "IfStatement[26327-26513]:IfStatement[26733-26919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26393-26513]:Block[26799-26919]"
    }, {
      "left" : "cprop = (CreatorProperty) cp;",
      "right" : "cprop = (CreatorProperty) cp;",
      "info" : "ExpressionStatement[26423-26452]:ExpressionStatement[26829-26858]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[26481-26487]:BreakStatement[26887-26893]"
    }, {
      "left" : "if (cprop == null)",
      "right" : "if (cprop == null)",
      "info" : "IfStatement[26570-26790]:IfStatement[26976-27196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26589-26790]:Block[26995-27196]"
    }, {
      "left" : "throw ctxt.mappingException(\"Could not find creator property with name '%s' (in class %s)\",\n                            name, beanDesc.getBeanClass().getName());",
      "right" : "throw ctxt.mappingException(\"Could not find creator property with name '%s' (in class %s)\",\n                            name, beanDesc.getBeanClass().getName());",
      "info" : "ThrowStatement[26611-26772]:ThrowStatement[27017-27178]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[26807-26895]:IfStatement[27213-27301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26825-26895]:Block[27231-27301]"
    }, {
      "left" : "cprop.setFallbackSetter(prop);",
      "right" : "cprop.setFallbackSetter(prop);",
      "info" : "ExpressionStatement[26847-26877]:ExpressionStatement[27253-27283]"
    }, {
      "left" : "prop = cprop;",
      "right" : "prop = cprop;",
      "info" : "ExpressionStatement[26912-26925]:ExpressionStatement[27318-27331]"
    }, {
      "left" : "builder.addCreatorProperty(cprop);",
      "right" : "builder.addCreatorProperty(cprop);",
      "info" : "ExpressionStatement[26942-26976]:ExpressionStatement[27348-27382]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[26993-27002]:ContinueStatement[27399-27408]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[27030-27581]:IfStatement[27436-27987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27048-27581]:Block[27454-27987]"
    }, {
      "left" : "Class<?>[] views = propDef.findViews();",
      "right" : "Class<?>[] views = propDef.findViews();",
      "info" : "VariableDeclarationStatement[27066-27105]:VariableDeclarationStatement[27472-27511]"
    }, {
      "left" : "if (views == null)",
      "right" : "if (views == null)",
      "info" : "IfStatement[27122-27408]:IfStatement[27528-27814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27141-27408]:Block[27547-27814]"
    }, {
      "left" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "right" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "info" : "IfStatement[27266-27390]:IfStatement[27672-27796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27325-27390]:Block[27731-27796]"
    }, {
      "left" : "views = NO_VIEWS;",
      "right" : "views = NO_VIEWS;",
      "info" : "ExpressionStatement[27351-27368]:ExpressionStatement[27757-27774]"
    }, {
      "left" : "prop.setViews(views);",
      "right" : "prop.setViews(views);",
      "info" : "ExpressionStatement[27503-27524]:ExpressionStatement[27909-27930]"
    }, {
      "left" : "builder.addProperty(prop);",
      "right" : "builder.addProperty(prop);",
      "info" : "ExpressionStatement[27541-27567]:ExpressionStatement[27947-27973]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[27830-27839]:Modifier[28236-28245]"
    }, {
      "left" : "List<BeanPropertyDefinition>",
      "right" : "List<BeanPropertyDefinition>",
      "info" : "ParameterizedType[27840-27868]:ParameterizedType[28246-28274]"
    }, {
      "left" : "filterBeanProps",
      "right" : "filterBeanProps",
      "info" : "SimpleName[27869-27884]:SimpleName[28275-28290]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[27885-27912]:SingleVariableDeclaration[28291-28318]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[27926-27950]:SingleVariableDeclaration[28332-28356]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[27952-27983]:SingleVariableDeclaration[28358-28389]"
    }, {
      "left" : "List<BeanPropertyDefinition> propDefsIn",
      "right" : "List<BeanPropertyDefinition> propDefsIn",
      "info" : "SingleVariableDeclaration[27997-28036]:SingleVariableDeclaration[28403-28442]"
    }, {
      "left" : "Set<String> ignored",
      "right" : "Set<String> ignored",
      "info" : "SingleVariableDeclaration[28050-28069]:SingleVariableDeclaration[28456-28475]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[28086-28106]:SimpleType[28492-28512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28111-29582]:Block[28517-29988]"
    }, {
      "left" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
      "right" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
      "info" : "VariableDeclarationStatement[28121-28251]:VariableDeclarationStatement[28527-28657]"
    }, {
      "left" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
      "right" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
      "info" : "VariableDeclarationStatement[28260-28333]:VariableDeclarationStatement[28666-28739]"
    }, {
      "left" : "for (BeanPropertyDefinition property : propDefsIn)",
      "right" : "for (BeanPropertyDefinition property : propDefsIn)",
      "info" : "EnhancedForStatement[28420-29553]:EnhancedForStatement[28826-29959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28471-29553]:Block[28877-29959]"
    }, {
      "left" : "String name = property.getName();",
      "right" : "String name = property.getName();",
      "info" : "VariableDeclarationStatement[28485-28518]:VariableDeclarationStatement[28891-28924]"
    }, {
      "left" : "if (ignored.contains(name))",
      "right" : "if (ignored.contains(name))",
      "info" : "IfStatement[28531-28671]:IfStatement[28937-29077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28559-28671]:Block[28965-29077]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[28648-28657]:ContinueStatement[29054-29063]"
    }, {
      "left" : "if (!property.hasConstructorParameter())",
      "right" : "if (!property.hasConstructorParameter())",
      "info" : "IfStatement[28684-29509]:IfStatement[29090-29915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28725-29509]:Block[29131-29915]"
    }, {
      "left" : "Class<?> rawPropertyType = null;",
      "right" : "Class<?> rawPropertyType = null;",
      "info" : "VariableDeclarationStatement[28776-28808]:VariableDeclarationStatement[29182-29214]"
    }, {
      "left" : "if (property.hasSetter())",
      "right" : "if (property.hasSetter())",
      "info" : "IfStatement[28825-29075]:IfStatement[29231-29481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28851-28953]:Block[29257-29359]"
    }, {
      "left" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
      "right" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
      "info" : "ExpressionStatement[28873-28935]:ExpressionStatement[29279-29341]"
    }, {
      "left" : "if (property.hasField())",
      "right" : "if (property.hasField())",
      "info" : "IfStatement[28959-29075]:IfStatement[29365-29481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28984-29075]:Block[29390-29481]"
    }, {
      "left" : "rawPropertyType = property.getField().getRawType();",
      "right" : "rawPropertyType = property.getField().getRawType();",
      "info" : "ExpressionStatement[29006-29057]:ExpressionStatement[29412-29463]"
    }, {
      "left" : "if ((rawPropertyType != null)\n                        && (isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes)))",
      "right" : "if ((rawPropertyType != null)\n                        && (isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes)))",
      "info" : "IfStatement[29171-29495]:IfStatement[29577-29901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29306-29495]:Block[29712-29901]"
    }, {
      "left" : "builder.addIgnorable(name);",
      "right" : "builder.addIgnorable(name);",
      "info" : "ExpressionStatement[29420-29447]:ExpressionStatement[29826-29853]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[29468-29477]:ContinueStatement[29874-29883]"
    }, {
      "left" : "result.add(property);",
      "right" : "result.add(property);",
      "info" : "ExpressionStatement[29522-29543]:ExpressionStatement[29928-29949]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[29562-29576]:ReturnStatement[29968-29982]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[29761-29770]:Modifier[30167-30176]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29771-29775]:PrimitiveType[30177-30181]"
    }, {
      "left" : "addReferenceProperties",
      "right" : "addReferenceProperties",
      "info" : "SimpleName[29776-29798]:SimpleName[30182-30204]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[29799-29826]:SingleVariableDeclaration[30205-30232]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[29840-29864]:SingleVariableDeclaration[30246-30270]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[29866-29897]:SingleVariableDeclaration[30272-30303]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[29914-29934]:SimpleType[30320-30340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29939-30842]:Block[30345-31248]"
    }, {
      "left" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
      "right" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
      "info" : "VariableDeclarationStatement[30030-30104]:VariableDeclarationStatement[30436-30510]"
    }, {
      "left" : "if (refs != null)",
      "right" : "if (refs != null)",
      "info" : "IfStatement[30113-30836]:IfStatement[30519-31242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30131-30836]:Block[30537-31242]"
    }, {
      "left" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
      "right" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
      "info" : "EnhancedForStatement[30145-30826]:EnhancedForStatement[30551-31232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30207-30826]:Block[30613-31232]"
    }, {
      "left" : "String name = en.getKey();",
      "right" : "String name = en.getKey();",
      "info" : "VariableDeclarationStatement[30225-30251]:VariableDeclarationStatement[30631-30657]"
    }, {
      "left" : "AnnotatedMember m = en.getValue();",
      "right" : "AnnotatedMember m = en.getValue();",
      "info" : "VariableDeclarationStatement[30268-30302]:VariableDeclarationStatement[30674-30708]"
    }, {
      "left" : "JavaType type;",
      "right" : "JavaType type;",
      "info" : "VariableDeclarationStatement[30319-30333]:VariableDeclarationStatement[30725-30739]"
    }, {
      "left" : "if (m instanceof AnnotatedMethod)",
      "right" : "if (m instanceof AnnotatedMethod)",
      "info" : "IfStatement[30350-30538]:IfStatement[30756-30944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30384-30473]:Block[30790-30879]"
    }, {
      "left" : "type = ((AnnotatedMethod) m).getParameterType(0);",
      "right" : "type = ((AnnotatedMethod) m).getParameterType(0);",
      "info" : "ExpressionStatement[30406-30455]:ExpressionStatement[30812-30861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30479-30538]:Block[30885-30944]"
    }, {
      "left" : "type = m.getType();",
      "right" : "type = m.getType();",
      "info" : "ExpressionStatement[30501-30520]:ExpressionStatement[30907-30926]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                \t\tctxt.getConfig(), m);",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                \t\tctxt.getConfig(), m);",
      "info" : "VariableDeclarationStatement[30555-30673]:VariableDeclarationStatement[30961-31079]"
    }, {
      "left" : "builder.addBackReferenceProperty(name, constructSettableProperty(\n                        ctxt, beanDesc, propDef, type));",
      "right" : "builder.addBackReferenceProperty(name, constructSettableProperty(\n                        ctxt, beanDesc, propDef, type));",
      "info" : "ExpressionStatement[30690-30812]:ExpressionStatement[31096-31218]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[31058-31067]:Modifier[31464-31473]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31068-31072]:PrimitiveType[31474-31478]"
    }, {
      "left" : "addInjectables",
      "right" : "addInjectables",
      "info" : "SimpleName[31073-31087]:SimpleName[31479-31493]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[31088-31115]:SingleVariableDeclaration[31494-31521]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[31129-31153]:SingleVariableDeclaration[31535-31559]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[31155-31186]:SingleVariableDeclaration[31561-31592]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[31203-31223]:SimpleType[31609-31629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31228-31980]:Block[31634-32386]"
    }, {
      "left" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
      "right" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
      "info" : "VariableDeclarationStatement[31238-31300]:VariableDeclarationStatement[31644-31706]"
    }, {
      "left" : "if (raw != null)",
      "right" : "if (raw != null)",
      "info" : "IfStatement[31309-31974]:IfStatement[31715-32380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31326-31974]:Block[31732-32380]"
    }, {
      "left" : "boolean fixAccess = ctxt.canOverrideAccessModifiers();",
      "right" : "boolean fixAccess = ctxt.canOverrideAccessModifiers();",
      "info" : "VariableDeclarationStatement[31340-31394]:VariableDeclarationStatement[31746-31800]"
    }, {
      "left" : "boolean forceAccess = fixAccess && ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS);",
      "right" : "boolean forceAccess = fixAccess && ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS);",
      "info" : "VariableDeclarationStatement[31407-31505]:VariableDeclarationStatement[31813-31911]"
    }, {
      "left" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
      "right" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
      "info" : "EnhancedForStatement[31518-31964]:EnhancedForStatement[31924-32370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31582-31964]:Block[31988-32370]"
    }, {
      "left" : "AnnotatedMember m = entry.getValue();",
      "right" : "AnnotatedMember m = entry.getValue();",
      "info" : "VariableDeclarationStatement[31600-31637]:VariableDeclarationStatement[32006-32043]"
    }, {
      "left" : "if (fixAccess)",
      "right" : "if (fixAccess)",
      "info" : "IfStatement[31654-31762]:IfStatement[32060-32168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31669-31762]:Block[32075-32168]"
    }, {
      "left" : "m.fixAccess(forceAccess);",
      "right" : "m.fixAccess(forceAccess);",
      "info" : "ExpressionStatement[31691-31716]:ExpressionStatement[32097-32122]"
    }, {
      "left" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
      "right" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
      "info" : "ExpressionStatement[31779-31950]:ExpressionStatement[32185-32356]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32181-32190]:Modifier[32587-32596]"
    }, {
      "left" : "SettableAnyProperty",
      "right" : "SettableAnyProperty",
      "info" : "SimpleType[32191-32210]:SimpleType[32597-32616]"
    }, {
      "left" : "constructAnySetter",
      "right" : "constructAnySetter",
      "info" : "SimpleName[32211-32229]:SimpleName[32617-32635]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[32230-32257]:SingleVariableDeclaration[32636-32663]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[32271-32295]:SingleVariableDeclaration[32677-32701]"
    }, {
      "left" : "AnnotatedMethod setter",
      "right" : "AnnotatedMethod setter",
      "info" : "SingleVariableDeclaration[32297-32319]:SingleVariableDeclaration[32703-32725]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[32336-32356]:SimpleType[32742-32762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32361-33736]:Block[32767-34142]"
    }, {
      "left" : "if (ctxt.canOverrideAccessModifiers())",
      "right" : "if (ctxt.canOverrideAccessModifiers())",
      "info" : "IfStatement[32371-32543]:IfStatement[32777-32949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32410-32543]:Block[32816-32949]"
    }, {
      "left" : "setter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "setter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[32424-32505]:ExpressionStatement[32830-32911]"
    }, {
      "left" : "JavaType type = setter.getParameterType(1);",
      "right" : "JavaType type = setter.getParameterType(1);",
      "info" : "VariableDeclarationStatement[32616-32659]:VariableDeclarationStatement[33022-33065]"
    }, {
      "left" : "BeanProperty.Std property = new BeanProperty.Std(PropertyName.construct(setter.getName()),\n                type, null, beanDesc.getClassAnnotations(), setter,\n                PropertyMetadata.STD_OPTIONAL);",
      "right" : "BeanProperty.Std property = new BeanProperty.Std(PropertyName.construct(setter.getName()),\n                type, null, beanDesc.getClassAnnotations(), setter,\n                PropertyMetadata.STD_OPTIONAL);",
      "info" : "VariableDeclarationStatement[32668-32874]:VariableDeclarationStatement[33074-33280]"
    }, {
      "left" : "type = resolveType(ctxt, beanDesc, type, setter);",
      "right" : "type = resolveType(ctxt, beanDesc, type, setter);",
      "info" : "ExpressionStatement[32883-32932]:ExpressionStatement[33289-33338]"
    }, {
      "left" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, setter);",
      "right" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, setter);",
      "info" : "VariableDeclarationStatement[33200-33278]:VariableDeclarationStatement[33606-33684]"
    }, {
      "left" : "type = modifyTypeByAnnotation(ctxt, setter, type);",
      "right" : "type = modifyTypeByAnnotation(ctxt, setter, type);",
      "info" : "ExpressionStatement[33439-33489]:ExpressionStatement[33845-33895]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[33498-33572]:IfStatement[33904-33978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33517-33572]:Block[33923-33978]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[33531-33562]:ExpressionStatement[33937-33968]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[33581-33632]:VariableDeclarationStatement[33987-34038]"
    }, {
      "left" : "return new SettableAnyProperty(property, setter, type,\n                deser, typeDeser);",
      "right" : "return new SettableAnyProperty(property, setter, type,\n                deser, typeDeser);",
      "info" : "ReturnStatement[33641-33730]:ReturnStatement[34047-34136]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34003-34012]:Modifier[34409-34418]"
    }, {
      "left" : "SettableBeanProperty",
      "right" : "SettableBeanProperty",
      "info" : "SimpleType[34013-34033]:SimpleType[34419-34439]"
    }, {
      "left" : "constructSettableProperty",
      "right" : "constructSettableProperty",
      "info" : "SimpleName[34034-34059]:SimpleName[34440-34465]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[34060-34087]:SingleVariableDeclaration[34466-34493]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[34101-34125]:SingleVariableDeclaration[34507-34531]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[34127-34157]:SingleVariableDeclaration[34533-34563]"
    }, {
      "left" : "JavaType propType0",
      "right" : "JavaType propType0",
      "info" : "SingleVariableDeclaration[34171-34189]:SingleVariableDeclaration[34577-34595]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[34206-34226]:SimpleType[34612-34632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34231-36747]:Block[34637-37153]"
    }, {
      "left" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
      "right" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
      "info" : "VariableDeclarationStatement[34303-34364]:VariableDeclarationStatement[34709-34770]"
    }, {
      "left" : "if (ctxt.canOverrideAccessModifiers())",
      "right" : "if (ctxt.canOverrideAccessModifiers())",
      "info" : "IfStatement[34374-35007]:IfStatement[34780-35413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34413-35007]:Block[34819-35413]"
    }, {
      "left" : "if ((mutator instanceof AnnotatedField)\n                    && \"cause\".equals(mutator.getName())\n                    && Throwable.class.isAssignableFrom(propType0.getRawClass()))",
      "right" : "if ((mutator instanceof AnnotatedField)\n                    && \"cause\".equals(mutator.getName())\n                    && Throwable.class.isAssignableFrom(propType0.getRawClass()))",
      "info" : "IfStatement[34665-34997]:IfStatement[35071-35403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34844-34877]:Block[35250-35283]"
    }, {
      "left" : ";",
      "right" : ";",
      "info" : "EmptyStatement[34862-34863]:EmptyStatement[35268-35269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34883-34997]:Block[35289-35403]"
    }, {
      "left" : "mutator.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "mutator.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[34901-34983]:ExpressionStatement[35307-35389]"
    }, {
      "left" : "BeanProperty.Std property = new BeanProperty.Std(propDef.getFullName(),\n                propType0, propDef.getWrapperName(),\n                beanDesc.getClassAnnotations(), mutator, propDef.getMetadata());",
      "right" : "BeanProperty.Std property = new BeanProperty.Std(propDef.getFullName(),\n                propType0, propDef.getWrapperName(),\n                beanDesc.getClassAnnotations(), mutator, propDef.getMetadata());",
      "info" : "VariableDeclarationStatement[35099-35304]:VariableDeclarationStatement[35505-35710]"
    }, {
      "left" : "JavaType type = resolveType(ctxt, beanDesc, propType0, mutator);",
      "right" : "JavaType type = resolveType(ctxt, beanDesc, propType0, mutator);",
      "info" : "VariableDeclarationStatement[35313-35377]:VariableDeclarationStatement[35719-35783]"
    }, {
      "left" : "if (type != propType0)",
      "right" : "if (type != propType0)",
      "info" : "IfStatement[35414-35496]:IfStatement[35820-35902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35437-35496]:Block[35843-35902]"
    }, {
      "left" : "property = property.withType(type);",
      "right" : "property = property.withType(type);",
      "info" : "ExpressionStatement[35451-35486]:ExpressionStatement[35857-35892]"
    }, {
      "left" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, mutator);",
      "right" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, mutator);",
      "info" : "VariableDeclarationStatement[35594-35677]:VariableDeclarationStatement[36000-36083]"
    }, {
      "left" : "type = modifyTypeByAnnotation(ctxt, mutator, type);",
      "right" : "type = modifyTypeByAnnotation(ctxt, mutator, type);",
      "info" : "ExpressionStatement[35686-35737]:ExpressionStatement[36092-36143]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[35746-35797]:VariableDeclarationStatement[36152-36203]"
    }, {
      "left" : "SettableBeanProperty prop;",
      "right" : "SettableBeanProperty prop;",
      "info" : "VariableDeclarationStatement[35806-35832]:VariableDeclarationStatement[36212-36238]"
    }, {
      "left" : "if (mutator instanceof AnnotatedMethod)",
      "right" : "if (mutator instanceof AnnotatedMethod)",
      "info" : "IfStatement[35841-36195]:IfStatement[36247-36601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35881-36036]:Block[36287-36442]"
    }, {
      "left" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
      "right" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
      "info" : "ExpressionStatement[35895-36026]:ExpressionStatement[36301-36432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36042-36195]:Block[36448-36601]"
    }, {
      "left" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
      "right" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
      "info" : "ExpressionStatement[36056-36185]:ExpressionStatement[36462-36591]"
    }, {
      "left" : "if (propDeser != null)",
      "right" : "if (propDeser != null)",
      "info" : "IfStatement[36204-36296]:IfStatement[36610-36702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36227-36296]:Block[36633-36702]"
    }, {
      "left" : "prop = prop.withValueDeserializer(propDeser);",
      "right" : "prop = prop.withValueDeserializer(propDeser);",
      "info" : "ExpressionStatement[36241-36286]:ExpressionStatement[36647-36692]"
    }, {
      "left" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
      "right" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
      "info" : "VariableDeclarationStatement[36367-36442]:VariableDeclarationStatement[36773-36848]"
    }, {
      "left" : "if (ref != null && ref.isManagedReference())",
      "right" : "if (ref != null && ref.isManagedReference())",
      "info" : "IfStatement[36451-36564]:IfStatement[36857-36970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36496-36564]:Block[36902-36970]"
    }, {
      "left" : "prop.setManagedReferenceName(ref.getName());",
      "right" : "prop.setManagedReferenceName(ref.getName());",
      "info" : "ExpressionStatement[36510-36554]:ExpressionStatement[36916-36960]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
      "info" : "VariableDeclarationStatement[36573-36628]:VariableDeclarationStatement[36979-37034]"
    }, {
      "left" : "if(objectIdInfo != null)",
      "right" : "if(objectIdInfo != null)",
      "info" : "IfStatement[36637-36720]:IfStatement[37043-37126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36661-36720]:Block[37067-37126]"
    }, {
      "left" : "prop.setObjectIdInfo(objectIdInfo);",
      "right" : "prop.setObjectIdInfo(objectIdInfo);",
      "info" : "ExpressionStatement[36675-36710]:ExpressionStatement[37081-37116]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[36729-36741]:ReturnStatement[37135-37147]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[36872-36881]:Modifier[37278-37287]"
    }, {
      "left" : "SettableBeanProperty",
      "right" : "SettableBeanProperty",
      "info" : "SimpleType[36882-36902]:SimpleType[37288-37308]"
    }, {
      "left" : "constructSetterlessProperty",
      "right" : "constructSetterlessProperty",
      "info" : "SimpleName[36903-36930]:SimpleName[37309-37336]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[36931-36958]:SingleVariableDeclaration[37337-37364]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[36972-36996]:SingleVariableDeclaration[37378-37402]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[36998-37028]:SingleVariableDeclaration[37404-37434]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[37045-37065]:SimpleType[37451-37471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37070-38051]:Block[37476-38457]"
    }, {
      "left" : "final AnnotatedMethod getter = propDef.getGetter();",
      "right" : "final AnnotatedMethod getter = propDef.getGetter();",
      "info" : "VariableDeclarationStatement[37080-37131]:VariableDeclarationStatement[37486-37537]"
    }, {
      "left" : "if (ctxt.canOverrideAccessModifiers())",
      "right" : "if (ctxt.canOverrideAccessModifiers())",
      "info" : "IfStatement[37186-37330]:IfStatement[37592-37736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37225-37330]:Block[37631-37736]"
    }, {
      "left" : "getter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "getter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[37239-37320]:ExpressionStatement[37645-37726]"
    }, {
      "left" : "JavaType type = getter.getType();",
      "right" : "JavaType type = getter.getType();",
      "info" : "VariableDeclarationStatement[37339-37372]:VariableDeclarationStatement[37745-37778]"
    }, {
      "left" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, getter);",
      "right" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, getter);",
      "info" : "VariableDeclarationStatement[37469-37551]:VariableDeclarationStatement[37875-37957]"
    }, {
      "left" : "type = modifyTypeByAnnotation(ctxt, getter, type);",
      "right" : "type = modifyTypeByAnnotation(ctxt, getter, type);",
      "info" : "ExpressionStatement[37560-37610]:ExpressionStatement[37966-38016]"
    }, {
      "left" : "type = resolveType(ctxt, beanDesc, type, getter);",
      "right" : "type = resolveType(ctxt, beanDesc, type, getter);",
      "info" : "ExpressionStatement[37672-37721]:ExpressionStatement[38078-38127]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[37730-37781]:VariableDeclarationStatement[38136-38187]"
    }, {
      "left" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
      "right" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
      "info" : "VariableDeclarationStatement[37790-37923]:VariableDeclarationStatement[38196-38329]"
    }, {
      "left" : "if (propDeser != null)",
      "right" : "if (propDeser != null)",
      "info" : "IfStatement[37932-38024]:IfStatement[38338-38430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37955-38024]:Block[38361-38430]"
    }, {
      "left" : "prop = prop.withValueDeserializer(propDeser);",
      "right" : "prop = prop.withValueDeserializer(propDeser);",
      "info" : "ExpressionStatement[37969-38014]:ExpressionStatement[38375-38420]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[38033-38045]:ReturnStatement[38439-38451]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[38586-38595]:Modifier[38992-39001]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[38596-38603]:PrimitiveType[39002-39009]"
    }, {
      "left" : "isPotentialBeanType",
      "right" : "isPotentialBeanType",
      "info" : "SimpleName[38604-38623]:SimpleName[39010-39029]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[38624-38637]:SingleVariableDeclaration[39030-39043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38643-39454]:Block[39049-39860]"
    }, {
      "left" : "String typeStr = ClassUtil.canBeABeanType(type);",
      "right" : "String typeStr = ClassUtil.canBeABeanType(type);",
      "info" : "VariableDeclarationStatement[38653-38701]:VariableDeclarationStatement[39059-39107]"
    }, {
      "left" : "if (typeStr != null)",
      "right" : "if (typeStr != null)",
      "info" : "IfStatement[38710-38870]:IfStatement[39116-39276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38731-38870]:Block[39137-39276]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "info" : "ThrowStatement[38745-38860]:ThrowStatement[39151-39266]"
    }, {
      "left" : "if (ClassUtil.isProxyType(type))",
      "right" : "if (ClassUtil.isProxyType(type))",
      "info" : "IfStatement[38879-39035]:IfStatement[39285-39441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38912-39035]:Block[39318-39441]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
      "info" : "ThrowStatement[38926-39025]:ThrowStatement[39332-39431]"
    }, {
      "left" : "typeStr = ClassUtil.isLocalType(type, true);",
      "right" : "typeStr = ClassUtil.isLocalType(type, true);",
      "info" : "ExpressionStatement[39214-39258]:ExpressionStatement[39620-39664]"
    }, {
      "left" : "if (typeStr != null)",
      "right" : "if (typeStr != null)",
      "info" : "IfStatement[39267-39427]:IfStatement[39673-39833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39288-39427]:Block[39694-39833]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "info" : "ThrowStatement[39302-39417]:ThrowStatement[39708-39823]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[39436-39448]:ReturnStatement[39842-39854]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[39620-39629]:Modifier[40026-40035]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39630-39637]:PrimitiveType[40036-40043]"
    }, {
      "left" : "isIgnorableType",
      "right" : "isIgnorableType",
      "info" : "SimpleName[39638-39653]:SimpleName[40044-40059]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[39654-39682]:SingleVariableDeclaration[40060-40088]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[39684-39708]:SingleVariableDeclaration[40090-40114]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[39722-39735]:SingleVariableDeclaration[40128-40141]"
    }, {
      "left" : "Map<Class<?>,Boolean> ignoredTypes",
      "right" : "Map<Class<?>,Boolean> ignoredTypes",
      "info" : "SingleVariableDeclaration[39737-39771]:SingleVariableDeclaration[40143-40177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39777-40196]:Block[40183-40602]"
    }, {
      "left" : "Boolean status = ignoredTypes.get(type);",
      "right" : "Boolean status = ignoredTypes.get(type);",
      "info" : "VariableDeclarationStatement[39787-39827]:VariableDeclarationStatement[40193-40233]"
    }, {
      "left" : "if (status != null)",
      "right" : "if (status != null)",
      "info" : "IfStatement[39836-39909]:IfStatement[40242-40315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39856-39909]:Block[40262-40315]"
    }, {
      "left" : "return status.booleanValue();",
      "right" : "return status.booleanValue();",
      "info" : "ReturnStatement[39870-39899]:ReturnStatement[40276-40305]"
    }, {
      "left" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "right" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "info" : "VariableDeclarationStatement[39918-39981]:VariableDeclarationStatement[40324-40387]"
    }, {
      "left" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
      "right" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
      "info" : "ExpressionStatement[39990-40071]:ExpressionStatement[40396-40477]"
    }, {
      "left" : "return (status == null) ? false : status.booleanValue();",
      "right" : "return (status == null) ? false : status.booleanValue();",
      "info" : "ReturnStatement[40133-40189]:ReturnStatement[40539-40595]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[40238-40247]:Modifier[40644-40653]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40248-40252]:PrimitiveType[40654-40658]"
    }, {
      "left" : "checkIllegalTypes",
      "right" : "checkIllegalTypes",
      "info" : "SimpleName[40253-40270]:SimpleName[40659-40676]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[40271-40298]:SingleVariableDeclaration[40677-40704]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[40300-40313]:SingleVariableDeclaration[40706-40719]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[40327-40351]:SingleVariableDeclaration[40733-40757]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[40368-40388]:SimpleType[40774-40794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40393-40802]:Block[40799-41208]"
    }, {
      "left" : "String full = type.getRawClass().getName();",
      "right" : "String full = type.getRawClass().getName();",
      "info" : "VariableDeclarationStatement[40530-40573]:VariableDeclarationStatement[40936-40979]"
    }, {
      "left" : "if (_cfgIllegalClassNames.contains(full))",
      "right" : "if (_cfgIllegalClassNames.contains(full))",
      "info" : "IfStatement[40583-40796]:IfStatement[40989-41202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40625-40796]:Block[41031-41202]"
    }, {
      "left" : "throw JsonMappingException.from(ctxt,\n                    String.format(\"Illegal type (%s) to deserialize: prevented for security reasons\", full));",
      "right" : "throw JsonMappingException.from(ctxt,\n                    String.format(\"Illegal type (%s) to deserialize: prevented for security reasons\", full));",
      "info" : "ThrowStatement[40639-40786]:ThrowStatement[41045-41192]"
    } ]
  },
  "interFileMappings" : { }
}