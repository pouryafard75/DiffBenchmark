{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static <K, V> HashBiMap<K, V> create()",
      "right" : "public static <K, V> HashBiMap<K, V> create()",
      "info" : "MethodDeclaration[2089-2259]:MethodDeclaration[2089-2259]"
    }, {
      "left" : "public static <K, V> HashBiMap<K, V> create(int expectedSize)",
      "right" : "public static <K, V> HashBiMap<K, V> create(int expectedSize)",
      "info" : "MethodDeclaration[2263-2599]:MethodDeclaration[2263-2599]"
    }, {
      "left" : "public static <K, V> HashBiMap<K, V> create(Map<? extends K, ? extends V> map)",
      "right" : "public static <K, V> HashBiMap<K, V> create(Map<? extends K, ? extends V> map)",
      "info" : "MethodDeclaration[2603-2965]:MethodDeclaration[2603-2965]"
    }, {
      "left" : "final int keyHash;",
      "right" : "final int keyHash;",
      "info" : "FieldDeclaration[3045-3063]:FieldDeclaration[3045-3063]"
    }, {
      "left" : "final int valueHash;",
      "right" : "final int valueHash;",
      "info" : "FieldDeclaration[3068-3088]:FieldDeclaration[3068-3088]"
    }, {
      "left" : "@Nullable BiEntry<K, V> nextInKToVBucket;",
      "right" : "@Nullable\n    BiEntry<K, V> nextInKToVBucket;",
      "info" : "FieldDeclaration[3093-3134]:FieldDeclaration[3094-3139]"
    }, {
      "left" : "@Nullable BiEntry<K, V> nextInVToKBucket;",
      "right" : "@Nullable\n    BiEntry<K, V> nextInVToKBucket;",
      "info" : "FieldDeclaration[3139-3180]:FieldDeclaration[3144-3189]"
    }, {
      "left" : "BiEntry(K key, int keyHash, V value, int valueHash)",
      "right" : "BiEntry(K key, int keyHash, V value, int valueHash)",
      "info" : "MethodDeclaration[3186-3334]:MethodDeclaration[3314-3462]"
    }, {
      "left" : "private static final double LOAD_FACTOR = 1.0;",
      "right" : "private static final double LOAD_FACTOR = 1.0;",
      "info" : "FieldDeclaration[3342-3388]:FieldDeclaration[3470-3516]"
    }, {
      "left" : "private transient BiEntry<K, V>[] hashTableKToV;",
      "right" : "private transient BiEntry<K, V>[] hashTableKToV;",
      "info" : "FieldDeclaration[3392-3440]:FieldDeclaration[3520-3568]"
    }, {
      "left" : "private transient BiEntry<K, V>[] hashTableVToK;",
      "right" : "private transient BiEntry<K, V>[] hashTableVToK;",
      "info" : "FieldDeclaration[3443-3491]:FieldDeclaration[3571-3619]"
    }, {
      "left" : "private transient int size;",
      "right" : "private transient int size;",
      "info" : "FieldDeclaration[3494-3521]:FieldDeclaration[3741-3768]"
    }, {
      "left" : "private transient int mask;",
      "right" : "private transient int mask;",
      "info" : "FieldDeclaration[3524-3551]:FieldDeclaration[3771-3798]"
    }, {
      "left" : "private transient int modCount;",
      "right" : "private transient int modCount;",
      "info" : "FieldDeclaration[3554-3585]:FieldDeclaration[3801-3832]"
    }, {
      "left" : "private HashBiMap(int expectedSize)",
      "right" : "private HashBiMap(int expectedSize)",
      "info" : "MethodDeclaration[3589-3654]:MethodDeclaration[3836-3901]"
    }, {
      "left" : "private BiEntry<K, V> seekByKey(@Nullable Object key, int keyHash)",
      "right" : "private BiEntry<K, V> seekByKey(@Nullable Object key, int keyHash)",
      "info" : "MethodDeclaration[5602-5925]:MethodDeclaration[7339-7662]"
    }, {
      "left" : "private BiEntry<K, V> seekByValue(@Nullable Object value, int valueHash)",
      "right" : "private BiEntry<K, V> seekByValue(@Nullable Object value, int valueHash)",
      "info" : "MethodDeclaration[5929-6268]:MethodDeclaration[7666-8005]"
    }, {
      "left" : "public boolean containsKey(@Nullable Object key)",
      "right" : "public boolean containsKey(@Nullable Object key)",
      "info" : "MethodDeclaration[6272-6391]:MethodDeclaration[8009-8128]"
    }, {
      "left" : "public boolean containsValue(@Nullable Object value)",
      "right" : "public boolean containsValue(@Nullable Object value)",
      "info" : "MethodDeclaration[6395-6524]:MethodDeclaration[8132-8261]"
    }, {
      "left" : "public V get(@Nullable Object key)",
      "right" : "public V get(@Nullable Object key)",
      "info" : "MethodDeclaration[6528-6655]:MethodDeclaration[8265-8392]"
    }, {
      "left" : "public V put(@Nullable K key, @Nullable V value)",
      "right" : "public V put(@Nullable K key, @Nullable V value)",
      "info" : "MethodDeclaration[6659-6760]:MethodDeclaration[8396-8497]"
    }, {
      "left" : "public V forcePut(@Nullable K key, @Nullable V value)",
      "right" : "public V forcePut(@Nullable K key, @Nullable V value)",
      "info" : "MethodDeclaration[6764-6869]:MethodDeclaration[8501-8606]"
    }, {
      "left" : "private BiEntry<K, V>[] createTable(int length)",
      "right" : "private BiEntry<K, V>[] createTable(int length)",
      "info" : "MethodDeclaration[9323-9441]:MethodDeclaration[11316-11434]"
    }, {
      "left" : "BiEntry<K, V> toRemove = null;",
      "right" : "BiEntry<K, V> toRemove = null;",
      "info" : "FieldDeclaration[9983-10013]:FieldDeclaration[12133-12163]"
    }, {
      "left" : "int expectedModCount = modCount;",
      "right" : "int expectedModCount = modCount;",
      "info" : "FieldDeclaration[10018-10050]:FieldDeclaration[12168-12200]"
    }, {
      "left" : "abstract T output(BiEntry<K, V> entry);",
      "right" : "abstract T output(BiEntry<K, V> entry);",
      "info" : "MethodDeclaration[11083-11122]:MethodDeclaration[12908-12947]"
    }, {
      "left" : "public Set<K> keySet()",
      "right" : "public Set<K> keySet()",
      "info" : "MethodDeclaration[11130-11195]:MethodDeclaration[12955-13020]"
    }, {
      "left" : "KeySet()",
      "right" : "KeySet()",
      "info" : "MethodDeclaration[11271-11316]:MethodDeclaration[13096-13141]"
    }, {
      "left" : "public Iterator<K> iterator()",
      "right" : "public Iterator<K> iterator()",
      "info" : "MethodDeclaration[11322-11506]:MethodDeclaration[13147-13331]"
    }, {
      "left" : "K output(BiEntry<K, V> entry)",
      "right" : "K output(BiEntry<K, V> entry)",
      "info" : "MethodDeclaration[11404-11491]:MethodDeclaration[13229-13316]"
    }, {
      "left" : "public Set<V> values()",
      "right" : "public Set<V> values()",
      "info" : "MethodDeclaration[11757-11828]:MethodDeclaration[13674-13745]"
    }, {
      "left" : "Entry<K, V> output(BiEntry<K, V> entry)",
      "right" : "Entry<K, V> output(BiEntry<K, V> entry)",
      "info" : "MethodDeclaration[11926-12027]:MethodDeclaration[13843-13944]"
    }, {
      "left" : "MapEntry(BiEntry<K, V> entry)",
      "right" : "MapEntry(BiEntry<K, V> entry)",
      "info" : "MethodDeclaration[12124-12198]:MethodDeclaration[14041-14115]"
    }, {
      "left" : "public K getKey()",
      "right" : "public K getKey()",
      "info" : "MethodDeclaration[12208-12286]:MethodDeclaration[14125-14203]"
    }, {
      "left" : "public V getValue()",
      "right" : "public V getValue()",
      "info" : "MethodDeclaration[12296-12378]:MethodDeclaration[14213-14295]"
    }, {
      "left" : "private transient BiMap<V, K> inverse;",
      "right" : "private transient BiMap<V, K> inverse;",
      "info" : "FieldDeclaration[13127-13165]:FieldDeclaration[15156-15194]"
    }, {
      "left" : "public BiMap<V, K> inverse()",
      "right" : "public BiMap<V, K> inverse()",
      "info" : "MethodDeclaration[13169-13281]:MethodDeclaration[15198-15310]"
    }, {
      "left" : "BiMap<K, V> forward()",
      "right" : "BiMap<K, V> forward()",
      "info" : "MethodDeclaration[13382-13440]:MethodDeclaration[15411-15469]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[13510-13576]:MethodDeclaration[15539-15605]"
    }, {
      "left" : "public boolean containsKey(@Nullable Object value)",
      "right" : "public boolean containsKey(@Nullable Object value)",
      "info" : "MethodDeclaration[13582-13699]:MethodDeclaration[15611-15728]"
    }, {
      "left" : "public K get(@Nullable Object value)",
      "right" : "public K get(@Nullable Object value)",
      "info" : "MethodDeclaration[13705-13832]:MethodDeclaration[15734-15861]"
    }, {
      "left" : "public K put(@Nullable V value, @Nullable K key)",
      "right" : "public K put(@Nullable V value, @Nullable K key)",
      "info" : "MethodDeclaration[13838-13952]:MethodDeclaration[15867-15981]"
    }, {
      "left" : "public K forcePut(@Nullable V value, @Nullable K key)",
      "right" : "public K forcePut(@Nullable V value, @Nullable K key)",
      "info" : "MethodDeclaration[13958-14076]:MethodDeclaration[15987-16105]"
    }, {
      "left" : "public BiMap<K, V> inverse()",
      "right" : "public BiMap<K, V> inverse()",
      "info" : "MethodDeclaration[14337-14411]:MethodDeclaration[16458-16532]"
    }, {
      "left" : "public Set<V> keySet()",
      "right" : "public Set<V> keySet()",
      "info" : "MethodDeclaration[14417-14495]:MethodDeclaration[16538-16616]"
    }, {
      "left" : "InverseKeySet",
      "right" : "InverseKeySet",
      "info" : "TypeDeclaration[14501-15119]:TypeDeclaration[16622-17240]"
    }, {
      "left" : "InverseKeySet()",
      "right" : "InverseKeySet()",
      "info" : "MethodDeclaration[14584-14638]:MethodDeclaration[16705-16759]"
    }, {
      "left" : "public boolean remove(@Nullable Object o)",
      "right" : "public boolean remove(@Nullable Object o)",
      "info" : "MethodDeclaration[14646-14903]:MethodDeclaration[16767-17024]"
    }, {
      "left" : "public Iterator<V> iterator()",
      "right" : "public Iterator<V> iterator()",
      "info" : "MethodDeclaration[14911-15113]:MethodDeclaration[17032-17234]"
    }, {
      "left" : "V output(BiEntry<K, V> entry)",
      "right" : "V output(BiEntry<K, V> entry)",
      "info" : "MethodDeclaration[14999-15094]:MethodDeclaration[17120-17215]"
    }, {
      "left" : "public Set<K> values()",
      "right" : "public Set<K> values()",
      "info" : "MethodDeclaration[15125-15202]:MethodDeclaration[17246-17323]"
    }, {
      "left" : "Map<V, K> map()",
      "right" : "Map<V, K> map()",
      "info" : "MethodDeclaration[15309-15385]:MethodDeclaration[17430-17506]"
    }, {
      "left" : "Entry<V, K> output(BiEntry<K, V> entry)",
      "right" : "Entry<V, K> output(BiEntry<K, V> entry)",
      "info" : "MethodDeclaration[15509-15632]:MethodDeclaration[17630-17753]"
    }, {
      "left" : "InverseEntry(BiEntry<K, V> entry)",
      "right" : "InverseEntry(BiEntry<K, V> entry)",
      "info" : "MethodDeclaration[15751-15841]:MethodDeclaration[17872-17962]"
    }, {
      "left" : "public V getKey()",
      "right" : "public V getKey()",
      "info" : "MethodDeclaration[15857-15955]:MethodDeclaration[17978-18076]"
    }, {
      "left" : "public K getValue()",
      "right" : "public K getValue()",
      "info" : "MethodDeclaration[15971-16069]:MethodDeclaration[18092-18190]"
    }, {
      "left" : "Object writeReplace()",
      "right" : "Object writeReplace()",
      "info" : "MethodDeclaration[16984-17075]:MethodDeclaration[19111-19202]"
    }, {
      "left" : "InverseSerializedForm",
      "right" : "InverseSerializedForm",
      "info" : "TypeDeclaration[17083-17356]:TypeDeclaration[19210-19483]"
    }, {
      "left" : "private final HashBiMap<K, V> bimap;",
      "right" : "private final HashBiMap<K, V> bimap;",
      "info" : "FieldDeclaration[17168-17204]:FieldDeclaration[19295-19331]"
    }, {
      "left" : "InverseSerializedForm(HashBiMap<K, V> bimap)",
      "right" : "InverseSerializedForm(HashBiMap<K, V> bimap)",
      "info" : "MethodDeclaration[17210-17288]:MethodDeclaration[19337-19415]"
    }, {
      "left" : "Object readResolve()",
      "right" : "Object readResolve()",
      "info" : "MethodDeclaration[17294-17352]:MethodDeclaration[19421-19479]"
    }, {
      "left" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "right" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "info" : "MethodDeclaration[17360-17673]:MethodDeclaration[19487-19800]"
    }, {
      "left" : "private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException",
      "right" : "private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException",
      "info" : "MethodDeclaration[17677-17968]:MethodDeclaration[19804-20095]"
    }, {
      "left" : "@GwtIncompatible(\"Not needed in emulated source\")\n  private static final long serialVersionUID = 0;",
      "right" : "@GwtIncompatible(\"Not needed in emulated source\")\n  private static final long serialVersionUID = 0;",
      "info" : "FieldDeclaration[17972-18071]:FieldDeclaration[20099-20198]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2231-2259]:Block[2231-2259]"
    }, {
      "left" : "return create(16);",
      "right" : "return create(16);",
      "info" : "ReturnStatement[2237-2255]:ReturnStatement[2237-2255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2548-2599]:Block[2548-2599]"
    }, {
      "left" : "return new HashBiMap<K, V>(expectedSize);",
      "right" : "return new HashBiMap<K, V>(expectedSize);",
      "info" : "ReturnStatement[2554-2595]:ReturnStatement[2554-2595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2871-2965]:Block[2871-2965]"
    }, {
      "left" : "HashBiMap<K, V> bimap = create(map.size());",
      "right" : "HashBiMap<K, V> bimap = create(map.size());",
      "info" : "VariableDeclarationStatement[2877-2920]:VariableDeclarationStatement[2877-2920]"
    }, {
      "left" : "bimap.putAll(map);",
      "right" : "bimap.putAll(map);",
      "info" : "ExpressionStatement[2925-2943]:ExpressionStatement[2925-2943]"
    }, {
      "left" : "return bimap;",
      "right" : "return bimap;",
      "info" : "ReturnStatement[2948-2961]:ReturnStatement[2948-2961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3238-3334]:Block[3366-3462]"
    }, {
      "left" : "super(key, value);",
      "right" : "super(key, value);",
      "info" : "SuperConstructorInvocation[3246-3264]:SuperConstructorInvocation[3374-3392]"
    }, {
      "left" : "this.keyHash = keyHash;",
      "right" : "this.keyHash = keyHash;",
      "info" : "ExpressionStatement[3271-3294]:ExpressionStatement[3399-3422]"
    }, {
      "left" : "this.valueHash = valueHash;",
      "right" : "this.valueHash = valueHash;",
      "info" : "ExpressionStatement[3301-3328]:ExpressionStatement[3429-3456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3625-3654]:Block[3872-3901]"
    }, {
      "left" : "init(expectedSize);",
      "right" : "init(expectedSize);",
      "info" : "ExpressionStatement[3631-3650]:ExpressionStatement[3878-3897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5669-5925]:Block[7406-7662]"
    }, {
      "left" : "for (BiEntry<K, V> entry = hashTableKToV[keyHash & mask];\n        entry != null;\n        entry = entry.nextInKToVBucket)",
      "right" : "for (BiEntry<K, V> entry = hashTableKToV[keyHash & mask];\n        entry != null;\n        entry = entry.nextInKToVBucket)",
      "info" : "ForStatement[5675-5904]:ForStatement[7412-7641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5796-5904]:Block[7533-7641]"
    }, {
      "left" : "if (keyHash == entry.keyHash && Objects.equal(key, entry.key))",
      "right" : "if (keyHash == entry.keyHash && Objects.equal(key, entry.key))",
      "info" : "IfStatement[5804-5898]:IfStatement[7541-7635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5867-5898]:Block[7604-7635]"
    }, {
      "left" : "return entry;",
      "right" : "return entry;",
      "info" : "ReturnStatement[5877-5890]:ReturnStatement[7614-7627]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5909-5921]:ReturnStatement[7646-7658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6002-6268]:Block[7739-8005]"
    }, {
      "left" : "for (BiEntry<K, V> entry = hashTableVToK[valueHash & mask];\n        entry != null;\n        entry = entry.nextInVToKBucket)",
      "right" : "for (BiEntry<K, V> entry = hashTableVToK[valueHash & mask];\n        entry != null;\n        entry = entry.nextInVToKBucket)",
      "info" : "ForStatement[6008-6247]:ForStatement[7745-7984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6131-6247]:Block[7868-7984]"
    }, {
      "left" : "if (valueHash == entry.valueHash && Objects.equal(value, entry.value))",
      "right" : "if (valueHash == entry.valueHash && Objects.equal(value, entry.value))",
      "info" : "IfStatement[6139-6241]:IfStatement[7876-7978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6210-6241]:Block[7947-7978]"
    }, {
      "left" : "return entry;",
      "right" : "return entry;",
      "info" : "ReturnStatement[6220-6233]:ReturnStatement[7957-7970]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6252-6264]:ReturnStatement[7989-8001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6333-6391]:Block[8070-8128]"
    }, {
      "left" : "return seekByKey(key, smearedHash(key)) != null;",
      "right" : "return seekByKey(key, smearedHash(key)) != null;",
      "info" : "ReturnStatement[6339-6387]:ReturnStatement[8076-8124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6460-6524]:Block[8197-8261]"
    }, {
      "left" : "return seekByValue(value, smearedHash(value)) != null;",
      "right" : "return seekByValue(value, smearedHash(value)) != null;",
      "info" : "ReturnStatement[6466-6520]:ReturnStatement[8203-8257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6587-6655]:Block[8324-8392]"
    }, {
      "left" : "return Maps.valueOrNull(seekByKey(key, smearedHash(key)));",
      "right" : "return Maps.valueOrNull(seekByKey(key, smearedHash(key)));",
      "info" : "ReturnStatement[6593-6651]:ReturnStatement[8330-8388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6720-6760]:Block[8457-8497]"
    }, {
      "left" : "return put(key, value, false);",
      "right" : "return put(key, value, false);",
      "info" : "ReturnStatement[6726-6756]:ReturnStatement[8463-8493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6830-6869]:Block[8567-8606]"
    }, {
      "left" : "return put(key, value, true);",
      "right" : "return put(key, value, true);",
      "info" : "ReturnStatement[6836-6865]:ReturnStatement[8573-8602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9404-9441]:Block[11397-11434]"
    }, {
      "left" : "return new BiEntry[length];",
      "right" : "return new BiEntry[length];",
      "info" : "ReturnStatement[9410-9437]:ReturnStatement[11403-11430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11165-11195]:Block[12990-13020]"
    }, {
      "left" : "return new KeySet();",
      "right" : "return new KeySet();",
      "info" : "ReturnStatement[11171-11191]:ReturnStatement[12996-13016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11280-11316]:Block[13105-13141]"
    }, {
      "left" : "super(HashBiMap.this);",
      "right" : "super(HashBiMap.this);",
      "info" : "SuperConstructorInvocation[11288-11310]:SuperConstructorInvocation[13113-13135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11366-11506]:Block[13191-13331]"
    }, {
      "left" : "return new Itr<K>() {\n        @Override\n        K output(BiEntry<K, V> entry) {\n          return entry.key;\n        }\n      };",
      "right" : "return new Itr<K>() {\n        @Override\n        K output(BiEntry<K, V> entry) {\n          return entry.key;\n        }\n      };",
      "info" : "ReturnStatement[11374-11500]:ReturnStatement[13199-13325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11452-11491]:Block[13277-13316]"
    }, {
      "left" : "return entry.key;",
      "right" : "return entry.key;",
      "info" : "ReturnStatement[11464-11481]:ReturnStatement[13289-13306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11792-11828]:Block[13709-13745]"
    }, {
      "left" : "return inverse().keySet();",
      "right" : "return inverse().keySet();",
      "info" : "ReturnStatement[11798-11824]:ReturnStatement[13715-13741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11982-12027]:Block[13899-13944]"
    }, {
      "left" : "return new MapEntry(entry);",
      "right" : "return new MapEntry(entry);",
      "info" : "ReturnStatement[11992-12019]:ReturnStatement[13909-13936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12154-12198]:Block[14071-14115]"
    }, {
      "left" : "this.delegate = entry;",
      "right" : "this.delegate = entry;",
      "info" : "ExpressionStatement[12166-12188]:ExpressionStatement[14083-14105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12244-12286]:Block[14161-14203]"
    }, {
      "left" : "return delegate.key;",
      "right" : "return delegate.key;",
      "info" : "ReturnStatement[12256-12276]:ReturnStatement[14173-14193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12334-12378]:Block[14251-14295]"
    }, {
      "left" : "return delegate.value;",
      "right" : "return delegate.value;",
      "info" : "ReturnStatement[12346-12368]:ReturnStatement[14263-14285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13210-13281]:Block[15239-15310]"
    }, {
      "left" : "return (inverse == null) ? inverse = new Inverse() : inverse;",
      "right" : "return (inverse == null) ? inverse = new Inverse() : inverse;",
      "info" : "ReturnStatement[13216-13277]:ReturnStatement[15245-15306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13404-13440]:Block[15433-15469]"
    }, {
      "left" : "return HashBiMap.this;",
      "right" : "return HashBiMap.this;",
      "info" : "ReturnStatement[13412-13434]:ReturnStatement[15441-15463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13544-13576]:Block[15573-15605]"
    }, {
      "left" : "forward().clear();",
      "right" : "forward().clear();",
      "info" : "ExpressionStatement[13552-13570]:ExpressionStatement[15581-15599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13647-13699]:Block[15676-15728]"
    }, {
      "left" : "return forward().containsValue(value);",
      "right" : "return forward().containsValue(value);",
      "info" : "ReturnStatement[13655-13693]:ReturnStatement[15684-15722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13756-13832]:Block[15785-15861]"
    }, {
      "left" : "return Maps.keyOrNull(seekByValue(value, smearedHash(value)));",
      "right" : "return Maps.keyOrNull(seekByValue(value, smearedHash(value)));",
      "info" : "ReturnStatement[13764-13826]:ReturnStatement[15793-15855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13901-13952]:Block[15930-15981]"
    }, {
      "left" : "return putInverse(value, key, false);",
      "right" : "return putInverse(value, key, false);",
      "info" : "ReturnStatement[13909-13946]:ReturnStatement[15938-15975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14026-14076]:Block[16055-16105]"
    }, {
      "left" : "return putInverse(value, key, true);",
      "right" : "return putInverse(value, key, true);",
      "info" : "ReturnStatement[14034-14070]:ReturnStatement[16063-16099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14380-14411]:Block[16501-16532]"
    }, {
      "left" : "return forward();",
      "right" : "return forward();",
      "info" : "ReturnStatement[14388-14405]:ReturnStatement[16509-16526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14454-14495]:Block[16575-16616]"
    }, {
      "left" : "return new InverseKeySet();",
      "right" : "return new InverseKeySet();",
      "info" : "ReturnStatement[14462-14489]:ReturnStatement[16583-16610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14600-14638]:Block[16721-16759]"
    }, {
      "left" : "super(Inverse.this);",
      "right" : "super(Inverse.this);",
      "info" : "SuperConstructorInvocation[14610-14630]:SuperConstructorInvocation[16731-16751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14704-14903]:Block[16825-17024]"
    }, {
      "left" : "BiEntry<K, V> entry = seekByValue(o, smearedHash(o));",
      "right" : "BiEntry<K, V> entry = seekByValue(o, smearedHash(o));",
      "info" : "VariableDeclarationStatement[14714-14767]:VariableDeclarationStatement[16835-16888]"
    }, {
      "left" : "if (entry == null)",
      "right" : "if (entry == null)",
      "info" : "IfStatement[14776-14895]:IfStatement[16897-17016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14795-14830]:Block[16916-16951]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[14807-14820]:ReturnStatement[16928-16941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14836-14895]:Block[16957-17016]"
    }, {
      "left" : "delete(entry);",
      "right" : "delete(entry);",
      "info" : "ExpressionStatement[14848-14862]:ExpressionStatement[16969-16983]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[14873-14885]:ReturnStatement[16994-17006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14957-15113]:Block[17078-17234]"
    }, {
      "left" : "return new Itr<V>() {\n          @Override\n          V output(BiEntry<K, V> entry) {\n            return entry.value;\n          }\n        };",
      "right" : "return new Itr<V>() {\n          @Override\n          V output(BiEntry<K, V> entry) {\n            return entry.value;\n          }\n        };",
      "info" : "ReturnStatement[14967-15105]:ReturnStatement[17088-17226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15049-15094]:Block[17170-17215]"
    }, {
      "left" : "return entry.value;",
      "right" : "return entry.value;",
      "info" : "ReturnStatement[15063-15082]:ReturnStatement[17184-17203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15162-15202]:Block[17283-17323]"
    }, {
      "left" : "return forward().keySet();",
      "right" : "return forward().keySet();",
      "info" : "ReturnStatement[15170-15196]:ReturnStatement[17291-17317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15343-15385]:Block[17464-17506]"
    }, {
      "left" : "return Inverse.this;",
      "right" : "return Inverse.this;",
      "info" : "ReturnStatement[15355-15375]:ReturnStatement[17476-17496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15571-15632]:Block[17692-17753]"
    }, {
      "left" : "return new InverseEntry(entry);",
      "right" : "return new InverseEntry(entry);",
      "info" : "ReturnStatement[15587-15618]:ReturnStatement[17708-17739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15785-15841]:Block[17906-17962]"
    }, {
      "left" : "this.delegate = entry;",
      "right" : "this.delegate = entry;",
      "info" : "ExpressionStatement[15803-15825]:ExpressionStatement[17924-17946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15899-15955]:Block[18020-18076]"
    }, {
      "left" : "return delegate.value;",
      "right" : "return delegate.value;",
      "info" : "ReturnStatement[15917-15939]:ReturnStatement[18038-18060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16015-16069]:Block[18136-18190]"
    }, {
      "left" : "return delegate.key;",
      "right" : "return delegate.key;",
      "info" : "ReturnStatement[16033-16053]:ReturnStatement[18154-18174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17006-17075]:Block[19133-19202]"
    }, {
      "left" : "return new InverseSerializedForm<K, V>(HashBiMap.this);",
      "right" : "return new InverseSerializedForm<K, V>(HashBiMap.this);",
      "info" : "ReturnStatement[17014-17069]:ReturnStatement[19141-19196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17255-17288]:Block[19382-19415]"
    }, {
      "left" : "this.bimap = bimap;",
      "right" : "this.bimap = bimap;",
      "info" : "ExpressionStatement[17263-17282]:ExpressionStatement[19390-19409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17315-17352]:Block[19442-19479]"
    }, {
      "left" : "return bimap.inverse();",
      "right" : "return bimap.inverse();",
      "info" : "ReturnStatement[17323-17346]:ReturnStatement[19450-19473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17593-17673]:Block[19720-19800]"
    }, {
      "left" : "stream.defaultWriteObject();",
      "right" : "stream.defaultWriteObject();",
      "info" : "ExpressionStatement[17599-17627]:ExpressionStatement[19726-19754]"
    }, {
      "left" : "Serialization.writeMap(this, stream);",
      "right" : "Serialization.writeMap(this, stream);",
      "info" : "ExpressionStatement[17632-17669]:ExpressionStatement[19759-19796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17818-17968]:Block[19945-20095]"
    }, {
      "left" : "stream.defaultReadObject();",
      "right" : "stream.defaultReadObject();",
      "info" : "ExpressionStatement[17824-17851]:ExpressionStatement[19951-19978]"
    }, {
      "left" : "init(16);",
      "right" : "init(16);",
      "info" : "ExpressionStatement[17856-17865]:ExpressionStatement[19983-19992]"
    }, {
      "left" : "int size = Serialization.readCount(stream);",
      "right" : "int size = Serialization.readCount(stream);",
      "info" : "VariableDeclarationStatement[17870-17913]:VariableDeclarationStatement[19997-20040]"
    }, {
      "left" : "Serialization.populateMap(this, stream, size);",
      "right" : "Serialization.populateMap(this, stream, size);",
      "info" : "ExpressionStatement[17918-17964]:ExpressionStatement[20045-20091]"
    } ]
  },
  "interFileMappings" : { }
}