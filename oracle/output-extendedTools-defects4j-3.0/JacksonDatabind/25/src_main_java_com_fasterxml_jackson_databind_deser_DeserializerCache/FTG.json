{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DeserializerCache",
      "right" : "DeserializerCache",
      "info" : "TypeDeclaration[504-25731]:TypeDeclaration[504-25770]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[895-943]:FieldDeclaration[895-943]"
    }, {
      "left" : "final protected ConcurrentHashMap<JavaType, JsonDeserializer<Object>> _cachedDeserializers\n        = new ConcurrentHashMap<JavaType, JsonDeserializer<Object>>(64, 0.75f, 4);",
      "right" : "final protected ConcurrentHashMap<JavaType, JsonDeserializer<Object>> _cachedDeserializers\n        = new ConcurrentHashMap<JavaType, JsonDeserializer<Object>>(64, 0.75f, 4);",
      "info" : "FieldDeclaration[1108-1748]:FieldDeclaration[1108-1748]"
    }, {
      "left" : "final protected HashMap<JavaType, JsonDeserializer<Object>> _incompleteDeserializers\n        = new HashMap<JavaType, JsonDeserializer<Object>>(8);",
      "right" : "final protected HashMap<JavaType, JsonDeserializer<Object>> _incompleteDeserializers\n        = new HashMap<JavaType, JsonDeserializer<Object>>(8);",
      "info" : "FieldDeclaration[1754-2153]:FieldDeclaration[1754-2153]"
    }, {
      "left" : "public DeserializerCache()",
      "right" : "public DeserializerCache()",
      "info" : "MethodDeclaration[2321-2351]:MethodDeclaration[2321-2351]"
    }, {
      "left" : "Object writeReplace()",
      "right" : "Object writeReplace()",
      "info" : "MethodDeclaration[2535-2744]:MethodDeclaration[2535-2744]"
    }, {
      "left" : "public int cachedDeserializersCount()",
      "right" : "public int cachedDeserializersCount()",
      "info" : "MethodDeclaration[2931-3630]:MethodDeclaration[2931-3630]"
    }, {
      "left" : "public void flushCachedDeserializers()",
      "right" : "public void flushCachedDeserializers()",
      "info" : "MethodDeclaration[3636-4124]:MethodDeclaration[3636-4124]"
    }, {
      "left" : "public JsonDeserializer<Object> findValueDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType propertyType)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> findValueDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType propertyType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[4318-6185]:MethodDeclaration[4318-6185]"
    }, {
      "left" : "public KeyDeserializer findKeyDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "right" : "public KeyDeserializer findKeyDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[6191-7067]:MethodDeclaration[6191-7067]"
    }, {
      "left" : "public boolean hasValueDeserializerFor(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "right" : "public boolean hasValueDeserializerFor(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7073-7803]:MethodDeclaration[7073-7803]"
    }, {
      "left" : "protected JsonDeserializer<Object> _findCachedDeserializer(JavaType type)",
      "right" : "protected JsonDeserializer<Object> _findCachedDeserializer(JavaType type)",
      "info" : "MethodDeclaration[8001-8322]:MethodDeclaration[8001-8322]"
    }, {
      "left" : "protected JsonDeserializer<Object> _createAndCacheValueDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> _createAndCacheValueDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[8328-10001]:MethodDeclaration[8328-10001]"
    }, {
      "left" : "protected JsonDeserializer<Object> _createAndCache2(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> _createAndCache2(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[10007-12224]:MethodDeclaration[10007-12224]"
    }, {
      "left" : "protected JsonDeserializer<Object> _createDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> _createDeserializer(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[12441-14816]:MethodDeclaration[12441-14816]"
    }, {
      "left" : "protected JsonDeserializer<?> _createDeserializer2(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> _createDeserializer2(DeserializationContext ctxt,\n            DeserializerFactory factory, JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[14822-16918]:MethodDeclaration[14822-16918]"
    }, {
      "left" : "protected JsonDeserializer<Object> findDeserializerFromAnnotation(DeserializationContext ctxt,\n            Annotated ann)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> findDeserializerFromAnnotation(DeserializationContext ctxt,\n            Annotated ann)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[16924-17653]:MethodDeclaration[16924-17653]"
    }, {
      "left" : "protected JsonDeserializer<Object> findConvertingDeserializer(DeserializationContext ctxt,\n            Annotated a, JsonDeserializer<Object> deser)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> findConvertingDeserializer(DeserializationContext ctxt,\n            Annotated a, JsonDeserializer<Object> deser)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[17659-18486]:MethodDeclaration[17659-18486]"
    }, {
      "left" : "protected Converter<Object,Object> findConverter(DeserializationContext ctxt,\n            Annotated a)\n        throws JsonMappingException",
      "right" : "protected Converter<Object,Object> findConverter(DeserializationContext ctxt,\n            Annotated a)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[18492-18850]:MethodDeclaration[18492-18850]"
    }, {
      "left" : "private JavaType modifyTypeByAnnotation(DeserializationContext ctxt,\n            Annotated a, JavaType type)\n        throws JsonMappingException",
      "right" : "private JavaType modifyTypeByAnnotation(DeserializationContext ctxt,\n            Annotated a, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[18859-23560]:MethodDeclaration[18859-23599]"
    }, {
      "left" : "private boolean _hasCustomValueHandler(JavaType t)",
      "right" : "private boolean _hasCustomValueHandler(JavaType t)",
      "info" : "MethodDeclaration[23739-24213]:MethodDeclaration[23778-24252]"
    }, {
      "left" : "private Class<?> _verifyAsClass(Object src, String methodName, Class<?> noneClass)",
      "right" : "private Class<?> _verifyAsClass(Object src, String methodName, Class<?> noneClass)",
      "info" : "MethodDeclaration[24219-24784]:MethodDeclaration[24258-24823]"
    }, {
      "left" : "protected JsonDeserializer<Object> _handleUnknownValueDeserializer(JavaType type)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> _handleUnknownValueDeserializer(JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[24977-25508]:MethodDeclaration[25016-25547]"
    }, {
      "left" : "protected KeyDeserializer _handleUnknownKeyDeserializer(JavaType type)\n        throws JsonMappingException",
      "right" : "protected KeyDeserializer _handleUnknownKeyDeserializer(JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[25514-25728]:MethodDeclaration[25553-25767]"
    } ],
    "mappings" : [
 {
      "left" : "java.io.Serializable",
      "right" : "java.io.Serializable",
      "info" : "SimpleType[828-848]:SimpleType[828-848]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2321-2327]:Modifier[2321-2327]"
    }, {
      "left" : "DeserializerCache",
      "right" : "DeserializerCache",
      "info" : "SimpleName[2328-2345]:SimpleName[2328-2345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2348-2351]:Block[2348-2351]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[2535-2541]:SimpleType[2535-2541]"
    }, {
      "left" : "writeReplace",
      "right" : "writeReplace",
      "info" : "SimpleName[2542-2554]:SimpleName[2542-2554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2557-2744]:Block[2557-2744]"
    }, {
      "left" : "_incompleteDeserializers.clear();",
      "right" : "_incompleteDeserializers.clear();",
      "info" : "ExpressionStatement[2627-2660]:ExpressionStatement[2627-2660]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2726-2738]:ReturnStatement[2726-2738]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3541-3547]:Modifier[3541-3547]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[3548-3551]:PrimitiveType[3548-3551]"
    }, {
      "left" : "cachedDeserializersCount",
      "right" : "cachedDeserializersCount",
      "info" : "SimpleName[3552-3576]:SimpleName[3552-3576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3579-3630]:Block[3579-3630]"
    }, {
      "left" : "return _cachedDeserializers.size();",
      "right" : "return _cachedDeserializers.size();",
      "info" : "ReturnStatement[3589-3624]:ReturnStatement[3589-3624]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4033-4039]:Modifier[4033-4039]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4040-4044]:PrimitiveType[4040-4044]"
    }, {
      "left" : "flushCachedDeserializers",
      "right" : "flushCachedDeserializers",
      "info" : "SimpleName[4045-4069]:SimpleName[4045-4069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4072-4124]:Block[4072-4124]"
    }, {
      "left" : "_cachedDeserializers.clear();",
      "right" : "_cachedDeserializers.clear();",
      "info" : "ExpressionStatement[4082-4111]:ExpressionStatement[4082-4111]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5374-5380]:Modifier[5374-5380]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[5381-5405]:ParameterizedType[5381-5405]"
    }, {
      "left" : "findValueDeserializer",
      "right" : "findValueDeserializer",
      "info" : "SimpleName[5406-5427]:SimpleName[5406-5427]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[5428-5455]:SingleVariableDeclaration[5428-5455]"
    }, {
      "left" : "DeserializerFactory factory",
      "right" : "DeserializerFactory factory",
      "info" : "SingleVariableDeclaration[5469-5496]:SingleVariableDeclaration[5469-5496]"
    }, {
      "left" : "JavaType propertyType",
      "right" : "JavaType propertyType",
      "info" : "SingleVariableDeclaration[5498-5519]:SingleVariableDeclaration[5498-5519]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[5536-5556]:SimpleType[5536-5556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5561-6185]:Block[5561-6185]"
    }, {
      "left" : "JsonDeserializer<Object> deser = _findCachedDeserializer(propertyType);",
      "right" : "JsonDeserializer<Object> deser = _findCachedDeserializer(propertyType);",
      "info" : "VariableDeclarationStatement[5571-5642]:VariableDeclarationStatement[5571-5642]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[5651-6157]:IfStatement[5651-6157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5670-6157]:Block[5670-6157]"
    }, {
      "left" : "deser = _createAndCacheValueDeserializer(ctxt, factory, propertyType);",
      "right" : "deser = _createAndCacheValueDeserializer(ctxt, factory, propertyType);",
      "info" : "ExpressionStatement[5757-5827]:ExpressionStatement[5757-5827]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[5840-6147]:IfStatement[5840-6147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5859-6147]:Block[5859-6147]"
    }, {
      "left" : "deser = _handleUnknownValueDeserializer(propertyType);",
      "right" : "deser = _handleUnknownValueDeserializer(propertyType);",
      "info" : "ExpressionStatement[6079-6133]:ExpressionStatement[6079-6133]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[6166-6179]:ReturnStatement[6166-6179]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6498-6504]:Modifier[6498-6504]"
    }, {
      "left" : "KeyDeserializer",
      "right" : "KeyDeserializer",
      "info" : "SimpleType[6505-6520]:SimpleType[6505-6520]"
    }, {
      "left" : "findKeyDeserializer",
      "right" : "findKeyDeserializer",
      "info" : "SimpleName[6521-6540]:SimpleName[6521-6540]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[6541-6568]:SingleVariableDeclaration[6541-6568]"
    }, {
      "left" : "DeserializerFactory factory",
      "right" : "DeserializerFactory factory",
      "info" : "SingleVariableDeclaration[6582-6609]:SingleVariableDeclaration[6582-6609]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[6611-6624]:SingleVariableDeclaration[6611-6624]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[6641-6661]:SimpleType[6641-6661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6666-7067]:Block[6666-7067]"
    }, {
      "left" : "KeyDeserializer kd = factory.createKeyDeserializer(ctxt, type);",
      "right" : "KeyDeserializer kd = factory.createKeyDeserializer(ctxt, type);",
      "info" : "VariableDeclarationStatement[6676-6739]:VariableDeclarationStatement[6676-6739]"
    }, {
      "left" : "if (kd == null)",
      "right" : "if (kd == null)",
      "info" : "IfStatement[6748-6888]:IfStatement[6748-6888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6764-6888]:Block[6764-6888]"
    }, {
      "left" : "return _handleUnknownKeyDeserializer(type);",
      "right" : "return _handleUnknownKeyDeserializer(type);",
      "info" : "ReturnStatement[6835-6878]:ReturnStatement[6835-6878]"
    }, {
      "left" : "if (kd instanceof ResolvableDeserializer)",
      "right" : "if (kd instanceof ResolvableDeserializer)",
      "info" : "IfStatement[6932-7042]:IfStatement[6932-7042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6974-7042]:Block[6974-7042]"
    }, {
      "left" : "((ResolvableDeserializer) kd).resolve(ctxt);",
      "right" : "((ResolvableDeserializer) kd).resolve(ctxt);",
      "info" : "ExpressionStatement[6988-7032]:ExpressionStatement[6988-7032]"
    }, {
      "left" : "return kd;",
      "right" : "return kd;",
      "info" : "ReturnStatement[7051-7061]:ReturnStatement[7051-7061]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7295-7301]:Modifier[7295-7301]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7302-7309]:PrimitiveType[7302-7309]"
    }, {
      "left" : "hasValueDeserializerFor",
      "right" : "hasValueDeserializerFor",
      "info" : "SimpleName[7310-7333]:SimpleName[7310-7333]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[7334-7361]:SingleVariableDeclaration[7334-7361]"
    }, {
      "left" : "DeserializerFactory factory",
      "right" : "DeserializerFactory factory",
      "info" : "SingleVariableDeclaration[7375-7402]:SingleVariableDeclaration[7375-7402]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[7404-7417]:SingleVariableDeclaration[7404-7417]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7434-7454]:SimpleType[7434-7454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7459-7803]:Block[7459-7803]"
    }, {
      "left" : "JsonDeserializer<Object> deser = _findCachedDeserializer(type);",
      "right" : "JsonDeserializer<Object> deser = _findCachedDeserializer(type);",
      "info" : "VariableDeclarationStatement[7588-7651]:VariableDeclarationStatement[7588-7651]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[7660-7765]:IfStatement[7660-7765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7679-7765]:Block[7679-7765]"
    }, {
      "left" : "deser = _createAndCacheValueDeserializer(ctxt, factory, type);",
      "right" : "deser = _createAndCacheValueDeserializer(ctxt, factory, type);",
      "info" : "ExpressionStatement[7693-7755]:ExpressionStatement[7693-7755]"
    }, {
      "left" : "return (deser != null);",
      "right" : "return (deser != null);",
      "info" : "ReturnStatement[7774-7797]:ReturnStatement[7774-7797]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8001-8010]:Modifier[8001-8010]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[8011-8035]:ParameterizedType[8011-8035]"
    }, {
      "left" : "_findCachedDeserializer",
      "right" : "_findCachedDeserializer",
      "info" : "SimpleName[8036-8059]:SimpleName[8036-8059]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[8060-8073]:SingleVariableDeclaration[8060-8073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8079-8322]:Block[8079-8322]"
    }, {
      "left" : "if (type == null)",
      "right" : "if (type == null)",
      "info" : "IfStatement[8089-8190]:IfStatement[8089-8190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8107-8190]:Block[8107-8190]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null JavaType passed\");",
      "right" : "throw new IllegalArgumentException(\"Null JavaType passed\");",
      "info" : "ThrowStatement[8121-8180]:ThrowStatement[8121-8180]"
    }, {
      "left" : "if (_hasCustomValueHandler(type))",
      "right" : "if (_hasCustomValueHandler(type))",
      "info" : "IfStatement[8199-8269]:IfStatement[8199-8269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8233-8269]:Block[8233-8269]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8247-8259]:ReturnStatement[8247-8259]"
    }, {
      "left" : "return _cachedDeserializers.get(type);",
      "right" : "return _cachedDeserializers.get(type);",
      "info" : "ReturnStatement[8278-8316]:ReturnStatement[8278-8316]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8577-8586]:Modifier[8577-8586]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[8587-8611]:ParameterizedType[8587-8611]"
    }, {
      "left" : "_createAndCacheValueDeserializer",
      "right" : "_createAndCacheValueDeserializer",
      "info" : "SimpleName[8612-8644]:SimpleName[8612-8644]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[8645-8672]:SingleVariableDeclaration[8645-8672]"
    }, {
      "left" : "DeserializerFactory factory",
      "right" : "DeserializerFactory factory",
      "info" : "SingleVariableDeclaration[8686-8713]:SingleVariableDeclaration[8686-8713]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[8715-8728]:SingleVariableDeclaration[8715-8728]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[8745-8765]:SimpleType[8745-8765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8770-10001]:Block[8770-10001]"
    }, {
      "left" : "synchronized (_incompleteDeserializers) {\n            // Ok, then: could it be that due to a race condition, deserializer can now be found?\n            JsonDeserializer<Object> deser = _findCachedDeserializer(type);\n            if (deser != null) {\n                return deser;\n            }\n            int count = _incompleteDeserializers.size();\n            // Or perhaps being resolved right now?\n            if (count > 0) {\n                deser = _incompleteDeserializers.get(type);\n                if (deser != null) {\n                    return deser;\n                }\n            }\n            // Nope: need to create and possibly cache\n            try {\n                return _createAndCache2(ctxt, factory, type);\n            } finally {\n                // also: any deserializers that have been created are complete by now\n                if (count == 0 && _incompleteDeserializers.size() > 0) {\n                    _incompleteDeserializers.clear();\n                }\n            }\n        }",
      "right" : "synchronized (_incompleteDeserializers) {\n            // Ok, then: could it be that due to a race condition, deserializer can now be found?\n            JsonDeserializer<Object> deser = _findCachedDeserializer(type);\n            if (deser != null) {\n                return deser;\n            }\n            int count = _incompleteDeserializers.size();\n            // Or perhaps being resolved right now?\n            if (count > 0) {\n                deser = _incompleteDeserializers.get(type);\n                if (deser != null) {\n                    return deser;\n                }\n            }\n            // Nope: need to create and possibly cache\n            try {\n                return _createAndCache2(ctxt, factory, type);\n            } finally {\n                // also: any deserializers that have been created are complete by now\n                if (count == 0 && _incompleteDeserializers.size() > 0) {\n                    _incompleteDeserializers.clear();\n                }\n            }\n        }",
      "info" : "SynchronizedStatement[8988-9995]:SynchronizedStatement[8988-9995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9028-9995]:Block[9028-9995]"
    }, {
      "left" : "JsonDeserializer<Object> deser = _findCachedDeserializer(type);",
      "right" : "JsonDeserializer<Object> deser = _findCachedDeserializer(type);",
      "info" : "VariableDeclarationStatement[9140-9203]:VariableDeclarationStatement[9140-9203]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[9216-9280]:IfStatement[9216-9280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9235-9280]:Block[9235-9280]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[9253-9266]:ReturnStatement[9253-9266]"
    }, {
      "left" : "int count = _incompleteDeserializers.size();",
      "right" : "int count = _incompleteDeserializers.size();",
      "info" : "VariableDeclarationStatement[9293-9337]:VariableDeclarationStatement[9293-9337]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[9402-9581]:IfStatement[9402-9581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9417-9581]:Block[9417-9581]"
    }, {
      "left" : "deser = _incompleteDeserializers.get(type);",
      "right" : "deser = _incompleteDeserializers.get(type);",
      "info" : "ExpressionStatement[9435-9478]:ExpressionStatement[9435-9478]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[9495-9567]:IfStatement[9495-9567]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9514-9567]:Block[9514-9567]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[9536-9549]:ReturnStatement[9536-9549]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[9649-9985]:TryStatement[9649-9985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9653-9730]:Block[9653-9730]"
    }, {
      "left" : "return _createAndCache2(ctxt, factory, type);",
      "right" : "return _createAndCache2(ctxt, factory, type);",
      "info" : "ReturnStatement[9671-9716]:ReturnStatement[9671-9716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9739-9985]:Block[9739-9985]"
    }, {
      "left" : "if (count == 0 && _incompleteDeserializers.size() > 0)",
      "right" : "if (count == 0 && _incompleteDeserializers.size() > 0)",
      "info" : "IfStatement[9843-9971]:IfStatement[9843-9971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9898-9971]:Block[9898-9971]"
    }, {
      "left" : "_incompleteDeserializers.clear();",
      "right" : "_incompleteDeserializers.clear();",
      "info" : "ExpressionStatement[9920-9953]:ExpressionStatement[9920-9953]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[10136-10145]:Modifier[10136-10145]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[10146-10170]:ParameterizedType[10146-10170]"
    }, {
      "left" : "_createAndCache2",
      "right" : "_createAndCache2",
      "info" : "SimpleName[10171-10187]:SimpleName[10171-10187]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[10188-10215]:SingleVariableDeclaration[10188-10215]"
    }, {
      "left" : "DeserializerFactory factory",
      "right" : "DeserializerFactory factory",
      "info" : "SingleVariableDeclaration[10229-10256]:SingleVariableDeclaration[10229-10256]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[10258-10271]:SingleVariableDeclaration[10258-10271]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[10288-10308]:SimpleType[10288-10308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10313-12224]:Block[10313-12224]"
    }, {
      "left" : "JsonDeserializer<Object> deser;",
      "right" : "JsonDeserializer<Object> deser;",
      "info" : "VariableDeclarationStatement[10323-10354]:VariableDeclarationStatement[10323-10354]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[10363-10700]:TryStatement[10363-10700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10367-10440]:Block[10367-10440]"
    }, {
      "left" : "deser = _createDeserializer(ctxt, factory, type);",
      "right" : "deser = _createDeserializer(ctxt, factory, type);",
      "info" : "ExpressionStatement[10381-10430]:ExpressionStatement[10381-10430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10478-10700]:Block[10478-10700]"
    }, {
      "left" : "throw new JsonMappingException(iae.getMessage(), null, iae);",
      "right" : "throw new JsonMappingException(iae.getMessage(), null, iae);",
      "info" : "ThrowStatement[10630-10690]:ThrowStatement[10630-10690]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[10709-10764]:IfStatement[10709-10764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10728-10764]:Block[10728-10764]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10742-10754]:ReturnStatement[10742-10754]"
    }, {
      "left" : "boolean isResolvable = (deser instanceof ResolvableDeserializer);",
      "right" : "boolean isResolvable = (deser instanceof ResolvableDeserializer);",
      "info" : "VariableDeclarationStatement[11042-11107]:VariableDeclarationStatement[11042-11107]"
    }, {
      "left" : "boolean addToCache = !_hasCustomValueHandler(type) && deser.isCachable();",
      "right" : "boolean addToCache = !_hasCustomValueHandler(type) && deser.isCachable();",
      "info" : "VariableDeclarationStatement[11214-11287]:VariableDeclarationStatement[11214-11287]"
    }, {
      "left" : "if (isResolvable)",
      "right" : "if (isResolvable)",
      "info" : "IfStatement[11915-12109]:IfStatement[11915-12109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11933-12109]:Block[11933-12109]"
    }, {
      "left" : "_incompleteDeserializers.put(type, deser);",
      "right" : "_incompleteDeserializers.put(type, deser);",
      "info" : "ExpressionStatement[11947-11989]:ExpressionStatement[11947-11989]"
    }, {
      "left" : "((ResolvableDeserializer)deser).resolve(ctxt);",
      "right" : "((ResolvableDeserializer)deser).resolve(ctxt);",
      "info" : "ExpressionStatement[12002-12048]:ExpressionStatement[12002-12048]"
    }, {
      "left" : "_incompleteDeserializers.remove(type);",
      "right" : "_incompleteDeserializers.remove(type);",
      "info" : "ExpressionStatement[12061-12099]:ExpressionStatement[12061-12099]"
    }, {
      "left" : "if (addToCache)",
      "right" : "if (addToCache)",
      "info" : "IfStatement[12118-12196]:IfStatement[12118-12196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12134-12196]:Block[12134-12196]"
    }, {
      "left" : "_cachedDeserializers.put(type, deser);",
      "right" : "_cachedDeserializers.put(type, deser);",
      "info" : "ExpressionStatement[12148-12186]:ExpressionStatement[12148-12186]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[12205-12218]:ReturnStatement[12205-12218]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[12623-12653]:SingleMemberAnnotation[12623-12653]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[12658-12667]:Modifier[12658-12667]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[12668-12692]:ParameterizedType[12668-12692]"
    }, {
      "left" : "_createDeserializer",
      "right" : "_createDeserializer",
      "info" : "SimpleName[12693-12712]:SimpleName[12693-12712]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[12713-12740]:SingleVariableDeclaration[12713-12740]"
    }, {
      "left" : "DeserializerFactory factory",
      "right" : "DeserializerFactory factory",
      "info" : "SingleVariableDeclaration[12754-12781]:SingleVariableDeclaration[12754-12781]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[12783-12796]:SingleVariableDeclaration[12783-12796]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[12813-12833]:SimpleType[12813-12833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12838-14816]:Block[12838-14816]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[12848-12902]:VariableDeclarationStatement[12848-12902]"
    }, {
      "left" : "if (type.isAbstract() || type.isMapLikeType() || type.isCollectionLikeType())",
      "right" : "if (type.isAbstract() || type.isMapLikeType() || type.isCollectionLikeType())",
      "info" : "IfStatement[12984-13131]:IfStatement[12984-13131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13062-13131]:Block[13062-13131]"
    }, {
      "left" : "type = factory.mapAbstractType(config, type);",
      "right" : "type = factory.mapAbstractType(config, type);",
      "info" : "ExpressionStatement[13076-13121]:ExpressionStatement[13076-13121]"
    }, {
      "left" : "BeanDescription beanDesc = config.introspect(type);",
      "right" : "BeanDescription beanDesc = config.introspect(type);",
      "info" : "VariableDeclarationStatement[13140-13191]:VariableDeclarationStatement[13140-13191]"
    }, {
      "left" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt,\n                beanDesc.getClassInfo());",
      "right" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt,\n                beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[13284-13395]:VariableDeclarationStatement[13284-13395]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[13404-13460]:IfStatement[13404-13460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13423-13460]:Block[13423-13460]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[13437-13450]:ReturnStatement[13437-13450]"
    }, {
      "left" : "JavaType newType = modifyTypeByAnnotation(ctxt, beanDesc.getClassInfo(), type);",
      "right" : "JavaType newType = modifyTypeByAnnotation(ctxt, beanDesc.getClassInfo(), type);",
      "info" : "VariableDeclarationStatement[13546-13625]:VariableDeclarationStatement[13546-13625]"
    }, {
      "left" : "if (newType != type)",
      "right" : "if (newType != type)",
      "info" : "IfStatement[13634-13745]:IfStatement[13634-13745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13655-13745]:Block[13655-13745]"
    }, {
      "left" : "type = newType;",
      "right" : "type = newType;",
      "info" : "ExpressionStatement[13669-13684]:ExpressionStatement[13669-13684]"
    }, {
      "left" : "beanDesc = config.introspect(newType);",
      "right" : "beanDesc = config.introspect(newType);",
      "info" : "ExpressionStatement[13697-13735]:ExpressionStatement[13697-13735]"
    }, {
      "left" : "Class<?> builder = beanDesc.findPOJOBuilder();",
      "right" : "Class<?> builder = beanDesc.findPOJOBuilder();",
      "info" : "VariableDeclarationStatement[13813-13859]:VariableDeclarationStatement[13813-13859]"
    }, {
      "left" : "if (builder != null)",
      "right" : "if (builder != null)",
      "info" : "IfStatement[13868-14032]:IfStatement[13868-14032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13889-14032]:Block[13889-14032]"
    }, {
      "left" : "return (JsonDeserializer<Object>) factory.createBuilderBasedDeserializer(\n            \t\tctxt, type, beanDesc, builder);",
      "right" : "return (JsonDeserializer<Object>) factory.createBuilderBasedDeserializer(\n            \t\tctxt, type, beanDesc, builder);",
      "info" : "ReturnStatement[13903-14022]:ReturnStatement[13903-14022]"
    }, {
      "left" : "Converter<Object,Object> conv = beanDesc.findDeserializationConverter();",
      "right" : "Converter<Object,Object> conv = beanDesc.findDeserializationConverter();",
      "info" : "VariableDeclarationStatement[14077-14149]:VariableDeclarationStatement[14077-14149]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[14158-14324]:IfStatement[14158-14324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14176-14324]:Block[14176-14324]"
    }, {
      "left" : "return (JsonDeserializer<Object>) _createDeserializer2(ctxt, factory, type, beanDesc);",
      "right" : "return (JsonDeserializer<Object>) _createDeserializer2(ctxt, factory, type, beanDesc);",
      "info" : "ReturnStatement[14228-14314]:ReturnStatement[14228-14314]"
    }, {
      "left" : "JavaType delegateType = conv.getInputType(ctxt.getTypeFactory());",
      "right" : "JavaType delegateType = conv.getInputType(ctxt.getTypeFactory());",
      "info" : "VariableDeclarationStatement[14386-14451]:VariableDeclarationStatement[14386-14451]"
    }, {
      "left" : "if (!delegateType.hasRawClass(type.getRawClass()))",
      "right" : "if (!delegateType.hasRawClass(type.getRawClass()))",
      "info" : "IfStatement[14541-14659]:IfStatement[14541-14659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14592-14659]:Block[14592-14659]"
    }, {
      "left" : "beanDesc = config.introspect(delegateType);",
      "right" : "beanDesc = config.introspect(delegateType);",
      "info" : "ExpressionStatement[14606-14649]:ExpressionStatement[14606-14649]"
    }, {
      "left" : "return new StdDelegatingDeserializer<Object>(conv, delegateType,\n                _createDeserializer2(ctxt, factory, delegateType, beanDesc));",
      "right" : "return new StdDelegatingDeserializer<Object>(conv, delegateType,\n                _createDeserializer2(ctxt, factory, delegateType, beanDesc));",
      "info" : "ReturnStatement[14668-14810]:ReturnStatement[14668-14810]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14822-14831]:Modifier[14822-14831]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[14832-14851]:ParameterizedType[14832-14851]"
    }, {
      "left" : "_createDeserializer2",
      "right" : "_createDeserializer2",
      "info" : "SimpleName[14852-14872]:SimpleName[14852-14872]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[14873-14900]:SingleVariableDeclaration[14873-14900]"
    }, {
      "left" : "DeserializerFactory factory",
      "right" : "DeserializerFactory factory",
      "info" : "SingleVariableDeclaration[14914-14941]:SingleVariableDeclaration[14914-14941]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[14943-14956]:SingleVariableDeclaration[14943-14956]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[14958-14982]:SingleVariableDeclaration[14958-14982]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[14999-15019]:SimpleType[14999-15019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15024-16918]:Block[15024-16918]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[15034-15088]:VariableDeclarationStatement[15034-15088]"
    }, {
      "left" : "if (type.isEnumType())",
      "right" : "if (type.isEnumType())",
      "info" : "IfStatement[15155-15262]:IfStatement[15155-15262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15178-15262]:Block[15178-15262]"
    }, {
      "left" : "return factory.createEnumDeserializer(ctxt, type, beanDesc);",
      "right" : "return factory.createEnumDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[15192-15252]:ReturnStatement[15192-15252]"
    }, {
      "left" : "if (type.isContainerType())",
      "right" : "if (type.isContainerType())",
      "info" : "IfStatement[15271-16691]:IfStatement[15271-16691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15299-16691]:Block[15299-16691]"
    }, {
      "left" : "if (type.isArrayType())",
      "right" : "if (type.isArrayType())",
      "info" : "IfStatement[15313-15442]:IfStatement[15313-15442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15337-15442]:Block[15337-15442]"
    }, {
      "left" : "return factory.createArrayDeserializer(ctxt, (ArrayType) type, beanDesc);",
      "right" : "return factory.createArrayDeserializer(ctxt, (ArrayType) type, beanDesc);",
      "info" : "ReturnStatement[15355-15428]:ReturnStatement[15355-15428]"
    }, {
      "left" : "if (type.isMapLikeType())",
      "right" : "if (type.isMapLikeType())",
      "info" : "IfStatement[15455-15778]:IfStatement[15455-15778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15481-15778]:Block[15481-15778]"
    }, {
      "left" : "MapLikeType mlt = (MapLikeType) type;",
      "right" : "MapLikeType mlt = (MapLikeType) type;",
      "info" : "VariableDeclarationStatement[15499-15536]:VariableDeclarationStatement[15499-15536]"
    }, {
      "left" : "if (mlt.isTrueMapType())",
      "right" : "if (mlt.isTrueMapType())",
      "info" : "IfStatement[15553-15685]:IfStatement[15553-15685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15578-15685]:Block[15578-15685]"
    }, {
      "left" : "return factory.createMapDeserializer(ctxt,(MapType) mlt, beanDesc);",
      "right" : "return factory.createMapDeserializer(ctxt,(MapType) mlt, beanDesc);",
      "info" : "ReturnStatement[15600-15667]:ReturnStatement[15600-15667]"
    }, {
      "left" : "return factory.createMapLikeDeserializer(ctxt, mlt, beanDesc);",
      "right" : "return factory.createMapLikeDeserializer(ctxt, mlt, beanDesc);",
      "info" : "ReturnStatement[15702-15764]:ReturnStatement[15702-15764]"
    }, {
      "left" : "if (type.isCollectionLikeType())",
      "right" : "if (type.isCollectionLikeType())",
      "info" : "IfStatement[15791-16681]:IfStatement[15791-16681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15824-16681]:Block[15824-16681]"
    }, {
      "left" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "right" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "info" : "VariableDeclarationStatement[16158-16218]:VariableDeclarationStatement[16158-16218]"
    }, {
      "left" : "if (format == null || format.getShape() != JsonFormat.Shape.OBJECT)",
      "right" : "if (format == null || format.getShape() != JsonFormat.Shape.OBJECT)",
      "info" : "IfStatement[16235-16667]:IfStatement[16235-16667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16303-16667]:Block[16303-16667]"
    }, {
      "left" : "CollectionLikeType clt = (CollectionLikeType) type;",
      "right" : "CollectionLikeType clt = (CollectionLikeType) type;",
      "info" : "VariableDeclarationStatement[16325-16376]:VariableDeclarationStatement[16325-16376]"
    }, {
      "left" : "if (clt.isTrueCollectionType())",
      "right" : "if (clt.isTrueCollectionType())",
      "info" : "IfStatement[16397-16559]:IfStatement[16397-16559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16429-16559]:Block[16429-16559]"
    }, {
      "left" : "return factory.createCollectionDeserializer(ctxt, (CollectionType) clt, beanDesc);",
      "right" : "return factory.createCollectionDeserializer(ctxt, (CollectionType) clt, beanDesc);",
      "info" : "ReturnStatement[16455-16537]:ReturnStatement[16455-16537]"
    }, {
      "left" : "return factory.createCollectionLikeDeserializer(ctxt, clt, beanDesc);",
      "right" : "return factory.createCollectionLikeDeserializer(ctxt, clt, beanDesc);",
      "info" : "ReturnStatement[16580-16649]:ReturnStatement[16580-16649]"
    }, {
      "left" : "if (JsonNode.class.isAssignableFrom(type.getRawClass()))",
      "right" : "if (JsonNode.class.isAssignableFrom(type.getRawClass()))",
      "info" : "IfStatement[16700-16843]:IfStatement[16700-16843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16757-16843]:Block[16757-16843]"
    }, {
      "left" : "return factory.createTreeDeserializer(config, type, beanDesc);",
      "right" : "return factory.createTreeDeserializer(config, type, beanDesc);",
      "info" : "ReturnStatement[16771-16833]:ReturnStatement[16771-16833]"
    }, {
      "left" : "return factory.createBeanDeserializer(ctxt, type, beanDesc);",
      "right" : "return factory.createBeanDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[16852-16912]:ReturnStatement[16852-16912]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[17120-17129]:Modifier[17120-17129]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[17130-17154]:ParameterizedType[17130-17154]"
    }, {
      "left" : "findDeserializerFromAnnotation",
      "right" : "findDeserializerFromAnnotation",
      "info" : "SimpleName[17155-17185]:SimpleName[17155-17185]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[17186-17213]:SingleVariableDeclaration[17186-17213]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[17227-17240]:SingleVariableDeclaration[17227-17240]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[17257-17277]:SimpleType[17257-17277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17282-17653]:Block[17282-17653]"
    }, {
      "left" : "Object deserDef = ctxt.getAnnotationIntrospector().findDeserializer(ann);",
      "right" : "Object deserDef = ctxt.getAnnotationIntrospector().findDeserializer(ann);",
      "info" : "VariableDeclarationStatement[17292-17365]:VariableDeclarationStatement[17292-17365]"
    }, {
      "left" : "if (deserDef == null)",
      "right" : "if (deserDef == null)",
      "info" : "IfStatement[17374-17432]:IfStatement[17374-17432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17396-17432]:Block[17396-17432]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17410-17422]:ReturnStatement[17410-17422]"
    }, {
      "left" : "JsonDeserializer<Object> deser = ctxt.deserializerInstance(ann, deserDef);",
      "right" : "JsonDeserializer<Object> deser = ctxt.deserializerInstance(ann, deserDef);",
      "info" : "VariableDeclarationStatement[17441-17515]:VariableDeclarationStatement[17441-17515]"
    }, {
      "left" : "return findConvertingDeserializer(ctxt, ann, deser);",
      "right" : "return findConvertingDeserializer(ctxt, ann, deser);",
      "info" : "ReturnStatement[17595-17647]:ReturnStatement[17595-17647]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[17981-17990]:Modifier[17981-17990]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[17991-18015]:ParameterizedType[17991-18015]"
    }, {
      "left" : "findConvertingDeserializer",
      "right" : "findConvertingDeserializer",
      "info" : "SimpleName[18016-18042]:SimpleName[18016-18042]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[18043-18070]:SingleVariableDeclaration[18043-18070]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[18084-18095]:SingleVariableDeclaration[18084-18095]"
    }, {
      "left" : "JsonDeserializer<Object> deser",
      "right" : "JsonDeserializer<Object> deser",
      "info" : "SingleVariableDeclaration[18097-18127]:SingleVariableDeclaration[18097-18127]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[18144-18164]:SimpleType[18144-18164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18169-18486]:Block[18169-18486]"
    }, {
      "left" : "Converter<Object,Object> conv = findConverter(ctxt, a);",
      "right" : "Converter<Object,Object> conv = findConverter(ctxt, a);",
      "info" : "VariableDeclarationStatement[18179-18234]:VariableDeclarationStatement[18179-18234]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[18243-18298]:IfStatement[18243-18298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18261-18298]:Block[18261-18298]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[18275-18288]:ReturnStatement[18275-18288]"
    }, {
      "left" : "JavaType delegateType = conv.getInputType(ctxt.getTypeFactory());",
      "right" : "JavaType delegateType = conv.getInputType(ctxt.getTypeFactory());",
      "info" : "VariableDeclarationStatement[18307-18372]:VariableDeclarationStatement[18307-18372]"
    }, {
      "left" : "return (JsonDeserializer<Object>) new StdDelegatingDeserializer<Object>(conv, delegateType, deser);",
      "right" : "return (JsonDeserializer<Object>) new StdDelegatingDeserializer<Object>(conv, delegateType, deser);",
      "info" : "ReturnStatement[18381-18480]:ReturnStatement[18381-18480]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18492-18501]:Modifier[18492-18501]"
    }, {
      "left" : "Converter<Object,Object>",
      "right" : "Converter<Object,Object>",
      "info" : "ParameterizedType[18502-18526]:ParameterizedType[18502-18526]"
    }, {
      "left" : "findConverter",
      "right" : "findConverter",
      "info" : "SimpleName[18527-18540]:SimpleName[18527-18540]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[18541-18568]:SingleVariableDeclaration[18541-18568]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[18582-18593]:SingleVariableDeclaration[18582-18593]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[18610-18630]:SimpleType[18610-18630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18635-18850]:Block[18635-18850]"
    }, {
      "left" : "Object convDef = ctxt.getAnnotationIntrospector().findDeserializationConverter(a);",
      "right" : "Object convDef = ctxt.getAnnotationIntrospector().findDeserializationConverter(a);",
      "info" : "VariableDeclarationStatement[18645-18727]:VariableDeclarationStatement[18645-18727]"
    }, {
      "left" : "if (convDef == null)",
      "right" : "if (convDef == null)",
      "info" : "IfStatement[18736-18793]:IfStatement[18736-18793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18757-18793]:Block[18757-18793]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[18771-18783]:ReturnStatement[18771-18783]"
    }, {
      "left" : "return ctxt.converterInstance(a, convDef);",
      "right" : "return ctxt.converterInstance(a, convDef);",
      "info" : "ReturnStatement[18802-18844]:ReturnStatement[18802-18844]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19647-19654]:Modifier[19647-19654]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[19655-19663]:SimpleType[19655-19663]"
    }, {
      "left" : "modifyTypeByAnnotation",
      "right" : "modifyTypeByAnnotation",
      "info" : "SimpleName[19664-19686]:SimpleName[19664-19686]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[19687-19714]:SingleVariableDeclaration[19687-19714]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[19728-19739]:SingleVariableDeclaration[19728-19739]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[19741-19754]:SingleVariableDeclaration[19741-19754]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[19771-19791]:SimpleType[19771-19791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19796-23560]:Block[19796-23599]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[19867-19930]:VariableDeclarationStatement[19867-19930]"
    }, {
      "left" : "Class<?> subclass = intr.findDeserializationType(a, type);",
      "right" : "Class<?> subclass = intr.findDeserializationType(a, type);",
      "info" : "VariableDeclarationStatement[19939-19997]:VariableDeclarationStatement[19939-19997]"
    }, {
      "left" : "if (subclass != null)",
      "right" : "if (subclass != null)",
      "info" : "IfStatement[20006-20371]:IfStatement[20006-20410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20028-20371]:Block[20028-20410]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[20042-20361]:TryStatement[20042-20400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20046-20109]:Block[20046-20148]"
    }, {
      "left" : "type = type.narrowBy(subclass);",
      "right" : "type = ctxt.getTypeFactory().constructSpecializedType(type, subclass);",
      "info" : "ExpressionStatement[20064-20095]:ExpressionStatement[20064-20134]"
    }, {
      "left" : "type",
      "right" : "ctxt",
      "info" : "METHOD_INVOCATION_RECEIVER[20071-20075]:METHOD_INVOCATION_RECEIVER[20071-20075]"
    }, {
      "left" : "narrowBy",
      "right" : "getTypeFactory",
      "info" : "SimpleName[20076-20084]:SimpleName[20076-20090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20147-20361]:Block[20186-20400]"
    }, {
      "left" : "throw new JsonMappingException(\"Failed to narrow type \"+type+\" with concrete-type annotation (value \"+subclass.getName()+\"), method '\"+a.getName()+\"': \"+iae.getMessage(), null, iae);",
      "right" : "throw new JsonMappingException(\"Failed to narrow type \"+type+\" with concrete-type annotation (value \"+subclass.getName()+\"), method '\"+a.getName()+\"': \"+iae.getMessage(), null, iae);",
      "info" : "ThrowStatement[20165-20347]:ThrowStatement[20204-20386]"
    }, {
      "left" : "if (type.isContainerType())",
      "right" : "if (type.isContainerType())",
      "info" : "IfStatement[20407-23533]:IfStatement[20446-23572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20435-23533]:Block[20474-23572]"
    }, {
      "left" : "Class<?> keyClass = intr.findDeserializationKeyType(a, type.getKeyType());",
      "right" : "Class<?> keyClass = intr.findDeserializationKeyType(a, type.getKeyType());",
      "info" : "VariableDeclarationStatement[20449-20523]:VariableDeclarationStatement[20488-20562]"
    }, {
      "left" : "if (keyClass != null)",
      "right" : "if (keyClass != null)",
      "info" : "IfStatement[20536-21150]:IfStatement[20575-21189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20558-21150]:Block[20597-21189]"
    }, {
      "left" : "if (!(type instanceof MapLikeType))",
      "right" : "if (!(type instanceof MapLikeType))",
      "info" : "IfStatement[20622-20800]:IfStatement[20661-20839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20658-20800]:Block[20697-20839]"
    }, {
      "left" : "throw new JsonMappingException(\"Illegal key-type annotation: type \"+type+\" is not a Map(-like) type\");",
      "right" : "throw new JsonMappingException(\"Illegal key-type annotation: type \"+type+\" is not a Map(-like) type\");",
      "info" : "ThrowStatement[20680-20782]:ThrowStatement[20719-20821]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[20817-21136]:TryStatement[20856-21175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20821-20909]:Block[20860-20948]"
    }, {
      "left" : "type = ((MapLikeType) type).narrowKey(keyClass);",
      "right" : "type = ((MapLikeType) type).narrowKey(keyClass);",
      "info" : "ExpressionStatement[20843-20891]:ExpressionStatement[20882-20930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20947-21136]:Block[20986-21175]"
    }, {
      "left" : "throw new JsonMappingException(\"Failed to narrow key type \"+type+\" with key-type annotation (\"+keyClass.getName()+\"): \"+iae.getMessage(), null, iae);",
      "right" : "throw new JsonMappingException(\"Failed to narrow key type \"+type+\" with key-type annotation (\"+keyClass.getName()+\"): \"+iae.getMessage(), null, iae);",
      "info" : "ThrowStatement[20969-21118]:ThrowStatement[21008-21157]"
    }, {
      "left" : "JavaType keyType = type.getKeyType();",
      "right" : "JavaType keyType = type.getKeyType();",
      "info" : "VariableDeclarationStatement[21163-21200]:VariableDeclarationStatement[21202-21239]"
    }, {
      "left" : "if (keyType != null && keyType.getValueHandler() == null)",
      "right" : "if (keyType != null && keyType.getValueHandler() == null)",
      "info" : "IfStatement[21483-21974]:IfStatement[21522-22013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21541-21974]:Block[21580-22013]"
    }, {
      "left" : "Object kdDef = intr.findKeyDeserializer(a);",
      "right" : "Object kdDef = intr.findKeyDeserializer(a);",
      "info" : "VariableDeclarationStatement[21559-21602]:VariableDeclarationStatement[21598-21641]"
    }, {
      "left" : "if (kdDef != null)",
      "right" : "if (kdDef != null)",
      "info" : "IfStatement[21619-21960]:IfStatement[21658-21999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21638-21960]:Block[21677-21999]"
    }, {
      "left" : "KeyDeserializer kd = ctxt.keyDeserializerInstance(a, kdDef);",
      "right" : "KeyDeserializer kd = ctxt.keyDeserializerInstance(a, kdDef);",
      "info" : "VariableDeclarationStatement[21660-21720]:VariableDeclarationStatement[21699-21759]"
    }, {
      "left" : "if (kd != null)",
      "right" : "if (kd != null)",
      "info" : "IfStatement[21741-21942]:IfStatement[21780-21981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21757-21942]:Block[21796-21981]"
    }, {
      "left" : "type = ((MapLikeType) type).withKeyValueHandler(kd);",
      "right" : "type = ((MapLikeType) type).withKeyValueHandler(kd);",
      "info" : "ExpressionStatement[21783-21835]:ExpressionStatement[21822-21874]"
    }, {
      "left" : "keyType = type.getKeyType();",
      "right" : "keyType = type.getKeyType();",
      "info" : "ExpressionStatement[21860-21888]:ExpressionStatement[21899-21927]"
    }, {
      "left" : "Class<?> cc = intr.findDeserializationContentType(a, type.getContentType());",
      "right" : "Class<?> cc = intr.findDeserializationContentType(a, type.getContentType());",
      "info" : "VariableDeclarationStatement[22090-22166]:VariableDeclarationStatement[22129-22205]"
    }, {
      "left" : "if (cc != null)",
      "right" : "if (cc != null)",
      "info" : "IfStatement[22179-22533]:IfStatement[22218-22572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22195-22533]:Block[22234-22572]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[22213-22519]:TryStatement[22252-22558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22217-22290]:Block[22256-22329]"
    }, {
      "left" : "type = type.narrowContentsBy(cc);",
      "right" : "type = type.narrowContentsBy(cc);",
      "info" : "ExpressionStatement[22239-22272]:ExpressionStatement[22278-22311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22328-22519]:Block[22367-22558]"
    }, {
      "left" : "throw new JsonMappingException(\"Failed to narrow content type \"+type+\" with content-type annotation (\"+cc.getName()+\"): \"+iae.getMessage(), null, iae);",
      "right" : "throw new JsonMappingException(\"Failed to narrow content type \"+type+\" with content-type annotation (\"+cc.getName()+\"): \"+iae.getMessage(), null, iae);",
      "info" : "ThrowStatement[22350-22501]:ThrowStatement[22389-22540]"
    }, {
      "left" : "JavaType contentType = type.getContentType();",
      "right" : "JavaType contentType = type.getContentType();",
      "info" : "VariableDeclarationStatement[22603-22648]:VariableDeclarationStatement[22642-22687]"
    }, {
      "left" : "if (contentType.getValueHandler() == null)",
      "right" : "if (contentType.getValueHandler() == null)",
      "info" : "IfStatement[22661-23523]:IfStatement[22700-23562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22704-23523]:Block[22743-23562]"
    }, {
      "left" : "Object cdDef = intr.findContentDeserializer(a);",
      "right" : "Object cdDef = intr.findContentDeserializer(a);",
      "info" : "VariableDeclarationStatement[22788-22835]:VariableDeclarationStatement[22827-22874]"
    }, {
      "left" : "if (cdDef != null)",
      "right" : "if (cdDef != null)",
      "info" : "IfStatement[22852-23509]:IfStatement[22891-23548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22871-23509]:Block[22910-23548]"
    }, {
      "left" : "JsonDeserializer<?> cd = null;",
      "right" : "JsonDeserializer<?> cd = null;",
      "info" : "VariableDeclarationStatement[22893-22923]:VariableDeclarationStatement[22932-22962]"
    }, {
      "left" : "if (cdDef instanceof JsonDeserializer<?>)",
      "right" : "if (cdDef instanceof JsonDeserializer<?>)",
      "info" : "IfStatement[22944-23366]:IfStatement[22983-23405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22986-23070]:Block[23025-23109]"
    }, {
      "left" : "cdDef = (JsonDeserializer<?>) cdDef;",
      "right" : "cdDef = (JsonDeserializer<?>) cdDef;",
      "info" : "ExpressionStatement[23012-23048]:ExpressionStatement[23051-23087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23076-23366]:Block[23115-23405]"
    }, {
      "left" : "Class<?> cdClass = _verifyAsClass(cdDef, \"findContentDeserializer\", JsonDeserializer.None.class);",
      "right" : "Class<?> cdClass = _verifyAsClass(cdDef, \"findContentDeserializer\", JsonDeserializer.None.class);",
      "info" : "VariableDeclarationStatement[23102-23199]:VariableDeclarationStatement[23141-23238]"
    }, {
      "left" : "if (cdClass != null)",
      "right" : "if (cdClass != null)",
      "info" : "IfStatement[23224-23344]:IfStatement[23263-23383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23245-23344]:Block[23284-23383]"
    }, {
      "left" : "cd = ctxt.deserializerInstance(a, cdClass);",
      "right" : "cd = ctxt.deserializerInstance(a, cdClass);",
      "info" : "ExpressionStatement[23275-23318]:ExpressionStatement[23314-23357]"
    }, {
      "left" : "if (cd != null)",
      "right" : "if (cd != null)",
      "info" : "IfStatement[23387-23491]:IfStatement[23426-23530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23403-23491]:Block[23442-23530]"
    }, {
      "left" : "type = type.withContentValueHandler(cd);",
      "right" : "type = type.withContentValueHandler(cd);",
      "info" : "ExpressionStatement[23429-23469]:ExpressionStatement[23468-23508]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[23542-23554]:ReturnStatement[23581-23593]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23910-23917]:Modifier[23949-23956]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[23918-23925]:PrimitiveType[23957-23964]"
    }, {
      "left" : "_hasCustomValueHandler",
      "right" : "_hasCustomValueHandler",
      "info" : "SimpleName[23926-23948]:SimpleName[23965-23987]"
    }, {
      "left" : "JavaType t",
      "right" : "JavaType t",
      "info" : "SingleVariableDeclaration[23949-23959]:SingleVariableDeclaration[23988-23998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23961-24213]:Block[24000-24252]"
    }, {
      "left" : "if (t.isContainerType())",
      "right" : "if (t.isContainerType())",
      "info" : "IfStatement[23971-24185]:IfStatement[24010-24224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23996-24185]:Block[24035-24224]"
    }, {
      "left" : "JavaType ct = t.getContentType();",
      "right" : "JavaType ct = t.getContentType();",
      "info" : "VariableDeclarationStatement[24010-24043]:VariableDeclarationStatement[24049-24082]"
    }, {
      "left" : "if (ct != null)",
      "right" : "if (ct != null)",
      "info" : "IfStatement[24056-24175]:IfStatement[24095-24214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24072-24175]:Block[24111-24214]"
    }, {
      "left" : "return (ct.getValueHandler() != null) || (ct.getTypeHandler() != null);",
      "right" : "return (ct.getValueHandler() != null) || (ct.getTypeHandler() != null);",
      "info" : "ReturnStatement[24090-24161]:ReturnStatement[24129-24200]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[24194-24207]:ReturnStatement[24233-24246]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[24219-24226]:Modifier[24258-24265]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[24227-24235]:ParameterizedType[24266-24274]"
    }, {
      "left" : "_verifyAsClass",
      "right" : "_verifyAsClass",
      "info" : "SimpleName[24236-24250]:SimpleName[24275-24289]"
    }, {
      "left" : "Object src",
      "right" : "Object src",
      "info" : "SingleVariableDeclaration[24251-24261]:SingleVariableDeclaration[24290-24300]"
    }, {
      "left" : "String methodName",
      "right" : "String methodName",
      "info" : "SingleVariableDeclaration[24263-24280]:SingleVariableDeclaration[24302-24319]"
    }, {
      "left" : "Class<?> noneClass",
      "right" : "Class<?> noneClass",
      "info" : "SingleVariableDeclaration[24282-24300]:SingleVariableDeclaration[24321-24339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24306-24784]:Block[24345-24823]"
    }, {
      "left" : "if (src == null)",
      "right" : "if (src == null)",
      "info" : "IfStatement[24316-24369]:IfStatement[24355-24408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24333-24369]:Block[24372-24408]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24347-24359]:ReturnStatement[24386-24398]"
    }, {
      "left" : "if (!(src instanceof Class))",
      "right" : "if (!(src instanceof Class))",
      "info" : "IfStatement[24378-24621]:IfStatement[24417-24660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24407-24621]:Block[24446-24660]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector.\"+methodName+\"() returned value of type \"+src.getClass().getName()+\": expected type JsonSerializer or Class<JsonSerializer> instead\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector.\"+methodName+\"() returned value of type \"+src.getClass().getName()+\": expected type JsonSerializer or Class<JsonSerializer> instead\");",
      "info" : "ThrowStatement[24421-24611]:ThrowStatement[24460-24650]"
    }, {
      "left" : "Class<?> cls = (Class<?>) src;",
      "right" : "Class<?> cls = (Class<?>) src;",
      "info" : "VariableDeclarationStatement[24630-24660]:VariableDeclarationStatement[24669-24699]"
    }, {
      "left" : "if (cls == noneClass || ClassUtil.isBogusClass(cls))",
      "right" : "if (cls == noneClass || ClassUtil.isBogusClass(cls))",
      "info" : "IfStatement[24669-24758]:IfStatement[24708-24797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24722-24758]:Block[24761-24797]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24736-24748]:ReturnStatement[24775-24787]"
    }, {
      "left" : "return cls;",
      "right" : "return cls;",
      "info" : "ReturnStatement[24767-24778]:ReturnStatement[24806-24817]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[24977-24986]:Modifier[25016-25025]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[24987-25011]:ParameterizedType[25026-25050]"
    }, {
      "left" : "_handleUnknownValueDeserializer",
      "right" : "_handleUnknownValueDeserializer",
      "info" : "SimpleName[25012-25043]:SimpleName[25051-25082]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[25044-25057]:SingleVariableDeclaration[25083-25096]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[25074-25094]:SimpleType[25113-25133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25099-25508]:Block[25138-25547]"
    }, {
      "left" : "Class<?> rawClass = type.getRawClass();",
      "right" : "Class<?> rawClass = type.getRawClass();",
      "info" : "VariableDeclarationStatement[25209-25248]:VariableDeclarationStatement[25248-25287]"
    }, {
      "left" : "if (!ClassUtil.isConcrete(rawClass))",
      "right" : "if (!ClassUtil.isConcrete(rawClass))",
      "info" : "IfStatement[25257-25410]:IfStatement[25296-25449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25294-25410]:Block[25333-25449]"
    }, {
      "left" : "throw new JsonMappingException(\"Can not find a Value deserializer for abstract type \"+type);",
      "right" : "throw new JsonMappingException(\"Can not find a Value deserializer for abstract type \"+type);",
      "info" : "ThrowStatement[25308-25400]:ThrowStatement[25347-25439]"
    }, {
      "left" : "throw new JsonMappingException(\"Can not find a Value deserializer for type \"+type);",
      "right" : "throw new JsonMappingException(\"Can not find a Value deserializer for type \"+type);",
      "info" : "ThrowStatement[25419-25502]:ThrowStatement[25458-25541]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[25514-25523]:Modifier[25553-25562]"
    }, {
      "left" : "KeyDeserializer",
      "right" : "KeyDeserializer",
      "info" : "SimpleType[25524-25539]:SimpleType[25563-25578]"
    }, {
      "left" : "_handleUnknownKeyDeserializer",
      "right" : "_handleUnknownKeyDeserializer",
      "info" : "SimpleName[25540-25569]:SimpleName[25579-25608]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[25570-25583]:SingleVariableDeclaration[25609-25622]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[25600-25620]:SimpleType[25639-25659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25625-25728]:Block[25664-25767]"
    }, {
      "left" : "throw new JsonMappingException(\"Can not find a (Map) Key deserializer for type \"+type);",
      "right" : "throw new JsonMappingException(\"Can not find a (Map) Key deserializer for type \"+type);",
      "info" : "ThrowStatement[25635-25722]:ThrowStatement[25674-25761]"
    } ]
  },
  "interFileMappings" : { }
}