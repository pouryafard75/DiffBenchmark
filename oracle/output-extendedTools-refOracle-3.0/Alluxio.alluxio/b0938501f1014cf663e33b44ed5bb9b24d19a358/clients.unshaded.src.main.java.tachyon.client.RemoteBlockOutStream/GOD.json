{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "RemoteBlockOutStream",
      "right" : "RemoteBlockOutStream",
      "info" : "TypeDeclaration[1105-7346]:TypeDeclaration[1105-7709]"
    }, {
      "left" : "private static final Logger LOG = LoggerFactory.getLogger(Constants.LOGGER_TYPE);",
      "right" : "private static final Logger LOG = LoggerFactory.getLogger(Constants.LOGGER_TYPE);",
      "info" : "FieldDeclaration[1384-1465]:FieldDeclaration[1384-1465]"
    }, {
      "left" : "private final int mBlockIndex;",
      "right" : "private final int mBlockIndex;",
      "info" : "FieldDeclaration[1469-1499]:FieldDeclaration[1469-1499]"
    }, {
      "left" : "private final long mBlockId;",
      "right" : "private final long mBlockId;",
      "info" : "FieldDeclaration[1502-1530]:FieldDeclaration[1502-1530]"
    }, {
      "left" : "private final long mBlockCapacityBytes;",
      "right" : "private final long mBlockCapacityBytes;",
      "info" : "FieldDeclaration[1533-1572]:FieldDeclaration[1533-1572]"
    }, {
      "left" : "private final Closer mCloser;",
      "right" : "private final Closer mCloser;",
      "info" : "FieldDeclaration[1575-1604]:FieldDeclaration[1575-1604]"
    }, {
      "left" : "private final RemoteBlockWriter mRemoteWriter;",
      "right" : "private final RemoteBlockWriter mRemoteWriter;",
      "info" : "FieldDeclaration[1607-1653]:FieldDeclaration[1607-1653]"
    }, {
      "left" : "private final ByteBuffer mBuffer;",
      "right" : "private final ByteBuffer mBuffer;",
      "info" : "FieldDeclaration[1714-1747]:FieldDeclaration[1657-1751]"
    }, {
      "left" : "private final long mBufferBytes;",
      "right" : "private final long mBufferBytes;",
      "info" : "FieldDeclaration[1794-1826]:FieldDeclaration[1754-1834]"
    }, {
      "left" : "private long mWrittenBytes = 0;",
      "right" : "private long mWrittenBytes = 0;",
      "info" : "FieldDeclaration[1924-1955]:FieldDeclaration[1837-1967]"
    }, {
      "left" : "private boolean mOpen = false;",
      "right" : "private boolean mClosed = true;",
      "info" : "FieldDeclaration[1987-2017]:FieldDeclaration[2065-2131]"
    }, {
      "left" : "RemoteBlockOutStream(TachyonFile file, WriteType opType, int blockIndex, TachyonConf tachyonConf)\n      throws IOException",
      "right" : "RemoteBlockOutStream(TachyonFile file, WriteType opType, int blockIndex, TachyonConf tachyonConf)\n      throws IOException",
      "info" : "MethodDeclaration[2021-2545]:MethodDeclaration[2135-2659]"
    }, {
      "left" : "RemoteBlockOutStream(TachyonFile file, WriteType opType, int blockIndex, long initialBytes,\n      TachyonConf tachyonConf) throws IOException",
      "right" : "RemoteBlockOutStream(TachyonFile file, WriteType opType, int blockIndex, long initialBytes,\n      TachyonConf tachyonConf) throws IOException",
      "info" : "MethodDeclaration[2549-3849]:MethodDeclaration[2663-4081]"
    }, {
      "left" : "private synchronized void writeToRemoteBlock(byte[] bytes, int offset, int length)\n      throws IOException",
      "right" : "private synchronized void writeToRemoteBlock(byte[] bytes, int offset, int length)\n      throws IOException",
      "info" : "MethodDeclaration[3853-4339]:MethodDeclaration[4085-4600]"
    }, {
      "left" : "private void flushBuffer() throws IOException",
      "right" : "private void flushBuffer() throws IOException",
      "info" : "MethodDeclaration[4392-4528]:MethodDeclaration[4653-4789]"
    }, {
      "left" : "public void cancel() throws IOException",
      "right" : "public void cancel() throws IOException",
      "info" : "MethodDeclaration[4532-4819]:MethodDeclaration[4793-5084]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[4823-5138]:MethodDeclaration[5088-5407]"
    }, {
      "left" : "public void flush() throws IOException",
      "right" : "public void flush() throws IOException",
      "info" : "MethodDeclaration[5142-5259]:MethodDeclaration[5411-5528]"
    }, {
      "left" : "public long getBlockId()",
      "right" : "public long getBlockId()",
      "info" : "MethodDeclaration[5263-5365]:MethodDeclaration[5532-5634]"
    }, {
      "left" : "public long getRemainingSpaceBytes()",
      "right" : "public long getRemainingSpaceBytes()",
      "info" : "MethodDeclaration[5369-5539]:MethodDeclaration[5638-5808]"
    }, {
      "left" : "public void write(byte[] b) throws IOException",
      "right" : "public void write(byte[] b) throws IOException",
      "info" : "MethodDeclaration[5543-5634]:MethodDeclaration[5812-5903]"
    }, {
      "left" : "public void write(byte[] b, int off, int len) throws IOException",
      "right" : "public void write(byte[] b, int off, int len) throws IOException",
      "info" : "MethodDeclaration[5638-6955]:MethodDeclaration[5907-7271]"
    }, {
      "left" : "public void write(int b) throws IOException",
      "right" : "public void write(int b) throws IOException",
      "info" : "MethodDeclaration[6959-7344]:MethodDeclaration[7275-7707]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1323-1329]:Modifier[1323-1329]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1330-1335]:TYPE_DECLARATION_KIND[1330-1335]"
    }, {
      "left" : "RemoteBlockOutStream",
      "right" : "RemoteBlockOutStream",
      "info" : "SimpleName[1336-1356]:SimpleName[1336-1356]"
    }, {
      "left" : "BlockOutStream",
      "right" : "BlockOutStream",
      "info" : "SimpleType[1365-1379]:SimpleType[1365-1379]"
    }, {
      "left" : "mOpen",
      "right" : "mClosed",
      "info" : "SimpleName[2003-2008]:SimpleName[2116-2123]"
    }, {
      "left" : "false",
      "right" : "true",
      "info" : "BooleanLiteral[2011-2016]:BooleanLiteral[2126-2130]"
    }, {
      "left" : "RemoteBlockOutStream",
      "right" : "RemoteBlockOutStream",
      "info" : "SimpleName[2287-2307]:SimpleName[2401-2421]"
    }, {
      "left" : "TachyonFile file",
      "right" : "TachyonFile file",
      "info" : "SingleVariableDeclaration[2308-2324]:SingleVariableDeclaration[2422-2438]"
    }, {
      "left" : "WriteType opType",
      "right" : "WriteType opType",
      "info" : "SingleVariableDeclaration[2326-2342]:SingleVariableDeclaration[2440-2456]"
    }, {
      "left" : "int blockIndex",
      "right" : "int blockIndex",
      "info" : "SingleVariableDeclaration[2344-2358]:SingleVariableDeclaration[2458-2472]"
    }, {
      "left" : "TachyonConf tachyonConf",
      "right" : "TachyonConf tachyonConf",
      "info" : "SingleVariableDeclaration[2360-2383]:SingleVariableDeclaration[2474-2497]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[2398-2409]:SimpleType[2512-2523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2410-2545]:Block[2524-2659]"
    }, {
      "left" : "this(file, opType, blockIndex, tachyonConf.getBytes(Constants.USER_QUOTA_UNIT_BYTES,\n        8 * Constants.MB), tachyonConf);",
      "right" : "this(file, opType, blockIndex, tachyonConf.getBytes(Constants.USER_QUOTA_UNIT_BYTES,\n        8 * Constants.MB), tachyonConf);",
      "info" : "ConstructorInvocation[2416-2541]:ConstructorInvocation[2530-2655]"
    }, {
      "left" : "RemoteBlockOutStream",
      "right" : "RemoteBlockOutStream",
      "info" : "SimpleName[2899-2919]:SimpleName[3168-3188]"
    }, {
      "left" : "TachyonFile file",
      "right" : "TachyonFile file",
      "info" : "SingleVariableDeclaration[2920-2936]:SingleVariableDeclaration[3189-3205]"
    }, {
      "left" : "WriteType opType",
      "right" : "WriteType opType",
      "info" : "SingleVariableDeclaration[2938-2954]:SingleVariableDeclaration[3207-3223]"
    }, {
      "left" : "int blockIndex",
      "right" : "int blockIndex",
      "info" : "SingleVariableDeclaration[2956-2970]:SingleVariableDeclaration[3225-3239]"
    }, {
      "left" : "long initialBytes",
      "right" : "long initialBytes",
      "info" : "SingleVariableDeclaration[2972-2989]:SingleVariableDeclaration[3241-3258]"
    }, {
      "left" : "TachyonConf tachyonConf",
      "right" : "TachyonConf tachyonConf",
      "info" : "SingleVariableDeclaration[2997-3020]:SingleVariableDeclaration[3266-3289]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[3029-3040]:SimpleType[3298-3309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3041-3849]:Block[3310-4081]"
    }, {
      "left" : "super(file, opType, tachyonConf);",
      "right" : "super(file, opType, tachyonConf);",
      "info" : "SuperConstructorInvocation[3047-3080]:SuperConstructorInvocation[3316-3349]"
    }, {
      "left" : "if (!opType.isCache())",
      "right" : "if (!opType.isCache())",
      "info" : "IfStatement[3086-3198]:IfStatement[3355-3467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3109-3198]:Block[3378-3467]"
    }, {
      "left" : "throw new IOException(\"RemoteBlockOutStream only support WriteType.CACHE\");",
      "right" : "throw new IOException(\"RemoteBlockOutStream only support WriteType.CACHE\");",
      "info" : "ThrowStatement[3117-3192]:ThrowStatement[3386-3461]"
    }, {
      "left" : "mBlockIndex = blockIndex;",
      "right" : "mBlockIndex = blockIndex;",
      "info" : "ExpressionStatement[3204-3229]:ExpressionStatement[3473-3498]"
    }, {
      "left" : "mBlockCapacityBytes = mFile.getBlockSizeByte();",
      "right" : "mBlockCapacityBytes = mFile.getBlockSizeByte();",
      "info" : "ExpressionStatement[3234-3281]:ExpressionStatement[3503-3550]"
    }, {
      "left" : "mBlockId = mFile.getBlockId(mBlockIndex);",
      "right" : "mBlockId = mFile.getBlockId(mBlockIndex);",
      "info" : "ExpressionStatement[3286-3327]:ExpressionStatement[3555-3596]"
    }, {
      "left" : "mCloser = Closer.create();",
      "right" : "mCloser = Closer.create();",
      "info" : "ExpressionStatement[3332-3358]:ExpressionStatement[3601-3627]"
    }, {
      "left" : "mBufferBytes = mTachyonConf.getBytes(Constants.USER_FILE_BUFFER_BYTES, Constants.MB);",
      "right" : "mBufferBytes = mTachyonConf.getBytes(Constants.USER_FILE_BUFFER_BYTES, Constants.MB);",
      "info" : "ExpressionStatement[3394-3479]:ExpressionStatement[3663-3748]"
    }, {
      "left" : "mBufferBytes",
      "right" : "mBufferBytes",
      "info" : "SimpleName[3505-3517]:SimpleName[3800-3812]"
    }, {
      "left" : "mBuffer = ByteBuffer.allocate(Ints.checkedCast(allocateBytes));",
      "right" : "mBuffer = ByteBuffer.allocate(Ints.checkedCast(mBufferBytes));",
      "info" : "ExpressionStatement[3523-3586]:ExpressionStatement[3753-3815]"
    }, {
      "left" : "mRemoteWriter =\n        mCloser.register(RemoteBlockWriter.Factory.createRemoteBlockWriter(tachyonConf));",
      "right" : "mRemoteWriter =\n        mCloser.register(RemoteBlockWriter.Factory.createRemoteBlockWriter(tachyonConf));",
      "info" : "ExpressionStatement[3623-3728]:ExpressionStatement[3852-3957]"
    }, {
      "left" : "mRemoteWriter.open(mTachyonFS.getWorkerDataServerAddress(), mBlockId, mTachyonFS.getUserId());",
      "right" : "mRemoteWriter.open(mTachyonFS.getWorkerDataServerAddress(), mBlockId, mTachyonFS.getUserId());",
      "info" : "ExpressionStatement[3733-3827]:ExpressionStatement[3962-4056]"
    }, {
      "left" : "mOpen",
      "right" : "mClosed",
      "info" : "SimpleName[3832-3837]:SimpleName[4061-4068]"
    }, {
      "left" : "mOpen = true;",
      "right" : "mClosed = false;",
      "info" : "ExpressionStatement[3832-3845]:ExpressionStatement[4061-4077]"
    }, {
      "left" : "true",
      "right" : "false",
      "info" : "BooleanLiteral[3840-3844]:BooleanLiteral[4071-4076]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4178-4185]:Modifier[4410-4417]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[4186-4198]:Modifier[4418-4430]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4199-4203]:PrimitiveType[4431-4435]"
    }, {
      "left" : "writeToRemoteBlock",
      "right" : "writeToRemoteBlock",
      "info" : "SimpleName[4204-4222]:SimpleName[4436-4454]"
    }, {
      "left" : "byte[] bytes",
      "right" : "byte[] bytes",
      "info" : "SingleVariableDeclaration[4223-4235]:SingleVariableDeclaration[4455-4467]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[4237-4247]:SingleVariableDeclaration[4469-4479]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[4249-4259]:SingleVariableDeclaration[4481-4491]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[4274-4285]:SimpleType[4506-4517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4286-4339]:Block[4518-4600]"
    }, {
      "left" : "mRemoteWriter.write(bytes, offset, length);",
      "right" : "mRemoteWriter.write(bytes, offset, length);",
      "info" : "ExpressionStatement[4292-4335]:ExpressionStatement[4524-4567]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4392-4399]:Modifier[4653-4660]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4400-4404]:PrimitiveType[4661-4665]"
    }, {
      "left" : "flushBuffer",
      "right" : "flushBuffer",
      "info" : "SimpleName[4405-4416]:SimpleName[4666-4677]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[4426-4437]:SimpleType[4687-4698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4438-4528]:Block[4699-4789]"
    }, {
      "left" : "writeToRemoteBlock(mBuffer.array(), 0, mBuffer.position());",
      "right" : "writeToRemoteBlock(mBuffer.array(), 0, mBuffer.position());",
      "info" : "ExpressionStatement[4444-4503]:ExpressionStatement[4705-4764]"
    }, {
      "left" : "mBuffer.clear();",
      "right" : "mBuffer.clear();",
      "info" : "ExpressionStatement[4508-4524]:ExpressionStatement[4769-4785]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4532-4541]:MarkerAnnotation[4793-4802]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4544-4550]:Modifier[4805-4811]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4551-4555]:PrimitiveType[4812-4816]"
    }, {
      "left" : "cancel",
      "right" : "cancel",
      "info" : "SimpleName[4556-4562]:SimpleName[4817-4823]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[4572-4583]:SimpleType[4833-4844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4584-4819]:Block[4845-5084]"
    }, {
      "left" : "if (mOpen)",
      "right" : "if (!mClosed)",
      "info" : "IfStatement[4590-4815]:IfStatement[4851-5080]"
    }, {
      "left" : "mOpen",
      "right" : "mClosed",
      "info" : "SimpleName[4594-4599]:SimpleName[4856-4863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4601-4815]:Block[4865-5080]"
    }, {
      "left" : "mCloser.close();",
      "right" : "mCloser.close();",
      "info" : "ExpressionStatement[4609-4625]:ExpressionStatement[4873-4889]"
    }, {
      "left" : "mOpen",
      "right" : "mClosed",
      "info" : "SimpleName[4632-4637]:SimpleName[4896-4903]"
    }, {
      "left" : "mOpen = false;",
      "right" : "mClosed = true;",
      "info" : "ExpressionStatement[4632-4646]:ExpressionStatement[4896-4911]"
    }, {
      "left" : "false",
      "right" : "true",
      "info" : "BooleanLiteral[4640-4645]:BooleanLiteral[4906-4910]"
    }, {
      "left" : "if (mWrittenBytes > 0)",
      "right" : "if (mFlushedBytes > 0)",
      "info" : "IfStatement[4653-4727]:IfStatement[4918-4992]"
    }, {
      "left" : "mWrittenBytes",
      "right" : "mFlushedBytes",
      "info" : "SimpleName[4657-4670]:SimpleName[4922-4935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4676-4727]:Block[4941-4992]"
    }, {
      "left" : "mTachyonFS.cancelBlock(mBlockId);",
      "right" : "mTachyonFS.cancelBlock(mBlockId);",
      "info" : "ExpressionStatement[4686-4719]:ExpressionStatement[4951-4984]"
    }, {
      "left" : "LOG.info(String.format(\"Canceled output of block. blockId(%d)\", mBlockId));",
      "right" : "LOG.info(String.format(\"Canceled output of block. blockId(%d)\", mBlockId));",
      "info" : "ExpressionStatement[4734-4809]:ExpressionStatement[4999-5074]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4823-4832]:MarkerAnnotation[5088-5097]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4835-4841]:Modifier[5100-5106]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4842-4846]:PrimitiveType[5107-5111]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[4847-4852]:SimpleName[5112-5117]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[4862-4873]:SimpleType[5127-5138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4874-5138]:Block[5139-5407]"
    }, {
      "left" : "if (mOpen)",
      "right" : "if (!mClosed)",
      "info" : "IfStatement[4880-5134]:IfStatement[5145-5403]"
    }, {
      "left" : "mOpen",
      "right" : "mClosed",
      "info" : "SimpleName[4884-4889]:SimpleName[5150-5157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4891-5134]:Block[5159-5403]"
    }, {
      "left" : "if (mBuffer.position() > 0)",
      "right" : "if (mBuffer.position() > 0)",
      "info" : "IfStatement[4899-5004]:IfStatement[5167-5272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4927-5004]:Block[5195-5272]"
    }, {
      "left" : "writeToRemoteBlock(mBuffer.array(), 0, mBuffer.position());",
      "right" : "writeToRemoteBlock(mBuffer.array(), 0, mBuffer.position());",
      "info" : "ExpressionStatement[4937-4996]:ExpressionStatement[5205-5264]"
    }, {
      "left" : "mCloser.close();",
      "right" : "mCloser.close();",
      "info" : "ExpressionStatement[5011-5027]:ExpressionStatement[5279-5295]"
    }, {
      "left" : "if (mWrittenBytes > 0)",
      "right" : "if (mWrittenBytes > 0)",
      "info" : "IfStatement[5034-5107]:IfStatement[5302-5375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5057-5107]:Block[5325-5375]"
    }, {
      "left" : "mTachyonFS.cacheBlock(mBlockId);",
      "right" : "mTachyonFS.cacheBlock(mBlockId);",
      "info" : "ExpressionStatement[5067-5099]:ExpressionStatement[5335-5367]"
    }, {
      "left" : "mOpen",
      "right" : "mClosed",
      "info" : "SimpleName[5114-5119]:SimpleName[5382-5389]"
    }, {
      "left" : "mOpen = false;",
      "right" : "mClosed = true;",
      "info" : "ExpressionStatement[5114-5128]:ExpressionStatement[5382-5397]"
    }, {
      "left" : "false",
      "right" : "true",
      "info" : "BooleanLiteral[5122-5127]:BooleanLiteral[5392-5396]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5142-5151]:MarkerAnnotation[5411-5420]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5154-5160]:Modifier[5423-5429]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5161-5165]:PrimitiveType[5430-5434]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[5166-5171]:SimpleName[5435-5440]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[5181-5192]:SimpleType[5450-5461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5193-5259]:Block[5462-5528]"
    }, {
      "left" : "if (mBuffer.position() > 0)",
      "right" : "if (mBuffer.position() > 0)",
      "info" : "IfStatement[5199-5255]:IfStatement[5468-5524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5227-5255]:Block[5496-5524]"
    }, {
      "left" : "flushBuffer();",
      "right" : "flushBuffer();",
      "info" : "ExpressionStatement[5235-5249]:ExpressionStatement[5504-5518]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5314-5320]:Modifier[5583-5589]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[5321-5325]:PrimitiveType[5590-5594]"
    }, {
      "left" : "getBlockId",
      "right" : "getBlockId",
      "info" : "SimpleName[5326-5336]:SimpleName[5595-5605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5339-5365]:Block[5608-5634]"
    }, {
      "left" : "return mBlockId;",
      "right" : "return mBlockId;",
      "info" : "ReturnStatement[5345-5361]:ReturnStatement[5614-5630]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5437-5446]:MarkerAnnotation[5706-5715]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5449-5455]:Modifier[5718-5724]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[5456-5460]:PrimitiveType[5725-5729]"
    }, {
      "left" : "getRemainingSpaceBytes",
      "right" : "getRemainingSpaceBytes",
      "info" : "SimpleName[5461-5483]:SimpleName[5730-5752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5486-5539]:Block[5755-5808]"
    }, {
      "left" : "return mBlockCapacityBytes - mWrittenBytes;",
      "right" : "return mBlockCapacityBytes - mWrittenBytes;",
      "info" : "ReturnStatement[5492-5535]:ReturnStatement[5761-5804]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5543-5552]:MarkerAnnotation[5812-5821]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5555-5561]:Modifier[5824-5830]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5562-5566]:PrimitiveType[5831-5835]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[5567-5572]:SimpleName[5836-5841]"
    }, {
      "left" : "byte[] b",
      "right" : "byte[] b",
      "info" : "SingleVariableDeclaration[5573-5581]:SingleVariableDeclaration[5842-5850]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[5590-5601]:SimpleType[5859-5870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5602-5634]:Block[5871-5903]"
    }, {
      "left" : "write(b, 0, b.length);",
      "right" : "write(b, 0, b.length);",
      "info" : "ExpressionStatement[5608-5630]:ExpressionStatement[5877-5899]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5638-5647]:MarkerAnnotation[5907-5916]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5650-5656]:Modifier[5919-5925]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5657-5661]:PrimitiveType[5926-5930]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[5662-5667]:SimpleName[5931-5936]"
    }, {
      "left" : "byte[] b",
      "right" : "byte[] b",
      "info" : "SingleVariableDeclaration[5668-5676]:SingleVariableDeclaration[5937-5945]"
    }, {
      "left" : "int off",
      "right" : "int off",
      "info" : "SingleVariableDeclaration[5678-5685]:SingleVariableDeclaration[5947-5954]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[5687-5694]:SingleVariableDeclaration[5956-5963]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[5703-5714]:SimpleType[5972-5983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5715-6955]:Block[5984-7271]"
    }, {
      "left" : "if (b == null)",
      "right" : "if (b == null)",
      "info" : "IfStatement[5721-6032]:IfStatement[5990-6301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5736-5783]:Block[6005-6052]"
    }, {
      "left" : "throw new NullPointerException();",
      "right" : "throw new NullPointerException();",
      "info" : "ThrowStatement[5744-5777]:ThrowStatement[6013-6046]"
    }, {
      "left" : "if ((off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length)\n        || ((off + len) < 0))",
      "right" : "if ((off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length)\n        || ((off + len) < 0))",
      "info" : "IfStatement[5789-6032]:IfStatement[6058-6301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5894-6032]:Block[6163-6301]"
    }, {
      "left" : "throw new IndexOutOfBoundsException(String.format(\"Buffer length (%d), offset(%d), len(%d)\",\n          b.length, off, len));",
      "right" : "throw new IndexOutOfBoundsException(String.format(\"Buffer length (%d), offset(%d), len(%d)\",\n          b.length, off, len));",
      "info" : "ThrowStatement[5902-6026]:ThrowStatement[6171-6295]"
    }, {
      "left" : "if (!mOpen)",
      "right" : "if (mClosed)",
      "info" : "IfStatement[6037-6109]:IfStatement[6306-6425]"
    }, {
      "left" : "mOpen",
      "right" : "mClosed",
      "info" : "SimpleName[6042-6047]:SimpleName[6310-6317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6049-6109]:Block[6319-6425]"
    }, {
      "left" : "throw new IOException(\"Can not write cache.\");",
      "right" : "throw new IOException(\"Cannot write because block is already closed. blockId: \" + mBlockId);",
      "info" : "ThrowStatement[6057-6103]:ThrowStatement[6327-6419]"
    }, {
      "left" : "\"Can not write cache.\"",
      "right" : "\"Cannot write because block is already closed. blockId: \"",
      "info" : "StringLiteral[6079-6101]:StringLiteral[6349-6406]"
    }, {
      "left" : "if (mWrittenBytes + len > mBlockCapacityBytes)",
      "right" : "if (mWrittenBytes + len > mBlockCapacityBytes)",
      "info" : "IfStatement[6114-6217]:IfStatement[6430-6533]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6161-6217]:Block[6477-6533]"
    }, {
      "left" : "throw new IOException(\"Out of capacity.\");",
      "right" : "throw new IOException(\"Out of capacity.\");",
      "info" : "ThrowStatement[6169-6211]:ThrowStatement[6485-6527]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[6222-6257]:IfStatement[6538-6573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6236-6257]:Block[6552-6573]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[6244-6251]:ReturnStatement[6560-6567]"
    }, {
      "left" : "if (mBuffer.position() > 0 && mBuffer.position() + len > mBufferBytes)",
      "right" : "if (mBuffer.position() > 0 && mBuffer.position() + len > mBufferBytes)",
      "info" : "IfStatement[6263-6433]:IfStatement[6579-6749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6334-6433]:Block[6650-6749]"
    }, {
      "left" : "flushBuffer();",
      "right" : "flushBuffer();",
      "info" : "ExpressionStatement[6413-6427]:ExpressionStatement[6729-6743]"
    }, {
      "left" : "if (len > mBufferBytes / 2)",
      "right" : "if (len > mBufferBytes / 2)",
      "info" : "IfStatement[6439-6924]:IfStatement[6755-7240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6467-6802]:Block[6783-7118]"
    }, {
      "left" : "if (mBuffer.position() > 0)",
      "right" : "if (mBuffer.position() > 0)",
      "info" : "IfStatement[6597-6757]:IfStatement[6913-7073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6625-6757]:Block[6941-7073]"
    }, {
      "left" : "flushBuffer();",
      "right" : "flushBuffer();",
      "info" : "ExpressionStatement[6735-6749]:ExpressionStatement[7051-7065]"
    }, {
      "left" : "writeToRemoteBlock(b, off, len);",
      "right" : "writeToRemoteBlock(b, off, len);",
      "info" : "ExpressionStatement[6764-6796]:ExpressionStatement[7080-7112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6808-6924]:Block[7124-7240]"
    }, {
      "left" : "mBuffer.put(b, off, len);",
      "right" : "mBuffer.put(b, off, len);",
      "info" : "ExpressionStatement[6893-6918]:ExpressionStatement[7209-7234]"
    }, {
      "left" : "mWrittenBytes += len;",
      "right" : "mWrittenBytes += len;",
      "info" : "ExpressionStatement[6930-6951]:ExpressionStatement[7246-7267]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6959-6968]:MarkerAnnotation[7275-7284]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6971-6977]:Modifier[7287-7293]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6978-6982]:PrimitiveType[7294-7298]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[6983-6988]:SimpleName[7299-7304]"
    }, {
      "left" : "int b",
      "right" : "int b",
      "info" : "SingleVariableDeclaration[6989-6994]:SingleVariableDeclaration[7305-7310]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[7003-7014]:SimpleType[7319-7330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7015-7344]:Block[7331-7707]"
    }, {
      "left" : "if (!mOpen)",
      "right" : "if (mClosed)",
      "info" : "IfStatement[7021-7093]:IfStatement[7337-7456]"
    }, {
      "left" : "mOpen",
      "right" : "mClosed",
      "info" : "SimpleName[7026-7031]:SimpleName[7341-7348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7033-7093]:Block[7350-7456]"
    }, {
      "left" : "throw new IOException(\"Can not write cache.\");",
      "right" : "throw new IOException(\"Cannot write because block is already closed. blockId: \" + mBlockId);",
      "info" : "ThrowStatement[7041-7087]:ThrowStatement[7358-7450]"
    }, {
      "left" : "\"Can not write cache.\"",
      "right" : "\"Cannot write because block is already closed. blockId: \"",
      "info" : "StringLiteral[7063-7085]:StringLiteral[7380-7437]"
    }, {
      "left" : "if (mWrittenBytes + 1 > mBlockCapacityBytes)",
      "right" : "if (mWrittenBytes + 1 > mBlockCapacityBytes)",
      "info" : "IfStatement[7098-7199]:IfStatement[7461-7562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7143-7199]:Block[7506-7562]"
    }, {
      "left" : "throw new IOException(\"Out of capacity.\");",
      "right" : "throw new IOException(\"Out of capacity.\");",
      "info" : "ThrowStatement[7151-7193]:ThrowStatement[7514-7556]"
    }, {
      "left" : "if (mBuffer.position() >= mBufferBytes)",
      "right" : "if (mBuffer.position() >= mBufferBytes)",
      "info" : "IfStatement[7204-7272]:IfStatement[7567-7635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7244-7272]:Block[7607-7635]"
    }, {
      "left" : "flushBuffer();",
      "right" : "flushBuffer();",
      "info" : "ExpressionStatement[7252-7266]:ExpressionStatement[7615-7629]"
    }, {
      "left" : "CommonUtils.putIntByteBuffer(mBuffer, b);",
      "right" : "CommonUtils.putIntByteBuffer(mBuffer, b);",
      "info" : "ExpressionStatement[7277-7318]:ExpressionStatement[7640-7681]"
    }, {
      "left" : "mWrittenBytes ++;",
      "right" : "mWrittenBytes ++;",
      "info" : "ExpressionStatement[7323-7340]:ExpressionStatement[7686-7703]"
    } ]
  },
  "interFileMappings" : { }
}