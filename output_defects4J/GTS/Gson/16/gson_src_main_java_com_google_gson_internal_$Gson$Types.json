{
  "matchedElements" : [
 {
    "left" : "class : $Gson$Types",
    "right" : "class : $Gson$Types",
    "info" : "TypeDeclaration[1138-21512]:TypeDeclaration[1138-21676]"
  }, {
    "left" : "EMPTY_TYPE_ARRAY",
    "right" : "EMPTY_TYPE_ARRAY",
    "info" : "FieldDeclaration[1269-1322]:FieldDeclaration[1269-1322]"
  }, {
    "left" : "private $Gson$Types()",
    "right" : "private $Gson$Types()",
    "info" : "MethodDeclaration[1326-1400]:MethodDeclaration[1326-1400]"
  }, {
    "left" : "public newParameterizedTypeWithOwner(ownerType , rawType , ) : ",
    "right" : "public newParameterizedTypeWithOwner(ownerType , rawType , ) : ",
    "info" : "MethodDeclaration[1404-1827]:MethodDeclaration[1404-1827]"
  }, {
    "left" : "public arrayOf(componentType ) : ",
    "right" : "public arrayOf(componentType ) : ",
    "info" : "MethodDeclaration[1831-2132]:MethodDeclaration[1831-2132]"
  }, {
    "left" : "public subtypeOf(bound ) : ",
    "right" : "public subtypeOf(bound ) : ",
    "info" : "MethodDeclaration[2136-2769]:MethodDeclaration[2136-2769]"
  }, {
    "left" : "public supertypeOf(bound ) : ",
    "right" : "public supertypeOf(bound ) : ",
    "info" : "MethodDeclaration[2773-3280]:MethodDeclaration[2773-3280]"
  }, {
    "left" : "public canonicalize(type ) : ",
    "right" : "public canonicalize(type ) : ",
    "info" : "MethodDeclaration[3284-4355]:MethodDeclaration[3284-4355]"
  }, {
    "left" : "public getRawType(type ) : ",
    "right" : "public getRawType(type ) : ",
    "info" : "MethodDeclaration[4359-5759]:MethodDeclaration[4359-5759]"
  }, {
    "left" : "package equal(a , b ) : boolean",
    "right" : "package equal(a , b ) : boolean",
    "info" : "MethodDeclaration[5763-5858]:MethodDeclaration[5763-5858]"
  }, {
    "left" : "public equals(a , b ) : boolean",
    "right" : "public equals(a , b ) : boolean",
    "info" : "MethodDeclaration[5862-7744]:MethodDeclaration[5862-7744]"
  }, {
    "left" : "package hashCodeOrZero(o ) : int",
    "right" : "package hashCodeOrZero(o ) : int",
    "info" : "MethodDeclaration[7748-7830]:MethodDeclaration[7748-7830]"
  }, {
    "left" : "public typeToString(type ) : ",
    "right" : "public typeToString(type ) : ",
    "info" : "MethodDeclaration[7834-7966]:MethodDeclaration[7834-7966]"
  }, {
    "left" : "package getGenericSupertype(context , rawType , toResolve ) : ",
    "right" : "package getGenericSupertype(context , rawType , toResolve ) : ",
    "info" : "MethodDeclaration[7970-9451]:MethodDeclaration[7970-9451]"
  }, {
    "left" : "package getSupertype(context , contextRawType , supertype ) : ",
    "right" : "package getSupertype(context , contextRawType , supertype ) : ",
    "info" : "MethodDeclaration[9455-10011]:MethodDeclaration[9455-10011]"
  }, {
    "left" : "public getArrayComponentType(array ) : ",
    "right" : "public getArrayComponentType(array ) : ",
    "info" : "MethodDeclaration[10015-10356]:MethodDeclaration[10015-10356]"
  }, {
    "left" : "public getCollectionElementType(context , contextRawType ) : ",
    "right" : "public getCollectionElementType(context , contextRawType ) : ",
    "info" : "MethodDeclaration[10360-10967]:MethodDeclaration[10360-10967]"
  }, {
    "left" : "public getMapKeyAndValueTypes(context , contextRawType ) : ",
    "right" : "public getMapKeyAndValueTypes(context , contextRawType ) : ",
    "info" : "MethodDeclaration[10971-11882]:MethodDeclaration[10971-11882]"
  }, {
    "left" : "public resolve(context , contextRawType , toResolve ) : ",
    "right" : "public resolve(context , contextRawType , toResolve ) : ",
    "info" : "MethodDeclaration[11886-12058]:MethodDeclaration[11886-12058]"
  }, {
    "left" : "private resolve(context , contextRawType , toResolve , visitedTypeVariables ...) : ",
    "right" : "private resolve(context , contextRawType , toResolve , visitedTypeVariables ...) : ",
    "info" : "MethodDeclaration[12062-15256]:MethodDeclaration[12062-15420]"
  }, {
    "left" : "package resolveTypeVariable(context , contextRawType , unknown ) : ",
    "right" : "package resolveTypeVariable(context , contextRawType , unknown ) : ",
    "info" : "MethodDeclaration[15260-15827]:MethodDeclaration[15424-15991]"
  }, {
    "left" : "private indexOf(array , toFind ) : int",
    "right" : "private indexOf(array , toFind ) : int",
    "info" : "MethodDeclaration[15831-16065]:MethodDeclaration[15995-16229]"
  }, {
    "left" : "private declaringClassOf(typeVariable ) : ",
    "right" : "private declaringClassOf(typeVariable ) : ",
    "info" : "MethodDeclaration[16069-16456]:MethodDeclaration[16233-16620]"
  }, {
    "left" : "package checkNotPrimitive(type ) : void",
    "right" : "package checkNotPrimitive(type ) : void",
    "info" : "MethodDeclaration[16460-16590]:MethodDeclaration[16624-16754]"
  }, {
    "left" : "class : ParameterizedTypeImpl",
    "right" : "class : ParameterizedTypeImpl",
    "info" : "TypeDeclaration[16594-18798]:TypeDeclaration[16758-18962]"
  }, {
    "left" : "ownerType",
    "right" : "ownerType",
    "info" : "FieldDeclaration[16692-16721]:FieldDeclaration[16856-16885]"
  }, {
    "left" : "rawType",
    "right" : "rawType",
    "info" : "FieldDeclaration[16726-16753]:FieldDeclaration[16890-16917]"
  }, {
    "left" : "typeArguments",
    "right" : "typeArguments",
    "info" : "FieldDeclaration[16758-16793]:FieldDeclaration[16922-16957]"
  }, {
    "left" : "public ParameterizedTypeImpl(ownerType , rawType , )",
    "right" : "public ParameterizedTypeImpl(ownerType , rawType , )",
    "info" : "MethodDeclaration[16799-17685]:MethodDeclaration[16963-17849]"
  }, {
    "left" : "public getActualTypeArguments() : ",
    "right" : "public getActualTypeArguments() : ",
    "info" : "MethodDeclaration[17691-17773]:MethodDeclaration[17855-17937]"
  }, {
    "left" : "public getRawType() : ",
    "right" : "public getRawType() : ",
    "info" : "MethodDeclaration[17779-17833]:MethodDeclaration[17943-17997]"
  }, {
    "left" : "public getOwnerType() : ",
    "right" : "public getOwnerType() : ",
    "info" : "MethodDeclaration[17839-17897]:MethodDeclaration[18003-18061]"
  }, {
    "left" : "public equals(other ) : boolean",
    "right" : "public equals(other ) : boolean",
    "info" : "MethodDeclaration[17903-18070]:MethodDeclaration[18067-18234]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[18076-18229]:MethodDeclaration[18240-18393]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[18235-18741]:MethodDeclaration[18399-18905]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[18747-18794]:FieldDeclaration[18911-18958]"
  }, {
    "left" : "class : GenericArrayTypeImpl",
    "right" : "class : GenericArrayTypeImpl",
    "info" : "TypeDeclaration[18802-19524]:TypeDeclaration[18966-19688]"
  }, {
    "left" : "componentType",
    "right" : "componentType",
    "info" : "FieldDeclaration[18898-18931]:FieldDeclaration[19062-19095]"
  }, {
    "left" : "public GenericArrayTypeImpl(componentType )",
    "right" : "public GenericArrayTypeImpl(componentType )",
    "info" : "MethodDeclaration[18937-19048]:MethodDeclaration[19101-19212]"
  }, {
    "left" : "public getGenericComponentType() : ",
    "right" : "public getGenericComponentType() : ",
    "info" : "MethodDeclaration[19054-19127]:MethodDeclaration[19218-19291]"
  }, {
    "left" : "public equals(o ) : boolean",
    "right" : "public equals(o ) : boolean",
    "info" : "MethodDeclaration[19133-19286]:MethodDeclaration[19297-19450]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[19292-19370]:MethodDeclaration[19456-19534]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[19376-19467]:MethodDeclaration[19540-19631]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[19473-19520]:FieldDeclaration[19637-19684]"
  }, {
    "left" : "class : WildcardTypeImpl",
    "right" : "class : WildcardTypeImpl",
    "info" : "TypeDeclaration[19528-21510]:TypeDeclaration[19692-21674]"
  }, {
    "left" : "upperBound",
    "right" : "upperBound",
    "info" : "FieldDeclaration[19859-19889]:FieldDeclaration[20023-20053]"
  }, {
    "left" : "lowerBound",
    "right" : "lowerBound",
    "info" : "FieldDeclaration[19894-19924]:FieldDeclaration[20058-20088]"
  }, {
    "left" : "public WildcardTypeImpl(upperBounds , lowerBounds ...)",
    "right" : "public WildcardTypeImpl(upperBounds , lowerBounds ...)",
    "info" : "MethodDeclaration[19930-20556]:MethodDeclaration[20094-20720]"
  }, {
    "left" : "public getUpperBounds() : ",
    "right" : "public getUpperBounds() : ",
    "info" : "MethodDeclaration[20562-20640]:MethodDeclaration[20726-20804]"
  }, {
    "left" : "public getLowerBounds() : ",
    "right" : "public getLowerBounds() : ",
    "info" : "MethodDeclaration[20646-20764]:MethodDeclaration[20810-20928]"
  }, {
    "left" : "public equals(other ) : boolean",
    "right" : "public equals(other ) : boolean",
    "info" : "MethodDeclaration[20770-20927]:MethodDeclaration[20934-21091]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[20933-21173]:MethodDeclaration[21097-21337]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[21179-21453]:MethodDeclaration[21343-21617]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[21459-21506]:FieldDeclaration[21623-21670]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1234-1240]:Modifier[1234-1240]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[1241-1246]:Modifier[1241-1246]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1247-1252]:TYPE_DECLARATION_KIND[1247-1252]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[1326-1333]:Modifier[1326-1333]"
  }, {
    "left" : "$Gson$Types",
    "right" : "$Gson$Types",
    "info" : "SimpleName[1334-1345]:SimpleName[1334-1345]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1348-1400]:Block[1348-1400]"
  }, {
    "left" : "throw new UnsupportedOperationException();",
    "right" : "throw new UnsupportedOperationException();",
    "info" : "ThrowStatement[1354-1396]:ThrowStatement[1354-1396]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1627-1633]:Modifier[1627-1633]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1634-1640]:Modifier[1634-1640]"
  }, {
    "left" : "ParameterizedType",
    "right" : "ParameterizedType",
    "info" : "SimpleType[1641-1658]:SimpleType[1641-1658]"
  }, {
    "left" : "newParameterizedTypeWithOwner",
    "right" : "newParameterizedTypeWithOwner",
    "info" : "SimpleName[1659-1688]:SimpleName[1659-1688]"
  }, {
    "left" : "Type ownerType",
    "right" : "Type ownerType",
    "info" : "SingleVariableDeclaration[1696-1710]:SingleVariableDeclaration[1696-1710]"
  }, {
    "left" : "Type rawType",
    "right" : "Type rawType",
    "info" : "SingleVariableDeclaration[1712-1724]:SingleVariableDeclaration[1712-1724]"
  }, {
    "left" : "Type... typeArguments",
    "right" : "Type... typeArguments",
    "info" : "SingleVariableDeclaration[1726-1747]:SingleVariableDeclaration[1726-1747]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1749-1827]:Block[1749-1827]"
  }, {
    "left" : "return new ParameterizedTypeImpl(ownerType, rawType, typeArguments);",
    "right" : "return new ParameterizedTypeImpl(ownerType, rawType, typeArguments);",
    "info" : "ReturnStatement[1755-1823]:ReturnStatement[1755-1823]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2016-2022]:Modifier[2016-2022]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2023-2029]:Modifier[2023-2029]"
  }, {
    "left" : "GenericArrayType",
    "right" : "GenericArrayType",
    "info" : "SimpleType[2030-2046]:SimpleType[2030-2046]"
  }, {
    "left" : "arrayOf",
    "right" : "arrayOf",
    "info" : "SimpleName[2047-2054]:SimpleName[2047-2054]"
  }, {
    "left" : "Type componentType",
    "right" : "Type componentType",
    "info" : "SingleVariableDeclaration[2055-2073]:SingleVariableDeclaration[2055-2073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2075-2132]:Block[2075-2132]"
  }, {
    "left" : "return new GenericArrayTypeImpl(componentType);",
    "right" : "return new GenericArrayTypeImpl(componentType);",
    "info" : "ReturnStatement[2081-2128]:ReturnStatement[2081-2128]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2464-2470]:Modifier[2464-2470]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2471-2477]:Modifier[2471-2477]"
  }, {
    "left" : "WildcardType",
    "right" : "WildcardType",
    "info" : "SimpleType[2478-2490]:SimpleType[2478-2490]"
  }, {
    "left" : "subtypeOf",
    "right" : "subtypeOf",
    "info" : "SimpleName[2491-2500]:SimpleName[2491-2500]"
  }, {
    "left" : "Type bound",
    "right" : "Type bound",
    "info" : "SingleVariableDeclaration[2501-2511]:SingleVariableDeclaration[2501-2511]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2513-2769]:Block[2513-2769]"
  }, {
    "left" : "Type[] upperBounds;",
    "right" : "Type[] upperBounds;",
    "info" : "VariableDeclarationStatement[2519-2538]:VariableDeclarationStatement[2519-2538]"
  }, {
    "left" : "if (bound instanceof WildcardType)",
    "right" : "if (bound instanceof WildcardType)",
    "info" : "IfStatement[2543-2701]:IfStatement[2543-2701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2578-2646]:Block[2578-2646]"
  }, {
    "left" : "upperBounds = ((WildcardType) bound).getUpperBounds();",
    "right" : "upperBounds = ((WildcardType) bound).getUpperBounds();",
    "info" : "ExpressionStatement[2586-2640]:ExpressionStatement[2586-2640]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2652-2701]:Block[2652-2701]"
  }, {
    "left" : "upperBounds = new Type[] { bound };",
    "right" : "upperBounds = new Type[] { bound };",
    "info" : "ExpressionStatement[2660-2695]:ExpressionStatement[2660-2695]"
  }, {
    "left" : "return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);",
    "right" : "return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);",
    "info" : "ReturnStatement[2706-2765]:ReturnStatement[2706-2765]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2962-2968]:Modifier[2962-2968]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2969-2975]:Modifier[2969-2975]"
  }, {
    "left" : "WildcardType",
    "right" : "WildcardType",
    "info" : "SimpleType[2976-2988]:SimpleType[2976-2988]"
  }, {
    "left" : "supertypeOf",
    "right" : "supertypeOf",
    "info" : "SimpleName[2989-3000]:SimpleName[2989-3000]"
  }, {
    "left" : "Type bound",
    "right" : "Type bound",
    "info" : "SingleVariableDeclaration[3001-3011]:SingleVariableDeclaration[3001-3011]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3013-3280]:Block[3013-3280]"
  }, {
    "left" : "Type[] lowerBounds;",
    "right" : "Type[] lowerBounds;",
    "info" : "VariableDeclarationStatement[3019-3038]:VariableDeclarationStatement[3019-3038]"
  }, {
    "left" : "if (bound instanceof WildcardType)",
    "right" : "if (bound instanceof WildcardType)",
    "info" : "IfStatement[3043-3201]:IfStatement[3043-3201]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3078-3146]:Block[3078-3146]"
  }, {
    "left" : "lowerBounds = ((WildcardType) bound).getLowerBounds();",
    "right" : "lowerBounds = ((WildcardType) bound).getLowerBounds();",
    "info" : "ExpressionStatement[3086-3140]:ExpressionStatement[3086-3140]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3152-3201]:Block[3152-3201]"
  }, {
    "left" : "lowerBounds = new Type[] { bound };",
    "right" : "lowerBounds = new Type[] { bound };",
    "info" : "ExpressionStatement[3160-3195]:ExpressionStatement[3160-3195]"
  }, {
    "left" : "return new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);",
    "right" : "return new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);",
    "info" : "ReturnStatement[3206-3276]:ReturnStatement[3206-3276]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3490-3496]:Modifier[3490-3496]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3497-3503]:Modifier[3497-3503]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[3504-3508]:SimpleType[3504-3508]"
  }, {
    "left" : "canonicalize",
    "right" : "canonicalize",
    "info" : "SimpleName[3509-3521]:SimpleName[3509-3521]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[3522-3531]:SingleVariableDeclaration[3522-3531]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3533-4355]:Block[3533-4355]"
  }, {
    "left" : "if (type instanceof Class)",
    "right" : "if (type instanceof Class)",
    "info" : "IfStatement[3539-4351]:IfStatement[3539-4351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3566-3703]:Block[3566-3703]"
  }, {
    "left" : "Class<?> c = (Class<?>) type;",
    "right" : "Class<?> c = (Class<?>) type;",
    "info" : "VariableDeclarationStatement[3574-3603]:VariableDeclarationStatement[3574-3603]"
  }, {
    "left" : "return c.isArray() ? new GenericArrayTypeImpl(canonicalize(c.getComponentType())) : c;",
    "right" : "return c.isArray() ? new GenericArrayTypeImpl(canonicalize(c.getComponentType())) : c;",
    "info" : "ReturnStatement[3610-3696]:ReturnStatement[3610-3696]"
  }, {
    "left" : "if (type instanceof ParameterizedType)",
    "right" : "if (type instanceof ParameterizedType)",
    "info" : "IfStatement[3709-4351]:IfStatement[3709-4351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3748-3922]:Block[3748-3922]"
  }, {
    "left" : "ParameterizedType p = (ParameterizedType) type;",
    "right" : "ParameterizedType p = (ParameterizedType) type;",
    "info" : "VariableDeclarationStatement[3756-3803]:VariableDeclarationStatement[3756-3803]"
  }, {
    "left" : "return new ParameterizedTypeImpl(p.getOwnerType(),\n          p.getRawType(), p.getActualTypeArguments());",
    "right" : "return new ParameterizedTypeImpl(p.getOwnerType(),\n          p.getRawType(), p.getActualTypeArguments());",
    "info" : "ReturnStatement[3810-3915]:ReturnStatement[3810-3915]"
  }, {
    "left" : "if (type instanceof GenericArrayType)",
    "right" : "if (type instanceof GenericArrayType)",
    "info" : "IfStatement[3928-4351]:IfStatement[3928-4351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3966-4094]:Block[3966-4094]"
  }, {
    "left" : "GenericArrayType g = (GenericArrayType) type;",
    "right" : "GenericArrayType g = (GenericArrayType) type;",
    "info" : "VariableDeclarationStatement[3974-4019]:VariableDeclarationStatement[3974-4019]"
  }, {
    "left" : "return new GenericArrayTypeImpl(g.getGenericComponentType());",
    "right" : "return new GenericArrayTypeImpl(g.getGenericComponentType());",
    "info" : "ReturnStatement[4026-4087]:ReturnStatement[4026-4087]"
  }, {
    "left" : "if (type instanceof WildcardType)",
    "right" : "if (type instanceof WildcardType)",
    "info" : "IfStatement[4100-4351]:IfStatement[4100-4351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4134-4261]:Block[4134-4261]"
  }, {
    "left" : "WildcardType w = (WildcardType) type;",
    "right" : "WildcardType w = (WildcardType) type;",
    "info" : "VariableDeclarationStatement[4142-4179]:VariableDeclarationStatement[4142-4179]"
  }, {
    "left" : "return new WildcardTypeImpl(w.getUpperBounds(), w.getLowerBounds());",
    "right" : "return new WildcardTypeImpl(w.getUpperBounds(), w.getLowerBounds());",
    "info" : "ReturnStatement[4186-4254]:ReturnStatement[4186-4254]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4267-4351]:Block[4267-4351]"
  }, {
    "left" : "return type;",
    "right" : "return type;",
    "info" : "ReturnStatement[4333-4345]:ReturnStatement[4333-4345]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4359-4365]:Modifier[4359-4365]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[4366-4372]:Modifier[4366-4372]"
  }, {
    "left" : "Class<?>",
    "right" : "Class<?>",
    "info" : "ParameterizedType[4373-4381]:ParameterizedType[4373-4381]"
  }, {
    "left" : "getRawType",
    "right" : "getRawType",
    "info" : "SimpleName[4382-4392]:SimpleName[4382-4392]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[4393-4402]:SingleVariableDeclaration[4393-4402]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4404-5759]:Block[4404-5759]"
  }, {
    "left" : "if (type instanceof Class<?>)",
    "right" : "if (type instanceof Class<?>)",
    "info" : "IfStatement[4410-5755]:IfStatement[4410-5755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4440-4511]:Block[4440-4511]"
  }, {
    "left" : "return (Class<?>) type;",
    "right" : "return (Class<?>) type;",
    "info" : "ReturnStatement[4481-4504]:ReturnStatement[4481-4504]"
  }, {
    "left" : "if (type instanceof ParameterizedType)",
    "right" : "if (type instanceof ParameterizedType)",
    "info" : "IfStatement[4517-5755]:IfStatement[4517-5755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4556-4952]:Block[4556-4952]"
  }, {
    "left" : "ParameterizedType parameterizedType = (ParameterizedType) type;",
    "right" : "ParameterizedType parameterizedType = (ParameterizedType) type;",
    "info" : "VariableDeclarationStatement[4564-4627]:VariableDeclarationStatement[4564-4627]"
  }, {
    "left" : "Type rawType = parameterizedType.getRawType();",
    "right" : "Type rawType = parameterizedType.getRawType();",
    "info" : "VariableDeclarationStatement[4819-4865]:VariableDeclarationStatement[4819-4865]"
  }, {
    "left" : "checkArgument(rawType instanceof Class);",
    "right" : "checkArgument(rawType instanceof Class);",
    "info" : "ExpressionStatement[4872-4912]:ExpressionStatement[4872-4912]"
  }, {
    "left" : "return (Class<?>) rawType;",
    "right" : "return (Class<?>) rawType;",
    "info" : "ReturnStatement[4919-4945]:ReturnStatement[4919-4945]"
  }, {
    "left" : "if (type instanceof GenericArrayType)",
    "right" : "if (type instanceof GenericArrayType)",
    "info" : "IfStatement[4958-5755]:IfStatement[4958-5755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4996-5156]:Block[4996-5156]"
  }, {
    "left" : "Type componentType = ((GenericArrayType)type).getGenericComponentType();",
    "right" : "Type componentType = ((GenericArrayType)type).getGenericComponentType();",
    "info" : "VariableDeclarationStatement[5004-5076]:VariableDeclarationStatement[5004-5076]"
  }, {
    "left" : "return Array.newInstance(getRawType(componentType), 0).getClass();",
    "right" : "return Array.newInstance(getRawType(componentType), 0).getClass();",
    "info" : "ReturnStatement[5083-5149]:ReturnStatement[5083-5149]"
  }, {
    "left" : "if (type instanceof TypeVariable)",
    "right" : "if (type instanceof TypeVariable)",
    "info" : "IfStatement[5162-5755]:IfStatement[5162-5755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5196-5389]:Block[5196-5389]"
  }, {
    "left" : "return Object.class;",
    "right" : "return Object.class;",
    "info" : "ReturnStatement[5362-5382]:ReturnStatement[5362-5382]"
  }, {
    "left" : "if (type instanceof WildcardType)",
    "right" : "if (type instanceof WildcardType)",
    "info" : "IfStatement[5395-5755]:IfStatement[5395-5755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5429-5505]:Block[5429-5505]"
  }, {
    "left" : "return getRawType(((WildcardType) type).getUpperBounds()[0]);",
    "right" : "return getRawType(((WildcardType) type).getUpperBounds()[0]);",
    "info" : "ReturnStatement[5437-5498]:ReturnStatement[5437-5498]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5511-5755]:Block[5511-5755]"
  }, {
    "left" : "String className = type == null ? \"null\" : type.getClass().getName();",
    "right" : "String className = type == null ? \"null\" : type.getClass().getName();",
    "info" : "VariableDeclarationStatement[5519-5588]:VariableDeclarationStatement[5519-5588]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \"\n          + \"GenericArrayType, but <\" + type + \"> is of type \" + className);",
    "right" : "throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \"\n          + \"GenericArrayType, but <\" + type + \"> is of type \" + className);",
    "info" : "ThrowStatement[5595-5749]:ThrowStatement[5595-5749]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5763-5769]:Modifier[5763-5769]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5770-5777]:PrimitiveType[5770-5777]"
  }, {
    "left" : "equal",
    "right" : "equal",
    "info" : "SimpleName[5778-5783]:SimpleName[5778-5783]"
  }, {
    "left" : "Object a",
    "right" : "Object a",
    "info" : "SingleVariableDeclaration[5784-5792]:SingleVariableDeclaration[5784-5792]"
  }, {
    "left" : "Object b",
    "right" : "Object b",
    "info" : "SingleVariableDeclaration[5794-5802]:SingleVariableDeclaration[5794-5802]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5804-5858]:Block[5804-5858]"
  }, {
    "left" : "return a == b || (a != null && a.equals(b));",
    "right" : "return a == b || (a != null && a.equals(b));",
    "info" : "ReturnStatement[5810-5854]:ReturnStatement[5810-5854]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5930-5936]:Modifier[5930-5936]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5937-5943]:Modifier[5937-5943]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5944-5951]:PrimitiveType[5944-5951]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[5952-5958]:SimpleName[5952-5958]"
  }, {
    "left" : "Type a",
    "right" : "Type a",
    "info" : "SingleVariableDeclaration[5959-5965]:SingleVariableDeclaration[5959-5965]"
  }, {
    "left" : "Type b",
    "right" : "Type b",
    "info" : "SingleVariableDeclaration[5967-5973]:SingleVariableDeclaration[5967-5973]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5975-7744]:Block[5975-7744]"
  }, {
    "left" : "if (a == b)",
    "right" : "if (a == b)",
    "info" : "IfStatement[5981-7740]:IfStatement[5981-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5993-6067]:Block[5993-6067]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[6048-6060]:ReturnStatement[6048-6060]"
  }, {
    "left" : "if (a instanceof Class)",
    "right" : "if (a instanceof Class)",
    "info" : "IfStatement[6073-7740]:IfStatement[6073-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6097-6174]:Block[6097-6174]"
  }, {
    "left" : "return a.equals(b);",
    "right" : "return a.equals(b);",
    "info" : "ReturnStatement[6148-6167]:ReturnStatement[6148-6167]"
  }, {
    "left" : "if (a instanceof ParameterizedType)",
    "right" : "if (a instanceof ParameterizedType)",
    "info" : "IfStatement[6180-7740]:IfStatement[6180-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6216-6638]:Block[6216-6638]"
  }, {
    "left" : "if (!(b instanceof ParameterizedType))",
    "right" : "if (!(b instanceof ParameterizedType))",
    "info" : "IfStatement[6224-6294]:IfStatement[6224-6294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6263-6294]:Block[6263-6294]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[6273-6286]:ReturnStatement[6273-6286]"
  }, {
    "left" : "ParameterizedType pa = (ParameterizedType) a;",
    "right" : "ParameterizedType pa = (ParameterizedType) a;",
    "info" : "VariableDeclarationStatement[6338-6383]:VariableDeclarationStatement[6338-6383]"
  }, {
    "left" : "ParameterizedType pb = (ParameterizedType) b;",
    "right" : "ParameterizedType pb = (ParameterizedType) b;",
    "info" : "VariableDeclarationStatement[6390-6435]:VariableDeclarationStatement[6390-6435]"
  }, {
    "left" : "return equal(pa.getOwnerType(), pb.getOwnerType())\n          && pa.getRawType().equals(pb.getRawType())\n          && Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments());",
    "right" : "return equal(pa.getOwnerType(), pb.getOwnerType())\n          && pa.getRawType().equals(pb.getRawType())\n          && Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments());",
    "info" : "ReturnStatement[6442-6631]:ReturnStatement[6442-6631]"
  }, {
    "left" : "if (a instanceof GenericArrayType)",
    "right" : "if (a instanceof GenericArrayType)",
    "info" : "IfStatement[6644-7740]:IfStatement[6644-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6679-6945]:Block[6679-6945]"
  }, {
    "left" : "if (!(b instanceof GenericArrayType))",
    "right" : "if (!(b instanceof GenericArrayType))",
    "info" : "IfStatement[6687-6756]:IfStatement[6687-6756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6725-6756]:Block[6725-6756]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[6735-6748]:ReturnStatement[6735-6748]"
  }, {
    "left" : "GenericArrayType ga = (GenericArrayType) a;",
    "right" : "GenericArrayType ga = (GenericArrayType) a;",
    "info" : "VariableDeclarationStatement[6764-6807]:VariableDeclarationStatement[6764-6807]"
  }, {
    "left" : "GenericArrayType gb = (GenericArrayType) b;",
    "right" : "GenericArrayType gb = (GenericArrayType) b;",
    "info" : "VariableDeclarationStatement[6814-6857]:VariableDeclarationStatement[6814-6857]"
  }, {
    "left" : "return equals(ga.getGenericComponentType(), gb.getGenericComponentType());",
    "right" : "return equals(ga.getGenericComponentType(), gb.getGenericComponentType());",
    "info" : "ReturnStatement[6864-6938]:ReturnStatement[6864-6938]"
  }, {
    "left" : "if (a instanceof WildcardType)",
    "right" : "if (a instanceof WildcardType)",
    "info" : "IfStatement[6951-7740]:IfStatement[6951-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6982-7286]:Block[6982-7286]"
  }, {
    "left" : "if (!(b instanceof WildcardType))",
    "right" : "if (!(b instanceof WildcardType))",
    "info" : "IfStatement[6990-7055]:IfStatement[6990-7055]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7024-7055]:Block[7024-7055]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7034-7047]:ReturnStatement[7034-7047]"
  }, {
    "left" : "WildcardType wa = (WildcardType) a;",
    "right" : "WildcardType wa = (WildcardType) a;",
    "info" : "VariableDeclarationStatement[7063-7098]:VariableDeclarationStatement[7063-7098]"
  }, {
    "left" : "WildcardType wb = (WildcardType) b;",
    "right" : "WildcardType wb = (WildcardType) b;",
    "info" : "VariableDeclarationStatement[7105-7140]:VariableDeclarationStatement[7105-7140]"
  }, {
    "left" : "return Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())\n          && Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds());",
    "right" : "return Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())\n          && Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds());",
    "info" : "ReturnStatement[7147-7279]:ReturnStatement[7147-7279]"
  }, {
    "left" : "if (a instanceof TypeVariable)",
    "right" : "if (a instanceof TypeVariable)",
    "info" : "IfStatement[7292-7740]:IfStatement[7292-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7323-7617]:Block[7323-7617]"
  }, {
    "left" : "if (!(b instanceof TypeVariable))",
    "right" : "if (!(b instanceof TypeVariable))",
    "info" : "IfStatement[7331-7396]:IfStatement[7331-7396]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7365-7396]:Block[7365-7396]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7375-7388]:ReturnStatement[7375-7388]"
  }, {
    "left" : "TypeVariable<?> va = (TypeVariable<?>) a;",
    "right" : "TypeVariable<?> va = (TypeVariable<?>) a;",
    "info" : "VariableDeclarationStatement[7403-7444]:VariableDeclarationStatement[7403-7444]"
  }, {
    "left" : "TypeVariable<?> vb = (TypeVariable<?>) b;",
    "right" : "TypeVariable<?> vb = (TypeVariable<?>) b;",
    "info" : "VariableDeclarationStatement[7451-7492]:VariableDeclarationStatement[7451-7492]"
  }, {
    "left" : "return va.getGenericDeclaration() == vb.getGenericDeclaration()\n          && va.getName().equals(vb.getName());",
    "right" : "return va.getGenericDeclaration() == vb.getGenericDeclaration()\n          && va.getName().equals(vb.getName());",
    "info" : "ReturnStatement[7499-7610]:ReturnStatement[7499-7610]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7623-7740]:Block[7623-7740]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7721-7734]:ReturnStatement[7721-7734]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7748-7754]:Modifier[7748-7754]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[7755-7758]:PrimitiveType[7755-7758]"
  }, {
    "left" : "hashCodeOrZero",
    "right" : "hashCodeOrZero",
    "info" : "SimpleName[7759-7773]:SimpleName[7759-7773]"
  }, {
    "left" : "Object o",
    "right" : "Object o",
    "info" : "SingleVariableDeclaration[7774-7782]:SingleVariableDeclaration[7774-7782]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7784-7830]:Block[7784-7830]"
  }, {
    "left" : "return o != null ? o.hashCode() : 0;",
    "right" : "return o != null ? o.hashCode() : 0;",
    "info" : "ReturnStatement[7790-7826]:ReturnStatement[7790-7826]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7834-7840]:Modifier[7834-7840]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7841-7847]:Modifier[7841-7847]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[7848-7854]:SimpleType[7848-7854]"
  }, {
    "left" : "typeToString",
    "right" : "typeToString",
    "info" : "SimpleName[7855-7867]:SimpleName[7855-7867]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[7868-7877]:SingleVariableDeclaration[7868-7877]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7879-7966]:Block[7879-7966]"
  }, {
    "left" : "return type instanceof Class ? ((Class<?>) type).getName() : type.toString();",
    "right" : "return type instanceof Class ? ((Class<?>) type).getName() : type.toString();",
    "info" : "ReturnStatement[7885-7962]:ReturnStatement[7885-7962]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8266-8272]:Modifier[8266-8272]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[8273-8277]:SimpleType[8273-8277]"
  }, {
    "left" : "getGenericSupertype",
    "right" : "getGenericSupertype",
    "info" : "SimpleName[8278-8297]:SimpleName[8278-8297]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[8298-8310]:SingleVariableDeclaration[8298-8310]"
  }, {
    "left" : "Class<?> rawType",
    "right" : "Class<?> rawType",
    "info" : "SingleVariableDeclaration[8312-8328]:SingleVariableDeclaration[8312-8328]"
  }, {
    "left" : "Class<?> toResolve",
    "right" : "Class<?> toResolve",
    "info" : "SingleVariableDeclaration[8330-8348]:SingleVariableDeclaration[8330-8348]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8350-9451]:Block[8350-9451]"
  }, {
    "left" : "if (toResolve == rawType)",
    "right" : "if (toResolve == rawType)",
    "info" : "IfStatement[8356-8411]:IfStatement[8356-8411]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8382-8411]:Block[8382-8411]"
  }, {
    "left" : "return context;",
    "right" : "return context;",
    "info" : "ReturnStatement[8390-8405]:ReturnStatement[8390-8405]"
  }, {
    "left" : "if (toResolve.isInterface())",
    "right" : "if (toResolve.isInterface())",
    "info" : "IfStatement[8488-8923]:IfStatement[8488-8923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8517-8923]:Block[8517-8923]"
  }, {
    "left" : "Class<?>[] interfaces = rawType.getInterfaces();",
    "right" : "Class<?>[] interfaces = rawType.getInterfaces();",
    "info" : "VariableDeclarationStatement[8525-8573]:VariableDeclarationStatement[8525-8573]"
  }, {
    "left" : "for (int i = 0, length = interfaces.length; i < length; i++)",
    "right" : "for (int i = 0, length = interfaces.length; i < length; i++)",
    "info" : "ForStatement[8580-8917]:ForStatement[8580-8917]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8641-8917]:Block[8641-8917]"
  }, {
    "left" : "if (interfaces[i] == toResolve)",
    "right" : "if (interfaces[i] == toResolve)",
    "info" : "IfStatement[8651-8909]:IfStatement[8651-8909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8683-8746]:Block[8683-8746]"
  }, {
    "left" : "return rawType.getGenericInterfaces()[i];",
    "right" : "return rawType.getGenericInterfaces()[i];",
    "info" : "ReturnStatement[8695-8736]:ReturnStatement[8695-8736]"
  }, {
    "left" : "if (toResolve.isAssignableFrom(interfaces[i]))",
    "right" : "if (toResolve.isAssignableFrom(interfaces[i]))",
    "info" : "IfStatement[8752-8909]:IfStatement[8752-8909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8799-8909]:Block[8799-8909]"
  }, {
    "left" : "return getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);",
    "right" : "return getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);",
    "info" : "ReturnStatement[8811-8899]:ReturnStatement[8811-8899]"
  }, {
    "left" : "if (!rawType.isInterface())",
    "right" : "if (!rawType.isInterface())",
    "info" : "IfStatement[8957-9387]:IfStatement[8957-9387]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8985-9387]:Block[8985-9387]"
  }, {
    "left" : "while (rawType != Object.class)",
    "right" : "while (rawType != Object.class)",
    "info" : "WhileStatement[8993-9381]:WhileStatement[8993-9381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9025-9381]:Block[9025-9381]"
  }, {
    "left" : "Class<?> rawSupertype = rawType.getSuperclass();",
    "right" : "Class<?> rawSupertype = rawType.getSuperclass();",
    "info" : "VariableDeclarationStatement[9035-9083]:VariableDeclarationStatement[9035-9083]"
  }, {
    "left" : "if (rawSupertype == toResolve)",
    "right" : "if (rawSupertype == toResolve)",
    "info" : "IfStatement[9092-9341]:IfStatement[9092-9341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9123-9183]:Block[9123-9183]"
  }, {
    "left" : "return rawType.getGenericSuperclass();",
    "right" : "return rawType.getGenericSuperclass();",
    "info" : "ReturnStatement[9135-9173]:ReturnStatement[9135-9173]"
  }, {
    "left" : "if (toResolve.isAssignableFrom(rawSupertype))",
    "right" : "if (toResolve.isAssignableFrom(rawSupertype))",
    "info" : "IfStatement[9189-9341]:IfStatement[9189-9341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9235-9341]:Block[9235-9341]"
  }, {
    "left" : "return getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);",
    "right" : "return getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);",
    "info" : "ReturnStatement[9247-9331]:ReturnStatement[9247-9331]"
  }, {
    "left" : "rawType = rawSupertype;",
    "right" : "rawType = rawSupertype;",
    "info" : "ExpressionStatement[9350-9373]:ExpressionStatement[9350-9373]"
  }, {
    "left" : "return toResolve;",
    "right" : "return toResolve;",
    "info" : "ReturnStatement[9430-9447]:ReturnStatement[9430-9447]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9737-9743]:Modifier[9737-9743]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[9744-9748]:SimpleType[9744-9748]"
  }, {
    "left" : "getSupertype",
    "right" : "getSupertype",
    "info" : "SimpleName[9749-9761]:SimpleName[9749-9761]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[9762-9774]:SingleVariableDeclaration[9762-9774]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[9776-9799]:SingleVariableDeclaration[9776-9799]"
  }, {
    "left" : "Class<?> supertype",
    "right" : "Class<?> supertype",
    "info" : "SingleVariableDeclaration[9801-9819]:SingleVariableDeclaration[9801-9819]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9821-10011]:Block[9821-10011]"
  }, {
    "left" : "checkArgument(supertype.isAssignableFrom(contextRawType));",
    "right" : "checkArgument(supertype.isAssignableFrom(contextRawType));",
    "info" : "ExpressionStatement[9827-9885]:ExpressionStatement[9827-9885]"
  }, {
    "left" : "return resolve(context, contextRawType,\n        $Gson$Types.getGenericSupertype(context, contextRawType, supertype));",
    "right" : "return resolve(context, contextRawType,\n        $Gson$Types.getGenericSupertype(context, contextRawType, supertype));",
    "info" : "ReturnStatement[9890-10007]:ReturnStatement[9890-10007]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10141-10147]:Modifier[10141-10147]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10148-10154]:Modifier[10148-10154]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[10155-10159]:SimpleType[10155-10159]"
  }, {
    "left" : "getArrayComponentType",
    "right" : "getArrayComponentType",
    "info" : "SimpleName[10160-10181]:SimpleName[10160-10181]"
  }, {
    "left" : "Type array",
    "right" : "Type array",
    "info" : "SingleVariableDeclaration[10182-10192]:SingleVariableDeclaration[10182-10192]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10194-10356]:Block[10194-10356]"
  }, {
    "left" : "return array instanceof GenericArrayType\n        ? ((GenericArrayType) array).getGenericComponentType()\n        : ((Class<?>) array).getComponentType();",
    "right" : "return array instanceof GenericArrayType\n        ? ((GenericArrayType) array).getGenericComponentType()\n        : ((Class<?>) array).getComponentType();",
    "info" : "ReturnStatement[10200-10352]:ReturnStatement[10200-10352]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10499-10505]:Modifier[10499-10505]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10506-10512]:Modifier[10506-10512]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[10513-10517]:SimpleType[10513-10517]"
  }, {
    "left" : "getCollectionElementType",
    "right" : "getCollectionElementType",
    "info" : "SimpleName[10518-10542]:SimpleName[10518-10542]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[10543-10555]:SingleVariableDeclaration[10543-10555]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[10557-10580]:SingleVariableDeclaration[10557-10580]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10582-10967]:Block[10582-10967]"
  }, {
    "left" : "Type collectionType = getSupertype(context, contextRawType, Collection.class);",
    "right" : "Type collectionType = getSupertype(context, contextRawType, Collection.class);",
    "info" : "VariableDeclarationStatement[10588-10666]:VariableDeclarationStatement[10588-10666]"
  }, {
    "left" : "if (collectionType instanceof WildcardType)",
    "right" : "if (collectionType instanceof WildcardType)",
    "info" : "IfStatement[10672-10798]:IfStatement[10672-10798]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10716-10798]:Block[10716-10798]"
  }, {
    "left" : "collectionType = ((WildcardType)collectionType).getUpperBounds()[0];",
    "right" : "collectionType = ((WildcardType)collectionType).getUpperBounds()[0];",
    "info" : "ExpressionStatement[10724-10792]:ExpressionStatement[10724-10792]"
  }, {
    "left" : "if (collectionType instanceof ParameterizedType)",
    "right" : "if (collectionType instanceof ParameterizedType)",
    "info" : "IfStatement[10803-10938]:IfStatement[10803-10938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10852-10938]:Block[10852-10938]"
  }, {
    "left" : "return ((ParameterizedType) collectionType).getActualTypeArguments()[0];",
    "right" : "return ((ParameterizedType) collectionType).getActualTypeArguments()[0];",
    "info" : "ReturnStatement[10860-10932]:ReturnStatement[10860-10932]"
  }, {
    "left" : "return Object.class;",
    "right" : "return Object.class;",
    "info" : "ReturnStatement[10943-10963]:ReturnStatement[10943-10963]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11098-11104]:Modifier[11098-11104]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[11105-11111]:Modifier[11105-11111]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[11112-11118]:ArrayType[11112-11118]"
  }, {
    "left" : "getMapKeyAndValueTypes",
    "right" : "getMapKeyAndValueTypes",
    "info" : "SimpleName[11119-11141]:SimpleName[11119-11141]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[11142-11154]:SingleVariableDeclaration[11142-11154]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[11156-11179]:SingleVariableDeclaration[11156-11179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11181-11882]:Block[11181-11882]"
  }, {
    "left" : "if (context == Properties.class)",
    "right" : "if (context == Properties.class)",
    "info" : "IfStatement[11398-11534]:IfStatement[11398-11534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11431-11534]:Block[11431-11534]"
  }, {
    "left" : "return new Type[] { String.class, String.class };",
    "right" : "return new Type[] { String.class, String.class };",
    "info" : "ReturnStatement[11439-11488]:ReturnStatement[11439-11488]"
  }, {
    "left" : "Type mapType = getSupertype(context, contextRawType, Map.class);",
    "right" : "Type mapType = getSupertype(context, contextRawType, Map.class);",
    "info" : "VariableDeclarationStatement[11540-11604]:VariableDeclarationStatement[11540-11604]"
  }, {
    "left" : "if (mapType instanceof ParameterizedType)",
    "right" : "if (mapType instanceof ParameterizedType)",
    "info" : "IfStatement[11639-11824]:IfStatement[11639-11824]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11681-11824]:Block[11681-11824]"
  }, {
    "left" : "ParameterizedType mapParameterizedType = (ParameterizedType) mapType;",
    "right" : "ParameterizedType mapParameterizedType = (ParameterizedType) mapType;",
    "info" : "VariableDeclarationStatement[11689-11758]:VariableDeclarationStatement[11689-11758]"
  }, {
    "left" : "return mapParameterizedType.getActualTypeArguments();",
    "right" : "return mapParameterizedType.getActualTypeArguments();",
    "info" : "ReturnStatement[11765-11818]:ReturnStatement[11765-11818]"
  }, {
    "left" : "return new Type[] { Object.class, Object.class };",
    "right" : "return new Type[] { Object.class, Object.class };",
    "info" : "ReturnStatement[11829-11878]:ReturnStatement[11829-11878]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11886-11892]:Modifier[11886-11892]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[11893-11899]:Modifier[11893-11899]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[11900-11904]:SimpleType[11900-11904]"
  }, {
    "left" : "resolve",
    "right" : "resolve",
    "info" : "SimpleName[11905-11912]:SimpleName[11905-11912]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[11913-11925]:SingleVariableDeclaration[11913-11925]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[11927-11950]:SingleVariableDeclaration[11927-11950]"
  }, {
    "left" : "Type toResolve",
    "right" : "Type toResolve",
    "info" : "SingleVariableDeclaration[11952-11966]:SingleVariableDeclaration[11952-11966]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11968-12058]:Block[11968-12058]"
  }, {
    "left" : "return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable>());",
    "right" : "return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable>());",
    "info" : "ReturnStatement[11974-12054]:ReturnStatement[11974-12054]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[12062-12069]:Modifier[12062-12069]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12070-12076]:Modifier[12070-12076]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[12077-12081]:SimpleType[12077-12081]"
  }, {
    "left" : "resolve",
    "right" : "resolve",
    "info" : "SimpleName[12082-12089]:SimpleName[12082-12089]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[12090-12102]:SingleVariableDeclaration[12090-12102]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[12104-12127]:SingleVariableDeclaration[12104-12127]"
  }, {
    "left" : "Type toResolve",
    "right" : "Type toResolve",
    "info" : "SingleVariableDeclaration[12129-12143]:SingleVariableDeclaration[12129-12143]"
  }, {
    "left" : "Collection<TypeVariable> visitedTypeVariables",
    "right" : "Collection<TypeVariable> visitedTypeVariables",
    "info" : "SingleVariableDeclaration[12175-12220]:SingleVariableDeclaration[12175-12220]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12222-15256]:Block[12222-15420]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[12328-15252]:WhileStatement[12328-15416]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12341-15252]:Block[12341-15416]"
  }, {
    "left" : "if (toResolve instanceof TypeVariable)",
    "right" : "if (toResolve instanceof TypeVariable)",
    "info" : "IfStatement[12349-15246]:IfStatement[12349-15410]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12388-12678]:Block[12388-12842]"
  }, {
    "left" : "TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;",
    "right" : "TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;",
    "info" : "VariableDeclarationStatement[12398-12457]:VariableDeclarationStatement[12398-12457]"
  }, {
    "left" : "toResolve = resolveTypeVariable(context, contextRawType, typeVariable);",
    "right" : "toResolve = resolveTypeVariable(context, contextRawType, typeVariable);",
    "info" : "ExpressionStatement[12519-12590]:ExpressionStatement[12683-12754]"
  }, {
    "left" : "if (toResolve == typeVariable)",
    "right" : "if (toResolve == typeVariable)",
    "info" : "IfStatement[12599-12669]:IfStatement[12763-12833]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12630-12669]:Block[12794-12833]"
  }, {
    "left" : "return toResolve;",
    "right" : "return toResolve;",
    "info" : "ReturnStatement[12642-12659]:ReturnStatement[12806-12823]"
  }, {
    "left" : "if (toResolve instanceof Class && ((Class<?>) toResolve).isArray())",
    "right" : "if (toResolve instanceof Class && ((Class<?>) toResolve).isArray())",
    "info" : "IfStatement[12684-15246]:IfStatement[12848-15410]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12752-13086]:Block[12916-13250]"
  }, {
    "left" : "Class<?> original = (Class<?>) toResolve;",
    "right" : "Class<?> original = (Class<?>) toResolve;",
    "info" : "VariableDeclarationStatement[12762-12803]:VariableDeclarationStatement[12926-12967]"
  }, {
    "left" : "Type componentType = original.getComponentType();",
    "right" : "Type componentType = original.getComponentType();",
    "info" : "VariableDeclarationStatement[12812-12861]:VariableDeclarationStatement[12976-13025]"
  }, {
    "left" : "Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);",
    "right" : "Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[12870-12964]:VariableDeclarationStatement[13034-13128]"
  }, {
    "left" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "right" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "info" : "ReturnStatement[12973-13077]:ReturnStatement[13137-13241]"
  }, {
    "left" : "if (toResolve instanceof GenericArrayType)",
    "right" : "if (toResolve instanceof GenericArrayType)",
    "info" : "IfStatement[13092-15246]:IfStatement[13256-15410]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13135-13492]:Block[13299-13656]"
  }, {
    "left" : "GenericArrayType original = (GenericArrayType) toResolve;",
    "right" : "GenericArrayType original = (GenericArrayType) toResolve;",
    "info" : "VariableDeclarationStatement[13145-13202]:VariableDeclarationStatement[13309-13366]"
  }, {
    "left" : "Type componentType = original.getGenericComponentType();",
    "right" : "Type componentType = original.getGenericComponentType();",
    "info" : "VariableDeclarationStatement[13211-13267]:VariableDeclarationStatement[13375-13431]"
  }, {
    "left" : "Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);",
    "right" : "Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[13276-13370]:VariableDeclarationStatement[13440-13534]"
  }, {
    "left" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "right" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "info" : "ReturnStatement[13379-13483]:ReturnStatement[13543-13647]"
  }, {
    "left" : "if (toResolve instanceof ParameterizedType)",
    "right" : "if (toResolve instanceof ParameterizedType)",
    "info" : "IfStatement[13498-15246]:IfStatement[13662-15410]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13542-14401]:Block[13706-14565]"
  }, {
    "left" : "ParameterizedType original = (ParameterizedType) toResolve;",
    "right" : "ParameterizedType original = (ParameterizedType) toResolve;",
    "info" : "VariableDeclarationStatement[13552-13611]:VariableDeclarationStatement[13716-13775]"
  }, {
    "left" : "Type ownerType = original.getOwnerType();",
    "right" : "Type ownerType = original.getOwnerType();",
    "info" : "VariableDeclarationStatement[13620-13661]:VariableDeclarationStatement[13784-13825]"
  }, {
    "left" : "Type newOwnerType = resolve(context, contextRawType, ownerType, visitedTypeVariables);",
    "right" : "Type newOwnerType = resolve(context, contextRawType, ownerType, visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[13670-13756]:VariableDeclarationStatement[13834-13920]"
  }, {
    "left" : "boolean changed = newOwnerType != ownerType;",
    "right" : "boolean changed = newOwnerType != ownerType;",
    "info" : "VariableDeclarationStatement[13765-13809]:VariableDeclarationStatement[13929-13973]"
  }, {
    "left" : "Type[] args = original.getActualTypeArguments();",
    "right" : "Type[] args = original.getActualTypeArguments();",
    "info" : "VariableDeclarationStatement[13819-13867]:VariableDeclarationStatement[13983-14031]"
  }, {
    "left" : "for (int t = 0, length = args.length; t < length; t++)",
    "right" : "for (int t = 0, length = args.length; t < length; t++)",
    "info" : "ForStatement[13876-14257]:ForStatement[14040-14421]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13931-14257]:Block[14095-14421]"
  }, {
    "left" : "Type resolvedTypeArgument = resolve(context, contextRawType, args[t], visitedTypeVariables);",
    "right" : "Type resolvedTypeArgument = resolve(context, contextRawType, args[t], visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[13943-14035]:VariableDeclarationStatement[14107-14199]"
  }, {
    "left" : "if (resolvedTypeArgument != args[t])",
    "right" : "if (resolvedTypeArgument != args[t])",
    "info" : "IfStatement[14046-14247]:IfStatement[14210-14411]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14083-14247]:Block[14247-14411]"
  }, {
    "left" : "if (!changed)",
    "right" : "if (!changed)",
    "info" : "IfStatement[14097-14191]:IfStatement[14261-14355]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14111-14191]:Block[14275-14355]"
  }, {
    "left" : "args = args.clone();",
    "right" : "args = args.clone();",
    "info" : "ExpressionStatement[14127-14147]:ExpressionStatement[14291-14311]"
  }, {
    "left" : "changed = true;",
    "right" : "changed = true;",
    "info" : "ExpressionStatement[14162-14177]:ExpressionStatement[14326-14341]"
  }, {
    "left" : "args[t] = resolvedTypeArgument;",
    "right" : "args[t] = resolvedTypeArgument;",
    "info" : "ExpressionStatement[14204-14235]:ExpressionStatement[14368-14399]"
  }, {
    "left" : "return changed\n            ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)\n            : original;",
    "right" : "return changed\n            ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)\n            : original;",
    "info" : "ReturnStatement[14267-14392]:ReturnStatement[14431-14556]"
  }, {
    "left" : "if (toResolve instanceof WildcardType)",
    "right" : "if (toResolve instanceof WildcardType)",
    "info" : "IfStatement[14407-15246]:IfStatement[14571-15410]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14446-15205]:Block[14610-15369]"
  }, {
    "left" : "WildcardType original = (WildcardType) toResolve;",
    "right" : "WildcardType original = (WildcardType) toResolve;",
    "info" : "VariableDeclarationStatement[14456-14505]:VariableDeclarationStatement[14620-14669]"
  }, {
    "left" : "Type[] originalLowerBound = original.getLowerBounds();",
    "right" : "Type[] originalLowerBound = original.getLowerBounds();",
    "info" : "VariableDeclarationStatement[14514-14568]:VariableDeclarationStatement[14678-14732]"
  }, {
    "left" : "Type[] originalUpperBound = original.getUpperBounds();",
    "right" : "Type[] originalUpperBound = original.getUpperBounds();",
    "info" : "VariableDeclarationStatement[14577-14631]:VariableDeclarationStatement[14741-14795]"
  }, {
    "left" : "if (originalLowerBound.length == 1)",
    "right" : "if (originalLowerBound.length == 1)",
    "info" : "IfStatement[14641-15171]:IfStatement[14805-15335]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14677-14904]:Block[14841-15068]"
  }, {
    "left" : "Type lowerBound = resolve(context, contextRawType, originalLowerBound[0], visitedTypeVariables);",
    "right" : "Type lowerBound = resolve(context, contextRawType, originalLowerBound[0], visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[14689-14785]:VariableDeclarationStatement[14853-14949]"
  }, {
    "left" : "if (lowerBound != originalLowerBound[0])",
    "right" : "if (lowerBound != originalLowerBound[0])",
    "info" : "IfStatement[14796-14894]:IfStatement[14960-15058]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14837-14894]:Block[15001-15058]"
  }, {
    "left" : "return supertypeOf(lowerBound);",
    "right" : "return supertypeOf(lowerBound);",
    "info" : "ReturnStatement[14851-14882]:ReturnStatement[15015-15046]"
  }, {
    "left" : "if (originalUpperBound.length == 1)",
    "right" : "if (originalUpperBound.length == 1)",
    "info" : "IfStatement[14910-15171]:IfStatement[15074-15335]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14946-15171]:Block[15110-15335]"
  }, {
    "left" : "Type upperBound = resolve(context, contextRawType, originalUpperBound[0], visitedTypeVariables);",
    "right" : "Type upperBound = resolve(context, contextRawType, originalUpperBound[0], visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[14958-15054]:VariableDeclarationStatement[15122-15218]"
  }, {
    "left" : "if (upperBound != originalUpperBound[0])",
    "right" : "if (upperBound != originalUpperBound[0])",
    "info" : "IfStatement[15065-15161]:IfStatement[15229-15325]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15106-15161]:Block[15270-15325]"
  }, {
    "left" : "return subtypeOf(upperBound);",
    "right" : "return subtypeOf(upperBound);",
    "info" : "ReturnStatement[15120-15149]:ReturnStatement[15284-15313]"
  }, {
    "left" : "return original;",
    "right" : "return original;",
    "info" : "ReturnStatement[15180-15196]:ReturnStatement[15344-15360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15211-15246]:Block[15375-15410]"
  }, {
    "left" : "return toResolve;",
    "right" : "return toResolve;",
    "info" : "ReturnStatement[15221-15238]:ReturnStatement[15385-15402]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15260-15266]:Modifier[15424-15430]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[15267-15271]:SimpleType[15431-15435]"
  }, {
    "left" : "resolveTypeVariable",
    "right" : "resolveTypeVariable",
    "info" : "SimpleName[15272-15291]:SimpleName[15436-15455]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[15292-15304]:SingleVariableDeclaration[15456-15468]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[15306-15329]:SingleVariableDeclaration[15470-15493]"
  }, {
    "left" : "TypeVariable<?> unknown",
    "right" : "TypeVariable<?> unknown",
    "info" : "SingleVariableDeclaration[15331-15354]:SingleVariableDeclaration[15495-15518]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15356-15827]:Block[15520-15991]"
  }, {
    "left" : "Class<?> declaredByRaw = declaringClassOf(unknown);",
    "right" : "Class<?> declaredByRaw = declaringClassOf(unknown);",
    "info" : "VariableDeclarationStatement[15362-15413]:VariableDeclarationStatement[15526-15577]"
  }, {
    "left" : "if (declaredByRaw == null)",
    "right" : "if (declaredByRaw == null)",
    "info" : "IfStatement[15455-15511]:IfStatement[15619-15675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15482-15511]:Block[15646-15675]"
  }, {
    "left" : "return unknown;",
    "right" : "return unknown;",
    "info" : "ReturnStatement[15490-15505]:ReturnStatement[15654-15669]"
  }, {
    "left" : "Type declaredBy = getGenericSupertype(context, contextRawType, declaredByRaw);",
    "right" : "Type declaredBy = getGenericSupertype(context, contextRawType, declaredByRaw);",
    "info" : "VariableDeclarationStatement[15517-15595]:VariableDeclarationStatement[15681-15759]"
  }, {
    "left" : "if (declaredBy instanceof ParameterizedType)",
    "right" : "if (declaredBy instanceof ParameterizedType)",
    "info" : "IfStatement[15600-15802]:IfStatement[15764-15966]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15645-15802]:Block[15809-15966]"
  }, {
    "left" : "int index = indexOf(declaredByRaw.getTypeParameters(), unknown);",
    "right" : "int index = indexOf(declaredByRaw.getTypeParameters(), unknown);",
    "info" : "VariableDeclarationStatement[15653-15717]:VariableDeclarationStatement[15817-15881]"
  }, {
    "left" : "return ((ParameterizedType) declaredBy).getActualTypeArguments()[index];",
    "right" : "return ((ParameterizedType) declaredBy).getActualTypeArguments()[index];",
    "info" : "ReturnStatement[15724-15796]:ReturnStatement[15888-15960]"
  }, {
    "left" : "return unknown;",
    "right" : "return unknown;",
    "info" : "ReturnStatement[15808-15823]:ReturnStatement[15972-15987]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[15831-15838]:Modifier[15995-16002]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15839-15845]:Modifier[16003-16009]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[15846-15849]:PrimitiveType[16010-16013]"
  }, {
    "left" : "indexOf",
    "right" : "indexOf",
    "info" : "SimpleName[15850-15857]:SimpleName[16014-16021]"
  }, {
    "left" : "Object[] array",
    "right" : "Object[] array",
    "info" : "SingleVariableDeclaration[15858-15872]:SingleVariableDeclaration[16022-16036]"
  }, {
    "left" : "Object toFind",
    "right" : "Object toFind",
    "info" : "SingleVariableDeclaration[15874-15887]:SingleVariableDeclaration[16038-16051]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15889-16065]:Block[16053-16229]"
  }, {
    "left" : "for (int i = 0, length = array.length; i < length; i++)",
    "right" : "for (int i = 0, length = array.length; i < length; i++)",
    "info" : "ForStatement[15895-16021]:ForStatement[16059-16185]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15951-16021]:Block[16115-16185]"
  }, {
    "left" : "if (toFind.equals(array[i]))",
    "right" : "if (toFind.equals(array[i]))",
    "info" : "IfStatement[15959-16015]:IfStatement[16123-16179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15988-16015]:Block[16152-16179]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[15998-16007]:ReturnStatement[16162-16171]"
  }, {
    "left" : "throw new NoSuchElementException();",
    "right" : "throw new NoSuchElementException();",
    "info" : "ThrowStatement[16026-16061]:ThrowStatement[16190-16225]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16195-16202]:Modifier[16359-16366]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16203-16209]:Modifier[16367-16373]"
  }, {
    "left" : "Class<?>",
    "right" : "Class<?>",
    "info" : "ParameterizedType[16210-16218]:ParameterizedType[16374-16382]"
  }, {
    "left" : "declaringClassOf",
    "right" : "declaringClassOf",
    "info" : "SimpleName[16219-16235]:SimpleName[16383-16399]"
  }, {
    "left" : "TypeVariable<?> typeVariable",
    "right" : "TypeVariable<?> typeVariable",
    "info" : "SingleVariableDeclaration[16236-16264]:SingleVariableDeclaration[16400-16428]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16266-16456]:Block[16430-16620]"
  }, {
    "left" : "GenericDeclaration genericDeclaration = typeVariable.getGenericDeclaration();",
    "right" : "GenericDeclaration genericDeclaration = typeVariable.getGenericDeclaration();",
    "info" : "VariableDeclarationStatement[16272-16349]:VariableDeclarationStatement[16436-16513]"
  }, {
    "left" : "return genericDeclaration instanceof Class\n        ? (Class<?>) genericDeclaration\n        : null;",
    "right" : "return genericDeclaration instanceof Class\n        ? (Class<?>) genericDeclaration\n        : null;",
    "info" : "ReturnStatement[16354-16452]:ReturnStatement[16518-16616]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16460-16466]:Modifier[16624-16630]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16467-16471]:PrimitiveType[16631-16635]"
  }, {
    "left" : "checkNotPrimitive",
    "right" : "checkNotPrimitive",
    "info" : "SimpleName[16472-16489]:SimpleName[16636-16653]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[16490-16499]:SingleVariableDeclaration[16654-16663]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16501-16590]:Block[16665-16754]"
  }, {
    "left" : "checkArgument(!(type instanceof Class<?>) || !((Class<?>) type).isPrimitive());",
    "right" : "checkArgument(!(type instanceof Class<?>) || !((Class<?>) type).isPrimitive());",
    "info" : "ExpressionStatement[16507-16586]:ExpressionStatement[16671-16750]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16594-16601]:Modifier[16758-16765]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16602-16608]:Modifier[16766-16772]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[16609-16614]:Modifier[16773-16778]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[16615-16620]:TYPE_DECLARATION_KIND[16779-16784]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16799-16805]:Modifier[16963-16969]"
  }, {
    "left" : "ParameterizedTypeImpl",
    "right" : "ParameterizedTypeImpl",
    "info" : "SimpleName[16806-16827]:SimpleName[16970-16991]"
  }, {
    "left" : "Type ownerType",
    "right" : "Type ownerType",
    "info" : "SingleVariableDeclaration[16828-16842]:SingleVariableDeclaration[16992-17006]"
  }, {
    "left" : "Type rawType",
    "right" : "Type rawType",
    "info" : "SingleVariableDeclaration[16844-16856]:SingleVariableDeclaration[17008-17020]"
  }, {
    "left" : "Type... typeArguments",
    "right" : "Type... typeArguments",
    "info" : "SingleVariableDeclaration[16858-16879]:SingleVariableDeclaration[17022-17043]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16881-17685]:Block[17045-17849]"
  }, {
    "left" : "if (rawType instanceof Class<?>)",
    "right" : "if (rawType instanceof Class<?>)",
    "info" : "IfStatement[16945-17260]:IfStatement[17109-17424]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16978-17260]:Block[17142-17424]"
  }, {
    "left" : "Class<?> rawTypeAsClass = (Class<?>) rawType;",
    "right" : "Class<?> rawTypeAsClass = (Class<?>) rawType;",
    "info" : "VariableDeclarationStatement[16988-17033]:VariableDeclarationStatement[17152-17197]"
  }, {
    "left" : "boolean isStaticOrTopLevelClass = Modifier.isStatic(rawTypeAsClass.getModifiers())\n            || rawTypeAsClass.getEnclosingClass() == null;",
    "right" : "boolean isStaticOrTopLevelClass = Modifier.isStatic(rawTypeAsClass.getModifiers())\n            || rawTypeAsClass.getEnclosingClass() == null;",
    "info" : "VariableDeclarationStatement[17042-17183]:VariableDeclarationStatement[17206-17347]"
  }, {
    "left" : "checkArgument(ownerType != null || isStaticOrTopLevelClass);",
    "right" : "checkArgument(ownerType != null || isStaticOrTopLevelClass);",
    "info" : "ExpressionStatement[17192-17252]:ExpressionStatement[17356-17416]"
  }, {
    "left" : "this.ownerType = ownerType == null ? null : canonicalize(ownerType);",
    "right" : "this.ownerType = ownerType == null ? null : canonicalize(ownerType);",
    "info" : "ExpressionStatement[17268-17336]:ExpressionStatement[17432-17500]"
  }, {
    "left" : "this.rawType = canonicalize(rawType);",
    "right" : "this.rawType = canonicalize(rawType);",
    "info" : "ExpressionStatement[17343-17380]:ExpressionStatement[17507-17544]"
  }, {
    "left" : "this.typeArguments = typeArguments.clone();",
    "right" : "this.typeArguments = typeArguments.clone();",
    "info" : "ExpressionStatement[17387-17430]:ExpressionStatement[17551-17594]"
  }, {
    "left" : "for (int t = 0, length = this.typeArguments.length; t < length; t++)",
    "right" : "for (int t = 0, length = this.typeArguments.length; t < length; t++)",
    "info" : "ForStatement[17437-17679]:ForStatement[17601-17843]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17506-17679]:Block[17670-17843]"
  }, {
    "left" : "checkNotNull(this.typeArguments[t]);",
    "right" : "checkNotNull(this.typeArguments[t]);",
    "info" : "ExpressionStatement[17516-17552]:ExpressionStatement[17680-17716]"
  }, {
    "left" : "checkNotPrimitive(this.typeArguments[t]);",
    "right" : "checkNotPrimitive(this.typeArguments[t]);",
    "info" : "ExpressionStatement[17561-17602]:ExpressionStatement[17725-17766]"
  }, {
    "left" : "this.typeArguments[t] = canonicalize(this.typeArguments[t]);",
    "right" : "this.typeArguments[t] = canonicalize(this.typeArguments[t]);",
    "info" : "ExpressionStatement[17611-17671]:ExpressionStatement[17775-17835]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17691-17697]:Modifier[17855-17861]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[17698-17704]:ArrayType[17862-17868]"
  }, {
    "left" : "getActualTypeArguments",
    "right" : "getActualTypeArguments",
    "info" : "SimpleName[17705-17727]:SimpleName[17869-17891]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17730-17773]:Block[17894-17937]"
  }, {
    "left" : "return typeArguments.clone();",
    "right" : "return typeArguments.clone();",
    "info" : "ReturnStatement[17738-17767]:ReturnStatement[17902-17931]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17779-17785]:Modifier[17943-17949]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[17786-17790]:SimpleType[17950-17954]"
  }, {
    "left" : "getRawType",
    "right" : "getRawType",
    "info" : "SimpleName[17791-17801]:SimpleName[17955-17965]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17804-17833]:Block[17968-17997]"
  }, {
    "left" : "return rawType;",
    "right" : "return rawType;",
    "info" : "ReturnStatement[17812-17827]:ReturnStatement[17976-17991]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17839-17845]:Modifier[18003-18009]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[17846-17850]:SimpleType[18010-18014]"
  }, {
    "left" : "getOwnerType",
    "right" : "getOwnerType",
    "info" : "SimpleName[17851-17863]:SimpleName[18015-18027]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17866-17897]:Block[18030-18061]"
  }, {
    "left" : "return ownerType;",
    "right" : "return ownerType;",
    "info" : "ReturnStatement[17874-17891]:ReturnStatement[18038-18055]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[17903-17912]:MarkerAnnotation[18067-18076]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17913-17919]:Modifier[18077-18083]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[17920-17927]:PrimitiveType[18084-18091]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[17928-17934]:SimpleName[18092-18098]"
  }, {
    "left" : "Object other",
    "right" : "Object other",
    "info" : "SingleVariableDeclaration[17935-17947]:SingleVariableDeclaration[18099-18111]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17949-18070]:Block[18113-18234]"
  }, {
    "left" : "return other instanceof ParameterizedType\n          && $Gson$Types.equals(this, (ParameterizedType) other);",
    "right" : "return other instanceof ParameterizedType\n          && $Gson$Types.equals(this, (ParameterizedType) other);",
    "info" : "ReturnStatement[17957-18064]:ReturnStatement[18121-18228]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18076-18085]:MarkerAnnotation[18240-18249]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18086-18092]:Modifier[18250-18256]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[18093-18096]:PrimitiveType[18257-18260]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[18097-18105]:SimpleName[18261-18269]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18108-18229]:Block[18272-18393]"
  }, {
    "left" : "return Arrays.hashCode(typeArguments)\n          ^ rawType.hashCode()\n          ^ hashCodeOrZero(ownerType);",
    "right" : "return Arrays.hashCode(typeArguments)\n          ^ rawType.hashCode()\n          ^ hashCodeOrZero(ownerType);",
    "info" : "ReturnStatement[18116-18223]:ReturnStatement[18280-18387]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18235-18244]:MarkerAnnotation[18399-18408]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18245-18251]:Modifier[18409-18415]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[18252-18258]:SimpleType[18416-18422]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[18259-18267]:SimpleName[18423-18431]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18270-18741]:Block[18434-18905]"
  }, {
    "left" : "int length = typeArguments.length;",
    "right" : "int length = typeArguments.length;",
    "info" : "VariableDeclarationStatement[18278-18312]:VariableDeclarationStatement[18442-18476]"
  }, {
    "left" : "if (length == 0)",
    "right" : "if (length == 0)",
    "info" : "IfStatement[18319-18383]:IfStatement[18483-18547]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18336-18383]:Block[18500-18547]"
  }, {
    "left" : "return typeToString(rawType);",
    "right" : "return typeToString(rawType);",
    "info" : "ReturnStatement[18346-18375]:ReturnStatement[18510-18539]"
  }, {
    "left" : "StringBuilder stringBuilder = new StringBuilder(30 * (length + 1));",
    "right" : "StringBuilder stringBuilder = new StringBuilder(30 * (length + 1));",
    "info" : "VariableDeclarationStatement[18391-18458]:VariableDeclarationStatement[18555-18622]"
  }, {
    "left" : "stringBuilder.append(typeToString(rawType)).append(\"<\").append(typeToString(typeArguments[0]));",
    "right" : "stringBuilder.append(typeToString(rawType)).append(\"<\").append(typeToString(typeArguments[0]));",
    "info" : "ExpressionStatement[18465-18560]:ExpressionStatement[18629-18724]"
  }, {
    "left" : "for (int i = 1; i < length; i++)",
    "right" : "for (int i = 1; i < length; i++)",
    "info" : "ForStatement[18567-18684]:ForStatement[18731-18848]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18600-18684]:Block[18764-18848]"
  }, {
    "left" : "stringBuilder.append(\", \").append(typeToString(typeArguments[i]));",
    "right" : "stringBuilder.append(\", \").append(typeToString(typeArguments[i]));",
    "info" : "ExpressionStatement[18610-18676]:ExpressionStatement[18774-18840]"
  }, {
    "left" : "return stringBuilder.append(\">\").toString();",
    "right" : "return stringBuilder.append(\">\").toString();",
    "info" : "ReturnStatement[18691-18735]:ReturnStatement[18855-18899]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[18802-18809]:Modifier[18966-18973]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[18810-18816]:Modifier[18974-18980]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[18817-18822]:Modifier[18981-18986]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[18823-18828]:TYPE_DECLARATION_KIND[18987-18992]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18937-18943]:Modifier[19101-19107]"
  }, {
    "left" : "GenericArrayTypeImpl",
    "right" : "GenericArrayTypeImpl",
    "info" : "SimpleName[18944-18964]:SimpleName[19108-19128]"
  }, {
    "left" : "Type componentType",
    "right" : "Type componentType",
    "info" : "SingleVariableDeclaration[18965-18983]:SingleVariableDeclaration[19129-19147]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18985-19048]:Block[19149-19212]"
  }, {
    "left" : "this.componentType = canonicalize(componentType);",
    "right" : "this.componentType = canonicalize(componentType);",
    "info" : "ExpressionStatement[18993-19042]:ExpressionStatement[19157-19206]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19054-19060]:Modifier[19218-19224]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[19061-19065]:SimpleType[19225-19229]"
  }, {
    "left" : "getGenericComponentType",
    "right" : "getGenericComponentType",
    "info" : "SimpleName[19066-19089]:SimpleName[19230-19253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19092-19127]:Block[19256-19291]"
  }, {
    "left" : "return componentType;",
    "right" : "return componentType;",
    "info" : "ReturnStatement[19100-19121]:ReturnStatement[19264-19285]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[19133-19142]:MarkerAnnotation[19297-19306]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19143-19149]:Modifier[19307-19313]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[19150-19157]:PrimitiveType[19314-19321]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[19158-19164]:SimpleName[19322-19328]"
  }, {
    "left" : "Object o",
    "right" : "Object o",
    "info" : "SingleVariableDeclaration[19165-19173]:SingleVariableDeclaration[19329-19337]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19175-19286]:Block[19339-19450]"
  }, {
    "left" : "return o instanceof GenericArrayType\n          && $Gson$Types.equals(this, (GenericArrayType) o);",
    "right" : "return o instanceof GenericArrayType\n          && $Gson$Types.equals(this, (GenericArrayType) o);",
    "info" : "ReturnStatement[19183-19280]:ReturnStatement[19347-19444]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[19292-19301]:MarkerAnnotation[19456-19465]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19302-19308]:Modifier[19466-19472]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[19309-19312]:PrimitiveType[19473-19476]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[19313-19321]:SimpleName[19477-19485]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19324-19370]:Block[19488-19534]"
  }, {
    "left" : "return componentType.hashCode();",
    "right" : "return componentType.hashCode();",
    "info" : "ReturnStatement[19332-19364]:ReturnStatement[19496-19528]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[19376-19385]:MarkerAnnotation[19540-19549]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19386-19392]:Modifier[19550-19556]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[19393-19399]:SimpleType[19557-19563]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[19400-19408]:SimpleName[19564-19572]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19411-19467]:Block[19575-19631]"
  }, {
    "left" : "return typeToString(componentType) + \"[]\";",
    "right" : "return typeToString(componentType) + \"[]\";",
    "info" : "ReturnStatement[19419-19461]:ReturnStatement[19583-19625]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[19771-19778]:Modifier[19935-19942]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[19779-19785]:Modifier[19943-19949]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[19786-19791]:Modifier[19950-19955]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[19792-19797]:TYPE_DECLARATION_KIND[19956-19961]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19930-19936]:Modifier[20094-20100]"
  }, {
    "left" : "WildcardTypeImpl",
    "right" : "WildcardTypeImpl",
    "info" : "SimpleName[19937-19953]:SimpleName[20101-20117]"
  }, {
    "left" : "Type[] upperBounds",
    "right" : "Type[] upperBounds",
    "info" : "SingleVariableDeclaration[19954-19972]:SingleVariableDeclaration[20118-20136]"
  }, {
    "left" : "Type[] lowerBounds",
    "right" : "Type[] lowerBounds",
    "info" : "SingleVariableDeclaration[19974-19992]:SingleVariableDeclaration[20138-20156]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19994-20556]:Block[20158-20720]"
  }, {
    "left" : "checkArgument(lowerBounds.length <= 1);",
    "right" : "checkArgument(lowerBounds.length <= 1);",
    "info" : "ExpressionStatement[20002-20041]:ExpressionStatement[20166-20205]"
  }, {
    "left" : "checkArgument(upperBounds.length == 1);",
    "right" : "checkArgument(upperBounds.length == 1);",
    "info" : "ExpressionStatement[20048-20087]:ExpressionStatement[20212-20251]"
  }, {
    "left" : "if (lowerBounds.length == 1)",
    "right" : "if (lowerBounds.length == 1)",
    "info" : "IfStatement[20095-20550]:IfStatement[20259-20714]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20124-20366]:Block[20288-20530]"
  }, {
    "left" : "checkNotNull(lowerBounds[0]);",
    "right" : "checkNotNull(lowerBounds[0]);",
    "info" : "ExpressionStatement[20134-20163]:ExpressionStatement[20298-20327]"
  }, {
    "left" : "checkNotPrimitive(lowerBounds[0]);",
    "right" : "checkNotPrimitive(lowerBounds[0]);",
    "info" : "ExpressionStatement[20172-20206]:ExpressionStatement[20336-20370]"
  }, {
    "left" : "checkArgument(upperBounds[0] == Object.class);",
    "right" : "checkArgument(upperBounds[0] == Object.class);",
    "info" : "ExpressionStatement[20215-20261]:ExpressionStatement[20379-20425]"
  }, {
    "left" : "this.lowerBound = canonicalize(lowerBounds[0]);",
    "right" : "this.lowerBound = canonicalize(lowerBounds[0]);",
    "info" : "ExpressionStatement[20270-20317]:ExpressionStatement[20434-20481]"
  }, {
    "left" : "this.upperBound = Object.class;",
    "right" : "this.upperBound = Object.class;",
    "info" : "ExpressionStatement[20326-20357]:ExpressionStatement[20490-20521]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20372-20550]:Block[20536-20714]"
  }, {
    "left" : "checkNotNull(upperBounds[0]);",
    "right" : "checkNotNull(upperBounds[0]);",
    "info" : "ExpressionStatement[20382-20411]:ExpressionStatement[20546-20575]"
  }, {
    "left" : "checkNotPrimitive(upperBounds[0]);",
    "right" : "checkNotPrimitive(upperBounds[0]);",
    "info" : "ExpressionStatement[20420-20454]:ExpressionStatement[20584-20618]"
  }, {
    "left" : "this.lowerBound = null;",
    "right" : "this.lowerBound = null;",
    "info" : "ExpressionStatement[20463-20486]:ExpressionStatement[20627-20650]"
  }, {
    "left" : "this.upperBound = canonicalize(upperBounds[0]);",
    "right" : "this.upperBound = canonicalize(upperBounds[0]);",
    "info" : "ExpressionStatement[20495-20542]:ExpressionStatement[20659-20706]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20562-20568]:Modifier[20726-20732]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[20569-20575]:ArrayType[20733-20739]"
  }, {
    "left" : "getUpperBounds",
    "right" : "getUpperBounds",
    "info" : "SimpleName[20576-20590]:SimpleName[20740-20754]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20593-20640]:Block[20757-20804]"
  }, {
    "left" : "return new Type[] { upperBound };",
    "right" : "return new Type[] { upperBound };",
    "info" : "ReturnStatement[20601-20634]:ReturnStatement[20765-20798]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20646-20652]:Modifier[20810-20816]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[20653-20659]:ArrayType[20817-20823]"
  }, {
    "left" : "getLowerBounds",
    "right" : "getLowerBounds",
    "info" : "SimpleName[20660-20674]:SimpleName[20824-20838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20677-20764]:Block[20841-20928]"
  }, {
    "left" : "return lowerBound != null ? new Type[] { lowerBound } : EMPTY_TYPE_ARRAY;",
    "right" : "return lowerBound != null ? new Type[] { lowerBound } : EMPTY_TYPE_ARRAY;",
    "info" : "ReturnStatement[20685-20758]:ReturnStatement[20849-20922]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[20770-20779]:MarkerAnnotation[20934-20943]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20780-20786]:Modifier[20944-20950]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[20787-20794]:PrimitiveType[20951-20958]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[20795-20801]:SimpleName[20959-20965]"
  }, {
    "left" : "Object other",
    "right" : "Object other",
    "info" : "SingleVariableDeclaration[20802-20814]:SingleVariableDeclaration[20966-20978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20816-20927]:Block[20980-21091]"
  }, {
    "left" : "return other instanceof WildcardType\n          && $Gson$Types.equals(this, (WildcardType) other);",
    "right" : "return other instanceof WildcardType\n          && $Gson$Types.equals(this, (WildcardType) other);",
    "info" : "ReturnStatement[20824-20921]:ReturnStatement[20988-21085]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[20933-20942]:MarkerAnnotation[21097-21106]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20943-20949]:Modifier[21107-21113]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[20950-20953]:PrimitiveType[21114-21117]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[20954-20962]:SimpleName[21118-21126]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20965-21173]:Block[21129-21337]"
  }, {
    "left" : "return (lowerBound != null ? 31 + lowerBound.hashCode() : 1)\n          ^ (31 + upperBound.hashCode());",
    "right" : "return (lowerBound != null ? 31 + lowerBound.hashCode() : 1)\n          ^ (31 + upperBound.hashCode());",
    "info" : "ReturnStatement[21065-21167]:ReturnStatement[21229-21331]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[21179-21188]:MarkerAnnotation[21343-21352]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21189-21195]:Modifier[21353-21359]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[21196-21202]:SimpleType[21360-21366]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[21203-21211]:SimpleName[21367-21375]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21214-21453]:Block[21378-21617]"
  }, {
    "left" : "if (lowerBound != null)",
    "right" : "if (lowerBound != null)",
    "info" : "IfStatement[21222-21447]:IfStatement[21386-21611]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21246-21309]:Block[21410-21473]"
  }, {
    "left" : "return \"? super \" + typeToString(lowerBound);",
    "right" : "return \"? super \" + typeToString(lowerBound);",
    "info" : "ReturnStatement[21256-21301]:ReturnStatement[21420-21465]"
  }, {
    "left" : "if (upperBound == Object.class)",
    "right" : "if (upperBound == Object.class)",
    "info" : "IfStatement[21315-21447]:IfStatement[21479-21611]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21347-21376]:Block[21511-21540]"
  }, {
    "left" : "return \"?\";",
    "right" : "return \"?\";",
    "info" : "ReturnStatement[21357-21368]:ReturnStatement[21521-21532]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21382-21447]:Block[21546-21611]"
  }, {
    "left" : "return \"? extends \" + typeToString(upperBound);",
    "right" : "return \"? extends \" + typeToString(upperBound);",
    "info" : "ReturnStatement[21392-21439]:ReturnStatement[21556-21603]"
  } ]
}