{
  "matchedElements" : [
 {
    "left" : "class : BeanDeserializerFactory",
    "right" : "class : BeanDeserializerFactory",
    "info" : "TypeDeclaration[847-38378]:TypeDeclaration[847-38543]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[1498-1545]:FieldDeclaration[1498-1545]"
  }, {
    "left" : "INIT_CAUSE_PARAMS",
    "right" : "INIT_CAUSE_PARAMS",
    "info" : "FieldDeclaration[1551-1709]:FieldDeclaration[1551-1709]"
  }, {
    "left" : "NO_VIEWS",
    "right" : "NO_VIEWS",
    "info" : "FieldDeclaration[1715-1774]:FieldDeclaration[1715-1774]"
  }, {
    "left" : "instance",
    "right" : "instance",
    "info" : "FieldDeclaration[1950-2205]:FieldDeclaration[1950-2205]"
  }, {
    "left" : "public BeanDeserializerFactory(config )",
    "right" : "public BeanDeserializerFactory(config )",
    "info" : "MethodDeclaration[2211-2306]:MethodDeclaration[2211-2306]"
  }, {
    "left" : "public withConfig(config ) : ",
    "right" : "public withConfig(config ) : ",
    "info" : "MethodDeclaration[2316-3549]:MethodDeclaration[2316-3549]"
  }, {
    "left" : "public createBeanDeserializer(ctxt , type , beanDesc ) : ",
    "right" : "public createBeanDeserializer(ctxt , type , beanDesc ) : ",
    "info" : "MethodDeclaration[3749-6108]:MethodDeclaration[3749-6108]"
  }, {
    "left" : "public createBuilderBasedDeserializer(ctxt , valueType , beanDesc , builderClass ) : ",
    "right" : "public createBuilderBasedDeserializer(ctxt , valueType , beanDesc , builderClass ) : ",
    "info" : "MethodDeclaration[6114-6627]:MethodDeclaration[6114-6627]"
  }, {
    "left" : "protected findStdDeserializer(ctxt , type , beanDesc ) : ",
    "right" : "protected findStdDeserializer(ctxt , type , beanDesc ) : ",
    "info" : "MethodDeclaration[6637-7552]:MethodDeclaration[6637-7552]"
  }, {
    "left" : "protected materializeAbstractType(ctxt , type , beanDesc ) : ",
    "right" : "protected materializeAbstractType(ctxt , type , beanDesc ) : ",
    "info" : "MethodDeclaration[7562-8103]:MethodDeclaration[7562-8103]"
  }, {
    "left" : "public buildBeanDeserializer(ctxt , type , beanDesc ) : ",
    "right" : "public buildBeanDeserializer(ctxt , type , beanDesc ) : ",
    "info" : "MethodDeclaration[8397-11213]:MethodDeclaration[8397-11213]"
  }, {
    "left" : "protected buildBuilderBasedDeserializer(ctxt , valueType , builderDesc ) : ",
    "right" : "protected buildBuilderBasedDeserializer(ctxt , valueType , builderDesc ) : ",
    "info" : "MethodDeclaration[11223-14017]:MethodDeclaration[11223-14017]"
  }, {
    "left" : "protected addObjectIdReader(ctxt , beanDesc , builder ) : void",
    "right" : "protected addObjectIdReader(ctxt , beanDesc , builder ) : void",
    "info" : "MethodDeclaration[14027-15877]:MethodDeclaration[14027-15877]"
  }, {
    "left" : "public buildThrowableDeserializer(ctxt , type , beanDesc ) : ",
    "right" : "public buildThrowableDeserializer(ctxt , type , beanDesc ) : ",
    "info" : "MethodDeclaration[15887-18949]:MethodDeclaration[15887-18949]"
  }, {
    "left" : "protected constructBeanDeserializerBuilder(ctxt , beanDesc ) : ",
    "right" : "protected constructBeanDeserializerBuilder(ctxt , beanDesc ) : ",
    "info" : "MethodDeclaration[19191-19590]:MethodDeclaration[19191-19590]"
  }, {
    "left" : "protected addBeanProps(ctxt , beanDesc , builder ) : void",
    "right" : "protected addBeanProps(ctxt , beanDesc , builder ) : void",
    "info" : "MethodDeclaration[19600-26023]:MethodDeclaration[19600-26023]"
  }, {
    "left" : "protected filterBeanProps(ctxt , beanDesc , builder , propDefsIn , ignored ) : ",
    "right" : "protected filterBeanProps(ctxt , beanDesc , builder , propDefsIn , ignored ) : ",
    "info" : "MethodDeclaration[26033-28008]:MethodDeclaration[26033-28008]"
  }, {
    "left" : "protected addReferenceProperties(ctxt , beanDesc , builder ) : void",
    "right" : "protected addReferenceProperties(ctxt , beanDesc , builder ) : void",
    "info" : "MethodDeclaration[28014-29268]:MethodDeclaration[28014-29268]"
  }, {
    "left" : "protected addInjectables(ctxt , beanDesc , builder ) : void",
    "right" : "protected addInjectables(ctxt , beanDesc , builder ) : void",
    "info" : "MethodDeclaration[29274-30406]:MethodDeclaration[29274-30406]"
  }, {
    "left" : "protected constructAnySetter(ctxt , beanDesc , setter ) : ",
    "right" : "protected constructAnySetter(ctxt , beanDesc , setter ) : ",
    "info" : "MethodDeclaration[30412-32162]:MethodDeclaration[30412-32162]"
  }, {
    "left" : "protected constructSettableProperty(ctxt , beanDesc , propDef , propType0 ) : ",
    "right" : "protected constructSettableProperty(ctxt , beanDesc , propDef , propType0 ) : ",
    "info" : "MethodDeclaration[32168-34927]:MethodDeclaration[32168-35092]"
  }, {
    "left" : "protected constructSetterlessProperty(ctxt , beanDesc , propDef ) : ",
    "right" : "protected constructSetterlessProperty(ctxt , beanDesc , propDef ) : ",
    "info" : "MethodDeclaration[34933-36231]:MethodDeclaration[35098-36396]"
  }, {
    "left" : "protected isPotentialBeanType(type ) : boolean",
    "right" : "protected isPotentialBeanType(type ) : boolean",
    "info" : "MethodDeclaration[36432-37634]:MethodDeclaration[36597-37799]"
  }, {
    "left" : "protected isIgnorableType(config , beanDesc , type , ignoredTypes ...) : boolean",
    "right" : "protected isIgnorableType(config , beanDesc , type , ignoredTypes ...) : boolean",
    "info" : "MethodDeclaration[37640-38376]:MethodDeclaration[37805-38541]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2211-2217]:Modifier[2211-2217]"
  }, {
    "left" : "BeanDeserializerFactory",
    "right" : "BeanDeserializerFactory",
    "info" : "SimpleName[2218-2241]:SimpleName[2218-2241]"
  }, {
    "left" : "DeserializerFactoryConfig config",
    "right" : "DeserializerFactoryConfig config",
    "info" : "SingleVariableDeclaration[2242-2274]:SingleVariableDeclaration[2242-2274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2276-2306]:Block[2276-2306]"
  }, {
    "left" : "super(config);",
    "right" : "super(config);",
    "info" : "SuperConstructorInvocation[2286-2300]:SuperConstructorInvocation[2286-2300]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[2487-2496]:MarkerAnnotation[2487-2496]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2501-2507]:Modifier[2501-2507]"
  }, {
    "left" : "DeserializerFactory",
    "right" : "DeserializerFactory",
    "info" : "SimpleType[2508-2527]:SimpleType[2508-2527]"
  }, {
    "left" : "withConfig",
    "right" : "withConfig",
    "info" : "SimpleName[2528-2538]:SimpleName[2528-2538]"
  }, {
    "left" : "DeserializerFactoryConfig config",
    "right" : "DeserializerFactoryConfig config",
    "info" : "SingleVariableDeclaration[2539-2571]:SingleVariableDeclaration[2539-2571]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2577-3549]:Block[2577-3549]"
  }, {
    "left" : "if (_factoryConfig == config)",
    "right" : "if (_factoryConfig == config)",
    "info" : "IfStatement[2587-2653]:IfStatement[2587-2653]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2617-2653]:Block[2617-2653]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[2631-2643]:ReturnStatement[2631-2643]"
  }, {
    "left" : "if (getClass() != BeanDeserializerFactory.class)",
    "right" : "if (getClass() != BeanDeserializerFactory.class)",
    "info" : "IfStatement[3141-3491]:IfStatement[3141-3491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3190-3491]:Block[3190-3491]"
  }, {
    "left" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
    "right" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
    "info" : "ThrowStatement[3204-3481]:ThrowStatement[3204-3481]"
  }, {
    "left" : "return new BeanDeserializerFactory(config);",
    "right" : "return new BeanDeserializerFactory(config);",
    "info" : "ReturnStatement[3500-3543]:ReturnStatement[3500-3543]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3917-3926]:MarkerAnnotation[3917-3926]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3931-3937]:Modifier[3931-3937]"
  }, {
    "left" : "JsonDeserializer<Object>",
    "right" : "JsonDeserializer<Object>",
    "info" : "ParameterizedType[3938-3962]:ParameterizedType[3938-3962]"
  }, {
    "left" : "createBeanDeserializer",
    "right" : "createBeanDeserializer",
    "info" : "SimpleName[3963-3985]:SimpleName[3963-3985]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[3986-4013]:SingleVariableDeclaration[3986-4013]"
  }, {
    "left" : "JavaType type",
    "right" : "JavaType type",
    "info" : "SingleVariableDeclaration[4027-4040]:SingleVariableDeclaration[4027-4040]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[4042-4066]:SingleVariableDeclaration[4042-4066]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[4083-4103]:SimpleType[4083-4103]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4108-6108]:Block[4108-6108]"
  }, {
    "left" : "final DeserializationConfig config = ctxt.getConfig();",
    "right" : "final DeserializationConfig config = ctxt.getConfig();",
    "info" : "VariableDeclarationStatement[4118-4172]:VariableDeclarationStatement[4118-4172]"
  }, {
    "left" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
    "right" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
    "info" : "VariableDeclarationStatement[4227-4313]:VariableDeclarationStatement[4227-4313]"
  }, {
    "left" : "if (custom != null)",
    "right" : "if (custom != null)",
    "info" : "IfStatement[4322-4380]:IfStatement[4322-4380]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4342-4380]:Block[4342-4380]"
  }, {
    "left" : "return custom;",
    "right" : "return custom;",
    "info" : "ReturnStatement[4356-4370]:ReturnStatement[4356-4370]"
  }, {
    "left" : "if (type.isThrowable())",
    "right" : "if (type.isThrowable())",
    "info" : "IfStatement[4561-4665]:IfStatement[4561-4665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4585-4665]:Block[4585-4665]"
  }, {
    "left" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
    "right" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
    "info" : "ReturnStatement[4599-4655]:ReturnStatement[4599-4655]"
  }, {
    "left" : "if (type.isAbstract() && !type.isPrimitive())",
    "right" : "if (type.isAbstract() && !type.isPrimitive())",
    "info" : "IfStatement[4946-5512]:IfStatement[4946-5512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4992-5512]:Block[4992-5512]"
  }, {
    "left" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
    "right" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
    "info" : "VariableDeclarationStatement[5075-5145]:VariableDeclarationStatement[5075-5145]"
  }, {
    "left" : "if (concreteType != null)",
    "right" : "if (concreteType != null)",
    "info" : "IfStatement[5158-5502]:IfStatement[5158-5502]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5184-5502]:Block[5184-5502]"
  }, {
    "left" : "beanDesc = config.introspect(concreteType);",
    "right" : "beanDesc = config.introspect(concreteType);",
    "info" : "ExpressionStatement[5369-5412]:ExpressionStatement[5369-5412]"
  }, {
    "left" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
    "right" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
    "info" : "ReturnStatement[5429-5488]:ReturnStatement[5429-5488]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
    "right" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
    "info" : "VariableDeclarationStatement[5608-5749]:VariableDeclarationStatement[5608-5749]"
  }, {
    "left" : "if (deser != null)",
    "right" : "if (deser != null)",
    "info" : "IfStatement[5758-5814]:IfStatement[5758-5814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5777-5814]:Block[5777-5814]"
  }, {
    "left" : "return deser;",
    "right" : "return deser;",
    "info" : "ReturnStatement[5791-5804]:ReturnStatement[5791-5804]"
  }, {
    "left" : "if (!isPotentialBeanType(type.getRawClass()))",
    "right" : "if (!isPotentialBeanType(type.getRawClass()))",
    "info" : "IfStatement[5896-5978]:IfStatement[5896-5978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5942-5978]:Block[5942-5978]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[5956-5968]:ReturnStatement[5956-5968]"
  }, {
    "left" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
    "right" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
    "info" : "ReturnStatement[6051-6102]:ReturnStatement[6051-6102]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6114-6123]:MarkerAnnotation[6114-6123]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6128-6134]:Modifier[6128-6134]"
  }, {
    "left" : "JsonDeserializer<Object>",
    "right" : "JsonDeserializer<Object>",
    "info" : "ParameterizedType[6135-6159]:ParameterizedType[6135-6159]"
  }, {
    "left" : "createBuilderBasedDeserializer",
    "right" : "createBuilderBasedDeserializer",
    "info" : "SimpleName[6160-6190]:SimpleName[6160-6190]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[6198-6225]:SingleVariableDeclaration[6198-6225]"
  }, {
    "left" : "JavaType valueType",
    "right" : "JavaType valueType",
    "info" : "SingleVariableDeclaration[6227-6245]:SingleVariableDeclaration[6227-6245]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[6247-6271]:SingleVariableDeclaration[6247-6271]"
  }, {
    "left" : "Class<?> builderClass",
    "right" : "Class<?> builderClass",
    "info" : "SingleVariableDeclaration[6279-6300]:SingleVariableDeclaration[6279-6300]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[6317-6337]:SimpleType[6317-6337]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6342-6627]:Block[6342-6627]"
  }, {
    "left" : "JavaType builderType = ctxt.constructType(builderClass);",
    "right" : "JavaType builderType = ctxt.constructType(builderClass);",
    "info" : "VariableDeclarationStatement[6405-6461]:VariableDeclarationStatement[6405-6461]"
  }, {
    "left" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
    "right" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
    "info" : "VariableDeclarationStatement[6467-6548]:VariableDeclarationStatement[6467-6548]"
  }, {
    "left" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
    "right" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
    "info" : "ReturnStatement[6554-6621]:ReturnStatement[6554-6621]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[6792-6801]:Modifier[6792-6801]"
  }, {
    "left" : "JsonDeserializer<?>",
    "right" : "JsonDeserializer<?>",
    "info" : "ParameterizedType[6802-6821]:ParameterizedType[6802-6821]"
  }, {
    "left" : "findStdDeserializer",
    "right" : "findStdDeserializer",
    "info" : "SimpleName[6822-6841]:SimpleName[6822-6841]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[6842-6869]:SingleVariableDeclaration[6842-6869]"
  }, {
    "left" : "JavaType type",
    "right" : "JavaType type",
    "info" : "SingleVariableDeclaration[6883-6896]:SingleVariableDeclaration[6883-6896]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[6898-6922]:SingleVariableDeclaration[6898-6922]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[6939-6959]:SimpleType[6939-6959]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6964-7552]:Block[6964-7552]"
  }, {
    "left" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
    "right" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
    "info" : "VariableDeclarationStatement[7078-7152]:VariableDeclarationStatement[7078-7152]"
  }, {
    "left" : "if (deser != null)",
    "right" : "if (deser != null)",
    "info" : "IfStatement[7220-7524]:IfStatement[7220-7524]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7239-7524]:Block[7239-7524]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[7253-7514]:IfStatement[7253-7514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7300-7514]:Block[7300-7514]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[7318-7500]:EnhancedForStatement[7318-7500]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7394-7500]:Block[7394-7500]"
  }, {
    "left" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
    "right" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
    "info" : "ExpressionStatement[7416-7482]:ExpressionStatement[7416-7482]"
  }, {
    "left" : "return deser;",
    "right" : "return deser;",
    "info" : "ReturnStatement[7533-7546]:ReturnStatement[7533-7546]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[7562-7571]:Modifier[7562-7571]"
  }, {
    "left" : "JavaType",
    "right" : "JavaType",
    "info" : "SimpleType[7572-7580]:SimpleType[7572-7580]"
  }, {
    "left" : "materializeAbstractType",
    "right" : "materializeAbstractType",
    "info" : "SimpleName[7581-7604]:SimpleName[7581-7604]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[7605-7632]:SingleVariableDeclaration[7605-7632]"
  }, {
    "left" : "JavaType type",
    "right" : "JavaType type",
    "info" : "SingleVariableDeclaration[7646-7659]:SingleVariableDeclaration[7646-7659]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[7661-7685]:SingleVariableDeclaration[7661-7685]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[7702-7722]:SimpleType[7702-7722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7727-8103]:Block[7727-8103]"
  }, {
    "left" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
    "right" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
    "info" : "EnhancedForStatement[7829-8076]:EnhancedForStatement[7829-8076]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7899-8076]:Block[7899-8076]"
  }, {
    "left" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
    "right" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
    "info" : "VariableDeclarationStatement[7913-7983]:VariableDeclarationStatement[7913-7983]"
  }, {
    "left" : "if (concrete != null)",
    "right" : "if (concrete != null)",
    "info" : "IfStatement[7996-8066]:IfStatement[7996-8066]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8018-8066]:Block[8018-8066]"
  }, {
    "left" : "return concrete;",
    "right" : "return concrete;",
    "info" : "ReturnStatement[8036-8052]:ReturnStatement[8036-8052]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[8085-8097]:ReturnStatement[8085-8097]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")",
    "right" : "@SuppressWarnings(\"unchecked\")",
    "info" : "SingleMemberAnnotation[8647-8677]:SingleMemberAnnotation[8647-8677]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8682-8688]:Modifier[8682-8688]"
  }, {
    "left" : "JsonDeserializer<Object>",
    "right" : "JsonDeserializer<Object>",
    "info" : "ParameterizedType[8689-8713]:ParameterizedType[8689-8713]"
  }, {
    "left" : "buildBeanDeserializer",
    "right" : "buildBeanDeserializer",
    "info" : "SimpleName[8714-8735]:SimpleName[8714-8735]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[8736-8763]:SingleVariableDeclaration[8736-8763]"
  }, {
    "left" : "JavaType type",
    "right" : "JavaType type",
    "info" : "SingleVariableDeclaration[8777-8790]:SingleVariableDeclaration[8777-8790]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[8792-8816]:SingleVariableDeclaration[8792-8816]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[8833-8853]:SimpleType[8833-8853]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8858-11213]:Block[8858-11213]"
  }, {
    "left" : "ValueInstantiator valueInstantiator;",
    "right" : "ValueInstantiator valueInstantiator;",
    "info" : "VariableDeclarationStatement[8925-8961]:VariableDeclarationStatement[8925-8961]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[9281-9481]:TryStatement[9281-9481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9285-9367]:Block[9285-9367]"
  }, {
    "left" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
    "right" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
    "info" : "ExpressionStatement[9299-9357]:ExpressionStatement[9299-9357]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9403-9481]:Block[9403-9481]"
  }, {
    "left" : "return new NoClassDefFoundDeserializer<Object>(error);",
    "right" : "return new NoClassDefFoundDeserializer<Object>(error);",
    "info" : "ReturnStatement[9417-9471]:ReturnStatement[9417-9471]"
  }, {
    "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
    "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
    "info" : "VariableDeclarationStatement[9490-9573]:VariableDeclarationStatement[9490-9573]"
  }, {
    "left" : "builder.setValueInstantiator(valueInstantiator);",
    "right" : "builder.setValueInstantiator(valueInstantiator);",
    "info" : "ExpressionStatement[9582-9630]:ExpressionStatement[9582-9630]"
  }, {
    "left" : "addBeanProps(ctxt, beanDesc, builder);",
    "right" : "addBeanProps(ctxt, beanDesc, builder);",
    "info" : "ExpressionStatement[9703-9741]:ExpressionStatement[9703-9741]"
  }, {
    "left" : "addObjectIdReader(ctxt, beanDesc, builder);",
    "right" : "addObjectIdReader(ctxt, beanDesc, builder);",
    "info" : "ExpressionStatement[9750-9793]:ExpressionStatement[9750-9793]"
  }, {
    "left" : "addReferenceProperties(ctxt, beanDesc, builder);",
    "right" : "addReferenceProperties(ctxt, beanDesc, builder);",
    "info" : "ExpressionStatement[9888-9936]:ExpressionStatement[9888-9936]"
  }, {
    "left" : "addInjectables(ctxt, beanDesc, builder);",
    "right" : "addInjectables(ctxt, beanDesc, builder);",
    "info" : "ExpressionStatement[9945-9985]:ExpressionStatement[9945-9985]"
  }, {
    "left" : "final DeserializationConfig config = ctxt.getConfig();",
    "right" : "final DeserializationConfig config = ctxt.getConfig();",
    "info" : "VariableDeclarationStatement[10003-10057]:VariableDeclarationStatement[10003-10057]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[10139-10373]:IfStatement[10139-10373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10186-10373]:Block[10186-10373]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[10200-10363]:EnhancedForStatement[10200-10363]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10276-10363]:Block[10276-10363]"
  }, {
    "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
    "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
    "info" : "ExpressionStatement[10294-10349]:ExpressionStatement[10294-10349]"
  }, {
    "left" : "JsonDeserializer<?> deserializer;",
    "right" : "JsonDeserializer<?> deserializer;",
    "info" : "VariableDeclarationStatement[10382-10415]:VariableDeclarationStatement[10382-10415]"
  }, {
    "left" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
    "right" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
    "info" : "IfStatement[10601-10787]:IfStatement[10601-10787]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10663-10726]:Block[10663-10726]"
  }, {
    "left" : "deserializer = builder.buildAbstract();",
    "right" : "deserializer = builder.buildAbstract();",
    "info" : "ExpressionStatement[10677-10716]:ExpressionStatement[10677-10716]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10732-10787]:Block[10732-10787]"
  }, {
    "left" : "deserializer = builder.build();",
    "right" : "deserializer = builder.build();",
    "info" : "ExpressionStatement[10746-10777]:ExpressionStatement[10746-10777]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[10902-11151]:IfStatement[10902-11151]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10949-11151]:Block[10949-11151]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[10963-11141]:EnhancedForStatement[10963-11141]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11039-11141]:Block[11039-11141]"
  }, {
    "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
    "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
    "info" : "ExpressionStatement[11057-11127]:ExpressionStatement[11057-11127]"
  }, {
    "left" : "return (JsonDeserializer<Object>) deserializer;",
    "right" : "return (JsonDeserializer<Object>) deserializer;",
    "info" : "ReturnStatement[11160-11207]:ReturnStatement[11160-11207]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")",
    "right" : "@SuppressWarnings(\"unchecked\")",
    "info" : "SingleMemberAnnotation[11507-11537]:SingleMemberAnnotation[11507-11537]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[11542-11551]:Modifier[11542-11551]"
  }, {
    "left" : "JsonDeserializer<Object>",
    "right" : "JsonDeserializer<Object>",
    "info" : "ParameterizedType[11552-11576]:ParameterizedType[11552-11576]"
  }, {
    "left" : "buildBuilderBasedDeserializer",
    "right" : "buildBuilderBasedDeserializer",
    "info" : "SimpleName[11577-11606]:SimpleName[11577-11606]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[11614-11641]:SingleVariableDeclaration[11614-11641]"
  }, {
    "left" : "JavaType valueType",
    "right" : "JavaType valueType",
    "info" : "SingleVariableDeclaration[11643-11661]:SingleVariableDeclaration[11643-11661]"
  }, {
    "left" : "BeanDescription builderDesc",
    "right" : "BeanDescription builderDesc",
    "info" : "SingleVariableDeclaration[11663-11690]:SingleVariableDeclaration[11663-11690]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[11707-11727]:SimpleType[11707-11727]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11732-14017]:Block[11732-14017]"
  }, {
    "left" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
    "right" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
    "info" : "VariableDeclarationStatement[11795-11874]:VariableDeclarationStatement[11795-11874]"
  }, {
    "left" : "final DeserializationConfig config = ctxt.getConfig();",
    "right" : "final DeserializationConfig config = ctxt.getConfig();",
    "info" : "VariableDeclarationStatement[11883-11937]:VariableDeclarationStatement[11883-11937]"
  }, {
    "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
    "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
    "info" : "VariableDeclarationStatement[11946-12032]:VariableDeclarationStatement[11946-12032]"
  }, {
    "left" : "builder.setValueInstantiator(valueInstantiator);",
    "right" : "builder.setValueInstantiator(valueInstantiator);",
    "info" : "ExpressionStatement[12041-12089]:ExpressionStatement[12041-12089]"
  }, {
    "left" : "addBeanProps(ctxt, builderDesc, builder);",
    "right" : "addBeanProps(ctxt, builderDesc, builder);",
    "info" : "ExpressionStatement[12169-12210]:ExpressionStatement[12169-12210]"
  }, {
    "left" : "addObjectIdReader(ctxt, builderDesc, builder);",
    "right" : "addObjectIdReader(ctxt, builderDesc, builder);",
    "info" : "ExpressionStatement[12219-12265]:ExpressionStatement[12219-12265]"
  }, {
    "left" : "addReferenceProperties(ctxt, builderDesc, builder);",
    "right" : "addReferenceProperties(ctxt, builderDesc, builder);",
    "info" : "ExpressionStatement[12368-12419]:ExpressionStatement[12368-12419]"
  }, {
    "left" : "addInjectables(ctxt, builderDesc, builder);",
    "right" : "addInjectables(ctxt, builderDesc, builder);",
    "info" : "ExpressionStatement[12428-12471]:ExpressionStatement[12428-12471]"
  }, {
    "left" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
    "right" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
    "info" : "VariableDeclarationStatement[12481-12555]:VariableDeclarationStatement[12481-12555]"
  }, {
    "left" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
    "right" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
    "info" : "VariableDeclarationStatement[12564-12677]:VariableDeclarationStatement[12564-12677]"
  }, {
    "left" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
    "right" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
    "info" : "VariableDeclarationStatement[12744-12820]:VariableDeclarationStatement[12744-12820]"
  }, {
    "left" : "if (buildMethod != null)",
    "right" : "if (buildMethod != null)",
    "info" : "IfStatement[12829-13125]:IfStatement[12829-13125]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12854-13125]:Block[12854-13125]"
  }, {
    "left" : "if (config.canOverrideAccessModifiers())",
    "right" : "if (config.canOverrideAccessModifiers())",
    "info" : "IfStatement[12926-13115]:IfStatement[12926-13115]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12967-13115]:Block[12967-13115]"
  }, {
    "left" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
    "right" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
    "info" : "ExpressionStatement[12982-13101]:ExpressionStatement[12982-13101]"
  }, {
    "left" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
    "right" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
    "info" : "ExpressionStatement[13134-13185]:ExpressionStatement[13134-13185]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[13242-13479]:IfStatement[13242-13479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13289-13479]:Block[13289-13479]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[13303-13469]:EnhancedForStatement[13303-13469]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13379-13469]:Block[13379-13469]"
  }, {
    "left" : "builder = mod.updateBuilder(config, builderDesc, builder);",
    "right" : "builder = mod.updateBuilder(config, builderDesc, builder);",
    "info" : "ExpressionStatement[13397-13455]:ExpressionStatement[13397-13455]"
  }, {
    "left" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
    "right" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
    "info" : "VariableDeclarationStatement[13488-13588]:VariableDeclarationStatement[13488-13588]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[13703-13955]:IfStatement[13703-13955]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13750-13955]:Block[13750-13955]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[13764-13945]:EnhancedForStatement[13764-13945]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13840-13945]:Block[13840-13945]"
  }, {
    "left" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
    "right" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
    "info" : "ExpressionStatement[13858-13931]:ExpressionStatement[13858-13931]"
  }, {
    "left" : "return (JsonDeserializer<Object>) deserializer;",
    "right" : "return (JsonDeserializer<Object>) deserializer;",
    "info" : "ReturnStatement[13964-14011]:ReturnStatement[13964-14011]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[14027-14036]:Modifier[14027-14036]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14037-14041]:PrimitiveType[14037-14041]"
  }, {
    "left" : "addObjectIdReader",
    "right" : "addObjectIdReader",
    "info" : "SimpleName[14042-14059]:SimpleName[14042-14059]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[14060-14087]:SingleVariableDeclaration[14060-14087]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[14101-14125]:SingleVariableDeclaration[14101-14125]"
  }, {
    "left" : "BeanDeserializerBuilder builder",
    "right" : "BeanDeserializerBuilder builder",
    "info" : "SingleVariableDeclaration[14127-14158]:SingleVariableDeclaration[14127-14158]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[14175-14195]:SimpleType[14175-14195]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14200-15877]:Block[14200-15877]"
  }, {
    "left" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
    "right" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
    "info" : "VariableDeclarationStatement[14210-14265]:VariableDeclarationStatement[14210-14265]"
  }, {
    "left" : "if (objectIdInfo == null)",
    "right" : "if (objectIdInfo == null)",
    "info" : "IfStatement[14274-14331]:IfStatement[14274-14331]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14300-14331]:Block[14300-14331]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[14314-14321]:ReturnStatement[14314-14321]"
  }, {
    "left" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
    "right" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
    "info" : "VariableDeclarationStatement[14340-14393]:VariableDeclarationStatement[14340-14393]"
  }, {
    "left" : "JavaType idType;",
    "right" : "JavaType idType;",
    "info" : "VariableDeclarationStatement[14402-14418]:VariableDeclarationStatement[14402-14418]"
  }, {
    "left" : "SettableBeanProperty idProp;",
    "right" : "SettableBeanProperty idProp;",
    "info" : "VariableDeclarationStatement[14427-14455]:VariableDeclarationStatement[14427-14455]"
  }, {
    "left" : "ObjectIdGenerator<?> gen;",
    "right" : "ObjectIdGenerator<?> gen;",
    "info" : "VariableDeclarationStatement[14464-14489]:VariableDeclarationStatement[14464-14489]"
  }, {
    "left" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
    "right" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
    "info" : "VariableDeclarationStatement[14499-14596]:VariableDeclarationStatement[14499-14596]"
  }, {
    "left" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
    "right" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
    "info" : "IfStatement[14677-15562]:IfStatement[14677-15562]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14738-15273]:Block[14738-15273]"
  }, {
    "left" : "PropertyName propName = objectIdInfo.getPropertyName();",
    "right" : "PropertyName propName = objectIdInfo.getPropertyName();",
    "info" : "VariableDeclarationStatement[14790-14845]:VariableDeclarationStatement[14790-14845]"
  }, {
    "left" : "idProp = builder.findProperty(propName);",
    "right" : "idProp = builder.findProperty(propName);",
    "info" : "ExpressionStatement[14858-14898]:ExpressionStatement[14858-14898]"
  }, {
    "left" : "if (idProp == null)",
    "right" : "if (idProp == null)",
    "info" : "IfStatement[14911-15145]:IfStatement[14911-15145]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14931-15145]:Block[14931-15145]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
    "right" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
    "info" : "ThrowStatement[14949-15131]:ThrowStatement[14949-15131]"
  }, {
    "left" : "idType = idProp.getType();",
    "right" : "idType = idProp.getType();",
    "info" : "ExpressionStatement[15158-15184]:ExpressionStatement[15158-15184]"
  }, {
    "left" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
    "right" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
    "info" : "ExpressionStatement[15197-15263]:ExpressionStatement[15197-15263]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15279-15562]:Block[15279-15562]"
  }, {
    "left" : "JavaType type = ctxt.constructType(implClass);",
    "right" : "JavaType type = ctxt.constructType(implClass);",
    "info" : "VariableDeclarationStatement[15293-15339]:VariableDeclarationStatement[15293-15339]"
  }, {
    "left" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
    "right" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
    "info" : "ExpressionStatement[15352-15436]:ExpressionStatement[15352-15436]"
  }, {
    "left" : "idProp = null;",
    "right" : "idProp = null;",
    "info" : "ExpressionStatement[15449-15463]:ExpressionStatement[15449-15463]"
  }, {
    "left" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
    "right" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
    "info" : "ExpressionStatement[15476-15552]:ExpressionStatement[15476-15552]"
  }, {
    "left" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
    "right" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
    "info" : "VariableDeclarationStatement[15657-15724]:VariableDeclarationStatement[15657-15724]"
  }, {
    "left" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
    "right" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
    "info" : "ExpressionStatement[15733-15871]:ExpressionStatement[15733-15871]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")",
    "right" : "@SuppressWarnings(\"unchecked\")",
    "info" : "SingleMemberAnnotation[15887-15917]:SingleMemberAnnotation[15887-15917]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15922-15928]:Modifier[15922-15928]"
  }, {
    "left" : "JsonDeserializer<Object>",
    "right" : "JsonDeserializer<Object>",
    "info" : "ParameterizedType[15929-15953]:ParameterizedType[15929-15953]"
  }, {
    "left" : "buildThrowableDeserializer",
    "right" : "buildThrowableDeserializer",
    "info" : "SimpleName[15954-15980]:SimpleName[15954-15980]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[15981-16008]:SingleVariableDeclaration[15981-16008]"
  }, {
    "left" : "JavaType type",
    "right" : "JavaType type",
    "info" : "SingleVariableDeclaration[16022-16035]:SingleVariableDeclaration[16022-16035]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[16037-16061]:SingleVariableDeclaration[16037-16061]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[16078-16098]:SimpleType[16078-16098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16103-18949]:Block[16103-18949]"
  }, {
    "left" : "final DeserializationConfig config = ctxt.getConfig();",
    "right" : "final DeserializationConfig config = ctxt.getConfig();",
    "info" : "VariableDeclarationStatement[16113-16167]:VariableDeclarationStatement[16113-16167]"
  }, {
    "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
    "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
    "info" : "VariableDeclarationStatement[16240-16323]:VariableDeclarationStatement[16240-16323]"
  }, {
    "left" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
    "right" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
    "info" : "ExpressionStatement[16332-16400]:ExpressionStatement[16332-16400]"
  }, {
    "left" : "addBeanProps(ctxt, beanDesc, builder);",
    "right" : "addBeanProps(ctxt, beanDesc, builder);",
    "info" : "ExpressionStatement[16410-16448]:ExpressionStatement[16410-16448]"
  }, {
    "left" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
    "right" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
    "info" : "VariableDeclarationStatement[16701-16774]:VariableDeclarationStatement[16701-16774]"
  }, {
    "left" : "if (am != null)",
    "right" : "if (am != null)",
    "info" : "IfStatement[16783-17462]:IfStatement[16783-17462]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16799-17462]:Block[16799-17462]"
  }, {
    "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
    "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
    "info" : "VariableDeclarationStatement[16837-16984]:VariableDeclarationStatement[16837-16984]"
  }, {
    "left" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
    "right" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
    "info" : "VariableDeclarationStatement[16997-17120]:VariableDeclarationStatement[16997-17120]"
  }, {
    "left" : "if (prop != null)",
    "right" : "if (prop != null)",
    "info" : "IfStatement[17133-17452]:IfStatement[17133-17452]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17151-17452]:Block[17151-17452]"
  }, {
    "left" : "builder.addOrReplaceProperty(prop, true);",
    "right" : "builder.addOrReplaceProperty(prop, true);",
    "info" : "ExpressionStatement[17397-17438]:ExpressionStatement[17397-17438]"
  }, {
    "left" : "builder.addIgnorable(\"localizedMessage\");",
    "right" : "builder.addIgnorable(\"localizedMessage\");",
    "info" : "ExpressionStatement[17526-17567]:ExpressionStatement[17526-17567]"
  }, {
    "left" : "builder.addIgnorable(\"suppressed\");",
    "right" : "builder.addIgnorable(\"suppressed\");",
    "info" : "ExpressionStatement[17649-17684]:ExpressionStatement[17649-17684]"
  }, {
    "left" : "builder.addIgnorable(\"message\");",
    "right" : "builder.addIgnorable(\"message\");",
    "info" : "ExpressionStatement[17819-17851]:ExpressionStatement[17819-17851]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[17919-18153]:IfStatement[17919-18153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17966-18153]:Block[17966-18153]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[17980-18143]:EnhancedForStatement[17980-18143]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18056-18143]:Block[18056-18143]"
  }, {
    "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
    "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
    "info" : "ExpressionStatement[18074-18129]:ExpressionStatement[18074-18129]"
  }, {
    "left" : "JsonDeserializer<?> deserializer = builder.build();",
    "right" : "JsonDeserializer<?> deserializer = builder.build();",
    "info" : "VariableDeclarationStatement[18162-18213]:VariableDeclarationStatement[18162-18213]"
  }, {
    "left" : "if (deserializer instanceof BeanDeserializer)",
    "right" : "if (deserializer instanceof BeanDeserializer)",
    "info" : "IfStatement[18394-18538]:IfStatement[18394-18538]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18440-18538]:Block[18440-18538]"
  }, {
    "left" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
    "right" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
    "info" : "ExpressionStatement[18454-18528]:ExpressionStatement[18454-18528]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[18638-18887]:IfStatement[18638-18887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18685-18887]:Block[18685-18887]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[18699-18877]:EnhancedForStatement[18699-18877]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18775-18877]:Block[18775-18877]"
  }, {
    "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
    "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
    "info" : "ExpressionStatement[18793-18863]:ExpressionStatement[18793-18863]"
  }, {
    "left" : "return (JsonDeserializer<Object>) deserializer;",
    "right" : "return (JsonDeserializer<Object>) deserializer;",
    "info" : "ReturnStatement[18896-18943]:ReturnStatement[18896-18943]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[19377-19386]:Modifier[19377-19386]"
  }, {
    "left" : "BeanDeserializerBuilder",
    "right" : "BeanDeserializerBuilder",
    "info" : "SimpleType[19387-19410]:SimpleType[19387-19410]"
  }, {
    "left" : "constructBeanDeserializerBuilder",
    "right" : "constructBeanDeserializerBuilder",
    "info" : "SimpleName[19411-19443]:SimpleName[19411-19443]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[19444-19471]:SingleVariableDeclaration[19444-19471]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[19485-19509]:SingleVariableDeclaration[19485-19509]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19511-19590]:Block[19511-19590]"
  }, {
    "left" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
    "right" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
    "info" : "ReturnStatement[19521-19584]:ReturnStatement[19521-19584]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[19833-19842]:Modifier[19833-19842]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19843-19847]:PrimitiveType[19843-19847]"
  }, {
    "left" : "addBeanProps",
    "right" : "addBeanProps",
    "info" : "SimpleName[19848-19860]:SimpleName[19848-19860]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[19861-19888]:SingleVariableDeclaration[19861-19888]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[19902-19926]:SingleVariableDeclaration[19902-19926]"
  }, {
    "left" : "BeanDeserializerBuilder builder",
    "right" : "BeanDeserializerBuilder builder",
    "info" : "SingleVariableDeclaration[19928-19959]:SingleVariableDeclaration[19928-19959]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[19976-19996]:SimpleType[19976-19996]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20001-26023]:Block[20001-26023]"
  }, {
    "left" : "final SettableBeanProperty[] creatorProps =\n                builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig());",
    "right" : "final SettableBeanProperty[] creatorProps =\n                builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig());",
    "info" : "VariableDeclarationStatement[20011-20143]:VariableDeclarationStatement[20011-20143]"
  }, {
    "left" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
    "right" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
    "info" : "VariableDeclarationStatement[20152-20212]:VariableDeclarationStatement[20152-20212]"
  }, {
    "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
    "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
    "info" : "VariableDeclarationStatement[20277-20340]:VariableDeclarationStatement[20277-20340]"
  }, {
    "left" : "if (intr != null)",
    "right" : "if (intr != null)",
    "info" : "IfStatement[20349-20574]:IfStatement[20349-20574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20367-20574]:Block[20367-20574]"
  }, {
    "left" : "Boolean B = intr.findIgnoreUnknownProperties(beanDesc.getClassInfo());",
    "right" : "Boolean B = intr.findIgnoreUnknownProperties(beanDesc.getClassInfo());",
    "info" : "VariableDeclarationStatement[20381-20451]:VariableDeclarationStatement[20381-20451]"
  }, {
    "left" : "if (B != null)",
    "right" : "if (B != null)",
    "info" : "IfStatement[20464-20564]:IfStatement[20464-20564]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20479-20564]:Block[20479-20564]"
  }, {
    "left" : "builder.setIgnoreUnknownProperties(B.booleanValue());",
    "right" : "builder.setIgnoreUnknownProperties(B.booleanValue());",
    "info" : "ExpressionStatement[20497-20550]:ExpressionStatement[20497-20550]"
  }, {
    "left" : "Set<String> ignored = ArrayBuilders.arrayToSet(intr.findPropertiesToIgnore(beanDesc.getClassInfo(), false));",
    "right" : "Set<String> ignored = ArrayBuilders.arrayToSet(intr.findPropertiesToIgnore(beanDesc.getClassInfo(), false));",
    "info" : "VariableDeclarationStatement[20628-20736]:VariableDeclarationStatement[20628-20736]"
  }, {
    "left" : "for (String propName : ignored)",
    "right" : "for (String propName : ignored)",
    "info" : "EnhancedForStatement[20753-20840]:EnhancedForStatement[20753-20840]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20785-20840]:Block[20785-20840]"
  }, {
    "left" : "builder.addIgnorable(propName);",
    "right" : "builder.addIgnorable(propName);",
    "info" : "ExpressionStatement[20799-20830]:ExpressionStatement[20799-20830]"
  }, {
    "left" : "AnnotatedMethod anySetter = beanDesc.findAnySetter();",
    "right" : "AnnotatedMethod anySetter = beanDesc.findAnySetter();",
    "info" : "VariableDeclarationStatement[20902-20955]:VariableDeclarationStatement[20902-20955]"
  }, {
    "left" : "if (anySetter != null)",
    "right" : "if (anySetter != null)",
    "info" : "IfStatement[20964-21079]:IfStatement[20964-21079]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20987-21079]:Block[20987-21079]"
  }, {
    "left" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetter));",
    "right" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetter));",
    "info" : "ExpressionStatement[21001-21069]:ExpressionStatement[21001-21069]"
  }, {
    "left" : "if (anySetter == null)",
    "right" : "if (anySetter == null)",
    "info" : "IfStatement[21241-21679]:IfStatement[21241-21679]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21264-21679]:Block[21264-21679]"
  }, {
    "left" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
    "right" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
    "info" : "VariableDeclarationStatement[21278-21343]:VariableDeclarationStatement[21278-21343]"
  }, {
    "left" : "if (ignored2 != null)",
    "right" : "if (ignored2 != null)",
    "info" : "IfStatement[21356-21669]:IfStatement[21356-21669]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21378-21669]:Block[21378-21669]"
  }, {
    "left" : "for (String propName : ignored2)",
    "right" : "for (String propName : ignored2)",
    "info" : "EnhancedForStatement[21396-21655]:EnhancedForStatement[21396-21655]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21429-21655]:Block[21429-21655]"
  }, {
    "left" : "builder.addIgnorable(propName);",
    "right" : "builder.addIgnorable(propName);",
    "info" : "ExpressionStatement[21606-21637]:ExpressionStatement[21606-21637]"
  }, {
    "left" : "final boolean useGettersAsSetters = (ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS));",
    "right" : "final boolean useGettersAsSetters = (ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS));",
    "info" : "VariableDeclarationStatement[21688-21848]:VariableDeclarationStatement[21688-21848]"
  }, {
    "left" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
    "right" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
    "info" : "VariableDeclarationStatement[21916-22049]:VariableDeclarationStatement[21916-22049]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[22120-22369]:IfStatement[22120-22369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22167-22369]:Block[22167-22369]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[22181-22359]:EnhancedForStatement[22181-22359]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22257-22359]:Block[22257-22359]"
  }, {
    "left" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
    "right" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
    "info" : "ExpressionStatement[22275-22345]:ExpressionStatement[22275-22345]"
  }, {
    "left" : "for (BeanPropertyDefinition propDef : propDefs)",
    "right" : "for (BeanPropertyDefinition propDef : propDefs)",
    "info" : "EnhancedForStatement[22475-26017]:EnhancedForStatement[22475-26017]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22523-26017]:Block[22523-26017]"
  }, {
    "left" : "SettableBeanProperty prop = null;",
    "right" : "SettableBeanProperty prop = null;",
    "info" : "VariableDeclarationStatement[22537-22570]:VariableDeclarationStatement[22537-22570]"
  }, {
    "left" : "if (propDef.hasSetter())",
    "right" : "if (propDef.hasSetter())",
    "info" : "IfStatement[22862-23936]:IfStatement[22862-23936]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22887-23072]:Block[22887-23072]"
  }, {
    "left" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
    "right" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
    "info" : "VariableDeclarationStatement[22905-22969]:VariableDeclarationStatement[22905-22969]"
  }, {
    "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
    "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
    "info" : "ExpressionStatement[22986-23058]:ExpressionStatement[22986-23058]"
  }, {
    "left" : "if (propDef.hasField())",
    "right" : "if (propDef.hasField())",
    "info" : "IfStatement[23078-23936]:IfStatement[23078-23936]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23102-23276]:Block[23102-23276]"
  }, {
    "left" : "JavaType propertyType = propDef.getField().getType();",
    "right" : "JavaType propertyType = propDef.getField().getType();",
    "info" : "VariableDeclarationStatement[23120-23173]:VariableDeclarationStatement[23120-23173]"
  }, {
    "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
    "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
    "info" : "ExpressionStatement[23190-23262]:ExpressionStatement[23190-23262]"
  }, {
    "left" : "if (useGettersAsSetters && propDef.hasGetter())",
    "right" : "if (useGettersAsSetters && propDef.hasGetter())",
    "info" : "IfStatement[23282-23936]:IfStatement[23282-23936]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23330-23936]:Block[23330-23936]"
  }, {
    "left" : "AnnotatedMethod getter = propDef.getGetter();",
    "right" : "AnnotatedMethod getter = propDef.getGetter();",
    "info" : "VariableDeclarationStatement[23498-23543]:VariableDeclarationStatement[23498-23543]"
  }, {
    "left" : "Class<?> rawPropertyType = getter.getRawType();",
    "right" : "Class<?> rawPropertyType = getter.getRawType();",
    "info" : "VariableDeclarationStatement[23631-23678]:VariableDeclarationStatement[23631-23678]"
  }, {
    "left" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
    "right" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
    "info" : "IfStatement[23695-23922]:IfStatement[23695-23922]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23822-23922]:Block[23822-23922]"
  }, {
    "left" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
    "right" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
    "info" : "ExpressionStatement[23844-23904]:ExpressionStatement[23844-23904]"
  }, {
    "left" : "if (isConcrete && propDef.hasConstructorParameter())",
    "right" : "if (isConcrete && propDef.hasConstructorParameter())",
    "info" : "IfStatement[24097-25442]:IfStatement[24097-25442]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24150-25442]:Block[24150-25442]"
  }, {
    "left" : "final String name = propDef.getName();",
    "right" : "final String name = propDef.getName();",
    "info" : "VariableDeclarationStatement[24533-24571]:VariableDeclarationStatement[24533-24571]"
  }, {
    "left" : "CreatorProperty cprop = null;",
    "right" : "CreatorProperty cprop = null;",
    "info" : "VariableDeclarationStatement[24588-24617]:VariableDeclarationStatement[24588-24617]"
  }, {
    "left" : "if (creatorProps != null)",
    "right" : "if (creatorProps != null)",
    "info" : "IfStatement[24634-24979]:IfStatement[24634-24979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24660-24979]:Block[24660-24979]"
  }, {
    "left" : "for (SettableBeanProperty cp : creatorProps)",
    "right" : "for (SettableBeanProperty cp : creatorProps)",
    "info" : "EnhancedForStatement[24682-24961]:EnhancedForStatement[24682-24961]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24727-24961]:Block[24727-24961]"
  }, {
    "left" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
    "right" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
    "info" : "IfStatement[24753-24939]:IfStatement[24753-24939]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24819-24939]:Block[24819-24939]"
  }, {
    "left" : "cprop = (CreatorProperty) cp;",
    "right" : "cprop = (CreatorProperty) cp;",
    "info" : "ExpressionStatement[24849-24878]:ExpressionStatement[24849-24878]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24907-24913]:BreakStatement[24907-24913]"
  }, {
    "left" : "if (cprop == null)",
    "right" : "if (cprop == null)",
    "info" : "IfStatement[24996-25216]:IfStatement[24996-25216]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25015-25216]:Block[25015-25216]"
  }, {
    "left" : "throw ctxt.mappingException(\"Could not find creator property with name '%s' (in class %s)\",\n                            name, beanDesc.getBeanClass().getName());",
    "right" : "throw ctxt.mappingException(\"Could not find creator property with name '%s' (in class %s)\",\n                            name, beanDesc.getBeanClass().getName());",
    "info" : "ThrowStatement[25037-25198]:ThrowStatement[25037-25198]"
  }, {
    "left" : "if (prop != null)",
    "right" : "if (prop != null)",
    "info" : "IfStatement[25233-25321]:IfStatement[25233-25321]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25251-25321]:Block[25251-25321]"
  }, {
    "left" : "cprop.setFallbackSetter(prop);",
    "right" : "cprop.setFallbackSetter(prop);",
    "info" : "ExpressionStatement[25273-25303]:ExpressionStatement[25273-25303]"
  }, {
    "left" : "prop = cprop;",
    "right" : "prop = cprop;",
    "info" : "ExpressionStatement[25338-25351]:ExpressionStatement[25338-25351]"
  }, {
    "left" : "builder.addCreatorProperty(cprop);",
    "right" : "builder.addCreatorProperty(cprop);",
    "info" : "ExpressionStatement[25368-25402]:ExpressionStatement[25368-25402]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[25419-25428]:ContinueStatement[25419-25428]"
  }, {
    "left" : "if (prop != null)",
    "right" : "if (prop != null)",
    "info" : "IfStatement[25456-26007]:IfStatement[25456-26007]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25474-26007]:Block[25474-26007]"
  }, {
    "left" : "Class<?>[] views = propDef.findViews();",
    "right" : "Class<?>[] views = propDef.findViews();",
    "info" : "VariableDeclarationStatement[25492-25531]:VariableDeclarationStatement[25492-25531]"
  }, {
    "left" : "if (views == null)",
    "right" : "if (views == null)",
    "info" : "IfStatement[25548-25834]:IfStatement[25548-25834]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25567-25834]:Block[25567-25834]"
  }, {
    "left" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
    "right" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
    "info" : "IfStatement[25692-25816]:IfStatement[25692-25816]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25751-25816]:Block[25751-25816]"
  }, {
    "left" : "views = NO_VIEWS;",
    "right" : "views = NO_VIEWS;",
    "info" : "ExpressionStatement[25777-25794]:ExpressionStatement[25777-25794]"
  }, {
    "left" : "prop.setViews(views);",
    "right" : "prop.setViews(views);",
    "info" : "ExpressionStatement[25929-25950]:ExpressionStatement[25929-25950]"
  }, {
    "left" : "builder.addProperty(prop);",
    "right" : "builder.addProperty(prop);",
    "info" : "ExpressionStatement[25967-25993]:ExpressionStatement[25967-25993]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[26256-26265]:Modifier[26256-26265]"
  }, {
    "left" : "List<BeanPropertyDefinition>",
    "right" : "List<BeanPropertyDefinition>",
    "info" : "ParameterizedType[26266-26294]:ParameterizedType[26266-26294]"
  }, {
    "left" : "filterBeanProps",
    "right" : "filterBeanProps",
    "info" : "SimpleName[26295-26310]:SimpleName[26295-26310]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[26311-26338]:SingleVariableDeclaration[26311-26338]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[26352-26376]:SingleVariableDeclaration[26352-26376]"
  }, {
    "left" : "BeanDeserializerBuilder builder",
    "right" : "BeanDeserializerBuilder builder",
    "info" : "SingleVariableDeclaration[26378-26409]:SingleVariableDeclaration[26378-26409]"
  }, {
    "left" : "List<BeanPropertyDefinition> propDefsIn",
    "right" : "List<BeanPropertyDefinition> propDefsIn",
    "info" : "SingleVariableDeclaration[26423-26462]:SingleVariableDeclaration[26423-26462]"
  }, {
    "left" : "Set<String> ignored",
    "right" : "Set<String> ignored",
    "info" : "SingleVariableDeclaration[26476-26495]:SingleVariableDeclaration[26476-26495]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[26512-26532]:SimpleType[26512-26532]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26537-28008]:Block[26537-28008]"
  }, {
    "left" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
    "right" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
    "info" : "VariableDeclarationStatement[26547-26677]:VariableDeclarationStatement[26547-26677]"
  }, {
    "left" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
    "right" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
    "info" : "VariableDeclarationStatement[26686-26759]:VariableDeclarationStatement[26686-26759]"
  }, {
    "left" : "for (BeanPropertyDefinition property : propDefsIn)",
    "right" : "for (BeanPropertyDefinition property : propDefsIn)",
    "info" : "EnhancedForStatement[26846-27979]:EnhancedForStatement[26846-27979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26897-27979]:Block[26897-27979]"
  }, {
    "left" : "String name = property.getName();",
    "right" : "String name = property.getName();",
    "info" : "VariableDeclarationStatement[26911-26944]:VariableDeclarationStatement[26911-26944]"
  }, {
    "left" : "if (ignored.contains(name))",
    "right" : "if (ignored.contains(name))",
    "info" : "IfStatement[26957-27097]:IfStatement[26957-27097]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26985-27097]:Block[26985-27097]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[27074-27083]:ContinueStatement[27074-27083]"
  }, {
    "left" : "if (!property.hasConstructorParameter())",
    "right" : "if (!property.hasConstructorParameter())",
    "info" : "IfStatement[27110-27935]:IfStatement[27110-27935]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27151-27935]:Block[27151-27935]"
  }, {
    "left" : "Class<?> rawPropertyType = null;",
    "right" : "Class<?> rawPropertyType = null;",
    "info" : "VariableDeclarationStatement[27202-27234]:VariableDeclarationStatement[27202-27234]"
  }, {
    "left" : "if (property.hasSetter())",
    "right" : "if (property.hasSetter())",
    "info" : "IfStatement[27251-27501]:IfStatement[27251-27501]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27277-27379]:Block[27277-27379]"
  }, {
    "left" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
    "right" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
    "info" : "ExpressionStatement[27299-27361]:ExpressionStatement[27299-27361]"
  }, {
    "left" : "if (property.hasField())",
    "right" : "if (property.hasField())",
    "info" : "IfStatement[27385-27501]:IfStatement[27385-27501]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27410-27501]:Block[27410-27501]"
  }, {
    "left" : "rawPropertyType = property.getField().getRawType();",
    "right" : "rawPropertyType = property.getField().getRawType();",
    "info" : "ExpressionStatement[27432-27483]:ExpressionStatement[27432-27483]"
  }, {
    "left" : "if ((rawPropertyType != null)\n                        && (isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes)))",
    "right" : "if ((rawPropertyType != null)\n                        && (isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes)))",
    "info" : "IfStatement[27597-27921]:IfStatement[27597-27921]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27732-27921]:Block[27732-27921]"
  }, {
    "left" : "builder.addIgnorable(name);",
    "right" : "builder.addIgnorable(name);",
    "info" : "ExpressionStatement[27846-27873]:ExpressionStatement[27846-27873]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[27894-27903]:ContinueStatement[27894-27903]"
  }, {
    "left" : "result.add(property);",
    "right" : "result.add(property);",
    "info" : "ExpressionStatement[27948-27969]:ExpressionStatement[27948-27969]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[27988-28002]:ReturnStatement[27988-28002]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[28187-28196]:Modifier[28187-28196]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[28197-28201]:PrimitiveType[28197-28201]"
  }, {
    "left" : "addReferenceProperties",
    "right" : "addReferenceProperties",
    "info" : "SimpleName[28202-28224]:SimpleName[28202-28224]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[28225-28252]:SingleVariableDeclaration[28225-28252]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[28266-28290]:SingleVariableDeclaration[28266-28290]"
  }, {
    "left" : "BeanDeserializerBuilder builder",
    "right" : "BeanDeserializerBuilder builder",
    "info" : "SingleVariableDeclaration[28292-28323]:SingleVariableDeclaration[28292-28323]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[28340-28360]:SimpleType[28340-28360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28365-29268]:Block[28365-29268]"
  }, {
    "left" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
    "right" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
    "info" : "VariableDeclarationStatement[28456-28530]:VariableDeclarationStatement[28456-28530]"
  }, {
    "left" : "if (refs != null)",
    "right" : "if (refs != null)",
    "info" : "IfStatement[28539-29262]:IfStatement[28539-29262]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28557-29262]:Block[28557-29262]"
  }, {
    "left" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
    "right" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
    "info" : "EnhancedForStatement[28571-29252]:EnhancedForStatement[28571-29252]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28633-29252]:Block[28633-29252]"
  }, {
    "left" : "String name = en.getKey();",
    "right" : "String name = en.getKey();",
    "info" : "VariableDeclarationStatement[28651-28677]:VariableDeclarationStatement[28651-28677]"
  }, {
    "left" : "AnnotatedMember m = en.getValue();",
    "right" : "AnnotatedMember m = en.getValue();",
    "info" : "VariableDeclarationStatement[28694-28728]:VariableDeclarationStatement[28694-28728]"
  }, {
    "left" : "JavaType type;",
    "right" : "JavaType type;",
    "info" : "VariableDeclarationStatement[28745-28759]:VariableDeclarationStatement[28745-28759]"
  }, {
    "left" : "if (m instanceof AnnotatedMethod)",
    "right" : "if (m instanceof AnnotatedMethod)",
    "info" : "IfStatement[28776-28964]:IfStatement[28776-28964]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28810-28899]:Block[28810-28899]"
  }, {
    "left" : "type = ((AnnotatedMethod) m).getParameterType(0);",
    "right" : "type = ((AnnotatedMethod) m).getParameterType(0);",
    "info" : "ExpressionStatement[28832-28881]:ExpressionStatement[28832-28881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28905-28964]:Block[28905-28964]"
  }, {
    "left" : "type = m.getType();",
    "right" : "type = m.getType();",
    "info" : "ExpressionStatement[28927-28946]:ExpressionStatement[28927-28946]"
  }, {
    "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                \t\tctxt.getConfig(), m);",
    "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                \t\tctxt.getConfig(), m);",
    "info" : "VariableDeclarationStatement[28981-29099]:VariableDeclarationStatement[28981-29099]"
  }, {
    "left" : "builder.addBackReferenceProperty(name, constructSettableProperty(\n                        ctxt, beanDesc, propDef, type));",
    "right" : "builder.addBackReferenceProperty(name, constructSettableProperty(\n                        ctxt, beanDesc, propDef, type));",
    "info" : "ExpressionStatement[29116-29238]:ExpressionStatement[29116-29238]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[29484-29493]:Modifier[29484-29493]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[29494-29498]:PrimitiveType[29494-29498]"
  }, {
    "left" : "addInjectables",
    "right" : "addInjectables",
    "info" : "SimpleName[29499-29513]:SimpleName[29499-29513]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[29514-29541]:SingleVariableDeclaration[29514-29541]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[29555-29579]:SingleVariableDeclaration[29555-29579]"
  }, {
    "left" : "BeanDeserializerBuilder builder",
    "right" : "BeanDeserializerBuilder builder",
    "info" : "SingleVariableDeclaration[29581-29612]:SingleVariableDeclaration[29581-29612]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[29629-29649]:SimpleType[29629-29649]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29654-30406]:Block[29654-30406]"
  }, {
    "left" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
    "right" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
    "info" : "VariableDeclarationStatement[29664-29726]:VariableDeclarationStatement[29664-29726]"
  }, {
    "left" : "if (raw != null)",
    "right" : "if (raw != null)",
    "info" : "IfStatement[29735-30400]:IfStatement[29735-30400]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29752-30400]:Block[29752-30400]"
  }, {
    "left" : "boolean fixAccess = ctxt.canOverrideAccessModifiers();",
    "right" : "boolean fixAccess = ctxt.canOverrideAccessModifiers();",
    "info" : "VariableDeclarationStatement[29766-29820]:VariableDeclarationStatement[29766-29820]"
  }, {
    "left" : "boolean forceAccess = fixAccess && ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS);",
    "right" : "boolean forceAccess = fixAccess && ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS);",
    "info" : "VariableDeclarationStatement[29833-29931]:VariableDeclarationStatement[29833-29931]"
  }, {
    "left" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
    "right" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
    "info" : "EnhancedForStatement[29944-30390]:EnhancedForStatement[29944-30390]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30008-30390]:Block[30008-30390]"
  }, {
    "left" : "AnnotatedMember m = entry.getValue();",
    "right" : "AnnotatedMember m = entry.getValue();",
    "info" : "VariableDeclarationStatement[30026-30063]:VariableDeclarationStatement[30026-30063]"
  }, {
    "left" : "if (fixAccess)",
    "right" : "if (fixAccess)",
    "info" : "IfStatement[30080-30188]:IfStatement[30080-30188]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30095-30188]:Block[30095-30188]"
  }, {
    "left" : "m.fixAccess(forceAccess);",
    "right" : "m.fixAccess(forceAccess);",
    "info" : "ExpressionStatement[30117-30142]:ExpressionStatement[30117-30142]"
  }, {
    "left" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
    "right" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
    "info" : "ExpressionStatement[30205-30376]:ExpressionStatement[30205-30376]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[30607-30616]:Modifier[30607-30616]"
  }, {
    "left" : "SettableAnyProperty",
    "right" : "SettableAnyProperty",
    "info" : "SimpleType[30617-30636]:SimpleType[30617-30636]"
  }, {
    "left" : "constructAnySetter",
    "right" : "constructAnySetter",
    "info" : "SimpleName[30637-30655]:SimpleName[30637-30655]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[30656-30683]:SingleVariableDeclaration[30656-30683]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[30697-30721]:SingleVariableDeclaration[30697-30721]"
  }, {
    "left" : "AnnotatedMethod setter",
    "right" : "AnnotatedMethod setter",
    "info" : "SingleVariableDeclaration[30723-30745]:SingleVariableDeclaration[30723-30745]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[30762-30782]:SimpleType[30762-30782]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30787-32162]:Block[30787-32162]"
  }, {
    "left" : "if (ctxt.canOverrideAccessModifiers())",
    "right" : "if (ctxt.canOverrideAccessModifiers())",
    "info" : "IfStatement[30797-30969]:IfStatement[30797-30969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30836-30969]:Block[30836-30969]"
  }, {
    "left" : "setter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
    "right" : "setter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
    "info" : "ExpressionStatement[30850-30931]:ExpressionStatement[30850-30931]"
  }, {
    "left" : "JavaType type = setter.getParameterType(1);",
    "right" : "JavaType type = setter.getParameterType(1);",
    "info" : "VariableDeclarationStatement[31042-31085]:VariableDeclarationStatement[31042-31085]"
  }, {
    "left" : "BeanProperty.Std property = new BeanProperty.Std(PropertyName.construct(setter.getName()),\n                type, null, beanDesc.getClassAnnotations(), setter,\n                PropertyMetadata.STD_OPTIONAL);",
    "right" : "BeanProperty.Std property = new BeanProperty.Std(PropertyName.construct(setter.getName()),\n                type, null, beanDesc.getClassAnnotations(), setter,\n                PropertyMetadata.STD_OPTIONAL);",
    "info" : "VariableDeclarationStatement[31094-31300]:VariableDeclarationStatement[31094-31300]"
  }, {
    "left" : "type = resolveType(ctxt, beanDesc, type, setter);",
    "right" : "type = resolveType(ctxt, beanDesc, type, setter);",
    "info" : "ExpressionStatement[31309-31358]:ExpressionStatement[31309-31358]"
  }, {
    "left" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, setter);",
    "right" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, setter);",
    "info" : "VariableDeclarationStatement[31626-31704]:VariableDeclarationStatement[31626-31704]"
  }, {
    "left" : "type = modifyTypeByAnnotation(ctxt, setter, type);",
    "right" : "type = modifyTypeByAnnotation(ctxt, setter, type);",
    "info" : "ExpressionStatement[31865-31915]:ExpressionStatement[31865-31915]"
  }, {
    "left" : "if (deser == null)",
    "right" : "if (deser == null)",
    "info" : "IfStatement[31924-31998]:IfStatement[31924-31998]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31943-31998]:Block[31943-31998]"
  }, {
    "left" : "deser = type.getValueHandler();",
    "right" : "deser = type.getValueHandler();",
    "info" : "ExpressionStatement[31957-31988]:ExpressionStatement[31957-31988]"
  }, {
    "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
    "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
    "info" : "VariableDeclarationStatement[32007-32058]:VariableDeclarationStatement[32007-32058]"
  }, {
    "left" : "return new SettableAnyProperty(property, setter, type,\n                deser, typeDeser);",
    "right" : "return new SettableAnyProperty(property, setter, type,\n                deser, typeDeser);",
    "info" : "ReturnStatement[32067-32156]:ReturnStatement[32067-32156]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[32429-32438]:Modifier[32429-32438]"
  }, {
    "left" : "SettableBeanProperty",
    "right" : "SettableBeanProperty",
    "info" : "SimpleType[32439-32459]:SimpleType[32439-32459]"
  }, {
    "left" : "constructSettableProperty",
    "right" : "constructSettableProperty",
    "info" : "SimpleName[32460-32485]:SimpleName[32460-32485]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[32486-32513]:SingleVariableDeclaration[32486-32513]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[32527-32551]:SingleVariableDeclaration[32527-32551]"
  }, {
    "left" : "BeanPropertyDefinition propDef",
    "right" : "BeanPropertyDefinition propDef",
    "info" : "SingleVariableDeclaration[32553-32583]:SingleVariableDeclaration[32553-32583]"
  }, {
    "left" : "JavaType propType0",
    "right" : "JavaType propType0",
    "info" : "SingleVariableDeclaration[32597-32615]:SingleVariableDeclaration[32597-32615]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[32632-32652]:SimpleType[32632-32652]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32657-34927]:Block[32657-35092]"
  }, {
    "left" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
    "right" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
    "info" : "VariableDeclarationStatement[32729-32790]:VariableDeclarationStatement[32729-32790]"
  }, {
    "left" : "if (ctxt.canOverrideAccessModifiers())",
    "right" : "if (ctxt.canOverrideAccessModifiers())",
    "info" : "IfStatement[32800-33187]:IfStatement[32800-33352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32839-33187]:Block[33228-33342]"
  }, {
    "left" : "mutator.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
    "right" : "mutator.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
    "info" : "ExpressionStatement[33095-33177]:ExpressionStatement[33246-33328]"
  }, {
    "left" : "BeanProperty.Std property = new BeanProperty.Std(propDef.getFullName(),\n                propType0, propDef.getWrapperName(),\n                beanDesc.getClassAnnotations(), mutator, propDef.getMetadata());",
    "right" : "BeanProperty.Std property = new BeanProperty.Std(propDef.getFullName(),\n                propType0, propDef.getWrapperName(),\n                beanDesc.getClassAnnotations(), mutator, propDef.getMetadata());",
    "info" : "VariableDeclarationStatement[33279-33484]:VariableDeclarationStatement[33444-33649]"
  }, {
    "left" : "JavaType type = resolveType(ctxt, beanDesc, propType0, mutator);",
    "right" : "JavaType type = resolveType(ctxt, beanDesc, propType0, mutator);",
    "info" : "VariableDeclarationStatement[33493-33557]:VariableDeclarationStatement[33658-33722]"
  }, {
    "left" : "if (type != propType0)",
    "right" : "if (type != propType0)",
    "info" : "IfStatement[33594-33676]:IfStatement[33759-33841]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33617-33676]:Block[33782-33841]"
  }, {
    "left" : "property = property.withType(type);",
    "right" : "property = property.withType(type);",
    "info" : "ExpressionStatement[33631-33666]:ExpressionStatement[33796-33831]"
  }, {
    "left" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, mutator);",
    "right" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, mutator);",
    "info" : "VariableDeclarationStatement[33774-33857]:VariableDeclarationStatement[33939-34022]"
  }, {
    "left" : "type = modifyTypeByAnnotation(ctxt, mutator, type);",
    "right" : "type = modifyTypeByAnnotation(ctxt, mutator, type);",
    "info" : "ExpressionStatement[33866-33917]:ExpressionStatement[34031-34082]"
  }, {
    "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
    "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
    "info" : "VariableDeclarationStatement[33926-33977]:VariableDeclarationStatement[34091-34142]"
  }, {
    "left" : "SettableBeanProperty prop;",
    "right" : "SettableBeanProperty prop;",
    "info" : "VariableDeclarationStatement[33986-34012]:VariableDeclarationStatement[34151-34177]"
  }, {
    "left" : "if (mutator instanceof AnnotatedMethod)",
    "right" : "if (mutator instanceof AnnotatedMethod)",
    "info" : "IfStatement[34021-34375]:IfStatement[34186-34540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34061-34216]:Block[34226-34381]"
  }, {
    "left" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
    "right" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
    "info" : "ExpressionStatement[34075-34206]:ExpressionStatement[34240-34371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34222-34375]:Block[34387-34540]"
  }, {
    "left" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
    "right" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
    "info" : "ExpressionStatement[34236-34365]:ExpressionStatement[34401-34530]"
  }, {
    "left" : "if (propDeser != null)",
    "right" : "if (propDeser != null)",
    "info" : "IfStatement[34384-34476]:IfStatement[34549-34641]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34407-34476]:Block[34572-34641]"
  }, {
    "left" : "prop = prop.withValueDeserializer(propDeser);",
    "right" : "prop = prop.withValueDeserializer(propDeser);",
    "info" : "ExpressionStatement[34421-34466]:ExpressionStatement[34586-34631]"
  }, {
    "left" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
    "right" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
    "info" : "VariableDeclarationStatement[34547-34622]:VariableDeclarationStatement[34712-34787]"
  }, {
    "left" : "if (ref != null && ref.isManagedReference())",
    "right" : "if (ref != null && ref.isManagedReference())",
    "info" : "IfStatement[34631-34744]:IfStatement[34796-34909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34676-34744]:Block[34841-34909]"
  }, {
    "left" : "prop.setManagedReferenceName(ref.getName());",
    "right" : "prop.setManagedReferenceName(ref.getName());",
    "info" : "ExpressionStatement[34690-34734]:ExpressionStatement[34855-34899]"
  }, {
    "left" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
    "right" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
    "info" : "VariableDeclarationStatement[34753-34808]:VariableDeclarationStatement[34918-34973]"
  }, {
    "left" : "if(objectIdInfo != null)",
    "right" : "if(objectIdInfo != null)",
    "info" : "IfStatement[34817-34900]:IfStatement[34982-35065]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34841-34900]:Block[35006-35065]"
  }, {
    "left" : "prop.setObjectIdInfo(objectIdInfo);",
    "right" : "prop.setObjectIdInfo(objectIdInfo);",
    "info" : "ExpressionStatement[34855-34890]:ExpressionStatement[35020-35055]"
  }, {
    "left" : "return prop;",
    "right" : "return prop;",
    "info" : "ReturnStatement[34909-34921]:ReturnStatement[35074-35086]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[35052-35061]:Modifier[35217-35226]"
  }, {
    "left" : "SettableBeanProperty",
    "right" : "SettableBeanProperty",
    "info" : "SimpleType[35062-35082]:SimpleType[35227-35247]"
  }, {
    "left" : "constructSetterlessProperty",
    "right" : "constructSetterlessProperty",
    "info" : "SimpleName[35083-35110]:SimpleName[35248-35275]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[35111-35138]:SingleVariableDeclaration[35276-35303]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[35152-35176]:SingleVariableDeclaration[35317-35341]"
  }, {
    "left" : "BeanPropertyDefinition propDef",
    "right" : "BeanPropertyDefinition propDef",
    "info" : "SingleVariableDeclaration[35178-35208]:SingleVariableDeclaration[35343-35373]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[35225-35245]:SimpleType[35390-35410]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35250-36231]:Block[35415-36396]"
  }, {
    "left" : "final AnnotatedMethod getter = propDef.getGetter();",
    "right" : "final AnnotatedMethod getter = propDef.getGetter();",
    "info" : "VariableDeclarationStatement[35260-35311]:VariableDeclarationStatement[35425-35476]"
  }, {
    "left" : "if (ctxt.canOverrideAccessModifiers())",
    "right" : "if (ctxt.canOverrideAccessModifiers())",
    "info" : "IfStatement[35366-35510]:IfStatement[35531-35675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35405-35510]:Block[35570-35675]"
  }, {
    "left" : "getter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
    "right" : "getter.fixAccess(ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
    "info" : "ExpressionStatement[35419-35500]:ExpressionStatement[35584-35665]"
  }, {
    "left" : "JavaType type = getter.getType();",
    "right" : "JavaType type = getter.getType();",
    "info" : "VariableDeclarationStatement[35519-35552]:VariableDeclarationStatement[35684-35717]"
  }, {
    "left" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, getter);",
    "right" : "JsonDeserializer<Object> propDeser = findDeserializerFromAnnotation(ctxt, getter);",
    "info" : "VariableDeclarationStatement[35649-35731]:VariableDeclarationStatement[35814-35896]"
  }, {
    "left" : "type = modifyTypeByAnnotation(ctxt, getter, type);",
    "right" : "type = modifyTypeByAnnotation(ctxt, getter, type);",
    "info" : "ExpressionStatement[35740-35790]:ExpressionStatement[35905-35955]"
  }, {
    "left" : "type = resolveType(ctxt, beanDesc, type, getter);",
    "right" : "type = resolveType(ctxt, beanDesc, type, getter);",
    "info" : "ExpressionStatement[35852-35901]:ExpressionStatement[36017-36066]"
  }, {
    "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
    "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
    "info" : "VariableDeclarationStatement[35910-35961]:VariableDeclarationStatement[36075-36126]"
  }, {
    "left" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
    "right" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
    "info" : "VariableDeclarationStatement[35970-36103]:VariableDeclarationStatement[36135-36268]"
  }, {
    "left" : "if (propDeser != null)",
    "right" : "if (propDeser != null)",
    "info" : "IfStatement[36112-36204]:IfStatement[36277-36369]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36135-36204]:Block[36300-36369]"
  }, {
    "left" : "prop = prop.withValueDeserializer(propDeser);",
    "right" : "prop = prop.withValueDeserializer(propDeser);",
    "info" : "ExpressionStatement[36149-36194]:ExpressionStatement[36314-36359]"
  }, {
    "left" : "return prop;",
    "right" : "return prop;",
    "info" : "ReturnStatement[36213-36225]:ReturnStatement[36378-36390]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[36766-36775]:Modifier[36931-36940]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[36776-36783]:PrimitiveType[36941-36948]"
  }, {
    "left" : "isPotentialBeanType",
    "right" : "isPotentialBeanType",
    "info" : "SimpleName[36784-36803]:SimpleName[36949-36968]"
  }, {
    "left" : "Class<?> type",
    "right" : "Class<?> type",
    "info" : "SingleVariableDeclaration[36804-36817]:SingleVariableDeclaration[36969-36982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36823-37634]:Block[36988-37799]"
  }, {
    "left" : "String typeStr = ClassUtil.canBeABeanType(type);",
    "right" : "String typeStr = ClassUtil.canBeABeanType(type);",
    "info" : "VariableDeclarationStatement[36833-36881]:VariableDeclarationStatement[36998-37046]"
  }, {
    "left" : "if (typeStr != null)",
    "right" : "if (typeStr != null)",
    "info" : "IfStatement[36890-37050]:IfStatement[37055-37215]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36911-37050]:Block[37076-37215]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
    "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
    "info" : "ThrowStatement[36925-37040]:ThrowStatement[37090-37205]"
  }, {
    "left" : "if (ClassUtil.isProxyType(type))",
    "right" : "if (ClassUtil.isProxyType(type))",
    "info" : "IfStatement[37059-37215]:IfStatement[37224-37380]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37092-37215]:Block[37257-37380]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
    "right" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
    "info" : "ThrowStatement[37106-37205]:ThrowStatement[37271-37370]"
  }, {
    "left" : "typeStr = ClassUtil.isLocalType(type, true);",
    "right" : "typeStr = ClassUtil.isLocalType(type, true);",
    "info" : "ExpressionStatement[37394-37438]:ExpressionStatement[37559-37603]"
  }, {
    "left" : "if (typeStr != null)",
    "right" : "if (typeStr != null)",
    "info" : "IfStatement[37447-37607]:IfStatement[37612-37772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37468-37607]:Block[37633-37772]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
    "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
    "info" : "ThrowStatement[37482-37597]:ThrowStatement[37647-37762]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[37616-37628]:ReturnStatement[37781-37793]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[37800-37809]:Modifier[37965-37974]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[37810-37817]:PrimitiveType[37975-37982]"
  }, {
    "left" : "isIgnorableType",
    "right" : "isIgnorableType",
    "info" : "SimpleName[37818-37833]:SimpleName[37983-37998]"
  }, {
    "left" : "DeserializationConfig config",
    "right" : "DeserializationConfig config",
    "info" : "SingleVariableDeclaration[37834-37862]:SingleVariableDeclaration[37999-38027]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[37864-37888]:SingleVariableDeclaration[38029-38053]"
  }, {
    "left" : "Class<?> type",
    "right" : "Class<?> type",
    "info" : "SingleVariableDeclaration[37902-37915]:SingleVariableDeclaration[38067-38080]"
  }, {
    "left" : "Map<Class<?>,Boolean> ignoredTypes",
    "right" : "Map<Class<?>,Boolean> ignoredTypes",
    "info" : "SingleVariableDeclaration[37917-37951]:SingleVariableDeclaration[38082-38116]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37957-38376]:Block[38122-38541]"
  }, {
    "left" : "Boolean status = ignoredTypes.get(type);",
    "right" : "Boolean status = ignoredTypes.get(type);",
    "info" : "VariableDeclarationStatement[37967-38007]:VariableDeclarationStatement[38132-38172]"
  }, {
    "left" : "if (status != null)",
    "right" : "if (status != null)",
    "info" : "IfStatement[38016-38089]:IfStatement[38181-38254]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38036-38089]:Block[38201-38254]"
  }, {
    "left" : "return status.booleanValue();",
    "right" : "return status.booleanValue();",
    "info" : "ReturnStatement[38050-38079]:ReturnStatement[38215-38244]"
  }, {
    "left" : "BeanDescription desc = config.introspectClassAnnotations(type);",
    "right" : "BeanDescription desc = config.introspectClassAnnotations(type);",
    "info" : "VariableDeclarationStatement[38098-38161]:VariableDeclarationStatement[38263-38326]"
  }, {
    "left" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
    "right" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
    "info" : "ExpressionStatement[38170-38251]:ExpressionStatement[38335-38416]"
  }, {
    "left" : "return (status == null) ? false : status.booleanValue();",
    "right" : "return (status == null) ? false : status.booleanValue();",
    "info" : "ReturnStatement[38313-38369]:ReturnStatement[38478-38534]"
  } ]
}