{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CategoryPlot",
      "right" : "CategoryPlot",
      "info" : "TypeDeclaration[11644-145554]:TypeDeclaration[11644-145694]"
    }, {
      "left" : "private static final long serialVersionUID = -3537691700434728188L;",
      "right" : "private static final long serialVersionUID = -3537691700434728188L;",
      "info" : "FieldDeclaration[11968-12066]:FieldDeclaration[11968-12066]"
    }, {
      "left" : "public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;",
      "right" : "public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;",
      "info" : "FieldDeclaration[12078-12258]:FieldDeclaration[12078-12258]"
    }, {
      "left" : "public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;",
      "right" : "public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;",
      "info" : "FieldDeclaration[12266-12443]:FieldDeclaration[12266-12443]"
    }, {
      "left" : "public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\r\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] \r\n            {2.0f, 2.0f}, 0.0f);",
      "right" : "public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\r\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] \r\n            {2.0f, 2.0f}, 0.0f);",
      "info" : "FieldDeclaration[12451-12679]:FieldDeclaration[12451-12679]"
    }, {
      "left" : "public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;",
      "right" : "public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;",
      "info" : "FieldDeclaration[12687-12791]:FieldDeclaration[12687-12791]"
    }, {
      "left" : "public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(\"SansSerif\", \r\n            Font.PLAIN, 10);",
      "right" : "public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(\"SansSerif\", \r\n            Font.PLAIN, 10);",
      "info" : "FieldDeclaration[12799-12945]:FieldDeclaration[12799-12945]"
    }, {
      "left" : "public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;",
      "right" : "public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;",
      "info" : "FieldDeclaration[12953-13107]:FieldDeclaration[12953-13107]"
    }, {
      "left" : "public static final Stroke DEFAULT_CROSSHAIR_STROKE\r\n            = DEFAULT_GRIDLINE_STROKE;",
      "right" : "public static final Stroke DEFAULT_CROSSHAIR_STROKE\r\n            = DEFAULT_GRIDLINE_STROKE;",
      "info" : "FieldDeclaration[13115-13294]:FieldDeclaration[13115-13294]"
    }, {
      "left" : "public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;",
      "right" : "public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;",
      "info" : "FieldDeclaration[13302-13452]:FieldDeclaration[13302-13452]"
    }, {
      "left" : "protected static ResourceBundle localizationResources \r\n            = ResourceBundle.getBundle(\r\n            \"org.jfree.chart.plot.LocalizationBundle\");",
      "right" : "protected static ResourceBundle localizationResources \r\n            = ResourceBundle.getBundle(\r\n            \"org.jfree.chart.plot.LocalizationBundle\");",
      "info" : "FieldDeclaration[13460-13665]:FieldDeclaration[13460-13665]"
    }, {
      "left" : "private PlotOrientation orientation;",
      "right" : "private PlotOrientation orientation;",
      "info" : "FieldDeclaration[13673-13743]:FieldDeclaration[13673-13743]"
    }, {
      "left" : "private RectangleInsets axisOffset;",
      "right" : "private RectangleInsets axisOffset;",
      "info" : "FieldDeclaration[13751-13845]:FieldDeclaration[13751-13845]"
    }, {
      "left" : "private ObjectList domainAxes;",
      "right" : "private ObjectList domainAxes;",
      "info" : "FieldDeclaration[13853-13924]:FieldDeclaration[13853-13924]"
    }, {
      "left" : "private ObjectList domainAxisLocations;",
      "right" : "private ObjectList domainAxisLocations;",
      "info" : "FieldDeclaration[13932-14022]:FieldDeclaration[13932-14022]"
    }, {
      "left" : "private boolean drawSharedDomainAxis;",
      "right" : "private boolean drawSharedDomainAxis;",
      "info" : "FieldDeclaration[14030-14228]:FieldDeclaration[14030-14228]"
    }, {
      "left" : "private ObjectList rangeAxes;",
      "right" : "private ObjectList rangeAxes;",
      "info" : "FieldDeclaration[14236-14305]:FieldDeclaration[14236-14305]"
    }, {
      "left" : "private ObjectList rangeAxisLocations;",
      "right" : "private ObjectList rangeAxisLocations;",
      "info" : "FieldDeclaration[14313-14401]:FieldDeclaration[14313-14401]"
    }, {
      "left" : "private ObjectList datasets;",
      "right" : "private ObjectList datasets;",
      "info" : "FieldDeclaration[14409-14475]:FieldDeclaration[14409-14475]"
    }, {
      "left" : "private ObjectList datasetToDomainAxisMap;",
      "right" : "private ObjectList datasetToDomainAxisMap;",
      "info" : "FieldDeclaration[14483-14588]:FieldDeclaration[14483-14588]"
    }, {
      "left" : "private ObjectList datasetToRangeAxisMap;",
      "right" : "private ObjectList datasetToRangeAxisMap;",
      "info" : "FieldDeclaration[14600-14703]:FieldDeclaration[14600-14703]"
    }, {
      "left" : "private ObjectList renderers;",
      "right" : "private ObjectList renderers;",
      "info" : "FieldDeclaration[14711-14779]:FieldDeclaration[14711-14779]"
    }, {
      "left" : "private DatasetRenderingOrder renderingOrder \r\n            = DatasetRenderingOrder.REVERSE;",
      "right" : "private DatasetRenderingOrder renderingOrder \r\n            = DatasetRenderingOrder.REVERSE;",
      "info" : "FieldDeclaration[14787-14919]:FieldDeclaration[14787-14919]"
    }, {
      "left" : "private SortOrder columnRenderingOrder = SortOrder.ASCENDING;",
      "right" : "private SortOrder columnRenderingOrder = SortOrder.ASCENDING;",
      "info" : "FieldDeclaration[14927-15110]:FieldDeclaration[14927-15110]"
    }, {
      "left" : "private SortOrder rowRenderingOrder = SortOrder.ASCENDING;",
      "right" : "private SortOrder rowRenderingOrder = SortOrder.ASCENDING;",
      "info" : "FieldDeclaration[15122-15299]:FieldDeclaration[15122-15299]"
    }, {
      "left" : "private boolean domainGridlinesVisible;",
      "right" : "private boolean domainGridlinesVisible;",
      "info" : "FieldDeclaration[15311-15464]:FieldDeclaration[15311-15464]"
    }, {
      "left" : "private CategoryAnchor domainGridlinePosition;",
      "right" : "private CategoryAnchor domainGridlinePosition;",
      "info" : "FieldDeclaration[15472-15593]:FieldDeclaration[15472-15593]"
    }, {
      "left" : "private transient Stroke domainGridlineStroke;",
      "right" : "private transient Stroke domainGridlineStroke;",
      "info" : "FieldDeclaration[15601-15706]:FieldDeclaration[15601-15706]"
    }, {
      "left" : "private transient Paint domainGridlinePaint;",
      "right" : "private transient Paint domainGridlinePaint;",
      "info" : "FieldDeclaration[15714-15817]:FieldDeclaration[15714-15817]"
    }, {
      "left" : "private boolean rangeGridlinesVisible;",
      "right" : "private boolean rangeGridlinesVisible;",
      "info" : "FieldDeclaration[15825-15976]:FieldDeclaration[15825-15976]"
    }, {
      "left" : "private transient Stroke rangeGridlineStroke;",
      "right" : "private transient Stroke rangeGridlineStroke;",
      "info" : "FieldDeclaration[15984-16092]:FieldDeclaration[15984-16092]"
    }, {
      "left" : "private transient Paint rangeGridlinePaint;",
      "right" : "private transient Paint rangeGridlinePaint;",
      "info" : "FieldDeclaration[16100-16205]:FieldDeclaration[16100-16205]"
    }, {
      "left" : "private double anchorValue;",
      "right" : "private double anchorValue;",
      "info" : "FieldDeclaration[16213-16270]:FieldDeclaration[16213-16270]"
    }, {
      "left" : "private boolean rangeCrosshairVisible;",
      "right" : "private boolean rangeCrosshairVisible;",
      "info" : "FieldDeclaration[16278-16392]:FieldDeclaration[16278-16392]"
    }, {
      "left" : "private double rangeCrosshairValue;",
      "right" : "private double rangeCrosshairValue;",
      "info" : "FieldDeclaration[16400-16474]:FieldDeclaration[16400-16474]"
    }, {
      "left" : "private transient Stroke rangeCrosshairStroke;",
      "right" : "private transient Stroke rangeCrosshairStroke;",
      "info" : "FieldDeclaration[16482-16591]:FieldDeclaration[16482-16591]"
    }, {
      "left" : "private transient Paint rangeCrosshairPaint;",
      "right" : "private transient Paint rangeCrosshairPaint;",
      "info" : "FieldDeclaration[16599-16702]:FieldDeclaration[16599-16702]"
    }, {
      "left" : "private boolean rangeCrosshairLockedOnData = true;",
      "right" : "private boolean rangeCrosshairLockedOnData = true;",
      "info" : "FieldDeclaration[16710-16878]:FieldDeclaration[16710-16878]"
    }, {
      "left" : "private Map foregroundDomainMarkers;",
      "right" : "private Map foregroundDomainMarkers;",
      "info" : "FieldDeclaration[16886-16989]:FieldDeclaration[16886-16989]"
    }, {
      "left" : "private Map backgroundDomainMarkers;",
      "right" : "private Map backgroundDomainMarkers;",
      "info" : "FieldDeclaration[16997-17100]:FieldDeclaration[16997-17100]"
    }, {
      "left" : "private Map foregroundRangeMarkers;",
      "right" : "private Map foregroundRangeMarkers;",
      "info" : "FieldDeclaration[17108-17209]:FieldDeclaration[17108-17209]"
    }, {
      "left" : "private Map backgroundRangeMarkers;",
      "right" : "private Map backgroundRangeMarkers;",
      "info" : "FieldDeclaration[17217-17318]:FieldDeclaration[17217-17318]"
    }, {
      "left" : "private List annotations;",
      "right" : "private List annotations;",
      "info" : "FieldDeclaration[17326-17542]:FieldDeclaration[17326-17542]"
    }, {
      "left" : "private int weight;",
      "right" : "private int weight;",
      "info" : "FieldDeclaration[17550-17702]:FieldDeclaration[17550-17702]"
    }, {
      "left" : "private AxisSpace fixedDomainAxisSpace;",
      "right" : "private AxisSpace fixedDomainAxisSpace;",
      "info" : "FieldDeclaration[17710-17798]:FieldDeclaration[17710-17798]"
    }, {
      "left" : "private AxisSpace fixedRangeAxisSpace;",
      "right" : "private AxisSpace fixedRangeAxisSpace;",
      "info" : "FieldDeclaration[17806-17892]:FieldDeclaration[17806-17892]"
    }, {
      "left" : "private LegendItemCollection fixedLegendItems;",
      "right" : "private LegendItemCollection fixedLegendItems;",
      "info" : "FieldDeclaration[17900-18075]:FieldDeclaration[17900-18075]"
    }, {
      "left" : "public CategoryPlot()",
      "right" : "public CategoryPlot()",
      "info" : "MethodDeclaration[18087-18203]:MethodDeclaration[18087-18203]"
    }, {
      "left" : "public CategoryPlot(CategoryDataset dataset,\r\n                        CategoryAxis domainAxis,\r\n                        ValueAxis rangeAxis,\r\n                        CategoryItemRenderer renderer)",
      "right" : "public CategoryPlot(CategoryDataset dataset,\r\n                        CategoryAxis domainAxis,\r\n                        ValueAxis rangeAxis,\r\n                        CategoryItemRenderer renderer)",
      "info" : "MethodDeclaration[18211-21651]:MethodDeclaration[18211-21651]"
    }, {
      "left" : "public String getPlotType()",
      "right" : "public String getPlotType()",
      "info" : "MethodDeclaration[21663-21871]:MethodDeclaration[21663-21871]"
    }, {
      "left" : "public PlotOrientation getOrientation()",
      "right" : "public PlotOrientation getOrientation()",
      "info" : "MethodDeclaration[21879-22158]:MethodDeclaration[21879-22158]"
    }, {
      "left" : "public void setOrientation(PlotOrientation orientation)",
      "right" : "public void setOrientation(PlotOrientation orientation)",
      "info" : "MethodDeclaration[22166-22687]:MethodDeclaration[22166-22687]"
    }, {
      "left" : "public RectangleInsets getAxisOffset()",
      "right" : "public RectangleInsets getAxisOffset()",
      "info" : "MethodDeclaration[22695-22947]:MethodDeclaration[22695-22947]"
    }, {
      "left" : "public void setAxisOffset(RectangleInsets offset)",
      "right" : "public void setAxisOffset(RectangleInsets offset)",
      "info" : "MethodDeclaration[22955-23475]:MethodDeclaration[22955-23475]"
    }, {
      "left" : "public CategoryAxis getDomainAxis()",
      "right" : "public CategoryAxis getDomainAxis()",
      "info" : "MethodDeclaration[23483-23907]:MethodDeclaration[23483-23907]"
    }, {
      "left" : "public CategoryAxis getDomainAxis(int index)",
      "right" : "public CategoryAxis getDomainAxis(int index)",
      "info" : "MethodDeclaration[23915-24623]:MethodDeclaration[23915-24623]"
    }, {
      "left" : "public void setDomainAxis(CategoryAxis axis)",
      "right" : "public void setDomainAxis(CategoryAxis axis)",
      "info" : "MethodDeclaration[24631-24958]:MethodDeclaration[24631-24958]"
    }, {
      "left" : "public void setDomainAxis(int index, CategoryAxis axis)",
      "right" : "public void setDomainAxis(int index, CategoryAxis axis)",
      "info" : "MethodDeclaration[24966-25341]:MethodDeclaration[24966-25341]"
    }, {
      "left" : "public void setDomainAxis(int index, CategoryAxis axis, boolean notify)",
      "right" : "public void setDomainAxis(int index, CategoryAxis axis, boolean notify)",
      "info" : "MethodDeclaration[25350-26178]:MethodDeclaration[25350-26178]"
    }, {
      "left" : "public void setDomainAxes(CategoryAxis[] axes)",
      "right" : "public void setDomainAxes(CategoryAxis[] axes)",
      "info" : "MethodDeclaration[26186-26636]:MethodDeclaration[26186-26636]"
    }, {
      "left" : "public int getDomainAxisIndex(CategoryAxis axis)",
      "right" : "public int getDomainAxisIndex(CategoryAxis axis)",
      "info" : "MethodDeclaration[26648-27231]:MethodDeclaration[26648-27231]"
    }, {
      "left" : "public AxisLocation getDomainAxisLocation()",
      "right" : "public AxisLocation getDomainAxisLocation()",
      "info" : "MethodDeclaration[27243-27535]:MethodDeclaration[27243-27535]"
    }, {
      "left" : "public AxisLocation getDomainAxisLocation(int index)",
      "right" : "public AxisLocation getDomainAxisLocation(int index)",
      "info" : "MethodDeclaration[27543-28136]:MethodDeclaration[27543-28136]"
    }, {
      "left" : "public void setDomainAxisLocation(AxisLocation location)",
      "right" : "public void setDomainAxisLocation(AxisLocation location)",
      "info" : "MethodDeclaration[28144-28608]:MethodDeclaration[28144-28608]"
    }, {
      "left" : "public void setDomainAxisLocation(AxisLocation location, boolean notify)",
      "right" : "public void setDomainAxisLocation(AxisLocation location, boolean notify)",
      "info" : "MethodDeclaration[28616-29088]:MethodDeclaration[28616-29088]"
    }, {
      "left" : "public void setDomainAxisLocation(int index, AxisLocation location)",
      "right" : "public void setDomainAxisLocation(int index, AxisLocation location)",
      "info" : "MethodDeclaration[29096-29575]:MethodDeclaration[29096-29575]"
    }, {
      "left" : "public void setDomainAxisLocation(int index, AxisLocation location, \r\n            boolean notify)",
      "right" : "public void setDomainAxisLocation(int index, AxisLocation location, \r\n            boolean notify)",
      "info" : "MethodDeclaration[29587-30396]:MethodDeclaration[29587-30396]"
    }, {
      "left" : "public RectangleEdge getDomainAxisEdge()",
      "right" : "public RectangleEdge getDomainAxisEdge()",
      "info" : "MethodDeclaration[30404-30681]:MethodDeclaration[30404-30681]"
    }, {
      "left" : "public RectangleEdge getDomainAxisEdge(int index)",
      "right" : "public RectangleEdge getDomainAxisEdge(int index)",
      "info" : "MethodDeclaration[30689-31261]:MethodDeclaration[30689-31261]"
    }, {
      "left" : "public int getDomainAxisCount()",
      "right" : "public int getDomainAxisCount()",
      "info" : "MethodDeclaration[31269-31450]:MethodDeclaration[31269-31450]"
    }, {
      "left" : "public void clearDomainAxes()",
      "right" : "public void clearDomainAxes()",
      "info" : "MethodDeclaration[31458-31935]:MethodDeclaration[31458-31935]"
    }, {
      "left" : "public void configureDomainAxes()",
      "right" : "public void configureDomainAxes()",
      "info" : "MethodDeclaration[31943-32265]:MethodDeclaration[31943-32265]"
    }, {
      "left" : "public ValueAxis getRangeAxis()",
      "right" : "public ValueAxis getRangeAxis()",
      "info" : "MethodDeclaration[32273-32622]:MethodDeclaration[32273-32622]"
    }, {
      "left" : "public ValueAxis getRangeAxis(int index)",
      "right" : "public ValueAxis getRangeAxis(int index)",
      "info" : "MethodDeclaration[32630-33268]:MethodDeclaration[32630-33268]"
    }, {
      "left" : "public void setRangeAxis(ValueAxis axis)",
      "right" : "public void setRangeAxis(ValueAxis axis)",
      "info" : "MethodDeclaration[33276-33558]:MethodDeclaration[33276-33558]"
    }, {
      "left" : "public void setRangeAxis(int index, ValueAxis axis)",
      "right" : "public void setRangeAxis(int index, ValueAxis axis)",
      "info" : "MethodDeclaration[33566-33862]:MethodDeclaration[33566-33862]"
    }, {
      "left" : "public void setRangeAxis(int index, ValueAxis axis, boolean notify)",
      "right" : "public void setRangeAxis(int index, ValueAxis axis, boolean notify)",
      "info" : "MethodDeclaration[33878-34663]:MethodDeclaration[33878-34663]"
    }, {
      "left" : "public void setRangeAxes(ValueAxis[] axes)",
      "right" : "public void setRangeAxes(ValueAxis[] axes)",
      "info" : "MethodDeclaration[34671-35119]:MethodDeclaration[34671-35119]"
    }, {
      "left" : "public int getRangeAxisIndex(ValueAxis axis)",
      "right" : "public int getRangeAxisIndex(ValueAxis axis)",
      "info" : "MethodDeclaration[35127-36013]:MethodDeclaration[35127-36013]"
    }, {
      "left" : "public AxisLocation getRangeAxisLocation()",
      "right" : "public AxisLocation getRangeAxisLocation()",
      "info" : "MethodDeclaration[36021-36236]:MethodDeclaration[36021-36236]"
    }, {
      "left" : "public AxisLocation getRangeAxisLocation(int index)",
      "right" : "public AxisLocation getRangeAxisLocation(int index)",
      "info" : "MethodDeclaration[36244-36831]:MethodDeclaration[36244-36831]"
    }, {
      "left" : "public void setRangeAxisLocation(AxisLocation location)",
      "right" : "public void setRangeAxisLocation(AxisLocation location)",
      "info" : "MethodDeclaration[36839-37322]:MethodDeclaration[36839-37322]"
    }, {
      "left" : "public void setRangeAxisLocation(AxisLocation location, boolean notify)",
      "right" : "public void setRangeAxisLocation(AxisLocation location, boolean notify)",
      "info" : "MethodDeclaration[37330-37803]:MethodDeclaration[37330-37803]"
    }, {
      "left" : "public void setRangeAxisLocation(int index, AxisLocation location)",
      "right" : "public void setRangeAxisLocation(int index, AxisLocation location)",
      "info" : "MethodDeclaration[37811-38272]:MethodDeclaration[37811-38272]"
    }, {
      "left" : "public void setRangeAxisLocation(int index, AxisLocation location, \r\n                                     boolean notify)",
      "right" : "public void setRangeAxisLocation(int index, AxisLocation location, \r\n                                     boolean notify)",
      "info" : "MethodDeclaration[38280-39080]:MethodDeclaration[38280-39080]"
    }, {
      "left" : "public RectangleEdge getRangeAxisEdge()",
      "right" : "public RectangleEdge getRangeAxisEdge()",
      "info" : "MethodDeclaration[39088-39317]:MethodDeclaration[39088-39317]"
    }, {
      "left" : "public RectangleEdge getRangeAxisEdge(int index)",
      "right" : "public RectangleEdge getRangeAxisEdge(int index)",
      "info" : "MethodDeclaration[39325-39827]:MethodDeclaration[39325-39827]"
    }, {
      "left" : "public int getRangeAxisCount()",
      "right" : "public int getRangeAxisCount()",
      "info" : "MethodDeclaration[39835-40013]:MethodDeclaration[39835-40013]"
    }, {
      "left" : "public void clearRangeAxes()",
      "right" : "public void clearRangeAxes()",
      "info" : "MethodDeclaration[40021-40488]:MethodDeclaration[40021-40488]"
    }, {
      "left" : "public void configureRangeAxes()",
      "right" : "public void configureRangeAxes()",
      "info" : "MethodDeclaration[40496-40808]:MethodDeclaration[40496-40808]"
    }, {
      "left" : "public CategoryDataset getDataset()",
      "right" : "public CategoryDataset getDataset()",
      "info" : "MethodDeclaration[40816-41084]:MethodDeclaration[40816-41084]"
    }, {
      "left" : "public CategoryDataset getDataset(int index)",
      "right" : "public CategoryDataset getDataset(int index)",
      "info" : "MethodDeclaration[41092-41568]:MethodDeclaration[41092-41568]"
    }, {
      "left" : "public void setDataset(CategoryDataset dataset)",
      "right" : "public void setDataset(CategoryDataset dataset)",
      "info" : "MethodDeclaration[41576-42106]:MethodDeclaration[41576-42106]"
    }, {
      "left" : "public void setDataset(int index, CategoryDataset dataset)",
      "right" : "public void setDataset(int index, CategoryDataset dataset)",
      "info" : "MethodDeclaration[42114-42886]:MethodDeclaration[42114-42886]"
    }, {
      "left" : "public int getDatasetCount()",
      "right" : "public int getDatasetCount()",
      "info" : "MethodDeclaration[42894-43105]:MethodDeclaration[42894-43105]"
    }, {
      "left" : "public void mapDatasetToDomainAxis(int index, int axisIndex)",
      "right" : "public void mapDatasetToDomainAxis(int index, int axisIndex)",
      "info" : "MethodDeclaration[43113-43631]:MethodDeclaration[43113-43631]"
    }, {
      "left" : "public CategoryAxis getDomainAxisForDataset(int index)",
      "right" : "public CategoryAxis getDomainAxisForDataset(int index)",
      "info" : "MethodDeclaration[43639-44282]:MethodDeclaration[43639-44282]"
    }, {
      "left" : "public void mapDatasetToRangeAxis(int index, int axisIndex)",
      "right" : "public void mapDatasetToRangeAxis(int index, int axisIndex)",
      "info" : "MethodDeclaration[44294-44806]:MethodDeclaration[44294-44806]"
    }, {
      "left" : "public ValueAxis getRangeAxisForDataset(int index)",
      "right" : "public ValueAxis getRangeAxisForDataset(int index)",
      "info" : "MethodDeclaration[44814-45443]:MethodDeclaration[44814-45443]"
    }, {
      "left" : "public CategoryItemRenderer getRenderer()",
      "right" : "public CategoryItemRenderer getRenderer()",
      "info" : "MethodDeclaration[45455-45708]:MethodDeclaration[45455-45708]"
    }, {
      "left" : "public CategoryItemRenderer getRenderer(int index)",
      "right" : "public CategoryItemRenderer getRenderer(int index)",
      "info" : "MethodDeclaration[45716-46219]:MethodDeclaration[45716-46219]"
    }, {
      "left" : "public void setRenderer(CategoryItemRenderer renderer)",
      "right" : "public void setRenderer(CategoryItemRenderer renderer)",
      "info" : "MethodDeclaration[46231-46636]:MethodDeclaration[46231-46636]"
    }, {
      "left" : "public void setRenderer(CategoryItemRenderer renderer, boolean notify)",
      "right" : "public void setRenderer(CategoryItemRenderer renderer, boolean notify)",
      "info" : "MethodDeclaration[46644-47370]:MethodDeclaration[46644-47370]"
    }, {
      "left" : "public void setRenderer(int index, CategoryItemRenderer renderer)",
      "right" : "public void setRenderer(int index, CategoryItemRenderer renderer)",
      "info" : "MethodDeclaration[47378-47853]:MethodDeclaration[47378-47853]"
    }, {
      "left" : "public void setRenderer(int index, CategoryItemRenderer renderer, \r\n                            boolean notify)",
      "right" : "public void setRenderer(int index, CategoryItemRenderer renderer, \r\n                            boolean notify)",
      "info" : "MethodDeclaration[47861-48926]:MethodDeclaration[47861-48926]"
    }, {
      "left" : "public void setRenderers(CategoryItemRenderer[] renderers)",
      "right" : "public void setRenderers(CategoryItemRenderer[] renderers)",
      "info" : "MethodDeclaration[48934-49329]:MethodDeclaration[48934-49329]"
    }, {
      "left" : "public CategoryItemRenderer getRendererForDataset(CategoryDataset dataset)",
      "right" : "public CategoryItemRenderer getRendererForDataset(CategoryDataset dataset)",
      "info" : "MethodDeclaration[49341-50041]:MethodDeclaration[49341-50041]"
    }, {
      "left" : "public int getIndexOf(CategoryItemRenderer renderer)",
      "right" : "public int getIndexOf(CategoryItemRenderer renderer)",
      "info" : "MethodDeclaration[50053-50431]:MethodDeclaration[50053-50431]"
    }, {
      "left" : "public DatasetRenderingOrder getDatasetRenderingOrder()",
      "right" : "public DatasetRenderingOrder getDatasetRenderingOrder()",
      "info" : "MethodDeclaration[50439-50735]:MethodDeclaration[50439-50735]"
    }, {
      "left" : "public void setDatasetRenderingOrder(DatasetRenderingOrder order)",
      "right" : "public void setDatasetRenderingOrder(DatasetRenderingOrder order)",
      "info" : "MethodDeclaration[50743-51436]:MethodDeclaration[50743-51436]"
    }, {
      "left" : "public SortOrder getColumnRenderingOrder()",
      "right" : "public SortOrder getColumnRenderingOrder()",
      "info" : "MethodDeclaration[51444-51821]:MethodDeclaration[51444-51821]"
    }, {
      "left" : "public void setColumnRenderingOrder(SortOrder order)",
      "right" : "public void setColumnRenderingOrder(SortOrder order)",
      "info" : "MethodDeclaration[51833-52540]:MethodDeclaration[51833-52540]"
    }, {
      "left" : "public SortOrder getRowRenderingOrder()",
      "right" : "public SortOrder getRowRenderingOrder()",
      "info" : "MethodDeclaration[52552-52904]:MethodDeclaration[52552-52904]"
    }, {
      "left" : "public void setRowRenderingOrder(SortOrder order)",
      "right" : "public void setRowRenderingOrder(SortOrder order)",
      "info" : "MethodDeclaration[52912-53610]:MethodDeclaration[52912-53610]"
    }, {
      "left" : "public boolean isDomainGridlinesVisible()",
      "right" : "public boolean isDomainGridlinesVisible()",
      "info" : "MethodDeclaration[53622-53944]:MethodDeclaration[53622-53944]"
    }, {
      "left" : "public void setDomainGridlinesVisible(boolean visible)",
      "right" : "public void setDomainGridlinesVisible(boolean visible)",
      "info" : "MethodDeclaration[53952-54517]:MethodDeclaration[53952-54517]"
    }, {
      "left" : "public CategoryAnchor getDomainGridlinePosition()",
      "right" : "public CategoryAnchor getDomainGridlinePosition()",
      "info" : "MethodDeclaration[54525-54845]:MethodDeclaration[54525-54845]"
    }, {
      "left" : "public void setDomainGridlinePosition(CategoryAnchor position)",
      "right" : "public void setDomainGridlinePosition(CategoryAnchor position)",
      "info" : "MethodDeclaration[54853-55407]:MethodDeclaration[54853-55407]"
    }, {
      "left" : "public Stroke getDomainGridlineStroke()",
      "right" : "public Stroke getDomainGridlineStroke()",
      "info" : "MethodDeclaration[55415-55717]:MethodDeclaration[55415-55717]"
    }, {
      "left" : "public void setDomainGridlineStroke(Stroke stroke)",
      "right" : "public void setDomainGridlineStroke(Stroke stroke)",
      "info" : "MethodDeclaration[55725-56269]:MethodDeclaration[55725-56269]"
    }, {
      "left" : "public Paint getDomainGridlinePaint()",
      "right" : "public Paint getDomainGridlinePaint()",
      "info" : "MethodDeclaration[56277-56572]:MethodDeclaration[56277-56572]"
    }, {
      "left" : "public void setDomainGridlinePaint(Paint paint)",
      "right" : "public void setDomainGridlinePaint(Paint paint)",
      "info" : "MethodDeclaration[56580-57125]:MethodDeclaration[56580-57125]"
    }, {
      "left" : "public boolean isRangeGridlinesVisible()",
      "right" : "public boolean isRangeGridlinesVisible()",
      "info" : "MethodDeclaration[57133-57416]:MethodDeclaration[57133-57416]"
    }, {
      "left" : "public void setRangeGridlinesVisible(boolean visible)",
      "right" : "public void setRangeGridlinesVisible(boolean visible)",
      "info" : "MethodDeclaration[57424-57965]:MethodDeclaration[57424-57965]"
    }, {
      "left" : "public Stroke getRangeGridlineStroke()",
      "right" : "public Stroke getRangeGridlineStroke()",
      "info" : "MethodDeclaration[57973-58275]:MethodDeclaration[57973-58275]"
    }, {
      "left" : "public void setRangeGridlineStroke(Stroke stroke)",
      "right" : "public void setRangeGridlineStroke(Stroke stroke)",
      "info" : "MethodDeclaration[58283-58826]:MethodDeclaration[58283-58826]"
    }, {
      "left" : "public Paint getRangeGridlinePaint()",
      "right" : "public Paint getRangeGridlinePaint()",
      "info" : "MethodDeclaration[58834-59129]:MethodDeclaration[58834-59129]"
    }, {
      "left" : "public void setRangeGridlinePaint(Paint paint)",
      "right" : "public void setRangeGridlinePaint(Paint paint)",
      "info" : "MethodDeclaration[59137-59669]:MethodDeclaration[59137-59669]"
    }, {
      "left" : "public LegendItemCollection getFixedLegendItems()",
      "right" : "public LegendItemCollection getFixedLegendItems()",
      "info" : "MethodDeclaration[59681-59984]:MethodDeclaration[59681-59984]"
    }, {
      "left" : "public void setFixedLegendItems(LegendItemCollection items)",
      "right" : "public void setFixedLegendItems(LegendItemCollection items)",
      "info" : "MethodDeclaration[59992-60435]:MethodDeclaration[59992-60435]"
    }, {
      "left" : "public LegendItemCollection getLegendItems()",
      "right" : "public LegendItemCollection getLegendItems()",
      "info" : "MethodDeclaration[60447-61839]:MethodDeclaration[60447-61839]"
    }, {
      "left" : "public void handleClick(int x, int y, PlotRenderingInfo info)",
      "right" : "public void handleClick(int x, int y, PlotRenderingInfo info)",
      "info" : "MethodDeclaration[61847-62955]:MethodDeclaration[61847-62955]"
    }, {
      "left" : "public void zoom(double percent)",
      "right" : "public void zoom(double percent)",
      "info" : "MethodDeclaration[62963-63736]:MethodDeclaration[62963-63736]"
    }, {
      "left" : "public void datasetChanged(DatasetChangeEvent event)",
      "right" : "public void datasetChanged(DatasetChangeEvent event)",
      "info" : "MethodDeclaration[63744-64584]:MethodDeclaration[63744-64584]"
    }, {
      "left" : "public void rendererChanged(RendererChangeEvent event)",
      "right" : "public void rendererChanged(RendererChangeEvent event)",
      "info" : "MethodDeclaration[64592-65520]:MethodDeclaration[64592-65520]"
    }, {
      "left" : "public void addDomainMarker(CategoryMarker marker)",
      "right" : "public void addDomainMarker(CategoryMarker marker)",
      "info" : "MethodDeclaration[65532-66096]:MethodDeclaration[65532-66096]"
    }, {
      "left" : "public void addDomainMarker(CategoryMarker marker, Layer layer)",
      "right" : "public void addDomainMarker(CategoryMarker marker, Layer layer)",
      "info" : "MethodDeclaration[66112-66800]:MethodDeclaration[66112-66800]"
    }, {
      "left" : "public void addDomainMarker(int index, CategoryMarker marker, Layer layer)",
      "right" : "public void addDomainMarker(int index, CategoryMarker marker, Layer layer)",
      "info" : "MethodDeclaration[66808-67507]:MethodDeclaration[66808-67507]"
    }, {
      "left" : "public void addDomainMarker(int index, CategoryMarker marker, Layer layer,\r\n    \t\tboolean notify)",
      "right" : "public void addDomainMarker(int index, CategoryMarker marker, Layer layer,\r\n    \t\tboolean notify)",
      "info" : "MethodDeclaration[67520-69449]:MethodDeclaration[67520-69449]"
    }, {
      "left" : "public void clearDomainMarkers()",
      "right" : "public void clearDomainMarkers()",
      "info" : "MethodDeclaration[69457-70504]:MethodDeclaration[69457-70504]"
    }, {
      "left" : "public Collection getDomainMarkers(Layer layer)",
      "right" : "public Collection getDomainMarkers(Layer layer)",
      "info" : "MethodDeclaration[70512-70831]:MethodDeclaration[70512-70831]"
    }, {
      "left" : "public Collection getDomainMarkers(int index, Layer layer)",
      "right" : "public Collection getDomainMarkers(int index, Layer layer)",
      "info" : "MethodDeclaration[70839-71653]:MethodDeclaration[70839-71653]"
    }, {
      "left" : "public void clearDomainMarkers(int index)",
      "right" : "public void clearDomainMarkers(int index)",
      "info" : "MethodDeclaration[71665-72935]:MethodDeclaration[71665-72935]"
    }, {
      "left" : "public boolean removeDomainMarker(Marker marker)",
      "right" : "public boolean removeDomainMarker(Marker marker)",
      "info" : "MethodDeclaration[72947-73385]:MethodDeclaration[72947-73385]"
    }, {
      "left" : "public boolean removeDomainMarker(Marker marker, Layer layer)",
      "right" : "public boolean removeDomainMarker(Marker marker, Layer layer)",
      "info" : "MethodDeclaration[73393-73950]:MethodDeclaration[73393-73950]"
    }, {
      "left" : "public boolean removeDomainMarker(int index, Marker marker, Layer layer)",
      "right" : "public boolean removeDomainMarker(int index, Marker marker, Layer layer)",
      "info" : "MethodDeclaration[73958-74537]:MethodDeclaration[73958-74537]"
    }, {
      "left" : "public boolean removeDomainMarker(int index, Marker marker, Layer layer,\r\n    \t\tboolean notify)",
      "right" : "public boolean removeDomainMarker(int index, Marker marker, Layer layer,\r\n    \t\tboolean notify)",
      "info" : "MethodDeclaration[74545-75586]:MethodDeclaration[74545-75656]"
    }, {
      "left" : "public void addRangeMarker(Marker marker)",
      "right" : "public void addRangeMarker(Marker marker)",
      "info" : "MethodDeclaration[75598-76149]:MethodDeclaration[75668-76219]"
    }, {
      "left" : "public void addRangeMarker(Marker marker, Layer layer)",
      "right" : "public void addRangeMarker(Marker marker, Layer layer)",
      "info" : "MethodDeclaration[76165-76840]:MethodDeclaration[76235-76910]"
    }, {
      "left" : "public void addRangeMarker(int index, Marker marker, Layer layer)",
      "right" : "public void addRangeMarker(int index, Marker marker, Layer layer)",
      "info" : "MethodDeclaration[76848-77465]:MethodDeclaration[76918-77535]"
    }, {
      "left" : "public void addRangeMarker(int index, Marker marker, Layer layer,\r\n    \t\tboolean notify)",
      "right" : "public void addRangeMarker(int index, Marker marker, Layer layer,\r\n    \t\tboolean notify)",
      "info" : "MethodDeclaration[77473-79061]:MethodDeclaration[77543-79131]"
    }, {
      "left" : "public void clearRangeMarkers()",
      "right" : "public void clearRangeMarkers()",
      "info" : "MethodDeclaration[79069-80107]:MethodDeclaration[79139-80177]"
    }, {
      "left" : "public Collection getRangeMarkers(Layer layer)",
      "right" : "public Collection getRangeMarkers(Layer layer)",
      "info" : "MethodDeclaration[80115-80481]:MethodDeclaration[80185-80551]"
    }, {
      "left" : "public Collection getRangeMarkers(int index, Layer layer)",
      "right" : "public Collection getRangeMarkers(int index, Layer layer)",
      "info" : "MethodDeclaration[80489-81299]:MethodDeclaration[80559-81369]"
    }, {
      "left" : "public void clearRangeMarkers(int index)",
      "right" : "public void clearRangeMarkers(int index)",
      "info" : "MethodDeclaration[81311-82576]:MethodDeclaration[81381-82646]"
    }, {
      "left" : "public boolean removeRangeMarker(Marker marker)",
      "right" : "public boolean removeRangeMarker(Marker marker)",
      "info" : "MethodDeclaration[82584-83064]:MethodDeclaration[82654-83134]"
    }, {
      "left" : "public boolean removeRangeMarker(Marker marker, Layer layer)",
      "right" : "public boolean removeRangeMarker(Marker marker, Layer layer)",
      "info" : "MethodDeclaration[83072-83679]:MethodDeclaration[83142-83749]"
    }, {
      "left" : "public boolean removeRangeMarker(int index, Marker marker, Layer layer)",
      "right" : "public boolean removeRangeMarker(int index, Marker marker, Layer layer)",
      "info" : "MethodDeclaration[83687-84322]:MethodDeclaration[83757-84392]"
    }, {
      "left" : "public boolean removeRangeMarker(int index, Marker marker, Layer layer,\r\n    \t\tboolean notify)",
      "right" : "public boolean removeRangeMarker(int index, Marker marker, Layer layer,\r\n    \t\tboolean notify)",
      "info" : "MethodDeclaration[84330-85581]:MethodDeclaration[84400-85721]"
    }, {
      "left" : "public boolean isRangeCrosshairVisible()",
      "right" : "public boolean isRangeCrosshairVisible()",
      "info" : "MethodDeclaration[85589-85872]:MethodDeclaration[85729-86012]"
    }, {
      "left" : "public void setRangeCrosshairVisible(boolean flag)",
      "right" : "public void setRangeCrosshairVisible(boolean flag)",
      "info" : "MethodDeclaration[85880-86284]:MethodDeclaration[86020-86424]"
    }, {
      "left" : "public boolean isRangeCrosshairLockedOnData()",
      "right" : "public boolean isRangeCrosshairLockedOnData()",
      "info" : "MethodDeclaration[86292-86620]:MethodDeclaration[86432-86760]"
    }, {
      "left" : "public void setRangeCrosshairLockedOnData(boolean flag)",
      "right" : "public void setRangeCrosshairLockedOnData(boolean flag)",
      "info" : "MethodDeclaration[86628-87072]:MethodDeclaration[86768-87212]"
    }, {
      "left" : "public double getRangeCrosshairValue()",
      "right" : "public double getRangeCrosshairValue()",
      "info" : "MethodDeclaration[87080-87319]:MethodDeclaration[87220-87459]"
    }, {
      "left" : "public void setRangeCrosshairValue(double value)",
      "right" : "public void setRangeCrosshairValue(double value)",
      "info" : "MethodDeclaration[87327-87715]:MethodDeclaration[87467-87855]"
    }, {
      "left" : "public void setRangeCrosshairValue(double value, boolean notify)",
      "right" : "public void setRangeCrosshairValue(double value, boolean notify)",
      "info" : "MethodDeclaration[87723-88343]:MethodDeclaration[87863-88483]"
    }, {
      "left" : "public Stroke getRangeCrosshairStroke()",
      "right" : "public Stroke getRangeCrosshairStroke()",
      "info" : "MethodDeclaration[88351-88768]:MethodDeclaration[88491-88908]"
    }, {
      "left" : "public void setRangeCrosshairStroke(Stroke stroke)",
      "right" : "public void setRangeCrosshairStroke(Stroke stroke)",
      "info" : "MethodDeclaration[88776-89380]:MethodDeclaration[88916-89520]"
    }, {
      "left" : "public Paint getRangeCrosshairPaint()",
      "right" : "public Paint getRangeCrosshairPaint()",
      "info" : "MethodDeclaration[89388-89748]:MethodDeclaration[89528-89888]"
    }, {
      "left" : "public void setRangeCrosshairPaint(Paint paint)",
      "right" : "public void setRangeCrosshairPaint(Paint paint)",
      "info" : "MethodDeclaration[89756-90283]:MethodDeclaration[89896-90423]"
    }, {
      "left" : "public List getAnnotations()",
      "right" : "public List getAnnotations()",
      "info" : "MethodDeclaration[90291-90496]:MethodDeclaration[90431-90636]"
    }, {
      "left" : "public void addAnnotation(CategoryAnnotation annotation)",
      "right" : "public void addAnnotation(CategoryAnnotation annotation)",
      "info" : "MethodDeclaration[90504-90883]:MethodDeclaration[90644-91023]"
    }, {
      "left" : "public void addAnnotation(CategoryAnnotation annotation, boolean notify)",
      "right" : "public void addAnnotation(CategoryAnnotation annotation, boolean notify)",
      "info" : "MethodDeclaration[90895-91514]:MethodDeclaration[91035-91654]"
    }, {
      "left" : "public boolean removeAnnotation(CategoryAnnotation annotation)",
      "right" : "public boolean removeAnnotation(CategoryAnnotation annotation)",
      "info" : "MethodDeclaration[91522-92008]:MethodDeclaration[91662-92148]"
    }, {
      "left" : "public boolean removeAnnotation(CategoryAnnotation annotation, \r\n    \t\tboolean notify)",
      "right" : "public boolean removeAnnotation(CategoryAnnotation annotation, \r\n    \t\tboolean notify)",
      "info" : "MethodDeclaration[92016-92800]:MethodDeclaration[92156-92940]"
    }, {
      "left" : "public void clearAnnotations()",
      "right" : "public void clearAnnotations()",
      "info" : "MethodDeclaration[92808-93036]:MethodDeclaration[92948-93176]"
    }, {
      "left" : "protected AxisSpace calculateDomainAxisSpace(Graphics2D g2, \r\n                                                 Rectangle2D plotArea, \r\n                                                 AxisSpace space)",
      "right" : "protected AxisSpace calculateDomainAxisSpace(Graphics2D g2, \r\n                                                 Rectangle2D plotArea, \r\n                                                 AxisSpace space)",
      "info" : "MethodDeclaration[93044-95353]:MethodDeclaration[93184-95493]"
    }, {
      "left" : "protected AxisSpace calculateRangeAxisSpace(Graphics2D g2, \r\n                                                Rectangle2D plotArea, \r\n                                                AxisSpace space)",
      "right" : "protected AxisSpace calculateRangeAxisSpace(Graphics2D g2, \r\n                                                Rectangle2D plotArea, \r\n                                                AxisSpace space)",
      "info" : "MethodDeclaration[95365-97275]:MethodDeclaration[95505-97415]"
    }, {
      "left" : "protected AxisSpace calculateAxisSpace(Graphics2D g2, \r\n                                           Rectangle2D plotArea)",
      "right" : "protected AxisSpace calculateAxisSpace(Graphics2D g2, \r\n                                           Rectangle2D plotArea)",
      "info" : "MethodDeclaration[97283-97821]:MethodDeclaration[97423-97961]"
    }, {
      "left" : "public void draw(Graphics2D g2, Rectangle2D area, \r\n                     Point2D anchor,\r\n                     PlotState parentState,\r\n                     PlotRenderingInfo state)",
      "right" : "public void draw(Graphics2D g2, Rectangle2D area, \r\n                     Point2D anchor,\r\n                     PlotState parentState,\r\n                     PlotRenderingInfo state)",
      "info" : "MethodDeclaration[97833-105252]:MethodDeclaration[97973-105392]"
    }, {
      "left" : "public void drawBackground(Graphics2D g2, Rectangle2D area)",
      "right" : "public void drawBackground(Graphics2D g2, Rectangle2D area)",
      "info" : "MethodDeclaration[105260-105870]:MethodDeclaration[105400-106010]"
    }, {
      "left" : "protected Map drawAxes(Graphics2D g2, \r\n                           Rectangle2D plotArea, \r\n                           Rectangle2D dataArea,\r\n                           PlotRenderingInfo plotState)",
      "right" : "protected Map drawAxes(Graphics2D g2, \r\n                           Rectangle2D plotArea, \r\n                           Rectangle2D dataArea,\r\n                           PlotRenderingInfo plotState)",
      "info" : "MethodDeclaration[105878-109677]:MethodDeclaration[106018-109817]"
    }, {
      "left" : "public boolean render(Graphics2D g2, Rectangle2D dataArea, int index, \r\n                          PlotRenderingInfo info)",
      "right" : "public boolean render(Graphics2D g2, Rectangle2D dataArea, int index, \r\n                          PlotRenderingInfo info)",
      "info" : "MethodDeclaration[109685-113187]:MethodDeclaration[109825-113327]"
    }, {
      "left" : "protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea)",
      "right" : "protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea)",
      "info" : "MethodDeclaration[113195-114870]:MethodDeclaration[113335-115010]"
    }, {
      "left" : "protected void drawRangeGridlines(Graphics2D g2, Rectangle2D dataArea, \r\n                                      List ticks)",
      "right" : "protected void drawRangeGridlines(Graphics2D g2, Rectangle2D dataArea, \r\n                                      List ticks)",
      "info" : "MethodDeclaration[114879-116174]:MethodDeclaration[115019-116314]"
    }, {
      "left" : "protected void drawAnnotations(Graphics2D g2, Rectangle2D dataArea,\r\n            PlotRenderingInfo info)",
      "right" : "protected void drawAnnotations(Graphics2D g2, Rectangle2D dataArea,\r\n            PlotRenderingInfo info)",
      "info" : "MethodDeclaration[116182-116838]:MethodDeclaration[116322-116978]"
    }, {
      "left" : "protected void drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea, \r\n                                     int index, Layer layer)",
      "right" : "protected void drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea, \r\n                                     int index, Layer layer)",
      "info" : "MethodDeclaration[116846-118031]:MethodDeclaration[116986-118171]"
    }, {
      "left" : "protected void drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea, \r\n                                    int index, Layer layer)",
      "right" : "protected void drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea, \r\n                                    int index, Layer layer)",
      "info" : "MethodDeclaration[118039-119200]:MethodDeclaration[118179-119340]"
    }, {
      "left" : "protected void drawRangeLine(Graphics2D g2, Rectangle2D dataArea,\r\n            double value, Stroke stroke, Paint paint)",
      "right" : "protected void drawRangeLine(Graphics2D g2, Rectangle2D dataArea,\r\n            double value, Stroke stroke, Paint paint)",
      "info" : "MethodDeclaration[119208-120359]:MethodDeclaration[119348-120499]"
    }, {
      "left" : "protected void drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea, \r\n            PlotOrientation orientation, double value, ValueAxis axis, \r\n            Stroke stroke, Paint paint)",
      "right" : "protected void drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea, \r\n            PlotOrientation orientation, double value, ValueAxis axis, \r\n            Stroke stroke, Paint paint)",
      "info" : "MethodDeclaration[120367-121760]:MethodDeclaration[120507-121900]"
    }, {
      "left" : "public Range getDataRange(ValueAxis axis)",
      "right" : "public Range getDataRange(ValueAxis axis)",
      "info" : "MethodDeclaration[121772-122974]:MethodDeclaration[121912-123114]"
    }, {
      "left" : "private List datasetsMappedToDomainAxis(int axisIndex)",
      "right" : "private List datasetsMappedToDomainAxis(int axisIndex)",
      "info" : "MethodDeclaration[122982-124158]:MethodDeclaration[123122-124298]"
    }, {
      "left" : "private List datasetsMappedToRangeAxis(int index)",
      "right" : "private List datasetsMappedToRangeAxis(int index)",
      "info" : "MethodDeclaration[124170-125172]:MethodDeclaration[124310-125312]"
    }, {
      "left" : "public int getWeight()",
      "right" : "public int getWeight()",
      "info" : "MethodDeclaration[125180-125435]:MethodDeclaration[125320-125575]"
    }, {
      "left" : "public void setWeight(int weight)",
      "right" : "public void setWeight(int weight)",
      "info" : "MethodDeclaration[125443-125750]:MethodDeclaration[125583-125890]"
    }, {
      "left" : "public AxisSpace getFixedDomainAxisSpace()",
      "right" : "public AxisSpace getFixedDomainAxisSpace()",
      "info" : "MethodDeclaration[125762-126059]:MethodDeclaration[125902-126199]"
    }, {
      "left" : "public void setFixedDomainAxisSpace(AxisSpace space)",
      "right" : "public void setFixedDomainAxisSpace(AxisSpace space)",
      "info" : "MethodDeclaration[126067-126427]:MethodDeclaration[126207-126567]"
    }, {
      "left" : "public void setFixedDomainAxisSpace(AxisSpace space, boolean notify)",
      "right" : "public void setFixedDomainAxisSpace(AxisSpace space, boolean notify)",
      "info" : "MethodDeclaration[126435-126945]:MethodDeclaration[126575-127085]"
    }, {
      "left" : "public AxisSpace getFixedRangeAxisSpace()",
      "right" : "public AxisSpace getFixedRangeAxisSpace()",
      "info" : "MethodDeclaration[126953-127245]:MethodDeclaration[127093-127385]"
    }, {
      "left" : "public void setFixedRangeAxisSpace(AxisSpace space)",
      "right" : "public void setFixedRangeAxisSpace(AxisSpace space)",
      "info" : "MethodDeclaration[127253-127610]:MethodDeclaration[127393-127750]"
    }, {
      "left" : "public void setFixedRangeAxisSpace(AxisSpace space, boolean notify)",
      "right" : "public void setFixedRangeAxisSpace(AxisSpace space, boolean notify)",
      "info" : "MethodDeclaration[127618-128124]:MethodDeclaration[127758-128264]"
    }, {
      "left" : "public List getCategories()",
      "right" : "public List getCategories()",
      "info" : "MethodDeclaration[128132-128580]:MethodDeclaration[128272-128720]"
    }, {
      "left" : "public List getCategoriesForAxis(CategoryAxis axis)",
      "right" : "public List getCategoriesForAxis(CategoryAxis axis)",
      "info" : "MethodDeclaration[128592-129587]:MethodDeclaration[128732-129727]"
    }, {
      "left" : "public boolean getDrawSharedDomainAxis()",
      "right" : "public boolean getDrawSharedDomainAxis()",
      "info" : "MethodDeclaration[129595-129910]:MethodDeclaration[129735-130050]"
    }, {
      "left" : "public void setDrawSharedDomainAxis(boolean draw)",
      "right" : "public void setDrawSharedDomainAxis(boolean draw)",
      "info" : "MethodDeclaration[129922-130286]:MethodDeclaration[130062-130426]"
    }, {
      "left" : "public boolean isDomainZoomable()",
      "right" : "public boolean isDomainZoomable()",
      "info" : "MethodDeclaration[130294-130548]:MethodDeclaration[130434-130688]"
    }, {
      "left" : "public boolean isRangeZoomable()",
      "right" : "public boolean isRangeZoomable()",
      "info" : "MethodDeclaration[130560-130799]:MethodDeclaration[130700-130939]"
    }, {
      "left" : "public void zoomDomainAxes(double factor, PlotRenderingInfo state, \r\n                               Point2D source)",
      "right" : "public void zoomDomainAxes(double factor, PlotRenderingInfo state, \r\n                               Point2D source)",
      "info" : "MethodDeclaration[130807-131258]:MethodDeclaration[130947-131398]"
    }, {
      "left" : "public void zoomDomainAxes(double lowerPercent, double upperPercent, \r\n                               PlotRenderingInfo state, Point2D source)",
      "right" : "public void zoomDomainAxes(double lowerPercent, double upperPercent, \r\n                               PlotRenderingInfo state, Point2D source)",
      "info" : "MethodDeclaration[131266-131797]:MethodDeclaration[131406-131937]"
    }, {
      "left" : "public void zoomDomainAxes(double factor, PlotRenderingInfo info,\r\n                               Point2D source, boolean useAnchor)",
      "right" : "public void zoomDomainAxes(double factor, PlotRenderingInfo info,\r\n                               Point2D source, boolean useAnchor)",
      "info" : "MethodDeclaration[131809-132443]:MethodDeclaration[131949-132583]"
    }, {
      "left" : "public void zoomRangeAxes(double factor, PlotRenderingInfo state, \r\n                              Point2D source)",
      "right" : "public void zoomRangeAxes(double factor, PlotRenderingInfo state, \r\n                              Point2D source)",
      "info" : "MethodDeclaration[132451-132921]:MethodDeclaration[132591-133061]"
    }, {
      "left" : "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\r\n                              Point2D source, boolean useAnchor)",
      "right" : "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\r\n                              Point2D source, boolean useAnchor)",
      "info" : "MethodDeclaration[132929-134457]:MethodDeclaration[133069-134597]"
    }, {
      "left" : "public void zoomRangeAxes(double lowerPercent, double upperPercent, \r\n                              PlotRenderingInfo state, Point2D source)",
      "right" : "public void zoomRangeAxes(double lowerPercent, double upperPercent, \r\n                              PlotRenderingInfo state, Point2D source)",
      "info" : "MethodDeclaration[134465-135138]:MethodDeclaration[134605-135278]"
    }, {
      "left" : "public double getAnchorValue()",
      "right" : "public double getAnchorValue()",
      "info" : "MethodDeclaration[135150-135364]:MethodDeclaration[135290-135504]"
    }, {
      "left" : "public void setAnchorValue(double value)",
      "right" : "public void setAnchorValue(double value)",
      "info" : "MethodDeclaration[135372-135670]:MethodDeclaration[135512-135810]"
    }, {
      "left" : "public void setAnchorValue(double value, boolean notify)",
      "right" : "public void setAnchorValue(double value, boolean notify)",
      "info" : "MethodDeclaration[135678-136103]:MethodDeclaration[135818-136243]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[136115-140618]:MethodDeclaration[136255-140758]"
    }, {
      "left" : "public Object clone() throws CloneNotSupportedException",
      "right" : "public Object clone() throws CloneNotSupportedException",
      "info" : "MethodDeclaration[140630-142829]:MethodDeclaration[140770-142969]"
    }, {
      "left" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "right" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "info" : "MethodDeclaration[142841-143559]:MethodDeclaration[142981-143699]"
    }, {
      "left" : "private void readObject(ObjectInputStream stream) \r\n        throws IOException, ClassNotFoundException",
      "right" : "private void readObject(ObjectInputStream stream) \r\n        throws IOException, ClassNotFoundException",
      "info" : "MethodDeclaration[143567-145549]:MethodDeclaration[143707-145689]"
    } ],
    "mappings" : [
 {
      "left" : "Plot",
      "right" : "Plot",
      "info" : "SimpleType[11833-11837]:SimpleType[11833-11837]"
    }, {
      "left" : "ValueAxisPlot",
      "right" : "ValueAxisPlot",
      "info" : "SimpleType[11849-11862]:SimpleType[11849-11862]"
    }, {
      "left" : "Zoomable",
      "right" : "Zoomable",
      "info" : "SimpleType[11874-11882]:SimpleType[11874-11882]"
    }, {
      "left" : "RendererChangeListener",
      "right" : "RendererChangeListener",
      "info" : "SimpleType[11884-11906]:SimpleType[11884-11906]"
    }, {
      "left" : "Cloneable",
      "right" : "Cloneable",
      "info" : "SimpleType[11908-11917]:SimpleType[11908-11917]"
    }, {
      "left" : "PublicCloneable",
      "right" : "PublicCloneable",
      "info" : "SimpleType[11919-11934]:SimpleType[11919-11934]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[11946-11958]:SimpleType[11946-11958]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18134-18140]:Modifier[18134-18140]"
    }, {
      "left" : "CategoryPlot",
      "right" : "CategoryPlot",
      "info" : "SimpleName[18141-18153]:SimpleName[18141-18153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18156-18203]:Block[18156-18203]"
    }, {
      "left" : "this(null, null, null, null);",
      "right" : "this(null, null, null, null);",
      "info" : "ConstructorInvocation[18167-18196]:ConstructorInvocation[18167-18196]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18560-18566]:Modifier[18560-18566]"
    }, {
      "left" : "CategoryPlot",
      "right" : "CategoryPlot",
      "info" : "SimpleName[18567-18579]:SimpleName[18567-18579]"
    }, {
      "left" : "CategoryDataset dataset",
      "right" : "CategoryDataset dataset",
      "info" : "SingleVariableDeclaration[18580-18603]:SingleVariableDeclaration[18580-18603]"
    }, {
      "left" : "CategoryAxis domainAxis",
      "right" : "CategoryAxis domainAxis",
      "info" : "SingleVariableDeclaration[18630-18653]:SingleVariableDeclaration[18630-18653]"
    }, {
      "left" : "ValueAxis rangeAxis",
      "right" : "ValueAxis rangeAxis",
      "info" : "SingleVariableDeclaration[18680-18699]:SingleVariableDeclaration[18680-18699]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[18726-18755]:SingleVariableDeclaration[18726-18755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18757-21651]:Block[18757-21651]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[18770-18778]:SuperConstructorInvocation[18770-18778]"
    }, {
      "left" : "this.orientation = PlotOrientation.VERTICAL;",
      "right" : "this.orientation = PlotOrientation.VERTICAL;",
      "info" : "ExpressionStatement[18790-18834]:ExpressionStatement[18790-18834]"
    }, {
      "left" : "this.domainAxes = new ObjectList();",
      "right" : "this.domainAxes = new ObjectList();",
      "info" : "ExpressionStatement[18907-18942]:ExpressionStatement[18907-18942]"
    }, {
      "left" : "this.domainAxisLocations = new ObjectList();",
      "right" : "this.domainAxisLocations = new ObjectList();",
      "info" : "ExpressionStatement[18952-18996]:ExpressionStatement[18952-18996]"
    }, {
      "left" : "this.rangeAxes = new ObjectList();",
      "right" : "this.rangeAxes = new ObjectList();",
      "info" : "ExpressionStatement[19006-19040]:ExpressionStatement[19006-19040]"
    }, {
      "left" : "this.rangeAxisLocations = new ObjectList();",
      "right" : "this.rangeAxisLocations = new ObjectList();",
      "info" : "ExpressionStatement[19050-19093]:ExpressionStatement[19050-19093]"
    }, {
      "left" : "this.datasetToDomainAxisMap = new ObjectList();",
      "right" : "this.datasetToDomainAxisMap = new ObjectList();",
      "info" : "ExpressionStatement[19113-19160]:ExpressionStatement[19113-19160]"
    }, {
      "left" : "this.datasetToRangeAxisMap = new ObjectList();",
      "right" : "this.datasetToRangeAxisMap = new ObjectList();",
      "info" : "ExpressionStatement[19170-19216]:ExpressionStatement[19170-19216]"
    }, {
      "left" : "this.renderers = new ObjectList();",
      "right" : "this.renderers = new ObjectList();",
      "info" : "ExpressionStatement[19228-19262]:ExpressionStatement[19228-19262]"
    }, {
      "left" : "this.datasets = new ObjectList();",
      "right" : "this.datasets = new ObjectList();",
      "info" : "ExpressionStatement[19274-19307]:ExpressionStatement[19274-19307]"
    }, {
      "left" : "this.datasets.set(0, dataset);",
      "right" : "this.datasets.set(0, dataset);",
      "info" : "ExpressionStatement[19317-19347]:ExpressionStatement[19317-19347]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[19357-19436]:IfStatement[19357-19436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19378-19436]:Block[19378-19436]"
    }, {
      "left" : "dataset.addChangeListener(this);",
      "right" : "dataset.addChangeListener(this);",
      "info" : "ExpressionStatement[19393-19425]:ExpressionStatement[19393-19425]"
    }, {
      "left" : "this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",
      "right" : "this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",
      "info" : "ExpressionStatement[19448-19506]:ExpressionStatement[19448-19506]"
    }, {
      "left" : "setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);",
      "right" : "setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);",
      "info" : "ExpressionStatement[19518-19576]:ExpressionStatement[19518-19576]"
    }, {
      "left" : "setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);",
      "right" : "setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);",
      "info" : "ExpressionStatement[19586-19640]:ExpressionStatement[19586-19640]"
    }, {
      "left" : "this.renderers.set(0, renderer);",
      "right" : "this.renderers.set(0, renderer);",
      "info" : "ExpressionStatement[19652-19684]:ExpressionStatement[19652-19684]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[19694-19812]:IfStatement[19694-19812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19716-19812]:Block[19716-19812]"
    }, {
      "left" : "renderer.setPlot(this);",
      "right" : "renderer.setPlot(this);",
      "info" : "ExpressionStatement[19731-19754]:ExpressionStatement[19731-19754]"
    }, {
      "left" : "renderer.addChangeListener(this);",
      "right" : "renderer.addChangeListener(this);",
      "info" : "ExpressionStatement[19768-19801]:ExpressionStatement[19768-19801]"
    }, {
      "left" : "this.domainAxes.set(0, domainAxis);",
      "right" : "this.domainAxes.set(0, domainAxis);",
      "info" : "ExpressionStatement[19824-19859]:ExpressionStatement[19824-19859]"
    }, {
      "left" : "this.mapDatasetToDomainAxis(0, 0);",
      "right" : "this.mapDatasetToDomainAxis(0, 0);",
      "info" : "ExpressionStatement[19869-19903]:ExpressionStatement[19869-19903]"
    }, {
      "left" : "if (domainAxis != null)",
      "right" : "if (domainAxis != null)",
      "info" : "IfStatement[19913-20037]:IfStatement[19913-20037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19937-20037]:Block[19937-20037]"
    }, {
      "left" : "domainAxis.setPlot(this);",
      "right" : "domainAxis.setPlot(this);",
      "info" : "ExpressionStatement[19952-19977]:ExpressionStatement[19952-19977]"
    }, {
      "left" : "domainAxis.addChangeListener(this);",
      "right" : "domainAxis.addChangeListener(this);",
      "info" : "ExpressionStatement[19991-20026]:ExpressionStatement[19991-20026]"
    }, {
      "left" : "this.drawSharedDomainAxis = false;",
      "right" : "this.drawSharedDomainAxis = false;",
      "info" : "ExpressionStatement[20047-20081]:ExpressionStatement[20047-20081]"
    }, {
      "left" : "this.rangeAxes.set(0, rangeAxis);",
      "right" : "this.rangeAxes.set(0, rangeAxis);",
      "info" : "ExpressionStatement[20093-20126]:ExpressionStatement[20093-20126]"
    }, {
      "left" : "this.mapDatasetToRangeAxis(0, 0);",
      "right" : "this.mapDatasetToRangeAxis(0, 0);",
      "info" : "ExpressionStatement[20136-20169]:ExpressionStatement[20136-20169]"
    }, {
      "left" : "if (rangeAxis != null)",
      "right" : "if (rangeAxis != null)",
      "info" : "IfStatement[20179-20300]:IfStatement[20179-20300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20202-20300]:Block[20202-20300]"
    }, {
      "left" : "rangeAxis.setPlot(this);",
      "right" : "rangeAxis.setPlot(this);",
      "info" : "ExpressionStatement[20217-20241]:ExpressionStatement[20217-20241]"
    }, {
      "left" : "rangeAxis.addChangeListener(this);",
      "right" : "rangeAxis.addChangeListener(this);",
      "info" : "ExpressionStatement[20255-20289]:ExpressionStatement[20255-20289]"
    }, {
      "left" : "configureDomainAxes();",
      "right" : "configureDomainAxes();",
      "info" : "ExpressionStatement[20320-20342]:ExpressionStatement[20320-20342]"
    }, {
      "left" : "configureRangeAxes();",
      "right" : "configureRangeAxes();",
      "info" : "ExpressionStatement[20352-20373]:ExpressionStatement[20352-20373]"
    }, {
      "left" : "this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;",
      "right" : "this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;",
      "info" : "ExpressionStatement[20385-20448]:ExpressionStatement[20385-20448]"
    }, {
      "left" : "this.domainGridlinePosition = CategoryAnchor.MIDDLE;",
      "right" : "this.domainGridlinePosition = CategoryAnchor.MIDDLE;",
      "info" : "ExpressionStatement[20458-20510]:ExpressionStatement[20458-20510]"
    }, {
      "left" : "this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "right" : "this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "info" : "ExpressionStatement[20520-20572]:ExpressionStatement[20520-20572]"
    }, {
      "left" : "this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "right" : "this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "info" : "ExpressionStatement[20582-20632]:ExpressionStatement[20582-20632]"
    }, {
      "left" : "this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;",
      "right" : "this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;",
      "info" : "ExpressionStatement[20644-20705]:ExpressionStatement[20644-20705]"
    }, {
      "left" : "this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "right" : "this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "info" : "ExpressionStatement[20715-20766]:ExpressionStatement[20715-20766]"
    }, {
      "left" : "this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "right" : "this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "info" : "ExpressionStatement[20776-20825]:ExpressionStatement[20776-20825]"
    }, {
      "left" : "this.foregroundDomainMarkers = new HashMap();",
      "right" : "this.foregroundDomainMarkers = new HashMap();",
      "info" : "ExpressionStatement[20837-20882]:ExpressionStatement[20837-20882]"
    }, {
      "left" : "this.backgroundDomainMarkers = new HashMap();",
      "right" : "this.backgroundDomainMarkers = new HashMap();",
      "info" : "ExpressionStatement[20892-20937]:ExpressionStatement[20892-20937]"
    }, {
      "left" : "this.foregroundRangeMarkers = new HashMap();",
      "right" : "this.foregroundRangeMarkers = new HashMap();",
      "info" : "ExpressionStatement[20947-20991]:ExpressionStatement[20947-20991]"
    }, {
      "left" : "this.backgroundRangeMarkers = new HashMap();",
      "right" : "this.backgroundRangeMarkers = new HashMap();",
      "info" : "ExpressionStatement[21001-21045]:ExpressionStatement[21001-21045]"
    }, {
      "left" : "Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, \r\n                0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, \r\n                0.5f), new BasicStroke(1.0f), 0.6f);",
      "right" : "Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, \r\n                0.5f), new BasicStroke(1.0f), new Color(0.85f, 0.85f, 0.95f, \r\n                0.5f), new BasicStroke(1.0f), 0.6f);",
      "info" : "VariableDeclarationStatement[21057-21257]:VariableDeclarationStatement[21057-21257]"
    }, {
      "left" : "addRangeMarker(baseline, Layer.BACKGROUND);",
      "right" : "addRangeMarker(baseline, Layer.BACKGROUND);",
      "info" : "ExpressionStatement[21267-21310]:ExpressionStatement[21267-21310]"
    }, {
      "left" : "this.anchorValue = 0.0;",
      "right" : "this.anchorValue = 0.0;",
      "info" : "ExpressionStatement[21322-21345]:ExpressionStatement[21322-21345]"
    }, {
      "left" : "this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;",
      "right" : "this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;",
      "info" : "ExpressionStatement[21357-21412]:ExpressionStatement[21357-21412]"
    }, {
      "left" : "this.rangeCrosshairValue = 0.0;",
      "right" : "this.rangeCrosshairValue = 0.0;",
      "info" : "ExpressionStatement[21422-21453]:ExpressionStatement[21422-21453]"
    }, {
      "left" : "this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
      "right" : "this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
      "info" : "ExpressionStatement[21463-21516]:ExpressionStatement[21463-21516]"
    }, {
      "left" : "this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
      "right" : "this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
      "info" : "ExpressionStatement[21526-21577]:ExpressionStatement[21526-21577]"
    }, {
      "left" : "this.annotations = new java.util.ArrayList();",
      "right" : "this.annotations = new java.util.ArrayList();",
      "info" : "ExpressionStatement[21597-21642]:ExpressionStatement[21597-21642]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21769-21775]:Modifier[21769-21775]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[21776-21782]:SimpleType[21776-21782]"
    }, {
      "left" : "getPlotType",
      "right" : "getPlotType",
      "info" : "SimpleName[21783-21794]:SimpleName[21783-21794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21797-21871]:Block[21797-21871]"
    }, {
      "left" : "return localizationResources.getString(\"Category_Plot\");",
      "right" : "return localizationResources.getString(\"Category_Plot\");",
      "info" : "ReturnStatement[21808-21864]:ReturnStatement[21808-21864]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22076-22082]:Modifier[22076-22082]"
    }, {
      "left" : "PlotOrientation",
      "right" : "PlotOrientation",
      "info" : "SimpleType[22083-22098]:SimpleType[22083-22098]"
    }, {
      "left" : "getOrientation",
      "right" : "getOrientation",
      "info" : "SimpleName[22099-22113]:SimpleName[22099-22113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22116-22158]:Block[22116-22158]"
    }, {
      "left" : "return this.orientation;",
      "right" : "return this.orientation;",
      "info" : "ReturnStatement[22127-22151]:ReturnStatement[22127-22151]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22426-22432]:Modifier[22426-22432]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22433-22437]:PrimitiveType[22433-22437]"
    }, {
      "left" : "setOrientation",
      "right" : "setOrientation",
      "info" : "SimpleName[22438-22452]:SimpleName[22438-22452]"
    }, {
      "left" : "PlotOrientation orientation",
      "right" : "PlotOrientation orientation",
      "info" : "SingleVariableDeclaration[22453-22480]:SingleVariableDeclaration[22453-22480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22482-22687]:Block[22482-22687]"
    }, {
      "left" : "if (orientation == null)",
      "right" : "if (orientation == null)",
      "info" : "IfStatement[22493-22611]:IfStatement[22493-22611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22518-22611]:Block[22518-22611]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'orientation' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'orientation' argument.\");",
      "info" : "ThrowStatement[22533-22600]:ThrowStatement[22533-22600]"
    }, {
      "left" : "this.orientation = orientation;",
      "right" : "this.orientation = orientation;",
      "info" : "ExpressionStatement[22621-22652]:ExpressionStatement[22621-22652]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[22662-22680]:ExpressionStatement[22662-22680]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22867-22873]:Modifier[22867-22873]"
    }, {
      "left" : "RectangleInsets",
      "right" : "RectangleInsets",
      "info" : "SimpleType[22874-22889]:SimpleType[22874-22889]"
    }, {
      "left" : "getAxisOffset",
      "right" : "getAxisOffset",
      "info" : "SimpleName[22890-22903]:SimpleName[22890-22903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22906-22947]:Block[22906-22947]"
    }, {
      "left" : "return this.axisOffset;",
      "right" : "return this.axisOffset;",
      "info" : "ReturnStatement[22917-22940]:ReturnStatement[22917-22940]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23233-23239]:Modifier[23233-23239]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23240-23244]:PrimitiveType[23240-23244]"
    }, {
      "left" : "setAxisOffset",
      "right" : "setAxisOffset",
      "info" : "SimpleName[23245-23258]:SimpleName[23245-23258]"
    }, {
      "left" : "RectangleInsets offset",
      "right" : "RectangleInsets offset",
      "info" : "SingleVariableDeclaration[23259-23281]:SingleVariableDeclaration[23259-23281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23283-23475]:Block[23283-23475]"
    }, {
      "left" : "if (offset == null)",
      "right" : "if (offset == null)",
      "info" : "IfStatement[23294-23405]:IfStatement[23294-23405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23314-23405]:Block[23314-23405]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'offset' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'offset' argument.\");",
      "info" : "ThrowStatement[23329-23391]:ThrowStatement[23329-23391]"
    }, {
      "left" : "this.axisOffset = offset;",
      "right" : "this.axisOffset = offset;",
      "info" : "ExpressionStatement[23415-23440]:ExpressionStatement[23415-23440]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[23450-23468]:ExpressionStatement[23450-23468]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23829-23835]:Modifier[23829-23835]"
    }, {
      "left" : "CategoryAxis",
      "right" : "CategoryAxis",
      "info" : "SimpleType[23836-23848]:SimpleType[23836-23848]"
    }, {
      "left" : "getDomainAxis",
      "right" : "getDomainAxis",
      "info" : "SimpleName[23849-23862]:SimpleName[23849-23862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23865-23907]:Block[23865-23907]"
    }, {
      "left" : "return getDomainAxis(0);",
      "right" : "return getDomainAxis(0);",
      "info" : "ReturnStatement[23876-23900]:ReturnStatement[23876-23900]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24129-24135]:Modifier[24129-24135]"
    }, {
      "left" : "CategoryAxis",
      "right" : "CategoryAxis",
      "info" : "SimpleType[24136-24148]:SimpleType[24136-24148]"
    }, {
      "left" : "getDomainAxis",
      "right" : "getDomainAxis",
      "info" : "SimpleName[24149-24162]:SimpleName[24149-24162]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[24163-24172]:SingleVariableDeclaration[24163-24172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24174-24623]:Block[24174-24623]"
    }, {
      "left" : "CategoryAxis result = null;",
      "right" : "CategoryAxis result = null;",
      "info" : "VariableDeclarationStatement[24185-24212]:VariableDeclarationStatement[24185-24212]"
    }, {
      "left" : "if (index < this.domainAxes.size())",
      "right" : "if (index < this.domainAxes.size())",
      "info" : "IfStatement[24222-24335]:IfStatement[24222-24335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24258-24335]:Block[24258-24335]"
    }, {
      "left" : "result = (CategoryAxis) this.domainAxes.get(index);",
      "right" : "result = (CategoryAxis) this.domainAxes.get(index);",
      "info" : "ExpressionStatement[24273-24324]:ExpressionStatement[24273-24324]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[24345-24592]:IfStatement[24345-24592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24365-24592]:Block[24365-24592]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[24380-24406]:VariableDeclarationStatement[24380-24406]"
    }, {
      "left" : "if (parent instanceof CategoryPlot)",
      "right" : "if (parent instanceof CategoryPlot)",
      "info" : "IfStatement[24420-24581]:IfStatement[24420-24581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24456-24581]:Block[24456-24581]"
    }, {
      "left" : "CategoryPlot cp = (CategoryPlot) parent;",
      "right" : "CategoryPlot cp = (CategoryPlot) parent;",
      "info" : "VariableDeclarationStatement[24475-24515]:VariableDeclarationStatement[24475-24515]"
    }, {
      "left" : "result = cp.getDomainAxis(index);",
      "right" : "result = cp.getDomainAxis(index);",
      "info" : "ExpressionStatement[24533-24566]:ExpressionStatement[24533-24566]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[24602-24616]:ReturnStatement[24602-24616]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24872-24878]:Modifier[24872-24878]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24879-24883]:PrimitiveType[24879-24883]"
    }, {
      "left" : "setDomainAxis",
      "right" : "setDomainAxis",
      "info" : "SimpleName[24884-24897]:SimpleName[24884-24897]"
    }, {
      "left" : "CategoryAxis axis",
      "right" : "CategoryAxis axis",
      "info" : "SingleVariableDeclaration[24898-24915]:SingleVariableDeclaration[24898-24915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24917-24958]:Block[24917-24958]"
    }, {
      "left" : "setDomainAxis(0, axis);",
      "right" : "setDomainAxis(0, axis);",
      "info" : "ExpressionStatement[24928-24951]:ExpressionStatement[24928-24951]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25234-25240]:Modifier[25234-25240]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25241-25245]:PrimitiveType[25241-25245]"
    }, {
      "left" : "setDomainAxis",
      "right" : "setDomainAxis",
      "info" : "SimpleName[25246-25259]:SimpleName[25246-25259]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[25260-25269]:SingleVariableDeclaration[25260-25269]"
    }, {
      "left" : "CategoryAxis axis",
      "right" : "CategoryAxis axis",
      "info" : "SingleVariableDeclaration[25271-25288]:SingleVariableDeclaration[25271-25288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25290-25341]:Block[25290-25341]"
    }, {
      "left" : "setDomainAxis(index, axis, true);",
      "right" : "setDomainAxis(index, axis, true);",
      "info" : "ExpressionStatement[25301-25334]:ExpressionStatement[25301-25334]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25632-25638]:Modifier[25632-25638]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25639-25643]:PrimitiveType[25639-25643]"
    }, {
      "left" : "setDomainAxis",
      "right" : "setDomainAxis",
      "info" : "SimpleName[25644-25657]:SimpleName[25644-25657]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[25658-25667]:SingleVariableDeclaration[25658-25667]"
    }, {
      "left" : "CategoryAxis axis",
      "right" : "CategoryAxis axis",
      "info" : "SingleVariableDeclaration[25669-25686]:SingleVariableDeclaration[25669-25686]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[25688-25702]:SingleVariableDeclaration[25688-25702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25704-26178]:Block[25704-26178]"
    }, {
      "left" : "CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);",
      "right" : "CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);",
      "info" : "VariableDeclarationStatement[25715-25781]:VariableDeclarationStatement[25715-25781]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[25791-25875]:IfStatement[25791-25875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25813-25875]:Block[25813-25875]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[25828-25864]:ExpressionStatement[25828-25864]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[25885-25948]:IfStatement[25885-25948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25903-25948]:Block[25903-25948]"
    }, {
      "left" : "axis.setPlot(this);",
      "right" : "axis.setPlot(this);",
      "info" : "ExpressionStatement[25918-25937]:ExpressionStatement[25918-25937]"
    }, {
      "left" : "this.domainAxes.set(index, axis);",
      "right" : "this.domainAxes.set(index, axis);",
      "info" : "ExpressionStatement[25958-25991]:ExpressionStatement[25958-25991]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[26001-26105]:IfStatement[26001-26105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26019-26105]:Block[26019-26105]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[26034-26051]:ExpressionStatement[26034-26051]"
    }, {
      "left" : "axis.addChangeListener(this);",
      "right" : "axis.addChangeListener(this);",
      "info" : "ExpressionStatement[26065-26094]:ExpressionStatement[26065-26094]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[26115-26171]:IfStatement[26115-26171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26127-26171]:Block[26127-26171]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[26142-26160]:ExpressionStatement[26142-26160]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26443-26449]:Modifier[26443-26449]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26450-26454]:PrimitiveType[26450-26454]"
    }, {
      "left" : "setDomainAxes",
      "right" : "setDomainAxes",
      "info" : "SimpleName[26455-26468]:SimpleName[26455-26468]"
    }, {
      "left" : "CategoryAxis[] axes",
      "right" : "CategoryAxis[] axes",
      "info" : "SingleVariableDeclaration[26469-26488]:SingleVariableDeclaration[26469-26488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26490-26636]:Block[26490-26636]"
    }, {
      "left" : "for (int i = 0; i < axes.length; i++)",
      "right" : "for (int i = 0; i < axes.length; i++)",
      "info" : "ForStatement[26501-26601]:ForStatement[26501-26601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26539-26601]:Block[26539-26601]"
    }, {
      "left" : "setDomainAxis(i, axes[i], false);",
      "right" : "setDomainAxis(i, axes[i], false);",
      "info" : "ExpressionStatement[26554-26587]:ExpressionStatement[26554-26587]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[26611-26629]:ExpressionStatement[26611-26629]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27013-27019]:Modifier[27013-27019]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[27020-27023]:PrimitiveType[27020-27023]"
    }, {
      "left" : "getDomainAxisIndex",
      "right" : "getDomainAxisIndex",
      "info" : "SimpleName[27024-27042]:SimpleName[27024-27042]"
    }, {
      "left" : "CategoryAxis axis",
      "right" : "CategoryAxis axis",
      "info" : "SingleVariableDeclaration[27043-27060]:SingleVariableDeclaration[27043-27060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27062-27231]:Block[27062-27231]"
    }, {
      "left" : "if (axis == null)",
      "right" : "if (axis == null)",
      "info" : "IfStatement[27073-27177]:IfStatement[27073-27177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27091-27177]:Block[27091-27177]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'axis' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'axis' argument.\");",
      "info" : "ThrowStatement[27106-27166]:ThrowStatement[27106-27166]"
    }, {
      "left" : "return this.domainAxes.indexOf(axis);",
      "right" : "return this.domainAxes.indexOf(axis);",
      "info" : "ReturnStatement[27187-27224]:ReturnStatement[27187-27224]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27441-27447]:Modifier[27441-27447]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[27448-27460]:SimpleType[27448-27460]"
    }, {
      "left" : "getDomainAxisLocation",
      "right" : "getDomainAxisLocation",
      "info" : "SimpleName[27461-27482]:SimpleName[27461-27482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27485-27535]:Block[27485-27535]"
    }, {
      "left" : "return getDomainAxisLocation(0);",
      "right" : "return getDomainAxisLocation(0);",
      "info" : "ReturnStatement[27496-27528]:ReturnStatement[27496-27528]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27757-27763]:Modifier[27757-27763]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[27764-27776]:SimpleType[27764-27776]"
    }, {
      "left" : "getDomainAxisLocation",
      "right" : "getDomainAxisLocation",
      "info" : "SimpleName[27777-27798]:SimpleName[27777-27798]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[27799-27808]:SingleVariableDeclaration[27799-27808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27810-28136]:Block[27810-28136]"
    }, {
      "left" : "AxisLocation result = null;",
      "right" : "AxisLocation result = null;",
      "info" : "VariableDeclarationStatement[27821-27848]:VariableDeclarationStatement[27821-27848]"
    }, {
      "left" : "if (index < this.domainAxisLocations.size())",
      "right" : "if (index < this.domainAxisLocations.size())",
      "info" : "IfStatement[27858-27989]:IfStatement[27858-27989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27903-27989]:Block[27903-27989]"
    }, {
      "left" : "result = (AxisLocation) this.domainAxisLocations.get(index);",
      "right" : "result = (AxisLocation) this.domainAxisLocations.get(index);",
      "info" : "ExpressionStatement[27918-27978]:ExpressionStatement[27918-27978]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[27999-28105]:IfStatement[27999-28105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28019-28105]:Block[28019-28105]"
    }, {
      "left" : "result = AxisLocation.getOpposite(getDomainAxisLocation(0));",
      "right" : "result = AxisLocation.getOpposite(getDomainAxisLocation(0));",
      "info" : "ExpressionStatement[28034-28094]:ExpressionStatement[28034-28094]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[28115-28129]:ReturnStatement[28115-28129]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28468-28474]:Modifier[28468-28474]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28475-28479]:PrimitiveType[28475-28479]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[28480-28501]:SimpleName[28480-28501]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[28502-28523]:SingleVariableDeclaration[28502-28523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28525-28608]:Block[28525-28608]"
    }, {
      "left" : "setDomainAxisLocation(0, location, true);",
      "right" : "setDomainAxisLocation(0, location, true);",
      "info" : "ExpressionStatement[28560-28601]:ExpressionStatement[28560-28601]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28930-28936]:Modifier[28930-28936]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28937-28941]:PrimitiveType[28937-28941]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[28942-28963]:SimpleName[28942-28963]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[28964-28985]:SingleVariableDeclaration[28964-28985]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[28987-29001]:SingleVariableDeclaration[28987-29001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29003-29088]:Block[29003-29088]"
    }, {
      "left" : "setDomainAxisLocation(0, location, notify);",
      "right" : "setDomainAxisLocation(0, location, notify);",
      "info" : "ExpressionStatement[29038-29081]:ExpressionStatement[29038-29081]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29420-29426]:Modifier[29420-29426]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29427-29431]:PrimitiveType[29427-29431]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[29432-29453]:SimpleName[29432-29453]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[29454-29463]:SingleVariableDeclaration[29454-29463]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[29465-29486]:SingleVariableDeclaration[29465-29486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29488-29575]:Block[29488-29575]"
    }, {
      "left" : "setDomainAxisLocation(index, location, true);",
      "right" : "setDomainAxisLocation(index, location, true);",
      "info" : "ExpressionStatement[29523-29568]:ExpressionStatement[29523-29568]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29993-29999]:Modifier[29993-29999]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30000-30004]:PrimitiveType[30000-30004]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[30005-30026]:SimpleName[30005-30026]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[30027-30036]:SingleVariableDeclaration[30027-30036]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[30038-30059]:SingleVariableDeclaration[30038-30059]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[30075-30089]:SingleVariableDeclaration[30075-30089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30091-30396]:Block[30091-30396]"
    }, {
      "left" : "if (index == 0 && location == null)",
      "right" : "if (index == 0 && location == null)",
      "info" : "IfStatement[30102-30267]:IfStatement[30102-30267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30138-30267]:Block[30138-30267]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "info" : "ThrowStatement[30153-30256]:ThrowStatement[30153-30256]"
    }, {
      "left" : "this.domainAxisLocations.set(index, location);",
      "right" : "this.domainAxisLocations.set(index, location);",
      "info" : "ExpressionStatement[30277-30323]:ExpressionStatement[30277-30323]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[30333-30389]:IfStatement[30333-30389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30345-30389]:Block[30345-30389]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[30360-30378]:ExpressionStatement[30360-30378]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30594-30600]:Modifier[30594-30600]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[30601-30614]:SimpleType[30601-30614]"
    }, {
      "left" : "getDomainAxisEdge",
      "right" : "getDomainAxisEdge",
      "info" : "SimpleName[30615-30632]:SimpleName[30615-30632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30635-30681]:Block[30635-30681]"
    }, {
      "left" : "return getDomainAxisEdge(0);",
      "right" : "return getDomainAxisEdge(0);",
      "info" : "ReturnStatement[30646-30674]:ReturnStatement[30646-30674]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30857-30863]:Modifier[30857-30863]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[30864-30877]:SimpleType[30864-30877]"
    }, {
      "left" : "getDomainAxisEdge",
      "right" : "getDomainAxisEdge",
      "info" : "SimpleName[30878-30895]:SimpleName[30878-30895]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[30896-30905]:SingleVariableDeclaration[30896-30905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30907-31261]:Block[30907-31261]"
    }, {
      "left" : "RectangleEdge result = null;",
      "right" : "RectangleEdge result = null;",
      "info" : "VariableDeclarationStatement[30918-30946]:VariableDeclarationStatement[30918-30946]"
    }, {
      "left" : "AxisLocation location = getDomainAxisLocation(index);",
      "right" : "AxisLocation location = getDomainAxisLocation(index);",
      "info" : "VariableDeclarationStatement[30956-31009]:VariableDeclarationStatement[30956-31009]"
    }, {
      "left" : "if (location != null)",
      "right" : "if (location != null)",
      "info" : "IfStatement[31019-31230]:IfStatement[31019-31230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31041-31135]:Block[31041-31135]"
    }, {
      "left" : "result = Plot.resolveDomainAxisLocation(location, this.orientation);",
      "right" : "result = Plot.resolveDomainAxisLocation(location, this.orientation);",
      "info" : "ExpressionStatement[31056-31124]:ExpressionStatement[31056-31124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31150-31230]:Block[31150-31230]"
    }, {
      "left" : "result = RectangleEdge.opposite(getDomainAxisEdge(0));",
      "right" : "result = RectangleEdge.opposite(getDomainAxisEdge(0));",
      "info" : "ExpressionStatement[31165-31219]:ExpressionStatement[31165-31219]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[31240-31254]:ReturnStatement[31240-31254]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31370-31376]:Modifier[31370-31376]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[31377-31380]:PrimitiveType[31377-31380]"
    }, {
      "left" : "getDomainAxisCount",
      "right" : "getDomainAxisCount",
      "info" : "SimpleName[31381-31399]:SimpleName[31381-31399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31402-31450]:Block[31402-31450]"
    }, {
      "left" : "return this.domainAxes.size();",
      "right" : "return this.domainAxes.size();",
      "info" : "ReturnStatement[31413-31443]:ReturnStatement[31413-31443]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31594-31600]:Modifier[31594-31600]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31601-31605]:PrimitiveType[31601-31605]"
    }, {
      "left" : "clearDomainAxes",
      "right" : "clearDomainAxes",
      "info" : "SimpleName[31606-31621]:SimpleName[31606-31621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31624-31935]:Block[31624-31935]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[31635-31866]:ForStatement[31635-31866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31684-31866]:Block[31684-31866]"
    }, {
      "left" : "CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);",
      "right" : "CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[31699-31757]:VariableDeclarationStatement[31699-31757]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[31771-31855]:IfStatement[31771-31855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31789-31855]:Block[31789-31855]"
    }, {
      "left" : "axis.removeChangeListener(this);",
      "right" : "axis.removeChangeListener(this);",
      "info" : "ExpressionStatement[31808-31840]:ExpressionStatement[31808-31840]"
    }, {
      "left" : "this.domainAxes.clear();",
      "right" : "this.domainAxes.clear();",
      "info" : "ExpressionStatement[31876-31900]:ExpressionStatement[31876-31900]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[31910-31928]:ExpressionStatement[31910-31928]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31997-32003]:Modifier[31997-32003]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32004-32008]:PrimitiveType[32004-32008]"
    }, {
      "left" : "configureDomainAxes",
      "right" : "configureDomainAxes",
      "info" : "SimpleName[32009-32028]:SimpleName[32009-32028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32031-32265]:Block[32031-32265]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[32042-32258]:ForStatement[32042-32258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32091-32258]:Block[32091-32258]"
    }, {
      "left" : "CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);",
      "right" : "CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[32106-32164]:VariableDeclarationStatement[32106-32164]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[32178-32247]:IfStatement[32178-32247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32196-32247]:Block[32196-32247]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[32215-32232]:ExpressionStatement[32215-32232]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32549-32555]:Modifier[32549-32555]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[32556-32565]:SimpleType[32556-32565]"
    }, {
      "left" : "getRangeAxis",
      "right" : "getRangeAxis",
      "info" : "SimpleName[32566-32578]:SimpleName[32566-32578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32581-32622]:Block[32581-32622]"
    }, {
      "left" : "return getRangeAxis(0);",
      "right" : "return getRangeAxis(0);",
      "info" : "ReturnStatement[32592-32615]:ReturnStatement[32592-32615]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32787-32793]:Modifier[32787-32793]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[32794-32803]:SimpleType[32794-32803]"
    }, {
      "left" : "getRangeAxis",
      "right" : "getRangeAxis",
      "info" : "SimpleName[32804-32816]:SimpleName[32804-32816]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[32817-32826]:SingleVariableDeclaration[32817-32826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32828-33268]:Block[32828-33268]"
    }, {
      "left" : "ValueAxis result = null;",
      "right" : "ValueAxis result = null;",
      "info" : "VariableDeclarationStatement[32839-32863]:VariableDeclarationStatement[32839-32863]"
    }, {
      "left" : "if (index < this.rangeAxes.size())",
      "right" : "if (index < this.rangeAxes.size())",
      "info" : "IfStatement[32873-32981]:IfStatement[32873-32981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32908-32981]:Block[32908-32981]"
    }, {
      "left" : "result = (ValueAxis) this.rangeAxes.get(index);",
      "right" : "result = (ValueAxis) this.rangeAxes.get(index);",
      "info" : "ExpressionStatement[32923-32970]:ExpressionStatement[32923-32970]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[32991-33237]:IfStatement[32991-33237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33011-33237]:Block[33011-33237]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[33026-33052]:VariableDeclarationStatement[33026-33052]"
    }, {
      "left" : "if (parent instanceof CategoryPlot)",
      "right" : "if (parent instanceof CategoryPlot)",
      "info" : "IfStatement[33066-33226]:IfStatement[33066-33226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33102-33226]:Block[33102-33226]"
    }, {
      "left" : "CategoryPlot cp = (CategoryPlot) parent;",
      "right" : "CategoryPlot cp = (CategoryPlot) parent;",
      "info" : "VariableDeclarationStatement[33121-33161]:VariableDeclarationStatement[33121-33161]"
    }, {
      "left" : "result = cp.getRangeAxis(index);",
      "right" : "result = cp.getRangeAxis(index);",
      "info" : "ExpressionStatement[33179-33211]:ExpressionStatement[33179-33211]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[33247-33261]:ReturnStatement[33247-33261]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33477-33483]:Modifier[33477-33483]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33484-33488]:PrimitiveType[33484-33488]"
    }, {
      "left" : "setRangeAxis",
      "right" : "setRangeAxis",
      "info" : "SimpleName[33489-33501]:SimpleName[33489-33501]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[33502-33516]:SingleVariableDeclaration[33502-33516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33518-33558]:Block[33518-33558]"
    }, {
      "left" : "setRangeAxis(0, axis);",
      "right" : "setRangeAxis(0, axis);",
      "info" : "ExpressionStatement[33529-33551]:ExpressionStatement[33529-33551]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33760-33766]:Modifier[33760-33766]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33767-33771]:PrimitiveType[33767-33771]"
    }, {
      "left" : "setRangeAxis",
      "right" : "setRangeAxis",
      "info" : "SimpleName[33772-33784]:SimpleName[33772-33784]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[33785-33794]:SingleVariableDeclaration[33785-33794]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[33796-33810]:SingleVariableDeclaration[33796-33810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33812-33862]:Block[33812-33862]"
    }, {
      "left" : "setRangeAxis(index, axis, true);",
      "right" : "setRangeAxis(index, axis, true);",
      "info" : "ExpressionStatement[33823-33855]:ExpressionStatement[33823-33855]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34129-34135]:Modifier[34129-34135]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34136-34140]:PrimitiveType[34136-34140]"
    }, {
      "left" : "setRangeAxis",
      "right" : "setRangeAxis",
      "info" : "SimpleName[34141-34153]:SimpleName[34141-34153]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[34154-34163]:SingleVariableDeclaration[34154-34163]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[34165-34179]:SingleVariableDeclaration[34165-34179]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[34181-34195]:SingleVariableDeclaration[34181-34195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34197-34663]:Block[34197-34663]"
    }, {
      "left" : "ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);",
      "right" : "ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);",
      "info" : "VariableDeclarationStatement[34208-34267]:VariableDeclarationStatement[34208-34267]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[34277-34361]:IfStatement[34277-34361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34299-34361]:Block[34299-34361]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[34314-34350]:ExpressionStatement[34314-34350]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[34371-34434]:IfStatement[34371-34434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34389-34434]:Block[34389-34434]"
    }, {
      "left" : "axis.setPlot(this);",
      "right" : "axis.setPlot(this);",
      "info" : "ExpressionStatement[34404-34423]:ExpressionStatement[34404-34423]"
    }, {
      "left" : "this.rangeAxes.set(index, axis);",
      "right" : "this.rangeAxes.set(index, axis);",
      "info" : "ExpressionStatement[34444-34476]:ExpressionStatement[34444-34476]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[34486-34590]:IfStatement[34486-34590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34504-34590]:Block[34504-34590]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[34519-34536]:ExpressionStatement[34519-34536]"
    }, {
      "left" : "axis.addChangeListener(this);",
      "right" : "axis.addChangeListener(this);",
      "info" : "ExpressionStatement[34550-34579]:ExpressionStatement[34550-34579]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[34600-34656]:IfStatement[34600-34656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34612-34656]:Block[34612-34656]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[34627-34645]:ExpressionStatement[34627-34645]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34931-34937]:Modifier[34931-34937]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34938-34942]:PrimitiveType[34938-34942]"
    }, {
      "left" : "setRangeAxes",
      "right" : "setRangeAxes",
      "info" : "SimpleName[34943-34955]:SimpleName[34943-34955]"
    }, {
      "left" : "ValueAxis[] axes",
      "right" : "ValueAxis[] axes",
      "info" : "SingleVariableDeclaration[34956-34972]:SingleVariableDeclaration[34956-34972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34974-35119]:Block[34974-35119]"
    }, {
      "left" : "for (int i = 0; i < axes.length; i++)",
      "right" : "for (int i = 0; i < axes.length; i++)",
      "info" : "ForStatement[34985-35084]:ForStatement[34985-35084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35023-35084]:Block[35023-35084]"
    }, {
      "left" : "setRangeAxis(i, axes[i], false);",
      "right" : "setRangeAxis(i, axes[i], false);",
      "info" : "ExpressionStatement[35038-35070]:ExpressionStatement[35038-35070]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[35094-35112]:ExpressionStatement[35094-35112]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35493-35499]:Modifier[35493-35499]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[35500-35503]:PrimitiveType[35500-35503]"
    }, {
      "left" : "getRangeAxisIndex",
      "right" : "getRangeAxisIndex",
      "info" : "SimpleName[35504-35521]:SimpleName[35504-35521]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[35522-35536]:SingleVariableDeclaration[35522-35536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35538-36013]:Block[35538-36013]"
    }, {
      "left" : "if (axis == null)",
      "right" : "if (axis == null)",
      "info" : "IfStatement[35549-35653]:IfStatement[35549-35653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35567-35653]:Block[35567-35653]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'axis' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'axis' argument.\");",
      "info" : "ThrowStatement[35582-35642]:ThrowStatement[35582-35642]"
    }, {
      "left" : "int result = this.rangeAxes.indexOf(axis);",
      "right" : "int result = this.rangeAxes.indexOf(axis);",
      "info" : "VariableDeclarationStatement[35663-35705]:VariableDeclarationStatement[35663-35705]"
    }, {
      "left" : "if (result < 0)",
      "right" : "if (result < 0)",
      "info" : "IfStatement[35715-35982]:IfStatement[35715-35982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35731-35982]:Block[35731-35982]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[35769-35795]:VariableDeclarationStatement[35769-35795]"
    }, {
      "left" : "if (parent instanceof CategoryPlot)",
      "right" : "if (parent instanceof CategoryPlot)",
      "info" : "IfStatement[35809-35971]:IfStatement[35809-35971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35845-35971]:Block[35845-35971]"
    }, {
      "left" : "CategoryPlot p = (CategoryPlot) parent;",
      "right" : "CategoryPlot p = (CategoryPlot) parent;",
      "info" : "VariableDeclarationStatement[35864-35903]:VariableDeclarationStatement[35864-35903]"
    }, {
      "left" : "result = p.getRangeAxisIndex(axis);",
      "right" : "result = p.getRangeAxisIndex(axis);",
      "info" : "ExpressionStatement[35921-35956]:ExpressionStatement[35921-35956]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[35992-36006]:ReturnStatement[35992-36006]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36144-36150]:Modifier[36144-36150]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[36151-36163]:SimpleType[36151-36163]"
    }, {
      "left" : "getRangeAxisLocation",
      "right" : "getRangeAxisLocation",
      "info" : "SimpleName[36164-36184]:SimpleName[36164-36184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36187-36236]:Block[36187-36236]"
    }, {
      "left" : "return getRangeAxisLocation(0);",
      "right" : "return getRangeAxisLocation(0);",
      "info" : "ReturnStatement[36198-36229]:ReturnStatement[36198-36229]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36456-36462]:Modifier[36456-36462]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[36463-36475]:SimpleType[36463-36475]"
    }, {
      "left" : "getRangeAxisLocation",
      "right" : "getRangeAxisLocation",
      "info" : "SimpleName[36476-36496]:SimpleName[36476-36496]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[36497-36506]:SingleVariableDeclaration[36497-36506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36508-36831]:Block[36508-36831]"
    }, {
      "left" : "AxisLocation result = null;",
      "right" : "AxisLocation result = null;",
      "info" : "VariableDeclarationStatement[36519-36546]:VariableDeclarationStatement[36519-36546]"
    }, {
      "left" : "if (index < this.rangeAxisLocations.size())",
      "right" : "if (index < this.rangeAxisLocations.size())",
      "info" : "IfStatement[36556-36685]:IfStatement[36556-36685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36600-36685]:Block[36600-36685]"
    }, {
      "left" : "result = (AxisLocation) this.rangeAxisLocations.get(index);",
      "right" : "result = (AxisLocation) this.rangeAxisLocations.get(index);",
      "info" : "ExpressionStatement[36615-36674]:ExpressionStatement[36615-36674]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[36695-36800]:IfStatement[36695-36800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36715-36800]:Block[36715-36800]"
    }, {
      "left" : "result = AxisLocation.getOpposite(getRangeAxisLocation(0));",
      "right" : "result = AxisLocation.getOpposite(getRangeAxisLocation(0));",
      "info" : "ExpressionStatement[36730-36789]:ExpressionStatement[36730-36789]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[36810-36824]:ReturnStatement[36810-36824]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37172-37178]:Modifier[37172-37178]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37179-37183]:PrimitiveType[37179-37183]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[37184-37204]:SimpleName[37184-37204]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[37205-37226]:SingleVariableDeclaration[37205-37226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37228-37322]:Block[37228-37322]"
    }, {
      "left" : "setRangeAxisLocation(location, true);",
      "right" : "setRangeAxisLocation(location, true);",
      "info" : "ExpressionStatement[37278-37315]:ExpressionStatement[37278-37315]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37671-37677]:Modifier[37671-37677]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37678-37682]:PrimitiveType[37678-37682]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[37683-37703]:SimpleName[37683-37703]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[37704-37725]:SingleVariableDeclaration[37704-37725]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[37727-37741]:SingleVariableDeclaration[37727-37741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37743-37803]:Block[37743-37803]"
    }, {
      "left" : "setRangeAxisLocation(0, location, notify);",
      "right" : "setRangeAxisLocation(0, location, notify);",
      "info" : "ExpressionStatement[37754-37796]:ExpressionStatement[37754-37796]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38143-38149]:Modifier[38143-38149]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38150-38154]:PrimitiveType[38150-38154]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[38155-38175]:SimpleName[38155-38175]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[38176-38185]:SingleVariableDeclaration[38176-38185]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[38187-38208]:SingleVariableDeclaration[38187-38208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38210-38272]:Block[38210-38272]"
    }, {
      "left" : "setRangeAxisLocation(index, location, true);",
      "right" : "setRangeAxisLocation(index, location, true);",
      "info" : "ExpressionStatement[38221-38265]:ExpressionStatement[38221-38265]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38654-38660]:Modifier[38654-38660]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38661-38665]:PrimitiveType[38661-38665]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[38666-38686]:SimpleName[38666-38686]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[38687-38696]:SingleVariableDeclaration[38687-38696]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[38698-38719]:SingleVariableDeclaration[38698-38719]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[38760-38774]:SingleVariableDeclaration[38760-38774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38776-39080]:Block[38776-39080]"
    }, {
      "left" : "if (index == 0 && location == null)",
      "right" : "if (index == 0 && location == null)",
      "info" : "IfStatement[38787-38952]:IfStatement[38787-38952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38823-38952]:Block[38823-38952]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "info" : "ThrowStatement[38838-38941]:ThrowStatement[38838-38941]"
    }, {
      "left" : "this.rangeAxisLocations.set(index, location);",
      "right" : "this.rangeAxisLocations.set(index, location);",
      "info" : "ExpressionStatement[38962-39007]:ExpressionStatement[38962-39007]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[39017-39073]:IfStatement[39017-39073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39029-39073]:Block[39029-39073]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[39044-39062]:ExpressionStatement[39044-39062]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39232-39238]:Modifier[39232-39238]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[39239-39252]:SimpleType[39239-39252]"
    }, {
      "left" : "getRangeAxisEdge",
      "right" : "getRangeAxisEdge",
      "info" : "SimpleName[39253-39269]:SimpleName[39253-39269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39272-39317]:Block[39272-39317]"
    }, {
      "left" : "return getRangeAxisEdge(0);",
      "right" : "return getRangeAxisEdge(0);",
      "info" : "ReturnStatement[39283-39310]:ReturnStatement[39283-39310]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39466-39472]:Modifier[39466-39472]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[39473-39486]:SimpleType[39473-39486]"
    }, {
      "left" : "getRangeAxisEdge",
      "right" : "getRangeAxisEdge",
      "info" : "SimpleName[39487-39503]:SimpleName[39487-39503]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[39504-39513]:SingleVariableDeclaration[39504-39513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39515-39827]:Block[39515-39827]"
    }, {
      "left" : "AxisLocation location = getRangeAxisLocation(index);",
      "right" : "AxisLocation location = getRangeAxisLocation(index);",
      "info" : "VariableDeclarationStatement[39526-39578]:VariableDeclarationStatement[39526-39578]"
    }, {
      "left" : "RectangleEdge result = Plot.resolveRangeAxisLocation(location, \r\n                this.orientation);",
      "right" : "RectangleEdge result = Plot.resolveRangeAxisLocation(location, \r\n                this.orientation);",
      "info" : "VariableDeclarationStatement[39588-39687]:VariableDeclarationStatement[39588-39687]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[39697-39796]:IfStatement[39697-39796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39717-39796]:Block[39717-39796]"
    }, {
      "left" : "result = RectangleEdge.opposite(getRangeAxisEdge(0));",
      "right" : "result = RectangleEdge.opposite(getRangeAxisEdge(0));",
      "info" : "ExpressionStatement[39732-39785]:ExpressionStatement[39732-39785]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[39806-39820]:ReturnStatement[39806-39820]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39935-39941]:Modifier[39935-39941]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[39942-39945]:PrimitiveType[39942-39945]"
    }, {
      "left" : "getRangeAxisCount",
      "right" : "getRangeAxisCount",
      "info" : "SimpleName[39946-39963]:SimpleName[39946-39963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39966-40013]:Block[39966-40013]"
    }, {
      "left" : "return this.rangeAxes.size();",
      "right" : "return this.rangeAxes.size();",
      "info" : "ReturnStatement[39977-40006]:ReturnStatement[39977-40006]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40157-40163]:Modifier[40157-40163]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40164-40168]:PrimitiveType[40164-40168]"
    }, {
      "left" : "clearRangeAxes",
      "right" : "clearRangeAxes",
      "info" : "SimpleName[40169-40183]:SimpleName[40169-40183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40186-40488]:Block[40186-40488]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[40197-40420]:ForStatement[40197-40420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40245-40420]:Block[40245-40420]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[40260-40311]:VariableDeclarationStatement[40260-40311]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[40325-40409]:IfStatement[40325-40409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40343-40409]:Block[40343-40409]"
    }, {
      "left" : "axis.removeChangeListener(this);",
      "right" : "axis.removeChangeListener(this);",
      "info" : "ExpressionStatement[40362-40394]:ExpressionStatement[40362-40394]"
    }, {
      "left" : "this.rangeAxes.clear();",
      "right" : "this.rangeAxes.clear();",
      "info" : "ExpressionStatement[40430-40453]:ExpressionStatement[40430-40453]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[40463-40481]:ExpressionStatement[40463-40481]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40549-40555]:Modifier[40549-40555]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40556-40560]:PrimitiveType[40556-40560]"
    }, {
      "left" : "configureRangeAxes",
      "right" : "configureRangeAxes",
      "info" : "SimpleName[40561-40579]:SimpleName[40561-40579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40582-40808]:Block[40582-40808]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[40593-40801]:ForStatement[40593-40801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40641-40801]:Block[40641-40801]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[40656-40707]:VariableDeclarationStatement[40656-40707]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[40721-40790]:IfStatement[40721-40790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40739-40790]:Block[40739-40790]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[40758-40775]:ExpressionStatement[40758-40775]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41009-41015]:Modifier[41009-41015]"
    }, {
      "left" : "CategoryDataset",
      "right" : "CategoryDataset",
      "info" : "SimpleType[41016-41031]:SimpleType[41016-41031]"
    }, {
      "left" : "getDataset",
      "right" : "getDataset",
      "info" : "SimpleName[41032-41042]:SimpleName[41032-41042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41045-41084]:Block[41045-41084]"
    }, {
      "left" : "return getDataset(0);",
      "right" : "return getDataset(0);",
      "info" : "ReturnStatement[41056-41077]:ReturnStatement[41056-41077]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41329-41335]:Modifier[41329-41335]"
    }, {
      "left" : "CategoryDataset",
      "right" : "CategoryDataset",
      "info" : "SimpleType[41336-41351]:SimpleType[41336-41351]"
    }, {
      "left" : "getDataset",
      "right" : "getDataset",
      "info" : "SimpleName[41352-41362]:SimpleName[41352-41362]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[41363-41372]:SingleVariableDeclaration[41363-41372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41374-41568]:Block[41374-41568]"
    }, {
      "left" : "CategoryDataset result = null;",
      "right" : "CategoryDataset result = null;",
      "info" : "VariableDeclarationStatement[41385-41415]:VariableDeclarationStatement[41385-41415]"
    }, {
      "left" : "if (this.datasets.size() > index)",
      "right" : "if (this.datasets.size() > index)",
      "info" : "IfStatement[41425-41537]:IfStatement[41425-41537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41459-41537]:Block[41459-41537]"
    }, {
      "left" : "result = (CategoryDataset) this.datasets.get(index);",
      "right" : "result = (CategoryDataset) this.datasets.get(index);",
      "info" : "ExpressionStatement[41474-41526]:ExpressionStatement[41474-41526]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[41547-41561]:ReturnStatement[41547-41561]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42017-42023]:Modifier[42017-42023]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[42024-42028]:PrimitiveType[42024-42028]"
    }, {
      "left" : "setDataset",
      "right" : "setDataset",
      "info" : "SimpleName[42029-42039]:SimpleName[42029-42039]"
    }, {
      "left" : "CategoryDataset dataset",
      "right" : "CategoryDataset dataset",
      "info" : "SingleVariableDeclaration[42040-42063]:SingleVariableDeclaration[42040-42063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42065-42106]:Block[42065-42106]"
    }, {
      "left" : "setDataset(0, dataset);",
      "right" : "setDataset(0, dataset);",
      "info" : "ExpressionStatement[42076-42099]:ExpressionStatement[42076-42099]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42324-42330]:Modifier[42324-42330]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[42331-42335]:PrimitiveType[42331-42335]"
    }, {
      "left" : "setDataset",
      "right" : "setDataset",
      "info" : "SimpleName[42336-42346]:SimpleName[42336-42346]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[42347-42356]:SingleVariableDeclaration[42347-42356]"
    }, {
      "left" : "CategoryDataset dataset",
      "right" : "CategoryDataset dataset",
      "info" : "SingleVariableDeclaration[42358-42381]:SingleVariableDeclaration[42358-42381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42383-42886]:Block[42383-42886]"
    }, {
      "left" : "CategoryDataset existing = (CategoryDataset) this.datasets.get(index);",
      "right" : "CategoryDataset existing = (CategoryDataset) this.datasets.get(index);",
      "info" : "VariableDeclarationStatement[42404-42474]:VariableDeclarationStatement[42404-42474]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[42484-42568]:IfStatement[42484-42568]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42506-42568]:Block[42506-42568]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[42521-42557]:ExpressionStatement[42521-42557]"
    }, {
      "left" : "this.datasets.set(index, dataset);",
      "right" : "this.datasets.set(index, dataset);",
      "info" : "ExpressionStatement[42578-42612]:ExpressionStatement[42578-42612]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[42622-42701]:IfStatement[42622-42701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42643-42701]:Block[42643-42701]"
    }, {
      "left" : "dataset.addChangeListener(this);",
      "right" : "dataset.addChangeListener(this);",
      "info" : "ExpressionStatement[42658-42690]:ExpressionStatement[42658-42690]"
    }, {
      "left" : "DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",
      "right" : "DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",
      "info" : "VariableDeclarationStatement[42772-42837]:VariableDeclarationStatement[42772-42837]"
    }, {
      "left" : "datasetChanged(event);",
      "right" : "datasetChanged(event);",
      "info" : "ExpressionStatement[42847-42869]:ExpressionStatement[42847-42869]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43030-43036]:Modifier[43030-43036]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[43037-43040]:PrimitiveType[43037-43040]"
    }, {
      "left" : "getDatasetCount",
      "right" : "getDatasetCount",
      "info" : "SimpleName[43041-43056]:SimpleName[43041-43056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43059-43105]:Block[43059-43105]"
    }, {
      "left" : "return this.datasets.size();",
      "right" : "return this.datasets.size();",
      "info" : "ReturnStatement[43070-43098]:ReturnStatement[43070-43098]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43353-43359]:Modifier[43353-43359]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[43360-43364]:PrimitiveType[43360-43364]"
    }, {
      "left" : "mapDatasetToDomainAxis",
      "right" : "mapDatasetToDomainAxis",
      "info" : "SimpleName[43365-43387]:SimpleName[43365-43387]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[43388-43397]:SingleVariableDeclaration[43388-43397]"
    }, {
      "left" : "int axisIndex",
      "right" : "int axisIndex",
      "info" : "SingleVariableDeclaration[43399-43412]:SingleVariableDeclaration[43399-43412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43414-43631]:Block[43414-43631]"
    }, {
      "left" : "this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));",
      "right" : "this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));",
      "info" : "ExpressionStatement[43425-43488]:ExpressionStatement[43425-43488]"
    }, {
      "left" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "right" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "info" : "ExpressionStatement[43558-43622]:ExpressionStatement[43558-43622]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43960-43966]:Modifier[43960-43966]"
    }, {
      "left" : "CategoryAxis",
      "right" : "CategoryAxis",
      "info" : "SimpleType[43967-43979]:SimpleType[43967-43979]"
    }, {
      "left" : "getDomainAxisForDataset",
      "right" : "getDomainAxisForDataset",
      "info" : "SimpleName[43980-44003]:SimpleName[43980-44003]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[44004-44013]:SingleVariableDeclaration[44004-44013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44015-44282]:Block[44015-44282]"
    }, {
      "left" : "CategoryAxis result = getDomainAxis();",
      "right" : "CategoryAxis result = getDomainAxis();",
      "info" : "VariableDeclarationStatement[44026-44064]:VariableDeclarationStatement[44026-44064]"
    }, {
      "left" : "Integer axisIndex = (Integer) this.datasetToDomainAxisMap.get(index);",
      "right" : "Integer axisIndex = (Integer) this.datasetToDomainAxisMap.get(index);",
      "info" : "VariableDeclarationStatement[44074-44143]:VariableDeclarationStatement[44074-44143]"
    }, {
      "left" : "if (axisIndex != null)",
      "right" : "if (axisIndex != null)",
      "info" : "IfStatement[44153-44247]:IfStatement[44153-44247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44176-44247]:Block[44176-44247]"
    }, {
      "left" : "result = getDomainAxis(axisIndex.intValue());",
      "right" : "result = getDomainAxis(axisIndex.intValue());",
      "info" : "ExpressionStatement[44191-44236]:ExpressionStatement[44191-44236]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[44257-44271]:ReturnStatement[44257-44271]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44532-44538]:Modifier[44532-44538]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[44539-44543]:PrimitiveType[44539-44543]"
    }, {
      "left" : "mapDatasetToRangeAxis",
      "right" : "mapDatasetToRangeAxis",
      "info" : "SimpleName[44544-44565]:SimpleName[44544-44565]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[44566-44575]:SingleVariableDeclaration[44566-44575]"
    }, {
      "left" : "int axisIndex",
      "right" : "int axisIndex",
      "info" : "SingleVariableDeclaration[44577-44590]:SingleVariableDeclaration[44577-44590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44592-44806]:Block[44592-44806]"
    }, {
      "left" : "this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));",
      "right" : "this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));",
      "info" : "ExpressionStatement[44603-44665]:ExpressionStatement[44603-44665]"
    }, {
      "left" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "right" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "info" : "ExpressionStatement[44733-44797]:ExpressionStatement[44733-44797]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45131-45137]:Modifier[45131-45137]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[45138-45147]:SimpleType[45138-45147]"
    }, {
      "left" : "getRangeAxisForDataset",
      "right" : "getRangeAxisForDataset",
      "info" : "SimpleName[45148-45170]:SimpleName[45148-45170]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[45171-45180]:SingleVariableDeclaration[45171-45180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45182-45443]:Block[45182-45443]"
    }, {
      "left" : "ValueAxis result = getRangeAxis();",
      "right" : "ValueAxis result = getRangeAxis();",
      "info" : "VariableDeclarationStatement[45193-45227]:VariableDeclarationStatement[45193-45227]"
    }, {
      "left" : "Integer axisIndex = (Integer) this.datasetToRangeAxisMap.get(index);",
      "right" : "Integer axisIndex = (Integer) this.datasetToRangeAxisMap.get(index);",
      "info" : "VariableDeclarationStatement[45237-45305]:VariableDeclarationStatement[45237-45305]"
    }, {
      "left" : "if (axisIndex != null)",
      "right" : "if (axisIndex != null)",
      "info" : "IfStatement[45315-45408]:IfStatement[45315-45408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45338-45408]:Block[45338-45408]"
    }, {
      "left" : "result = getRangeAxis(axisIndex.intValue());",
      "right" : "result = getRangeAxis(axisIndex.intValue());",
      "info" : "ExpressionStatement[45353-45397]:ExpressionStatement[45353-45397]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[45418-45432]:ReturnStatement[45418-45432]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45626-45632]:Modifier[45626-45632]"
    }, {
      "left" : "CategoryItemRenderer",
      "right" : "CategoryItemRenderer",
      "info" : "SimpleType[45633-45653]:SimpleType[45633-45653]"
    }, {
      "left" : "getRenderer",
      "right" : "getRenderer",
      "info" : "SimpleName[45654-45665]:SimpleName[45654-45665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45668-45708]:Block[45668-45708]"
    }, {
      "left" : "return getRenderer(0);",
      "right" : "return getRenderer(0);",
      "info" : "ReturnStatement[45679-45701]:ReturnStatement[45679-45701]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45962-45968]:Modifier[45962-45968]"
    }, {
      "left" : "CategoryItemRenderer",
      "right" : "CategoryItemRenderer",
      "info" : "SimpleType[45969-45989]:SimpleType[45969-45989]"
    }, {
      "left" : "getRenderer",
      "right" : "getRenderer",
      "info" : "SimpleName[45990-46001]:SimpleName[45990-46001]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[46002-46011]:SingleVariableDeclaration[46002-46011]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46013-46219]:Block[46013-46219]"
    }, {
      "left" : "CategoryItemRenderer result = null;",
      "right" : "CategoryItemRenderer result = null;",
      "info" : "VariableDeclarationStatement[46024-46059]:VariableDeclarationStatement[46024-46059]"
    }, {
      "left" : "if (this.renderers.size() > index)",
      "right" : "if (this.renderers.size() > index)",
      "info" : "IfStatement[46069-46188]:IfStatement[46069-46188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46104-46188]:Block[46104-46188]"
    }, {
      "left" : "result = (CategoryItemRenderer) this.renderers.get(index);",
      "right" : "result = (CategoryItemRenderer) this.renderers.get(index);",
      "info" : "ExpressionStatement[46119-46177]:ExpressionStatement[46119-46177]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[46198-46212]:ReturnStatement[46198-46212]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46532-46538]:Modifier[46532-46538]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[46539-46543]:PrimitiveType[46539-46543]"
    }, {
      "left" : "setRenderer",
      "right" : "setRenderer",
      "info" : "SimpleName[46544-46555]:SimpleName[46544-46555]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[46556-46585]:SingleVariableDeclaration[46556-46585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46587-46636]:Block[46587-46636]"
    }, {
      "left" : "setRenderer(0, renderer, true);",
      "right" : "setRenderer(0, renderer, true);",
      "info" : "ExpressionStatement[46598-46629]:ExpressionStatement[46598-46629]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47248-47254]:Modifier[47248-47254]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[47255-47259]:PrimitiveType[47255-47259]"
    }, {
      "left" : "setRenderer",
      "right" : "setRenderer",
      "info" : "SimpleName[47260-47271]:SimpleName[47260-47271]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[47272-47301]:SingleVariableDeclaration[47272-47301]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[47303-47317]:SingleVariableDeclaration[47303-47317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47319-47370]:Block[47319-47370]"
    }, {
      "left" : "setRenderer(0, renderer, notify);",
      "right" : "setRenderer(0, renderer, notify);",
      "info" : "ExpressionStatement[47330-47363]:ExpressionStatement[47330-47363]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47731-47737]:Modifier[47731-47737]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[47738-47742]:PrimitiveType[47738-47742]"
    }, {
      "left" : "setRenderer",
      "right" : "setRenderer",
      "info" : "SimpleName[47743-47754]:SimpleName[47743-47754]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[47755-47764]:SingleVariableDeclaration[47755-47764]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[47766-47795]:SingleVariableDeclaration[47766-47795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47797-47853]:Block[47797-47853]"
    }, {
      "left" : "setRenderer(index, renderer, true);",
      "right" : "setRenderer(index, renderer, true);",
      "info" : "ExpressionStatement[47808-47843]:ExpressionStatement[47808-47843]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48168-48174]:Modifier[48168-48174]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48175-48179]:PrimitiveType[48175-48179]"
    }, {
      "left" : "setRenderer",
      "right" : "setRenderer",
      "info" : "SimpleName[48180-48191]:SimpleName[48180-48191]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[48192-48201]:SingleVariableDeclaration[48192-48201]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[48203-48232]:SingleVariableDeclaration[48203-48232]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[48264-48278]:SingleVariableDeclaration[48264-48278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48280-48926]:Block[48280-48926]"
    }, {
      "left" : "CategoryItemRenderer existing \r\n            = (CategoryItemRenderer) this.renderers.get(index);",
      "right" : "CategoryItemRenderer existing \r\n            = (CategoryItemRenderer) this.renderers.get(index);",
      "info" : "VariableDeclarationStatement[48356-48451]:VariableDeclarationStatement[48356-48451]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[48461-48545]:IfStatement[48461-48545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48483-48545]:Block[48483-48545]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[48498-48534]:ExpressionStatement[48498-48534]"
    }, {
      "left" : "this.renderers.set(index, renderer);",
      "right" : "this.renderers.set(index, renderer);",
      "info" : "ExpressionStatement[48606-48642]:ExpressionStatement[48606-48642]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[48652-48770]:IfStatement[48652-48770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48674-48770]:Block[48674-48770]"
    }, {
      "left" : "renderer.setPlot(this);",
      "right" : "renderer.setPlot(this);",
      "info" : "ExpressionStatement[48689-48712]:ExpressionStatement[48689-48712]"
    }, {
      "left" : "renderer.addChangeListener(this);",
      "right" : "renderer.addChangeListener(this);",
      "info" : "ExpressionStatement[48726-48759]:ExpressionStatement[48726-48759]"
    }, {
      "left" : "configureDomainAxes();",
      "right" : "configureDomainAxes();",
      "info" : "ExpressionStatement[48790-48812]:ExpressionStatement[48790-48812]"
    }, {
      "left" : "configureRangeAxes();",
      "right" : "configureRangeAxes();",
      "info" : "ExpressionStatement[48822-48843]:ExpressionStatement[48822-48843]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[48863-48919]:IfStatement[48863-48919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48875-48919]:Block[48875-48919]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[48890-48908]:ExpressionStatement[48890-48908]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49116-49122]:Modifier[49116-49122]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[49123-49127]:PrimitiveType[49123-49127]"
    }, {
      "left" : "setRenderers",
      "right" : "setRenderers",
      "info" : "SimpleName[49128-49140]:SimpleName[49128-49140]"
    }, {
      "left" : "CategoryItemRenderer[] renderers",
      "right" : "CategoryItemRenderer[] renderers",
      "info" : "SingleVariableDeclaration[49141-49173]:SingleVariableDeclaration[49141-49173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49175-49329]:Block[49175-49329]"
    }, {
      "left" : "for (int i = 0; i < renderers.length; i++)",
      "right" : "for (int i = 0; i < renderers.length; i++)",
      "info" : "ForStatement[49186-49294]:ForStatement[49186-49294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49229-49294]:Block[49229-49294]"
    }, {
      "left" : "setRenderer(i, renderers[i], false);",
      "right" : "setRenderer(i, renderers[i], false);",
      "info" : "ExpressionStatement[49244-49280]:ExpressionStatement[49244-49280]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[49304-49322]:ExpressionStatement[49304-49322]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49654-49660]:Modifier[49654-49660]"
    }, {
      "left" : "CategoryItemRenderer",
      "right" : "CategoryItemRenderer",
      "info" : "SimpleType[49661-49681]:SimpleType[49661-49681]"
    }, {
      "left" : "getRendererForDataset",
      "right" : "getRendererForDataset",
      "info" : "SimpleName[49682-49703]:SimpleName[49682-49703]"
    }, {
      "left" : "CategoryDataset dataset",
      "right" : "CategoryDataset dataset",
      "info" : "SingleVariableDeclaration[49704-49727]:SingleVariableDeclaration[49704-49727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49729-50041]:Block[49729-50041]"
    }, {
      "left" : "CategoryItemRenderer result = null;",
      "right" : "CategoryItemRenderer result = null;",
      "info" : "VariableDeclarationStatement[49740-49775]:VariableDeclarationStatement[49740-49775]"
    }, {
      "left" : "for (int i = 0; i < this.datasets.size(); i++)",
      "right" : "for (int i = 0; i < this.datasets.size(); i++)",
      "info" : "ForStatement[49785-50010]:ForStatement[49785-50010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49832-50010]:Block[49832-50010]"
    }, {
      "left" : "if (this.datasets.get(i) == dataset)",
      "right" : "if (this.datasets.get(i) == dataset)",
      "info" : "IfStatement[49847-49999]:IfStatement[49847-49999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49884-49999]:Block[49884-49999]"
    }, {
      "left" : "result = (CategoryItemRenderer) this.renderers.get(i);",
      "right" : "result = (CategoryItemRenderer) this.renderers.get(i);",
      "info" : "ExpressionStatement[49903-49957]:ExpressionStatement[49903-49957]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[49978-49984]:BreakStatement[49978-49984]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[50020-50034]:ReturnStatement[50020-50034]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50320-50326]:Modifier[50320-50326]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[50327-50330]:PrimitiveType[50327-50330]"
    }, {
      "left" : "getIndexOf",
      "right" : "getIndexOf",
      "info" : "SimpleName[50331-50341]:SimpleName[50331-50341]"
    }, {
      "left" : "CategoryItemRenderer renderer",
      "right" : "CategoryItemRenderer renderer",
      "info" : "SingleVariableDeclaration[50342-50371]:SingleVariableDeclaration[50342-50371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50373-50431]:Block[50373-50431]"
    }, {
      "left" : "return this.renderers.indexOf(renderer);",
      "right" : "return this.renderers.indexOf(renderer);",
      "info" : "ReturnStatement[50384-50424]:ReturnStatement[50384-50424]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50634-50640]:Modifier[50634-50640]"
    }, {
      "left" : "DatasetRenderingOrder",
      "right" : "DatasetRenderingOrder",
      "info" : "SimpleType[50641-50662]:SimpleType[50641-50662]"
    }, {
      "left" : "getDatasetRenderingOrder",
      "right" : "getDatasetRenderingOrder",
      "info" : "SimpleName[50663-50687]:SimpleName[50663-50687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50690-50735]:Block[50690-50735]"
    }, {
      "left" : "return this.renderingOrder;",
      "right" : "return this.renderingOrder;",
      "info" : "ReturnStatement[50701-50728]:ReturnStatement[50701-50728]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51177-51183]:Modifier[51177-51183]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[51184-51188]:PrimitiveType[51184-51188]"
    }, {
      "left" : "setDatasetRenderingOrder",
      "right" : "setDatasetRenderingOrder",
      "info" : "SimpleName[51189-51213]:SimpleName[51189-51213]"
    }, {
      "left" : "DatasetRenderingOrder order",
      "right" : "DatasetRenderingOrder order",
      "info" : "SingleVariableDeclaration[51214-51241]:SingleVariableDeclaration[51214-51241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51243-51436]:Block[51243-51436]"
    }, {
      "left" : "if (order == null)",
      "right" : "if (order == null)",
      "info" : "IfStatement[51254-51363]:IfStatement[51254-51363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51273-51363]:Block[51273-51363]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "info" : "ThrowStatement[51288-51349]:ThrowStatement[51288-51349]"
    }, {
      "left" : "this.renderingOrder = order;",
      "right" : "this.renderingOrder = order;",
      "info" : "ExpressionStatement[51373-51401]:ExpressionStatement[51373-51401]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[51411-51429]:ExpressionStatement[51411-51429]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51727-51733]:Modifier[51727-51733]"
    }, {
      "left" : "SortOrder",
      "right" : "SortOrder",
      "info" : "SimpleType[51734-51743]:SimpleType[51734-51743]"
    }, {
      "left" : "getColumnRenderingOrder",
      "right" : "getColumnRenderingOrder",
      "info" : "SimpleName[51744-51767]:SimpleName[51744-51767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51770-51821]:Block[51770-51821]"
    }, {
      "left" : "return this.columnRenderingOrder;",
      "right" : "return this.columnRenderingOrder;",
      "info" : "ReturnStatement[51781-51814]:ReturnStatement[51781-51814]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52291-52297]:Modifier[52291-52297]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[52298-52302]:PrimitiveType[52298-52302]"
    }, {
      "left" : "setColumnRenderingOrder",
      "right" : "setColumnRenderingOrder",
      "info" : "SimpleName[52303-52326]:SimpleName[52303-52326]"
    }, {
      "left" : "SortOrder order",
      "right" : "SortOrder order",
      "info" : "SingleVariableDeclaration[52327-52342]:SingleVariableDeclaration[52327-52342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52344-52540]:Block[52344-52540]"
    }, {
      "left" : "if (order == null)",
      "right" : "if (order == null)",
      "info" : "IfStatement[52355-52461]:IfStatement[52355-52461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52374-52461]:Block[52374-52461]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "info" : "ThrowStatement[52389-52450]:ThrowStatement[52389-52450]"
    }, {
      "left" : "this.columnRenderingOrder = order;",
      "right" : "this.columnRenderingOrder = order;",
      "info" : "ExpressionStatement[52471-52505]:ExpressionStatement[52471-52505]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[52515-52533]:ExpressionStatement[52515-52533]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52816-52822]:Modifier[52816-52822]"
    }, {
      "left" : "SortOrder",
      "right" : "SortOrder",
      "info" : "SimpleType[52823-52832]:SimpleType[52823-52832]"
    }, {
      "left" : "getRowRenderingOrder",
      "right" : "getRowRenderingOrder",
      "info" : "SimpleName[52833-52853]:SimpleName[52833-52853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52856-52904]:Block[52856-52904]"
    }, {
      "left" : "return this.rowRenderingOrder;",
      "right" : "return this.rowRenderingOrder;",
      "info" : "ReturnStatement[52867-52897]:ReturnStatement[52867-52897]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53367-53373]:Modifier[53367-53373]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[53374-53378]:PrimitiveType[53374-53378]"
    }, {
      "left" : "setRowRenderingOrder",
      "right" : "setRowRenderingOrder",
      "info" : "SimpleName[53379-53399]:SimpleName[53379-53399]"
    }, {
      "left" : "SortOrder order",
      "right" : "SortOrder order",
      "info" : "SingleVariableDeclaration[53400-53415]:SingleVariableDeclaration[53400-53415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53417-53610]:Block[53417-53610]"
    }, {
      "left" : "if (order == null)",
      "right" : "if (order == null)",
      "info" : "IfStatement[53428-53534]:IfStatement[53428-53534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53447-53534]:Block[53447-53534]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "info" : "ThrowStatement[53462-53523]:ThrowStatement[53462-53523]"
    }, {
      "left" : "this.rowRenderingOrder = order;",
      "right" : "this.rowRenderingOrder = order;",
      "info" : "ExpressionStatement[53544-53575]:ExpressionStatement[53544-53575]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[53585-53603]:ExpressionStatement[53585-53603]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53849-53855]:Modifier[53849-53855]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[53856-53863]:PrimitiveType[53856-53863]"
    }, {
      "left" : "isDomainGridlinesVisible",
      "right" : "isDomainGridlinesVisible",
      "info" : "SimpleName[53864-53888]:SimpleName[53864-53888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53891-53944]:Block[53891-53944]"
    }, {
      "left" : "return this.domainGridlinesVisible;",
      "right" : "return this.domainGridlinesVisible;",
      "info" : "ReturnStatement[53902-53937]:ReturnStatement[53902-53937]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54304-54310]:Modifier[54304-54310]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[54311-54315]:PrimitiveType[54311-54315]"
    }, {
      "left" : "setDomainGridlinesVisible",
      "right" : "setDomainGridlinesVisible",
      "info" : "SimpleName[54316-54341]:SimpleName[54316-54341]"
    }, {
      "left" : "boolean visible",
      "right" : "boolean visible",
      "info" : "SingleVariableDeclaration[54342-54357]:SingleVariableDeclaration[54342-54357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54359-54517]:Block[54359-54517]"
    }, {
      "left" : "if (this.domainGridlinesVisible != visible)",
      "right" : "if (this.domainGridlinesVisible != visible)",
      "info" : "IfStatement[54370-54510]:IfStatement[54370-54510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54414-54510]:Block[54414-54510]"
    }, {
      "left" : "this.domainGridlinesVisible = visible;",
      "right" : "this.domainGridlinesVisible = visible;",
      "info" : "ExpressionStatement[54429-54467]:ExpressionStatement[54429-54467]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[54481-54499]:ExpressionStatement[54481-54499]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54742-54748]:Modifier[54742-54748]"
    }, {
      "left" : "CategoryAnchor",
      "right" : "CategoryAnchor",
      "info" : "SimpleType[54749-54763]:SimpleType[54749-54763]"
    }, {
      "left" : "getDomainGridlinePosition",
      "right" : "getDomainGridlinePosition",
      "info" : "SimpleName[54764-54789]:SimpleName[54764-54789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54792-54845]:Block[54792-54845]"
    }, {
      "left" : "return this.domainGridlinePosition;",
      "right" : "return this.domainGridlinePosition;",
      "info" : "ReturnStatement[54803-54838]:ReturnStatement[54803-54838]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55134-55140]:Modifier[55134-55140]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55141-55145]:PrimitiveType[55141-55145]"
    }, {
      "left" : "setDomainGridlinePosition",
      "right" : "setDomainGridlinePosition",
      "info" : "SimpleName[55146-55171]:SimpleName[55146-55171]"
    }, {
      "left" : "CategoryAnchor position",
      "right" : "CategoryAnchor position",
      "info" : "SingleVariableDeclaration[55172-55195]:SingleVariableDeclaration[55172-55195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55197-55407]:Block[55197-55407]"
    }, {
      "left" : "if (position == null)",
      "right" : "if (position == null)",
      "info" : "IfStatement[55208-55323]:IfStatement[55208-55323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55230-55323]:Block[55230-55323]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'position' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'position' argument.\");",
      "info" : "ThrowStatement[55245-55309]:ThrowStatement[55245-55309]"
    }, {
      "left" : "this.domainGridlinePosition = position;",
      "right" : "this.domainGridlinePosition = position;",
      "info" : "ExpressionStatement[55333-55372]:ExpressionStatement[55333-55372]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[55382-55400]:ExpressionStatement[55382-55400]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55626-55632]:Modifier[55626-55632]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[55633-55639]:SimpleType[55633-55639]"
    }, {
      "left" : "getDomainGridlineStroke",
      "right" : "getDomainGridlineStroke",
      "info" : "SimpleName[55640-55663]:SimpleName[55640-55663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55666-55717]:Block[55666-55717]"
    }, {
      "left" : "return this.domainGridlineStroke;",
      "right" : "return this.domainGridlineStroke;",
      "info" : "ReturnStatement[55677-55710]:ReturnStatement[55677-55710]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56014-56020]:Modifier[56014-56020]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[56021-56025]:PrimitiveType[56021-56025]"
    }, {
      "left" : "setDomainGridlineStroke",
      "right" : "setDomainGridlineStroke",
      "info" : "SimpleName[56026-56049]:SimpleName[56026-56049]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[56050-56063]:SingleVariableDeclaration[56050-56063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56065-56269]:Block[56065-56269]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[56076-56189]:IfStatement[56076-56189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56096-56189]:Block[56096-56189]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' not permitted.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' not permitted.\");",
      "info" : "ThrowStatement[56111-56178]:ThrowStatement[56111-56178]"
    }, {
      "left" : "this.domainGridlineStroke = stroke;",
      "right" : "this.domainGridlineStroke = stroke;",
      "info" : "ExpressionStatement[56199-56234]:ExpressionStatement[56199-56234]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[56244-56262]:ExpressionStatement[56244-56262]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56484-56490]:Modifier[56484-56490]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[56491-56496]:SimpleType[56491-56496]"
    }, {
      "left" : "getDomainGridlinePaint",
      "right" : "getDomainGridlinePaint",
      "info" : "SimpleName[56497-56519]:SimpleName[56497-56519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56522-56572]:Block[56522-56572]"
    }, {
      "left" : "return this.domainGridlinePaint;",
      "right" : "return this.domainGridlinePaint;",
      "info" : "ReturnStatement[56533-56565]:ReturnStatement[56533-56565]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56879-56885]:Modifier[56879-56885]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[56886-56890]:PrimitiveType[56886-56890]"
    }, {
      "left" : "setDomainGridlinePaint",
      "right" : "setDomainGridlinePaint",
      "info" : "SimpleName[56891-56913]:SimpleName[56891-56913]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[56914-56925]:SingleVariableDeclaration[56914-56925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56927-57125]:Block[56927-57125]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[56938-57047]:IfStatement[56938-57047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56957-57047]:Block[56957-57047]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[56972-57033]:ThrowStatement[56972-57033]"
    }, {
      "left" : "this.domainGridlinePaint = paint;",
      "right" : "this.domainGridlinePaint = paint;",
      "info" : "ExpressionStatement[57057-57090]:ExpressionStatement[57057-57090]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[57100-57118]:ExpressionStatement[57100-57118]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57323-57329]:Modifier[57323-57329]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[57330-57337]:PrimitiveType[57330-57337]"
    }, {
      "left" : "isRangeGridlinesVisible",
      "right" : "isRangeGridlinesVisible",
      "info" : "SimpleName[57338-57361]:SimpleName[57338-57361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57364-57416]:Block[57364-57416]"
    }, {
      "left" : "return this.rangeGridlinesVisible;",
      "right" : "return this.rangeGridlinesVisible;",
      "info" : "ReturnStatement[57375-57409]:ReturnStatement[57375-57409]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57755-57761]:Modifier[57755-57761]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57762-57766]:PrimitiveType[57762-57766]"
    }, {
      "left" : "setRangeGridlinesVisible",
      "right" : "setRangeGridlinesVisible",
      "info" : "SimpleName[57767-57791]:SimpleName[57767-57791]"
    }, {
      "left" : "boolean visible",
      "right" : "boolean visible",
      "info" : "SingleVariableDeclaration[57792-57807]:SingleVariableDeclaration[57792-57807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57809-57965]:Block[57809-57965]"
    }, {
      "left" : "if (this.rangeGridlinesVisible != visible)",
      "right" : "if (this.rangeGridlinesVisible != visible)",
      "info" : "IfStatement[57820-57958]:IfStatement[57820-57958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57863-57958]:Block[57863-57958]"
    }, {
      "left" : "this.rangeGridlinesVisible = visible;",
      "right" : "this.rangeGridlinesVisible = visible;",
      "info" : "ExpressionStatement[57878-57915]:ExpressionStatement[57878-57915]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[57929-57947]:ExpressionStatement[57929-57947]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58186-58192]:Modifier[58186-58192]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[58193-58199]:SimpleType[58193-58199]"
    }, {
      "left" : "getRangeGridlineStroke",
      "right" : "getRangeGridlineStroke",
      "info" : "SimpleName[58200-58222]:SimpleName[58200-58222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58225-58275]:Block[58225-58275]"
    }, {
      "left" : "return this.rangeGridlineStroke;",
      "right" : "return this.rangeGridlineStroke;",
      "info" : "ReturnStatement[58236-58268]:ReturnStatement[58236-58268]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58575-58581]:Modifier[58575-58581]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[58582-58586]:PrimitiveType[58582-58586]"
    }, {
      "left" : "setRangeGridlineStroke",
      "right" : "setRangeGridlineStroke",
      "info" : "SimpleName[58587-58609]:SimpleName[58587-58609]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[58610-58623]:SingleVariableDeclaration[58610-58623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58625-58826]:Block[58625-58826]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[58636-58747]:IfStatement[58636-58747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58656-58747]:Block[58656-58747]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[58671-58733]:ThrowStatement[58671-58733]"
    }, {
      "left" : "this.rangeGridlineStroke = stroke;",
      "right" : "this.rangeGridlineStroke = stroke;",
      "info" : "ExpressionStatement[58757-58791]:ExpressionStatement[58757-58791]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[58801-58819]:ExpressionStatement[58801-58819]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59043-59049]:Modifier[59043-59049]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[59050-59055]:SimpleType[59050-59055]"
    }, {
      "left" : "getRangeGridlinePaint",
      "right" : "getRangeGridlinePaint",
      "info" : "SimpleName[59056-59077]:SimpleName[59056-59077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59080-59129]:Block[59080-59129]"
    }, {
      "left" : "return this.rangeGridlinePaint;",
      "right" : "return this.rangeGridlinePaint;",
      "info" : "ReturnStatement[59091-59122]:ReturnStatement[59091-59122]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59425-59431]:Modifier[59425-59431]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[59432-59436]:PrimitiveType[59432-59436]"
    }, {
      "left" : "setRangeGridlinePaint",
      "right" : "setRangeGridlinePaint",
      "info" : "SimpleName[59437-59458]:SimpleName[59437-59458]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[59459-59470]:SingleVariableDeclaration[59459-59470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59472-59669]:Block[59472-59669]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[59483-59592]:IfStatement[59483-59592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59502-59592]:Block[59502-59592]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[59517-59578]:ThrowStatement[59517-59578]"
    }, {
      "left" : "this.rangeGridlinePaint = paint;",
      "right" : "this.rangeGridlinePaint = paint;",
      "info" : "ExpressionStatement[59602-59634]:ExpressionStatement[59602-59634]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[59644-59662]:ExpressionStatement[59644-59662]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59884-59890]:Modifier[59884-59890]"
    }, {
      "left" : "LegendItemCollection",
      "right" : "LegendItemCollection",
      "info" : "SimpleType[59891-59911]:SimpleType[59891-59911]"
    }, {
      "left" : "getFixedLegendItems",
      "right" : "getFixedLegendItems",
      "info" : "SimpleName[59912-59931]:SimpleName[59912-59931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59934-59984]:Block[59934-59984]"
    }, {
      "left" : "return this.fixedLegendItems;",
      "right" : "return this.fixedLegendItems;",
      "info" : "ReturnStatement[59945-59974]:ReturnStatement[59945-59974]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60299-60305]:Modifier[60299-60305]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[60306-60310]:PrimitiveType[60306-60310]"
    }, {
      "left" : "setFixedLegendItems",
      "right" : "setFixedLegendItems",
      "info" : "SimpleName[60311-60330]:SimpleName[60311-60330]"
    }, {
      "left" : "LegendItemCollection items",
      "right" : "LegendItemCollection items",
      "info" : "SingleVariableDeclaration[60331-60357]:SingleVariableDeclaration[60331-60357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60359-60435]:Block[60359-60435]"
    }, {
      "left" : "this.fixedLegendItems = items;",
      "right" : "this.fixedLegendItems = items;",
      "info" : "ExpressionStatement[60370-60400]:ExpressionStatement[60370-60400]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[60410-60428]:ExpressionStatement[60410-60428]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60718-60724]:Modifier[60718-60724]"
    }, {
      "left" : "LegendItemCollection",
      "right" : "LegendItemCollection",
      "info" : "SimpleType[60725-60745]:SimpleType[60725-60745]"
    }, {
      "left" : "getLegendItems",
      "right" : "getLegendItems",
      "info" : "SimpleName[60746-60760]:SimpleName[60746-60760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60763-61839]:Block[60763-61839]"
    }, {
      "left" : "LegendItemCollection result = this.fixedLegendItems;",
      "right" : "LegendItemCollection result = this.fixedLegendItems;",
      "info" : "VariableDeclarationStatement[60774-60826]:VariableDeclarationStatement[60774-60826]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[60836-61808]:IfStatement[60836-61808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60856-61808]:Block[60856-61808]"
    }, {
      "left" : "result = new LegendItemCollection();",
      "right" : "result = new LegendItemCollection();",
      "info" : "ExpressionStatement[60871-60907]:ExpressionStatement[60871-60907]"
    }, {
      "left" : "int count = this.datasets.size();",
      "right" : "int count = this.datasets.size();",
      "info" : "VariableDeclarationStatement[60978-61011]:VariableDeclarationStatement[60978-61011]"
    }, {
      "left" : "for (int datasetIndex = 0; datasetIndex < count; datasetIndex++)",
      "right" : "for (int datasetIndex = 0; datasetIndex < count; datasetIndex++)",
      "info" : "ForStatement[61025-61797]:ForStatement[61025-61797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61090-61797]:Block[61090-61797]"
    }, {
      "left" : "CategoryDataset dataset = getDataset(datasetIndex);",
      "right" : "CategoryDataset dataset = getDataset(datasetIndex);",
      "info" : "VariableDeclarationStatement[61109-61160]:VariableDeclarationStatement[61109-61160]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[61178-61782]:IfStatement[61178-61782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61199-61782]:Block[61199-61782]"
    }, {
      "left" : "CategoryItemRenderer renderer = getRenderer(datasetIndex);",
      "right" : "CategoryItemRenderer renderer = getRenderer(datasetIndex);",
      "info" : "VariableDeclarationStatement[61222-61280]:VariableDeclarationStatement[61222-61280]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[61302-61763]:IfStatement[61302-61763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61324-61763]:Block[61324-61763]"
    }, {
      "left" : "int seriesCount = dataset.getRowCount();",
      "right" : "int seriesCount = dataset.getRowCount();",
      "info" : "VariableDeclarationStatement[61351-61391]:VariableDeclarationStatement[61351-61391]"
    }, {
      "left" : "for (int i = 0; i < seriesCount; i++)",
      "right" : "for (int i = 0; i < seriesCount; i++)",
      "info" : "ForStatement[61417-61740]:ForStatement[61417-61740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61455-61740]:Block[61455-61740]"
    }, {
      "left" : "LegendItem item = renderer.getLegendItem(\r\n                                    datasetIndex, i);",
      "right" : "LegendItem item = renderer.getLegendItem(\r\n                                    datasetIndex, i);",
      "info" : "VariableDeclarationStatement[61486-61582]:VariableDeclarationStatement[61486-61582]"
    }, {
      "left" : "if (item != null)",
      "right" : "if (item != null)",
      "info" : "IfStatement[61612-61713]:IfStatement[61612-61713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61630-61713]:Block[61630-61713]"
    }, {
      "left" : "result.add(item);",
      "right" : "result.add(item);",
      "info" : "ExpressionStatement[61665-61682]:ExpressionStatement[61665-61682]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[61818-61832]:ReturnStatement[61818-61832]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62137-62143]:Modifier[62137-62143]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[62144-62148]:PrimitiveType[62144-62148]"
    }, {
      "left" : "handleClick",
      "right" : "handleClick",
      "info" : "SimpleName[62149-62160]:SimpleName[62149-62160]"
    }, {
      "left" : "int x",
      "right" : "int x",
      "info" : "SingleVariableDeclaration[62161-62166]:SingleVariableDeclaration[62161-62166]"
    }, {
      "left" : "int y",
      "right" : "int y",
      "info" : "SingleVariableDeclaration[62168-62173]:SingleVariableDeclaration[62168-62173]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[62175-62197]:SingleVariableDeclaration[62175-62197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62199-62955]:Block[62199-62955]"
    }, {
      "left" : "Rectangle2D dataArea = info.getDataArea();",
      "right" : "Rectangle2D dataArea = info.getDataArea();",
      "info" : "VariableDeclarationStatement[62212-62254]:VariableDeclarationStatement[62212-62254]"
    }, {
      "left" : "if (dataArea.contains(x, y))",
      "right" : "if (dataArea.contains(x, y))",
      "info" : "IfStatement[62264-62946]:IfStatement[62264-62946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62293-62946]:Block[62293-62946]"
    }, {
      "left" : "double java2D = 0.0;",
      "right" : "double java2D = 0.0;",
      "info" : "VariableDeclarationStatement[62367-62387]:VariableDeclarationStatement[62367-62387]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[62401-62612]:IfStatement[62401-62612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62453-62498]:Block[62453-62498]"
    }, {
      "left" : "java2D = x;",
      "right" : "java2D = x;",
      "info" : "ExpressionStatement[62472-62483]:ExpressionStatement[62472-62483]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[62517-62612]:IfStatement[62517-62612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62567-62612]:Block[62567-62612]"
    }, {
      "left" : "java2D = y;",
      "right" : "java2D = y;",
      "info" : "ExpressionStatement[62586-62597]:ExpressionStatement[62586-62597]"
    }, {
      "left" : "RectangleEdge edge = Plot.resolveRangeAxisLocation(\r\n                    getRangeAxisLocation(), this.orientation);",
      "right" : "RectangleEdge edge = Plot.resolveRangeAxisLocation(\r\n                    getRangeAxisLocation(), this.orientation);",
      "info" : "VariableDeclarationStatement[62626-62741]:VariableDeclarationStatement[62626-62741]"
    }, {
      "left" : "double value = getRangeAxis().java2DToValue(\r\n                    java2D, info.getDataArea(), edge);",
      "right" : "double value = getRangeAxis().java2DToValue(\r\n                    java2D, info.getDataArea(), edge);",
      "info" : "VariableDeclarationStatement[62755-62855]:VariableDeclarationStatement[62755-62855]"
    }, {
      "left" : "setAnchorValue(value);",
      "right" : "setAnchorValue(value);",
      "info" : "ExpressionStatement[62869-62891]:ExpressionStatement[62869-62891]"
    }, {
      "left" : "setRangeCrosshairValue(value);",
      "right" : "setRangeCrosshairValue(value);",
      "info" : "ExpressionStatement[62905-62935]:ExpressionStatement[62905-62935]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63322-63328]:Modifier[63322-63328]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[63329-63333]:PrimitiveType[63329-63333]"
    }, {
      "left" : "zoom",
      "right" : "zoom",
      "info" : "SimpleName[63334-63338]:SimpleName[63334-63338]"
    }, {
      "left" : "double percent",
      "right" : "double percent",
      "info" : "SingleVariableDeclaration[63339-63353]:SingleVariableDeclaration[63339-63353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63355-63736]:Block[63355-63736]"
    }, {
      "left" : "if (percent > 0.0)",
      "right" : "if (percent > 0.0)",
      "info" : "IfStatement[63368-63727]:IfStatement[63368-63727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63387-63652]:Block[63387-63652]"
    }, {
      "left" : "double range = getRangeAxis().getRange().getLength();",
      "right" : "double range = getRangeAxis().getRange().getLength();",
      "info" : "VariableDeclarationStatement[63402-63455]:VariableDeclarationStatement[63402-63455]"
    }, {
      "left" : "double scaledRange = range * percent;",
      "right" : "double scaledRange = range * percent;",
      "info" : "VariableDeclarationStatement[63469-63506]:VariableDeclarationStatement[63469-63506]"
    }, {
      "left" : "getRangeAxis().setRange(this.anchorValue - scaledRange / 2.0,\r\n                    this.anchorValue + scaledRange / 2.0);",
      "right" : "getRangeAxis().setRange(this.anchorValue - scaledRange / 2.0,\r\n                    this.anchorValue + scaledRange / 2.0);",
      "info" : "ExpressionStatement[63520-63641]:ExpressionStatement[63520-63641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63667-63727]:Block[63667-63727]"
    }, {
      "left" : "getRangeAxis().setAutoRange(true);",
      "right" : "getRangeAxis().setAutoRange(true);",
      "info" : "ExpressionStatement[63682-63716]:ExpressionStatement[63682-63716]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63979-63985]:Modifier[63979-63985]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[63986-63990]:PrimitiveType[63986-63990]"
    }, {
      "left" : "datasetChanged",
      "right" : "datasetChanged",
      "info" : "SimpleName[63991-64005]:SimpleName[63991-64005]"
    }, {
      "left" : "DatasetChangeEvent event",
      "right" : "DatasetChangeEvent event",
      "info" : "SingleVariableDeclaration[64006-64030]:SingleVariableDeclaration[64006-64030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64032-64584]:Block[64032-64584]"
    }, {
      "left" : "int count = this.rangeAxes.size();",
      "right" : "int count = this.rangeAxes.size();",
      "info" : "VariableDeclarationStatement[64045-64079]:VariableDeclarationStatement[64045-64079]"
    }, {
      "left" : "for (int axisIndex = 0; axisIndex < count; axisIndex++)",
      "right" : "for (int axisIndex = 0; axisIndex < count; axisIndex++)",
      "info" : "ForStatement[64089-64298]:ForStatement[64089-64298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64145-64298]:Block[64145-64298]"
    }, {
      "left" : "ValueAxis yAxis = getRangeAxis(axisIndex);",
      "right" : "ValueAxis yAxis = getRangeAxis(axisIndex);",
      "info" : "VariableDeclarationStatement[64160-64202]:VariableDeclarationStatement[64160-64202]"
    }, {
      "left" : "if (yAxis != null)",
      "right" : "if (yAxis != null)",
      "info" : "IfStatement[64216-64287]:IfStatement[64216-64287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64235-64287]:Block[64235-64287]"
    }, {
      "left" : "yAxis.configure();",
      "right" : "yAxis.configure();",
      "info" : "ExpressionStatement[64254-64272]:ExpressionStatement[64254-64272]"
    }, {
      "left" : "if (getParent() != null)",
      "right" : "if (getParent() != null)",
      "info" : "IfStatement[64308-64575]:IfStatement[64308-64575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64333-64393]:Block[64333-64393]"
    }, {
      "left" : "getParent().datasetChanged(event);",
      "right" : "getParent().datasetChanged(event);",
      "info" : "ExpressionStatement[64348-64382]:ExpressionStatement[64348-64382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64408-64575]:Block[64408-64575]"
    }, {
      "left" : "PlotChangeEvent e = new PlotChangeEvent(this);",
      "right" : "PlotChangeEvent e = new PlotChangeEvent(this);",
      "info" : "VariableDeclarationStatement[64423-64469]:VariableDeclarationStatement[64423-64469]"
    }, {
      "left" : "e.setType(ChartChangeEventType.DATASET_UPDATED);",
      "right" : "e.setType(ChartChangeEventType.DATASET_UPDATED);",
      "info" : "ExpressionStatement[64483-64531]:ExpressionStatement[64483-64531]"
    }, {
      "left" : "notifyListeners(e);",
      "right" : "notifyListeners(e);",
      "info" : "ExpressionStatement[64545-64564]:ExpressionStatement[64545-64564]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64709-64715]:Modifier[64709-64715]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[64716-64720]:PrimitiveType[64716-64720]"
    }, {
      "left" : "rendererChanged",
      "right" : "rendererChanged",
      "info" : "SimpleName[64721-64736]:SimpleName[64721-64736]"
    }, {
      "left" : "RendererChangeEvent event",
      "right" : "RendererChangeEvent event",
      "info" : "SingleVariableDeclaration[64737-64762]:SingleVariableDeclaration[64737-64762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64764-65520]:Block[64764-65520]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[64775-64801]:VariableDeclarationStatement[64775-64801]"
    }, {
      "left" : "if (parent != null)",
      "right" : "if (parent != null)",
      "info" : "IfStatement[64811-65513]:IfStatement[64811-65513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64831-65358]:Block[64831-65358]"
    }, {
      "left" : "if (parent instanceof RendererChangeListener)",
      "right" : "if (parent instanceof RendererChangeListener)",
      "info" : "IfStatement[64846-65347]:IfStatement[64846-65347]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64892-65032]:Block[64892-65032]"
    }, {
      "left" : "RendererChangeListener rcl = (RendererChangeListener) parent;",
      "right" : "RendererChangeListener rcl = (RendererChangeListener) parent;",
      "info" : "VariableDeclarationStatement[64911-64972]:VariableDeclarationStatement[64911-64972]"
    }, {
      "left" : "rcl.rendererChanged(event);",
      "right" : "rcl.rendererChanged(event);",
      "info" : "ExpressionStatement[64990-65017]:ExpressionStatement[64990-65017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65051-65347]:Block[65051-65347]"
    }, {
      "left" : "throw new RuntimeException(\r\n                    \"The renderer has changed and I don't know what to do!\");",
      "right" : "throw new RuntimeException(\r\n                    \"The renderer has changed and I don't know what to do!\");",
      "info" : "ThrowStatement[65226-65332]:ThrowStatement[65226-65332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65373-65513]:Block[65373-65513]"
    }, {
      "left" : "configureRangeAxes();",
      "right" : "configureRangeAxes();",
      "info" : "ExpressionStatement[65388-65409]:ExpressionStatement[65388-65409]"
    }, {
      "left" : "PlotChangeEvent e = new PlotChangeEvent(this);",
      "right" : "PlotChangeEvent e = new PlotChangeEvent(this);",
      "info" : "VariableDeclarationStatement[65423-65469]:VariableDeclarationStatement[65423-65469]"
    }, {
      "left" : "notifyListeners(e);",
      "right" : "notifyListeners(e);",
      "info" : "ExpressionStatement[65483-65502]:ExpressionStatement[65483-65502]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65984-65990]:Modifier[65984-65990]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[65991-65995]:PrimitiveType[65991-65995]"
    }, {
      "left" : "addDomainMarker",
      "right" : "addDomainMarker",
      "info" : "SimpleName[65996-66011]:SimpleName[65996-66011]"
    }, {
      "left" : "CategoryMarker marker",
      "right" : "CategoryMarker marker",
      "info" : "SingleVariableDeclaration[66012-66033]:SingleVariableDeclaration[66012-66033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66035-66096]:Block[66035-66096]"
    }, {
      "left" : "addDomainMarker(marker, Layer.FOREGROUND);",
      "right" : "addDomainMarker(marker, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[66046-66088]:ExpressionStatement[66046-66088]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66684-66690]:Modifier[66684-66690]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[66691-66695]:PrimitiveType[66691-66695]"
    }, {
      "left" : "addDomainMarker",
      "right" : "addDomainMarker",
      "info" : "SimpleName[66696-66711]:SimpleName[66696-66711]"
    }, {
      "left" : "CategoryMarker marker",
      "right" : "CategoryMarker marker",
      "info" : "SingleVariableDeclaration[66712-66733]:SingleVariableDeclaration[66712-66733]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[66735-66746]:SingleVariableDeclaration[66735-66746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66748-66800]:Block[66748-66800]"
    }, {
      "left" : "addDomainMarker(0, marker, layer);",
      "right" : "addDomainMarker(0, marker, layer);",
      "info" : "ExpressionStatement[66759-66793]:ExpressionStatement[66759-66793]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67370-67376]:Modifier[67370-67376]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[67377-67381]:PrimitiveType[67377-67381]"
    }, {
      "left" : "addDomainMarker",
      "right" : "addDomainMarker",
      "info" : "SimpleName[67382-67397]:SimpleName[67382-67397]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[67398-67407]:SingleVariableDeclaration[67398-67407]"
    }, {
      "left" : "CategoryMarker marker",
      "right" : "CategoryMarker marker",
      "info" : "SingleVariableDeclaration[67409-67430]:SingleVariableDeclaration[67409-67430]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[67432-67443]:SingleVariableDeclaration[67432-67443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67445-67507]:Block[67445-67507]"
    }, {
      "left" : "addDomainMarker(index, marker, layer, true);",
      "right" : "addDomainMarker(index, marker, layer, true);",
      "info" : "ExpressionStatement[67456-67500]:ExpressionStatement[67456-67500]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68178-68184]:Modifier[68178-68184]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[68185-68189]:PrimitiveType[68185-68189]"
    }, {
      "left" : "addDomainMarker",
      "right" : "addDomainMarker",
      "info" : "SimpleName[68190-68205]:SimpleName[68190-68205]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[68206-68215]:SingleVariableDeclaration[68206-68215]"
    }, {
      "left" : "CategoryMarker marker",
      "right" : "CategoryMarker marker",
      "info" : "SingleVariableDeclaration[68217-68238]:SingleVariableDeclaration[68217-68238]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[68240-68251]:SingleVariableDeclaration[68240-68251]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[68260-68274]:SingleVariableDeclaration[68260-68274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68276-69449]:Block[68276-69449]"
    }, {
      "left" : "if (marker == null)",
      "right" : "if (marker == null)",
      "info" : "IfStatement[68287-68400]:IfStatement[68287-68400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68307-68400]:Block[68307-68400]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'marker' not permitted.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'marker' not permitted.\");",
      "info" : "ThrowStatement[68322-68389]:ThrowStatement[68322-68389]"
    }, {
      "left" : "if (layer == null)",
      "right" : "if (layer == null)",
      "info" : "IfStatement[68410-68521]:IfStatement[68410-68521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68429-68521]:Block[68429-68521]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'layer' not permitted.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'layer' not permitted.\");",
      "info" : "ThrowStatement[68444-68510]:ThrowStatement[68444-68510]"
    }, {
      "left" : "Collection markers;",
      "right" : "Collection markers;",
      "info" : "VariableDeclarationStatement[68531-68550]:VariableDeclarationStatement[68531-68550]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[68560-69335]:IfStatement[68560-69335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68591-68934]:Block[68591-68934]"
    }, {
      "left" : "markers = (Collection) this.foregroundDomainMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.foregroundDomainMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[68606-68704]:ExpressionStatement[68606-68704]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[68718-68889]:IfStatement[68718-68889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68739-68889]:Block[68739-68889]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[68758-68794]:ExpressionStatement[68758-68794]"
    }, {
      "left" : "this.foregroundDomainMarkers.put(new Integer(index), markers);",
      "right" : "this.foregroundDomainMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[68812-68874]:ExpressionStatement[68812-68874]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[68903-68923]:ExpressionStatement[68903-68923]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[68949-69335]:IfStatement[68949-69335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68980-69335]:Block[68980-69335]"
    }, {
      "left" : "markers = (Collection) this.backgroundDomainMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.backgroundDomainMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[68995-69093]:ExpressionStatement[68995-69093]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[69107-69278]:IfStatement[69107-69278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69128-69278]:Block[69128-69278]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[69147-69183]:ExpressionStatement[69147-69183]"
    }, {
      "left" : "this.backgroundDomainMarkers.put(new Integer(index), markers);",
      "right" : "this.backgroundDomainMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[69201-69263]:ExpressionStatement[69201-69263]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[69292-69312]:ExpressionStatement[69292-69312]"
    }, {
      "left" : "marker.addChangeListener(this);",
      "right" : "marker.addChangeListener(this);",
      "info" : "ExpressionStatement[69345-69376]:ExpressionStatement[69345-69376]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[69386-69442]:IfStatement[69386-69442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69398-69442]:Block[69398-69442]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[69413-69431]:ExpressionStatement[69413-69431]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69643-69649]:Modifier[69643-69649]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[69650-69654]:PrimitiveType[69650-69654]"
    }, {
      "left" : "clearDomainMarkers",
      "right" : "clearDomainMarkers",
      "info" : "SimpleName[69655-69673]:SimpleName[69655-69673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69676-70504]:Block[69676-70504]"
    }, {
      "left" : "if (this.backgroundDomainMarkers != null)",
      "right" : "if (this.backgroundDomainMarkers != null)",
      "info" : "IfStatement[69687-70073]:IfStatement[69687-70073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69729-70073]:Block[69729-70073]"
    }, {
      "left" : "Set keys = this.backgroundDomainMarkers.keySet();",
      "right" : "Set keys = this.backgroundDomainMarkers.keySet();",
      "info" : "VariableDeclarationStatement[69744-69793]:VariableDeclarationStatement[69744-69793]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[69807-69843]:VariableDeclarationStatement[69807-69843]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[69857-70011]:WhileStatement[69857-70011]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69884-70011]:Block[69884-70011]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[69903-69943]:VariableDeclarationStatement[69903-69943]"
    }, {
      "left" : "clearDomainMarkers(key.intValue());",
      "right" : "clearDomainMarkers(key.intValue());",
      "info" : "ExpressionStatement[69961-69996]:ExpressionStatement[69961-69996]"
    }, {
      "left" : "this.backgroundDomainMarkers.clear();",
      "right" : "this.backgroundDomainMarkers.clear();",
      "info" : "ExpressionStatement[70025-70062]:ExpressionStatement[70025-70062]"
    }, {
      "left" : "if (this.foregroundDomainMarkers != null)",
      "right" : "if (this.foregroundDomainMarkers != null)",
      "info" : "IfStatement[70083-70469]:IfStatement[70083-70469]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70125-70469]:Block[70125-70469]"
    }, {
      "left" : "Set keys = this.foregroundDomainMarkers.keySet();",
      "right" : "Set keys = this.foregroundDomainMarkers.keySet();",
      "info" : "VariableDeclarationStatement[70140-70189]:VariableDeclarationStatement[70140-70189]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[70203-70239]:VariableDeclarationStatement[70203-70239]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[70253-70407]:WhileStatement[70253-70407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70280-70407]:Block[70280-70407]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[70299-70339]:VariableDeclarationStatement[70299-70339]"
    }, {
      "left" : "clearDomainMarkers(key.intValue());",
      "right" : "clearDomainMarkers(key.intValue());",
      "info" : "ExpressionStatement[70357-70392]:ExpressionStatement[70357-70392]"
    }, {
      "left" : "this.foregroundDomainMarkers.clear();",
      "right" : "this.foregroundDomainMarkers.clear();",
      "info" : "ExpressionStatement[70421-70458]:ExpressionStatement[70421-70458]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[70479-70497]:ExpressionStatement[70479-70497]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70731-70737]:Modifier[70731-70737]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[70738-70748]:SimpleType[70738-70748]"
    }, {
      "left" : "getDomainMarkers",
      "right" : "getDomainMarkers",
      "info" : "SimpleName[70749-70765]:SimpleName[70749-70765]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[70766-70777]:SingleVariableDeclaration[70766-70777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70779-70831]:Block[70779-70831]"
    }, {
      "left" : "return getDomainMarkers(0, layer);",
      "right" : "return getDomainMarkers(0, layer);",
      "info" : "ReturnStatement[70790-70824]:ReturnStatement[70790-70824]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[71113-71119]:Modifier[71113-71119]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[71120-71130]:SimpleType[71120-71130]"
    }, {
      "left" : "getDomainMarkers",
      "right" : "getDomainMarkers",
      "info" : "SimpleName[71131-71147]:SimpleName[71131-71147]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[71148-71157]:SingleVariableDeclaration[71148-71157]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[71159-71170]:SingleVariableDeclaration[71159-71170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71172-71653]:Block[71172-71653]"
    }, {
      "left" : "Collection result = null;",
      "right" : "Collection result = null;",
      "info" : "VariableDeclarationStatement[71183-71208]:VariableDeclarationStatement[71183-71208]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[71218-71251]:VariableDeclarationStatement[71218-71251]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[71261-71514]:IfStatement[71261-71514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71292-71378]:Block[71292-71378]"
    }, {
      "left" : "result = (Collection) this.foregroundDomainMarkers.get(key);",
      "right" : "result = (Collection) this.foregroundDomainMarkers.get(key);",
      "info" : "ExpressionStatement[71307-71367]:ExpressionStatement[71307-71367]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[71397-71514]:IfStatement[71397-71514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71428-71514]:Block[71428-71514]"
    }, {
      "left" : "result = (Collection) this.backgroundDomainMarkers.get(key);",
      "right" : "result = (Collection) this.backgroundDomainMarkers.get(key);",
      "info" : "ExpressionStatement[71443-71503]:ExpressionStatement[71443-71503]"
    }, {
      "left" : "if (result != null)",
      "right" : "if (result != null)",
      "info" : "IfStatement[71524-71622]:IfStatement[71524-71622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71544-71622]:Block[71544-71622]"
    }, {
      "left" : "result = Collections.unmodifiableCollection(result);",
      "right" : "result = Collections.unmodifiableCollection(result);",
      "info" : "ExpressionStatement[71559-71611]:ExpressionStatement[71559-71611]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[71632-71646]:ReturnStatement[71632-71646]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[71846-71852]:Modifier[71846-71852]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[71853-71857]:PrimitiveType[71853-71857]"
    }, {
      "left" : "clearDomainMarkers",
      "right" : "clearDomainMarkers",
      "info" : "SimpleName[71858-71876]:SimpleName[71858-71876]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[71877-71886]:SingleVariableDeclaration[71877-71886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71888-72935]:Block[71888-72935]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[71899-71932]:VariableDeclarationStatement[71899-71932]"
    }, {
      "left" : "if (this.backgroundDomainMarkers != null)",
      "right" : "if (this.backgroundDomainMarkers != null)",
      "info" : "IfStatement[71942-72416]:IfStatement[71942-72416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71984-72416]:Block[71984-72416]"
    }, {
      "left" : "Collection markers \r\n                = (Collection) this.backgroundDomainMarkers.get(key);",
      "right" : "Collection markers \r\n                = (Collection) this.backgroundDomainMarkers.get(key);",
      "info" : "VariableDeclarationStatement[71999-72089]:VariableDeclarationStatement[71999-72089]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[72103-72405]:IfStatement[72103-72405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72124-72405]:Block[72124-72405]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[72143-72182]:VariableDeclarationStatement[72143-72182]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[72200-72356]:WhileStatement[72200-72356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72227-72356]:Block[72227-72356]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[72250-72286]:VariableDeclarationStatement[72250-72286]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[72308-72337]:ExpressionStatement[72308-72337]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[72374-72390]:ExpressionStatement[72374-72390]"
    }, {
      "left" : "if (this.foregroundDomainMarkers != null)",
      "right" : "if (this.foregroundDomainMarkers != null)",
      "info" : "IfStatement[72426-72900]:IfStatement[72426-72900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72468-72900]:Block[72468-72900]"
    }, {
      "left" : "Collection markers \r\n                = (Collection) this.foregroundDomainMarkers.get(key);",
      "right" : "Collection markers \r\n                = (Collection) this.foregroundDomainMarkers.get(key);",
      "info" : "VariableDeclarationStatement[72483-72573]:VariableDeclarationStatement[72483-72573]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[72587-72889]:IfStatement[72587-72889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72608-72889]:Block[72608-72889]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[72627-72666]:VariableDeclarationStatement[72627-72666]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[72684-72840]:WhileStatement[72684-72840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72711-72840]:Block[72711-72840]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[72734-72770]:VariableDeclarationStatement[72734-72770]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[72792-72821]:ExpressionStatement[72792-72821]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[72858-72874]:ExpressionStatement[72858-72874]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[72910-72928]:ExpressionStatement[72910-72928]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73266-73272]:Modifier[73266-73272]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[73273-73280]:PrimitiveType[73273-73280]"
    }, {
      "left" : "removeDomainMarker",
      "right" : "removeDomainMarker",
      "info" : "SimpleName[73281-73299]:SimpleName[73281-73299]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[73300-73313]:SingleVariableDeclaration[73300-73313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73315-73385]:Block[73315-73385]"
    }, {
      "left" : "return removeDomainMarker(marker, Layer.FOREGROUND);",
      "right" : "return removeDomainMarker(marker, Layer.FOREGROUND);",
      "info" : "ReturnStatement[73326-73378]:ReturnStatement[73326-73378]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73826-73832]:Modifier[73826-73832]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[73833-73840]:PrimitiveType[73833-73840]"
    }, {
      "left" : "removeDomainMarker",
      "right" : "removeDomainMarker",
      "info" : "SimpleName[73841-73859]:SimpleName[73841-73859]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[73860-73873]:SingleVariableDeclaration[73860-73873]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[73875-73886]:SingleVariableDeclaration[73875-73886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73888-73950]:Block[73888-73950]"
    }, {
      "left" : "return removeDomainMarker(0, marker, layer);",
      "right" : "return removeDomainMarker(0, marker, layer);",
      "info" : "ReturnStatement[73899-73943]:ReturnStatement[73899-73943]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74395-74401]:Modifier[74395-74401]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[74402-74409]:PrimitiveType[74402-74409]"
    }, {
      "left" : "removeDomainMarker",
      "right" : "removeDomainMarker",
      "info" : "SimpleName[74410-74428]:SimpleName[74410-74428]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[74429-74438]:SingleVariableDeclaration[74429-74438]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[74440-74453]:SingleVariableDeclaration[74440-74453]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[74455-74466]:SingleVariableDeclaration[74455-74466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74468-74537]:Block[74468-74537]"
    }, {
      "left" : "return removeDomainMarker(index, marker, layer, true);",
      "right" : "return removeDomainMarker(index, marker, layer, true);",
      "info" : "ReturnStatement[74476-74530]:ReturnStatement[74476-74530]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74999-75005]:Modifier[74999-75005]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[75006-75013]:PrimitiveType[75006-75013]"
    }, {
      "left" : "removeDomainMarker",
      "right" : "removeDomainMarker",
      "info" : "SimpleName[75014-75032]:SimpleName[75014-75032]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[75033-75042]:SingleVariableDeclaration[75033-75042]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[75044-75057]:SingleVariableDeclaration[75044-75057]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[75059-75070]:SingleVariableDeclaration[75059-75070]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[75079-75093]:SingleVariableDeclaration[75079-75093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75095-75586]:Block[75095-75656]"
    }, {
      "left" : "ArrayList markers;",
      "right" : "ArrayList markers;",
      "info" : "VariableDeclarationStatement[75106-75124]:VariableDeclarationStatement[75106-75124]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[75134-75426]:IfStatement[75134-75426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75165-75288]:Block[75165-75288]"
    }, {
      "left" : "markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(\r\n                    index));",
      "right" : "markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(\r\n                    index));",
      "info" : "ExpressionStatement[75180-75277]:ExpressionStatement[75180-75277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75303-75426]:Block[75303-75426]"
    }, {
      "left" : "markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(\r\n                    index));",
      "right" : "markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(\r\n                    index));",
      "info" : "ExpressionStatement[75318-75415]:ExpressionStatement[75318-75415]"
    }, {
      "left" : "boolean removed = markers.remove(marker);",
      "right" : "boolean removed = markers.remove(marker);",
      "info" : "VariableDeclarationStatement[75436-75477]:VariableDeclarationStatement[85571-85612]"
    }, {
      "left" : "if (removed && notify)",
      "right" : "if (removed && notify)",
      "info" : "IfStatement[75487-75554]:IfStatement[75557-75624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75510-75554]:Block[75580-75624]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[75525-75543]:ExpressionStatement[75595-75613]"
    }, {
      "left" : "return removed;",
      "right" : "return removed;",
      "info" : "ReturnStatement[75564-75579]:ReturnStatement[75634-75649]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[76047-76053]:Modifier[76117-76123]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[76054-76058]:PrimitiveType[76124-76128]"
    }, {
      "left" : "addRangeMarker",
      "right" : "addRangeMarker",
      "info" : "SimpleName[76059-76073]:SimpleName[76129-76143]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[76074-76087]:SingleVariableDeclaration[76144-76157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76089-76149]:Block[76159-76219]"
    }, {
      "left" : "addRangeMarker(marker, Layer.FOREGROUND);",
      "right" : "addRangeMarker(marker, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[76100-76141]:ExpressionStatement[76170-76211]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[76734-76740]:Modifier[76804-76810]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[76741-76745]:PrimitiveType[76811-76815]"
    }, {
      "left" : "addRangeMarker",
      "right" : "addRangeMarker",
      "info" : "SimpleName[76746-76760]:SimpleName[76816-76830]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[76761-76774]:SingleVariableDeclaration[76831-76844]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[76776-76787]:SingleVariableDeclaration[76846-76857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76789-76840]:Block[76859-76910]"
    }, {
      "left" : "addRangeMarker(0, marker, layer);",
      "right" : "addRangeMarker(0, marker, layer);",
      "info" : "ExpressionStatement[76800-76833]:ExpressionStatement[76870-76903]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[77341-77347]:Modifier[77411-77417]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[77348-77352]:PrimitiveType[77418-77422]"
    }, {
      "left" : "addRangeMarker",
      "right" : "addRangeMarker",
      "info" : "SimpleName[77353-77367]:SimpleName[77423-77437]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[77368-77377]:SingleVariableDeclaration[77438-77447]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[77379-77392]:SingleVariableDeclaration[77449-77462]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[77394-77405]:SingleVariableDeclaration[77464-77475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77407-77465]:Block[77477-77535]"
    }, {
      "left" : "addRangeMarker(index, marker, layer, true);",
      "right" : "addRangeMarker(index, marker, layer, true);",
      "info" : "ExpressionStatement[77415-77458]:ExpressionStatement[77485-77528]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78047-78053]:Modifier[78117-78123]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[78054-78058]:PrimitiveType[78124-78128]"
    }, {
      "left" : "addRangeMarker",
      "right" : "addRangeMarker",
      "info" : "SimpleName[78059-78073]:SimpleName[78129-78143]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[78074-78083]:SingleVariableDeclaration[78144-78153]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[78085-78098]:SingleVariableDeclaration[78155-78168]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[78100-78111]:SingleVariableDeclaration[78170-78181]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[78120-78134]:SingleVariableDeclaration[78190-78204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78136-79061]:Block[78206-79131]"
    }, {
      "left" : "Collection markers;",
      "right" : "Collection markers;",
      "info" : "VariableDeclarationStatement[78147-78166]:VariableDeclarationStatement[78217-78236]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[78176-78947]:IfStatement[78246-79017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78207-78548]:Block[78277-78618]"
    }, {
      "left" : "markers = (Collection) this.foregroundRangeMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.foregroundRangeMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[78222-78319]:ExpressionStatement[78292-78389]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[78333-78503]:IfStatement[78403-78573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78354-78503]:Block[78424-78573]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[78373-78409]:ExpressionStatement[78443-78479]"
    }, {
      "left" : "this.foregroundRangeMarkers.put(new Integer(index), markers);",
      "right" : "this.foregroundRangeMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[78427-78488]:ExpressionStatement[78497-78558]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[78517-78537]:ExpressionStatement[78587-78607]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[78563-78947]:IfStatement[78633-79017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78594-78947]:Block[78664-79017]"
    }, {
      "left" : "markers = (Collection) this.backgroundRangeMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.backgroundRangeMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[78609-78706]:ExpressionStatement[78679-78776]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[78720-78890]:IfStatement[78790-78960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78741-78890]:Block[78811-78960]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[78760-78796]:ExpressionStatement[78830-78866]"
    }, {
      "left" : "this.backgroundRangeMarkers.put(new Integer(index), markers);",
      "right" : "this.backgroundRangeMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[78814-78875]:ExpressionStatement[78884-78945]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[78904-78924]:ExpressionStatement[78974-78994]"
    }, {
      "left" : "marker.addChangeListener(this);",
      "right" : "marker.addChangeListener(this);",
      "info" : "ExpressionStatement[78957-78988]:ExpressionStatement[79027-79058]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[78998-79054]:IfStatement[79068-79124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79010-79054]:Block[79080-79124]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[79025-79043]:ExpressionStatement[79095-79113]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79255-79261]:Modifier[79325-79331]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[79262-79266]:PrimitiveType[79332-79336]"
    }, {
      "left" : "clearRangeMarkers",
      "right" : "clearRangeMarkers",
      "info" : "SimpleName[79267-79284]:SimpleName[79337-79354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79287-80107]:Block[79357-80177]"
    }, {
      "left" : "if (this.backgroundRangeMarkers != null)",
      "right" : "if (this.backgroundRangeMarkers != null)",
      "info" : "IfStatement[79298-79680]:IfStatement[79368-79750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79339-79680]:Block[79409-79750]"
    }, {
      "left" : "Set keys = this.backgroundRangeMarkers.keySet();",
      "right" : "Set keys = this.backgroundRangeMarkers.keySet();",
      "info" : "VariableDeclarationStatement[79354-79402]:VariableDeclarationStatement[79424-79472]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[79416-79452]:VariableDeclarationStatement[79486-79522]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[79466-79619]:WhileStatement[79536-79689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79493-79619]:Block[79563-79689]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[79512-79552]:VariableDeclarationStatement[79582-79622]"
    }, {
      "left" : "clearRangeMarkers(key.intValue());",
      "right" : "clearRangeMarkers(key.intValue());",
      "info" : "ExpressionStatement[79570-79604]:ExpressionStatement[79640-79674]"
    }, {
      "left" : "this.backgroundRangeMarkers.clear();",
      "right" : "this.backgroundRangeMarkers.clear();",
      "info" : "ExpressionStatement[79633-79669]:ExpressionStatement[79703-79739]"
    }, {
      "left" : "if (this.foregroundRangeMarkers != null)",
      "right" : "if (this.foregroundRangeMarkers != null)",
      "info" : "IfStatement[79690-80072]:IfStatement[79760-80142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79731-80072]:Block[79801-80142]"
    }, {
      "left" : "Set keys = this.foregroundRangeMarkers.keySet();",
      "right" : "Set keys = this.foregroundRangeMarkers.keySet();",
      "info" : "VariableDeclarationStatement[79746-79794]:VariableDeclarationStatement[79816-79864]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[79808-79844]:VariableDeclarationStatement[79878-79914]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[79858-80011]:WhileStatement[79928-80081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79885-80011]:Block[79955-80081]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[79904-79944]:VariableDeclarationStatement[79974-80014]"
    }, {
      "left" : "clearRangeMarkers(key.intValue());",
      "right" : "clearRangeMarkers(key.intValue());",
      "info" : "ExpressionStatement[79962-79996]:ExpressionStatement[80032-80066]"
    }, {
      "left" : "this.foregroundRangeMarkers.clear();",
      "right" : "this.foregroundRangeMarkers.clear();",
      "info" : "ExpressionStatement[80025-80061]:ExpressionStatement[80095-80131]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[80082-80100]:ExpressionStatement[80152-80170]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80383-80389]:Modifier[80453-80459]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[80390-80400]:SimpleType[80460-80470]"
    }, {
      "left" : "getRangeMarkers",
      "right" : "getRangeMarkers",
      "info" : "SimpleName[80401-80416]:SimpleName[80471-80486]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[80417-80428]:SingleVariableDeclaration[80487-80498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80430-80481]:Block[80500-80551]"
    }, {
      "left" : "return getRangeMarkers(0, layer);",
      "right" : "return getRangeMarkers(0, layer);",
      "info" : "ReturnStatement[80441-80474]:ReturnStatement[80511-80544]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80762-80768]:Modifier[80832-80838]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[80769-80779]:SimpleType[80839-80849]"
    }, {
      "left" : "getRangeMarkers",
      "right" : "getRangeMarkers",
      "info" : "SimpleName[80780-80795]:SimpleName[80850-80865]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[80796-80805]:SingleVariableDeclaration[80866-80875]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[80807-80818]:SingleVariableDeclaration[80877-80888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80820-81299]:Block[80890-81369]"
    }, {
      "left" : "Collection result = null;",
      "right" : "Collection result = null;",
      "info" : "VariableDeclarationStatement[80831-80856]:VariableDeclarationStatement[80901-80926]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[80866-80899]:VariableDeclarationStatement[80936-80969]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[80909-81160]:IfStatement[80979-81230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80940-81025]:Block[81010-81095]"
    }, {
      "left" : "result = (Collection) this.foregroundRangeMarkers.get(key);",
      "right" : "result = (Collection) this.foregroundRangeMarkers.get(key);",
      "info" : "ExpressionStatement[80955-81014]:ExpressionStatement[81025-81084]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[81044-81160]:IfStatement[81114-81230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81075-81160]:Block[81145-81230]"
    }, {
      "left" : "result = (Collection) this.backgroundRangeMarkers.get(key);",
      "right" : "result = (Collection) this.backgroundRangeMarkers.get(key);",
      "info" : "ExpressionStatement[81090-81149]:ExpressionStatement[81160-81219]"
    }, {
      "left" : "if (result != null)",
      "right" : "if (result != null)",
      "info" : "IfStatement[81170-81268]:IfStatement[81240-81338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81190-81268]:Block[81260-81338]"
    }, {
      "left" : "result = Collections.unmodifiableCollection(result);",
      "right" : "result = Collections.unmodifiableCollection(result);",
      "info" : "ExpressionStatement[81205-81257]:ExpressionStatement[81275-81327]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[81278-81292]:ReturnStatement[81348-81362]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[81492-81498]:Modifier[81562-81568]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[81499-81503]:PrimitiveType[81569-81573]"
    }, {
      "left" : "clearRangeMarkers",
      "right" : "clearRangeMarkers",
      "info" : "SimpleName[81504-81521]:SimpleName[81574-81591]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[81522-81531]:SingleVariableDeclaration[81592-81601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81533-82576]:Block[81603-82646]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[81544-81577]:VariableDeclarationStatement[81614-81647]"
    }, {
      "left" : "if (this.backgroundRangeMarkers != null)",
      "right" : "if (this.backgroundRangeMarkers != null)",
      "info" : "IfStatement[81587-82059]:IfStatement[81657-82129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81628-82059]:Block[81698-82129]"
    }, {
      "left" : "Collection markers \r\n                = (Collection) this.backgroundRangeMarkers.get(key);",
      "right" : "Collection markers \r\n                = (Collection) this.backgroundRangeMarkers.get(key);",
      "info" : "VariableDeclarationStatement[81643-81732]:VariableDeclarationStatement[81713-81802]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[81746-82048]:IfStatement[81816-82118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81767-82048]:Block[81837-82118]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[81786-81825]:VariableDeclarationStatement[81856-81895]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[81843-81999]:WhileStatement[81913-82069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81870-81999]:Block[81940-82069]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[81893-81929]:VariableDeclarationStatement[81963-81999]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[81951-81980]:ExpressionStatement[82021-82050]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[82017-82033]:ExpressionStatement[82087-82103]"
    }, {
      "left" : "if (this.foregroundRangeMarkers != null)",
      "right" : "if (this.foregroundRangeMarkers != null)",
      "info" : "IfStatement[82069-82541]:IfStatement[82139-82611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82110-82541]:Block[82180-82611]"
    }, {
      "left" : "Collection markers \r\n                = (Collection) this.foregroundRangeMarkers.get(key);",
      "right" : "Collection markers \r\n                = (Collection) this.foregroundRangeMarkers.get(key);",
      "info" : "VariableDeclarationStatement[82125-82214]:VariableDeclarationStatement[82195-82284]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[82228-82530]:IfStatement[82298-82600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82249-82530]:Block[82319-82600]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[82268-82307]:VariableDeclarationStatement[82338-82377]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[82325-82481]:WhileStatement[82395-82551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82352-82481]:Block[82422-82551]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[82375-82411]:VariableDeclarationStatement[82445-82481]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[82433-82462]:ExpressionStatement[82503-82532]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[82499-82515]:ExpressionStatement[82569-82585]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[82551-82569]:ExpressionStatement[82621-82639]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[82947-82953]:Modifier[83017-83023]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[82954-82961]:PrimitiveType[83024-83031]"
    }, {
      "left" : "removeRangeMarker",
      "right" : "removeRangeMarker",
      "info" : "SimpleName[82962-82979]:SimpleName[83032-83049]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[82980-82993]:SingleVariableDeclaration[83050-83063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82995-83064]:Block[83065-83134]"
    }, {
      "left" : "return removeRangeMarker(marker, Layer.FOREGROUND);",
      "right" : "return removeRangeMarker(marker, Layer.FOREGROUND);",
      "info" : "ReturnStatement[83006-83057]:ReturnStatement[83076-83127]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[83557-83563]:Modifier[83627-83633]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[83564-83571]:PrimitiveType[83634-83641]"
    }, {
      "left" : "removeRangeMarker",
      "right" : "removeRangeMarker",
      "info" : "SimpleName[83572-83589]:SimpleName[83642-83659]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[83590-83603]:SingleVariableDeclaration[83660-83673]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[83605-83616]:SingleVariableDeclaration[83675-83686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83618-83679]:Block[83688-83749]"
    }, {
      "left" : "return removeRangeMarker(0, marker, layer);",
      "right" : "return removeRangeMarker(0, marker, layer);",
      "info" : "ReturnStatement[83629-83672]:ReturnStatement[83699-83742]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[84182-84188]:Modifier[84252-84258]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[84189-84196]:PrimitiveType[84259-84266]"
    }, {
      "left" : "removeRangeMarker",
      "right" : "removeRangeMarker",
      "info" : "SimpleName[84197-84214]:SimpleName[84267-84284]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[84215-84224]:SingleVariableDeclaration[84285-84294]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[84226-84239]:SingleVariableDeclaration[84296-84309]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[84241-84252]:SingleVariableDeclaration[84311-84322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84254-84322]:Block[84324-84392]"
    }, {
      "left" : "return removeRangeMarker(index, marker, layer, true);",
      "right" : "return removeRangeMarker(index, marker, layer, true);",
      "info" : "ReturnStatement[84262-84315]:ReturnStatement[84332-84385]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[84879-84885]:Modifier[84949-84955]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[84886-84893]:PrimitiveType[84956-84963]"
    }, {
      "left" : "removeRangeMarker",
      "right" : "removeRangeMarker",
      "info" : "SimpleName[84894-84911]:SimpleName[84964-84981]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[84912-84921]:SingleVariableDeclaration[84982-84991]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[84923-84936]:SingleVariableDeclaration[84993-85006]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[84938-84949]:SingleVariableDeclaration[85008-85019]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[84958-84972]:SingleVariableDeclaration[85028-85042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84974-85581]:Block[85044-85721]"
    }, {
      "left" : "if (marker == null)",
      "right" : "if (marker == null)",
      "info" : "IfStatement[84985-85093]:IfStatement[85055-85163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85005-85093]:Block[85075-85163]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'marker' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'marker' argument.\");",
      "info" : "ThrowStatement[85020-85082]:ThrowStatement[85090-85152]"
    }, {
      "left" : "ArrayList markers;",
      "right" : "ArrayList markers;",
      "info" : "VariableDeclarationStatement[85103-85121]:VariableDeclarationStatement[85173-85191]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[85131-85421]:IfStatement[85201-85491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85162-85284]:Block[85232-85354]"
    }, {
      "left" : "markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(\r\n                    index));",
      "right" : "markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(\r\n                    index));",
      "info" : "ExpressionStatement[85177-85273]:ExpressionStatement[85247-85343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85299-85421]:Block[85369-85491]"
    }, {
      "left" : "markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(\r\n                    index));",
      "right" : "markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(\r\n                    index));",
      "info" : "ExpressionStatement[85314-85410]:ExpressionStatement[85384-85480]"
    }, {
      "left" : "boolean removed = markers.remove(marker);",
      "right" : "boolean removed = markers.remove(marker);",
      "info" : "VariableDeclarationStatement[85431-85472]:VariableDeclarationStatement[75506-75547]"
    }, {
      "left" : "if (removed && notify)",
      "right" : "if (removed && notify)",
      "info" : "IfStatement[85482-85549]:IfStatement[85622-85689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85505-85549]:Block[85645-85689]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[85520-85538]:ExpressionStatement[85660-85678]"
    }, {
      "left" : "return removed;",
      "right" : "return removed;",
      "info" : "ReturnStatement[85559-85574]:ReturnStatement[85699-85714]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[85779-85785]:Modifier[85919-85925]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[85786-85793]:PrimitiveType[85926-85933]"
    }, {
      "left" : "isRangeCrosshairVisible",
      "right" : "isRangeCrosshairVisible",
      "info" : "SimpleName[85794-85817]:SimpleName[85934-85957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85820-85872]:Block[85960-86012]"
    }, {
      "left" : "return this.rangeCrosshairVisible;",
      "right" : "return this.rangeCrosshairVisible;",
      "info" : "ReturnStatement[85831-85865]:ReturnStatement[85971-86005]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[86083-86089]:Modifier[86223-86229]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[86090-86094]:PrimitiveType[86230-86234]"
    }, {
      "left" : "setRangeCrosshairVisible",
      "right" : "setRangeCrosshairVisible",
      "info" : "SimpleName[86095-86119]:SimpleName[86235-86259]"
    }, {
      "left" : "boolean flag",
      "right" : "boolean flag",
      "info" : "SingleVariableDeclaration[86120-86132]:SingleVariableDeclaration[86260-86272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86134-86284]:Block[86274-86424]"
    }, {
      "left" : "if (this.rangeCrosshairVisible != flag)",
      "right" : "if (this.rangeCrosshairVisible != flag)",
      "info" : "IfStatement[86145-86277]:IfStatement[86285-86417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86185-86277]:Block[86325-86417]"
    }, {
      "left" : "this.rangeCrosshairVisible = flag;",
      "right" : "this.rangeCrosshairVisible = flag;",
      "info" : "ExpressionStatement[86200-86234]:ExpressionStatement[86340-86374]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[86248-86266]:ExpressionStatement[86388-86406]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[86517-86523]:Modifier[86657-86663]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[86524-86531]:PrimitiveType[86664-86671]"
    }, {
      "left" : "isRangeCrosshairLockedOnData",
      "right" : "isRangeCrosshairLockedOnData",
      "info" : "SimpleName[86532-86560]:SimpleName[86672-86700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86563-86620]:Block[86703-86760]"
    }, {
      "left" : "return this.rangeCrosshairLockedOnData;",
      "right" : "return this.rangeCrosshairLockedOnData;",
      "info" : "ReturnStatement[86574-86613]:ReturnStatement[86714-86753]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[86856-86862]:Modifier[86996-87002]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[86863-86867]:PrimitiveType[87003-87007]"
    }, {
      "left" : "setRangeCrosshairLockedOnData",
      "right" : "setRangeCrosshairLockedOnData",
      "info" : "SimpleName[86868-86897]:SimpleName[87008-87037]"
    }, {
      "left" : "boolean flag",
      "right" : "boolean flag",
      "info" : "SingleVariableDeclaration[86898-86910]:SingleVariableDeclaration[87038-87050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86912-87072]:Block[87052-87212]"
    }, {
      "left" : "if (this.rangeCrosshairLockedOnData != flag)",
      "right" : "if (this.rangeCrosshairLockedOnData != flag)",
      "info" : "IfStatement[86923-87065]:IfStatement[87063-87205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86968-87065]:Block[87108-87205]"
    }, {
      "left" : "this.rangeCrosshairLockedOnData = flag;",
      "right" : "this.rangeCrosshairLockedOnData = flag;",
      "info" : "ExpressionStatement[86983-87022]:ExpressionStatement[87123-87162]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[87036-87054]:ExpressionStatement[87176-87194]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[87230-87236]:Modifier[87370-87376]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[87237-87243]:PrimitiveType[87377-87383]"
    }, {
      "left" : "getRangeCrosshairValue",
      "right" : "getRangeCrosshairValue",
      "info" : "SimpleName[87244-87266]:SimpleName[87384-87406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87269-87319]:Block[87409-87459]"
    }, {
      "left" : "return this.rangeCrosshairValue;",
      "right" : "return this.rangeCrosshairValue;",
      "info" : "ReturnStatement[87280-87312]:ReturnStatement[87420-87452]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[87612-87618]:Modifier[87752-87758]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[87619-87623]:PrimitiveType[87759-87763]"
    }, {
      "left" : "setRangeCrosshairValue",
      "right" : "setRangeCrosshairValue",
      "info" : "SimpleName[87624-87646]:SimpleName[87764-87786]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[87647-87659]:SingleVariableDeclaration[87787-87799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87661-87715]:Block[87801-87855]"
    }, {
      "left" : "setRangeCrosshairValue(value, true);",
      "right" : "setRangeCrosshairValue(value, true);",
      "info" : "ExpressionStatement[87672-87708]:ExpressionStatement[87812-87848]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[88132-88138]:Modifier[88272-88278]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[88139-88143]:PrimitiveType[88279-88283]"
    }, {
      "left" : "setRangeCrosshairValue",
      "right" : "setRangeCrosshairValue",
      "info" : "SimpleName[88144-88166]:SimpleName[88284-88306]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[88167-88179]:SingleVariableDeclaration[88307-88319]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[88181-88195]:SingleVariableDeclaration[88321-88335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88197-88343]:Block[88337-88483]"
    }, {
      "left" : "this.rangeCrosshairValue = value;",
      "right" : "this.rangeCrosshairValue = value;",
      "info" : "ExpressionStatement[88208-88241]:ExpressionStatement[88348-88381]"
    }, {
      "left" : "if (isRangeCrosshairVisible() && notify)",
      "right" : "if (isRangeCrosshairVisible() && notify)",
      "info" : "IfStatement[88251-88336]:IfStatement[88391-88476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88292-88336]:Block[88432-88476]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[88307-88325]:ExpressionStatement[88447-88465]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[88677-88683]:Modifier[88817-88823]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[88684-88690]:SimpleType[88824-88830]"
    }, {
      "left" : "getRangeCrosshairStroke",
      "right" : "getRangeCrosshairStroke",
      "info" : "SimpleName[88691-88714]:SimpleName[88831-88854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88717-88768]:Block[88857-88908]"
    }, {
      "left" : "return this.rangeCrosshairStroke;",
      "right" : "return this.rangeCrosshairStroke;",
      "info" : "ReturnStatement[88728-88761]:ReturnStatement[88868-88901]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[89130-89136]:Modifier[89270-89276]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[89137-89141]:PrimitiveType[89277-89281]"
    }, {
      "left" : "setRangeCrosshairStroke",
      "right" : "setRangeCrosshairStroke",
      "info" : "SimpleName[89142-89165]:SimpleName[89282-89305]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[89166-89179]:SingleVariableDeclaration[89306-89319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89181-89380]:Block[89321-89520]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[89192-89300]:IfStatement[89332-89440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89212-89300]:Block[89352-89440]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[89227-89289]:ThrowStatement[89367-89429]"
    }, {
      "left" : "this.rangeCrosshairStroke = stroke;",
      "right" : "this.rangeCrosshairStroke = stroke;",
      "info" : "ExpressionStatement[89310-89345]:ExpressionStatement[89450-89485]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[89355-89373]:ExpressionStatement[89495-89513]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[89660-89666]:Modifier[89800-89806]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[89667-89672]:SimpleType[89807-89812]"
    }, {
      "left" : "getRangeCrosshairPaint",
      "right" : "getRangeCrosshairPaint",
      "info" : "SimpleName[89673-89695]:SimpleName[89813-89835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89698-89748]:Block[89838-89888]"
    }, {
      "left" : "return this.rangeCrosshairPaint;",
      "right" : "return this.rangeCrosshairPaint;",
      "info" : "ReturnStatement[89709-89741]:ReturnStatement[89849-89881]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90040-90046]:Modifier[90180-90186]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[90047-90051]:PrimitiveType[90187-90191]"
    }, {
      "left" : "setRangeCrosshairPaint",
      "right" : "setRangeCrosshairPaint",
      "info" : "SimpleName[90052-90074]:SimpleName[90192-90214]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[90075-90086]:SingleVariableDeclaration[90215-90226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90088-90283]:Block[90228-90423]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[90099-90205]:IfStatement[90239-90345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90118-90205]:Block[90258-90345]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[90133-90194]:ThrowStatement[90273-90334]"
    }, {
      "left" : "this.rangeCrosshairPaint = paint;",
      "right" : "this.rangeCrosshairPaint = paint;",
      "info" : "ExpressionStatement[90215-90248]:ExpressionStatement[90355-90388]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[90258-90276]:ExpressionStatement[90398-90416]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90425-90431]:Modifier[90565-90571]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[90432-90436]:SimpleType[90572-90576]"
    }, {
      "left" : "getAnnotations",
      "right" : "getAnnotations",
      "info" : "SimpleName[90437-90451]:SimpleName[90577-90591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90454-90496]:Block[90594-90636]"
    }, {
      "left" : "return this.annotations;",
      "right" : "return this.annotations;",
      "info" : "ReturnStatement[90465-90489]:ReturnStatement[90605-90629]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90779-90785]:Modifier[90919-90925]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[90786-90790]:PrimitiveType[90926-90930]"
    }, {
      "left" : "addAnnotation",
      "right" : "addAnnotation",
      "info" : "SimpleName[90791-90804]:SimpleName[90931-90944]"
    }, {
      "left" : "CategoryAnnotation annotation",
      "right" : "CategoryAnnotation annotation",
      "info" : "SingleVariableDeclaration[90805-90834]:SingleVariableDeclaration[90945-90974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90836-90883]:Block[90976-91023]"
    }, {
      "left" : "addAnnotation(annotation, true);",
      "right" : "addAnnotation(annotation, true);",
      "info" : "ExpressionStatement[90844-90876]:ExpressionStatement[90984-91016]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[91198-91204]:Modifier[91338-91344]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[91205-91209]:PrimitiveType[91345-91349]"
    }, {
      "left" : "addAnnotation",
      "right" : "addAnnotation",
      "info" : "SimpleName[91210-91223]:SimpleName[91350-91363]"
    }, {
      "left" : "CategoryAnnotation annotation",
      "right" : "CategoryAnnotation annotation",
      "info" : "SingleVariableDeclaration[91224-91253]:SingleVariableDeclaration[91364-91393]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[91255-91269]:SingleVariableDeclaration[91395-91409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91271-91514]:Block[91411-91654]"
    }, {
      "left" : "if (annotation == null)",
      "right" : "if (annotation == null)",
      "info" : "IfStatement[91282-91398]:IfStatement[91422-91538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91306-91398]:Block[91446-91538]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "info" : "ThrowStatement[91321-91387]:ThrowStatement[91461-91527]"
    }, {
      "left" : "this.annotations.add(annotation);",
      "right" : "this.annotations.add(annotation);",
      "info" : "ExpressionStatement[91408-91441]:ExpressionStatement[91548-91581]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[91451-91507]:IfStatement[91591-91647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91463-91507]:Block[91603-91647]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[91478-91496]:ExpressionStatement[91618-91636]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[91888-91894]:Modifier[92028-92034]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[91895-91902]:PrimitiveType[92035-92042]"
    }, {
      "left" : "removeAnnotation",
      "right" : "removeAnnotation",
      "info" : "SimpleName[91903-91919]:SimpleName[92043-92059]"
    }, {
      "left" : "CategoryAnnotation annotation",
      "right" : "CategoryAnnotation annotation",
      "info" : "SingleVariableDeclaration[91920-91949]:SingleVariableDeclaration[92060-92089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91951-92008]:Block[92091-92148]"
    }, {
      "left" : "return removeAnnotation(annotation, true);",
      "right" : "return removeAnnotation(annotation, true);",
      "info" : "ReturnStatement[91959-92001]:ReturnStatement[92099-92141]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[92413-92419]:Modifier[92553-92559]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[92420-92427]:PrimitiveType[92560-92567]"
    }, {
      "left" : "removeAnnotation",
      "right" : "removeAnnotation",
      "info" : "SimpleName[92428-92444]:SimpleName[92568-92584]"
    }, {
      "left" : "CategoryAnnotation annotation",
      "right" : "CategoryAnnotation annotation",
      "info" : "SingleVariableDeclaration[92445-92474]:SingleVariableDeclaration[92585-92614]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[92484-92498]:SingleVariableDeclaration[92624-92638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92500-92800]:Block[92640-92940]"
    }, {
      "left" : "if (annotation == null)",
      "right" : "if (annotation == null)",
      "info" : "IfStatement[92511-92627]:IfStatement[92651-92767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92535-92627]:Block[92675-92767]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "info" : "ThrowStatement[92550-92616]:ThrowStatement[92690-92756]"
    }, {
      "left" : "boolean removed = this.annotations.remove(annotation);",
      "right" : "boolean removed = this.annotations.remove(annotation);",
      "info" : "VariableDeclarationStatement[92637-92691]:VariableDeclarationStatement[92777-92831]"
    }, {
      "left" : "if (removed && notify)",
      "right" : "if (removed && notify)",
      "info" : "IfStatement[92701-92768]:IfStatement[92841-92908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92724-92768]:Block[92864-92908]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[92739-92757]:ExpressionStatement[92879-92897]"
    }, {
      "left" : "return removed;",
      "right" : "return removed;",
      "info" : "ReturnStatement[92778-92793]:ReturnStatement[92918-92933]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[92934-92940]:Modifier[93074-93080]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[92941-92945]:PrimitiveType[93081-93085]"
    }, {
      "left" : "clearAnnotations",
      "right" : "clearAnnotations",
      "info" : "SimpleName[92946-92962]:SimpleName[93086-93102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92965-93036]:Block[93105-93176]"
    }, {
      "left" : "this.annotations.clear();",
      "right" : "this.annotations.clear();",
      "info" : "ExpressionStatement[92976-93001]:ExpressionStatement[93116-93141]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[93011-93029]:ExpressionStatement[93151-93169]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[93338-93347]:Modifier[93478-93487]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[93348-93357]:SimpleType[93488-93497]"
    }, {
      "left" : "calculateDomainAxisSpace",
      "right" : "calculateDomainAxisSpace",
      "info" : "SimpleName[93358-93382]:SimpleName[93498-93522]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[93383-93396]:SingleVariableDeclaration[93523-93536]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[93449-93469]:SingleVariableDeclaration[93589-93609]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[93522-93537]:SingleVariableDeclaration[93662-93677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93539-95353]:Block[93679-95493]"
    }, {
      "left" : "if (space == null)",
      "right" : "if (space == null)",
      "info" : "IfStatement[93605-93674]:IfStatement[93745-93814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93624-93674]:Block[93764-93814]"
    }, {
      "left" : "space = new AxisSpace();",
      "right" : "space = new AxisSpace();",
      "info" : "ExpressionStatement[93639-93663]:ExpressionStatement[93779-93803]"
    }, {
      "left" : "if (this.fixedDomainAxisSpace != null)",
      "right" : "if (this.fixedDomainAxisSpace != null)",
      "info" : "IfStatement[93748-95266]:IfStatement[93888-95406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93787-94450]:Block[93927-94590]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[93802-94439]:IfStatement[93942-94579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93854-94110]:Block[93994-94250]"
    }, {
      "left" : "space.ensureAtLeast(\r\n                    this.fixedDomainAxisSpace.getLeft(), RectangleEdge.LEFT);",
      "right" : "space.ensureAtLeast(\r\n                    this.fixedDomainAxisSpace.getLeft(), RectangleEdge.LEFT);",
      "info" : "ExpressionStatement[93873-93972]:ExpressionStatement[94013-94112]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "info" : "ExpressionStatement[93990-94095]:ExpressionStatement[94130-94235]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[94129-94439]:IfStatement[94269-94579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94179-94439]:Block[94319-94579]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "info" : "ExpressionStatement[94198-94299]:ExpressionStatement[94338-94439]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "info" : "ExpressionStatement[94317-94424]:ExpressionStatement[94457-94564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94465-95266]:Block[94605-95406]"
    }, {
      "left" : "RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(\r\n                    getDomainAxisLocation(), this.orientation);",
      "right" : "RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(\r\n                    getDomainAxisLocation(), this.orientation);",
      "info" : "VariableDeclarationStatement[94541-94664]:VariableDeclarationStatement[94681-94804]"
    }, {
      "left" : "if (this.drawSharedDomainAxis)",
      "right" : "if (this.drawSharedDomainAxis)",
      "info" : "IfStatement[94678-94845]:IfStatement[94818-94985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94709-94845]:Block[94849-94985]"
    }, {
      "left" : "space = getDomainAxis().reserveSpace(g2, this, plotArea, \r\n                        domainEdge, space);",
      "right" : "space = getDomainAxis().reserveSpace(g2, this, plotArea, \r\n                        domainEdge, space);",
      "info" : "ExpressionStatement[94728-94830]:ExpressionStatement[94868-94970]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[94926-95255]:ForStatement[95066-95395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94975-95255]:Block[95115-95395]"
    }, {
      "left" : "Axis xAxis = (Axis) this.domainAxes.get(i);",
      "right" : "Axis xAxis = (Axis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[94994-95037]:VariableDeclarationStatement[95134-95177]"
    }, {
      "left" : "if (xAxis != null)",
      "right" : "if (xAxis != null)",
      "info" : "IfStatement[95055-95240]:IfStatement[95195-95380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95074-95240]:Block[95214-95380]"
    }, {
      "left" : "RectangleEdge edge = getDomainAxisEdge(i);",
      "right" : "RectangleEdge edge = getDomainAxisEdge(i);",
      "info" : "VariableDeclarationStatement[95097-95139]:VariableDeclarationStatement[95237-95279]"
    }, {
      "left" : "space = xAxis.reserveSpace(g2, this, plotArea, edge, space);",
      "right" : "space = xAxis.reserveSpace(g2, this, plotArea, edge, space);",
      "info" : "ExpressionStatement[95161-95221]:ExpressionStatement[95301-95361]"
    }, {
      "left" : "return space;",
      "right" : "return space;",
      "info" : "ReturnStatement[95278-95291]:ReturnStatement[95418-95431]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[95658-95667]:Modifier[95798-95807]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[95668-95677]:SimpleType[95808-95817]"
    }, {
      "left" : "calculateRangeAxisSpace",
      "right" : "calculateRangeAxisSpace",
      "info" : "SimpleName[95678-95701]:SimpleName[95818-95841]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[95702-95715]:SingleVariableDeclaration[95842-95855]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[95767-95787]:SingleVariableDeclaration[95907-95927]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[95839-95854]:SingleVariableDeclaration[95979-95994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95856-97275]:Block[95996-97415]"
    }, {
      "left" : "if (space == null)",
      "right" : "if (space == null)",
      "info" : "IfStatement[95919-95989]:IfStatement[96059-96129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95938-95989]:Block[96078-96129]"
    }, {
      "left" : "space = new AxisSpace();",
      "right" : "space = new AxisSpace();",
      "info" : "ExpressionStatement[95953-95977]:ExpressionStatement[96093-96117]"
    }, {
      "left" : "if (this.fixedRangeAxisSpace != null)",
      "right" : "if (this.fixedRangeAxisSpace != null)",
      "info" : "IfStatement[96062-97191]:IfStatement[96202-97331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96100-96763]:Block[96240-96903]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[96115-96752]:IfStatement[96255-96892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96167-96425]:Block[96307-96565]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "info" : "ExpressionStatement[96186-96286]:ExpressionStatement[96326-96426]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "info" : "ExpressionStatement[96304-96410]:ExpressionStatement[96444-96550]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[96444-96752]:IfStatement[96584-96892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96494-96752]:Block[96634-96892]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(), \r\n                        RectangleEdge.LEFT);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(), \r\n                        RectangleEdge.LEFT);",
      "info" : "ExpressionStatement[96513-96615]:ExpressionStatement[96653-96755]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "info" : "ExpressionStatement[96633-96737]:ExpressionStatement[96773-96877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96778-97191]:Block[96918-97331]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[96854-97180]:ForStatement[96994-97320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96902-97180]:Block[97042-97320]"
    }, {
      "left" : "Axis yAxis = (Axis) this.rangeAxes.get(i);",
      "right" : "Axis yAxis = (Axis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[96921-96963]:VariableDeclarationStatement[97061-97103]"
    }, {
      "left" : "if (yAxis != null)",
      "right" : "if (yAxis != null)",
      "info" : "IfStatement[96981-97165]:IfStatement[97121-97305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97000-97165]:Block[97140-97305]"
    }, {
      "left" : "RectangleEdge edge = getRangeAxisEdge(i);",
      "right" : "RectangleEdge edge = getRangeAxisEdge(i);",
      "info" : "VariableDeclarationStatement[97023-97064]:VariableDeclarationStatement[97163-97204]"
    }, {
      "left" : "space = yAxis.reserveSpace(g2, this, plotArea, edge, space);",
      "right" : "space = yAxis.reserveSpace(g2, this, plotArea, edge, space);",
      "info" : "ExpressionStatement[97086-97146]:ExpressionStatement[97226-97286]"
    }, {
      "left" : "return space;",
      "right" : "return space;",
      "info" : "ReturnStatement[97201-97214]:ReturnStatement[97341-97354]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[97498-97507]:Modifier[97638-97647]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[97508-97517]:SimpleType[97648-97657]"
    }, {
      "left" : "calculateAxisSpace",
      "right" : "calculateAxisSpace",
      "info" : "SimpleName[97518-97536]:SimpleName[97658-97676]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[97537-97550]:SingleVariableDeclaration[97677-97690]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[97597-97617]:SingleVariableDeclaration[97737-97757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97619-97821]:Block[97759-97961]"
    }, {
      "left" : "AxisSpace space = new AxisSpace();",
      "right" : "AxisSpace space = new AxisSpace();",
      "info" : "VariableDeclarationStatement[97630-97664]:VariableDeclarationStatement[97770-97804]"
    }, {
      "left" : "space = calculateRangeAxisSpace(g2, plotArea, space);",
      "right" : "space = calculateRangeAxisSpace(g2, plotArea, space);",
      "info" : "ExpressionStatement[97674-97727]:ExpressionStatement[97814-97867]"
    }, {
      "left" : "space = calculateDomainAxisSpace(g2, plotArea, space);",
      "right" : "space = calculateDomainAxisSpace(g2, plotArea, space);",
      "info" : "ExpressionStatement[97737-97791]:ExpressionStatement[97877-97931]"
    }, {
      "left" : "return space;",
      "right" : "return space;",
      "info" : "ReturnStatement[97801-97814]:ReturnStatement[97941-97954]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[98591-98597]:Modifier[98731-98737]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[98598-98602]:PrimitiveType[98738-98742]"
    }, {
      "left" : "draw",
      "right" : "draw",
      "info" : "SimpleName[98603-98607]:SimpleName[98743-98747]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[98608-98621]:SingleVariableDeclaration[98748-98761]"
    }, {
      "left" : "Rectangle2D area",
      "right" : "Rectangle2D area",
      "info" : "SingleVariableDeclaration[98623-98639]:SingleVariableDeclaration[98763-98779]"
    }, {
      "left" : "Point2D anchor",
      "right" : "Point2D anchor",
      "info" : "SingleVariableDeclaration[98664-98678]:SingleVariableDeclaration[98804-98818]"
    }, {
      "left" : "PlotState parentState",
      "right" : "PlotState parentState",
      "info" : "SingleVariableDeclaration[98702-98723]:SingleVariableDeclaration[98842-98863]"
    }, {
      "left" : "PlotRenderingInfo state",
      "right" : "PlotRenderingInfo state",
      "info" : "SingleVariableDeclaration[98747-98770]:SingleVariableDeclaration[98887-98910]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98772-105252]:Block[98912-105392]"
    }, {
      "left" : "boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);",
      "right" : "boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);",
      "info" : "VariableDeclarationStatement[98843-98899]:VariableDeclarationStatement[98983-99039]"
    }, {
      "left" : "boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);",
      "right" : "boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);",
      "info" : "VariableDeclarationStatement[98909-98967]:VariableDeclarationStatement[99049-99107]"
    }, {
      "left" : "if (b1 || b2)",
      "right" : "if (b1 || b2)",
      "info" : "IfStatement[98977-99024]:IfStatement[99117-99164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98991-99024]:Block[99131-99164]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[99006-99013]:ReturnStatement[99146-99153]"
    }, {
      "left" : "if (state == null)",
      "right" : "if (state == null)",
      "info" : "IfStatement[99072-99377]:IfStatement[99212-99517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99091-99377]:Block[99231-99517]"
    }, {
      "left" : "state = new PlotRenderingInfo(null);",
      "right" : "state = new PlotRenderingInfo(null);",
      "info" : "ExpressionStatement[99330-99366]:ExpressionStatement[99470-99506]"
    }, {
      "left" : "state.setPlotArea(area);",
      "right" : "state.setPlotArea(area);",
      "info" : "ExpressionStatement[99387-99411]:ExpressionStatement[99527-99551]"
    }, {
      "left" : "RectangleInsets insets = getInsets();",
      "right" : "RectangleInsets insets = getInsets();",
      "info" : "VariableDeclarationStatement[99491-99528]:VariableDeclarationStatement[99631-99668]"
    }, {
      "left" : "insets.trim(area);",
      "right" : "insets.trim(area);",
      "info" : "ExpressionStatement[99538-99556]:ExpressionStatement[99678-99696]"
    }, {
      "left" : "AxisSpace space = calculateAxisSpace(g2, area);",
      "right" : "AxisSpace space = calculateAxisSpace(g2, area);",
      "info" : "VariableDeclarationStatement[99607-99654]:VariableDeclarationStatement[99747-99794]"
    }, {
      "left" : "Rectangle2D dataArea = space.shrink(area, null);",
      "right" : "Rectangle2D dataArea = space.shrink(area, null);",
      "info" : "VariableDeclarationStatement[99664-99712]:VariableDeclarationStatement[99804-99852]"
    }, {
      "left" : "this.axisOffset.trim(dataArea);",
      "right" : "this.axisOffset.trim(dataArea);",
      "info" : "ExpressionStatement[99722-99753]:ExpressionStatement[99862-99893]"
    }, {
      "left" : "state.setDataArea(dataArea);",
      "right" : "state.setDataArea(dataArea);",
      "info" : "ExpressionStatement[99765-99793]:ExpressionStatement[99905-99933]"
    }, {
      "left" : "if (getRenderer() != null)",
      "right" : "if (getRenderer() != null)",
      "info" : "IfStatement[99919-100091]:IfStatement[100059-100231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99946-100021]:Block[100086-100161]"
    }, {
      "left" : "getRenderer().drawBackground(g2, this, dataArea);",
      "right" : "getRenderer().drawBackground(g2, this, dataArea);",
      "info" : "ExpressionStatement[99961-100010]:ExpressionStatement[100101-100150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100036-100091]:Block[100176-100231]"
    }, {
      "left" : "drawBackground(g2, dataArea);",
      "right" : "drawBackground(g2, dataArea);",
      "info" : "ExpressionStatement[100051-100080]:ExpressionStatement[100191-100220]"
    }, {
      "left" : "Map axisStateMap = drawAxes(g2, area, dataArea, state);",
      "right" : "Map axisStateMap = drawAxes(g2, area, dataArea, state);",
      "info" : "VariableDeclarationStatement[100110-100165]:VariableDeclarationStatement[100250-100305]"
    }, {
      "left" : "Shape savedClip = g2.getClip();",
      "right" : "Shape savedClip = g2.getClip();",
      "info" : "VariableDeclarationStatement[100233-100264]:VariableDeclarationStatement[100373-100404]"
    }, {
      "left" : "g2.clip(dataArea);",
      "right" : "g2.clip(dataArea);",
      "info" : "ExpressionStatement[100274-100292]:ExpressionStatement[100414-100432]"
    }, {
      "left" : "drawDomainGridlines(g2, dataArea);",
      "right" : "drawDomainGridlines(g2, dataArea);",
      "info" : "ExpressionStatement[100304-100338]:ExpressionStatement[100444-100478]"
    }, {
      "left" : "AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());",
      "right" : "AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());",
      "info" : "VariableDeclarationStatement[100350-100422]:VariableDeclarationStatement[100490-100562]"
    }, {
      "left" : "if (rangeAxisState == null)",
      "right" : "if (rangeAxisState == null)",
      "info" : "IfStatement[100432-100654]:IfStatement[100572-100794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100460-100654]:Block[100600-100794]"
    }, {
      "left" : "if (parentState != null)",
      "right" : "if (parentState != null)",
      "info" : "IfStatement[100475-100643]:IfStatement[100615-100783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100500-100643]:Block[100640-100783]"
    }, {
      "left" : "rangeAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getRangeAxis());",
      "right" : "rangeAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getRangeAxis());",
      "info" : "ExpressionStatement[100519-100628]:ExpressionStatement[100659-100768]"
    }, {
      "left" : "if (rangeAxisState != null)",
      "right" : "if (rangeAxisState != null)",
      "info" : "IfStatement[100664-100778]:IfStatement[100804-100918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100692-100778]:Block[100832-100918]"
    }, {
      "left" : "drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",
      "right" : "drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",
      "info" : "ExpressionStatement[100707-100767]:ExpressionStatement[100847-100907]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[100830-100957]:ForStatement[100970-101097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100878-100957]:Block[101018-101097]"
    }, {
      "left" : "drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "right" : "drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "info" : "ExpressionStatement[100893-100946]:ExpressionStatement[101033-101086]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[100975-101101]:ForStatement[101115-101241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101023-101101]:Block[101163-101241]"
    }, {
      "left" : "drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "right" : "drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "info" : "ExpressionStatement[101038-101090]:ExpressionStatement[101178-101230]"
    }, {
      "left" : "boolean foundData = false;",
      "right" : "boolean foundData = false;",
      "info" : "VariableDeclarationStatement[101150-101176]:VariableDeclarationStatement[101290-101316]"
    }, {
      "left" : "Composite originalComposite = g2.getComposite();",
      "right" : "Composite originalComposite = g2.getComposite();",
      "info" : "VariableDeclarationStatement[101233-101281]:VariableDeclarationStatement[101373-101421]"
    }, {
      "left" : "g2.setComposite(AlphaComposite.getInstance(\r\n                AlphaComposite.SRC_OVER, getForegroundAlpha()));",
      "right" : "g2.setComposite(AlphaComposite.getInstance(\r\n                AlphaComposite.SRC_OVER, getForegroundAlpha()));",
      "info" : "ExpressionStatement[101291-101400]:ExpressionStatement[101431-101540]"
    }, {
      "left" : "DatasetRenderingOrder order = getDatasetRenderingOrder();",
      "right" : "DatasetRenderingOrder order = getDatasetRenderingOrder();",
      "info" : "VariableDeclarationStatement[101412-101469]:VariableDeclarationStatement[101552-101609]"
    }, {
      "left" : "if (order == DatasetRenderingOrder.FORWARD)",
      "right" : "if (order == DatasetRenderingOrder.FORWARD)",
      "info" : "IfStatement[101479-104052]:IfStatement[101619-104192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101523-102738]:Block[101663-102878]"
    }, {
      "left" : "int datasetCount = this.datasets.size();",
      "right" : "int datasetCount = this.datasets.size();",
      "info" : "VariableDeclarationStatement[101584-101624]:VariableDeclarationStatement[101724-101764]"
    }, {
      "left" : "for (int i = 0; i < datasetCount; i++)",
      "right" : "for (int i = 0; i < datasetCount; i++)",
      "info" : "ForStatement[101638-102080]:ForStatement[101778-102220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101677-102080]:Block[101817-102220]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(i);",
      "right" : "CategoryItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[101696-101736]:VariableDeclarationStatement[101836-101876]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[101754-102065]:IfStatement[101894-102205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101769-102065]:Block[101909-102205]"
    }, {
      "left" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[101792-101845]:VariableDeclarationStatement[101932-101985]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[101867-101915]:VariableDeclarationStatement[102007-102055]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, state);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, state);",
      "info" : "ExpressionStatement[101937-102046]:ExpressionStatement[102077-102186]"
    }, {
      "left" : "for (int i = 0; i < datasetCount; i++)",
      "right" : "for (int i = 0; i < datasetCount; i++)",
      "info" : "ForStatement[102096-102225]:ForStatement[102236-102365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102135-102225]:Block[102275-102365]"
    }, {
      "left" : "foundData = render(g2, dataArea, i, state) || foundData;",
      "right" : "foundData = render(g2, dataArea, i, state) || foundData;",
      "info" : "ExpressionStatement[102154-102210]:ExpressionStatement[102294-102350]"
    }, {
      "left" : "for (int i = 0; i < datasetCount; i++)",
      "right" : "for (int i = 0; i < datasetCount; i++)",
      "info" : "ForStatement[102285-102727]:ForStatement[102425-102867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102324-102727]:Block[102464-102867]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(i);",
      "right" : "CategoryItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[102343-102383]:VariableDeclarationStatement[102483-102523]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[102401-102712]:IfStatement[102541-102852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102416-102712]:Block[102556-102852]"
    }, {
      "left" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[102439-102492]:VariableDeclarationStatement[102579-102632]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[102514-102562]:VariableDeclarationStatement[102654-102702]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, state);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, state);",
      "info" : "ExpressionStatement[102584-102693]:ExpressionStatement[102724-102833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102753-104052]:Block[102893-104192]"
    }, {
      "left" : "int datasetCount = this.datasets.size();",
      "right" : "int datasetCount = this.datasets.size();",
      "info" : "VariableDeclarationStatement[102860-102900]:VariableDeclarationStatement[103000-103040]"
    }, {
      "left" : "for (int i = datasetCount - 1; i >= 0; i--)",
      "right" : "for (int i = datasetCount - 1; i >= 0; i--)",
      "info" : "ForStatement[102914-103361]:ForStatement[103054-103501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102958-103361]:Block[103098-103501]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(i);",
      "right" : "CategoryItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[102977-103017]:VariableDeclarationStatement[103117-103157]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[103035-103346]:IfStatement[103175-103486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103050-103346]:Block[103190-103486]"
    }, {
      "left" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[103073-103126]:VariableDeclarationStatement[103213-103266]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[103148-103196]:VariableDeclarationStatement[103288-103336]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, state);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, state);",
      "info" : "ExpressionStatement[103218-103327]:ExpressionStatement[103358-103467]"
    }, {
      "left" : "for (int i = this.datasets.size() - 1; i >= 0; i--)",
      "right" : "for (int i = this.datasets.size() - 1; i >= 0; i--)",
      "info" : "ForStatement[103389-103534]:ForStatement[103529-103674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103441-103534]:Block[103581-103674]"
    }, {
      "left" : "foundData = render(g2, dataArea, i, state) || foundData;",
      "right" : "foundData = render(g2, dataArea, i, state) || foundData;",
      "info" : "ExpressionStatement[103460-103516]:ExpressionStatement[103600-103656]"
    }, {
      "left" : "for (int i = datasetCount - 1; i >= 0; i--)",
      "right" : "for (int i = datasetCount - 1; i >= 0; i--)",
      "info" : "ForStatement[103594-104041]:ForStatement[103734-104181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103638-104041]:Block[103778-104181]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(i);",
      "right" : "CategoryItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[103657-103697]:VariableDeclarationStatement[103797-103837]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[103715-104026]:IfStatement[103855-104166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103730-104026]:Block[103870-104166]"
    }, {
      "left" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "CategoryAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[103753-103806]:VariableDeclarationStatement[103893-103946]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[103828-103876]:VariableDeclarationStatement[103968-104016]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, state);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, state);",
      "info" : "ExpressionStatement[103898-104007]:ExpressionStatement[104038-104147]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[104115-104242]:ForStatement[104255-104382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104163-104242]:Block[104303-104382]"
    }, {
      "left" : "drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "right" : "drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[104178-104231]:ExpressionStatement[104318-104371]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[104252-104378]:ForStatement[104392-104518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104300-104378]:Block[104440-104518]"
    }, {
      "left" : "drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "right" : "drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[104315-104367]:ExpressionStatement[104455-104507]"
    }, {
      "left" : "drawAnnotations(g2, dataArea, state);",
      "right" : "drawAnnotations(g2, dataArea, state);",
      "info" : "ExpressionStatement[104442-104479]:ExpressionStatement[104582-104619]"
    }, {
      "left" : "g2.setClip(savedClip);",
      "right" : "g2.setClip(savedClip);",
      "info" : "ExpressionStatement[104491-104513]:ExpressionStatement[104631-104653]"
    }, {
      "left" : "g2.setComposite(originalComposite);",
      "right" : "g2.setComposite(originalComposite);",
      "info" : "ExpressionStatement[104523-104558]:ExpressionStatement[104663-104698]"
    }, {
      "left" : "if (!foundData)",
      "right" : "if (!foundData)",
      "info" : "IfStatement[104570-104644]:IfStatement[104710-104784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104586-104644]:Block[104726-104784]"
    }, {
      "left" : "drawNoDataMessage(g2, dataArea);",
      "right" : "drawNoDataMessage(g2, dataArea);",
      "info" : "ExpressionStatement[104601-104633]:ExpressionStatement[104741-104773]"
    }, {
      "left" : "if (isRangeCrosshairVisible())",
      "right" : "if (isRangeCrosshairVisible())",
      "info" : "IfStatement[104704-105013]:IfStatement[104844-105153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104735-105013]:Block[104875-105153]"
    }, {
      "left" : "drawRangeCrosshair(g2, dataArea, getOrientation(), \r\n                    getRangeCrosshairValue(), getRangeAxis(),\r\n                    getRangeCrosshairStroke(), getRangeCrosshairPaint());",
      "right" : "drawRangeCrosshair(g2, dataArea, getOrientation(), \r\n                    getRangeCrosshairValue(), getRangeAxis(),\r\n                    getRangeCrosshairStroke(), getRangeCrosshairPaint());",
      "info" : "ExpressionStatement[104813-105002]:ExpressionStatement[104953-105142]"
    }, {
      "left" : "if (getRenderer() != null)",
      "right" : "if (getRenderer() != null)",
      "info" : "IfStatement[105077-105243]:IfStatement[105217-105383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105104-105176]:Block[105244-105316]"
    }, {
      "left" : "getRenderer().drawOutline(g2, this, dataArea);",
      "right" : "getRenderer().drawOutline(g2, this, dataArea);",
      "info" : "ExpressionStatement[105119-105165]:ExpressionStatement[105259-105305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105191-105243]:Block[105331-105383]"
    }, {
      "left" : "drawOutline(g2, dataArea);",
      "right" : "drawOutline(g2, dataArea);",
      "info" : "ExpressionStatement[105206-105232]:ExpressionStatement[105346-105372]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[105709-105715]:Modifier[105849-105855]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[105716-105720]:PrimitiveType[105856-105860]"
    }, {
      "left" : "drawBackground",
      "right" : "drawBackground",
      "info" : "SimpleName[105721-105735]:SimpleName[105861-105875]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[105736-105749]:SingleVariableDeclaration[105876-105889]"
    }, {
      "left" : "Rectangle2D area",
      "right" : "Rectangle2D area",
      "info" : "SingleVariableDeclaration[105751-105767]:SingleVariableDeclaration[105891-105907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105769-105870]:Block[105909-106010]"
    }, {
      "left" : "fillBackground(g2, area, this.orientation);",
      "right" : "fillBackground(g2, area, this.orientation);",
      "info" : "ExpressionStatement[105780-105823]:ExpressionStatement[105920-105963]"
    }, {
      "left" : "drawBackgroundImage(g2, area);",
      "right" : "drawBackgroundImage(g2, area);",
      "info" : "ExpressionStatement[105833-105863]:ExpressionStatement[105973-106003]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[106257-106266]:Modifier[106397-106406]"
    }, {
      "left" : "Map",
      "right" : "Map",
      "info" : "SimpleType[106267-106270]:SimpleType[106407-106410]"
    }, {
      "left" : "drawAxes",
      "right" : "drawAxes",
      "info" : "SimpleName[106271-106279]:SimpleName[106411-106419]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[106280-106293]:SingleVariableDeclaration[106420-106433]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[106324-106344]:SingleVariableDeclaration[106464-106484]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[106375-106395]:SingleVariableDeclaration[106515-106535]"
    }, {
      "left" : "PlotRenderingInfo plotState",
      "right" : "PlotRenderingInfo plotState",
      "info" : "SingleVariableDeclaration[106425-106452]:SingleVariableDeclaration[106565-106592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106454-109677]:Block[106594-109817]"
    }, {
      "left" : "AxisCollection axisCollection = new AxisCollection();",
      "right" : "AxisCollection axisCollection = new AxisCollection();",
      "info" : "VariableDeclarationStatement[106467-106520]:VariableDeclarationStatement[106607-106660]"
    }, {
      "left" : "for (int index = 0; index < this.domainAxes.size(); index++)",
      "right" : "for (int index = 0; index < this.domainAxes.size(); index++)",
      "info" : "ForStatement[106572-106841]:ForStatement[106712-106981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106633-106841]:Block[106773-106981]"
    }, {
      "left" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(index);",
      "right" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(index);",
      "info" : "VariableDeclarationStatement[106648-106711]:VariableDeclarationStatement[106788-106851]"
    }, {
      "left" : "if (xAxis != null)",
      "right" : "if (xAxis != null)",
      "info" : "IfStatement[106725-106830]:IfStatement[106865-106970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106744-106830]:Block[106884-106970]"
    }, {
      "left" : "axisCollection.add(xAxis, getDomainAxisEdge(index));",
      "right" : "axisCollection.add(xAxis, getDomainAxisEdge(index));",
      "info" : "ExpressionStatement[106763-106815]:ExpressionStatement[106903-106955]"
    }, {
      "left" : "for (int index = 0; index < this.rangeAxes.size(); index++)",
      "right" : "for (int index = 0; index < this.rangeAxes.size(); index++)",
      "info" : "ForStatement[106892-107152]:ForStatement[107032-107292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106952-107152]:Block[107092-107292]"
    }, {
      "left" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);",
      "right" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);",
      "info" : "VariableDeclarationStatement[106967-107023]:VariableDeclarationStatement[107107-107163]"
    }, {
      "left" : "if (yAxis != null)",
      "right" : "if (yAxis != null)",
      "info" : "IfStatement[107037-107141]:IfStatement[107177-107281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107056-107141]:Block[107196-107281]"
    }, {
      "left" : "axisCollection.add(yAxis, getRangeAxisEdge(index));",
      "right" : "axisCollection.add(yAxis, getRangeAxisEdge(index));",
      "info" : "ExpressionStatement[107075-107126]:ExpressionStatement[107215-107266]"
    }, {
      "left" : "Map axisStateMap = new HashMap();",
      "right" : "Map axisStateMap = new HashMap();",
      "info" : "VariableDeclarationStatement[107164-107197]:VariableDeclarationStatement[107304-107337]"
    }, {
      "left" : "double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(\r\n                dataArea.getHeight());",
      "right" : "double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(\r\n                dataArea.getHeight());",
      "info" : "VariableDeclarationStatement[107247-107359]:VariableDeclarationStatement[107387-107499]"
    }, {
      "left" : "Iterator iterator = axisCollection.getAxesAtTop().iterator();",
      "right" : "Iterator iterator = axisCollection.getAxesAtTop().iterator();",
      "info" : "VariableDeclarationStatement[107369-107430]:VariableDeclarationStatement[107509-107570]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[107440-107815]:WhileStatement[107580-107955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107467-107815]:Block[107607-107955]"
    }, {
      "left" : "Axis axis = (Axis) iterator.next();",
      "right" : "Axis axis = (Axis) iterator.next();",
      "info" : "VariableDeclarationStatement[107482-107517]:VariableDeclarationStatement[107622-107657]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[107531-107804]:IfStatement[107671-107944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107549-107804]:Block[107689-107944]"
    }, {
      "left" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \r\n                        RectangleEdge.TOP, plotState);",
      "right" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \r\n                        RectangleEdge.TOP, plotState);",
      "info" : "VariableDeclarationStatement[107568-107688]:VariableDeclarationStatement[107708-107828]"
    }, {
      "left" : "cursor = axisState.getCursor();",
      "right" : "cursor = axisState.getCursor();",
      "info" : "ExpressionStatement[107706-107737]:ExpressionStatement[107846-107877]"
    }, {
      "left" : "axisStateMap.put(axis, axisState);",
      "right" : "axisStateMap.put(axis, axisState);",
      "info" : "ExpressionStatement[107755-107789]:ExpressionStatement[107895-107929]"
    }, {
      "left" : "cursor = dataArea.getMaxY() \r\n                 + this.axisOffset.calculateBottomOutset(dataArea.getHeight());",
      "right" : "cursor = dataArea.getMaxY() \r\n                 + this.axisOffset.calculateBottomOutset(dataArea.getHeight());",
      "info" : "ExpressionStatement[107860-107969]:ExpressionStatement[108000-108109]"
    }, {
      "left" : "iterator = axisCollection.getAxesAtBottom().iterator();",
      "right" : "iterator = axisCollection.getAxesAtBottom().iterator();",
      "info" : "ExpressionStatement[107979-108034]:ExpressionStatement[108119-108174]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[108044-108421]:WhileStatement[108184-108561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108071-108421]:Block[108211-108561]"
    }, {
      "left" : "Axis axis = (Axis) iterator.next();",
      "right" : "Axis axis = (Axis) iterator.next();",
      "info" : "VariableDeclarationStatement[108086-108121]:VariableDeclarationStatement[108226-108261]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[108135-108410]:IfStatement[108275-108550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108153-108410]:Block[108293-108550]"
    }, {
      "left" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,\r\n                        RectangleEdge.BOTTOM, plotState);",
      "right" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,\r\n                        RectangleEdge.BOTTOM, plotState);",
      "info" : "VariableDeclarationStatement[108172-108294]:VariableDeclarationStatement[108312-108434]"
    }, {
      "left" : "cursor = axisState.getCursor();",
      "right" : "cursor = axisState.getCursor();",
      "info" : "ExpressionStatement[108312-108343]:ExpressionStatement[108452-108483]"
    }, {
      "left" : "axisStateMap.put(axis, axisState);",
      "right" : "axisStateMap.put(axis, axisState);",
      "info" : "ExpressionStatement[108361-108395]:ExpressionStatement[108501-108535]"
    }, {
      "left" : "cursor = dataArea.getMinX() \r\n                 - this.axisOffset.calculateLeftOutset(dataArea.getWidth());",
      "right" : "cursor = dataArea.getMinX() \r\n                 - this.axisOffset.calculateLeftOutset(dataArea.getWidth());",
      "info" : "ExpressionStatement[108464-108570]:ExpressionStatement[108604-108710]"
    }, {
      "left" : "iterator = axisCollection.getAxesAtLeft().iterator();",
      "right" : "iterator = axisCollection.getAxesAtLeft().iterator();",
      "info" : "ExpressionStatement[108580-108633]:ExpressionStatement[108720-108773]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[108643-109018]:WhileStatement[108783-109158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108670-109018]:Block[108810-109158]"
    }, {
      "left" : "Axis axis = (Axis) iterator.next();",
      "right" : "Axis axis = (Axis) iterator.next();",
      "info" : "VariableDeclarationStatement[108685-108720]:VariableDeclarationStatement[108825-108860]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[108734-109007]:IfStatement[108874-109147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108752-109007]:Block[108892-109147]"
    }, {
      "left" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,\r\n                        RectangleEdge.LEFT, plotState);",
      "right" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,\r\n                        RectangleEdge.LEFT, plotState);",
      "info" : "VariableDeclarationStatement[108771-108891]:VariableDeclarationStatement[108911-109031]"
    }, {
      "left" : "cursor = axisState.getCursor();",
      "right" : "cursor = axisState.getCursor();",
      "info" : "ExpressionStatement[108909-108940]:ExpressionStatement[109049-109080]"
    }, {
      "left" : "axisStateMap.put(axis, axisState);",
      "right" : "axisStateMap.put(axis, axisState);",
      "info" : "ExpressionStatement[108958-108992]:ExpressionStatement[109098-109132]"
    }, {
      "left" : "cursor = dataArea.getMaxX() \r\n                 + this.axisOffset.calculateRightOutset(dataArea.getWidth());",
      "right" : "cursor = dataArea.getMaxX() \r\n                 + this.axisOffset.calculateRightOutset(dataArea.getWidth());",
      "info" : "ExpressionStatement[109062-109169]:ExpressionStatement[109202-109309]"
    }, {
      "left" : "iterator = axisCollection.getAxesAtRight().iterator();",
      "right" : "iterator = axisCollection.getAxesAtRight().iterator();",
      "info" : "ExpressionStatement[109179-109233]:ExpressionStatement[109319-109373]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[109243-109620]:WhileStatement[109383-109760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109270-109620]:Block[109410-109760]"
    }, {
      "left" : "Axis axis = (Axis) iterator.next();",
      "right" : "Axis axis = (Axis) iterator.next();",
      "info" : "VariableDeclarationStatement[109285-109320]:VariableDeclarationStatement[109425-109460]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[109334-109609]:IfStatement[109474-109749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109352-109609]:Block[109492-109749]"
    }, {
      "left" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \r\n                        RectangleEdge.RIGHT, plotState);",
      "right" : "AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \r\n                        RectangleEdge.RIGHT, plotState);",
      "info" : "VariableDeclarationStatement[109371-109493]:VariableDeclarationStatement[109511-109633]"
    }, {
      "left" : "cursor = axisState.getCursor();",
      "right" : "cursor = axisState.getCursor();",
      "info" : "ExpressionStatement[109511-109542]:ExpressionStatement[109651-109682]"
    }, {
      "left" : "axisStateMap.put(axis, axisState);",
      "right" : "axisStateMap.put(axis, axisState);",
      "info" : "ExpressionStatement[109560-109594]:ExpressionStatement[109700-109734]"
    }, {
      "left" : "return axisStateMap;",
      "right" : "return axisStateMap;",
      "info" : "ReturnStatement[109640-109660]:ReturnStatement[109780-109800]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[110150-110156]:Modifier[110290-110296]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[110157-110164]:PrimitiveType[110297-110304]"
    }, {
      "left" : "render",
      "right" : "render",
      "info" : "SimpleName[110165-110171]:SimpleName[110305-110311]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[110172-110185]:SingleVariableDeclaration[110312-110325]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[110187-110207]:SingleVariableDeclaration[110327-110347]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[110209-110218]:SingleVariableDeclaration[110349-110358]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[110248-110270]:SingleVariableDeclaration[110388-110410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110272-113187]:Block[110412-113327]"
    }, {
      "left" : "boolean foundData = false;",
      "right" : "boolean foundData = false;",
      "info" : "VariableDeclarationStatement[110285-110311]:VariableDeclarationStatement[110425-110451]"
    }, {
      "left" : "CategoryDataset currentDataset = getDataset(index);",
      "right" : "CategoryDataset currentDataset = getDataset(index);",
      "info" : "VariableDeclarationStatement[110321-110372]:VariableDeclarationStatement[110461-110512]"
    }, {
      "left" : "CategoryItemRenderer renderer = getRenderer(index);",
      "right" : "CategoryItemRenderer renderer = getRenderer(index);",
      "info" : "VariableDeclarationStatement[110382-110433]:VariableDeclarationStatement[110522-110573]"
    }, {
      "left" : "CategoryAxis domainAxis = getDomainAxisForDataset(index);",
      "right" : "CategoryAxis domainAxis = getDomainAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[110443-110500]:VariableDeclarationStatement[110583-110640]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(index);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[110510-110562]:VariableDeclarationStatement[110650-110702]"
    }, {
      "left" : "boolean hasData = !DatasetUtilities.isEmptyOrNull(currentDataset);",
      "right" : "boolean hasData = !DatasetUtilities.isEmptyOrNull(currentDataset);",
      "info" : "VariableDeclarationStatement[110572-110638]:VariableDeclarationStatement[110712-110778]"
    }, {
      "left" : "if (hasData && renderer != null)",
      "right" : "if (hasData && renderer != null)",
      "info" : "IfStatement[110648-113143]:IfStatement[110788-113283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110681-113143]:Block[110821-113283]"
    }, {
      "left" : "foundData = true;",
      "right" : "foundData = true;",
      "info" : "ExpressionStatement[110710-110727]:ExpressionStatement[110850-110867]"
    }, {
      "left" : "CategoryItemRendererState state = renderer.initialise(g2, dataArea,\r\n                    this, index, info);",
      "right" : "CategoryItemRendererState state = renderer.initialise(g2, dataArea,\r\n                    this, index, info);",
      "info" : "VariableDeclarationStatement[110741-110849]:VariableDeclarationStatement[110881-110989]"
    }, {
      "left" : "int columnCount = currentDataset.getColumnCount();",
      "right" : "int columnCount = currentDataset.getColumnCount();",
      "info" : "VariableDeclarationStatement[110863-110913]:VariableDeclarationStatement[111003-111053]"
    }, {
      "left" : "int rowCount = currentDataset.getRowCount();",
      "right" : "int rowCount = currentDataset.getRowCount();",
      "info" : "VariableDeclarationStatement[110927-110971]:VariableDeclarationStatement[111067-111111]"
    }, {
      "left" : "int passCount = renderer.getPassCount();",
      "right" : "int passCount = renderer.getPassCount();",
      "info" : "VariableDeclarationStatement[110985-111025]:VariableDeclarationStatement[111125-111165]"
    }, {
      "left" : "for (int pass = 0; pass < passCount; pass++)",
      "right" : "for (int pass = 0; pass < passCount; pass++)",
      "info" : "ForStatement[111039-113132]:ForStatement[111179-113272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111084-113132]:Block[111224-113272]"
    }, {
      "left" : "if (this.columnRenderingOrder == SortOrder.ASCENDING)",
      "right" : "if (this.columnRenderingOrder == SortOrder.ASCENDING)",
      "info" : "IfStatement[111115-113117]:IfStatement[111255-113257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111169-112129]:Block[111309-112269]"
    }, {
      "left" : "for (int column = 0; column < columnCount; column++)",
      "right" : "for (int column = 0; column < columnCount; column++)",
      "info" : "ForStatement[111192-112110]:ForStatement[111332-112250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111245-112110]:Block[111385-112250]"
    }, {
      "left" : "if (this.rowRenderingOrder == SortOrder.ASCENDING)",
      "right" : "if (this.rowRenderingOrder == SortOrder.ASCENDING)",
      "info" : "IfStatement[111272-112087]:IfStatement[111412-112227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111323-111675]:Block[111463-111815]"
    }, {
      "left" : "for (int row = 0; row < rowCount; row++)",
      "right" : "for (int row = 0; row < rowCount; row++)",
      "info" : "ForStatement[111354-111648]:ForStatement[111494-111788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111395-111648]:Block[111535-111788]"
    }, {
      "left" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "right" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "info" : "ExpressionStatement[111430-111617]:ExpressionStatement[111570-111757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111706-112087]:Block[111846-112227]"
    }, {
      "left" : "for (int row = rowCount - 1; row >= 0; row--)",
      "right" : "for (int row = rowCount - 1; row >= 0; row--)",
      "info" : "ForStatement[111737-112036]:ForStatement[111877-112176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111783-112036]:Block[111923-112176]"
    }, {
      "left" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "right" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "info" : "ExpressionStatement[111818-112005]:ExpressionStatement[111958-112145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112152-113117]:Block[112292-113257]"
    }, {
      "left" : "for (int column = columnCount - 1; column >= 0; column--)",
      "right" : "for (int column = columnCount - 1; column >= 0; column--)",
      "info" : "ForStatement[112175-113098]:ForStatement[112315-113238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112233-113098]:Block[112373-113238]"
    }, {
      "left" : "if (this.rowRenderingOrder == SortOrder.ASCENDING)",
      "right" : "if (this.rowRenderingOrder == SortOrder.ASCENDING)",
      "info" : "IfStatement[112260-113075]:IfStatement[112400-113215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112311-112663]:Block[112451-112803]"
    }, {
      "left" : "for (int row = 0; row < rowCount; row++)",
      "right" : "for (int row = 0; row < rowCount; row++)",
      "info" : "ForStatement[112342-112636]:ForStatement[112482-112776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112383-112636]:Block[112523-112776]"
    }, {
      "left" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "right" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "info" : "ExpressionStatement[112418-112605]:ExpressionStatement[112558-112745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112694-113075]:Block[112834-113215]"
    }, {
      "left" : "for (int row = rowCount - 1; row >= 0; row--)",
      "right" : "for (int row = rowCount - 1; row >= 0; row--)",
      "info" : "ForStatement[112725-113024]:ForStatement[112865-113164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112771-113024]:Block[112911-113164]"
    }, {
      "left" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "right" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                        domainAxis, rangeAxis, currentDataset, \r\n                                        row, column, pass);",
      "info" : "ExpressionStatement[112806-112993]:ExpressionStatement[112946-113133]"
    }, {
      "left" : "return foundData;",
      "right" : "return foundData;",
      "info" : "ReturnStatement[113153-113170]:ReturnStatement[113293-113310]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[113427-113436]:Modifier[113567-113576]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[113437-113441]:PrimitiveType[113577-113581]"
    }, {
      "left" : "drawDomainGridlines",
      "right" : "drawDomainGridlines",
      "info" : "SimpleName[113442-113461]:SimpleName[113582-113601]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[113462-113475]:SingleVariableDeclaration[113602-113615]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[113477-113497]:SingleVariableDeclaration[113617-113637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113499-114870]:Block[113639-115010]"
    }, {
      "left" : "if (isDomainGridlinesVisible())",
      "right" : "if (isDomainGridlinesVisible())",
      "info" : "IfStatement[113562-114863]:IfStatement[113702-115003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113594-114863]:Block[113734-115003]"
    }, {
      "left" : "CategoryAnchor anchor = getDomainGridlinePosition();",
      "right" : "CategoryAnchor anchor = getDomainGridlinePosition();",
      "info" : "VariableDeclarationStatement[113609-113661]:VariableDeclarationStatement[113749-113801]"
    }, {
      "left" : "RectangleEdge domainAxisEdge = getDomainAxisEdge();",
      "right" : "RectangleEdge domainAxisEdge = getDomainAxisEdge();",
      "info" : "VariableDeclarationStatement[113675-113726]:VariableDeclarationStatement[113815-113866]"
    }, {
      "left" : "Stroke gridStroke = getDomainGridlineStroke();",
      "right" : "Stroke gridStroke = getDomainGridlineStroke();",
      "info" : "VariableDeclarationStatement[113740-113786]:VariableDeclarationStatement[113880-113926]"
    }, {
      "left" : "Paint gridPaint = getDomainGridlinePaint();",
      "right" : "Paint gridPaint = getDomainGridlinePaint();",
      "info" : "VariableDeclarationStatement[113800-113843]:VariableDeclarationStatement[113940-113983]"
    }, {
      "left" : "if ((gridStroke != null) && (gridPaint != null))",
      "right" : "if ((gridStroke != null) && (gridPaint != null))",
      "info" : "IfStatement[113857-114852]:IfStatement[113997-114992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113906-114852]:Block[114046-114992]"
    }, {
      "left" : "CategoryDataset data = getDataset();",
      "right" : "CategoryDataset data = getDataset();",
      "info" : "VariableDeclarationStatement[113973-114009]:VariableDeclarationStatement[114113-114149]"
    }, {
      "left" : "if (data != null)",
      "right" : "if (data != null)",
      "info" : "IfStatement[114027-114837]:IfStatement[114167-114977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114045-114837]:Block[114185-114977]"
    }, {
      "left" : "CategoryAxis axis = getDomainAxis();",
      "right" : "CategoryAxis axis = getDomainAxis();",
      "info" : "VariableDeclarationStatement[114068-114104]:VariableDeclarationStatement[114208-114244]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[114126-114818]:IfStatement[114266-114958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114144-114818]:Block[114284-114958]"
    }, {
      "left" : "int columnCount = data.getColumnCount();",
      "right" : "int columnCount = data.getColumnCount();",
      "info" : "VariableDeclarationStatement[114171-114211]:VariableDeclarationStatement[114311-114351]"
    }, {
      "left" : "for (int c = 0; c < columnCount; c++)",
      "right" : "for (int c = 0; c < columnCount; c++)",
      "info" : "ForStatement[114237-114795]:ForStatement[114377-114935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114275-114795]:Block[114415-114935]"
    }, {
      "left" : "double xx = axis.getCategoryJava2DCoordinate(\r\n                                    anchor, c, columnCount, dataArea, \r\n                                    domainAxisEdge);",
      "right" : "double xx = axis.getCategoryJava2DCoordinate(\r\n                                    anchor, c, columnCount, dataArea, \r\n                                    domainAxisEdge);",
      "info" : "VariableDeclarationStatement[114306-114477]:VariableDeclarationStatement[114446-114617]"
    }, {
      "left" : "CategoryItemRenderer renderer1 = getRenderer();",
      "right" : "CategoryItemRenderer renderer1 = getRenderer();",
      "info" : "VariableDeclarationStatement[114507-114554]:VariableDeclarationStatement[114647-114694]"
    }, {
      "left" : "if (renderer1 != null)",
      "right" : "if (renderer1 != null)",
      "info" : "IfStatement[114584-114768]:IfStatement[114724-114908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114607-114768]:Block[114747-114908]"
    }, {
      "left" : "renderer1.drawDomainGridline(g2, this, \r\n                                        dataArea, xx);",
      "right" : "renderer1.drawDomainGridline(g2, this, \r\n                                        dataArea, xx);",
      "info" : "ExpressionStatement[114642-114737]:ExpressionStatement[114782-114877]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[115139-115148]:Modifier[115279-115288]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[115149-115153]:PrimitiveType[115289-115293]"
    }, {
      "left" : "drawRangeGridlines",
      "right" : "drawRangeGridlines",
      "info" : "SimpleName[115154-115172]:SimpleName[115294-115312]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[115173-115186]:SingleVariableDeclaration[115313-115326]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[115188-115208]:SingleVariableDeclaration[115328-115348]"
    }, {
      "left" : "List ticks",
      "right" : "List ticks",
      "info" : "SingleVariableDeclaration[115250-115260]:SingleVariableDeclaration[115390-115400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115262-116174]:Block[115402-116314]"
    }, {
      "left" : "if (isRangeGridlinesVisible())",
      "right" : "if (isRangeGridlinesVisible())",
      "info" : "IfStatement[115322-116167]:IfStatement[115462-116307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115353-116167]:Block[115493-116307]"
    }, {
      "left" : "Stroke gridStroke = getRangeGridlineStroke();",
      "right" : "Stroke gridStroke = getRangeGridlineStroke();",
      "info" : "VariableDeclarationStatement[115368-115413]:VariableDeclarationStatement[115508-115553]"
    }, {
      "left" : "Paint gridPaint = getRangeGridlinePaint();",
      "right" : "Paint gridPaint = getRangeGridlinePaint();",
      "info" : "VariableDeclarationStatement[115427-115469]:VariableDeclarationStatement[115567-115609]"
    }, {
      "left" : "if ((gridStroke != null) && (gridPaint != null))",
      "right" : "if ((gridStroke != null) && (gridPaint != null))",
      "info" : "IfStatement[115483-116156]:IfStatement[115623-116296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115532-116156]:Block[115672-116296]"
    }, {
      "left" : "ValueAxis axis = getRangeAxis();",
      "right" : "ValueAxis axis = getRangeAxis();",
      "info" : "VariableDeclarationStatement[115551-115583]:VariableDeclarationStatement[115691-115723]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[115601-116141]:IfStatement[115741-116281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115619-116141]:Block[115759-116281]"
    }, {
      "left" : "Iterator iterator = ticks.iterator();",
      "right" : "Iterator iterator = ticks.iterator();",
      "info" : "VariableDeclarationStatement[115642-115679]:VariableDeclarationStatement[115782-115819]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[115701-116122]:WhileStatement[115841-116262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115728-116122]:Block[115868-116262]"
    }, {
      "left" : "ValueTick tick = (ValueTick) iterator.next();",
      "right" : "ValueTick tick = (ValueTick) iterator.next();",
      "info" : "VariableDeclarationStatement[115755-115800]:VariableDeclarationStatement[115895-115940]"
    }, {
      "left" : "CategoryItemRenderer renderer1 = getRenderer();",
      "right" : "CategoryItemRenderer renderer1 = getRenderer();",
      "info" : "VariableDeclarationStatement[115826-115873]:VariableDeclarationStatement[115966-116013]"
    }, {
      "left" : "if (renderer1 != null)",
      "right" : "if (renderer1 != null)",
      "info" : "IfStatement[115899-116099]:IfStatement[116039-116239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115922-116099]:Block[116062-116239]"
    }, {
      "left" : "renderer1.drawRangeGridline(g2, this, \r\n                                    getRangeAxis(), dataArea, tick.getValue());",
      "right" : "renderer1.drawRangeGridline(g2, this, \r\n                                    getRangeAxis(), dataArea, tick.getValue());",
      "info" : "ExpressionStatement[115953-116072]:ExpressionStatement[116093-116212]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[116395-116404]:Modifier[116535-116544]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[116405-116409]:PrimitiveType[116545-116549]"
    }, {
      "left" : "drawAnnotations",
      "right" : "drawAnnotations",
      "info" : "SimpleName[116410-116425]:SimpleName[116550-116565]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[116426-116439]:SingleVariableDeclaration[116566-116579]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[116441-116461]:SingleVariableDeclaration[116581-116601]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[116476-116498]:SingleVariableDeclaration[116616-116638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116500-116838]:Block[116640-116978]"
    }, {
      "left" : "Iterator iterator = getAnnotations().iterator();",
      "right" : "Iterator iterator = getAnnotations().iterator();",
      "info" : "VariableDeclarationStatement[116513-116561]:VariableDeclarationStatement[116653-116701]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[116571-116829]:WhileStatement[116711-116969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116598-116829]:Block[116738-116969]"
    }, {
      "left" : "CategoryAnnotation annotation \r\n                    = (CategoryAnnotation) iterator.next();",
      "right" : "CategoryAnnotation annotation \r\n                    = (CategoryAnnotation) iterator.next();",
      "info" : "VariableDeclarationStatement[116613-116704]:VariableDeclarationStatement[116753-116844]"
    }, {
      "left" : "annotation.draw(g2, this, dataArea, getDomainAxis(), \r\n                    getRangeAxis(), 0, info);",
      "right" : "annotation.draw(g2, this, dataArea, getDomainAxis(), \r\n                    getRangeAxis(), 0, info);",
      "info" : "ExpressionStatement[116718-116818]:ExpressionStatement[116858-116958]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[117269-117278]:Modifier[117409-117418]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[117279-117283]:PrimitiveType[117419-117423]"
    }, {
      "left" : "drawDomainMarkers",
      "right" : "drawDomainMarkers",
      "info" : "SimpleName[117284-117301]:SimpleName[117424-117441]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[117302-117315]:SingleVariableDeclaration[117442-117455]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[117317-117337]:SingleVariableDeclaration[117457-117477]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[117378-117387]:SingleVariableDeclaration[117518-117527]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[117389-117400]:SingleVariableDeclaration[117529-117540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117402-118031]:Block[117542-118171]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(index);",
      "right" : "CategoryItemRenderer r = getRenderer(index);",
      "info" : "VariableDeclarationStatement[117464-117508]:VariableDeclarationStatement[117604-117648]"
    }, {
      "left" : "if (r == null)",
      "right" : "if (r == null)",
      "info" : "IfStatement[117518-117566]:IfStatement[117658-117706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117533-117566]:Block[117673-117706]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[117548-117555]:ReturnStatement[117688-117695]"
    }, {
      "left" : "Collection markers = getDomainMarkers(index, layer);",
      "right" : "Collection markers = getDomainMarkers(index, layer);",
      "info" : "VariableDeclarationStatement[117586-117638]:VariableDeclarationStatement[117726-117778]"
    }, {
      "left" : "CategoryAxis axis = getDomainAxisForDataset(index);",
      "right" : "CategoryAxis axis = getDomainAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[117648-117699]:VariableDeclarationStatement[117788-117839]"
    }, {
      "left" : "if (markers != null && axis != null)",
      "right" : "if (markers != null && axis != null)",
      "info" : "IfStatement[117709-118014]:IfStatement[117849-118154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117746-118014]:Block[117886-118154]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[117761-117800]:VariableDeclarationStatement[117901-117940]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[117814-118003]:WhileStatement[117954-118143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117841-118003]:Block[117981-118143]"
    }, {
      "left" : "CategoryMarker marker = (CategoryMarker) iterator.next();",
      "right" : "CategoryMarker marker = (CategoryMarker) iterator.next();",
      "info" : "VariableDeclarationStatement[117860-117917]:VariableDeclarationStatement[118000-118057]"
    }, {
      "left" : "r.drawDomainMarker(g2, this, axis, marker, dataArea);",
      "right" : "r.drawDomainMarker(g2, this, axis, marker, dataArea);",
      "info" : "ExpressionStatement[117935-117988]:ExpressionStatement[118075-118128]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[118462-118471]:Modifier[118602-118611]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[118472-118476]:PrimitiveType[118612-118616]"
    }, {
      "left" : "drawRangeMarkers",
      "right" : "drawRangeMarkers",
      "info" : "SimpleName[118477-118493]:SimpleName[118617-118633]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[118494-118507]:SingleVariableDeclaration[118634-118647]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[118509-118529]:SingleVariableDeclaration[118649-118669]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[118569-118578]:SingleVariableDeclaration[118709-118718]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[118580-118591]:SingleVariableDeclaration[118720-118731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118593-119200]:Block[118733-119340]"
    }, {
      "left" : "CategoryItemRenderer r = getRenderer(index);",
      "right" : "CategoryItemRenderer r = getRenderer(index);",
      "info" : "VariableDeclarationStatement[118655-118699]:VariableDeclarationStatement[118795-118839]"
    }, {
      "left" : "if (r == null)",
      "right" : "if (r == null)",
      "info" : "IfStatement[118709-118757]:IfStatement[118849-118897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118724-118757]:Block[118864-118897]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[118739-118746]:ReturnStatement[118879-118886]"
    }, {
      "left" : "Collection markers = getRangeMarkers(index, layer);",
      "right" : "Collection markers = getRangeMarkers(index, layer);",
      "info" : "VariableDeclarationStatement[118777-118828]:VariableDeclarationStatement[118917-118968]"
    }, {
      "left" : "ValueAxis axis = getRangeAxisForDataset(index);",
      "right" : "ValueAxis axis = getRangeAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[118838-118885]:VariableDeclarationStatement[118978-119025]"
    }, {
      "left" : "if (markers != null && axis != null)",
      "right" : "if (markers != null && axis != null)",
      "info" : "IfStatement[118895-119183]:IfStatement[119035-119323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118932-119183]:Block[119072-119323]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[118947-118986]:VariableDeclarationStatement[119087-119126]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[119000-119172]:WhileStatement[119140-119312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119027-119172]:Block[119167-119312]"
    }, {
      "left" : "Marker marker = (Marker) iterator.next();",
      "right" : "Marker marker = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[119046-119087]:VariableDeclarationStatement[119186-119227]"
    }, {
      "left" : "r.drawRangeMarker(g2, this, axis, marker, dataArea);",
      "right" : "r.drawRangeMarker(g2, this, axis, marker, dataArea);",
      "info" : "ExpressionStatement[119105-119157]:ExpressionStatement[119245-119297]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[119618-119627]:Modifier[119758-119767]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[119628-119632]:PrimitiveType[119768-119772]"
    }, {
      "left" : "drawRangeLine",
      "right" : "drawRangeLine",
      "info" : "SimpleName[119633-119646]:SimpleName[119773-119786]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[119647-119660]:SingleVariableDeclaration[119787-119800]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[119662-119682]:SingleVariableDeclaration[119802-119822]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[119697-119709]:SingleVariableDeclaration[119837-119849]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[119711-119724]:SingleVariableDeclaration[119851-119864]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[119726-119737]:SingleVariableDeclaration[119866-119877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119739-120359]:Block[119879-120499]"
    }, {
      "left" : "double java2D = getRangeAxis().valueToJava2D(value, dataArea, \r\n                getRangeAxisEdge());",
      "right" : "double java2D = getRangeAxis().valueToJava2D(value, dataArea, \r\n                getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[119752-119852]:VariableDeclarationStatement[119892-119992]"
    }, {
      "left" : "Line2D line = null;",
      "right" : "Line2D line = null;",
      "info" : "VariableDeclarationStatement[119862-119881]:VariableDeclarationStatement[120002-120021]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[119891-120266]:IfStatement[120031-120406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119943-120072]:Block[120083-120212]"
    }, {
      "left" : "line = new Line2D.Double(java2D, dataArea.getMinY(), java2D, \r\n                    dataArea.getMaxY());",
      "right" : "line = new Line2D.Double(java2D, dataArea.getMinY(), java2D, \r\n                    dataArea.getMaxY());",
      "info" : "ExpressionStatement[119958-120061]:ExpressionStatement[120098-120201]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[120087-120266]:IfStatement[120227-120406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120137-120266]:Block[120277-120406]"
    }, {
      "left" : "line = new Line2D.Double(dataArea.getMinX(), java2D, \r\n                    dataArea.getMaxX(), java2D);",
      "right" : "line = new Line2D.Double(dataArea.getMinX(), java2D, \r\n                    dataArea.getMaxX(), java2D);",
      "info" : "ExpressionStatement[120152-120255]:ExpressionStatement[120292-120395]"
    }, {
      "left" : "g2.setStroke(stroke);",
      "right" : "g2.setStroke(stroke);",
      "info" : "ExpressionStatement[120276-120297]:ExpressionStatement[120416-120437]"
    }, {
      "left" : "g2.setPaint(paint);",
      "right" : "g2.setPaint(paint);",
      "info" : "ExpressionStatement[120307-120326]:ExpressionStatement[120447-120466]"
    }, {
      "left" : "g2.draw(line);",
      "right" : "g2.draw(line);",
      "info" : "ExpressionStatement[120336-120350]:ExpressionStatement[120476-120490]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[120829-120838]:Modifier[120969-120978]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[120839-120843]:PrimitiveType[120979-120983]"
    }, {
      "left" : "drawRangeCrosshair",
      "right" : "drawRangeCrosshair",
      "info" : "SimpleName[120844-120862]:SimpleName[120984-121002]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[120863-120876]:SingleVariableDeclaration[121003-121016]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[120878-120898]:SingleVariableDeclaration[121018-121038]"
    }, {
      "left" : "PlotOrientation orientation",
      "right" : "PlotOrientation orientation",
      "info" : "SingleVariableDeclaration[120914-120941]:SingleVariableDeclaration[121054-121081]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[120943-120955]:SingleVariableDeclaration[121083-121095]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[120957-120971]:SingleVariableDeclaration[121097-121111]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[120987-121000]:SingleVariableDeclaration[121127-121140]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[121002-121013]:SingleVariableDeclaration[121142-121153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121015-121760]:Block[121155-121900]"
    }, {
      "left" : "if (!axis.getRange().contains(value))",
      "right" : "if (!axis.getRange().contains(value))",
      "info" : "IfStatement[121036-121107]:IfStatement[121176-121247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121074-121107]:Block[121214-121247]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[121089-121096]:ReturnStatement[121229-121236]"
    }, {
      "left" : "Line2D line = null;",
      "right" : "Line2D line = null;",
      "info" : "VariableDeclarationStatement[121117-121136]:VariableDeclarationStatement[121257-121276]"
    }, {
      "left" : "if (orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[121146-121660]:IfStatement[121286-121800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121193-121420]:Block[121333-121560]"
    }, {
      "left" : "double xx = axis.valueToJava2D(value, dataArea, \r\n                    RectangleEdge.BOTTOM);",
      "right" : "double xx = axis.valueToJava2D(value, dataArea, \r\n                    RectangleEdge.BOTTOM);",
      "info" : "VariableDeclarationStatement[121208-121300]:VariableDeclarationStatement[121348-121440]"
    }, {
      "left" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx, \r\n                    dataArea.getMaxY());",
      "right" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx, \r\n                    dataArea.getMaxY());",
      "info" : "ExpressionStatement[121314-121409]:ExpressionStatement[121454-121549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121435-121660]:Block[121575-121800]"
    }, {
      "left" : "double yy = axis.valueToJava2D(value, dataArea, \r\n                    RectangleEdge.LEFT);",
      "right" : "double yy = axis.valueToJava2D(value, dataArea, \r\n                    RectangleEdge.LEFT);",
      "info" : "VariableDeclarationStatement[121450-121540]:VariableDeclarationStatement[121590-121680]"
    }, {
      "left" : "line = new Line2D.Double(dataArea.getMinX(), yy, \r\n                    dataArea.getMaxX(), yy);",
      "right" : "line = new Line2D.Double(dataArea.getMinX(), yy, \r\n                    dataArea.getMaxX(), yy);",
      "info" : "ExpressionStatement[121554-121649]:ExpressionStatement[121694-121789]"
    }, {
      "left" : "g2.setStroke(stroke);",
      "right" : "g2.setStroke(stroke);",
      "info" : "ExpressionStatement[121670-121691]:ExpressionStatement[121810-121831]"
    }, {
      "left" : "g2.setPaint(paint);",
      "right" : "g2.setPaint(paint);",
      "info" : "ExpressionStatement[121701-121720]:ExpressionStatement[121841-121860]"
    }, {
      "left" : "g2.draw(line);",
      "right" : "g2.draw(line);",
      "info" : "ExpressionStatement[121730-121744]:ExpressionStatement[121870-121884]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[122050-122056]:Modifier[122190-122196]"
    }, {
      "left" : "Range",
      "right" : "Range",
      "info" : "SimpleType[122057-122062]:SimpleType[122197-122202]"
    }, {
      "left" : "getDataRange",
      "right" : "getDataRange",
      "info" : "SimpleName[122063-122075]:SimpleName[122203-122215]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[122076-122090]:SingleVariableDeclaration[122216-122230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122092-122974]:Block[122232-123114]"
    }, {
      "left" : "Range result = null;",
      "right" : "Range result = null;",
      "info" : "VariableDeclarationStatement[122105-122125]:VariableDeclarationStatement[122245-122265]"
    }, {
      "left" : "List mappedDatasets = new ArrayList();",
      "right" : "List mappedDatasets = new ArrayList();",
      "info" : "VariableDeclarationStatement[122135-122173]:VariableDeclarationStatement[122275-122313]"
    }, {
      "left" : "int rangeIndex = this.rangeAxes.indexOf(axis);",
      "right" : "int rangeIndex = this.rangeAxes.indexOf(axis);",
      "info" : "VariableDeclarationStatement[122193-122239]:VariableDeclarationStatement[122333-122379]"
    }, {
      "left" : "if (rangeIndex >= 0)",
      "right" : "if (rangeIndex >= 0)",
      "info" : "IfStatement[122249-122478]:IfStatement[122389-122618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122270-122357]:Block[122410-122497]"
    }, {
      "left" : "mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));",
      "right" : "mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));",
      "info" : "ExpressionStatement[122285-122346]:ExpressionStatement[122425-122486]"
    }, {
      "left" : "if (axis == getRangeAxis())",
      "right" : "if (axis == getRangeAxis())",
      "info" : "IfStatement[122372-122478]:IfStatement[122512-122618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122400-122478]:Block[122540-122618]"
    }, {
      "left" : "mappedDatasets.addAll(datasetsMappedToRangeAxis(0));",
      "right" : "mappedDatasets.addAll(datasetsMappedToRangeAxis(0));",
      "info" : "ExpressionStatement[122415-122467]:ExpressionStatement[122555-122607]"
    }, {
      "left" : "Iterator iterator = mappedDatasets.iterator();",
      "right" : "Iterator iterator = mappedDatasets.iterator();",
      "info" : "VariableDeclarationStatement[122598-122644]:VariableDeclarationStatement[122738-122784]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[122654-122941]:WhileStatement[122794-123081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122681-122941]:Block[122821-123081]"
    }, {
      "left" : "CategoryDataset d = (CategoryDataset) iterator.next();",
      "right" : "CategoryDataset d = (CategoryDataset) iterator.next();",
      "info" : "VariableDeclarationStatement[122696-122750]:VariableDeclarationStatement[122836-122890]"
    }, {
      "left" : "CategoryItemRenderer r = getRendererForDataset(d);",
      "right" : "CategoryItemRenderer r = getRendererForDataset(d);",
      "info" : "VariableDeclarationStatement[122764-122814]:VariableDeclarationStatement[122904-122954]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[122828-122930]:IfStatement[122968-123070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122843-122930]:Block[122983-123070]"
    }, {
      "left" : "result = Range.combine(result, r.findRangeBounds(d));",
      "right" : "result = Range.combine(result, r.findRangeBounds(d));",
      "info" : "ExpressionStatement[122862-122915]:ExpressionStatement[123002-123055]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[122951-122965]:ReturnStatement[123091-123105]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[123263-123270]:Modifier[123403-123410]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[123271-123275]:SimpleType[123411-123415]"
    }, {
      "left" : "datasetsMappedToDomainAxis",
      "right" : "datasetsMappedToDomainAxis",
      "info" : "SimpleName[123276-123302]:SimpleName[123416-123442]"
    }, {
      "left" : "int axisIndex",
      "right" : "int axisIndex",
      "info" : "SingleVariableDeclaration[123303-123316]:SingleVariableDeclaration[123443-123456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123318-124158]:Block[123458-124298]"
    }, {
      "left" : "List result = new ArrayList();",
      "right" : "List result = new ArrayList();",
      "info" : "VariableDeclarationStatement[123329-123359]:VariableDeclarationStatement[123469-123499]"
    }, {
      "left" : "for (int datasetIndex = 0; datasetIndex < this.datasets.size(); \r\n                datasetIndex++)",
      "right" : "for (int datasetIndex = 0; datasetIndex < this.datasets.size(); \r\n                datasetIndex++)",
      "info" : "ForStatement[123369-124127]:ForStatement[123509-124267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123467-124127]:Block[123607-124267]"
    }, {
      "left" : "Object dataset = this.datasets.get(datasetIndex);",
      "right" : "Object dataset = this.datasets.get(datasetIndex);",
      "info" : "VariableDeclarationStatement[123482-123531]:VariableDeclarationStatement[123622-123671]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[123545-124116]:IfStatement[123685-124256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123566-124116]:Block[123706-124256]"
    }, {
      "left" : "Integer m = (Integer) this.datasetToDomainAxisMap.get(\r\n                        datasetIndex);",
      "right" : "Integer m = (Integer) this.datasetToDomainAxisMap.get(\r\n                        datasetIndex);",
      "info" : "VariableDeclarationStatement[123585-123679]:VariableDeclarationStatement[123725-123819]"
    }, {
      "left" : "if (m == null)",
      "right" : "if (m == null)",
      "info" : "IfStatement[123697-124101]:IfStatement[123837-124241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123712-123935]:Block[123852-124075]"
    }, {
      "left" : "if (axisIndex == 0)",
      "right" : "if (axisIndex == 0)",
      "info" : "IfStatement[123826-123916]:IfStatement[123966-124056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123846-123916]:Block[123986-124056]"
    }, {
      "left" : "result.add(dataset);",
      "right" : "result.add(dataset);",
      "info" : "ExpressionStatement[123873-123893]:ExpressionStatement[124013-124033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123958-124101]:Block[124098-124241]"
    }, {
      "left" : "if (m.intValue() == axisIndex)",
      "right" : "if (m.intValue() == axisIndex)",
      "info" : "IfStatement[123981-124082]:IfStatement[124121-124222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124012-124082]:Block[124152-124222]"
    }, {
      "left" : "result.add(dataset);",
      "right" : "result.add(dataset);",
      "info" : "ExpressionStatement[124039-124059]:ExpressionStatement[124179-124199]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[124137-124151]:ReturnStatement[124277-124291]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[124385-124392]:Modifier[124525-124532]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[124393-124397]:SimpleType[124533-124537]"
    }, {
      "left" : "datasetsMappedToRangeAxis",
      "right" : "datasetsMappedToRangeAxis",
      "info" : "SimpleName[124398-124423]:SimpleName[124538-124563]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[124424-124433]:SingleVariableDeclaration[124564-124573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124435-125172]:Block[124575-125312]"
    }, {
      "left" : "List result = new ArrayList();",
      "right" : "List result = new ArrayList();",
      "info" : "VariableDeclarationStatement[124446-124476]:VariableDeclarationStatement[124586-124616]"
    }, {
      "left" : "for (int i = 0; i < this.datasets.size(); i++)",
      "right" : "for (int i = 0; i < this.datasets.size(); i++)",
      "info" : "ForStatement[124486-125137]:ForStatement[124626-125277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124533-125137]:Block[124673-125277]"
    }, {
      "left" : "Object dataset = this.datasets.get(i);",
      "right" : "Object dataset = this.datasets.get(i);",
      "info" : "VariableDeclarationStatement[124548-124586]:VariableDeclarationStatement[124688-124726]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[124600-125126]:IfStatement[124740-125266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124621-125126]:Block[124761-125266]"
    }, {
      "left" : "Integer m = (Integer) this.datasetToRangeAxisMap.get(i);",
      "right" : "Integer m = (Integer) this.datasetToRangeAxisMap.get(i);",
      "info" : "VariableDeclarationStatement[124640-124696]:VariableDeclarationStatement[124780-124836]"
    }, {
      "left" : "if (m == null)",
      "right" : "if (m == null)",
      "info" : "IfStatement[124714-125111]:IfStatement[124854-125251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124729-124949]:Block[124869-125089]"
    }, {
      "left" : "if (index == 0)",
      "right" : "if (index == 0)",
      "info" : "IfStatement[124843-124930]:IfStatement[124983-125070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124859-124930]:Block[124999-125070]"
    }, {
      "left" : "result.add(dataset);",
      "right" : "result.add(dataset);",
      "info" : "ExpressionStatement[124887-124907]:ExpressionStatement[125027-125047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124972-125111]:Block[125112-125251]"
    }, {
      "left" : "if (m.intValue() == index)",
      "right" : "if (m.intValue() == index)",
      "info" : "IfStatement[124995-125092]:IfStatement[125135-125232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125022-125092]:Block[125162-125232]"
    }, {
      "left" : "result.add(dataset);",
      "right" : "result.add(dataset);",
      "info" : "ExpressionStatement[125049-125069]:ExpressionStatement[125189-125209]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[125147-125161]:ReturnStatement[125287-125301]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[125375-125381]:Modifier[125515-125521]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[125382-125385]:PrimitiveType[125522-125525]"
    }, {
      "left" : "getWeight",
      "right" : "getWeight",
      "info" : "SimpleName[125386-125395]:SimpleName[125526-125535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125398-125435]:Block[125538-125575]"
    }, {
      "left" : "return this.weight;",
      "right" : "return this.weight;",
      "info" : "ReturnStatement[125409-125428]:ReturnStatement[125549-125568]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[125649-125655]:Modifier[125789-125795]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[125656-125660]:PrimitiveType[125796-125800]"
    }, {
      "left" : "setWeight",
      "right" : "setWeight",
      "info" : "SimpleName[125661-125670]:SimpleName[125801-125810]"
    }, {
      "left" : "int weight",
      "right" : "int weight",
      "info" : "SingleVariableDeclaration[125671-125681]:SingleVariableDeclaration[125811-125821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125683-125750]:Block[125823-125890]"
    }, {
      "left" : "this.weight = weight;",
      "right" : "this.weight = weight;",
      "info" : "ExpressionStatement[125694-125715]:ExpressionStatement[125834-125855]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[125725-125743]:ExpressionStatement[125865-125883]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[125965-125971]:Modifier[126105-126111]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[125972-125981]:SimpleType[126112-126121]"
    }, {
      "left" : "getFixedDomainAxisSpace",
      "right" : "getFixedDomainAxisSpace",
      "info" : "SimpleName[125982-126005]:SimpleName[126122-126145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126008-126059]:Block[126148-126199]"
    }, {
      "left" : "return this.fixedDomainAxisSpace;",
      "right" : "return this.fixedDomainAxisSpace;",
      "info" : "ReturnStatement[126019-126052]:ReturnStatement[126159-126192]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[126319-126325]:Modifier[126459-126465]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[126326-126330]:PrimitiveType[126466-126470]"
    }, {
      "left" : "setFixedDomainAxisSpace",
      "right" : "setFixedDomainAxisSpace",
      "info" : "SimpleName[126331-126354]:SimpleName[126471-126494]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[126355-126370]:SingleVariableDeclaration[126495-126510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126372-126427]:Block[126512-126567]"
    }, {
      "left" : "setFixedDomainAxisSpace(space, true);",
      "right" : "setFixedDomainAxisSpace(space, true);",
      "info" : "ExpressionStatement[126383-126420]:ExpressionStatement[126523-126560]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[126758-126764]:Modifier[126898-126904]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[126765-126769]:PrimitiveType[126905-126909]"
    }, {
      "left" : "setFixedDomainAxisSpace",
      "right" : "setFixedDomainAxisSpace",
      "info" : "SimpleName[126770-126793]:SimpleName[126910-126933]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[126794-126809]:SingleVariableDeclaration[126934-126949]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[126811-126825]:SingleVariableDeclaration[126951-126965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126827-126945]:Block[126967-127085]"
    }, {
      "left" : "this.fixedDomainAxisSpace = space;",
      "right" : "this.fixedDomainAxisSpace = space;",
      "info" : "ExpressionStatement[126838-126872]:ExpressionStatement[126978-127012]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[126882-126938]:IfStatement[127022-127078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126894-126938]:Block[127034-127078]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[126909-126927]:ExpressionStatement[127049-127067]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[127153-127159]:Modifier[127293-127299]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[127160-127169]:SimpleType[127300-127309]"
    }, {
      "left" : "getFixedRangeAxisSpace",
      "right" : "getFixedRangeAxisSpace",
      "info" : "SimpleName[127170-127192]:SimpleName[127310-127332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127195-127245]:Block[127335-127385]"
    }, {
      "left" : "return this.fixedRangeAxisSpace;",
      "right" : "return this.fixedRangeAxisSpace;",
      "info" : "ReturnStatement[127206-127238]:ReturnStatement[127346-127378]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[127504-127510]:Modifier[127644-127650]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[127511-127515]:PrimitiveType[127651-127655]"
    }, {
      "left" : "setFixedRangeAxisSpace",
      "right" : "setFixedRangeAxisSpace",
      "info" : "SimpleName[127516-127538]:SimpleName[127656-127678]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[127539-127554]:SingleVariableDeclaration[127679-127694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127556-127610]:Block[127696-127750]"
    }, {
      "left" : "setFixedRangeAxisSpace(space, true);",
      "right" : "setFixedRangeAxisSpace(space, true);",
      "info" : "ExpressionStatement[127567-127603]:ExpressionStatement[127707-127743]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[127939-127945]:Modifier[128079-128085]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[127946-127950]:PrimitiveType[128086-128090]"
    }, {
      "left" : "setFixedRangeAxisSpace",
      "right" : "setFixedRangeAxisSpace",
      "info" : "SimpleName[127951-127973]:SimpleName[128091-128113]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[127974-127989]:SingleVariableDeclaration[128114-128129]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[127991-128005]:SingleVariableDeclaration[128131-128145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128007-128124]:Block[128147-128264]"
    }, {
      "left" : "this.fixedRangeAxisSpace = space;",
      "right" : "this.fixedRangeAxisSpace = space;",
      "info" : "ExpressionStatement[128018-128051]:ExpressionStatement[128158-128191]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[128061-128117]:IfStatement[128201-128257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128073-128117]:Block[128213-128257]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[128088-128106]:ExpressionStatement[128228-128246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[128361-128367]:Modifier[128501-128507]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[128368-128372]:SimpleType[128508-128512]"
    }, {
      "left" : "getCategories",
      "right" : "getCategories",
      "info" : "SimpleName[128373-128386]:SimpleName[128513-128526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128389-128580]:Block[128529-128720]"
    }, {
      "left" : "List result = null;",
      "right" : "List result = null;",
      "info" : "VariableDeclarationStatement[128400-128419]:VariableDeclarationStatement[128540-128559]"
    }, {
      "left" : "if (getDataset() != null)",
      "right" : "if (getDataset() != null)",
      "info" : "IfStatement[128429-128549]:IfStatement[128569-128689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128455-128549]:Block[128595-128689]"
    }, {
      "left" : "result = Collections.unmodifiableList(getDataset().getColumnKeys());",
      "right" : "result = Collections.unmodifiableList(getDataset().getColumnKeys());",
      "info" : "ExpressionStatement[128470-128538]:ExpressionStatement[128610-128678]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[128559-128573]:ReturnStatement[128699-128713]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[128852-128858]:Modifier[128992-128998]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[128859-128863]:SimpleType[128999-129003]"
    }, {
      "left" : "getCategoriesForAxis",
      "right" : "getCategoriesForAxis",
      "info" : "SimpleName[128864-128884]:SimpleName[129004-129024]"
    }, {
      "left" : "CategoryAxis axis",
      "right" : "CategoryAxis axis",
      "info" : "SingleVariableDeclaration[128885-128902]:SingleVariableDeclaration[129025-129042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128904-129587]:Block[129044-129727]"
    }, {
      "left" : "List result = new ArrayList();",
      "right" : "List result = new ArrayList();",
      "info" : "VariableDeclarationStatement[128915-128945]:VariableDeclarationStatement[129055-129085]"
    }, {
      "left" : "int axisIndex = this.domainAxes.indexOf(axis);",
      "right" : "int axisIndex = this.domainAxes.indexOf(axis);",
      "info" : "VariableDeclarationStatement[128955-129001]:VariableDeclarationStatement[129095-129141]"
    }, {
      "left" : "List datasets = datasetsMappedToDomainAxis(axisIndex);",
      "right" : "List datasets = datasetsMappedToDomainAxis(axisIndex);",
      "info" : "VariableDeclarationStatement[129011-129065]:VariableDeclarationStatement[129151-129205]"
    }, {
      "left" : "Iterator iterator = datasets.iterator();",
      "right" : "Iterator iterator = datasets.iterator();",
      "info" : "VariableDeclarationStatement[129075-129115]:VariableDeclarationStatement[129215-129255]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[129125-129556]:WhileStatement[129265-129696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129152-129556]:Block[129292-129696]"
    }, {
      "left" : "CategoryDataset dataset = (CategoryDataset) iterator.next();",
      "right" : "CategoryDataset dataset = (CategoryDataset) iterator.next();",
      "info" : "VariableDeclarationStatement[129167-129227]:VariableDeclarationStatement[129307-129367]"
    }, {
      "left" : "for (int i = 0; i < dataset.getColumnCount(); i++)",
      "right" : "for (int i = 0; i < dataset.getColumnCount(); i++)",
      "info" : "ForStatement[129301-129545]:ForStatement[129441-129685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129352-129545]:Block[129492-129685]"
    }, {
      "left" : "Comparable category = dataset.getColumnKey(i);",
      "right" : "Comparable category = dataset.getColumnKey(i);",
      "info" : "VariableDeclarationStatement[129371-129417]:VariableDeclarationStatement[129511-129557]"
    }, {
      "left" : "if (!result.contains(category))",
      "right" : "if (!result.contains(category))",
      "info" : "IfStatement[129435-129530]:IfStatement[129575-129670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129467-129530]:Block[129607-129670]"
    }, {
      "left" : "result.add(category);",
      "right" : "result.add(category);",
      "info" : "ExpressionStatement[129490-129511]:ExpressionStatement[129630-129651]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[129566-129580]:ReturnStatement[129706-129720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[129818-129824]:Modifier[129958-129964]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[129825-129832]:PrimitiveType[129965-129972]"
    }, {
      "left" : "getDrawSharedDomainAxis",
      "right" : "getDrawSharedDomainAxis",
      "info" : "SimpleName[129833-129856]:SimpleName[129973-129996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129859-129910]:Block[129999-130050]"
    }, {
      "left" : "return this.drawSharedDomainAxis;",
      "right" : "return this.drawSharedDomainAxis;",
      "info" : "ReturnStatement[129870-129903]:ReturnStatement[130010-130043]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[130157-130163]:Modifier[130297-130303]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[130164-130168]:PrimitiveType[130304-130308]"
    }, {
      "left" : "setDrawSharedDomainAxis",
      "right" : "setDrawSharedDomainAxis",
      "info" : "SimpleName[130169-130192]:SimpleName[130309-130332]"
    }, {
      "left" : "boolean draw",
      "right" : "boolean draw",
      "info" : "SingleVariableDeclaration[130193-130205]:SingleVariableDeclaration[130333-130345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130207-130286]:Block[130347-130426]"
    }, {
      "left" : "this.drawSharedDomainAxis = draw;",
      "right" : "this.drawSharedDomainAxis = draw;",
      "info" : "ExpressionStatement[130218-130251]:ExpressionStatement[130358-130391]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[130261-130279]:ExpressionStatement[130401-130419]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[130483-130489]:Modifier[130623-130629]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[130490-130497]:PrimitiveType[130630-130637]"
    }, {
      "left" : "isDomainZoomable",
      "right" : "isDomainZoomable",
      "info" : "SimpleName[130498-130514]:SimpleName[130638-130654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130517-130548]:Block[130657-130688]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[130528-130541]:ReturnStatement[130668-130681]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[130736-130742]:Modifier[130876-130882]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[130743-130750]:PrimitiveType[130883-130890]"
    }, {
      "left" : "isRangeZoomable",
      "right" : "isRangeZoomable",
      "info" : "SimpleName[130751-130766]:SimpleName[130891-130906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130769-130799]:Block[130909-130939]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[130780-130792]:ReturnStatement[130920-130932]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[131099-131105]:Modifier[131239-131245]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[131106-131110]:PrimitiveType[131246-131250]"
    }, {
      "left" : "zoomDomainAxes",
      "right" : "zoomDomainAxes",
      "info" : "SimpleName[131111-131125]:SimpleName[131251-131265]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[131126-131139]:SingleVariableDeclaration[131266-131279]"
    }, {
      "left" : "PlotRenderingInfo state",
      "right" : "PlotRenderingInfo state",
      "info" : "SingleVariableDeclaration[131141-131164]:SingleVariableDeclaration[131281-131304]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[131199-131213]:SingleVariableDeclaration[131339-131353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131215-131258]:Block[131355-131398]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[131611-131617]:Modifier[131751-131757]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[131618-131622]:PrimitiveType[131758-131762]"
    }, {
      "left" : "zoomDomainAxes",
      "right" : "zoomDomainAxes",
      "info" : "SimpleName[131623-131637]:SimpleName[131763-131777]"
    }, {
      "left" : "double lowerPercent",
      "right" : "double lowerPercent",
      "info" : "SingleVariableDeclaration[131638-131657]:SingleVariableDeclaration[131778-131797]"
    }, {
      "left" : "double upperPercent",
      "right" : "double upperPercent",
      "info" : "SingleVariableDeclaration[131659-131678]:SingleVariableDeclaration[131799-131818]"
    }, {
      "left" : "PlotRenderingInfo state",
      "right" : "PlotRenderingInfo state",
      "info" : "SingleVariableDeclaration[131713-131736]:SingleVariableDeclaration[131853-131876]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[131738-131752]:SingleVariableDeclaration[131878-131892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131754-131797]:Block[131894-131937]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[132267-132273]:Modifier[132407-132413]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[132274-132278]:PrimitiveType[132414-132418]"
    }, {
      "left" : "zoomDomainAxes",
      "right" : "zoomDomainAxes",
      "info" : "SimpleName[132279-132293]:SimpleName[132419-132433]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[132294-132307]:SingleVariableDeclaration[132434-132447]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[132309-132331]:SingleVariableDeclaration[132449-132471]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[132365-132379]:SingleVariableDeclaration[132505-132519]"
    }, {
      "left" : "boolean useAnchor",
      "right" : "boolean useAnchor",
      "info" : "SingleVariableDeclaration[132381-132398]:SingleVariableDeclaration[132521-132538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132400-132443]:Block[132540-132583]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[132704-132710]:Modifier[132844-132850]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[132711-132715]:PrimitiveType[132851-132855]"
    }, {
      "left" : "zoomRangeAxes",
      "right" : "zoomRangeAxes",
      "info" : "SimpleName[132716-132729]:SimpleName[132856-132869]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[132730-132743]:SingleVariableDeclaration[132870-132883]"
    }, {
      "left" : "PlotRenderingInfo state",
      "right" : "PlotRenderingInfo state",
      "info" : "SingleVariableDeclaration[132745-132768]:SingleVariableDeclaration[132885-132908]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[132802-132816]:SingleVariableDeclaration[132942-132956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132818-132921]:Block[132958-133061]"
    }, {
      "left" : "zoomRangeAxes(factor, state, source, false);",
      "right" : "zoomRangeAxes(factor, state, source, false);",
      "info" : "ExpressionStatement[132866-132910]:ExpressionStatement[133006-133050]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[133396-133402]:Modifier[133536-133542]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[133403-133407]:PrimitiveType[133543-133547]"
    }, {
      "left" : "zoomRangeAxes",
      "right" : "zoomRangeAxes",
      "info" : "SimpleName[133408-133421]:SimpleName[133548-133561]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[133422-133435]:SingleVariableDeclaration[133562-133575]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[133437-133459]:SingleVariableDeclaration[133577-133599]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[133492-133506]:SingleVariableDeclaration[133632-133646]"
    }, {
      "left" : "boolean useAnchor",
      "right" : "boolean useAnchor",
      "info" : "SingleVariableDeclaration[133508-133525]:SingleVariableDeclaration[133648-133665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133527-134457]:Block[133667-134597]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[133604-134450]:ForStatement[133744-134590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133652-134450]:Block[133792-134590]"
    }, {
      "left" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[133667-133723]:VariableDeclarationStatement[133807-133863]"
    }, {
      "left" : "if (rangeAxis != null)",
      "right" : "if (rangeAxis != null)",
      "info" : "IfStatement[133737-134439]:IfStatement[133877-134579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133760-134439]:Block[133900-134579]"
    }, {
      "left" : "if (useAnchor)",
      "right" : "if (useAnchor)",
      "info" : "IfStatement[133779-134424]:IfStatement[133919-134564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133794-134329]:Block[133934-134469]"
    }, {
      "left" : "double sourceY = source.getY();",
      "right" : "double sourceY = source.getY();",
      "info" : "VariableDeclarationStatement[133928-133959]:VariableDeclarationStatement[134068-134099]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[133981-134107]:IfStatement[134121-134247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134033-134107]:Block[134173-134247]"
    }, {
      "left" : "sourceY = source.getX();",
      "right" : "sourceY = source.getX();",
      "info" : "ExpressionStatement[134060-134084]:ExpressionStatement[134200-134224]"
    }, {
      "left" : "double anchorY = rangeAxis.java2DToValue(sourceY, \r\n                            info.getDataArea(), getRangeAxisEdge());",
      "right" : "double anchorY = rangeAxis.java2DToValue(sourceY, \r\n                            info.getDataArea(), getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[134129-134249]:VariableDeclarationStatement[134269-134389]"
    }, {
      "left" : "rangeAxis.resizeRange(factor, anchorY);",
      "right" : "rangeAxis.resizeRange(factor, anchorY);",
      "info" : "ExpressionStatement[134271-134310]:ExpressionStatement[134411-134450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134352-134424]:Block[134492-134564]"
    }, {
      "left" : "rangeAxis.resizeRange(factor);",
      "right" : "rangeAxis.resizeRange(factor);",
      "info" : "ExpressionStatement[134375-134405]:ExpressionStatement[134515-134545]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[134730-134736]:Modifier[134870-134876]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[134737-134741]:PrimitiveType[134877-134881]"
    }, {
      "left" : "zoomRangeAxes",
      "right" : "zoomRangeAxes",
      "info" : "SimpleName[134742-134755]:SimpleName[134882-134895]"
    }, {
      "left" : "double lowerPercent",
      "right" : "double lowerPercent",
      "info" : "SingleVariableDeclaration[134756-134775]:SingleVariableDeclaration[134896-134915]"
    }, {
      "left" : "double upperPercent",
      "right" : "double upperPercent",
      "info" : "SingleVariableDeclaration[134777-134796]:SingleVariableDeclaration[134917-134936]"
    }, {
      "left" : "PlotRenderingInfo state",
      "right" : "PlotRenderingInfo state",
      "info" : "SingleVariableDeclaration[134830-134853]:SingleVariableDeclaration[134970-134993]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[134855-134869]:SingleVariableDeclaration[134995-135009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134871-135138]:Block[135011-135278]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[134882-135131]:ForStatement[135022-135271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134930-135131]:Block[135070-135271]"
    }, {
      "left" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[134945-135001]:VariableDeclarationStatement[135085-135141]"
    }, {
      "left" : "if (rangeAxis != null)",
      "right" : "if (rangeAxis != null)",
      "info" : "IfStatement[135015-135120]:IfStatement[135155-135260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135038-135120]:Block[135178-135260]"
    }, {
      "left" : "rangeAxis.zoomRange(lowerPercent, upperPercent);",
      "right" : "rangeAxis.zoomRange(lowerPercent, upperPercent);",
      "info" : "ExpressionStatement[135057-135105]:ExpressionStatement[135197-135245]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[135291-135297]:Modifier[135431-135437]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[135298-135304]:PrimitiveType[135438-135444]"
    }, {
      "left" : "getAnchorValue",
      "right" : "getAnchorValue",
      "info" : "SimpleName[135305-135319]:SimpleName[135445-135459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135322-135364]:Block[135462-135504]"
    }, {
      "left" : "return this.anchorValue;",
      "right" : "return this.anchorValue;",
      "info" : "ReturnStatement[135333-135357]:ReturnStatement[135473-135497]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[135583-135589]:Modifier[135723-135729]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[135590-135594]:PrimitiveType[135730-135734]"
    }, {
      "left" : "setAnchorValue",
      "right" : "setAnchorValue",
      "info" : "SimpleName[135595-135609]:SimpleName[135735-135749]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[135610-135622]:SingleVariableDeclaration[135750-135762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135624-135670]:Block[135764-135810]"
    }, {
      "left" : "setAnchorValue(value, true);",
      "right" : "setAnchorValue(value, true);",
      "info" : "ExpressionStatement[135635-135663]:ExpressionStatement[135775-135803]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[135937-135943]:Modifier[136077-136083]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[135944-135948]:PrimitiveType[136084-136088]"
    }, {
      "left" : "setAnchorValue",
      "right" : "setAnchorValue",
      "info" : "SimpleName[135949-135963]:SimpleName[136089-136103]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[135964-135976]:SingleVariableDeclaration[136104-136116]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[135978-135992]:SingleVariableDeclaration[136118-136132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135994-136103]:Block[136134-136243]"
    }, {
      "left" : "this.anchorValue = value;",
      "right" : "this.anchorValue = value;",
      "info" : "ExpressionStatement[136005-136030]:ExpressionStatement[136145-136170]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[136040-136096]:IfStatement[136180-136236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136052-136096]:Block[136192-136236]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[136067-136085]:ExpressionStatement[136207-136225]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[136319-136325]:Modifier[136459-136465]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[136326-136333]:PrimitiveType[136466-136473]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[136334-136340]:SimpleName[136474-136480]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[136341-136351]:SingleVariableDeclaration[136481-136491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136353-140618]:Block[136493-140758]"
    }, {
      "left" : "if (obj == this)",
      "right" : "if (obj == this)",
      "info" : "IfStatement[136370-136425]:IfStatement[136510-136565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136387-136425]:Block[136527-136565]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[136402-136414]:ReturnStatement[136542-136554]"
    }, {
      "left" : "if (!(obj instanceof CategoryPlot))",
      "right" : "if (!(obj instanceof CategoryPlot))",
      "info" : "IfStatement[136435-136510]:IfStatement[136575-136650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136471-136510]:Block[136611-136650]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[136486-136499]:ReturnStatement[136626-136639]"
    }, {
      "left" : "if (!super.equals(obj))",
      "right" : "if (!super.equals(obj))",
      "info" : "IfStatement[136520-136583]:IfStatement[136660-136723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136544-136583]:Block[136684-136723]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[136559-136572]:ReturnStatement[136699-136712]"
    }, {
      "left" : "CategoryPlot that = (CategoryPlot) obj;",
      "right" : "CategoryPlot that = (CategoryPlot) obj;",
      "info" : "VariableDeclarationStatement[136595-136634]:VariableDeclarationStatement[136735-136774]"
    }, {
      "left" : "if (this.orientation != that.orientation)",
      "right" : "if (this.orientation != that.orientation)",
      "info" : "IfStatement[136658-136739]:IfStatement[136798-136879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136700-136739]:Block[136840-136879]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[136715-136728]:ReturnStatement[136855-136868]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset))",
      "right" : "if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset))",
      "info" : "IfStatement[136749-136850]:IfStatement[136889-136990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136811-136850]:Block[136951-136990]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[136826-136839]:ReturnStatement[136966-136979]"
    }, {
      "left" : "if (!this.domainAxes.equals(that.domainAxes))",
      "right" : "if (!this.domainAxes.equals(that.domainAxes))",
      "info" : "IfStatement[136860-136945]:IfStatement[137000-137085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136906-136945]:Block[137046-137085]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[136921-136934]:ReturnStatement[137061-137074]"
    }, {
      "left" : "if (!this.domainAxisLocations.equals(that.domainAxisLocations))",
      "right" : "if (!this.domainAxisLocations.equals(that.domainAxisLocations))",
      "info" : "IfStatement[136955-137058]:IfStatement[137095-137198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137019-137058]:Block[137159-137198]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[137034-137047]:ReturnStatement[137174-137187]"
    }, {
      "left" : "if (this.drawSharedDomainAxis != that.drawSharedDomainAxis)",
      "right" : "if (this.drawSharedDomainAxis != that.drawSharedDomainAxis)",
      "info" : "IfStatement[137068-137167]:IfStatement[137208-137307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137128-137167]:Block[137268-137307]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[137143-137156]:ReturnStatement[137283-137296]"
    }, {
      "left" : "if (!this.rangeAxes.equals(that.rangeAxes))",
      "right" : "if (!this.rangeAxes.equals(that.rangeAxes))",
      "info" : "IfStatement[137177-137260]:IfStatement[137317-137400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137221-137260]:Block[137361-137400]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[137236-137249]:ReturnStatement[137376-137389]"
    }, {
      "left" : "if (!this.rangeAxisLocations.equals(that.rangeAxisLocations))",
      "right" : "if (!this.rangeAxisLocations.equals(that.rangeAxisLocations))",
      "info" : "IfStatement[137270-137371]:IfStatement[137410-137511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137332-137371]:Block[137472-137511]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[137347-137360]:ReturnStatement[137487-137500]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.datasetToDomainAxisMap, \r\n                that.datasetToDomainAxisMap))",
      "right" : "if (!ObjectUtilities.equal(this.datasetToDomainAxisMap, \r\n                that.datasetToDomainAxisMap))",
      "info" : "IfStatement[137381-137524]:IfStatement[137521-137664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137485-137524]:Block[137625-137664]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[137500-137513]:ReturnStatement[137640-137653]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.datasetToRangeAxisMap, \r\n                that.datasetToRangeAxisMap))",
      "right" : "if (!ObjectUtilities.equal(this.datasetToRangeAxisMap, \r\n                that.datasetToRangeAxisMap))",
      "info" : "IfStatement[137534-137675]:IfStatement[137674-137815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137636-137675]:Block[137776-137815]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[137651-137664]:ReturnStatement[137791-137804]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.renderers, that.renderers))",
      "right" : "if (!ObjectUtilities.equal(this.renderers, that.renderers))",
      "info" : "IfStatement[137685-137784]:IfStatement[137825-137924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137745-137784]:Block[137885-137924]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[137760-137773]:ReturnStatement[137900-137913]"
    }, {
      "left" : "if (this.renderingOrder != that.renderingOrder)",
      "right" : "if (this.renderingOrder != that.renderingOrder)",
      "info" : "IfStatement[137794-137881]:IfStatement[137934-138021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137842-137881]:Block[137982-138021]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[137857-137870]:ReturnStatement[137997-138010]"
    }, {
      "left" : "if (this.columnRenderingOrder != that.columnRenderingOrder)",
      "right" : "if (this.columnRenderingOrder != that.columnRenderingOrder)",
      "info" : "IfStatement[137891-137990]:IfStatement[138031-138130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137951-137990]:Block[138091-138130]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[137966-137979]:ReturnStatement[138106-138119]"
    }, {
      "left" : "if (this.rowRenderingOrder != that.rowRenderingOrder)",
      "right" : "if (this.rowRenderingOrder != that.rowRenderingOrder)",
      "info" : "IfStatement[138000-138093]:IfStatement[138140-138233]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138054-138093]:Block[138194-138233]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[138069-138082]:ReturnStatement[138209-138222]"
    }, {
      "left" : "if (this.domainGridlinesVisible != that.domainGridlinesVisible)",
      "right" : "if (this.domainGridlinesVisible != that.domainGridlinesVisible)",
      "info" : "IfStatement[138103-138206]:IfStatement[138243-138346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138167-138206]:Block[138307-138346]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[138182-138195]:ReturnStatement[138322-138335]"
    }, {
      "left" : "if (this.domainGridlinePosition != that.domainGridlinePosition)",
      "right" : "if (this.domainGridlinePosition != that.domainGridlinePosition)",
      "info" : "IfStatement[138216-138319]:IfStatement[138356-138459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138280-138319]:Block[138420-138459]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[138295-138308]:ReturnStatement[138435-138448]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.domainGridlineStroke, \r\n                that.domainGridlineStroke))",
      "right" : "if (!ObjectUtilities.equal(this.domainGridlineStroke, \r\n                that.domainGridlineStroke))",
      "info" : "IfStatement[138329-138468]:IfStatement[138469-138608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138429-138468]:Block[138569-138608]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[138444-138457]:ReturnStatement[138584-138597]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.domainGridlinePaint, \r\n                that.domainGridlinePaint))",
      "right" : "if (!PaintUtilities.equal(this.domainGridlinePaint, \r\n                that.domainGridlinePaint))",
      "info" : "IfStatement[138478-138614]:IfStatement[138618-138754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138575-138614]:Block[138715-138754]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[138590-138603]:ReturnStatement[138730-138743]"
    }, {
      "left" : "if (this.rangeGridlinesVisible != that.rangeGridlinesVisible)",
      "right" : "if (this.rangeGridlinesVisible != that.rangeGridlinesVisible)",
      "info" : "IfStatement[138624-138725]:IfStatement[138764-138865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138686-138725]:Block[138826-138865]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[138701-138714]:ReturnStatement[138841-138854]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.rangeGridlineStroke, \r\n                that.rangeGridlineStroke))",
      "right" : "if (!ObjectUtilities.equal(this.rangeGridlineStroke, \r\n                that.rangeGridlineStroke))",
      "info" : "IfStatement[138735-138872]:IfStatement[138875-139012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138833-138872]:Block[138973-139012]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[138848-138861]:ReturnStatement[138988-139001]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.rangeGridlinePaint, \r\n                that.rangeGridlinePaint))",
      "right" : "if (!PaintUtilities.equal(this.rangeGridlinePaint, \r\n                that.rangeGridlinePaint))",
      "info" : "IfStatement[138882-139016]:IfStatement[139022-139156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138977-139016]:Block[139117-139156]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[138992-139005]:ReturnStatement[139132-139145]"
    }, {
      "left" : "if (this.anchorValue != that.anchorValue)",
      "right" : "if (this.anchorValue != that.anchorValue)",
      "info" : "IfStatement[139026-139107]:IfStatement[139166-139247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139068-139107]:Block[139208-139247]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[139083-139096]:ReturnStatement[139223-139236]"
    }, {
      "left" : "if (this.rangeCrosshairVisible != that.rangeCrosshairVisible)",
      "right" : "if (this.rangeCrosshairVisible != that.rangeCrosshairVisible)",
      "info" : "IfStatement[139117-139218]:IfStatement[139257-139358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139179-139218]:Block[139319-139358]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[139194-139207]:ReturnStatement[139334-139347]"
    }, {
      "left" : "if (this.rangeCrosshairValue != that.rangeCrosshairValue)",
      "right" : "if (this.rangeCrosshairValue != that.rangeCrosshairValue)",
      "info" : "IfStatement[139228-139325]:IfStatement[139368-139465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139286-139325]:Block[139426-139465]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[139301-139314]:ReturnStatement[139441-139454]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.rangeCrosshairStroke, \r\n                that.rangeCrosshairStroke))",
      "right" : "if (!ObjectUtilities.equal(this.rangeCrosshairStroke, \r\n                that.rangeCrosshairStroke))",
      "info" : "IfStatement[139335-139474]:IfStatement[139475-139614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139435-139474]:Block[139575-139614]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[139450-139463]:ReturnStatement[139590-139603]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.rangeCrosshairPaint, \r\n                that.rangeCrosshairPaint))",
      "right" : "if (!PaintUtilities.equal(this.rangeCrosshairPaint, \r\n                that.rangeCrosshairPaint))",
      "info" : "IfStatement[139484-139620]:IfStatement[139624-139760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139581-139620]:Block[139721-139760]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[139596-139609]:ReturnStatement[139736-139749]"
    }, {
      "left" : "if (this.rangeCrosshairLockedOnData \r\n                != that.rangeCrosshairLockedOnData)",
      "right" : "if (this.rangeCrosshairLockedOnData \r\n                != that.rangeCrosshairLockedOnData)",
      "info" : "IfStatement[139630-139759]:IfStatement[139770-139899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139720-139759]:Block[139860-139899]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[139735-139748]:ReturnStatement[139875-139888]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers, \r\n                that.foregroundRangeMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers, \r\n                that.foregroundRangeMarkers))",
      "info" : "IfStatement[139775-139918]:IfStatement[139915-140058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139879-139918]:Block[140019-140058]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[139894-139907]:ReturnStatement[140034-140047]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers, \r\n                that.backgroundRangeMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers, \r\n                that.backgroundRangeMarkers))",
      "info" : "IfStatement[139928-140071]:IfStatement[140068-140211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140032-140071]:Block[140172-140211]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[140047-140060]:ReturnStatement[140187-140200]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.annotations, that.annotations))",
      "right" : "if (!ObjectUtilities.equal(this.annotations, that.annotations))",
      "info" : "IfStatement[140081-140184]:IfStatement[140221-140324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140145-140184]:Block[140285-140324]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[140160-140173]:ReturnStatement[140300-140313]"
    }, {
      "left" : "if (this.weight != that.weight)",
      "right" : "if (this.weight != that.weight)",
      "info" : "IfStatement[140194-140265]:IfStatement[140334-140405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140226-140265]:Block[140366-140405]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[140241-140254]:ReturnStatement[140381-140394]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.fixedDomainAxisSpace, \r\n                that.fixedDomainAxisSpace))",
      "right" : "if (!ObjectUtilities.equal(this.fixedDomainAxisSpace, \r\n                that.fixedDomainAxisSpace))",
      "info" : "IfStatement[140275-140414]:IfStatement[140415-140554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140375-140414]:Block[140515-140554]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[140390-140403]:ReturnStatement[140530-140543]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.fixedRangeAxisSpace, \r\n                that.fixedRangeAxisSpace))",
      "right" : "if (!ObjectUtilities.equal(this.fixedRangeAxisSpace, \r\n                that.fixedRangeAxisSpace))",
      "info" : "IfStatement[140428-140565]:IfStatement[140568-140705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140526-140565]:Block[140666-140705]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[140541-140554]:ReturnStatement[140681-140694]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[140589-140601]:ReturnStatement[140729-140741]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[140805-140811]:Modifier[140945-140951]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[140812-140818]:SimpleType[140952-140958]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[140819-140824]:SimpleName[140959-140964]"
    }, {
      "left" : "CloneNotSupportedException",
      "right" : "CloneNotSupportedException",
      "info" : "SimpleType[140834-140860]:SimpleType[140974-141000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140861-142829]:Block[141001-142969]"
    }, {
      "left" : "CategoryPlot clone = (CategoryPlot) super.clone();",
      "right" : "CategoryPlot clone = (CategoryPlot) super.clone();",
      "info" : "VariableDeclarationStatement[140882-140932]:VariableDeclarationStatement[141022-141072]"
    }, {
      "left" : "clone.domainAxes = new ObjectList();",
      "right" : "clone.domainAxes = new ObjectList();",
      "info" : "ExpressionStatement[140952-140988]:ExpressionStatement[141092-141128]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[140998-141307]:ForStatement[141138-141447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141047-141307]:Block[141187-141447]"
    }, {
      "left" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);",
      "right" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[141062-141121]:VariableDeclarationStatement[141202-141261]"
    }, {
      "left" : "if (xAxis != null)",
      "right" : "if (xAxis != null)",
      "info" : "IfStatement[141135-141296]:IfStatement[141275-141436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141154-141296]:Block[141294-141436]"
    }, {
      "left" : "CategoryAxis clonedAxis = (CategoryAxis) xAxis.clone();",
      "right" : "CategoryAxis clonedAxis = (CategoryAxis) xAxis.clone();",
      "info" : "VariableDeclarationStatement[141173-141228]:VariableDeclarationStatement[141313-141368]"
    }, {
      "left" : "clone.setDomainAxis(i, clonedAxis);",
      "right" : "clone.setDomainAxis(i, clonedAxis);",
      "info" : "ExpressionStatement[141246-141281]:ExpressionStatement[141386-141421]"
    }, {
      "left" : "clone.domainAxisLocations \r\n            = (ObjectList) this.domainAxisLocations.clone();",
      "right" : "clone.domainAxisLocations \r\n            = (ObjectList) this.domainAxisLocations.clone();",
      "info" : "ExpressionStatement[141317-141405]:ExpressionStatement[141457-141545]"
    }, {
      "left" : "clone.rangeAxes = new ObjectList();",
      "right" : "clone.rangeAxes = new ObjectList();",
      "info" : "ExpressionStatement[141417-141452]:ExpressionStatement[141557-141592]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[141462-141756]:ForStatement[141602-141896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141510-141756]:Block[141650-141896]"
    }, {
      "left" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[141525-141577]:VariableDeclarationStatement[141665-141717]"
    }, {
      "left" : "if (yAxis != null)",
      "right" : "if (yAxis != null)",
      "info" : "IfStatement[141591-141745]:IfStatement[141731-141885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141610-141745]:Block[141750-141885]"
    }, {
      "left" : "ValueAxis clonedAxis = (ValueAxis) yAxis.clone();",
      "right" : "ValueAxis clonedAxis = (ValueAxis) yAxis.clone();",
      "info" : "VariableDeclarationStatement[141629-141678]:VariableDeclarationStatement[141769-141818]"
    }, {
      "left" : "clone.setRangeAxis(i, clonedAxis);",
      "right" : "clone.setRangeAxis(i, clonedAxis);",
      "info" : "ExpressionStatement[141696-141730]:ExpressionStatement[141836-141870]"
    }, {
      "left" : "clone.rangeAxisLocations = (ObjectList) this.rangeAxisLocations.clone();",
      "right" : "clone.rangeAxisLocations = (ObjectList) this.rangeAxisLocations.clone();",
      "info" : "ExpressionStatement[141766-141838]:ExpressionStatement[141906-141978]"
    }, {
      "left" : "clone.datasets = (ObjectList) this.datasets.clone();",
      "right" : "clone.datasets = (ObjectList) this.datasets.clone();",
      "info" : "ExpressionStatement[141850-141902]:ExpressionStatement[141990-142042]"
    }, {
      "left" : "for (int i = 0; i < clone.datasets.size(); i++)",
      "right" : "for (int i = 0; i < clone.datasets.size(); i++)",
      "info" : "ForStatement[141912-142134]:ForStatement[142052-142274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141960-142134]:Block[142100-142274]"
    }, {
      "left" : "CategoryDataset dataset = clone.getDataset(i);",
      "right" : "CategoryDataset dataset = clone.getDataset(i);",
      "info" : "VariableDeclarationStatement[141975-142021]:VariableDeclarationStatement[142115-142161]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[142035-142123]:IfStatement[142175-142263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142056-142123]:Block[142196-142263]"
    }, {
      "left" : "dataset.addChangeListener(clone);",
      "right" : "dataset.addChangeListener(clone);",
      "info" : "ExpressionStatement[142075-142108]:ExpressionStatement[142215-142248]"
    }, {
      "left" : "clone.datasetToDomainAxisMap \r\n            = (ObjectList) this.datasetToDomainAxisMap.clone();",
      "right" : "clone.datasetToDomainAxisMap \r\n            = (ObjectList) this.datasetToDomainAxisMap.clone();",
      "info" : "ExpressionStatement[142144-142238]:ExpressionStatement[142284-142378]"
    }, {
      "left" : "clone.datasetToRangeAxisMap \r\n            = (ObjectList) this.datasetToRangeAxisMap.clone();",
      "right" : "clone.datasetToRangeAxisMap \r\n            = (ObjectList) this.datasetToRangeAxisMap.clone();",
      "info" : "ExpressionStatement[142248-142340]:ExpressionStatement[142388-142480]"
    }, {
      "left" : "clone.renderers = (ObjectList) this.renderers.clone();",
      "right" : "clone.renderers = (ObjectList) this.renderers.clone();",
      "info" : "ExpressionStatement[142350-142404]:ExpressionStatement[142490-142544]"
    }, {
      "left" : "if (this.fixedDomainAxisSpace != null)",
      "right" : "if (this.fixedDomainAxisSpace != null)",
      "info" : "IfStatement[142414-142591]:IfStatement[142554-142731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142453-142591]:Block[142593-142731]"
    }, {
      "left" : "clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedDomainAxisSpace);",
      "right" : "clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedDomainAxisSpace);",
      "info" : "ExpressionStatement[142468-142580]:ExpressionStatement[142608-142720]"
    }, {
      "left" : "if (this.fixedRangeAxisSpace != null)",
      "right" : "if (this.fixedRangeAxisSpace != null)",
      "info" : "IfStatement[142601-142775]:IfStatement[142741-142915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142639-142775]:Block[142779-142915]"
    }, {
      "left" : "clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedRangeAxisSpace);",
      "right" : "clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedRangeAxisSpace);",
      "info" : "ExpressionStatement[142654-142764]:ExpressionStatement[142794-142904]"
    }, {
      "left" : "return clone;",
      "right" : "return clone;",
      "info" : "ReturnStatement[142795-142808]:ReturnStatement[142935-142948]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[143012-143019]:Modifier[143152-143159]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[143020-143024]:PrimitiveType[143160-143164]"
    }, {
      "left" : "writeObject",
      "right" : "writeObject",
      "info" : "SimpleName[143025-143036]:SimpleName[143165-143176]"
    }, {
      "left" : "ObjectOutputStream stream",
      "right" : "ObjectOutputStream stream",
      "info" : "SingleVariableDeclaration[143037-143062]:SingleVariableDeclaration[143177-143202]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[143071-143082]:SimpleType[143211-143222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143083-143559]:Block[143223-143699]"
    }, {
      "left" : "stream.defaultWriteObject();",
      "right" : "stream.defaultWriteObject();",
      "info" : "ExpressionStatement[143094-143122]:ExpressionStatement[143234-143262]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",
      "info" : "ExpressionStatement[143132-143195]:ExpressionStatement[143272-143335]"
    }, {
      "left" : "SerialUtilities.writePaint(this.domainGridlinePaint, stream);",
      "right" : "SerialUtilities.writePaint(this.domainGridlinePaint, stream);",
      "info" : "ExpressionStatement[143205-143266]:ExpressionStatement[143345-143406]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",
      "info" : "ExpressionStatement[143276-143338]:ExpressionStatement[143416-143478]"
    }, {
      "left" : "SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",
      "right" : "SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",
      "info" : "ExpressionStatement[143348-143408]:ExpressionStatement[143488-143548]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",
      "info" : "ExpressionStatement[143418-143481]:ExpressionStatement[143558-143621]"
    }, {
      "left" : "SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",
      "right" : "SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",
      "info" : "ExpressionStatement[143491-143552]:ExpressionStatement[143631-143692]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[143810-143817]:Modifier[143950-143957]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[143818-143822]:PrimitiveType[143958-143962]"
    }, {
      "left" : "readObject",
      "right" : "readObject",
      "info" : "SimpleName[143823-143833]:SimpleName[143963-143973]"
    }, {
      "left" : "ObjectInputStream stream",
      "right" : "ObjectInputStream stream",
      "info" : "SingleVariableDeclaration[143834-143858]:SingleVariableDeclaration[143974-143998]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[143877-143888]:SimpleType[144017-144028]"
    }, {
      "left" : "ClassNotFoundException",
      "right" : "ClassNotFoundException",
      "info" : "SimpleType[143890-143912]:SimpleType[144030-144052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143913-145549]:Block[144053-145689]"
    }, {
      "left" : "stream.defaultReadObject();",
      "right" : "stream.defaultReadObject();",
      "info" : "ExpressionStatement[143926-143953]:ExpressionStatement[144066-144093]"
    }, {
      "left" : "this.domainGridlineStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.domainGridlineStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[143963-144026]:ExpressionStatement[144103-144166]"
    }, {
      "left" : "this.domainGridlinePaint = SerialUtilities.readPaint(stream);",
      "right" : "this.domainGridlinePaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[144036-144097]:ExpressionStatement[144176-144237]"
    }, {
      "left" : "this.rangeGridlineStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.rangeGridlineStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[144107-144169]:ExpressionStatement[144247-144309]"
    }, {
      "left" : "this.rangeGridlinePaint = SerialUtilities.readPaint(stream);",
      "right" : "this.rangeGridlinePaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[144179-144239]:ExpressionStatement[144319-144379]"
    }, {
      "left" : "this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[144249-144312]:ExpressionStatement[144389-144452]"
    }, {
      "left" : "this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);",
      "right" : "this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[144322-144383]:ExpressionStatement[144462-144523]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[144395-144664]:ForStatement[144535-144804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144444-144664]:Block[144584-144804]"
    }, {
      "left" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);",
      "right" : "CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[144459-144518]:VariableDeclarationStatement[144599-144658]"
    }, {
      "left" : "if (xAxis != null)",
      "right" : "if (xAxis != null)",
      "info" : "IfStatement[144532-144653]:IfStatement[144672-144793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144551-144653]:Block[144691-144793]"
    }, {
      "left" : "xAxis.setPlot(this);",
      "right" : "xAxis.setPlot(this);",
      "info" : "ExpressionStatement[144570-144590]:ExpressionStatement[144710-144730]"
    }, {
      "left" : "xAxis.addChangeListener(this);",
      "right" : "xAxis.addChangeListener(this);",
      "info" : "ExpressionStatement[144608-144638]:ExpressionStatement[144748-144778]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[144675-144939]:ForStatement[144815-145079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144723-144939]:Block[144863-145079]"
    }, {
      "left" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[144738-144790]:VariableDeclarationStatement[144878-144930]"
    }, {
      "left" : "if (yAxis != null)",
      "right" : "if (yAxis != null)",
      "info" : "IfStatement[144804-144928]:IfStatement[144944-145068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144823-144928]:Block[144963-145068]"
    }, {
      "left" : "yAxis.setPlot(this);",
      "right" : "yAxis.setPlot(this);",
      "info" : "ExpressionStatement[144842-144862]:ExpressionStatement[144982-145002]"
    }, {
      "left" : "yAxis.addChangeListener(this);",
      "right" : "yAxis.addChangeListener(this);",
      "info" : "ExpressionStatement[144883-144913]:ExpressionStatement[145023-145053]"
    }, {
      "left" : "int datasetCount = this.datasets.size();",
      "right" : "int datasetCount = this.datasets.size();",
      "info" : "VariableDeclarationStatement[144949-144989]:VariableDeclarationStatement[145089-145129]"
    }, {
      "left" : "for (int i = 0; i < datasetCount; i++)",
      "right" : "for (int i = 0; i < datasetCount; i++)",
      "info" : "ForStatement[144999-145214]:ForStatement[145139-145354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145038-145214]:Block[145178-145354]"
    }, {
      "left" : "Dataset dataset = (Dataset) this.datasets.get(i);",
      "right" : "Dataset dataset = (Dataset) this.datasets.get(i);",
      "info" : "VariableDeclarationStatement[145053-145102]:VariableDeclarationStatement[145193-145242]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[145116-145203]:IfStatement[145256-145343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145137-145203]:Block[145277-145343]"
    }, {
      "left" : "dataset.addChangeListener(this);",
      "right" : "dataset.addChangeListener(this);",
      "info" : "ExpressionStatement[145156-145188]:ExpressionStatement[145296-145328]"
    }, {
      "left" : "int rendererCount = this.renderers.size();",
      "right" : "int rendererCount = this.renderers.size();",
      "info" : "VariableDeclarationStatement[145224-145266]:VariableDeclarationStatement[145364-145406]"
    }, {
      "left" : "for (int i = 0; i < rendererCount; i++)",
      "right" : "for (int i = 0; i < rendererCount; i++)",
      "info" : "ForStatement[145276-145540]:ForStatement[145416-145680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145316-145540]:Block[145456-145680]"
    }, {
      "left" : "CategoryItemRenderer renderer \r\n                = (CategoryItemRenderer) this.renderers.get(i);",
      "right" : "CategoryItemRenderer renderer \r\n                = (CategoryItemRenderer) this.renderers.get(i);",
      "info" : "VariableDeclarationStatement[145331-145426]:VariableDeclarationStatement[145471-145566]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[145440-145529]:IfStatement[145580-145669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145462-145529]:Block[145602-145669]"
    }, {
      "left" : "renderer.addChangeListener(this);",
      "right" : "renderer.addChangeListener(this);",
      "info" : "ExpressionStatement[145481-145514]:ExpressionStatement[145621-145654]"
    } ]
  },
  "interFileMappings" : { }
}