{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static final int DEFAULT_WIDTH = 74;",
      "right" : "public static final int DEFAULT_WIDTH = 74;",
      "info" : "FieldDeclaration[1450-1542]:FieldDeclaration[1450-1542]"
    }, {
      "left" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "right" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "info" : "FieldDeclaration[1548-1645]:FieldDeclaration[1548-1645]"
    }, {
      "left" : "public static final int DEFAULT_DESC_PAD = 3;",
      "right" : "public static final int DEFAULT_DESC_PAD = 3;",
      "info" : "FieldDeclaration[1651-1802]:FieldDeclaration[1651-1802]"
    }, {
      "left" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "right" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "info" : "FieldDeclaration[1808-1942]:FieldDeclaration[1808-1942]"
    }, {
      "left" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "right" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "info" : "FieldDeclaration[1948-2040]:FieldDeclaration[1948-2040]"
    }, {
      "left" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "right" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "info" : "FieldDeclaration[2046-2146]:FieldDeclaration[2046-2146]"
    }, {
      "left" : "public static final String DEFAULT_LONG_OPT_SEPARATOR = \" \";",
      "right" : "public static final String DEFAULT_LONG_OPT_SEPARATOR = \" \";",
      "info" : "FieldDeclaration[2152-2287]:FieldDeclaration[2152-2287]"
    }, {
      "left" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "right" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "info" : "FieldDeclaration[2293-2385]:FieldDeclaration[2293-2385]"
    }, {
      "left" : "public int defaultWidth = DEFAULT_WIDTH;",
      "right" : "public int defaultWidth = DEFAULT_WIDTH;",
      "info" : "FieldDeclaration[2473-2685]:FieldDeclaration[2473-2685]"
    }, {
      "left" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "right" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "info" : "FieldDeclaration[2691-2927]:FieldDeclaration[2691-2927]"
    }, {
      "left" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "right" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "info" : "FieldDeclaration[2933-3209]:FieldDeclaration[2933-3209]"
    }, {
      "left" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "right" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "info" : "FieldDeclaration[3215-3483]:FieldDeclaration[3215-3483]"
    }, {
      "left" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "right" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "info" : "FieldDeclaration[3489-3721]:FieldDeclaration[3489-3721]"
    }, {
      "left" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "right" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "info" : "FieldDeclaration[3727-3945]:FieldDeclaration[3727-3945]"
    }, {
      "left" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "right" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "info" : "FieldDeclaration[3951-4182]:FieldDeclaration[3951-4182]"
    }, {
      "left" : "private String longOptSeparator = DEFAULT_LONG_OPT_SEPARATOR;",
      "right" : "private String longOptSeparator = DEFAULT_LONG_OPT_SEPARATOR;",
      "info" : "FieldDeclaration[4188-4323]:FieldDeclaration[4188-4323]"
    }, {
      "left" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "right" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "info" : "FieldDeclaration[4329-4546]:FieldDeclaration[4329-4546]"
    }, {
      "left" : "protected Comparator optionComparator = new OptionComparator();",
      "right" : "protected Comparator optionComparator = new OptionComparator();",
      "info" : "FieldDeclaration[4552-4783]:FieldDeclaration[4552-4783]"
    }, {
      "left" : "public void setWidth(int width)",
      "right" : "public void setWidth(int width)",
      "info" : "MethodDeclaration[4793-4964]:MethodDeclaration[4793-4964]"
    }, {
      "left" : "public int getWidth()",
      "right" : "public int getWidth()",
      "info" : "MethodDeclaration[4970-5110]:MethodDeclaration[4970-5110]"
    }, {
      "left" : "public void setLeftPadding(int padding)",
      "right" : "public void setLeftPadding(int padding)",
      "info" : "MethodDeclaration[5116-5313]:MethodDeclaration[5116-5313]"
    }, {
      "left" : "public int getLeftPadding()",
      "right" : "public int getLeftPadding()",
      "info" : "MethodDeclaration[5319-5479]:MethodDeclaration[5319-5479]"
    }, {
      "left" : "public void setDescPadding(int padding)",
      "right" : "public void setDescPadding(int padding)",
      "info" : "MethodDeclaration[5485-5682]:MethodDeclaration[5485-5682]"
    }, {
      "left" : "public int getDescPadding()",
      "right" : "public int getDescPadding()",
      "info" : "MethodDeclaration[5688-5848]:MethodDeclaration[5688-5848]"
    }, {
      "left" : "public void setSyntaxPrefix(String prefix)",
      "right" : "public void setSyntaxPrefix(String prefix)",
      "info" : "MethodDeclaration[5854-6059]:MethodDeclaration[5854-6059]"
    }, {
      "left" : "public String getSyntaxPrefix()",
      "right" : "public String getSyntaxPrefix()",
      "info" : "MethodDeclaration[6065-6236]:MethodDeclaration[6065-6236]"
    }, {
      "left" : "public void setNewLine(String newline)",
      "right" : "public void setNewLine(String newline)",
      "info" : "MethodDeclaration[6242-6430]:MethodDeclaration[6242-6430]"
    }, {
      "left" : "public String getNewLine()",
      "right" : "public String getNewLine()",
      "info" : "MethodDeclaration[6436-6587]:MethodDeclaration[6436-6587]"
    }, {
      "left" : "public void setOptPrefix(String prefix)",
      "right" : "public void setOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6593-6786]:MethodDeclaration[6593-6786]"
    }, {
      "left" : "public String getOptPrefix()",
      "right" : "public String getOptPrefix()",
      "info" : "MethodDeclaration[6792-6951]:MethodDeclaration[6792-6951]"
    }, {
      "left" : "public void setLongOptPrefix(String prefix)",
      "right" : "public void setLongOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6957-7166]:MethodDeclaration[6957-7166]"
    }, {
      "left" : "public String getLongOptPrefix()",
      "right" : "public String getLongOptPrefix()",
      "info" : "MethodDeclaration[7172-7347]:MethodDeclaration[7172-7347]"
    }, {
      "left" : "public void setLongOptSeparator(String longOptSeparator)",
      "right" : "public void setLongOptSeparator(String longOptSeparator)",
      "info" : "MethodDeclaration[7353-7758]:MethodDeclaration[7353-7758]"
    }, {
      "left" : "public String getLongOptSeparator()",
      "right" : "public String getLongOptSeparator()",
      "info" : "MethodDeclaration[7764-7991]:MethodDeclaration[7764-7991]"
    }, {
      "left" : "public void setArgName(String name)",
      "right" : "public void setArgName(String name)",
      "info" : "MethodDeclaration[7997-8176]:MethodDeclaration[7997-8176]"
    }, {
      "left" : "public String getArgName()",
      "right" : "public String getArgName()",
      "info" : "MethodDeclaration[8182-8333]:MethodDeclaration[8182-8333]"
    }, {
      "left" : "public Comparator getOptionComparator()",
      "right" : "public Comparator getOptionComparator()",
      "info" : "MethodDeclaration[8339-8611]:MethodDeclaration[8339-8611]"
    }, {
      "left" : "public void setOptionComparator(Comparator comparator)",
      "right" : "public void setOptionComparator(Comparator comparator)",
      "info" : "MethodDeclaration[8617-9078]:MethodDeclaration[8617-9078]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options)",
      "info" : "MethodDeclaration[9084-9511]:MethodDeclaration[9084-9511]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "info" : "MethodDeclaration[9517-10059]:MethodDeclaration[9517-10059]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[10065-10649]:MethodDeclaration[10065-10649]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[10655-11368]:MethodDeclaration[10655-11368]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[11374-12051]:MethodDeclaration[11374-12051]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[12057-12985]:MethodDeclaration[12057-12985]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "info" : "MethodDeclaration[12991-14066]:MethodDeclaration[12991-14066]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[14073-15832]:MethodDeclaration[14073-15832]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "right" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "info" : "MethodDeclaration[15838-17920]:MethodDeclaration[15838-17920]"
    }, {
      "left" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "right" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "info" : "MethodDeclaration[17926-19025]:MethodDeclaration[17926-19025]"
    }, {
      "left" : "private void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "right" : "private void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "info" : "MethodDeclaration[19031-20168]:MethodDeclaration[19031-20168]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "right" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "info" : "MethodDeclaration[20178-20719]:MethodDeclaration[20178-20719]"
    }, {
      "left" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "right" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "info" : "MethodDeclaration[20725-21537]:MethodDeclaration[20725-21537]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "info" : "MethodDeclaration[21543-21926]:MethodDeclaration[21543-21926]"
    }, {
      "left" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "right" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "info" : "MethodDeclaration[22617-25944]:MethodDeclaration[22622-25949]"
    }, {
      "left" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "right" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[25950-27547]:MethodDeclaration[25955-27552]"
    }, {
      "left" : "protected int findWrapPos(String text, int width, int startPos)",
      "right" : "protected int findWrapPos(String text, int width, int startPos)",
      "info" : "MethodDeclaration[28018-29754]:MethodDeclaration[28654-30390]"
    }, {
      "left" : "protected String createPadding(int len)",
      "right" : "protected String createPadding(int len)",
      "info" : "MethodDeclaration[29760-30125]:MethodDeclaration[30396-30761]"
    }, {
      "left" : "protected String rtrim(String s)",
      "right" : "protected String rtrim(String s)",
      "info" : "MethodDeclaration[30131-30659]:MethodDeclaration[30767-31295]"
    }, {
      "left" : "OptionComparator",
      "right" : "OptionComparator",
      "info" : "TypeDeclaration[30905-31831]:TypeDeclaration[31541-32467]"
    }, {
      "left" : "public int compare(Object o1, Object o2)",
      "right" : "public int compare(Object o1, Object o2)",
      "info" : "MethodDeclaration[31093-31825]:MethodDeclaration[31729-32461]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4922-4964]:Block[4922-4964]"
    }, {
      "left" : "this.defaultWidth = width;",
      "right" : "this.defaultWidth = width;",
      "info" : "ExpressionStatement[4932-4958]:ExpressionStatement[4932-4958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5074-5110]:Block[5074-5110]"
    }, {
      "left" : "return defaultWidth;",
      "right" : "return defaultWidth;",
      "info" : "ReturnStatement[5084-5104]:ReturnStatement[5084-5104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5267-5313]:Block[5267-5313]"
    }, {
      "left" : "this.defaultLeftPad = padding;",
      "right" : "this.defaultLeftPad = padding;",
      "info" : "ExpressionStatement[5277-5307]:ExpressionStatement[5277-5307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5441-5479]:Block[5441-5479]"
    }, {
      "left" : "return defaultLeftPad;",
      "right" : "return defaultLeftPad;",
      "info" : "ReturnStatement[5451-5473]:ReturnStatement[5451-5473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5636-5682]:Block[5636-5682]"
    }, {
      "left" : "this.defaultDescPad = padding;",
      "right" : "this.defaultDescPad = padding;",
      "info" : "ExpressionStatement[5646-5676]:ExpressionStatement[5646-5676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5810-5848]:Block[5810-5848]"
    }, {
      "left" : "return defaultDescPad;",
      "right" : "return defaultDescPad;",
      "info" : "ReturnStatement[5820-5842]:ReturnStatement[5820-5842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6009-6059]:Block[6009-6059]"
    }, {
      "left" : "this.defaultSyntaxPrefix = prefix;",
      "right" : "this.defaultSyntaxPrefix = prefix;",
      "info" : "ExpressionStatement[6019-6053]:ExpressionStatement[6019-6053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6193-6236]:Block[6193-6236]"
    }, {
      "left" : "return defaultSyntaxPrefix;",
      "right" : "return defaultSyntaxPrefix;",
      "info" : "ReturnStatement[6203-6230]:ReturnStatement[6203-6230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6384-6430]:Block[6384-6430]"
    }, {
      "left" : "this.defaultNewLine = newline;",
      "right" : "this.defaultNewLine = newline;",
      "info" : "ExpressionStatement[6394-6424]:ExpressionStatement[6394-6424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6549-6587]:Block[6549-6587]"
    }, {
      "left" : "return defaultNewLine;",
      "right" : "return defaultNewLine;",
      "info" : "ReturnStatement[6559-6581]:ReturnStatement[6559-6581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6739-6786]:Block[6739-6786]"
    }, {
      "left" : "this.defaultOptPrefix = prefix;",
      "right" : "this.defaultOptPrefix = prefix;",
      "info" : "ExpressionStatement[6749-6780]:ExpressionStatement[6749-6780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6911-6951]:Block[6911-6951]"
    }, {
      "left" : "return defaultOptPrefix;",
      "right" : "return defaultOptPrefix;",
      "info" : "ReturnStatement[6921-6945]:ReturnStatement[6921-6945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7115-7166]:Block[7115-7166]"
    }, {
      "left" : "this.defaultLongOptPrefix = prefix;",
      "right" : "this.defaultLongOptPrefix = prefix;",
      "info" : "ExpressionStatement[7125-7160]:ExpressionStatement[7125-7160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7303-7347]:Block[7303-7347]"
    }, {
      "left" : "return defaultLongOptPrefix;",
      "right" : "return defaultLongOptPrefix;",
      "info" : "ReturnStatement[7313-7341]:ReturnStatement[7313-7341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7701-7758]:Block[7701-7758]"
    }, {
      "left" : "this.longOptSeparator = longOptSeparator;",
      "right" : "this.longOptSeparator = longOptSeparator;",
      "info" : "ExpressionStatement[7711-7752]:ExpressionStatement[7711-7752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7951-7991]:Block[7951-7991]"
    }, {
      "left" : "return longOptSeparator;",
      "right" : "return longOptSeparator;",
      "info" : "ReturnStatement[7961-7985]:ReturnStatement[7961-7985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8133-8176]:Block[8133-8176]"
    }, {
      "left" : "this.defaultArgName = name;",
      "right" : "this.defaultArgName = name;",
      "info" : "ExpressionStatement[8143-8170]:ExpressionStatement[8143-8170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8295-8333]:Block[8295-8333]"
    }, {
      "left" : "return defaultArgName;",
      "right" : "return defaultArgName;",
      "info" : "ReturnStatement[8305-8327]:ReturnStatement[8305-8327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8571-8611]:Block[8571-8611]"
    }, {
      "left" : "return optionComparator;",
      "right" : "return optionComparator;",
      "info" : "ReturnStatement[8581-8605]:ReturnStatement[8581-8605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8878-9078]:Block[8878-9078]"
    }, {
      "left" : "if (comparator == null)",
      "right" : "if (comparator == null)",
      "info" : "IfStatement[8888-9072]:IfStatement[8888-9072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8920-8991]:Block[8920-8991]"
    }, {
      "left" : "this.optionComparator = new OptionComparator();",
      "right" : "this.optionComparator = new OptionComparator();",
      "info" : "ExpressionStatement[8934-8981]:ExpressionStatement[8934-8981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9013-9072]:Block[9013-9072]"
    }, {
      "left" : "this.optionComparator = comparator;",
      "right" : "this.optionComparator = comparator;",
      "info" : "ExpressionStatement[9027-9062]:ExpressionStatement[9027-9062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9428-9511]:Block[9428-9511]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "info" : "ExpressionStatement[9438-9505]:ExpressionStatement[9438-9505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9972-10059]:Block[9972-10059]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "info" : "ExpressionStatement[9982-10053]:ExpressionStatement[9982-10053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10576-10649]:Block[10576-10649]"
    }, {
      "left" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[10586-10643]:ExpressionStatement[10586-10643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11277-11368]:Block[11277-11368]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "info" : "ExpressionStatement[11287-11362]:ExpressionStatement[11287-11362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11971-12051]:Block[11971-12051]"
    }, {
      "left" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[11981-12045]:ExpressionStatement[11981-12045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12790-12985]:Block[12790-12985]"
    }, {
      "left" : "PrintWriter pw = new PrintWriter(System.out);",
      "right" : "PrintWriter pw = new PrintWriter(System.out);",
      "info" : "VariableDeclarationStatement[12800-12845]:VariableDeclarationStatement[12800-12845]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "info" : "ExpressionStatement[12855-12959]:ExpressionStatement[12855-12959]"
    }, {
      "left" : "pw.flush();",
      "right" : "pw.flush();",
      "info" : "ExpressionStatement[12968-12979]:ExpressionStatement[12968-12979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13964-14066]:Block[13964-14066]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "info" : "ExpressionStatement[13974-14060]:ExpressionStatement[13974-14060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15154-15832]:Block[15154-15832]"
    }, {
      "left" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "right" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "info" : "IfStatement[15164-15323]:IfStatement[15164-15323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15234-15323]:Block[15234-15323]"
    }, {
      "left" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "right" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "info" : "ThrowStatement[15248-15313]:ThrowStatement[15248-15313]"
    }, {
      "left" : "if (autoUsage)",
      "right" : "if (autoUsage)",
      "info" : "IfStatement[15333-15509]:IfStatement[15333-15509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15356-15426]:Block[15356-15426]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax, options);",
      "right" : "printUsage(pw, width, cmdLineSyntax, options);",
      "info" : "ExpressionStatement[15370-15416]:ExpressionStatement[15370-15416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15448-15509]:Block[15448-15509]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax);",
      "right" : "printUsage(pw, width, cmdLineSyntax);",
      "info" : "ExpressionStatement[15462-15499]:ExpressionStatement[15462-15499]"
    }, {
      "left" : "if ((header != null) && (header.trim().length() > 0))",
      "right" : "if ((header != null) && (header.trim().length() > 0))",
      "info" : "IfStatement[15519-15637]:IfStatement[15519-15637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15581-15637]:Block[15581-15637]"
    }, {
      "left" : "printWrapped(pw, width, header);",
      "right" : "printWrapped(pw, width, header);",
      "info" : "ExpressionStatement[15595-15627]:ExpressionStatement[15595-15627]"
    }, {
      "left" : "printOptions(pw, width, options, leftPad, descPad);",
      "right" : "printOptions(pw, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[15647-15698]:ExpressionStatement[15647-15698]"
    }, {
      "left" : "if ((footer != null) && (footer.trim().length() > 0))",
      "right" : "if ((footer != null) && (footer.trim().length() > 0))",
      "info" : "IfStatement[15708-15826]:IfStatement[15708-15826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15770-15826]:Block[15770-15826]"
    }, {
      "left" : "printWrapped(pw, width, footer);",
      "right" : "printWrapped(pw, width, footer);",
      "info" : "ExpressionStatement[15784-15816]:ExpressionStatement[15784-15816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16223-17920]:Block[16223-17920]"
    }, {
      "left" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "right" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "info" : "VariableDeclarationStatement[16273-16355]:VariableDeclarationStatement[16273-16355]"
    }, {
      "left" : "final Collection processedGroups = new ArrayList();",
      "right" : "final Collection processedGroups = new ArrayList();",
      "info" : "VariableDeclarationStatement[16418-16469]:VariableDeclarationStatement[16418-16469]"
    }, {
      "left" : "Option option;",
      "right" : "Option option;",
      "info" : "VariableDeclarationStatement[16504-16518]:VariableDeclarationStatement[16504-16518]"
    }, {
      "left" : "List optList = new ArrayList(options.getOptions());",
      "right" : "List optList = new ArrayList(options.getOptions());",
      "info" : "VariableDeclarationStatement[16528-16579]:VariableDeclarationStatement[16528-16579]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[16588-16637]:ExpressionStatement[16588-16637]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[16682-17799]:ForStatement[16682-17799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16742-17799]:Block[16742-17799]"
    }, {
      "left" : "option = (Option) i.next();",
      "right" : "option = (Option) i.next();",
      "info" : "ExpressionStatement[16791-16818]:ExpressionStatement[16791-16818]"
    }, {
      "left" : "OptionGroup group = options.getOptionGroup(option);",
      "right" : "OptionGroup group = options.getOptionGroup(option);",
      "info" : "VariableDeclarationStatement[16893-16944]:VariableDeclarationStatement[16893-16944]"
    }, {
      "left" : "if (group != null)",
      "right" : "if (group != null)",
      "info" : "IfStatement[17007-17697]:IfStatement[17007-17697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17038-17527]:Block[17038-17527]"
    }, {
      "left" : "if (!processedGroups.contains(group))",
      "right" : "if (!processedGroups.contains(group))",
      "info" : "IfStatement[17123-17401]:IfStatement[17123-17401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17177-17401]:Block[17177-17401]"
    }, {
      "left" : "processedGroups.add(group);",
      "right" : "processedGroups.add(group);",
      "info" : "ExpressionStatement[17258-17285]:ExpressionStatement[17258-17285]"
    }, {
      "left" : "appendOptionGroup(buff, group);",
      "right" : "appendOptionGroup(buff, group);",
      "info" : "ExpressionStatement[17352-17383]:ExpressionStatement[17352-17383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17617-17697]:Block[17617-17697]"
    }, {
      "left" : "appendOption(buff, option, option.isRequired());",
      "right" : "appendOption(buff, option, option.isRequired());",
      "info" : "ExpressionStatement[17635-17683]:ExpressionStatement[17635-17683]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[17711-17789]:IfStatement[17711-17789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17740-17789]:Block[17740-17789]"
    }, {
      "left" : "buff.append(\" \");",
      "right" : "buff.append(\" \");",
      "info" : "ExpressionStatement[17758-17775]:ExpressionStatement[17758-17775]"
    }, {
      "left" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "right" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "info" : "ExpressionStatement[17839-17914]:ExpressionStatement[17839-17914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18378-19025]:Block[18378-19025]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[18388-18462]:IfStatement[18388-18462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18421-18462]:Block[18421-18462]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[18435-18452]:ExpressionStatement[18435-18452]"
    }, {
      "left" : "List optList = new ArrayList(group.getOptions());",
      "right" : "List optList = new ArrayList(group.getOptions());",
      "info" : "VariableDeclarationStatement[18472-18521]:VariableDeclarationStatement[18472-18521]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[18530-18579]:ExpressionStatement[18530-18579]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[18634-18935]:ForStatement[18634-18935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18694-18935]:Block[18694-18935]"
    }, {
      "left" : "appendOption(buff, (Option) i.next(), true);",
      "right" : "appendOption(buff, (Option) i.next(), true);",
      "info" : "ExpressionStatement[18787-18831]:ExpressionStatement[18787-18831]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[18845-18925]:IfStatement[18845-18925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18874-18925]:Block[18874-18925]"
    }, {
      "left" : "buff.append(\" | \");",
      "right" : "buff.append(\" | \");",
      "info" : "ExpressionStatement[18892-18911]:ExpressionStatement[18892-18911]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[18945-19019]:IfStatement[18945-19019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18978-19019]:Block[18978-19019]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[18992-19009]:ExpressionStatement[18992-19009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19373-20168]:Block[19373-20168]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[19383-19447]:IfStatement[19383-19447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19406-19447]:Block[19406-19447]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[19420-19437]:ExpressionStatement[19420-19437]"
    }, {
      "left" : "if (option.getOpt() != null)",
      "right" : "if (option.getOpt() != null)",
      "info" : "IfStatement[19457-19651]:IfStatement[19457-19651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19494-19559]:Block[19494-19559]"
    }, {
      "left" : "buff.append(\"-\").append(option.getOpt());",
      "right" : "buff.append(\"-\").append(option.getOpt());",
      "info" : "ExpressionStatement[19508-19549]:ExpressionStatement[19508-19549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19581-19651]:Block[19581-19651]"
    }, {
      "left" : "buff.append(\"--\").append(option.getLongOpt());",
      "right" : "buff.append(\"--\").append(option.getLongOpt());",
      "info" : "ExpressionStatement[19595-19641]:ExpressionStatement[19595-19641]"
    }, {
      "left" : "if (option.hasArg() && (option.getArgName() == null || option.getArgName().length() != 0))",
      "right" : "if (option.hasArg() && (option.getArgName() == null || option.getArgName().length() != 0))",
      "info" : "IfStatement[19730-20030]:IfStatement[19730-20030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19829-20030]:Block[19829-20030]"
    }, {
      "left" : "buff.append(option.getOpt() == null ? longOptSeparator : \" \");",
      "right" : "buff.append(option.getOpt() == null ? longOptSeparator : \" \");",
      "info" : "ExpressionStatement[19843-19905]:ExpressionStatement[19843-19905]"
    }, {
      "left" : "buff.append(\"<\").append(option.getArgName() != null ? option.getArgName() : getArgName()).append(\">\");",
      "right" : "buff.append(\"<\").append(option.getArgName() != null ? option.getArgName() : getArgName()).append(\">\");",
      "info" : "ExpressionStatement[19918-20020]:ExpressionStatement[19918-20020]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[20098-20162]:IfStatement[20098-20162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20121-20162]:Block[20121-20162]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[20135-20152]:ExpressionStatement[20135-20152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20549-20719]:Block[20549-20719]"
    }, {
      "left" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "right" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "info" : "VariableDeclarationStatement[20559-20603]:VariableDeclarationStatement[20559-20603]"
    }, {
      "left" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "right" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "info" : "ExpressionStatement[20613-20713]:ExpressionStatement[20613-20713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21387-21537]:Block[21387-21537]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer();",
      "right" : "StringBuffer sb = new StringBuffer();",
      "info" : "VariableDeclarationStatement[21397-21434]:VariableDeclarationStatement[21397-21434]"
    }, {
      "left" : "renderOptions(sb, width, options, leftPad, descPad);",
      "right" : "renderOptions(sb, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[21444-21496]:ExpressionStatement[21444-21496]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[21505-21531]:ExpressionStatement[21505-21531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21877-21926]:Block[21877-21926]"
    }, {
      "left" : "printWrapped(pw, width, 0, text);",
      "right" : "printWrapped(pw, width, 0, text);",
      "info" : "ExpressionStatement[21887-21920]:ExpressionStatement[21887-21920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23301-25944]:Block[23306-25949]"
    }, {
      "left" : "final String lpad = createPadding(leftPad);",
      "right" : "final String lpad = createPadding(leftPad);",
      "info" : "VariableDeclarationStatement[23311-23354]:VariableDeclarationStatement[23316-23359]"
    }, {
      "left" : "final String dpad = createPadding(descPad);",
      "right" : "final String dpad = createPadding(descPad);",
      "info" : "VariableDeclarationStatement[23363-23406]:VariableDeclarationStatement[23368-23411]"
    }, {
      "left" : "int max = 0;",
      "right" : "int max = 0;",
      "info" : "VariableDeclarationStatement[23649-23661]:VariableDeclarationStatement[23654-23666]"
    }, {
      "left" : "StringBuffer optBuf;",
      "right" : "StringBuffer optBuf;",
      "info" : "VariableDeclarationStatement[23670-23690]:VariableDeclarationStatement[23675-23695]"
    }, {
      "left" : "List prefixList = new ArrayList();",
      "right" : "List prefixList = new ArrayList();",
      "info" : "VariableDeclarationStatement[23699-23733]:VariableDeclarationStatement[23704-23738]"
    }, {
      "left" : "List optList = options.helpOptions();",
      "right" : "List optList = options.helpOptions();",
      "info" : "VariableDeclarationStatement[23743-23780]:VariableDeclarationStatement[23748-23785]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[23790-23839]:ExpressionStatement[23795-23844]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[23849-25164]:ForStatement[23854-25169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23909-25164]:Block[23914-25169]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[23923-23957]:VariableDeclarationStatement[23928-23962]"
    }, {
      "left" : "optBuf = new StringBuffer();",
      "right" : "optBuf = new StringBuffer();",
      "info" : "ExpressionStatement[23970-23998]:ExpressionStatement[23975-24003]"
    }, {
      "left" : "if (option.getOpt() == null)",
      "right" : "if (option.getOpt() == null)",
      "info" : "IfStatement[24024-24488]:IfStatement[24029-24493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24065-24182]:Block[24070-24187]"
    }, {
      "left" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[24083-24168]:ExpressionStatement[24088-24173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24212-24488]:Block[24217-24493]"
    }, {
      "left" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "right" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "info" : "ExpressionStatement[24230-24299]:ExpressionStatement[24235-24304]"
    }, {
      "left" : "if (option.hasLongOpt())",
      "right" : "if (option.hasLongOpt())",
      "info" : "IfStatement[24317-24474]:IfStatement[24322-24479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24358-24474]:Block[24363-24479]"
    }, {
      "left" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[24380-24456]:ExpressionStatement[24385-24461]"
    }, {
      "left" : "if (option.hasArg())",
      "right" : "if (option.hasArg())",
      "info" : "IfStatement[24502-25050]:IfStatement[24507-25055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24535-25050]:Block[24540-25055]"
    }, {
      "left" : "String argName = option.getArgName();",
      "right" : "String argName = option.getArgName();",
      "info" : "VariableDeclarationStatement[24553-24590]:VariableDeclarationStatement[24558-24595]"
    }, {
      "left" : "if (argName != null && argName.length() == 0)",
      "right" : "if (argName != null && argName.length() == 0)",
      "info" : "IfStatement[24607-25036]:IfStatement[24612-25041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24669-24785]:Block[24674-24790]"
    }, {
      "left" : "optBuf.append(' ');",
      "right" : "optBuf.append(' ');",
      "info" : "ExpressionStatement[24748-24767]:ExpressionStatement[24753-24772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24823-25036]:Block[24828-25041]"
    }, {
      "left" : "optBuf.append(option.hasLongOpt() ? longOptSeparator : \" \");",
      "right" : "optBuf.append(option.hasLongOpt() ? longOptSeparator : \" \");",
      "info" : "ExpressionStatement[24845-24905]:ExpressionStatement[24850-24910]"
    }, {
      "left" : "optBuf.append(\"<\").append(argName != null ? option.getArgName() : getArgName()).append(\">\");",
      "right" : "optBuf.append(\"<\").append(argName != null ? option.getArgName() : getArgName()).append(\">\");",
      "info" : "ExpressionStatement[24926-25018]:ExpressionStatement[24931-25023]"
    }, {
      "left" : "prefixList.add(optBuf);",
      "right" : "prefixList.add(optBuf);",
      "info" : "ExpressionStatement[25064-25087]:ExpressionStatement[25069-25092]"
    }, {
      "left" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "right" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "info" : "ExpressionStatement[25100-25154]:ExpressionStatement[25105-25159]"
    }, {
      "left" : "int x = 0;",
      "right" : "int x = 0;",
      "info" : "VariableDeclarationStatement[25174-25184]:VariableDeclarationStatement[25179-25189]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[25194-25918]:ForStatement[25199-25923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25254-25918]:Block[25259-25923]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[25268-25302]:VariableDeclarationStatement[25273-25307]"
    }, {
      "left" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "right" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "info" : "ExpressionStatement[25315-25373]:ExpressionStatement[25320-25378]"
    }, {
      "left" : "if (optBuf.length() < max)",
      "right" : "if (optBuf.length() < max)",
      "info" : "IfStatement[25387-25510]:IfStatement[25392-25515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25426-25510]:Block[25431-25515]"
    }, {
      "left" : "optBuf.append(createPadding(max - optBuf.length()));",
      "right" : "optBuf.append(createPadding(max - optBuf.length()));",
      "info" : "ExpressionStatement[25444-25496]:ExpressionStatement[25449-25501]"
    }, {
      "left" : "optBuf.append(dpad);",
      "right" : "optBuf.append(dpad);",
      "info" : "ExpressionStatement[25524-25544]:ExpressionStatement[25529-25549]"
    }, {
      "left" : "int nextLineTabStop = max + descPad;",
      "right" : "int nextLineTabStop = max + descPad;",
      "info" : "VariableDeclarationStatement[25558-25594]:VariableDeclarationStatement[25563-25599]"
    }, {
      "left" : "if (option.getDescription() != null)",
      "right" : "if (option.getDescription() != null)",
      "info" : "IfStatement[25608-25728]:IfStatement[25613-25733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25657-25728]:Block[25662-25733]"
    }, {
      "left" : "optBuf.append(option.getDescription());",
      "right" : "optBuf.append(option.getDescription());",
      "info" : "ExpressionStatement[25675-25714]:ExpressionStatement[25680-25719]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "info" : "ExpressionStatement[25742-25807]:ExpressionStatement[25747-25812]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[25821-25908]:IfStatement[25826-25913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25850-25908]:Block[25855-25913]"
    }, {
      "left" : "sb.append(defaultNewLine);",
      "right" : "sb.append(defaultNewLine);",
      "info" : "ExpressionStatement[25868-25894]:ExpressionStatement[25873-25899]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[25928-25938]:ReturnStatement[25933-25943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26547-27547]:Block[26552-27552]"
    }, {
      "left" : "int pos = findWrapPos(text, width, 0);",
      "right" : "int pos = findWrapPos(text, width, 0);",
      "info" : "VariableDeclarationStatement[26557-26595]:VariableDeclarationStatement[26562-26600]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[26605-26699]:IfStatement[26610-26704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26628-26699]:Block[26633-26704]"
    }, {
      "left" : "sb.append(rtrim(text));",
      "right" : "sb.append(rtrim(text));",
      "info" : "ExpressionStatement[26642-26665]:ExpressionStatement[26647-26670]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[26679-26689]:ReturnStatement[26684-26694]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[26708-26772]:ExpressionStatement[26713-26777]"
    }, {
      "left" : "if (nextLineTabStop >= width)",
      "right" : "if (nextLineTabStop >= width)",
      "info" : "IfStatement[26782-26909]:IfStatement[26787-26914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26820-26909]:Block[26825-26914]"
    }, {
      "left" : "nextLineTabStop = 1;",
      "right" : "nextLineTabStop = 1;",
      "info" : "ExpressionStatement[26879-26899]:ExpressionStatement[26884-26904]"
    }, {
      "left" : "final String padding = createPadding(nextLineTabStop);",
      "right" : "final String padding = createPadding(nextLineTabStop);",
      "info" : "VariableDeclarationStatement[27003-27057]:VariableDeclarationStatement[27008-27062]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[27067-27541]:WhileStatement[27072-27546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27088-27541]:Block[27093-27546]"
    }, {
      "left" : "text = padding + text.substring(pos).trim();",
      "right" : "text = padding + text.substring(pos).trim();",
      "info" : "ExpressionStatement[27102-27146]:ExpressionStatement[27107-27151]"
    }, {
      "left" : "pos = findWrapPos(text, width, 0);",
      "right" : "pos = findWrapPos(text, width, 0);",
      "info" : "ExpressionStatement[27159-27193]:ExpressionStatement[27164-27198]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[27207-27310]:IfStatement[27212-27315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27234-27310]:Block[27239-27315]"
    }, {
      "left" : "sb.append(text);",
      "right" : "sb.append(text);",
      "info" : "ExpressionStatement[27252-27268]:ExpressionStatement[27257-27273]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[27286-27296]:ReturnStatement[27291-27301]"
    }, {
      "left" : "if ((text.length() > width) && (pos == nextLineTabStop - 1))",
      "right" : "if ((text.length() > width) && (pos == nextLineTabStop - 1))",
      "info" : "IfStatement[27336-27453]:IfStatement[27341-27458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27409-27453]:Block[27414-27458]"
    }, {
      "left" : "pos = width;",
      "right" : "pos = width;",
      "info" : "ExpressionStatement[27427-27439]:ExpressionStatement[27432-27444]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[27467-27531]:ExpressionStatement[27472-27536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28797-29754]:Block[29433-30390]"
    }, {
      "left" : "int pos;",
      "right" : "int pos;",
      "info" : "VariableDeclarationStatement[28807-28815]:VariableDeclarationStatement[29443-29451]"
    }, {
      "left" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "right" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "info" : "IfStatement[28907-29195]:IfStatement[29543-29831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29061-29100]:Block[29697-29736]"
    }, {
      "left" : "return pos + 1;",
      "right" : "return pos + 1;",
      "info" : "ReturnStatement[29075-29090]:ReturnStatement[29711-29726]"
    }, {
      "left" : "if (startPos + width >= text.length())",
      "right" : "if (startPos + width >= text.length())",
      "info" : "IfStatement[29114-29195]:IfStatement[29750-29831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29161-29195]:Block[29797-29831]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[29175-29185]:ReturnStatement[29811-29821]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[29278-29301]:ExpressionStatement[29914-29937]"
    }, {
      "left" : "char c;",
      "right" : "char c;",
      "info" : "VariableDeclarationStatement[29311-29318]:VariableDeclarationStatement[29947-29954]"
    }, {
      "left" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))",
      "right" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))",
      "info" : "WhileStatement[29328-29473]:WhileStatement[29964-30109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29443-29473]:Block[30079-30109]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[29457-29463]:ExpressionStatement[30093-30099]"
    }, {
      "left" : "if (pos > startPos)",
      "right" : "if (pos > startPos)",
      "info" : "IfStatement[29523-29586]:IfStatement[30159-30222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29551-29586]:Block[30187-30222]"
    }, {
      "left" : "return pos;",
      "right" : "return pos;",
      "info" : "ReturnStatement[29565-29576]:ReturnStatement[30201-30212]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[29668-29691]:ExpressionStatement[30304-30327]"
    }, {
      "left" : "return pos == text.length() ? -1 : pos;",
      "right" : "return pos == text.length() ? -1 : pos;",
      "info" : "ReturnStatement[29709-29748]:ReturnStatement[30345-30384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29998-30125]:Block[30634-30761]"
    }, {
      "left" : "char[] padding = new char[len];",
      "right" : "char[] padding = new char[len];",
      "info" : "VariableDeclarationStatement[30008-30039]:VariableDeclarationStatement[30644-30675]"
    }, {
      "left" : "Arrays.fill(padding, ' ');",
      "right" : "Arrays.fill(padding, ' ');",
      "info" : "ExpressionStatement[30048-30074]:ExpressionStatement[30684-30710]"
    }, {
      "left" : "return new String(padding);",
      "right" : "return new String(padding);",
      "info" : "ReturnStatement[30092-30119]:ReturnStatement[30728-30755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30385-30659]:Block[31021-31295]"
    }, {
      "left" : "if ((s == null) || (s.length() == 0))",
      "right" : "if ((s == null) || (s.length() == 0))",
      "info" : "IfStatement[30395-30474]:IfStatement[31031-31110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30441-30474]:Block[31077-31110]"
    }, {
      "left" : "return s;",
      "right" : "return s;",
      "info" : "ReturnStatement[30455-30464]:ReturnStatement[31091-31100]"
    }, {
      "left" : "int pos = s.length();",
      "right" : "int pos = s.length();",
      "info" : "VariableDeclarationStatement[30484-30505]:VariableDeclarationStatement[31120-31141]"
    }, {
      "left" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "right" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "info" : "WhileStatement[30515-30616]:WhileStatement[31151-31252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30586-30616]:Block[31222-31252]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[30600-30606]:ExpressionStatement[31236-31242]"
    }, {
      "left" : "return s.substring(0, pos);",
      "right" : "return s.substring(0, pos);",
      "info" : "ReturnStatement[30626-30653]:ReturnStatement[31262-31289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31666-31825]:Block[32302-32461]"
    }, {
      "left" : "Option opt1 = (Option) o1;",
      "right" : "Option opt1 = (Option) o1;",
      "info" : "VariableDeclarationStatement[31680-31706]:VariableDeclarationStatement[32316-32342]"
    }, {
      "left" : "Option opt2 = (Option) o2;",
      "right" : "Option opt2 = (Option) o2;",
      "info" : "VariableDeclarationStatement[31719-31745]:VariableDeclarationStatement[32355-32381]"
    }, {
      "left" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "right" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "info" : "ReturnStatement[31759-31815]:ReturnStatement[32395-32451]"
    } ]
  },
  "interFileMappings" : { }
}