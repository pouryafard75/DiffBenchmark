{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "TypeDeclaration[1178-18928]:TypeDeclaration[1178-18942]"
    }, {
      "left" : "private static final String[] REPLACEMENT_CHARS;",
      "right" : "private static final String[] REPLACEMENT_CHARS;",
      "info" : "FieldDeclaration[5359-5407]:FieldDeclaration[5359-5407]"
    }, {
      "left" : "private static final String[] HTML_SAFE_REPLACEMENT_CHARS;",
      "right" : "private static final String[] HTML_SAFE_REPLACEMENT_CHARS;",
      "info" : "FieldDeclaration[5410-5468]:FieldDeclaration[5410-5468]"
    }, {
      "left" : "private final Writer out;",
      "right" : "private final Writer out;",
      "info" : "FieldDeclaration[6208-6309]:FieldDeclaration[6208-6309]"
    }, {
      "left" : "private int[] stack = new int[32];",
      "right" : "private int[] stack = new int[32];",
      "info" : "FieldDeclaration[6313-6347]:FieldDeclaration[6313-6347]"
    }, {
      "left" : "private int stackSize = 0;",
      "right" : "private int stackSize = 0;",
      "info" : "FieldDeclaration[6350-6376]:FieldDeclaration[6350-6376]"
    }, {
      "left" : "private String indent;",
      "right" : "private String indent;",
      "info" : "FieldDeclaration[6414-6566]:FieldDeclaration[6414-6566]"
    }, {
      "left" : "private String separator = \":\";",
      "right" : "private String separator = \":\";",
      "info" : "FieldDeclaration[6570-6664]:FieldDeclaration[6570-6664]"
    }, {
      "left" : "private boolean lenient;",
      "right" : "private boolean lenient;",
      "info" : "FieldDeclaration[6668-6692]:FieldDeclaration[6668-6692]"
    }, {
      "left" : "private boolean htmlSafe;",
      "right" : "private boolean htmlSafe;",
      "info" : "FieldDeclaration[6696-6721]:FieldDeclaration[6696-6721]"
    }, {
      "left" : "private String deferredName;",
      "right" : "private String deferredName;",
      "info" : "FieldDeclaration[6725-6753]:FieldDeclaration[6725-6753]"
    }, {
      "left" : "private boolean serializeNulls = true;",
      "right" : "private boolean serializeNulls = true;",
      "info" : "FieldDeclaration[6757-6795]:FieldDeclaration[6757-6795]"
    }, {
      "left" : "public JsonWriter(Writer out)",
      "right" : "public JsonWriter(Writer out)",
      "info" : "MethodDeclaration[6799-7165]:MethodDeclaration[6799-7165]"
    }, {
      "left" : "public final void setIndent(String indent)",
      "right" : "public final void setIndent(String indent)",
      "info" : "MethodDeclaration[7169-7696]:MethodDeclaration[7169-7696]"
    }, {
      "left" : "public final void setLenient(boolean lenient)",
      "right" : "public final void setLenient(boolean lenient)",
      "info" : "MethodDeclaration[7700-8294]:MethodDeclaration[7700-8294]"
    }, {
      "left" : "public boolean isLenient()",
      "right" : "public boolean isLenient()",
      "info" : "MethodDeclaration[8298-8421]:MethodDeclaration[8298-8421]"
    }, {
      "left" : "public final void setHtmlSafe(boolean htmlSafe)",
      "right" : "public final void setHtmlSafe(boolean htmlSafe)",
      "info" : "MethodDeclaration[8425-8871]:MethodDeclaration[8425-8871]"
    }, {
      "left" : "public final boolean isHtmlSafe()",
      "right" : "public final boolean isHtmlSafe()",
      "info" : "MethodDeclaration[8875-9050]:MethodDeclaration[8875-9050]"
    }, {
      "left" : "public final void setSerializeNulls(boolean serializeNulls)",
      "right" : "public final void setSerializeNulls(boolean serializeNulls)",
      "info" : "MethodDeclaration[9054-9311]:MethodDeclaration[9054-9311]"
    }, {
      "left" : "public final boolean getSerializeNulls()",
      "right" : "public final boolean getSerializeNulls()",
      "info" : "MethodDeclaration[9315-9541]:MethodDeclaration[9315-9541]"
    }, {
      "left" : "public JsonWriter beginArray() throws IOException",
      "right" : "public JsonWriter beginArray() throws IOException",
      "info" : "MethodDeclaration[9545-9816]:MethodDeclaration[9545-9816]"
    }, {
      "left" : "public JsonWriter endArray() throws IOException",
      "right" : "public JsonWriter endArray() throws IOException",
      "info" : "MethodDeclaration[9820-10006]:MethodDeclaration[9820-10006]"
    }, {
      "left" : "public JsonWriter beginObject() throws IOException",
      "right" : "public JsonWriter beginObject() throws IOException",
      "info" : "MethodDeclaration[10010-10285]:MethodDeclaration[10010-10285]"
    }, {
      "left" : "public JsonWriter endObject() throws IOException",
      "right" : "public JsonWriter endObject() throws IOException",
      "info" : "MethodDeclaration[10289-10479]:MethodDeclaration[10289-10479]"
    }, {
      "left" : "private JsonWriter open(int empty, String openBracket) throws IOException",
      "right" : "private JsonWriter open(int empty, String openBracket) throws IOException",
      "info" : "MethodDeclaration[10483-10745]:MethodDeclaration[10483-10745]"
    }, {
      "left" : "private JsonWriter close(int empty, int nonempty, String closeBracket)\n      throws IOException",
      "right" : "private JsonWriter close(int empty, int nonempty, String closeBracket)\n      throws IOException",
      "info" : "MethodDeclaration[10749-11329]:MethodDeclaration[10749-11329]"
    }, {
      "left" : "private void push(int newTop)",
      "right" : "private void push(int newTop)",
      "info" : "MethodDeclaration[11333-11573]:MethodDeclaration[11333-11573]"
    }, {
      "left" : "private int peek()",
      "right" : "private int peek()",
      "info" : "MethodDeclaration[11577-11790]:MethodDeclaration[11577-11790]"
    }, {
      "left" : "private void replaceTop(int topOfStack)",
      "right" : "private void replaceTop(int topOfStack)",
      "info" : "MethodDeclaration[11794-11959]:MethodDeclaration[11794-11959]"
    }, {
      "left" : "public JsonWriter name(String name) throws IOException",
      "right" : "public JsonWriter name(String name) throws IOException",
      "info" : "MethodDeclaration[11963-12468]:MethodDeclaration[11963-12468]"
    }, {
      "left" : "private void writeDeferredName() throws IOException",
      "right" : "private void writeDeferredName() throws IOException",
      "info" : "MethodDeclaration[12472-12642]:MethodDeclaration[12472-12642]"
    }, {
      "left" : "public JsonWriter value(String value) throws IOException",
      "right" : "public JsonWriter value(String value) throws IOException",
      "info" : "MethodDeclaration[12646-12994]:MethodDeclaration[12646-12994]"
    }, {
      "left" : "public JsonWriter jsonValue(String value) throws IOException",
      "right" : "public JsonWriter jsonValue(String value) throws IOException",
      "info" : "MethodDeclaration[12998-13409]:MethodDeclaration[12998-13409]"
    }, {
      "left" : "public JsonWriter nullValue() throws IOException",
      "right" : "public JsonWriter nullValue() throws IOException",
      "info" : "MethodDeclaration[13413-13795]:MethodDeclaration[13413-13795]"
    }, {
      "left" : "public JsonWriter value(boolean value) throws IOException",
      "right" : "public JsonWriter value(boolean value) throws IOException",
      "info" : "MethodDeclaration[13799-14035]:MethodDeclaration[13799-14035]"
    }, {
      "left" : "public JsonWriter value(Boolean value) throws IOException",
      "right" : "public JsonWriter value(Boolean value) throws IOException",
      "info" : "MethodDeclaration[14039-14332]:MethodDeclaration[14039-14332]"
    }, {
      "left" : "public JsonWriter value(double value) throws IOException",
      "right" : "public JsonWriter value(double value) throws IOException",
      "info" : "MethodDeclaration[14336-14853]:MethodDeclaration[14336-14867]"
    }, {
      "left" : "public JsonWriter value(long value) throws IOException",
      "right" : "public JsonWriter value(long value) throws IOException",
      "info" : "MethodDeclaration[14857-15086]:MethodDeclaration[14871-15100]"
    }, {
      "left" : "public JsonWriter value(Number value) throws IOException",
      "right" : "public JsonWriter value(Number value) throws IOException",
      "info" : "MethodDeclaration[15090-15741]:MethodDeclaration[15104-15755]"
    }, {
      "left" : "public void flush() throws IOException",
      "right" : "public void flush() throws IOException",
      "info" : "MethodDeclaration[15745-16019]:MethodDeclaration[15759-16033]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[16023-16410]:MethodDeclaration[16037-16424]"
    }, {
      "left" : "private void string(String value) throws IOException",
      "right" : "private void string(String value) throws IOException",
      "info" : "MethodDeclaration[16414-17254]:MethodDeclaration[16428-17268]"
    }, {
      "left" : "private void newline() throws IOException",
      "right" : "private void newline() throws IOException",
      "info" : "MethodDeclaration[17258-17459]:MethodDeclaration[17272-17473]"
    }, {
      "left" : "private void beforeName() throws IOException",
      "right" : "private void beforeName() throws IOException",
      "info" : "MethodDeclaration[17463-17928]:MethodDeclaration[17477-17942]"
    }, {
      "left" : "private void beforeValue() throws IOException",
      "right" : "private void beforeValue() throws IOException",
      "info" : "MethodDeclaration[17932-18926]:MethodDeclaration[17946-18940]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4831-4837]:Modifier[4831-4837]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[4838-4843]:TYPE_DECLARATION_KIND[4838-4843]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleName[4844-4854]:SimpleName[4844-4854]"
    }, {
      "left" : "Closeable",
      "right" : "Closeable",
      "info" : "SimpleType[4866-4875]:SimpleType[4866-4875]"
    }, {
      "left" : "Flushable",
      "right" : "Flushable",
      "info" : "SimpleType[4877-4886]:SimpleType[4877-4886]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7028-7034]:Modifier[7028-7034]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleName[7035-7045]:SimpleName[7035-7045]"
    }, {
      "left" : "Writer out",
      "right" : "Writer out",
      "info" : "SingleVariableDeclaration[7046-7056]:SingleVariableDeclaration[7046-7056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7058-7165]:Block[7058-7165]"
    }, {
      "left" : "if (out == null)",
      "right" : "if (out == null)",
      "info" : "IfStatement[7064-7141]:IfStatement[7064-7141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7081-7141]:Block[7081-7141]"
    }, {
      "left" : "throw new NullPointerException(\"out == null\");",
      "right" : "throw new NullPointerException(\"out == null\");",
      "info" : "ThrowStatement[7089-7135]:ThrowStatement[7089-7135]"
    }, {
      "left" : "this.out = out;",
      "right" : "this.out = out;",
      "info" : "ExpressionStatement[7146-7161]:ExpressionStatement[7146-7161]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7486-7492]:Modifier[7486-7492]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[7493-7498]:Modifier[7493-7498]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7499-7503]:PrimitiveType[7499-7503]"
    }, {
      "left" : "setIndent",
      "right" : "setIndent",
      "info" : "SimpleName[7504-7513]:SimpleName[7504-7513]"
    }, {
      "left" : "String indent",
      "right" : "String indent",
      "info" : "SingleVariableDeclaration[7514-7527]:SingleVariableDeclaration[7514-7527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7529-7696]:Block[7529-7696]"
    }, {
      "left" : "if (indent.length() == 0)",
      "right" : "if (indent.length() == 0)",
      "info" : "IfStatement[7535-7692]:IfStatement[7535-7692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7561-7622]:Block[7561-7622]"
    }, {
      "left" : "this.indent = null;",
      "right" : "this.indent = null;",
      "info" : "ExpressionStatement[7569-7588]:ExpressionStatement[7569-7588]"
    }, {
      "left" : "this.separator = \":\";",
      "right" : "this.separator = \":\";",
      "info" : "ExpressionStatement[7595-7616]:ExpressionStatement[7595-7616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7628-7692]:Block[7628-7692]"
    }, {
      "left" : "this.indent = indent;",
      "right" : "this.indent = indent;",
      "info" : "ExpressionStatement[7636-7657]:ExpressionStatement[7636-7657]"
    }, {
      "left" : "this.separator = \": \";",
      "right" : "this.separator = \": \";",
      "info" : "ExpressionStatement[7664-7686]:ExpressionStatement[7664-7686]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8215-8221]:Modifier[8215-8221]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[8222-8227]:Modifier[8222-8227]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8228-8232]:PrimitiveType[8228-8232]"
    }, {
      "left" : "setLenient",
      "right" : "setLenient",
      "info" : "SimpleName[8233-8243]:SimpleName[8233-8243]"
    }, {
      "left" : "boolean lenient",
      "right" : "boolean lenient",
      "info" : "SingleVariableDeclaration[8244-8259]:SingleVariableDeclaration[8244-8259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8261-8294]:Block[8261-8294]"
    }, {
      "left" : "this.lenient = lenient;",
      "right" : "this.lenient = lenient;",
      "info" : "ExpressionStatement[8267-8290]:ExpressionStatement[8267-8290]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8369-8375]:Modifier[8369-8375]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8376-8383]:PrimitiveType[8376-8383]"
    }, {
      "left" : "isLenient",
      "right" : "isLenient",
      "info" : "SimpleName[8384-8393]:SimpleName[8384-8393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8396-8421]:Block[8396-8421]"
    }, {
      "left" : "return lenient;",
      "right" : "return lenient;",
      "info" : "ReturnStatement[8402-8417]:ReturnStatement[8402-8417]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8788-8794]:Modifier[8788-8794]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[8795-8800]:Modifier[8795-8800]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8801-8805]:PrimitiveType[8801-8805]"
    }, {
      "left" : "setHtmlSafe",
      "right" : "setHtmlSafe",
      "info" : "SimpleName[8806-8817]:SimpleName[8806-8817]"
    }, {
      "left" : "boolean htmlSafe",
      "right" : "boolean htmlSafe",
      "info" : "SingleVariableDeclaration[8818-8834]:SingleVariableDeclaration[8818-8834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8836-8871]:Block[8836-8871]"
    }, {
      "left" : "this.htmlSafe = htmlSafe;",
      "right" : "this.htmlSafe = htmlSafe;",
      "info" : "ExpressionStatement[8842-8867]:ExpressionStatement[8842-8867]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8990-8996]:Modifier[8990-8996]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[8997-9002]:Modifier[8997-9002]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9003-9010]:PrimitiveType[9003-9010]"
    }, {
      "left" : "isHtmlSafe",
      "right" : "isHtmlSafe",
      "info" : "SimpleName[9011-9021]:SimpleName[9011-9021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9024-9050]:Block[9024-9050]"
    }, {
      "left" : "return htmlSafe;",
      "right" : "return htmlSafe;",
      "info" : "ReturnStatement[9030-9046]:ReturnStatement[9030-9046]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9204-9210]:Modifier[9204-9210]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9211-9216]:Modifier[9211-9216]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9217-9221]:PrimitiveType[9217-9221]"
    }, {
      "left" : "setSerializeNulls",
      "right" : "setSerializeNulls",
      "info" : "SimpleName[9222-9239]:SimpleName[9222-9239]"
    }, {
      "left" : "boolean serializeNulls",
      "right" : "boolean serializeNulls",
      "info" : "SingleVariableDeclaration[9240-9262]:SingleVariableDeclaration[9240-9262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9264-9311]:Block[9264-9311]"
    }, {
      "left" : "this.serializeNulls = serializeNulls;",
      "right" : "this.serializeNulls = serializeNulls;",
      "info" : "ExpressionStatement[9270-9307]:ExpressionStatement[9270-9307]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9468-9474]:Modifier[9468-9474]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9475-9480]:Modifier[9475-9480]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9481-9488]:PrimitiveType[9481-9488]"
    }, {
      "left" : "getSerializeNulls",
      "right" : "getSerializeNulls",
      "info" : "SimpleName[9489-9506]:SimpleName[9489-9506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9509-9541]:Block[9509-9541]"
    }, {
      "left" : "return serializeNulls;",
      "right" : "return serializeNulls;",
      "info" : "ReturnStatement[9515-9537]:ReturnStatement[9515-9537]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9701-9707]:Modifier[9701-9707]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[9708-9718]:SimpleType[9708-9718]"
    }, {
      "left" : "beginArray",
      "right" : "beginArray",
      "info" : "SimpleName[9719-9729]:SimpleName[9719-9729]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[9739-9750]:SimpleType[9739-9750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9751-9816]:Block[9751-9816]"
    }, {
      "left" : "writeDeferredName();",
      "right" : "writeDeferredName();",
      "info" : "ExpressionStatement[9757-9777]:ExpressionStatement[9757-9777]"
    }, {
      "left" : "return open(EMPTY_ARRAY, \"[\");",
      "right" : "return open(EMPTY_ARRAY, \"[\");",
      "info" : "ReturnStatement[9782-9812]:ReturnStatement[9782-9812]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9901-9907]:Modifier[9901-9907]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[9908-9918]:SimpleType[9908-9918]"
    }, {
      "left" : "endArray",
      "right" : "endArray",
      "info" : "SimpleName[9919-9927]:SimpleName[9919-9927]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[9937-9948]:SimpleType[9937-9948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9949-10006]:Block[9949-10006]"
    }, {
      "left" : "return close(EMPTY_ARRAY, NONEMPTY_ARRAY, \"]\");",
      "right" : "return close(EMPTY_ARRAY, NONEMPTY_ARRAY, \"]\");",
      "info" : "ReturnStatement[9955-10002]:ReturnStatement[9955-10002]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10168-10174]:Modifier[10168-10174]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[10175-10185]:SimpleType[10175-10185]"
    }, {
      "left" : "beginObject",
      "right" : "beginObject",
      "info" : "SimpleName[10186-10197]:SimpleName[10186-10197]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[10207-10218]:SimpleType[10207-10218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10219-10285]:Block[10219-10285]"
    }, {
      "left" : "writeDeferredName();",
      "right" : "writeDeferredName();",
      "info" : "ExpressionStatement[10225-10245]:ExpressionStatement[10225-10245]"
    }, {
      "left" : "return open(EMPTY_OBJECT, \"{\");",
      "right" : "return open(EMPTY_OBJECT, \"{\");",
      "info" : "ReturnStatement[10250-10281]:ReturnStatement[10250-10281]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10371-10377]:Modifier[10371-10377]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[10378-10388]:SimpleType[10378-10388]"
    }, {
      "left" : "endObject",
      "right" : "endObject",
      "info" : "SimpleName[10389-10398]:SimpleName[10389-10398]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[10408-10419]:SimpleType[10408-10419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10420-10479]:Block[10420-10479]"
    }, {
      "left" : "return close(EMPTY_OBJECT, NONEMPTY_OBJECT, \"}\");",
      "right" : "return close(EMPTY_OBJECT, NONEMPTY_OBJECT, \"}\");",
      "info" : "ReturnStatement[10426-10475]:ReturnStatement[10426-10475]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10585-10592]:Modifier[10585-10592]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[10593-10603]:SimpleType[10593-10603]"
    }, {
      "left" : "open",
      "right" : "open",
      "info" : "SimpleName[10604-10608]:SimpleName[10604-10608]"
    }, {
      "left" : "int empty",
      "right" : "int empty",
      "info" : "SingleVariableDeclaration[10609-10618]:SingleVariableDeclaration[10609-10618]"
    }, {
      "left" : "String openBracket",
      "right" : "String openBracket",
      "info" : "SingleVariableDeclaration[10620-10638]:SingleVariableDeclaration[10620-10638]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[10647-10658]:SimpleType[10647-10658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10659-10745]:Block[10659-10745]"
    }, {
      "left" : "beforeValue();",
      "right" : "beforeValue();",
      "info" : "ExpressionStatement[10665-10679]:ExpressionStatement[10665-10679]"
    }, {
      "left" : "push(empty);",
      "right" : "push(empty);",
      "info" : "ExpressionStatement[10684-10696]:ExpressionStatement[10684-10696]"
    }, {
      "left" : "out.write(openBracket);",
      "right" : "out.write(openBracket);",
      "info" : "ExpressionStatement[10701-10724]:ExpressionStatement[10701-10724]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10729-10741]:ReturnStatement[10729-10741]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10857-10864]:Modifier[10857-10864]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[10865-10875]:SimpleType[10865-10875]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[10876-10881]:SimpleName[10876-10881]"
    }, {
      "left" : "int empty",
      "right" : "int empty",
      "info" : "SingleVariableDeclaration[10882-10891]:SingleVariableDeclaration[10882-10891]"
    }, {
      "left" : "int nonempty",
      "right" : "int nonempty",
      "info" : "SingleVariableDeclaration[10893-10905]:SingleVariableDeclaration[10893-10905]"
    }, {
      "left" : "String closeBracket",
      "right" : "String closeBracket",
      "info" : "SingleVariableDeclaration[10907-10926]:SingleVariableDeclaration[10907-10926]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[10941-10952]:SimpleType[10941-10952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10953-11329]:Block[10953-11329]"
    }, {
      "left" : "int context = peek();",
      "right" : "int context = peek();",
      "info" : "VariableDeclarationStatement[10959-10980]:VariableDeclarationStatement[10959-10980]"
    }, {
      "left" : "if (context != nonempty && context != empty)",
      "right" : "if (context != nonempty && context != empty)",
      "info" : "IfStatement[10985-11096]:IfStatement[10985-11096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11030-11096]:Block[11030-11096]"
    }, {
      "left" : "throw new IllegalStateException(\"Nesting problem.\");",
      "right" : "throw new IllegalStateException(\"Nesting problem.\");",
      "info" : "ThrowStatement[11038-11090]:ThrowStatement[11038-11090]"
    }, {
      "left" : "if (deferredName != null)",
      "right" : "if (deferredName != null)",
      "info" : "IfStatement[11101-11207]:IfStatement[11101-11207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11127-11207]:Block[11127-11207]"
    }, {
      "left" : "throw new IllegalStateException(\"Dangling name: \" + deferredName);",
      "right" : "throw new IllegalStateException(\"Dangling name: \" + deferredName);",
      "info" : "ThrowStatement[11135-11201]:ThrowStatement[11135-11201]"
    }, {
      "left" : "stackSize--;",
      "right" : "stackSize--;",
      "info" : "ExpressionStatement[11213-11225]:ExpressionStatement[11213-11225]"
    }, {
      "left" : "if (context == nonempty)",
      "right" : "if (context == nonempty)",
      "info" : "IfStatement[11230-11279]:IfStatement[11230-11279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11255-11279]:Block[11255-11279]"
    }, {
      "left" : "newline();",
      "right" : "newline();",
      "info" : "ExpressionStatement[11263-11273]:ExpressionStatement[11263-11273]"
    }, {
      "left" : "out.write(closeBracket);",
      "right" : "out.write(closeBracket);",
      "info" : "ExpressionStatement[11284-11308]:ExpressionStatement[11284-11308]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[11313-11325]:ReturnStatement[11313-11325]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11333-11340]:Modifier[11333-11340]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11341-11345]:PrimitiveType[11341-11345]"
    }, {
      "left" : "push",
      "right" : "push",
      "info" : "SimpleName[11346-11350]:SimpleName[11346-11350]"
    }, {
      "left" : "int newTop",
      "right" : "int newTop",
      "info" : "SingleVariableDeclaration[11351-11361]:SingleVariableDeclaration[11351-11361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11363-11573]:Block[11363-11573]"
    }, {
      "left" : "if (stackSize == stack.length)",
      "right" : "if (stackSize == stack.length)",
      "info" : "IfStatement[11369-11536]:IfStatement[11369-11536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11400-11536]:Block[11400-11536]"
    }, {
      "left" : "int[] newStack = new int[stackSize * 2];",
      "right" : "int[] newStack = new int[stackSize * 2];",
      "info" : "VariableDeclarationStatement[11408-11448]:VariableDeclarationStatement[11408-11448]"
    }, {
      "left" : "System.arraycopy(stack, 0, newStack, 0, stackSize);",
      "right" : "System.arraycopy(stack, 0, newStack, 0, stackSize);",
      "info" : "ExpressionStatement[11455-11506]:ExpressionStatement[11455-11506]"
    }, {
      "left" : "stack = newStack;",
      "right" : "stack = newStack;",
      "info" : "ExpressionStatement[11513-11530]:ExpressionStatement[11513-11530]"
    }, {
      "left" : "stack[stackSize++] = newTop;",
      "right" : "stack[stackSize++] = newTop;",
      "info" : "ExpressionStatement[11541-11569]:ExpressionStatement[11541-11569]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11637-11644]:Modifier[11637-11644]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[11645-11648]:PrimitiveType[11645-11648]"
    }, {
      "left" : "peek",
      "right" : "peek",
      "info" : "SimpleName[11649-11653]:SimpleName[11649-11653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11656-11790]:Block[11656-11790]"
    }, {
      "left" : "if (stackSize == 0)",
      "right" : "if (stackSize == 0)",
      "info" : "IfStatement[11662-11753]:IfStatement[11662-11753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11682-11753]:Block[11682-11753]"
    }, {
      "left" : "throw new IllegalStateException(\"JsonWriter is closed.\");",
      "right" : "throw new IllegalStateException(\"JsonWriter is closed.\");",
      "info" : "ThrowStatement[11690-11747]:ThrowStatement[11690-11747]"
    }, {
      "left" : "return stack[stackSize - 1];",
      "right" : "return stack[stackSize - 1];",
      "info" : "ReturnStatement[11758-11786]:ReturnStatement[11758-11786]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11875-11882]:Modifier[11875-11882]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11883-11887]:PrimitiveType[11883-11887]"
    }, {
      "left" : "replaceTop",
      "right" : "replaceTop",
      "info" : "SimpleName[11888-11898]:SimpleName[11888-11898]"
    }, {
      "left" : "int topOfStack",
      "right" : "int topOfStack",
      "info" : "SingleVariableDeclaration[11899-11913]:SingleVariableDeclaration[11899-11913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11915-11959]:Block[11915-11959]"
    }, {
      "left" : "stack[stackSize - 1] = topOfStack;",
      "right" : "stack[stackSize - 1] = topOfStack;",
      "info" : "ExpressionStatement[11921-11955]:ExpressionStatement[11921-11955]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12107-12113]:Modifier[12107-12113]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[12114-12124]:SimpleType[12114-12124]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[12125-12129]:SimpleName[12125-12129]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[12130-12141]:SingleVariableDeclaration[12130-12141]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[12150-12161]:SimpleType[12150-12161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12162-12468]:Block[12162-12468]"
    }, {
      "left" : "if (name == null)",
      "right" : "if (name == null)",
      "info" : "IfStatement[12168-12247]:IfStatement[12168-12247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12186-12247]:Block[12186-12247]"
    }, {
      "left" : "throw new NullPointerException(\"name == null\");",
      "right" : "throw new NullPointerException(\"name == null\");",
      "info" : "ThrowStatement[12194-12241]:ThrowStatement[12194-12241]"
    }, {
      "left" : "if (deferredName != null)",
      "right" : "if (deferredName != null)",
      "info" : "IfStatement[12252-12326]:IfStatement[12252-12326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12278-12326]:Block[12278-12326]"
    }, {
      "left" : "throw new IllegalStateException();",
      "right" : "throw new IllegalStateException();",
      "info" : "ThrowStatement[12286-12320]:ThrowStatement[12286-12320]"
    }, {
      "left" : "if (stackSize == 0)",
      "right" : "if (stackSize == 0)",
      "info" : "IfStatement[12331-12422]:IfStatement[12331-12422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12351-12422]:Block[12351-12422]"
    }, {
      "left" : "throw new IllegalStateException(\"JsonWriter is closed.\");",
      "right" : "throw new IllegalStateException(\"JsonWriter is closed.\");",
      "info" : "ThrowStatement[12359-12416]:ThrowStatement[12359-12416]"
    }, {
      "left" : "deferredName = name;",
      "right" : "deferredName = name;",
      "info" : "ExpressionStatement[12427-12447]:ExpressionStatement[12427-12447]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[12452-12464]:ReturnStatement[12452-12464]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[12472-12479]:Modifier[12472-12479]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12480-12484]:PrimitiveType[12480-12484]"
    }, {
      "left" : "writeDeferredName",
      "right" : "writeDeferredName",
      "info" : "SimpleName[12485-12502]:SimpleName[12485-12502]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[12512-12523]:SimpleType[12512-12523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12524-12642]:Block[12524-12642]"
    }, {
      "left" : "if (deferredName != null)",
      "right" : "if (deferredName != null)",
      "info" : "IfStatement[12530-12638]:IfStatement[12530-12638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12556-12638]:Block[12556-12638]"
    }, {
      "left" : "beforeName();",
      "right" : "beforeName();",
      "info" : "ExpressionStatement[12564-12577]:ExpressionStatement[12564-12577]"
    }, {
      "left" : "string(deferredName);",
      "right" : "string(deferredName);",
      "info" : "ExpressionStatement[12584-12605]:ExpressionStatement[12584-12605]"
    }, {
      "left" : "deferredName = null;",
      "right" : "deferredName = null;",
      "info" : "ExpressionStatement[12612-12632]:ExpressionStatement[12612-12632]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12795-12801]:Modifier[12795-12801]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[12802-12812]:SimpleType[12802-12812]"
    }, {
      "left" : "value",
      "right" : "value",
      "info" : "SimpleName[12813-12818]:SimpleName[12813-12818]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[12819-12831]:SingleVariableDeclaration[12819-12831]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[12840-12851]:SimpleType[12840-12851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12852-12994]:Block[12852-12994]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[12858-12910]:IfStatement[12858-12910]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12877-12910]:Block[12877-12910]"
    }, {
      "left" : "return nullValue();",
      "right" : "return nullValue();",
      "info" : "ReturnStatement[12885-12904]:ReturnStatement[12885-12904]"
    }, {
      "left" : "writeDeferredName();",
      "right" : "writeDeferredName();",
      "info" : "ExpressionStatement[12915-12935]:ExpressionStatement[12915-12935]"
    }, {
      "left" : "beforeValue();",
      "right" : "beforeValue();",
      "info" : "ExpressionStatement[12940-12954]:ExpressionStatement[12940-12954]"
    }, {
      "left" : "string(value);",
      "right" : "string(value);",
      "info" : "ExpressionStatement[12959-12973]:ExpressionStatement[12959-12973]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[12978-12990]:ReturnStatement[12978-12990]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13202-13208]:Modifier[13202-13208]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[13209-13219]:SimpleType[13209-13219]"
    }, {
      "left" : "jsonValue",
      "right" : "jsonValue",
      "info" : "SimpleName[13220-13229]:SimpleName[13220-13229]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[13230-13242]:SingleVariableDeclaration[13230-13242]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[13251-13262]:SimpleType[13251-13262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13263-13409]:Block[13263-13409]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[13269-13321]:IfStatement[13269-13321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13288-13321]:Block[13288-13321]"
    }, {
      "left" : "return nullValue();",
      "right" : "return nullValue();",
      "info" : "ReturnStatement[13296-13315]:ReturnStatement[13296-13315]"
    }, {
      "left" : "writeDeferredName();",
      "right" : "writeDeferredName();",
      "info" : "ExpressionStatement[13326-13346]:ExpressionStatement[13326-13346]"
    }, {
      "left" : "beforeValue();",
      "right" : "beforeValue();",
      "info" : "ExpressionStatement[13351-13365]:ExpressionStatement[13351-13365]"
    }, {
      "left" : "out.append(value);",
      "right" : "out.append(value);",
      "info" : "ExpressionStatement[13370-13388]:ExpressionStatement[13370-13388]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13393-13405]:ReturnStatement[13393-13405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13483-13489]:Modifier[13483-13489]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[13490-13500]:SimpleType[13490-13500]"
    }, {
      "left" : "nullValue",
      "right" : "nullValue",
      "info" : "SimpleName[13501-13510]:SimpleName[13501-13510]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[13520-13531]:SimpleType[13520-13531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13532-13795]:Block[13532-13795]"
    }, {
      "left" : "if (deferredName != null)",
      "right" : "if (deferredName != null)",
      "info" : "IfStatement[13538-13732]:IfStatement[13538-13732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13564-13732]:Block[13564-13732]"
    }, {
      "left" : "if (serializeNulls)",
      "right" : "if (serializeNulls)",
      "info" : "IfStatement[13572-13726]:IfStatement[13572-13726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13592-13630]:Block[13592-13630]"
    }, {
      "left" : "writeDeferredName();",
      "right" : "writeDeferredName();",
      "info" : "ExpressionStatement[13602-13622]:ExpressionStatement[13602-13622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13636-13726]:Block[13636-13726]"
    }, {
      "left" : "deferredName = null;",
      "right" : "deferredName = null;",
      "info" : "ExpressionStatement[13646-13666]:ExpressionStatement[13646-13666]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13675-13687]:ReturnStatement[13675-13687]"
    }, {
      "left" : "beforeValue();",
      "right" : "beforeValue();",
      "info" : "ExpressionStatement[13737-13751]:ExpressionStatement[13737-13751]"
    }, {
      "left" : "out.write(\"null\");",
      "right" : "out.write(\"null\");",
      "info" : "ExpressionStatement[13756-13774]:ExpressionStatement[13756-13774]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13779-13791]:ReturnStatement[13779-13791]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13870-13876]:Modifier[13870-13876]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[13877-13887]:SimpleType[13877-13887]"
    }, {
      "left" : "value",
      "right" : "value",
      "info" : "SimpleName[13888-13893]:SimpleName[13888-13893]"
    }, {
      "left" : "boolean value",
      "right" : "boolean value",
      "info" : "SingleVariableDeclaration[13894-13907]:SingleVariableDeclaration[13894-13907]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[13916-13927]:SimpleType[13916-13927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13928-14035]:Block[13928-14035]"
    }, {
      "left" : "writeDeferredName();",
      "right" : "writeDeferredName();",
      "info" : "ExpressionStatement[13934-13954]:ExpressionStatement[13934-13954]"
    }, {
      "left" : "beforeValue();",
      "right" : "beforeValue();",
      "info" : "ExpressionStatement[13959-13973]:ExpressionStatement[13959-13973]"
    }, {
      "left" : "out.write(value ? \"true\" : \"false\");",
      "right" : "out.write(value ? \"true\" : \"false\");",
      "info" : "ExpressionStatement[13978-14014]:ExpressionStatement[13978-14014]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14019-14031]:ReturnStatement[14019-14031]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14110-14116]:Modifier[14110-14116]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[14117-14127]:SimpleType[14117-14127]"
    }, {
      "left" : "value",
      "right" : "value",
      "info" : "SimpleName[14128-14133]:SimpleName[14128-14133]"
    }, {
      "left" : "Boolean value",
      "right" : "Boolean value",
      "info" : "SingleVariableDeclaration[14134-14147]:SingleVariableDeclaration[14134-14147]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[14156-14167]:SimpleType[14156-14167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14168-14332]:Block[14168-14332]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[14174-14226]:IfStatement[14174-14226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14193-14226]:Block[14193-14226]"
    }, {
      "left" : "return nullValue();",
      "right" : "return nullValue();",
      "info" : "ReturnStatement[14201-14220]:ReturnStatement[14201-14220]"
    }, {
      "left" : "writeDeferredName();",
      "right" : "writeDeferredName();",
      "info" : "ExpressionStatement[14231-14251]:ExpressionStatement[14231-14251]"
    }, {
      "left" : "beforeValue();",
      "right" : "beforeValue();",
      "info" : "ExpressionStatement[14256-14270]:ExpressionStatement[14256-14270]"
    }, {
      "left" : "out.write(value ? \"true\" : \"false\");",
      "right" : "out.write(value ? \"true\" : \"false\");",
      "info" : "ExpressionStatement[14275-14311]:ExpressionStatement[14275-14311]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14316-14328]:ReturnStatement[14316-14328]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14532-14538]:Modifier[14532-14538]"
    }, {
      "left" : "value",
      "right" : "value",
      "info" : "SimpleName[14550-14555]:SimpleName[14550-14555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14589-14853]:Block[14589-14867]"
    }, {
      "left" : "writeDeferredName();",
      "right" : "writeDeferredName();",
      "info" : "ExpressionStatement[14595-14615]:ExpressionStatement[14595-14615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14673-14773]:Block[14687-14787]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);",
      "right" : "throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);",
      "info" : "ThrowStatement[14681-14767]:ThrowStatement[14695-14781]"
    }, {
      "left" : "beforeValue();",
      "right" : "beforeValue();",
      "info" : "ExpressionStatement[14778-14792]:ExpressionStatement[14792-14806]"
    }, {
      "left" : "out.append(Double.toString(value));",
      "right" : "out.append(Double.toString(value));",
      "info" : "ExpressionStatement[14797-14832]:ExpressionStatement[14811-14846]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14837-14849]:ReturnStatement[14851-14863]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14928-14934]:Modifier[14942-14948]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[14935-14945]:SimpleType[14949-14959]"
    }, {
      "left" : "value",
      "right" : "value",
      "info" : "SimpleName[14946-14951]:SimpleName[14960-14965]"
    }, {
      "left" : "long value",
      "right" : "long value",
      "info" : "SingleVariableDeclaration[14952-14962]:SingleVariableDeclaration[14966-14976]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[14971-14982]:SimpleType[14985-14996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14983-15086]:Block[14997-15100]"
    }, {
      "left" : "writeDeferredName();",
      "right" : "writeDeferredName();",
      "info" : "ExpressionStatement[14989-15009]:ExpressionStatement[15003-15023]"
    }, {
      "left" : "beforeValue();",
      "right" : "beforeValue();",
      "info" : "ExpressionStatement[15014-15028]:ExpressionStatement[15028-15042]"
    }, {
      "left" : "out.write(Long.toString(value));",
      "right" : "out.write(Long.toString(value));",
      "info" : "ExpressionStatement[15033-15065]:ExpressionStatement[15047-15079]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15070-15082]:ReturnStatement[15084-15096]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15286-15292]:Modifier[15300-15306]"
    }, {
      "left" : "JsonWriter",
      "right" : "JsonWriter",
      "info" : "SimpleType[15293-15303]:SimpleType[15307-15317]"
    }, {
      "left" : "value",
      "right" : "value",
      "info" : "SimpleName[15304-15309]:SimpleName[15318-15323]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[15310-15322]:SingleVariableDeclaration[15324-15336]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[15331-15342]:SimpleType[15345-15356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15343-15741]:Block[15357-15755]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[15349-15401]:IfStatement[15363-15415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15368-15401]:Block[15382-15415]"
    }, {
      "left" : "return nullValue();",
      "right" : "return nullValue();",
      "info" : "ReturnStatement[15376-15395]:ReturnStatement[15390-15409]"
    }, {
      "left" : "writeDeferredName();",
      "right" : "writeDeferredName();",
      "info" : "ExpressionStatement[15407-15427]:ExpressionStatement[15421-15441]"
    }, {
      "left" : "String string = value.toString();",
      "right" : "String string = value.toString();",
      "info" : "VariableDeclarationStatement[15432-15465]:VariableDeclarationStatement[15446-15479]"
    }, {
      "left" : "if (!lenient\n        && (string.equals(\"-Infinity\") || string.equals(\"Infinity\") || string.equals(\"NaN\")))",
      "right" : "if (!lenient\n        && (string.equals(\"-Infinity\") || string.equals(\"Infinity\") || string.equals(\"NaN\")))",
      "info" : "IfStatement[15470-15677]:IfStatement[15484-15691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15577-15677]:Block[15591-15691]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);",
      "right" : "throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);",
      "info" : "ThrowStatement[15585-15671]:ThrowStatement[15599-15685]"
    }, {
      "left" : "beforeValue();",
      "right" : "beforeValue();",
      "info" : "ExpressionStatement[15682-15696]:ExpressionStatement[15696-15710]"
    }, {
      "left" : "out.append(string);",
      "right" : "out.append(string);",
      "info" : "ExpressionStatement[15701-15720]:ExpressionStatement[15715-15734]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15725-15737]:ReturnStatement[15739-15751]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15862-15868]:Modifier[15876-15882]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15869-15873]:PrimitiveType[15883-15887]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[15874-15879]:SimpleName[15888-15893]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[15889-15900]:SimpleType[15903-15914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15901-16019]:Block[15915-16033]"
    }, {
      "left" : "if (stackSize == 0)",
      "right" : "if (stackSize == 0)",
      "info" : "IfStatement[15907-15998]:IfStatement[15921-16012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15927-15998]:Block[15941-16012]"
    }, {
      "left" : "throw new IllegalStateException(\"JsonWriter is closed.\");",
      "right" : "throw new IllegalStateException(\"JsonWriter is closed.\");",
      "info" : "ThrowStatement[15935-15992]:ThrowStatement[15949-16006]"
    }, {
      "left" : "out.flush();",
      "right" : "out.flush();",
      "info" : "ExpressionStatement[16003-16015]:ExpressionStatement[16017-16029]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16172-16178]:Modifier[16186-16192]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16179-16183]:PrimitiveType[16193-16197]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[16184-16189]:SimpleName[16198-16203]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[16199-16210]:SimpleType[16213-16224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16211-16410]:Block[16225-16424]"
    }, {
      "left" : "out.close();",
      "right" : "out.close();",
      "info" : "ExpressionStatement[16217-16229]:ExpressionStatement[16231-16243]"
    }, {
      "left" : "int size = stackSize;",
      "right" : "int size = stackSize;",
      "info" : "VariableDeclarationStatement[16235-16256]:VariableDeclarationStatement[16249-16270]"
    }, {
      "left" : "if (size > 1 || size == 1 && stack[size - 1] != NONEMPTY_DOCUMENT)",
      "right" : "if (size > 1 || size == 1 && stack[size - 1] != NONEMPTY_DOCUMENT)",
      "info" : "IfStatement[16261-16387]:IfStatement[16275-16401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16328-16387]:Block[16342-16401]"
    }, {
      "left" : "throw new IOException(\"Incomplete document\");",
      "right" : "throw new IOException(\"Incomplete document\");",
      "info" : "ThrowStatement[16336-16381]:ThrowStatement[16350-16395]"
    }, {
      "left" : "stackSize = 0;",
      "right" : "stackSize = 0;",
      "info" : "ExpressionStatement[16392-16406]:ExpressionStatement[16406-16420]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[16414-16421]:Modifier[16428-16435]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16422-16426]:PrimitiveType[16436-16440]"
    }, {
      "left" : "string",
      "right" : "string",
      "info" : "SimpleName[16427-16433]:SimpleName[16441-16447]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[16434-16446]:SingleVariableDeclaration[16448-16460]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[16455-16466]:SimpleType[16469-16480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16467-17254]:Block[16481-17268]"
    }, {
      "left" : "String[] replacements = htmlSafe ? HTML_SAFE_REPLACEMENT_CHARS : REPLACEMENT_CHARS;",
      "right" : "String[] replacements = htmlSafe ? HTML_SAFE_REPLACEMENT_CHARS : REPLACEMENT_CHARS;",
      "info" : "VariableDeclarationStatement[16473-16556]:VariableDeclarationStatement[16487-16570]"
    }, {
      "left" : "out.write(\"\\\"\");",
      "right" : "out.write(\"\\\"\");",
      "info" : "ExpressionStatement[16561-16577]:ExpressionStatement[16575-16591]"
    }, {
      "left" : "int last = 0;",
      "right" : "int last = 0;",
      "info" : "VariableDeclarationStatement[16582-16595]:VariableDeclarationStatement[16596-16609]"
    }, {
      "left" : "int length = value.length();",
      "right" : "int length = value.length();",
      "info" : "VariableDeclarationStatement[16600-16628]:VariableDeclarationStatement[16614-16642]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[16633-17153]:ForStatement[16647-17167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16666-17153]:Block[16680-17167]"
    }, {
      "left" : "char c = value.charAt(i);",
      "right" : "char c = value.charAt(i);",
      "info" : "VariableDeclarationStatement[16674-16699]:VariableDeclarationStatement[16688-16713]"
    }, {
      "left" : "String replacement;",
      "right" : "String replacement;",
      "info" : "VariableDeclarationStatement[16706-16725]:VariableDeclarationStatement[16720-16739]"
    }, {
      "left" : "if (c < 128)",
      "right" : "if (c < 128)",
      "info" : "IfStatement[16732-17025]:IfStatement[16746-17039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16745-16858]:Block[16759-16872]"
    }, {
      "left" : "replacement = replacements[c];",
      "right" : "replacement = replacements[c];",
      "info" : "ExpressionStatement[16755-16785]:ExpressionStatement[16769-16799]"
    }, {
      "left" : "if (replacement == null)",
      "right" : "if (replacement == null)",
      "info" : "IfStatement[16794-16850]:IfStatement[16808-16864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16819-16850]:Block[16833-16864]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[16831-16840]:ContinueStatement[16845-16854]"
    }, {
      "left" : "if (c == '\\u2028')",
      "right" : "if (c == '\\u2028')",
      "info" : "IfStatement[16864-17025]:IfStatement[16878-17039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16883-16925]:Block[16897-16939]"
    }, {
      "left" : "replacement = \"\\\\u2028\";",
      "right" : "replacement = \"\\\\u2028\";",
      "info" : "ExpressionStatement[16893-16917]:ExpressionStatement[16907-16931]"
    }, {
      "left" : "if (c == '\\u2029')",
      "right" : "if (c == '\\u2029')",
      "info" : "IfStatement[16931-17025]:IfStatement[16945-17039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16950-16992]:Block[16964-17006]"
    }, {
      "left" : "replacement = \"\\\\u2029\";",
      "right" : "replacement = \"\\\\u2029\";",
      "info" : "ExpressionStatement[16960-16984]:ExpressionStatement[16974-16998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16998-17025]:Block[17012-17039]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[17008-17017]:ContinueStatement[17022-17031]"
    }, {
      "left" : "if (last < i)",
      "right" : "if (last < i)",
      "info" : "IfStatement[17032-17097]:IfStatement[17046-17111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17046-17097]:Block[17060-17111]"
    }, {
      "left" : "out.write(value, last, i - last);",
      "right" : "out.write(value, last, i - last);",
      "info" : "ExpressionStatement[17056-17089]:ExpressionStatement[17070-17103]"
    }, {
      "left" : "out.write(replacement);",
      "right" : "out.write(replacement);",
      "info" : "ExpressionStatement[17104-17127]:ExpressionStatement[17118-17141]"
    }, {
      "left" : "last = i + 1;",
      "right" : "last = i + 1;",
      "info" : "ExpressionStatement[17134-17147]:ExpressionStatement[17148-17161]"
    }, {
      "left" : "if (last < length)",
      "right" : "if (last < length)",
      "info" : "IfStatement[17158-17229]:IfStatement[17172-17243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17177-17229]:Block[17191-17243]"
    }, {
      "left" : "out.write(value, last, length - last);",
      "right" : "out.write(value, last, length - last);",
      "info" : "ExpressionStatement[17185-17223]:ExpressionStatement[17199-17237]"
    }, {
      "left" : "out.write(\"\\\"\");",
      "right" : "out.write(\"\\\"\");",
      "info" : "ExpressionStatement[17234-17250]:ExpressionStatement[17248-17264]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17258-17265]:Modifier[17272-17279]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17266-17270]:PrimitiveType[17280-17284]"
    }, {
      "left" : "newline",
      "right" : "newline",
      "info" : "SimpleName[17271-17278]:SimpleName[17285-17292]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17288-17299]:SimpleType[17302-17313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17300-17459]:Block[17314-17473]"
    }, {
      "left" : "if (indent == null)",
      "right" : "if (indent == null)",
      "info" : "IfStatement[17306-17347]:IfStatement[17320-17361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17326-17347]:Block[17340-17361]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[17334-17341]:ReturnStatement[17348-17355]"
    }, {
      "left" : "out.write(\"\\n\");",
      "right" : "out.write(\"\\n\");",
      "info" : "ExpressionStatement[17353-17369]:ExpressionStatement[17367-17383]"
    }, {
      "left" : "for (int i = 1, size = stackSize; i < size; i++)",
      "right" : "for (int i = 1, size = stackSize; i < size; i++)",
      "info" : "ForStatement[17374-17455]:ForStatement[17388-17469]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17423-17455]:Block[17437-17469]"
    }, {
      "left" : "out.write(indent);",
      "right" : "out.write(indent);",
      "info" : "ExpressionStatement[17431-17449]:ExpressionStatement[17445-17463]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17599-17606]:Modifier[17613-17620]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17607-17611]:PrimitiveType[17621-17625]"
    }, {
      "left" : "beforeName",
      "right" : "beforeName",
      "info" : "SimpleName[17612-17622]:SimpleName[17626-17636]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17632-17643]:SimpleType[17646-17657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17644-17928]:Block[17658-17942]"
    }, {
      "left" : "int context = peek();",
      "right" : "int context = peek();",
      "info" : "VariableDeclarationStatement[17650-17671]:VariableDeclarationStatement[17664-17685]"
    }, {
      "left" : "if (context == NONEMPTY_OBJECT)",
      "right" : "if (context == NONEMPTY_OBJECT)",
      "info" : "IfStatement[17676-17878]:IfStatement[17690-17892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17708-17756]:Block[17722-17770]"
    }, {
      "left" : "out.write(',');",
      "right" : "out.write(',');",
      "info" : "ExpressionStatement[17735-17750]:ExpressionStatement[17749-17764]"
    }, {
      "left" : "if (context != EMPTY_OBJECT)",
      "right" : "if (context != EMPTY_OBJECT)",
      "info" : "IfStatement[17762-17878]:IfStatement[17776-17892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17791-17878]:Block[17805-17892]"
    }, {
      "left" : "throw new IllegalStateException(\"Nesting problem.\");",
      "right" : "throw new IllegalStateException(\"Nesting problem.\");",
      "info" : "ThrowStatement[17820-17872]:ThrowStatement[17834-17886]"
    }, {
      "left" : "newline();",
      "right" : "newline();",
      "info" : "ExpressionStatement[17883-17893]:ExpressionStatement[17897-17907]"
    }, {
      "left" : "replaceTop(DANGLING_NAME);",
      "right" : "replaceTop(DANGLING_NAME);",
      "info" : "ExpressionStatement[17898-17924]:ExpressionStatement[17912-17938]"
    }, {
      "left" : "@SuppressWarnings(\"fallthrough\")",
      "right" : "@SuppressWarnings(\"fallthrough\")",
      "info" : "SingleMemberAnnotation[18141-18173]:SingleMemberAnnotation[18155-18187]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18176-18183]:Modifier[18190-18197]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18184-18188]:PrimitiveType[18198-18202]"
    }, {
      "left" : "beforeValue",
      "right" : "beforeValue",
      "info" : "SimpleName[18189-18200]:SimpleName[18203-18214]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18210-18221]:SimpleType[18224-18235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18222-18926]:Block[18236-18940]"
    }, {
      "left" : "switch (peek()) {\n    case NONEMPTY_DOCUMENT:\n      if (!lenient) {\n        throw new IllegalStateException(\n            \"JSON must have only one top-level value.\");\n      }\n      // fall-through\n    case EMPTY_DOCUMENT: // first in document\n      replaceTop(NONEMPTY_DOCUMENT);\n      break;\n\n    case EMPTY_ARRAY: // first in array\n      replaceTop(NONEMPTY_ARRAY);\n      newline();\n      break;\n\n    case NONEMPTY_ARRAY: // another in array\n      out.append(',');\n      newline();\n      break;\n\n    case DANGLING_NAME: // value for name\n      out.append(separator);\n      replaceTop(NONEMPTY_OBJECT);\n      break;\n\n    default:\n      throw new IllegalStateException(\"Nesting problem.\");\n    }",
      "right" : "switch (peek()) {\n    case NONEMPTY_DOCUMENT:\n      if (!lenient) {\n        throw new IllegalStateException(\n            \"JSON must have only one top-level value.\");\n      }\n      // fall-through\n    case EMPTY_DOCUMENT: // first in document\n      replaceTop(NONEMPTY_DOCUMENT);\n      break;\n\n    case EMPTY_ARRAY: // first in array\n      replaceTop(NONEMPTY_ARRAY);\n      newline();\n      break;\n\n    case NONEMPTY_ARRAY: // another in array\n      out.append(',');\n      newline();\n      break;\n\n    case DANGLING_NAME: // value for name\n      out.append(separator);\n      replaceTop(NONEMPTY_OBJECT);\n      break;\n\n    default:\n      throw new IllegalStateException(\"Nesting problem.\");\n    }",
      "info" : "SwitchStatement[18228-18922]:SwitchStatement[18242-18936]"
    }, {
      "left" : "case NONEMPTY_DOCUMENT:",
      "right" : "case NONEMPTY_DOCUMENT:",
      "info" : "SwitchCase[18250-18273]:SwitchCase[18264-18287]"
    }, {
      "left" : "if (!lenient)",
      "right" : "if (!lenient)",
      "info" : "IfStatement[18280-18401]:IfStatement[18294-18415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18294-18401]:Block[18308-18415]"
    }, {
      "left" : "throw new IllegalStateException(\n            \"JSON must have only one top-level value.\");",
      "right" : "throw new IllegalStateException(\n            \"JSON must have only one top-level value.\");",
      "info" : "ThrowStatement[18304-18393]:ThrowStatement[18318-18407]"
    }, {
      "left" : "case EMPTY_DOCUMENT:",
      "right" : "case EMPTY_DOCUMENT:",
      "info" : "SwitchCase[18428-18448]:SwitchCase[18442-18462]"
    }, {
      "left" : "replaceTop(NONEMPTY_DOCUMENT);",
      "right" : "replaceTop(NONEMPTY_DOCUMENT);",
      "info" : "ExpressionStatement[18476-18506]:ExpressionStatement[18490-18520]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18513-18519]:BreakStatement[18527-18533]"
    }, {
      "left" : "case EMPTY_ARRAY:",
      "right" : "case EMPTY_ARRAY:",
      "info" : "SwitchCase[18525-18542]:SwitchCase[18539-18556]"
    }, {
      "left" : "replaceTop(NONEMPTY_ARRAY);",
      "right" : "replaceTop(NONEMPTY_ARRAY);",
      "info" : "ExpressionStatement[18567-18594]:ExpressionStatement[18581-18608]"
    }, {
      "left" : "newline();",
      "right" : "newline();",
      "info" : "ExpressionStatement[18601-18611]:ExpressionStatement[18615-18625]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18618-18624]:BreakStatement[18632-18638]"
    }, {
      "left" : "case NONEMPTY_ARRAY:",
      "right" : "case NONEMPTY_ARRAY:",
      "info" : "SwitchCase[18630-18650]:SwitchCase[18644-18664]"
    }, {
      "left" : "out.append(',');",
      "right" : "out.append(',');",
      "info" : "ExpressionStatement[18677-18693]:ExpressionStatement[18691-18707]"
    }, {
      "left" : "newline();",
      "right" : "newline();",
      "info" : "ExpressionStatement[18700-18710]:ExpressionStatement[18714-18724]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18717-18723]:BreakStatement[18731-18737]"
    }, {
      "left" : "case DANGLING_NAME:",
      "right" : "case DANGLING_NAME:",
      "info" : "SwitchCase[18729-18748]:SwitchCase[18743-18762]"
    }, {
      "left" : "out.append(separator);",
      "right" : "out.append(separator);",
      "info" : "ExpressionStatement[18773-18795]:ExpressionStatement[18787-18809]"
    }, {
      "left" : "replaceTop(NONEMPTY_OBJECT);",
      "right" : "replaceTop(NONEMPTY_OBJECT);",
      "info" : "ExpressionStatement[18802-18830]:ExpressionStatement[18816-18844]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18837-18843]:BreakStatement[18851-18857]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[18849-18857]:SwitchCase[18863-18871]"
    }, {
      "left" : "throw new IllegalStateException(\"Nesting problem.\");",
      "right" : "throw new IllegalStateException(\"Nesting problem.\");",
      "info" : "ThrowStatement[18864-18916]:ThrowStatement[18878-18930]"
    } ]
  },
  "interFileMappings" : { }
}