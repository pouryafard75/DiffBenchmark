{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "RungeKuttaIntegrator",
      "right" : "RungeKuttaIntegrator",
      "info" : "TypeDeclaration[1347-7663]:TypeDeclaration[1347-7804]"
    }, {
      "left" : "private final double[] c;",
      "right" : "private final double[] c;",
      "info" : "FieldDeclaration[2013-2105]:FieldDeclaration[2013-2105]"
    }, {
      "left" : "private final double[][] a;",
      "right" : "private final double[][] a;",
      "info" : "FieldDeclaration[2111-2216]:FieldDeclaration[2111-2216]"
    }, {
      "left" : "private final double[] b;",
      "right" : "private final double[] b;",
      "info" : "FieldDeclaration[2222-2321]:FieldDeclaration[2222-2321]"
    }, {
      "left" : "private final RungeKuttaStepInterpolator prototype;",
      "right" : "private final RungeKuttaStepInterpolator prototype;",
      "info" : "FieldDeclaration[2327-2425]:FieldDeclaration[2327-2425]"
    }, {
      "left" : "private final double step;",
      "right" : "private final double step;",
      "info" : "FieldDeclaration[2431-2486]:FieldDeclaration[2431-2486]"
    }, {
      "left" : "protected RungeKuttaIntegrator(final String name,\n                                 final double[] c, final double[][] a, final double[] b,\n                                 final RungeKuttaStepInterpolator prototype,\n                                 final double step)",
      "right" : "protected RungeKuttaIntegrator(final String name,\n                                 final double[] c, final double[][] a, final double[] b,\n                                 final RungeKuttaStepInterpolator prototype,\n                                 final double step)",
      "info" : "MethodDeclaration[2490-3421]:MethodDeclaration[2490-3421]"
    }, {
      "left" : "public double integrate(final FirstOrderDifferentialEquations equations,\n                          final double t0, final double[] y0,\n                          final double t, final double[] y)\n  throws DerivativeException, IntegratorException",
      "right" : "public double integrate(final FirstOrderDifferentialEquations equations,\n                          final double t0, final double[] y0,\n                          final double t, final double[] y)\n  throws DerivativeException, IntegratorException",
      "info" : "MethodDeclaration[3425-7660]:MethodDeclaration[3425-7801]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1936-1942]:Modifier[1936-1942]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1943-1951]:Modifier[1943-1951]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1952-1957]:TYPE_DECLARATION_KIND[1952-1957]"
    }, {
      "left" : "RungeKuttaIntegrator",
      "right" : "RungeKuttaIntegrator",
      "info" : "SimpleName[1958-1978]:SimpleName[1958-1978]"
    }, {
      "left" : "AbstractIntegrator",
      "right" : "AbstractIntegrator",
      "info" : "SimpleType[1987-2005]:SimpleType[1987-2005]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2985-2994]:Modifier[2985-2994]"
    }, {
      "left" : "RungeKuttaIntegrator",
      "right" : "RungeKuttaIntegrator",
      "info" : "SimpleName[2995-3015]:SimpleName[2995-3015]"
    }, {
      "left" : "final String name",
      "right" : "final String name",
      "info" : "SingleVariableDeclaration[3016-3033]:SingleVariableDeclaration[3016-3033]"
    }, {
      "left" : "final double[] c",
      "right" : "final double[] c",
      "info" : "SingleVariableDeclaration[3068-3084]:SingleVariableDeclaration[3068-3084]"
    }, {
      "left" : "final double[][] a",
      "right" : "final double[][] a",
      "info" : "SingleVariableDeclaration[3086-3104]:SingleVariableDeclaration[3086-3104]"
    }, {
      "left" : "final double[] b",
      "right" : "final double[] b",
      "info" : "SingleVariableDeclaration[3106-3122]:SingleVariableDeclaration[3106-3122]"
    }, {
      "left" : "final RungeKuttaStepInterpolator prototype",
      "right" : "final RungeKuttaStepInterpolator prototype",
      "info" : "SingleVariableDeclaration[3157-3199]:SingleVariableDeclaration[3157-3199]"
    }, {
      "left" : "final double step",
      "right" : "final double step",
      "info" : "SingleVariableDeclaration[3234-3251]:SingleVariableDeclaration[3234-3251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3253-3421]:Block[3253-3421]"
    }, {
      "left" : "super(name);",
      "right" : "super(name);",
      "info" : "SuperConstructorInvocation[3259-3271]:SuperConstructorInvocation[3259-3271]"
    }, {
      "left" : "this.c          = c;",
      "right" : "this.c          = c;",
      "info" : "ExpressionStatement[3276-3296]:ExpressionStatement[3276-3296]"
    }, {
      "left" : "this.a          = a;",
      "right" : "this.a          = a;",
      "info" : "ExpressionStatement[3301-3321]:ExpressionStatement[3301-3321]"
    }, {
      "left" : "this.b          = b;",
      "right" : "this.b          = b;",
      "info" : "ExpressionStatement[3326-3346]:ExpressionStatement[3326-3346]"
    }, {
      "left" : "this.prototype  = prototype;",
      "right" : "this.prototype  = prototype;",
      "info" : "ExpressionStatement[3351-3379]:ExpressionStatement[3351-3379]"
    }, {
      "left" : "this.step       = Math.abs(step);",
      "right" : "this.step       = Math.abs(step);",
      "info" : "ExpressionStatement[3384-3417]:ExpressionStatement[3384-3417]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3448-3454]:Modifier[3448-3454]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[3455-3461]:PrimitiveType[3455-3461]"
    }, {
      "left" : "integrate",
      "right" : "integrate",
      "info" : "SimpleName[3462-3471]:SimpleName[3462-3471]"
    }, {
      "left" : "final FirstOrderDifferentialEquations equations",
      "right" : "final FirstOrderDifferentialEquations equations",
      "info" : "SingleVariableDeclaration[3472-3519]:SingleVariableDeclaration[3472-3519]"
    }, {
      "left" : "final double t0",
      "right" : "final double t0",
      "info" : "SingleVariableDeclaration[3547-3562]:SingleVariableDeclaration[3547-3562]"
    }, {
      "left" : "final double[] y0",
      "right" : "final double[] y0",
      "info" : "SingleVariableDeclaration[3564-3581]:SingleVariableDeclaration[3564-3581]"
    }, {
      "left" : "final double t",
      "right" : "final double t",
      "info" : "SingleVariableDeclaration[3609-3623]:SingleVariableDeclaration[3609-3623]"
    }, {
      "left" : "final double[] y",
      "right" : "final double[] y",
      "info" : "SingleVariableDeclaration[3625-3641]:SingleVariableDeclaration[3625-3641]"
    }, {
      "left" : "DerivativeException",
      "right" : "DerivativeException",
      "info" : "SimpleType[3652-3671]:SimpleType[3652-3671]"
    }, {
      "left" : "IntegratorException",
      "right" : "IntegratorException",
      "info" : "SimpleType[3673-3692]:SimpleType[3673-3692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3693-7660]:Block[3693-7801]"
    }, {
      "left" : "sanityChecks(equations, t0, y0, t, y);",
      "right" : "sanityChecks(equations, t0, y0, t, y);",
      "info" : "ExpressionStatement[3700-3738]:ExpressionStatement[3700-3738]"
    }, {
      "left" : "setEquations(equations);",
      "right" : "setEquations(equations);",
      "info" : "ExpressionStatement[3743-3767]:ExpressionStatement[3743-3767]"
    }, {
      "left" : "resetEvaluations();",
      "right" : "resetEvaluations();",
      "info" : "ExpressionStatement[3772-3791]:ExpressionStatement[3772-3791]"
    }, {
      "left" : "final boolean forward = t > t0;",
      "right" : "final boolean forward = t > t0;",
      "info" : "VariableDeclarationStatement[3796-3827]:VariableDeclarationStatement[3796-3827]"
    }, {
      "left" : "final int stages = c.length + 1;",
      "right" : "final int stages = c.length + 1;",
      "info" : "VariableDeclarationStatement[3876-3908]:VariableDeclarationStatement[3876-3908]"
    }, {
      "left" : "if (y != y0)",
      "right" : "if (y != y0)",
      "info" : "IfStatement[3913-3981]:IfStatement[3913-3981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3926-3981]:Block[3926-3981]"
    }, {
      "left" : "System.arraycopy(y0, 0, y, 0, y0.length);",
      "right" : "System.arraycopy(y0, 0, y, 0, y0.length);",
      "info" : "ExpressionStatement[3934-3975]:ExpressionStatement[3934-3975]"
    }, {
      "left" : "final double[][] yDotK = new double[stages][];",
      "right" : "final double[][] yDotK = new double[stages][];",
      "info" : "VariableDeclarationStatement[3986-4032]:VariableDeclarationStatement[3986-4032]"
    }, {
      "left" : "for (int i = 0; i < stages; ++i)",
      "right" : "for (int i = 0; i < stages; ++i)",
      "info" : "ForStatement[4037-4118]:ForStatement[4037-4118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4070-4118]:Block[4070-4118]"
    }, {
      "left" : "yDotK [i] = new double[y0.length];",
      "right" : "yDotK [i] = new double[y0.length];",
      "info" : "ExpressionStatement[4078-4112]:ExpressionStatement[4078-4112]"
    }, {
      "left" : "final double[] yTmp = new double[y0.length];",
      "right" : "final double[] yTmp = new double[y0.length];",
      "info" : "VariableDeclarationStatement[4123-4167]:VariableDeclarationStatement[4123-4167]"
    }, {
      "left" : "AbstractStepInterpolator interpolator;",
      "right" : "AbstractStepInterpolator interpolator;",
      "info" : "VariableDeclarationStatement[4233-4271]:VariableDeclarationStatement[4233-4271]"
    }, {
      "left" : "if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty()))",
      "right" : "if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty()))",
      "info" : "IfStatement[4276-4614]:IfStatement[4276-4614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4342-4519]:Block[4342-4519]"
    }, {
      "left" : "final RungeKuttaStepInterpolator rki = (RungeKuttaStepInterpolator) prototype.copy();",
      "right" : "final RungeKuttaStepInterpolator rki = (RungeKuttaStepInterpolator) prototype.copy();",
      "info" : "VariableDeclarationStatement[4350-4435]:VariableDeclarationStatement[4350-4435]"
    }, {
      "left" : "rki.reinitialize(this, yTmp, yDotK, forward);",
      "right" : "rki.reinitialize(this, yTmp, yDotK, forward);",
      "info" : "ExpressionStatement[4442-4487]:ExpressionStatement[4442-4487]"
    }, {
      "left" : "interpolator = rki;",
      "right" : "interpolator = rki;",
      "info" : "ExpressionStatement[4494-4513]:ExpressionStatement[4494-4513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4525-4614]:Block[4525-4614]"
    }, {
      "left" : "interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward);",
      "right" : "interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward);",
      "info" : "ExpressionStatement[4533-4608]:ExpressionStatement[4533-4608]"
    }, {
      "left" : "interpolator.storeTime(t0);",
      "right" : "interpolator.storeTime(t0);",
      "info" : "ExpressionStatement[4619-4646]:ExpressionStatement[4619-4646]"
    }, {
      "left" : "stepStart = t0;",
      "right" : "stepStart = t0;",
      "info" : "ExpressionStatement[4694-4709]:ExpressionStatement[4694-4709]"
    }, {
      "left" : "stepSize  = forward ? step : -step;",
      "right" : "stepSize  = forward ? step : -step;",
      "info" : "ExpressionStatement[4714-4749]:ExpressionStatement[4714-4749]"
    }, {
      "left" : "for (StepHandler handler : stepHandlers)",
      "right" : "for (StepHandler handler : stepHandlers)",
      "info" : "EnhancedForStatement[4754-4827]:EnhancedForStatement[4754-4827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4795-4827]:Block[4795-4827]"
    }, {
      "left" : "handler.reset();",
      "right" : "handler.reset();",
      "info" : "ExpressionStatement[4805-4821]:ExpressionStatement[4805-4821]"
    }, {
      "left" : "CombinedEventsManager manager = addEndTimeChecker(t0, t, eventsHandlersManager);",
      "right" : "CombinedEventsManager manager = addEndTimeChecker(t0, t, eventsHandlersManager);",
      "info" : "VariableDeclarationStatement[4832-4912]:VariableDeclarationStatement[4832-4912]"
    }, {
      "left" : "boolean lastStep = false;",
      "right" : "boolean lastStep = false;",
      "info" : "VariableDeclarationStatement[4917-4942]:VariableDeclarationStatement[4917-4942]"
    }, {
      "left" : "while (!lastStep)",
      "right" : "while (!lastStep)",
      "info" : "WhileStatement[4977-7538]:WhileStatement[4977-7679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4995-7538]:Block[4995-7679]"
    }, {
      "left" : "interpolator.shift();",
      "right" : "interpolator.shift();",
      "info" : "ExpressionStatement[5004-5025]:ExpressionStatement[5004-5025]"
    }, {
      "left" : "for (boolean loop = true; loop)",
      "right" : "for (boolean loop = true; loop)",
      "info" : "ForStatement[5033-6742]:ForStatement[5033-6883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5066-6742]:Block[5066-6883]"
    }, {
      "left" : "computeDerivatives(stepStart, y, yDotK[0]);",
      "right" : "computeDerivatives(stepStart, y, yDotK[0]);",
      "info" : "ExpressionStatement[5100-5143]:ExpressionStatement[5100-5143]"
    }, {
      "left" : "for (int k = 1; k < stages; ++k)",
      "right" : "for (int k = 1; k < stages; ++k)",
      "info" : "ForStatement[5176-5557]:ForStatement[5176-5557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5209-5557]:Block[5209-5557]"
    }, {
      "left" : "for (int j = 0; j < y0.length; ++j)",
      "right" : "for (int j = 0; j < y0.length; ++j)",
      "info" : "ForStatement[5222-5468]:ForStatement[5222-5468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5258-5468]:Block[5258-5468]"
    }, {
      "left" : "double sum = a[k-1][0] * yDotK[0][j];",
      "right" : "double sum = a[k-1][0] * yDotK[0][j];",
      "info" : "VariableDeclarationStatement[5272-5309]:VariableDeclarationStatement[5272-5309]"
    }, {
      "left" : "for (int l = 1; l < k; ++l)",
      "right" : "for (int l = 1; l < k; ++l)",
      "info" : "ForStatement[5322-5411]:ForStatement[5322-5411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5350-5411]:Block[5350-5411]"
    }, {
      "left" : "sum += a[k-1][l] * yDotK[l][j];",
      "right" : "sum += a[k-1][l] * yDotK[l][j];",
      "info" : "ExpressionStatement[5366-5397]:ExpressionStatement[5366-5397]"
    }, {
      "left" : "yTmp[j] = y[j] + stepSize * sum;",
      "right" : "yTmp[j] = y[j] + stepSize * sum;",
      "info" : "ExpressionStatement[5424-5456]:ExpressionStatement[5424-5456]"
    }, {
      "left" : "computeDerivatives(stepStart + c[k-1] * stepSize, yTmp, yDotK[k]);",
      "right" : "computeDerivatives(stepStart + c[k-1] * stepSize, yTmp, yDotK[k]);",
      "info" : "ExpressionStatement[5480-5546]:ExpressionStatement[5480-5546]"
    }, {
      "left" : "for (int j = 0; j < y0.length; ++j)",
      "right" : "for (int j = 0; j < y0.length; ++j)",
      "info" : "ForStatement[5620-5855]:ForStatement[5620-5855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5656-5855]:Block[5656-5855]"
    }, {
      "left" : "double sum    = b[0] * yDotK[0][j];",
      "right" : "double sum    = b[0] * yDotK[0][j];",
      "info" : "VariableDeclarationStatement[5668-5703]:VariableDeclarationStatement[5668-5703]"
    }, {
      "left" : "for (int l = 1; l < stages; ++l)",
      "right" : "for (int l = 1; l < stages; ++l)",
      "info" : "ForStatement[5714-5802]:ForStatement[5714-5802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5747-5802]:Block[5747-5802]"
    }, {
      "left" : "sum    += b[l] * yDotK[l][j];",
      "right" : "sum    += b[l] * yDotK[l][j];",
      "info" : "ExpressionStatement[5761-5790]:ExpressionStatement[5761-5790]"
    }, {
      "left" : "yTmp[j] = y[j] + stepSize * sum;",
      "right" : "yTmp[j] = y[j] + stepSize * sum;",
      "info" : "ExpressionStatement[5813-5845]:ExpressionStatement[5813-5845]"
    }, {
      "left" : "interpolator.storeTime(stepStart + stepSize);",
      "right" : "interpolator.storeTime(stepStart + stepSize);",
      "info" : "ExpressionStatement[5901-5946]:ExpressionStatement[5901-5946]"
    }, {
      "left" : "if (manager.evaluateStep(interpolator))",
      "right" : "if (manager.evaluateStep(interpolator))",
      "info" : "IfStatement[5955-6733]:IfStatement[5955-6874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5995-6692]:Block[5995-6833]"
    }, {
      "left" : "final double dt = manager.getEventTime() - stepStart;",
      "right" : "final double dt = manager.getEventTime() - stepStart;",
      "info" : "VariableDeclarationStatement[6009-6062]:VariableDeclarationStatement[6009-6062]"
    }, {
      "left" : "if (Math.abs(dt) <= Math.ulp(stepStart))",
      "right" : "if (Math.abs(dt) <= Math.ulp(stepStart))",
      "info" : "IfStatement[6075-6682]:IfStatement[6075-6823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6116-6557]:Block[6116-6698]"
    }, {
      "left" : "loop     = false;",
      "right" : "loop     = false;",
      "info" : "ExpressionStatement[6526-6543]:ExpressionStatement[6667-6684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6563-6682]:Block[6704-6823]"
    }, {
      "left" : "stepSize = dt;",
      "right" : "stepSize = dt;",
      "info" : "ExpressionStatement[6654-6668]:ExpressionStatement[6795-6809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6698-6733]:Block[6839-6874]"
    }, {
      "left" : "loop = false;",
      "right" : "loop = false;",
      "info" : "ExpressionStatement[6710-6723]:ExpressionStatement[6851-6864]"
    }, {
      "left" : "final double nextStep = stepStart + stepSize;",
      "right" : "final double nextStep = stepStart + stepSize;",
      "info" : "VariableDeclarationStatement[6786-6831]:VariableDeclarationStatement[6927-6972]"
    }, {
      "left" : "System.arraycopy(yTmp, 0, y, 0, y0.length);",
      "right" : "System.arraycopy(yTmp, 0, y, 0, y0.length);",
      "info" : "ExpressionStatement[6838-6881]:ExpressionStatement[6979-7022]"
    }, {
      "left" : "manager.stepAccepted(nextStep, y);",
      "right" : "manager.stepAccepted(nextStep, y);",
      "info" : "ExpressionStatement[6888-6922]:ExpressionStatement[7029-7063]"
    }, {
      "left" : "lastStep = manager.stop();",
      "right" : "lastStep = manager.stop();",
      "info" : "ExpressionStatement[6929-6955]:ExpressionStatement[7070-7096]"
    }, {
      "left" : "interpolator.storeTime(nextStep);",
      "right" : "interpolator.storeTime(nextStep);",
      "info" : "ExpressionStatement[7014-7047]:ExpressionStatement[7155-7188]"
    }, {
      "left" : "for (StepHandler handler : stepHandlers)",
      "right" : "for (StepHandler handler : stepHandlers)",
      "info" : "EnhancedForStatement[7054-7158]:EnhancedForStatement[7195-7299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7095-7158]:Block[7236-7299]"
    }, {
      "left" : "handler.handleStep(interpolator, lastStep);",
      "right" : "handler.handleStep(interpolator, lastStep);",
      "info" : "ExpressionStatement[7107-7150]:ExpressionStatement[7248-7291]"
    }, {
      "left" : "stepStart = nextStep;",
      "right" : "stepStart = nextStep;",
      "info" : "ExpressionStatement[7165-7186]:ExpressionStatement[7306-7327]"
    }, {
      "left" : "if (manager.reset(stepStart, y) && ! lastStep)",
      "right" : "if (manager.reset(stepStart, y) && ! lastStep)",
      "info" : "IfStatement[7194-7425]:IfStatement[7335-7566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7241-7425]:Block[7382-7566]"
    }, {
      "left" : "computeDerivatives(stepStart, y, yDotK[0]);",
      "right" : "computeDerivatives(stepStart, y, yDotK[0]);",
      "info" : "ExpressionStatement[7374-7417]:ExpressionStatement[7515-7558]"
    }, {
      "left" : "stepSize = forward ? step : -step;",
      "right" : "stepSize = forward ? step : -step;",
      "info" : "ExpressionStatement[7497-7531]:ExpressionStatement[7638-7672]"
    }, {
      "left" : "final double stopTime = stepStart;",
      "right" : "final double stopTime = stepStart;",
      "info" : "VariableDeclarationStatement[7544-7578]:VariableDeclarationStatement[7685-7719]"
    }, {
      "left" : "stepStart = Double.NaN;",
      "right" : "stepStart = Double.NaN;",
      "info" : "ExpressionStatement[7583-7606]:ExpressionStatement[7724-7747]"
    }, {
      "left" : "stepSize  = Double.NaN;",
      "right" : "stepSize  = Double.NaN;",
      "info" : "ExpressionStatement[7611-7634]:ExpressionStatement[7752-7775]"
    }, {
      "left" : "return stopTime;",
      "right" : "return stopTime;",
      "info" : "ReturnStatement[7639-7655]:ReturnStatement[7780-7796]"
    } ]
  },
  "interFileMappings" : { }
}