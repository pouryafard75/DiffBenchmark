{
  "matchedElements" : [
 {
    "left" : "class : HtmlTreeBuilder",
    "right" : "class : HtmlTreeBuilder",
    "info" : "TypeDeclaration[555-25825]:TypeDeclaration[555-26037]"
  }, {
    "left" : "TagsSearchInScope",
    "right" : "TagsSearchInScope",
    "info" : "FieldDeclaration[780-906]:FieldDeclaration[780-906]"
  }, {
    "left" : "TagSearchList",
    "right" : "TagSearchList",
    "info" : "FieldDeclaration[911-974]:FieldDeclaration[911-974]"
  }, {
    "left" : "TagSearchButton",
    "right" : "TagSearchButton",
    "info" : "FieldDeclaration[979-1042]:FieldDeclaration[979-1042]"
  }, {
    "left" : "TagSearchTableScope",
    "right" : "TagSearchTableScope",
    "info" : "FieldDeclaration[1047-1121]:FieldDeclaration[1047-1121]"
  }, {
    "left" : "TagSearchSelectScope",
    "right" : "TagSearchSelectScope",
    "info" : "FieldDeclaration[1126-1206]:FieldDeclaration[1126-1206]"
  }, {
    "left" : "TagSearchEndTags",
    "right" : "TagSearchEndTags",
    "info" : "FieldDeclaration[1211-1322]:FieldDeclaration[1211-1322]"
  }, {
    "left" : "TagSearchSpecial",
    "right" : "TagSearchSpecial",
    "info" : "FieldDeclaration[1327-2138]:FieldDeclaration[1327-2138]"
  }, {
    "left" : "MaxScopeSearchDepth",
    "right" : "MaxScopeSearchDepth",
    "info" : "FieldDeclaration[2144-2194]:FieldDeclaration[2144-2194]"
  }, {
    "left" : "state",
    "right" : "state",
    "info" : "FieldDeclaration[2266-2301]:FieldDeclaration[2266-2301]"
  }, {
    "left" : "originalState",
    "right" : "originalState",
    "info" : "FieldDeclaration[2327-2370]:FieldDeclaration[2327-2370]"
  }, {
    "left" : "baseUriSetFromDoc",
    "right" : "baseUriSetFromDoc",
    "info" : "FieldDeclaration[2403-2437]:FieldDeclaration[2403-2437]"
  }, {
    "left" : "headElement",
    "right" : "headElement",
    "info" : "FieldDeclaration[2442-2470]:FieldDeclaration[2442-2470]"
  }, {
    "left" : "formElement",
    "right" : "formElement",
    "info" : "FieldDeclaration[2503-2535]:FieldDeclaration[2503-2535]"
  }, {
    "left" : "contextElement",
    "right" : "contextElement",
    "info" : "FieldDeclaration[2568-2599]:FieldDeclaration[2568-2599]"
  }, {
    "left" : "formattingElements",
    "right" : "formattingElements",
    "info" : "FieldDeclaration[2672-2718]:FieldDeclaration[2672-2718]"
  }, {
    "left" : "pendingTableCharacters",
    "right" : "pendingTableCharacters",
    "info" : "FieldDeclaration[2760-2804]:FieldDeclaration[2760-2804]"
  }, {
    "left" : "emptyEnd",
    "right" : "emptyEnd",
    "info" : "FieldDeclaration[2845-2875]:FieldDeclaration[2845-2875]"
  }, {
    "left" : "framesetOk",
    "right" : "framesetOk",
    "info" : "FieldDeclaration[2905-2932]:FieldDeclaration[2905-2932]"
  }, {
    "left" : "fosterInserts",
    "right" : "fosterInserts",
    "info" : "FieldDeclaration[2966-2996]:FieldDeclaration[2966-2996]"
  }, {
    "left" : "fragmentParsing",
    "right" : "fragmentParsing",
    "info" : "FieldDeclaration[3039-3071]:FieldDeclaration[3039-3071]"
  }, {
    "left" : "package defaultSettings() : ",
    "right" : "package defaultSettings() : ",
    "info" : "MethodDeclaration[3110-3191]:MethodDeclaration[3110-3191]"
  }, {
    "left" : "protected initialiseParse(input , baseUri , parser ) : void",
    "right" : "protected initialiseParse(input , baseUri , parser ) : void",
    "info" : "MethodDeclaration[3197-3878]:MethodDeclaration[3197-3878]"
  }, {
    "left" : "package parseFragment(inputFragment , context , baseUri , parser ) : ",
    "right" : "package parseFragment(inputFragment , context , baseUri , parser ) : ",
    "info" : "MethodDeclaration[3884-6033]:MethodDeclaration[3884-6033]"
  }, {
    "left" : "protected process(token ) : boolean",
    "right" : "protected process(token ) : boolean",
    "info" : "MethodDeclaration[6039-6177]:MethodDeclaration[6039-6177]"
  }, {
    "left" : "package process(token , state ) : boolean",
    "right" : "package process(token , state ) : boolean",
    "info" : "MethodDeclaration[6183-6320]:MethodDeclaration[6183-6320]"
  }, {
    "left" : "package transition(state ) : void",
    "right" : "package transition(state ) : void",
    "info" : "MethodDeclaration[6326-6405]:MethodDeclaration[6326-6405]"
  }, {
    "left" : "package state() : ",
    "right" : "package state() : ",
    "info" : "MethodDeclaration[6411-6469]:MethodDeclaration[6411-6469]"
  }, {
    "left" : "package markInsertionMode() : void",
    "right" : "package markInsertionMode() : void",
    "info" : "MethodDeclaration[6475-6538]:MethodDeclaration[6475-6538]"
  }, {
    "left" : "package originalState() : ",
    "right" : "package originalState() : ",
    "info" : "MethodDeclaration[6544-6618]:MethodDeclaration[6544-6618]"
  }, {
    "left" : "package framesetOk(framesetOk boolean) : void",
    "right" : "package framesetOk(framesetOk boolean) : void",
    "info" : "MethodDeclaration[6624-6705]:MethodDeclaration[6624-6705]"
  }, {
    "left" : "package framesetOk() : boolean",
    "right" : "package framesetOk() : boolean",
    "info" : "MethodDeclaration[6711-6766]:MethodDeclaration[6711-6766]"
  }, {
    "left" : "package getDocument() : ",
    "right" : "package getDocument() : ",
    "info" : "MethodDeclaration[6772-6822]:MethodDeclaration[6772-6822]"
  }, {
    "left" : "package getBaseUri() : ",
    "right" : "package getBaseUri() : ",
    "info" : "MethodDeclaration[6828-6879]:MethodDeclaration[6828-6879]"
  }, {
    "left" : "package maybeSetBaseUri(base ) : void",
    "right" : "package maybeSetBaseUri(base ) : void",
    "info" : "MethodDeclaration[6885-7340]:MethodDeclaration[6885-7340]"
  }, {
    "left" : "package isFragmentParsing() : boolean",
    "right" : "package isFragmentParsing() : boolean",
    "info" : "MethodDeclaration[7346-7413]:MethodDeclaration[7346-7413]"
  }, {
    "left" : "package error(state ) : void",
    "right" : "package error(state ) : void",
    "info" : "MethodDeclaration[7419-7654]:MethodDeclaration[7419-7654]"
  }, {
    "left" : "package insert(startTag ) : ",
    "right" : "package insert(startTag ) : ",
    "info" : "MethodDeclaration[7660-8502]:MethodDeclaration[7660-8714]"
  }, {
    "left" : "package insertStartTag(startTagName ) : ",
    "right" : "package insertStartTag(startTagName ) : ",
    "info" : "MethodDeclaration[8508-8678]:MethodDeclaration[8720-8890]"
  }, {
    "left" : "package insert(el ) : void",
    "right" : "package insert(el ) : void",
    "info" : "MethodDeclaration[8684-8762]:MethodDeclaration[8896-8974]"
  }, {
    "left" : "package insertEmpty(startTag ) : ",
    "right" : "package insertEmpty(startTag ) : ",
    "info" : "MethodDeclaration[8768-9321]:MethodDeclaration[8980-9533]"
  }, {
    "left" : "package insertForm(startTag , onStack boolean) : ",
    "right" : "package insertForm(startTag , onStack boolean) : ",
    "info" : "MethodDeclaration[9327-9653]:MethodDeclaration[9539-9865]"
  }, {
    "left" : "package insert(commentToken ) : void",
    "right" : "package insert(commentToken ) : void",
    "info" : "MethodDeclaration[9659-9798]:MethodDeclaration[9871-10010]"
  }, {
    "left" : "package insert(characterToken ) : void",
    "right" : "package insert(characterToken ) : void",
    "info" : "MethodDeclaration[9804-10382]:MethodDeclaration[10016-10594]"
  }, {
    "left" : "private insertNode(node ) : void",
    "right" : "private insertNode(node ) : void",
    "info" : "MethodDeclaration[10388-10963]:MethodDeclaration[10600-11175]"
  }, {
    "left" : "package pop() : ",
    "right" : "package pop() : ",
    "info" : "MethodDeclaration[10969-11060]:MethodDeclaration[11181-11272]"
  }, {
    "left" : "package push(element ) : void",
    "right" : "package push(element ) : void",
    "info" : "MethodDeclaration[11066-11128]:MethodDeclaration[11278-11340]"
  }, {
    "left" : "package getStack() : ",
    "right" : "package getStack() : ",
    "info" : "MethodDeclaration[11134-11193]:MethodDeclaration[11346-11405]"
  }, {
    "left" : "package onStack(el ) : boolean",
    "right" : "package onStack(el ) : boolean",
    "info" : "MethodDeclaration[11199-11278]:MethodDeclaration[11411-11490]"
  }, {
    "left" : "private isElementInQueue(queue , element ) : boolean",
    "right" : "private isElementInQueue(queue , element ) : boolean",
    "info" : "MethodDeclaration[11284-11579]:MethodDeclaration[11496-11791]"
  }, {
    "left" : "package getFromStack(elName ) : ",
    "right" : "package getFromStack(elName ) : ",
    "info" : "MethodDeclaration[11585-11856]:MethodDeclaration[11797-12068]"
  }, {
    "left" : "package removeFromStack(el ) : boolean",
    "right" : "package removeFromStack(el ) : boolean",
    "info" : "MethodDeclaration[11862-12147]:MethodDeclaration[12074-12359]"
  }, {
    "left" : "package popStackToClose(elName ) : void",
    "right" : "package popStackToClose(elName ) : void",
    "info" : "MethodDeclaration[12153-12412]:MethodDeclaration[12365-12624]"
  }, {
    "left" : "package popStackToClose() : void",
    "right" : "package popStackToClose() : void",
    "info" : "MethodDeclaration[12465-12732]:MethodDeclaration[12677-12944]"
  }, {
    "left" : "package popStackToBefore(elName ) : void",
    "right" : "package popStackToBefore(elName ) : void",
    "info" : "MethodDeclaration[12738-13039]:MethodDeclaration[12950-13251]"
  }, {
    "left" : "package clearStackToTableContext() : void",
    "right" : "package clearStackToTableContext() : void",
    "info" : "MethodDeclaration[13045-13122]:MethodDeclaration[13257-13334]"
  }, {
    "left" : "package clearStackToTableBodyContext() : void",
    "right" : "package clearStackToTableBodyContext() : void",
    "info" : "MethodDeclaration[13128-13239]:MethodDeclaration[13340-13451]"
  }, {
    "left" : "package clearStackToTableRowContext() : void",
    "right" : "package clearStackToTableRowContext() : void",
    "info" : "MethodDeclaration[13245-13334]:MethodDeclaration[13457-13546]"
  }, {
    "left" : "private clearStackToContext() : void",
    "right" : "private clearStackToContext() : void",
    "info" : "MethodDeclaration[13340-13685]:MethodDeclaration[13552-13897]"
  }, {
    "left" : "package aboveOnStack(el ) : ",
    "right" : "package aboveOnStack(el ) : ",
    "info" : "MethodDeclaration[13691-13977]:MethodDeclaration[13903-14189]"
  }, {
    "left" : "package insertOnStackAfter(after , in ) : void",
    "right" : "package insertOnStackAfter(after , in ) : void",
    "info" : "MethodDeclaration[13983-14145]:MethodDeclaration[14195-14357]"
  }, {
    "left" : "package replaceOnStack(out , in ) : void",
    "right" : "package replaceOnStack(out , in ) : void",
    "info" : "MethodDeclaration[14151-14243]:MethodDeclaration[14363-14455]"
  }, {
    "left" : "private replaceInQueue(queue , out , in ) : void",
    "right" : "private replaceInQueue(queue , out , in ) : void",
    "info" : "MethodDeclaration[14249-14435]:MethodDeclaration[14461-14647]"
  }, {
    "left" : "package resetInsertionMode() : void",
    "right" : "package resetInsertionMode() : void",
    "info" : "MethodDeclaration[14441-16439]:MethodDeclaration[14653-16651]"
  }, {
    "left" : "specificScopeTarget",
    "right" : "specificScopeTarget",
    "info" : "FieldDeclaration[16492-16538]:FieldDeclaration[16704-16750]"
  }, {
    "left" : "private inSpecificScope(targetName , baseTypes , extraTypes ...) : boolean",
    "right" : "private inSpecificScope(targetName , baseTypes , extraTypes ...) : boolean",
    "info" : "MethodDeclaration[16544-16764]:MethodDeclaration[16756-16976]"
  }, {
    "left" : "private inSpecificScope(targetNames , baseTypes , extraTypes ...) : boolean",
    "right" : "private inSpecificScope(targetNames , baseTypes , extraTypes ...) : boolean",
    "info" : "MethodDeclaration[16770-17661]:MethodDeclaration[16982-17873]"
  }, {
    "left" : "package inScope(targetNames ...) : boolean",
    "right" : "package inScope(targetNames ...) : boolean",
    "info" : "MethodDeclaration[17667-17782]:MethodDeclaration[17879-17994]"
  }, {
    "left" : "package inScope(targetName ) : boolean",
    "right" : "package inScope(targetName ) : boolean",
    "info" : "MethodDeclaration[17788-17872]:MethodDeclaration[18000-18084]"
  }, {
    "left" : "package inScope(targetName , extras ...) : boolean",
    "right" : "package inScope(targetName , extras ...) : boolean",
    "info" : "MethodDeclaration[17878-18144]:MethodDeclaration[18090-18356]"
  }, {
    "left" : "package inListItemScope(targetName ) : boolean",
    "right" : "package inListItemScope(targetName ) : boolean",
    "info" : "MethodDeclaration[18150-18251]:MethodDeclaration[18362-18463]"
  }, {
    "left" : "package inButtonScope(targetName ) : boolean",
    "right" : "package inButtonScope(targetName ) : boolean",
    "info" : "MethodDeclaration[18257-18358]:MethodDeclaration[18469-18570]"
  }, {
    "left" : "package inTableScope(targetName ) : boolean",
    "right" : "package inTableScope(targetName ) : boolean",
    "info" : "MethodDeclaration[18364-18482]:MethodDeclaration[18576-18694]"
  }, {
    "left" : "package inSelectScope(targetName ) : boolean",
    "right" : "package inSelectScope(targetName ) : boolean",
    "info" : "MethodDeclaration[18488-18945]:MethodDeclaration[18700-19157]"
  }, {
    "left" : "package setHeadElement(headElement ) : void",
    "right" : "package setHeadElement(headElement ) : void",
    "info" : "MethodDeclaration[18951-19039]:MethodDeclaration[19163-19251]"
  }, {
    "left" : "package getHeadElement() : ",
    "right" : "package getHeadElement() : ",
    "info" : "MethodDeclaration[19045-19105]:MethodDeclaration[19257-19317]"
  }, {
    "left" : "package isFosterInserts() : boolean",
    "right" : "package isFosterInserts() : boolean",
    "info" : "MethodDeclaration[19111-19174]:MethodDeclaration[19323-19386]"
  }, {
    "left" : "package setFosterInserts(fosterInserts boolean) : void",
    "right" : "package setFosterInserts(fosterInserts boolean) : void",
    "info" : "MethodDeclaration[19180-19276]:MethodDeclaration[19392-19488]"
  }, {
    "left" : "package getFormElement() : ",
    "right" : "package getFormElement() : ",
    "info" : "MethodDeclaration[19282-19346]:MethodDeclaration[19494-19558]"
  }, {
    "left" : "package setFormElement(formElement ) : void",
    "right" : "package setFormElement(formElement ) : void",
    "info" : "MethodDeclaration[19352-19444]:MethodDeclaration[19564-19656]"
  }, {
    "left" : "package newPendingTableCharacters() : void",
    "right" : "package newPendingTableCharacters() : void",
    "info" : "MethodDeclaration[19450-19542]:MethodDeclaration[19662-19754]"
  }, {
    "left" : "package getPendingTableCharacters() : ",
    "right" : "package getPendingTableCharacters() : ",
    "info" : "MethodDeclaration[19548-19635]:MethodDeclaration[19760-19847]"
  }, {
    "left" : "package generateImpliedEndTags(excludeTag ) : void",
    "right" : "package generateImpliedEndTags(excludeTag ) : void",
    "info" : "MethodDeclaration[19641-20487]:MethodDeclaration[19853-20699]"
  }, {
    "left" : "package generateImpliedEndTags() : void",
    "right" : "package generateImpliedEndTags() : void",
    "info" : "MethodDeclaration[20493-20568]:MethodDeclaration[20705-20780]"
  }, {
    "left" : "package isSpecial(el ) : boolean",
    "right" : "package isSpecial(el ) : boolean",
    "info" : "MethodDeclaration[20574-20785]:MethodDeclaration[20786-20997]"
  }, {
    "left" : "package lastFormattingElement() : ",
    "right" : "package lastFormattingElement() : ",
    "info" : "MethodDeclaration[20791-20937]:MethodDeclaration[21003-21149]"
  }, {
    "left" : "package removeLastFormattingElement() : ",
    "right" : "package removeLastFormattingElement() : ",
    "info" : "MethodDeclaration[20943-21148]:MethodDeclaration[21155-21360]"
  }, {
    "left" : "package pushActiveFormattingElements(in ) : void",
    "right" : "package pushActiveFormattingElements(in ) : void",
    "info" : "MethodDeclaration[21188-21694]:MethodDeclaration[21400-21906]"
  }, {
    "left" : "private isSameFormattingElement(a , b ) : boolean",
    "right" : "private isSameFormattingElement(a , b ) : boolean",
    "info" : "MethodDeclaration[21700-22086]:MethodDeclaration[21912-22298]"
  }, {
    "left" : "package reconstructFormattingElements() : void",
    "right" : "package reconstructFormattingElements() : void",
    "info" : "MethodDeclaration[22092-23595]:MethodDeclaration[22304-23807]"
  }, {
    "left" : "package clearFormattingElementsToLastMarker() : void",
    "right" : "package clearFormattingElementsToLastMarker() : void",
    "info" : "MethodDeclaration[23601-23816]:MethodDeclaration[23813-24028]"
  }, {
    "left" : "package removeFromActiveFormattingElements(el ) : void",
    "right" : "package removeFromActiveFormattingElements(el ) : void",
    "info" : "MethodDeclaration[23822-24134]:MethodDeclaration[24034-24346]"
  }, {
    "left" : "package isInActiveFormattingElements(el ) : boolean",
    "right" : "package isInActiveFormattingElements(el ) : boolean",
    "info" : "MethodDeclaration[24140-24253]:MethodDeclaration[24352-24465]"
  }, {
    "left" : "package getActiveFormattingElement(nodeName ) : ",
    "right" : "package getActiveFormattingElement(nodeName ) : ",
    "info" : "MethodDeclaration[24259-24632]:MethodDeclaration[24471-24844]"
  }, {
    "left" : "package replaceActiveFormattingElement(out , in ) : void",
    "right" : "package replaceActiveFormattingElement(out , in ) : void",
    "info" : "MethodDeclaration[24638-24759]:MethodDeclaration[24850-24971]"
  }, {
    "left" : "package insertMarkerToFormattingElements() : void",
    "right" : "package insertMarkerToFormattingElements() : void",
    "info" : "MethodDeclaration[24765-24850]:MethodDeclaration[24977-25062]"
  }, {
    "left" : "package insertInFosterParent(in ) : void",
    "right" : "package insertInFosterParent(in ) : void",
    "info" : "MethodDeclaration[24856-25575]:MethodDeclaration[25068-25787]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[25581-25823]:MethodDeclaration[25793-26035]"
  } ],
  "mappings" : [
 {
    "left" : "ParseSettings",
    "right" : "ParseSettings",
    "info" : "SimpleType[3110-3123]:SimpleType[3110-3123]"
  }, {
    "left" : "defaultSettings",
    "right" : "defaultSettings",
    "info" : "SimpleName[3124-3139]:SimpleName[3124-3139]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3142-3191]:Block[3142-3191]"
  }, {
    "left" : "return ParseSettings.htmlDefault;",
    "right" : "return ParseSettings.htmlDefault;",
    "info" : "ReturnStatement[3152-3185]:ReturnStatement[3152-3185]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3197-3206]:MarkerAnnotation[3197-3206]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[3211-3220]:Modifier[3211-3220]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[3221-3225]:PrimitiveType[3221-3225]"
  }, {
    "left" : "initialiseParse",
    "right" : "initialiseParse",
    "info" : "SimpleName[3226-3241]:SimpleName[3226-3241]"
  }, {
    "left" : "Reader input",
    "right" : "Reader input",
    "info" : "SingleVariableDeclaration[3242-3254]:SingleVariableDeclaration[3242-3254]"
  }, {
    "left" : "String baseUri",
    "right" : "String baseUri",
    "info" : "SingleVariableDeclaration[3256-3270]:SingleVariableDeclaration[3256-3270]"
  }, {
    "left" : "Parser parser",
    "right" : "Parser parser",
    "info" : "SingleVariableDeclaration[3272-3285]:SingleVariableDeclaration[3272-3285]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3287-3878]:Block[3287-3878]"
  }, {
    "left" : "super.initialiseParse(input, baseUri, parser);",
    "right" : "super.initialiseParse(input, baseUri, parser);",
    "info" : "ExpressionStatement[3297-3343]:ExpressionStatement[3297-3343]"
  }, {
    "left" : "state = HtmlTreeBuilderState.Initial;",
    "right" : "state = HtmlTreeBuilderState.Initial;",
    "info" : "ExpressionStatement[3453-3490]:ExpressionStatement[3453-3490]"
  }, {
    "left" : "originalState = null;",
    "right" : "originalState = null;",
    "info" : "ExpressionStatement[3499-3520]:ExpressionStatement[3499-3520]"
  }, {
    "left" : "baseUriSetFromDoc = false;",
    "right" : "baseUriSetFromDoc = false;",
    "info" : "ExpressionStatement[3529-3555]:ExpressionStatement[3529-3555]"
  }, {
    "left" : "headElement = null;",
    "right" : "headElement = null;",
    "info" : "ExpressionStatement[3564-3583]:ExpressionStatement[3564-3583]"
  }, {
    "left" : "formElement = null;",
    "right" : "formElement = null;",
    "info" : "ExpressionStatement[3592-3611]:ExpressionStatement[3592-3611]"
  }, {
    "left" : "contextElement = null;",
    "right" : "contextElement = null;",
    "info" : "ExpressionStatement[3620-3642]:ExpressionStatement[3620-3642]"
  }, {
    "left" : "formattingElements = new ArrayList<>();",
    "right" : "formattingElements = new ArrayList<>();",
    "info" : "ExpressionStatement[3651-3690]:ExpressionStatement[3651-3690]"
  }, {
    "left" : "pendingTableCharacters = new ArrayList<>();",
    "right" : "pendingTableCharacters = new ArrayList<>();",
    "info" : "ExpressionStatement[3699-3742]:ExpressionStatement[3699-3742]"
  }, {
    "left" : "emptyEnd = new Token.EndTag();",
    "right" : "emptyEnd = new Token.EndTag();",
    "info" : "ExpressionStatement[3751-3781]:ExpressionStatement[3751-3781]"
  }, {
    "left" : "framesetOk = true;",
    "right" : "framesetOk = true;",
    "info" : "ExpressionStatement[3790-3808]:ExpressionStatement[3790-3808]"
  }, {
    "left" : "fosterInserts = false;",
    "right" : "fosterInserts = false;",
    "info" : "ExpressionStatement[3817-3839]:ExpressionStatement[3817-3839]"
  }, {
    "left" : "fragmentParsing = false;",
    "right" : "fragmentParsing = false;",
    "info" : "ExpressionStatement[3848-3872]:ExpressionStatement[3848-3872]"
  }, {
    "left" : "List<Node>",
    "right" : "List<Node>",
    "info" : "ParameterizedType[3884-3894]:ParameterizedType[3884-3894]"
  }, {
    "left" : "parseFragment",
    "right" : "parseFragment",
    "info" : "SimpleName[3895-3908]:SimpleName[3895-3908]"
  }, {
    "left" : "String inputFragment",
    "right" : "String inputFragment",
    "info" : "SingleVariableDeclaration[3909-3929]:SingleVariableDeclaration[3909-3929]"
  }, {
    "left" : "Element context",
    "right" : "Element context",
    "info" : "SingleVariableDeclaration[3931-3946]:SingleVariableDeclaration[3931-3946]"
  }, {
    "left" : "String baseUri",
    "right" : "String baseUri",
    "info" : "SingleVariableDeclaration[3948-3962]:SingleVariableDeclaration[3948-3962]"
  }, {
    "left" : "Parser parser",
    "right" : "Parser parser",
    "info" : "SingleVariableDeclaration[3964-3977]:SingleVariableDeclaration[3964-3977]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3979-6033]:Block[3979-6033]"
  }, {
    "left" : "state = HtmlTreeBuilderState.Initial;",
    "right" : "state = HtmlTreeBuilderState.Initial;",
    "info" : "ExpressionStatement[4020-4057]:ExpressionStatement[4020-4057]"
  }, {
    "left" : "initialiseParse(new StringReader(inputFragment), baseUri, parser);",
    "right" : "initialiseParse(new StringReader(inputFragment), baseUri, parser);",
    "info" : "ExpressionStatement[4066-4132]:ExpressionStatement[4066-4132]"
  }, {
    "left" : "contextElement = context;",
    "right" : "contextElement = context;",
    "info" : "ExpressionStatement[4141-4166]:ExpressionStatement[4141-4166]"
  }, {
    "left" : "fragmentParsing = true;",
    "right" : "fragmentParsing = true;",
    "info" : "ExpressionStatement[4175-4198]:ExpressionStatement[4175-4198]"
  }, {
    "left" : "Element root = null;",
    "right" : "Element root = null;",
    "info" : "VariableDeclarationStatement[4207-4227]:VariableDeclarationStatement[4207-4227]"
  }, {
    "left" : "if (context != null)",
    "right" : "if (context != null)",
    "info" : "IfStatement[4237-5888]:IfStatement[4237-5888]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4258-5888]:Block[4258-5888]"
  }, {
    "left" : "if (context.ownerDocument() != null)",
    "right" : "if (context.ownerDocument() != null)",
    "info" : "IfStatement[4272-4395]:IfStatement[4272-4395]"
  }, {
    "left" : "doc.quirksMode(context.ownerDocument().quirksMode());",
    "right" : "doc.quirksMode(context.ownerDocument().quirksMode());",
    "info" : "ExpressionStatement[4342-4395]:ExpressionStatement[4342-4395]"
  }, {
    "left" : "String contextTag = context.tagName();",
    "right" : "String contextTag = context.tagName();",
    "info" : "VariableDeclarationStatement[4456-4494]:VariableDeclarationStatement[4456-4494]"
  }, {
    "left" : "if (StringUtil.in(contextTag, \"title\", \"textarea\"))",
    "right" : "if (StringUtil.in(contextTag, \"title\", \"textarea\"))",
    "info" : "IfStatement[4507-5227]:IfStatement[4507-5227]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Rcdata);",
    "right" : "tokeniser.transition(TokeniserState.Rcdata);",
    "info" : "ExpressionStatement[4575-4619]:ExpressionStatement[4575-4619]"
  }, {
    "left" : "if (StringUtil.in(contextTag, \"iframe\", \"noembed\", \"noframes\", \"style\", \"xmp\"))",
    "right" : "if (StringUtil.in(contextTag, \"iframe\", \"noembed\", \"noframes\", \"style\", \"xmp\"))",
    "info" : "IfStatement[4637-5227]:IfStatement[4637-5227]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Rawtext);",
    "right" : "tokeniser.transition(TokeniserState.Rawtext);",
    "info" : "ExpressionStatement[4733-4778]:ExpressionStatement[4733-4778]"
  }, {
    "left" : "if (contextTag.equals(\"script\"))",
    "right" : "if (contextTag.equals(\"script\"))",
    "info" : "IfStatement[4796-5227]:IfStatement[4796-5227]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.ScriptData);",
    "right" : "tokeniser.transition(TokeniserState.ScriptData);",
    "info" : "ExpressionStatement[4845-4893]:ExpressionStatement[4845-4893]"
  }, {
    "left" : "if (contextTag.equals((\"noscript\")))",
    "right" : "if (contextTag.equals((\"noscript\")))",
    "info" : "IfStatement[4911-5227]:IfStatement[4911-5227]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Data);",
    "right" : "tokeniser.transition(TokeniserState.Data);",
    "info" : "ExpressionStatement[4964-5006]:ExpressionStatement[4964-5006]"
  }, {
    "left" : "if (contextTag.equals(\"plaintext\"))",
    "right" : "if (contextTag.equals(\"plaintext\"))",
    "info" : "IfStatement[5057-5227]:IfStatement[5057-5227]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Data);",
    "right" : "tokeniser.transition(TokeniserState.Data);",
    "info" : "ExpressionStatement[5109-5151]:ExpressionStatement[5109-5151]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Data);",
    "right" : "tokeniser.transition(TokeniserState.Data);",
    "info" : "ExpressionStatement[5185-5227]:ExpressionStatement[5185-5227]"
  }, {
    "left" : "root = new Element(Tag.valueOf(\"html\", settings), baseUri);",
    "right" : "root = new Element(Tag.valueOf(\"html\", settings), baseUri);",
    "info" : "ExpressionStatement[5252-5311]:ExpressionStatement[5252-5311]"
  }, {
    "left" : "doc.appendChild(root);",
    "right" : "doc.appendChild(root);",
    "info" : "ExpressionStatement[5324-5346]:ExpressionStatement[5324-5346]"
  }, {
    "left" : "stack.add(root);",
    "right" : "stack.add(root);",
    "info" : "ExpressionStatement[5359-5375]:ExpressionStatement[5359-5375]"
  }, {
    "left" : "resetInsertionMode();",
    "right" : "resetInsertionMode();",
    "info" : "ExpressionStatement[5388-5409]:ExpressionStatement[5388-5409]"
  }, {
    "left" : "Elements contextChain = context.parents();",
    "right" : "Elements contextChain = context.parents();",
    "info" : "VariableDeclarationStatement[5577-5619]:VariableDeclarationStatement[5577-5619]"
  }, {
    "left" : "contextChain.add(0, context);",
    "right" : "contextChain.add(0, context);",
    "info" : "ExpressionStatement[5632-5661]:ExpressionStatement[5632-5661]"
  }, {
    "left" : "for (Element parent: contextChain)",
    "right" : "for (Element parent: contextChain)",
    "info" : "EnhancedForStatement[5674-5878]:EnhancedForStatement[5674-5878]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5709-5878]:Block[5709-5878]"
  }, {
    "left" : "if (parent instanceof FormElement)",
    "right" : "if (parent instanceof FormElement)",
    "info" : "IfStatement[5727-5864]:IfStatement[5727-5864]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5762-5864]:Block[5762-5864]"
  }, {
    "left" : "formElement = (FormElement) parent;",
    "right" : "formElement = (FormElement) parent;",
    "info" : "ExpressionStatement[5784-5819]:ExpressionStatement[5784-5819]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[5840-5846]:BreakStatement[5840-5846]"
  }, {
    "left" : "runParser();",
    "right" : "runParser();",
    "info" : "ExpressionStatement[5898-5910]:ExpressionStatement[5898-5910]"
  }, {
    "left" : "if (context != null)",
    "right" : "if (context != null)",
    "info" : "IfStatement[5919-6027]:IfStatement[5919-6027]"
  }, {
    "left" : "return root.childNodes();",
    "right" : "return root.childNodes();",
    "info" : "ReturnStatement[5952-5977]:ReturnStatement[5952-5977]"
  }, {
    "left" : "return doc.childNodes();",
    "right" : "return doc.childNodes();",
    "info" : "ReturnStatement[6003-6027]:ReturnStatement[6003-6027]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6039-6048]:MarkerAnnotation[6039-6048]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[6053-6062]:Modifier[6053-6062]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6063-6070]:PrimitiveType[6063-6070]"
  }, {
    "left" : "process",
    "right" : "process",
    "info" : "SimpleName[6071-6078]:SimpleName[6071-6078]"
  }, {
    "left" : "Token token",
    "right" : "Token token",
    "info" : "SingleVariableDeclaration[6079-6090]:SingleVariableDeclaration[6079-6090]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6092-6177]:Block[6092-6177]"
  }, {
    "left" : "currentToken = token;",
    "right" : "currentToken = token;",
    "info" : "ExpressionStatement[6102-6123]:ExpressionStatement[6102-6123]"
  }, {
    "left" : "return this.state.process(token, this);",
    "right" : "return this.state.process(token, this);",
    "info" : "ReturnStatement[6132-6171]:ReturnStatement[6132-6171]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6183-6190]:PrimitiveType[6183-6190]"
  }, {
    "left" : "process",
    "right" : "process",
    "info" : "SimpleName[6191-6198]:SimpleName[6191-6198]"
  }, {
    "left" : "Token token",
    "right" : "Token token",
    "info" : "SingleVariableDeclaration[6199-6210]:SingleVariableDeclaration[6199-6210]"
  }, {
    "left" : "HtmlTreeBuilderState state",
    "right" : "HtmlTreeBuilderState state",
    "info" : "SingleVariableDeclaration[6212-6238]:SingleVariableDeclaration[6212-6238]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6240-6320]:Block[6240-6320]"
  }, {
    "left" : "currentToken = token;",
    "right" : "currentToken = token;",
    "info" : "ExpressionStatement[6250-6271]:ExpressionStatement[6250-6271]"
  }, {
    "left" : "return state.process(token, this);",
    "right" : "return state.process(token, this);",
    "info" : "ReturnStatement[6280-6314]:ReturnStatement[6280-6314]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6326-6330]:PrimitiveType[6326-6330]"
  }, {
    "left" : "transition",
    "right" : "transition",
    "info" : "SimpleName[6331-6341]:SimpleName[6331-6341]"
  }, {
    "left" : "HtmlTreeBuilderState state",
    "right" : "HtmlTreeBuilderState state",
    "info" : "SingleVariableDeclaration[6342-6368]:SingleVariableDeclaration[6342-6368]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6370-6405]:Block[6370-6405]"
  }, {
    "left" : "this.state = state;",
    "right" : "this.state = state;",
    "info" : "ExpressionStatement[6380-6399]:ExpressionStatement[6380-6399]"
  }, {
    "left" : "HtmlTreeBuilderState",
    "right" : "HtmlTreeBuilderState",
    "info" : "SimpleType[6411-6431]:SimpleType[6411-6431]"
  }, {
    "left" : "state",
    "right" : "state",
    "info" : "SimpleName[6432-6437]:SimpleName[6432-6437]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6440-6469]:Block[6440-6469]"
  }, {
    "left" : "return state;",
    "right" : "return state;",
    "info" : "ReturnStatement[6450-6463]:ReturnStatement[6450-6463]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6475-6479]:PrimitiveType[6475-6479]"
  }, {
    "left" : "markInsertionMode",
    "right" : "markInsertionMode",
    "info" : "SimpleName[6480-6497]:SimpleName[6480-6497]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6500-6538]:Block[6500-6538]"
  }, {
    "left" : "originalState = state;",
    "right" : "originalState = state;",
    "info" : "ExpressionStatement[6510-6532]:ExpressionStatement[6510-6532]"
  }, {
    "left" : "HtmlTreeBuilderState",
    "right" : "HtmlTreeBuilderState",
    "info" : "SimpleType[6544-6564]:SimpleType[6544-6564]"
  }, {
    "left" : "originalState",
    "right" : "originalState",
    "info" : "SimpleName[6565-6578]:SimpleName[6565-6578]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6581-6618]:Block[6581-6618]"
  }, {
    "left" : "return originalState;",
    "right" : "return originalState;",
    "info" : "ReturnStatement[6591-6612]:ReturnStatement[6591-6612]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6624-6628]:PrimitiveType[6624-6628]"
  }, {
    "left" : "framesetOk",
    "right" : "framesetOk",
    "info" : "SimpleName[6629-6639]:SimpleName[6629-6639]"
  }, {
    "left" : "boolean framesetOk",
    "right" : "boolean framesetOk",
    "info" : "SingleVariableDeclaration[6640-6658]:SingleVariableDeclaration[6640-6658]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6660-6705]:Block[6660-6705]"
  }, {
    "left" : "this.framesetOk = framesetOk;",
    "right" : "this.framesetOk = framesetOk;",
    "info" : "ExpressionStatement[6670-6699]:ExpressionStatement[6670-6699]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6711-6718]:PrimitiveType[6711-6718]"
  }, {
    "left" : "framesetOk",
    "right" : "framesetOk",
    "info" : "SimpleName[6719-6729]:SimpleName[6719-6729]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6732-6766]:Block[6732-6766]"
  }, {
    "left" : "return framesetOk;",
    "right" : "return framesetOk;",
    "info" : "ReturnStatement[6742-6760]:ReturnStatement[6742-6760]"
  }, {
    "left" : "Document",
    "right" : "Document",
    "info" : "SimpleType[6772-6780]:SimpleType[6772-6780]"
  }, {
    "left" : "getDocument",
    "right" : "getDocument",
    "info" : "SimpleName[6781-6792]:SimpleName[6781-6792]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6795-6822]:Block[6795-6822]"
  }, {
    "left" : "return doc;",
    "right" : "return doc;",
    "info" : "ReturnStatement[6805-6816]:ReturnStatement[6805-6816]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[6828-6834]:SimpleType[6828-6834]"
  }, {
    "left" : "getBaseUri",
    "right" : "getBaseUri",
    "info" : "SimpleName[6835-6845]:SimpleName[6835-6845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6848-6879]:Block[6848-6879]"
  }, {
    "left" : "return baseUri;",
    "right" : "return baseUri;",
    "info" : "ReturnStatement[6858-6873]:ReturnStatement[6858-6873]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6885-6889]:PrimitiveType[6885-6889]"
  }, {
    "left" : "maybeSetBaseUri",
    "right" : "maybeSetBaseUri",
    "info" : "SimpleName[6890-6905]:SimpleName[6890-6905]"
  }, {
    "left" : "Element base",
    "right" : "Element base",
    "info" : "SingleVariableDeclaration[6906-6918]:SingleVariableDeclaration[6906-6918]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6920-7340]:Block[6920-7340]"
  }, {
    "left" : "if (baseUriSetFromDoc)",
    "right" : "if (baseUriSetFromDoc)",
    "info" : "IfStatement[6930-7021]:IfStatement[6930-7021]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[7014-7021]:ReturnStatement[7014-7021]"
  }, {
    "left" : "String href = base.absUrl(\"href\");",
    "right" : "String href = base.absUrl(\"href\");",
    "info" : "VariableDeclarationStatement[7031-7065]:VariableDeclarationStatement[7031-7065]"
  }, {
    "left" : "if (href.length() != 0)",
    "right" : "if (href.length() != 0)",
    "info" : "IfStatement[7074-7334]:IfStatement[7074-7334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7098-7334]:Block[7098-7334]"
  }, {
    "left" : "baseUri = href;",
    "right" : "baseUri = href;",
    "info" : "ExpressionStatement[7140-7155]:ExpressionStatement[7140-7155]"
  }, {
    "left" : "baseUriSetFromDoc = true;",
    "right" : "baseUriSetFromDoc = true;",
    "info" : "ExpressionStatement[7168-7193]:ExpressionStatement[7168-7193]"
  }, {
    "left" : "doc.setBaseUri(href);",
    "right" : "doc.setBaseUri(href);",
    "info" : "ExpressionStatement[7206-7227]:ExpressionStatement[7206-7227]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[7346-7353]:PrimitiveType[7346-7353]"
  }, {
    "left" : "isFragmentParsing",
    "right" : "isFragmentParsing",
    "info" : "SimpleName[7354-7371]:SimpleName[7354-7371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7374-7413]:Block[7374-7413]"
  }, {
    "left" : "return fragmentParsing;",
    "right" : "return fragmentParsing;",
    "info" : "ReturnStatement[7384-7407]:ReturnStatement[7384-7407]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7419-7423]:PrimitiveType[7419-7423]"
  }, {
    "left" : "error",
    "right" : "error",
    "info" : "SimpleName[7424-7429]:SimpleName[7424-7429]"
  }, {
    "left" : "HtmlTreeBuilderState state",
    "right" : "HtmlTreeBuilderState state",
    "info" : "SingleVariableDeclaration[7430-7456]:SingleVariableDeclaration[7430-7456]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7458-7654]:Block[7458-7654]"
  }, {
    "left" : "if (parser.getErrors().canAddError())",
    "right" : "if (parser.getErrors().canAddError())",
    "info" : "IfStatement[7468-7648]:IfStatement[7468-7648]"
  }, {
    "left" : "parser.getErrors().add(new ParseError(reader.pos(), \"Unexpected token [%s] when in state [%s]\", currentToken.tokenType(), state));",
    "right" : "parser.getErrors().add(new ParseError(reader.pos(), \"Unexpected token [%s] when in state [%s]\", currentToken.tokenType(), state));",
    "info" : "ExpressionStatement[7518-7648]:ExpressionStatement[7518-7648]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[7660-7667]:SimpleType[7660-7667]"
  }, {
    "left" : "insert",
    "right" : "insert",
    "info" : "SimpleName[7668-7674]:SimpleName[7668-7674]"
  }, {
    "left" : "final Token.StartTag startTag",
    "right" : "final Token.StartTag startTag",
    "info" : "SingleVariableDeclaration[7675-7704]:SingleVariableDeclaration[7675-7704]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7706-8502]:Block[7706-8714]"
  }, {
    "left" : "if (startTag.isSelfClosing())",
    "right" : "if (startTag.isSelfClosing())",
    "info" : "IfStatement[7910-8322]:IfStatement[8122-8534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7940-8322]:Block[8152-8534]"
  }, {
    "left" : "Element el = insertEmpty(startTag);",
    "right" : "Element el = insertEmpty(startTag);",
    "info" : "VariableDeclarationStatement[7954-7989]:VariableDeclarationStatement[8166-8201]"
  }, {
    "left" : "stack.add(el);",
    "right" : "stack.add(el);",
    "info" : "ExpressionStatement[8002-8016]:ExpressionStatement[8214-8228]"
  }, {
    "left" : "tokeniser.transition(TokeniserState.Data);",
    "right" : "tokeniser.transition(TokeniserState.Data);",
    "info" : "ExpressionStatement[8029-8071]:ExpressionStatement[8241-8283]"
  }, {
    "left" : "tokeniser.emit(emptyEnd.reset().name(el.tagName()));",
    "right" : "tokeniser.emit(emptyEnd.reset().name(el.tagName()));",
    "info" : "ExpressionStatement[8155-8207]:ExpressionStatement[8367-8419]"
  }, {
    "left" : "return el;",
    "right" : "return el;",
    "info" : "ReturnStatement[8302-8312]:ReturnStatement[8514-8524]"
  }, {
    "left" : "Element el = new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));",
    "right" : "Element el = new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));",
    "info" : "VariableDeclarationStatement[8332-8457]:VariableDeclarationStatement[8544-8669]"
  }, {
    "left" : "insert(el);",
    "right" : "insert(el);",
    "info" : "ExpressionStatement[8466-8477]:ExpressionStatement[8678-8689]"
  }, {
    "left" : "return el;",
    "right" : "return el;",
    "info" : "ReturnStatement[8486-8496]:ReturnStatement[8698-8708]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[8508-8515]:SimpleType[8720-8727]"
  }, {
    "left" : "insertStartTag",
    "right" : "insertStartTag",
    "info" : "SimpleName[8516-8530]:SimpleName[8728-8742]"
  }, {
    "left" : "String startTagName",
    "right" : "String startTagName",
    "info" : "SingleVariableDeclaration[8531-8550]:SingleVariableDeclaration[8743-8762]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8552-8678]:Block[8764-8890]"
  }, {
    "left" : "Element el = new Element(Tag.valueOf(startTagName, settings), baseUri);",
    "right" : "Element el = new Element(Tag.valueOf(startTagName, settings), baseUri);",
    "info" : "VariableDeclarationStatement[8562-8633]:VariableDeclarationStatement[8774-8845]"
  }, {
    "left" : "insert(el);",
    "right" : "insert(el);",
    "info" : "ExpressionStatement[8642-8653]:ExpressionStatement[8854-8865]"
  }, {
    "left" : "return el;",
    "right" : "return el;",
    "info" : "ReturnStatement[8662-8672]:ReturnStatement[8874-8884]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8684-8688]:PrimitiveType[8896-8900]"
  }, {
    "left" : "insert",
    "right" : "insert",
    "info" : "SimpleName[8689-8695]:SimpleName[8901-8907]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[8696-8706]:SingleVariableDeclaration[8908-8918]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8708-8762]:Block[8920-8974]"
  }, {
    "left" : "insertNode(el);",
    "right" : "insertNode(el);",
    "info" : "ExpressionStatement[8718-8733]:ExpressionStatement[8930-8945]"
  }, {
    "left" : "stack.add(el);",
    "right" : "stack.add(el);",
    "info" : "ExpressionStatement[8742-8756]:ExpressionStatement[8954-8968]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[8768-8775]:SimpleType[8980-8987]"
  }, {
    "left" : "insertEmpty",
    "right" : "insertEmpty",
    "info" : "SimpleName[8776-8787]:SimpleName[8988-8999]"
  }, {
    "left" : "Token.StartTag startTag",
    "right" : "Token.StartTag startTag",
    "info" : "SingleVariableDeclaration[8788-8811]:SingleVariableDeclaration[9000-9023]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8813-9321]:Block[9025-9533]"
  }, {
    "left" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
    "right" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
    "info" : "VariableDeclarationStatement[8823-8872]:VariableDeclarationStatement[9035-9084]"
  }, {
    "left" : "Element el = new Element(tag, baseUri, startTag.attributes);",
    "right" : "Element el = new Element(tag, baseUri, startTag.attributes);",
    "info" : "VariableDeclarationStatement[8881-8941]:VariableDeclarationStatement[9093-9153]"
  }, {
    "left" : "insertNode(el);",
    "right" : "insertNode(el);",
    "info" : "ExpressionStatement[8950-8965]:ExpressionStatement[9162-9177]"
  }, {
    "left" : "if (startTag.isSelfClosing())",
    "right" : "if (startTag.isSelfClosing())",
    "info" : "IfStatement[8974-9296]:IfStatement[9186-9508]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9004-9296]:Block[9216-9508]"
  }, {
    "left" : "if (tag.isKnownTag())",
    "right" : "if (tag.isKnownTag())",
    "info" : "IfStatement[9018-9286]:IfStatement[9230-9498]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9040-9174]:Block[9252-9386]"
  }, {
    "left" : "if (!tag.isEmpty())",
    "right" : "if (!tag.isEmpty())",
    "info" : "IfStatement[9058-9160]:IfStatement[9270-9372]"
  }, {
    "left" : "tokeniser.error(\"Tag cannot be self closing; not a void tag\");",
    "right" : "tokeniser.error(\"Tag cannot be self closing; not a void tag\");",
    "info" : "ExpressionStatement[9098-9160]:ExpressionStatement[9310-9372]"
  }, {
    "left" : "tag.setSelfClosing();",
    "right" : "tag.setSelfClosing();",
    "info" : "ExpressionStatement[9265-9286]:ExpressionStatement[9477-9498]"
  }, {
    "left" : "return el;",
    "right" : "return el;",
    "info" : "ReturnStatement[9305-9315]:ReturnStatement[9517-9527]"
  }, {
    "left" : "FormElement",
    "right" : "FormElement",
    "info" : "SimpleType[9327-9338]:SimpleType[9539-9550]"
  }, {
    "left" : "insertForm",
    "right" : "insertForm",
    "info" : "SimpleName[9339-9349]:SimpleName[9551-9561]"
  }, {
    "left" : "Token.StartTag startTag",
    "right" : "Token.StartTag startTag",
    "info" : "SingleVariableDeclaration[9350-9373]:SingleVariableDeclaration[9562-9585]"
  }, {
    "left" : "boolean onStack",
    "right" : "boolean onStack",
    "info" : "SingleVariableDeclaration[9375-9390]:SingleVariableDeclaration[9587-9602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9392-9653]:Block[9604-9865]"
  }, {
    "left" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
    "right" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
    "info" : "VariableDeclarationStatement[9402-9451]:VariableDeclarationStatement[9614-9663]"
  }, {
    "left" : "FormElement el = new FormElement(tag, baseUri, startTag.attributes);",
    "right" : "FormElement el = new FormElement(tag, baseUri, startTag.attributes);",
    "info" : "VariableDeclarationStatement[9460-9528]:VariableDeclarationStatement[9672-9740]"
  }, {
    "left" : "setFormElement(el);",
    "right" : "setFormElement(el);",
    "info" : "ExpressionStatement[9537-9556]:ExpressionStatement[9749-9768]"
  }, {
    "left" : "insertNode(el);",
    "right" : "insertNode(el);",
    "info" : "ExpressionStatement[9565-9580]:ExpressionStatement[9777-9792]"
  }, {
    "left" : "if (onStack)",
    "right" : "if (onStack)",
    "info" : "IfStatement[9589-9628]:IfStatement[9801-9840]"
  }, {
    "left" : "stack.add(el);",
    "right" : "stack.add(el);",
    "info" : "ExpressionStatement[9614-9628]:ExpressionStatement[9826-9840]"
  }, {
    "left" : "return el;",
    "right" : "return el;",
    "info" : "ReturnStatement[9637-9647]:ReturnStatement[9849-9859]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9659-9663]:PrimitiveType[9871-9875]"
  }, {
    "left" : "insert",
    "right" : "insert",
    "info" : "SimpleName[9664-9670]:SimpleName[9876-9882]"
  }, {
    "left" : "Token.Comment commentToken",
    "right" : "Token.Comment commentToken",
    "info" : "SingleVariableDeclaration[9671-9697]:SingleVariableDeclaration[9883-9909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9699-9798]:Block[9911-10010]"
  }, {
    "left" : "Comment comment = new Comment(commentToken.getData());",
    "right" : "Comment comment = new Comment(commentToken.getData());",
    "info" : "VariableDeclarationStatement[9709-9763]:VariableDeclarationStatement[9921-9975]"
  }, {
    "left" : "insertNode(comment);",
    "right" : "insertNode(comment);",
    "info" : "ExpressionStatement[9772-9792]:ExpressionStatement[9984-10004]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9804-9808]:PrimitiveType[10016-10020]"
  }, {
    "left" : "insert",
    "right" : "insert",
    "info" : "SimpleName[9809-9815]:SimpleName[10021-10027]"
  }, {
    "left" : "Token.Character characterToken",
    "right" : "Token.Character characterToken",
    "info" : "SingleVariableDeclaration[9816-9846]:SingleVariableDeclaration[10028-10058]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9848-10382]:Block[10060-10594]"
  }, {
    "left" : "final Node node;",
    "right" : "final Node node;",
    "info" : "VariableDeclarationStatement[9858-9874]:VariableDeclarationStatement[10070-10086]"
  }, {
    "left" : "final Element el = currentElement();",
    "right" : "final Element el = currentElement();",
    "info" : "VariableDeclarationStatement[9883-9919]:VariableDeclarationStatement[10095-10131]"
  }, {
    "left" : "final String tagName = el.tagName();",
    "right" : "final String tagName = el.tagName();",
    "info" : "VariableDeclarationStatement[9928-9964]:VariableDeclarationStatement[10140-10176]"
  }, {
    "left" : "final String data = characterToken.getData();",
    "right" : "final String data = characterToken.getData();",
    "info" : "VariableDeclarationStatement[9973-10018]:VariableDeclarationStatement[10185-10230]"
  }, {
    "left" : "if (characterToken.isCData())",
    "right" : "if (characterToken.isCData())",
    "info" : "IfStatement[10028-10258]:IfStatement[10240-10470]"
  }, {
    "left" : "node = new CDataNode(data);",
    "right" : "node = new CDataNode(data);",
    "info" : "ExpressionStatement[10070-10097]:ExpressionStatement[10282-10309]"
  }, {
    "left" : "if (tagName.equals(\"script\") || tagName.equals(\"style\"))",
    "right" : "if (tagName.equals(\"script\") || tagName.equals(\"style\"))",
    "info" : "IfStatement[10111-10258]:IfStatement[10323-10470]"
  }, {
    "left" : "node = new DataNode(data);",
    "right" : "node = new DataNode(data);",
    "info" : "ExpressionStatement[10180-10206]:ExpressionStatement[10392-10418]"
  }, {
    "left" : "node = new TextNode(data);",
    "right" : "node = new TextNode(data);",
    "info" : "ExpressionStatement[10232-10258]:ExpressionStatement[10444-10470]"
  }, {
    "left" : "el.appendChild(node);",
    "right" : "el.appendChild(node);",
    "info" : "ExpressionStatement[10267-10288]:ExpressionStatement[10479-10500]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[10388-10395]:Modifier[10600-10607]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[10396-10400]:PrimitiveType[10608-10612]"
  }, {
    "left" : "insertNode",
    "right" : "insertNode",
    "info" : "SimpleName[10401-10411]:SimpleName[10613-10623]"
  }, {
    "left" : "Node node",
    "right" : "Node node",
    "info" : "SingleVariableDeclaration[10412-10421]:SingleVariableDeclaration[10624-10633]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10423-10963]:Block[10635-11175]"
  }, {
    "left" : "if (stack.isEmpty())",
    "right" : "if (stack.isEmpty())",
    "info" : "IfStatement[10526-10718]:IfStatement[10738-10930]"
  }, {
    "left" : "doc.appendChild(node);",
    "right" : "doc.appendChild(node);",
    "info" : "ExpressionStatement[10559-10581]:ExpressionStatement[10771-10793]"
  }, {
    "left" : "if (isFosterInserts())",
    "right" : "if (isFosterInserts())",
    "info" : "IfStatement[10595-10718]:IfStatement[10807-10930]"
  }, {
    "left" : "insertInFosterParent(node);",
    "right" : "insertInFosterParent(node);",
    "info" : "ExpressionStatement[10630-10657]:ExpressionStatement[10842-10869]"
  }, {
    "left" : "currentElement().appendChild(node);",
    "right" : "currentElement().appendChild(node);",
    "info" : "ExpressionStatement[10683-10718]:ExpressionStatement[10895-10930]"
  }, {
    "left" : "if (node instanceof Element && ((Element) node).tag().isFormListed())",
    "right" : "if (node instanceof Element && ((Element) node).tag().isFormListed())",
    "info" : "IfStatement[10783-10957]:IfStatement[10995-11169]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10853-10957]:Block[11065-11169]"
  }, {
    "left" : "if (formElement != null)",
    "right" : "if (formElement != null)",
    "info" : "IfStatement[10867-10947]:IfStatement[11079-11159]"
  }, {
    "left" : "formElement.addElement((Element) node);",
    "right" : "formElement.addElement((Element) node);",
    "info" : "ExpressionStatement[10908-10947]:ExpressionStatement[11120-11159]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[10969-10976]:SimpleType[11181-11188]"
  }, {
    "left" : "pop",
    "right" : "pop",
    "info" : "SimpleName[10977-10980]:SimpleName[11189-11192]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10983-11060]:Block[11195-11272]"
  }, {
    "left" : "int size = stack.size();",
    "right" : "int size = stack.size();",
    "info" : "VariableDeclarationStatement[10993-11017]:VariableDeclarationStatement[11205-11229]"
  }, {
    "left" : "return stack.remove(size-1);",
    "right" : "return stack.remove(size-1);",
    "info" : "ReturnStatement[11026-11054]:ReturnStatement[11238-11266]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11066-11070]:PrimitiveType[11278-11282]"
  }, {
    "left" : "push",
    "right" : "push",
    "info" : "SimpleName[11071-11075]:SimpleName[11283-11287]"
  }, {
    "left" : "Element element",
    "right" : "Element element",
    "info" : "SingleVariableDeclaration[11076-11091]:SingleVariableDeclaration[11288-11303]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11093-11128]:Block[11305-11340]"
  }, {
    "left" : "stack.add(element);",
    "right" : "stack.add(element);",
    "info" : "ExpressionStatement[11103-11122]:ExpressionStatement[11315-11334]"
  }, {
    "left" : "ArrayList<Element>",
    "right" : "ArrayList<Element>",
    "info" : "ParameterizedType[11134-11152]:ParameterizedType[11346-11364]"
  }, {
    "left" : "getStack",
    "right" : "getStack",
    "info" : "SimpleName[11153-11161]:SimpleName[11365-11373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11164-11193]:Block[11376-11405]"
  }, {
    "left" : "return stack;",
    "right" : "return stack;",
    "info" : "ReturnStatement[11174-11187]:ReturnStatement[11386-11399]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[11199-11206]:PrimitiveType[11411-11418]"
  }, {
    "left" : "onStack",
    "right" : "onStack",
    "info" : "SimpleName[11207-11214]:SimpleName[11419-11426]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[11215-11225]:SingleVariableDeclaration[11427-11437]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11227-11278]:Block[11439-11490]"
  }, {
    "left" : "return isElementInQueue(stack, el);",
    "right" : "return isElementInQueue(stack, el);",
    "info" : "ReturnStatement[11237-11272]:ReturnStatement[11449-11484]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[11284-11291]:Modifier[11496-11503]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[11292-11299]:PrimitiveType[11504-11511]"
  }, {
    "left" : "isElementInQueue",
    "right" : "isElementInQueue",
    "info" : "SimpleName[11300-11316]:SimpleName[11512-11528]"
  }, {
    "left" : "ArrayList<Element> queue",
    "right" : "ArrayList<Element> queue",
    "info" : "SingleVariableDeclaration[11317-11341]:SingleVariableDeclaration[11529-11553]"
  }, {
    "left" : "Element element",
    "right" : "Element element",
    "info" : "SingleVariableDeclaration[11343-11358]:SingleVariableDeclaration[11555-11570]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11360-11579]:Block[11572-11791]"
  }, {
    "left" : "for (int pos = queue.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = queue.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[11370-11551]:ForStatement[11582-11763]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11419-11551]:Block[11631-11763]"
  }, {
    "left" : "Element next = queue.get(pos);",
    "right" : "Element next = queue.get(pos);",
    "info" : "VariableDeclarationStatement[11433-11463]:VariableDeclarationStatement[11645-11675]"
  }, {
    "left" : "if (next == element)",
    "right" : "if (next == element)",
    "info" : "IfStatement[11476-11541]:IfStatement[11688-11753]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11497-11541]:Block[11709-11753]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[11515-11527]:ReturnStatement[11727-11739]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[11560-11573]:ReturnStatement[11772-11785]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[11585-11592]:SimpleType[11797-11804]"
  }, {
    "left" : "getFromStack",
    "right" : "getFromStack",
    "info" : "SimpleName[11593-11605]:SimpleName[11805-11817]"
  }, {
    "left" : "String elName",
    "right" : "String elName",
    "info" : "SingleVariableDeclaration[11606-11619]:SingleVariableDeclaration[11818-11831]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11621-11856]:Block[11833-12068]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[11631-11829]:ForStatement[11843-12041]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11680-11829]:Block[11892-12041]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[11694-11724]:VariableDeclarationStatement[11906-11936]"
  }, {
    "left" : "if (next.normalName().equals(elName))",
    "right" : "if (next.normalName().equals(elName))",
    "info" : "IfStatement[11737-11819]:IfStatement[11949-12031]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11775-11819]:Block[11987-12031]"
  }, {
    "left" : "return next;",
    "right" : "return next;",
    "info" : "ReturnStatement[11793-11805]:ReturnStatement[12005-12017]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[11838-11850]:ReturnStatement[12050-12062]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[11862-11869]:PrimitiveType[12074-12081]"
  }, {
    "left" : "removeFromStack",
    "right" : "removeFromStack",
    "info" : "SimpleName[11870-11885]:SimpleName[12082-12097]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[11886-11896]:SingleVariableDeclaration[12098-12108]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11898-12147]:Block[12110-12359]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[11908-12119]:ForStatement[12120-12331]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11957-12119]:Block[12169-12331]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[11971-12001]:VariableDeclarationStatement[12183-12213]"
  }, {
    "left" : "if (next == el)",
    "right" : "if (next == el)",
    "info" : "IfStatement[12014-12109]:IfStatement[12226-12321]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12030-12109]:Block[12242-12321]"
  }, {
    "left" : "stack.remove(pos);",
    "right" : "stack.remove(pos);",
    "info" : "ExpressionStatement[12048-12066]:ExpressionStatement[12260-12278]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[12083-12095]:ReturnStatement[12295-12307]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[12128-12141]:ReturnStatement[12340-12353]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12153-12157]:PrimitiveType[12365-12369]"
  }, {
    "left" : "popStackToClose",
    "right" : "popStackToClose",
    "info" : "SimpleName[12158-12173]:SimpleName[12370-12385]"
  }, {
    "left" : "String elName",
    "right" : "String elName",
    "info" : "SingleVariableDeclaration[12174-12187]:SingleVariableDeclaration[12386-12399]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12189-12412]:Block[12401-12624]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[12199-12406]:ForStatement[12411-12618]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12248-12406]:Block[12460-12618]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[12262-12292]:VariableDeclarationStatement[12474-12504]"
  }, {
    "left" : "stack.remove(pos);",
    "right" : "stack.remove(pos);",
    "info" : "ExpressionStatement[12305-12323]:ExpressionStatement[12517-12535]"
  }, {
    "left" : "if (next.normalName().equals(elName))",
    "right" : "if (next.normalName().equals(elName))",
    "info" : "IfStatement[12336-12396]:IfStatement[12548-12608]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[12390-12396]:BreakStatement[12602-12608]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12465-12469]:PrimitiveType[12677-12681]"
  }, {
    "left" : "popStackToClose",
    "right" : "popStackToClose",
    "info" : "SimpleName[12470-12485]:SimpleName[12682-12697]"
  }, {
    "left" : "String... elNames",
    "right" : "String... elNames",
    "info" : "SingleVariableDeclaration[12486-12503]:SingleVariableDeclaration[12698-12715]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12505-12732]:Block[12717-12944]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[12515-12726]:ForStatement[12727-12938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12564-12726]:Block[12776-12938]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[12578-12608]:VariableDeclarationStatement[12790-12820]"
  }, {
    "left" : "stack.remove(pos);",
    "right" : "stack.remove(pos);",
    "info" : "ExpressionStatement[12621-12639]:ExpressionStatement[12833-12851]"
  }, {
    "left" : "if (inSorted(next.normalName(), elNames))",
    "right" : "if (inSorted(next.normalName(), elNames))",
    "info" : "IfStatement[12652-12716]:IfStatement[12864-12928]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[12710-12716]:BreakStatement[12922-12928]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12738-12742]:PrimitiveType[12950-12954]"
  }, {
    "left" : "popStackToBefore",
    "right" : "popStackToBefore",
    "info" : "SimpleName[12743-12759]:SimpleName[12955-12971]"
  }, {
    "left" : "String elName",
    "right" : "String elName",
    "info" : "SingleVariableDeclaration[12760-12773]:SingleVariableDeclaration[12972-12985]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12775-13039]:Block[12987-13251]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[12785-13033]:ForStatement[12997-13245]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12834-13033]:Block[13046-13245]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[12848-12878]:VariableDeclarationStatement[13060-13090]"
  }, {
    "left" : "if (next.normalName().equals(elName))",
    "right" : "if (next.normalName().equals(elName))",
    "info" : "IfStatement[12891-13023]:IfStatement[13103-13235]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12929-12967]:Block[13141-13179]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[12947-12953]:BreakStatement[13159-13165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12973-13023]:Block[13185-13235]"
  }, {
    "left" : "stack.remove(pos);",
    "right" : "stack.remove(pos);",
    "info" : "ExpressionStatement[12991-13009]:ExpressionStatement[13203-13221]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13045-13049]:PrimitiveType[13257-13261]"
  }, {
    "left" : "clearStackToTableContext",
    "right" : "clearStackToTableContext",
    "info" : "SimpleName[13050-13074]:SimpleName[13262-13286]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13077-13122]:Block[13289-13334]"
  }, {
    "left" : "clearStackToContext(\"table\");",
    "right" : "clearStackToContext(\"table\");",
    "info" : "ExpressionStatement[13087-13116]:ExpressionStatement[13299-13328]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13128-13132]:PrimitiveType[13340-13344]"
  }, {
    "left" : "clearStackToTableBodyContext",
    "right" : "clearStackToTableBodyContext",
    "info" : "SimpleName[13133-13161]:SimpleName[13345-13373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13164-13239]:Block[13376-13451]"
  }, {
    "left" : "clearStackToContext(\"tbody\", \"tfoot\", \"thead\", \"template\");",
    "right" : "clearStackToContext(\"tbody\", \"tfoot\", \"thead\", \"template\");",
    "info" : "ExpressionStatement[13174-13233]:ExpressionStatement[13386-13445]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13245-13249]:PrimitiveType[13457-13461]"
  }, {
    "left" : "clearStackToTableRowContext",
    "right" : "clearStackToTableRowContext",
    "info" : "SimpleName[13250-13277]:SimpleName[13462-13489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13280-13334]:Block[13492-13546]"
  }, {
    "left" : "clearStackToContext(\"tr\", \"template\");",
    "right" : "clearStackToContext(\"tr\", \"template\");",
    "info" : "ExpressionStatement[13290-13328]:ExpressionStatement[13502-13540]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[13340-13347]:Modifier[13552-13559]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13348-13352]:PrimitiveType[13560-13564]"
  }, {
    "left" : "clearStackToContext",
    "right" : "clearStackToContext",
    "info" : "SimpleName[13353-13372]:SimpleName[13565-13584]"
  }, {
    "left" : "String... nodeNames",
    "right" : "String... nodeNames",
    "info" : "SingleVariableDeclaration[13373-13392]:SingleVariableDeclaration[13585-13604]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13394-13685]:Block[13606-13897]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[13404-13679]:ForStatement[13616-13891]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13453-13679]:Block[13665-13891]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[13467-13497]:VariableDeclarationStatement[13679-13709]"
  }, {
    "left" : "if (StringUtil.in(next.normalName(), nodeNames) || next.normalName().equals(\"html\"))",
    "right" : "if (StringUtil.in(next.normalName(), nodeNames) || next.normalName().equals(\"html\"))",
    "info" : "IfStatement[13510-13669]:IfStatement[13722-13881]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[13611-13617]:BreakStatement[13823-13829]"
  }, {
    "left" : "stack.remove(pos);",
    "right" : "stack.remove(pos);",
    "info" : "ExpressionStatement[13651-13669]:ExpressionStatement[13863-13881]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[13691-13698]:SimpleType[13903-13910]"
  }, {
    "left" : "aboveOnStack",
    "right" : "aboveOnStack",
    "info" : "SimpleName[13699-13711]:SimpleName[13911-13923]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[13712-13722]:SingleVariableDeclaration[13924-13934]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13724-13977]:Block[13936-14189]"
  }, {
    "left" : "assert onStack(el);",
    "right" : "assert onStack(el);",
    "info" : "AssertStatement[13734-13753]:AssertStatement[13946-13965]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[13762-13950]:ForStatement[13974-14162]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13811-13950]:Block[14023-14162]"
  }, {
    "left" : "Element next = stack.get(pos);",
    "right" : "Element next = stack.get(pos);",
    "info" : "VariableDeclarationStatement[13825-13855]:VariableDeclarationStatement[14037-14067]"
  }, {
    "left" : "if (next == el)",
    "right" : "if (next == el)",
    "info" : "IfStatement[13868-13940]:IfStatement[14080-14152]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13884-13940]:Block[14096-14152]"
  }, {
    "left" : "return stack.get(pos-1);",
    "right" : "return stack.get(pos-1);",
    "info" : "ReturnStatement[13902-13926]:ReturnStatement[14114-14138]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[13959-13971]:ReturnStatement[14171-14183]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13983-13987]:PrimitiveType[14195-14199]"
  }, {
    "left" : "insertOnStackAfter",
    "right" : "insertOnStackAfter",
    "info" : "SimpleName[13988-14006]:SimpleName[14200-14218]"
  }, {
    "left" : "Element after",
    "right" : "Element after",
    "info" : "SingleVariableDeclaration[14007-14020]:SingleVariableDeclaration[14219-14232]"
  }, {
    "left" : "Element in",
    "right" : "Element in",
    "info" : "SingleVariableDeclaration[14022-14032]:SingleVariableDeclaration[14234-14244]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14034-14145]:Block[14246-14357]"
  }, {
    "left" : "int i = stack.lastIndexOf(after);",
    "right" : "int i = stack.lastIndexOf(after);",
    "info" : "VariableDeclarationStatement[14044-14077]:VariableDeclarationStatement[14256-14289]"
  }, {
    "left" : "Validate.isTrue(i != -1);",
    "right" : "Validate.isTrue(i != -1);",
    "info" : "ExpressionStatement[14086-14111]:ExpressionStatement[14298-14323]"
  }, {
    "left" : "stack.add(i+1, in);",
    "right" : "stack.add(i+1, in);",
    "info" : "ExpressionStatement[14120-14139]:ExpressionStatement[14332-14351]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14151-14155]:PrimitiveType[14363-14367]"
  }, {
    "left" : "replaceOnStack",
    "right" : "replaceOnStack",
    "info" : "SimpleName[14156-14170]:SimpleName[14368-14382]"
  }, {
    "left" : "Element out",
    "right" : "Element out",
    "info" : "SingleVariableDeclaration[14171-14182]:SingleVariableDeclaration[14383-14394]"
  }, {
    "left" : "Element in",
    "right" : "Element in",
    "info" : "SingleVariableDeclaration[14184-14194]:SingleVariableDeclaration[14396-14406]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14196-14243]:Block[14408-14455]"
  }, {
    "left" : "replaceInQueue(stack, out, in);",
    "right" : "replaceInQueue(stack, out, in);",
    "info" : "ExpressionStatement[14206-14237]:ExpressionStatement[14418-14449]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[14249-14256]:Modifier[14461-14468]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14257-14261]:PrimitiveType[14469-14473]"
  }, {
    "left" : "replaceInQueue",
    "right" : "replaceInQueue",
    "info" : "SimpleName[14262-14276]:SimpleName[14474-14488]"
  }, {
    "left" : "ArrayList<Element> queue",
    "right" : "ArrayList<Element> queue",
    "info" : "SingleVariableDeclaration[14277-14301]:SingleVariableDeclaration[14489-14513]"
  }, {
    "left" : "Element out",
    "right" : "Element out",
    "info" : "SingleVariableDeclaration[14303-14314]:SingleVariableDeclaration[14515-14526]"
  }, {
    "left" : "Element in",
    "right" : "Element in",
    "info" : "SingleVariableDeclaration[14316-14326]:SingleVariableDeclaration[14528-14538]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14328-14435]:Block[14540-14647]"
  }, {
    "left" : "int i = queue.lastIndexOf(out);",
    "right" : "int i = queue.lastIndexOf(out);",
    "info" : "VariableDeclarationStatement[14338-14369]:VariableDeclarationStatement[14550-14581]"
  }, {
    "left" : "Validate.isTrue(i != -1);",
    "right" : "Validate.isTrue(i != -1);",
    "info" : "ExpressionStatement[14378-14403]:ExpressionStatement[14590-14615]"
  }, {
    "left" : "queue.set(i, in);",
    "right" : "queue.set(i, in);",
    "info" : "ExpressionStatement[14412-14429]:ExpressionStatement[14624-14641]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14441-14445]:PrimitiveType[14653-14657]"
  }, {
    "left" : "resetInsertionMode",
    "right" : "resetInsertionMode",
    "info" : "SimpleName[14446-14464]:SimpleName[14658-14676]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14467-16439]:Block[14679-16651]"
  }, {
    "left" : "boolean last = false;",
    "right" : "boolean last = false;",
    "info" : "VariableDeclarationStatement[14477-14498]:VariableDeclarationStatement[14689-14710]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[14507-16433]:ForStatement[14719-16645]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14556-16433]:Block[14768-16645]"
  }, {
    "left" : "Element node = stack.get(pos);",
    "right" : "Element node = stack.get(pos);",
    "info" : "VariableDeclarationStatement[14570-14600]:VariableDeclarationStatement[14782-14812]"
  }, {
    "left" : "if (pos == 0)",
    "right" : "if (pos == 0)",
    "info" : "IfStatement[14613-14710]:IfStatement[14825-14922]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14627-14710]:Block[14839-14922]"
  }, {
    "left" : "last = true;",
    "right" : "last = true;",
    "info" : "ExpressionStatement[14645-14657]:ExpressionStatement[14857-14869]"
  }, {
    "left" : "node = contextElement;",
    "right" : "node = contextElement;",
    "info" : "ExpressionStatement[14674-14696]:ExpressionStatement[14886-14908]"
  }, {
    "left" : "String name = node.normalName();",
    "right" : "String name = node.normalName();",
    "info" : "VariableDeclarationStatement[14723-14755]:VariableDeclarationStatement[14935-14967]"
  }, {
    "left" : "if (\"select\".equals(name))",
    "right" : "if (\"select\".equals(name))",
    "info" : "IfStatement[14768-16423]:IfStatement[14980-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14795-14900]:Block[15007-15112]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InSelect);",
    "right" : "transition(HtmlTreeBuilderState.InSelect);",
    "info" : "ExpressionStatement[14813-14855]:ExpressionStatement[15025-15067]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[14872-14878]:BreakStatement[15084-15090]"
  }, {
    "left" : "if ((\"td\".equals(name) || \"th\".equals(name) && !last))",
    "right" : "if ((\"td\".equals(name) || \"th\".equals(name) && !last))",
    "info" : "IfStatement[14906-16423]:IfStatement[15118-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14961-15056]:Block[15173-15268]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InCell);",
    "right" : "transition(HtmlTreeBuilderState.InCell);",
    "info" : "ExpressionStatement[14979-15019]:ExpressionStatement[15191-15231]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15036-15042]:BreakStatement[15248-15254]"
  }, {
    "left" : "if (\"tr\".equals(name))",
    "right" : "if (\"tr\".equals(name))",
    "info" : "IfStatement[15062-16423]:IfStatement[15274-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15085-15179]:Block[15297-15391]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InRow);",
    "right" : "transition(HtmlTreeBuilderState.InRow);",
    "info" : "ExpressionStatement[15103-15142]:ExpressionStatement[15315-15354]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15159-15165]:BreakStatement[15371-15377]"
  }, {
    "left" : "if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name))",
    "right" : "if (\"tbody\".equals(name) || \"thead\".equals(name) || \"tfoot\".equals(name))",
    "info" : "IfStatement[15185-16423]:IfStatement[15397-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15259-15359]:Block[15471-15571]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InTableBody);",
    "right" : "transition(HtmlTreeBuilderState.InTableBody);",
    "info" : "ExpressionStatement[15277-15322]:ExpressionStatement[15489-15534]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15339-15345]:BreakStatement[15551-15557]"
  }, {
    "left" : "if (\"caption\".equals(name))",
    "right" : "if (\"caption\".equals(name))",
    "info" : "IfStatement[15365-16423]:IfStatement[15577-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15393-15491]:Block[15605-15703]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InCaption);",
    "right" : "transition(HtmlTreeBuilderState.InCaption);",
    "info" : "ExpressionStatement[15411-15454]:ExpressionStatement[15623-15666]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15471-15477]:BreakStatement[15683-15689]"
  }, {
    "left" : "if (\"colgroup\".equals(name))",
    "right" : "if (\"colgroup\".equals(name))",
    "info" : "IfStatement[15497-16423]:IfStatement[15709-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15526-15636]:Block[15738-15848]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InColumnGroup);",
    "right" : "transition(HtmlTreeBuilderState.InColumnGroup);",
    "info" : "ExpressionStatement[15544-15591]:ExpressionStatement[15756-15803]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15608-15614]:BreakStatement[15820-15826]"
  }, {
    "left" : "if (\"table\".equals(name))",
    "right" : "if (\"table\".equals(name))",
    "info" : "IfStatement[15642-16423]:IfStatement[15854-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15668-15764]:Block[15880-15976]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InTable);",
    "right" : "transition(HtmlTreeBuilderState.InTable);",
    "info" : "ExpressionStatement[15686-15727]:ExpressionStatement[15898-15939]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15744-15750]:BreakStatement[15956-15962]"
  }, {
    "left" : "if (\"head\".equals(name))",
    "right" : "if (\"head\".equals(name))",
    "info" : "IfStatement[15770-16423]:IfStatement[15982-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15795-15898]:Block[16007-16110]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InBody);",
    "right" : "transition(HtmlTreeBuilderState.InBody);",
    "info" : "ExpressionStatement[15813-15853]:ExpressionStatement[16025-16065]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[15870-15876]:BreakStatement[16082-16088]"
  }, {
    "left" : "if (\"body\".equals(name))",
    "right" : "if (\"body\".equals(name))",
    "info" : "IfStatement[15904-16423]:IfStatement[16116-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15929-16024]:Block[16141-16236]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InBody);",
    "right" : "transition(HtmlTreeBuilderState.InBody);",
    "info" : "ExpressionStatement[15947-15987]:ExpressionStatement[16159-16199]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[16004-16010]:BreakStatement[16216-16222]"
  }, {
    "left" : "if (\"frameset\".equals(name))",
    "right" : "if (\"frameset\".equals(name))",
    "info" : "IfStatement[16030-16423]:IfStatement[16242-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16059-16166]:Block[16271-16378]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InFrameset);",
    "right" : "transition(HtmlTreeBuilderState.InFrameset);",
    "info" : "ExpressionStatement[16077-16121]:ExpressionStatement[16289-16333]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[16138-16144]:BreakStatement[16350-16356]"
  }, {
    "left" : "if (\"html\".equals(name))",
    "right" : "if (\"html\".equals(name))",
    "info" : "IfStatement[16172-16423]:IfStatement[16384-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16197-16304]:Block[16409-16516]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.BeforeHead);",
    "right" : "transition(HtmlTreeBuilderState.BeforeHead);",
    "info" : "ExpressionStatement[16215-16259]:ExpressionStatement[16427-16471]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[16276-16282]:BreakStatement[16488-16494]"
  }, {
    "left" : "if (last)",
    "right" : "if (last)",
    "info" : "IfStatement[16310-16423]:IfStatement[16522-16635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16320-16423]:Block[16532-16635]"
  }, {
    "left" : "transition(HtmlTreeBuilderState.InBody);",
    "right" : "transition(HtmlTreeBuilderState.InBody);",
    "info" : "ExpressionStatement[16338-16378]:ExpressionStatement[16550-16590]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[16395-16401]:BreakStatement[16607-16613]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16544-16551]:Modifier[16756-16763]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[16552-16559]:PrimitiveType[16764-16771]"
  }, {
    "left" : "inSpecificScope",
    "right" : "inSpecificScope",
    "info" : "SimpleName[16560-16575]:SimpleName[16772-16787]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[16576-16593]:SingleVariableDeclaration[16788-16805]"
  }, {
    "left" : "String[] baseTypes",
    "right" : "String[] baseTypes",
    "info" : "SingleVariableDeclaration[16595-16613]:SingleVariableDeclaration[16807-16825]"
  }, {
    "left" : "String[] extraTypes",
    "right" : "String[] extraTypes",
    "info" : "SingleVariableDeclaration[16615-16634]:SingleVariableDeclaration[16827-16846]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16636-16764]:Block[16848-16976]"
  }, {
    "left" : "specificScopeTarget[0] = targetName;",
    "right" : "specificScopeTarget[0] = targetName;",
    "info" : "ExpressionStatement[16646-16682]:ExpressionStatement[16858-16894]"
  }, {
    "left" : "return inSpecificScope(specificScopeTarget, baseTypes, extraTypes);",
    "right" : "return inSpecificScope(specificScopeTarget, baseTypes, extraTypes);",
    "info" : "ReturnStatement[16691-16758]:ReturnStatement[16903-16970]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16770-16777]:Modifier[16982-16989]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[16778-16785]:PrimitiveType[16990-16997]"
  }, {
    "left" : "inSpecificScope",
    "right" : "inSpecificScope",
    "info" : "SimpleName[16786-16801]:SimpleName[16998-17013]"
  }, {
    "left" : "String[] targetNames",
    "right" : "String[] targetNames",
    "info" : "SingleVariableDeclaration[16802-16822]:SingleVariableDeclaration[17014-17034]"
  }, {
    "left" : "String[] baseTypes",
    "right" : "String[] baseTypes",
    "info" : "SingleVariableDeclaration[16824-16842]:SingleVariableDeclaration[17036-17054]"
  }, {
    "left" : "String[] extraTypes",
    "right" : "String[] extraTypes",
    "info" : "SingleVariableDeclaration[16844-16863]:SingleVariableDeclaration[17056-17075]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16865-17661]:Block[17077-17873]"
  }, {
    "left" : "final int bottom = stack.size() -1;",
    "right" : "final int bottom = stack.size() -1;",
    "info" : "VariableDeclarationStatement[16975-17010]:VariableDeclarationStatement[17187-17222]"
  }, {
    "left" : "final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;",
    "right" : "final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;",
    "info" : "VariableDeclarationStatement[17019-17099]:VariableDeclarationStatement[17231-17311]"
  }, {
    "left" : "for (int pos = bottom; pos >= top; pos--)",
    "right" : "for (int pos = bottom; pos >= top; pos--)",
    "info" : "ForStatement[17151-17516]:ForStatement[17363-17728]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17193-17516]:Block[17405-17728]"
  }, {
    "left" : "final String elName = stack.get(pos).normalName();",
    "right" : "final String elName = stack.get(pos).normalName();",
    "info" : "VariableDeclarationStatement[17207-17257]:VariableDeclarationStatement[17419-17469]"
  }, {
    "left" : "if (inSorted(elName, targetNames))",
    "right" : "if (inSorted(elName, targetNames))",
    "info" : "IfStatement[17270-17333]:IfStatement[17482-17545]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[17321-17333]:ReturnStatement[17533-17545]"
  }, {
    "left" : "if (inSorted(elName, baseTypes))",
    "right" : "if (inSorted(elName, baseTypes))",
    "info" : "IfStatement[17346-17408]:IfStatement[17558-17620]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[17395-17408]:ReturnStatement[17607-17620]"
  }, {
    "left" : "if (extraTypes != null && inSorted(elName, extraTypes))",
    "right" : "if (extraTypes != null && inSorted(elName, extraTypes))",
    "info" : "IfStatement[17421-17506]:IfStatement[17633-17718]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[17493-17506]:ReturnStatement[17705-17718]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[17642-17655]:ReturnStatement[17854-17867]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[17667-17674]:PrimitiveType[17879-17886]"
  }, {
    "left" : "inScope",
    "right" : "inScope",
    "info" : "SimpleName[17675-17682]:SimpleName[17887-17894]"
  }, {
    "left" : "String[] targetNames",
    "right" : "String[] targetNames",
    "info" : "SingleVariableDeclaration[17683-17703]:SingleVariableDeclaration[17895-17915]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17705-17782]:Block[17917-17994]"
  }, {
    "left" : "return inSpecificScope(targetNames, TagsSearchInScope, null);",
    "right" : "return inSpecificScope(targetNames, TagsSearchInScope, null);",
    "info" : "ReturnStatement[17715-17776]:ReturnStatement[17927-17988]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[17788-17795]:PrimitiveType[18000-18007]"
  }, {
    "left" : "inScope",
    "right" : "inScope",
    "info" : "SimpleName[17796-17803]:SimpleName[18008-18015]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[17804-17821]:SingleVariableDeclaration[18016-18033]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17823-17872]:Block[18035-18084]"
  }, {
    "left" : "return inScope(targetName, null);",
    "right" : "return inScope(targetName, null);",
    "info" : "ReturnStatement[17833-17866]:ReturnStatement[18045-18078]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[17878-17885]:PrimitiveType[18090-18097]"
  }, {
    "left" : "inScope",
    "right" : "inScope",
    "info" : "SimpleName[17886-17893]:SimpleName[18098-18105]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[17894-17911]:SingleVariableDeclaration[18106-18123]"
  }, {
    "left" : "String[] extras",
    "right" : "String[] extras",
    "info" : "SingleVariableDeclaration[17913-17928]:SingleVariableDeclaration[18125-18140]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17930-18144]:Block[18142-18356]"
  }, {
    "left" : "return inSpecificScope(targetName, TagsSearchInScope, extras);",
    "right" : "return inSpecificScope(targetName, TagsSearchInScope, extras);",
    "info" : "ReturnStatement[17940-18002]:ReturnStatement[18152-18214]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[18150-18157]:PrimitiveType[18362-18369]"
  }, {
    "left" : "inListItemScope",
    "right" : "inListItemScope",
    "info" : "SimpleName[18158-18173]:SimpleName[18370-18385]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[18174-18191]:SingleVariableDeclaration[18386-18403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18193-18251]:Block[18405-18463]"
  }, {
    "left" : "return inScope(targetName, TagSearchList);",
    "right" : "return inScope(targetName, TagSearchList);",
    "info" : "ReturnStatement[18203-18245]:ReturnStatement[18415-18457]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[18257-18264]:PrimitiveType[18469-18476]"
  }, {
    "left" : "inButtonScope",
    "right" : "inButtonScope",
    "info" : "SimpleName[18265-18278]:SimpleName[18477-18490]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[18279-18296]:SingleVariableDeclaration[18491-18508]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18298-18358]:Block[18510-18570]"
  }, {
    "left" : "return inScope(targetName, TagSearchButton);",
    "right" : "return inScope(targetName, TagSearchButton);",
    "info" : "ReturnStatement[18308-18352]:ReturnStatement[18520-18564]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[18364-18371]:PrimitiveType[18576-18583]"
  }, {
    "left" : "inTableScope",
    "right" : "inTableScope",
    "info" : "SimpleName[18372-18384]:SimpleName[18584-18596]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[18385-18402]:SingleVariableDeclaration[18597-18614]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18404-18482]:Block[18616-18694]"
  }, {
    "left" : "return inSpecificScope(targetName, TagSearchTableScope, null);",
    "right" : "return inSpecificScope(targetName, TagSearchTableScope, null);",
    "info" : "ReturnStatement[18414-18476]:ReturnStatement[18626-18688]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[18488-18495]:PrimitiveType[18700-18707]"
  }, {
    "left" : "inSelectScope",
    "right" : "inSelectScope",
    "info" : "SimpleName[18496-18509]:SimpleName[18708-18721]"
  }, {
    "left" : "String targetName",
    "right" : "String targetName",
    "info" : "SingleVariableDeclaration[18510-18527]:SingleVariableDeclaration[18722-18739]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18529-18945]:Block[18741-19157]"
  }, {
    "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[18539-18867]:ForStatement[18751-19079]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18588-18867]:Block[18800-19079]"
  }, {
    "left" : "Element el = stack.get(pos);",
    "right" : "Element el = stack.get(pos);",
    "info" : "VariableDeclarationStatement[18602-18630]:VariableDeclarationStatement[18814-18842]"
  }, {
    "left" : "String elName = el.normalName();",
    "right" : "String elName = el.normalName();",
    "info" : "VariableDeclarationStatement[18643-18675]:VariableDeclarationStatement[18855-18887]"
  }, {
    "left" : "if (elName.equals(targetName))",
    "right" : "if (elName.equals(targetName))",
    "info" : "IfStatement[18688-18747]:IfStatement[18900-18959]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[18735-18747]:ReturnStatement[18947-18959]"
  }, {
    "left" : "if (!inSorted(elName, TagSearchSelectScope))",
    "right" : "if (!inSorted(elName, TagSearchSelectScope))",
    "info" : "IfStatement[18760-18857]:IfStatement[18972-19069]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[18844-18857]:ReturnStatement[19056-19069]"
  }, {
    "left" : "Validate.fail(\"Should not be reachable\");",
    "right" : "Validate.fail(\"Should not be reachable\");",
    "info" : "ExpressionStatement[18876-18917]:ExpressionStatement[19088-19129]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[18926-18939]:ReturnStatement[19138-19151]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18951-18955]:PrimitiveType[19163-19167]"
  }, {
    "left" : "setHeadElement",
    "right" : "setHeadElement",
    "info" : "SimpleName[18956-18970]:SimpleName[19168-19182]"
  }, {
    "left" : "Element headElement",
    "right" : "Element headElement",
    "info" : "SingleVariableDeclaration[18971-18990]:SingleVariableDeclaration[19183-19202]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18992-19039]:Block[19204-19251]"
  }, {
    "left" : "this.headElement = headElement;",
    "right" : "this.headElement = headElement;",
    "info" : "ExpressionStatement[19002-19033]:ExpressionStatement[19214-19245]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[19045-19052]:SimpleType[19257-19264]"
  }, {
    "left" : "getHeadElement",
    "right" : "getHeadElement",
    "info" : "SimpleName[19053-19067]:SimpleName[19265-19279]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19070-19105]:Block[19282-19317]"
  }, {
    "left" : "return headElement;",
    "right" : "return headElement;",
    "info" : "ReturnStatement[19080-19099]:ReturnStatement[19292-19311]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[19111-19118]:PrimitiveType[19323-19330]"
  }, {
    "left" : "isFosterInserts",
    "right" : "isFosterInserts",
    "info" : "SimpleName[19119-19134]:SimpleName[19331-19346]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19137-19174]:Block[19349-19386]"
  }, {
    "left" : "return fosterInserts;",
    "right" : "return fosterInserts;",
    "info" : "ReturnStatement[19147-19168]:ReturnStatement[19359-19380]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19180-19184]:PrimitiveType[19392-19396]"
  }, {
    "left" : "setFosterInserts",
    "right" : "setFosterInserts",
    "info" : "SimpleName[19185-19201]:SimpleName[19397-19413]"
  }, {
    "left" : "boolean fosterInserts",
    "right" : "boolean fosterInserts",
    "info" : "SingleVariableDeclaration[19202-19223]:SingleVariableDeclaration[19414-19435]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19225-19276]:Block[19437-19488]"
  }, {
    "left" : "this.fosterInserts = fosterInserts;",
    "right" : "this.fosterInserts = fosterInserts;",
    "info" : "ExpressionStatement[19235-19270]:ExpressionStatement[19447-19482]"
  }, {
    "left" : "FormElement",
    "right" : "FormElement",
    "info" : "SimpleType[19282-19293]:SimpleType[19494-19505]"
  }, {
    "left" : "getFormElement",
    "right" : "getFormElement",
    "info" : "SimpleName[19294-19308]:SimpleName[19506-19520]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19311-19346]:Block[19523-19558]"
  }, {
    "left" : "return formElement;",
    "right" : "return formElement;",
    "info" : "ReturnStatement[19321-19340]:ReturnStatement[19533-19552]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19352-19356]:PrimitiveType[19564-19568]"
  }, {
    "left" : "setFormElement",
    "right" : "setFormElement",
    "info" : "SimpleName[19357-19371]:SimpleName[19569-19583]"
  }, {
    "left" : "FormElement formElement",
    "right" : "FormElement formElement",
    "info" : "SingleVariableDeclaration[19372-19395]:SingleVariableDeclaration[19584-19607]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19397-19444]:Block[19609-19656]"
  }, {
    "left" : "this.formElement = formElement;",
    "right" : "this.formElement = formElement;",
    "info" : "ExpressionStatement[19407-19438]:ExpressionStatement[19619-19650]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19450-19454]:PrimitiveType[19662-19666]"
  }, {
    "left" : "newPendingTableCharacters",
    "right" : "newPendingTableCharacters",
    "info" : "SimpleName[19455-19480]:SimpleName[19667-19692]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19483-19542]:Block[19695-19754]"
  }, {
    "left" : "pendingTableCharacters = new ArrayList<>();",
    "right" : "pendingTableCharacters = new ArrayList<>();",
    "info" : "ExpressionStatement[19493-19536]:ExpressionStatement[19705-19748]"
  }, {
    "left" : "List<String>",
    "right" : "List<String>",
    "info" : "ParameterizedType[19548-19560]:ParameterizedType[19760-19772]"
  }, {
    "left" : "getPendingTableCharacters",
    "right" : "getPendingTableCharacters",
    "info" : "SimpleName[19561-19586]:SimpleName[19773-19798]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19589-19635]:Block[19801-19847]"
  }, {
    "left" : "return pendingTableCharacters;",
    "right" : "return pendingTableCharacters;",
    "info" : "ReturnStatement[19599-19629]:ReturnStatement[19811-19841]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20247-20251]:PrimitiveType[20459-20463]"
  }, {
    "left" : "generateImpliedEndTags",
    "right" : "generateImpliedEndTags",
    "info" : "SimpleName[20252-20274]:SimpleName[20464-20486]"
  }, {
    "left" : "String excludeTag",
    "right" : "String excludeTag",
    "info" : "SingleVariableDeclaration[20275-20292]:SingleVariableDeclaration[20487-20504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20294-20487]:Block[20506-20699]"
  }, {
    "left" : "while ((excludeTag != null && !currentElement().normalName().equals(excludeTag)) &&\n                inSorted(currentElement().normalName(), TagSearchEndTags))\n            pop();",
    "right" : "while ((excludeTag != null && !currentElement().normalName().equals(excludeTag)) &&\n                inSorted(currentElement().normalName(), TagSearchEndTags))\n            pop();",
    "info" : "WhileStatement[20304-20481]:WhileStatement[20516-20693]"
  }, {
    "left" : "pop();",
    "right" : "pop();",
    "info" : "ExpressionStatement[20475-20481]:ExpressionStatement[20687-20693]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20493-20497]:PrimitiveType[20705-20709]"
  }, {
    "left" : "generateImpliedEndTags",
    "right" : "generateImpliedEndTags",
    "info" : "SimpleName[20498-20520]:SimpleName[20710-20732]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20523-20568]:Block[20735-20780]"
  }, {
    "left" : "generateImpliedEndTags(null);",
    "right" : "generateImpliedEndTags(null);",
    "info" : "ExpressionStatement[20533-20562]:ExpressionStatement[20745-20774]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[20574-20581]:PrimitiveType[20786-20793]"
  }, {
    "left" : "isSpecial",
    "right" : "isSpecial",
    "info" : "SimpleName[20582-20591]:SimpleName[20794-20803]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[20592-20602]:SingleVariableDeclaration[20804-20814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20604-20785]:Block[20816-20997]"
  }, {
    "left" : "String name = el.normalName();",
    "right" : "String name = el.normalName();",
    "info" : "VariableDeclarationStatement[20700-20730]:VariableDeclarationStatement[20912-20942]"
  }, {
    "left" : "return inSorted(name, TagSearchSpecial);",
    "right" : "return inSorted(name, TagSearchSpecial);",
    "info" : "ReturnStatement[20739-20779]:ReturnStatement[20951-20991]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[20791-20798]:SimpleType[21003-21010]"
  }, {
    "left" : "lastFormattingElement",
    "right" : "lastFormattingElement",
    "info" : "SimpleName[20799-20820]:SimpleName[21011-21032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20823-20937]:Block[21035-21149]"
  }, {
    "left" : "return formattingElements.size() > 0 ? formattingElements.get(formattingElements.size()-1) : null;",
    "right" : "return formattingElements.size() > 0 ? formattingElements.get(formattingElements.size()-1) : null;",
    "info" : "ReturnStatement[20833-20931]:ReturnStatement[21045-21143]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[20943-20950]:SimpleType[21155-21162]"
  }, {
    "left" : "removeLastFormattingElement",
    "right" : "removeLastFormattingElement",
    "info" : "SimpleName[20951-20978]:SimpleName[21163-21190]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20981-21148]:Block[21193-21360]"
  }, {
    "left" : "int size = formattingElements.size();",
    "right" : "int size = formattingElements.size();",
    "info" : "VariableDeclarationStatement[20991-21028]:VariableDeclarationStatement[21203-21240]"
  }, {
    "left" : "if (size > 0)",
    "right" : "if (size > 0)",
    "info" : "IfStatement[21037-21142]:IfStatement[21249-21354]"
  }, {
    "left" : "return formattingElements.remove(size-1);",
    "right" : "return formattingElements.remove(size-1);",
    "info" : "ReturnStatement[21063-21104]:ReturnStatement[21275-21316]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[21130-21142]:ReturnStatement[21342-21354]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21188-21192]:PrimitiveType[21400-21404]"
  }, {
    "left" : "pushActiveFormattingElements",
    "right" : "pushActiveFormattingElements",
    "info" : "SimpleName[21193-21221]:SimpleName[21405-21433]"
  }, {
    "left" : "Element in",
    "right" : "Element in",
    "info" : "SingleVariableDeclaration[21222-21232]:SingleVariableDeclaration[21434-21444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21234-21694]:Block[21446-21906]"
  }, {
    "left" : "int numSeen = 0;",
    "right" : "int numSeen = 0;",
    "info" : "VariableDeclarationStatement[21244-21260]:VariableDeclarationStatement[21456-21472]"
  }, {
    "left" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[21269-21652]:ForStatement[21481-21864]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21331-21652]:Block[21543-21864]"
  }, {
    "left" : "Element el = formattingElements.get(pos);",
    "right" : "Element el = formattingElements.get(pos);",
    "info" : "VariableDeclarationStatement[21345-21386]:VariableDeclarationStatement[21557-21598]"
  }, {
    "left" : "if (el == null)",
    "right" : "if (el == null)",
    "info" : "IfStatement[21399-21447]:IfStatement[21611-21659]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[21441-21447]:BreakStatement[21653-21659]"
  }, {
    "left" : "if (isSameFormattingElement(in, el))",
    "right" : "if (isSameFormattingElement(in, el))",
    "info" : "IfStatement[21461-21524]:IfStatement[21673-21736]"
  }, {
    "left" : "numSeen++;",
    "right" : "numSeen++;",
    "info" : "ExpressionStatement[21514-21524]:ExpressionStatement[21726-21736]"
  }, {
    "left" : "if (numSeen == 3)",
    "right" : "if (numSeen == 3)",
    "info" : "IfStatement[21538-21642]:IfStatement[21750-21854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21556-21642]:Block[21768-21854]"
  }, {
    "left" : "formattingElements.remove(pos);",
    "right" : "formattingElements.remove(pos);",
    "info" : "ExpressionStatement[21574-21605]:ExpressionStatement[21786-21817]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[21622-21628]:BreakStatement[21834-21840]"
  }, {
    "left" : "formattingElements.add(in);",
    "right" : "formattingElements.add(in);",
    "info" : "ExpressionStatement[21661-21688]:ExpressionStatement[21873-21900]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[21700-21707]:Modifier[21912-21919]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[21708-21715]:PrimitiveType[21920-21927]"
  }, {
    "left" : "isSameFormattingElement",
    "right" : "isSameFormattingElement",
    "info" : "SimpleName[21716-21739]:SimpleName[21928-21951]"
  }, {
    "left" : "Element a",
    "right" : "Element a",
    "info" : "SingleVariableDeclaration[21740-21749]:SingleVariableDeclaration[21952-21961]"
  }, {
    "left" : "Element b",
    "right" : "Element b",
    "info" : "SingleVariableDeclaration[21751-21760]:SingleVariableDeclaration[21963-21972]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21762-22086]:Block[21974-22298]"
  }, {
    "left" : "return a.normalName().equals(b.normalName()) &&\n                // a.namespace().equals(b.namespace()) &&\n                a.attributes().equals(b.attributes());",
    "right" : "return a.normalName().equals(b.normalName()) &&\n                // a.namespace().equals(b.namespace()) &&\n                a.attributes().equals(b.attributes());",
    "info" : "ReturnStatement[21892-22052]:ReturnStatement[22104-22264]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22092-22096]:PrimitiveType[22304-22308]"
  }, {
    "left" : "reconstructFormattingElements",
    "right" : "reconstructFormattingElements",
    "info" : "SimpleName[22097-22126]:SimpleName[22309-22338]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22129-23595]:Block[22341-23807]"
  }, {
    "left" : "Element last = lastFormattingElement();",
    "right" : "Element last = lastFormattingElement();",
    "info" : "VariableDeclarationStatement[22139-22178]:VariableDeclarationStatement[22351-22390]"
  }, {
    "left" : "if (last == null || onStack(last))",
    "right" : "if (last == null || onStack(last))",
    "info" : "IfStatement[22187-22241]:IfStatement[22399-22453]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[22234-22241]:ReturnStatement[22446-22453]"
  }, {
    "left" : "Element entry = last;",
    "right" : "Element entry = last;",
    "info" : "VariableDeclarationStatement[22251-22272]:VariableDeclarationStatement[22463-22484]"
  }, {
    "left" : "int size = formattingElements.size();",
    "right" : "int size = formattingElements.size();",
    "info" : "VariableDeclarationStatement[22281-22318]:VariableDeclarationStatement[22493-22530]"
  }, {
    "left" : "int pos = size - 1;",
    "right" : "int pos = size - 1;",
    "info" : "VariableDeclarationStatement[22327-22346]:VariableDeclarationStatement[22539-22558]"
  }, {
    "left" : "boolean skip = false;",
    "right" : "boolean skip = false;",
    "info" : "VariableDeclarationStatement[22355-22376]:VariableDeclarationStatement[22567-22588]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[22385-22775]:WhileStatement[22597-22987]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22398-22775]:Block[22610-22987]"
  }, {
    "left" : "if (pos == 0)",
    "right" : "if (pos == 0)",
    "info" : "IfStatement[22412-22530]:IfStatement[22624-22742]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22426-22530]:Block[22638-22742]"
  }, {
    "left" : "skip = true;",
    "right" : "skip = true;",
    "info" : "ExpressionStatement[22481-22493]:ExpressionStatement[22693-22705]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22510-22516]:BreakStatement[22722-22728]"
  }, {
    "left" : "entry = formattingElements.get(--pos);",
    "right" : "entry = formattingElements.get(--pos);",
    "info" : "ExpressionStatement[22543-22581]:ExpressionStatement[22755-22793]"
  }, {
    "left" : "if (entry == null || onStack(entry))",
    "right" : "if (entry == null || onStack(entry))",
    "info" : "IfStatement[22628-22727]:IfStatement[22840-22939]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22721-22727]:BreakStatement[22933-22939]"
  }, {
    "left" : "while(true)",
    "right" : "while(true)",
    "info" : "WhileStatement[22784-23589]:WhileStatement[22996-23801]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22796-23589]:Block[23008-23801]"
  }, {
    "left" : "if (!skip)",
    "right" : "if (!skip)",
    "info" : "IfStatement[22810-22906]:IfStatement[23022-23118]"
  }, {
    "left" : "entry = formattingElements.get(++pos);",
    "right" : "entry = formattingElements.get(++pos);",
    "info" : "ExpressionStatement[22868-22906]:ExpressionStatement[23080-23118]"
  }, {
    "left" : "Validate.notNull(entry);",
    "right" : "Validate.notNull(entry);",
    "info" : "ExpressionStatement[22919-22943]:ExpressionStatement[23131-23155]"
  }, {
    "left" : "skip = false;",
    "right" : "skip = false;",
    "info" : "ExpressionStatement[23096-23109]:ExpressionStatement[23308-23321]"
  }, {
    "left" : "Element newEl = insertStartTag(entry.normalName());",
    "right" : "Element newEl = insertStartTag(entry.normalName());",
    "info" : "VariableDeclarationStatement[23157-23208]:VariableDeclarationStatement[23369-23420]"
  }, {
    "left" : "newEl.attributes().addAll(entry.attributes());",
    "right" : "newEl.attributes().addAll(entry.attributes());",
    "info" : "ExpressionStatement[23323-23369]:ExpressionStatement[23535-23581]"
  }, {
    "left" : "formattingElements.set(pos, newEl);",
    "right" : "formattingElements.set(pos, newEl);",
    "info" : "ExpressionStatement[23431-23466]:ExpressionStatement[23643-23678]"
  }, {
    "left" : "if (pos == size-1)",
    "right" : "if (pos == size-1)",
    "info" : "IfStatement[23498-23579]:IfStatement[23710-23791]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23573-23579]:BreakStatement[23785-23791]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23601-23605]:PrimitiveType[23813-23817]"
  }, {
    "left" : "clearFormattingElementsToLastMarker",
    "right" : "clearFormattingElementsToLastMarker",
    "info" : "SimpleName[23606-23641]:SimpleName[23818-23853]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23644-23816]:Block[23856-24028]"
  }, {
    "left" : "while (!formattingElements.isEmpty())",
    "right" : "while (!formattingElements.isEmpty())",
    "info" : "WhileStatement[23654-23810]:WhileStatement[23866-24022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23692-23810]:Block[23904-24022]"
  }, {
    "left" : "Element el = removeLastFormattingElement();",
    "right" : "Element el = removeLastFormattingElement();",
    "info" : "VariableDeclarationStatement[23706-23749]:VariableDeclarationStatement[23918-23961]"
  }, {
    "left" : "if (el == null)",
    "right" : "if (el == null)",
    "info" : "IfStatement[23762-23800]:IfStatement[23974-24012]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23794-23800]:BreakStatement[24006-24012]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[23822-23826]:PrimitiveType[24034-24038]"
  }, {
    "left" : "removeFromActiveFormattingElements",
    "right" : "removeFromActiveFormattingElements",
    "info" : "SimpleName[23827-23861]:SimpleName[24039-24073]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[23862-23872]:SingleVariableDeclaration[24074-24084]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23874-24134]:Block[24086-24346]"
  }, {
    "left" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[23884-24128]:ForStatement[24096-24340]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23946-24128]:Block[24158-24340]"
  }, {
    "left" : "Element next = formattingElements.get(pos);",
    "right" : "Element next = formattingElements.get(pos);",
    "info" : "VariableDeclarationStatement[23960-24003]:VariableDeclarationStatement[24172-24215]"
  }, {
    "left" : "if (next == el)",
    "right" : "if (next == el)",
    "info" : "IfStatement[24016-24118]:IfStatement[24228-24330]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24032-24118]:Block[24244-24330]"
  }, {
    "left" : "formattingElements.remove(pos);",
    "right" : "formattingElements.remove(pos);",
    "info" : "ExpressionStatement[24050-24081]:ExpressionStatement[24262-24293]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24098-24104]:BreakStatement[24310-24316]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[24140-24147]:PrimitiveType[24352-24359]"
  }, {
    "left" : "isInActiveFormattingElements",
    "right" : "isInActiveFormattingElements",
    "info" : "SimpleName[24148-24176]:SimpleName[24360-24388]"
  }, {
    "left" : "Element el",
    "right" : "Element el",
    "info" : "SingleVariableDeclaration[24177-24187]:SingleVariableDeclaration[24389-24399]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24189-24253]:Block[24401-24465]"
  }, {
    "left" : "return isElementInQueue(formattingElements, el);",
    "right" : "return isElementInQueue(formattingElements, el);",
    "info" : "ReturnStatement[24199-24247]:ReturnStatement[24411-24459]"
  }, {
    "left" : "Element",
    "right" : "Element",
    "info" : "SimpleType[24259-24266]:SimpleType[24471-24478]"
  }, {
    "left" : "getActiveFormattingElement",
    "right" : "getActiveFormattingElement",
    "info" : "SimpleName[24267-24293]:SimpleName[24479-24505]"
  }, {
    "left" : "String nodeName",
    "right" : "String nodeName",
    "info" : "SingleVariableDeclaration[24294-24309]:SingleVariableDeclaration[24506-24521]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24311-24632]:Block[24523-24844]"
  }, {
    "left" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "right" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
    "info" : "ForStatement[24321-24605]:ForStatement[24533-24817]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24383-24605]:Block[24595-24817]"
  }, {
    "left" : "Element next = formattingElements.get(pos);",
    "right" : "Element next = formattingElements.get(pos);",
    "info" : "VariableDeclarationStatement[24397-24440]:VariableDeclarationStatement[24609-24652]"
  }, {
    "left" : "if (next == null)",
    "right" : "if (next == null)",
    "info" : "IfStatement[24453-24595]:IfStatement[24665-24807]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[24503-24509]:BreakStatement[24715-24721]"
  }, {
    "left" : "if (next.normalName().equals(nodeName))",
    "right" : "if (next.normalName().equals(nodeName))",
    "info" : "IfStatement[24527-24595]:IfStatement[24739-24807]"
  }, {
    "left" : "return next;",
    "right" : "return next;",
    "info" : "ReturnStatement[24583-24595]:ReturnStatement[24795-24807]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[24614-24626]:ReturnStatement[24826-24838]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24638-24642]:PrimitiveType[24850-24854]"
  }, {
    "left" : "replaceActiveFormattingElement",
    "right" : "replaceActiveFormattingElement",
    "info" : "SimpleName[24643-24673]:SimpleName[24855-24885]"
  }, {
    "left" : "Element out",
    "right" : "Element out",
    "info" : "SingleVariableDeclaration[24674-24685]:SingleVariableDeclaration[24886-24897]"
  }, {
    "left" : "Element in",
    "right" : "Element in",
    "info" : "SingleVariableDeclaration[24687-24697]:SingleVariableDeclaration[24899-24909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24699-24759]:Block[24911-24971]"
  }, {
    "left" : "replaceInQueue(formattingElements, out, in);",
    "right" : "replaceInQueue(formattingElements, out, in);",
    "info" : "ExpressionStatement[24709-24753]:ExpressionStatement[24921-24965]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24765-24769]:PrimitiveType[24977-24981]"
  }, {
    "left" : "insertMarkerToFormattingElements",
    "right" : "insertMarkerToFormattingElements",
    "info" : "SimpleName[24770-24802]:SimpleName[24982-25014]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24805-24850]:Block[25017-25062]"
  }, {
    "left" : "formattingElements.add(null);",
    "right" : "formattingElements.add(null);",
    "info" : "ExpressionStatement[24815-24844]:ExpressionStatement[25027-25056]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24856-24860]:PrimitiveType[25068-25072]"
  }, {
    "left" : "insertInFosterParent",
    "right" : "insertInFosterParent",
    "info" : "SimpleName[24861-24881]:SimpleName[25073-25093]"
  }, {
    "left" : "Node in",
    "right" : "Node in",
    "info" : "SingleVariableDeclaration[24882-24889]:SingleVariableDeclaration[25094-25101]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24891-25575]:Block[25103-25787]"
  }, {
    "left" : "Element fosterParent;",
    "right" : "Element fosterParent;",
    "info" : "VariableDeclarationStatement[24901-24922]:VariableDeclarationStatement[25113-25134]"
  }, {
    "left" : "Element lastTable = getFromStack(\"table\");",
    "right" : "Element lastTable = getFromStack(\"table\");",
    "info" : "VariableDeclarationStatement[24931-24973]:VariableDeclarationStatement[25143-25185]"
  }, {
    "left" : "boolean isLastTableParent = false;",
    "right" : "boolean isLastTableParent = false;",
    "info" : "VariableDeclarationStatement[24982-25016]:VariableDeclarationStatement[25194-25228]"
  }, {
    "left" : "if (lastTable != null)",
    "right" : "if (lastTable != null)",
    "info" : "IfStatement[25025-25351]:IfStatement[25237-25563]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25048-25273]:Block[25260-25485]"
  }, {
    "left" : "if (lastTable.parent() != null)",
    "right" : "if (lastTable.parent() != null)",
    "info" : "IfStatement[25062-25263]:IfStatement[25274-25475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25094-25202]:Block[25306-25414]"
  }, {
    "left" : "fosterParent = lastTable.parent();",
    "right" : "fosterParent = lastTable.parent();",
    "info" : "ExpressionStatement[25112-25146]:ExpressionStatement[25324-25358]"
  }, {
    "left" : "isLastTableParent = true;",
    "right" : "isLastTableParent = true;",
    "info" : "ExpressionStatement[25163-25188]:ExpressionStatement[25375-25400]"
  }, {
    "left" : "fosterParent = aboveOnStack(lastTable);",
    "right" : "fosterParent = aboveOnStack(lastTable);",
    "info" : "ExpressionStatement[25224-25263]:ExpressionStatement[25436-25475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25279-25351]:Block[25491-25563]"
  }, {
    "left" : "fosterParent = stack.get(0);",
    "right" : "fosterParent = stack.get(0);",
    "info" : "ExpressionStatement[25313-25341]:ExpressionStatement[25525-25553]"
  }, {
    "left" : "if (isLastTableParent)",
    "right" : "if (isLastTableParent)",
    "info" : "IfStatement[25361-25569]:IfStatement[25573-25781]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25384-25514]:Block[25596-25726]"
  }, {
    "left" : "Validate.notNull(lastTable);",
    "right" : "Validate.notNull(lastTable);",
    "info" : "ExpressionStatement[25398-25426]:ExpressionStatement[25610-25638]"
  }, {
    "left" : "lastTable.before(in);",
    "right" : "lastTable.before(in);",
    "info" : "ExpressionStatement[25483-25504]:ExpressionStatement[25695-25716]"
  }, {
    "left" : "fosterParent.appendChild(in);",
    "right" : "fosterParent.appendChild(in);",
    "info" : "ExpressionStatement[25540-25569]:ExpressionStatement[25752-25781]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[25581-25590]:MarkerAnnotation[25793-25802]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25595-25601]:Modifier[25807-25813]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[25602-25608]:SimpleType[25814-25820]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[25609-25617]:SimpleName[25821-25829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25620-25823]:Block[25832-26035]"
  }, {
    "left" : "return \"TreeBuilder{\" +\n                \"currentToken=\" + currentToken +\n                \", state=\" + state +\n                \", currentElement=\" + currentElement() +\n                '}';",
    "right" : "return \"TreeBuilder{\" +\n                \"currentToken=\" + currentToken +\n                \", state=\" + state +\n                \", currentElement=\" + currentElement() +\n                '}';",
    "info" : "ReturnStatement[25630-25817]:ReturnStatement[25842-26029]"
  } ]
}