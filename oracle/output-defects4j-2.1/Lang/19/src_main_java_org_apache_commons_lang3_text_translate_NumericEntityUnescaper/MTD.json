{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "NumericEntityUnescaper",
      "right" : "NumericEntityUnescaper",
      "info" : "TypeDeclaration[907-2859]:TypeDeclaration[907-3278]"
    }, {
      "left" : "public int translate(CharSequence input, int index, Writer out) throws IOException",
      "right" : "public int translate(CharSequence input, int index, Writer out) throws IOException",
      "info" : "MethodDeclaration[1158-2857]:MethodDeclaration[1158-3276]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1292-2857]:Block[1292-3276]"
    }, {
      "left" : "int seqEnd = input.length();",
      "right" : "int seqEnd = input.length();",
      "info" : "VariableDeclarationStatement[1302-1330]:VariableDeclarationStatement[1302-1330]"
    }, {
      "left" : "if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#')",
      "right" : "if(input.charAt(index) == '&' && index < seqEnd - 2 && input.charAt(index + 1) == '#')",
      "info" : "IfStatement[1400-2833]:IfStatement[1400-3252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1487-2833]:Block[1487-3252]"
    }, {
      "left" : "int start = index + 2;",
      "right" : "int start = index + 2;",
      "info" : "VariableDeclarationStatement[1501-1523]:VariableDeclarationStatement[1501-1523]"
    }, {
      "left" : "boolean isHex = false;",
      "right" : "boolean isHex = false;",
      "info" : "VariableDeclarationStatement[1536-1558]:VariableDeclarationStatement[1536-1558]"
    }, {
      "left" : "char firstChar = input.charAt(start);",
      "right" : "char firstChar = input.charAt(start);",
      "info" : "VariableDeclarationStatement[1572-1609]:VariableDeclarationStatement[1572-1609]"
    }, {
      "left" : "if(firstChar == 'x' || firstChar == 'X')",
      "right" : "if(firstChar == 'x' || firstChar == 'X')",
      "info" : "IfStatement[1622-1800]:IfStatement[1622-1886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1663-1800]:Block[1823-1872]"
    }, {
      "left" : "start++;",
      "right" : "start++;",
      "info" : "ExpressionStatement[1681-1689]:ExpressionStatement[1681-1689]"
    }, {
      "left" : "isHex = true;",
      "right" : "isHex = true;",
      "info" : "ExpressionStatement[1706-1719]:ExpressionStatement[1706-1719]"
    }, {
      "left" : "int end = start;",
      "right" : "int end = start;",
      "info" : "VariableDeclarationStatement[1814-1830]:VariableDeclarationStatement[1900-1916]"
    }, {
      "left" : "while(input.charAt(end) != ';')",
      "right" : "while(end < seqEnd && ( (input.charAt(end) >= '0' && input.charAt(end) <= '9') ||\n                                    (input.charAt(end) >= 'a' && input.charAt(end) <= 'f') ||\n                                    (input.charAt(end) >= 'A' && input.charAt(end) <= 'F') ))",
      "info" : "WhileStatement[1921-2004]:WhileStatement[2007-2328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1966-2004]:Block[2290-2328]"
    }, {
      "left" : "end++;",
      "right" : "end++;",
      "info" : "ExpressionStatement[1984-1990]:ExpressionStatement[2308-2314]"
    }, {
      "left" : "int entityValue;",
      "right" : "int entityValue;",
      "info" : "VariableDeclarationStatement[2018-2034]:VariableDeclarationStatement[2342-2358]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[2047-2512]:TryStatement[2371-2836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2051-2333]:Block[2375-2657]"
    }, {
      "left" : "if(isHex)",
      "right" : "if(isHex)",
      "info" : "IfStatement[2069-2319]:IfStatement[2393-2643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2079-2196]:Block[2403-2520]"
    }, {
      "left" : "entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);",
      "right" : "entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);",
      "info" : "ExpressionStatement[2101-2178]:ExpressionStatement[2425-2502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2202-2319]:Block[2526-2643]"
    }, {
      "left" : "entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",
      "right" : "entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",
      "info" : "ExpressionStatement[2224-2301]:ExpressionStatement[2548-2625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2367-2512]:Block[2691-2836]"
    }, {
      "left" : "System.err.println(\"FAIL: \" + input.subSequence(start, end) + \"[\" + start +\"][\"+ end +\"]\");",
      "right" : "System.err.println(\"FAIL: \" + input.subSequence(start, end) + \"[\" + start +\"][\"+ end +\"]\");",
      "info" : "ExpressionStatement[2381-2472]:ExpressionStatement[2705-2796]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[2489-2498]:ReturnStatement[2813-2822]"
    }, {
      "left" : "if(entityValue > 0xFFFF)",
      "right" : "if(entityValue > 0xFFFF)",
      "info" : "IfStatement[2526-2761]:IfStatement[2850-3085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2551-2700]:Block[2875-3024]"
    }, {
      "left" : "char[] chrs = Character.toChars(entityValue);",
      "right" : "char[] chrs = Character.toChars(entityValue);",
      "info" : "VariableDeclarationStatement[2569-2614]:VariableDeclarationStatement[2893-2938]"
    }, {
      "left" : "out.write(chrs[0]);",
      "right" : "out.write(chrs[0]);",
      "info" : "ExpressionStatement[2631-2650]:ExpressionStatement[2955-2974]"
    }, {
      "left" : "out.write(chrs[1]);",
      "right" : "out.write(chrs[1]);",
      "info" : "ExpressionStatement[2667-2686]:ExpressionStatement[2991-3010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2706-2761]:Block[3030-3085]"
    }, {
      "left" : "out.write(entityValue);",
      "right" : "out.write(entityValue);",
      "info" : "ExpressionStatement[2724-2747]:ExpressionStatement[3048-3071]"
    }, {
      "left" : "return 2 + (end - start) + (isHex ? 1 : 0) + 1;",
      "right" : "return 2 + (end - start) + (isHex ? 1 : 0) + (semiNext ? 1 : 0);",
      "info" : "ReturnStatement[2776-2823]:ReturnStatement[3178-3242]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[2842-2851]:ReturnStatement[3261-3270]"
    } ]
  },
  "interFileMappings" : { }
}