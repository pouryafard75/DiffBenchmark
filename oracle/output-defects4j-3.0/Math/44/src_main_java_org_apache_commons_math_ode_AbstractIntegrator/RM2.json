{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "AbstractIntegrator",
      "right" : "AbstractIntegrator",
      "info" : "TypeDeclaration[2000-15412]:TypeDeclaration[2000-15693]"
    }, {
      "left" : "protected Collection<StepHandler> stepHandlers;",
      "right" : "protected Collection<StepHandler> stepHandlers;",
      "info" : "FieldDeclaration[2182-2254]:FieldDeclaration[2182-2254]"
    }, {
      "left" : "protected double stepStart;",
      "right" : "protected double stepStart;",
      "info" : "FieldDeclaration[2260-2323]:FieldDeclaration[2260-2323]"
    }, {
      "left" : "protected double stepSize;",
      "right" : "protected double stepSize;",
      "info" : "FieldDeclaration[2329-2384]:FieldDeclaration[2329-2384]"
    }, {
      "left" : "protected boolean isLastStep;",
      "right" : "protected boolean isLastStep;",
      "info" : "FieldDeclaration[2390-2455]:FieldDeclaration[2390-2455]"
    }, {
      "left" : "protected boolean resetOccurred;",
      "right" : "protected boolean resetOccurred;",
      "info" : "FieldDeclaration[2461-2576]:FieldDeclaration[2461-2576]"
    }, {
      "left" : "private Collection<EventState> eventsStates;",
      "right" : "private Collection<EventState> eventsStates;",
      "info" : "FieldDeclaration[2582-2652]:FieldDeclaration[2582-2652]"
    }, {
      "left" : "private boolean statesInitialized;",
      "right" : "private boolean statesInitialized;",
      "info" : "FieldDeclaration[2658-2746]:FieldDeclaration[2658-2746]"
    }, {
      "left" : "private final String name;",
      "right" : "private final String name;",
      "info" : "FieldDeclaration[2752-2809]:FieldDeclaration[2752-2809]"
    }, {
      "left" : "private Incrementor evaluations;",
      "right" : "private Incrementor evaluations;",
      "info" : "FieldDeclaration[2815-2893]:FieldDeclaration[2815-2893]"
    }, {
      "left" : "private transient ExpandableStatefulODE expandable;",
      "right" : "private transient ExpandableStatefulODE expandable;",
      "info" : "FieldDeclaration[2899-2998]:FieldDeclaration[2899-2998]"
    }, {
      "left" : "public AbstractIntegrator(final String name)",
      "right" : "public AbstractIntegrator(final String name)",
      "info" : "MethodDeclaration[3004-3459]:MethodDeclaration[3004-3459]"
    }, {
      "left" : "protected AbstractIntegrator()",
      "right" : "protected AbstractIntegrator()",
      "info" : "MethodDeclaration[3465-3575]:MethodDeclaration[3465-3575]"
    }, {
      "left" : "public String getName()",
      "right" : "public String getName()",
      "info" : "MethodDeclaration[3581-3658]:MethodDeclaration[3581-3658]"
    }, {
      "left" : "public void addStepHandler(final StepHandler handler)",
      "right" : "public void addStepHandler(final StepHandler handler)",
      "info" : "MethodDeclaration[3664-3785]:MethodDeclaration[3664-3785]"
    }, {
      "left" : "public Collection<StepHandler> getStepHandlers()",
      "right" : "public Collection<StepHandler> getStepHandlers()",
      "info" : "MethodDeclaration[3791-3937]:MethodDeclaration[3791-3937]"
    }, {
      "left" : "public void clearStepHandlers()",
      "right" : "public void clearStepHandlers()",
      "info" : "MethodDeclaration[3943-4037]:MethodDeclaration[3943-4037]"
    }, {
      "left" : "public void addEventHandler(final EventHandler handler,\n                                final double maxCheckInterval,\n                                final double convergence,\n                                final int maxIterationCount)",
      "right" : "public void addEventHandler(final EventHandler handler,\n                                final double maxCheckInterval,\n                                final double convergence,\n                                final int maxIterationCount)",
      "info" : "MethodDeclaration[4043-4496]:MethodDeclaration[4043-4496]"
    }, {
      "left" : "public void addEventHandler(final EventHandler handler,\n                                final double maxCheckInterval,\n                                final double convergence,\n                                final int maxIterationCount,\n                                final UnivariateRealSolver solver)",
      "right" : "public void addEventHandler(final EventHandler handler,\n                                final double maxCheckInterval,\n                                final double convergence,\n                                final int maxIterationCount,\n                                final UnivariateRealSolver solver)",
      "info" : "MethodDeclaration[4502-4988]:MethodDeclaration[4502-4988]"
    }, {
      "left" : "public Collection<EventHandler> getEventHandlers()",
      "right" : "public Collection<EventHandler> getEventHandlers()",
      "info" : "MethodDeclaration[4994-5310]:MethodDeclaration[4994-5310]"
    }, {
      "left" : "public void clearEventHandlers()",
      "right" : "public void clearEventHandlers()",
      "info" : "MethodDeclaration[5316-5411]:MethodDeclaration[5316-5411]"
    }, {
      "left" : "public double getCurrentStepStart()",
      "right" : "public double getCurrentStepStart()",
      "info" : "MethodDeclaration[5417-5511]:MethodDeclaration[5417-5511]"
    }, {
      "left" : "public double getCurrentSignedStepsize()",
      "right" : "public double getCurrentSignedStepsize()",
      "info" : "MethodDeclaration[5517-5615]:MethodDeclaration[5517-5615]"
    }, {
      "left" : "public void setMaxEvaluations(int maxEvaluations)",
      "right" : "public void setMaxEvaluations(int maxEvaluations)",
      "info" : "MethodDeclaration[5621-5799]:MethodDeclaration[5621-5799]"
    }, {
      "left" : "public int getMaxEvaluations()",
      "right" : "public int getMaxEvaluations()",
      "info" : "MethodDeclaration[5805-5914]:MethodDeclaration[5805-5914]"
    }, {
      "left" : "public int getEvaluations()",
      "right" : "public int getEvaluations()",
      "info" : "MethodDeclaration[5920-6019]:MethodDeclaration[5920-6019]"
    }, {
      "left" : "protected void resetEvaluations()",
      "right" : "protected void resetEvaluations()",
      "info" : "MethodDeclaration[6025-6157]:MethodDeclaration[6025-6157]"
    }, {
      "left" : "protected void setEquations(final ExpandableStatefulODE equations)",
      "right" : "protected void setEquations(final ExpandableStatefulODE equations)",
      "info" : "MethodDeclaration[6163-6350]:MethodDeclaration[6163-6350]"
    }, {
      "left" : "public double integrate(final FirstOrderDifferentialEquations equations,\n                            final double t0, final double[] y0, final double t, final double[] y)\n        throws MathIllegalStateException, MathIllegalArgumentException",
      "right" : "public double integrate(final FirstOrderDifferentialEquations equations,\n                            final double t0, final double[] y0, final double t, final double[] y)\n        throws MathIllegalStateException, MathIllegalArgumentException",
      "info" : "MethodDeclaration[6356-7396]:MethodDeclaration[6356-7396]"
    }, {
      "left" : "public abstract void integrate(ExpandableStatefulODE equations, double t)\n        throws MathIllegalStateException, MathIllegalArgumentException;",
      "right" : "public abstract void integrate(ExpandableStatefulODE equations, double t)\n        throws MathIllegalStateException, MathIllegalArgumentException;",
      "info" : "MethodDeclaration[7402-8668]:MethodDeclaration[7402-8668]"
    }, {
      "left" : "public void computeDerivatives(final double t, final double[] y, final double[] yDot)\n        throws MaxCountExceededException",
      "right" : "public void computeDerivatives(final double t, final double[] y, final double[] yDot)\n        throws MaxCountExceededException",
      "info" : "MethodDeclaration[8674-9300]:MethodDeclaration[8674-9300]"
    }, {
      "left" : "protected void setStateInitialized(final boolean stateInitialized)",
      "right" : "protected void setStateInitialized(final boolean stateInitialized)",
      "info" : "MethodDeclaration[9306-9753]:MethodDeclaration[9306-9753]"
    }, {
      "left" : "protected double acceptStep(final AbstractStepInterpolator interpolator,\n                                final double[] y, final double[] yDot, final double tEnd)\n        throws MathIllegalStateException",
      "right" : "protected double acceptStep(final AbstractStepInterpolator interpolator,\n                                final double[] y, final double[] yDot, final double tEnd)\n        throws MathIllegalStateException",
      "info" : "MethodDeclaration[9759-14587]:MethodDeclaration[9759-14868]"
    }, {
      "left" : "public int compare(EventState es0, EventState es1)",
      "right" : "public int compare(EventState es0, EventState es1)",
      "info" : "MethodDeclaration[11235-11440]:MethodDeclaration[11200-11405]"
    }, {
      "left" : "protected void sanityChecks(final ExpandableStatefulODE equations, final double t)\n        throws NumberIsTooSmallException",
      "right" : "protected void sanityChecks(final ExpandableStatefulODE equations, final double t)\n        throws NumberIsTooSmallException",
      "info" : "MethodDeclaration[14593-15409]:MethodDeclaration[14874-15690]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2102-2108]:Modifier[2102-2108]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2109-2117]:Modifier[2109-2117]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2118-2123]:TYPE_DECLARATION_KIND[2118-2123]"
    }, {
      "left" : "AbstractIntegrator",
      "right" : "AbstractIntegrator",
      "info" : "SimpleName[2124-2142]:SimpleName[2124-2142]"
    }, {
      "left" : "FirstOrderIntegrator",
      "right" : "FirstOrderIntegrator",
      "info" : "SimpleType[2154-2174]:SimpleType[2154-2174]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3077-3083]:Modifier[3077-3083]"
    }, {
      "left" : "AbstractIntegrator",
      "right" : "AbstractIntegrator",
      "info" : "SimpleName[3084-3102]:SimpleName[3084-3102]"
    }, {
      "left" : "final String name",
      "right" : "final String name",
      "info" : "SingleVariableDeclaration[3103-3120]:SingleVariableDeclaration[3103-3120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3122-3459]:Block[3122-3459]"
    }, {
      "left" : "this.name = name;",
      "right" : "this.name = name;",
      "info" : "ExpressionStatement[3132-3149]:ExpressionStatement[3132-3149]"
    }, {
      "left" : "stepHandlers = new ArrayList<StepHandler>();",
      "right" : "stepHandlers = new ArrayList<StepHandler>();",
      "info" : "ExpressionStatement[3158-3202]:ExpressionStatement[3158-3202]"
    }, {
      "left" : "stepStart = Double.NaN;",
      "right" : "stepStart = Double.NaN;",
      "info" : "ExpressionStatement[3211-3234]:ExpressionStatement[3211-3234]"
    }, {
      "left" : "stepSize  = Double.NaN;",
      "right" : "stepSize  = Double.NaN;",
      "info" : "ExpressionStatement[3243-3266]:ExpressionStatement[3243-3266]"
    }, {
      "left" : "eventsStates = new ArrayList<EventState>();",
      "right" : "eventsStates = new ArrayList<EventState>();",
      "info" : "ExpressionStatement[3275-3318]:ExpressionStatement[3275-3318]"
    }, {
      "left" : "statesInitialized = false;",
      "right" : "statesInitialized = false;",
      "info" : "ExpressionStatement[3327-3353]:ExpressionStatement[3327-3353]"
    }, {
      "left" : "evaluations = new Incrementor();",
      "right" : "evaluations = new Incrementor();",
      "info" : "ExpressionStatement[3362-3394]:ExpressionStatement[3362-3394]"
    }, {
      "left" : "setMaxEvaluations(-1);",
      "right" : "setMaxEvaluations(-1);",
      "info" : "ExpressionStatement[3403-3425]:ExpressionStatement[3403-3425]"
    }, {
      "left" : "resetEvaluations();",
      "right" : "resetEvaluations();",
      "info" : "ExpressionStatement[3434-3453]:ExpressionStatement[3434-3453]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3517-3526]:Modifier[3517-3526]"
    }, {
      "left" : "AbstractIntegrator",
      "right" : "AbstractIntegrator",
      "info" : "SimpleName[3527-3545]:SimpleName[3527-3545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3548-3575]:Block[3548-3575]"
    }, {
      "left" : "this(null);",
      "right" : "this(null);",
      "info" : "ConstructorInvocation[3558-3569]:ConstructorInvocation[3558-3569]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3606-3612]:Modifier[3606-3612]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3613-3619]:SimpleType[3613-3619]"
    }, {
      "left" : "getName",
      "right" : "getName",
      "info" : "SimpleName[3620-3627]:SimpleName[3620-3627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3630-3658]:Block[3630-3658]"
    }, {
      "left" : "return name;",
      "right" : "return name;",
      "info" : "ReturnStatement[3640-3652]:ReturnStatement[3640-3652]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3689-3695]:Modifier[3689-3695]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3696-3700]:PrimitiveType[3696-3700]"
    }, {
      "left" : "addStepHandler",
      "right" : "addStepHandler",
      "info" : "SimpleName[3701-3715]:SimpleName[3701-3715]"
    }, {
      "left" : "final StepHandler handler",
      "right" : "final StepHandler handler",
      "info" : "SingleVariableDeclaration[3716-3741]:SingleVariableDeclaration[3716-3741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3743-3785]:Block[3743-3785]"
    }, {
      "left" : "stepHandlers.add(handler);",
      "right" : "stepHandlers.add(handler);",
      "info" : "ExpressionStatement[3753-3779]:ExpressionStatement[3753-3779]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3816-3822]:Modifier[3816-3822]"
    }, {
      "left" : "Collection<StepHandler>",
      "right" : "Collection<StepHandler>",
      "info" : "ParameterizedType[3823-3846]:ParameterizedType[3823-3846]"
    }, {
      "left" : "getStepHandlers",
      "right" : "getStepHandlers",
      "info" : "SimpleName[3847-3862]:SimpleName[3847-3862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3865-3937]:Block[3865-3937]"
    }, {
      "left" : "return Collections.unmodifiableCollection(stepHandlers);",
      "right" : "return Collections.unmodifiableCollection(stepHandlers);",
      "info" : "ReturnStatement[3875-3931]:ReturnStatement[3875-3931]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3968-3974]:Modifier[3968-3974]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3975-3979]:PrimitiveType[3975-3979]"
    }, {
      "left" : "clearStepHandlers",
      "right" : "clearStepHandlers",
      "info" : "SimpleName[3980-3997]:SimpleName[3980-3997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4000-4037]:Block[4000-4037]"
    }, {
      "left" : "stepHandlers.clear();",
      "right" : "stepHandlers.clear();",
      "info" : "ExpressionStatement[4010-4031]:ExpressionStatement[4010-4031]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4068-4074]:Modifier[4068-4074]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4075-4079]:PrimitiveType[4075-4079]"
    }, {
      "left" : "addEventHandler",
      "right" : "addEventHandler",
      "info" : "SimpleName[4080-4095]:SimpleName[4080-4095]"
    }, {
      "left" : "final EventHandler handler",
      "right" : "final EventHandler handler",
      "info" : "SingleVariableDeclaration[4096-4122]:SingleVariableDeclaration[4096-4122]"
    }, {
      "left" : "final double maxCheckInterval",
      "right" : "final double maxCheckInterval",
      "info" : "SingleVariableDeclaration[4156-4185]:SingleVariableDeclaration[4156-4185]"
    }, {
      "left" : "final double convergence",
      "right" : "final double convergence",
      "info" : "SingleVariableDeclaration[4219-4243]:SingleVariableDeclaration[4219-4243]"
    }, {
      "left" : "final int maxIterationCount",
      "right" : "final int maxIterationCount",
      "info" : "SingleVariableDeclaration[4277-4304]:SingleVariableDeclaration[4277-4304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4306-4496]:Block[4306-4496]"
    }, {
      "left" : "addEventHandler(handler, maxCheckInterval, convergence,\n                        maxIterationCount,\n                        new BracketingNthOrderBrentSolver(convergence, 5));",
      "right" : "addEventHandler(handler, maxCheckInterval, convergence,\n                        maxIterationCount,\n                        new BracketingNthOrderBrentSolver(convergence, 5));",
      "info" : "ExpressionStatement[4316-4490]:ExpressionStatement[4316-4490]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4527-4533]:Modifier[4527-4533]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4534-4538]:PrimitiveType[4534-4538]"
    }, {
      "left" : "addEventHandler",
      "right" : "addEventHandler",
      "info" : "SimpleName[4539-4554]:SimpleName[4539-4554]"
    }, {
      "left" : "final EventHandler handler",
      "right" : "final EventHandler handler",
      "info" : "SingleVariableDeclaration[4555-4581]:SingleVariableDeclaration[4555-4581]"
    }, {
      "left" : "final double maxCheckInterval",
      "right" : "final double maxCheckInterval",
      "info" : "SingleVariableDeclaration[4615-4644]:SingleVariableDeclaration[4615-4644]"
    }, {
      "left" : "final double convergence",
      "right" : "final double convergence",
      "info" : "SingleVariableDeclaration[4678-4702]:SingleVariableDeclaration[4678-4702]"
    }, {
      "left" : "final int maxIterationCount",
      "right" : "final int maxIterationCount",
      "info" : "SingleVariableDeclaration[4736-4763]:SingleVariableDeclaration[4736-4763]"
    }, {
      "left" : "final UnivariateRealSolver solver",
      "right" : "final UnivariateRealSolver solver",
      "info" : "SingleVariableDeclaration[4797-4830]:SingleVariableDeclaration[4797-4830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4832-4988]:Block[4832-4988]"
    }, {
      "left" : "eventsStates.add(new EventState(handler, maxCheckInterval, convergence,\n                                        maxIterationCount, solver));",
      "right" : "eventsStates.add(new EventState(handler, maxCheckInterval, convergence,\n                                        maxIterationCount, solver));",
      "info" : "ExpressionStatement[4842-4982]:ExpressionStatement[4842-4982]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5019-5025]:Modifier[5019-5025]"
    }, {
      "left" : "Collection<EventHandler>",
      "right" : "Collection<EventHandler>",
      "info" : "ParameterizedType[5026-5050]:ParameterizedType[5026-5050]"
    }, {
      "left" : "getEventHandlers",
      "right" : "getEventHandlers",
      "info" : "SimpleName[5051-5067]:SimpleName[5051-5067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5070-5310]:Block[5070-5310]"
    }, {
      "left" : "final List<EventHandler> list = new ArrayList<EventHandler>();",
      "right" : "final List<EventHandler> list = new ArrayList<EventHandler>();",
      "info" : "VariableDeclarationStatement[5080-5142]:VariableDeclarationStatement[5080-5142]"
    }, {
      "left" : "for (EventState state : eventsStates)",
      "right" : "for (EventState state : eventsStates)",
      "info" : "EnhancedForStatement[5151-5247]:EnhancedForStatement[5151-5247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5189-5247]:Block[5189-5247]"
    }, {
      "left" : "list.add(state.getEventHandler());",
      "right" : "list.add(state.getEventHandler());",
      "info" : "ExpressionStatement[5203-5237]:ExpressionStatement[5203-5237]"
    }, {
      "left" : "return Collections.unmodifiableCollection(list);",
      "right" : "return Collections.unmodifiableCollection(list);",
      "info" : "ReturnStatement[5256-5304]:ReturnStatement[5256-5304]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5341-5347]:Modifier[5341-5347]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5348-5352]:PrimitiveType[5348-5352]"
    }, {
      "left" : "clearEventHandlers",
      "right" : "clearEventHandlers",
      "info" : "SimpleName[5353-5371]:SimpleName[5353-5371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5374-5411]:Block[5374-5411]"
    }, {
      "left" : "eventsStates.clear();",
      "right" : "eventsStates.clear();",
      "info" : "ExpressionStatement[5384-5405]:ExpressionStatement[5384-5405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5442-5448]:Modifier[5442-5448]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[5449-5455]:PrimitiveType[5449-5455]"
    }, {
      "left" : "getCurrentStepStart",
      "right" : "getCurrentStepStart",
      "info" : "SimpleName[5456-5475]:SimpleName[5456-5475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5478-5511]:Block[5478-5511]"
    }, {
      "left" : "return stepStart;",
      "right" : "return stepStart;",
      "info" : "ReturnStatement[5488-5505]:ReturnStatement[5488-5505]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5542-5548]:Modifier[5542-5548]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[5549-5555]:PrimitiveType[5549-5555]"
    }, {
      "left" : "getCurrentSignedStepsize",
      "right" : "getCurrentSignedStepsize",
      "info" : "SimpleName[5556-5580]:SimpleName[5556-5580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5583-5615]:Block[5583-5615]"
    }, {
      "left" : "return stepSize;",
      "right" : "return stepSize;",
      "info" : "ReturnStatement[5593-5609]:ReturnStatement[5593-5609]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5646-5652]:Modifier[5646-5652]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5653-5657]:PrimitiveType[5653-5657]"
    }, {
      "left" : "setMaxEvaluations",
      "right" : "setMaxEvaluations",
      "info" : "SimpleName[5658-5675]:SimpleName[5658-5675]"
    }, {
      "left" : "int maxEvaluations",
      "right" : "int maxEvaluations",
      "info" : "SingleVariableDeclaration[5676-5694]:SingleVariableDeclaration[5676-5694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5696-5799]:Block[5696-5799]"
    }, {
      "left" : "evaluations.setMaximalCount((maxEvaluations < 0) ? Integer.MAX_VALUE : maxEvaluations);",
      "right" : "evaluations.setMaximalCount((maxEvaluations < 0) ? Integer.MAX_VALUE : maxEvaluations);",
      "info" : "ExpressionStatement[5706-5793]:ExpressionStatement[5706-5793]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5830-5836]:Modifier[5830-5836]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5837-5840]:PrimitiveType[5837-5840]"
    }, {
      "left" : "getMaxEvaluations",
      "right" : "getMaxEvaluations",
      "info" : "SimpleName[5841-5858]:SimpleName[5841-5858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5861-5914]:Block[5861-5914]"
    }, {
      "left" : "return evaluations.getMaximalCount();",
      "right" : "return evaluations.getMaximalCount();",
      "info" : "ReturnStatement[5871-5908]:ReturnStatement[5871-5908]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5945-5951]:Modifier[5945-5951]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5952-5955]:PrimitiveType[5952-5955]"
    }, {
      "left" : "getEvaluations",
      "right" : "getEvaluations",
      "info" : "SimpleName[5956-5970]:SimpleName[5956-5970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5973-6019]:Block[5973-6019]"
    }, {
      "left" : "return evaluations.getCount();",
      "right" : "return evaluations.getCount();",
      "info" : "ReturnStatement[5983-6013]:ReturnStatement[5983-6013]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6082-6091]:Modifier[6082-6091]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6092-6096]:PrimitiveType[6092-6096]"
    }, {
      "left" : "resetEvaluations",
      "right" : "resetEvaluations",
      "info" : "SimpleName[6097-6113]:SimpleName[6097-6113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6116-6157]:Block[6116-6157]"
    }, {
      "left" : "evaluations.resetCount();",
      "right" : "evaluations.resetCount();",
      "info" : "ExpressionStatement[6126-6151]:ExpressionStatement[6126-6151]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6239-6248]:Modifier[6239-6248]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6249-6253]:PrimitiveType[6249-6253]"
    }, {
      "left" : "setEquations",
      "right" : "setEquations",
      "info" : "SimpleName[6254-6266]:SimpleName[6254-6266]"
    }, {
      "left" : "final ExpandableStatefulODE equations",
      "right" : "final ExpandableStatefulODE equations",
      "info" : "SingleVariableDeclaration[6267-6304]:SingleVariableDeclaration[6267-6304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6306-6350]:Block[6306-6350]"
    }, {
      "left" : "this.expandable = equations;",
      "right" : "this.expandable = equations;",
      "info" : "ExpressionStatement[6316-6344]:ExpressionStatement[6316-6344]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6381-6387]:Modifier[6381-6387]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6388-6394]:PrimitiveType[6388-6394]"
    }, {
      "left" : "integrate",
      "right" : "integrate",
      "info" : "SimpleName[6395-6404]:SimpleName[6395-6404]"
    }, {
      "left" : "final FirstOrderDifferentialEquations equations",
      "right" : "final FirstOrderDifferentialEquations equations",
      "info" : "SingleVariableDeclaration[6405-6452]:SingleVariableDeclaration[6405-6452]"
    }, {
      "left" : "final double t0",
      "right" : "final double t0",
      "info" : "SingleVariableDeclaration[6482-6497]:SingleVariableDeclaration[6482-6497]"
    }, {
      "left" : "final double[] y0",
      "right" : "final double[] y0",
      "info" : "SingleVariableDeclaration[6499-6516]:SingleVariableDeclaration[6499-6516]"
    }, {
      "left" : "final double t",
      "right" : "final double t",
      "info" : "SingleVariableDeclaration[6518-6532]:SingleVariableDeclaration[6518-6532]"
    }, {
      "left" : "final double[] y",
      "right" : "final double[] y",
      "info" : "SingleVariableDeclaration[6534-6550]:SingleVariableDeclaration[6534-6550]"
    }, {
      "left" : "MathIllegalStateException",
      "right" : "MathIllegalStateException",
      "info" : "SimpleType[6567-6592]:SimpleType[6567-6592]"
    }, {
      "left" : "MathIllegalArgumentException",
      "right" : "MathIllegalArgumentException",
      "info" : "SimpleType[6594-6622]:SimpleType[6594-6622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6623-7396]:Block[6623-7396]"
    }, {
      "left" : "if (y0.length != equations.getDimension())",
      "right" : "if (y0.length != equations.getDimension())",
      "info" : "IfStatement[6634-6775]:IfStatement[6634-6775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6677-6775]:Block[6677-6775]"
    }, {
      "left" : "throw new DimensionMismatchException(y0.length, equations.getDimension());",
      "right" : "throw new DimensionMismatchException(y0.length, equations.getDimension());",
      "info" : "ThrowStatement[6691-6765]:ThrowStatement[6691-6765]"
    }, {
      "left" : "if (y.length != equations.getDimension())",
      "right" : "if (y.length != equations.getDimension())",
      "info" : "IfStatement[6784-6923]:IfStatement[6784-6923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6826-6923]:Block[6826-6923]"
    }, {
      "left" : "throw new DimensionMismatchException(y.length, equations.getDimension());",
      "right" : "throw new DimensionMismatchException(y.length, equations.getDimension());",
      "info" : "ThrowStatement[6840-6913]:ThrowStatement[6840-6913]"
    }, {
      "left" : "final ExpandableStatefulODE expandableODE = new ExpandableStatefulODE(equations);",
      "right" : "final ExpandableStatefulODE expandableODE = new ExpandableStatefulODE(equations);",
      "info" : "VariableDeclarationStatement[6982-7063]:VariableDeclarationStatement[6982-7063]"
    }, {
      "left" : "expandableODE.setTime(t0);",
      "right" : "expandableODE.setTime(t0);",
      "info" : "ExpressionStatement[7072-7098]:ExpressionStatement[7072-7098]"
    }, {
      "left" : "expandableODE.setPrimaryState(y0);",
      "right" : "expandableODE.setPrimaryState(y0);",
      "info" : "ExpressionStatement[7107-7141]:ExpressionStatement[7107-7141]"
    }, {
      "left" : "integrate(expandableODE, t);",
      "right" : "integrate(expandableODE, t);",
      "info" : "ExpressionStatement[7182-7210]:ExpressionStatement[7182-7210]"
    }, {
      "left" : "System.arraycopy(expandableODE.getPrimaryState(), 0, y, 0, y.length);",
      "right" : "System.arraycopy(expandableODE.getPrimaryState(), 0, y, 0, y.length);",
      "info" : "ExpressionStatement[7280-7349]:ExpressionStatement[7280-7349]"
    }, {
      "left" : "return expandableODE.getTime();",
      "right" : "return expandableODE.getTime();",
      "info" : "ReturnStatement[7358-7389]:ReturnStatement[7358-7389]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8523-8529]:Modifier[8523-8529]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[8530-8538]:Modifier[8530-8538]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8539-8543]:PrimitiveType[8539-8543]"
    }, {
      "left" : "integrate",
      "right" : "integrate",
      "info" : "SimpleName[8544-8553]:SimpleName[8544-8553]"
    }, {
      "left" : "ExpandableStatefulODE equations",
      "right" : "ExpandableStatefulODE equations",
      "info" : "SingleVariableDeclaration[8554-8585]:SingleVariableDeclaration[8554-8585]"
    }, {
      "left" : "double t",
      "right" : "double t",
      "info" : "SingleVariableDeclaration[8587-8595]:SingleVariableDeclaration[8587-8595]"
    }, {
      "left" : "MathIllegalStateException",
      "right" : "MathIllegalStateException",
      "info" : "SimpleType[8612-8637]:SimpleType[8612-8637]"
    }, {
      "left" : "MathIllegalArgumentException",
      "right" : "MathIllegalArgumentException",
      "info" : "SimpleType[8639-8667]:SimpleType[8639-8667]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9077-9083]:Modifier[9077-9083]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9084-9088]:PrimitiveType[9084-9088]"
    }, {
      "left" : "computeDerivatives",
      "right" : "computeDerivatives",
      "info" : "SimpleName[9089-9107]:SimpleName[9089-9107]"
    }, {
      "left" : "final double t",
      "right" : "final double t",
      "info" : "SingleVariableDeclaration[9108-9122]:SingleVariableDeclaration[9108-9122]"
    }, {
      "left" : "final double[] y",
      "right" : "final double[] y",
      "info" : "SingleVariableDeclaration[9124-9140]:SingleVariableDeclaration[9124-9140]"
    }, {
      "left" : "final double[] yDot",
      "right" : "final double[] yDot",
      "info" : "SingleVariableDeclaration[9142-9161]:SingleVariableDeclaration[9142-9161]"
    }, {
      "left" : "MaxCountExceededException",
      "right" : "MaxCountExceededException",
      "info" : "SimpleType[9178-9203]:SimpleType[9178-9203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9204-9300]:Block[9204-9300]"
    }, {
      "left" : "evaluations.incrementCount();",
      "right" : "evaluations.incrementCount();",
      "info" : "ExpressionStatement[9214-9243]:ExpressionStatement[9214-9243]"
    }, {
      "left" : "expandable.computeDerivatives(t, y, yDot);",
      "right" : "expandable.computeDerivatives(t, y, yDot);",
      "info" : "ExpressionStatement[9252-9294]:ExpressionStatement[9252-9294]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[9628-9637]:Modifier[9628-9637]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9638-9642]:PrimitiveType[9638-9642]"
    }, {
      "left" : "setStateInitialized",
      "right" : "setStateInitialized",
      "info" : "SimpleName[9643-9662]:SimpleName[9643-9662]"
    }, {
      "left" : "final boolean stateInitialized",
      "right" : "final boolean stateInitialized",
      "info" : "SingleVariableDeclaration[9663-9693]:SingleVariableDeclaration[9663-9693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9695-9753]:Block[9695-9753]"
    }, {
      "left" : "this.statesInitialized = stateInitialized;",
      "right" : "this.statesInitialized = stateInitialized;",
      "info" : "ExpressionStatement[9705-9747]:ExpressionStatement[9705-9747]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[10302-10311]:Modifier[10302-10311]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[10312-10318]:PrimitiveType[10312-10318]"
    }, {
      "left" : "acceptStep",
      "right" : "acceptStep",
      "info" : "SimpleName[10319-10329]:SimpleName[10319-10329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10506-14587]:Block[10506-14868]"
    }, {
      "left" : "double previousT = interpolator.getGlobalPreviousTime();",
      "right" : "double previousT = interpolator.getGlobalPreviousTime();",
      "info" : "VariableDeclarationStatement[10521-10577]:VariableDeclarationStatement[10521-10577]"
    }, {
      "left" : "final double currentT = interpolator.getGlobalCurrentTime();",
      "right" : "final double currentT = interpolator.getGlobalCurrentTime();",
      "info" : "VariableDeclarationStatement[10590-10650]:VariableDeclarationStatement[10590-10650]"
    }, {
      "left" : "if (! statesInitialized)",
      "right" : "if (! statesInitialized)",
      "info" : "IfStatement[10753-10968]:IfStatement[10718-10933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10778-10968]:Block[10743-10933]"
    }, {
      "left" : "for (EventState state : eventsStates)",
      "right" : "for (EventState state : eventsStates)",
      "info" : "EnhancedForStatement[10796-10912]:EnhancedForStatement[10761-10877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10834-10912]:Block[10799-10877]"
    }, {
      "left" : "state.reinitializeBegin(interpolator);",
      "right" : "state.reinitializeBegin(interpolator);",
      "info" : "ExpressionStatement[10856-10894]:ExpressionStatement[10821-10859]"
    }, {
      "left" : "statesInitialized = true;",
      "right" : "statesInitialized = true;",
      "info" : "ExpressionStatement[10929-10954]:ExpressionStatement[10894-10919]"
    }, {
      "left" : "final int orderingSign = interpolator.isForward() ? +1 : -1;",
      "right" : "final int orderingSign = interpolator.isForward() ? +1 : -1;",
      "info" : "VariableDeclarationStatement[11051-11111]:VariableDeclarationStatement[11016-11076]"
    }, {
      "left" : "SortedSet<EventState> occuringEvents = new TreeSet<EventState>(new Comparator<EventState>() {\n\n                /** {@inheritDoc} */\n                public int compare(EventState es0, EventState es1) {\n                    return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime());\n                }\n\n            });",
      "right" : "SortedSet<EventState> occuringEvents = new TreeSet<EventState>(new Comparator<EventState>() {\n\n                /** {@inheritDoc} */\n                public int compare(EventState es0, EventState es1) {\n                    return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime());\n                }\n\n            });",
      "info" : "VariableDeclarationStatement[11124-11457]:VariableDeclarationStatement[11089-11422]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11272-11278]:Modifier[11237-11243]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[11279-11282]:PrimitiveType[11244-11247]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[11283-11290]:SimpleName[11248-11255]"
    }, {
      "left" : "EventState es0",
      "right" : "EventState es0",
      "info" : "SingleVariableDeclaration[11291-11305]:SingleVariableDeclaration[11256-11270]"
    }, {
      "left" : "EventState es1",
      "right" : "EventState es1",
      "info" : "SingleVariableDeclaration[11307-11321]:SingleVariableDeclaration[11272-11286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11323-11440]:Block[11288-11405]"
    }, {
      "left" : "return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime());",
      "right" : "return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime());",
      "info" : "ReturnStatement[11345-11422]:ReturnStatement[11310-11387]"
    }, {
      "left" : "for (final EventState state : eventsStates)",
      "right" : "for (final EventState state : eventsStates)",
      "info" : "EnhancedForStatement[11471-11715]:EnhancedForStatement[11436-11680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11515-11715]:Block[11480-11680]"
    }, {
      "left" : "if (state.evaluateStep(interpolator))",
      "right" : "if (state.evaluateStep(interpolator))",
      "info" : "IfStatement[11533-11701]:IfStatement[11498-11666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11571-11701]:Block[11536-11666]"
    }, {
      "left" : "occuringEvents.add(state);",
      "right" : "occuringEvents.add(state);",
      "info" : "ExpressionStatement[11657-11683]:ExpressionStatement[11622-11648]"
    }, {
      "left" : "while (!occuringEvents.isEmpty())",
      "right" : "while (!occuringEvents.isEmpty())",
      "info" : "WhileStatement[11729-13947]:WhileStatement[11694-14228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11763-13947]:Block[11728-14228]"
    }, {
      "left" : "final Iterator<EventState> iterator = occuringEvents.iterator();",
      "right" : "final Iterator<EventState> iterator = occuringEvents.iterator();",
      "info" : "VariableDeclarationStatement[11840-11904]:VariableDeclarationStatement[11805-11869]"
    }, {
      "left" : "final EventState currentEvent = iterator.next();",
      "right" : "final EventState currentEvent = iterator.next();",
      "info" : "VariableDeclarationStatement[11921-11969]:VariableDeclarationStatement[11886-11934]"
    }, {
      "left" : "iterator.remove();",
      "right" : "iterator.remove();",
      "info" : "ExpressionStatement[11986-12004]:ExpressionStatement[11951-11969]"
    }, {
      "left" : "final double eventT = currentEvent.getEventTime();",
      "right" : "final double eventT = currentEvent.getEventTime();",
      "info" : "VariableDeclarationStatement[12114-12164]:VariableDeclarationStatement[12079-12129]"
    }, {
      "left" : "interpolator.setSoftPreviousTime(previousT);",
      "right" : "interpolator.setSoftPreviousTime(previousT);",
      "info" : "ExpressionStatement[12181-12225]:ExpressionStatement[12146-12190]"
    }, {
      "left" : "interpolator.setSoftCurrentTime(eventT);",
      "right" : "interpolator.setSoftCurrentTime(eventT);",
      "info" : "ExpressionStatement[12242-12282]:ExpressionStatement[12207-12247]"
    }, {
      "left" : "interpolator.setInterpolatedTime(eventT);",
      "right" : "interpolator.setInterpolatedTime(eventT);",
      "info" : "ExpressionStatement[12337-12378]:ExpressionStatement[12302-12343]"
    }, {
      "left" : "final double[] eventY = interpolator.getInterpolatedState();",
      "right" : "final double[] eventY = interpolator.getInterpolatedState();",
      "info" : "VariableDeclarationStatement[12395-12455]:VariableDeclarationStatement[12360-12420]"
    }, {
      "left" : "currentEvent.stepAccepted(eventT, eventY);",
      "right" : "currentEvent.stepAccepted(eventT, eventY);",
      "info" : "ExpressionStatement[12472-12514]:ExpressionStatement[12437-12479]"
    }, {
      "left" : "isLastStep = currentEvent.stop();",
      "right" : "isLastStep = currentEvent.stop();",
      "info" : "ExpressionStatement[12531-12564]:ExpressionStatement[12496-12529]"
    }, {
      "left" : "for (final StepHandler handler : stepHandlers)",
      "right" : "for (final StepHandler handler : stepHandlers)",
      "info" : "EnhancedForStatement[12652-12784]:EnhancedForStatement[12617-12749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12699-12784]:Block[12664-12749]"
    }, {
      "left" : "handler.handleStep(interpolator, isLastStep);",
      "right" : "handler.handleStep(interpolator, isLastStep);",
      "info" : "ExpressionStatement[12721-12766]:ExpressionStatement[12686-12731]"
    }, {
      "left" : "if (isLastStep)",
      "right" : "if (isLastStep)",
      "info" : "IfStatement[12802-12996]:IfStatement[12767-13119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12818-12996]:Block[12783-13119]"
    }, {
      "left" : "System.arraycopy(eventY, 0, y, 0, y.length);",
      "right" : "System.arraycopy(eventY, 0, y, 0, y.length);",
      "info" : "ExpressionStatement[12899-12943]:ExpressionStatement[12864-12908]"
    }, {
      "left" : "return eventT;",
      "right" : "return eventT;",
      "info" : "ReturnStatement[12964-12978]:ReturnStatement[13087-13101]"
    }, {
      "left" : "if (currentEvent.reset(eventT, eventY))",
      "right" : "if (currentEvent.reset(eventT, eventY))",
      "info" : "IfStatement[13014-13418]:IfStatement[13137-13699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13054-13418]:Block[13177-13699]"
    }, {
      "left" : "System.arraycopy(eventY, 0, y, 0, y.length);",
      "right" : "System.arraycopy(eventY, 0, y, 0, y.length);",
      "info" : "ExpressionStatement[13222-13266]:ExpressionStatement[13345-13389]"
    }, {
      "left" : "computeDerivatives(eventT, y, yDot);",
      "right" : "computeDerivatives(eventT, y, yDot);",
      "info" : "ExpressionStatement[13287-13323]:ExpressionStatement[13410-13446]"
    }, {
      "left" : "resetOccurred = true;",
      "right" : "resetOccurred = true;",
      "info" : "ExpressionStatement[13344-13365]:ExpressionStatement[13467-13488]"
    }, {
      "left" : "return eventT;",
      "right" : "return eventT;",
      "info" : "ReturnStatement[13386-13400]:ReturnStatement[13667-13681]"
    }, {
      "left" : "previousT = eventT;",
      "right" : "previousT = eventT;",
      "info" : "ExpressionStatement[13506-13525]:ExpressionStatement[13787-13806]"
    }, {
      "left" : "interpolator.setSoftPreviousTime(eventT);",
      "right" : "interpolator.setSoftPreviousTime(eventT);",
      "info" : "ExpressionStatement[13542-13583]:ExpressionStatement[13823-13864]"
    }, {
      "left" : "interpolator.setSoftCurrentTime(currentT);",
      "right" : "interpolator.setSoftCurrentTime(currentT);",
      "info" : "ExpressionStatement[13600-13642]:ExpressionStatement[13881-13923]"
    }, {
      "left" : "if (currentEvent.evaluateStep(interpolator))",
      "right" : "if (currentEvent.evaluateStep(interpolator))",
      "info" : "IfStatement[13750-13932]:IfStatement[14031-14213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13795-13932]:Block[14076-14213]"
    }, {
      "left" : "occuringEvents.add(currentEvent);",
      "right" : "occuringEvents.add(currentEvent);",
      "info" : "ExpressionStatement[13881-13914]:ExpressionStatement[14162-14195]"
    }, {
      "left" : "interpolator.setInterpolatedTime(currentT);",
      "right" : "interpolator.setInterpolatedTime(currentT);",
      "info" : "ExpressionStatement[13961-14004]:ExpressionStatement[14242-14285]"
    }, {
      "left" : "final double[] currentY = interpolator.getInterpolatedState();",
      "right" : "final double[] currentY = interpolator.getInterpolatedState();",
      "info" : "VariableDeclarationStatement[14017-14079]:VariableDeclarationStatement[14298-14360]"
    }, {
      "left" : "for (final EventState state : eventsStates)",
      "right" : "for (final EventState state : eventsStates)",
      "info" : "EnhancedForStatement[14092-14264]:EnhancedForStatement[14373-14545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14136-14264]:Block[14417-14545]"
    }, {
      "left" : "state.stepAccepted(currentT, currentY);",
      "right" : "state.stepAccepted(currentT, currentY);",
      "info" : "ExpressionStatement[14154-14193]:ExpressionStatement[14435-14474]"
    }, {
      "left" : "isLastStep = isLastStep || state.stop();",
      "right" : "isLastStep = isLastStep || state.stop();",
      "info" : "ExpressionStatement[14210-14250]:ExpressionStatement[14491-14531]"
    }, {
      "left" : "isLastStep = isLastStep || Precision.equals(currentT, tEnd, 1);",
      "right" : "isLastStep = isLastStep || Precision.equals(currentT, tEnd, 1);",
      "info" : "ExpressionStatement[14277-14340]:ExpressionStatement[14558-14621]"
    }, {
      "left" : "for (StepHandler handler : stepHandlers)",
      "right" : "for (StepHandler handler : stepHandlers)",
      "info" : "EnhancedForStatement[14432-14550]:EnhancedForStatement[14713-14831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14473-14550]:Block[14754-14831]"
    }, {
      "left" : "handler.handleStep(interpolator, isLastStep);",
      "right" : "handler.handleStep(interpolator, isLastStep);",
      "info" : "ExpressionStatement[14491-14536]:ExpressionStatement[14772-14817]"
    }, {
      "left" : "return currentT;",
      "right" : "return currentT;",
      "info" : "ReturnStatement[14564-14580]:ReturnStatement[14845-14861]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14816-14825]:Modifier[15097-15106]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14826-14830]:PrimitiveType[15107-15111]"
    }, {
      "left" : "sanityChecks",
      "right" : "sanityChecks",
      "info" : "SimpleName[14831-14843]:SimpleName[15112-15124]"
    }, {
      "left" : "final ExpandableStatefulODE equations",
      "right" : "final ExpandableStatefulODE equations",
      "info" : "SingleVariableDeclaration[14844-14881]:SingleVariableDeclaration[15125-15162]"
    }, {
      "left" : "final double t",
      "right" : "final double t",
      "info" : "SingleVariableDeclaration[14883-14897]:SingleVariableDeclaration[15164-15178]"
    }, {
      "left" : "NumberIsTooSmallException",
      "right" : "NumberIsTooSmallException",
      "info" : "SimpleType[14914-14939]:SimpleType[15195-15220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14940-15409]:Block[15221-15690]"
    }, {
      "left" : "final double threshold = 1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()),\n                                                                  FastMath.abs(t)));",
      "right" : "final double threshold = 1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()),\n                                                                  FastMath.abs(t)));",
      "info" : "VariableDeclarationStatement[14951-15128]:VariableDeclarationStatement[15232-15409]"
    }, {
      "left" : "final double dt = FastMath.abs(equations.getTime() - t);",
      "right" : "final double dt = FastMath.abs(equations.getTime() - t);",
      "info" : "VariableDeclarationStatement[15137-15193]:VariableDeclarationStatement[15418-15474]"
    }, {
      "left" : "if (dt <= threshold)",
      "right" : "if (dt <= threshold)",
      "info" : "IfStatement[15202-15402]:IfStatement[15483-15683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15223-15402]:Block[15504-15683]"
    }, {
      "left" : "throw new NumberIsTooSmallException(LocalizedFormats.TOO_SMALL_INTEGRATION_INTERVAL,\n                                                dt, threshold, false);",
      "right" : "throw new NumberIsTooSmallException(LocalizedFormats.TOO_SMALL_INTEGRATION_INTERVAL,\n                                                dt, threshold, false);",
      "info" : "ThrowStatement[15237-15392]:ThrowStatement[15518-15673]"
    } ]
  },
  "interFileMappings" : { }
}