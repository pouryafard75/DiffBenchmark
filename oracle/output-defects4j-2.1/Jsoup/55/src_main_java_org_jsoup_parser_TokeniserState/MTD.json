{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "enum : TokeniserState",
      "right" : "enum : TokeniserState",
      "info" : "EnumDeclaration[53-59307]:EnumDeclaration[53-59342]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[246-978]:MethodDeclaration[246-978]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[1051-1138]:MethodDeclaration[1051-1138]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[1215-1978]:MethodDeclaration[1215-1978]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[2027-2116]:MethodDeclaration[2027-2116]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[2146-2254]:MethodDeclaration[2146-2254]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[2287-2398]:MethodDeclaration[2287-2398]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[2430-2944]:MethodDeclaration[2430-2944]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[3000-3823]:MethodDeclaration[3000-3823]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[3856-4398]:MethodDeclaration[3856-4398]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[4496-5662]:MethodDeclaration[4496-5662]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[5731-6527]:MethodDeclaration[5731-6527]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[6566-6964]:MethodDeclaration[6566-6964]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[7003-8286]:MethodDeclaration[7003-8286]"
    }, {
      "left" : "private void anythingElse(Tokeniser t, CharacterReader r)",
      "right" : "private void anythingElse(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[8296-8478]:MethodDeclaration[8296-8478]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[8520-8804]:MethodDeclaration[8520-8804]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[8844-8955]:MethodDeclaration[8844-8955]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[8995-9093]:MethodDeclaration[8995-9093]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[9138-9674]:MethodDeclaration[9138-9674]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[9717-9834]:MethodDeclaration[9717-9834]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[9877-9978]:MethodDeclaration[9877-9978]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[10022-10279]:MethodDeclaration[10022-10279]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[10327-10584]:MethodDeclaration[10327-10584]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[10624-11441]:MethodDeclaration[10624-11441]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[11485-12314]:MethodDeclaration[11485-12314]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[12362-13260]:MethodDeclaration[12362-13260]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[13312-13857]:MethodDeclaration[13312-13857]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[13907-14327]:MethodDeclaration[13907-14327]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[14377-14485]:MethodDeclaration[14377-14485]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[14535-14677]:MethodDeclaration[14535-14677]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[14723-15596]:MethodDeclaration[14723-15596]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[15646-16521]:MethodDeclaration[15646-16521]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[16575-17513]:MethodDeclaration[16575-17513]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[17571-17879]:MethodDeclaration[17571-17879]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[17927-18068]:MethodDeclaration[17927-18068]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[18139-19547]:MethodDeclaration[18139-19547]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[19621-20963]:MethodDeclaration[19621-20963]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[21004-22491]:MethodDeclaration[21004-22491]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[22534-24170]:MethodDeclaration[22534-24170]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[24220-25378]:MethodDeclaration[24220-25378]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[25428-26588]:MethodDeclaration[25428-26588]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[26634-28203]:MethodDeclaration[26634-28203]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[28315-29180]:MethodDeclaration[28315-29180]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[29222-29780]:MethodDeclaration[29222-29815]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[29815-30306]:MethodDeclaration[29850-30341]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[30350-31176]:MethodDeclaration[30385-31211]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[31211-32113]:MethodDeclaration[31246-32148]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[32152-33054]:MethodDeclaration[32187-33089]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[33084-33794]:MethodDeclaration[33119-33829]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[33831-34579]:MethodDeclaration[33866-34614]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[34612-35716]:MethodDeclaration[34647-35751]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[35753-36703]:MethodDeclaration[35788-36738]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[36733-37605]:MethodDeclaration[36768-37640]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[37645-38815]:MethodDeclaration[37680-38850]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[38849-39979]:MethodDeclaration[38884-40014]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[40018-40941]:MethodDeclaration[40053-40976]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[40989-42394]:MethodDeclaration[41024-42429]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[42446-43716]:MethodDeclaration[42481-43751]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[43775-44741]:MethodDeclaration[43810-44776]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[44800-45767]:MethodDeclaration[44835-45802]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[45818-47114]:MethodDeclaration[45853-47149]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[47177-48397]:MethodDeclaration[47212-48432]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[48445-49818]:MethodDeclaration[48480-49853]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[49870-51140]:MethodDeclaration[49905-51175]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[51199-52165]:MethodDeclaration[51234-52200]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[52224-53191]:MethodDeclaration[52259-53226]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[53242-54046]:MethodDeclaration[53277-54081]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[54081-54568]:MethodDeclaration[54116-54603]"
    }, {
      "left" : "void read(Tokeniser t, CharacterReader r)",
      "right" : "void read(Tokeniser t, CharacterReader r)",
      "info" : "MethodDeclaration[54603-54795]:MethodDeclaration[54638-54830]"
    }, {
      "left" : "abstract void read(Tokeniser t, CharacterReader r);",
      "right" : "abstract void read(Tokeniser t, CharacterReader r);",
      "info" : "MethodDeclaration[54809-54860]:MethodDeclaration[54844-54895]"
    }, {
      "left" : "static final char nullChar = '\\u0000';",
      "right" : "static final char nullChar = '\\u0000';",
      "info" : "FieldDeclaration[54866-54904]:FieldDeclaration[54901-54939]"
    }, {
      "left" : "private static final char[] attributeSingleValueCharsSorted = new char[]{'\\'', '&', nullChar};",
      "right" : "private static final char[] attributeSingleValueCharsSorted = new char[]{'\\'', '&', nullChar};",
      "info" : "FieldDeclaration[54909-55003]:FieldDeclaration[54944-55038]"
    }, {
      "left" : "private static final char[] attributeDoubleValueCharsSorted = new char[]{'\"', '&', nullChar};",
      "right" : "private static final char[] attributeDoubleValueCharsSorted = new char[]{'\"', '&', nullChar};",
      "info" : "FieldDeclaration[55008-55101]:FieldDeclaration[55043-55136]"
    }, {
      "left" : "private static final char[] attributeNameCharsSorted = new char[]{'\\t', '\\n', '\\r', '\\f', ' ', '/', '=', '>', nullChar, '\"', '\\'', '<'};",
      "right" : "private static final char[] attributeNameCharsSorted = new char[]{'\\t', '\\n', '\\r', '\\f', ' ', '/', '=', '>', nullChar, '\"', '\\'', '<'};",
      "info" : "FieldDeclaration[55106-55242]:FieldDeclaration[55141-55277]"
    }, {
      "left" : "private static final char[] attributeValueUnquoted = new char[]{'\\t', '\\n', '\\r', '\\f', ' ', '&', '>', nullChar, '\"', '\\'', '<', '=', '`'};",
      "right" : "private static final char[] attributeValueUnquoted = new char[]{'\\t', '\\n', '\\r', '\\f', ' ', '&', '>', nullChar, '\"', '\\'', '<', '=', '`'};",
      "info" : "FieldDeclaration[55247-55386]:FieldDeclaration[55282-55421]"
    }, {
      "left" : "private static final char replacementChar = Tokeniser.replacementChar;",
      "right" : "private static final char replacementChar = Tokeniser.replacementChar;",
      "info" : "FieldDeclaration[55392-55462]:FieldDeclaration[55427-55497]"
    }, {
      "left" : "private static final String replacementStr = String.valueOf(Tokeniser.replacementChar);",
      "right" : "private static final String replacementStr = String.valueOf(Tokeniser.replacementChar);",
      "info" : "FieldDeclaration[55467-55554]:FieldDeclaration[55502-55589]"
    }, {
      "left" : "private static final char eof = CharacterReader.EOF;",
      "right" : "private static final char eof = CharacterReader.EOF;",
      "info" : "FieldDeclaration[55559-55611]:FieldDeclaration[55594-55646]"
    }, {
      "left" : "private static void handleDataEndTag(Tokeniser t, CharacterReader r, TokeniserState elseTransition)",
      "right" : "private static void handleDataEndTag(Tokeniser t, CharacterReader r, TokeniserState elseTransition)",
      "info" : "MethodDeclaration[55837-57271]:MethodDeclaration[55872-57306]"
    }, {
      "left" : "private static void readData(Tokeniser t, CharacterReader r, TokeniserState current, TokeniserState advance)",
      "right" : "private static void readData(Tokeniser t, CharacterReader r, TokeniserState current, TokeniserState advance)",
      "info" : "MethodDeclaration[57277-57900]:MethodDeclaration[57312-57935]"
    }, {
      "left" : "private static void readCharRef(Tokeniser t, TokeniserState advance)",
      "right" : "private static void readCharRef(Tokeniser t, TokeniserState advance)",
      "info" : "MethodDeclaration[57906-58157]:MethodDeclaration[57941-58192]"
    }, {
      "left" : "private static void readEndTag(Tokeniser t, CharacterReader r, TokeniserState a, TokeniserState b)",
      "right" : "private static void readEndTag(Tokeniser t, CharacterReader r, TokeniserState a, TokeniserState b)",
      "info" : "MethodDeclaration[58163-58452]:MethodDeclaration[58198-58487]"
    }, {
      "left" : "private static void handleDataDoubleEscapeTag(Tokeniser t, CharacterReader r, TokeniserState primary, TokeniserState fallback)",
      "right" : "private static void handleDataDoubleEscapeTag(Tokeniser t, CharacterReader r, TokeniserState primary, TokeniserState fallback)",
      "info" : "MethodDeclaration[58458-59305]:MethodDeclaration[58493-59340]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[288-978]:Block[288-978]"
    }, {
      "left" : "switch (r.current()) {\n                case '&':\n                    t.advanceTransition(CharacterReferenceInData);\n                    break;\n                case '<':\n                    t.advanceTransition(TagOpen);\n                    break;\n                case nullChar:\n                    t.error(this); // NOT replacement character (oddly?)\n                    t.emit(r.consume());\n                    break;\n                case eof:\n                    t.emit(new Token.EOF());\n                    break;\n                default:\n                    String data = r.consumeData();\n                    t.emit(data);\n                    break;\n            }",
      "right" : "switch (r.current()) {\n                case '&':\n                    t.advanceTransition(CharacterReferenceInData);\n                    break;\n                case '<':\n                    t.advanceTransition(TagOpen);\n                    break;\n                case nullChar:\n                    t.error(this); // NOT replacement character (oddly?)\n                    t.emit(r.consume());\n                    break;\n                case eof:\n                    t.emit(new Token.EOF());\n                    break;\n                default:\n                    String data = r.consumeData();\n                    t.emit(data);\n                    break;\n            }",
      "info" : "SwitchStatement[302-968]:SwitchStatement[302-968]"
    }, {
      "left" : "case '&':",
      "right" : "case '&':",
      "info" : "SwitchCase[341-350]:SwitchCase[341-350]"
    }, {
      "left" : "t.advanceTransition(CharacterReferenceInData);",
      "right" : "t.advanceTransition(CharacterReferenceInData);",
      "info" : "ExpressionStatement[371-417]:ExpressionStatement[371-417]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[438-444]:BreakStatement[438-444]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[461-470]:SwitchCase[461-470]"
    }, {
      "left" : "t.advanceTransition(TagOpen);",
      "right" : "t.advanceTransition(TagOpen);",
      "info" : "ExpressionStatement[491-520]:ExpressionStatement[491-520]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[541-547]:BreakStatement[541-547]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[564-578]:SwitchCase[564-578]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[599-613]:ExpressionStatement[599-613]"
    }, {
      "left" : "t.emit(r.consume());",
      "right" : "t.emit(r.consume());",
      "info" : "ExpressionStatement[672-692]:ExpressionStatement[672-692]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[713-719]:BreakStatement[713-719]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[736-745]:SwitchCase[736-745]"
    }, {
      "left" : "t.emit(new Token.EOF());",
      "right" : "t.emit(new Token.EOF());",
      "info" : "ExpressionStatement[766-790]:ExpressionStatement[766-790]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[811-817]:BreakStatement[811-817]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[834-842]:SwitchCase[834-842]"
    }, {
      "left" : "String data = r.consumeData();",
      "right" : "String data = r.consumeData();",
      "info" : "VariableDeclarationStatement[863-893]:VariableDeclarationStatement[863-893]"
    }, {
      "left" : "t.emit(data);",
      "right" : "t.emit(data);",
      "info" : "ExpressionStatement[914-927]:ExpressionStatement[914-927]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[948-954]:BreakStatement[948-954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1093-1138]:Block[1093-1138]"
    }, {
      "left" : "readCharRef(t, Data);",
      "right" : "readCharRef(t, Data);",
      "info" : "ExpressionStatement[1107-1128]:ExpressionStatement[1107-1128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1257-1978]:Block[1257-1978]"
    }, {
      "left" : "switch (r.current()) {\n                case '&':\n                    t.advanceTransition(CharacterReferenceInRcdata);\n                    break;\n                case '<':\n                    t.advanceTransition(RcdataLessthanSign);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    r.advance();\n                    t.emit(replacementChar);\n                    break;\n                case eof:\n                    t.emit(new Token.EOF());\n                    break;\n                default:\n                    String data = r.consumeToAny('&', '<', nullChar);\n                    t.emit(data);\n                    break;\n            }",
      "right" : "switch (r.current()) {\n                case '&':\n                    t.advanceTransition(CharacterReferenceInRcdata);\n                    break;\n                case '<':\n                    t.advanceTransition(RcdataLessthanSign);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    r.advance();\n                    t.emit(replacementChar);\n                    break;\n                case eof:\n                    t.emit(new Token.EOF());\n                    break;\n                default:\n                    String data = r.consumeToAny('&', '<', nullChar);\n                    t.emit(data);\n                    break;\n            }",
      "info" : "SwitchStatement[1271-1968]:SwitchStatement[1271-1968]"
    }, {
      "left" : "case '&':",
      "right" : "case '&':",
      "info" : "SwitchCase[1310-1319]:SwitchCase[1310-1319]"
    }, {
      "left" : "t.advanceTransition(CharacterReferenceInRcdata);",
      "right" : "t.advanceTransition(CharacterReferenceInRcdata);",
      "info" : "ExpressionStatement[1340-1388]:ExpressionStatement[1340-1388]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[1409-1415]:BreakStatement[1409-1415]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[1432-1441]:SwitchCase[1432-1441]"
    }, {
      "left" : "t.advanceTransition(RcdataLessthanSign);",
      "right" : "t.advanceTransition(RcdataLessthanSign);",
      "info" : "ExpressionStatement[1462-1502]:ExpressionStatement[1462-1502]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[1523-1529]:BreakStatement[1523-1529]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[1546-1560]:SwitchCase[1546-1560]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[1581-1595]:ExpressionStatement[1581-1595]"
    }, {
      "left" : "r.advance();",
      "right" : "r.advance();",
      "info" : "ExpressionStatement[1616-1628]:ExpressionStatement[1616-1628]"
    }, {
      "left" : "t.emit(replacementChar);",
      "right" : "t.emit(replacementChar);",
      "info" : "ExpressionStatement[1649-1673]:ExpressionStatement[1649-1673]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[1694-1700]:BreakStatement[1694-1700]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[1717-1726]:SwitchCase[1717-1726]"
    }, {
      "left" : "t.emit(new Token.EOF());",
      "right" : "t.emit(new Token.EOF());",
      "info" : "ExpressionStatement[1747-1771]:ExpressionStatement[1747-1771]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[1792-1798]:BreakStatement[1792-1798]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[1815-1823]:SwitchCase[1815-1823]"
    }, {
      "left" : "String data = r.consumeToAny('&', '<', nullChar);",
      "right" : "String data = r.consumeToAny('&', '<', nullChar);",
      "info" : "VariableDeclarationStatement[1844-1893]:VariableDeclarationStatement[1844-1893]"
    }, {
      "left" : "t.emit(data);",
      "right" : "t.emit(data);",
      "info" : "ExpressionStatement[1914-1927]:ExpressionStatement[1914-1927]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[1948-1954]:BreakStatement[1948-1954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2069-2116]:Block[2069-2116]"
    }, {
      "left" : "readCharRef(t, Rcdata);",
      "right" : "readCharRef(t, Rcdata);",
      "info" : "ExpressionStatement[2083-2106]:ExpressionStatement[2083-2106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2188-2254]:Block[2188-2254]"
    }, {
      "left" : "readData(t, r, this, RawtextLessthanSign);",
      "right" : "readData(t, r, this, RawtextLessthanSign);",
      "info" : "ExpressionStatement[2202-2244]:ExpressionStatement[2202-2244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2329-2398]:Block[2329-2398]"
    }, {
      "left" : "readData(t, r, this, ScriptDataLessthanSign);",
      "right" : "readData(t, r, this, ScriptDataLessthanSign);",
      "info" : "ExpressionStatement[2343-2388]:ExpressionStatement[2343-2388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2472-2944]:Block[2472-2944]"
    }, {
      "left" : "switch (r.current()) {\n                case nullChar:\n                    t.error(this);\n                    r.advance();\n                    t.emit(replacementChar);\n                    break;\n                case eof:\n                    t.emit(new Token.EOF());\n                    break;\n                default:\n                    String data = r.consumeTo(nullChar);\n                    t.emit(data);\n                    break;\n            }",
      "right" : "switch (r.current()) {\n                case nullChar:\n                    t.error(this);\n                    r.advance();\n                    t.emit(replacementChar);\n                    break;\n                case eof:\n                    t.emit(new Token.EOF());\n                    break;\n                default:\n                    String data = r.consumeTo(nullChar);\n                    t.emit(data);\n                    break;\n            }",
      "info" : "SwitchStatement[2486-2934]:SwitchStatement[2486-2934]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[2525-2539]:SwitchCase[2525-2539]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[2560-2574]:ExpressionStatement[2560-2574]"
    }, {
      "left" : "r.advance();",
      "right" : "r.advance();",
      "info" : "ExpressionStatement[2595-2607]:ExpressionStatement[2595-2607]"
    }, {
      "left" : "t.emit(replacementChar);",
      "right" : "t.emit(replacementChar);",
      "info" : "ExpressionStatement[2628-2652]:ExpressionStatement[2628-2652]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[2673-2679]:BreakStatement[2673-2679]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[2696-2705]:SwitchCase[2696-2705]"
    }, {
      "left" : "t.emit(new Token.EOF());",
      "right" : "t.emit(new Token.EOF());",
      "info" : "ExpressionStatement[2726-2750]:ExpressionStatement[2726-2750]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[2771-2777]:BreakStatement[2771-2777]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[2794-2802]:SwitchCase[2794-2802]"
    }, {
      "left" : "String data = r.consumeTo(nullChar);",
      "right" : "String data = r.consumeTo(nullChar);",
      "info" : "VariableDeclarationStatement[2823-2859]:VariableDeclarationStatement[2823-2859]"
    }, {
      "left" : "t.emit(data);",
      "right" : "t.emit(data);",
      "info" : "ExpressionStatement[2880-2893]:ExpressionStatement[2880-2893]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[2914-2920]:BreakStatement[2914-2920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3042-3823]:Block[3042-3823]"
    }, {
      "left" : "switch (r.current()) {\n                case '!':\n                    t.advanceTransition(MarkupDeclarationOpen);\n                    break;\n                case '/':\n                    t.advanceTransition(EndTagOpen);\n                    break;\n                case '?':\n                    t.advanceTransition(BogusComment);\n                    break;\n                default:\n                    if (r.matchesLetter()) {\n                        t.createTagPending(true);\n                        t.transition(TagName);\n                    } else {\n                        t.error(this);\n                        t.emit('<'); // char that got us here\n                        t.transition(Data);\n                    }\n                    break;\n            }",
      "right" : "switch (r.current()) {\n                case '!':\n                    t.advanceTransition(MarkupDeclarationOpen);\n                    break;\n                case '/':\n                    t.advanceTransition(EndTagOpen);\n                    break;\n                case '?':\n                    t.advanceTransition(BogusComment);\n                    break;\n                default:\n                    if (r.matchesLetter()) {\n                        t.createTagPending(true);\n                        t.transition(TagName);\n                    } else {\n                        t.error(this);\n                        t.emit('<'); // char that got us here\n                        t.transition(Data);\n                    }\n                    break;\n            }",
      "info" : "SwitchStatement[3056-3813]:SwitchStatement[3056-3813]"
    }, {
      "left" : "case '!':",
      "right" : "case '!':",
      "info" : "SwitchCase[3095-3104]:SwitchCase[3095-3104]"
    }, {
      "left" : "t.advanceTransition(MarkupDeclarationOpen);",
      "right" : "t.advanceTransition(MarkupDeclarationOpen);",
      "info" : "ExpressionStatement[3125-3168]:ExpressionStatement[3125-3168]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3189-3195]:BreakStatement[3189-3195]"
    }, {
      "left" : "case '/':",
      "right" : "case '/':",
      "info" : "SwitchCase[3212-3221]:SwitchCase[3212-3221]"
    }, {
      "left" : "t.advanceTransition(EndTagOpen);",
      "right" : "t.advanceTransition(EndTagOpen);",
      "info" : "ExpressionStatement[3242-3274]:ExpressionStatement[3242-3274]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3295-3301]:BreakStatement[3295-3301]"
    }, {
      "left" : "case '?':",
      "right" : "case '?':",
      "info" : "SwitchCase[3318-3327]:SwitchCase[3318-3327]"
    }, {
      "left" : "t.advanceTransition(BogusComment);",
      "right" : "t.advanceTransition(BogusComment);",
      "info" : "ExpressionStatement[3348-3382]:ExpressionStatement[3348-3382]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3403-3409]:BreakStatement[3403-3409]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[3426-3434]:SwitchCase[3426-3434]"
    }, {
      "left" : "if (r.matchesLetter())",
      "right" : "if (r.matchesLetter())",
      "info" : "IfStatement[3455-3772]:IfStatement[3455-3772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3478-3598]:Block[3478-3598]"
    }, {
      "left" : "t.createTagPending(true);",
      "right" : "t.createTagPending(true);",
      "info" : "ExpressionStatement[3504-3529]:ExpressionStatement[3504-3529]"
    }, {
      "left" : "t.transition(TagName);",
      "right" : "t.transition(TagName);",
      "info" : "ExpressionStatement[3554-3576]:ExpressionStatement[3554-3576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3604-3772]:Block[3604-3772]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[3630-3644]:ExpressionStatement[3630-3644]"
    }, {
      "left" : "t.emit('<');",
      "right" : "t.emit('<');",
      "info" : "ExpressionStatement[3669-3681]:ExpressionStatement[3669-3681]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[3731-3750]:ExpressionStatement[3731-3750]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3793-3799]:BreakStatement[3793-3799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3898-4398]:Block[3898-4398]"
    }, {
      "left" : "if (r.isEmpty())",
      "right" : "if (r.isEmpty())",
      "info" : "IfStatement[3912-4388]:IfStatement[3912-4388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3929-4044]:Block[3929-4044]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[3947-3964]:ExpressionStatement[3947-3964]"
    }, {
      "left" : "t.emit(\"</\");",
      "right" : "t.emit(\"</\");",
      "info" : "ExpressionStatement[3981-3994]:ExpressionStatement[3981-3994]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[4011-4030]:ExpressionStatement[4011-4030]"
    }, {
      "left" : "if (r.matchesLetter())",
      "right" : "if (r.matchesLetter())",
      "info" : "IfStatement[4050-4388]:IfStatement[4050-4388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4073-4170]:Block[4073-4170]"
    }, {
      "left" : "t.createTagPending(false);",
      "right" : "t.createTagPending(false);",
      "info" : "ExpressionStatement[4091-4117]:ExpressionStatement[4091-4117]"
    }, {
      "left" : "t.transition(TagName);",
      "right" : "t.transition(TagName);",
      "info" : "ExpressionStatement[4134-4156]:ExpressionStatement[4134-4156]"
    }, {
      "left" : "if (r.matches('>'))",
      "right" : "if (r.matches('>'))",
      "info" : "IfStatement[4176-4388]:IfStatement[4176-4388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4196-4285]:Block[4196-4285]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[4214-4228]:ExpressionStatement[4214-4228]"
    }, {
      "left" : "t.advanceTransition(Data);",
      "right" : "t.advanceTransition(Data);",
      "info" : "ExpressionStatement[4245-4271]:ExpressionStatement[4245-4271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4291-4388]:Block[4291-4388]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[4309-4323]:ExpressionStatement[4309-4323]"
    }, {
      "left" : "t.advanceTransition(BogusComment);",
      "right" : "t.advanceTransition(BogusComment);",
      "info" : "ExpressionStatement[4340-4374]:ExpressionStatement[4340-4374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4538-5662]:Block[4538-5662]"
    }, {
      "left" : "String tagName = r.consumeTagName();",
      "right" : "String tagName = r.consumeTagName();",
      "info" : "VariableDeclarationStatement[4725-4761]:VariableDeclarationStatement[4725-4761]"
    }, {
      "left" : "t.tagPending.appendTagName(tagName);",
      "right" : "t.tagPending.appendTagName(tagName);",
      "info" : "ExpressionStatement[4774-4810]:ExpressionStatement[4774-4810]"
    }, {
      "left" : "switch (r.consume()) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeAttributeName);\n                    break;\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case nullChar: // replacement\n                    t.tagPending.appendTagName(replacementStr);\n                    break;\n                case eof: // should emit pending tag?\n                    t.eofError(this);\n                    t.transition(Data);\n                // no default, as covered with above consumeToAny\n            }",
      "right" : "switch (r.consume()) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeAttributeName);\n                    break;\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case nullChar: // replacement\n                    t.tagPending.appendTagName(replacementStr);\n                    break;\n                case eof: // should emit pending tag?\n                    t.eofError(this);\n                    t.transition(Data);\n                // no default, as covered with above consumeToAny\n            }",
      "info" : "SwitchStatement[4824-5652]:SwitchStatement[4824-5652]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[4863-4873]:SwitchCase[4863-4873]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[4890-4900]:SwitchCase[4890-4900]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[4917-4927]:SwitchCase[4917-4927]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[4944-4954]:SwitchCase[4944-4954]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[4971-4980]:SwitchCase[4971-4980]"
    }, {
      "left" : "t.transition(BeforeAttributeName);",
      "right" : "t.transition(BeforeAttributeName);",
      "info" : "ExpressionStatement[5001-5035]:ExpressionStatement[5001-5035]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[5056-5062]:BreakStatement[5056-5062]"
    }, {
      "left" : "case '/':",
      "right" : "case '/':",
      "info" : "SwitchCase[5079-5088]:SwitchCase[5079-5088]"
    }, {
      "left" : "t.transition(SelfClosingStartTag);",
      "right" : "t.transition(SelfClosingStartTag);",
      "info" : "ExpressionStatement[5109-5143]:ExpressionStatement[5109-5143]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[5164-5170]:BreakStatement[5164-5170]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[5187-5196]:SwitchCase[5187-5196]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[5217-5236]:ExpressionStatement[5217-5236]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[5257-5276]:ExpressionStatement[5257-5276]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[5297-5303]:BreakStatement[5297-5303]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[5320-5334]:SwitchCase[5320-5334]"
    }, {
      "left" : "t.tagPending.appendTagName(replacementStr);",
      "right" : "t.tagPending.appendTagName(replacementStr);",
      "info" : "ExpressionStatement[5370-5413]:ExpressionStatement[5370-5413]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[5434-5440]:BreakStatement[5434-5440]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[5457-5466]:SwitchCase[5457-5466]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[5515-5532]:ExpressionStatement[5515-5532]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[5553-5572]:ExpressionStatement[5553-5572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5773-6527]:Block[5773-6527]"
    }, {
      "left" : "if (r.matches('/'))",
      "right" : "if (r.matches('/'))",
      "info" : "IfStatement[5787-6517]:IfStatement[5787-6517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5807-5915]:Block[5807-5915]"
    }, {
      "left" : "t.createTempBuffer();",
      "right" : "t.createTempBuffer();",
      "info" : "ExpressionStatement[5825-5846]:ExpressionStatement[5825-5846]"
    }, {
      "left" : "t.advanceTransition(RCDATAEndTagOpen);",
      "right" : "t.advanceTransition(RCDATAEndTagOpen);",
      "info" : "ExpressionStatement[5863-5901]:ExpressionStatement[5863-5901]"
    }, {
      "left" : "if (r.matchesLetter() && t.appropriateEndTagName() != null && !r.containsIgnoreCase(\"</\" + t.appropriateEndTagName()))",
      "right" : "if (r.matchesLetter() && t.appropriateEndTagName() != null && !r.containsIgnoreCase(\"</\" + t.appropriateEndTagName()))",
      "info" : "IfStatement[5921-6517]:IfStatement[5921-6517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6040-6429]:Block[6040-6429]"
    }, {
      "left" : "t.tagPending = t.createTagPending(false).name(t.appropriateEndTagName());",
      "right" : "t.tagPending = t.createTagPending(false).name(t.appropriateEndTagName());",
      "info" : "ExpressionStatement[6227-6300]:ExpressionStatement[6227-6300]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[6317-6336]:ExpressionStatement[6317-6336]"
    }, {
      "left" : "r.unconsume();",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[6353-6367]:ExpressionStatement[6353-6367]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[6396-6415]:ExpressionStatement[6396-6415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6435-6517]:Block[6435-6517]"
    }, {
      "left" : "t.emit(\"<\");",
      "right" : "t.emit(\"<\");",
      "info" : "ExpressionStatement[6453-6465]:ExpressionStatement[6453-6465]"
    }, {
      "left" : "t.transition(Rcdata);",
      "right" : "t.transition(Rcdata);",
      "info" : "ExpressionStatement[6482-6503]:ExpressionStatement[6482-6503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6608-6964]:Block[6608-6964]"
    }, {
      "left" : "if (r.matchesLetter())",
      "right" : "if (r.matchesLetter())",
      "info" : "IfStatement[6622-6954]:IfStatement[6622-6954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6645-6865]:Block[6645-6865]"
    }, {
      "left" : "t.createTagPending(false);",
      "right" : "t.createTagPending(false);",
      "info" : "ExpressionStatement[6663-6689]:ExpressionStatement[6663-6689]"
    }, {
      "left" : "t.tagPending.appendTagName(r.current());",
      "right" : "t.tagPending.appendTagName(r.current());",
      "info" : "ExpressionStatement[6706-6746]:ExpressionStatement[6706-6746]"
    }, {
      "left" : "t.dataBuffer.append(r.current());",
      "right" : "t.dataBuffer.append(r.current());",
      "info" : "ExpressionStatement[6763-6796]:ExpressionStatement[6763-6796]"
    }, {
      "left" : "t.advanceTransition(RCDATAEndTagName);",
      "right" : "t.advanceTransition(RCDATAEndTagName);",
      "info" : "ExpressionStatement[6813-6851]:ExpressionStatement[6813-6851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6871-6954]:Block[6871-6954]"
    }, {
      "left" : "t.emit(\"</\");",
      "right" : "t.emit(\"</\");",
      "info" : "ExpressionStatement[6889-6902]:ExpressionStatement[6889-6902]"
    }, {
      "left" : "t.transition(Rcdata);",
      "right" : "t.transition(Rcdata);",
      "info" : "ExpressionStatement[6919-6940]:ExpressionStatement[6919-6940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7045-8286]:Block[7045-8286]"
    }, {
      "left" : "if (r.matchesLetter())",
      "right" : "if (r.matchesLetter())",
      "info" : "IfStatement[7059-7271]:IfStatement[7059-7271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7082-7271]:Block[7082-7271]"
    }, {
      "left" : "String name = r.consumeLetterSequence();",
      "right" : "String name = r.consumeLetterSequence();",
      "info" : "VariableDeclarationStatement[7100-7140]:VariableDeclarationStatement[7100-7140]"
    }, {
      "left" : "t.tagPending.appendTagName(name);",
      "right" : "t.tagPending.appendTagName(name);",
      "info" : "ExpressionStatement[7157-7190]:ExpressionStatement[7157-7190]"
    }, {
      "left" : "t.dataBuffer.append(name);",
      "right" : "t.dataBuffer.append(name);",
      "info" : "ExpressionStatement[7207-7233]:ExpressionStatement[7207-7233]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[7250-7257]:ReturnStatement[7250-7257]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[7285-7306]:VariableDeclarationStatement[7285-7306]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    if (t.isAppropriateEndTagToken())\n                        t.transition(BeforeAttributeName);\n                    else\n                        anythingElse(t, r);\n                    break;\n                case '/':\n                    if (t.isAppropriateEndTagToken())\n                        t.transition(SelfClosingStartTag);\n                    else\n                        anythingElse(t, r);\n                    break;\n                case '>':\n                    if (t.isAppropriateEndTagToken()) {\n                        t.emitTagPending();\n                        t.transition(Data);\n                    }\n                    else\n                        anythingElse(t, r);\n                    break;\n                default:\n                    anythingElse(t, r);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    if (t.isAppropriateEndTagToken())\n                        t.transition(BeforeAttributeName);\n                    else\n                        anythingElse(t, r);\n                    break;\n                case '/':\n                    if (t.isAppropriateEndTagToken())\n                        t.transition(SelfClosingStartTag);\n                    else\n                        anythingElse(t, r);\n                    break;\n                case '>':\n                    if (t.isAppropriateEndTagToken()) {\n                        t.emitTagPending();\n                        t.transition(Data);\n                    }\n                    else\n                        anythingElse(t, r);\n                    break;\n                default:\n                    anythingElse(t, r);\n            }",
      "info" : "SwitchStatement[7319-8276]:SwitchStatement[7319-8276]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[7348-7358]:SwitchCase[7348-7358]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[7375-7385]:SwitchCase[7375-7385]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[7402-7412]:SwitchCase[7402-7412]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[7429-7439]:SwitchCase[7429-7439]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[7456-7465]:SwitchCase[7456-7465]"
    }, {
      "left" : "if (t.isAppropriateEndTagToken())",
      "right" : "if (t.isAppropriateEndTagToken())",
      "info" : "IfStatement[7486-7647]:IfStatement[7486-7647]"
    }, {
      "left" : "t.transition(BeforeAttributeName);",
      "right" : "t.transition(BeforeAttributeName);",
      "info" : "ExpressionStatement[7544-7578]:ExpressionStatement[7544-7578]"
    }, {
      "left" : "anythingElse(t, r);",
      "right" : "anythingElse(t, r);",
      "info" : "ExpressionStatement[7628-7647]:ExpressionStatement[7628-7647]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[7668-7674]:BreakStatement[7668-7674]"
    }, {
      "left" : "case '/':",
      "right" : "case '/':",
      "info" : "SwitchCase[7691-7700]:SwitchCase[7691-7700]"
    }, {
      "left" : "if (t.isAppropriateEndTagToken())",
      "right" : "if (t.isAppropriateEndTagToken())",
      "info" : "IfStatement[7721-7882]:IfStatement[7721-7882]"
    }, {
      "left" : "t.transition(SelfClosingStartTag);",
      "right" : "t.transition(SelfClosingStartTag);",
      "info" : "ExpressionStatement[7779-7813]:ExpressionStatement[7779-7813]"
    }, {
      "left" : "anythingElse(t, r);",
      "right" : "anythingElse(t, r);",
      "info" : "ExpressionStatement[7863-7882]:ExpressionStatement[7863-7882]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[7903-7909]:BreakStatement[7903-7909]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[7926-7935]:SwitchCase[7926-7935]"
    }, {
      "left" : "if (t.isAppropriateEndTagToken())",
      "right" : "if (t.isAppropriateEndTagToken())",
      "info" : "IfStatement[7956-8170]:IfStatement[7956-8170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7990-8101]:Block[7990-8101]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[8016-8035]:ExpressionStatement[8016-8035]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[8060-8079]:ExpressionStatement[8060-8079]"
    }, {
      "left" : "anythingElse(t, r);",
      "right" : "anythingElse(t, r);",
      "info" : "ExpressionStatement[8151-8170]:ExpressionStatement[8151-8170]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[8191-8197]:BreakStatement[8191-8197]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[8214-8222]:SwitchCase[8214-8222]"
    }, {
      "left" : "anythingElse(t, r);",
      "right" : "anythingElse(t, r);",
      "info" : "ExpressionStatement[8243-8262]:ExpressionStatement[8243-8262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8354-8478]:Block[8354-8478]"
    }, {
      "left" : "t.emit(\"</\" + t.dataBuffer.toString());",
      "right" : "t.emit(\"</\" + t.dataBuffer.toString());",
      "info" : "ExpressionStatement[8368-8407]:ExpressionStatement[8368-8407]"
    }, {
      "left" : "r.unconsume();",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[8420-8434]:ExpressionStatement[8420-8434]"
    }, {
      "left" : "t.transition(Rcdata);",
      "right" : "t.transition(Rcdata);",
      "info" : "ExpressionStatement[8447-8468]:ExpressionStatement[8447-8468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8562-8804]:Block[8562-8804]"
    }, {
      "left" : "if (r.matches('/'))",
      "right" : "if (r.matches('/'))",
      "info" : "IfStatement[8576-8794]:IfStatement[8576-8794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8596-8705]:Block[8596-8705]"
    }, {
      "left" : "t.createTempBuffer();",
      "right" : "t.createTempBuffer();",
      "info" : "ExpressionStatement[8614-8635]:ExpressionStatement[8614-8635]"
    }, {
      "left" : "t.advanceTransition(RawtextEndTagOpen);",
      "right" : "t.advanceTransition(RawtextEndTagOpen);",
      "info" : "ExpressionStatement[8652-8691]:ExpressionStatement[8652-8691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8711-8794]:Block[8711-8794]"
    }, {
      "left" : "t.emit('<');",
      "right" : "t.emit('<');",
      "info" : "ExpressionStatement[8729-8741]:ExpressionStatement[8729-8741]"
    }, {
      "left" : "t.transition(Rawtext);",
      "right" : "t.transition(Rawtext);",
      "info" : "ExpressionStatement[8758-8780]:ExpressionStatement[8758-8780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8886-8955]:Block[8886-8955]"
    }, {
      "left" : "readEndTag(t, r, RawtextEndTagName, Rawtext);",
      "right" : "readEndTag(t, r, RawtextEndTagName, Rawtext);",
      "info" : "ExpressionStatement[8900-8945]:ExpressionStatement[8900-8945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9037-9093]:Block[9037-9093]"
    }, {
      "left" : "handleDataEndTag(t, r, Rawtext);",
      "right" : "handleDataEndTag(t, r, Rawtext);",
      "info" : "ExpressionStatement[9051-9083]:ExpressionStatement[9051-9083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9180-9674]:Block[9180-9674]"
    }, {
      "left" : "switch (r.consume()) {\n                case '/':\n                    t.createTempBuffer();\n                    t.transition(ScriptDataEndTagOpen);\n                    break;\n                case '!':\n                    t.emit(\"<!\");\n                    t.transition(ScriptDataEscapeStart);\n                    break;\n                default:\n                    t.emit(\"<\");\n                    r.unconsume();\n                    t.transition(ScriptData);\n            }",
      "right" : "switch (r.consume()) {\n                case '/':\n                    t.createTempBuffer();\n                    t.transition(ScriptDataEndTagOpen);\n                    break;\n                case '!':\n                    t.emit(\"<!\");\n                    t.transition(ScriptDataEscapeStart);\n                    break;\n                default:\n                    t.emit(\"<\");\n                    r.unconsume();\n                    t.transition(ScriptData);\n            }",
      "info" : "SwitchStatement[9194-9664]:SwitchStatement[9194-9664]"
    }, {
      "left" : "case '/':",
      "right" : "case '/':",
      "info" : "SwitchCase[9233-9242]:SwitchCase[9233-9242]"
    }, {
      "left" : "t.createTempBuffer();",
      "right" : "t.createTempBuffer();",
      "info" : "ExpressionStatement[9263-9284]:ExpressionStatement[9263-9284]"
    }, {
      "left" : "t.transition(ScriptDataEndTagOpen);",
      "right" : "t.transition(ScriptDataEndTagOpen);",
      "info" : "ExpressionStatement[9305-9340]:ExpressionStatement[9305-9340]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9361-9367]:BreakStatement[9361-9367]"
    }, {
      "left" : "case '!':",
      "right" : "case '!':",
      "info" : "SwitchCase[9384-9393]:SwitchCase[9384-9393]"
    }, {
      "left" : "t.emit(\"<!\");",
      "right" : "t.emit(\"<!\");",
      "info" : "ExpressionStatement[9414-9427]:ExpressionStatement[9414-9427]"
    }, {
      "left" : "t.transition(ScriptDataEscapeStart);",
      "right" : "t.transition(ScriptDataEscapeStart);",
      "info" : "ExpressionStatement[9448-9484]:ExpressionStatement[9448-9484]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9505-9511]:BreakStatement[9505-9511]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[9528-9536]:SwitchCase[9528-9536]"
    }, {
      "left" : "t.emit(\"<\");",
      "right" : "t.emit(\"<\");",
      "info" : "ExpressionStatement[9557-9569]:ExpressionStatement[9557-9569]"
    }, {
      "left" : "r.unconsume();",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[9590-9604]:ExpressionStatement[9590-9604]"
    }, {
      "left" : "t.transition(ScriptData);",
      "right" : "t.transition(ScriptData);",
      "info" : "ExpressionStatement[9625-9650]:ExpressionStatement[9625-9650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9759-9834]:Block[9759-9834]"
    }, {
      "left" : "readEndTag(t, r, ScriptDataEndTagName, ScriptData);",
      "right" : "readEndTag(t, r, ScriptDataEndTagName, ScriptData);",
      "info" : "ExpressionStatement[9773-9824]:ExpressionStatement[9773-9824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9919-9978]:Block[9919-9978]"
    }, {
      "left" : "handleDataEndTag(t, r, ScriptData);",
      "right" : "handleDataEndTag(t, r, ScriptData);",
      "info" : "ExpressionStatement[9933-9968]:ExpressionStatement[9933-9968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10064-10279]:Block[10064-10279]"
    }, {
      "left" : "if (r.matches('-'))",
      "right" : "if (r.matches('-'))",
      "info" : "IfStatement[10078-10269]:IfStatement[10078-10269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10098-10206]:Block[10098-10206]"
    }, {
      "left" : "t.emit('-');",
      "right" : "t.emit('-');",
      "info" : "ExpressionStatement[10116-10128]:ExpressionStatement[10116-10128]"
    }, {
      "left" : "t.advanceTransition(ScriptDataEscapeStartDash);",
      "right" : "t.advanceTransition(ScriptDataEscapeStartDash);",
      "info" : "ExpressionStatement[10145-10192]:ExpressionStatement[10145-10192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10212-10269]:Block[10212-10269]"
    }, {
      "left" : "t.transition(ScriptData);",
      "right" : "t.transition(ScriptData);",
      "info" : "ExpressionStatement[10230-10255]:ExpressionStatement[10230-10255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10369-10584]:Block[10369-10584]"
    }, {
      "left" : "if (r.matches('-'))",
      "right" : "if (r.matches('-'))",
      "info" : "IfStatement[10383-10574]:IfStatement[10383-10574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10403-10511]:Block[10403-10511]"
    }, {
      "left" : "t.emit('-');",
      "right" : "t.emit('-');",
      "info" : "ExpressionStatement[10421-10433]:ExpressionStatement[10421-10433]"
    }, {
      "left" : "t.advanceTransition(ScriptDataEscapedDashDash);",
      "right" : "t.advanceTransition(ScriptDataEscapedDashDash);",
      "info" : "ExpressionStatement[10450-10497]:ExpressionStatement[10450-10497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10517-10574]:Block[10517-10574]"
    }, {
      "left" : "t.transition(ScriptData);",
      "right" : "t.transition(ScriptData);",
      "info" : "ExpressionStatement[10535-10560]:ExpressionStatement[10535-10560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10666-11441]:Block[10666-11441]"
    }, {
      "left" : "if (r.isEmpty())",
      "right" : "if (r.isEmpty())",
      "info" : "IfStatement[10680-10806]:IfStatement[10680-10806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10697-10806]:Block[10697-10806]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[10715-10732]:ExpressionStatement[10715-10732]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[10749-10768]:ExpressionStatement[10749-10768]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[10785-10792]:ReturnStatement[10785-10792]"
    }, {
      "left" : "switch (r.current()) {\n                case '-':\n                    t.emit('-');\n                    t.advanceTransition(ScriptDataEscapedDash);\n                    break;\n                case '<':\n                    t.advanceTransition(ScriptDataEscapedLessthanSign);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    r.advance();\n                    t.emit(replacementChar);\n                    break;\n                default:\n                    String data = r.consumeToAny('-', '<', nullChar);\n                    t.emit(data);\n            }",
      "right" : "switch (r.current()) {\n                case '-':\n                    t.emit('-');\n                    t.advanceTransition(ScriptDataEscapedDash);\n                    break;\n                case '<':\n                    t.advanceTransition(ScriptDataEscapedLessthanSign);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    r.advance();\n                    t.emit(replacementChar);\n                    break;\n                default:\n                    String data = r.consumeToAny('-', '<', nullChar);\n                    t.emit(data);\n            }",
      "info" : "SwitchStatement[10820-11431]:SwitchStatement[10820-11431]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[10859-10868]:SwitchCase[10859-10868]"
    }, {
      "left" : "t.emit('-');",
      "right" : "t.emit('-');",
      "info" : "ExpressionStatement[10889-10901]:ExpressionStatement[10889-10901]"
    }, {
      "left" : "t.advanceTransition(ScriptDataEscapedDash);",
      "right" : "t.advanceTransition(ScriptDataEscapedDash);",
      "info" : "ExpressionStatement[10922-10965]:ExpressionStatement[10922-10965]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10986-10992]:BreakStatement[10986-10992]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[11009-11018]:SwitchCase[11009-11018]"
    }, {
      "left" : "t.advanceTransition(ScriptDataEscapedLessthanSign);",
      "right" : "t.advanceTransition(ScriptDataEscapedLessthanSign);",
      "info" : "ExpressionStatement[11039-11090]:ExpressionStatement[11039-11090]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11111-11117]:BreakStatement[11111-11117]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[11134-11148]:SwitchCase[11134-11148]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[11169-11183]:ExpressionStatement[11169-11183]"
    }, {
      "left" : "r.advance();",
      "right" : "r.advance();",
      "info" : "ExpressionStatement[11204-11216]:ExpressionStatement[11204-11216]"
    }, {
      "left" : "t.emit(replacementChar);",
      "right" : "t.emit(replacementChar);",
      "info" : "ExpressionStatement[11237-11261]:ExpressionStatement[11237-11261]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11282-11288]:BreakStatement[11282-11288]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[11305-11313]:SwitchCase[11305-11313]"
    }, {
      "left" : "String data = r.consumeToAny('-', '<', nullChar);",
      "right" : "String data = r.consumeToAny('-', '<', nullChar);",
      "info" : "VariableDeclarationStatement[11334-11383]:VariableDeclarationStatement[11334-11383]"
    }, {
      "left" : "t.emit(data);",
      "right" : "t.emit(data);",
      "info" : "ExpressionStatement[11404-11417]:ExpressionStatement[11404-11417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11527-12314]:Block[11527-12314]"
    }, {
      "left" : "if (r.isEmpty())",
      "right" : "if (r.isEmpty())",
      "info" : "IfStatement[11541-11667]:IfStatement[11541-11667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11558-11667]:Block[11558-11667]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[11576-11593]:ExpressionStatement[11576-11593]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[11610-11629]:ExpressionStatement[11610-11629]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[11646-11653]:ReturnStatement[11646-11653]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[11681-11702]:VariableDeclarationStatement[11681-11702]"
    }, {
      "left" : "switch (c) {\n                case '-':\n                    t.emit(c);\n                    t.transition(ScriptDataEscapedDashDash);\n                    break;\n                case '<':\n                    t.transition(ScriptDataEscapedLessthanSign);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.emit(replacementChar);\n                    t.transition(ScriptDataEscaped);\n                    break;\n                default:\n                    t.emit(c);\n                    t.transition(ScriptDataEscaped);\n            }",
      "right" : "switch (c) {\n                case '-':\n                    t.emit(c);\n                    t.transition(ScriptDataEscapedDashDash);\n                    break;\n                case '<':\n                    t.transition(ScriptDataEscapedLessthanSign);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.emit(replacementChar);\n                    t.transition(ScriptDataEscaped);\n                    break;\n                default:\n                    t.emit(c);\n                    t.transition(ScriptDataEscaped);\n            }",
      "info" : "SwitchStatement[11715-12304]:SwitchStatement[11715-12304]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[11744-11753]:SwitchCase[11744-11753]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[11774-11784]:ExpressionStatement[11774-11784]"
    }, {
      "left" : "t.transition(ScriptDataEscapedDashDash);",
      "right" : "t.transition(ScriptDataEscapedDashDash);",
      "info" : "ExpressionStatement[11805-11845]:ExpressionStatement[11805-11845]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11866-11872]:BreakStatement[11866-11872]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[11889-11898]:SwitchCase[11889-11898]"
    }, {
      "left" : "t.transition(ScriptDataEscapedLessthanSign);",
      "right" : "t.transition(ScriptDataEscapedLessthanSign);",
      "info" : "ExpressionStatement[11919-11963]:ExpressionStatement[11919-11963]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11984-11990]:BreakStatement[11984-11990]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[12007-12021]:SwitchCase[12007-12021]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[12042-12056]:ExpressionStatement[12042-12056]"
    }, {
      "left" : "t.emit(replacementChar);",
      "right" : "t.emit(replacementChar);",
      "info" : "ExpressionStatement[12077-12101]:ExpressionStatement[12077-12101]"
    }, {
      "left" : "t.transition(ScriptDataEscaped);",
      "right" : "t.transition(ScriptDataEscaped);",
      "info" : "ExpressionStatement[12122-12154]:ExpressionStatement[12122-12154]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12175-12181]:BreakStatement[12175-12181]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[12198-12206]:SwitchCase[12198-12206]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[12227-12237]:ExpressionStatement[12227-12237]"
    }, {
      "left" : "t.transition(ScriptDataEscaped);",
      "right" : "t.transition(ScriptDataEscaped);",
      "info" : "ExpressionStatement[12258-12290]:ExpressionStatement[12258-12290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12404-13260]:Block[12404-13260]"
    }, {
      "left" : "if (r.isEmpty())",
      "right" : "if (r.isEmpty())",
      "info" : "IfStatement[12418-12544]:IfStatement[12418-12544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12435-12544]:Block[12435-12544]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[12453-12470]:ExpressionStatement[12453-12470]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[12487-12506]:ExpressionStatement[12487-12506]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[12523-12530]:ReturnStatement[12523-12530]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[12558-12579]:VariableDeclarationStatement[12558-12579]"
    }, {
      "left" : "switch (c) {\n                case '-':\n                    t.emit(c);\n                    break;\n                case '<':\n                    t.transition(ScriptDataEscapedLessthanSign);\n                    break;\n                case '>':\n                    t.emit(c);\n                    t.transition(ScriptData);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.emit(replacementChar);\n                    t.transition(ScriptDataEscaped);\n                    break;\n                default:\n                    t.emit(c);\n                    t.transition(ScriptDataEscaped);\n            }",
      "right" : "switch (c) {\n                case '-':\n                    t.emit(c);\n                    break;\n                case '<':\n                    t.transition(ScriptDataEscapedLessthanSign);\n                    break;\n                case '>':\n                    t.emit(c);\n                    t.transition(ScriptData);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.emit(replacementChar);\n                    t.transition(ScriptDataEscaped);\n                    break;\n                default:\n                    t.emit(c);\n                    t.transition(ScriptDataEscaped);\n            }",
      "info" : "SwitchStatement[12592-13250]:SwitchStatement[12592-13250]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[12621-12630]:SwitchCase[12621-12630]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[12651-12661]:ExpressionStatement[12651-12661]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12682-12688]:BreakStatement[12682-12688]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[12705-12714]:SwitchCase[12705-12714]"
    }, {
      "left" : "t.transition(ScriptDataEscapedLessthanSign);",
      "right" : "t.transition(ScriptDataEscapedLessthanSign);",
      "info" : "ExpressionStatement[12735-12779]:ExpressionStatement[12735-12779]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12800-12806]:BreakStatement[12800-12806]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[12823-12832]:SwitchCase[12823-12832]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[12853-12863]:ExpressionStatement[12853-12863]"
    }, {
      "left" : "t.transition(ScriptData);",
      "right" : "t.transition(ScriptData);",
      "info" : "ExpressionStatement[12884-12909]:ExpressionStatement[12884-12909]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[12930-12936]:BreakStatement[12930-12936]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[12953-12967]:SwitchCase[12953-12967]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[12988-13002]:ExpressionStatement[12988-13002]"
    }, {
      "left" : "t.emit(replacementChar);",
      "right" : "t.emit(replacementChar);",
      "info" : "ExpressionStatement[13023-13047]:ExpressionStatement[13023-13047]"
    }, {
      "left" : "t.transition(ScriptDataEscaped);",
      "right" : "t.transition(ScriptDataEscaped);",
      "info" : "ExpressionStatement[13068-13100]:ExpressionStatement[13068-13100]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[13121-13127]:BreakStatement[13121-13127]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[13144-13152]:SwitchCase[13144-13152]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[13173-13183]:ExpressionStatement[13173-13183]"
    }, {
      "left" : "t.transition(ScriptDataEscaped);",
      "right" : "t.transition(ScriptDataEscaped);",
      "info" : "ExpressionStatement[13204-13236]:ExpressionStatement[13204-13236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13354-13857]:Block[13354-13857]"
    }, {
      "left" : "if (r.matchesLetter())",
      "right" : "if (r.matchesLetter())",
      "info" : "IfStatement[13368-13847]:IfStatement[13368-13847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13391-13603]:Block[13391-13603]"
    }, {
      "left" : "t.createTempBuffer();",
      "right" : "t.createTempBuffer();",
      "info" : "ExpressionStatement[13409-13430]:ExpressionStatement[13409-13430]"
    }, {
      "left" : "t.dataBuffer.append(r.current());",
      "right" : "t.dataBuffer.append(r.current());",
      "info" : "ExpressionStatement[13447-13480]:ExpressionStatement[13447-13480]"
    }, {
      "left" : "t.emit(\"<\" + r.current());",
      "right" : "t.emit(\"<\" + r.current());",
      "info" : "ExpressionStatement[13497-13523]:ExpressionStatement[13497-13523]"
    }, {
      "left" : "t.advanceTransition(ScriptDataDoubleEscapeStart);",
      "right" : "t.advanceTransition(ScriptDataDoubleEscapeStart);",
      "info" : "ExpressionStatement[13540-13589]:ExpressionStatement[13540-13589]"
    }, {
      "left" : "if (r.matches('/'))",
      "right" : "if (r.matches('/'))",
      "info" : "IfStatement[13609-13847]:IfStatement[13609-13847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13629-13748]:Block[13629-13748]"
    }, {
      "left" : "t.createTempBuffer();",
      "right" : "t.createTempBuffer();",
      "info" : "ExpressionStatement[13647-13668]:ExpressionStatement[13647-13668]"
    }, {
      "left" : "t.advanceTransition(ScriptDataEscapedEndTagOpen);",
      "right" : "t.advanceTransition(ScriptDataEscapedEndTagOpen);",
      "info" : "ExpressionStatement[13685-13734]:ExpressionStatement[13685-13734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13754-13847]:Block[13754-13847]"
    }, {
      "left" : "t.emit('<');",
      "right" : "t.emit('<');",
      "info" : "ExpressionStatement[13772-13784]:ExpressionStatement[13772-13784]"
    }, {
      "left" : "t.transition(ScriptDataEscaped);",
      "right" : "t.transition(ScriptDataEscaped);",
      "info" : "ExpressionStatement[13801-13833]:ExpressionStatement[13801-13833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13949-14327]:Block[13949-14327]"
    }, {
      "left" : "if (r.matchesLetter())",
      "right" : "if (r.matchesLetter())",
      "info" : "IfStatement[13963-14317]:IfStatement[13963-14317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13986-14217]:Block[13986-14217]"
    }, {
      "left" : "t.createTagPending(false);",
      "right" : "t.createTagPending(false);",
      "info" : "ExpressionStatement[14004-14030]:ExpressionStatement[14004-14030]"
    }, {
      "left" : "t.tagPending.appendTagName(r.current());",
      "right" : "t.tagPending.appendTagName(r.current());",
      "info" : "ExpressionStatement[14047-14087]:ExpressionStatement[14047-14087]"
    }, {
      "left" : "t.dataBuffer.append(r.current());",
      "right" : "t.dataBuffer.append(r.current());",
      "info" : "ExpressionStatement[14104-14137]:ExpressionStatement[14104-14137]"
    }, {
      "left" : "t.advanceTransition(ScriptDataEscapedEndTagName);",
      "right" : "t.advanceTransition(ScriptDataEscapedEndTagName);",
      "info" : "ExpressionStatement[14154-14203]:ExpressionStatement[14154-14203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14223-14317]:Block[14223-14317]"
    }, {
      "left" : "t.emit(\"</\");",
      "right" : "t.emit(\"</\");",
      "info" : "ExpressionStatement[14241-14254]:ExpressionStatement[14241-14254]"
    }, {
      "left" : "t.transition(ScriptDataEscaped);",
      "right" : "t.transition(ScriptDataEscaped);",
      "info" : "ExpressionStatement[14271-14303]:ExpressionStatement[14271-14303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14419-14485]:Block[14419-14485]"
    }, {
      "left" : "handleDataEndTag(t, r, ScriptDataEscaped);",
      "right" : "handleDataEndTag(t, r, ScriptDataEscaped);",
      "info" : "ExpressionStatement[14433-14475]:ExpressionStatement[14433-14475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14577-14677]:Block[14577-14677]"
    }, {
      "left" : "handleDataDoubleEscapeTag(t, r, ScriptDataDoubleEscaped, ScriptDataEscaped);",
      "right" : "handleDataDoubleEscapeTag(t, r, ScriptDataDoubleEscaped, ScriptDataEscaped);",
      "info" : "ExpressionStatement[14591-14667]:ExpressionStatement[14591-14667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14765-15596]:Block[14765-15596]"
    }, {
      "left" : "char c = r.current();",
      "right" : "char c = r.current();",
      "info" : "VariableDeclarationStatement[14779-14800]:VariableDeclarationStatement[14779-14800]"
    }, {
      "left" : "switch (c) {\n                case '-':\n                    t.emit(c);\n                    t.advanceTransition(ScriptDataDoubleEscapedDash);\n                    break;\n                case '<':\n                    t.emit(c);\n                    t.advanceTransition(ScriptDataDoubleEscapedLessthanSign);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    r.advance();\n                    t.emit(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    String data = r.consumeToAny('-', '<', nullChar);\n                    t.emit(data);\n            }",
      "right" : "switch (c) {\n                case '-':\n                    t.emit(c);\n                    t.advanceTransition(ScriptDataDoubleEscapedDash);\n                    break;\n                case '<':\n                    t.emit(c);\n                    t.advanceTransition(ScriptDataDoubleEscapedLessthanSign);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    r.advance();\n                    t.emit(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    String data = r.consumeToAny('-', '<', nullChar);\n                    t.emit(data);\n            }",
      "info" : "SwitchStatement[14813-15586]:SwitchStatement[14813-15586]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[14842-14851]:SwitchCase[14842-14851]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[14872-14882]:ExpressionStatement[14872-14882]"
    }, {
      "left" : "t.advanceTransition(ScriptDataDoubleEscapedDash);",
      "right" : "t.advanceTransition(ScriptDataDoubleEscapedDash);",
      "info" : "ExpressionStatement[14903-14952]:ExpressionStatement[14903-14952]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[14973-14979]:BreakStatement[14973-14979]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[14996-15005]:SwitchCase[14996-15005]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[15026-15036]:ExpressionStatement[15026-15036]"
    }, {
      "left" : "t.advanceTransition(ScriptDataDoubleEscapedLessthanSign);",
      "right" : "t.advanceTransition(ScriptDataDoubleEscapedLessthanSign);",
      "info" : "ExpressionStatement[15057-15114]:ExpressionStatement[15057-15114]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[15135-15141]:BreakStatement[15135-15141]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[15158-15172]:SwitchCase[15158-15172]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[15193-15207]:ExpressionStatement[15193-15207]"
    }, {
      "left" : "r.advance();",
      "right" : "r.advance();",
      "info" : "ExpressionStatement[15228-15240]:ExpressionStatement[15228-15240]"
    }, {
      "left" : "t.emit(replacementChar);",
      "right" : "t.emit(replacementChar);",
      "info" : "ExpressionStatement[15261-15285]:ExpressionStatement[15261-15285]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[15306-15312]:BreakStatement[15306-15312]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[15329-15338]:SwitchCase[15329-15338]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[15359-15376]:ExpressionStatement[15359-15376]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[15397-15416]:ExpressionStatement[15397-15416]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[15437-15443]:BreakStatement[15437-15443]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[15460-15468]:SwitchCase[15460-15468]"
    }, {
      "left" : "String data = r.consumeToAny('-', '<', nullChar);",
      "right" : "String data = r.consumeToAny('-', '<', nullChar);",
      "info" : "VariableDeclarationStatement[15489-15538]:VariableDeclarationStatement[15489-15538]"
    }, {
      "left" : "t.emit(data);",
      "right" : "t.emit(data);",
      "info" : "ExpressionStatement[15559-15572]:ExpressionStatement[15559-15572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15688-16521]:Block[15688-16521]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[15702-15723]:VariableDeclarationStatement[15702-15723]"
    }, {
      "left" : "switch (c) {\n                case '-':\n                    t.emit(c);\n                    t.transition(ScriptDataDoubleEscapedDashDash);\n                    break;\n                case '<':\n                    t.emit(c);\n                    t.transition(ScriptDataDoubleEscapedLessthanSign);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.emit(replacementChar);\n                    t.transition(ScriptDataDoubleEscaped);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    t.emit(c);\n                    t.transition(ScriptDataDoubleEscaped);\n            }",
      "right" : "switch (c) {\n                case '-':\n                    t.emit(c);\n                    t.transition(ScriptDataDoubleEscapedDashDash);\n                    break;\n                case '<':\n                    t.emit(c);\n                    t.transition(ScriptDataDoubleEscapedLessthanSign);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.emit(replacementChar);\n                    t.transition(ScriptDataDoubleEscaped);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    t.emit(c);\n                    t.transition(ScriptDataDoubleEscaped);\n            }",
      "info" : "SwitchStatement[15736-16511]:SwitchStatement[15736-16511]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[15765-15774]:SwitchCase[15765-15774]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[15795-15805]:ExpressionStatement[15795-15805]"
    }, {
      "left" : "t.transition(ScriptDataDoubleEscapedDashDash);",
      "right" : "t.transition(ScriptDataDoubleEscapedDashDash);",
      "info" : "ExpressionStatement[15826-15872]:ExpressionStatement[15826-15872]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[15893-15899]:BreakStatement[15893-15899]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[15916-15925]:SwitchCase[15916-15925]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[15946-15956]:ExpressionStatement[15946-15956]"
    }, {
      "left" : "t.transition(ScriptDataDoubleEscapedLessthanSign);",
      "right" : "t.transition(ScriptDataDoubleEscapedLessthanSign);",
      "info" : "ExpressionStatement[15977-16027]:ExpressionStatement[15977-16027]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[16048-16054]:BreakStatement[16048-16054]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[16071-16085]:SwitchCase[16071-16085]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[16106-16120]:ExpressionStatement[16106-16120]"
    }, {
      "left" : "t.emit(replacementChar);",
      "right" : "t.emit(replacementChar);",
      "info" : "ExpressionStatement[16141-16165]:ExpressionStatement[16141-16165]"
    }, {
      "left" : "t.transition(ScriptDataDoubleEscaped);",
      "right" : "t.transition(ScriptDataDoubleEscaped);",
      "info" : "ExpressionStatement[16186-16224]:ExpressionStatement[16186-16224]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[16245-16251]:BreakStatement[16245-16251]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[16268-16277]:SwitchCase[16268-16277]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[16298-16315]:ExpressionStatement[16298-16315]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[16336-16355]:ExpressionStatement[16336-16355]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[16376-16382]:BreakStatement[16376-16382]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[16399-16407]:SwitchCase[16399-16407]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[16428-16438]:ExpressionStatement[16428-16438]"
    }, {
      "left" : "t.transition(ScriptDataDoubleEscaped);",
      "right" : "t.transition(ScriptDataDoubleEscaped);",
      "info" : "ExpressionStatement[16459-16497]:ExpressionStatement[16459-16497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16617-17513]:Block[16617-17513]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[16631-16652]:VariableDeclarationStatement[16631-16652]"
    }, {
      "left" : "switch (c) {\n                case '-':\n                    t.emit(c);\n                    break;\n                case '<':\n                    t.emit(c);\n                    t.transition(ScriptDataDoubleEscapedLessthanSign);\n                    break;\n                case '>':\n                    t.emit(c);\n                    t.transition(ScriptData);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.emit(replacementChar);\n                    t.transition(ScriptDataDoubleEscaped);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    t.emit(c);\n                    t.transition(ScriptDataDoubleEscaped);\n            }",
      "right" : "switch (c) {\n                case '-':\n                    t.emit(c);\n                    break;\n                case '<':\n                    t.emit(c);\n                    t.transition(ScriptDataDoubleEscapedLessthanSign);\n                    break;\n                case '>':\n                    t.emit(c);\n                    t.transition(ScriptData);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.emit(replacementChar);\n                    t.transition(ScriptDataDoubleEscaped);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    t.emit(c);\n                    t.transition(ScriptDataDoubleEscaped);\n            }",
      "info" : "SwitchStatement[16665-17503]:SwitchStatement[16665-17503]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[16694-16703]:SwitchCase[16694-16703]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[16724-16734]:ExpressionStatement[16724-16734]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[16755-16761]:BreakStatement[16755-16761]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[16778-16787]:SwitchCase[16778-16787]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[16808-16818]:ExpressionStatement[16808-16818]"
    }, {
      "left" : "t.transition(ScriptDataDoubleEscapedLessthanSign);",
      "right" : "t.transition(ScriptDataDoubleEscapedLessthanSign);",
      "info" : "ExpressionStatement[16839-16889]:ExpressionStatement[16839-16889]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[16910-16916]:BreakStatement[16910-16916]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[16933-16942]:SwitchCase[16933-16942]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[16963-16973]:ExpressionStatement[16963-16973]"
    }, {
      "left" : "t.transition(ScriptData);",
      "right" : "t.transition(ScriptData);",
      "info" : "ExpressionStatement[16994-17019]:ExpressionStatement[16994-17019]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[17040-17046]:BreakStatement[17040-17046]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[17063-17077]:SwitchCase[17063-17077]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[17098-17112]:ExpressionStatement[17098-17112]"
    }, {
      "left" : "t.emit(replacementChar);",
      "right" : "t.emit(replacementChar);",
      "info" : "ExpressionStatement[17133-17157]:ExpressionStatement[17133-17157]"
    }, {
      "left" : "t.transition(ScriptDataDoubleEscaped);",
      "right" : "t.transition(ScriptDataDoubleEscaped);",
      "info" : "ExpressionStatement[17178-17216]:ExpressionStatement[17178-17216]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[17237-17243]:BreakStatement[17237-17243]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[17260-17269]:SwitchCase[17260-17269]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[17290-17307]:ExpressionStatement[17290-17307]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[17328-17347]:ExpressionStatement[17328-17347]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[17368-17374]:BreakStatement[17368-17374]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[17391-17399]:SwitchCase[17391-17399]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[17420-17430]:ExpressionStatement[17420-17430]"
    }, {
      "left" : "t.transition(ScriptDataDoubleEscaped);",
      "right" : "t.transition(ScriptDataDoubleEscaped);",
      "info" : "ExpressionStatement[17451-17489]:ExpressionStatement[17451-17489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17613-17879]:Block[17613-17879]"
    }, {
      "left" : "if (r.matches('/'))",
      "right" : "if (r.matches('/'))",
      "info" : "IfStatement[17627-17869]:IfStatement[17627-17869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17647-17793]:Block[17647-17793]"
    }, {
      "left" : "t.emit('/');",
      "right" : "t.emit('/');",
      "info" : "ExpressionStatement[17665-17677]:ExpressionStatement[17665-17677]"
    }, {
      "left" : "t.createTempBuffer();",
      "right" : "t.createTempBuffer();",
      "info" : "ExpressionStatement[17694-17715]:ExpressionStatement[17694-17715]"
    }, {
      "left" : "t.advanceTransition(ScriptDataDoubleEscapeEnd);",
      "right" : "t.advanceTransition(ScriptDataDoubleEscapeEnd);",
      "info" : "ExpressionStatement[17732-17779]:ExpressionStatement[17732-17779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17799-17869]:Block[17799-17869]"
    }, {
      "left" : "t.transition(ScriptDataDoubleEscaped);",
      "right" : "t.transition(ScriptDataDoubleEscaped);",
      "info" : "ExpressionStatement[17817-17855]:ExpressionStatement[17817-17855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17969-18068]:Block[17969-18068]"
    }, {
      "left" : "handleDataDoubleEscapeTag(t,r, ScriptDataEscaped, ScriptDataDoubleEscaped);",
      "right" : "handleDataDoubleEscapeTag(t,r, ScriptDataEscaped, ScriptDataDoubleEscaped);",
      "info" : "ExpressionStatement[17983-18058]:ExpressionStatement[17983-18058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18181-19547]:Block[18181-19547]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[18195-18216]:VariableDeclarationStatement[18195-18216]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break; // ignore whitespace\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.newAttribute();\n                    r.unconsume();\n                    t.transition(AttributeName);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                case '\"':\n                case '\\'':\n                case '<':\n                case '=':\n                    t.error(this);\n                    t.tagPending.newAttribute();\n                    t.tagPending.appendAttributeName(c);\n                    t.transition(AttributeName);\n                    break;\n                default: // A-Z, anything else\n                    t.tagPending.newAttribute();\n                    r.unconsume();\n                    t.transition(AttributeName);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break; // ignore whitespace\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.newAttribute();\n                    r.unconsume();\n                    t.transition(AttributeName);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                case '\"':\n                case '\\'':\n                case '<':\n                case '=':\n                    t.error(this);\n                    t.tagPending.newAttribute();\n                    t.tagPending.appendAttributeName(c);\n                    t.transition(AttributeName);\n                    break;\n                default: // A-Z, anything else\n                    t.tagPending.newAttribute();\n                    r.unconsume();\n                    t.transition(AttributeName);\n            }",
      "info" : "SwitchStatement[18229-19537]:SwitchStatement[18229-19537]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[18258-18268]:SwitchCase[18258-18268]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[18285-18295]:SwitchCase[18285-18295]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[18312-18322]:SwitchCase[18312-18322]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[18339-18349]:SwitchCase[18339-18349]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[18366-18375]:SwitchCase[18366-18375]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18396-18402]:BreakStatement[18396-18402]"
    }, {
      "left" : "case '/':",
      "right" : "case '/':",
      "info" : "SwitchCase[18440-18449]:SwitchCase[18440-18449]"
    }, {
      "left" : "t.transition(SelfClosingStartTag);",
      "right" : "t.transition(SelfClosingStartTag);",
      "info" : "ExpressionStatement[18470-18504]:ExpressionStatement[18470-18504]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18525-18531]:BreakStatement[18525-18531]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[18548-18557]:SwitchCase[18548-18557]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[18578-18597]:ExpressionStatement[18578-18597]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[18618-18637]:ExpressionStatement[18618-18637]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18658-18664]:BreakStatement[18658-18664]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[18681-18695]:SwitchCase[18681-18695]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[18716-18730]:ExpressionStatement[18716-18730]"
    }, {
      "left" : "t.tagPending.newAttribute();",
      "right" : "t.tagPending.newAttribute();",
      "info" : "ExpressionStatement[18751-18779]:ExpressionStatement[18751-18779]"
    }, {
      "left" : "r.unconsume();",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[18800-18814]:ExpressionStatement[18800-18814]"
    }, {
      "left" : "t.transition(AttributeName);",
      "right" : "t.transition(AttributeName);",
      "info" : "ExpressionStatement[18835-18863]:ExpressionStatement[18835-18863]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18884-18890]:BreakStatement[18884-18890]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[18907-18916]:SwitchCase[18907-18916]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[18937-18954]:ExpressionStatement[18937-18954]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[18975-18994]:ExpressionStatement[18975-18994]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[19015-19021]:BreakStatement[19015-19021]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[19038-19047]:SwitchCase[19038-19047]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[19064-19074]:SwitchCase[19064-19074]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[19091-19100]:SwitchCase[19091-19100]"
    }, {
      "left" : "case '=':",
      "right" : "case '=':",
      "info" : "SwitchCase[19117-19126]:SwitchCase[19117-19126]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[19147-19161]:ExpressionStatement[19147-19161]"
    }, {
      "left" : "t.tagPending.newAttribute();",
      "right" : "t.tagPending.newAttribute();",
      "info" : "ExpressionStatement[19182-19210]:ExpressionStatement[19182-19210]"
    }, {
      "left" : "t.tagPending.appendAttributeName(c);",
      "right" : "t.tagPending.appendAttributeName(c);",
      "info" : "ExpressionStatement[19231-19267]:ExpressionStatement[19231-19267]"
    }, {
      "left" : "t.transition(AttributeName);",
      "right" : "t.transition(AttributeName);",
      "info" : "ExpressionStatement[19288-19316]:ExpressionStatement[19288-19316]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[19337-19343]:BreakStatement[19337-19343]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[19360-19368]:SwitchCase[19360-19368]"
    }, {
      "left" : "t.tagPending.newAttribute();",
      "right" : "t.tagPending.newAttribute();",
      "info" : "ExpressionStatement[19411-19439]:ExpressionStatement[19411-19439]"
    }, {
      "left" : "r.unconsume();",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[19460-19474]:ExpressionStatement[19460-19474]"
    }, {
      "left" : "t.transition(AttributeName);",
      "right" : "t.transition(AttributeName);",
      "info" : "ExpressionStatement[19495-19523]:ExpressionStatement[19495-19523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19663-20963]:Block[19663-20963]"
    }, {
      "left" : "String name = r.consumeToAnySorted(attributeNameCharsSorted);",
      "right" : "String name = r.consumeToAnySorted(attributeNameCharsSorted);",
      "info" : "VariableDeclarationStatement[19677-19738]:VariableDeclarationStatement[19677-19738]"
    }, {
      "left" : "t.tagPending.appendAttributeName(name);",
      "right" : "t.tagPending.appendAttributeName(name);",
      "info" : "ExpressionStatement[19751-19790]:ExpressionStatement[19751-19790]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[19804-19825]:VariableDeclarationStatement[19804-19825]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(AfterAttributeName);\n                    break;\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '=':\n                    t.transition(BeforeAttributeValue);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeName(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                case '\"':\n                case '\\'':\n                case '<':\n                    t.error(this);\n                    t.tagPending.appendAttributeName(c);\n                // no default, as covered in consumeToAny\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(AfterAttributeName);\n                    break;\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '=':\n                    t.transition(BeforeAttributeValue);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeName(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                case '\"':\n                case '\\'':\n                case '<':\n                    t.error(this);\n                    t.tagPending.appendAttributeName(c);\n                // no default, as covered in consumeToAny\n            }",
      "info" : "SwitchStatement[19838-20953]:SwitchStatement[19838-20953]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[19867-19877]:SwitchCase[19867-19877]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[19894-19904]:SwitchCase[19894-19904]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[19921-19931]:SwitchCase[19921-19931]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[19948-19958]:SwitchCase[19948-19958]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[19975-19984]:SwitchCase[19975-19984]"
    }, {
      "left" : "t.transition(AfterAttributeName);",
      "right" : "t.transition(AfterAttributeName);",
      "info" : "ExpressionStatement[20005-20038]:ExpressionStatement[20005-20038]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20059-20065]:BreakStatement[20059-20065]"
    }, {
      "left" : "case '/':",
      "right" : "case '/':",
      "info" : "SwitchCase[20082-20091]:SwitchCase[20082-20091]"
    }, {
      "left" : "t.transition(SelfClosingStartTag);",
      "right" : "t.transition(SelfClosingStartTag);",
      "info" : "ExpressionStatement[20112-20146]:ExpressionStatement[20112-20146]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20167-20173]:BreakStatement[20167-20173]"
    }, {
      "left" : "case '=':",
      "right" : "case '=':",
      "info" : "SwitchCase[20190-20199]:SwitchCase[20190-20199]"
    }, {
      "left" : "t.transition(BeforeAttributeValue);",
      "right" : "t.transition(BeforeAttributeValue);",
      "info" : "ExpressionStatement[20220-20255]:ExpressionStatement[20220-20255]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20276-20282]:BreakStatement[20276-20282]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[20299-20308]:SwitchCase[20299-20308]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[20329-20348]:ExpressionStatement[20329-20348]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[20369-20388]:ExpressionStatement[20369-20388]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20409-20415]:BreakStatement[20409-20415]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[20432-20446]:SwitchCase[20432-20446]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[20467-20481]:ExpressionStatement[20467-20481]"
    }, {
      "left" : "t.tagPending.appendAttributeName(replacementChar);",
      "right" : "t.tagPending.appendAttributeName(replacementChar);",
      "info" : "ExpressionStatement[20502-20552]:ExpressionStatement[20502-20552]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20573-20579]:BreakStatement[20573-20579]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[20596-20605]:SwitchCase[20596-20605]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[20626-20643]:ExpressionStatement[20626-20643]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[20664-20683]:ExpressionStatement[20664-20683]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20704-20710]:BreakStatement[20704-20710]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[20727-20736]:SwitchCase[20727-20736]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[20753-20763]:SwitchCase[20753-20763]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[20780-20789]:SwitchCase[20780-20789]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[20810-20824]:ExpressionStatement[20810-20824]"
    }, {
      "left" : "t.tagPending.appendAttributeName(c);",
      "right" : "t.tagPending.appendAttributeName(c);",
      "info" : "ExpressionStatement[20845-20881]:ExpressionStatement[20845-20881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21046-22491]:Block[21046-22491]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[21060-21081]:VariableDeclarationStatement[21060-21081]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    // ignore\n                    break;\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '=':\n                    t.transition(BeforeAttributeValue);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeName(replacementChar);\n                    t.transition(AttributeName);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                case '\"':\n                case '\\'':\n                case '<':\n                    t.error(this);\n                    t.tagPending.newAttribute();\n                    t.tagPending.appendAttributeName(c);\n                    t.transition(AttributeName);\n                    break;\n                default: // A-Z, anything else\n                    t.tagPending.newAttribute();\n                    r.unconsume();\n                    t.transition(AttributeName);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    // ignore\n                    break;\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '=':\n                    t.transition(BeforeAttributeValue);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeName(replacementChar);\n                    t.transition(AttributeName);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                case '\"':\n                case '\\'':\n                case '<':\n                    t.error(this);\n                    t.tagPending.newAttribute();\n                    t.tagPending.appendAttributeName(c);\n                    t.transition(AttributeName);\n                    break;\n                default: // A-Z, anything else\n                    t.tagPending.newAttribute();\n                    r.unconsume();\n                    t.transition(AttributeName);\n            }",
      "info" : "SwitchStatement[21094-22481]:SwitchStatement[21094-22481]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[21123-21133]:SwitchCase[21123-21133]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[21150-21160]:SwitchCase[21150-21160]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[21177-21187]:SwitchCase[21177-21187]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[21204-21214]:SwitchCase[21204-21214]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[21231-21240]:SwitchCase[21231-21240]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21291-21297]:BreakStatement[21291-21297]"
    }, {
      "left" : "case '/':",
      "right" : "case '/':",
      "info" : "SwitchCase[21314-21323]:SwitchCase[21314-21323]"
    }, {
      "left" : "t.transition(SelfClosingStartTag);",
      "right" : "t.transition(SelfClosingStartTag);",
      "info" : "ExpressionStatement[21344-21378]:ExpressionStatement[21344-21378]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21399-21405]:BreakStatement[21399-21405]"
    }, {
      "left" : "case '=':",
      "right" : "case '=':",
      "info" : "SwitchCase[21422-21431]:SwitchCase[21422-21431]"
    }, {
      "left" : "t.transition(BeforeAttributeValue);",
      "right" : "t.transition(BeforeAttributeValue);",
      "info" : "ExpressionStatement[21452-21487]:ExpressionStatement[21452-21487]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21508-21514]:BreakStatement[21508-21514]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[21531-21540]:SwitchCase[21531-21540]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[21561-21580]:ExpressionStatement[21561-21580]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[21601-21620]:ExpressionStatement[21601-21620]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21641-21647]:BreakStatement[21641-21647]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[21664-21678]:SwitchCase[21664-21678]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[21699-21713]:ExpressionStatement[21699-21713]"
    }, {
      "left" : "t.tagPending.appendAttributeName(replacementChar);",
      "right" : "t.tagPending.appendAttributeName(replacementChar);",
      "info" : "ExpressionStatement[21734-21784]:ExpressionStatement[21734-21784]"
    }, {
      "left" : "t.transition(AttributeName);",
      "right" : "t.transition(AttributeName);",
      "info" : "ExpressionStatement[21805-21833]:ExpressionStatement[21805-21833]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21854-21860]:BreakStatement[21854-21860]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[21877-21886]:SwitchCase[21877-21886]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[21907-21924]:ExpressionStatement[21907-21924]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[21945-21964]:ExpressionStatement[21945-21964]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21985-21991]:BreakStatement[21985-21991]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[22008-22017]:SwitchCase[22008-22017]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[22034-22044]:SwitchCase[22034-22044]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[22061-22070]:SwitchCase[22061-22070]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[22091-22105]:ExpressionStatement[22091-22105]"
    }, {
      "left" : "t.tagPending.newAttribute();",
      "right" : "t.tagPending.newAttribute();",
      "info" : "ExpressionStatement[22126-22154]:ExpressionStatement[22126-22154]"
    }, {
      "left" : "t.tagPending.appendAttributeName(c);",
      "right" : "t.tagPending.appendAttributeName(c);",
      "info" : "ExpressionStatement[22175-22211]:ExpressionStatement[22175-22211]"
    }, {
      "left" : "t.transition(AttributeName);",
      "right" : "t.transition(AttributeName);",
      "info" : "ExpressionStatement[22232-22260]:ExpressionStatement[22232-22260]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[22281-22287]:BreakStatement[22281-22287]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[22304-22312]:SwitchCase[22304-22312]"
    }, {
      "left" : "t.tagPending.newAttribute();",
      "right" : "t.tagPending.newAttribute();",
      "info" : "ExpressionStatement[22355-22383]:ExpressionStatement[22355-22383]"
    }, {
      "left" : "r.unconsume();",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[22404-22418]:ExpressionStatement[22404-22418]"
    }, {
      "left" : "t.transition(AttributeName);",
      "right" : "t.transition(AttributeName);",
      "info" : "ExpressionStatement[22439-22467]:ExpressionStatement[22439-22467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22576-24170]:Block[22576-24170]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[22590-22611]:VariableDeclarationStatement[22590-22611]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    // ignore\n                    break;\n                case '\"':\n                    t.transition(AttributeValue_doubleQuoted);\n                    break;\n                case '&':\n                    r.unconsume();\n                    t.transition(AttributeValue_unquoted);\n                    break;\n                case '\\'':\n                    t.transition(AttributeValue_singleQuoted);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(replacementChar);\n                    t.transition(AttributeValue_unquoted);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case '<':\n                case '=':\n                case '`':\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(c);\n                    t.transition(AttributeValue_unquoted);\n                    break;\n                default:\n                    r.unconsume();\n                    t.transition(AttributeValue_unquoted);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    // ignore\n                    break;\n                case '\"':\n                    t.transition(AttributeValue_doubleQuoted);\n                    break;\n                case '&':\n                    r.unconsume();\n                    t.transition(AttributeValue_unquoted);\n                    break;\n                case '\\'':\n                    t.transition(AttributeValue_singleQuoted);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(replacementChar);\n                    t.transition(AttributeValue_unquoted);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case '<':\n                case '=':\n                case '`':\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(c);\n                    t.transition(AttributeValue_unquoted);\n                    break;\n                default:\n                    r.unconsume();\n                    t.transition(AttributeValue_unquoted);\n            }",
      "info" : "SwitchStatement[22624-24160]:SwitchStatement[22624-24160]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[22653-22663]:SwitchCase[22653-22663]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[22680-22690]:SwitchCase[22680-22690]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[22707-22717]:SwitchCase[22707-22717]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[22734-22744]:SwitchCase[22734-22744]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[22761-22770]:SwitchCase[22761-22770]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[22821-22827]:BreakStatement[22821-22827]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[22844-22853]:SwitchCase[22844-22853]"
    }, {
      "left" : "t.transition(AttributeValue_doubleQuoted);",
      "right" : "t.transition(AttributeValue_doubleQuoted);",
      "info" : "ExpressionStatement[22874-22916]:ExpressionStatement[22874-22916]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[22937-22943]:BreakStatement[22937-22943]"
    }, {
      "left" : "case '&':",
      "right" : "case '&':",
      "info" : "SwitchCase[22960-22969]:SwitchCase[22960-22969]"
    }, {
      "left" : "r.unconsume();",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[22990-23004]:ExpressionStatement[22990-23004]"
    }, {
      "left" : "t.transition(AttributeValue_unquoted);",
      "right" : "t.transition(AttributeValue_unquoted);",
      "info" : "ExpressionStatement[23025-23063]:ExpressionStatement[23025-23063]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[23084-23090]:BreakStatement[23084-23090]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[23107-23117]:SwitchCase[23107-23117]"
    }, {
      "left" : "t.transition(AttributeValue_singleQuoted);",
      "right" : "t.transition(AttributeValue_singleQuoted);",
      "info" : "ExpressionStatement[23138-23180]:ExpressionStatement[23138-23180]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[23201-23207]:BreakStatement[23201-23207]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[23224-23238]:SwitchCase[23224-23238]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[23259-23273]:ExpressionStatement[23259-23273]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(replacementChar);",
      "right" : "t.tagPending.appendAttributeValue(replacementChar);",
      "info" : "ExpressionStatement[23294-23345]:ExpressionStatement[23294-23345]"
    }, {
      "left" : "t.transition(AttributeValue_unquoted);",
      "right" : "t.transition(AttributeValue_unquoted);",
      "info" : "ExpressionStatement[23366-23404]:ExpressionStatement[23366-23404]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[23425-23431]:BreakStatement[23425-23431]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[23448-23457]:SwitchCase[23448-23457]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[23478-23495]:ExpressionStatement[23478-23495]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[23516-23535]:ExpressionStatement[23516-23535]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[23556-23575]:ExpressionStatement[23556-23575]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[23596-23602]:BreakStatement[23596-23602]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[23619-23628]:SwitchCase[23619-23628]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[23649-23663]:ExpressionStatement[23649-23663]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[23684-23703]:ExpressionStatement[23684-23703]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[23724-23743]:ExpressionStatement[23724-23743]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[23764-23770]:BreakStatement[23764-23770]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[23787-23796]:SwitchCase[23787-23796]"
    }, {
      "left" : "case '=':",
      "right" : "case '=':",
      "info" : "SwitchCase[23813-23822]:SwitchCase[23813-23822]"
    }, {
      "left" : "case '`':",
      "right" : "case '`':",
      "info" : "SwitchCase[23839-23848]:SwitchCase[23839-23848]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[23869-23883]:ExpressionStatement[23869-23883]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(c);",
      "right" : "t.tagPending.appendAttributeValue(c);",
      "info" : "ExpressionStatement[23904-23941]:ExpressionStatement[23904-23941]"
    }, {
      "left" : "t.transition(AttributeValue_unquoted);",
      "right" : "t.transition(AttributeValue_unquoted);",
      "info" : "ExpressionStatement[23962-24000]:ExpressionStatement[23962-24000]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[24021-24027]:BreakStatement[24021-24027]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[24044-24052]:SwitchCase[24044-24052]"
    }, {
      "left" : "r.unconsume();",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[24073-24087]:ExpressionStatement[24073-24087]"
    }, {
      "left" : "t.transition(AttributeValue_unquoted);",
      "right" : "t.transition(AttributeValue_unquoted);",
      "info" : "ExpressionStatement[24108-24146]:ExpressionStatement[24108-24146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24262-25378]:Block[24262-25378]"
    }, {
      "left" : "String value = r.consumeToAny(attributeDoubleValueCharsSorted);",
      "right" : "String value = r.consumeToAny(attributeDoubleValueCharsSorted);",
      "info" : "VariableDeclarationStatement[24276-24339]:VariableDeclarationStatement[24276-24339]"
    }, {
      "left" : "if (value.length() > 0)",
      "right" : "if (value.length() > 0)",
      "info" : "IfStatement[24352-24505]:IfStatement[24352-24505]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(value);",
      "right" : "t.tagPending.appendAttributeValue(value);",
      "info" : "ExpressionStatement[24392-24433]:ExpressionStatement[24392-24433]"
    }, {
      "left" : "t.tagPending.setEmptyAttributeValue();",
      "right" : "t.tagPending.setEmptyAttributeValue();",
      "info" : "ExpressionStatement[24467-24505]:ExpressionStatement[24467-24505]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[24519-24540]:VariableDeclarationStatement[24519-24540]"
    }, {
      "left" : "switch (c) {\n                case '\"':\n                    t.transition(AfterAttributeValue_quoted);\n                    break;\n                case '&':\n                    int[] ref = t.consumeCharacterReference('\"', true);\n                    if (ref != null)\n                        t.tagPending.appendAttributeValue(ref);\n                    else\n                        t.tagPending.appendAttributeValue('&');\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                // no default, handled in consume to any above\n            }",
      "right" : "switch (c) {\n                case '\"':\n                    t.transition(AfterAttributeValue_quoted);\n                    break;\n                case '&':\n                    int[] ref = t.consumeCharacterReference('\"', true);\n                    if (ref != null)\n                        t.tagPending.appendAttributeValue(ref);\n                    else\n                        t.tagPending.appendAttributeValue('&');\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                // no default, handled in consume to any above\n            }",
      "info" : "SwitchStatement[24553-25368]:SwitchStatement[24553-25368]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[24582-24591]:SwitchCase[24582-24591]"
    }, {
      "left" : "t.transition(AfterAttributeValue_quoted);",
      "right" : "t.transition(AfterAttributeValue_quoted);",
      "info" : "ExpressionStatement[24612-24653]:ExpressionStatement[24612-24653]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[24674-24680]:BreakStatement[24674-24680]"
    }, {
      "left" : "case '&':",
      "right" : "case '&':",
      "info" : "SwitchCase[24697-24706]:SwitchCase[24697-24706]"
    }, {
      "left" : "int[] ref = t.consumeCharacterReference('\"', true);",
      "right" : "int[] ref = t.consumeCharacterReference('\"', true);",
      "info" : "VariableDeclarationStatement[24727-24778]:VariableDeclarationStatement[24727-24778]"
    }, {
      "left" : "if (ref != null)",
      "right" : "if (ref != null)",
      "info" : "IfStatement[24799-24968]:IfStatement[24799-24968]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(ref);",
      "right" : "t.tagPending.appendAttributeValue(ref);",
      "info" : "ExpressionStatement[24840-24879]:ExpressionStatement[24840-24879]"
    }, {
      "left" : "t.tagPending.appendAttributeValue('&');",
      "right" : "t.tagPending.appendAttributeValue('&');",
      "info" : "ExpressionStatement[24929-24968]:ExpressionStatement[24929-24968]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[24989-24995]:BreakStatement[24989-24995]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[25012-25026]:SwitchCase[25012-25026]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[25047-25061]:ExpressionStatement[25047-25061]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(replacementChar);",
      "right" : "t.tagPending.appendAttributeValue(replacementChar);",
      "info" : "ExpressionStatement[25082-25133]:ExpressionStatement[25082-25133]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[25154-25160]:BreakStatement[25154-25160]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[25177-25186]:SwitchCase[25177-25186]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[25207-25224]:ExpressionStatement[25207-25224]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[25245-25264]:ExpressionStatement[25245-25264]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[25285-25291]:BreakStatement[25285-25291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25470-26588]:Block[25470-26588]"
    }, {
      "left" : "String value = r.consumeToAny(attributeSingleValueCharsSorted);",
      "right" : "String value = r.consumeToAny(attributeSingleValueCharsSorted);",
      "info" : "VariableDeclarationStatement[25484-25547]:VariableDeclarationStatement[25484-25547]"
    }, {
      "left" : "if (value.length() > 0)",
      "right" : "if (value.length() > 0)",
      "info" : "IfStatement[25560-25713]:IfStatement[25560-25713]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(value);",
      "right" : "t.tagPending.appendAttributeValue(value);",
      "info" : "ExpressionStatement[25600-25641]:ExpressionStatement[25600-25641]"
    }, {
      "left" : "t.tagPending.setEmptyAttributeValue();",
      "right" : "t.tagPending.setEmptyAttributeValue();",
      "info" : "ExpressionStatement[25675-25713]:ExpressionStatement[25675-25713]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[25727-25748]:VariableDeclarationStatement[25727-25748]"
    }, {
      "left" : "switch (c) {\n                case '\\'':\n                    t.transition(AfterAttributeValue_quoted);\n                    break;\n                case '&':\n                    int[] ref = t.consumeCharacterReference('\\'', true);\n                    if (ref != null)\n                        t.tagPending.appendAttributeValue(ref);\n                    else\n                        t.tagPending.appendAttributeValue('&');\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                // no default, handled in consume to any above\n            }",
      "right" : "switch (c) {\n                case '\\'':\n                    t.transition(AfterAttributeValue_quoted);\n                    break;\n                case '&':\n                    int[] ref = t.consumeCharacterReference('\\'', true);\n                    if (ref != null)\n                        t.tagPending.appendAttributeValue(ref);\n                    else\n                        t.tagPending.appendAttributeValue('&');\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                // no default, handled in consume to any above\n            }",
      "info" : "SwitchStatement[25761-26578]:SwitchStatement[25761-26578]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[25790-25800]:SwitchCase[25790-25800]"
    }, {
      "left" : "t.transition(AfterAttributeValue_quoted);",
      "right" : "t.transition(AfterAttributeValue_quoted);",
      "info" : "ExpressionStatement[25821-25862]:ExpressionStatement[25821-25862]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[25883-25889]:BreakStatement[25883-25889]"
    }, {
      "left" : "case '&':",
      "right" : "case '&':",
      "info" : "SwitchCase[25906-25915]:SwitchCase[25906-25915]"
    }, {
      "left" : "int[] ref = t.consumeCharacterReference('\\'', true);",
      "right" : "int[] ref = t.consumeCharacterReference('\\'', true);",
      "info" : "VariableDeclarationStatement[25936-25988]:VariableDeclarationStatement[25936-25988]"
    }, {
      "left" : "if (ref != null)",
      "right" : "if (ref != null)",
      "info" : "IfStatement[26009-26178]:IfStatement[26009-26178]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(ref);",
      "right" : "t.tagPending.appendAttributeValue(ref);",
      "info" : "ExpressionStatement[26050-26089]:ExpressionStatement[26050-26089]"
    }, {
      "left" : "t.tagPending.appendAttributeValue('&');",
      "right" : "t.tagPending.appendAttributeValue('&');",
      "info" : "ExpressionStatement[26139-26178]:ExpressionStatement[26139-26178]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[26199-26205]:BreakStatement[26199-26205]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[26222-26236]:SwitchCase[26222-26236]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[26257-26271]:ExpressionStatement[26257-26271]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(replacementChar);",
      "right" : "t.tagPending.appendAttributeValue(replacementChar);",
      "info" : "ExpressionStatement[26292-26343]:ExpressionStatement[26292-26343]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[26364-26370]:BreakStatement[26364-26370]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[26387-26396]:SwitchCase[26387-26396]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[26417-26434]:ExpressionStatement[26417-26434]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[26455-26474]:ExpressionStatement[26455-26474]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[26495-26501]:BreakStatement[26495-26501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26676-28203]:Block[26676-28203]"
    }, {
      "left" : "String value = r.consumeToAnySorted(attributeValueUnquoted);",
      "right" : "String value = r.consumeToAnySorted(attributeValueUnquoted);",
      "info" : "VariableDeclarationStatement[26690-26750]:VariableDeclarationStatement[26690-26750]"
    }, {
      "left" : "if (value.length() > 0)",
      "right" : "if (value.length() > 0)",
      "info" : "IfStatement[26763-26844]:IfStatement[26763-26844]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(value);",
      "right" : "t.tagPending.appendAttributeValue(value);",
      "info" : "ExpressionStatement[26803-26844]:ExpressionStatement[26803-26844]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[26858-26879]:VariableDeclarationStatement[26858-26879]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeAttributeName);\n                    break;\n                case '&':\n                    int[] ref = t.consumeCharacterReference('>', true);\n                    if (ref != null)\n                        t.tagPending.appendAttributeValue(ref);\n                    else\n                        t.tagPending.appendAttributeValue('&');\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                case '\"':\n                case '\\'':\n                case '<':\n                case '=':\n                case '`':\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(c);\n                    break;\n                // no default, handled in consume to any above\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeAttributeName);\n                    break;\n                case '&':\n                    int[] ref = t.consumeCharacterReference('>', true);\n                    if (ref != null)\n                        t.tagPending.appendAttributeValue(ref);\n                    else\n                        t.tagPending.appendAttributeValue('&');\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                case '\"':\n                case '\\'':\n                case '<':\n                case '=':\n                case '`':\n                    t.error(this);\n                    t.tagPending.appendAttributeValue(c);\n                    break;\n                // no default, handled in consume to any above\n            }",
      "info" : "SwitchStatement[26892-28192]:SwitchStatement[26892-28192]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[26921-26931]:SwitchCase[26921-26931]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[26948-26958]:SwitchCase[26948-26958]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[26975-26985]:SwitchCase[26975-26985]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[27002-27012]:SwitchCase[27002-27012]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[27029-27038]:SwitchCase[27029-27038]"
    }, {
      "left" : "t.transition(BeforeAttributeName);",
      "right" : "t.transition(BeforeAttributeName);",
      "info" : "ExpressionStatement[27059-27093]:ExpressionStatement[27059-27093]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27114-27120]:BreakStatement[27114-27120]"
    }, {
      "left" : "case '&':",
      "right" : "case '&':",
      "info" : "SwitchCase[27137-27146]:SwitchCase[27137-27146]"
    }, {
      "left" : "int[] ref = t.consumeCharacterReference('>', true);",
      "right" : "int[] ref = t.consumeCharacterReference('>', true);",
      "info" : "VariableDeclarationStatement[27167-27218]:VariableDeclarationStatement[27167-27218]"
    }, {
      "left" : "if (ref != null)",
      "right" : "if (ref != null)",
      "info" : "IfStatement[27239-27408]:IfStatement[27239-27408]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(ref);",
      "right" : "t.tagPending.appendAttributeValue(ref);",
      "info" : "ExpressionStatement[27280-27319]:ExpressionStatement[27280-27319]"
    }, {
      "left" : "t.tagPending.appendAttributeValue('&');",
      "right" : "t.tagPending.appendAttributeValue('&');",
      "info" : "ExpressionStatement[27369-27408]:ExpressionStatement[27369-27408]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27429-27435]:BreakStatement[27429-27435]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[27452-27461]:SwitchCase[27452-27461]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[27482-27501]:ExpressionStatement[27482-27501]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[27522-27541]:ExpressionStatement[27522-27541]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27562-27568]:BreakStatement[27562-27568]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[27585-27599]:SwitchCase[27585-27599]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[27620-27634]:ExpressionStatement[27620-27634]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(replacementChar);",
      "right" : "t.tagPending.appendAttributeValue(replacementChar);",
      "info" : "ExpressionStatement[27655-27706]:ExpressionStatement[27655-27706]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27727-27733]:BreakStatement[27727-27733]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[27750-27759]:SwitchCase[27750-27759]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[27780-27797]:ExpressionStatement[27780-27797]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[27818-27837]:ExpressionStatement[27818-27837]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[27858-27864]:BreakStatement[27858-27864]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[27881-27890]:SwitchCase[27881-27890]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[27907-27917]:SwitchCase[27907-27917]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[27934-27943]:SwitchCase[27934-27943]"
    }, {
      "left" : "case '=':",
      "right" : "case '=':",
      "info" : "SwitchCase[27960-27969]:SwitchCase[27960-27969]"
    }, {
      "left" : "case '`':",
      "right" : "case '`':",
      "info" : "SwitchCase[27986-27995]:SwitchCase[27986-27995]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[28016-28030]:ExpressionStatement[28016-28030]"
    }, {
      "left" : "t.tagPending.appendAttributeValue(c);",
      "right" : "t.tagPending.appendAttributeValue(c);",
      "info" : "ExpressionStatement[28051-28088]:ExpressionStatement[28051-28088]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28109-28115]:BreakStatement[28109-28115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28357-29180]:Block[28357-29180]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[28371-28392]:VariableDeclarationStatement[28371-28392]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeAttributeName);\n                    break;\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    r.unconsume();\n                    t.transition(BeforeAttributeName);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeAttributeName);\n                    break;\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    r.unconsume();\n                    t.transition(BeforeAttributeName);\n            }",
      "info" : "SwitchStatement[28405-29169]:SwitchStatement[28405-29169]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[28434-28444]:SwitchCase[28434-28444]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[28461-28471]:SwitchCase[28461-28471]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[28488-28498]:SwitchCase[28488-28498]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[28515-28525]:SwitchCase[28515-28525]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[28542-28551]:SwitchCase[28542-28551]"
    }, {
      "left" : "t.transition(BeforeAttributeName);",
      "right" : "t.transition(BeforeAttributeName);",
      "info" : "ExpressionStatement[28572-28606]:ExpressionStatement[28572-28606]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28627-28633]:BreakStatement[28627-28633]"
    }, {
      "left" : "case '/':",
      "right" : "case '/':",
      "info" : "SwitchCase[28650-28659]:SwitchCase[28650-28659]"
    }, {
      "left" : "t.transition(SelfClosingStartTag);",
      "right" : "t.transition(SelfClosingStartTag);",
      "info" : "ExpressionStatement[28680-28714]:ExpressionStatement[28680-28714]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28735-28741]:BreakStatement[28735-28741]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[28758-28767]:SwitchCase[28758-28767]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[28788-28807]:ExpressionStatement[28788-28807]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[28828-28847]:ExpressionStatement[28828-28847]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28868-28874]:BreakStatement[28868-28874]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[28891-28900]:SwitchCase[28891-28900]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[28921-28938]:ExpressionStatement[28921-28938]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[28959-28978]:ExpressionStatement[28959-28978]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[28999-29005]:BreakStatement[28999-29005]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[29022-29030]:SwitchCase[29022-29030]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[29051-29065]:ExpressionStatement[29051-29065]"
    }, {
      "left" : "r.unconsume();",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[29086-29100]:ExpressionStatement[29086-29100]"
    }, {
      "left" : "t.transition(BeforeAttributeName);",
      "right" : "t.transition(BeforeAttributeName);",
      "info" : "ExpressionStatement[29121-29155]:ExpressionStatement[29121-29155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29264-29780]:Block[29264-29815]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[29278-29299]:VariableDeclarationStatement[29278-29299]"
    }, {
      "left" : "switch (c) {\n                case '>':\n                    t.tagPending.selfClosing = true;\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.transition(BeforeAttributeName);\n            }",
      "right" : "switch (c) {\n                case '>':\n                    t.tagPending.selfClosing = true;\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    r.unconsume();\n                    t.transition(BeforeAttributeName);\n            }",
      "info" : "SwitchStatement[29312-29770]:SwitchStatement[29312-29805]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[29341-29350]:SwitchCase[29341-29350]"
    }, {
      "left" : "t.tagPending.selfClosing = true;",
      "right" : "t.tagPending.selfClosing = true;",
      "info" : "ExpressionStatement[29371-29403]:ExpressionStatement[29371-29403]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[29424-29443]:ExpressionStatement[29424-29443]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[29464-29483]:ExpressionStatement[29464-29483]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29504-29510]:BreakStatement[29504-29510]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[29527-29536]:SwitchCase[29527-29536]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[29557-29574]:ExpressionStatement[29557-29574]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[29595-29614]:ExpressionStatement[29595-29614]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[29635-29641]:BreakStatement[29635-29641]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[29658-29666]:SwitchCase[29658-29666]"
    }, {
      "left" : "t.error(this);",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[29687-29701]:ExpressionStatement[29722-29736]"
    }, {
      "left" : "t.transition(BeforeAttributeName);",
      "right" : "t.transition(BeforeAttributeName);",
      "info" : "ExpressionStatement[29722-29756]:ExpressionStatement[29757-29791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29857-30306]:Block[29892-30341]"
    }, {
      "left" : "r.unconsume();",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[30017-30031]:ExpressionStatement[30052-30066]"
    }, {
      "left" : "Token.Comment comment = new Token.Comment();",
      "right" : "Token.Comment comment = new Token.Comment();",
      "info" : "VariableDeclarationStatement[30044-30088]:VariableDeclarationStatement[30079-30123]"
    }, {
      "left" : "comment.bogus = true;",
      "right" : "comment.bogus = true;",
      "info" : "ExpressionStatement[30101-30122]:ExpressionStatement[30136-30157]"
    }, {
      "left" : "comment.data.append(r.consumeTo('>'));",
      "right" : "comment.data.append(r.consumeTo('>'));",
      "info" : "ExpressionStatement[30135-30173]:ExpressionStatement[30170-30208]"
    }, {
      "left" : "t.emit(comment);",
      "right" : "t.emit(comment);",
      "info" : "ExpressionStatement[30241-30257]:ExpressionStatement[30276-30292]"
    }, {
      "left" : "t.advanceTransition(Data);",
      "right" : "t.advanceTransition(Data);",
      "info" : "ExpressionStatement[30270-30296]:ExpressionStatement[30305-30331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30392-31176]:Block[30427-31211]"
    }, {
      "left" : "if (r.matchConsume(\"--\"))",
      "right" : "if (r.matchConsume(\"--\"))",
      "info" : "IfStatement[30406-31166]:IfStatement[30441-31201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30432-30533]:Block[30467-30568]"
    }, {
      "left" : "t.createCommentPending();",
      "right" : "t.createCommentPending();",
      "info" : "ExpressionStatement[30450-30475]:ExpressionStatement[30485-30510]"
    }, {
      "left" : "t.transition(CommentStart);",
      "right" : "t.transition(CommentStart);",
      "info" : "ExpressionStatement[30492-30519]:ExpressionStatement[30527-30554]"
    }, {
      "left" : "if (r.matchConsumeIgnoreCase(\"DOCTYPE\"))",
      "right" : "if (r.matchConsumeIgnoreCase(\"DOCTYPE\"))",
      "info" : "IfStatement[30539-31166]:IfStatement[30574-31201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30580-30634]:Block[30615-30669]"
    }, {
      "left" : "t.transition(Doctype);",
      "right" : "t.transition(Doctype);",
      "info" : "ExpressionStatement[30598-30620]:ExpressionStatement[30633-30655]"
    }, {
      "left" : "if (r.matchConsume(\"[CDATA[\"))",
      "right" : "if (r.matchConsume(\"[CDATA[\"))",
      "info" : "IfStatement[30640-31166]:IfStatement[30675-31201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30671-30998]:Block[30706-31033]"
    }, {
      "left" : "t.transition(CdataSection);",
      "right" : "t.transition(CdataSection);",
      "info" : "ExpressionStatement[30957-30984]:ExpressionStatement[30992-31019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31004-31166]:Block[31039-31201]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[31022-31036]:ExpressionStatement[31057-31071]"
    }, {
      "left" : "t.advanceTransition(BogusComment);",
      "right" : "t.advanceTransition(BogusComment);",
      "info" : "ExpressionStatement[31053-31087]:ExpressionStatement[31088-31122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31253-32113]:Block[31288-32148]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[31267-31288]:VariableDeclarationStatement[31302-31323]"
    }, {
      "left" : "switch (c) {\n                case '-':\n                    t.transition(CommentStartDash);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.commentPending.data.append(replacementChar);\n                    t.transition(Comment);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.commentPending.data.append(c);\n                    t.transition(Comment);\n            }",
      "right" : "switch (c) {\n                case '-':\n                    t.transition(CommentStartDash);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.commentPending.data.append(replacementChar);\n                    t.transition(Comment);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.commentPending.data.append(c);\n                    t.transition(Comment);\n            }",
      "info" : "SwitchStatement[31301-32103]:SwitchStatement[31336-32138]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[31330-31339]:SwitchCase[31365-31374]"
    }, {
      "left" : "t.transition(CommentStartDash);",
      "right" : "t.transition(CommentStartDash);",
      "info" : "ExpressionStatement[31360-31391]:ExpressionStatement[31395-31426]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[31412-31418]:BreakStatement[31447-31453]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[31435-31449]:SwitchCase[31470-31484]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[31470-31484]:ExpressionStatement[31505-31519]"
    }, {
      "left" : "t.commentPending.data.append(replacementChar);",
      "right" : "t.commentPending.data.append(replacementChar);",
      "info" : "ExpressionStatement[31505-31551]:ExpressionStatement[31540-31586]"
    }, {
      "left" : "t.transition(Comment);",
      "right" : "t.transition(Comment);",
      "info" : "ExpressionStatement[31572-31594]:ExpressionStatement[31607-31629]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[31615-31621]:BreakStatement[31650-31656]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[31638-31647]:SwitchCase[31673-31682]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[31668-31682]:ExpressionStatement[31703-31717]"
    }, {
      "left" : "t.emitCommentPending();",
      "right" : "t.emitCommentPending();",
      "info" : "ExpressionStatement[31703-31726]:ExpressionStatement[31738-31761]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[31747-31766]:ExpressionStatement[31782-31801]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[31787-31793]:BreakStatement[31822-31828]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[31810-31819]:SwitchCase[31845-31854]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[31840-31857]:ExpressionStatement[31875-31892]"
    }, {
      "left" : "t.emitCommentPending();",
      "right" : "t.emitCommentPending();",
      "info" : "ExpressionStatement[31878-31901]:ExpressionStatement[31913-31936]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[31922-31941]:ExpressionStatement[31957-31976]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[31962-31968]:BreakStatement[31997-32003]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[31985-31993]:SwitchCase[32020-32028]"
    }, {
      "left" : "t.commentPending.data.append(c);",
      "right" : "t.commentPending.data.append(c);",
      "info" : "ExpressionStatement[32014-32046]:ExpressionStatement[32049-32081]"
    }, {
      "left" : "t.transition(Comment);",
      "right" : "t.transition(Comment);",
      "info" : "ExpressionStatement[32067-32089]:ExpressionStatement[32102-32124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32194-33054]:Block[32229-33089]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[32208-32229]:VariableDeclarationStatement[32243-32264]"
    }, {
      "left" : "switch (c) {\n                case '-':\n                    t.transition(CommentStartDash);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.commentPending.data.append(replacementChar);\n                    t.transition(Comment);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.commentPending.data.append(c);\n                    t.transition(Comment);\n            }",
      "right" : "switch (c) {\n                case '-':\n                    t.transition(CommentStartDash);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.commentPending.data.append(replacementChar);\n                    t.transition(Comment);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.commentPending.data.append(c);\n                    t.transition(Comment);\n            }",
      "info" : "SwitchStatement[32242-33044]:SwitchStatement[32277-33079]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[32271-32280]:SwitchCase[32306-32315]"
    }, {
      "left" : "t.transition(CommentStartDash);",
      "right" : "t.transition(CommentStartDash);",
      "info" : "ExpressionStatement[32301-32332]:ExpressionStatement[32336-32367]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[32353-32359]:BreakStatement[32388-32394]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[32376-32390]:SwitchCase[32411-32425]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[32411-32425]:ExpressionStatement[32446-32460]"
    }, {
      "left" : "t.commentPending.data.append(replacementChar);",
      "right" : "t.commentPending.data.append(replacementChar);",
      "info" : "ExpressionStatement[32446-32492]:ExpressionStatement[32481-32527]"
    }, {
      "left" : "t.transition(Comment);",
      "right" : "t.transition(Comment);",
      "info" : "ExpressionStatement[32513-32535]:ExpressionStatement[32548-32570]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[32556-32562]:BreakStatement[32591-32597]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[32579-32588]:SwitchCase[32614-32623]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[32609-32623]:ExpressionStatement[32644-32658]"
    }, {
      "left" : "t.emitCommentPending();",
      "right" : "t.emitCommentPending();",
      "info" : "ExpressionStatement[32644-32667]:ExpressionStatement[32679-32702]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[32688-32707]:ExpressionStatement[32723-32742]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[32728-32734]:BreakStatement[32763-32769]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[32751-32760]:SwitchCase[32786-32795]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[32781-32798]:ExpressionStatement[32816-32833]"
    }, {
      "left" : "t.emitCommentPending();",
      "right" : "t.emitCommentPending();",
      "info" : "ExpressionStatement[32819-32842]:ExpressionStatement[32854-32877]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[32863-32882]:ExpressionStatement[32898-32917]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[32903-32909]:BreakStatement[32938-32944]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[32926-32934]:SwitchCase[32961-32969]"
    }, {
      "left" : "t.commentPending.data.append(c);",
      "right" : "t.commentPending.data.append(c);",
      "info" : "ExpressionStatement[32955-32987]:ExpressionStatement[32990-33022]"
    }, {
      "left" : "t.transition(Comment);",
      "right" : "t.transition(Comment);",
      "info" : "ExpressionStatement[33008-33030]:ExpressionStatement[33043-33065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33126-33794]:Block[33161-33829]"
    }, {
      "left" : "char c = r.current();",
      "right" : "char c = r.current();",
      "info" : "VariableDeclarationStatement[33140-33161]:VariableDeclarationStatement[33175-33196]"
    }, {
      "left" : "switch (c) {\n                case '-':\n                    t.advanceTransition(CommentEndDash);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    r.advance();\n                    t.commentPending.data.append(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.commentPending.data.append(r.consumeToAny('-', nullChar));\n            }",
      "right" : "switch (c) {\n                case '-':\n                    t.advanceTransition(CommentEndDash);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    r.advance();\n                    t.commentPending.data.append(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.commentPending.data.append(r.consumeToAny('-', nullChar));\n            }",
      "info" : "SwitchStatement[33174-33784]:SwitchStatement[33209-33819]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[33203-33212]:SwitchCase[33238-33247]"
    }, {
      "left" : "t.advanceTransition(CommentEndDash);",
      "right" : "t.advanceTransition(CommentEndDash);",
      "info" : "ExpressionStatement[33233-33269]:ExpressionStatement[33268-33304]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[33290-33296]:BreakStatement[33325-33331]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[33313-33327]:SwitchCase[33348-33362]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[33348-33362]:ExpressionStatement[33383-33397]"
    }, {
      "left" : "r.advance();",
      "right" : "r.advance();",
      "info" : "ExpressionStatement[33383-33395]:ExpressionStatement[33418-33430]"
    }, {
      "left" : "t.commentPending.data.append(replacementChar);",
      "right" : "t.commentPending.data.append(replacementChar);",
      "info" : "ExpressionStatement[33416-33462]:ExpressionStatement[33451-33497]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[33483-33489]:BreakStatement[33518-33524]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[33506-33515]:SwitchCase[33541-33550]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[33536-33553]:ExpressionStatement[33571-33588]"
    }, {
      "left" : "t.emitCommentPending();",
      "right" : "t.emitCommentPending();",
      "info" : "ExpressionStatement[33574-33597]:ExpressionStatement[33609-33632]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[33618-33637]:ExpressionStatement[33653-33672]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[33658-33664]:BreakStatement[33693-33699]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[33681-33689]:SwitchCase[33716-33724]"
    }, {
      "left" : "t.commentPending.data.append(r.consumeToAny('-', nullChar));",
      "right" : "t.commentPending.data.append(r.consumeToAny('-', nullChar));",
      "info" : "ExpressionStatement[33710-33770]:ExpressionStatement[33745-33805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33873-34579]:Block[33908-34614]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[33887-33908]:VariableDeclarationStatement[33922-33943]"
    }, {
      "left" : "switch (c) {\n                case '-':\n                    t.transition(CommentEnd);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.commentPending.data.append('-').append(replacementChar);\n                    t.transition(Comment);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.commentPending.data.append('-').append(c);\n                    t.transition(Comment);\n            }",
      "right" : "switch (c) {\n                case '-':\n                    t.transition(CommentEnd);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.commentPending.data.append('-').append(replacementChar);\n                    t.transition(Comment);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.commentPending.data.append('-').append(c);\n                    t.transition(Comment);\n            }",
      "info" : "SwitchStatement[33921-34569]:SwitchStatement[33956-34604]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[33950-33959]:SwitchCase[33985-33994]"
    }, {
      "left" : "t.transition(CommentEnd);",
      "right" : "t.transition(CommentEnd);",
      "info" : "ExpressionStatement[33980-34005]:ExpressionStatement[34015-34040]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[34026-34032]:BreakStatement[34061-34067]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[34049-34063]:SwitchCase[34084-34098]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[34084-34098]:ExpressionStatement[34119-34133]"
    }, {
      "left" : "t.commentPending.data.append('-').append(replacementChar);",
      "right" : "t.commentPending.data.append('-').append(replacementChar);",
      "info" : "ExpressionStatement[34119-34177]:ExpressionStatement[34154-34212]"
    }, {
      "left" : "t.transition(Comment);",
      "right" : "t.transition(Comment);",
      "info" : "ExpressionStatement[34198-34220]:ExpressionStatement[34233-34255]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[34241-34247]:BreakStatement[34276-34282]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[34264-34273]:SwitchCase[34299-34308]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[34294-34311]:ExpressionStatement[34329-34346]"
    }, {
      "left" : "t.emitCommentPending();",
      "right" : "t.emitCommentPending();",
      "info" : "ExpressionStatement[34332-34355]:ExpressionStatement[34367-34390]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[34376-34395]:ExpressionStatement[34411-34430]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[34416-34422]:BreakStatement[34451-34457]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[34439-34447]:SwitchCase[34474-34482]"
    }, {
      "left" : "t.commentPending.data.append('-').append(c);",
      "right" : "t.commentPending.data.append('-').append(c);",
      "info" : "ExpressionStatement[34468-34512]:ExpressionStatement[34503-34547]"
    }, {
      "left" : "t.transition(Comment);",
      "right" : "t.transition(Comment);",
      "info" : "ExpressionStatement[34533-34555]:ExpressionStatement[34568-34590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34654-35716]:Block[34689-35751]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[34668-34689]:VariableDeclarationStatement[34703-34724]"
    }, {
      "left" : "switch (c) {\n                case '>':\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.commentPending.data.append(\"--\").append(replacementChar);\n                    t.transition(Comment);\n                    break;\n                case '!':\n                    t.error(this);\n                    t.transition(CommentEndBang);\n                    break;\n                case '-':\n                    t.error(this);\n                    t.commentPending.data.append('-');\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.commentPending.data.append(\"--\").append(c);\n                    t.transition(Comment);\n            }",
      "right" : "switch (c) {\n                case '>':\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.commentPending.data.append(\"--\").append(replacementChar);\n                    t.transition(Comment);\n                    break;\n                case '!':\n                    t.error(this);\n                    t.transition(CommentEndBang);\n                    break;\n                case '-':\n                    t.error(this);\n                    t.commentPending.data.append('-');\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.commentPending.data.append(\"--\").append(c);\n                    t.transition(Comment);\n            }",
      "info" : "SwitchStatement[34702-35706]:SwitchStatement[34737-35741]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[34731-34740]:SwitchCase[34766-34775]"
    }, {
      "left" : "t.emitCommentPending();",
      "right" : "t.emitCommentPending();",
      "info" : "ExpressionStatement[34761-34784]:ExpressionStatement[34796-34819]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[34805-34824]:ExpressionStatement[34840-34859]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[34845-34851]:BreakStatement[34880-34886]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[34868-34882]:SwitchCase[34903-34917]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[34903-34917]:ExpressionStatement[34938-34952]"
    }, {
      "left" : "t.commentPending.data.append(\"--\").append(replacementChar);",
      "right" : "t.commentPending.data.append(\"--\").append(replacementChar);",
      "info" : "ExpressionStatement[34938-34997]:ExpressionStatement[34973-35032]"
    }, {
      "left" : "t.transition(Comment);",
      "right" : "t.transition(Comment);",
      "info" : "ExpressionStatement[35018-35040]:ExpressionStatement[35053-35075]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[35061-35067]:BreakStatement[35096-35102]"
    }, {
      "left" : "case '!':",
      "right" : "case '!':",
      "info" : "SwitchCase[35084-35093]:SwitchCase[35119-35128]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[35114-35128]:ExpressionStatement[35149-35163]"
    }, {
      "left" : "t.transition(CommentEndBang);",
      "right" : "t.transition(CommentEndBang);",
      "info" : "ExpressionStatement[35149-35178]:ExpressionStatement[35184-35213]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[35199-35205]:BreakStatement[35234-35240]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[35222-35231]:SwitchCase[35257-35266]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[35252-35266]:ExpressionStatement[35287-35301]"
    }, {
      "left" : "t.commentPending.data.append('-');",
      "right" : "t.commentPending.data.append('-');",
      "info" : "ExpressionStatement[35287-35321]:ExpressionStatement[35322-35356]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[35342-35348]:BreakStatement[35377-35383]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[35365-35374]:SwitchCase[35400-35409]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[35395-35412]:ExpressionStatement[35430-35447]"
    }, {
      "left" : "t.emitCommentPending();",
      "right" : "t.emitCommentPending();",
      "info" : "ExpressionStatement[35433-35456]:ExpressionStatement[35468-35491]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[35477-35496]:ExpressionStatement[35512-35531]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[35517-35523]:BreakStatement[35552-35558]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[35540-35548]:SwitchCase[35575-35583]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[35569-35583]:ExpressionStatement[35604-35618]"
    }, {
      "left" : "t.commentPending.data.append(\"--\").append(c);",
      "right" : "t.commentPending.data.append(\"--\").append(c);",
      "info" : "ExpressionStatement[35604-35649]:ExpressionStatement[35639-35684]"
    }, {
      "left" : "t.transition(Comment);",
      "right" : "t.transition(Comment);",
      "info" : "ExpressionStatement[35670-35692]:ExpressionStatement[35705-35727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35795-36703]:Block[35830-36738]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[35809-35830]:VariableDeclarationStatement[35844-35865]"
    }, {
      "left" : "switch (c) {\n                case '-':\n                    t.commentPending.data.append(\"--!\");\n                    t.transition(CommentEndDash);\n                    break;\n                case '>':\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.commentPending.data.append(\"--!\").append(replacementChar);\n                    t.transition(Comment);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.commentPending.data.append(\"--!\").append(c);\n                    t.transition(Comment);\n            }",
      "right" : "switch (c) {\n                case '-':\n                    t.commentPending.data.append(\"--!\");\n                    t.transition(CommentEndDash);\n                    break;\n                case '>':\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.commentPending.data.append(\"--!\").append(replacementChar);\n                    t.transition(Comment);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.emitCommentPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.commentPending.data.append(\"--!\").append(c);\n                    t.transition(Comment);\n            }",
      "info" : "SwitchStatement[35843-36693]:SwitchStatement[35878-36728]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[35872-35881]:SwitchCase[35907-35916]"
    }, {
      "left" : "t.commentPending.data.append(\"--!\");",
      "right" : "t.commentPending.data.append(\"--!\");",
      "info" : "ExpressionStatement[35902-35938]:ExpressionStatement[35937-35973]"
    }, {
      "left" : "t.transition(CommentEndDash);",
      "right" : "t.transition(CommentEndDash);",
      "info" : "ExpressionStatement[35959-35988]:ExpressionStatement[35994-36023]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[36009-36015]:BreakStatement[36044-36050]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[36032-36041]:SwitchCase[36067-36076]"
    }, {
      "left" : "t.emitCommentPending();",
      "right" : "t.emitCommentPending();",
      "info" : "ExpressionStatement[36062-36085]:ExpressionStatement[36097-36120]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[36106-36125]:ExpressionStatement[36141-36160]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[36146-36152]:BreakStatement[36181-36187]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[36169-36183]:SwitchCase[36204-36218]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[36204-36218]:ExpressionStatement[36239-36253]"
    }, {
      "left" : "t.commentPending.data.append(\"--!\").append(replacementChar);",
      "right" : "t.commentPending.data.append(\"--!\").append(replacementChar);",
      "info" : "ExpressionStatement[36239-36299]:ExpressionStatement[36274-36334]"
    }, {
      "left" : "t.transition(Comment);",
      "right" : "t.transition(Comment);",
      "info" : "ExpressionStatement[36320-36342]:ExpressionStatement[36355-36377]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[36363-36369]:BreakStatement[36398-36404]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[36386-36395]:SwitchCase[36421-36430]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[36416-36433]:ExpressionStatement[36451-36468]"
    }, {
      "left" : "t.emitCommentPending();",
      "right" : "t.emitCommentPending();",
      "info" : "ExpressionStatement[36454-36477]:ExpressionStatement[36489-36512]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[36498-36517]:ExpressionStatement[36533-36552]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[36538-36544]:BreakStatement[36573-36579]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[36561-36569]:SwitchCase[36596-36604]"
    }, {
      "left" : "t.commentPending.data.append(\"--!\").append(c);",
      "right" : "t.commentPending.data.append(\"--!\").append(c);",
      "info" : "ExpressionStatement[36590-36636]:ExpressionStatement[36625-36671]"
    }, {
      "left" : "t.transition(Comment);",
      "right" : "t.transition(Comment);",
      "info" : "ExpressionStatement[36657-36679]:ExpressionStatement[36692-36714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36775-37605]:Block[36810-37640]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[36789-36810]:VariableDeclarationStatement[36824-36845]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeDoctypeName);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    // note: fall through to > case\n                case '>': // catch invalid <!DOCTYPE>\n                    t.error(this);\n                    t.createDoctypePending();\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.transition(BeforeDoctypeName);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeDoctypeName);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    // note: fall through to > case\n                case '>': // catch invalid <!DOCTYPE>\n                    t.error(this);\n                    t.createDoctypePending();\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.transition(BeforeDoctypeName);\n            }",
      "info" : "SwitchStatement[36823-37595]:SwitchStatement[36858-37630]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[36852-36862]:SwitchCase[36887-36897]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[36879-36889]:SwitchCase[36914-36924]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[36906-36916]:SwitchCase[36941-36951]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[36933-36943]:SwitchCase[36968-36978]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[36960-36969]:SwitchCase[36995-37004]"
    }, {
      "left" : "t.transition(BeforeDoctypeName);",
      "right" : "t.transition(BeforeDoctypeName);",
      "info" : "ExpressionStatement[36990-37022]:ExpressionStatement[37025-37057]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[37043-37049]:BreakStatement[37078-37084]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[37066-37075]:SwitchCase[37101-37110]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[37096-37113]:ExpressionStatement[37131-37148]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[37182-37191]:SwitchCase[37217-37226]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[37240-37254]:ExpressionStatement[37275-37289]"
    }, {
      "left" : "t.createDoctypePending();",
      "right" : "t.createDoctypePending();",
      "info" : "ExpressionStatement[37275-37300]:ExpressionStatement[37310-37335]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[37321-37357]:ExpressionStatement[37356-37392]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[37378-37401]:ExpressionStatement[37413-37436]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[37422-37441]:ExpressionStatement[37457-37476]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[37462-37468]:BreakStatement[37497-37503]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[37485-37493]:SwitchCase[37520-37528]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[37514-37528]:ExpressionStatement[37549-37563]"
    }, {
      "left" : "t.transition(BeforeDoctypeName);",
      "right" : "t.transition(BeforeDoctypeName);",
      "info" : "ExpressionStatement[37549-37581]:ExpressionStatement[37584-37616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37687-38815]:Block[37722-38850]"
    }, {
      "left" : "if (r.matchesLetter())",
      "right" : "if (r.matchesLetter())",
      "info" : "IfStatement[37701-37848]:IfStatement[37736-37883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37724-37848]:Block[37759-37883]"
    }, {
      "left" : "t.createDoctypePending();",
      "right" : "t.createDoctypePending();",
      "info" : "ExpressionStatement[37742-37767]:ExpressionStatement[37777-37802]"
    }, {
      "left" : "t.transition(DoctypeName);",
      "right" : "t.transition(DoctypeName);",
      "info" : "ExpressionStatement[37784-37810]:ExpressionStatement[37819-37845]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[37827-37834]:ReturnStatement[37862-37869]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[37861-37882]:VariableDeclarationStatement[37896-37917]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break; // ignore whitespace\n                case nullChar:\n                    t.error(this);\n                    t.createDoctypePending();\n                    t.doctypePending.name.append(replacementChar);\n                    t.transition(DoctypeName);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.createDoctypePending();\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.createDoctypePending();\n                    t.doctypePending.name.append(c);\n                    t.transition(DoctypeName);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break; // ignore whitespace\n                case nullChar:\n                    t.error(this);\n                    t.createDoctypePending();\n                    t.doctypePending.name.append(replacementChar);\n                    t.transition(DoctypeName);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.createDoctypePending();\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.createDoctypePending();\n                    t.doctypePending.name.append(c);\n                    t.transition(DoctypeName);\n            }",
      "info" : "SwitchStatement[37895-38805]:SwitchStatement[37930-38840]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[37924-37934]:SwitchCase[37959-37969]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[37951-37961]:SwitchCase[37986-37996]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[37978-37988]:SwitchCase[38013-38023]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[38005-38015]:SwitchCase[38040-38050]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[38032-38041]:SwitchCase[38067-38076]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[38062-38068]:BreakStatement[38097-38103]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[38106-38120]:SwitchCase[38141-38155]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[38141-38155]:ExpressionStatement[38176-38190]"
    }, {
      "left" : "t.createDoctypePending();",
      "right" : "t.createDoctypePending();",
      "info" : "ExpressionStatement[38176-38201]:ExpressionStatement[38211-38236]"
    }, {
      "left" : "t.doctypePending.name.append(replacementChar);",
      "right" : "t.doctypePending.name.append(replacementChar);",
      "info" : "ExpressionStatement[38222-38268]:ExpressionStatement[38257-38303]"
    }, {
      "left" : "t.transition(DoctypeName);",
      "right" : "t.transition(DoctypeName);",
      "info" : "ExpressionStatement[38289-38315]:ExpressionStatement[38324-38350]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[38336-38342]:BreakStatement[38371-38377]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[38359-38368]:SwitchCase[38394-38403]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[38389-38406]:ExpressionStatement[38424-38441]"
    }, {
      "left" : "t.createDoctypePending();",
      "right" : "t.createDoctypePending();",
      "info" : "ExpressionStatement[38427-38452]:ExpressionStatement[38462-38487]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[38473-38509]:ExpressionStatement[38508-38544]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[38530-38553]:ExpressionStatement[38565-38588]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[38574-38593]:ExpressionStatement[38609-38628]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[38614-38620]:BreakStatement[38649-38655]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[38637-38645]:SwitchCase[38672-38680]"
    }, {
      "left" : "t.createDoctypePending();",
      "right" : "t.createDoctypePending();",
      "info" : "ExpressionStatement[38666-38691]:ExpressionStatement[38701-38726]"
    }, {
      "left" : "t.doctypePending.name.append(c);",
      "right" : "t.doctypePending.name.append(c);",
      "info" : "ExpressionStatement[38712-38744]:ExpressionStatement[38747-38779]"
    }, {
      "left" : "t.transition(DoctypeName);",
      "right" : "t.transition(DoctypeName);",
      "info" : "ExpressionStatement[38765-38791]:ExpressionStatement[38800-38826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38891-39979]:Block[38926-40014]"
    }, {
      "left" : "if (r.matchesLetter())",
      "right" : "if (r.matchesLetter())",
      "info" : "IfStatement[38905-39076]:IfStatement[38940-39111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38928-39076]:Block[38963-39111]"
    }, {
      "left" : "String name = r.consumeLetterSequence();",
      "right" : "String name = r.consumeLetterSequence();",
      "info" : "VariableDeclarationStatement[38946-38986]:VariableDeclarationStatement[38981-39021]"
    }, {
      "left" : "t.doctypePending.name.append(name);",
      "right" : "t.doctypePending.name.append(name);",
      "info" : "ExpressionStatement[39003-39038]:ExpressionStatement[39038-39073]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[39055-39062]:ReturnStatement[39090-39097]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[39089-39110]:VariableDeclarationStatement[39124-39145]"
    }, {
      "left" : "switch (c) {\n                case '>':\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(AfterDoctypeName);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.doctypePending.name.append(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.doctypePending.name.append(c);\n            }",
      "right" : "switch (c) {\n                case '>':\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(AfterDoctypeName);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.doctypePending.name.append(replacementChar);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.doctypePending.name.append(c);\n            }",
      "info" : "SwitchStatement[39123-39969]:SwitchStatement[39158-40004]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[39152-39161]:SwitchCase[39187-39196]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[39182-39205]:ExpressionStatement[39217-39240]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[39226-39245]:ExpressionStatement[39261-39280]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[39266-39272]:BreakStatement[39301-39307]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[39289-39299]:SwitchCase[39324-39334]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[39316-39326]:SwitchCase[39351-39361]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[39343-39353]:SwitchCase[39378-39388]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[39370-39380]:SwitchCase[39405-39415]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[39397-39406]:SwitchCase[39432-39441]"
    }, {
      "left" : "t.transition(AfterDoctypeName);",
      "right" : "t.transition(AfterDoctypeName);",
      "info" : "ExpressionStatement[39427-39458]:ExpressionStatement[39462-39493]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[39479-39485]:BreakStatement[39514-39520]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[39502-39516]:SwitchCase[39537-39551]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[39537-39551]:ExpressionStatement[39572-39586]"
    }, {
      "left" : "t.doctypePending.name.append(replacementChar);",
      "right" : "t.doctypePending.name.append(replacementChar);",
      "info" : "ExpressionStatement[39572-39618]:ExpressionStatement[39607-39653]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[39639-39645]:BreakStatement[39674-39680]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[39662-39671]:SwitchCase[39697-39706]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[39692-39709]:ExpressionStatement[39727-39744]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[39730-39766]:ExpressionStatement[39765-39801]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[39787-39810]:ExpressionStatement[39822-39845]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[39831-39850]:ExpressionStatement[39866-39885]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[39871-39877]:BreakStatement[39906-39912]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[39894-39902]:SwitchCase[39929-39937]"
    }, {
      "left" : "t.doctypePending.name.append(c);",
      "right" : "t.doctypePending.name.append(c);",
      "info" : "ExpressionStatement[39923-39955]:ExpressionStatement[39958-39990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40060-40941]:Block[40095-40976]"
    }, {
      "left" : "if (r.isEmpty())",
      "right" : "if (r.isEmpty())",
      "info" : "IfStatement[40074-40293]:IfStatement[40109-40328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40091-40293]:Block[40126-40328]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[40109-40126]:ExpressionStatement[40144-40161]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[40143-40179]:ExpressionStatement[40178-40214]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[40196-40219]:ExpressionStatement[40231-40254]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[40236-40255]:ExpressionStatement[40271-40290]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[40272-40279]:ReturnStatement[40307-40314]"
    }, {
      "left" : "if (r.matchesAny('\\t', '\\n', '\\r', '\\f', ' '))",
      "right" : "if (r.matchesAny('\\t', '\\n', '\\r', '\\f', ' '))",
      "info" : "IfStatement[40306-40930]:IfStatement[40341-40965]"
    }, {
      "left" : "r.advance();",
      "right" : "r.advance();",
      "info" : "ExpressionStatement[40369-40381]:ExpressionStatement[40404-40416]"
    }, {
      "left" : "if (r.matches('>'))",
      "right" : "if (r.matches('>'))",
      "info" : "IfStatement[40420-40930]:IfStatement[40455-40965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40440-40538]:Block[40475-40573]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[40458-40481]:ExpressionStatement[40493-40516]"
    }, {
      "left" : "t.advanceTransition(Data);",
      "right" : "t.advanceTransition(Data);",
      "info" : "ExpressionStatement[40498-40524]:ExpressionStatement[40533-40559]"
    }, {
      "left" : "if (r.matchConsumeIgnoreCase(\"PUBLIC\"))",
      "right" : "if (r.matchConsumeIgnoreCase(\"PUBLIC\"))",
      "info" : "IfStatement[40544-40930]:IfStatement[40579-40965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40584-40656]:Block[40619-40691]"
    }, {
      "left" : "t.transition(AfterDoctypePublicKeyword);",
      "right" : "t.transition(AfterDoctypePublicKeyword);",
      "info" : "ExpressionStatement[40602-40642]:ExpressionStatement[40637-40677]"
    }, {
      "left" : "if (r.matchConsumeIgnoreCase(\"SYSTEM\"))",
      "right" : "if (r.matchConsumeIgnoreCase(\"SYSTEM\"))",
      "info" : "IfStatement[40662-40930]:IfStatement[40697-40965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40702-40774]:Block[40737-40809]"
    }, {
      "left" : "t.transition(AfterDoctypeSystemKeyword);",
      "right" : "t.transition(AfterDoctypeSystemKeyword);",
      "info" : "ExpressionStatement[40720-40760]:ExpressionStatement[40755-40795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40780-40930]:Block[40815-40965]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[40798-40812]:ExpressionStatement[40833-40847]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[40829-40865]:ExpressionStatement[40864-40900]"
    }, {
      "left" : "t.advanceTransition(BogusDoctype);",
      "right" : "t.advanceTransition(BogusDoctype);",
      "info" : "ExpressionStatement[40882-40916]:ExpressionStatement[40917-40951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41031-42394]:Block[41066-42429]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[41045-41066]:VariableDeclarationStatement[41080-41101]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeDoctypePublicIdentifier);\n                    break;\n                case '\"':\n                    t.error(this);\n                    // set public id to empty string\n                    t.transition(DoctypePublicIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    t.error(this);\n                    // set public id to empty string\n                    t.transition(DoctypePublicIdentifier_singleQuoted);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.transition(BogusDoctype);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeDoctypePublicIdentifier);\n                    break;\n                case '\"':\n                    t.error(this);\n                    // set public id to empty string\n                    t.transition(DoctypePublicIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    t.error(this);\n                    // set public id to empty string\n                    t.transition(DoctypePublicIdentifier_singleQuoted);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.transition(BogusDoctype);\n            }",
      "info" : "SwitchStatement[41079-42384]:SwitchStatement[41114-42419]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[41108-41118]:SwitchCase[41143-41153]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[41135-41145]:SwitchCase[41170-41180]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[41162-41172]:SwitchCase[41197-41207]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[41189-41199]:SwitchCase[41224-41234]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[41216-41225]:SwitchCase[41251-41260]"
    }, {
      "left" : "t.transition(BeforeDoctypePublicIdentifier);",
      "right" : "t.transition(BeforeDoctypePublicIdentifier);",
      "info" : "ExpressionStatement[41246-41290]:ExpressionStatement[41281-41325]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[41311-41317]:BreakStatement[41346-41352]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[41334-41343]:SwitchCase[41369-41378]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[41364-41378]:ExpressionStatement[41399-41413]"
    }, {
      "left" : "t.transition(DoctypePublicIdentifier_doubleQuoted);",
      "right" : "t.transition(DoctypePublicIdentifier_doubleQuoted);",
      "info" : "ExpressionStatement[41452-41503]:ExpressionStatement[41487-41538]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[41524-41530]:BreakStatement[41559-41565]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[41547-41557]:SwitchCase[41582-41592]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[41578-41592]:ExpressionStatement[41613-41627]"
    }, {
      "left" : "t.transition(DoctypePublicIdentifier_singleQuoted);",
      "right" : "t.transition(DoctypePublicIdentifier_singleQuoted);",
      "info" : "ExpressionStatement[41666-41717]:ExpressionStatement[41701-41752]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[41738-41744]:BreakStatement[41773-41779]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[41761-41770]:SwitchCase[41796-41805]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[41791-41805]:ExpressionStatement[41826-41840]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[41826-41862]:ExpressionStatement[41861-41897]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[41883-41906]:ExpressionStatement[41918-41941]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[41927-41946]:ExpressionStatement[41962-41981]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[41967-41973]:BreakStatement[42002-42008]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[41990-41999]:SwitchCase[42025-42034]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[42020-42037]:ExpressionStatement[42055-42072]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[42058-42094]:ExpressionStatement[42093-42129]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[42115-42138]:ExpressionStatement[42150-42173]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[42159-42178]:ExpressionStatement[42194-42213]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[42199-42205]:BreakStatement[42234-42240]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[42222-42230]:SwitchCase[42257-42265]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[42251-42265]:ExpressionStatement[42286-42300]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[42286-42322]:ExpressionStatement[42321-42357]"
    }, {
      "left" : "t.transition(BogusDoctype);",
      "right" : "t.transition(BogusDoctype);",
      "info" : "ExpressionStatement[42343-42370]:ExpressionStatement[42378-42405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42488-43716]:Block[42523-43751]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[42502-42523]:VariableDeclarationStatement[42537-42558]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break;\n                case '\"':\n                    // set public id to empty string\n                    t.transition(DoctypePublicIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    // set public id to empty string\n                    t.transition(DoctypePublicIdentifier_singleQuoted);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.transition(BogusDoctype);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break;\n                case '\"':\n                    // set public id to empty string\n                    t.transition(DoctypePublicIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    // set public id to empty string\n                    t.transition(DoctypePublicIdentifier_singleQuoted);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.transition(BogusDoctype);\n            }",
      "info" : "SwitchStatement[42536-43706]:SwitchStatement[42571-43741]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[42565-42575]:SwitchCase[42600-42610]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[42592-42602]:SwitchCase[42627-42637]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[42619-42629]:SwitchCase[42654-42664]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[42646-42656]:SwitchCase[42681-42691]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[42673-42682]:SwitchCase[42708-42717]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[42703-42709]:BreakStatement[42738-42744]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[42726-42735]:SwitchCase[42761-42770]"
    }, {
      "left" : "t.transition(DoctypePublicIdentifier_doubleQuoted);",
      "right" : "t.transition(DoctypePublicIdentifier_doubleQuoted);",
      "info" : "ExpressionStatement[42809-42860]:ExpressionStatement[42844-42895]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[42881-42887]:BreakStatement[42916-42922]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[42904-42914]:SwitchCase[42939-42949]"
    }, {
      "left" : "t.transition(DoctypePublicIdentifier_singleQuoted);",
      "right" : "t.transition(DoctypePublicIdentifier_singleQuoted);",
      "info" : "ExpressionStatement[42988-43039]:ExpressionStatement[43023-43074]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[43060-43066]:BreakStatement[43095-43101]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[43083-43092]:SwitchCase[43118-43127]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[43113-43127]:ExpressionStatement[43148-43162]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[43148-43184]:ExpressionStatement[43183-43219]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[43205-43228]:ExpressionStatement[43240-43263]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[43249-43268]:ExpressionStatement[43284-43303]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[43289-43295]:BreakStatement[43324-43330]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[43312-43321]:SwitchCase[43347-43356]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[43342-43359]:ExpressionStatement[43377-43394]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[43380-43416]:ExpressionStatement[43415-43451]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[43437-43460]:ExpressionStatement[43472-43495]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[43481-43500]:ExpressionStatement[43516-43535]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[43521-43527]:BreakStatement[43556-43562]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[43544-43552]:SwitchCase[43579-43587]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[43573-43587]:ExpressionStatement[43608-43622]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[43608-43644]:ExpressionStatement[43643-43679]"
    }, {
      "left" : "t.transition(BogusDoctype);",
      "right" : "t.transition(BogusDoctype);",
      "info" : "ExpressionStatement[43665-43692]:ExpressionStatement[43700-43727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43817-44741]:Block[43852-44776]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[43831-43852]:VariableDeclarationStatement[43866-43887]"
    }, {
      "left" : "switch (c) {\n                case '\"':\n                    t.transition(AfterDoctypePublicIdentifier);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.doctypePending.publicIdentifier.append(replacementChar);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.doctypePending.publicIdentifier.append(c);\n            }",
      "right" : "switch (c) {\n                case '\"':\n                    t.transition(AfterDoctypePublicIdentifier);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.doctypePending.publicIdentifier.append(replacementChar);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.doctypePending.publicIdentifier.append(c);\n            }",
      "info" : "SwitchStatement[43865-44731]:SwitchStatement[43900-44766]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[43894-43903]:SwitchCase[43929-43938]"
    }, {
      "left" : "t.transition(AfterDoctypePublicIdentifier);",
      "right" : "t.transition(AfterDoctypePublicIdentifier);",
      "info" : "ExpressionStatement[43924-43967]:ExpressionStatement[43959-44002]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[43988-43994]:BreakStatement[44023-44029]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[44011-44025]:SwitchCase[44046-44060]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[44046-44060]:ExpressionStatement[44081-44095]"
    }, {
      "left" : "t.doctypePending.publicIdentifier.append(replacementChar);",
      "right" : "t.doctypePending.publicIdentifier.append(replacementChar);",
      "info" : "ExpressionStatement[44081-44139]:ExpressionStatement[44116-44174]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[44160-44166]:BreakStatement[44195-44201]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[44183-44192]:SwitchCase[44218-44227]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[44213-44227]:ExpressionStatement[44248-44262]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[44248-44284]:ExpressionStatement[44283-44319]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[44305-44328]:ExpressionStatement[44340-44363]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[44349-44368]:ExpressionStatement[44384-44403]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[44389-44395]:BreakStatement[44424-44430]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[44412-44421]:SwitchCase[44447-44456]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[44442-44459]:ExpressionStatement[44477-44494]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[44480-44516]:ExpressionStatement[44515-44551]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[44537-44560]:ExpressionStatement[44572-44595]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[44581-44600]:ExpressionStatement[44616-44635]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[44621-44627]:BreakStatement[44656-44662]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[44644-44652]:SwitchCase[44679-44687]"
    }, {
      "left" : "t.doctypePending.publicIdentifier.append(c);",
      "right" : "t.doctypePending.publicIdentifier.append(c);",
      "info" : "ExpressionStatement[44673-44717]:ExpressionStatement[44708-44752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44842-45767]:Block[44877-45802]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[44856-44877]:VariableDeclarationStatement[44891-44912]"
    }, {
      "left" : "switch (c) {\n                case '\\'':\n                    t.transition(AfterDoctypePublicIdentifier);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.doctypePending.publicIdentifier.append(replacementChar);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.doctypePending.publicIdentifier.append(c);\n            }",
      "right" : "switch (c) {\n                case '\\'':\n                    t.transition(AfterDoctypePublicIdentifier);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.doctypePending.publicIdentifier.append(replacementChar);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.doctypePending.publicIdentifier.append(c);\n            }",
      "info" : "SwitchStatement[44890-45757]:SwitchStatement[44925-45792]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[44919-44929]:SwitchCase[44954-44964]"
    }, {
      "left" : "t.transition(AfterDoctypePublicIdentifier);",
      "right" : "t.transition(AfterDoctypePublicIdentifier);",
      "info" : "ExpressionStatement[44950-44993]:ExpressionStatement[44985-45028]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[45014-45020]:BreakStatement[45049-45055]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[45037-45051]:SwitchCase[45072-45086]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[45072-45086]:ExpressionStatement[45107-45121]"
    }, {
      "left" : "t.doctypePending.publicIdentifier.append(replacementChar);",
      "right" : "t.doctypePending.publicIdentifier.append(replacementChar);",
      "info" : "ExpressionStatement[45107-45165]:ExpressionStatement[45142-45200]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[45186-45192]:BreakStatement[45221-45227]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[45209-45218]:SwitchCase[45244-45253]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[45239-45253]:ExpressionStatement[45274-45288]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[45274-45310]:ExpressionStatement[45309-45345]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[45331-45354]:ExpressionStatement[45366-45389]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[45375-45394]:ExpressionStatement[45410-45429]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[45415-45421]:BreakStatement[45450-45456]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[45438-45447]:SwitchCase[45473-45482]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[45468-45485]:ExpressionStatement[45503-45520]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[45506-45542]:ExpressionStatement[45541-45577]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[45563-45586]:ExpressionStatement[45598-45621]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[45607-45626]:ExpressionStatement[45642-45661]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[45647-45653]:BreakStatement[45682-45688]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[45670-45678]:SwitchCase[45705-45713]"
    }, {
      "left" : "t.doctypePending.publicIdentifier.append(c);",
      "right" : "t.doctypePending.publicIdentifier.append(c);",
      "info" : "ExpressionStatement[45699-45743]:ExpressionStatement[45734-45778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45860-47114]:Block[45895-47149]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[45874-45895]:VariableDeclarationStatement[45909-45930]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BetweenDoctypePublicAndSystemIdentifiers);\n                    break;\n                case '>':\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case '\"':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_singleQuoted);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.transition(BogusDoctype);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BetweenDoctypePublicAndSystemIdentifiers);\n                    break;\n                case '>':\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case '\"':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_singleQuoted);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.transition(BogusDoctype);\n            }",
      "info" : "SwitchStatement[45908-47104]:SwitchStatement[45943-47139]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[45937-45947]:SwitchCase[45972-45982]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[45964-45974]:SwitchCase[45999-46009]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[45991-46001]:SwitchCase[46026-46036]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[46018-46028]:SwitchCase[46053-46063]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[46045-46054]:SwitchCase[46080-46089]"
    }, {
      "left" : "t.transition(BetweenDoctypePublicAndSystemIdentifiers);",
      "right" : "t.transition(BetweenDoctypePublicAndSystemIdentifiers);",
      "info" : "ExpressionStatement[46075-46130]:ExpressionStatement[46110-46165]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[46151-46157]:BreakStatement[46186-46192]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[46174-46183]:SwitchCase[46209-46218]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[46204-46227]:ExpressionStatement[46239-46262]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[46248-46267]:ExpressionStatement[46283-46302]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[46288-46294]:BreakStatement[46323-46329]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[46311-46320]:SwitchCase[46346-46355]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[46341-46355]:ExpressionStatement[46376-46390]"
    }, {
      "left" : "t.transition(DoctypeSystemIdentifier_doubleQuoted);",
      "right" : "t.transition(DoctypeSystemIdentifier_doubleQuoted);",
      "info" : "ExpressionStatement[46415-46466]:ExpressionStatement[46450-46501]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[46487-46493]:BreakStatement[46522-46528]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[46510-46520]:SwitchCase[46545-46555]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[46541-46555]:ExpressionStatement[46576-46590]"
    }, {
      "left" : "t.transition(DoctypeSystemIdentifier_singleQuoted);",
      "right" : "t.transition(DoctypeSystemIdentifier_singleQuoted);",
      "info" : "ExpressionStatement[46615-46666]:ExpressionStatement[46650-46701]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[46687-46693]:BreakStatement[46722-46728]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[46710-46719]:SwitchCase[46745-46754]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[46740-46757]:ExpressionStatement[46775-46792]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[46778-46814]:ExpressionStatement[46813-46849]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[46835-46858]:ExpressionStatement[46870-46893]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[46879-46898]:ExpressionStatement[46914-46933]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[46919-46925]:BreakStatement[46954-46960]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[46942-46950]:SwitchCase[46977-46985]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[46971-46985]:ExpressionStatement[47006-47020]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[47006-47042]:ExpressionStatement[47041-47077]"
    }, {
      "left" : "t.transition(BogusDoctype);",
      "right" : "t.transition(BogusDoctype);",
      "info" : "ExpressionStatement[47063-47090]:ExpressionStatement[47098-47125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47219-48397]:Block[47254-48432]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[47233-47254]:VariableDeclarationStatement[47268-47289]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break;\n                case '>':\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case '\"':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_singleQuoted);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.transition(BogusDoctype);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break;\n                case '>':\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case '\"':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_singleQuoted);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.transition(BogusDoctype);\n            }",
      "info" : "SwitchStatement[47267-48387]:SwitchStatement[47302-48422]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[47296-47306]:SwitchCase[47331-47341]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[47323-47333]:SwitchCase[47358-47368]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[47350-47360]:SwitchCase[47385-47395]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[47377-47387]:SwitchCase[47412-47422]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[47404-47413]:SwitchCase[47439-47448]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[47434-47440]:BreakStatement[47469-47475]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[47457-47466]:SwitchCase[47492-47501]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[47487-47510]:ExpressionStatement[47522-47545]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[47531-47550]:ExpressionStatement[47566-47585]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[47571-47577]:BreakStatement[47606-47612]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[47594-47603]:SwitchCase[47629-47638]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[47624-47638]:ExpressionStatement[47659-47673]"
    }, {
      "left" : "t.transition(DoctypeSystemIdentifier_doubleQuoted);",
      "right" : "t.transition(DoctypeSystemIdentifier_doubleQuoted);",
      "info" : "ExpressionStatement[47698-47749]:ExpressionStatement[47733-47784]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[47770-47776]:BreakStatement[47805-47811]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[47793-47803]:SwitchCase[47828-47838]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[47824-47838]:ExpressionStatement[47859-47873]"
    }, {
      "left" : "t.transition(DoctypeSystemIdentifier_singleQuoted);",
      "right" : "t.transition(DoctypeSystemIdentifier_singleQuoted);",
      "info" : "ExpressionStatement[47898-47949]:ExpressionStatement[47933-47984]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[47970-47976]:BreakStatement[48005-48011]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[47993-48002]:SwitchCase[48028-48037]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[48023-48040]:ExpressionStatement[48058-48075]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[48061-48097]:ExpressionStatement[48096-48132]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[48118-48141]:ExpressionStatement[48153-48176]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[48162-48181]:ExpressionStatement[48197-48216]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[48202-48208]:BreakStatement[48237-48243]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[48225-48233]:SwitchCase[48260-48268]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[48254-48268]:ExpressionStatement[48289-48303]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[48289-48325]:ExpressionStatement[48324-48360]"
    }, {
      "left" : "t.transition(BogusDoctype);",
      "right" : "t.transition(BogusDoctype);",
      "info" : "ExpressionStatement[48346-48373]:ExpressionStatement[48381-48408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48487-49818]:Block[48522-49853]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[48501-48522]:VariableDeclarationStatement[48536-48557]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeDoctypeSystemIdentifier);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case '\"':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_singleQuoted);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeDoctypeSystemIdentifier);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case '\"':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    t.error(this);\n                    // system id empty\n                    t.transition(DoctypeSystemIdentifier_singleQuoted);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n            }",
      "info" : "SwitchStatement[48535-49808]:SwitchStatement[48570-49843]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[48564-48574]:SwitchCase[48599-48609]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[48591-48601]:SwitchCase[48626-48636]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[48618-48628]:SwitchCase[48653-48663]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[48645-48655]:SwitchCase[48680-48690]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[48672-48681]:SwitchCase[48707-48716]"
    }, {
      "left" : "t.transition(BeforeDoctypeSystemIdentifier);",
      "right" : "t.transition(BeforeDoctypeSystemIdentifier);",
      "info" : "ExpressionStatement[48702-48746]:ExpressionStatement[48737-48781]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[48767-48773]:BreakStatement[48802-48808]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[48790-48799]:SwitchCase[48825-48834]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[48820-48834]:ExpressionStatement[48855-48869]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[48855-48891]:ExpressionStatement[48890-48926]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[48912-48935]:ExpressionStatement[48947-48970]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[48956-48975]:ExpressionStatement[48991-49010]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[48996-49002]:BreakStatement[49031-49037]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[49019-49028]:SwitchCase[49054-49063]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[49049-49063]:ExpressionStatement[49084-49098]"
    }, {
      "left" : "t.transition(DoctypeSystemIdentifier_doubleQuoted);",
      "right" : "t.transition(DoctypeSystemIdentifier_doubleQuoted);",
      "info" : "ExpressionStatement[49123-49174]:ExpressionStatement[49158-49209]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[49195-49201]:BreakStatement[49230-49236]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[49218-49228]:SwitchCase[49253-49263]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[49249-49263]:ExpressionStatement[49284-49298]"
    }, {
      "left" : "t.transition(DoctypeSystemIdentifier_singleQuoted);",
      "right" : "t.transition(DoctypeSystemIdentifier_singleQuoted);",
      "info" : "ExpressionStatement[49323-49374]:ExpressionStatement[49358-49409]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[49395-49401]:BreakStatement[49430-49436]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[49418-49427]:SwitchCase[49453-49462]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[49448-49465]:ExpressionStatement[49483-49500]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[49486-49522]:ExpressionStatement[49521-49557]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[49543-49566]:ExpressionStatement[49578-49601]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[49587-49606]:ExpressionStatement[49622-49641]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[49627-49633]:BreakStatement[49662-49668]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[49650-49658]:SwitchCase[49685-49693]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[49679-49693]:ExpressionStatement[49714-49728]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[49714-49750]:ExpressionStatement[49749-49785]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[49771-49794]:ExpressionStatement[49806-49829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49912-51140]:Block[49947-51175]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[49926-49947]:VariableDeclarationStatement[49961-49982]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break;\n                case '\"':\n                    // set system id to empty string\n                    t.transition(DoctypeSystemIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    // set public id to empty string\n                    t.transition(DoctypeSystemIdentifier_singleQuoted);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.transition(BogusDoctype);\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break;\n                case '\"':\n                    // set system id to empty string\n                    t.transition(DoctypeSystemIdentifier_doubleQuoted);\n                    break;\n                case '\\'':\n                    // set public id to empty string\n                    t.transition(DoctypeSystemIdentifier_singleQuoted);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.transition(BogusDoctype);\n            }",
      "info" : "SwitchStatement[49960-51130]:SwitchStatement[49995-51165]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[49989-49999]:SwitchCase[50024-50034]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[50016-50026]:SwitchCase[50051-50061]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[50043-50053]:SwitchCase[50078-50088]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[50070-50080]:SwitchCase[50105-50115]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[50097-50106]:SwitchCase[50132-50141]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[50127-50133]:BreakStatement[50162-50168]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[50150-50159]:SwitchCase[50185-50194]"
    }, {
      "left" : "t.transition(DoctypeSystemIdentifier_doubleQuoted);",
      "right" : "t.transition(DoctypeSystemIdentifier_doubleQuoted);",
      "info" : "ExpressionStatement[50233-50284]:ExpressionStatement[50268-50319]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[50305-50311]:BreakStatement[50340-50346]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[50328-50338]:SwitchCase[50363-50373]"
    }, {
      "left" : "t.transition(DoctypeSystemIdentifier_singleQuoted);",
      "right" : "t.transition(DoctypeSystemIdentifier_singleQuoted);",
      "info" : "ExpressionStatement[50412-50463]:ExpressionStatement[50447-50498]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[50484-50490]:BreakStatement[50519-50525]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[50507-50516]:SwitchCase[50542-50551]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[50537-50551]:ExpressionStatement[50572-50586]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[50572-50608]:ExpressionStatement[50607-50643]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[50629-50652]:ExpressionStatement[50664-50687]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[50673-50692]:ExpressionStatement[50708-50727]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[50713-50719]:BreakStatement[50748-50754]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[50736-50745]:SwitchCase[50771-50780]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[50766-50783]:ExpressionStatement[50801-50818]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[50804-50840]:ExpressionStatement[50839-50875]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[50861-50884]:ExpressionStatement[50896-50919]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[50905-50924]:ExpressionStatement[50940-50959]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[50945-50951]:BreakStatement[50980-50986]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[50968-50976]:SwitchCase[51003-51011]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[50997-51011]:ExpressionStatement[51032-51046]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[51032-51068]:ExpressionStatement[51067-51103]"
    }, {
      "left" : "t.transition(BogusDoctype);",
      "right" : "t.transition(BogusDoctype);",
      "info" : "ExpressionStatement[51089-51116]:ExpressionStatement[51124-51151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51241-52165]:Block[51276-52200]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[51255-51276]:VariableDeclarationStatement[51290-51311]"
    }, {
      "left" : "switch (c) {\n                case '\"':\n                    t.transition(AfterDoctypeSystemIdentifier);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.doctypePending.systemIdentifier.append(replacementChar);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.doctypePending.systemIdentifier.append(c);\n            }",
      "right" : "switch (c) {\n                case '\"':\n                    t.transition(AfterDoctypeSystemIdentifier);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.doctypePending.systemIdentifier.append(replacementChar);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.doctypePending.systemIdentifier.append(c);\n            }",
      "info" : "SwitchStatement[51289-52155]:SwitchStatement[51324-52190]"
    }, {
      "left" : "case '\"':",
      "right" : "case '\"':",
      "info" : "SwitchCase[51318-51327]:SwitchCase[51353-51362]"
    }, {
      "left" : "t.transition(AfterDoctypeSystemIdentifier);",
      "right" : "t.transition(AfterDoctypeSystemIdentifier);",
      "info" : "ExpressionStatement[51348-51391]:ExpressionStatement[51383-51426]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[51412-51418]:BreakStatement[51447-51453]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[51435-51449]:SwitchCase[51470-51484]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[51470-51484]:ExpressionStatement[51505-51519]"
    }, {
      "left" : "t.doctypePending.systemIdentifier.append(replacementChar);",
      "right" : "t.doctypePending.systemIdentifier.append(replacementChar);",
      "info" : "ExpressionStatement[51505-51563]:ExpressionStatement[51540-51598]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[51584-51590]:BreakStatement[51619-51625]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[51607-51616]:SwitchCase[51642-51651]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[51637-51651]:ExpressionStatement[51672-51686]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[51672-51708]:ExpressionStatement[51707-51743]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[51729-51752]:ExpressionStatement[51764-51787]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[51773-51792]:ExpressionStatement[51808-51827]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[51813-51819]:BreakStatement[51848-51854]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[51836-51845]:SwitchCase[51871-51880]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[51866-51883]:ExpressionStatement[51901-51918]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[51904-51940]:ExpressionStatement[51939-51975]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[51961-51984]:ExpressionStatement[51996-52019]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[52005-52024]:ExpressionStatement[52040-52059]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[52045-52051]:BreakStatement[52080-52086]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[52068-52076]:SwitchCase[52103-52111]"
    }, {
      "left" : "t.doctypePending.systemIdentifier.append(c);",
      "right" : "t.doctypePending.systemIdentifier.append(c);",
      "info" : "ExpressionStatement[52097-52141]:ExpressionStatement[52132-52176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52266-53191]:Block[52301-53226]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[52280-52301]:VariableDeclarationStatement[52315-52336]"
    }, {
      "left" : "switch (c) {\n                case '\\'':\n                    t.transition(AfterDoctypeSystemIdentifier);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.doctypePending.systemIdentifier.append(replacementChar);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.doctypePending.systemIdentifier.append(c);\n            }",
      "right" : "switch (c) {\n                case '\\'':\n                    t.transition(AfterDoctypeSystemIdentifier);\n                    break;\n                case nullChar:\n                    t.error(this);\n                    t.doctypePending.systemIdentifier.append(replacementChar);\n                    break;\n                case '>':\n                    t.error(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.doctypePending.systemIdentifier.append(c);\n            }",
      "info" : "SwitchStatement[52314-53181]:SwitchStatement[52349-53216]"
    }, {
      "left" : "case '\\'':",
      "right" : "case '\\'':",
      "info" : "SwitchCase[52343-52353]:SwitchCase[52378-52388]"
    }, {
      "left" : "t.transition(AfterDoctypeSystemIdentifier);",
      "right" : "t.transition(AfterDoctypeSystemIdentifier);",
      "info" : "ExpressionStatement[52374-52417]:ExpressionStatement[52409-52452]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[52438-52444]:BreakStatement[52473-52479]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[52461-52475]:SwitchCase[52496-52510]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[52496-52510]:ExpressionStatement[52531-52545]"
    }, {
      "left" : "t.doctypePending.systemIdentifier.append(replacementChar);",
      "right" : "t.doctypePending.systemIdentifier.append(replacementChar);",
      "info" : "ExpressionStatement[52531-52589]:ExpressionStatement[52566-52624]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[52610-52616]:BreakStatement[52645-52651]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[52633-52642]:SwitchCase[52668-52677]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[52663-52677]:ExpressionStatement[52698-52712]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[52698-52734]:ExpressionStatement[52733-52769]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[52755-52778]:ExpressionStatement[52790-52813]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[52799-52818]:ExpressionStatement[52834-52853]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[52839-52845]:BreakStatement[52874-52880]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[52862-52871]:SwitchCase[52897-52906]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[52892-52909]:ExpressionStatement[52927-52944]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[52930-52966]:ExpressionStatement[52965-53001]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[52987-53010]:ExpressionStatement[53022-53045]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[53031-53050]:ExpressionStatement[53066-53085]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[53071-53077]:BreakStatement[53106-53112]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[53094-53102]:SwitchCase[53129-53137]"
    }, {
      "left" : "t.doctypePending.systemIdentifier.append(c);",
      "right" : "t.doctypePending.systemIdentifier.append(c);",
      "info" : "ExpressionStatement[53123-53167]:ExpressionStatement[53158-53202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53284-54046]:Block[53319-54081]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[53298-53319]:VariableDeclarationStatement[53333-53354]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break;\n                case '>':\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.transition(BogusDoctype);\n                    // NOT force quirks\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    break;\n                case '>':\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.doctypePending.forceQuirks = true;\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.transition(BogusDoctype);\n                    // NOT force quirks\n            }",
      "info" : "SwitchStatement[53332-54036]:SwitchStatement[53367-54071]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[53361-53371]:SwitchCase[53396-53406]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[53388-53398]:SwitchCase[53423-53433]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[53415-53425]:SwitchCase[53450-53460]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[53442-53452]:SwitchCase[53477-53487]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[53469-53478]:SwitchCase[53504-53513]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[53499-53505]:BreakStatement[53534-53540]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[53522-53531]:SwitchCase[53557-53566]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[53552-53575]:ExpressionStatement[53587-53610]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[53596-53615]:ExpressionStatement[53631-53650]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[53636-53642]:BreakStatement[53671-53677]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[53659-53668]:SwitchCase[53694-53703]"
    }, {
      "left" : "t.eofError(this);",
      "right" : "t.eofError(this);",
      "info" : "ExpressionStatement[53689-53706]:ExpressionStatement[53724-53741]"
    }, {
      "left" : "t.doctypePending.forceQuirks = true;",
      "right" : "t.doctypePending.forceQuirks = true;",
      "info" : "ExpressionStatement[53727-53763]:ExpressionStatement[53762-53798]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[53784-53807]:ExpressionStatement[53819-53842]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[53828-53847]:ExpressionStatement[53863-53882]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[53868-53874]:BreakStatement[53903-53909]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[53891-53899]:SwitchCase[53926-53934]"
    }, {
      "left" : "t.error(this);",
      "right" : "t.error(this);",
      "info" : "ExpressionStatement[53920-53934]:ExpressionStatement[53955-53969]"
    }, {
      "left" : "t.transition(BogusDoctype);",
      "right" : "t.transition(BogusDoctype);",
      "info" : "ExpressionStatement[53955-53982]:ExpressionStatement[53990-54017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54123-54568]:Block[54158-54603]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[54137-54158]:VariableDeclarationStatement[54172-54193]"
    }, {
      "left" : "switch (c) {\n                case '>':\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    // ignore char\n                    break;\n            }",
      "right" : "switch (c) {\n                case '>':\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                case eof:\n                    t.emitDoctypePending();\n                    t.transition(Data);\n                    break;\n                default:\n                    // ignore char\n                    break;\n            }",
      "info" : "SwitchStatement[54171-54558]:SwitchStatement[54206-54593]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[54200-54209]:SwitchCase[54235-54244]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[54230-54253]:ExpressionStatement[54265-54288]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[54274-54293]:ExpressionStatement[54309-54328]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[54314-54320]:BreakStatement[54349-54355]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[54337-54346]:SwitchCase[54372-54381]"
    }, {
      "left" : "t.emitDoctypePending();",
      "right" : "t.emitDoctypePending();",
      "info" : "ExpressionStatement[54367-54390]:ExpressionStatement[54402-54425]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[54411-54430]:ExpressionStatement[54446-54465]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[54451-54457]:BreakStatement[54486-54492]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[54474-54482]:SwitchCase[54509-54517]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[54538-54544]:BreakStatement[54573-54579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54645-54795]:Block[54680-54830]"
    }, {
      "left" : "String data = r.consumeTo(\"]]>\");",
      "right" : "String data = r.consumeTo(\"]]>\");",
      "info" : "VariableDeclarationStatement[54659-54692]:VariableDeclarationStatement[54694-54727]"
    }, {
      "left" : "t.emit(data);",
      "right" : "t.emit(data);",
      "info" : "ExpressionStatement[54705-54718]:ExpressionStatement[54740-54753]"
    }, {
      "left" : "r.matchConsume(\"]]>\");",
      "right" : "r.matchConsume(\"]]>\");",
      "info" : "ExpressionStatement[54731-54753]:ExpressionStatement[54766-54788]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[54766-54785]:ExpressionStatement[54801-54820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55624-55831]:Block[55659-55866]"
    }, {
      "left" : "Arrays.sort(attributeSingleValueCharsSorted);",
      "right" : "Arrays.sort(attributeSingleValueCharsSorted);",
      "info" : "ExpressionStatement[55634-55679]:ExpressionStatement[55669-55714]"
    }, {
      "left" : "Arrays.sort(attributeDoubleValueCharsSorted);",
      "right" : "Arrays.sort(attributeDoubleValueCharsSorted);",
      "info" : "ExpressionStatement[55688-55733]:ExpressionStatement[55723-55768]"
    }, {
      "left" : "Arrays.sort(attributeNameCharsSorted);",
      "right" : "Arrays.sort(attributeNameCharsSorted);",
      "info" : "ExpressionStatement[55742-55780]:ExpressionStatement[55777-55815]"
    }, {
      "left" : "Arrays.sort(attributeValueUnquoted);",
      "right" : "Arrays.sort(attributeValueUnquoted);",
      "info" : "ExpressionStatement[55789-55825]:ExpressionStatement[55824-55860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56103-57271]:Block[56138-57306]"
    }, {
      "left" : "if (r.matchesLetter())",
      "right" : "if (r.matchesLetter())",
      "info" : "IfStatement[56113-56305]:IfStatement[56148-56340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56136-56305]:Block[56171-56340]"
    }, {
      "left" : "String name = r.consumeLetterSequence();",
      "right" : "String name = r.consumeLetterSequence();",
      "info" : "VariableDeclarationStatement[56150-56190]:VariableDeclarationStatement[56185-56225]"
    }, {
      "left" : "t.tagPending.appendTagName(name);",
      "right" : "t.tagPending.appendTagName(name);",
      "info" : "ExpressionStatement[56203-56236]:ExpressionStatement[56238-56271]"
    }, {
      "left" : "t.dataBuffer.append(name);",
      "right" : "t.dataBuffer.append(name);",
      "info" : "ExpressionStatement[56249-56275]:ExpressionStatement[56284-56310]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[56288-56295]:ReturnStatement[56323-56330]"
    }, {
      "left" : "boolean needsExitTransition = false;",
      "right" : "boolean needsExitTransition = false;",
      "info" : "VariableDeclarationStatement[56315-56351]:VariableDeclarationStatement[56350-56386]"
    }, {
      "left" : "if (t.isAppropriateEndTagToken() && !r.isEmpty())",
      "right" : "if (t.isAppropriateEndTagToken() && !r.isEmpty())",
      "info" : "IfStatement[56360-57125]:IfStatement[56395-57160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56410-57068]:Block[56445-57103]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[56424-56445]:VariableDeclarationStatement[56459-56480]"
    }, {
      "left" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeAttributeName);\n                    break;\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.dataBuffer.append(c);\n                    needsExitTransition = true;\n            }",
      "right" : "switch (c) {\n                case '\\t':\n                case '\\n':\n                case '\\r':\n                case '\\f':\n                case ' ':\n                    t.transition(BeforeAttributeName);\n                    break;\n                case '/':\n                    t.transition(SelfClosingStartTag);\n                    break;\n                case '>':\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                default:\n                    t.dataBuffer.append(c);\n                    needsExitTransition = true;\n            }",
      "info" : "SwitchStatement[56458-57058]:SwitchStatement[56493-57093]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[56487-56497]:SwitchCase[56522-56532]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[56514-56524]:SwitchCase[56549-56559]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[56541-56551]:SwitchCase[56576-56586]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[56568-56578]:SwitchCase[56603-56613]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[56595-56604]:SwitchCase[56630-56639]"
    }, {
      "left" : "t.transition(BeforeAttributeName);",
      "right" : "t.transition(BeforeAttributeName);",
      "info" : "ExpressionStatement[56625-56659]:ExpressionStatement[56660-56694]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[56680-56686]:BreakStatement[56715-56721]"
    }, {
      "left" : "case '/':",
      "right" : "case '/':",
      "info" : "SwitchCase[56703-56712]:SwitchCase[56738-56747]"
    }, {
      "left" : "t.transition(SelfClosingStartTag);",
      "right" : "t.transition(SelfClosingStartTag);",
      "info" : "ExpressionStatement[56733-56767]:ExpressionStatement[56768-56802]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[56788-56794]:BreakStatement[56823-56829]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[56811-56820]:SwitchCase[56846-56855]"
    }, {
      "left" : "t.emitTagPending();",
      "right" : "t.emitTagPending();",
      "info" : "ExpressionStatement[56841-56860]:ExpressionStatement[56876-56895]"
    }, {
      "left" : "t.transition(Data);",
      "right" : "t.transition(Data);",
      "info" : "ExpressionStatement[56881-56900]:ExpressionStatement[56916-56935]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[56921-56927]:BreakStatement[56956-56962]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[56944-56952]:SwitchCase[56979-56987]"
    }, {
      "left" : "t.dataBuffer.append(c);",
      "right" : "t.dataBuffer.append(c);",
      "info" : "ExpressionStatement[56973-56996]:ExpressionStatement[57008-57031]"
    }, {
      "left" : "needsExitTransition = true;",
      "right" : "needsExitTransition = true;",
      "info" : "ExpressionStatement[57017-57044]:ExpressionStatement[57052-57079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57074-57125]:Block[57109-57160]"
    }, {
      "left" : "needsExitTransition = true;",
      "right" : "needsExitTransition = true;",
      "info" : "ExpressionStatement[57088-57115]:ExpressionStatement[57123-57150]"
    }, {
      "left" : "if (needsExitTransition)",
      "right" : "if (needsExitTransition)",
      "info" : "IfStatement[57135-57265]:IfStatement[57170-57300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57160-57265]:Block[57195-57300]"
    }, {
      "left" : "t.emit(\"</\" + t.dataBuffer.toString());",
      "right" : "t.emit(\"</\" + t.dataBuffer.toString());",
      "info" : "ExpressionStatement[57174-57213]:ExpressionStatement[57209-57248]"
    }, {
      "left" : "t.transition(elseTransition);",
      "right" : "t.transition(elseTransition);",
      "info" : "ExpressionStatement[57226-57255]:ExpressionStatement[57261-57290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57386-57900]:Block[57421-57935]"
    }, {
      "left" : "switch (r.current()) {\n            case '<':\n                t.advanceTransition(advance);\n                break;\n            case nullChar:\n                t.error(current);\n                r.advance();\n                t.emit(replacementChar);\n                break;\n            case eof:\n                t.emit(new Token.EOF());\n                break;\n            default:\n                String data = r.consumeToAny('<', nullChar);\n                t.emit(data);\n                break;\n        }",
      "right" : "switch (r.current()) {\n            case '<':\n                t.advanceTransition(advance);\n                break;\n            case nullChar:\n                t.error(current);\n                r.advance();\n                t.emit(replacementChar);\n                break;\n            case eof:\n                t.emit(new Token.EOF());\n                break;\n            default:\n                String data = r.consumeToAny('<', nullChar);\n                t.emit(data);\n                break;\n        }",
      "info" : "SwitchStatement[57396-57894]:SwitchStatement[57431-57929]"
    }, {
      "left" : "case '<':",
      "right" : "case '<':",
      "info" : "SwitchCase[57431-57440]:SwitchCase[57466-57475]"
    }, {
      "left" : "t.advanceTransition(advance);",
      "right" : "t.advanceTransition(advance);",
      "info" : "ExpressionStatement[57457-57486]:ExpressionStatement[57492-57521]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[57503-57509]:BreakStatement[57538-57544]"
    }, {
      "left" : "case nullChar:",
      "right" : "case nullChar:",
      "info" : "SwitchCase[57522-57536]:SwitchCase[57557-57571]"
    }, {
      "left" : "t.error(current);",
      "right" : "t.error(current);",
      "info" : "ExpressionStatement[57553-57570]:ExpressionStatement[57588-57605]"
    }, {
      "left" : "r.advance();",
      "right" : "r.advance();",
      "info" : "ExpressionStatement[57587-57599]:ExpressionStatement[57622-57634]"
    }, {
      "left" : "t.emit(replacementChar);",
      "right" : "t.emit(replacementChar);",
      "info" : "ExpressionStatement[57616-57640]:ExpressionStatement[57651-57675]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[57657-57663]:BreakStatement[57692-57698]"
    }, {
      "left" : "case eof:",
      "right" : "case eof:",
      "info" : "SwitchCase[57676-57685]:SwitchCase[57711-57720]"
    }, {
      "left" : "t.emit(new Token.EOF());",
      "right" : "t.emit(new Token.EOF());",
      "info" : "ExpressionStatement[57702-57726]:ExpressionStatement[57737-57761]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[57743-57749]:BreakStatement[57778-57784]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[57762-57770]:SwitchCase[57797-57805]"
    }, {
      "left" : "String data = r.consumeToAny('<', nullChar);",
      "right" : "String data = r.consumeToAny('<', nullChar);",
      "info" : "VariableDeclarationStatement[57787-57831]:VariableDeclarationStatement[57822-57866]"
    }, {
      "left" : "t.emit(data);",
      "right" : "t.emit(data);",
      "info" : "ExpressionStatement[57848-57861]:ExpressionStatement[57883-57896]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[57878-57884]:BreakStatement[57913-57919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57975-58157]:Block[58010-58192]"
    }, {
      "left" : "int[] c = t.consumeCharacterReference(null, false);",
      "right" : "int[] c = t.consumeCharacterReference(null, false);",
      "info" : "VariableDeclarationStatement[57985-58036]:VariableDeclarationStatement[58020-58071]"
    }, {
      "left" : "if (c == null)",
      "right" : "if (c == null)",
      "info" : "IfStatement[58045-58120]:IfStatement[58080-58155]"
    }, {
      "left" : "t.emit('&');",
      "right" : "t.emit('&');",
      "info" : "ExpressionStatement[58072-58084]:ExpressionStatement[58107-58119]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[58110-58120]:ExpressionStatement[58145-58155]"
    }, {
      "left" : "t.transition(advance);",
      "right" : "t.transition(advance);",
      "info" : "ExpressionStatement[58129-58151]:ExpressionStatement[58164-58186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58262-58452]:Block[58297-58487]"
    }, {
      "left" : "if (r.matchesLetter())",
      "right" : "if (r.matchesLetter())",
      "info" : "IfStatement[58272-58446]:IfStatement[58307-58481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58295-58374]:Block[58330-58409]"
    }, {
      "left" : "t.createTagPending(false);",
      "right" : "t.createTagPending(false);",
      "info" : "ExpressionStatement[58309-58335]:ExpressionStatement[58344-58370]"
    }, {
      "left" : "t.transition(a);",
      "right" : "t.transition(a);",
      "info" : "ExpressionStatement[58348-58364]:ExpressionStatement[58383-58399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58380-58446]:Block[58415-58481]"
    }, {
      "left" : "t.emit(\"</\");",
      "right" : "t.emit(\"</\");",
      "info" : "ExpressionStatement[58394-58407]:ExpressionStatement[58429-58442]"
    }, {
      "left" : "t.transition(b);",
      "right" : "t.transition(b);",
      "info" : "ExpressionStatement[58420-58436]:ExpressionStatement[58455-58471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58585-59305]:Block[58620-59340]"
    }, {
      "left" : "if (r.matchesLetter())",
      "right" : "if (r.matchesLetter())",
      "info" : "IfStatement[58595-58767]:IfStatement[58630-58802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58618-58767]:Block[58653-58802]"
    }, {
      "left" : "String name = r.consumeLetterSequence();",
      "right" : "String name = r.consumeLetterSequence();",
      "info" : "VariableDeclarationStatement[58632-58672]:VariableDeclarationStatement[58667-58707]"
    }, {
      "left" : "t.dataBuffer.append(name);",
      "right" : "t.dataBuffer.append(name);",
      "info" : "ExpressionStatement[58685-58711]:ExpressionStatement[58720-58746]"
    }, {
      "left" : "t.emit(name);",
      "right" : "t.emit(name);",
      "info" : "ExpressionStatement[58724-58737]:ExpressionStatement[58759-58772]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[58750-58757]:ReturnStatement[58785-58792]"
    }, {
      "left" : "char c = r.consume();",
      "right" : "char c = r.consume();",
      "info" : "VariableDeclarationStatement[58777-58798]:VariableDeclarationStatement[58812-58833]"
    }, {
      "left" : "switch (c) {\n            case '\\t':\n            case '\\n':\n            case '\\r':\n            case '\\f':\n            case ' ':\n            case '/':\n            case '>':\n                if (t.dataBuffer.toString().equals(\"script\"))\n                    t.transition(primary);\n                else\n                    t.transition(fallback);\n                t.emit(c);\n                break;\n            default:\n                r.unconsume();\n                t.transition(fallback);\n        }",
      "right" : "switch (c) {\n            case '\\t':\n            case '\\n':\n            case '\\r':\n            case '\\f':\n            case ' ':\n            case '/':\n            case '>':\n                if (t.dataBuffer.toString().equals(\"script\"))\n                    t.transition(primary);\n                else\n                    t.transition(fallback);\n                t.emit(c);\n                break;\n            default:\n                r.unconsume();\n                t.transition(fallback);\n        }",
      "info" : "SwitchStatement[58807-59299]:SwitchStatement[58842-59334]"
    }, {
      "left" : "case '\\t':",
      "right" : "case '\\t':",
      "info" : "SwitchCase[58832-58842]:SwitchCase[58867-58877]"
    }, {
      "left" : "case '\\n':",
      "right" : "case '\\n':",
      "info" : "SwitchCase[58855-58865]:SwitchCase[58890-58900]"
    }, {
      "left" : "case '\\r':",
      "right" : "case '\\r':",
      "info" : "SwitchCase[58878-58888]:SwitchCase[58913-58923]"
    }, {
      "left" : "case '\\f':",
      "right" : "case '\\f':",
      "info" : "SwitchCase[58901-58911]:SwitchCase[58936-58946]"
    }, {
      "left" : "case ' ':",
      "right" : "case ' ':",
      "info" : "SwitchCase[58924-58933]:SwitchCase[58959-58968]"
    }, {
      "left" : "case '/':",
      "right" : "case '/':",
      "info" : "SwitchCase[58946-58955]:SwitchCase[58981-58990]"
    }, {
      "left" : "case '>':",
      "right" : "case '>':",
      "info" : "SwitchCase[58968-58977]:SwitchCase[59003-59012]"
    }, {
      "left" : "if (t.dataBuffer.toString().equals(\"script\"))",
      "right" : "if (t.dataBuffer.toString().equals(\"script\"))",
      "info" : "IfStatement[58994-59147]:IfStatement[59029-59182]"
    }, {
      "left" : "t.transition(primary);",
      "right" : "t.transition(primary);",
      "info" : "ExpressionStatement[59060-59082]:ExpressionStatement[59095-59117]"
    }, {
      "left" : "t.transition(fallback);",
      "right" : "t.transition(fallback);",
      "info" : "ExpressionStatement[59124-59147]:ExpressionStatement[59159-59182]"
    }, {
      "left" : "t.emit(c);",
      "right" : "t.emit(c);",
      "info" : "ExpressionStatement[59164-59174]:ExpressionStatement[59199-59209]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[59191-59197]:BreakStatement[59226-59232]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[59210-59218]:SwitchCase[59245-59253]"
    }, {
      "left" : "r.unconsume();",
      "right" : "r.unconsume();",
      "info" : "ExpressionStatement[59235-59249]:ExpressionStatement[59270-59284]"
    }, {
      "left" : "t.transition(fallback);",
      "right" : "t.transition(fallback);",
      "info" : "ExpressionStatement[59266-59289]:ExpressionStatement[59301-59324]"
    } ]
  },
  "interFileMappings" : { }
}