{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "LoginActivity",
      "right" : "LoginActivity",
      "info" : "TypeDeclaration[2270-9878]:TypeDeclaration[1955-8864]"
    }, {
      "left" : "public static final String PARAM_AUTHTOKEN_TYPE = \"authtokenType\";",
      "right" : "public static final String PARAM_AUTHTOKEN_TYPE = \"authtokenType\";",
      "info" : "FieldDeclaration[2468-2583]:FieldDeclaration[2153-2268]"
    }, {
      "left" : "public static final String PARAM_USERNAME = \"username\";",
      "right" : "public static final String PARAM_USERNAME = \"username\";",
      "info" : "FieldDeclaration[2589-2685]:FieldDeclaration[2274-2370]"
    }, {
      "left" : "public static final String OAUTH_HOST = \"www.github.com\";",
      "right" : "public static final String OAUTH_HOST = \"www.github.com\";",
      "info" : "FieldDeclaration[2691-2748]:FieldDeclaration[2376-2433]"
    }, {
      "left" : "private static final String TAG = \"LoginActivity\";",
      "right" : "private static final String TAG = \"LoginActivity\";",
      "info" : "FieldDeclaration[2754-2804]:FieldDeclaration[2547-2597]"
    }, {
      "left" : "private static final long SYNC_PERIOD = 8L * 60L * 60L;",
      "right" : "private static final long SYNC_PERIOD = 8L * 60L * 60L;",
      "info" : "FieldDeclaration[2810-2936]:FieldDeclaration[2603-2729]"
    }, {
      "left" : "public static void configureSyncFor(Account account)",
      "right" : "public static void configureSyncFor(Account account)",
      "info" : "MethodDeclaration[2942-3312]:MethodDeclaration[2735-3105]"
    }, {
      "left" : "AccountLoader",
      "right" : "AccountLoader",
      "info" : "TypeDeclaration[3318-3696]:TypeDeclaration[3111-3489]"
    }, {
      "left" : "@Inject\n        private AccountDataManager cache;",
      "right" : "@Inject\n        private AccountDataManager cache;",
      "info" : "FieldDeclaration[3413-3462]:FieldDeclaration[3206-3255]"
    }, {
      "left" : "protected AccountLoader(Context context)",
      "right" : "protected AccountLoader(Context context)",
      "info" : "MethodDeclaration[3472-3552]:MethodDeclaration[3265-3345]"
    }, {
      "left" : "protected List<User> run(Account account) throws Exception",
      "right" : "protected List<User> run(Account account) throws Exception",
      "info" : "MethodDeclaration[3562-3690]:MethodDeclaration[3355-3483]"
    }, {
      "left" : "private AccountManager accountManager;",
      "right" : "private AccountManager accountManager;",
      "info" : "FieldDeclaration[3702-3740]:FieldDeclaration[3495-3533]"
    }, {
      "left" : "private Account[] accounts;",
      "right" : "private Account[] accounts;",
      "info" : "FieldDeclaration[3746-3773]:FieldDeclaration[3539-3566]"
    }, {
      "left" : "private String accessToken;",
      "right" : "private String accessToken;",
      "info" : "FieldDeclaration[3779-3806]:FieldDeclaration[3572-3599]"
    }, {
      "left" : "private String scope;",
      "right" : "private String scope;",
      "info" : "FieldDeclaration[3812-3833]:FieldDeclaration[3605-3626]"
    }, {
      "left" : "private RequestTokenClient requestTokenClient;",
      "right" : "private RequestTokenClient requestTokenClient;",
      "info" : "FieldDeclaration[3839-3885]:FieldDeclaration[3632-3678]"
    }, {
      "left" : "private AlertDialog progressDialog;",
      "right" : "private AlertDialog progressDialog;",
      "info" : "FieldDeclaration[3891-3926]:FieldDeclaration[3684-3719]"
    }, {
      "left" : "public void onCreate(Bundle savedInstanceState)",
      "right" : "public void onCreate(Bundle savedInstanceState)",
      "info" : "MethodDeclaration[3932-4407]:MethodDeclaration[3725-4200]"
    }, {
      "left" : "protected void onNewIntent(Intent intent)",
      "right" : "private void onUserLoggedIn(Uri uri)",
      "info" : "MethodDeclaration[4413-5710]:MethodDeclaration[4375-5581]"
    }, {
      "left" : "public void onResponseOk(Token token, Response r)",
      "right" : "public void onResponseOk(Token token, Response r)",
      "info" : "MethodDeclaration[4976-5450]:MethodDeclaration[4849-5321]"
    }, {
      "left" : "public void onFail(RetrofitError error)",
      "right" : "public void onFail(RetrofitError error)",
      "info" : "MethodDeclaration[5472-5614]:MethodDeclaration[5343-5485]"
    }, {
      "left" : "private void openMain()",
      "right" : "private void openMain()",
      "info" : "MethodDeclaration[5716-5892]:MethodDeclaration[5587-5802]"
    }, {
      "left" : "private void openLoadingDialog()",
      "right" : "private void openLoadingDialog()",
      "info" : "MethodDeclaration[5898-6084]:MethodDeclaration[5808-5994]"
    }, {
      "left" : "public void handleLogin()",
      "right" : "public void handleLogin()",
      "info" : "MethodDeclaration[6318-6397]:MethodDeclaration[6000-6079]"
    }, {
      "left" : "public boolean onOptionsItemSelected(MenuItem item)",
      "right" : "public boolean onOptionsItemSelected(MenuItem item)",
      "info" : "MethodDeclaration[8100-8390]:MethodDeclaration[7089-7378]"
    }, {
      "left" : "public void onResponseOk(com.alorma.github.sdk.bean.dto.response.User user, Response r)",
      "right" : "public void onResponseOk(com.alorma.github.sdk.bean.dto.response.User user, Response r)",
      "info" : "MethodDeclaration[8396-9249]:MethodDeclaration[7384-8237]"
    }, {
      "left" : "public void onFail(RetrofitError error)",
      "right" : "public void onFail(RetrofitError error)",
      "info" : "MethodDeclaration[9255-9349]:MethodDeclaration[8243-8337]"
    }, {
      "left" : "private void endAccess(String accessToken, String scope)",
      "right" : "private void endAuth(String accessToken, String scope)",
      "info" : "MethodDeclaration[9355-9715]:MethodDeclaration[8343-8701]"
    }, {
      "left" : "public boolean onCreateOptionsMenu(Menu optionMenu)",
      "right" : "public boolean onCreateOptionsMenu(Menu optionMenu)",
      "info" : "MethodDeclaration[9721-9876]:MethodDeclaration[8707-8862]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2995-3312]:Block[2788-3105]"
    }, {
      "left" : "Log.d(TAG, \"Configuring account sync\");",
      "right" : "Log.d(TAG, \"Configuring account sync\");",
      "info" : "ExpressionStatement[3005-3044]:ExpressionStatement[2798-2837]"
    }, {
      "left" : "ContentResolver.setIsSyncable(account, PROVIDER_AUTHORITY, 1);",
      "right" : "ContentResolver.setIsSyncable(account, PROVIDER_AUTHORITY, 1);",
      "info" : "ExpressionStatement[3054-3116]:ExpressionStatement[2847-2909]"
    }, {
      "left" : "ContentResolver.setSyncAutomatically(account, PROVIDER_AUTHORITY, true);",
      "right" : "ContentResolver.setSyncAutomatically(account, PROVIDER_AUTHORITY, true);",
      "info" : "ExpressionStatement[3125-3197]:ExpressionStatement[2918-2990]"
    }, {
      "left" : "ContentResolver.addPeriodicSync(account, PROVIDER_AUTHORITY,\n            new Bundle(), SYNC_PERIOD);",
      "right" : "ContentResolver.addPeriodicSync(account, PROVIDER_AUTHORITY,\n            new Bundle(), SYNC_PERIOD);",
      "info" : "ExpressionStatement[3206-3306]:ExpressionStatement[2999-3099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3513-3552]:Block[3306-3345]"
    }, {
      "left" : "super(context);",
      "right" : "super(context);",
      "info" : "SuperConstructorInvocation[3527-3542]:SuperConstructorInvocation[3320-3335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3639-3690]:Block[3432-3483]"
    }, {
      "left" : "return cache.getOrgs(true);",
      "right" : "return cache.getOrgs(true);",
      "info" : "ReturnStatement[3653-3680]:ReturnStatement[3446-3473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3994-4407]:Block[3787-4200]"
    }, {
      "left" : "super.onCreate(savedInstanceState);",
      "right" : "super.onCreate(savedInstanceState);",
      "info" : "ExpressionStatement[4004-4039]:ExpressionStatement[3797-3832]"
    }, {
      "left" : "setContentView(R.layout.login);",
      "right" : "setContentView(R.layout.login);",
      "info" : "ExpressionStatement[4049-4080]:ExpressionStatement[3842-3873]"
    }, {
      "left" : "Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);",
      "right" : "Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);",
      "info" : "VariableDeclarationStatement[4090-4145]:VariableDeclarationStatement[3883-3938]"
    }, {
      "left" : "setSupportActionBar(toolbar);",
      "right" : "setSupportActionBar(toolbar);",
      "info" : "ExpressionStatement[4154-4183]:ExpressionStatement[3947-3976]"
    }, {
      "left" : "accountManager = AccountManager.get(this);",
      "right" : "accountManager = AccountManager.get(this);",
      "info" : "ExpressionStatement[4193-4235]:ExpressionStatement[3986-4028]"
    }, {
      "left" : "accounts = accountManager.getAccountsByType(getString(R.string.account_type));",
      "right" : "accounts = accountManager.getAccountsByType(getString(R.string.account_type));",
      "info" : "ExpressionStatement[4245-4323]:ExpressionStatement[4038-4116]"
    }, {
      "left" : "if (accounts != null && accounts.length > 0)",
      "right" : "if (accounts != null && accounts.length > 0)",
      "info" : "IfStatement[4333-4401]:IfStatement[4126-4194]"
    }, {
      "left" : "openMain();",
      "right" : "openMain();",
      "info" : "ExpressionStatement[4390-4401]:ExpressionStatement[4183-4194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4469-5710]:Block[4412-5581]"
    }, {
      "left" : "super.onNewIntent(intent);",
      "right" : "super.onNewIntent(intent);",
      "info" : "ExpressionStatement[4479-4505]:ExpressionStatement[4272-4298]"
    }, {
      "left" : "Uri uri = intent.getData();",
      "right" : "Uri uri = intent.getData();",
      "info" : "VariableDeclarationStatement[4514-4541]:VariableDeclarationStatement[4307-4334]"
    }, {
      "left" : "if(uri != null && uri.getScheme().equals(getString(R.string.github_oauth_scheme)))",
      "right" : "if (uri != null && uri.getScheme().equals(getString(R.string.github_oauth_scheme)))",
      "info" : "IfStatement[4550-5704]:IfStatement[4422-5575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4632-5704]:Block[4506-5575]"
    }, {
      "left" : "openLoadingDialog();",
      "right" : "openLoadingDialog();",
      "info" : "ExpressionStatement[4646-4666]:ExpressionStatement[4520-4540]"
    }, {
      "left" : "String code = uri.getQueryParameter(\"code\");",
      "right" : "String code = uri.getQueryParameter(\"code\");",
      "info" : "VariableDeclarationStatement[4679-4723]:VariableDeclarationStatement[4553-4597]"
    }, {
      "left" : "if (requestTokenClient == null)",
      "right" : "if (requestTokenClient == null)",
      "info" : "IfStatement[4737-5694]:IfStatement[4610-5565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4769-5694]:Block[4642-5565]"
    }, {
      "left" : "requestTokenClient = new RequestTokenClient(LoginActivity.this, code);",
      "right" : "requestTokenClient = new RequestTokenClient(LoginActivity.this, code);",
      "info" : "ExpressionStatement[4787-4857]:ExpressionStatement[4660-4730]"
    }, {
      "left" : "requestTokenClient.setOnResultCallback(new BaseClient.OnResultCallback<Token>() {\n                    @Override\n                    public void onResponseOk(Token token, Response r) {\n                        if (token.access_token != null) {\n                            endAccess(token.access_token, token.scope);\n                        } else if (token.error != null) {\n                            Toast.makeText(LoginActivity.this, token.error, Toast.LENGTH_LONG).show();\n                            progressDialog.dismiss();\n                        }\n                    }\n\n                    @Override\n                    public void onFail(RetrofitError error) {\n                        error.printStackTrace();\n                    }\n                });",
      "right" : "requestTokenClient.setOnResultCallback(new BaseClient.OnResultCallback<Token>() {\n                    @Override\n                    public void onResponseOk(Token token, Response r) {\n                        if (token.access_token != null) {\n                            endAuth(token.access_token, token.scope);\n                        } else if (token.error != null) {\n                            Toast.makeText(LoginActivity.this, token.error, Toast.LENGTH_LONG).show();\n                            progressDialog.dismiss();\n                        }\n                    }\n\n                    @Override\n                    public void onFail(RetrofitError error) {\n                        error.printStackTrace();\n                    }\n                });",
      "info" : "ExpressionStatement[4874-5634]:ExpressionStatement[4747-5505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5056-5450]:Block[4929-5321]"
    }, {
      "left" : "if (token.access_token != null)",
      "right" : "if (token.access_token != null)",
      "info" : "IfStatement[5082-5428]:IfStatement[4955-5299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5114-5213]:Block[4987-5084]"
    }, {
      "left" : "endAccess(token.access_token, token.scope);",
      "right" : "endAuth(token.access_token, token.scope);",
      "info" : "ExpressionStatement[5144-5187]:ExpressionStatement[5017-5058]"
    }, {
      "left" : "if (token.error != null)",
      "right" : "if (token.error != null)",
      "info" : "IfStatement[5219-5428]:IfStatement[5090-5299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5244-5428]:Block[5115-5299]"
    }, {
      "left" : "Toast.makeText(LoginActivity.this, token.error, Toast.LENGTH_LONG).show();",
      "right" : "Toast.makeText(LoginActivity.this, token.error, Toast.LENGTH_LONG).show();",
      "info" : "ExpressionStatement[5274-5348]:ExpressionStatement[5145-5219]"
    }, {
      "left" : "progressDialog.dismiss();",
      "right" : "progressDialog.dismiss();",
      "info" : "ExpressionStatement[5377-5402]:ExpressionStatement[5248-5273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5542-5614]:Block[5413-5485]"
    }, {
      "left" : "error.printStackTrace();",
      "right" : "error.printStackTrace();",
      "info" : "ExpressionStatement[5568-5592]:ExpressionStatement[5439-5463]"
    }, {
      "left" : "requestTokenClient.execute();",
      "right" : "requestTokenClient.execute();",
      "info" : "ExpressionStatement[5651-5680]:ExpressionStatement[5522-5551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5740-5892]:Block[5611-5802]"
    }, {
      "left" : "progressDialog.dismiss();",
      "right" : "progressDialog.dismiss();",
      "info" : "ExpressionStatement[5750-5775]:ExpressionStatement[5660-5685]"
    }, {
      "left" : "Intent intent = new Intent(this, MainActivity.class);",
      "right" : "Intent intent = new Intent(this, MainActivity.class);",
      "info" : "VariableDeclarationStatement[5784-5837]:VariableDeclarationStatement[5694-5747]"
    }, {
      "left" : "startActivity(intent);",
      "right" : "startActivity(intent);",
      "info" : "ExpressionStatement[5846-5868]:ExpressionStatement[5756-5778]"
    }, {
      "left" : "finish();",
      "right" : "finish();",
      "info" : "ExpressionStatement[5877-5886]:ExpressionStatement[5787-5796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5931-6084]:Block[5841-5994]"
    }, {
      "left" : "progressDialog = LightProgressDialog.create(this,\n                R.string.login_activity_authenticating);",
      "right" : "progressDialog = LightProgressDialog.create(this,\n                R.string.login_activity_authenticating);",
      "info" : "ExpressionStatement[5941-6047]:ExpressionStatement[5851-5957]"
    }, {
      "left" : "progressDialog.show();",
      "right" : "progressDialog.show();",
      "info" : "ExpressionStatement[6056-6078]:ExpressionStatement[5966-5988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6344-6397]:Block[6026-6079]"
    }, {
      "left" : "openLoginInBrowser(new GitHub(this));",
      "right" : "openLoginInBrowser(new GitHub(this));",
      "info" : "ExpressionStatement[6354-6391]:ExpressionStatement[6036-6073]"
    }, {
      "left" : "String initialScope = \"user,public_repo,repo,delete_repo,notifications,gist\";",
      "right" : "String initialScope = \"user,public_repo,repo,delete_repo,notifications,gist\";",
      "info" : "VariableDeclarationStatement[6463-6540]:VariableDeclarationStatement[6145-6222]"
    }, {
      "left" : "HttpUrl.Builder url = new HttpUrl.Builder()\n                .scheme(\"https\")\n                .host(OAUTH_HOST)\n                .addPathSegment(\"login\")\n                .addPathSegment(\"oauth\")\n                .addPathSegment(\"authorize\")\n                .addQueryParameter(\"client_id\", client.getApiClient())\n                .addQueryParameter(\"scope\", initialScope);",
      "right" : "HttpUrl.Builder url = new HttpUrl.Builder()\n                .scheme(\"https\")\n                .host(OAUTH_HOST)\n                .addPathSegment(\"login\")\n                .addPathSegment(\"oauth\")\n                .addPathSegment(\"authorize\")\n                .addQueryParameter(\"client_id\", client.getApiClient())\n                .addQueryParameter(\"scope\", initialScope);",
      "info" : "VariableDeclarationStatement[6549-6916]:VariableDeclarationStatement[6231-6598]"
    }, {
      "left" : "final List<LabeledIntent> intentList = new ArrayList<>();",
      "right" : "Intent intent = new Intent(this, LoginWebViewActivity.class);",
      "info" : "VariableDeclarationStatement[6991-7048]:VariableDeclarationStatement[6608-6669]"
    }, {
      "left" : "intentList.add(new LabeledIntent(newIntent,\n                    resolveInfo.resolvePackageName,\n                    resolveInfo.labelRes,\n                    resolveInfo.icon));",
      "right" : "startActivityForResult(intent, WEBVIEW_REQUEST_CODE);",
      "info" : "ExpressionStatement[7371-7548]:ExpressionStatement[6737-6790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8166-8390]:Block[7155-7378]"
    }, {
      "left" : "switch (item.getItemId()) {\n            case R.id.m_login:\n                handleLogin();\n                return true;\n            default:\n                return super.onOptionsItemSelected(item);\n        }",
      "right" : "switch (item.getItemId()) {\n            case R.id.m_login:\n                handleLogin();\n                return true;\n            default:\n                return super.onOptionsItemSelected(item);\n        }",
      "info" : "SwitchStatement[8176-8383]:SwitchStatement[7165-7372]"
    }, {
      "left" : "case R.id.m_login:",
      "right" : "case R.id.m_login:",
      "info" : "SwitchCase[8216-8234]:SwitchCase[7205-7223]"
    }, {
      "left" : "handleLogin();",
      "right" : "handleLogin();",
      "info" : "ExpressionStatement[8251-8265]:ExpressionStatement[7240-7254]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8282-8294]:ReturnStatement[7271-7283]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[8307-8315]:SwitchCase[7296-7304]"
    }, {
      "left" : "return super.onOptionsItemSelected(item);",
      "right" : "return super.onOptionsItemSelected(item);",
      "info" : "ReturnStatement[8332-8373]:ReturnStatement[7321-7362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8498-9249]:Block[7486-8237]"
    }, {
      "left" : "Account account = new Account(user.login, getString(R.string.account_type));",
      "right" : "Account account = new Account(user.login, getString(R.string.account_type));",
      "info" : "VariableDeclarationStatement[8508-8584]:VariableDeclarationStatement[7496-7572]"
    }, {
      "left" : "Bundle userData = AccountsHelper.buildBundle(user.name, user.email, user.avatar_url, scope);",
      "right" : "Bundle userData = AccountsHelper.buildBundle(user.name, user.email, user.avatar_url, scope);",
      "info" : "VariableDeclarationStatement[8593-8685]:VariableDeclarationStatement[7581-7673]"
    }, {
      "left" : "userData.putString(AccountManager.KEY_AUTHTOKEN, accessToken);",
      "right" : "userData.putString(AccountManager.KEY_AUTHTOKEN, accessToken);",
      "info" : "ExpressionStatement[8694-8756]:ExpressionStatement[7682-7744]"
    }, {
      "left" : "accountManager.addAccountExplicitly(account, null, userData);",
      "right" : "accountManager.addAccountExplicitly(account, null, userData);",
      "info" : "ExpressionStatement[8766-8827]:ExpressionStatement[7754-7815]"
    }, {
      "left" : "accountManager.setAuthToken(account, getString(R.string.account_type), accessToken);",
      "right" : "accountManager.setAuthToken(account, getString(R.string.account_type), accessToken);",
      "info" : "ExpressionStatement[8836-8920]:ExpressionStatement[7824-7908]"
    }, {
      "left" : "Bundle result = new Bundle();",
      "right" : "Bundle result = new Bundle();",
      "info" : "VariableDeclarationStatement[8930-8959]:VariableDeclarationStatement[7918-7947]"
    }, {
      "left" : "result.putString(AccountManager.KEY_ACCOUNT_NAME, account.name);",
      "right" : "result.putString(AccountManager.KEY_ACCOUNT_NAME, account.name);",
      "info" : "ExpressionStatement[8968-9032]:ExpressionStatement[7956-8020]"
    }, {
      "left" : "result.putString(AccountManager.KEY_ACCOUNT_TYPE, account.type);",
      "right" : "result.putString(AccountManager.KEY_ACCOUNT_TYPE, account.type);",
      "info" : "ExpressionStatement[9041-9105]:ExpressionStatement[8029-8093]"
    }, {
      "left" : "result.putString(AccountManager.KEY_AUTHTOKEN, accessToken);",
      "right" : "result.putString(AccountManager.KEY_AUTHTOKEN, accessToken);",
      "info" : "ExpressionStatement[9114-9174]:ExpressionStatement[8102-8162]"
    }, {
      "left" : "setAccountAuthenticatorResult(result);",
      "right" : "setAccountAuthenticatorResult(result);",
      "info" : "ExpressionStatement[9184-9222]:ExpressionStatement[8172-8210]"
    }, {
      "left" : "openMain();",
      "right" : "openMain();",
      "info" : "ExpressionStatement[9232-9243]:ExpressionStatement[8220-8231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9309-9349]:Block[8297-8337]"
    }, {
      "left" : "error.printStackTrace();",
      "right" : "error.printStackTrace();",
      "info" : "ExpressionStatement[9319-9343]:ExpressionStatement[8307-8331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9412-9715]:Block[8398-8701]"
    }, {
      "left" : "this.accessToken = accessToken;",
      "right" : "this.accessToken = accessToken;",
      "info" : "ExpressionStatement[9422-9453]:ExpressionStatement[8408-8439]"
    }, {
      "left" : "this.scope = scope;",
      "right" : "this.scope = scope;",
      "info" : "ExpressionStatement[9462-9481]:ExpressionStatement[8448-8467]"
    }, {
      "left" : "progressDialog.setMessage(getString(R.string.loading_user));",
      "right" : "progressDialog.setMessage(getString(R.string.loading_user));",
      "info" : "ExpressionStatement[9491-9551]:ExpressionStatement[8477-8537]"
    }, {
      "left" : "GetAuthUserClient userClient = new GetAuthUserClient(this, accessToken);",
      "right" : "GetAuthUserClient userClient = new GetAuthUserClient(this, accessToken);",
      "info" : "VariableDeclarationStatement[9561-9633]:VariableDeclarationStatement[8547-8619]"
    }, {
      "left" : "userClient.setOnResultCallback(this);",
      "right" : "userClient.setOnResultCallback(this);",
      "info" : "ExpressionStatement[9642-9679]:ExpressionStatement[8628-8665]"
    }, {
      "left" : "userClient.execute();",
      "right" : "userClient.execute();",
      "info" : "ExpressionStatement[9688-9709]:ExpressionStatement[8674-8695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9787-9876]:Block[8773-8862]"
    }, {
      "left" : "getMenuInflater().inflate(R.menu.login, optionMenu);",
      "right" : "getMenuInflater().inflate(R.menu.login, optionMenu);",
      "info" : "ExpressionStatement[9797-9849]:ExpressionStatement[8783-8835]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9858-9870]:ReturnStatement[8844-8856]"
    } ]
  },
  "interFileMappings" : { }
}