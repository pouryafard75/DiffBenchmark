{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Frequency",
      "right" : "Frequency",
      "info" : "TypeDeclaration[985-15514]:TypeDeclaration[985-15666]"
    }, {
      "left" : "private static final long serialVersionUID = -3845586908418844111L;",
      "right" : "private static final long serialVersionUID = -3845586908418844111L;",
      "info" : "FieldDeclaration[1961-2071]:FieldDeclaration[1961-2071]"
    }, {
      "left" : "private final TreeMap freqTable;",
      "right" : "private final TreeMap freqTable;",
      "info" : "FieldDeclaration[2077-2142]:FieldDeclaration[2077-2142]"
    }, {
      "left" : "public Frequency()",
      "right" : "public Frequency()",
      "info" : "MethodDeclaration[2148-2253]:MethodDeclaration[2148-2253]"
    }, {
      "left" : "public Frequency(Comparator comparator)",
      "right" : "public Frequency(Comparator comparator)",
      "info" : "MethodDeclaration[2263-2499]:MethodDeclaration[2263-2499]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[2505-3391]:MethodDeclaration[2505-3391]"
    }, {
      "left" : "public void addValue(Object v)",
      "right" : "public void addValue(Object v)",
      "info" : "MethodDeclaration[3397-3960]:MethodDeclaration[3397-4112]"
    }, {
      "left" : "public void addValue(Comparable<?>v",
      "right" : "public void addValue(Comparable<?>v",
      "info" : "MethodDeclaration[3970-4980]:MethodDeclaration[4122-5132]"
    }, {
      "left" : "public void addValue(int v)",
      "right" : "public void addValue(int v)",
      "info" : "MethodDeclaration[4986-5158]:MethodDeclaration[5138-5310]"
    }, {
      "left" : "public void addValue(Integer v)",
      "right" : "public void addValue(Integer v)",
      "info" : "MethodDeclaration[5168-5356]:MethodDeclaration[5320-5508]"
    }, {
      "left" : "public void addValue(long v)",
      "right" : "public void addValue(long v)",
      "info" : "MethodDeclaration[5362-5535]:MethodDeclaration[5514-5687]"
    }, {
      "left" : "public void addValue(char v)",
      "right" : "public void addValue(char v)",
      "info" : "MethodDeclaration[5545-5723]:MethodDeclaration[5697-5875]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[5733-5825]:MethodDeclaration[5885-5977]"
    }, {
      "left" : "public Iterator valuesIterator()",
      "right" : "public Iterator valuesIterator()",
      "info" : "MethodDeclaration[5835-6276]:MethodDeclaration[5987-6428]"
    }, {
      "left" : "public long getSumFreq()",
      "right" : "public long getSumFreq()",
      "info" : "MethodDeclaration[6371-6727]:MethodDeclaration[6523-6879]"
    }, {
      "left" : "public long getCount(Object v)",
      "right" : "public long getCount(Object v)",
      "info" : "MethodDeclaration[6733-7415]:MethodDeclaration[6885-7567]"
    }, {
      "left" : "public long getCount(int v)",
      "right" : "public long getCount(int v)",
      "info" : "MethodDeclaration[7421-7635]:MethodDeclaration[7573-7787]"
    }, {
      "left" : "public long getCount(long v)",
      "right" : "public long getCount(long v)",
      "info" : "MethodDeclaration[7645-7860]:MethodDeclaration[7797-8012]"
    }, {
      "left" : "public long getCount(char v)",
      "right" : "public long getCount(char v)",
      "info" : "MethodDeclaration[7870-8090]:MethodDeclaration[8022-8242]"
    }, {
      "left" : "public double getPct(Object v)",
      "right" : "public double getPct(Object v)",
      "info" : "MethodDeclaration[8169-8681]:MethodDeclaration[8321-8833]"
    }, {
      "left" : "public double getPct(int v)",
      "right" : "public double getPct(int v)",
      "info" : "MethodDeclaration[8691-8986]:MethodDeclaration[8843-9138]"
    }, {
      "left" : "public double getPct(long v)",
      "right" : "public double getPct(long v)",
      "info" : "MethodDeclaration[8996-9294]:MethodDeclaration[9148-9446]"
    }, {
      "left" : "public double getPct(char v)",
      "right" : "public double getPct(char v)",
      "info" : "MethodDeclaration[9304-9607]:MethodDeclaration[9456-9759]"
    }, {
      "left" : "public long getCumFreq(Object v)",
      "right" : "public long getCumFreq(Object v)",
      "info" : "MethodDeclaration[9718-11234]:MethodDeclaration[9870-11386]"
    }, {
      "left" : "public long getCumFreq(int v)",
      "right" : "public long getCumFreq(int v)",
      "info" : "MethodDeclaration[11245-11593]:MethodDeclaration[11397-11745]"
    }, {
      "left" : "public long getCumFreq(long v)",
      "right" : "public long getCumFreq(long v)",
      "info" : "MethodDeclaration[11604-11955]:MethodDeclaration[11756-12107]"
    }, {
      "left" : "public long getCumFreq(char v)",
      "right" : "public long getCumFreq(char v)",
      "info" : "MethodDeclaration[11965-12321]:MethodDeclaration[12117-12473]"
    }, {
      "left" : "public double getCumPct(Object v)",
      "right" : "public double getCumPct(Object v)",
      "info" : "MethodDeclaration[12437-13086]:MethodDeclaration[12589-13238]"
    }, {
      "left" : "public double getCumPct(int v)",
      "right" : "public double getCumPct(int v)",
      "info" : "MethodDeclaration[13096-13499]:MethodDeclaration[13248-13651]"
    }, {
      "left" : "public double getCumPct(long v)",
      "right" : "public double getCumPct(long v)",
      "info" : "MethodDeclaration[13509-13915]:MethodDeclaration[13661-14067]"
    }, {
      "left" : "public double getCumPct(char v)",
      "right" : "public double getCumPct(char v)",
      "info" : "MethodDeclaration[13925-14336]:MethodDeclaration[14077-14488]"
    }, {
      "left" : "NaturalComparator",
      "right" : "NaturalComparator",
      "info" : "TypeDeclaration[14346-15512]:TypeDeclaration[14498-15664]"
    }, {
      "left" : "private static final long serialVersionUID = -3852193713161395148L;",
      "right" : "private static final long serialVersionUID = -3852193713161395148L;",
      "info" : "FieldDeclaration[14588-14702]:FieldDeclaration[14740-14854]"
    }, {
      "left" : "public int compare(Object o1, Object o2)",
      "right" : "public int compare(Object o1, Object o2)",
      "info" : "MethodDeclaration[14712-15506]:MethodDeclaration[14864-15658]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2211-2253]:Block[2211-2253]"
    }, {
      "left" : "freqTable = new TreeMap();",
      "right" : "freqTable = new TreeMap();",
      "info" : "ExpressionStatement[2221-2247]:ExpressionStatement[2221-2247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2447-2499]:Block[2447-2499]"
    }, {
      "left" : "freqTable = new TreeMap(comparator);",
      "right" : "freqTable = new TreeMap(comparator);",
      "info" : "ExpressionStatement[2457-2493]:ExpressionStatement[2457-2493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2685-3391]:Block[2685-3391]"
    }, {
      "left" : "NumberFormat nf = NumberFormat.getPercentInstance();",
      "right" : "NumberFormat nf = NumberFormat.getPercentInstance();",
      "info" : "VariableDeclarationStatement[2695-2747]:VariableDeclarationStatement[2695-2747]"
    }, {
      "left" : "StringBuffer outBuffer = new StringBuffer();",
      "right" : "StringBuffer outBuffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[2756-2800]:VariableDeclarationStatement[2756-2800]"
    }, {
      "left" : "outBuffer.append(\"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");",
      "right" : "outBuffer.append(\"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");",
      "info" : "ExpressionStatement[2809-2867]:ExpressionStatement[2809-2867]"
    }, {
      "left" : "Iterator iter = freqTable.keySet().iterator();",
      "right" : "Iterator iter = freqTable.keySet().iterator();",
      "info" : "VariableDeclarationStatement[2876-2922]:VariableDeclarationStatement[2876-2922]"
    }, {
      "left" : "while (iter.hasNext())",
      "right" : "while (iter.hasNext())",
      "info" : "WhileStatement[2931-3348]:WhileStatement[2931-3348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2954-3348]:Block[2954-3348]"
    }, {
      "left" : "Object value = iter.next();",
      "right" : "Object value = iter.next();",
      "info" : "VariableDeclarationStatement[2968-2995]:VariableDeclarationStatement[2968-2995]"
    }, {
      "left" : "outBuffer.append(value);",
      "right" : "outBuffer.append(value);",
      "info" : "ExpressionStatement[3008-3032]:ExpressionStatement[3008-3032]"
    }, {
      "left" : "outBuffer.append('\\t');",
      "right" : "outBuffer.append('\\t');",
      "info" : "ExpressionStatement[3045-3068]:ExpressionStatement[3045-3068]"
    }, {
      "left" : "outBuffer.append(getCount(value));",
      "right" : "outBuffer.append(getCount(value));",
      "info" : "ExpressionStatement[3081-3115]:ExpressionStatement[3081-3115]"
    }, {
      "left" : "outBuffer.append('\\t');",
      "right" : "outBuffer.append('\\t');",
      "info" : "ExpressionStatement[3128-3151]:ExpressionStatement[3128-3151]"
    }, {
      "left" : "outBuffer.append(nf.format(getPct(value)));",
      "right" : "outBuffer.append(nf.format(getPct(value)));",
      "info" : "ExpressionStatement[3164-3207]:ExpressionStatement[3164-3207]"
    }, {
      "left" : "outBuffer.append('\\t');",
      "right" : "outBuffer.append('\\t');",
      "info" : "ExpressionStatement[3220-3243]:ExpressionStatement[3220-3243]"
    }, {
      "left" : "outBuffer.append(nf.format(getCumPct(value)));",
      "right" : "outBuffer.append(nf.format(getCumPct(value)));",
      "info" : "ExpressionStatement[3256-3302]:ExpressionStatement[3256-3302]"
    }, {
      "left" : "outBuffer.append('\\n');",
      "right" : "outBuffer.append('\\n');",
      "info" : "ExpressionStatement[3315-3338]:ExpressionStatement[3315-3338]"
    }, {
      "left" : "return outBuffer.toString();",
      "right" : "return outBuffer.toString();",
      "info" : "ReturnStatement[3357-3385]:ReturnStatement[3357-3385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3900-3960]:Block[3900-4112]"
    }, {
      "left" : "addValue((Comparable<?>) v);",
      "right" : "addValue((Comparable<?>) v);",
      "info" : "ExpressionStatement[3914-3942]:ExpressionStatement[3955-3983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4363-4980]:Block[4515-5132]"
    }, {
      "left" : "Object obj = v;",
      "right" : "Object obj = v;",
      "info" : "VariableDeclarationStatement[4373-4388]:VariableDeclarationStatement[4525-4540]"
    }, {
      "left" : "if (v instanceof Integer)",
      "right" : "if (v instanceof Integer)",
      "info" : "IfStatement[4397-4492]:IfStatement[4549-4644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4423-4492]:Block[4575-4644]"
    }, {
      "left" : "obj = Long.valueOf(((Integer) v).longValue());",
      "right" : "obj = Long.valueOf(((Integer) v).longValue());",
      "info" : "ExpressionStatement[4436-4482]:ExpressionStatement[4588-4634]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4501-4974]:TryStatement[4653-5126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4505-4762]:Block[4657-4914]"
    }, {
      "left" : "Long count = (Long) freqTable.get(obj);",
      "right" : "Long count = (Long) freqTable.get(obj);",
      "info" : "VariableDeclarationStatement[4519-4558]:VariableDeclarationStatement[4671-4710]"
    }, {
      "left" : "if (count == null)",
      "right" : "if (count == null)",
      "info" : "IfStatement[4571-4752]:IfStatement[4723-4904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4590-4658]:Block[4742-4810]"
    }, {
      "left" : "freqTable.put(obj, Long.valueOf(1));",
      "right" : "freqTable.put(obj, Long.valueOf(1));",
      "info" : "ExpressionStatement[4608-4644]:ExpressionStatement[4760-4796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4664-4752]:Block[4816-4904]"
    }, {
      "left" : "freqTable.put(obj, Long.valueOf(count.longValue() + 1));",
      "right" : "freqTable.put(obj, Long.valueOf(count.longValue() + 1));",
      "info" : "ExpressionStatement[4682-4738]:ExpressionStatement[4834-4890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4793-4974]:Block[4945-5126]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Value not comparable to existing values.\");",
      "right" : "throw new IllegalArgumentException(\"Value not comparable to existing values.\");",
      "info" : "ThrowStatement[4885-4964]:ThrowStatement[5037-5116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5116-5158]:Block[5268-5310]"
    }, {
      "left" : "addValue(Long.valueOf(v));",
      "right" : "addValue(Long.valueOf(v));",
      "info" : "ExpressionStatement[5126-5152]:ExpressionStatement[5278-5304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5302-5356]:Block[5454-5508]"
    }, {
      "left" : "addValue(Long.valueOf(v.longValue()));",
      "right" : "addValue(Long.valueOf(v.longValue()));",
      "info" : "ExpressionStatement[5312-5350]:ExpressionStatement[5464-5502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5493-5535]:Block[5645-5687]"
    }, {
      "left" : "addValue(Long.valueOf(v));",
      "right" : "addValue(Long.valueOf(v));",
      "info" : "ExpressionStatement[5503-5529]:ExpressionStatement[5655-5681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5676-5723]:Block[5828-5875]"
    }, {
      "left" : "addValue(Character.valueOf(v));",
      "right" : "addValue(Character.valueOf(v));",
      "info" : "ExpressionStatement[5686-5717]:ExpressionStatement[5838-5869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5791-5825]:Block[5943-5977]"
    }, {
      "left" : "freqTable.clear();",
      "right" : "freqTable.clear();",
      "info" : "ExpressionStatement[5801-5819]:ExpressionStatement[5953-5971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6223-6276]:Block[6375-6428]"
    }, {
      "left" : "return freqTable.keySet().iterator();",
      "right" : "return freqTable.keySet().iterator();",
      "info" : "ReturnStatement[6233-6270]:ReturnStatement[6385-6422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6505-6727]:Block[6657-6879]"
    }, {
      "left" : "long result = 0;",
      "right" : "long result = 0;",
      "info" : "VariableDeclarationStatement[6515-6531]:VariableDeclarationStatement[6667-6683]"
    }, {
      "left" : "Iterator iterator = freqTable.values().iterator();",
      "right" : "Iterator iterator = freqTable.values().iterator();",
      "info" : "VariableDeclarationStatement[6540-6590]:VariableDeclarationStatement[6692-6742]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[6599-6698]:WhileStatement[6751-6850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6627-6698]:Block[6779-6850]"
    }, {
      "left" : "result += ((Long) iterator.next()).longValue();",
      "right" : "result += ((Long) iterator.next()).longValue();",
      "info" : "ExpressionStatement[6641-6688]:ExpressionStatement[6793-6840]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[6707-6721]:ReturnStatement[6859-6873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6950-7415]:Block[7102-7567]"
    }, {
      "left" : "if (v instanceof Integer)",
      "right" : "if (v instanceof Integer)",
      "info" : "IfStatement[6960-7053]:IfStatement[7112-7205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6986-7053]:Block[7138-7205]"
    }, {
      "left" : "return getCount(((Integer) v).longValue());",
      "right" : "return getCount(((Integer) v).longValue());",
      "info" : "ReturnStatement[7000-7043]:ReturnStatement[7152-7195]"
    }, {
      "left" : "long result = 0;",
      "right" : "long result = 0;",
      "info" : "VariableDeclarationStatement[7062-7078]:VariableDeclarationStatement[7214-7230]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7087-7386]:TryStatement[7239-7538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7091-7245]:Block[7243-7397]"
    }, {
      "left" : "Long count =  (Long) freqTable.get(v);",
      "right" : "Long count =  (Long) freqTable.get(v);",
      "info" : "VariableDeclarationStatement[7106-7144]:VariableDeclarationStatement[7258-7296]"
    }, {
      "left" : "if (count != null)",
      "right" : "if (count != null)",
      "info" : "IfStatement[7157-7235]:IfStatement[7309-7387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7176-7235]:Block[7328-7387]"
    }, {
      "left" : "result = count.longValue();",
      "right" : "result = count.longValue();",
      "info" : "ExpressionStatement[7194-7221]:ExpressionStatement[7346-7373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7276-7386]:Block[7428-7538]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[7395-7409]:ReturnStatement[7547-7561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7586-7635]:Block[7738-7787]"
    }, {
      "left" : "return getCount(Long.valueOf(v));",
      "right" : "return getCount(Long.valueOf(v));",
      "info" : "ReturnStatement[7596-7629]:ReturnStatement[7748-7781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7811-7860]:Block[7963-8012]"
    }, {
      "left" : "return getCount(Long.valueOf(v));",
      "right" : "return getCount(Long.valueOf(v));",
      "info" : "ReturnStatement[7821-7854]:ReturnStatement[7973-8006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8036-8090]:Block[8188-8242]"
    }, {
      "left" : "return getCount(Character.valueOf(v));",
      "right" : "return getCount(Character.valueOf(v));",
      "info" : "ReturnStatement[8046-8084]:ReturnStatement[8198-8236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8498-8681]:Block[8650-8833]"
    }, {
      "left" : "final long sumFreq = getSumFreq();",
      "right" : "final long sumFreq = getSumFreq();",
      "info" : "VariableDeclarationStatement[8508-8542]:VariableDeclarationStatement[8660-8694]"
    }, {
      "left" : "if (sumFreq == 0)",
      "right" : "if (sumFreq == 0)",
      "info" : "IfStatement[8551-8611]:IfStatement[8703-8763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8569-8611]:Block[8721-8763]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[8583-8601]:ReturnStatement[8735-8753]"
    }, {
      "left" : "return (double) getCount(v) / (double) sumFreq;",
      "right" : "return (double) getCount(v) / (double) sumFreq;",
      "info" : "ReturnStatement[8620-8667]:ReturnStatement[8772-8819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8932-8986]:Block[9084-9138]"
    }, {
      "left" : "return getPct(Long.valueOf(v));",
      "right" : "return getPct(Long.valueOf(v));",
      "info" : "ReturnStatement[8942-8973]:ReturnStatement[9094-9125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9238-9294]:Block[9390-9446]"
    }, {
      "left" : "return getPct(Long.valueOf(v));",
      "right" : "return getPct(Long.valueOf(v));",
      "info" : "ReturnStatement[9248-9279]:ReturnStatement[9400-9431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9546-9607]:Block[9698-9759]"
    }, {
      "left" : "return getPct(Character.valueOf(v));",
      "right" : "return getPct(Character.valueOf(v));",
      "info" : "ReturnStatement[9556-9592]:ReturnStatement[9708-9744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10012-11234]:Block[10164-11386]"
    }, {
      "left" : "if (getSumFreq() == 0)",
      "right" : "if (getSumFreq() == 0)",
      "info" : "IfStatement[10022-10078]:IfStatement[10174-10230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10045-10078]:Block[10197-10230]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[10059-10068]:ReturnStatement[10211-10220]"
    }, {
      "left" : "if (v instanceof Integer)",
      "right" : "if (v instanceof Integer)",
      "info" : "IfStatement[10087-10182]:IfStatement[10239-10334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10113-10182]:Block[10265-10334]"
    }, {
      "left" : "return getCumFreq(((Integer) v).longValue());",
      "right" : "return getCumFreq(((Integer) v).longValue());",
      "info" : "ReturnStatement[10127-10172]:ReturnStatement[10279-10324]"
    }, {
      "left" : "Comparator c = freqTable.comparator();",
      "right" : "Comparator c = freqTable.comparator();",
      "info" : "VariableDeclarationStatement[10191-10229]:VariableDeclarationStatement[10343-10381]"
    }, {
      "left" : "if (c == null)",
      "right" : "if (c == null)",
      "info" : "IfStatement[10238-10305]:IfStatement[10390-10457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10253-10305]:Block[10405-10457]"
    }, {
      "left" : "c = new NaturalComparator();",
      "right" : "c = new NaturalComparator();",
      "info" : "ExpressionStatement[10267-10295]:ExpressionStatement[10419-10447]"
    }, {
      "left" : "long result = 0;",
      "right" : "long result = 0;",
      "info" : "VariableDeclarationStatement[10314-10330]:VariableDeclarationStatement[10466-10482]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[10348-10598]:TryStatement[10500-10750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10352-10504]:Block[10504-10656]"
    }, {
      "left" : "Long value = (Long) freqTable.get(v);",
      "right" : "Long value = (Long) freqTable.get(v);",
      "info" : "VariableDeclarationStatement[10366-10403]:VariableDeclarationStatement[10518-10555]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[10416-10494]:IfStatement[10568-10646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10435-10494]:Block[10587-10646]"
    }, {
      "left" : "result = value.longValue();",
      "right" : "result = value.longValue();",
      "info" : "ExpressionStatement[10453-10480]:ExpressionStatement[10605-10632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10535-10598]:Block[10687-10750]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[10549-10563]:ReturnStatement[10701-10715]"
    }, {
      "left" : "if (c.compare(v, freqTable.firstKey()) < 0)",
      "right" : "if (c.compare(v, freqTable.firstKey()) < 0)",
      "info" : "IfStatement[10616-10740]:IfStatement[10768-10892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10660-10740]:Block[10812-10892]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[10674-10683]:ReturnStatement[10826-10835]"
    }, {
      "left" : "if (c.compare(v, freqTable.lastKey()) >= 0)",
      "right" : "if (c.compare(v, freqTable.lastKey()) >= 0)",
      "info" : "IfStatement[10758-10901]:IfStatement[10910-11053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10802-10901]:Block[10954-11053]"
    }, {
      "left" : "return getSumFreq();",
      "right" : "return getSumFreq();",
      "info" : "ReturnStatement[10816-10836]:ReturnStatement[10968-10988]"
    }, {
      "left" : "Iterator values = valuesIterator();",
      "right" : "Iterator values = valuesIterator();",
      "info" : "VariableDeclarationStatement[10919-10954]:VariableDeclarationStatement[11071-11106]"
    }, {
      "left" : "while (values.hasNext())",
      "right" : "while (values.hasNext())",
      "info" : "WhileStatement[10963-11205]:WhileStatement[11115-11357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10988-11205]:Block[11140-11357]"
    }, {
      "left" : "Object nextValue = values.next();",
      "right" : "Object nextValue = values.next();",
      "info" : "VariableDeclarationStatement[11002-11035]:VariableDeclarationStatement[11154-11187]"
    }, {
      "left" : "if (c.compare(v, nextValue) > 0)",
      "right" : "if (c.compare(v, nextValue) > 0)",
      "info" : "IfStatement[11048-11195]:IfStatement[11200-11347]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11081-11143]:Block[11233-11295]"
    }, {
      "left" : "result += getCount(nextValue);",
      "right" : "result += getCount(nextValue);",
      "info" : "ExpressionStatement[11099-11129]:ExpressionStatement[11251-11281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11149-11195]:Block[11301-11347]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11167-11181]:ReturnStatement[11319-11333]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11214-11228]:ReturnStatement[11366-11380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11535-11593]:Block[11687-11745]"
    }, {
      "left" : "return getCumFreq(Long.valueOf(v));",
      "right" : "return getCumFreq(Long.valueOf(v));",
      "info" : "ReturnStatement[11545-11580]:ReturnStatement[11697-11732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11895-11955]:Block[12047-12107]"
    }, {
      "left" : "return getCumFreq(Long.valueOf(v));",
      "right" : "return getCumFreq(Long.valueOf(v));",
      "info" : "ReturnStatement[11905-11940]:ReturnStatement[12057-12092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12256-12321]:Block[12408-12473]"
    }, {
      "left" : "return getCumFreq(Character.valueOf(v));",
      "right" : "return getCumFreq(Character.valueOf(v));",
      "info" : "ReturnStatement[12266-12306]:ReturnStatement[12418-12458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12901-13086]:Block[13053-13238]"
    }, {
      "left" : "final long sumFreq = getSumFreq();",
      "right" : "final long sumFreq = getSumFreq();",
      "info" : "VariableDeclarationStatement[12911-12945]:VariableDeclarationStatement[13063-13097]"
    }, {
      "left" : "if (sumFreq == 0)",
      "right" : "if (sumFreq == 0)",
      "info" : "IfStatement[12954-13014]:IfStatement[13106-13166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12972-13014]:Block[13124-13166]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[12986-13004]:ReturnStatement[13138-13156]"
    }, {
      "left" : "return (double) getCumFreq(v) / (double) sumFreq;",
      "right" : "return (double) getCumFreq(v) / (double) sumFreq;",
      "info" : "ReturnStatement[13023-13072]:ReturnStatement[13175-13224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13442-13499]:Block[13594-13651]"
    }, {
      "left" : "return getCumPct(Long.valueOf(v));",
      "right" : "return getCumPct(Long.valueOf(v));",
      "info" : "ReturnStatement[13452-13486]:ReturnStatement[13604-13638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13856-13915]:Block[14008-14067]"
    }, {
      "left" : "return getCumPct(Long.valueOf(v));",
      "right" : "return getCumPct(Long.valueOf(v));",
      "info" : "ReturnStatement[13866-13900]:ReturnStatement[14018-14052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14272-14336]:Block[14424-14488]"
    }, {
      "left" : "return getCumPct(Character.valueOf(v));",
      "right" : "return getCumPct(Character.valueOf(v));",
      "info" : "ReturnStatement[14282-14321]:ReturnStatement[14434-14473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15444-15506]:Block[15596-15658]"
    }, {
      "left" : "return ((Comparable)o1).compareTo(o2);",
      "right" : "return ((Comparable)o1).compareTo(o2);",
      "info" : "ReturnStatement[15458-15496]:ReturnStatement[15610-15648]"
    } ]
  },
  "interFileMappings" : { }
}