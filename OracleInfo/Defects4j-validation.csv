Chart1,Easy,-
Chart10,Easy,-
Chart11,Easy,-
Chart12,Easy,"Variable `dataset` has become the argument of the setter method, Thus its make sense to match the simple names."
Chart13,Easy,-
Chart14,Easy,-
Chart15,Easy,-
Chart16,Easy,-
Chart17,Easy,-
Chart18,Easy,-
Chart19,Easy,-
Chart2,Easy,-
Chart20,Easy,-
Chart21,Easy,-
Chart22,Medium,"There is an ExtractVariable refactoring perfmored on variable `index`, as its evident `index` is now passed to R234 instead of the `columnKey`, we decided to map the `columnKey` variables to highlight the refactoring."
Chart23,Easy,-
Chart24,Easy,-
Chart25,Medium,Extract Variable `n` refactoring perfomred two times
Chart26,Easy,-
Chart3,Easy,-
Chart4,Easy,-
Chart5,Easy,-
Chart6,Easy,-
Chart7,Easy,-
Chart8,Easy,-
Chart9,Easy,-
Cli1,Medium,"Map -> Set migration, thus imports are matched"
Cli10,Easy,
Cli11,Easy,
Cli12,Easy,
Cli13,Easy,
Cli14,Easy,(debatable) 262 -> 258
Cli15,Medium,
Cli16,Easy,
Cli17,Easy,
Cli18,Medium,
Cli19,Easy,
Cli2,Easy,"(debatable) L305 -> R305, its better not to map the `ch` and `token`, one is a method parameter and the other one is a variable and string concatenation with similar structure happend in L289->R289. thus the concatenated string looks to be meaningful in this context. "
Cli20,Hard,"If-else logic is replaced with ternary operator and a result L116,L121 both must be mapped with the R123. The newly introduced if-else is different than the previous one and it doesnt make sense to map those. In order to handle the one additional statement in the if branch, they had to add the condition in R124 which despite the similarity with the original condition, is the new logic. We decided not to go for the multimapping for the newly introduced if in R124 due to the simplicity and clearity."
Cli21,Easy,
Cli22,Medium,
Cli23,Easy,
Cli24,Easy,
Cli25,Easy,
Cli26,Easy,
Cli27,Easy,
Cli28,Easy,
Cli29,Easy,
Cli3,Medium,"L162 => R165 & R169, Both statement have the criteria to be matched and either of them must be excuted for the same intention."
Cli30,Easy,
Cli31,Easy,
Cli32,Easy,
Cli33,Easy,
Cli34,Easy,
Cli35,Easy,
Cli36,Easy,
Cli37,Medium,???
Cli38,Medium,
Cli39,Easy,
Cli4,Easy,-
Cli40,Easy,
Cli5,Easy,-
Cli7,Easy,"HashSet -> LinkedHashet, thus imports must be matched"
Cli8,Easy,
Cli9,Easy,
Closure1,Easy,
Closure10,Easy,
Closure100,Easy,
Closure101,Easy,
Closure102,Easy,
Closure103,Easy,
Closure104,Easy,
Closure105,Easy,
Closure106,Easy,
Closure107,Easy,
Closure108,Easy,
Closure109,Easy,
Closure11,Easy,
Closure110,Easy,
Closure111,Easy,
Closure112,Easy,
Closure113,Easy,
Closure114,Easy,
Closure115,Easy,
Closure116,Easy,
Closure117,Easy,
Closure118,Easy,
Closure119,Easy,
Closure12,Easy,
Closure120,Easy,
Closure121,Easy,
Closure122,Easy,
Closure123,Easy,
Closure124,Easy,
Closure125,Easy,
Closure126,Easy,
Closure127,Easy,
Closure128,Easy,
Closure129,Easy,
Closure13,Easy,
Closure130,Easy,
Closure131,Easy,
Closure132,Easy,
Closure133,Easy,
Closure134,Medium,
Closure135,Easy,
Closure136,Medium,
Closure137,Medium,????
Closure138,Medium,????
Closure139,Easy,
Closure14,Easy,
Closure140,Easy,
Closure141,Medium,????
Closure142,Easy,
Closure143,Easy,
Closure144,Easy,src_com_google_javascript_jscomp_FunctionTypeBuilder.java:      move action for typeRegistry.getNativeType(UNKNOWN_TYPE) can not be justified. Also the argument is different
Closure145,Easy,
Closure146,Easy,
Closure147,Easy,
Closure148,Hard,????
Closure149,Easy,?????
Closure15,Easy,
Closure150,Easy,There is no reason behind matching the statement containing super invoctation with the attachLiterals method invocation in 1451.
Closure151,Easy,
Closure152,Easy,
Closure154,Medium,
Closure155,Easy,
Closure156,Easy,
Closure157,Medium,????
Closure158,Medium,????
Closure159,Medium,
Closure16,Easy,
Closure160,Medium,?????
Closure161,Easy,
Closure164,Easy,
Closure165,Easy,
Closure166,Easy,
Closure167,Easy,"(debatable) 434->432 code looks different, the return statement is not doing the same thing as before. Its better not to map"
Closure168,Easy,
Closure169,Easy,(debatable) JSType.java its better to match 528 with 528 due to the fact that else-if is removed.
Closure17,Easy,
Closure170,Medium,
Closure171,Easy,
Closure172,Easy,
Closure173,Easy,
Closure175,Medium,
Closure18,Easy,
Closure19,Easy,
Closure2,Easy,
Closure20,Easy,
Closure21,Easy,
Closure22,Easy,
Closure23,Easy,
Closure24,Medium,
Closure25,Easy,
Closure26,Easy,
Closure27,Easy,
Closure28,Easy,
Closure29,Easy,
Closure3,Easy,
Closure30,Easy,
Closure31,Easy,
Closure32,Easy,
Closure33,Easy,
Closure34,Easy,"(debatable) the move of 123->752 looks right. But introducing the mapping for 122 -> 747, and 124 -> 753 cause more confusions."
Closure35,Easy,"R1122 doesnt have a good mapping on the left on side, thus its better not to match it."
Closure36,Easy,
Closure37,Easy,
Closure38,Easy,
Closure39,Easy,
Closure4,Easy,
Closure40,Easy,
Closure41,Easy,
Closure42,Easy,
Closure43,Easy,
Closure44,Easy,
Closure45,Easy,
Closure46,Easy,
Closure47,Easy,
Closure48,Easy,
Closure49,Easy,
Closure5,Easy,
Closure50,Easy,
Closure51,Easy,
Closure52,Easy,
Closure53,Easy,
Closure54,Easy,
Closure55,Easy,
Closure56,Easy,
Closure57,Easy,
Closure58,Easy,
Closure59,Easy,
Closure6,Easy,
Closure60,Easy,
Closure61,Easy,
Closure62,Easy,
Closure64,Easy,
Closure65,Easy,
Closure66,Easy,
Closure67,Easy,
Closure68,Easy,
Closure69,Easy,
Closure7,Easy,
Closure70,Easy,
Closure71,Easy,
Closure72,Easy,
Closure73,Easy,
Closure74,Easy,
Closure75,Easy,
Closure76,Easy,"(debatable) blocks 372 => 354 can also be added, but due to having no common statements, its better to avoid this mapping"
Closure77,Easy,
Closure78,Easy,
Closure79,Easy,
Closure8,Easy,
Closure80,Easy,
Closure81,Easy,
Closure82,Easy,
Closure83,Easy,
Closure84,Easy,
Closure85,Easy,
Closure86,Easy,
Closure87,Easy,
Closure88,Easy,
Closure89,Easy,
Closure9,Easy,
Closure90,Easy,
Closure91,Easy,
Closure92,Easy,
Closure94,Easy,
Closure95,Easy,
Closure96,Easy,
Closure97,Easy,
Closure98,Easy,
Closure99,Medium,(debatable) 129 -> 132 seems correct to be matched.
Codec1,Easy,
Codec10,Easy,
Codec12,Easy,
Codec13,Medium,
Codec14,Medium,
Codec16,Easy,
Codec17,Easy,
Codec2,Easy,
Codec3,Easy,
Codec4,Easy,
Codec5,Easy,
Codec6,Easy,
Codec7,Easy,
Codec8,Easy,
Codec9,Easy,
Collections25,Easy,
Collections26,Easy,
Collections27,Easy,
Collections28,Easy,
Compress1,Easy,
Compress10,Easy,
Compress11,Easy,
Compress12,Easy,
Compress13,Easy,
Compress14,Easy,
Compress15,Medium,
Compress16,Easy,(debatable) Seems like the statement moved inside the if while the invoked method is different.
Compress17,Easy,
Compress18,Easy,
Compress19,Easy,
Compress2,Medium,
Compress20,Easy,
Compress21,Medium,
Compress22,Medium,
Compress23,Easy,
Compress24,Easy,
Compress25,Easy,
Compress26,Easy,
Compress27,Easy,
Compress28,Easy,
Compress29,Easy,
Compress3,Easy,
Compress30,Easy,
Compress31,Easy,
Compress32,Easy,
Compress33,Easy,
Compress34,Easy,
Compress35,Easy,
Compress36,Easy,
Compress37,Easy,
Compress38,Easy,
Compress39,Easy,
Compress4,Easy,
Compress40,Medium,
Compress41,Easy,
Compress42,Easy,
Compress43,Easy,
Compress44,Easy,
Compress45,Easy,
Compress46,Easy,The one with with greater equal selected to be the perfect diff due to more similarity in the logic
Compress47,Easy,
Compress5,Easy,
Compress6,Easy,
Compress7,Medium,
Compress9,Easy,
Csv1,Easy,
Csv10,Easy,
Csv11,Easy,
Csv12,Easy,
Csv13,Easy,
Csv14,Easy,
Csv15,Easy,
Csv16,Medium,
Csv2,Easy,
Csv3,Easy,
Csv4,Easy,
Csv5,Easy,
Csv6,Easy,
Csv7,Easy,
Csv8,Easy,(debatable) We decided to consider this due to its high similarity in terms of functionality.
Csv9,Easy,
Gson1,Easy,
Gson10,Easy,
Gson11,Easy,
Gson12,Easy,
Gson13,Easy,
Gson14,Easy,
Gson15,Easy,
Gson16,Easy,
Gson17,Easy,
Gson18,Easy,
Gson2,Easy,
Gson3,Easy,
Gson4,Easy,
Gson5,Easy,
Gson6,Easy,
Gson7,Easy,
Gson8,Easy,
Gson9,Easy,
JacksonCore1,Easy,
JacksonCore10,Easy,
JacksonCore11,Easy,
JacksonCore12,Easy,
JacksonCore13,Easy,
JacksonCore14,Easy,
JacksonCore15,Easy,
JacksonCore17,Easy,(debatable) buff.length is not moved to the if statement. The newly added part at the beginning of the function is related to optimization.
JacksonCore18,Medium,
JacksonCore19,Easy,
JacksonCore2,Easy,
JacksonCore20,Easy,
JacksonCore21,Easy,
JacksonCore22,Easy,
JacksonCore23,Easy,
JacksonCore25,Easy,
JacksonCore26,Easy,
JacksonCore3,Easy,
JacksonCore4,Medium,???
JacksonCore5,Easy,
JacksonCore6,Medium,
JacksonCore7,Easy,
JacksonCore8,Easy,
JacksonCore9,Easy,
JacksonDatabind1,Easy,
JacksonDatabind10,Medium,
JacksonDatabind100,Easy,
JacksonDatabind101,Easy,
JacksonDatabind102,Easy,
JacksonDatabind103,Easy,
JacksonDatabind104,Easy,
JacksonDatabind105,Easy,
JacksonDatabind106,Easy,
JacksonDatabind107,Easy,
JacksonDatabind108,Easy,
JacksonDatabind109,Easy,
JacksonDatabind11,Easy,
JacksonDatabind110,Easy,
JacksonDatabind111,Easy,
JacksonDatabind112,Easy,
JacksonDatabind12,Easy,
JacksonDatabind13,Easy,
JacksonDatabind14,Easy,
JacksonDatabind15,Medium,
JacksonDatabind16,Easy,
JacksonDatabind17,Easy,
JacksonDatabind19,Easy,
JacksonDatabind2,Medium,
JacksonDatabind20,Easy,
JacksonDatabind21,Easy,
JacksonDatabind22,Medium,
JacksonDatabind23,Easy,
JacksonDatabind24,Easy,
JacksonDatabind25,Easy,"If we check all the files, by the pattern of the change, it is clear that the the receiver of the method narrowBy is now passed to the method `constructSpecializedType`, and this explains the mappings"
JacksonDatabind26,Easy,
JacksonDatabind27,Easy,
JacksonDatabind29,Easy,
JacksonDatabind3,Easy,
JacksonDatabind30,Easy,
JacksonDatabind31,Easy,
JacksonDatabind32,Easy,
JacksonDatabind33,Easy,
JacksonDatabind34,Easy,
JacksonDatabind35,Medium,
JacksonDatabind36,Easy,
JacksonDatabind37,Easy,
JacksonDatabind38,Easy,
JacksonDatabind39,Easy,p.skipChildren() mapping looks right.
JacksonDatabind4,Easy,
JacksonDatabind40,Easy,
JacksonDatabind42,Easy,
JacksonDatabind43,Easy,
JacksonDatabind44,Easy,
JacksonDatabind45,Easy,
JacksonDatabind46,Easy,
JacksonDatabind47,Easy,
JacksonDatabind48,Easy,
JacksonDatabind49,Easy,
JacksonDatabind5,Medium,
JacksonDatabind50,Easy,There are actually two java docs which can be mapped. we selected the closer one in term of line numbers.
JacksonDatabind51,Easy,
JacksonDatabind52,Easy,
JacksonDatabind53,Easy,
JacksonDatabind54,Easy,
JacksonDatabind55,Easy,
JacksonDatabind56,Easy,
JacksonDatabind57,Easy,
JacksonDatabind58,Easy,
JacksonDatabind59,Easy,
JacksonDatabind60,Easy,
JacksonDatabind61,Easy,
JacksonDatabind62,Easy,
JacksonDatabind63,Easy,"Based on the logic, its better not to map 134 -> 137"
JacksonDatabind65,Easy,
JacksonDatabind66,Easy,
JacksonDatabind67,Easy,
JacksonDatabind69,Easy,
JacksonDatabind7,Easy,
JacksonDatabind70,Easy,
JacksonDatabind71,Easy,
JacksonDatabind72,Easy,
JacksonDatabind73,Easy,
JacksonDatabind74,Easy,
JacksonDatabind75,Easy,
JacksonDatabind76,Easy,
JacksonDatabind77,Easy,
JacksonDatabind78,Easy,
JacksonDatabind79,Easy,
JacksonDatabind8,Easy,
JacksonDatabind80,Easy,
JacksonDatabind81,Easy,
JacksonDatabind82,Easy,
JacksonDatabind83,Easy,
JacksonDatabind84,Easy,
JacksonDatabind86,Easy,
JacksonDatabind87,Easy,
JacksonDatabind88,Easy,
JacksonDatabind89,Easy,
JacksonDatabind90,Easy,
JacksonDatabind91,Easy,
JacksonDatabind92,Easy,
JacksonDatabind93,Easy,
JacksonDatabind94,Easy,
JacksonDatabind95,Easy,
JacksonDatabind96,Easy,
JacksonDatabind97,Easy,
JacksonDatabind98,Easy,
JacksonDatabind99,Easy,
JacksonXml1,Easy,
JacksonXml2,Medium,
JacksonXml3,Easy,
JacksonXml4,Easy,
JacksonXml5,Easy,
JacksonXml6,Easy,
Jsoup1,Easy,
Jsoup10,Easy,
Jsoup11,Easy,
Jsoup12,Easy,
Jsoup13,Easy,
Jsoup14,Easy,
Jsoup15,Easy,
Jsoup16,Easy,
Jsoup17,Easy,
Jsoup18,Easy,
Jsoup19,Easy,
Jsoup2,Easy,
Jsoup20,Easy,
Jsoup23,Easy,
Jsoup24,Easy,
Jsoup25,Easy,
Jsoup26,Easy,
Jsoup27,Easy,"Both returns are good candidates but based on the logic, it doesnt make sense to have multimapping, we decided to select the first one since all tools agree on that."
Jsoup28,Medium,
Jsoup29,Easy,
Jsoup3,Medium,"File Tag.java: The entire body of method `isValidParent` has been moved to `isValidAncestor` but the method still remains in the file, thus it is not a case of renameMethodRefactoring but the logic has been moved to a method with another name."
Jsoup31,Easy,
Jsoup33,Easy,
Jsoup34,Easy,
Jsoup35,Easy,
Jsoup36,Easy,
Jsoup37,Easy,
Jsoup38,Easy,
Jsoup39,Easy,
Jsoup4,Easy,
Jsoup40,Easy,
Jsoup41,Easy,
Jsoup42,Easy,
Jsoup43,Easy,
Jsoup44,Easy,
Jsoup45,Easy,
Jsoup46,Easy,
Jsoup47,Easy,
Jsoup48,Easy,
Jsoup49,Easy,
Jsoup5,Easy,
Jsoup50,Easy,
Jsoup51,Easy,
Jsoup52,Medium,
Jsoup53,Easy,
Jsoup54,Easy,
Jsoup55,Easy,
Jsoup56,Easy,
Jsoup57,Easy,
Jsoup58,Easy,
Jsoup59,Easy,
Jsoup6,Easy,
Jsoup60,Easy,
Jsoup61,Easy,
Jsoup62,Easy,
Jsoup64,Easy,
Jsoup65,Easy,
Jsoup66,Easy,
Jsoup67,Easy,
Jsoup68,Easy,
Jsoup69,Easy,
Jsoup7,Easy,
Jsoup70,Easy,
Jsoup71,Easy,
Jsoup72,Easy,
Jsoup73,Medium,
Jsoup74,Easy,
Jsoup75,Easy,
Jsoup76,Easy,
Jsoup77,Easy,
Jsoup78,Easy,
Jsoup79,Easy,
Jsoup8,Easy,
Jsoup80,Easy,
Jsoup81,Easy,
Jsoup82,Easy,
Jsoup84,Easy,
Jsoup86,Easy,
Jsoup87,Easy,
Jsoup88,Easy,
Jsoup89,Easy,
Jsoup9,Easy,
Jsoup90,Easy,
Jsoup91,Easy,
Jsoup92,Easy,
Jsoup93,Easy,
JxPath1,Easy,
JxPath10,Easy,
JxPath11,Easy,
JxPath12,Easy,
JxPath14,Easy,
JxPath15,Easy,
JxPath16,Easy,
JxPath18,Medium,
JxPath19,Easy,
JxPath2,Easy,
JxPath20,Easy,
JxPath21,Easy,
JxPath22,Medium,
JxPath3,Easy,
JxPath5,Easy,
JxPath6,Easy,
JxPath7,Easy,"(debatable) It might be a inter-file mapping from all the files into CoreOperationRelationalExpression.java  but due to the diff simplicity we decided to remove the inter-file mappings. 
"
JxPath8,Easy,
Lang1,Easy,
Lang10,Easy,
Lang11,Easy,
Lang12,Easy,
Lang13,Easy,
Lang14,Easy,
Lang15,Easy,
Lang16,Easy,
Lang17,Medium,
Lang18,Easy,
Lang19,Easy,"(debatable) It is better ot match input.charAt(end) != ';' with the first expression, not the other ones, It is also not a multimappings due to the idea behind of the change."
Lang20,Easy,
Lang21,Easy,
Lang22,Easy,
Lang23,Easy,
Lang24,Easy,
Lang26,Easy,
Lang27,Easy,
Lang28,Easy,
Lang29,Easy,
Lang3,Easy,
Lang30,Medium,(debatable) We are guided by the commenrts to understand the changes
Lang31,Easy,
Lang32,Easy,(debatable) Move for new HashSet<IDKey>() can be justified based on the method names
Lang33,Easy,
Lang34,Easy,
Lang35,Easy,
Lang36,Easy,
Lang37,Easy,
Lang38,Easy,
Lang39,Easy,
Lang4,Easy,
Lang40,Easy,The last return statements in the method containsIgnoreCase should not be matched due to the change of the logic.
Lang41,Easy,
Lang43,Easy,
Lang44,Easy,
Lang45,Easy,
Lang46,Easy,
Lang47,Easy,
Lang48,Easy,
Lang49,Easy,
Lang50,Easy,
Lang51,Easy,
Lang52,Easy,
Lang53,Easy,
Lang54,Easy,
Lang55,Easy,
Lang56,Easy,
Lang57,Easy,
Lang58,Easy,
Lang59,Easy,
Lang6,Easy,
Lang60,Easy,
Lang61,Easy,
Lang63,Easy,
Lang64,Easy,
Lang65,Easy,
Lang7,Easy,
Lang8,Medium,
Lang9,Easy,
Math1,Easy,
Math10,Easy,
Math100,Easy,
Math101,Easy,
Math102,Easy,
Math103,Easy,
Math104,Easy,
Math105,Easy,
Math106,Easy,
Math11,Easy,
Math12,Easy,
Math13,Easy,
Math14,Easy,
Math15,Easy,
Math16,Easy,
Math17,Easy,
Math18,Easy,
Math19,Easy,
Math2,Easy,
Math20,Easy,
Math21,Medium,
Math22,Easy,
Math23,Medium,We beleive this mappings represesnts the changes in the most understandable manner.
Math24,Easy,
Math25,Easy,
Math26,Easy,
Math27,Easy,
Math28,Easy,
Math29,Medium,
Math3,Easy,
Math30,Easy,
Math31,Hard,"(debatable) there is no clear perfect diff for this case, we decided to come up with the most clean way of representing the changes by having lowest noise in the diff while showing the most important changes in an understandable manner."
Math32,Easy,
Math33,Easy,
Math34,Easy,
Math35,Easy,
Math36,Easy,
Math37,Easy,
Math38,Easy,
Math39,Easy,
Math4,Easy,
Math40,Easy,
Math41,Easy,
Math42,Easy,
Math43,Easy,
Math44,Easy,
Math45,Easy,
Math46,Easy,
Math47,Easy,
Math48,Easy,
Math49,Easy,The problem with the qualified name cannot be fixed due to the tree generation
Math5,Easy,
Math50,Easy,
Math51,Easy,
Math52,Easy,
Math53,Easy,
Math54,Easy,
Math55,Medium,
Math56,Easy,
Math57,Easy,
Math58,Easy,
Math59,Easy,
Math6,Easy,
Math60,Easy,
Math61,Easy,
Math62,Medium,???
Math63,Easy,
Math64,Easy,"Although R272-R274 copies the content of the residual into qtf, if we match residuals -> qtf, the diff wont be helpful."
Math65,Easy,??? Tree Structure issue for the  operator
Math66,Medium,
Math67,Easy,
Math68,Easy,
Math69,Easy,
Math7,Easy,
Math70,Easy,
Math71,Easy,
Math72,Easy,
Math73,Easy,
Math74,Medium,Entire for loop and its body its replaced with the array assignment
Math75,Easy,
Math76,Easy,
Math77,Easy,
Math78,Easy,
Math79,Easy,
Math8,Easy,
Math80,Easy,
Math81,Easy,
Math82,Easy,
Math83,Easy,
Math84,Easy,
Math85,Easy,
Math86,Easy,
Math87,Easy,
Math88,Easy,(debatable)
Math89,Easy,
Math9,Easy,
Math90,Easy,
Math91,Easy,
Math92,Medium,"binomialCoefficientDouble(n, k) is moved within the methods"
Math93,Easy,
Math94,Easy,(debatable) there is no correct mapping for this case
Math95,Easy,
Math96,Easy,(debatable) please check again (rhs)
Math97,Easy,
Math98,Easy,
Math99,Easy,
Mockito1,Easy,
Mockito10,Easy,(debatable)  The return statement: The mock setting in the new method comes from the method parameter. Thus it is better not to map it.
Mockito11,Easy,
Mockito12,Easy,
Mockito13,Easy,
Mockito14,Easy,
Mockito15,Easy,
Mockito16,Easy,
Mockito17,Easy,
Mockito18,Easy,
Mockito19,Easy,
Mockito2,Easy,
Mockito20,Easy,
Mockito21,Medium,???
Mockito22,Easy,
Mockito23,Easy,???
Mockito24,Easy,
Mockito25,Medium,
Mockito26,Easy,
Mockito27,Easy,
Mockito28,Easy,
Mockito29,Easy,
Mockito3,Medium,???
Mockito30,Easy,
Mockito31,Easy,
Mockito32,Easy,
Mockito33,Easy,(debatable) last return statement in hasSameMethod (L99 -> R110):  we decided to map them since they are both the last statement in the method.
Mockito34,Easy,
Mockito35,Easy,
Mockito36,Easy,
Mockito37,Easy,
Mockito38,Easy,
Mockito4,Easy,
Mockito5,Easy,
Mockito6,Easy,
Mockito7,Easy,
Mockito8,Easy,
Mockito9,Easy,
Time1,Easy,
Time10,Easy,
Time11,Easy,
Time12,Easy,
Time13,Easy,
Time14,Easy,
Time15,Easy,
Time16,Easy,The return statement in L1174 is not as same as R1181 but the variable instant has been clearly moved from the method invocation to the return statement.
Time17,Easy,
Time18,Easy,
Time19,Easy,
Time2,Easy,
Time20,Medium,
Time22,Easy,
Time23,Easy,
Time24,Easy,
Time25,Easy,
Time27,Easy,
Time3,Easy,
Time4,Easy,
Time5,Medium,"(debatable) It is possible to match number literals, however due to the size of change, it makes the diff harder to undestand. Thus, we beleive these mappings are more accurate"
Time6,Easy,
Time7,Easy,
Time8,Medium,"Based on the execution flow, we have concluded the move of the condition from L272 to R282."
Time9,Easy,