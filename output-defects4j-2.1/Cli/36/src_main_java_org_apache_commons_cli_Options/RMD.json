{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Options",
      "right" : "Options",
      "info" : "TypeDeclaration[1083-9700]:TypeDeclaration[1057-9680]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1564-1647]:FieldDeclaration[1538-1621]"
    }, {
      "left" : "private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>();",
      "right" : "private final Map<String, Option> shortOpts = new LinkedHashMap<String, Option>();",
      "info" : "FieldDeclaration[1653-1790]:FieldDeclaration[1627-1764]"
    }, {
      "left" : "private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>();",
      "right" : "private final Map<String, Option> longOpts = new LinkedHashMap<String, Option>();",
      "info" : "FieldDeclaration[1796-1927]:FieldDeclaration[1770-1901]"
    }, {
      "left" : "// N.B. This can contain either a String (addOption) or an OptionGroup (addOptionGroup)\n    // TODO this seems wrong\n    private final List<Object> requiredOpts = new ArrayList<Object>();",
      "right" : "// N.B. This can contain either a String (addOption) or an OptionGroup (addOptionGroup)\n    // TODO this seems wrong\n    private final List<Object> requiredOpts = new ArrayList<Object>();",
      "info" : "FieldDeclaration[1933-2161]:FieldDeclaration[1907-2135]"
    }, {
      "left" : "private final Map<String, OptionGroup> optionGroups = new HashMap<String, OptionGroup>();",
      "right" : "private final Map<String, OptionGroup> optionGroups = new LinkedHashMap<String, OptionGroup>();",
      "info" : "FieldDeclaration[2167-2294]:FieldDeclaration[2141-2274]"
    }, {
      "left" : "public Options addOptionGroup(OptionGroup group)",
      "right" : "public Options addOptionGroup(OptionGroup group)",
      "info" : "MethodDeclaration[2300-2984]:MethodDeclaration[2280-2964]"
    }, {
      "left" : "Collection<OptionGroup> getOptionGroups()",
      "right" : "Collection<OptionGroup> getOptionGroups()",
      "info" : "MethodDeclaration[2990-3257]:MethodDeclaration[2970-3237]"
    }, {
      "left" : "public Options addOption(String opt, String description)",
      "right" : "public Options addOption(String opt, String description)",
      "info" : "MethodDeclaration[3263-3704]:MethodDeclaration[3243-3684]"
    }, {
      "left" : "public Options addOption(String opt, boolean hasArg, String description)",
      "right" : "public Options addOption(String opt, boolean hasArg, String description)",
      "info" : "MethodDeclaration[3710-4238]:MethodDeclaration[3690-4218]"
    }, {
      "left" : "public Options addOption(String opt, String longOpt, boolean hasArg, String description)",
      "right" : "public Options addOption(String opt, String longOpt, boolean hasArg, String description)",
      "info" : "MethodDeclaration[4244-4877]:MethodDeclaration[4224-4857]"
    }, {
      "left" : "public Options addOption(Option opt)",
      "right" : "public Options addOption(Option opt)",
      "info" : "MethodDeclaration[4883-5600]:MethodDeclaration[4863-5580]"
    }, {
      "left" : "public Collection<Option> getOptions()",
      "right" : "public Collection<Option> getOptions()",
      "info" : "MethodDeclaration[5606-5882]:MethodDeclaration[5586-5862]"
    }, {
      "left" : "List<Option> helpOptions()",
      "right" : "List<Option> helpOptions()",
      "info" : "MethodDeclaration[5888-6099]:MethodDeclaration[5868-6079]"
    }, {
      "left" : "public List getRequiredOptions()",
      "right" : "public List getRequiredOptions()",
      "info" : "MethodDeclaration[6105-6318]:MethodDeclaration[6085-6298]"
    }, {
      "left" : "public Option getOption(String opt)",
      "right" : "public Option getOption(String opt)",
      "info" : "MethodDeclaration[6324-6818]:MethodDeclaration[6304-6798]"
    }, {
      "left" : "public List<String> getMatchingOptions(String opt)",
      "right" : "public List<String> getMatchingOptions(String opt)",
      "info" : "MethodDeclaration[6824-7665]:MethodDeclaration[6804-7645]"
    }, {
      "left" : "public boolean hasOption(String opt)",
      "right" : "public boolean hasOption(String opt)",
      "info" : "MethodDeclaration[7671-8088]:MethodDeclaration[7651-8068]"
    }, {
      "left" : "public boolean hasLongOption(String opt)",
      "right" : "public boolean hasLongOption(String opt)",
      "info" : "MethodDeclaration[8094-8494]:MethodDeclaration[8074-8474]"
    }, {
      "left" : "public boolean hasShortOption(String opt)",
      "right" : "public boolean hasShortOption(String opt)",
      "info" : "MethodDeclaration[8500-8903]:MethodDeclaration[8480-8883]"
    }, {
      "left" : "public OptionGroup getOptionGroup(Option opt)",
      "right" : "public OptionGroup getOptionGroup(Option opt)",
      "info" : "MethodDeclaration[8909-9272]:MethodDeclaration[8889-9252]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[9278-9698]:MethodDeclaration[9258-9678]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2517-2984]:Block[2497-2964]"
    }, {
      "left" : "if (group.isRequired())",
      "right" : "if (group.isRequired())",
      "info" : "IfStatement[2527-2607]:IfStatement[2507-2587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2559-2607]:Block[2539-2587]"
    }, {
      "left" : "requiredOpts.add(group);",
      "right" : "requiredOpts.add(group);",
      "info" : "ExpressionStatement[2573-2597]:ExpressionStatement[2553-2577]"
    }, {
      "left" : "for (Option option : group.getOptions())",
      "right" : "for (Option option : group.getOptions())",
      "info" : "EnhancedForStatement[2617-2956]:EnhancedForStatement[2597-2936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2666-2956]:Block[2646-2936]"
    }, {
      "left" : "option.setRequired(false);",
      "right" : "option.setRequired(false);",
      "info" : "ExpressionStatement[2834-2860]:ExpressionStatement[2814-2840]"
    }, {
      "left" : "addOption(option);",
      "right" : "addOption(option);",
      "info" : "ExpressionStatement[2873-2891]:ExpressionStatement[2853-2871]"
    }, {
      "left" : "optionGroups.put(option.getKey(), group);",
      "right" : "optionGroups.put(option.getKey(), group);",
      "info" : "ExpressionStatement[2905-2946]:ExpressionStatement[2885-2926]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2966-2978]:ReturnStatement[2946-2958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3186-3257]:Block[3166-3237]"
    }, {
      "left" : "return new HashSet<OptionGroup>(optionGroups.values());",
      "right" : "return new HashSet<OptionGroup>(optionGroups.values());",
      "info" : "ReturnStatement[3196-3251]:ReturnStatement[3176-3231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3626-3704]:Block[3606-3684]"
    }, {
      "left" : "addOption(opt, null, false, description);",
      "right" : "addOption(opt, null, false, description);",
      "info" : "ExpressionStatement[3636-3677]:ExpressionStatement[3616-3657]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3686-3698]:ReturnStatement[3666-3678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4159-4238]:Block[4139-4218]"
    }, {
      "left" : "addOption(opt, null, hasArg, description);",
      "right" : "addOption(opt, null, hasArg, description);",
      "info" : "ExpressionStatement[4169-4211]:ExpressionStatement[4149-4191]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4220-4232]:ReturnStatement[4200-4212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4783-4877]:Block[4763-4857]"
    }, {
      "left" : "addOption(new Option(opt, longOpt, hasArg, description));",
      "right" : "addOption(new Option(opt, longOpt, hasArg, description));",
      "info" : "ExpressionStatement[4793-4850]:ExpressionStatement[4773-4830]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4859-4871]:ReturnStatement[4839-4851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5073-5600]:Block[5053-5580]"
    }, {
      "left" : "String key = opt.getKey();",
      "right" : "String key = opt.getKey();",
      "info" : "VariableDeclarationStatement[5083-5109]:VariableDeclarationStatement[5063-5089]"
    }, {
      "left" : "if (opt.hasLongOpt())",
      "right" : "if (opt.hasLongOpt())",
      "info" : "IfStatement[5161-5251]:IfStatement[5141-5231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5191-5251]:Block[5171-5231]"
    }, {
      "left" : "longOpts.put(opt.getLongOpt(), opt);",
      "right" : "longOpts.put(opt.getLongOpt(), opt);",
      "info" : "ExpressionStatement[5205-5241]:ExpressionStatement[5185-5221]"
    }, {
      "left" : "if (opt.isRequired())",
      "right" : "if (opt.isRequired())",
      "info" : "IfStatement[5326-5538]:IfStatement[5306-5518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5356-5538]:Block[5336-5518]"
    }, {
      "left" : "if (requiredOpts.contains(key))",
      "right" : "if (requiredOpts.contains(key))",
      "info" : "IfStatement[5370-5493]:IfStatement[5350-5473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5414-5493]:Block[5394-5473]"
    }, {
      "left" : "requiredOpts.remove(requiredOpts.indexOf(key));",
      "right" : "requiredOpts.remove(requiredOpts.indexOf(key));",
      "info" : "ExpressionStatement[5432-5479]:ExpressionStatement[5412-5459]"
    }, {
      "left" : "requiredOpts.add(key);",
      "right" : "requiredOpts.add(key);",
      "info" : "ExpressionStatement[5506-5528]:ExpressionStatement[5486-5508]"
    }, {
      "left" : "shortOpts.put(key, opt);",
      "right" : "shortOpts.put(key, opt);",
      "info" : "ExpressionStatement[5548-5572]:ExpressionStatement[5528-5552]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5582-5594]:ReturnStatement[5562-5574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5809-5882]:Block[5789-5862]"
    }, {
      "left" : "return Collections.unmodifiableCollection(helpOptions());",
      "right" : "return Collections.unmodifiableCollection(helpOptions());",
      "info" : "ReturnStatement[5819-5876]:ReturnStatement[5799-5856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6034-6099]:Block[6014-6079]"
    }, {
      "left" : "return new ArrayList<Option>(shortOpts.values());",
      "right" : "return new ArrayList<Option>(shortOpts.values());",
      "info" : "ReturnStatement[6044-6093]:ReturnStatement[6024-6073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6252-6318]:Block[6232-6298]"
    }, {
      "left" : "return Collections.unmodifiableList(requiredOpts);",
      "right" : "return Collections.unmodifiableList(requiredOpts);",
      "info" : "ReturnStatement[6262-6312]:ReturnStatement[6242-6292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6631-6818]:Block[6611-6798]"
    }, {
      "left" : "opt = Util.stripLeadingHyphens(opt);",
      "right" : "opt = Util.stripLeadingHyphens(opt);",
      "info" : "ExpressionStatement[6641-6677]:ExpressionStatement[6621-6657]"
    }, {
      "left" : "if (shortOpts.containsKey(opt))",
      "right" : "if (shortOpts.containsKey(opt))",
      "info" : "IfStatement[6687-6777]:IfStatement[6667-6757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6727-6777]:Block[6707-6757]"
    }, {
      "left" : "return shortOpts.get(opt);",
      "right" : "return shortOpts.get(opt);",
      "info" : "ReturnStatement[6741-6767]:ReturnStatement[6721-6747]"
    }, {
      "left" : "return longOpts.get(opt);",
      "right" : "return longOpts.get(opt);",
      "info" : "ReturnStatement[6787-6812]:ReturnStatement[6767-6792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7145-7665]:Block[7125-7645]"
    }, {
      "left" : "opt = Util.stripLeadingHyphens(opt);",
      "right" : "opt = Util.stripLeadingHyphens(opt);",
      "info" : "ExpressionStatement[7155-7191]:ExpressionStatement[7135-7171]"
    }, {
      "left" : "List<String> matchingOpts = new ArrayList<String>();",
      "right" : "List<String> matchingOpts = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[7209-7261]:VariableDeclarationStatement[7189-7241]"
    }, {
      "left" : "if (longOpts.keySet().contains(opt))",
      "right" : "if (longOpts.keySet().contains(opt))",
      "info" : "IfStatement[7332-7439]:IfStatement[7312-7419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7377-7439]:Block[7357-7419]"
    }, {
      "left" : "return Collections.singletonList(opt);",
      "right" : "return Collections.singletonList(opt);",
      "info" : "ReturnStatement[7391-7429]:ReturnStatement[7371-7409]"
    }, {
      "left" : "for (String longOpt : longOpts.keySet())",
      "right" : "for (String longOpt : longOpts.keySet())",
      "info" : "EnhancedForStatement[7449-7621]:EnhancedForStatement[7429-7601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7498-7621]:Block[7478-7601]"
    }, {
      "left" : "if (longOpt.startsWith(opt))",
      "right" : "if (longOpt.startsWith(opt))",
      "info" : "IfStatement[7512-7611]:IfStatement[7492-7591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7553-7611]:Block[7533-7591]"
    }, {
      "left" : "matchingOpts.add(longOpt);",
      "right" : "matchingOpts.add(longOpt);",
      "info" : "ExpressionStatement[7571-7597]:ExpressionStatement[7551-7577]"
    }, {
      "left" : "return matchingOpts;",
      "right" : "return matchingOpts;",
      "info" : "ReturnStatement[7639-7659]:ReturnStatement[7619-7639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7963-8088]:Block[7943-8068]"
    }, {
      "left" : "opt = Util.stripLeadingHyphens(opt);",
      "right" : "opt = Util.stripLeadingHyphens(opt);",
      "info" : "ExpressionStatement[7973-8009]:ExpressionStatement[7953-7989]"
    }, {
      "left" : "return shortOpts.containsKey(opt) || longOpts.containsKey(opt);",
      "right" : "return shortOpts.containsKey(opt) || longOpts.containsKey(opt);",
      "info" : "ReturnStatement[8019-8082]:ReturnStatement[7999-8062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8399-8494]:Block[8379-8474]"
    }, {
      "left" : "opt = Util.stripLeadingHyphens(opt);",
      "right" : "opt = Util.stripLeadingHyphens(opt);",
      "info" : "ExpressionStatement[8409-8445]:ExpressionStatement[8389-8425]"
    }, {
      "left" : "return longOpts.containsKey(opt);",
      "right" : "return longOpts.containsKey(opt);",
      "info" : "ReturnStatement[8455-8488]:ReturnStatement[8435-8468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8807-8903]:Block[8787-8883]"
    }, {
      "left" : "opt = Util.stripLeadingHyphens(opt);",
      "right" : "opt = Util.stripLeadingHyphens(opt);",
      "info" : "ExpressionStatement[8817-8853]:ExpressionStatement[8797-8833]"
    }, {
      "left" : "return shortOpts.containsKey(opt);",
      "right" : "return shortOpts.containsKey(opt);",
      "info" : "ReturnStatement[8863-8897]:ReturnStatement[8843-8877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9218-9272]:Block[9198-9252]"
    }, {
      "left" : "return optionGroups.get(opt.getKey());",
      "right" : "return optionGroups.get(opt.getKey());",
      "info" : "ReturnStatement[9228-9266]:ReturnStatement[9208-9246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9434-9698]:Block[9414-9678]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder();",
      "right" : "StringBuilder buf = new StringBuilder();",
      "info" : "VariableDeclarationStatement[9444-9484]:VariableDeclarationStatement[9424-9464]"
    }, {
      "left" : "buf.append(\"[ Options: [
 short \");",
      "right" : "buf.append(\"[ Options: [
 short \");",
      "info" : "ExpressionStatement[9494-9528]:ExpressionStatement[9474-9508]"
    }, {
      "left" : "buf.append(shortOpts.toString());",
      "right" : "buf.append(shortOpts.toString());",
      "info" : "ExpressionStatement[9537-9570]:ExpressionStatement[9517-9550]"
    }, {
      "left" : "buf.append(\" ] [ long \");",
      "right" : "buf.append(\" ] [ long \");",
      "info" : "ExpressionStatement[9579-9604]:ExpressionStatement[9559-9584]"
    }, {
      "left" : "buf.append(longOpts);",
      "right" : "buf.append(longOpts);",
      "info" : "ExpressionStatement[9613-9634]:ExpressionStatement[9593-9614]"
    }, {
      "left" : "buf.append(\" ]\");",
      "right" : "buf.append(\" ]\");",
      "info" : "ExpressionStatement[9643-9660]:ExpressionStatement[9623-9640]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[9670-9692]:ReturnStatement[9650-9672]"
    } ]
  },
  "interFileMappings" : { }
}