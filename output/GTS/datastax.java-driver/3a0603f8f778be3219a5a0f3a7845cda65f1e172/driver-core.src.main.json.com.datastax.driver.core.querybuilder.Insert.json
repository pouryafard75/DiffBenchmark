{
  "matchedElements" : [ {
    "left" : "class : Insert",
    "right" : "class : Insert",
    "info" : "TypeDeclaration[829-6338]:TypeDeclaration[801-6892]"
  }, {
    "left" : "table",
    "right" : "table",
    "info" : "FieldDeclaration[916-943]:FieldDeclaration[888-915]"
  }, {
    "left" : "names",
    "right" : "names",
    "info" : "FieldDeclaration[948-1007]:FieldDeclaration[920-979]"
  }, {
    "left" : "values",
    "right" : "values",
    "info" : "FieldDeclaration[1012-1072]:FieldDeclaration[984-1044]"
  }, {
    "left" : "usings",
    "right" : "usings",
    "info" : "FieldDeclaration[1077-1106]:FieldDeclaration[1049-1078]"
  }, {
    "left" : "ifNotExists",
    "right" : "ifNotExists",
    "info" : "FieldDeclaration[1111-1139]:FieldDeclaration[1083-1111]"
  }, {
    "left" : "package Insert(keyspace , table )",
    "right" : "package Insert(keyspace , table )",
    "info" : "MethodDeclaration[1145-1284]:MethodDeclaration[1117-1256]"
  }, {
    "left" : "package Insert(table )",
    "right" : "package Insert(table )",
    "info" : "MethodDeclaration[1290-1436]:MethodDeclaration[1262-1408]"
  }, {
    "left" : "package buildQueryString(variables ...) : ",
    "right" : "package buildQueryString(variables ...) : ",
    "info" : "MethodDeclaration[1442-2227]:MethodDeclaration[1414-2199]"
  }, {
    "left" : "public value(name , value ) : ",
    "right" : "public value(name , value ) : ",
    "info" : "MethodDeclaration[2233-2704]:MethodDeclaration[2205-2676]"
  }, {
    "left" : "public values(names , values ...) : ",
    "right" : "public values(names , values ...) : ",
    "info" : "MethodDeclaration[2710-3686]:MethodDeclaration[2682-3276]"
  }, {
    "left" : "public using(using ) : ",
    "right" : "public using(using ) : ",
    "info" : "MethodDeclaration[3692-3935]:MethodDeclaration[4246-4489]"
  }, {
    "left" : "public ifNotExists() : ",
    "right" : "public ifNotExists() : ",
    "info" : "MethodDeclaration[3941-4638]:MethodDeclaration[4495-5192]"
  }, {
    "left" : "class : Options",
    "right" : "class : Options",
    "info" : "TypeDeclaration[4644-6336]:TypeDeclaration[5198-6890]"
  }, {
    "left" : "usings",
    "right" : "usings",
    "info" : "FieldDeclaration[4793-4851]:FieldDeclaration[5347-5405]"
  }, {
    "left" : "package Options(st )",
    "right" : "package Options(st )",
    "info" : "MethodDeclaration[4861-4914]:MethodDeclaration[5415-5468]"
  }, {
    "left" : "public and(using ) : ",
    "right" : "public and(using ) : ",
    "info" : "MethodDeclaration[4924-5225]:MethodDeclaration[5478-5779]"
  }, {
    "left" : "public value(name , value ) : ",
    "right" : "public value(name , value ) : ",
    "info" : "MethodDeclaration[5235-5662]:MethodDeclaration[5789-6216]"
  }, {
    "left" : "public values(names , values ...) : ",
    "right" : "public values(names , values ...) : ",
    "info" : "MethodDeclaration[5672-6330]:MethodDeclaration[6226-6884]"
  } ],
  "mappings" : [ {
    "left" : "Insert",
    "right" : "Insert",
    "info" : "SimpleName[1145-1151]:SimpleName[1117-1123]"
  }, {
    "left" : "String keyspace",
    "right" : "String keyspace",
    "info" : "SingleVariableDeclaration[1152-1167]:SingleVariableDeclaration[1124-1139]"
  }, {
    "left" : "String table",
    "right" : "String table",
    "info" : "SingleVariableDeclaration[1169-1181]:SingleVariableDeclaration[1141-1153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1183-1284]:Block[1155-1256]"
  }, {
    "left" : "super(keyspace);",
    "right" : "super(keyspace);",
    "info" : "SuperConstructorInvocation[1193-1209]:SuperConstructorInvocation[1165-1181]"
  }, {
    "left" : "this.table = table;",
    "right" : "this.table = table;",
    "info" : "ExpressionStatement[1218-1237]:ExpressionStatement[1190-1209]"
  }, {
    "left" : "this.usings = new Options(this);",
    "right" : "this.usings = new Options(this);",
    "info" : "ExpressionStatement[1246-1278]:ExpressionStatement[1218-1250]"
  }, {
    "left" : "Insert",
    "right" : "Insert",
    "info" : "SimpleName[1290-1296]:SimpleName[1262-1268]"
  }, {
    "left" : "TableMetadata table",
    "right" : "TableMetadata table",
    "info" : "SingleVariableDeclaration[1297-1316]:SingleVariableDeclaration[1269-1288]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1318-1436]:Block[1290-1408]"
  }, {
    "left" : "super(table);",
    "right" : "super(table);",
    "info" : "SuperConstructorInvocation[1328-1341]:SuperConstructorInvocation[1300-1313]"
  }, {
    "left" : "this.table = escapeId(table.getName());",
    "right" : "this.table = escapeId(table.getName());",
    "info" : "ExpressionStatement[1350-1389]:ExpressionStatement[1322-1361]"
  }, {
    "left" : "this.usings = new Options(this);",
    "right" : "this.usings = new Options(this);",
    "info" : "ExpressionStatement[1398-1430]:ExpressionStatement[1370-1402]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[1442-1451]:MarkerAnnotation[1414-1423]"
  }, {
    "left" : "StringBuilder",
    "right" : "StringBuilder",
    "info" : "SimpleType[1456-1469]:SimpleType[1428-1441]"
  }, {
    "left" : "buildQueryString",
    "right" : "buildQueryString",
    "info" : "SimpleName[1470-1486]:SimpleName[1442-1458]"
  }, {
    "left" : "List<Object> variables",
    "right" : "List<Object> variables",
    "info" : "SingleVariableDeclaration[1487-1509]:SingleVariableDeclaration[1459-1481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1511-2227]:Block[1483-2199]"
  }, {
    "left" : "StringBuilder builder = new StringBuilder();",
    "right" : "StringBuilder builder = new StringBuilder();",
    "info" : "VariableDeclarationStatement[1521-1565]:VariableDeclarationStatement[1493-1537]"
  }, {
    "left" : "builder.append(\"INSERT INTO \");",
    "right" : "builder.append(\"INSERT INTO \");",
    "info" : "ExpressionStatement[1575-1606]:ExpressionStatement[1547-1578]"
  }, {
    "left" : "if (keyspace != null)",
    "right" : "if (keyspace != null)",
    "info" : "IfStatement[1615-1697]:IfStatement[1587-1669]"
  }, {
    "left" : "Utils.appendName(keyspace, builder).append('.');",
    "right" : "Utils.appendName(keyspace, builder).append('.');",
    "info" : "ExpressionStatement[1649-1697]:ExpressionStatement[1621-1669]"
  }, {
    "left" : "Utils.appendName(table, builder);",
    "right" : "Utils.appendName(table, builder);",
    "info" : "ExpressionStatement[1706-1739]:ExpressionStatement[1678-1711]"
  }, {
    "left" : "builder.append('(');",
    "right" : "builder.append('(');",
    "info" : "ExpressionStatement[1748-1768]:ExpressionStatement[1720-1740]"
  }, {
    "left" : "Utils.joinAndAppendNames(builder, \",\", names);",
    "right" : "Utils.joinAndAppendNames(builder, \",\", names);",
    "info" : "ExpressionStatement[1777-1823]:ExpressionStatement[1749-1795]"
  }, {
    "left" : "builder.append(\") VALUES (\");",
    "right" : "builder.append(\") VALUES (\");",
    "info" : "ExpressionStatement[1832-1861]:ExpressionStatement[1804-1833]"
  }, {
    "left" : "Utils.joinAndAppendValues(builder, \",\", values, variables);",
    "right" : "Utils.joinAndAppendValues(builder, \",\", values, variables);",
    "info" : "ExpressionStatement[1870-1929]:ExpressionStatement[1842-1901]"
  }, {
    "left" : "builder.append(')');",
    "right" : "builder.append(')');",
    "info" : "ExpressionStatement[1938-1958]:ExpressionStatement[1910-1930]"
  }, {
    "left" : "if (ifNotExists)",
    "right" : "if (ifNotExists)",
    "info" : "IfStatement[1968-2030]:IfStatement[1940-2002]"
  }, {
    "left" : "builder.append(\" IF NOT EXISTS\");",
    "right" : "builder.append(\" IF NOT EXISTS\");",
    "info" : "ExpressionStatement[1997-2030]:ExpressionStatement[1969-2002]"
  }, {
    "left" : "if (!usings.usings.isEmpty())",
    "right" : "if (!usings.usings.isEmpty())",
    "info" : "IfStatement[2040-2197]:IfStatement[2012-2169]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2070-2197]:Block[2042-2169]"
  }, {
    "left" : "builder.append(\" USING \");",
    "right" : "builder.append(\" USING \");",
    "info" : "ExpressionStatement[2084-2110]:ExpressionStatement[2056-2082]"
  }, {
    "left" : "Utils.joinAndAppend(builder, \" AND \", usings.usings, variables);",
    "right" : "Utils.joinAndAppend(builder, \" AND \", usings.usings, variables);",
    "info" : "ExpressionStatement[2123-2187]:ExpressionStatement[2095-2159]"
  }, {
    "left" : "return builder;",
    "right" : "return builder;",
    "info" : "ReturnStatement[2206-2221]:ReturnStatement[2178-2193]"
  }, {
    "left" : "/**\n     * Adds a column/value pair to the values inserted by this INSERT statement.\n     *\n     * @param name the name of the column to insert/update.\n     * @param value the value to insert/update for {@code name}.\n     * @return this INSERT statement.\n     */",
    "right" : "/**\n     * Adds a column/value pair to the values inserted by this INSERT statement.\n     *\n     * @param name the name of the column to insert/update.\n     * @param value the value to insert/update for {@code name}.\n     * @return this INSERT statement.\n     */",
    "info" : "Javadoc[2233-2495]:Javadoc[2205-2467]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2500-2506]:Modifier[2472-2478]"
  }, {
    "left" : "Insert",
    "right" : "Insert",
    "info" : "SimpleType[2507-2513]:SimpleType[2479-2485]"
  }, {
    "left" : "value",
    "right" : "value",
    "info" : "SimpleName[2514-2519]:SimpleName[2486-2491]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[2520-2531]:SingleVariableDeclaration[2492-2503]"
  }, {
    "left" : "Object value",
    "right" : "Object value",
    "info" : "SingleVariableDeclaration[2533-2545]:SingleVariableDeclaration[2505-2517]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2547-2704]:Block[2519-2676]"
  }, {
    "left" : "names.add(name);",
    "right" : "names.add(name);",
    "info" : "ExpressionStatement[2557-2573]:ExpressionStatement[2529-2545]"
  }, {
    "left" : "values.add(value);",
    "right" : "values.add(value);",
    "info" : "ExpressionStatement[2582-2600]:ExpressionStatement[2554-2572]"
  }, {
    "left" : "checkForBindMarkers(value);",
    "right" : "checkForBindMarkers(value);",
    "info" : "ExpressionStatement[2609-2636]:ExpressionStatement[2581-2608]"
  }, {
    "left" : "maybeAddRoutingKey(name, value);",
    "right" : "maybeAddRoutingKey(name, value);",
    "info" : "ExpressionStatement[2645-2677]:ExpressionStatement[2617-2649]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[2686-2698]:ReturnStatement[2658-2670]"
  }, {
    "left" : "/**\n     * Adds multiple column/value pairs to the values inserted by this INSERT statement.\n     *\n     * @param names a list of column names to insert/update.\n     * @param values a list of values to insert/update. The {@code i}th\n     * value in {@code values} will be inserted for the {@code i}th column\n     * in {@code names}.\n     * @return this INSERT statement.\n     *\n     * @throws IllegalArgumentException if {@code names.length != values.length}.\n     */",
    "right" : "/**\n     * Adds multiple column/value pairs to the values inserted by this INSERT statement.\n     *\n     * @param names a list of column names to insert/update.\n     * @param values a list of values to insert/update. The {@code i}th\n     * value in {@code values} will be inserted for the {@code i}th column\n     * in {@code names}.\n     * @return this INSERT statement.\n     * @throws IllegalArgumentException if {@code names.length != values.length}.\n     */",
    "info" : "Javadoc[2710-3177]:Javadoc[2682-3142]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3182-3188]:Modifier[3147-3153]"
  }, {
    "left" : "Insert",
    "right" : "Insert",
    "info" : "SimpleType[3189-3195]:SimpleType[3154-3160]"
  }, {
    "left" : "values",
    "right" : "values",
    "info" : "SimpleName[3196-3202]:SimpleName[3161-3167]"
  }, {
    "left" : "String[] names",
    "right" : "String[] names",
    "info" : "SingleVariableDeclaration[3203-3217]:SingleVariableDeclaration[3168-3182]"
  }, {
    "left" : "Object[] values",
    "right" : "Object[] values",
    "info" : "SingleVariableDeclaration[3219-3234]:SingleVariableDeclaration[3184-3199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3236-3686]:Block[3809-4240]"
  }, {
    "left" : "if (names.length != values.length)",
    "right" : "if (names.size() != values.size())",
    "info" : "IfStatement[3246-3402]:IfStatement[3819-3975]"
  }, {
    "left" : "throw new IllegalArgumentException(String.format(\"Got %d names but %d values\", names.length, values.length));",
    "right" : "throw new IllegalArgumentException(String.format(\"Got %d names but %d values\", names.size(), values.size()));",
    "info" : "ThrowStatement[3293-3402]:ThrowStatement[3866-3975]"
  }, {
    "left" : "this.names.addAll(Arrays.asList(names))",
    "right" : "values(Arrays.asList(names), Arrays.asList(values))",
    "info" : "MethodInvocation[3411-3450]:MethodInvocation[3218-3269]"
  }, {
    "left" : "this.names",
    "right" : "this.names",
    "info" : "METHOD_INVOCATION_RECEIVER[3411-3421]:METHOD_INVOCATION_RECEIVER[3984-3994]"
  }, {
    "left" : "this.names.addAll(Arrays.asList(names));",
    "right" : "this.names.addAll(names);",
    "info" : "ExpressionStatement[3411-3451]:ExpressionStatement[3984-4009]"
  }, {
    "left" : "addAll",
    "right" : "values",
    "info" : "SimpleName[3422-3428]:SimpleName[3218-3224]"
  }, {
    "left" : "this.values.addAll(Arrays.asList(values));",
    "right" : "this.values.addAll(values);",
    "info" : "ExpressionStatement[3460-3502]:ExpressionStatement[4018-4045]"
  }, {
    "left" : "Arrays.asList(values)",
    "right" : "Arrays.asList(values)",
    "info" : "MethodInvocation[3479-3500]:MethodInvocation[3247-3268]"
  }, {
    "left" : "for (int i = 0; i < names.length; i++)",
    "right" : "for (int i = 0; i < names.size(); i++)",
    "info" : "ForStatement[3512-3659]:ForStatement[4054-4213]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3551-3659]:Block[4093-4213]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[3668-3680]:ReturnStatement[4222-4234]"
  }, {
    "left" : "/**\n     * Adds a new options for this INSERT statement.\n     *\n     * @param using the option to add.\n     * @return the options of this INSERT statement.\n     */",
    "right" : "/**\n     * Adds a new options for this INSERT statement.\n     *\n     * @param using the option to add.\n     * @return the options of this INSERT statement.\n     */",
    "info" : "Javadoc[3692-3855]:Javadoc[4246-4409]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3860-3866]:Modifier[4414-4420]"
  }, {
    "left" : "Options",
    "right" : "Options",
    "info" : "SimpleType[3867-3874]:SimpleType[4421-4428]"
  }, {
    "left" : "using",
    "right" : "using",
    "info" : "SimpleName[3875-3880]:SimpleName[4429-4434]"
  }, {
    "left" : "Using using",
    "right" : "Using using",
    "info" : "SingleVariableDeclaration[3881-3892]:SingleVariableDeclaration[4435-4446]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3894-3935]:Block[4448-4489]"
  }, {
    "left" : "return usings.and(using);",
    "right" : "return usings.and(using);",
    "info" : "ReturnStatement[3904-3929]:ReturnStatement[4458-4483]"
  }, {
    "left" : "/**\n     * Sets the 'IF NOT EXISTS' option for this INSERT statement.\n     * <p>\n     * An insert with that option will not succeed unless the row does not\n     * exist at the time the insertion is execution. The existence check and\n     * insertions are done transactionally in the sense that if multiple\n     * clients attempt to create a given row with this option, then at most one\n     * may succeed.\n     * <p>\n     * Please keep in mind that using this option has a non negligible\n     * performance impact and should be avoided when possible.\n     *\n     * @return this INSERT statement.\n     */",
    "right" : "/**\n     * Sets the 'IF NOT EXISTS' option for this INSERT statement.\n     * <p>\n     * An insert with that option will not succeed unless the row does not\n     * exist at the time the insertion is execution. The existence check and\n     * insertions are done transactionally in the sense that if multiple\n     * clients attempt to create a given row with this option, then at most one\n     * may succeed.\n     * <p>\n     * Please keep in mind that using this option has a non negligible\n     * performance impact and should be avoided when possible.\n     *\n     * @return this INSERT statement.\n     */",
    "info" : "Javadoc[3941-4544]:Javadoc[4495-5098]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4549-4555]:Modifier[5103-5109]"
  }, {
    "left" : "Insert",
    "right" : "Insert",
    "info" : "SimpleType[4556-4562]:SimpleType[5110-5116]"
  }, {
    "left" : "ifNotExists",
    "right" : "ifNotExists",
    "info" : "SimpleName[4563-4574]:SimpleName[5117-5128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4577-4638]:Block[5131-5192]"
  }, {
    "left" : "this.ifNotExists = true;",
    "right" : "this.ifNotExists = true;",
    "info" : "ExpressionStatement[4587-4611]:ExpressionStatement[5141-5165]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[4620-4632]:ReturnStatement[5174-5186]"
  }, {
    "left" : "Options",
    "right" : "Options",
    "info" : "SimpleName[4861-4868]:SimpleName[5415-5422]"
  }, {
    "left" : "Insert st",
    "right" : "Insert st",
    "info" : "SingleVariableDeclaration[4869-4878]:SingleVariableDeclaration[5423-5432]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4880-4914]:Block[5434-5468]"
  }, {
    "left" : "super(st);",
    "right" : "super(st);",
    "info" : "SuperConstructorInvocation[4894-4904]:SuperConstructorInvocation[5448-5458]"
  }, {
    "left" : "/**\n         * Adds the provided option.\n         *\n         * @param using an INSERT option.\n         * @return this {@code Options} object.\n         */",
    "right" : "/**\n         * Adds the provided option.\n         *\n         * @param using an INSERT option.\n         * @return this {@code Options} object.\n         */",
    "info" : "Javadoc[4924-5077]:Javadoc[5478-5631]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5086-5092]:Modifier[5640-5646]"
  }, {
    "left" : "Options",
    "right" : "Options",
    "info" : "SimpleType[5093-5100]:SimpleType[5647-5654]"
  }, {
    "left" : "and",
    "right" : "and",
    "info" : "SimpleName[5101-5104]:SimpleName[5655-5658]"
  }, {
    "left" : "Using using",
    "right" : "Using using",
    "info" : "SingleVariableDeclaration[5105-5116]:SingleVariableDeclaration[5659-5670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5118-5225]:Block[5672-5779]"
  }, {
    "left" : "usings.add(using);",
    "right" : "usings.add(using);",
    "info" : "ExpressionStatement[5132-5150]:ExpressionStatement[5686-5704]"
  }, {
    "left" : "checkForBindMarkers(using);",
    "right" : "checkForBindMarkers(using);",
    "info" : "ExpressionStatement[5163-5190]:ExpressionStatement[5717-5744]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[5203-5215]:ReturnStatement[5757-5769]"
  }, {
    "left" : "/**\n         * Adds a column/value pair to the values inserted by this INSERT statement.\n         *\n         * @param name the name of the column to insert/update.\n         * @param value the value to insert/update for {@code name}.\n         * @return the INSERT statement those options are part of.\n         */",
    "right" : "/**\n         * Adds a column/value pair to the values inserted by this INSERT statement.\n         *\n         * @param name the name of the column to insert/update.\n         * @param value the value to insert/update for {@code name}.\n         * @return the INSERT statement those options are part of.\n         */",
    "info" : "Javadoc[5235-5546]:Javadoc[5789-6100]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5555-5561]:Modifier[6109-6115]"
  }, {
    "left" : "Insert",
    "right" : "Insert",
    "info" : "SimpleType[5562-5568]:SimpleType[6116-6122]"
  }, {
    "left" : "value",
    "right" : "value",
    "info" : "SimpleName[5569-5574]:SimpleName[6123-6128]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[5575-5586]:SingleVariableDeclaration[6129-6140]"
  }, {
    "left" : "Object value",
    "right" : "Object value",
    "info" : "SingleVariableDeclaration[5588-5600]:SingleVariableDeclaration[6142-6154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5602-5662]:Block[6156-6216]"
  }, {
    "left" : "return statement.value(name, value);",
    "right" : "return statement.value(name, value);",
    "info" : "ReturnStatement[5616-5652]:ReturnStatement[6170-6206]"
  }, {
    "left" : "/**\n         * Adds multiple column/value pairs to the values inserted by this INSERT statement.\n         *\n         * @param names a list of column names to insert/update.\n         * @param values a list of values to insert/update. The {@code i}th\n         * value in {@code values} will be inserted for the {@code i}th column\n         * in {@code names}.\n         * @return the INSERT statement those options are part of.\n         *\n         * @throws IllegalArgumentException if {@code names.length != values.length}.\n         */",
    "right" : "/**\n         * Adds multiple column/value pairs to the values inserted by this INSERT statement.\n         *\n         * @param names a list of column names to insert/update.\n         * @param values a list of values to insert/update. The {@code i}th\n         * value in {@code values} will be inserted for the {@code i}th column\n         * in {@code names}.\n         * @return the INSERT statement those options are part of.\n         *\n         * @throws IllegalArgumentException if {@code names.length != values.length}.\n         */",
    "info" : "Javadoc[5672-6204]:Javadoc[6226-6758]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6213-6219]:Modifier[6767-6773]"
  }, {
    "left" : "Insert",
    "right" : "Insert",
    "info" : "SimpleType[6220-6226]:SimpleType[6774-6780]"
  }, {
    "left" : "values",
    "right" : "values",
    "info" : "SimpleName[6227-6233]:SimpleName[6781-6787]"
  }, {
    "left" : "String[] names",
    "right" : "String[] names",
    "info" : "SingleVariableDeclaration[6234-6248]:SingleVariableDeclaration[6788-6802]"
  }, {
    "left" : "Object[] values",
    "right" : "Object[] values",
    "info" : "SingleVariableDeclaration[6250-6265]:SingleVariableDeclaration[6804-6819]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6267-6330]:Block[6821-6884]"
  }, {
    "left" : "return statement.values(names, values);",
    "right" : "return statement.values(names, values);",
    "info" : "ReturnStatement[6281-6320]:ReturnStatement[6835-6874]"
  } ]
}