{
  "matchedElements" : [
 {
    "left" : "class : LockPatternUtils",
    "right" : "class : LockPatternUtils",
    "info" : "TypeDeclaration[1936-72080]:TypeDeclaration[1936-73034]"
  }, {
    "left" : "TAG",
    "right" : "TAG",
    "info" : "FieldDeclaration[2033-2086]:FieldDeclaration[2033-2086]"
  }, {
    "left" : "DEBUG",
    "right" : "DEBUG",
    "info" : "FieldDeclaration[2091-2134]:FieldDeclaration[2091-2134]"
  }, {
    "left" : "FAILED_ATTEMPTS_BEFORE_TIMEOUT",
    "right" : "FAILED_ATTEMPTS_BEFORE_TIMEOUT",
    "info" : "FieldDeclaration[2140-2357]:FieldDeclaration[2140-2357]"
  }, {
    "left" : "FAILED_ATTEMPTS_BEFORE_RESET",
    "right" : "FAILED_ATTEMPTS_BEFORE_RESET",
    "info" : "FieldDeclaration[2363-2592]:FieldDeclaration[2363-2592]"
  }, {
    "left" : "FAILED_ATTEMPT_TIMEOUT_MS",
    "right" : "FAILED_ATTEMPT_TIMEOUT_MS",
    "info" : "FieldDeclaration[2598-2786]:FieldDeclaration[2598-2786]"
  }, {
    "left" : "FAILED_ATTEMPT_COUNTDOWN_INTERVAL_MS",
    "right" : "FAILED_ATTEMPT_COUNTDOWN_INTERVAL_MS",
    "info" : "FieldDeclaration[2792-2952]:FieldDeclaration[2792-2952]"
  }, {
    "left" : "FAILED_ATTEMPTS_BEFORE_WIPE_GRACE",
    "right" : "FAILED_ATTEMPTS_BEFORE_WIPE_GRACE",
    "info" : "FieldDeclaration[2959-3151]:FieldDeclaration[2959-3151]"
  }, {
    "left" : "MIN_LOCK_PATTERN_SIZE",
    "right" : "MIN_LOCK_PATTERN_SIZE",
    "info" : "FieldDeclaration[3157-3277]:FieldDeclaration[3157-3277]"
  }, {
    "left" : "PATTERN_SIZE_DEFAULT",
    "right" : "PATTERN_SIZE_DEFAULT",
    "info" : "FieldDeclaration[3283-3408]:FieldDeclaration[3283-3408]"
  }, {
    "left" : "MIN_PATTERN_REGISTER_FAIL",
    "right" : "MIN_PATTERN_REGISTER_FAIL",
    "info" : "FieldDeclaration[3414-3735]:FieldDeclaration[3414-3735]"
  }, {
    "left" : "KEYGUARD_SHOW_USER_SWITCHER",
    "right" : "KEYGUARD_SHOW_USER_SWITCHER",
    "info" : "FieldDeclaration[3741-3915]:FieldDeclaration[3741-3915]"
  }, {
    "left" : "KEYGUARD_SHOW_SECURITY_CHALLENGE",
    "right" : "KEYGUARD_SHOW_SECURITY_CHALLENGE",
    "info" : "FieldDeclaration[3921-4110]:FieldDeclaration[3921-4110]"
  }, {
    "left" : "KEYGUARD_SHOW_APPWIDGET",
    "right" : "KEYGUARD_SHOW_APPWIDGET",
    "info" : "FieldDeclaration[4116-4298]:FieldDeclaration[4116-4298]"
  }, {
    "left" : "FLAG_BIOMETRIC_WEAK_LIVELINESS",
    "right" : "FLAG_BIOMETRIC_WEAK_LIVELINESS",
    "info" : "FieldDeclaration[4304-4489]:FieldDeclaration[4304-4489]"
  }, {
    "left" : "ID_DEFAULT_STATUS_WIDGET",
    "right" : "ID_DEFAULT_STATUS_WIDGET",
    "info" : "FieldDeclaration[4495-4644]:FieldDeclaration[4495-4644]"
  }, {
    "left" : "LOCKOUT_PERMANENT_KEY",
    "right" : "LOCKOUT_PERMANENT_KEY",
    "info" : "FieldDeclaration[4650-4735]:FieldDeclaration[4650-4735]"
  }, {
    "left" : "LOCKOUT_ATTEMPT_DEADLINE",
    "right" : "LOCKOUT_ATTEMPT_DEADLINE",
    "info" : "FieldDeclaration[4740-4830]:FieldDeclaration[4740-4830]"
  }, {
    "left" : "PATTERN_EVER_CHOSEN_KEY",
    "right" : "PATTERN_EVER_CHOSEN_KEY",
    "info" : "FieldDeclaration[4835-4919]:FieldDeclaration[4835-4919]"
  }, {
    "left" : "PASSWORD_TYPE_KEY",
    "right" : "PASSWORD_TYPE_KEY",
    "info" : "FieldDeclaration[4924-4998]:FieldDeclaration[4924-4998]"
  }, {
    "left" : "PASSWORD_TYPE_ALTERNATE_KEY",
    "right" : "PASSWORD_TYPE_ALTERNATE_KEY",
    "info" : "FieldDeclaration[5003-5097]:FieldDeclaration[5003-5097]"
  }, {
    "left" : "PASSWORD_BIOMETRIC_EXACT_TYPE",
    "right" : "PASSWORD_BIOMETRIC_EXACT_TYPE",
    "info" : "FieldDeclaration[5196-5292]:FieldDeclaration[5196-5292]"
  }, {
    "left" : "LOCK_PASSWORD_SALT_KEY",
    "right" : "LOCK_PASSWORD_SALT_KEY",
    "info" : "FieldDeclaration[5298-5377]:FieldDeclaration[5298-5377]"
  }, {
    "left" : "DISABLE_LOCKSCREEN_KEY",
    "right" : "DISABLE_LOCKSCREEN_KEY",
    "info" : "FieldDeclaration[5382-5456]:FieldDeclaration[5382-5456]"
  }, {
    "left" : "LOCKSCREEN_OPTIONS",
    "right" : "LOCKSCREEN_OPTIONS",
    "info" : "FieldDeclaration[5461-5530]:FieldDeclaration[5461-5530]"
  }, {
    "left" : "LOCKSCREEN_BIOMETRIC_WEAK_FALLBACK",
    "right" : "LOCKSCREEN_BIOMETRIC_WEAK_FALLBACK",
    "info" : "FieldDeclaration[5535-5648]:FieldDeclaration[5535-5648]"
  }, {
    "left" : "LOCKSCREEN_FINGERPRINT_FALLBACK",
    "right" : "LOCKSCREEN_FINGERPRINT_FALLBACK",
    "info" : "FieldDeclaration[5653-5748]:FieldDeclaration[5653-5748]"
  }, {
    "left" : "BIOMETRIC_WEAK_EVER_CHOSEN_KEY",
    "right" : "BIOMETRIC_WEAK_EVER_CHOSEN_KEY",
    "info" : "FieldDeclaration[5753-5862]:FieldDeclaration[5753-5862]"
  }, {
    "left" : "LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS",
    "right" : "LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS",
    "info" : "FieldDeclaration[5867-5990]:FieldDeclaration[5867-5990]"
  }, {
    "left" : "LOCKSCREEN_WIDGETS_ENABLED",
    "right" : "LOCKSCREEN_WIDGETS_ENABLED",
    "info" : "FieldDeclaration[5995-6080]:FieldDeclaration[5995-6080]"
  }, {
    "left" : "PASSWORD_HISTORY_KEY",
    "right" : "PASSWORD_HISTORY_KEY",
    "info" : "FieldDeclaration[6086-6165]:FieldDeclaration[6086-6165]"
  }, {
    "left" : "LOCK_SCREEN_OWNER_INFO",
    "right" : "LOCK_SCREEN_OWNER_INFO",
    "info" : "FieldDeclaration[6171-6263]:FieldDeclaration[6171-6263]"
  }, {
    "left" : "LOCK_SCREEN_OWNER_INFO_ENABLED",
    "right" : "LOCK_SCREEN_OWNER_INFO_ENABLED",
    "info" : "FieldDeclaration[6268-6388]:FieldDeclaration[6268-6388]"
  }, {
    "left" : "ENABLED_TRUST_AGENTS",
    "right" : "ENABLED_TRUST_AGENTS",
    "info" : "FieldDeclaration[6394-6477]:FieldDeclaration[6394-6477]"
  }, {
    "left" : "MAX_ALLOWED_SEQUENCE",
    "right" : "MAX_ALLOWED_SEQUENCE",
    "info" : "FieldDeclaration[6617-6666]:FieldDeclaration[6617-6666]"
  }, {
    "left" : "BIOMETRIC_WEAK_UNKNOWN",
    "right" : "BIOMETRIC_WEAK_UNKNOWN",
    "info" : "FieldDeclaration[6714-6766]:FieldDeclaration[6714-6766]"
  }, {
    "left" : "BIOMETRIC_WEAK_FACE",
    "right" : "BIOMETRIC_WEAK_FACE",
    "info" : "FieldDeclaration[6771-6819]:FieldDeclaration[6771-6819]"
  }, {
    "left" : "BIOMETRIC_WEAK_FINGERPRINT",
    "right" : "BIOMETRIC_WEAK_FINGERPRINT",
    "info" : "FieldDeclaration[6824-6879]:FieldDeclaration[6824-6879]"
  }, {
    "left" : "mContext",
    "right" : "mContext",
    "info" : "FieldDeclaration[6885-6916]:FieldDeclaration[6885-6916]"
  }, {
    "left" : "mContentResolver",
    "right" : "mContentResolver",
    "info" : "FieldDeclaration[6921-6968]:FieldDeclaration[6921-6968]"
  }, {
    "left" : "mDevicePolicyManager",
    "right" : "mDevicePolicyManager",
    "info" : "FieldDeclaration[6973-7022]:FieldDeclaration[6973-7022]"
  }, {
    "left" : "mLockSettingsService",
    "right" : "mLockSettingsService",
    "info" : "FieldDeclaration[7027-7070]:FieldDeclaration[7027-7070]"
  }, {
    "left" : "mMultiUserMode",
    "right" : "mMultiUserMode",
    "info" : "FieldDeclaration[7076-7113]:FieldDeclaration[7076-7113]"
  }, {
    "left" : "sCurrentUserId",
    "right" : "sCurrentUserId",
    "info" : "FieldDeclaration[7210-7276]:FieldDeclaration[7210-7276]"
  }, {
    "left" : "public getDevicePolicyManager() : ",
    "right" : "public getDevicePolicyManager() : ",
    "info" : "MethodDeclaration[7282-7775]:MethodDeclaration[7282-7775]"
  }, {
    "left" : "private getTrustManager() : ",
    "right" : "private getTrustManager() : ",
    "info" : "MethodDeclaration[7781-8118]:MethodDeclaration[7781-8118]"
  }, {
    "left" : "public LockPatternUtils(context )",
    "right" : "public LockPatternUtils(context )",
    "info" : "MethodDeclaration[8124-8703]:MethodDeclaration[8124-8703]"
  }, {
    "left" : "private getLockSettings() : ",
    "right" : "private getLockSettings() : ",
    "info" : "MethodDeclaration[8709-9024]:MethodDeclaration[8709-9024]"
  }, {
    "left" : "public getRequestedMinimumPasswordLength() : int",
    "right" : "public getRequestedMinimumPasswordLength() : int",
    "info" : "MethodDeclaration[9030-9185]:MethodDeclaration[9030-9185]"
  }, {
    "left" : "public getRequestedPasswordQuality() : int",
    "right" : "public getRequestedPasswordQuality() : int",
    "info" : "MethodDeclaration[9191-9494]:MethodDeclaration[9191-9494]"
  }, {
    "left" : "public getRequestedPasswordHistoryLength() : int",
    "right" : "public getRequestedPasswordHistoryLength() : int",
    "info" : "MethodDeclaration[9500-9655]:MethodDeclaration[9500-9655]"
  }, {
    "left" : "public getRequestedPasswordMinimumLetters() : int",
    "right" : "public getRequestedPasswordMinimumLetters() : int",
    "info" : "MethodDeclaration[9661-9834]:MethodDeclaration[9661-9834]"
  }, {
    "left" : "public getRequestedPasswordMinimumUpperCase() : int",
    "right" : "public getRequestedPasswordMinimumUpperCase() : int",
    "info" : "MethodDeclaration[9840-10017]:MethodDeclaration[9840-10017]"
  }, {
    "left" : "public getRequestedPasswordMinimumLowerCase() : int",
    "right" : "public getRequestedPasswordMinimumLowerCase() : int",
    "info" : "MethodDeclaration[10023-10200]:MethodDeclaration[10023-10200]"
  }, {
    "left" : "public getRequestedPasswordMinimumNumeric() : int",
    "right" : "public getRequestedPasswordMinimumNumeric() : int",
    "info" : "MethodDeclaration[10206-10379]:MethodDeclaration[10206-10379]"
  }, {
    "left" : "public getRequestedPasswordMinimumSymbols() : int",
    "right" : "public getRequestedPasswordMinimumSymbols() : int",
    "info" : "MethodDeclaration[10385-10558]:MethodDeclaration[10385-10558]"
  }, {
    "left" : "public getRequestedPasswordMinimumNonLetter() : int",
    "right" : "public getRequestedPasswordMinimumNonLetter() : int",
    "info" : "MethodDeclaration[10564-10741]:MethodDeclaration[10564-10741]"
  }, {
    "left" : "public reportFailedPasswordAttempt() : void",
    "right" : "public reportFailedPasswordAttempt() : void",
    "info" : "MethodDeclaration[10747-11062]:MethodDeclaration[10747-11062]"
  }, {
    "left" : "public reportSuccessfulPasswordAttempt() : void",
    "right" : "public reportSuccessfulPasswordAttempt() : void",
    "info" : "MethodDeclaration[11068-11334]:MethodDeclaration[11068-11334]"
  }, {
    "left" : "public setCurrentUser(userId int) : void",
    "right" : "public setCurrentUser(userId int) : void",
    "info" : "MethodDeclaration[11340-11419]:MethodDeclaration[11340-11419]"
  }, {
    "left" : "public getCurrentUser() : int",
    "right" : "public getCurrentUser() : int",
    "info" : "MethodDeclaration[11425-11823]:MethodDeclaration[11425-11823]"
  }, {
    "left" : "public removeUser(userId int) : void",
    "right" : "public removeUser(userId int) : void",
    "info" : "MethodDeclaration[11829-12060]:MethodDeclaration[11829-12060]"
  }, {
    "left" : "private getCurrentOrCallingUserId() : int",
    "right" : "private getCurrentOrCallingUserId() : int",
    "info" : "MethodDeclaration[12066-12403]:MethodDeclaration[12066-12403]"
  }, {
    "left" : "public checkPattern(pattern ) : boolean",
    "right" : "public checkPattern(pattern ) : boolean",
    "info" : "MethodDeclaration[12409-12939]:MethodDeclaration[12409-12939]"
  }, {
    "left" : "public checkPassword(password ) : boolean",
    "right" : "public checkPassword(password ) : boolean",
    "info" : "MethodDeclaration[12945-13448]:MethodDeclaration[12945-13448]"
  }, {
    "left" : "public checkVoldPassword() : boolean",
    "right" : "public checkVoldPassword() : boolean",
    "info" : "MethodDeclaration[13454-13895]:MethodDeclaration[13454-13895]"
  }, {
    "left" : "public checkPasswordHistory(password ) : boolean",
    "right" : "public checkPasswordHistory(password ) : boolean",
    "info" : "MethodDeclaration[13901-15076]:MethodDeclaration[13901-15076]"
  }, {
    "left" : "public savedPatternExists() : boolean",
    "right" : "public savedPatternExists() : boolean",
    "info" : "MethodDeclaration[15082-15311]:MethodDeclaration[15082-15311]"
  }, {
    "left" : "public savedPatternExists(userId int) : boolean",
    "right" : "public savedPatternExists(userId int) : boolean",
    "info" : "MethodDeclaration[15317-15639]:MethodDeclaration[15317-15639]"
  }, {
    "left" : "public savedPasswordExists() : boolean",
    "right" : "public savedPasswordExists() : boolean",
    "info" : "MethodDeclaration[15645-15876]:MethodDeclaration[15645-15876]"
  }, {
    "left" : "public savedPasswordExists(userId int) : boolean",
    "right" : "public savedPasswordExists(userId int) : boolean",
    "info" : "MethodDeclaration[15883-16207]:MethodDeclaration[15883-16207]"
  }, {
    "left" : "public isPatternEverChosen() : boolean",
    "right" : "public isPatternEverChosen() : boolean",
    "info" : "MethodDeclaration[16213-16519]:MethodDeclaration[16213-16519]"
  }, {
    "left" : "public isBiometricWeakEverChosen() : boolean",
    "right" : "public isBiometricWeakEverChosen() : boolean",
    "info" : "MethodDeclaration[16525-16855]:MethodDeclaration[16525-16855]"
  }, {
    "left" : "public getActivePasswordQuality() : int",
    "right" : "public getActivePasswordQuality() : int",
    "info" : "MethodDeclaration[16861-19213]:MethodDeclaration[16861-19213]"
  }, {
    "left" : "public clearLock(isFallback boolean) : void",
    "right" : "public clearLock(isFallback boolean) : void",
    "info" : "MethodDeclaration[19219-19328]:MethodDeclaration[19219-19328]"
  }, {
    "left" : "public clearLock(isFallback boolean, userHandle int) : void",
    "right" : "public clearLock(isFallback boolean, userHandle int) : void",
    "info" : "MethodDeclaration[19334-20015]:MethodDeclaration[19334-20015]"
  }, {
    "left" : "public setLockScreenDisabled(disable boolean) : void",
    "right" : "public setLockScreenDisabled(disable boolean) : void",
    "info" : "MethodDeclaration[20021-20367]:MethodDeclaration[20021-20367]"
  }, {
    "left" : "public isLockScreenDisabled() : boolean",
    "right" : "public isLockScreenDisabled() : boolean",
    "info" : "MethodDeclaration[20373-21213]:MethodDeclaration[20373-21213]"
  }, {
    "left" : "public deleteTempGallery() : void",
    "right" : "public deleteTempGallery() : void",
    "info" : "MethodDeclaration[21219-21522]:MethodDeclaration[21219-21522]"
  }, {
    "left" : "package deleteGallery(userId int) : void",
    "right" : "package deleteGallery(userId int) : void",
    "info" : "MethodDeclaration[21528-21938]:MethodDeclaration[21528-21938]"
  }, {
    "left" : "public saveLockPattern(pattern ) : void",
    "right" : "public saveLockPattern(pattern ) : void",
    "info" : "MethodDeclaration[21944-22159]:MethodDeclaration[21944-22159]"
  }, {
    "left" : "public saveLockPattern(pattern , isFallback boolean, isFingerprintFallback boolean) : void",
    "right" : "public saveLockPattern(pattern , isFallback boolean, isFingerprintFallback boolean) : void",
    "info" : "MethodDeclaration[22165-22509]:MethodDeclaration[22165-22509]"
  }, {
    "left" : "public saveLockPattern(pattern , isFallback boolean, isFingerprintFallback boolean, userId int) : void",
    "right" : "public saveLockPattern(pattern , isFallback boolean, isFingerprintFallback boolean, userId int) : void",
    "info" : "MethodDeclaration[22515-25111]:MethodDeclaration[22515-25111]"
  }, {
    "left" : "private updateCryptoUserInfo() : void",
    "right" : "private updateCryptoUserInfo() : void",
    "info" : "MethodDeclaration[25117-25898]:MethodDeclaration[25117-25898]"
  }, {
    "left" : "public setOwnerInfo(info , userId int) : void",
    "right" : "public setOwnerInfo(info , userId int) : void",
    "info" : "MethodDeclaration[25904-26050]:MethodDeclaration[25904-26050]"
  }, {
    "left" : "public setOwnerInfoEnabled(enabled boolean) : void",
    "right" : "public setOwnerInfoEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[26056-26205]:MethodDeclaration[26056-26205]"
  }, {
    "left" : "public getOwnerInfo(userId int) : ",
    "right" : "public getOwnerInfo(userId int) : ",
    "info" : "MethodDeclaration[26211-26307]:MethodDeclaration[26211-26307]"
  }, {
    "left" : "public isOwnerInfoEnabled() : boolean",
    "right" : "public isOwnerInfoEnabled() : boolean",
    "info" : "MethodDeclaration[26313-26422]:MethodDeclaration[26313-26422]"
  }, {
    "left" : "public computePasswordQuality(password ) : int",
    "right" : "public computePasswordQuality(password ) : int",
    "info" : "MethodDeclaration[26428-27439]:MethodDeclaration[26428-27439]"
  }, {
    "left" : "private categoryChar(c char) : int",
    "right" : "private categoryChar(c char) : int",
    "info" : "MethodDeclaration[27445-27642]:MethodDeclaration[27445-27642]"
  }, {
    "left" : "private maxDiffCategory(category int) : int",
    "right" : "private maxDiffCategory(category int) : int",
    "info" : "MethodDeclaration[27648-27819]:MethodDeclaration[27648-27819]"
  }, {
    "left" : "public maxLengthSequence(string ) : int",
    "right" : "public maxLengthSequence(string ) : int",
    "info" : "MethodDeclaration[28498-30029]:MethodDeclaration[28498-30029]"
  }, {
    "left" : "private updateEncryptionPassword(type int, password ) : void",
    "right" : "private updateEncryptionPassword(type int, password ) : void",
    "info" : "MethodDeclaration[30035-30986]:MethodDeclaration[30035-30986]"
  }, {
    "left" : "protected doInBackground() : ",
    "right" : "protected doInBackground() : ",
    "info" : "MethodDeclaration[30528-30959]:MethodDeclaration[30528-30959]"
  }, {
    "left" : "public saveLockPassword(password , quality int) : void",
    "right" : "public saveLockPassword(password , quality int) : void",
    "info" : "MethodDeclaration[30992-31441]:MethodDeclaration[30992-31441]"
  }, {
    "left" : "public saveLockPassword(password , quality int, isFallback boolean) : void",
    "right" : "public saveLockPassword(password , quality int, isFallback boolean) : void",
    "info" : "MethodDeclaration[31447-31998]:MethodDeclaration[31447-31998]"
  }, {
    "left" : "public saveLockPassword(password , quality int, isFallback boolean, isFingerprintFallback boolean) : void",
    "right" : "public saveLockPassword(password , quality int, isFallback boolean, isFingerprintFallback boolean) : void",
    "info" : "MethodDeclaration[32004-32764]:MethodDeclaration[32004-32764]"
  }, {
    "left" : "public saveLockPassword(password , quality int, isFallback boolean, isFingerprintPassword boolean, userHandle int) : void",
    "right" : "public saveLockPassword(password , quality int, isFallback boolean, isFingerprintPassword boolean, userHandle int) : void",
    "info" : "MethodDeclaration[32770-38998]:MethodDeclaration[32770-38998]"
  }, {
    "left" : "public isDeviceEncrypted() : boolean",
    "right" : "public isDeviceEncrypted() : boolean",
    "info" : "MethodDeclaration[39004-39621]:MethodDeclaration[39004-39621]"
  }, {
    "left" : "public isDeviceEncryptionEnabled() : boolean",
    "right" : "public isDeviceEncryptionEnabled() : boolean",
    "info" : "MethodDeclaration[39627-40107]:MethodDeclaration[39627-40107]"
  }, {
    "left" : "public clearEncryptionPassword() : void",
    "right" : "public clearEncryptionPassword() : void",
    "info" : "MethodDeclaration[40113-40288]:MethodDeclaration[40113-40288]"
  }, {
    "left" : "public getKeyguardStoredPasswordQuality() : int",
    "right" : "public getKeyguardStoredPasswordQuality() : int",
    "info" : "MethodDeclaration[40294-40615]:MethodDeclaration[40294-40615]"
  }, {
    "left" : "public getKeyguardStoredPasswordQuality(userHandle int) : int",
    "right" : "public getKeyguardStoredPasswordQuality(userHandle int) : int",
    "info" : "MethodDeclaration[40621-41443]:MethodDeclaration[40621-41443]"
  }, {
    "left" : "public usingBiometricWeak() : boolean",
    "right" : "public usingBiometricWeak() : boolean",
    "info" : "MethodDeclaration[41449-41642]:MethodDeclaration[41449-41642]"
  }, {
    "left" : "public usingBiometricWeak(userId int) : boolean",
    "right" : "public usingBiometricWeak(userId int) : boolean",
    "info" : "MethodDeclaration[41648-41997]:MethodDeclaration[41648-41997]"
  }, {
    "left" : "public usingFingerprint() : boolean",
    "right" : "public usingFingerprint() : boolean",
    "info" : "MethodDeclaration[42003-42202]:MethodDeclaration[42003-42202]"
  }, {
    "left" : "public usingFingerprint(userId int) : boolean",
    "right" : "public usingFingerprint(userId int) : boolean",
    "info" : "MethodDeclaration[42208-42718]:MethodDeclaration[42208-42718]"
  }, {
    "left" : "public setUseFingerprint() : void",
    "right" : "public setUseFingerprint() : void",
    "info" : "MethodDeclaration[42724-42837]:MethodDeclaration[42724-42837]"
  }, {
    "left" : "public setUseFingerprint(userId int) : void",
    "right" : "public setUseFingerprint(userId int) : void",
    "info" : "MethodDeclaration[42843-43296]:MethodDeclaration[42843-43296]"
  }, {
    "left" : "public isFingerprintInstalled(context ) : boolean",
    "right" : "public isFingerprintInstalled(context ) : boolean",
    "info" : "MethodDeclaration[43302-43538]:MethodDeclaration[43302-43538]"
  }, {
    "left" : "public stringToPattern(string ) : ",
    "right" : "public stringToPattern(string , size byte) : ",
    "info" : "MethodDeclaration[43544-44163]:MethodDeclaration[43832-44557]"
  }, {
    "left" : "public patternToString(pattern ) : ",
    "right" : "public patternToString(pattern ) : ",
    "info" : "MethodDeclaration[44169-44427]:MethodDeclaration[44563-44821]"
  }, {
    "left" : "public patternToString(pattern , patternGridSize int) : ",
    "right" : "public patternToString(pattern , patternGridSize int) : ",
    "info" : "MethodDeclaration[44433-45088]:MethodDeclaration[44827-45482]"
  }, {
    "left" : "public patternToHash(pattern ) : ",
    "right" : "public patternToHash(pattern ) : ",
    "info" : "MethodDeclaration[45422-46084]:MethodDeclaration[46376-47038]"
  }, {
    "left" : "private getSalt(userId int) : ",
    "right" : "private getSalt(userId int) : ",
    "info" : "MethodDeclaration[46090-46758]:MethodDeclaration[47044-47712]"
  }, {
    "left" : "public passwordToHash(password , userId int) : ",
    "right" : "public passwordToHash(password , userId int) : ",
    "info" : "MethodDeclaration[47145-47836]:MethodDeclaration[48099-48790]"
  }, {
    "left" : "private toHex(ary ) : ",
    "right" : "private toHex(ary ) : ",
    "info" : "MethodDeclaration[47842-48135]:MethodDeclaration[48796-49089]"
  }, {
    "left" : "public isLockPasswordEnabled() : boolean",
    "right" : "public isLockPasswordEnabled() : boolean",
    "info" : "MethodDeclaration[48141-49364]:MethodDeclaration[49095-50318]"
  }, {
    "left" : "public isLockPatternEnabled() : boolean",
    "right" : "public isLockPatternEnabled() : boolean",
    "info" : "MethodDeclaration[49370-49596]:MethodDeclaration[50324-50550]"
  }, {
    "left" : "public isLockPatternEnabled(userId int) : boolean",
    "right" : "public isLockPatternEnabled(userId int) : boolean",
    "info" : "MethodDeclaration[49602-50362]:MethodDeclaration[50556-51316]"
  }, {
    "left" : "public isBiometricWeakInstalled() : boolean",
    "right" : "public isBiometricWeakInstalled() : boolean",
    "info" : "MethodDeclaration[50368-51488]:MethodDeclaration[51322-52442]"
  }, {
    "left" : "public setBiometricWeakLivelinessEnabled(enabled boolean) : void",
    "right" : "public setBiometricWeakLivelinessEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[51494-51998]:MethodDeclaration[52448-52952]"
  }, {
    "left" : "public isBiometricWeakLivelinessEnabled() : boolean",
    "right" : "public isBiometricWeakLivelinessEnabled() : boolean",
    "info" : "MethodDeclaration[52004-52295]:MethodDeclaration[52958-53249]"
  }, {
    "left" : "public setLockPatternEnabled(enabled boolean) : void",
    "right" : "public setLockPatternEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[52301-52492]:MethodDeclaration[53255-53446]"
  }, {
    "left" : "public setLockPatternEnabled(enabled boolean, userHandle int) : void",
    "right" : "public setLockPatternEnabled(enabled boolean, userHandle int) : void",
    "info" : "MethodDeclaration[52498-52715]:MethodDeclaration[53452-53669]"
  }, {
    "left" : "public isVisiblePatternEnabled() : boolean",
    "right" : "public isVisiblePatternEnabled() : boolean",
    "info" : "MethodDeclaration[52721-52912]:MethodDeclaration[53675-53866]"
  }, {
    "left" : "public setVisiblePatternEnabled(enabled boolean) : void",
    "right" : "public setVisiblePatternEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[52918-53787]:MethodDeclaration[53872-54741]"
  }, {
    "left" : "public isTactileFeedbackEnabled() : boolean",
    "right" : "public isTactileFeedbackEnabled() : boolean",
    "info" : "MethodDeclaration[53793-54080]:MethodDeclaration[54747-55034]"
  }, {
    "left" : "public getLockPatternSize() : byte",
    "right" : "public getLockPatternSize() : byte",
    "info" : "MethodDeclaration[54086-54387]:MethodDeclaration[55040-55341]"
  }, {
    "left" : "public setLockPatternSize(size long) : void",
    "right" : "public setLockPatternSize(size long) : void",
    "info" : "MethodDeclaration[54393-54555]:MethodDeclaration[55347-55509]"
  }, {
    "left" : "public setVisibleDotsEnabled(enabled boolean) : void",
    "right" : "public setVisibleDotsEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[54561-54683]:MethodDeclaration[55515-55637]"
  }, {
    "left" : "public isVisibleDotsEnabled() : boolean",
    "right" : "public isVisibleDotsEnabled() : boolean",
    "info" : "MethodDeclaration[54689-54802]:MethodDeclaration[55643-55756]"
  }, {
    "left" : "public setShowErrorPath(enabled boolean) : void",
    "right" : "public setShowErrorPath(enabled boolean) : void",
    "info" : "MethodDeclaration[54808-54928]:MethodDeclaration[55762-55882]"
  }, {
    "left" : "public isShowErrorPath() : boolean",
    "right" : "public isShowErrorPath() : boolean",
    "info" : "MethodDeclaration[54934-55045]:MethodDeclaration[55888-55999]"
  }, {
    "left" : "public setLockoutAttemptDeadline() : long",
    "right" : "public setLockoutAttemptDeadline() : long",
    "info" : "MethodDeclaration[55051-55452]:MethodDeclaration[56005-56406]"
  }, {
    "left" : "public getLockoutAttemptDeadline() : long",
    "right" : "public getLockoutAttemptDeadline() : long",
    "info" : "MethodDeclaration[55458-55971]:MethodDeclaration[56412-56925]"
  }, {
    "left" : "public isPermanentlyLocked() : boolean",
    "right" : "public isPermanentlyLocked() : boolean",
    "info" : "MethodDeclaration[55977-56276]:MethodDeclaration[56931-57230]"
  }, {
    "left" : "public setPermanentlyLocked(locked boolean) : void",
    "right" : "public setPermanentlyLocked(locked boolean) : void",
    "info" : "MethodDeclaration[56282-56725]:MethodDeclaration[57236-57679]"
  }, {
    "left" : "public isEmergencyCallCapable() : boolean",
    "right" : "public isEmergencyCallCapable() : boolean",
    "info" : "MethodDeclaration[56731-56896]:MethodDeclaration[57685-57850]"
  }, {
    "left" : "public isPukUnlockScreenEnable() : boolean",
    "right" : "public isPukUnlockScreenEnable() : boolean",
    "info" : "MethodDeclaration[56902-57079]:MethodDeclaration[57856-58033]"
  }, {
    "left" : "public isEmergencyCallEnabledWhileSimLocked() : boolean",
    "right" : "public isEmergencyCallEnabledWhileSimLocked() : boolean",
    "info" : "MethodDeclaration[57085-57289]:MethodDeclaration[58039-58243]"
  }, {
    "left" : "public getNextAlarm() : ",
    "right" : "public getNextAlarm() : ",
    "info" : "MethodDeclaration[57295-57671]:MethodDeclaration[58249-58625]"
  }, {
    "left" : "private getBoolean(secureSettingKey , defaultValue boolean, userId int) : boolean",
    "right" : "private getBoolean(secureSettingKey , defaultValue boolean, userId int) : boolean",
    "info" : "MethodDeclaration[57677-57955]:MethodDeclaration[58631-58909]"
  }, {
    "left" : "private getBoolean(secureSettingKey , defaultValue boolean) : boolean",
    "right" : "private getBoolean(secureSettingKey , defaultValue boolean) : boolean",
    "info" : "MethodDeclaration[57961-58130]:MethodDeclaration[58915-59084]"
  }, {
    "left" : "private setBoolean(secureSettingKey , enabled boolean, userId int) : void",
    "right" : "private setBoolean(secureSettingKey , enabled boolean, userId int) : void",
    "info" : "MethodDeclaration[58136-58467]:MethodDeclaration[59090-59421]"
  }, {
    "left" : "private setBoolean(secureSettingKey , enabled boolean) : void",
    "right" : "private setBoolean(secureSettingKey , enabled boolean) : void",
    "info" : "MethodDeclaration[58473-58622]:MethodDeclaration[59427-59576]"
  }, {
    "left" : "public getAppWidgets() : ",
    "right" : "public getAppWidgets() : ",
    "info" : "MethodDeclaration[58628-58719]:MethodDeclaration[59582-59673]"
  }, {
    "left" : "private getAppWidgets(userId int) : ",
    "right" : "private getAppWidgets(userId int) : ",
    "info" : "MethodDeclaration[58725-59650]:MethodDeclaration[59679-60604]"
  }, {
    "left" : "private combineStrings(list , separator ) : ",
    "right" : "private combineStrings(list , separator ) : ",
    "info" : "MethodDeclaration[59656-60620]:MethodDeclaration[60610-61574]"
  }, {
    "left" : "public writeFallbackAppWidgetId(appWidgetId int) : void",
    "right" : "public writeFallbackAppWidgetId(appWidgetId int) : void",
    "info" : "MethodDeclaration[60732-60987]:MethodDeclaration[61686-61941]"
  }, {
    "left" : "public getFallbackAppWidgetId() : int",
    "right" : "public getFallbackAppWidgetId() : int",
    "info" : "MethodDeclaration[61099-61386]:MethodDeclaration[62053-62340]"
  }, {
    "left" : "private writeAppWidgets(appWidgetIds ...) : void",
    "right" : "private writeAppWidgets(appWidgetIds ...) : void",
    "info" : "MethodDeclaration[61392-61683]:MethodDeclaration[62346-62637]"
  }, {
    "left" : "public addAppWidget(widgetId int, index int) : boolean",
    "right" : "public addAppWidget(widgetId int, index int) : boolean",
    "info" : "MethodDeclaration[61737-62404]:MethodDeclaration[62691-63358]"
  }, {
    "left" : "public removeAppWidget(widgetId int) : boolean",
    "right" : "public removeAppWidget(widgetId int) : boolean",
    "info" : "MethodDeclaration[62410-63057]:MethodDeclaration[63364-64011]"
  }, {
    "left" : "private getLong(secureSettingKey , defaultValue long, userHandle int) : long",
    "right" : "private getLong(secureSettingKey , defaultValue long, userHandle int) : long",
    "info" : "MethodDeclaration[63063-63337]:MethodDeclaration[64017-64291]"
  }, {
    "left" : "private getLong(secureSettingKey , defaultValue long) : long",
    "right" : "private getLong(secureSettingKey , defaultValue long) : long",
    "info" : "MethodDeclaration[63343-63638]:MethodDeclaration[64297-64592]"
  }, {
    "left" : "private setLong(secureSettingKey , value long) : void",
    "right" : "private setLong(secureSettingKey , value long) : void",
    "info" : "MethodDeclaration[63644-63780]:MethodDeclaration[64598-64734]"
  }, {
    "left" : "private setLong(secureSettingKey , value long, userHandle int) : void",
    "right" : "private setLong(secureSettingKey , value long, userHandle int) : void",
    "info" : "MethodDeclaration[63786-64109]:MethodDeclaration[64740-65063]"
  }, {
    "left" : "private getString(secureSettingKey ) : ",
    "right" : "private getString(secureSettingKey ) : ",
    "info" : "MethodDeclaration[64115-64245]:MethodDeclaration[65069-65199]"
  }, {
    "left" : "private getString(secureSettingKey , userHandle int) : ",
    "right" : "private getString(secureSettingKey , userHandle int) : ",
    "info" : "MethodDeclaration[64251-64496]:MethodDeclaration[65205-65450]"
  }, {
    "left" : "private setString(secureSettingKey , value , userHandle int) : void",
    "right" : "private setString(secureSettingKey , value , userHandle int) : void",
    "info" : "MethodDeclaration[64502-64833]:MethodDeclaration[65456-65787]"
  }, {
    "left" : "public isSecure() : boolean",
    "right" : "public isSecure() : boolean",
    "info" : "MethodDeclaration[64839-64926]:MethodDeclaration[65793-65880]"
  }, {
    "left" : "public isSecure(userId int) : boolean",
    "right" : "public isSecure(userId int) : boolean",
    "info" : "MethodDeclaration[64932-65724]:MethodDeclaration[65886-66678]"
  }, {
    "left" : "public updateEmergencyCallButtonState(button , shown boolean, showIcon boolean) : void",
    "right" : "public updateEmergencyCallButtonState(button , shown boolean, showIcon boolean) : void",
    "info" : "MethodDeclaration[65730-67157]:MethodDeclaration[66684-68111]"
  }, {
    "left" : "public resumeCall() : void",
    "right" : "public resumeCall() : void",
    "info" : "MethodDeclaration[67163-67380]:MethodDeclaration[68117-68334]"
  }, {
    "left" : "public isInCall() : boolean",
    "right" : "public isInCall() : boolean",
    "info" : "MethodDeclaration[67386-67578]:MethodDeclaration[68340-68532]"
  }, {
    "left" : "private getTelecommManager() : ",
    "right" : "private getTelecommManager() : ",
    "info" : "MethodDeclaration[67584-67719]:MethodDeclaration[68538-68673]"
  }, {
    "left" : "private finishBiometricWeak(userId int) : void",
    "right" : "private finishBiometricWeak(userId int) : void",
    "info" : "MethodDeclaration[67725-68178]:MethodDeclaration[68679-69132]"
  }, {
    "left" : "public setPowerButtonInstantlyLocks(enabled boolean) : void",
    "right" : "public setPowerButtonInstantlyLocks(enabled boolean) : void",
    "info" : "MethodDeclaration[68184-68319]:MethodDeclaration[69138-69273]"
  }, {
    "left" : "public getPowerButtonInstantlyLocks() : boolean",
    "right" : "public getPowerButtonInstantlyLocks() : boolean",
    "info" : "MethodDeclaration[68325-68452]:MethodDeclaration[69279-69406]"
  }, {
    "left" : "public isSafeModeEnabled() : boolean",
    "right" : "public isSafeModeEnabled() : boolean",
    "info" : "MethodDeclaration[68458-68754]:MethodDeclaration[69412-69708]"
  }, {
    "left" : "public hasWidgetsEnabledInKeyguard(userid int) : boolean",
    "right" : "public hasWidgetsEnabledInKeyguard(userid int) : boolean",
    "info" : "MethodDeclaration[68760-69184]:MethodDeclaration[69714-70138]"
  }, {
    "left" : "public getWidgetsEnabled() : boolean",
    "right" : "public getWidgetsEnabled() : boolean",
    "info" : "MethodDeclaration[69190-69295]:MethodDeclaration[70144-70249]"
  }, {
    "left" : "public getWidgetsEnabled(userId int) : boolean",
    "right" : "public getWidgetsEnabled(userId int) : boolean",
    "info" : "MethodDeclaration[69301-69423]:MethodDeclaration[70255-70377]"
  }, {
    "left" : "public setWidgetsEnabled(enabled boolean) : void",
    "right" : "public setWidgetsEnabled(enabled boolean) : void",
    "info" : "MethodDeclaration[69429-69548]:MethodDeclaration[70383-70502]"
  }, {
    "left" : "public setWidgetsEnabled(enabled boolean, userId int) : void",
    "right" : "public setWidgetsEnabled(enabled boolean, userId int) : void",
    "info" : "MethodDeclaration[69554-69685]:MethodDeclaration[70508-70639]"
  }, {
    "left" : "public setEnabledTrustAgents(activeTrustAgents ...) : void",
    "right" : "public setEnabledTrustAgents(activeTrustAgents ...) : void",
    "info" : "MethodDeclaration[69691-69856]:MethodDeclaration[70645-70810]"
  }, {
    "left" : "public getEnabledTrustAgents() : ",
    "right" : "public getEnabledTrustAgents() : ",
    "info" : "MethodDeclaration[69862-69987]:MethodDeclaration[70816-70941]"
  }, {
    "left" : "public setEnabledTrustAgents(activeTrustAgents , userId int) : void",
    "right" : "public setEnabledTrustAgents(activeTrustAgents , userId int) : void",
    "info" : "MethodDeclaration[69993-70485]:MethodDeclaration[70947-71439]"
  }, {
    "left" : "public getEnabledTrustAgents(userId int) : ",
    "right" : "public getEnabledTrustAgents(userId int) : ",
    "info" : "MethodDeclaration[70491-71062]:MethodDeclaration[71445-72016]"
  }, {
    "left" : "public requireCredentialEntry(userId int) : void",
    "right" : "public requireCredentialEntry(userId int) : void",
    "info" : "MethodDeclaration[71068-71279]:MethodDeclaration[72022-72233]"
  }, {
    "left" : "private onAfterChangingPassword(userHandle int) : void",
    "right" : "private onAfterChangingPassword(userHandle int) : void",
    "info" : "MethodDeclaration[71285-71416]:MethodDeclaration[72239-72370]"
  }, {
    "left" : "public isCredentialRequiredToDecrypt(defaultValue boolean) : boolean",
    "right" : "public isCredentialRequiredToDecrypt(defaultValue boolean) : boolean",
    "info" : "MethodDeclaration[71422-71687]:MethodDeclaration[72376-72641]"
  }, {
    "left" : "public setCredentialRequiredToDecrypt(required boolean) : void",
    "right" : "public setCredentialRequiredToDecrypt(required boolean) : void",
    "info" : "MethodDeclaration[71693-72078]:MethodDeclaration[72647-73032]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7282-7288]:Modifier[7282-7288]"
  }, {
    "left" : "DevicePolicyManager",
    "right" : "DevicePolicyManager",
    "info" : "SimpleType[7289-7308]:SimpleType[7289-7308]"
  }, {
    "left" : "getDevicePolicyManager",
    "right" : "getDevicePolicyManager",
    "info" : "SimpleName[7309-7331]:SimpleName[7309-7331]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7334-7775]:Block[7334-7775]"
  }, {
    "left" : "if (mDevicePolicyManager == null)",
    "right" : "if (mDevicePolicyManager == null)",
    "info" : "IfStatement[7344-7732]:IfStatement[7344-7732]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7378-7732]:Block[7378-7732]"
  }, {
    "left" : "mDevicePolicyManager =\n                (DevicePolicyManager)mContext.getSystemService(Context.DEVICE_POLICY_SERVICE);",
    "right" : "mDevicePolicyManager =\n                (DevicePolicyManager)mContext.getSystemService(Context.DEVICE_POLICY_SERVICE);",
    "info" : "ExpressionStatement[7392-7509]:ExpressionStatement[7392-7509]"
  }, {
    "left" : "if (mDevicePolicyManager == null)",
    "right" : "if (mDevicePolicyManager == null)",
    "info" : "IfStatement[7522-7722]:IfStatement[7522-7722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7556-7722]:Block[7556-7722]"
  }, {
    "left" : "Log.e(TAG, \"Can't get DevicePolicyManagerService: is it running?\",\n                        new IllegalStateException(\"Stack trace:\"));",
    "right" : "Log.e(TAG, \"Can't get DevicePolicyManagerService: is it running?\",\n                        new IllegalStateException(\"Stack trace:\"));",
    "info" : "ExpressionStatement[7574-7708]:ExpressionStatement[7574-7708]"
  }, {
    "left" : "return mDevicePolicyManager;",
    "right" : "return mDevicePolicyManager;",
    "info" : "ReturnStatement[7741-7769]:ReturnStatement[7741-7769]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[7781-7788]:Modifier[7781-7788]"
  }, {
    "left" : "TrustManager",
    "right" : "TrustManager",
    "info" : "SimpleType[7789-7801]:SimpleType[7789-7801]"
  }, {
    "left" : "getTrustManager",
    "right" : "getTrustManager",
    "info" : "SimpleName[7802-7817]:SimpleName[7802-7817]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7820-8118]:Block[7820-8118]"
  }, {
    "left" : "TrustManager trust = (TrustManager) mContext.getSystemService(Context.TRUST_SERVICE);",
    "right" : "TrustManager trust = (TrustManager) mContext.getSystemService(Context.TRUST_SERVICE);",
    "info" : "VariableDeclarationStatement[7830-7915]:VariableDeclarationStatement[7830-7915]"
  }, {
    "left" : "if (trust == null)",
    "right" : "if (trust == null)",
    "info" : "IfStatement[7924-8090]:IfStatement[7924-8090]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7943-8090]:Block[7943-8090]"
  }, {
    "left" : "Log.e(TAG, \"Can't get TrustManagerService: is it running?\",\n                    new IllegalStateException(\"Stack trace:\"));",
    "right" : "Log.e(TAG, \"Can't get TrustManagerService: is it running?\",\n                    new IllegalStateException(\"Stack trace:\"));",
    "info" : "ExpressionStatement[7957-8080]:ExpressionStatement[7957-8080]"
  }, {
    "left" : "return trust;",
    "right" : "return trust;",
    "info" : "ReturnStatement[8099-8112]:ReturnStatement[8099-8112]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8124-8130]:Modifier[8124-8130]"
  }, {
    "left" : "LockPatternUtils",
    "right" : "LockPatternUtils",
    "info" : "SimpleName[8131-8147]:SimpleName[8131-8147]"
  }, {
    "left" : "Context context",
    "right" : "Context context",
    "info" : "SingleVariableDeclaration[8148-8163]:SingleVariableDeclaration[8148-8163]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8165-8703]:Block[8165-8703]"
  }, {
    "left" : "mContext = context;",
    "right" : "mContext = context;",
    "info" : "ExpressionStatement[8175-8194]:ExpressionStatement[8175-8194]"
  }, {
    "left" : "mContentResolver = context.getContentResolver();",
    "right" : "mContentResolver = context.getContentResolver();",
    "info" : "ExpressionStatement[8203-8251]:ExpressionStatement[8203-8251]"
  }, {
    "left" : "mMultiUserMode = context.checkCallingOrSelfPermission(\n            Manifest.permission.INTERACT_ACROSS_USERS_FULL) == PackageManager.PERMISSION_GRANTED;",
    "right" : "mMultiUserMode = context.checkCallingOrSelfPermission(\n            Manifest.permission.INTERACT_ACROSS_USERS_FULL) == PackageManager.PERMISSION_GRANTED;",
    "info" : "ExpressionStatement[8545-8697]:ExpressionStatement[8545-8697]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[8709-8716]:Modifier[8709-8716]"
  }, {
    "left" : "ILockSettings",
    "right" : "ILockSettings",
    "info" : "SimpleType[8717-8730]:SimpleType[8717-8730]"
  }, {
    "left" : "getLockSettings",
    "right" : "getLockSettings",
    "info" : "SimpleName[8731-8746]:SimpleName[8731-8746]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8749-9024]:Block[8749-9024]"
  }, {
    "left" : "if (mLockSettingsService == null)",
    "right" : "if (mLockSettingsService == null)",
    "info" : "IfStatement[8759-8981]:IfStatement[8759-8981]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8793-8981]:Block[8793-8981]"
  }, {
    "left" : "ILockSettings service = ILockSettings.Stub.asInterface(\n                    ServiceManager.getService(\"lock_settings\"));",
    "right" : "ILockSettings service = ILockSettings.Stub.asInterface(\n                    ServiceManager.getService(\"lock_settings\"));",
    "info" : "VariableDeclarationStatement[8807-8927]:VariableDeclarationStatement[8807-8927]"
  }, {
    "left" : "mLockSettingsService = service;",
    "right" : "mLockSettingsService = service;",
    "info" : "ExpressionStatement[8940-8971]:ExpressionStatement[8940-8971]"
  }, {
    "left" : "return mLockSettingsService;",
    "right" : "return mLockSettingsService;",
    "info" : "ReturnStatement[8990-9018]:ReturnStatement[8990-9018]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9030-9036]:Modifier[9030-9036]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[9037-9040]:PrimitiveType[9037-9040]"
  }, {
    "left" : "getRequestedMinimumPasswordLength",
    "right" : "getRequestedMinimumPasswordLength",
    "info" : "SimpleName[9041-9074]:SimpleName[9041-9074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9077-9185]:Block[9077-9185]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumLength(null, getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumLength(null, getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[9087-9179]:ReturnStatement[9087-9179]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9351-9357]:Modifier[9351-9357]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[9358-9361]:PrimitiveType[9358-9361]"
  }, {
    "left" : "getRequestedPasswordQuality",
    "right" : "getRequestedPasswordQuality",
    "info" : "SimpleName[9362-9389]:SimpleName[9362-9389]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9392-9494]:Block[9392-9494]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordQuality(null, getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordQuality(null, getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[9402-9488]:ReturnStatement[9402-9488]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9500-9506]:Modifier[9500-9506]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[9507-9510]:PrimitiveType[9507-9510]"
  }, {
    "left" : "getRequestedPasswordHistoryLength",
    "right" : "getRequestedPasswordHistoryLength",
    "info" : "SimpleName[9511-9544]:SimpleName[9511-9544]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9547-9655]:Block[9547-9655]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordHistoryLength(null, getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordHistoryLength(null, getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[9557-9649]:ReturnStatement[9557-9649]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9661-9667]:Modifier[9661-9667]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[9668-9671]:PrimitiveType[9668-9671]"
  }, {
    "left" : "getRequestedPasswordMinimumLetters",
    "right" : "getRequestedPasswordMinimumLetters",
    "info" : "SimpleName[9672-9706]:SimpleName[9672-9706]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9709-9834]:Block[9709-9834]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumLetters(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumLetters(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[9719-9828]:ReturnStatement[9719-9828]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9840-9846]:Modifier[9840-9846]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[9847-9850]:PrimitiveType[9847-9850]"
  }, {
    "left" : "getRequestedPasswordMinimumUpperCase",
    "right" : "getRequestedPasswordMinimumUpperCase",
    "info" : "SimpleName[9851-9887]:SimpleName[9851-9887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9890-10017]:Block[9890-10017]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumUpperCase(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumUpperCase(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[9900-10011]:ReturnStatement[9900-10011]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10023-10029]:Modifier[10023-10029]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[10030-10033]:PrimitiveType[10030-10033]"
  }, {
    "left" : "getRequestedPasswordMinimumLowerCase",
    "right" : "getRequestedPasswordMinimumLowerCase",
    "info" : "SimpleName[10034-10070]:SimpleName[10034-10070]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10073-10200]:Block[10073-10200]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumLowerCase(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumLowerCase(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[10083-10194]:ReturnStatement[10083-10194]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10206-10212]:Modifier[10206-10212]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[10213-10216]:PrimitiveType[10213-10216]"
  }, {
    "left" : "getRequestedPasswordMinimumNumeric",
    "right" : "getRequestedPasswordMinimumNumeric",
    "info" : "SimpleName[10217-10251]:SimpleName[10217-10251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10254-10379]:Block[10254-10379]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumNumeric(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumNumeric(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[10264-10373]:ReturnStatement[10264-10373]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10385-10391]:Modifier[10385-10391]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[10392-10395]:PrimitiveType[10392-10395]"
  }, {
    "left" : "getRequestedPasswordMinimumSymbols",
    "right" : "getRequestedPasswordMinimumSymbols",
    "info" : "SimpleName[10396-10430]:SimpleName[10396-10430]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10433-10558]:Block[10433-10558]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumSymbols(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumSymbols(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[10443-10552]:ReturnStatement[10443-10552]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10564-10570]:Modifier[10564-10570]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[10571-10574]:PrimitiveType[10571-10574]"
  }, {
    "left" : "getRequestedPasswordMinimumNonLetter",
    "right" : "getRequestedPasswordMinimumNonLetter",
    "info" : "SimpleName[10575-10611]:SimpleName[10575-10611]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10614-10741]:Block[10614-10741]"
  }, {
    "left" : "return getDevicePolicyManager().getPasswordMinimumNonLetter(null,\n                getCurrentOrCallingUserId());",
    "right" : "return getDevicePolicyManager().getPasswordMinimumNonLetter(null,\n                getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[10624-10735]:ReturnStatement[10624-10735]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10747-10753]:Modifier[10747-10753]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[10754-10758]:PrimitiveType[10754-10758]"
  }, {
    "left" : "reportFailedPasswordAttempt",
    "right" : "reportFailedPasswordAttempt",
    "info" : "SimpleName[10759-10786]:SimpleName[10759-10786]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10789-11062]:Block[10789-11062]"
  }, {
    "left" : "int userId = getCurrentOrCallingUserId();",
    "right" : "int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[10799-10840]:VariableDeclarationStatement[10799-10840]"
  }, {
    "left" : "getDevicePolicyManager().reportFailedPasswordAttempt(userId);",
    "right" : "getDevicePolicyManager().reportFailedPasswordAttempt(userId);",
    "info" : "ExpressionStatement[10849-10910]:ExpressionStatement[10849-10910]"
  }, {
    "left" : "getTrustManager().reportUnlockAttempt(false /* authenticated */, userId);",
    "right" : "getTrustManager().reportUnlockAttempt(false /* authenticated */, userId);",
    "info" : "ExpressionStatement[10919-10992]:ExpressionStatement[10919-10992]"
  }, {
    "left" : "getTrustManager().reportRequireCredentialEntry(userId);",
    "right" : "getTrustManager().reportRequireCredentialEntry(userId);",
    "info" : "ExpressionStatement[11001-11056]:ExpressionStatement[11001-11056]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11068-11074]:Modifier[11068-11074]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11075-11079]:PrimitiveType[11075-11079]"
  }, {
    "left" : "reportSuccessfulPasswordAttempt",
    "right" : "reportSuccessfulPasswordAttempt",
    "info" : "SimpleName[11080-11111]:SimpleName[11080-11111]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11114-11334]:Block[11114-11334]"
  }, {
    "left" : "getDevicePolicyManager().reportSuccessfulPasswordAttempt(getCurrentOrCallingUserId());",
    "right" : "getDevicePolicyManager().reportSuccessfulPasswordAttempt(getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[11124-11210]:ExpressionStatement[11124-11210]"
  }, {
    "left" : "getTrustManager().reportUnlockAttempt(true /* authenticated */,\n                getCurrentOrCallingUserId());",
    "right" : "getTrustManager().reportUnlockAttempt(true /* authenticated */,\n                getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[11219-11328]:ExpressionStatement[11219-11328]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11340-11346]:Modifier[11340-11346]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11347-11351]:PrimitiveType[11347-11351]"
  }, {
    "left" : "setCurrentUser",
    "right" : "setCurrentUser",
    "info" : "SimpleName[11352-11366]:SimpleName[11352-11366]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[11367-11377]:SingleVariableDeclaration[11367-11377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11379-11419]:Block[11379-11419]"
  }, {
    "left" : "sCurrentUserId = userId;",
    "right" : "sCurrentUserId = userId;",
    "info" : "ExpressionStatement[11389-11413]:ExpressionStatement[11389-11413]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11425-11431]:Modifier[11425-11431]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[11432-11435]:PrimitiveType[11432-11435]"
  }, {
    "left" : "getCurrentUser",
    "right" : "getCurrentUser",
    "info" : "SimpleName[11436-11450]:SimpleName[11436-11450]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11453-11823]:Block[11453-11823]"
  }, {
    "left" : "if (sCurrentUserId != UserHandle.USER_NULL)",
    "right" : "if (sCurrentUserId != UserHandle.USER_NULL)",
    "info" : "IfStatement[11463-11637]:IfStatement[11463-11637]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11507-11637]:Block[11507-11637]"
  }, {
    "left" : "return sCurrentUserId;",
    "right" : "return sCurrentUserId;",
    "info" : "ReturnStatement[11605-11627]:ReturnStatement[11605-11627]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[11646-11817]:TryStatement[11646-11817]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11650-11736]:Block[11650-11736]"
  }, {
    "left" : "return ActivityManagerNative.getDefault().getCurrentUser().id;",
    "right" : "return ActivityManagerNative.getDefault().getCurrentUser().id;",
    "info" : "ReturnStatement[11664-11726]:ReturnStatement[11664-11726]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11764-11817]:Block[11764-11817]"
  }, {
    "left" : "return UserHandle.USER_OWNER;",
    "right" : "return UserHandle.USER_OWNER;",
    "info" : "ReturnStatement[11778-11807]:ReturnStatement[11778-11807]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11829-11835]:Modifier[11829-11835]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11836-11840]:PrimitiveType[11836-11840]"
  }, {
    "left" : "removeUser",
    "right" : "removeUser",
    "info" : "SimpleName[11841-11851]:SimpleName[11841-11851]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[11852-11862]:SingleVariableDeclaration[11852-11862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11864-12060]:Block[11864-12060]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[11874-12054]:TryStatement[11874-12054]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11878-11939]:Block[11878-11939]"
  }, {
    "left" : "getLockSettings().removeUser(userId);",
    "right" : "getLockSettings().removeUser(userId);",
    "info" : "ExpressionStatement[11892-11929]:ExpressionStatement[11892-11929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11967-12054]:Block[11967-12054]"
  }, {
    "left" : "Log.e(TAG, \"Couldn't remove lock settings for user \" + userId);",
    "right" : "Log.e(TAG, \"Couldn't remove lock settings for user \" + userId);",
    "info" : "ExpressionStatement[11981-12044]:ExpressionStatement[11981-12044]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[12066-12073]:Modifier[12066-12073]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[12074-12077]:PrimitiveType[12074-12077]"
  }, {
    "left" : "getCurrentOrCallingUserId",
    "right" : "getCurrentOrCallingUserId",
    "info" : "SimpleName[12078-12103]:SimpleName[12078-12103]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12106-12403]:Block[12106-12403]"
  }, {
    "left" : "if (mMultiUserMode)",
    "right" : "if (mMultiUserMode)",
    "info" : "IfStatement[12116-12397]:IfStatement[12116-12397]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12136-12330]:Block[12136-12330]"
  }, {
    "left" : "return getCurrentUser();",
    "right" : "return getCurrentUser();",
    "info" : "ReturnStatement[12296-12320]:ReturnStatement[12296-12320]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12336-12397]:Block[12336-12397]"
  }, {
    "left" : "return UserHandle.getCallingUserId();",
    "right" : "return UserHandle.getCallingUserId();",
    "info" : "ReturnStatement[12350-12387]:ReturnStatement[12350-12387]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12639-12645]:Modifier[12639-12645]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[12646-12653]:PrimitiveType[12646-12653]"
  }, {
    "left" : "checkPattern",
    "right" : "checkPattern",
    "info" : "SimpleName[12654-12666]:SimpleName[12654-12666]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[12667-12701]:SingleVariableDeclaration[12667-12701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12703-12939]:Block[12703-12939]"
  }, {
    "left" : "final int userId = getCurrentOrCallingUserId();",
    "right" : "final int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[12713-12760]:VariableDeclarationStatement[12713-12760]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[12769-12933]:TryStatement[12769-12933]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12773-12869]:Block[12773-12869]"
  }, {
    "left" : "return getLockSettings().checkPattern(patternToString(pattern), userId);",
    "right" : "return getLockSettings().checkPattern(patternToString(pattern), userId);",
    "info" : "ReturnStatement[12787-12859]:ReturnStatement[12787-12859]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12897-12933]:Block[12897-12933]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[12911-12923]:ReturnStatement[12911-12923]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13181-13187]:Modifier[13181-13187]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[13188-13195]:PrimitiveType[13188-13195]"
  }, {
    "left" : "checkPassword",
    "right" : "checkPassword",
    "info" : "SimpleName[13196-13209]:SimpleName[13196-13209]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[13210-13225]:SingleVariableDeclaration[13210-13225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13227-13448]:Block[13227-13448]"
  }, {
    "left" : "final int userId = getCurrentOrCallingUserId();",
    "right" : "final int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[13237-13284]:VariableDeclarationStatement[13237-13284]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[13293-13442]:TryStatement[13293-13442]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13297-13378]:Block[13297-13378]"
  }, {
    "left" : "return getLockSettings().checkPassword(password, userId);",
    "right" : "return getLockSettings().checkPassword(password, userId);",
    "info" : "ReturnStatement[13311-13368]:ReturnStatement[13311-13368]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13406-13442]:Block[13406-13442]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[13420-13432]:ReturnStatement[13420-13432]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13644-13650]:Modifier[13644-13650]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[13651-13658]:PrimitiveType[13651-13658]"
  }, {
    "left" : "checkVoldPassword",
    "right" : "checkVoldPassword",
    "info" : "SimpleName[13659-13676]:SimpleName[13659-13676]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13679-13895]:Block[13679-13895]"
  }, {
    "left" : "final int userId = getCurrentOrCallingUserId();",
    "right" : "final int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[13689-13736]:VariableDeclarationStatement[13689-13736]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[13745-13889]:TryStatement[13745-13889]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13749-13824]:Block[13749-13824]"
  }, {
    "left" : "return getLockSettings().checkVoldPassword(userId);",
    "right" : "return getLockSettings().checkVoldPassword(userId);",
    "info" : "ReturnStatement[13763-13814]:ReturnStatement[13763-13814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13852-13889]:Block[13852-13889]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[13866-13879]:ReturnStatement[13866-13879]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14136-14142]:Modifier[14136-14142]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[14143-14150]:PrimitiveType[14143-14150]"
  }, {
    "left" : "checkPasswordHistory",
    "right" : "checkPasswordHistory",
    "info" : "SimpleName[14151-14171]:SimpleName[14151-14171]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[14172-14187]:SingleVariableDeclaration[14172-14187]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14189-15076]:Block[14189-15076]"
  }, {
    "left" : "String passwordHashString = new String(\n                passwordToHash(password, getCurrentOrCallingUserId()));",
    "right" : "String passwordHashString = new String(\n                passwordToHash(password, getCurrentOrCallingUserId()));",
    "info" : "VariableDeclarationStatement[14199-14310]:VariableDeclarationStatement[14199-14310]"
  }, {
    "left" : "String passwordHistory = getString(PASSWORD_HISTORY_KEY);",
    "right" : "String passwordHistory = getString(PASSWORD_HISTORY_KEY);",
    "info" : "VariableDeclarationStatement[14319-14376]:VariableDeclarationStatement[14319-14376]"
  }, {
    "left" : "if (passwordHistory == null)",
    "right" : "if (passwordHistory == null)",
    "info" : "IfStatement[14385-14451]:IfStatement[14385-14451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14414-14451]:Block[14414-14451]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[14428-14441]:ReturnStatement[14428-14441]"
  }, {
    "left" : "int passwordHashLength = passwordHashString.length();",
    "right" : "int passwordHashLength = passwordHashString.length();",
    "info" : "VariableDeclarationStatement[14507-14560]:VariableDeclarationStatement[14507-14560]"
  }, {
    "left" : "int passwordHistoryLength = getRequestedPasswordHistoryLength();",
    "right" : "int passwordHistoryLength = getRequestedPasswordHistoryLength();",
    "info" : "VariableDeclarationStatement[14569-14633]:VariableDeclarationStatement[14569-14633]"
  }, {
    "left" : "if(passwordHistoryLength == 0)",
    "right" : "if(passwordHistoryLength == 0)",
    "info" : "IfStatement[14642-14710]:IfStatement[14642-14710]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14673-14710]:Block[14673-14710]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[14687-14700]:ReturnStatement[14687-14700]"
  }, {
    "left" : "int neededPasswordHistoryLength = passwordHashLength * passwordHistoryLength\n                + passwordHistoryLength - 1;",
    "right" : "int neededPasswordHistoryLength = passwordHashLength * passwordHistoryLength\n                + passwordHistoryLength - 1;",
    "info" : "VariableDeclarationStatement[14719-14840]:VariableDeclarationStatement[14719-14840]"
  }, {
    "left" : "if (passwordHistory.length() > neededPasswordHistoryLength)",
    "right" : "if (passwordHistory.length() > neededPasswordHistoryLength)",
    "info" : "IfStatement[14849-15009]:IfStatement[14849-15009]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14909-15009]:Block[14909-15009]"
  }, {
    "left" : "passwordHistory = passwordHistory.substring(0, neededPasswordHistoryLength);",
    "right" : "passwordHistory = passwordHistory.substring(0, neededPasswordHistoryLength);",
    "info" : "ExpressionStatement[14923-14999]:ExpressionStatement[14923-14999]"
  }, {
    "left" : "return passwordHistory.contains(passwordHashString);",
    "right" : "return passwordHistory.contains(passwordHashString);",
    "info" : "ReturnStatement[15018-15070]:ReturnStatement[15018-15070]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15204-15210]:Modifier[15204-15210]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[15211-15218]:PrimitiveType[15211-15218]"
  }, {
    "left" : "savedPatternExists",
    "right" : "savedPatternExists",
    "info" : "SimpleName[15219-15237]:SimpleName[15219-15237]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15240-15311]:Block[15240-15311]"
  }, {
    "left" : "return savedPatternExists(getCurrentOrCallingUserId());",
    "right" : "return savedPatternExists(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[15250-15305]:ReturnStatement[15250-15305]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15439-15445]:Modifier[15439-15445]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[15446-15453]:PrimitiveType[15446-15453]"
  }, {
    "left" : "savedPatternExists",
    "right" : "savedPatternExists",
    "info" : "SimpleName[15454-15472]:SimpleName[15454-15472]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[15473-15483]:SingleVariableDeclaration[15473-15483]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15485-15639]:Block[15485-15639]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[15495-15633]:TryStatement[15495-15633]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15499-15568]:Block[15499-15568]"
  }, {
    "left" : "return getLockSettings().havePattern(userId);",
    "right" : "return getLockSettings().havePattern(userId);",
    "info" : "ReturnStatement[15513-15558]:ReturnStatement[15513-15558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15596-15633]:Block[15596-15633]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[15610-15623]:ReturnStatement[15610-15623]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15767-15773]:Modifier[15767-15773]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[15774-15781]:PrimitiveType[15774-15781]"
  }, {
    "left" : "savedPasswordExists",
    "right" : "savedPasswordExists",
    "info" : "SimpleName[15782-15801]:SimpleName[15782-15801]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15804-15876]:Block[15804-15876]"
  }, {
    "left" : "return savedPasswordExists(getCurrentOrCallingUserId());",
    "right" : "return savedPasswordExists(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[15814-15870]:ReturnStatement[15814-15870]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16005-16011]:Modifier[16005-16011]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[16012-16019]:PrimitiveType[16012-16019]"
  }, {
    "left" : "savedPasswordExists",
    "right" : "savedPasswordExists",
    "info" : "SimpleName[16020-16039]:SimpleName[16020-16039]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[16040-16050]:SingleVariableDeclaration[16040-16050]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16052-16207]:Block[16052-16207]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[16062-16201]:TryStatement[16062-16201]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16066-16136]:Block[16066-16136]"
  }, {
    "left" : "return getLockSettings().havePassword(userId);",
    "right" : "return getLockSettings().havePassword(userId);",
    "info" : "ReturnStatement[16080-16126]:ReturnStatement[16080-16126]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16164-16201]:Block[16164-16201]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[16178-16191]:ReturnStatement[16178-16191]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16416-16422]:Modifier[16416-16422]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[16423-16430]:PrimitiveType[16423-16430]"
  }, {
    "left" : "isPatternEverChosen",
    "right" : "isPatternEverChosen",
    "info" : "SimpleName[16431-16450]:SimpleName[16431-16450]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16453-16519]:Block[16453-16519]"
  }, {
    "left" : "return getBoolean(PATTERN_EVER_CHOSEN_KEY, false);",
    "right" : "return getBoolean(PATTERN_EVER_CHOSEN_KEY, false);",
    "info" : "ReturnStatement[16463-16513]:ReturnStatement[16463-16513]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16739-16745]:Modifier[16739-16745]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[16746-16753]:PrimitiveType[16746-16753]"
  }, {
    "left" : "isBiometricWeakEverChosen",
    "right" : "isBiometricWeakEverChosen",
    "info" : "SimpleName[16754-16779]:SimpleName[16754-16779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16782-16855]:Block[16782-16855]"
  }, {
    "left" : "return getBoolean(BIOMETRIC_WEAK_EVER_CHOSEN_KEY, false);",
    "right" : "return getBoolean(BIOMETRIC_WEAK_EVER_CHOSEN_KEY, false);",
    "info" : "ReturnStatement[16792-16849]:ReturnStatement[16792-16849]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16974-16980]:Modifier[16974-16980]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[16981-16984]:PrimitiveType[16981-16984]"
  }, {
    "left" : "getActivePasswordQuality",
    "right" : "getActivePasswordQuality",
    "info" : "SimpleName[16985-17009]:SimpleName[16985-17009]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17012-19213]:Block[17012-19213]"
  }, {
    "left" : "int activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED;",
    "right" : "int activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED;",
    "info" : "VariableDeclarationStatement[17022-17099]:VariableDeclarationStatement[17022-17099]"
  }, {
    "left" : "int quality =\n                (int) getLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);",
    "right" : "int quality =\n                (int) getLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_SOMETHING);",
    "info" : "VariableDeclarationStatement[17281-17392]:VariableDeclarationStatement[17281-17392]"
  }, {
    "left" : "switch (quality) {\n            case DevicePolicyManager.PASSWORD_QUALITY_SOMETHING:\n                if (isLockPatternEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK:\n                if (isBiometricWeakInstalled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_COMPLEX:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;\n                }\n                break;\n        }",
    "right" : "switch (quality) {\n            case DevicePolicyManager.PASSWORD_QUALITY_SOMETHING:\n                if (isLockPatternEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK:\n                if (isBiometricWeakInstalled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;\n                }\n                break;\n            case DevicePolicyManager.PASSWORD_QUALITY_COMPLEX:\n                if (isLockPasswordEnabled()) {\n                    activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;\n                }\n                break;\n        }",
    "info" : "SwitchStatement[17401-19168]:SwitchStatement[17401-19168]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_SOMETHING:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_SOMETHING:",
    "info" : "SwitchCase[17432-17484]:SwitchCase[17432-17484]"
  }, {
    "left" : "if (isLockPatternEnabled())",
    "right" : "if (isLockPatternEnabled())",
    "info" : "IfStatement[17501-17640]:IfStatement[17501-17640]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17529-17640]:Block[17529-17640]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "info" : "ExpressionStatement[17551-17622]:ExpressionStatement[17551-17622]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[17657-17663]:BreakStatement[17657-17663]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK:",
    "info" : "SwitchCase[17676-17733]:SwitchCase[17676-17733]"
  }, {
    "left" : "if (isBiometricWeakInstalled())",
    "right" : "if (isBiometricWeakInstalled())",
    "info" : "IfStatement[17750-17898]:IfStatement[17750-17898]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17782-17898]:Block[17782-17898]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;",
    "info" : "ExpressionStatement[17804-17880]:ExpressionStatement[17804-17880]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[17915-17921]:BreakStatement[17915-17921]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC:",
    "info" : "SwitchCase[17934-17984]:SwitchCase[17934-17984]"
  }, {
    "left" : "if (isLockPasswordEnabled())",
    "right" : "if (isLockPasswordEnabled())",
    "info" : "IfStatement[18001-18139]:IfStatement[18001-18139]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18030-18139]:Block[18030-18139]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;",
    "info" : "ExpressionStatement[18052-18121]:ExpressionStatement[18052-18121]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[18156-18162]:BreakStatement[18156-18162]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX:",
    "info" : "SwitchCase[18175-18233]:SwitchCase[18175-18233]"
  }, {
    "left" : "if (isLockPasswordEnabled())",
    "right" : "if (isLockPasswordEnabled())",
    "info" : "IfStatement[18250-18396]:IfStatement[18250-18396]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18279-18396]:Block[18279-18396]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "info" : "ExpressionStatement[18301-18378]:ExpressionStatement[18301-18378]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[18413-18419]:BreakStatement[18413-18419]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC:",
    "info" : "SwitchCase[18432-18485]:SwitchCase[18432-18485]"
  }, {
    "left" : "if (isLockPasswordEnabled())",
    "right" : "if (isLockPasswordEnabled())",
    "info" : "IfStatement[18502-18643]:IfStatement[18502-18643]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18531-18643]:Block[18531-18643]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;",
    "info" : "ExpressionStatement[18553-18625]:ExpressionStatement[18553-18625]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[18660-18666]:BreakStatement[18660-18666]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC:",
    "info" : "SwitchCase[18679-18734]:SwitchCase[18679-18734]"
  }, {
    "left" : "if (isLockPasswordEnabled())",
    "right" : "if (isLockPasswordEnabled())",
    "info" : "IfStatement[18751-18894]:IfStatement[18751-18894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18780-18894]:Block[18780-18894]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;",
    "info" : "ExpressionStatement[18802-18876]:ExpressionStatement[18802-18876]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[18911-18917]:BreakStatement[18911-18917]"
  }, {
    "left" : "case DevicePolicyManager.PASSWORD_QUALITY_COMPLEX:",
    "right" : "case DevicePolicyManager.PASSWORD_QUALITY_COMPLEX:",
    "info" : "SwitchCase[18930-18980]:SwitchCase[18930-18980]"
  }, {
    "left" : "if (isLockPasswordEnabled())",
    "right" : "if (isLockPasswordEnabled())",
    "info" : "IfStatement[18997-19135]:IfStatement[18997-19135]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19026-19135]:Block[19026-19135]"
  }, {
    "left" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "right" : "activePasswordQuality = DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "info" : "ExpressionStatement[19048-19117]:ExpressionStatement[19048-19117]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[19152-19158]:BreakStatement[19152-19158]"
  }, {
    "left" : "return activePasswordQuality;",
    "right" : "return activePasswordQuality;",
    "info" : "ReturnStatement[19178-19207]:ReturnStatement[19178-19207]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19219-19225]:Modifier[19219-19225]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19226-19230]:PrimitiveType[19226-19230]"
  }, {
    "left" : "clearLock",
    "right" : "clearLock",
    "info" : "SimpleName[19231-19240]:SimpleName[19231-19240]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[19241-19259]:SingleVariableDeclaration[19241-19259]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19261-19328]:Block[19261-19328]"
  }, {
    "left" : "clearLock(isFallback, getCurrentOrCallingUserId());",
    "right" : "clearLock(isFallback, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[19271-19322]:ExpressionStatement[19271-19322]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19393-19399]:Modifier[19393-19399]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19400-19404]:PrimitiveType[19400-19404]"
  }, {
    "left" : "clearLock",
    "right" : "clearLock",
    "info" : "SimpleName[19405-19414]:SimpleName[19405-19414]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[19415-19433]:SingleVariableDeclaration[19415-19433]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[19435-19449]:SingleVariableDeclaration[19435-19449]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19451-20015]:Block[19451-20015]"
  }, {
    "left" : "if(!isFallback)",
    "right" : "if(!isFallback)",
    "info" : "IfStatement[19461-19503]:IfStatement[19461-19503]"
  }, {
    "left" : "deleteGallery(userHandle);",
    "right" : "deleteGallery(userHandle);",
    "info" : "ExpressionStatement[19477-19503]:ExpressionStatement[19477-19503]"
  }, {
    "left" : "saveLockPassword(null, DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, isFallback, false,\n                userHandle);",
    "right" : "saveLockPassword(null, DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, isFallback, false,\n                userHandle);",
    "info" : "ExpressionStatement[19512-19630]:ExpressionStatement[19512-19630]"
  }, {
    "left" : "setLockPatternEnabled(false, userHandle);",
    "right" : "setLockPatternEnabled(false, userHandle);",
    "info" : "ExpressionStatement[19639-19680]:ExpressionStatement[19639-19680]"
  }, {
    "left" : "saveLockPattern(null, isFallback, false, userHandle);",
    "right" : "saveLockPattern(null, isFallback, false, userHandle);",
    "info" : "ExpressionStatement[19689-19742]:ExpressionStatement[19689-19742]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "right" : "setLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "info" : "ExpressionStatement[19751-19840]:ExpressionStatement[19751-19840]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                userHandle);",
    "right" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                userHandle);",
    "info" : "ExpressionStatement[19849-19964]:ExpressionStatement[19849-19964]"
  }, {
    "left" : "onAfterChangingPassword(userHandle);",
    "right" : "onAfterChangingPassword(userHandle);",
    "info" : "ExpressionStatement[19973-20009]:ExpressionStatement[19973-20009]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20251-20257]:Modifier[20251-20257]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20258-20262]:PrimitiveType[20258-20262]"
  }, {
    "left" : "setLockScreenDisabled",
    "right" : "setLockScreenDisabled",
    "info" : "SimpleName[20263-20284]:SimpleName[20263-20284]"
  }, {
    "left" : "boolean disable",
    "right" : "boolean disable",
    "info" : "SingleVariableDeclaration[20285-20300]:SingleVariableDeclaration[20285-20300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20302-20367]:Block[20302-20367]"
  }, {
    "left" : "setLong(DISABLE_LOCKSCREEN_KEY, disable ? 1 : 0);",
    "right" : "setLong(DISABLE_LOCKSCREEN_KEY, disable ? 1 : 0);",
    "info" : "ExpressionStatement[20312-20361]:ExpressionStatement[20312-20361]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20604-20610]:Modifier[20604-20610]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[20611-20618]:PrimitiveType[20611-20618]"
  }, {
    "left" : "isLockScreenDisabled",
    "right" : "isLockScreenDisabled",
    "info" : "SimpleName[20619-20639]:SimpleName[20619-20639]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20642-21213]:Block[20642-21213]"
  }, {
    "left" : "if (!isSecure() && getLong(DISABLE_LOCKSCREEN_KEY, 0) != 0)",
    "right" : "if (!isSecure() && getLong(DISABLE_LOCKSCREEN_KEY, 0) != 0)",
    "info" : "IfStatement[20652-21185]:IfStatement[20652-21185]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20712-21185]:Block[20712-21185]"
  }, {
    "left" : "final List<UserInfo> users = UserManager.get(mContext).getUsers(true);",
    "right" : "final List<UserInfo> users = UserManager.get(mContext).getUsers(true);",
    "info" : "VariableDeclarationStatement[20804-20874]:VariableDeclarationStatement[20804-20874]"
  }, {
    "left" : "final int userCount = users.size();",
    "right" : "final int userCount = users.size();",
    "info" : "VariableDeclarationStatement[20887-20922]:VariableDeclarationStatement[20887-20922]"
  }, {
    "left" : "int switchableUsers = 0;",
    "right" : "int switchableUsers = 0;",
    "info" : "VariableDeclarationStatement[20935-20959]:VariableDeclarationStatement[20935-20959]"
  }, {
    "left" : "for (int i = 0; i < userCount; i++)",
    "right" : "for (int i = 0; i < userCount; i++)",
    "info" : "ForStatement[20972-21135]:ForStatement[20972-21135]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21008-21135]:Block[21008-21135]"
  }, {
    "left" : "if (users.get(i).supportsSwitchTo())",
    "right" : "if (users.get(i).supportsSwitchTo())",
    "info" : "IfStatement[21026-21121]:IfStatement[21026-21121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21063-21121]:Block[21063-21121]"
  }, {
    "left" : "switchableUsers++;",
    "right" : "switchableUsers++;",
    "info" : "ExpressionStatement[21085-21103]:ExpressionStatement[21085-21103]"
  }, {
    "left" : "return switchableUsers < 2;",
    "right" : "return switchableUsers < 2;",
    "info" : "ReturnStatement[21148-21175]:ReturnStatement[21148-21175]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[21194-21207]:ReturnStatement[21194-21207]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21304-21310]:Modifier[21304-21310]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21311-21315]:PrimitiveType[21311-21315]"
  }, {
    "left" : "deleteTempGallery",
    "right" : "deleteTempGallery",
    "info" : "SimpleName[21316-21333]:SimpleName[21316-21333]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21336-21522]:Block[21336-21522]"
  }, {
    "left" : "Intent intent = new Intent().setAction(\"com.android.facelock.DELETE_GALLERY\");",
    "right" : "Intent intent = new Intent().setAction(\"com.android.facelock.DELETE_GALLERY\");",
    "info" : "VariableDeclarationStatement[21346-21424]:VariableDeclarationStatement[21346-21424]"
  }, {
    "left" : "intent.putExtra(\"deleteTempGallery\", true);",
    "right" : "intent.putExtra(\"deleteTempGallery\", true);",
    "info" : "ExpressionStatement[21433-21476]:ExpressionStatement[21433-21476]"
  }, {
    "left" : "mContext.sendBroadcast(intent);",
    "right" : "mContext.sendBroadcast(intent);",
    "info" : "ExpressionStatement[21485-21516]:ExpressionStatement[21485-21516]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21632-21636]:PrimitiveType[21632-21636]"
  }, {
    "left" : "deleteGallery",
    "right" : "deleteGallery",
    "info" : "SimpleName[21637-21650]:SimpleName[21637-21650]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[21651-21661]:SingleVariableDeclaration[21651-21661]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21663-21938]:Block[21663-21938]"
  }, {
    "left" : "if(usingBiometricWeak(userId))",
    "right" : "if(usingBiometricWeak(userId))",
    "info" : "IfStatement[21673-21932]:IfStatement[21673-21932]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21704-21932]:Block[21704-21932]"
  }, {
    "left" : "Intent intent = new Intent().setAction(\"com.android.facelock.DELETE_GALLERY\");",
    "right" : "Intent intent = new Intent().setAction(\"com.android.facelock.DELETE_GALLERY\");",
    "info" : "VariableDeclarationStatement[21718-21796]:VariableDeclarationStatement[21718-21796]"
  }, {
    "left" : "intent.putExtra(\"deleteGallery\", true);",
    "right" : "intent.putExtra(\"deleteGallery\", true);",
    "info" : "ExpressionStatement[21809-21848]:ExpressionStatement[21809-21848]"
  }, {
    "left" : "mContext.sendBroadcastAsUser(intent, new UserHandle(userId));",
    "right" : "mContext.sendBroadcastAsUser(intent, new UserHandle(userId));",
    "info" : "ExpressionStatement[21861-21922]:ExpressionStatement[21861-21922]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22035-22041]:Modifier[22035-22041]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22042-22046]:PrimitiveType[22042-22046]"
  }, {
    "left" : "saveLockPattern",
    "right" : "saveLockPattern",
    "info" : "SimpleName[22047-22062]:SimpleName[22047-22062]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[22063-22097]:SingleVariableDeclaration[22063-22097]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22099-22159]:Block[22099-22159]"
  }, {
    "left" : "this.saveLockPattern(pattern, false, false);",
    "right" : "this.saveLockPattern(pattern, false, false);",
    "info" : "ExpressionStatement[22109-22153]:ExpressionStatement[22109-22153]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22256-22262]:Modifier[22256-22262]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22263-22267]:PrimitiveType[22263-22267]"
  }, {
    "left" : "saveLockPattern",
    "right" : "saveLockPattern",
    "info" : "SimpleName[22268-22283]:SimpleName[22268-22283]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[22284-22318]:SingleVariableDeclaration[22284-22318]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[22320-22338]:SingleVariableDeclaration[22320-22338]"
  }, {
    "left" : "boolean isFingerprintFallback",
    "right" : "boolean isFingerprintFallback",
    "info" : "SingleVariableDeclaration[22352-22381]:SingleVariableDeclaration[22352-22381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22383-22509]:Block[22383-22509]"
  }, {
    "left" : "this.saveLockPattern(pattern, isFallback, isFingerprintFallback,\n                getCurrentOrCallingUserId());",
    "right" : "this.saveLockPattern(pattern, isFallback, isFingerprintFallback,\n                getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[22393-22503]:ExpressionStatement[22393-22503]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22741-22747]:Modifier[22741-22747]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22748-22752]:PrimitiveType[22748-22752]"
  }, {
    "left" : "saveLockPattern",
    "right" : "saveLockPattern",
    "info" : "SimpleName[22753-22768]:SimpleName[22753-22768]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[22769-22803]:SingleVariableDeclaration[22769-22803]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[22805-22823]:SingleVariableDeclaration[22805-22823]"
  }, {
    "left" : "boolean isFingerprintFallback",
    "right" : "boolean isFingerprintFallback",
    "info" : "SingleVariableDeclaration[22837-22866]:SingleVariableDeclaration[22837-22866]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[22868-22878]:SingleVariableDeclaration[22868-22878]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22880-25111]:Block[22880-25111]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[22890-25105]:TryStatement[22890-25105]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22894-25006]:Block[22894-25006]"
  }, {
    "left" : "getLockSettings().setLockPattern(patternToString(pattern), userId);",
    "right" : "getLockSettings().setLockPattern(patternToString(pattern), userId);",
    "info" : "ExpressionStatement[22908-22975]:ExpressionStatement[22908-22975]"
  }, {
    "left" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "right" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "info" : "VariableDeclarationStatement[22988-23039]:VariableDeclarationStatement[22988-23039]"
  }, {
    "left" : "if (pattern != null)",
    "right" : "if (pattern != null)",
    "info" : "IfStatement[23052-24951]:IfStatement[23052-24951]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23073-24783]:Block[23073-24783]"
  }, {
    "left" : "if (userId == UserHandle.USER_OWNER\n                        && LockPatternUtils.isDeviceEncryptionEnabled())",
    "right" : "if (userId == UserHandle.USER_OWNER\n                        && LockPatternUtils.isDeviceEncryptionEnabled())",
    "info" : "IfStatement[23149-23671]:IfStatement[23149-23671]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23258-23671]:Block[23258-23671]"
  }, {
    "left" : "final boolean required = isCredentialRequiredToDecrypt(true);",
    "right" : "final boolean required = isCredentialRequiredToDecrypt(true);",
    "info" : "VariableDeclarationStatement[23280-23341]:VariableDeclarationStatement[23280-23341]"
  }, {
    "left" : "if (!required)",
    "right" : "if (!required)",
    "info" : "IfStatement[23362-23653]:IfStatement[23362-23653]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23377-23451]:Block[23377-23451]"
  }, {
    "left" : "clearEncryptionPassword();",
    "right" : "clearEncryptionPassword();",
    "info" : "ExpressionStatement[23403-23429]:ExpressionStatement[23403-23429]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23457-23653]:Block[23457-23653]"
  }, {
    "left" : "String stringPattern = patternToString(pattern);",
    "right" : "String stringPattern = patternToString(pattern);",
    "info" : "VariableDeclarationStatement[23483-23531]:VariableDeclarationStatement[23483-23531]"
  }, {
    "left" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_PATTERN, stringPattern);",
    "right" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_PATTERN, stringPattern);",
    "info" : "ExpressionStatement[23556-23631]:ExpressionStatement[23556-23631]"
  }, {
    "left" : "setBoolean(PATTERN_EVER_CHOSEN_KEY, true, userId);",
    "right" : "setBoolean(PATTERN_EVER_CHOSEN_KEY, true, userId);",
    "info" : "ExpressionStatement[23689-23739]:ExpressionStatement[23689-23739]"
  }, {
    "left" : "if (!isFallback)",
    "right" : "if (!isFallback)",
    "info" : "IfStatement[23756-24769]:IfStatement[23756-24769]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23773-24133]:Block[23773-24133]"
  }, {
    "left" : "deleteGallery(userId);",
    "right" : "deleteGallery(userId);",
    "info" : "ExpressionStatement[23795-23817]:ExpressionStatement[23795-23817]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY,\n                            DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, userId);",
    "right" : "setLong(PASSWORD_TYPE_KEY,\n                            DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, userId);",
    "info" : "ExpressionStatement[23838-23949]:ExpressionStatement[23838-23949]"
  }, {
    "left" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_SOMETHING,\n                            pattern.size(), 0, 0, 0, 0, 0, 0, userId);",
    "right" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_SOMETHING,\n                            pattern.size(), 0, 0, 0, 0, 0, 0, userId);",
    "info" : "ExpressionStatement[23970-24115]:ExpressionStatement[23970-24115]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24139-24769]:Block[24139-24769]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                            DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, userId);",
    "right" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                            DevicePolicyManager.PASSWORD_QUALITY_SOMETHING, userId);",
    "info" : "ExpressionStatement[24161-24282]:ExpressionStatement[24161-24282]"
  }, {
    "left" : "if (!isFingerprintFallback)",
    "right" : "if (!isFingerprintFallback)",
    "info" : "IfStatement[24303-24751]:IfStatement[24303-24751]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24331-24751]:Block[24331-24751]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY,\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userId);",
    "right" : "setLong(PASSWORD_TYPE_KEY,\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userId);",
    "info" : "ExpressionStatement[24357-24477]:ExpressionStatement[24357-24477]"
  }, {
    "left" : "finishBiometricWeak(userId);",
    "right" : "finishBiometricWeak(userId);",
    "info" : "ExpressionStatement[24502-24530]:ExpressionStatement[24502-24530]"
  }, {
    "left" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                                0, 0, 0, 0, 0, 0, 0, userId);",
    "right" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                                0, 0, 0, 0, 0, 0, 0, userId);",
    "info" : "ExpressionStatement[24555-24729]:ExpressionStatement[24555-24729]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24789-24951]:Block[24789-24951]"
  }, {
    "left" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, 0, 0,\n                        0, 0, 0, 0, 0, userId);",
    "right" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, 0, 0,\n                        0, 0, 0, 0, 0, userId);",
    "info" : "ExpressionStatement[24807-24937]:ExpressionStatement[24807-24937]"
  }, {
    "left" : "onAfterChangingPassword(userId);",
    "right" : "onAfterChangingPassword(userId);",
    "info" : "ExpressionStatement[24964-24996]:ExpressionStatement[24964-24996]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25034-25105]:Block[25034-25105]"
  }, {
    "left" : "Log.e(TAG, \"Couldn't save lock pattern \" + re);",
    "right" : "Log.e(TAG, \"Couldn't save lock pattern \" + re);",
    "info" : "ExpressionStatement[25048-25095]:ExpressionStatement[25048-25095]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25117-25124]:Modifier[25117-25124]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[25125-25129]:PrimitiveType[25125-25129]"
  }, {
    "left" : "updateCryptoUserInfo",
    "right" : "updateCryptoUserInfo",
    "info" : "SimpleName[25130-25150]:SimpleName[25130-25150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25153-25898]:Block[25153-25898]"
  }, {
    "left" : "int userId = getCurrentOrCallingUserId();",
    "right" : "int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[25163-25204]:VariableDeclarationStatement[25163-25204]"
  }, {
    "left" : "if (userId != UserHandle.USER_OWNER)",
    "right" : "if (userId != UserHandle.USER_OWNER)",
    "info" : "IfStatement[25213-25281]:IfStatement[25213-25281]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25250-25281]:Block[25250-25281]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[25264-25271]:ReturnStatement[25264-25271]"
  }, {
    "left" : "final String ownerInfo = isOwnerInfoEnabled() ? getOwnerInfo(userId) : \"\";",
    "right" : "final String ownerInfo = isOwnerInfoEnabled() ? getOwnerInfo(userId) : \"\";",
    "info" : "VariableDeclarationStatement[25291-25365]:VariableDeclarationStatement[25291-25365]"
  }, {
    "left" : "IBinder service = ServiceManager.getService(\"mount\");",
    "right" : "IBinder service = ServiceManager.getService(\"mount\");",
    "info" : "VariableDeclarationStatement[25375-25428]:VariableDeclarationStatement[25375-25428]"
  }, {
    "left" : "if (service == null)",
    "right" : "if (service == null)",
    "info" : "IfStatement[25437-25573]:IfStatement[25437-25573]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25458-25573]:Block[25458-25573]"
  }, {
    "left" : "Log.e(TAG, \"Could not find the mount service to update the user info\");",
    "right" : "Log.e(TAG, \"Could not find the mount service to update the user info\");",
    "info" : "ExpressionStatement[25472-25543]:ExpressionStatement[25472-25543]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[25556-25563]:ReturnStatement[25556-25563]"
  }, {
    "left" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "right" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "info" : "VariableDeclarationStatement[25583-25652]:VariableDeclarationStatement[25583-25652]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[25661-25892]:TryStatement[25661-25892]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25665-25799]:Block[25665-25799]"
  }, {
    "left" : "Log.d(TAG, \"Setting owner info\");",
    "right" : "Log.d(TAG, \"Setting owner info\");",
    "info" : "ExpressionStatement[25679-25712]:ExpressionStatement[25679-25712]"
  }, {
    "left" : "mountService.setField(StorageManager.OWNER_INFO_KEY, ownerInfo);",
    "right" : "mountService.setField(StorageManager.OWNER_INFO_KEY, ownerInfo);",
    "info" : "ExpressionStatement[25725-25789]:ExpressionStatement[25725-25789]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25826-25892]:Block[25826-25892]"
  }, {
    "left" : "Log.e(TAG, \"Error changing user info\", e);",
    "right" : "Log.e(TAG, \"Error changing user info\", e);",
    "info" : "ExpressionStatement[25840-25882]:ExpressionStatement[25840-25882]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25904-25910]:Modifier[25904-25910]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[25911-25915]:PrimitiveType[25911-25915]"
  }, {
    "left" : "setOwnerInfo",
    "right" : "setOwnerInfo",
    "info" : "SimpleName[25916-25928]:SimpleName[25916-25928]"
  }, {
    "left" : "String info",
    "right" : "String info",
    "info" : "SingleVariableDeclaration[25929-25940]:SingleVariableDeclaration[25929-25940]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[25942-25952]:SingleVariableDeclaration[25942-25952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25954-26050]:Block[25954-26050]"
  }, {
    "left" : "setString(LOCK_SCREEN_OWNER_INFO, info, userId);",
    "right" : "setString(LOCK_SCREEN_OWNER_INFO, info, userId);",
    "info" : "ExpressionStatement[25964-26012]:ExpressionStatement[25964-26012]"
  }, {
    "left" : "updateCryptoUserInfo();",
    "right" : "updateCryptoUserInfo();",
    "info" : "ExpressionStatement[26021-26044]:ExpressionStatement[26021-26044]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26056-26062]:Modifier[26056-26062]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[26063-26067]:PrimitiveType[26063-26067]"
  }, {
    "left" : "setOwnerInfoEnabled",
    "right" : "setOwnerInfoEnabled",
    "info" : "SimpleName[26068-26087]:SimpleName[26068-26087]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[26088-26103]:SingleVariableDeclaration[26088-26103]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26105-26205]:Block[26105-26205]"
  }, {
    "left" : "setBoolean(LOCK_SCREEN_OWNER_INFO_ENABLED, enabled);",
    "right" : "setBoolean(LOCK_SCREEN_OWNER_INFO_ENABLED, enabled);",
    "info" : "ExpressionStatement[26115-26167]:ExpressionStatement[26115-26167]"
  }, {
    "left" : "updateCryptoUserInfo();",
    "right" : "updateCryptoUserInfo();",
    "info" : "ExpressionStatement[26176-26199]:ExpressionStatement[26176-26199]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26211-26217]:Modifier[26211-26217]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[26218-26224]:SimpleType[26218-26224]"
  }, {
    "left" : "getOwnerInfo",
    "right" : "getOwnerInfo",
    "info" : "SimpleName[26225-26237]:SimpleName[26225-26237]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[26238-26248]:SingleVariableDeclaration[26238-26248]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26250-26307]:Block[26250-26307]"
  }, {
    "left" : "return getString(LOCK_SCREEN_OWNER_INFO);",
    "right" : "return getString(LOCK_SCREEN_OWNER_INFO);",
    "info" : "ReturnStatement[26260-26301]:ReturnStatement[26260-26301]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26313-26319]:Modifier[26313-26319]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[26320-26327]:PrimitiveType[26320-26327]"
  }, {
    "left" : "isOwnerInfoEnabled",
    "right" : "isOwnerInfoEnabled",
    "info" : "SimpleName[26328-26346]:SimpleName[26328-26346]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26349-26422]:Block[26349-26422]"
  }, {
    "left" : "return getBoolean(LOCK_SCREEN_OWNER_INFO_ENABLED, false);",
    "right" : "return getBoolean(LOCK_SCREEN_OWNER_INFO_ENABLED, false);",
    "info" : "ReturnStatement[26359-26416]:ReturnStatement[26359-26416]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[26512-26518]:Modifier[26512-26518]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26519-26525]:Modifier[26519-26525]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[26526-26529]:PrimitiveType[26526-26529]"
  }, {
    "left" : "computePasswordQuality",
    "right" : "computePasswordQuality",
    "info" : "SimpleName[26530-26552]:SimpleName[26530-26552]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[26553-26568]:SingleVariableDeclaration[26553-26568]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26570-27439]:Block[26570-27439]"
  }, {
    "left" : "boolean hasDigit = false;",
    "right" : "boolean hasDigit = false;",
    "info" : "VariableDeclarationStatement[26580-26605]:VariableDeclarationStatement[26580-26605]"
  }, {
    "left" : "boolean hasNonDigit = false;",
    "right" : "boolean hasNonDigit = false;",
    "info" : "VariableDeclarationStatement[26614-26642]:VariableDeclarationStatement[26614-26642]"
  }, {
    "left" : "final int len = password.length();",
    "right" : "final int len = password.length();",
    "info" : "VariableDeclarationStatement[26651-26685]:VariableDeclarationStatement[26651-26685]"
  }, {
    "left" : "for (int i = 0; i < len; i++)",
    "right" : "for (int i = 0; i < len; i++)",
    "info" : "ForStatement[26694-26896]:ForStatement[26694-26896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26724-26896]:Block[26724-26896]"
  }, {
    "left" : "if (Character.isDigit(password.charAt(i)))",
    "right" : "if (Character.isDigit(password.charAt(i)))",
    "info" : "IfStatement[26738-26886]:IfStatement[26738-26886]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26781-26829]:Block[26781-26829]"
  }, {
    "left" : "hasDigit = true;",
    "right" : "hasDigit = true;",
    "info" : "ExpressionStatement[26799-26815]:ExpressionStatement[26799-26815]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26835-26886]:Block[26835-26886]"
  }, {
    "left" : "hasNonDigit = true;",
    "right" : "hasNonDigit = true;",
    "info" : "ExpressionStatement[26853-26872]:ExpressionStatement[26853-26872]"
  }, {
    "left" : "if (hasNonDigit && hasDigit)",
    "right" : "if (hasNonDigit && hasDigit)",
    "info" : "IfStatement[26906-27016]:IfStatement[26906-27016]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26935-27016]:Block[26935-27016]"
  }, {
    "left" : "return DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;",
    "right" : "return DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC;",
    "info" : "ReturnStatement[26949-27006]:ReturnStatement[26949-27006]"
  }, {
    "left" : "if (hasNonDigit)",
    "right" : "if (hasNonDigit)",
    "info" : "IfStatement[27025-27121]:IfStatement[27025-27121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27042-27121]:Block[27042-27121]"
  }, {
    "left" : "return DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;",
    "right" : "return DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC;",
    "info" : "ReturnStatement[27056-27111]:ReturnStatement[27056-27111]"
  }, {
    "left" : "if (hasDigit)",
    "right" : "if (hasDigit)",
    "info" : "IfStatement[27130-27368]:IfStatement[27130-27368]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27144-27368]:Block[27144-27368]"
  }, {
    "left" : "return maxLengthSequence(password) > MAX_ALLOWED_SEQUENCE\n                    ? DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                    : DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "right" : "return maxLengthSequence(password) > MAX_ALLOWED_SEQUENCE\n                    ? DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                    : DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "info" : "ReturnStatement[27158-27358]:ReturnStatement[27158-27358]"
  }, {
    "left" : "return DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED;",
    "right" : "return DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED;",
    "info" : "ReturnStatement[27377-27433]:ReturnStatement[27377-27433]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[27445-27452]:Modifier[27445-27452]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[27453-27459]:Modifier[27453-27459]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[27460-27463]:PrimitiveType[27460-27463]"
  }, {
    "left" : "categoryChar",
    "right" : "categoryChar",
    "info" : "SimpleName[27464-27476]:SimpleName[27464-27476]"
  }, {
    "left" : "char c",
    "right" : "char c",
    "info" : "SingleVariableDeclaration[27477-27483]:SingleVariableDeclaration[27477-27483]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27485-27642]:Block[27485-27642]"
  }, {
    "left" : "if ('a' <= c && c <= 'z')",
    "right" : "if ('a' <= c && c <= 'z')",
    "info" : "IfStatement[27495-27530]:IfStatement[27495-27530]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[27521-27530]:ReturnStatement[27521-27530]"
  }, {
    "left" : "if ('A' <= c && c <= 'Z')",
    "right" : "if ('A' <= c && c <= 'Z')",
    "info" : "IfStatement[27539-27574]:IfStatement[27539-27574]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[27565-27574]:ReturnStatement[27565-27574]"
  }, {
    "left" : "if ('0' <= c && c <= '9')",
    "right" : "if ('0' <= c && c <= '9')",
    "info" : "IfStatement[27583-27618]:IfStatement[27583-27618]"
  }, {
    "left" : "return 2;",
    "right" : "return 2;",
    "info" : "ReturnStatement[27609-27618]:ReturnStatement[27609-27618]"
  }, {
    "left" : "return 3;",
    "right" : "return 3;",
    "info" : "ReturnStatement[27627-27636]:ReturnStatement[27627-27636]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[27648-27655]:Modifier[27648-27655]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[27656-27662]:Modifier[27656-27662]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[27663-27666]:PrimitiveType[27663-27666]"
  }, {
    "left" : "maxDiffCategory",
    "right" : "maxDiffCategory",
    "info" : "SimpleName[27667-27682]:SimpleName[27667-27682]"
  }, {
    "left" : "int category",
    "right" : "int category",
    "info" : "SingleVariableDeclaration[27683-27695]:SingleVariableDeclaration[27683-27695]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27697-27819]:Block[27697-27819]"
  }, {
    "left" : "if (category == 0 || category == 1)",
    "right" : "if (category == 0 || category == 1)",
    "info" : "IfStatement[27707-27795]:IfStatement[27707-27795]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[27743-27752]:ReturnStatement[27743-27752]"
  }, {
    "left" : "if (category == 2)",
    "right" : "if (category == 2)",
    "info" : "IfStatement[27766-27795]:IfStatement[27766-27795]"
  }, {
    "left" : "return 10;",
    "right" : "return 10;",
    "info" : "ReturnStatement[27785-27795]:ReturnStatement[27785-27795]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[27804-27813]:ReturnStatement[27804-27813]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28498-28504]:Modifier[28498-28504]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[28505-28511]:Modifier[28505-28511]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[28512-28515]:PrimitiveType[28512-28515]"
  }, {
    "left" : "maxLengthSequence",
    "right" : "maxLengthSequence",
    "info" : "SimpleName[28516-28533]:SimpleName[28516-28533]"
  }, {
    "left" : "String string",
    "right" : "String string",
    "info" : "SingleVariableDeclaration[28534-28547]:SingleVariableDeclaration[28534-28547]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28549-30029]:Block[28549-30029]"
  }, {
    "left" : "if (string.length() == 0)",
    "right" : "if (string.length() == 0)",
    "info" : "IfStatement[28559-28594]:IfStatement[28559-28594]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[28585-28594]:ReturnStatement[28585-28594]"
  }, {
    "left" : "char previousChar = string.charAt(0);",
    "right" : "char previousChar = string.charAt(0);",
    "info" : "VariableDeclarationStatement[28603-28640]:VariableDeclarationStatement[28603-28640]"
  }, {
    "left" : "int category = categoryChar(previousChar);",
    "right" : "int category = categoryChar(previousChar);",
    "info" : "VariableDeclarationStatement[28649-28691]:VariableDeclarationStatement[28649-28691]"
  }, {
    "left" : "int diff = 0;",
    "right" : "int diff = 0;",
    "info" : "VariableDeclarationStatement[28735-28748]:VariableDeclarationStatement[28735-28748]"
  }, {
    "left" : "boolean hasDiff = false;",
    "right" : "boolean hasDiff = false;",
    "info" : "VariableDeclarationStatement[28805-28829]:VariableDeclarationStatement[28805-28829]"
  }, {
    "left" : "int maxLength = 0;",
    "right" : "int maxLength = 0;",
    "info" : "VariableDeclarationStatement[28881-28899]:VariableDeclarationStatement[28881-28899]"
  }, {
    "left" : "int startSequence = 0;",
    "right" : "int startSequence = 0;",
    "info" : "VariableDeclarationStatement[28953-28975]:VariableDeclarationStatement[28953-28975]"
  }, {
    "left" : "for (int current = 1; current < string.length(); current++)",
    "right" : "for (int current = 1; current < string.length(); current++)",
    "info" : "ForStatement[29021-29923]:ForStatement[29021-29923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29081-29923]:Block[29081-29923]"
  }, {
    "left" : "char currentChar = string.charAt(current);",
    "right" : "char currentChar = string.charAt(current);",
    "info" : "VariableDeclarationStatement[29095-29137]:VariableDeclarationStatement[29095-29137]"
  }, {
    "left" : "int categoryCurrent = categoryChar(currentChar);",
    "right" : "int categoryCurrent = categoryChar(currentChar);",
    "info" : "VariableDeclarationStatement[29150-29198]:VariableDeclarationStatement[29150-29198]"
  }, {
    "left" : "int currentDiff = (int) currentChar - (int) previousChar;",
    "right" : "int currentDiff = (int) currentChar - (int) previousChar;",
    "info" : "VariableDeclarationStatement[29211-29268]:VariableDeclarationStatement[29211-29268]"
  }, {
    "left" : "if (categoryCurrent != category || Math.abs(currentDiff) > maxDiffCategory(category))",
    "right" : "if (categoryCurrent != category || Math.abs(currentDiff) > maxDiffCategory(category))",
    "info" : "IfStatement[29281-29873]:IfStatement[29281-29873]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29367-29574]:Block[29367-29574]"
  }, {
    "left" : "maxLength = Math.max(maxLength, current - startSequence);",
    "right" : "maxLength = Math.max(maxLength, current - startSequence);",
    "info" : "ExpressionStatement[29385-29442]:ExpressionStatement[29385-29442]"
  }, {
    "left" : "startSequence = current;",
    "right" : "startSequence = current;",
    "info" : "ExpressionStatement[29459-29483]:ExpressionStatement[29459-29483]"
  }, {
    "left" : "hasDiff = false;",
    "right" : "hasDiff = false;",
    "info" : "ExpressionStatement[29500-29516]:ExpressionStatement[29500-29516]"
  }, {
    "left" : "category = categoryCurrent;",
    "right" : "category = categoryCurrent;",
    "info" : "ExpressionStatement[29533-29560]:ExpressionStatement[29533-29560]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29592-29873]:Block[29592-29873]"
  }, {
    "left" : "if(hasDiff && currentDiff != diff)",
    "right" : "if(hasDiff && currentDiff != diff)",
    "info" : "IfStatement[29610-29791]:IfStatement[29610-29791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29645-29791]:Block[29645-29791]"
  }, {
    "left" : "maxLength = Math.max(maxLength, current - startSequence);",
    "right" : "maxLength = Math.max(maxLength, current - startSequence);",
    "info" : "ExpressionStatement[29667-29724]:ExpressionStatement[29667-29724]"
  }, {
    "left" : "startSequence = current - 1;",
    "right" : "startSequence = current - 1;",
    "info" : "ExpressionStatement[29745-29773]:ExpressionStatement[29745-29773]"
  }, {
    "left" : "diff = currentDiff;",
    "right" : "diff = currentDiff;",
    "info" : "ExpressionStatement[29808-29827]:ExpressionStatement[29808-29827]"
  }, {
    "left" : "hasDiff = true;",
    "right" : "hasDiff = true;",
    "info" : "ExpressionStatement[29844-29859]:ExpressionStatement[29844-29859]"
  }, {
    "left" : "previousChar = currentChar;",
    "right" : "previousChar = currentChar;",
    "info" : "ExpressionStatement[29886-29913]:ExpressionStatement[29886-29913]"
  }, {
    "left" : "maxLength = Math.max(maxLength, string.length() - startSequence);",
    "right" : "maxLength = Math.max(maxLength, string.length() - startSequence);",
    "info" : "ExpressionStatement[29932-29997]:ExpressionStatement[29932-29997]"
  }, {
    "left" : "return maxLength;",
    "right" : "return maxLength;",
    "info" : "ReturnStatement[30006-30023]:ReturnStatement[30006-30023]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[30095-30102]:Modifier[30095-30102]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30103-30107]:PrimitiveType[30103-30107]"
  }, {
    "left" : "updateEncryptionPassword",
    "right" : "updateEncryptionPassword",
    "info" : "SimpleName[30108-30132]:SimpleName[30108-30132]"
  }, {
    "left" : "final int type",
    "right" : "final int type",
    "info" : "SingleVariableDeclaration[30133-30147]:SingleVariableDeclaration[30133-30147]"
  }, {
    "left" : "final String password",
    "right" : "final String password",
    "info" : "SingleVariableDeclaration[30149-30170]:SingleVariableDeclaration[30149-30170]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30172-30986]:Block[30172-30986]"
  }, {
    "left" : "if (!isDeviceEncryptionEnabled())",
    "right" : "if (!isDeviceEncryptionEnabled())",
    "info" : "IfStatement[30182-30247]:IfStatement[30182-30247]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30216-30247]:Block[30216-30247]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[30230-30237]:ReturnStatement[30230-30237]"
  }, {
    "left" : "final IBinder service = ServiceManager.getService(\"mount\");",
    "right" : "final IBinder service = ServiceManager.getService(\"mount\");",
    "info" : "VariableDeclarationStatement[30256-30315]:VariableDeclarationStatement[30256-30315]"
  }, {
    "left" : "if (service == null)",
    "right" : "if (service == null)",
    "info" : "IfStatement[30324-30470]:IfStatement[30324-30470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30345-30470]:Block[30345-30470]"
  }, {
    "left" : "Log.e(TAG, \"Could not find the mount service to update the encryption password\");",
    "right" : "Log.e(TAG, \"Could not find the mount service to update the encryption password\");",
    "info" : "ExpressionStatement[30359-30440]:ExpressionStatement[30359-30440]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[30453-30460]:ReturnStatement[30453-30460]"
  }, {
    "left" : "new AsyncTask<Void, Void, Void>() {\n            @Override\n            protected Void doInBackground(Void... dummy) {\n                IMountService mountService = IMountService.Stub.asInterface(service);\n                try {\n                    mountService.changeEncryptionPassword(type, password);\n                } catch (RemoteException e) {\n                    Log.e(TAG, \"Error changing encryption password\", e);\n                }\n                return null;\n            }\n        }.execute();",
    "right" : "new AsyncTask<Void, Void, Void>() {\n            @Override\n            protected Void doInBackground(Void... dummy) {\n                IMountService mountService = IMountService.Stub.asInterface(service);\n                try {\n                    mountService.changeEncryptionPassword(type, password);\n                } catch (RemoteException e) {\n                    Log.e(TAG, \"Error changing encryption password\", e);\n                }\n                return null;\n            }\n        }.execute();",
    "info" : "ExpressionStatement[30480-30980]:ExpressionStatement[30480-30980]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[30528-30537]:MarkerAnnotation[30528-30537]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[30550-30559]:Modifier[30550-30559]"
  }, {
    "left" : "Void",
    "right" : "Void",
    "info" : "SimpleType[30560-30564]:SimpleType[30560-30564]"
  }, {
    "left" : "doInBackground",
    "right" : "doInBackground",
    "info" : "SimpleName[30565-30579]:SimpleName[30565-30579]"
  }, {
    "left" : "Void... dummy",
    "right" : "Void... dummy",
    "info" : "SingleVariableDeclaration[30580-30593]:SingleVariableDeclaration[30580-30593]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30595-30959]:Block[30595-30959]"
  }, {
    "left" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "right" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "info" : "VariableDeclarationStatement[30613-30682]:VariableDeclarationStatement[30613-30682]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[30699-30916]:TryStatement[30699-30916]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30703-30797]:Block[30703-30797]"
  }, {
    "left" : "mountService.changeEncryptionPassword(type, password);",
    "right" : "mountService.changeEncryptionPassword(type, password);",
    "info" : "ExpressionStatement[30725-30779]:ExpressionStatement[30725-30779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30824-30916]:Block[30824-30916]"
  }, {
    "left" : "Log.e(TAG, \"Error changing encryption password\", e);",
    "right" : "Log.e(TAG, \"Error changing encryption password\", e);",
    "info" : "ExpressionStatement[30846-30898]:ExpressionStatement[30846-30898]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[30933-30945]:ReturnStatement[30933-30945]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31318-31324]:Modifier[31318-31324]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[31325-31329]:PrimitiveType[31325-31329]"
  }, {
    "left" : "saveLockPassword",
    "right" : "saveLockPassword",
    "info" : "SimpleName[31330-31346]:SimpleName[31330-31346]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[31347-31362]:SingleVariableDeclaration[31347-31362]"
  }, {
    "left" : "int quality",
    "right" : "int quality",
    "info" : "SingleVariableDeclaration[31364-31375]:SingleVariableDeclaration[31364-31375]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31377-31441]:Block[31377-31441]"
  }, {
    "left" : "this.saveLockPassword(password, quality, false);",
    "right" : "this.saveLockPassword(password, quality, false);",
    "info" : "ExpressionStatement[31387-31435]:ExpressionStatement[31387-31435]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31848-31854]:Modifier[31848-31854]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[31855-31859]:PrimitiveType[31855-31859]"
  }, {
    "left" : "saveLockPassword",
    "right" : "saveLockPassword",
    "info" : "SimpleName[31860-31876]:SimpleName[31860-31876]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[31877-31892]:SingleVariableDeclaration[31877-31892]"
  }, {
    "left" : "int quality",
    "right" : "int quality",
    "info" : "SingleVariableDeclaration[31894-31905]:SingleVariableDeclaration[31894-31905]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[31907-31925]:SingleVariableDeclaration[31907-31925]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31927-31998]:Block[31927-31998]"
  }, {
    "left" : "saveLockPassword(password, quality, isFallback, false);",
    "right" : "saveLockPassword(password, quality, isFallback, false);",
    "info" : "ExpressionStatement[31937-31992]:ExpressionStatement[31937-31992]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32489-32495]:Modifier[32489-32495]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[32496-32500]:PrimitiveType[32496-32500]"
  }, {
    "left" : "saveLockPassword",
    "right" : "saveLockPassword",
    "info" : "SimpleName[32501-32517]:SimpleName[32501-32517]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[32518-32533]:SingleVariableDeclaration[32518-32533]"
  }, {
    "left" : "int quality",
    "right" : "int quality",
    "info" : "SingleVariableDeclaration[32535-32546]:SingleVariableDeclaration[32535-32546]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[32548-32566]:SingleVariableDeclaration[32548-32566]"
  }, {
    "left" : "boolean isFingerprintFallback",
    "right" : "boolean isFingerprintFallback",
    "info" : "SingleVariableDeclaration[32601-32630]:SingleVariableDeclaration[32601-32630]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32632-32764]:Block[32632-32764]"
  }, {
    "left" : "saveLockPassword(password, quality, isFallback, isFingerprintFallback,\n                getCurrentOrCallingUserId());",
    "right" : "saveLockPassword(password, quality, isFallback, isFingerprintFallback,\n                getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[32642-32758]:ExpressionStatement[32642-32758]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33246-33252]:Modifier[33246-33252]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[33253-33257]:PrimitiveType[33253-33257]"
  }, {
    "left" : "saveLockPassword",
    "right" : "saveLockPassword",
    "info" : "SimpleName[33258-33274]:SimpleName[33258-33274]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[33275-33290]:SingleVariableDeclaration[33275-33290]"
  }, {
    "left" : "int quality",
    "right" : "int quality",
    "info" : "SingleVariableDeclaration[33292-33303]:SingleVariableDeclaration[33292-33303]"
  }, {
    "left" : "boolean isFallback",
    "right" : "boolean isFallback",
    "info" : "SingleVariableDeclaration[33305-33323]:SingleVariableDeclaration[33305-33323]"
  }, {
    "left" : "boolean isFingerprintPassword",
    "right" : "boolean isFingerprintPassword",
    "info" : "SingleVariableDeclaration[33325-33354]:SingleVariableDeclaration[33325-33354]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[33356-33370]:SingleVariableDeclaration[33356-33370]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33372-38998]:Block[33372-38998]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[33382-38992]:TryStatement[33382-38992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33386-38863]:Block[33386-38863]"
  }, {
    "left" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "right" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "info" : "VariableDeclarationStatement[33400-33451]:VariableDeclarationStatement[33400-33451]"
  }, {
    "left" : "if (!TextUtils.isEmpty(password))",
    "right" : "if (!TextUtils.isEmpty(password))",
    "info" : "IfStatement[33464-38804]:IfStatement[33464-38804]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33498-38276]:Block[33498-38276]"
  }, {
    "left" : "getLockSettings().setLockPassword(password, userHandle);",
    "right" : "getLockSettings().setLockPassword(password, userHandle);",
    "info" : "ExpressionStatement[33516-33572]:ExpressionStatement[33516-33572]"
  }, {
    "left" : "int computedQuality = computePasswordQuality(password);",
    "right" : "int computedQuality = computePasswordQuality(password);",
    "info" : "VariableDeclarationStatement[33589-33644]:VariableDeclarationStatement[33589-33644]"
  }, {
    "left" : "if (userHandle == UserHandle.USER_OWNER\n                        && LockPatternUtils.isDeviceEncryptionEnabled())",
    "right" : "if (userHandle == UserHandle.USER_OWNER\n                        && LockPatternUtils.isDeviceEncryptionEnabled())",
    "info" : "IfStatement[33720-34540]:IfStatement[33720-34540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33833-34540]:Block[33833-34540]"
  }, {
    "left" : "if (!isCredentialRequiredToDecrypt(true))",
    "right" : "if (!isCredentialRequiredToDecrypt(true))",
    "info" : "IfStatement[33855-34522]:IfStatement[33855-34522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33897-33971]:Block[33897-33971]"
  }, {
    "left" : "clearEncryptionPassword();",
    "right" : "clearEncryptionPassword();",
    "info" : "ExpressionStatement[33923-33949]:ExpressionStatement[33923-33949]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33977-34522]:Block[33977-34522]"
  }, {
    "left" : "boolean numeric = computedQuality\n                                == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;",
    "right" : "boolean numeric = computedQuality\n                                == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC;",
    "info" : "VariableDeclarationStatement[34003-34117]:VariableDeclarationStatement[34003-34117]"
  }, {
    "left" : "boolean numericComplex = computedQuality\n                                == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "right" : "boolean numericComplex = computedQuality\n                                == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX;",
    "info" : "VariableDeclarationStatement[34142-34271]:VariableDeclarationStatement[34142-34271]"
  }, {
    "left" : "int type = numeric || numericComplex ? StorageManager.CRYPT_TYPE_PIN\n                                : StorageManager.CRYPT_TYPE_PASSWORD;",
    "right" : "int type = numeric || numericComplex ? StorageManager.CRYPT_TYPE_PIN\n                                : StorageManager.CRYPT_TYPE_PASSWORD;",
    "info" : "VariableDeclarationStatement[34296-34434]:VariableDeclarationStatement[34296-34434]"
  }, {
    "left" : "updateEncryptionPassword(type, password);",
    "right" : "updateEncryptionPassword(type, password);",
    "info" : "ExpressionStatement[34459-34500]:ExpressionStatement[34459-34500]"
  }, {
    "left" : "if (!isFallback)",
    "right" : "if (!isFallback)",
    "info" : "IfStatement[34558-37102]:IfStatement[34558-37102]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34575-36389]:Block[34575-36389]"
  }, {
    "left" : "deleteGallery(userHandle);",
    "right" : "deleteGallery(userHandle);",
    "info" : "ExpressionStatement[34597-34623]:ExpressionStatement[34597-34623]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY, Math.max(quality, computedQuality), userHandle);",
    "right" : "setLong(PASSWORD_TYPE_KEY, Math.max(quality, computedQuality), userHandle);",
    "info" : "ExpressionStatement[34644-34719]:ExpressionStatement[34644-34719]"
  }, {
    "left" : "if (computedQuality != DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED)",
    "right" : "if (computedQuality != DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED)",
    "info" : "IfStatement[34740-36371]:IfStatement[34740-36371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34813-36085]:Block[34813-36085]"
  }, {
    "left" : "int letters = 0;",
    "right" : "int letters = 0;",
    "info" : "VariableDeclarationStatement[34839-34855]:VariableDeclarationStatement[34839-34855]"
  }, {
    "left" : "int uppercase = 0;",
    "right" : "int uppercase = 0;",
    "info" : "VariableDeclarationStatement[34880-34898]:VariableDeclarationStatement[34880-34898]"
  }, {
    "left" : "int lowercase = 0;",
    "right" : "int lowercase = 0;",
    "info" : "VariableDeclarationStatement[34923-34941]:VariableDeclarationStatement[34923-34941]"
  }, {
    "left" : "int numbers = 0;",
    "right" : "int numbers = 0;",
    "info" : "VariableDeclarationStatement[34966-34982]:VariableDeclarationStatement[34966-34982]"
  }, {
    "left" : "int symbols = 0;",
    "right" : "int symbols = 0;",
    "info" : "VariableDeclarationStatement[35007-35023]:VariableDeclarationStatement[35007-35023]"
  }, {
    "left" : "int nonletter = 0;",
    "right" : "int nonletter = 0;",
    "info" : "VariableDeclarationStatement[35048-35066]:VariableDeclarationStatement[35048-35066]"
  }, {
    "left" : "for (int i = 0; i < password.length(); i++)",
    "right" : "for (int i = 0; i < password.length(); i++)",
    "info" : "ForStatement[35091-35820]:ForStatement[35091-35820]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35135-35820]:Block[35135-35820]"
  }, {
    "left" : "char c = password.charAt(i);",
    "right" : "char c = password.charAt(i);",
    "info" : "VariableDeclarationStatement[35165-35193]:VariableDeclarationStatement[35165-35193]"
  }, {
    "left" : "if (c >= 'A' && c <= 'Z')",
    "right" : "if (c >= 'A' && c <= 'Z')",
    "info" : "IfStatement[35222-35794]:IfStatement[35222-35794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35248-35367]:Block[35248-35367]"
  }, {
    "left" : "letters++;",
    "right" : "letters++;",
    "info" : "ExpressionStatement[35282-35292]:ExpressionStatement[35282-35292]"
  }, {
    "left" : "uppercase++;",
    "right" : "uppercase++;",
    "info" : "ExpressionStatement[35325-35337]:ExpressionStatement[35325-35337]"
  }, {
    "left" : "if (c >= 'a' && c <= 'z')",
    "right" : "if (c >= 'a' && c <= 'z')",
    "info" : "IfStatement[35373-35794]:IfStatement[35373-35794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35399-35518]:Block[35399-35518]"
  }, {
    "left" : "letters++;",
    "right" : "letters++;",
    "info" : "ExpressionStatement[35433-35443]:ExpressionStatement[35433-35443]"
  }, {
    "left" : "lowercase++;",
    "right" : "lowercase++;",
    "info" : "ExpressionStatement[35476-35488]:ExpressionStatement[35476-35488]"
  }, {
    "left" : "if (c >= '0' && c <= '9')",
    "right" : "if (c >= '0' && c <= '9')",
    "info" : "IfStatement[35524-35794]:IfStatement[35524-35794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35550-35669]:Block[35550-35669]"
  }, {
    "left" : "numbers++;",
    "right" : "numbers++;",
    "info" : "ExpressionStatement[35584-35594]:ExpressionStatement[35584-35594]"
  }, {
    "left" : "nonletter++;",
    "right" : "nonletter++;",
    "info" : "ExpressionStatement[35627-35639]:ExpressionStatement[35627-35639]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35675-35794]:Block[35675-35794]"
  }, {
    "left" : "symbols++;",
    "right" : "symbols++;",
    "info" : "ExpressionStatement[35709-35719]:ExpressionStatement[35709-35719]"
  }, {
    "left" : "nonletter++;",
    "right" : "nonletter++;",
    "info" : "ExpressionStatement[35752-35764]:ExpressionStatement[35752-35764]"
  }, {
    "left" : "dpm.setActivePasswordState(Math.max(quality, computedQuality),\n                                password.length(), letters, uppercase, lowercase,\n                                numbers, symbols, nonletter, userHandle);",
    "right" : "dpm.setActivePasswordState(Math.max(quality, computedQuality),\n                                password.length(), letters, uppercase, lowercase,\n                                numbers, symbols, nonletter, userHandle);",
    "info" : "ExpressionStatement[35845-36063]:ExpressionStatement[35845-36063]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36091-36371]:Block[36091-36371]"
  }, {
    "left" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                                0, 0, 0, 0, 0, 0, 0, userHandle);",
    "right" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                                0, 0, 0, 0, 0, 0, 0, userHandle);",
    "info" : "ExpressionStatement[36174-36349]:ExpressionStatement[36174-36349]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36395-37102]:Block[36395-37102]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY, Math.max(quality, computedQuality),\n                            userHandle);",
    "right" : "setLong(PASSWORD_TYPE_ALTERNATE_KEY, Math.max(quality, computedQuality),\n                            userHandle);",
    "info" : "ExpressionStatement[36417-36530]:ExpressionStatement[36417-36530]"
  }, {
    "left" : "if (!isFingerprintPassword)",
    "right" : "if (!isFingerprintPassword)",
    "info" : "IfStatement[36551-37084]:IfStatement[36551-37084]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36579-37084]:Block[36579-37084]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY,\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userHandle);",
    "right" : "setLong(PASSWORD_TYPE_KEY,\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userHandle);",
    "info" : "ExpressionStatement[36678-36802]:ExpressionStatement[36678-36802]"
  }, {
    "left" : "finishBiometricWeak(userHandle);",
    "right" : "finishBiometricWeak(userHandle);",
    "info" : "ExpressionStatement[36827-36859]:ExpressionStatement[36827-36859]"
  }, {
    "left" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                                0, 0, 0, 0, 0, 0, 0, userHandle);",
    "right" : "dpm.setActivePasswordState(\n                                DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                                0, 0, 0, 0, 0, 0, 0, userHandle);",
    "info" : "ExpressionStatement[36884-37062]:ExpressionStatement[36884-37062]"
  }, {
    "left" : "String passwordHistory = getString(PASSWORD_HISTORY_KEY, userHandle);",
    "right" : "String passwordHistory = getString(PASSWORD_HISTORY_KEY, userHandle);",
    "info" : "VariableDeclarationStatement[37284-37353]:VariableDeclarationStatement[37284-37353]"
  }, {
    "left" : "if (passwordHistory == null)",
    "right" : "if (passwordHistory == null)",
    "info" : "IfStatement[37370-37460]:IfStatement[37370-37460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37399-37460]:Block[37399-37460]"
  }, {
    "left" : "passwordHistory = \"\";",
    "right" : "passwordHistory = \"\";",
    "info" : "ExpressionStatement[37421-37442]:ExpressionStatement[37421-37442]"
  }, {
    "left" : "int passwordHistoryLength = getRequestedPasswordHistoryLength();",
    "right" : "int passwordHistoryLength = getRequestedPasswordHistoryLength();",
    "info" : "VariableDeclarationStatement[37477-37541]:VariableDeclarationStatement[37477-37541]"
  }, {
    "left" : "if (passwordHistoryLength == 0)",
    "right" : "if (passwordHistoryLength == 0)",
    "info" : "IfStatement[37558-38184]:IfStatement[37558-38184]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37590-37651]:Block[37590-37651]"
  }, {
    "left" : "passwordHistory = \"\";",
    "right" : "passwordHistory = \"\";",
    "info" : "ExpressionStatement[37612-37633]:ExpressionStatement[37612-37633]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37657-38184]:Block[37657-38184]"
  }, {
    "left" : "byte[] hash = passwordToHash(password, userHandle);",
    "right" : "byte[] hash = passwordToHash(password, userHandle);",
    "info" : "VariableDeclarationStatement[37679-37730]:VariableDeclarationStatement[37679-37730]"
  }, {
    "left" : "passwordHistory = new String(hash) + \",\" + passwordHistory;",
    "right" : "passwordHistory = new String(hash) + \",\" + passwordHistory;",
    "info" : "ExpressionStatement[37751-37810]:ExpressionStatement[37751-37810]"
  }, {
    "left" : "passwordHistory = passwordHistory.substring(0, Math.min(hash.length\n                            * passwordHistoryLength + passwordHistoryLength - 1, passwordHistory\n                            .length()));",
    "right" : "passwordHistory = passwordHistory.substring(0, Math.min(hash.length\n                            * passwordHistoryLength + passwordHistoryLength - 1, passwordHistory\n                            .length()));",
    "info" : "ExpressionStatement[37961-38166]:ExpressionStatement[37961-38166]"
  }, {
    "left" : "setString(PASSWORD_HISTORY_KEY, passwordHistory, userHandle);",
    "right" : "setString(PASSWORD_HISTORY_KEY, passwordHistory, userHandle);",
    "info" : "ExpressionStatement[38201-38262]:ExpressionStatement[38201-38262]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38282-38804]:Block[38282-38804]"
  }, {
    "left" : "getLockSettings().setLockPassword(null, userHandle);",
    "right" : "getLockSettings().setLockPassword(null, userHandle);",
    "info" : "ExpressionStatement[38334-38386]:ExpressionStatement[38334-38386]"
  }, {
    "left" : "if (userHandle == UserHandle.USER_OWNER)",
    "right" : "if (userHandle == UserHandle.USER_OWNER)",
    "info" : "IfStatement[38403-38613]:IfStatement[38403-38613]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38444-38613]:Block[38444-38613]"
  }, {
    "left" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_DEFAULT, null);",
    "right" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_DEFAULT, null);",
    "info" : "ExpressionStatement[38529-38595]:ExpressionStatement[38529-38595]"
  }, {
    "left" : "dpm.setActivePasswordState(\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, 0, 0, 0, 0, 0, 0, 0,\n                        userHandle);",
    "right" : "dpm.setActivePasswordState(\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, 0, 0, 0, 0, 0, 0, 0,\n                        userHandle);",
    "info" : "ExpressionStatement[38631-38790]:ExpressionStatement[38631-38790]"
  }, {
    "left" : "onAfterChangingPassword(userHandle);",
    "right" : "onAfterChangingPassword(userHandle);",
    "info" : "ExpressionStatement[38817-38853]:ExpressionStatement[38817-38853]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38891-38992]:Block[38891-38992]"
  }, {
    "left" : "Log.e(TAG, \"Unable to save lock password \" + re);",
    "right" : "Log.e(TAG, \"Unable to save lock password \" + re);",
    "info" : "ExpressionStatement[38933-38982]:ExpressionStatement[38933-38982]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39120-39126]:Modifier[39120-39126]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[39127-39133]:Modifier[39127-39133]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[39134-39141]:PrimitiveType[39134-39141]"
  }, {
    "left" : "isDeviceEncrypted",
    "right" : "isDeviceEncrypted",
    "info" : "SimpleName[39142-39159]:SimpleName[39142-39159]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39162-39621]:Block[39162-39621]"
  }, {
    "left" : "IMountService mountService = IMountService.Stub.asInterface(\n                ServiceManager.getService(\"mount\"));",
    "right" : "IMountService mountService = IMountService.Stub.asInterface(\n                ServiceManager.getService(\"mount\"));",
    "info" : "VariableDeclarationStatement[39172-39285]:VariableDeclarationStatement[39172-39285]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[39294-39594]:TryStatement[39294-39594]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39298-39493]:Block[39298-39493]"
  }, {
    "left" : "return mountService.getEncryptionState() != IMountService.ENCRYPTION_STATE_NONE\n                    && mountService.getPasswordType() != StorageManager.CRYPT_TYPE_DEFAULT;",
    "right" : "return mountService.getEncryptionState() != IMountService.ENCRYPTION_STATE_NONE\n                    && mountService.getPasswordType() != StorageManager.CRYPT_TYPE_DEFAULT;",
    "info" : "ReturnStatement[39312-39483]:ReturnStatement[39312-39483]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39521-39594]:Block[39521-39594]"
  }, {
    "left" : "Log.e(TAG, \"Error getting encryption state\", re);",
    "right" : "Log.e(TAG, \"Error getting encryption state\", re);",
    "info" : "ExpressionStatement[39535-39584]:ExpressionStatement[39535-39584]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[39603-39615]:ReturnStatement[39603-39615]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39911-39917]:Modifier[39911-39917]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[39918-39924]:Modifier[39918-39924]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[39925-39932]:PrimitiveType[39925-39932]"
  }, {
    "left" : "isDeviceEncryptionEnabled",
    "right" : "isDeviceEncryptionEnabled",
    "info" : "SimpleName[39933-39958]:SimpleName[39933-39958]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39961-40107]:Block[39961-40107]"
  }, {
    "left" : "final String status = SystemProperties.get(\"ro.crypto.state\", \"unsupported\");",
    "right" : "final String status = SystemProperties.get(\"ro.crypto.state\", \"unsupported\");",
    "info" : "VariableDeclarationStatement[39971-40048]:VariableDeclarationStatement[39971-40048]"
  }, {
    "left" : "return \"encrypted\".equalsIgnoreCase(status);",
    "right" : "return \"encrypted\".equalsIgnoreCase(status);",
    "info" : "ReturnStatement[40057-40101]:ReturnStatement[40057-40101]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40168-40174]:Modifier[40168-40174]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[40175-40179]:PrimitiveType[40175-40179]"
  }, {
    "left" : "clearEncryptionPassword",
    "right" : "clearEncryptionPassword",
    "info" : "SimpleName[40180-40203]:SimpleName[40180-40203]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40206-40288]:Block[40206-40288]"
  }, {
    "left" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_DEFAULT, null);",
    "right" : "updateEncryptionPassword(StorageManager.CRYPT_TYPE_DEFAULT, null);",
    "info" : "ExpressionStatement[40216-40282]:ExpressionStatement[40216-40282]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40484-40490]:Modifier[40484-40490]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[40491-40494]:PrimitiveType[40491-40494]"
  }, {
    "left" : "getKeyguardStoredPasswordQuality",
    "right" : "getKeyguardStoredPasswordQuality",
    "info" : "SimpleName[40495-40527]:SimpleName[40495-40527]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40530-40615]:Block[40530-40615]"
  }, {
    "left" : "return getKeyguardStoredPasswordQuality(getCurrentOrCallingUserId());",
    "right" : "return getKeyguardStoredPasswordQuality(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[40540-40609]:ReturnStatement[40540-40609]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40826-40832]:Modifier[40826-40832]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[40833-40836]:PrimitiveType[40833-40836]"
  }, {
    "left" : "getKeyguardStoredPasswordQuality",
    "right" : "getKeyguardStoredPasswordQuality",
    "info" : "SimpleName[40837-40869]:SimpleName[40837-40869]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[40870-40884]:SingleVariableDeclaration[40870-40884]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40886-41443]:Block[40886-41443]"
  }, {
    "left" : "int quality = (int) getLong(PASSWORD_TYPE_KEY,\n                DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "right" : "int quality = (int) getLong(PASSWORD_TYPE_KEY,\n                DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "info" : "VariableDeclarationStatement[40896-41021]:VariableDeclarationStatement[40896-41021]"
  }, {
    "left" : "if (quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK)",
    "right" : "if (quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK)",
    "info" : "IfStatement[41182-41413]:IfStatement[41182-41413]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41250-41413]:Block[41250-41413]"
  }, {
    "left" : "quality = (int) getLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "right" : "quality = (int) getLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userHandle);",
    "info" : "ExpressionStatement[41264-41403]:ExpressionStatement[41264-41403]"
  }, {
    "left" : "return quality;",
    "right" : "return quality;",
    "info" : "ReturnStatement[41422-41437]:ReturnStatement[41422-41437]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41535-41541]:Modifier[41535-41541]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[41542-41549]:PrimitiveType[41542-41549]"
  }, {
    "left" : "usingBiometricWeak",
    "right" : "usingBiometricWeak",
    "info" : "SimpleName[41550-41568]:SimpleName[41550-41568]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41571-41642]:Block[41571-41642]"
  }, {
    "left" : "return usingBiometricWeak(getCurrentOrCallingUserId());",
    "right" : "return usingBiometricWeak(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[41581-41636]:ReturnStatement[41581-41636]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41734-41740]:Modifier[41734-41740]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[41741-41748]:PrimitiveType[41741-41748]"
  }, {
    "left" : "usingBiometricWeak",
    "right" : "usingBiometricWeak",
    "info" : "SimpleName[41749-41767]:SimpleName[41749-41767]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[41768-41778]:SingleVariableDeclaration[41768-41778]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41780-41997]:Block[41780-41997]"
  }, {
    "left" : "int quality = (int) getLong(\n                PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId);",
    "right" : "int quality = (int) getLong(\n                PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId);",
    "info" : "VariableDeclarationStatement[41790-41912]:VariableDeclarationStatement[41790-41912]"
  }, {
    "left" : "return quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;",
    "right" : "return quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK;",
    "info" : "ReturnStatement[41921-41991]:ReturnStatement[41921-41991]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42099-42105]:Modifier[42099-42105]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[42106-42113]:PrimitiveType[42106-42113]"
  }, {
    "left" : "usingFingerprint",
    "right" : "usingFingerprint",
    "info" : "SimpleName[42114-42130]:SimpleName[42114-42130]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42133-42202]:Block[42133-42202]"
  }, {
    "left" : "return usingFingerprint(getCurrentOrCallingUserId());",
    "right" : "return usingFingerprint(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[42143-42196]:ReturnStatement[42143-42196]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42304-42310]:Modifier[42304-42310]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[42311-42318]:PrimitiveType[42311-42318]"
  }, {
    "left" : "usingFingerprint",
    "right" : "usingFingerprint",
    "info" : "SimpleName[42319-42335]:SimpleName[42319-42335]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[42336-42346]:SingleVariableDeclaration[42336-42346]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42348-42718]:Block[42348-42718]"
  }, {
    "left" : "int quality = (int) getLong(\n                PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId);",
    "right" : "int quality = (int) getLong(\n                PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId);",
    "info" : "VariableDeclarationStatement[42358-42480]:VariableDeclarationStatement[42358-42480]"
  }, {
    "left" : "int exactType = (int) getLong(PASSWORD_BIOMETRIC_EXACT_TYPE, BIOMETRIC_WEAK_UNKNOWN);",
    "right" : "int exactType = (int) getLong(PASSWORD_BIOMETRIC_EXACT_TYPE, BIOMETRIC_WEAK_UNKNOWN);",
    "info" : "VariableDeclarationStatement[42489-42574]:VariableDeclarationStatement[42489-42574]"
  }, {
    "left" : "return quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK &&\n                exactType == BIOMETRIC_WEAK_FINGERPRINT;",
    "right" : "return quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK &&\n                exactType == BIOMETRIC_WEAK_FINGERPRINT;",
    "info" : "ReturnStatement[42583-42712]:ReturnStatement[42583-42712]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42753-42759]:Modifier[42753-42759]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[42760-42764]:PrimitiveType[42760-42764]"
  }, {
    "left" : "setUseFingerprint",
    "right" : "setUseFingerprint",
    "info" : "SimpleName[42765-42782]:SimpleName[42765-42782]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42785-42837]:Block[42785-42837]"
  }, {
    "left" : "setUseFingerprint(getCurrentUser());",
    "right" : "setUseFingerprint(getCurrentUser());",
    "info" : "ExpressionStatement[42795-42831]:ExpressionStatement[42795-42831]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42872-42878]:Modifier[42872-42878]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[42879-42883]:PrimitiveType[42879-42883]"
  }, {
    "left" : "setUseFingerprint",
    "right" : "setUseFingerprint",
    "info" : "SimpleName[42884-42901]:SimpleName[42884-42901]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[42902-42912]:SingleVariableDeclaration[42902-42912]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42914-43296]:Block[42914-43296]"
  }, {
    "left" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "right" : "DevicePolicyManager dpm = getDevicePolicyManager();",
    "info" : "VariableDeclarationStatement[42924-42975]:VariableDeclarationStatement[42924-42975]"
  }, {
    "left" : "setLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userId);",
    "right" : "setLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK, userId);",
    "info" : "ExpressionStatement[42984-43072]:ExpressionStatement[42984-43072]"
  }, {
    "left" : "setLong(PASSWORD_BIOMETRIC_EXACT_TYPE, BIOMETRIC_WEAK_FINGERPRINT, userId);",
    "right" : "setLong(PASSWORD_BIOMETRIC_EXACT_TYPE, BIOMETRIC_WEAK_FINGERPRINT, userId);",
    "info" : "ExpressionStatement[43081-43156]:ExpressionStatement[43081-43156]"
  }, {
    "left" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                0, 0, 0, 0, 0, 0, 0, userId);",
    "right" : "dpm.setActivePasswordState(DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK,\n                0, 0, 0, 0, 0, 0, 0, userId);",
    "info" : "ExpressionStatement[43165-43290]:ExpressionStatement[43165-43290]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43379-43385]:Modifier[43379-43385]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[43386-43393]:PrimitiveType[43386-43393]"
  }, {
    "left" : "isFingerprintInstalled",
    "right" : "isFingerprintInstalled",
    "info" : "SimpleName[43394-43416]:SimpleName[43394-43416]"
  }, {
    "left" : "Context context",
    "right" : "Context context",
    "info" : "SingleVariableDeclaration[43417-43432]:SingleVariableDeclaration[43417-43432]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43434-43538]:Block[43434-43538]"
  }, {
    "left" : "return context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_FINGERPRINT);",
    "right" : "return context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_FINGERPRINT);",
    "info" : "ReturnStatement[43444-43532]:ReturnStatement[43444-43532]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43692-43698]:Modifier[43906-43912]"
  }, {
    "left" : "List<LockPatternView.Cell>",
    "right" : "List<LockPatternView.Cell>",
    "info" : "ParameterizedType[43699-43725]:ParameterizedType[43920-43946]"
  }, {
    "left" : "stringToPattern",
    "right" : "stringToPattern",
    "info" : "SimpleName[43726-43741]:SimpleName[43947-43962]"
  }, {
    "left" : "String string",
    "right" : "String string",
    "info" : "SingleVariableDeclaration[43742-43755]:SingleVariableDeclaration[43963-43976]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43757-44163]:Block[43989-44557]"
  }, {
    "left" : "List<LockPatternView.Cell> result = Lists.newArrayList();",
    "right" : "List<LockPatternView.Cell> result = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[43767-43824]:VariableDeclarationStatement[43999-44056]"
  }, {
    "left" : "final byte size = getLockPatternSize();",
    "right" : "LockPatternView.Cell[][] tmp = new LockPatternView.Cell[size][size];",
    "info" : "VariableDeclarationStatement[43834-43873]:VariableDeclarationStatement[44066-44134]"
  }, {
    "left" : "size",
    "right" : "size",
    "info" : "SimpleName[43845-43849]:SimpleName[44122-44126]"
  }, {
    "left" : "getLockPatternSize()",
    "right" : "getLockPatternSize()",
    "info" : "MethodInvocation[43852-43872]:MethodInvocation[43798-43818]"
  }, {
    "left" : "LockPatternView.Cell.updateSize(size);",
    "right" : "tmp[i][j] = new LockPatternView.Cell(i, j, size);",
    "info" : "ExpressionStatement[43882-43920]:ExpressionStatement[44235-44284]"
  }, {
    "left" : "LockPatternView.Cell",
    "right" : "LockPatternView.Cell",
    "info" : "QualifiedName[43882-43902]:QualifiedName[44251-44271]"
  }, {
    "left" : "updateSize",
    "right" : "i",
    "info" : "SimpleName[43903-43913]:SimpleName[44272-44273]"
  }, {
    "left" : "size",
    "right" : "size",
    "info" : "SimpleName[43914-43918]:SimpleName[44278-44282]"
  }, {
    "left" : "final byte[] bytes = string.getBytes();",
    "right" : "final byte[] bytes = string.getBytes();",
    "info" : "VariableDeclarationStatement[43930-43969]:VariableDeclarationStatement[44318-44357]"
  }, {
    "left" : "for (int i = 0; i < bytes.length; i++)",
    "right" : "for (int i = 0; i < bytes.length; i++)",
    "info" : "ForStatement[43978-44134]:ForStatement[44366-44527]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44017-44134]:Block[44405-44527]"
  }, {
    "left" : "byte b = bytes[i];",
    "right" : "byte b = bytes[i];",
    "info" : "VariableDeclarationStatement[44031-44049]:VariableDeclarationStatement[44419-44437]"
  }, {
    "left" : "result.add(LockPatternView.Cell.of(b / size, b % size, size));",
    "right" : "result.add(LockPatternView.Cell.of(tmp, b / size, b % size, size));",
    "info" : "ExpressionStatement[44062-44124]:ExpressionStatement[44450-44517]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[44143-44157]:ReturnStatement[44537-44551]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[44291-44297]:Modifier[44685-44691]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[44298-44304]:SimpleType[44692-44698]"
  }, {
    "left" : "patternToString",
    "right" : "patternToString",
    "info" : "SimpleName[44305-44320]:SimpleName[44699-44714]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[44321-44355]:SingleVariableDeclaration[44715-44749]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44357-44427]:Block[44751-44821]"
  }, {
    "left" : "return patternToString(pattern, getLockPatternSize());",
    "right" : "return patternToString(pattern, getLockPatternSize());",
    "info" : "ReturnStatement[44367-44421]:ReturnStatement[44761-44815]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[44602-44608]:Modifier[44996-45002]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[44609-44615]:Modifier[45003-45009]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[44616-44622]:SimpleType[45010-45016]"
  }, {
    "left" : "patternToString",
    "right" : "patternToString",
    "info" : "SimpleName[44623-44638]:SimpleName[45017-45032]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[44639-44673]:SingleVariableDeclaration[45033-45067]"
  }, {
    "left" : "int patternGridSize",
    "right" : "int patternGridSize",
    "info" : "SingleVariableDeclaration[44675-44694]:SingleVariableDeclaration[45069-45088]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44696-45088]:Block[45090-45482]"
  }, {
    "left" : "if (pattern == null)",
    "right" : "if (pattern == null)",
    "info" : "IfStatement[44706-44761]:IfStatement[45100-45155]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44727-44761]:Block[45121-45155]"
  }, {
    "left" : "return \"\";",
    "right" : "return \"\";",
    "info" : "ReturnStatement[44741-44751]:ReturnStatement[45135-45145]"
  }, {
    "left" : "final int patternSize = pattern.size();",
    "right" : "final int patternSize = pattern.size();",
    "info" : "VariableDeclarationStatement[44770-44809]:VariableDeclarationStatement[45164-45203]"
  }, {
    "left" : "byte[] res = new byte[patternSize];",
    "right" : "byte[] res = new byte[patternSize];",
    "info" : "VariableDeclarationStatement[44819-44854]:VariableDeclarationStatement[45213-45248]"
  }, {
    "left" : "for (int i = 0; i < patternSize; i++)",
    "right" : "for (int i = 0; i < patternSize; i++)",
    "info" : "ForStatement[44863-45050]:ForStatement[45257-45444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44901-45050]:Block[45295-45444]"
  }, {
    "left" : "LockPatternView.Cell cell = pattern.get(i);",
    "right" : "LockPatternView.Cell cell = pattern.get(i);",
    "info" : "VariableDeclarationStatement[44915-44958]:VariableDeclarationStatement[45309-45352]"
  }, {
    "left" : "res[i] = (byte) (cell.getRow() * patternGridSize + cell.getColumn());",
    "right" : "res[i] = (byte) (cell.getRow() * patternGridSize + cell.getColumn());",
    "info" : "ExpressionStatement[44971-45040]:ExpressionStatement[45365-45434]"
  }, {
    "left" : "return new String(res);",
    "right" : "return new String(res);",
    "info" : "ReturnStatement[45059-45082]:ReturnStatement[45453-45476]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[45422-45428]:Modifier[46376-46382]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[45429-45435]:ArrayType[46383-46389]"
  }, {
    "left" : "patternToHash",
    "right" : "patternToHash",
    "info" : "SimpleName[45436-45449]:SimpleName[46390-46403]"
  }, {
    "left" : "List<LockPatternView.Cell> pattern",
    "right" : "List<LockPatternView.Cell> pattern",
    "info" : "SingleVariableDeclaration[45450-45484]:SingleVariableDeclaration[46404-46438]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45486-46084]:Block[46440-47038]"
  }, {
    "left" : "if (pattern == null)",
    "right" : "if (pattern == null)",
    "info" : "IfStatement[45496-45553]:IfStatement[46450-46507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45517-45553]:Block[46471-46507]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[45531-45543]:ReturnStatement[46485-46497]"
  }, {
    "left" : "final int patternSize = pattern.size();",
    "right" : "final int patternSize = pattern.size();",
    "info" : "VariableDeclarationStatement[45563-45602]:VariableDeclarationStatement[46517-46556]"
  }, {
    "left" : "byte[] res = new byte[patternSize];",
    "right" : "byte[] res = new byte[patternSize];",
    "info" : "VariableDeclarationStatement[45611-45646]:VariableDeclarationStatement[46565-46600]"
  }, {
    "left" : "for (int i = 0; i < patternSize; i++)",
    "right" : "for (int i = 0; i < patternSize; i++)",
    "info" : "ForStatement[45655-45847]:ForStatement[46609-46801]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45693-45847]:Block[46647-46801]"
  }, {
    "left" : "LockPatternView.Cell cell = pattern.get(i);",
    "right" : "LockPatternView.Cell cell = pattern.get(i);",
    "info" : "VariableDeclarationStatement[45707-45750]:VariableDeclarationStatement[46661-46704]"
  }, {
    "left" : "res[i] = (byte) (cell.getRow() * getLockPatternSize() + cell.getColumn());",
    "right" : "res[i] = (byte) (cell.getRow() * getLockPatternSize() + cell.getColumn());",
    "info" : "ExpressionStatement[45763-45837]:ExpressionStatement[46717-46791]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[45856-46078]:TryStatement[46810-47032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45860-46005]:Block[46814-46959]"
  }, {
    "left" : "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
    "right" : "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
    "info" : "VariableDeclarationStatement[45874-45928]:VariableDeclarationStatement[46828-46882]"
  }, {
    "left" : "byte[] hash = md.digest(res);",
    "right" : "byte[] hash = md.digest(res);",
    "info" : "VariableDeclarationStatement[45941-45970]:VariableDeclarationStatement[46895-46924]"
  }, {
    "left" : "return hash;",
    "right" : "return hash;",
    "info" : "ReturnStatement[45983-45995]:ReturnStatement[46937-46949]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46043-46078]:Block[46997-47032]"
  }, {
    "left" : "return res;",
    "right" : "return res;",
    "info" : "ReturnStatement[46057-46068]:ReturnStatement[47011-47022]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[46090-46097]:Modifier[47044-47051]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[46098-46104]:SimpleType[47052-47058]"
  }, {
    "left" : "getSalt",
    "right" : "getSalt",
    "info" : "SimpleName[46105-46112]:SimpleName[47059-47066]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[46113-46123]:SingleVariableDeclaration[47067-47077]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46125-46758]:Block[47079-47712]"
  }, {
    "left" : "long salt = getLong(LOCK_PASSWORD_SALT_KEY, 0, userId);",
    "right" : "long salt = getLong(LOCK_PASSWORD_SALT_KEY, 0, userId);",
    "info" : "VariableDeclarationStatement[46135-46190]:VariableDeclarationStatement[47089-47144]"
  }, {
    "left" : "if (salt == 0)",
    "right" : "if (salt == 0)",
    "info" : "IfStatement[46199-46713]:IfStatement[47153-47667]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46214-46713]:Block[47168-47667]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[46228-46703]:TryStatement[47182-47657]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46232-46464]:Block[47186-47418]"
  }, {
    "left" : "salt = SecureRandom.getInstance(\"SHA1PRNG\").nextLong();",
    "right" : "salt = SecureRandom.getInstance(\"SHA1PRNG\").nextLong();",
    "info" : "ExpressionStatement[46250-46305]:ExpressionStatement[47204-47259]"
  }, {
    "left" : "setLong(LOCK_PASSWORD_SALT_KEY, salt, userId);",
    "right" : "setLong(LOCK_PASSWORD_SALT_KEY, salt, userId);",
    "info" : "ExpressionStatement[46322-46368]:ExpressionStatement[47276-47322]"
  }, {
    "left" : "Log.v(TAG, \"Initialized lock password salt for user: \" + userId);",
    "right" : "Log.v(TAG, \"Initialized lock password salt for user: \" + userId);",
    "info" : "ExpressionStatement[46385-46450]:ExpressionStatement[47339-47404]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46500-46703]:Block[47454-47657]"
  }, {
    "left" : "throw new IllegalStateException(\"Couldn't get SecureRandom number\", e);",
    "right" : "throw new IllegalStateException(\"Couldn't get SecureRandom number\", e);",
    "info" : "ThrowStatement[46618-46689]:ThrowStatement[47572-47643]"
  }, {
    "left" : "return Long.toHexString(salt);",
    "right" : "return Long.toHexString(salt);",
    "info" : "ReturnStatement[46722-46752]:ReturnStatement[47676-47706]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47145-47151]:Modifier[48099-48105]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[47152-47158]:ArrayType[48106-48112]"
  }, {
    "left" : "passwordToHash",
    "right" : "passwordToHash",
    "info" : "SimpleName[47159-47173]:SimpleName[48113-48127]"
  }, {
    "left" : "String password",
    "right" : "String password",
    "info" : "SingleVariableDeclaration[47174-47189]:SingleVariableDeclaration[48128-48143]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[47191-47201]:SingleVariableDeclaration[48145-48155]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47203-47836]:Block[48157-48790]"
  }, {
    "left" : "if (password == null)",
    "right" : "if (password == null)",
    "info" : "IfStatement[47213-47271]:IfStatement[48167-48225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47235-47271]:Block[48189-48225]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[47249-47261]:ReturnStatement[48203-48215]"
  }, {
    "left" : "String algo = null;",
    "right" : "String algo = null;",
    "info" : "VariableDeclarationStatement[47280-47299]:VariableDeclarationStatement[48234-48253]"
  }, {
    "left" : "byte[] hashed = null;",
    "right" : "byte[] hashed = null;",
    "info" : "VariableDeclarationStatement[47308-47329]:VariableDeclarationStatement[48262-48283]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[47338-47807]:TryStatement[48292-48761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47342-47671]:Block[48296-48625]"
  }, {
    "left" : "byte[] saltedPassword = (password + getSalt(userId)).getBytes();",
    "right" : "byte[] saltedPassword = (password + getSalt(userId)).getBytes();",
    "info" : "VariableDeclarationStatement[47356-47420]:VariableDeclarationStatement[48310-48374]"
  }, {
    "left" : "byte[] sha1 = MessageDigest.getInstance(algo = \"SHA-1\").digest(saltedPassword);",
    "right" : "byte[] sha1 = MessageDigest.getInstance(algo = \"SHA-1\").digest(saltedPassword);",
    "info" : "VariableDeclarationStatement[47433-47512]:VariableDeclarationStatement[48387-48466]"
  }, {
    "left" : "byte[] md5 = MessageDigest.getInstance(algo = \"MD5\").digest(saltedPassword);",
    "right" : "byte[] md5 = MessageDigest.getInstance(algo = \"MD5\").digest(saltedPassword);",
    "info" : "VariableDeclarationStatement[47525-47601]:VariableDeclarationStatement[48479-48555]"
  }, {
    "left" : "hashed = (toHex(sha1) + toHex(md5)).getBytes();",
    "right" : "hashed = (toHex(sha1) + toHex(md5)).getBytes();",
    "info" : "ExpressionStatement[47614-47661]:ExpressionStatement[48568-48615]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47707-47807]:Block[48661-48761]"
  }, {
    "left" : "Log.w(TAG, \"Failed to encode string because of missing algorithm: \" + algo);",
    "right" : "Log.w(TAG, \"Failed to encode string because of missing algorithm: \" + algo);",
    "info" : "ExpressionStatement[47721-47797]:ExpressionStatement[48675-48751]"
  }, {
    "left" : "return hashed;",
    "right" : "return hashed;",
    "info" : "ReturnStatement[47816-47830]:ReturnStatement[48770-48784]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[47842-47849]:Modifier[48796-48803]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[47850-47856]:Modifier[48804-48810]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[47857-47863]:SimpleType[48811-48817]"
  }, {
    "left" : "toHex",
    "right" : "toHex",
    "info" : "SimpleName[47864-47869]:SimpleName[48818-48823]"
  }, {
    "left" : "byte[] ary",
    "right" : "byte[] ary",
    "info" : "SingleVariableDeclaration[47870-47880]:SingleVariableDeclaration[48824-48834]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47882-48135]:Block[48836-49089]"
  }, {
    "left" : "final String hex = \"0123456789ABCDEF\";",
    "right" : "final String hex = \"0123456789ABCDEF\";",
    "info" : "VariableDeclarationStatement[47892-47930]:VariableDeclarationStatement[48846-48884]"
  }, {
    "left" : "String ret = \"\";",
    "right" : "String ret = \"\";",
    "info" : "VariableDeclarationStatement[47939-47955]:VariableDeclarationStatement[48893-48909]"
  }, {
    "left" : "for (int i = 0; i < ary.length; i++)",
    "right" : "for (int i = 0; i < ary.length; i++)",
    "info" : "ForStatement[47964-48109]:ForStatement[48918-49063]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48001-48109]:Block[48955-49063]"
  }, {
    "left" : "ret += hex.charAt((ary[i] >> 4) & 0xf);",
    "right" : "ret += hex.charAt((ary[i] >> 4) & 0xf);",
    "info" : "ExpressionStatement[48015-48054]:ExpressionStatement[48969-49008]"
  }, {
    "left" : "ret += hex.charAt(ary[i] & 0xf);",
    "right" : "ret += hex.charAt(ary[i] & 0xf);",
    "info" : "ExpressionStatement[48067-48099]:ExpressionStatement[49021-49053]"
  }, {
    "left" : "return ret;",
    "right" : "return ret;",
    "info" : "ReturnStatement[48118-48129]:ReturnStatement[49072-49083]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48257-48263]:Modifier[49211-49217]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[48264-48271]:PrimitiveType[49218-49225]"
  }, {
    "left" : "isLockPasswordEnabled",
    "right" : "isLockPasswordEnabled",
    "info" : "SimpleName[48272-48293]:SimpleName[49226-49247]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48296-49364]:Block[49250-50318]"
  }, {
    "left" : "long mode = getLong(PASSWORD_TYPE_KEY, 0);",
    "right" : "long mode = getLong(PASSWORD_TYPE_KEY, 0);",
    "info" : "VariableDeclarationStatement[48306-48348]:VariableDeclarationStatement[49260-49302]"
  }, {
    "left" : "long backupMode = getLong(PASSWORD_TYPE_ALTERNATE_KEY, 0);",
    "right" : "long backupMode = getLong(PASSWORD_TYPE_ALTERNATE_KEY, 0);",
    "info" : "VariableDeclarationStatement[48357-48415]:VariableDeclarationStatement[49311-49369]"
  }, {
    "left" : "final boolean passwordEnabled = mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "right" : "final boolean passwordEnabled = mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "info" : "VariableDeclarationStatement[48424-48813]:VariableDeclarationStatement[49378-49767]"
  }, {
    "left" : "final boolean backupEnabled = backupMode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "right" : "final boolean backupEnabled = backupMode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || backupMode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "info" : "VariableDeclarationStatement[48822-49239]:VariableDeclarationStatement[49776-50193]"
  }, {
    "left" : "return savedPasswordExists() && (passwordEnabled ||\n                (usingBiometricWeak() && backupEnabled));",
    "right" : "return savedPasswordExists() && (passwordEnabled ||\n                (usingBiometricWeak() && backupEnabled));",
    "info" : "ReturnStatement[49249-49358]:ReturnStatement[50203-50312]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[49485-49491]:Modifier[50439-50445]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[49492-49499]:PrimitiveType[50446-50453]"
  }, {
    "left" : "isLockPatternEnabled",
    "right" : "isLockPatternEnabled",
    "info" : "SimpleName[49500-49520]:SimpleName[50454-50474]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49523-49596]:Block[50477-50550]"
  }, {
    "left" : "return isLockPatternEnabled(getCurrentOrCallingUserId());",
    "right" : "return isLockPatternEnabled(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[49533-49590]:ReturnStatement[50487-50544]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[49717-49723]:Modifier[50671-50677]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[49724-49731]:PrimitiveType[50678-50685]"
  }, {
    "left" : "isLockPatternEnabled",
    "right" : "isLockPatternEnabled",
    "info" : "SimpleName[49732-49752]:SimpleName[50686-50706]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[49753-49763]:SingleVariableDeclaration[50707-50717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49765-50362]:Block[50719-51316]"
  }, {
    "left" : "final boolean backupEnabled =\n                getLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId)\n                                == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "right" : "final boolean backupEnabled =\n                getLong(PASSWORD_TYPE_ALTERNATE_KEY,\n                        DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED, userId)\n                                == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "info" : "VariableDeclarationStatement[49775-50022]:VariableDeclarationStatement[50729-50976]"
  }, {
    "left" : "return getBoolean(Settings.Secure.LOCK_PATTERN_ENABLED, false, userId)\n                && (getLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                        userId) == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING\n                        || (usingBiometricWeak(userId) && backupEnabled));",
    "right" : "return getBoolean(Settings.Secure.LOCK_PATTERN_ENABLED, false, userId)\n                && (getLong(PASSWORD_TYPE_KEY, DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED,\n                        userId) == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING\n                        || (usingBiometricWeak(userId) && backupEnabled));",
    "info" : "ReturnStatement[50032-50356]:ReturnStatement[50986-51310]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[50480-50486]:Modifier[51434-51440]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[50487-50494]:PrimitiveType[51441-51448]"
  }, {
    "left" : "isBiometricWeakInstalled",
    "right" : "isBiometricWeakInstalled",
    "info" : "SimpleName[50495-50519]:SimpleName[51449-51473]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50522-51488]:Block[51476-52442]"
  }, {
    "left" : "PackageManager pm = mContext.getPackageManager();",
    "right" : "PackageManager pm = mContext.getPackageManager();",
    "info" : "VariableDeclarationStatement[50569-50618]:VariableDeclarationStatement[51523-51572]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[50627-50813]:TryStatement[51581-51767]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50631-50728]:Block[51585-51682]"
  }, {
    "left" : "pm.getPackageInfo(\"com.android.facelock\", PackageManager.GET_ACTIVITIES);",
    "right" : "pm.getPackageInfo(\"com.android.facelock\", PackageManager.GET_ACTIVITIES);",
    "info" : "ExpressionStatement[50645-50718]:ExpressionStatement[51599-51672]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50776-50813]:Block[51730-51767]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[50790-50803]:ReturnStatement[51744-51757]"
  }, {
    "left" : "if (!pm.hasSystemFeature(PackageManager.FEATURE_CAMERA_FRONT))",
    "right" : "if (!pm.hasSystemFeature(PackageManager.FEATURE_CAMERA_FRONT))",
    "info" : "IfStatement[50867-50967]:IfStatement[51821-51921]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50930-50967]:Block[51884-51921]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[50944-50957]:ReturnStatement[51898-51911]"
  }, {
    "left" : "if (getDevicePolicyManager().getCameraDisabled(null, getCurrentOrCallingUserId()))",
    "right" : "if (getDevicePolicyManager().getCameraDisabled(null, getCurrentOrCallingUserId()))",
    "info" : "IfStatement[50976-51096]:IfStatement[51930-52050]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51059-51096]:Block[52013-52050]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[51073-51086]:ReturnStatement[52027-52040]"
  }, {
    "left" : "if (DEBUG)",
    "right" : "if (DEBUG)",
    "info" : "IfStatement[51370-51460]:IfStatement[52324-52414]"
  }, {
    "left" : "Log.d(TAG, \"Forcing isBiometricWeakInstalled() to return false to disable it\");",
    "right" : "Log.d(TAG, \"Forcing isBiometricWeakInstalled() to return false to disable it\");",
    "info" : "ExpressionStatement[51381-51460]:ExpressionStatement[52335-52414]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[51469-51482]:ReturnStatement[52423-52436]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[51567-51573]:Modifier[52521-52527]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[51574-51578]:PrimitiveType[52528-52532]"
  }, {
    "left" : "setBiometricWeakLivelinessEnabled",
    "right" : "setBiometricWeakLivelinessEnabled",
    "info" : "SimpleName[51579-51612]:SimpleName[52533-52566]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[51613-51628]:SingleVariableDeclaration[52567-52582]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51630-51998]:Block[52584-52952]"
  }, {
    "left" : "long currentFlag = getLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, 0L);",
    "right" : "long currentFlag = getLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, 0L);",
    "info" : "VariableDeclarationStatement[51640-51714]:VariableDeclarationStatement[52594-52668]"
  }, {
    "left" : "long newFlag;",
    "right" : "long newFlag;",
    "info" : "VariableDeclarationStatement[51723-51736]:VariableDeclarationStatement[52677-52690]"
  }, {
    "left" : "if (enabled)",
    "right" : "if (enabled)",
    "info" : "IfStatement[51745-51923]:IfStatement[52699-52877]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51758-51837]:Block[52712-52791]"
  }, {
    "left" : "newFlag = currentFlag | FLAG_BIOMETRIC_WEAK_LIVELINESS;",
    "right" : "newFlag = currentFlag | FLAG_BIOMETRIC_WEAK_LIVELINESS;",
    "info" : "ExpressionStatement[51772-51827]:ExpressionStatement[52726-52781]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51843-51923]:Block[52797-52877]"
  }, {
    "left" : "newFlag = currentFlag & ~FLAG_BIOMETRIC_WEAK_LIVELINESS;",
    "right" : "newFlag = currentFlag & ~FLAG_BIOMETRIC_WEAK_LIVELINESS;",
    "info" : "ExpressionStatement[51857-51913]:ExpressionStatement[52811-52867]"
  }, {
    "left" : "setLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, newFlag);",
    "right" : "setLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, newFlag);",
    "info" : "ExpressionStatement[51932-51992]:ExpressionStatement[52886-52946]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52085-52091]:Modifier[53039-53045]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[52092-52099]:PrimitiveType[53046-53053]"
  }, {
    "left" : "isBiometricWeakLivelinessEnabled",
    "right" : "isBiometricWeakLivelinessEnabled",
    "info" : "SimpleName[52100-52132]:SimpleName[53054-53086]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52135-52295]:Block[53089-53249]"
  }, {
    "left" : "long currentFlag = getLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, 0L);",
    "right" : "long currentFlag = getLong(Settings.Secure.LOCK_BIOMETRIC_WEAK_FLAGS, 0L);",
    "info" : "VariableDeclarationStatement[52145-52219]:VariableDeclarationStatement[53099-53173]"
  }, {
    "left" : "return ((currentFlag & FLAG_BIOMETRIC_WEAK_LIVELINESS) != 0);",
    "right" : "return ((currentFlag & FLAG_BIOMETRIC_WEAK_LIVELINESS) != 0);",
    "info" : "ReturnStatement[52228-52289]:ReturnStatement[53182-53243]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52365-52371]:Modifier[53319-53325]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[52372-52376]:PrimitiveType[53326-53330]"
  }, {
    "left" : "setLockPatternEnabled",
    "right" : "setLockPatternEnabled",
    "info" : "SimpleName[52377-52398]:SimpleName[53331-53352]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[52399-52414]:SingleVariableDeclaration[53353-53368]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52416-52492]:Block[53370-53446]"
  }, {
    "left" : "setLockPatternEnabled(enabled, getCurrentOrCallingUserId());",
    "right" : "setLockPatternEnabled(enabled, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[52426-52486]:ExpressionStatement[53380-53440]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52562-52568]:Modifier[53516-53522]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[52569-52573]:PrimitiveType[53523-53527]"
  }, {
    "left" : "setLockPatternEnabled",
    "right" : "setLockPatternEnabled",
    "info" : "SimpleName[52574-52595]:SimpleName[53528-53549]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[52596-52611]:SingleVariableDeclaration[53550-53565]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[52613-52627]:SingleVariableDeclaration[53567-53581]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52629-52715]:Block[53583-53669]"
  }, {
    "left" : "setBoolean(Settings.Secure.LOCK_PATTERN_ENABLED, enabled, userHandle);",
    "right" : "setBoolean(Settings.Secure.LOCK_PATTERN_ENABLED, enabled, userHandle);",
    "info" : "ExpressionStatement[52639-52709]:ExpressionStatement[53593-53663]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52792-52798]:Modifier[53746-53752]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[52799-52806]:PrimitiveType[53753-53760]"
  }, {
    "left" : "isVisiblePatternEnabled",
    "right" : "isVisiblePatternEnabled",
    "info" : "SimpleName[52807-52830]:SimpleName[53761-53784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52833-52912]:Block[53787-53866]"
  }, {
    "left" : "return getBoolean(Settings.Secure.LOCK_PATTERN_VISIBLE, false);",
    "right" : "return getBoolean(Settings.Secure.LOCK_PATTERN_VISIBLE, false);",
    "info" : "ReturnStatement[52843-52906]:ReturnStatement[53797-53860]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52985-52991]:Modifier[53939-53945]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[52992-52996]:PrimitiveType[53946-53950]"
  }, {
    "left" : "setVisiblePatternEnabled",
    "right" : "setVisiblePatternEnabled",
    "info" : "SimpleName[52997-53021]:SimpleName[53951-53975]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[53022-53037]:SingleVariableDeclaration[53976-53991]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53039-53787]:Block[53993-54741]"
  }, {
    "left" : "setBoolean(Settings.Secure.LOCK_PATTERN_VISIBLE, enabled);",
    "right" : "setBoolean(Settings.Secure.LOCK_PATTERN_VISIBLE, enabled);",
    "info" : "ExpressionStatement[53049-53107]:ExpressionStatement[54003-54061]"
  }, {
    "left" : "int userId = getCurrentOrCallingUserId();",
    "right" : "int userId = getCurrentOrCallingUserId();",
    "info" : "VariableDeclarationStatement[53155-53196]:VariableDeclarationStatement[54109-54150]"
  }, {
    "left" : "if (userId != UserHandle.USER_OWNER)",
    "right" : "if (userId != UserHandle.USER_OWNER)",
    "info" : "IfStatement[53205-53273]:IfStatement[54159-54227]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53242-53273]:Block[54196-54227]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[53256-53263]:ReturnStatement[54210-54217]"
  }, {
    "left" : "IBinder service = ServiceManager.getService(\"mount\");",
    "right" : "IBinder service = ServiceManager.getService(\"mount\");",
    "info" : "VariableDeclarationStatement[53283-53336]:VariableDeclarationStatement[54237-54290]"
  }, {
    "left" : "if (service == null)",
    "right" : "if (service == null)",
    "info" : "IfStatement[53345-53481]:IfStatement[54299-54435]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53366-53481]:Block[54320-54435]"
  }, {
    "left" : "Log.e(TAG, \"Could not find the mount service to update the user info\");",
    "right" : "Log.e(TAG, \"Could not find the mount service to update the user info\");",
    "info" : "ExpressionStatement[53380-53451]:ExpressionStatement[54334-54405]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[53464-53471]:ReturnStatement[54418-54425]"
  }, {
    "left" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "right" : "IMountService mountService = IMountService.Stub.asInterface(service);",
    "info" : "VariableDeclarationStatement[53491-53560]:VariableDeclarationStatement[54445-54514]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[53569-53781]:TryStatement[54523-54735]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53573-53676]:Block[54527-54630]"
  }, {
    "left" : "mountService.setField(StorageManager.PATTERN_VISIBLE_KEY, enabled ? \"1\" : \"0\");",
    "right" : "mountService.setField(StorageManager.PATTERN_VISIBLE_KEY, enabled ? \"1\" : \"0\");",
    "info" : "ExpressionStatement[53587-53666]:ExpressionStatement[54541-54620]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53703-53781]:Block[54657-54735]"
  }, {
    "left" : "Log.e(TAG, \"Error changing pattern visible state\", e);",
    "right" : "Log.e(TAG, \"Error changing pattern visible state\", e);",
    "info" : "ExpressionStatement[53717-53771]:ExpressionStatement[54671-54725]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[53877-53883]:Modifier[54831-54837]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[53884-53891]:PrimitiveType[54838-54845]"
  }, {
    "left" : "isTactileFeedbackEnabled",
    "right" : "isTactileFeedbackEnabled",
    "info" : "SimpleName[53892-53916]:SimpleName[54846-54870]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53919-54080]:Block[54873-55034]"
  }, {
    "left" : "return Settings.System.getIntForUser(mContentResolver,\n                Settings.System.HAPTIC_FEEDBACK_ENABLED, 1, UserHandle.USER_CURRENT) != 0;",
    "right" : "return Settings.System.getIntForUser(mContentResolver,\n                Settings.System.HAPTIC_FEEDBACK_ENABLED, 1, UserHandle.USER_CURRENT) != 0;",
    "info" : "ReturnStatement[53929-54074]:ReturnStatement[54883-55028]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54145-54151]:Modifier[55099-55105]"
  }, {
    "left" : "byte",
    "right" : "byte",
    "info" : "PrimitiveType[54152-54156]:PrimitiveType[55106-55110]"
  }, {
    "left" : "getLockPatternSize",
    "right" : "getLockPatternSize",
    "info" : "SimpleName[54157-54175]:SimpleName[55111-55129]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54178-54387]:Block[55132-55341]"
  }, {
    "left" : "long size = getLong(Settings.Secure.LOCK_PATTERN_SIZE, -1);",
    "right" : "long size = getLong(Settings.Secure.LOCK_PATTERN_SIZE, -1);",
    "info" : "VariableDeclarationStatement[54188-54247]:VariableDeclarationStatement[55142-55201]"
  }, {
    "left" : "if (size > 0 && size < 128)",
    "right" : "if (size > 0 && size < 128)",
    "info" : "IfStatement[54256-54327]:IfStatement[55210-55281]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54284-54327]:Block[55238-55281]"
  }, {
    "left" : "return (byte) size;",
    "right" : "return (byte) size;",
    "info" : "ReturnStatement[54298-54317]:ReturnStatement[55252-55271]"
  }, {
    "left" : "return LockPatternUtils.PATTERN_SIZE_DEFAULT;",
    "right" : "return LockPatternUtils.PATTERN_SIZE_DEFAULT;",
    "info" : "ReturnStatement[54336-54381]:ReturnStatement[55290-55335]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54448-54454]:Modifier[55402-55408]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[54455-54459]:PrimitiveType[55409-55413]"
  }, {
    "left" : "setLockPatternSize",
    "right" : "setLockPatternSize",
    "info" : "SimpleName[54460-54478]:SimpleName[55414-55432]"
  }, {
    "left" : "long size",
    "right" : "long size",
    "info" : "SingleVariableDeclaration[54479-54488]:SingleVariableDeclaration[55433-55442]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54490-54555]:Block[55444-55509]"
  }, {
    "left" : "setLong(Settings.Secure.LOCK_PATTERN_SIZE, size);",
    "right" : "setLong(Settings.Secure.LOCK_PATTERN_SIZE, size);",
    "info" : "ExpressionStatement[54500-54549]:ExpressionStatement[55454-55503]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54561-54567]:Modifier[55515-55521]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[54568-54572]:PrimitiveType[55522-55526]"
  }, {
    "left" : "setVisibleDotsEnabled",
    "right" : "setVisibleDotsEnabled",
    "info" : "SimpleName[54573-54594]:SimpleName[55527-55548]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[54595-54610]:SingleVariableDeclaration[55549-55564]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54612-54683]:Block[55566-55637]"
  }, {
    "left" : "setBoolean(Settings.Secure.LOCK_DOTS_VISIBLE, enabled);",
    "right" : "setBoolean(Settings.Secure.LOCK_DOTS_VISIBLE, enabled);",
    "info" : "ExpressionStatement[54622-54677]:ExpressionStatement[55576-55631]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54689-54695]:Modifier[55643-55649]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[54696-54703]:PrimitiveType[55650-55657]"
  }, {
    "left" : "isVisibleDotsEnabled",
    "right" : "isVisibleDotsEnabled",
    "info" : "SimpleName[54704-54724]:SimpleName[55658-55678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54727-54802]:Block[55681-55756]"
  }, {
    "left" : "return getBoolean(Settings.Secure.LOCK_DOTS_VISIBLE, true);",
    "right" : "return getBoolean(Settings.Secure.LOCK_DOTS_VISIBLE, true);",
    "info" : "ReturnStatement[54737-54796]:ReturnStatement[55691-55750]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54808-54814]:Modifier[55762-55768]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[54815-54819]:PrimitiveType[55769-55773]"
  }, {
    "left" : "setShowErrorPath",
    "right" : "setShowErrorPath",
    "info" : "SimpleName[54820-54836]:SimpleName[55774-55790]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[54837-54852]:SingleVariableDeclaration[55791-55806]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54854-54928]:Block[55808-55882]"
  }, {
    "left" : "setBoolean(Settings.Secure.LOCK_SHOW_ERROR_PATH, enabled);",
    "right" : "setBoolean(Settings.Secure.LOCK_SHOW_ERROR_PATH, enabled);",
    "info" : "ExpressionStatement[54864-54922]:ExpressionStatement[55818-55876]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54934-54940]:Modifier[55888-55894]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[54941-54948]:PrimitiveType[55895-55902]"
  }, {
    "left" : "isShowErrorPath",
    "right" : "isShowErrorPath",
    "info" : "SimpleName[54949-54964]:SimpleName[55903-55918]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54967-55045]:Block[55921-55999]"
  }, {
    "left" : "return getBoolean(Settings.Secure.LOCK_SHOW_ERROR_PATH, true);",
    "right" : "return getBoolean(Settings.Secure.LOCK_SHOW_ERROR_PATH, true);",
    "info" : "ReturnStatement[54977-55039]:ReturnStatement[55931-55993]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[55238-55244]:Modifier[56192-56198]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[55245-55249]:PrimitiveType[56199-56203]"
  }, {
    "left" : "setLockoutAttemptDeadline",
    "right" : "setLockoutAttemptDeadline",
    "info" : "SimpleName[55250-55275]:SimpleName[56204-56229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55278-55452]:Block[56232-56406]"
  }, {
    "left" : "final long deadline = SystemClock.elapsedRealtime() + FAILED_ATTEMPT_TIMEOUT_MS;",
    "right" : "final long deadline = SystemClock.elapsedRealtime() + FAILED_ATTEMPT_TIMEOUT_MS;",
    "info" : "VariableDeclarationStatement[55288-55368]:VariableDeclarationStatement[56242-56322]"
  }, {
    "left" : "setLong(LOCKOUT_ATTEMPT_DEADLINE, deadline);",
    "right" : "setLong(LOCKOUT_ATTEMPT_DEADLINE, deadline);",
    "info" : "ExpressionStatement[55377-55421]:ExpressionStatement[56331-56375]"
  }, {
    "left" : "return deadline;",
    "right" : "return deadline;",
    "info" : "ReturnStatement[55430-55446]:ReturnStatement[56384-56400]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[55663-55669]:Modifier[56617-56623]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[55670-55674]:PrimitiveType[56624-56628]"
  }, {
    "left" : "getLockoutAttemptDeadline",
    "right" : "getLockoutAttemptDeadline",
    "info" : "SimpleName[55675-55700]:SimpleName[56629-56654]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55703-55971]:Block[56657-56925]"
  }, {
    "left" : "final long deadline = getLong(LOCKOUT_ATTEMPT_DEADLINE, 0L);",
    "right" : "final long deadline = getLong(LOCKOUT_ATTEMPT_DEADLINE, 0L);",
    "info" : "VariableDeclarationStatement[55713-55773]:VariableDeclarationStatement[56667-56727]"
  }, {
    "left" : "final long now = SystemClock.elapsedRealtime();",
    "right" : "final long now = SystemClock.elapsedRealtime();",
    "info" : "VariableDeclarationStatement[55782-55829]:VariableDeclarationStatement[56736-56783]"
  }, {
    "left" : "if (deadline < now || deadline > (now + FAILED_ATTEMPT_TIMEOUT_MS))",
    "right" : "if (deadline < now || deadline > (now + FAILED_ATTEMPT_TIMEOUT_MS))",
    "info" : "IfStatement[55838-55940]:IfStatement[56792-56894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55906-55940]:Block[56860-56894]"
  }, {
    "left" : "return 0L;",
    "right" : "return 0L;",
    "info" : "ReturnStatement[55920-55930]:ReturnStatement[56874-56884]"
  }, {
    "left" : "return deadline;",
    "right" : "return deadline;",
    "info" : "ReturnStatement[55949-55965]:ReturnStatement[56903-56919]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56175-56181]:Modifier[57129-57135]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[56182-56189]:PrimitiveType[57136-57143]"
  }, {
    "left" : "isPermanentlyLocked",
    "right" : "isPermanentlyLocked",
    "info" : "SimpleName[56190-56209]:SimpleName[57144-57163]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56212-56276]:Block[57166-57230]"
  }, {
    "left" : "return getBoolean(LOCKOUT_PERMANENT_KEY, false);",
    "right" : "return getBoolean(LOCKOUT_PERMANENT_KEY, false);",
    "info" : "ReturnStatement[56222-56270]:ReturnStatement[57176-57224]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56618-56624]:Modifier[57572-57578]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[56625-56629]:PrimitiveType[57579-57583]"
  }, {
    "left" : "setPermanentlyLocked",
    "right" : "setPermanentlyLocked",
    "info" : "SimpleName[56630-56650]:SimpleName[57584-57604]"
  }, {
    "left" : "boolean locked",
    "right" : "boolean locked",
    "info" : "SingleVariableDeclaration[56651-56665]:SingleVariableDeclaration[57605-57619]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56667-56725]:Block[57621-57679]"
  }, {
    "left" : "setBoolean(LOCKOUT_PERMANENT_KEY, locked);",
    "right" : "setBoolean(LOCKOUT_PERMANENT_KEY, locked);",
    "info" : "ExpressionStatement[56677-56719]:ExpressionStatement[57631-57673]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56731-56737]:Modifier[57685-57691]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[56738-56745]:PrimitiveType[57692-57699]"
  }, {
    "left" : "isEmergencyCallCapable",
    "right" : "isEmergencyCallCapable",
    "info" : "SimpleName[56746-56768]:SimpleName[57700-57722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56771-56896]:Block[57725-57850]"
  }, {
    "left" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_voice_capable);",
    "right" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_voice_capable);",
    "info" : "ReturnStatement[56781-56890]:ReturnStatement[57735-57844]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56902-56908]:Modifier[57856-57862]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[56909-56916]:PrimitiveType[57863-57870]"
  }, {
    "left" : "isPukUnlockScreenEnable",
    "right" : "isPukUnlockScreenEnable",
    "info" : "SimpleName[56917-56940]:SimpleName[57871-57894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56943-57079]:Block[57897-58033]"
  }, {
    "left" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_enable_puk_unlock_screen);",
    "right" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_enable_puk_unlock_screen);",
    "info" : "ReturnStatement[56953-57073]:ReturnStatement[57907-58027]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[57085-57091]:Modifier[58039-58045]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[57092-57099]:PrimitiveType[58046-58053]"
  }, {
    "left" : "isEmergencyCallEnabledWhileSimLocked",
    "right" : "isEmergencyCallEnabledWhileSimLocked",
    "info" : "SimpleName[57100-57136]:SimpleName[58054-58090]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57139-57289]:Block[58093-58243]"
  }, {
    "left" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_enable_emergency_call_while_sim_locked);",
    "right" : "return mContext.getResources().getBoolean(\n                com.android.internal.R.bool.config_enable_emergency_call_while_sim_locked);",
    "info" : "ReturnStatement[57149-57283]:ReturnStatement[58103-58237]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[57441-57447]:Modifier[58395-58401]"
  }, {
    "left" : "AlarmManager.AlarmClockInfo",
    "right" : "AlarmManager.AlarmClockInfo",
    "info" : "SimpleType[57448-57475]:SimpleType[58402-58429]"
  }, {
    "left" : "getNextAlarm",
    "right" : "getNextAlarm",
    "info" : "SimpleName[57476-57488]:SimpleName[58430-58442]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57491-57671]:Block[58445-58625]"
  }, {
    "left" : "AlarmManager alarmManager = (AlarmManager) mContext.getSystemService(Context.ALARM_SERVICE);",
    "right" : "AlarmManager alarmManager = (AlarmManager) mContext.getSystemService(Context.ALARM_SERVICE);",
    "info" : "VariableDeclarationStatement[57501-57593]:VariableDeclarationStatement[58455-58547]"
  }, {
    "left" : "return alarmManager.getNextAlarmClock(UserHandle.USER_CURRENT);",
    "right" : "return alarmManager.getNextAlarmClock(UserHandle.USER_CURRENT);",
    "info" : "ReturnStatement[57602-57665]:ReturnStatement[58556-58619]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[57677-57684]:Modifier[58631-58638]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[57685-57692]:PrimitiveType[58639-58646]"
  }, {
    "left" : "getBoolean",
    "right" : "getBoolean",
    "info" : "SimpleName[57693-57703]:SimpleName[58647-58657]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[57704-57727]:SingleVariableDeclaration[58658-58681]"
  }, {
    "left" : "boolean defaultValue",
    "right" : "boolean defaultValue",
    "info" : "SingleVariableDeclaration[57729-57749]:SingleVariableDeclaration[58683-58703]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[57751-57761]:SingleVariableDeclaration[58705-58715]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57763-57955]:Block[58717-58909]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[57773-57949]:TryStatement[58727-58903]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57777-57877]:Block[58731-58831]"
  }, {
    "left" : "return getLockSettings().getBoolean(secureSettingKey, defaultValue, userId);",
    "right" : "return getLockSettings().getBoolean(secureSettingKey, defaultValue, userId);",
    "info" : "ReturnStatement[57791-57867]:ReturnStatement[58745-58821]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57905-57949]:Block[58859-58903]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[57919-57939]:ReturnStatement[58873-58893]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[57961-57968]:Modifier[58915-58922]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[57969-57976]:PrimitiveType[58923-58930]"
  }, {
    "left" : "getBoolean",
    "right" : "getBoolean",
    "info" : "SimpleName[57977-57987]:SimpleName[58931-58941]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[57988-58011]:SingleVariableDeclaration[58942-58965]"
  }, {
    "left" : "boolean defaultValue",
    "right" : "boolean defaultValue",
    "info" : "SingleVariableDeclaration[58013-58033]:SingleVariableDeclaration[58967-58987]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58035-58130]:Block[58989-59084]"
  }, {
    "left" : "return getBoolean(secureSettingKey, defaultValue, getCurrentOrCallingUserId());",
    "right" : "return getBoolean(secureSettingKey, defaultValue, getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[58045-58124]:ReturnStatement[58999-59078]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[58136-58143]:Modifier[59090-59097]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[58144-58148]:PrimitiveType[59098-59102]"
  }, {
    "left" : "setBoolean",
    "right" : "setBoolean",
    "info" : "SimpleName[58149-58159]:SimpleName[59103-59113]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[58160-58183]:SingleVariableDeclaration[59114-59137]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[58185-58200]:SingleVariableDeclaration[59139-59154]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[58202-58212]:SingleVariableDeclaration[59156-59166]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58214-58467]:Block[59168-59421]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[58224-58461]:TryStatement[59178-59415]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58228-58316]:Block[59182-59270]"
  }, {
    "left" : "getLockSettings().setBoolean(secureSettingKey, enabled, userId);",
    "right" : "getLockSettings().setBoolean(secureSettingKey, enabled, userId);",
    "info" : "ExpressionStatement[58242-58306]:ExpressionStatement[59196-59260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58344-58461]:Block[59298-59415]"
  }, {
    "left" : "Log.e(TAG, \"Couldn't write boolean \" + secureSettingKey + re);",
    "right" : "Log.e(TAG, \"Couldn't write boolean \" + secureSettingKey + re);",
    "info" : "ExpressionStatement[58389-58451]:ExpressionStatement[59343-59405]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[58473-58480]:Modifier[59427-59434]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[58481-58485]:PrimitiveType[59435-59439]"
  }, {
    "left" : "setBoolean",
    "right" : "setBoolean",
    "info" : "SimpleName[58486-58496]:SimpleName[59440-59450]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[58497-58520]:SingleVariableDeclaration[59451-59474]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[58522-58537]:SingleVariableDeclaration[59476-59491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58539-58622]:Block[59493-59576]"
  }, {
    "left" : "setBoolean(secureSettingKey, enabled, getCurrentOrCallingUserId());",
    "right" : "setBoolean(secureSettingKey, enabled, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[58549-58616]:ExpressionStatement[59503-59570]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[58628-58634]:Modifier[59582-59588]"
  }, {
    "left" : "int[]",
    "right" : "int[]",
    "info" : "ArrayType[58635-58640]:ArrayType[59589-59594]"
  }, {
    "left" : "getAppWidgets",
    "right" : "getAppWidgets",
    "info" : "SimpleName[58641-58654]:SimpleName[59595-59608]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58657-58719]:Block[59611-59673]"
  }, {
    "left" : "return getAppWidgets(UserHandle.USER_CURRENT);",
    "right" : "return getAppWidgets(UserHandle.USER_CURRENT);",
    "info" : "ReturnStatement[58667-58713]:ReturnStatement[59621-59667]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[58725-58732]:Modifier[59679-59686]"
  }, {
    "left" : "int[]",
    "right" : "int[]",
    "info" : "ArrayType[58733-58738]:ArrayType[59687-59692]"
  }, {
    "left" : "getAppWidgets",
    "right" : "getAppWidgets",
    "info" : "SimpleName[58739-58752]:SimpleName[59693-59706]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[58753-58763]:SingleVariableDeclaration[59707-59717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58765-59650]:Block[59719-60604]"
  }, {
    "left" : "String appWidgetIdString = Settings.Secure.getStringForUser(\n                mContentResolver, Settings.Secure.LOCK_SCREEN_APPWIDGET_IDS, userId);",
    "right" : "String appWidgetIdString = Settings.Secure.getStringForUser(\n                mContentResolver, Settings.Secure.LOCK_SCREEN_APPWIDGET_IDS, userId);",
    "info" : "VariableDeclarationStatement[58775-58921]:VariableDeclarationStatement[59729-59875]"
  }, {
    "left" : "String delims = \",\";",
    "right" : "String delims = \",\";",
    "info" : "VariableDeclarationStatement[58930-58950]:VariableDeclarationStatement[59884-59904]"
  }, {
    "left" : "if (appWidgetIdString != null && appWidgetIdString.length() > 0)",
    "right" : "if (appWidgetIdString != null && appWidgetIdString.length() > 0)",
    "info" : "IfStatement[58959-59617]:IfStatement[59913-60571]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59024-59617]:Block[59978-60571]"
  }, {
    "left" : "String[] appWidgetStringIds = appWidgetIdString.split(delims);",
    "right" : "String[] appWidgetStringIds = appWidgetIdString.split(delims);",
    "info" : "VariableDeclarationStatement[59038-59100]:VariableDeclarationStatement[59992-60054]"
  }, {
    "left" : "int[] appWidgetIds = new int[appWidgetStringIds.length];",
    "right" : "int[] appWidgetIds = new int[appWidgetStringIds.length];",
    "info" : "VariableDeclarationStatement[59113-59169]:VariableDeclarationStatement[60067-60123]"
  }, {
    "left" : "for (int i = 0; i < appWidgetStringIds.length; i++)",
    "right" : "for (int i = 0; i < appWidgetStringIds.length; i++)",
    "info" : "ForStatement[59182-59574]:ForStatement[60136-60528]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59234-59574]:Block[60188-60528]"
  }, {
    "left" : "String appWidget = appWidgetStringIds[i];",
    "right" : "String appWidget = appWidgetStringIds[i];",
    "info" : "VariableDeclarationStatement[59252-59293]:VariableDeclarationStatement[60206-60247]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[59310-59560]:TryStatement[60264-60514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59314-59398]:Block[60268-60352]"
  }, {
    "left" : "appWidgetIds[i] = Integer.decode(appWidget);",
    "right" : "appWidgetIds[i] = Integer.decode(appWidget);",
    "info" : "ExpressionStatement[59336-59380]:ExpressionStatement[60290-60334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59431-59560]:Block[60385-60514]"
  }, {
    "left" : "Log.d(TAG, \"Error when parsing widget id \" + appWidget);",
    "right" : "Log.d(TAG, \"Error when parsing widget id \" + appWidget);",
    "info" : "ExpressionStatement[59453-59509]:ExpressionStatement[60407-60463]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[59530-59542]:ReturnStatement[60484-60496]"
  }, {
    "left" : "return appWidgetIds;",
    "right" : "return appWidgetIds;",
    "info" : "ReturnStatement[59587-59607]:ReturnStatement[60541-60561]"
  }, {
    "left" : "return new int[0];",
    "right" : "return new int[0];",
    "info" : "ReturnStatement[59626-59644]:ReturnStatement[60580-60598]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[59656-59663]:Modifier[60610-60617]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[59664-59670]:Modifier[60618-60624]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[59671-59677]:SimpleType[60625-60631]"
  }, {
    "left" : "combineStrings",
    "right" : "combineStrings",
    "info" : "SimpleName[59678-59692]:SimpleName[60632-60646]"
  }, {
    "left" : "int[] list",
    "right" : "int[] list",
    "info" : "SingleVariableDeclaration[59693-59703]:SingleVariableDeclaration[60647-60657]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[59705-59721]:SingleVariableDeclaration[60659-60675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59723-60620]:Block[60677-61574]"
  }, {
    "left" : "int listLength = list.length;",
    "right" : "int listLength = list.length;",
    "info" : "VariableDeclarationStatement[59733-59762]:VariableDeclarationStatement[60687-60716]"
  }, {
    "left" : "switch (listLength) {\n            case 0: {\n                return \"\";\n            }\n            case 1: {\n                return Integer.toString(list[0]);\n            }\n        }",
    "right" : "switch (listLength) {\n            case 0: {\n                return \"\";\n            }\n            case 1: {\n                return Integer.toString(list[0]);\n            }\n        }",
    "info" : "SwitchStatement[59772-59952]:SwitchStatement[60726-60906]"
  }, {
    "left" : "case 0:",
    "right" : "case 0:",
    "info" : "SwitchCase[59806-59813]:SwitchCase[60760-60767]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59814-59856]:Block[60768-60810]"
  }, {
    "left" : "return \"\";",
    "right" : "return \"\";",
    "info" : "ReturnStatement[59832-59842]:ReturnStatement[60786-60796]"
  }, {
    "left" : "case 1:",
    "right" : "case 1:",
    "info" : "SwitchCase[59869-59876]:SwitchCase[60823-60830]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59877-59942]:Block[60831-60896]"
  }, {
    "left" : "return Integer.toString(list[0]);",
    "right" : "return Integer.toString(list[0]);",
    "info" : "ReturnStatement[59895-59928]:ReturnStatement[60849-60882]"
  }, {
    "left" : "int strLength = 0;",
    "right" : "int strLength = 0;",
    "info" : "VariableDeclarationStatement[59962-59980]:VariableDeclarationStatement[60916-60934]"
  }, {
    "left" : "int separatorLength = separator.length();",
    "right" : "int separatorLength = separator.length();",
    "info" : "VariableDeclarationStatement[59989-60030]:VariableDeclarationStatement[60943-60984]"
  }, {
    "left" : "String[] stringList = new String[list.length];",
    "right" : "String[] stringList = new String[list.length];",
    "info" : "VariableDeclarationStatement[60040-60086]:VariableDeclarationStatement[60994-61040]"
  }, {
    "left" : "for (int i = 0; i < listLength; i++)",
    "right" : "for (int i = 0; i < listLength; i++)",
    "info" : "ForStatement[60095-60345]:ForStatement[61049-61299]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60132-60345]:Block[61086-61299]"
  }, {
    "left" : "stringList[i] = Integer.toString(list[i]);",
    "right" : "stringList[i] = Integer.toString(list[i]);",
    "info" : "ExpressionStatement[60146-60188]:ExpressionStatement[61100-61142]"
  }, {
    "left" : "strLength += stringList[i].length();",
    "right" : "strLength += stringList[i].length();",
    "info" : "ExpressionStatement[60201-60237]:ExpressionStatement[61155-61191]"
  }, {
    "left" : "if (i < listLength - 1)",
    "right" : "if (i < listLength - 1)",
    "info" : "IfStatement[60250-60335]:IfStatement[61204-61289]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60274-60335]:Block[61228-61289]"
  }, {
    "left" : "strLength += separatorLength;",
    "right" : "strLength += separatorLength;",
    "info" : "ExpressionStatement[60292-60321]:ExpressionStatement[61246-61275]"
  }, {
    "left" : "StringBuilder sb = new StringBuilder(strLength);",
    "right" : "StringBuilder sb = new StringBuilder(strLength);",
    "info" : "VariableDeclarationStatement[60355-60403]:VariableDeclarationStatement[61309-61357]"
  }, {
    "left" : "for (int i = 0; i < listLength; i++)",
    "right" : "for (int i = 0; i < listLength; i++)",
    "info" : "ForStatement[60413-60583]:ForStatement[61367-61537]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60450-60583]:Block[61404-61537]"
  }, {
    "left" : "sb.append(list[i]);",
    "right" : "sb.append(list[i]);",
    "info" : "ExpressionStatement[60464-60483]:ExpressionStatement[61418-61437]"
  }, {
    "left" : "if (i < listLength - 1)",
    "right" : "if (i < listLength - 1)",
    "info" : "IfStatement[60496-60573]:IfStatement[61450-61527]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60520-60573]:Block[61474-61527]"
  }, {
    "left" : "sb.append(separator);",
    "right" : "sb.append(separator);",
    "info" : "ExpressionStatement[60538-60559]:ExpressionStatement[61492-61513]"
  }, {
    "left" : "return sb.toString();",
    "right" : "return sb.toString();",
    "info" : "ReturnStatement[60593-60614]:ReturnStatement[61547-61568]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[60732-60738]:Modifier[61686-61692]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[60739-60743]:PrimitiveType[61693-61697]"
  }, {
    "left" : "writeFallbackAppWidgetId",
    "right" : "writeFallbackAppWidgetId",
    "info" : "SimpleName[60744-60768]:SimpleName[61698-61722]"
  }, {
    "left" : "int appWidgetId",
    "right" : "int appWidgetId",
    "info" : "SingleVariableDeclaration[60769-60784]:SingleVariableDeclaration[61723-61738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60786-60987]:Block[61740-61941]"
  }, {
    "left" : "Settings.Secure.putIntForUser(mContentResolver,\n                Settings.Secure.LOCK_SCREEN_FALLBACK_APPWIDGET_ID,\n                appWidgetId,\n                UserHandle.USER_CURRENT);",
    "right" : "Settings.Secure.putIntForUser(mContentResolver,\n                Settings.Secure.LOCK_SCREEN_FALLBACK_APPWIDGET_ID,\n                appWidgetId,\n                UserHandle.USER_CURRENT);",
    "info" : "ExpressionStatement[60796-60981]:ExpressionStatement[61750-61935]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[61099-61105]:Modifier[62053-62059]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[61106-61109]:PrimitiveType[62060-62063]"
  }, {
    "left" : "getFallbackAppWidgetId",
    "right" : "getFallbackAppWidgetId",
    "info" : "SimpleName[61110-61132]:SimpleName[62064-62086]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61135-61386]:Block[62089-62340]"
  }, {
    "left" : "return Settings.Secure.getIntForUser(\n                mContentResolver,\n                Settings.Secure.LOCK_SCREEN_FALLBACK_APPWIDGET_ID,\n                AppWidgetManager.INVALID_APPWIDGET_ID,\n                UserHandle.USER_CURRENT);",
    "right" : "return Settings.Secure.getIntForUser(\n                mContentResolver,\n                Settings.Secure.LOCK_SCREEN_FALLBACK_APPWIDGET_ID,\n                AppWidgetManager.INVALID_APPWIDGET_ID,\n                UserHandle.USER_CURRENT);",
    "info" : "ReturnStatement[61145-61380]:ReturnStatement[62099-62334]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[61392-61399]:Modifier[62346-62353]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[61400-61404]:PrimitiveType[62354-62358]"
  }, {
    "left" : "writeAppWidgets",
    "right" : "writeAppWidgets",
    "info" : "SimpleName[61405-61420]:SimpleName[62359-62374]"
  }, {
    "left" : "int[] appWidgetIds",
    "right" : "int[] appWidgetIds",
    "info" : "SingleVariableDeclaration[61421-61439]:SingleVariableDeclaration[62375-62393]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61441-61683]:Block[62395-62637]"
  }, {
    "left" : "Settings.Secure.putStringForUser(mContentResolver,\n                        Settings.Secure.LOCK_SCREEN_APPWIDGET_IDS,\n                        combineStrings(appWidgetIds, \",\"),\n                        UserHandle.USER_CURRENT);",
    "right" : "Settings.Secure.putStringForUser(mContentResolver,\n                        Settings.Secure.LOCK_SCREEN_APPWIDGET_IDS,\n                        combineStrings(appWidgetIds, \",\"),\n                        UserHandle.USER_CURRENT);",
    "info" : "ExpressionStatement[61451-61677]:ExpressionStatement[62405-62631]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[61737-61743]:Modifier[62691-62697]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[61744-61751]:PrimitiveType[62698-62705]"
  }, {
    "left" : "addAppWidget",
    "right" : "addAppWidget",
    "info" : "SimpleName[61752-61764]:SimpleName[62706-62718]"
  }, {
    "left" : "int widgetId",
    "right" : "int widgetId",
    "info" : "SingleVariableDeclaration[61765-61777]:SingleVariableDeclaration[62719-62731]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[61779-61788]:SingleVariableDeclaration[62733-62742]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61790-62404]:Block[62744-63358]"
  }, {
    "left" : "int[] widgets = getAppWidgets();",
    "right" : "int[] widgets = getAppWidgets();",
    "info" : "VariableDeclarationStatement[61800-61832]:VariableDeclarationStatement[62754-62786]"
  }, {
    "left" : "if (widgets == null)",
    "right" : "if (widgets == null)",
    "info" : "IfStatement[61841-61899]:IfStatement[62795-62853]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61862-61899]:Block[62816-62853]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[61876-61889]:ReturnStatement[62830-62843]"
  }, {
    "left" : "if (index < 0 || index > widgets.length)",
    "right" : "if (index < 0 || index > widgets.length)",
    "info" : "IfStatement[61908-61986]:IfStatement[62862-62940]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61949-61986]:Block[62903-62940]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[61963-61976]:ReturnStatement[62917-62930]"
  }, {
    "left" : "int[] newWidgets = new int[widgets.length + 1];",
    "right" : "int[] newWidgets = new int[widgets.length + 1];",
    "info" : "VariableDeclarationStatement[61995-62042]:VariableDeclarationStatement[62949-62996]"
  }, {
    "left" : "for (int i = 0, j = 0; i < newWidgets.length; i++)",
    "right" : "for (int i = 0, j = 0; i < newWidgets.length; i++)",
    "info" : "ForStatement[62051-62340]:ForStatement[63005-63294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62102-62340]:Block[63056-63294]"
  }, {
    "left" : "if (index == i)",
    "right" : "if (index == i)",
    "info" : "IfStatement[62116-62210]:IfStatement[63070-63164]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62132-62210]:Block[63086-63164]"
  }, {
    "left" : "newWidgets[i] = widgetId;",
    "right" : "newWidgets[i] = widgetId;",
    "info" : "ExpressionStatement[62150-62175]:ExpressionStatement[63104-63129]"
  }, {
    "left" : "i++;",
    "right" : "i++;",
    "info" : "ExpressionStatement[62192-62196]:ExpressionStatement[63146-63150]"
  }, {
    "left" : "if (i < newWidgets.length)",
    "right" : "if (i < newWidgets.length)",
    "info" : "IfStatement[62223-62330]:IfStatement[63177-63284]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62250-62330]:Block[63204-63284]"
  }, {
    "left" : "newWidgets[i] = widgets[j];",
    "right" : "newWidgets[i] = widgets[j];",
    "info" : "ExpressionStatement[62268-62295]:ExpressionStatement[63222-63249]"
  }, {
    "left" : "j++;",
    "right" : "j++;",
    "info" : "ExpressionStatement[62312-62316]:ExpressionStatement[63266-63270]"
  }, {
    "left" : "writeAppWidgets(newWidgets);",
    "right" : "writeAppWidgets(newWidgets);",
    "info" : "ExpressionStatement[62349-62377]:ExpressionStatement[63303-63331]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[62386-62398]:ReturnStatement[63340-63352]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[62410-62416]:Modifier[63364-63370]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[62417-62424]:PrimitiveType[63371-63378]"
  }, {
    "left" : "removeAppWidget",
    "right" : "removeAppWidget",
    "info" : "SimpleName[62425-62440]:SimpleName[63379-63394]"
  }, {
    "left" : "int widgetId",
    "right" : "int widgetId",
    "info" : "SingleVariableDeclaration[62441-62453]:SingleVariableDeclaration[63395-63407]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62455-63057]:Block[63409-64011]"
  }, {
    "left" : "int[] widgets = getAppWidgets();",
    "right" : "int[] widgets = getAppWidgets();",
    "info" : "VariableDeclarationStatement[62465-62497]:VariableDeclarationStatement[63419-63451]"
  }, {
    "left" : "if (widgets.length == 0)",
    "right" : "if (widgets.length == 0)",
    "info" : "IfStatement[62507-62569]:IfStatement[63461-63523]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62532-62569]:Block[63486-63523]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[62546-62559]:ReturnStatement[63500-63513]"
  }, {
    "left" : "int[] newWidgets = new int[widgets.length - 1];",
    "right" : "int[] newWidgets = new int[widgets.length - 1];",
    "info" : "VariableDeclarationStatement[62579-62626]:VariableDeclarationStatement[63533-63580]"
  }, {
    "left" : "for (int i = 0, j = 0; i < widgets.length; i++)",
    "right" : "for (int i = 0, j = 0; i < widgets.length; i++)",
    "info" : "ForStatement[62635-62993]:ForStatement[63589-63947]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62683-62993]:Block[63637-63947]"
  }, {
    "left" : "if (widgets[i] == widgetId)",
    "right" : "if (widgets[i] == widgetId)",
    "info" : "IfStatement[62697-62983]:IfStatement[63651-63937]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62725-62771]:Block[63679-63725]"
  }, {
    "left" : "if (j >= newWidgets.length)",
    "right" : "if (j >= newWidgets.length)",
    "info" : "IfStatement[62777-62983]:IfStatement[63731-63937]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62805-62897]:Block[63759-63851]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[62870-62883]:ReturnStatement[63824-63837]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62903-62983]:Block[63857-63937]"
  }, {
    "left" : "newWidgets[j] = widgets[i];",
    "right" : "newWidgets[j] = widgets[i];",
    "info" : "ExpressionStatement[62921-62948]:ExpressionStatement[63875-63902]"
  }, {
    "left" : "j++;",
    "right" : "j++;",
    "info" : "ExpressionStatement[62965-62969]:ExpressionStatement[63919-63923]"
  }, {
    "left" : "writeAppWidgets(newWidgets);",
    "right" : "writeAppWidgets(newWidgets);",
    "info" : "ExpressionStatement[63002-63030]:ExpressionStatement[63956-63984]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[63039-63051]:ReturnStatement[63993-64005]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[63063-63070]:Modifier[64017-64024]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[63071-63075]:PrimitiveType[64025-64029]"
  }, {
    "left" : "getLong",
    "right" : "getLong",
    "info" : "SimpleName[63076-63083]:SimpleName[64030-64037]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[63084-63107]:SingleVariableDeclaration[64038-64061]"
  }, {
    "left" : "long defaultValue",
    "right" : "long defaultValue",
    "info" : "SingleVariableDeclaration[63109-63126]:SingleVariableDeclaration[64063-64080]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[63128-63142]:SingleVariableDeclaration[64082-64096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63144-63337]:Block[64098-64291]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[63154-63331]:TryStatement[64108-64285]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63158-63259]:Block[64112-64213]"
  }, {
    "left" : "return getLockSettings().getLong(secureSettingKey, defaultValue, userHandle);",
    "right" : "return getLockSettings().getLong(secureSettingKey, defaultValue, userHandle);",
    "info" : "ReturnStatement[63172-63249]:ReturnStatement[64126-64203]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63287-63331]:Block[64241-64285]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[63301-63321]:ReturnStatement[64255-64275]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[63343-63350]:Modifier[64297-64304]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[63351-63355]:PrimitiveType[64305-64309]"
  }, {
    "left" : "getLong",
    "right" : "getLong",
    "info" : "SimpleName[63356-63363]:SimpleName[64310-64317]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[63364-63387]:SingleVariableDeclaration[64318-64341]"
  }, {
    "left" : "long defaultValue",
    "right" : "long defaultValue",
    "info" : "SingleVariableDeclaration[63389-63406]:SingleVariableDeclaration[64343-64360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63408-63638]:Block[64362-64592]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[63418-63632]:TryStatement[64372-64586]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63422-63560]:Block[64376-64514]"
  }, {
    "left" : "return getLockSettings().getLong(secureSettingKey, defaultValue,\n                    getCurrentOrCallingUserId());",
    "right" : "return getLockSettings().getLong(secureSettingKey, defaultValue,\n                    getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[63436-63550]:ReturnStatement[64390-64504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63588-63632]:Block[64542-64586]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[63602-63622]:ReturnStatement[64556-64576]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[63644-63651]:Modifier[64598-64605]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[63652-63656]:PrimitiveType[64606-64610]"
  }, {
    "left" : "setLong",
    "right" : "setLong",
    "info" : "SimpleName[63657-63664]:SimpleName[64611-64618]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[63665-63688]:SingleVariableDeclaration[64619-64642]"
  }, {
    "left" : "long value",
    "right" : "long value",
    "info" : "SingleVariableDeclaration[63690-63700]:SingleVariableDeclaration[64644-64654]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63702-63780]:Block[64656-64734]"
  }, {
    "left" : "setLong(secureSettingKey, value, getCurrentOrCallingUserId());",
    "right" : "setLong(secureSettingKey, value, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[63712-63774]:ExpressionStatement[64666-64728]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[63786-63793]:Modifier[64740-64747]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[63794-63798]:PrimitiveType[64748-64752]"
  }, {
    "left" : "setLong",
    "right" : "setLong",
    "info" : "SimpleName[63799-63806]:SimpleName[64753-64760]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[63807-63830]:SingleVariableDeclaration[64761-64784]"
  }, {
    "left" : "long value",
    "right" : "long value",
    "info" : "SingleVariableDeclaration[63832-63842]:SingleVariableDeclaration[64786-64796]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[63844-63858]:SingleVariableDeclaration[64798-64812]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63860-64109]:Block[64814-65063]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[63870-64103]:TryStatement[64824-65057]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63874-63961]:Block[64828-64915]"
  }, {
    "left" : "getLockSettings().setLong(secureSettingKey, value, userHandle);",
    "right" : "getLockSettings().setLong(secureSettingKey, value, userHandle);",
    "info" : "ExpressionStatement[63888-63951]:ExpressionStatement[64842-64905]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63989-64103]:Block[64943-65057]"
  }, {
    "left" : "Log.e(TAG, \"Couldn't write long \" + secureSettingKey + re);",
    "right" : "Log.e(TAG, \"Couldn't write long \" + secureSettingKey + re);",
    "info" : "ExpressionStatement[64034-64093]:ExpressionStatement[64988-65047]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[64115-64122]:Modifier[65069-65076]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[64123-64129]:SimpleType[65077-65083]"
  }, {
    "left" : "getString",
    "right" : "getString",
    "info" : "SimpleName[64130-64139]:SimpleName[65084-65093]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[64140-64163]:SingleVariableDeclaration[65094-65117]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64165-64245]:Block[65119-65199]"
  }, {
    "left" : "return getString(secureSettingKey, getCurrentOrCallingUserId());",
    "right" : "return getString(secureSettingKey, getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[64175-64239]:ReturnStatement[65129-65193]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[64251-64258]:Modifier[65205-65212]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[64259-64265]:SimpleType[65213-65219]"
  }, {
    "left" : "getString",
    "right" : "getString",
    "info" : "SimpleName[64266-64275]:SimpleName[65220-65229]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[64276-64299]:SingleVariableDeclaration[65230-65253]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[64301-64315]:SingleVariableDeclaration[65255-65269]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64317-64496]:Block[65271-65450]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[64327-64490]:TryStatement[65281-65444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64331-64426]:Block[65285-65380]"
  }, {
    "left" : "return getLockSettings().getString(secureSettingKey, null, userHandle);",
    "right" : "return getLockSettings().getString(secureSettingKey, null, userHandle);",
    "info" : "ReturnStatement[64345-64416]:ReturnStatement[65299-65370]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64454-64490]:Block[65408-65444]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[64468-64480]:ReturnStatement[65422-65434]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[64502-64509]:Modifier[65456-65463]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[64510-64514]:PrimitiveType[65464-65468]"
  }, {
    "left" : "setString",
    "right" : "setString",
    "info" : "SimpleName[64515-64524]:SimpleName[65469-65478]"
  }, {
    "left" : "String secureSettingKey",
    "right" : "String secureSettingKey",
    "info" : "SingleVariableDeclaration[64525-64548]:SingleVariableDeclaration[65479-65502]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[64550-64562]:SingleVariableDeclaration[65504-65516]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[64564-64578]:SingleVariableDeclaration[65518-65532]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64580-64833]:Block[65534-65787]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[64590-64827]:TryStatement[65544-65781]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64594-64683]:Block[65548-65637]"
  }, {
    "left" : "getLockSettings().setString(secureSettingKey, value, userHandle);",
    "right" : "getLockSettings().setString(secureSettingKey, value, userHandle);",
    "info" : "ExpressionStatement[64608-64673]:ExpressionStatement[65562-65627]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64711-64827]:Block[65665-65781]"
  }, {
    "left" : "Log.e(TAG, \"Couldn't write string \" + secureSettingKey + re);",
    "right" : "Log.e(TAG, \"Couldn't write string \" + secureSettingKey + re);",
    "info" : "ExpressionStatement[64756-64817]:ExpressionStatement[65710-65771]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[64839-64845]:Modifier[65793-65799]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[64846-64853]:PrimitiveType[65800-65807]"
  }, {
    "left" : "isSecure",
    "right" : "isSecure",
    "info" : "SimpleName[64854-64862]:SimpleName[65808-65816]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64865-64926]:Block[65819-65880]"
  }, {
    "left" : "return isSecure(getCurrentOrCallingUserId());",
    "right" : "return isSecure(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[64875-64920]:ReturnStatement[65829-65874]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[64932-64938]:Modifier[65886-65892]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[64939-64946]:PrimitiveType[65893-65900]"
  }, {
    "left" : "isSecure",
    "right" : "isSecure",
    "info" : "SimpleName[64947-64955]:SimpleName[65901-65909]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[64956-64966]:SingleVariableDeclaration[65910-65920]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64968-65724]:Block[65922-66678]"
  }, {
    "left" : "long mode = getKeyguardStoredPasswordQuality(userId);",
    "right" : "long mode = getKeyguardStoredPasswordQuality(userId);",
    "info" : "VariableDeclarationStatement[64978-65031]:VariableDeclarationStatement[65932-65985]"
  }, {
    "left" : "final boolean isPattern = mode == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "right" : "final boolean isPattern = mode == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING;",
    "info" : "VariableDeclarationStatement[65040-65121]:VariableDeclarationStatement[65994-66075]"
  }, {
    "left" : "final boolean isPassword = mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "right" : "final boolean isPassword = mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC\n                || mode == DevicePolicyManager.PASSWORD_QUALITY_COMPLEX;",
    "info" : "VariableDeclarationStatement[65130-65514]:VariableDeclarationStatement[66084-66468]"
  }, {
    "left" : "final boolean secure =\n                isPattern && isLockPatternEnabled(userId) && savedPatternExists(userId)\n                || isPassword && savedPasswordExists(userId);",
    "right" : "final boolean secure =\n                isPattern && isLockPatternEnabled(userId) && savedPatternExists(userId)\n                || isPassword && savedPasswordExists(userId);",
    "info" : "VariableDeclarationStatement[65523-65695]:VariableDeclarationStatement[66477-66649]"
  }, {
    "left" : "return secure;",
    "right" : "return secure;",
    "info" : "ReturnStatement[65704-65718]:ReturnStatement[66658-66672]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[66269-66275]:Modifier[67223-67229]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[66276-66280]:PrimitiveType[67230-67234]"
  }, {
    "left" : "updateEmergencyCallButtonState",
    "right" : "updateEmergencyCallButtonState",
    "info" : "SimpleName[66281-66311]:SimpleName[67235-67265]"
  }, {
    "left" : "Button button",
    "right" : "Button button",
    "info" : "SingleVariableDeclaration[66312-66325]:SingleVariableDeclaration[67266-67279]"
  }, {
    "left" : "boolean shown",
    "right" : "boolean shown",
    "info" : "SingleVariableDeclaration[66327-66340]:SingleVariableDeclaration[67281-67294]"
  }, {
    "left" : "boolean showIcon",
    "right" : "boolean showIcon",
    "info" : "SingleVariableDeclaration[66342-66358]:SingleVariableDeclaration[67296-67312]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66360-67157]:Block[67314-68111]"
  }, {
    "left" : "if (isEmergencyCallCapable() && shown)",
    "right" : "if (isEmergencyCallCapable() && shown)",
    "info" : "IfStatement[66370-66550]:IfStatement[67324-67504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66409-66468]:Block[67363-67422]"
  }, {
    "left" : "button.setVisibility(View.VISIBLE);",
    "right" : "button.setVisibility(View.VISIBLE);",
    "info" : "ExpressionStatement[66423-66458]:ExpressionStatement[67377-67412]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66474-66550]:Block[67428-67504]"
  }, {
    "left" : "button.setVisibility(View.GONE);",
    "right" : "button.setVisibility(View.GONE);",
    "info" : "ExpressionStatement[66488-66520]:ExpressionStatement[67442-67474]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[66533-66540]:ReturnStatement[67487-67494]"
  }, {
    "left" : "int textId;",
    "right" : "int textId;",
    "info" : "VariableDeclarationStatement[66560-66571]:VariableDeclarationStatement[67514-67525]"
  }, {
    "left" : "if (isInCall())",
    "right" : "if (isInCall())",
    "info" : "IfStatement[66580-67119]:IfStatement[67534-68073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66596-66889]:Block[67550-67843]"
  }, {
    "left" : "textId = R.string.lockscreen_return_to_call;",
    "right" : "textId = R.string.lockscreen_return_to_call;",
    "info" : "ExpressionStatement[66672-66716]:ExpressionStatement[67626-67670]"
  }, {
    "left" : "int phoneCallIcon = showIcon ? R.drawable.stat_sys_phone_call : 0;",
    "right" : "int phoneCallIcon = showIcon ? R.drawable.stat_sys_phone_call : 0;",
    "info" : "VariableDeclarationStatement[66729-66795]:VariableDeclarationStatement[67683-67749]"
  }, {
    "left" : "button.setCompoundDrawablesWithIntrinsicBounds(phoneCallIcon, 0, 0, 0);",
    "right" : "button.setCompoundDrawablesWithIntrinsicBounds(phoneCallIcon, 0, 0, 0);",
    "info" : "ExpressionStatement[66808-66879]:ExpressionStatement[67762-67833]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66895-67119]:Block[67849-68073]"
  }, {
    "left" : "textId = R.string.lockscreen_emergency_call;",
    "right" : "textId = R.string.lockscreen_emergency_call;",
    "info" : "ExpressionStatement[66909-66953]:ExpressionStatement[67863-67907]"
  }, {
    "left" : "int emergencyIcon = showIcon ? R.drawable.ic_emergency : 0;",
    "right" : "int emergencyIcon = showIcon ? R.drawable.ic_emergency : 0;",
    "info" : "VariableDeclarationStatement[66966-67025]:VariableDeclarationStatement[67920-67979]"
  }, {
    "left" : "button.setCompoundDrawablesWithIntrinsicBounds(emergencyIcon, 0, 0, 0);",
    "right" : "button.setCompoundDrawablesWithIntrinsicBounds(emergencyIcon, 0, 0, 0);",
    "info" : "ExpressionStatement[67038-67109]:ExpressionStatement[67992-68063]"
  }, {
    "left" : "button.setText(textId);",
    "right" : "button.setText(textId);",
    "info" : "ExpressionStatement[67128-67151]:ExpressionStatement[68082-68105]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[67294-67300]:Modifier[68248-68254]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[67301-67305]:PrimitiveType[68255-68259]"
  }, {
    "left" : "resumeCall",
    "right" : "resumeCall",
    "info" : "SimpleName[67306-67316]:SimpleName[68260-68270]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67319-67380]:Block[68273-68334]"
  }, {
    "left" : "getTelecommManager().showInCallScreen(false);",
    "right" : "getTelecommManager().showInCallScreen(false);",
    "info" : "ExpressionStatement[67329-67374]:ExpressionStatement[68283-68328]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[67497-67503]:Modifier[68451-68457]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[67504-67511]:PrimitiveType[68458-68465]"
  }, {
    "left" : "isInCall",
    "right" : "isInCall",
    "info" : "SimpleName[67512-67520]:SimpleName[68466-68474]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67523-67578]:Block[68477-68532]"
  }, {
    "left" : "return getTelecommManager().isInCall();",
    "right" : "return getTelecommManager().isInCall();",
    "info" : "ReturnStatement[67533-67572]:ReturnStatement[68487-68526]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[67584-67591]:Modifier[68538-68545]"
  }, {
    "left" : "TelecomManager",
    "right" : "TelecomManager",
    "info" : "SimpleType[67592-67606]:SimpleType[68546-68560]"
  }, {
    "left" : "getTelecommManager",
    "right" : "getTelecommManager",
    "info" : "SimpleName[67607-67625]:SimpleName[68561-68579]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67628-67719]:Block[68582-68673]"
  }, {
    "left" : "return (TelecomManager) mContext.getSystemService(Context.TELECOM_SERVICE);",
    "right" : "return (TelecomManager) mContext.getSystemService(Context.TELECOM_SERVICE);",
    "info" : "ReturnStatement[67638-67713]:ReturnStatement[68592-68667]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[67725-67732]:Modifier[68679-68686]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[67733-67737]:PrimitiveType[68687-68691]"
  }, {
    "left" : "finishBiometricWeak",
    "right" : "finishBiometricWeak",
    "info" : "SimpleName[67738-67757]:SimpleName[68692-68711]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[67758-67768]:SingleVariableDeclaration[68712-68722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67770-68178]:Block[68724-69132]"
  }, {
    "left" : "setBoolean(BIOMETRIC_WEAK_EVER_CHOSEN_KEY, true, userId);",
    "right" : "setBoolean(BIOMETRIC_WEAK_EVER_CHOSEN_KEY, true, userId);",
    "info" : "ExpressionStatement[67780-67837]:ExpressionStatement[68734-68791]"
  }, {
    "left" : "Intent intent = new Intent();",
    "right" : "Intent intent = new Intent();",
    "info" : "VariableDeclarationStatement[67965-67994]:VariableDeclarationStatement[68919-68948]"
  }, {
    "left" : "intent.setClassName(\"com.android.facelock\",\n                \"com.android.facelock.SetupEndScreen\");",
    "right" : "intent.setClassName(\"com.android.facelock\",\n                \"com.android.facelock.SetupEndScreen\");",
    "info" : "ExpressionStatement[68003-68102]:ExpressionStatement[68957-69056]"
  }, {
    "left" : "mContext.startActivityAsUser(intent, new UserHandle(userId));",
    "right" : "mContext.startActivityAsUser(intent, new UserHandle(userId));",
    "info" : "ExpressionStatement[68111-68172]:ExpressionStatement[69065-69126]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[68184-68190]:Modifier[69138-69144]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[68191-68195]:PrimitiveType[69145-69149]"
  }, {
    "left" : "setPowerButtonInstantlyLocks",
    "right" : "setPowerButtonInstantlyLocks",
    "info" : "SimpleName[68196-68224]:SimpleName[69150-69178]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[68225-68240]:SingleVariableDeclaration[69179-69194]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68242-68319]:Block[69196-69273]"
  }, {
    "left" : "setBoolean(LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS, enabled);",
    "right" : "setBoolean(LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS, enabled);",
    "info" : "ExpressionStatement[68252-68313]:ExpressionStatement[69206-69267]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[68325-68331]:Modifier[69279-69285]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[68332-68339]:PrimitiveType[69286-69293]"
  }, {
    "left" : "getPowerButtonInstantlyLocks",
    "right" : "getPowerButtonInstantlyLocks",
    "info" : "SimpleName[68340-68368]:SimpleName[69294-69322]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68371-68452]:Block[69325-69406]"
  }, {
    "left" : "return getBoolean(LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS, true);",
    "right" : "return getBoolean(LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS, true);",
    "info" : "ReturnStatement[68381-68446]:ReturnStatement[69335-69400]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[68458-68464]:Modifier[69412-69418]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[68465-68471]:Modifier[69419-69425]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[68472-68479]:PrimitiveType[69426-69433]"
  }, {
    "left" : "isSafeModeEnabled",
    "right" : "isSafeModeEnabled",
    "info" : "SimpleName[68480-68497]:SimpleName[69434-69451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68500-68754]:Block[69454-69708]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[68510-68726]:TryStatement[69464-69680]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68514-68655]:Block[69468-69609]"
  }, {
    "left" : "return IWindowManager.Stub.asInterface(\n                    ServiceManager.getService(\"window\")).isSafeModeEnabled();",
    "right" : "return IWindowManager.Stub.asInterface(\n                    ServiceManager.getService(\"window\")).isSafeModeEnabled();",
    "info" : "ReturnStatement[68528-68645]:ReturnStatement[69482-69599]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68682-68726]:Block[69636-69680]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[68735-68748]:ReturnStatement[69689-69702]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[68915-68921]:Modifier[69869-69875]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[68922-68929]:PrimitiveType[69876-69883]"
  }, {
    "left" : "hasWidgetsEnabledInKeyguard",
    "right" : "hasWidgetsEnabledInKeyguard",
    "info" : "SimpleName[68930-68957]:SimpleName[69884-69911]"
  }, {
    "left" : "int userid",
    "right" : "int userid",
    "info" : "SingleVariableDeclaration[68958-68968]:SingleVariableDeclaration[69912-69922]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68970-69184]:Block[69924-70138]"
  }, {
    "left" : "int widgets[] = getAppWidgets(userid);",
    "right" : "int widgets[] = getAppWidgets(userid);",
    "info" : "VariableDeclarationStatement[68980-69018]:VariableDeclarationStatement[69934-69972]"
  }, {
    "left" : "for (int i = 0; i < widgets.length; i++)",
    "right" : "for (int i = 0; i < widgets.length; i++)",
    "info" : "ForStatement[69027-69156]:ForStatement[69981-70110]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69068-69156]:Block[70022-70110]"
  }, {
    "left" : "if (widgets[i] > 0)",
    "right" : "if (widgets[i] > 0)",
    "info" : "IfStatement[69082-69146]:IfStatement[70036-70100]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69102-69146]:Block[70056-70100]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[69120-69132]:ReturnStatement[70074-70086]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[69165-69178]:ReturnStatement[70119-70132]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69190-69196]:Modifier[70144-70150]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[69197-69204]:PrimitiveType[70151-70158]"
  }, {
    "left" : "getWidgetsEnabled",
    "right" : "getWidgetsEnabled",
    "info" : "SimpleName[69205-69222]:SimpleName[70159-70176]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69225-69295]:Block[70179-70249]"
  }, {
    "left" : "return getWidgetsEnabled(getCurrentOrCallingUserId());",
    "right" : "return getWidgetsEnabled(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[69235-69289]:ReturnStatement[70189-70243]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69301-69307]:Modifier[70255-70261]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[69308-69315]:PrimitiveType[70262-70269]"
  }, {
    "left" : "getWidgetsEnabled",
    "right" : "getWidgetsEnabled",
    "info" : "SimpleName[69316-69333]:SimpleName[70270-70287]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[69334-69344]:SingleVariableDeclaration[70288-70298]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69346-69423]:Block[70300-70377]"
  }, {
    "left" : "return getBoolean(LOCKSCREEN_WIDGETS_ENABLED, false, userId);",
    "right" : "return getBoolean(LOCKSCREEN_WIDGETS_ENABLED, false, userId);",
    "info" : "ReturnStatement[69356-69417]:ReturnStatement[70310-70371]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69429-69435]:Modifier[70383-70389]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[69436-69440]:PrimitiveType[70390-70394]"
  }, {
    "left" : "setWidgetsEnabled",
    "right" : "setWidgetsEnabled",
    "info" : "SimpleName[69441-69458]:SimpleName[70395-70412]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[69459-69474]:SingleVariableDeclaration[70413-70428]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69476-69548]:Block[70430-70502]"
  }, {
    "left" : "setWidgetsEnabled(enabled, getCurrentOrCallingUserId());",
    "right" : "setWidgetsEnabled(enabled, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[69486-69542]:ExpressionStatement[70440-70496]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69554-69560]:Modifier[70508-70514]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[69561-69565]:PrimitiveType[70515-70519]"
  }, {
    "left" : "setWidgetsEnabled",
    "right" : "setWidgetsEnabled",
    "info" : "SimpleName[69566-69583]:SimpleName[70520-70537]"
  }, {
    "left" : "boolean enabled",
    "right" : "boolean enabled",
    "info" : "SingleVariableDeclaration[69584-69599]:SingleVariableDeclaration[70538-70553]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[69601-69611]:SingleVariableDeclaration[70555-70565]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69613-69685]:Block[70567-70639]"
  }, {
    "left" : "setBoolean(LOCKSCREEN_WIDGETS_ENABLED, enabled, userId);",
    "right" : "setBoolean(LOCKSCREEN_WIDGETS_ENABLED, enabled, userId);",
    "info" : "ExpressionStatement[69623-69679]:ExpressionStatement[70577-70633]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69691-69697]:Modifier[70645-70651]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[69698-69702]:PrimitiveType[70652-70656]"
  }, {
    "left" : "setEnabledTrustAgents",
    "right" : "setEnabledTrustAgents",
    "info" : "SimpleName[69703-69724]:SimpleName[70657-70678]"
  }, {
    "left" : "Collection<ComponentName> activeTrustAgents",
    "right" : "Collection<ComponentName> activeTrustAgents",
    "info" : "SingleVariableDeclaration[69725-69768]:SingleVariableDeclaration[70679-70722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69770-69856]:Block[70724-70810]"
  }, {
    "left" : "setEnabledTrustAgents(activeTrustAgents, getCurrentOrCallingUserId());",
    "right" : "setEnabledTrustAgents(activeTrustAgents, getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[69780-69850]:ExpressionStatement[70734-70804]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69862-69868]:Modifier[70816-70822]"
  }, {
    "left" : "List<ComponentName>",
    "right" : "List<ComponentName>",
    "info" : "ParameterizedType[69869-69888]:ParameterizedType[70823-70842]"
  }, {
    "left" : "getEnabledTrustAgents",
    "right" : "getEnabledTrustAgents",
    "info" : "SimpleName[69889-69910]:SimpleName[70843-70864]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69913-69987]:Block[70867-70941]"
  }, {
    "left" : "return getEnabledTrustAgents(getCurrentOrCallingUserId());",
    "right" : "return getEnabledTrustAgents(getCurrentOrCallingUserId());",
    "info" : "ReturnStatement[69923-69981]:ReturnStatement[70877-70935]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69993-69999]:Modifier[70947-70953]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[70000-70004]:PrimitiveType[70954-70958]"
  }, {
    "left" : "setEnabledTrustAgents",
    "right" : "setEnabledTrustAgents",
    "info" : "SimpleName[70005-70026]:SimpleName[70959-70980]"
  }, {
    "left" : "Collection<ComponentName> activeTrustAgents",
    "right" : "Collection<ComponentName> activeTrustAgents",
    "info" : "SingleVariableDeclaration[70027-70070]:SingleVariableDeclaration[70981-71024]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[70072-70082]:SingleVariableDeclaration[71026-71036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70084-70485]:Block[71038-71439]"
  }, {
    "left" : "StringBuilder sb = new StringBuilder();",
    "right" : "StringBuilder sb = new StringBuilder();",
    "info" : "VariableDeclarationStatement[70094-70133]:VariableDeclarationStatement[71048-71087]"
  }, {
    "left" : "for (ComponentName cn : activeTrustAgents)",
    "right" : "for (ComponentName cn : activeTrustAgents)",
    "info" : "EnhancedForStatement[70142-70327]:EnhancedForStatement[71096-71281]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70185-70327]:Block[71139-71281]"
  }, {
    "left" : "if (sb.length() > 0)",
    "right" : "if (sb.length() > 0)",
    "info" : "IfStatement[70199-70267]:IfStatement[71153-71221]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70220-70267]:Block[71174-71221]"
  }, {
    "left" : "sb.append(',');",
    "right" : "sb.append(',');",
    "info" : "ExpressionStatement[70238-70253]:ExpressionStatement[71192-71207]"
  }, {
    "left" : "sb.append(cn.flattenToShortString());",
    "right" : "sb.append(cn.flattenToShortString());",
    "info" : "ExpressionStatement[70280-70317]:ExpressionStatement[71234-71271]"
  }, {
    "left" : "setString(ENABLED_TRUST_AGENTS, sb.toString(), userId);",
    "right" : "setString(ENABLED_TRUST_AGENTS, sb.toString(), userId);",
    "info" : "ExpressionStatement[70336-70391]:ExpressionStatement[71290-71345]"
  }, {
    "left" : "getTrustManager().reportEnabledTrustAgentsChanged(getCurrentOrCallingUserId());",
    "right" : "getTrustManager().reportEnabledTrustAgentsChanged(getCurrentOrCallingUserId());",
    "info" : "ExpressionStatement[70400-70479]:ExpressionStatement[71354-71433]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[70491-70497]:Modifier[71445-71451]"
  }, {
    "left" : "List<ComponentName>",
    "right" : "List<ComponentName>",
    "info" : "ParameterizedType[70498-70517]:ParameterizedType[71452-71471]"
  }, {
    "left" : "getEnabledTrustAgents",
    "right" : "getEnabledTrustAgents",
    "info" : "SimpleName[70518-70539]:SimpleName[71472-71493]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[70540-70550]:SingleVariableDeclaration[71494-71504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70552-71062]:Block[71506-72016]"
  }, {
    "left" : "String serialized = getString(ENABLED_TRUST_AGENTS, userId);",
    "right" : "String serialized = getString(ENABLED_TRUST_AGENTS, userId);",
    "info" : "VariableDeclarationStatement[70562-70622]:VariableDeclarationStatement[71516-71576]"
  }, {
    "left" : "if (TextUtils.isEmpty(serialized))",
    "right" : "if (TextUtils.isEmpty(serialized))",
    "info" : "IfStatement[70631-70702]:IfStatement[71585-71656]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70666-70702]:Block[71620-71656]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[70680-70692]:ReturnStatement[71634-71646]"
  }, {
    "left" : "String[] split = serialized.split(\",\");",
    "right" : "String[] split = serialized.split(\",\");",
    "info" : "VariableDeclarationStatement[70711-70750]:VariableDeclarationStatement[71665-71704]"
  }, {
    "left" : "ArrayList<ComponentName> activeTrustAgents = new ArrayList<ComponentName>(split.length);",
    "right" : "ArrayList<ComponentName> activeTrustAgents = new ArrayList<ComponentName>(split.length);",
    "info" : "VariableDeclarationStatement[70759-70847]:VariableDeclarationStatement[71713-71801]"
  }, {
    "left" : "for (String s : split)",
    "right" : "for (String s : split)",
    "info" : "EnhancedForStatement[70856-71022]:EnhancedForStatement[71810-71976]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70879-71022]:Block[71833-71976]"
  }, {
    "left" : "if (!TextUtils.isEmpty(s))",
    "right" : "if (!TextUtils.isEmpty(s))",
    "info" : "IfStatement[70893-71012]:IfStatement[71847-71966]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70920-71012]:Block[71874-71966]"
  }, {
    "left" : "activeTrustAgents.add(ComponentName.unflattenFromString(s));",
    "right" : "activeTrustAgents.add(ComponentName.unflattenFromString(s));",
    "info" : "ExpressionStatement[70938-70998]:ExpressionStatement[71892-71952]"
  }, {
    "left" : "return activeTrustAgents;",
    "right" : "return activeTrustAgents;",
    "info" : "ReturnStatement[71031-71056]:ReturnStatement[71985-72010]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[71161-71167]:Modifier[72115-72121]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[71168-71172]:PrimitiveType[72122-72126]"
  }, {
    "left" : "requireCredentialEntry",
    "right" : "requireCredentialEntry",
    "info" : "SimpleName[71173-71195]:SimpleName[72127-72149]"
  }, {
    "left" : "int userId",
    "right" : "int userId",
    "info" : "SingleVariableDeclaration[71196-71206]:SingleVariableDeclaration[72150-72160]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71208-71279]:Block[72162-72233]"
  }, {
    "left" : "getTrustManager().reportRequireCredentialEntry(userId);",
    "right" : "getTrustManager().reportRequireCredentialEntry(userId);",
    "info" : "ExpressionStatement[71218-71273]:ExpressionStatement[72172-72227]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[71285-71292]:Modifier[72239-72246]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[71293-71297]:PrimitiveType[72247-72251]"
  }, {
    "left" : "onAfterChangingPassword",
    "right" : "onAfterChangingPassword",
    "info" : "SimpleName[71298-71321]:SimpleName[72252-72275]"
  }, {
    "left" : "int userHandle",
    "right" : "int userHandle",
    "info" : "SingleVariableDeclaration[71322-71336]:SingleVariableDeclaration[72276-72290]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71338-71416]:Block[72292-72370]"
  }, {
    "left" : "getTrustManager().reportEnabledTrustAgentsChanged(userHandle);",
    "right" : "getTrustManager().reportEnabledTrustAgentsChanged(userHandle);",
    "info" : "ExpressionStatement[71348-71410]:ExpressionStatement[72302-72364]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[71422-71428]:Modifier[72376-72382]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[71429-71436]:PrimitiveType[72383-72390]"
  }, {
    "left" : "isCredentialRequiredToDecrypt",
    "right" : "isCredentialRequiredToDecrypt",
    "info" : "SimpleName[71437-71466]:SimpleName[72391-72420]"
  }, {
    "left" : "boolean defaultValue",
    "right" : "boolean defaultValue",
    "info" : "SingleVariableDeclaration[71467-71487]:SingleVariableDeclaration[72421-72441]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71489-71687]:Block[72443-72641]"
  }, {
    "left" : "final int value = Settings.Global.getInt(mContentResolver,\n                Settings.Global.REQUIRE_PASSWORD_TO_DECRYPT, -1);",
    "right" : "final int value = Settings.Global.getInt(mContentResolver,\n                Settings.Global.REQUIRE_PASSWORD_TO_DECRYPT, -1);",
    "info" : "VariableDeclarationStatement[71499-71623]:VariableDeclarationStatement[72453-72577]"
  }, {
    "left" : "return value == -1 ? defaultValue : (value != 0);",
    "right" : "return value == -1 ? defaultValue : (value != 0);",
    "info" : "ReturnStatement[71632-71681]:ReturnStatement[72586-72635]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[71693-71699]:Modifier[72647-72653]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[71700-71704]:PrimitiveType[72654-72658]"
  }, {
    "left" : "setCredentialRequiredToDecrypt",
    "right" : "setCredentialRequiredToDecrypt",
    "info" : "SimpleName[71705-71735]:SimpleName[72659-72689]"
  }, {
    "left" : "boolean required",
    "right" : "boolean required",
    "info" : "SingleVariableDeclaration[71736-71752]:SingleVariableDeclaration[72690-72706]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71754-72078]:Block[72708-73032]"
  }, {
    "left" : "if (getCurrentUser() != UserHandle.USER_OWNER)",
    "right" : "if (getCurrentUser() != UserHandle.USER_OWNER)",
    "info" : "IfStatement[71764-71930]:IfStatement[72718-72884]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71811-71930]:Block[72765-72884]"
  }, {
    "left" : "Log.w(TAG, \"Only device owner may call setCredentialRequiredForDecrypt()\");",
    "right" : "Log.w(TAG, \"Only device owner may call setCredentialRequiredForDecrypt()\");",
    "info" : "ExpressionStatement[71825-71900]:ExpressionStatement[72779-72854]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[71913-71920]:ReturnStatement[72867-72874]"
  }, {
    "left" : "Settings.Global.putInt(mContext.getContentResolver(),\n                Settings.Global.REQUIRE_PASSWORD_TO_DECRYPT, required ? 1 : 0);",
    "right" : "Settings.Global.putInt(mContext.getContentResolver(),\n                Settings.Global.REQUIRE_PASSWORD_TO_DECRYPT, required ? 1 : 0);",
    "info" : "ExpressionStatement[71939-72072]:ExpressionStatement[72893-73026]"
  } ]
}