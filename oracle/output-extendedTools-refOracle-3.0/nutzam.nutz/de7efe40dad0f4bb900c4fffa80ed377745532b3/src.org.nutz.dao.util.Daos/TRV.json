{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final Log log = Logs.get();",
      "right" : "private static final Log log = Logs.get();",
      "info" : "FieldDeclaration[1609-1651]:FieldDeclaration[1687-1729]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[5924-6130]:MethodDeclaration[6582-6788]"
    }, {
      "left" : "public static <T> List<T> query(Dao dao, Class<T> classOfT, String sql, Condition cnd, Pager pager)",
      "right" : "public static <T> List<T> query(Dao dao,\n                                    Class<T> classOfT,\n                                    String sql,\n                                    Condition cnd,\n                                    Pager pager)",
      "info" : "MethodDeclaration[9008-9385]:MethodDeclaration[9761-10282]"
    }, {
      "left" : "public static long queryCount(Dao dao, String sql)",
      "right" : "public static long queryCount(Dao dao, String sql)",
      "info" : "MethodDeclaration[9395-9659]:MethodDeclaration[10288-10652]"
    }, {
      "left" : "public static int updateBySpecialChain(Dao dao, Entity en, String tableName, Chain chain, Condition cnd)",
      "right" : "public static int updateBySpecialChain(Dao dao,\n                                           Entity en,\n                                           String tableName,\n                                           Chain chain,\n                                           Condition cnd)",
      "info" : "MethodDeclaration[9669-12342]:MethodDeclaration[10658-13760]"
    }, {
      "left" : "public void invoke(Connection conn) throws Exception",
      "right" : "public void invoke(Connection conn) throws Exception",
      "info" : "MethodDeclaration[11865-12300]:MethodDeclaration[13267-13718]"
    }, {
      "left" : "public static void insertBySpecialChain(Dao dao, Entity en, String tableName, Chain chain)",
      "right" : "public static void insertBySpecialChain(Dao dao, Entity en, String tableName, Chain chain)",
      "info" : "MethodDeclaration[12352-14764]:MethodDeclaration[13766-16188]"
    }, {
      "left" : "public void invoke(Connection conn) throws Exception",
      "right" : "public void invoke(Connection conn) throws Exception",
      "info" : "MethodDeclaration[14327-14746]:MethodDeclaration[15735-16170]"
    }, {
      "left" : "private static Class<?>[] iz = new Class<?>[]{Dao.class};",
      "right" : "private static Class<?>[] iz = new Class<?>[]{Dao.class};",
      "info" : "FieldDeclaration[15204-15261]:FieldDeclaration[16715-16772]"
    }, {
      "left" : "public static boolean filterFields(Object obj, FieldMatcher matcher, Dao dao, Callback2<MappingField, Object> callback)",
      "right" : "public static boolean filterFields(Object obj,\n                                       FieldMatcher matcher,\n                                       Dao dao,\n                                       Callback2<MappingField, Object> callback)",
      "info" : "MethodDeclaration[16193-18066]:MethodDeclaration[17960-19943]"
    }, {
      "left" : "ExtDaoInvocationHandler",
      "right" : "ExtDaoInvocationHandler",
      "info" : "TypeDeclaration[21750-22817]:TypeDeclaration[26915-28316]"
    }, {
      "left" : "protected ExtDaoInvocationHandler(Dao dao, FieldFilter filter, Object tableName)",
      "right" : "protected ExtDaoInvocationHandler(Dao dao, FieldFilter filter, Object tableName)",
      "info" : "MethodDeclaration[21814-21971]:MethodDeclaration[26981-27159]"
    }, {
      "left" : "public Dao dao;",
      "right" : "public Dao dao;",
      "info" : "FieldDeclaration[21975-21990]:FieldDeclaration[27165-27180]"
    }, {
      "left" : "public FieldFilter filter;",
      "right" : "public FieldFilter filter;",
      "info" : "FieldDeclaration[21992-22018]:FieldDeclaration[27185-27211]"
    }, {
      "left" : "public Object tableName;",
      "right" : "public Object tableName;",
      "info" : "FieldDeclaration[22020-22044]:FieldDeclaration[27216-27240]"
    }, {
      "left" : "public Object invoke(Object proxy, final Method method, final Object[] args) throws Throwable",
      "right" : "public Object invoke(Object proxy, final Method method, final Object[] args) throws Throwable",
      "info" : "MethodDeclaration[22048-22815]:MethodDeclaration[27246-28314]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[22204-22534]:MethodDeclaration[27415-27910]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[22634-22679]:MethodDeclaration[28043-28115]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5924-5930]:Modifier[6582-6588]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5931-5935]:PrimitiveType[6589-6593]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[5936-5939]:SimpleName[6594-6597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5942-6130]:Block[6600-6788]"
    }, {
      "left" : "List<T> list = dao.query(classOfT, cnd, pager);",
      "right" : "List<T> list = dao.query(classOfT, cnd, pager);",
      "info" : "VariableDeclarationStatement[5960-6007]:VariableDeclarationStatement[6618-6665]"
    }, {
      "left" : "for (T t : list)\n                    dao.fetchLinks(t, regex);",
      "right" : "for (T t : list)\n                    dao.fetchLinks(t, regex);",
      "info" : "EnhancedForStatement[6024-6086]:EnhancedForStatement[6682-6744]"
    }, {
      "left" : "dao.fetchLinks(t, regex);",
      "right" : "dao.fetchLinks(t, regex);",
      "info" : "ExpressionStatement[6061-6086]:ExpressionStatement[6719-6744]"
    }, {
      "left" : "setObj(list);",
      "right" : "setObj(list);",
      "info" : "ExpressionStatement[6103-6116]:ExpressionStatement[6761-6774]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9059-9065]:Modifier[9812-9818]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9066-9072]:Modifier[9819-9825]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[9074-9075]:TypeParameter[9827-9828]"
    }, {
      "left" : "List<T>",
      "right" : "List<T>",
      "info" : "ParameterizedType[9077-9084]:ParameterizedType[9830-9837]"
    }, {
      "left" : "query",
      "right" : "query",
      "info" : "SimpleName[9085-9090]:SimpleName[9838-9843]"
    }, {
      "left" : "Dao dao",
      "right" : "Dao dao",
      "info" : "SingleVariableDeclaration[9091-9098]:SingleVariableDeclaration[9844-9851]"
    }, {
      "left" : "Class<T> classOfT",
      "right" : "Class<T> classOfT",
      "info" : "SingleVariableDeclaration[9100-9117]:SingleVariableDeclaration[9889-9906]"
    }, {
      "left" : "String sql",
      "right" : "String sql",
      "info" : "SingleVariableDeclaration[9119-9129]:SingleVariableDeclaration[9944-9954]"
    }, {
      "left" : "Condition cnd",
      "right" : "Condition cnd",
      "info" : "SingleVariableDeclaration[9131-9144]:SingleVariableDeclaration[9992-10005]"
    }, {
      "left" : "Pager pager",
      "right" : "Pager pager",
      "info" : "SingleVariableDeclaration[9146-9157]:SingleVariableDeclaration[10043-10054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9159-9385]:Block[10056-10282]"
    }, {
      "left" : "Sql sql2 = Sqls.queryEntity(sql);",
      "right" : "Sql sql2 = Sqls.queryEntity(sql);",
      "info" : "VariableDeclarationStatement[9169-9202]:VariableDeclarationStatement[10066-10099]"
    }, {
      "left" : "sql2.setEntity(dao.getEntity(classOfT));",
      "right" : "sql2.setEntity(dao.getEntity(classOfT));",
      "info" : "ExpressionStatement[9211-9251]:ExpressionStatement[10108-10148]"
    }, {
      "left" : "sql2.setCondition(cnd);",
      "right" : "sql2.setCondition(cnd);",
      "info" : "ExpressionStatement[9260-9283]:ExpressionStatement[10157-10180]"
    }, {
      "left" : "sql2.setPager(pager);",
      "right" : "sql2.setPager(pager);",
      "info" : "ExpressionStatement[9292-9313]:ExpressionStatement[10189-10210]"
    }, {
      "left" : "dao.execute(sql2);",
      "right" : "dao.execute(sql2);",
      "info" : "ExpressionStatement[9322-9340]:ExpressionStatement[10219-10237]"
    }, {
      "left" : "return sql2.getList(classOfT);",
      "right" : "return sql2.getList(classOfT);",
      "info" : "ReturnStatement[9349-9379]:ReturnStatement[10246-10276]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9430-9436]:Modifier[10323-10329]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9437-9443]:Modifier[10330-10336]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[9444-9448]:PrimitiveType[10337-10341]"
    }, {
      "left" : "queryCount",
      "right" : "queryCount",
      "info" : "SimpleName[9449-9459]:SimpleName[10342-10352]"
    }, {
      "left" : "Dao dao",
      "right" : "Dao dao",
      "info" : "SingleVariableDeclaration[9460-9467]:SingleVariableDeclaration[10353-10360]"
    }, {
      "left" : "String sql",
      "right" : "String sql",
      "info" : "SingleVariableDeclaration[9469-9479]:SingleVariableDeclaration[10362-10372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9481-9659]:Block[10374-10652]"
    }, {
      "left" : "Sql sql2 = Sqls.fetchInt(\"select count(1) from (\" +sql + \") as _nutz_tmp_\" + System.currentTimeMillis());",
      "right" : "Sql sql2 = Sqls.fetchInt(\"select count(1) from (\"\n                                 + sql\n                                 + \") as _nutz_tmp_\"\n                                 + System.currentTimeMillis());",
      "info" : "VariableDeclarationStatement[9491-9596]:VariableDeclarationStatement[10384-10589]"
    }, {
      "left" : "dao.execute(sql2);",
      "right" : "dao.execute(sql2);",
      "info" : "ExpressionStatement[9605-9623]:ExpressionStatement[10598-10616]"
    }, {
      "left" : "return sql2.getInt();",
      "right" : "return sql2.getInt();",
      "info" : "ReturnStatement[9632-9653]:ReturnStatement[10625-10646]"
    }, {
      "left" : "@SuppressWarnings({ \"rawtypes\" })",
      "right" : "@SuppressWarnings({\"rawtypes\"})",
      "info" : "SingleMemberAnnotation[9786-9819]:SingleMemberAnnotation[10783-10814]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9824-9830]:Modifier[10819-10825]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9831-9837]:Modifier[10826-10832]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[9838-9841]:PrimitiveType[10833-10836]"
    }, {
      "left" : "updateBySpecialChain",
      "right" : "updateBySpecialChain",
      "info" : "SimpleName[9842-9862]:SimpleName[10837-10857]"
    }, {
      "left" : "Dao dao",
      "right" : "Dao dao",
      "info" : "SingleVariableDeclaration[9863-9870]:SingleVariableDeclaration[10858-10865]"
    }, {
      "left" : "Entity en",
      "right" : "Entity en",
      "info" : "SingleVariableDeclaration[9872-9881]:SingleVariableDeclaration[10910-10919]"
    }, {
      "left" : "String tableName",
      "right" : "String tableName",
      "info" : "SingleVariableDeclaration[9883-9899]:SingleVariableDeclaration[10964-10980]"
    }, {
      "left" : "Chain chain",
      "right" : "Chain chain",
      "info" : "SingleVariableDeclaration[9901-9912]:SingleVariableDeclaration[11025-11036]"
    }, {
      "left" : "Condition cnd",
      "right" : "Condition cnd",
      "info" : "SingleVariableDeclaration[9914-9927]:SingleVariableDeclaration[11081-11094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9929-12342]:Block[11096-13760]"
    }, {
      "left" : "if (en != null)",
      "right" : "if (en != null)",
      "info" : "IfStatement[9939-9997]:IfStatement[11106-11164]"
    }, {
      "left" : "tableName = en.getTableName();",
      "right" : "tableName = en.getTableName();",
      "info" : "ExpressionStatement[9967-9997]:ExpressionStatement[11134-11164]"
    }, {
      "left" : "if (tableName == null)",
      "right" : "if (tableName == null)",
      "info" : "IfStatement[10006-10113]:IfStatement[11173-11280]"
    }, {
      "left" : "throw Lang.makeThrow(DaoException.class, \"tableName and en is NULL !!\");",
      "right" : "throw Lang.makeThrow(DaoException.class, \"tableName and en is NULL !!\");",
      "info" : "ThrowStatement[10041-10113]:ThrowStatement[11208-11280]"
    }, {
      "left" : "final StringBuilder sql = new StringBuilder(\"UPDATE \").append(tableName).append(\" SET \");",
      "right" : "final StringBuilder sql = new StringBuilder(\"UPDATE \").append(tableName).append(\" SET \");",
      "info" : "VariableDeclarationStatement[10122-10211]:VariableDeclarationStatement[11289-11378]"
    }, {
      "left" : "Chain head = chain.head();",
      "right" : "Chain head = chain.head();",
      "info" : "VariableDeclarationStatement[10220-10246]:VariableDeclarationStatement[11387-11413]"
    }, {
      "left" : "final List<Object> values = new ArrayList<Object>();",
      "right" : "final List<Object> values = new ArrayList<Object>();",
      "info" : "VariableDeclarationStatement[10255-10307]:VariableDeclarationStatement[11422-11474]"
    }, {
      "left" : "final List<ValueAdaptor> adaptors = new ArrayList<ValueAdaptor>();",
      "right" : "final List<ValueAdaptor> adaptors = new ArrayList<ValueAdaptor>();",
      "info" : "VariableDeclarationStatement[10316-10382]:VariableDeclarationStatement[11483-11549]"
    }, {
      "left" : "while (head != null)",
      "right" : "while (head != null)",
      "info" : "WhileStatement[10391-11638]:WhileStatement[11558-13040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10412-11638]:Block[11579-13040]"
    }, {
      "left" : "MappingField mf = null;",
      "right" : "MappingField mf = null;",
      "info" : "VariableDeclarationStatement[10426-10449]:VariableDeclarationStatement[11593-11616]"
    }, {
      "left" : "if (en != null)",
      "right" : "if (en != null)",
      "info" : "IfStatement[10462-10524]:IfStatement[11629-11691]"
    }, {
      "left" : "mf = en.getField(head.name());",
      "right" : "mf = en.getField(head.name());",
      "info" : "ExpressionStatement[10494-10524]:ExpressionStatement[11661-11691]"
    }, {
      "left" : "String colName = head.name();",
      "right" : "String colName = head.name();",
      "info" : "VariableDeclarationStatement[10537-10566]:VariableDeclarationStatement[11704-11733]"
    }, {
      "left" : "if (mf != null)",
      "right" : "if (mf != null)",
      "info" : "IfStatement[10579-10640]:IfStatement[11746-11807]"
    }, {
      "left" : "colName = mf.getColumnName();",
      "right" : "colName = mf.getColumnName();",
      "info" : "ExpressionStatement[10611-10640]:ExpressionStatement[11778-11807]"
    }, {
      "left" : "sql.append(colName).append(\"=\");",
      "right" : "sql.append(colName).append(\"=\");",
      "info" : "ExpressionStatement[10653-10685]:ExpressionStatement[11820-11852]"
    }, {
      "left" : "if (head.special())",
      "right" : "if (head.special())",
      "info" : "IfStatement[10698-11503]:IfStatement[11865-12905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10718-11189]:Block[11885-12591]"
    }, {
      "left" : "if (head.value() != null && head.value() instanceof String)",
      "right" : "if (head.value() != null && head.value() instanceof String)",
      "info" : "IfStatement[10733-11133]:IfStatement[11903-12535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10793-11133]:Block[11963-12535]"
    }, {
      "left" : "String str = (String)head.value();",
      "right" : "String str = (String) head.value();",
      "info" : "VariableDeclarationStatement[10809-10843]:VariableDeclarationStatement[11985-12020]"
    }, {
      "left" : "if (str.length() > 0)",
      "right" : "if (str.length() > 0)",
      "info" : "IfStatement[10858-11115]:IfStatement[12041-12517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10880-11115]:Block[12063-12517]"
    }, {
      "left" : "switch (str.charAt(0)) {\n\t\t\t\t\t\tcase '+':\n\t\t\t\t\t\tcase '-':\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\tcase '/':\n\t\t\t\t\t\tcase '%':\n\t\t\t\t\t\tcase '&':\n\t\t\t\t\t\tcase '^':\n\t\t\t\t\t\tcase '|':\n\t\t\t\t\t\t\tsql.append(colName);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}",
      "right" : "switch (str.charAt(0)) {\n                        case '+':\n                        case '-':\n                        case '*':\n                        case '/':\n                        case '%':\n                        case '&':\n                        case '^':\n                        case '|':\n                            sql.append(colName);\n                            break;\n                        }",
      "info" : "SwitchStatement[10897-11099]:SwitchStatement[12089-12495]"
    }, {
      "left" : "case '+':",
      "right" : "case '+':",
      "info" : "SwitchCase[10928-10937]:SwitchCase[12138-12147]"
    }, {
      "left" : "case '-':",
      "right" : "case '-':",
      "info" : "SwitchCase[10944-10953]:SwitchCase[12172-12181]"
    }, {
      "left" : "case '*':",
      "right" : "case '*':",
      "info" : "SwitchCase[10960-10969]:SwitchCase[12206-12215]"
    }, {
      "left" : "case '/':",
      "right" : "case '/':",
      "info" : "SwitchCase[10976-10985]:SwitchCase[12240-12249]"
    }, {
      "left" : "case '%':",
      "right" : "case '%':",
      "info" : "SwitchCase[10992-11001]:SwitchCase[12274-12283]"
    }, {
      "left" : "case '&':",
      "right" : "case '&':",
      "info" : "SwitchCase[11008-11017]:SwitchCase[12308-12317]"
    }, {
      "left" : "case '^':",
      "right" : "case '^':",
      "info" : "SwitchCase[11024-11033]:SwitchCase[12342-12351]"
    }, {
      "left" : "case '|':",
      "right" : "case '|':",
      "info" : "SwitchCase[11040-11049]:SwitchCase[12376-12385]"
    }, {
      "left" : "sql.append(colName);",
      "right" : "sql.append(colName);",
      "info" : "ExpressionStatement[11057-11077]:ExpressionStatement[12414-12434]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11085-11091]:BreakStatement[12463-12469]"
    }, {
      "left" : "sql.append(head.value());",
      "right" : "sql.append(head.value());",
      "info" : "ExpressionStatement[11150-11175]:ExpressionStatement[12552-12577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11195-11503]:Block[12597-12905]"
    }, {
      "left" : "sql.append(\"?\");",
      "right" : "sql.append(\"?\");",
      "info" : "ExpressionStatement[11213-11229]:ExpressionStatement[12615-12631]"
    }, {
      "left" : "values.add(head.value());",
      "right" : "values.add(head.value());",
      "info" : "ExpressionStatement[11246-11271]:ExpressionStatement[12648-12673]"
    }, {
      "left" : "ValueAdaptor adaptor = Jdbcs.getAdaptorBy(head.value());",
      "right" : "ValueAdaptor adaptor = Jdbcs.getAdaptorBy(head.value());",
      "info" : "VariableDeclarationStatement[11288-11344]:VariableDeclarationStatement[12690-12746]"
    }, {
      "left" : "if (mf != null && mf.getAdaptor() != null)",
      "right" : "if (mf != null && mf.getAdaptor() != null)",
      "info" : "IfStatement[11361-11450]:IfStatement[12763-12852]"
    }, {
      "left" : "adaptor = mf.getAdaptor();",
      "right" : "adaptor = mf.getAdaptor();",
      "info" : "ExpressionStatement[11424-11450]:ExpressionStatement[12826-12852]"
    }, {
      "left" : "adaptors.add(adaptor);",
      "right" : "adaptors.add(adaptor);",
      "info" : "ExpressionStatement[11467-11489]:ExpressionStatement[12869-12891]"
    }, {
      "left" : "sql.append(\" \");",
      "right" : "sql.append(\" \");",
      "info" : "ExpressionStatement[11516-11532]:ExpressionStatement[12918-12934]"
    }, {
      "left" : "head = head.next();",
      "right" : "head = head.next();",
      "info" : "ExpressionStatement[11545-11564]:ExpressionStatement[12947-12966]"
    }, {
      "left" : "if (head != null)",
      "right" : "if (head != null)",
      "info" : "IfStatement[11577-11628]:IfStatement[12979-13030]"
    }, {
      "left" : "sql.append(\", \");",
      "right" : "sql.append(\", \");",
      "info" : "ExpressionStatement[11611-11628]:ExpressionStatement[13013-13030]"
    }, {
      "left" : "if (cnd != null)",
      "right" : "if (cnd != null)",
      "info" : "IfStatement[11647-11714]:IfStatement[13049-13116]"
    }, {
      "left" : "sql.append(\" \").append(cnd.toSql(en));",
      "right" : "sql.append(\" \").append(cnd.toSql(en));",
      "info" : "ExpressionStatement[11676-11714]:ExpressionStatement[13078-13116]"
    }, {
      "left" : "if (log.isDebugEnabled())",
      "right" : "if (log.isDebugEnabled())",
      "info" : "IfStatement[11723-11776]:IfStatement[13125-13178]"
    }, {
      "left" : "log.debug(sql);",
      "right" : "log.debug(sql);",
      "info" : "ExpressionStatement[11761-11776]:ExpressionStatement[13163-13178]"
    }, {
      "left" : "final int[] ints = new int[1];",
      "right" : "final int[] ints = new int[1];",
      "info" : "VariableDeclarationStatement[11785-11815]:VariableDeclarationStatement[13187-13217]"
    }, {
      "left" : "dao.run(new ConnCallback() {\n            public void invoke(Connection conn) throws Exception {\n                PreparedStatement ps = conn.prepareStatement(sql.toString());\n                try {\n                    for (int i = 0; i < values.size(); i++)\n                        adaptors.get(i).set(ps, values.get(i), i + 1);\n                    ints[0] = ps.executeUpdate();\n                } finally {\n                    Daos.safeClose(ps);\n                }\n            }\n        });",
      "right" : "dao.run(new ConnCallback() {\n            public void invoke(Connection conn) throws Exception {\n                PreparedStatement ps = conn.prepareStatement(sql.toString());\n                try {\n                    for (int i = 0; i < values.size(); i++)\n                        adaptors.get(i).set(ps, values.get(i), i + 1);\n                    ints[0] = ps.executeUpdate();\n                }\n                finally {\n                    Daos.safeClose(ps);\n                }\n            }\n        });",
      "info" : "ExpressionStatement[11824-12312]:ExpressionStatement[13226-13730]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11865-11871]:Modifier[13267-13273]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11872-11876]:PrimitiveType[13274-13278]"
    }, {
      "left" : "invoke",
      "right" : "invoke",
      "info" : "SimpleName[11877-11883]:SimpleName[13279-13285]"
    }, {
      "left" : "Connection conn",
      "right" : "Connection conn",
      "info" : "SingleVariableDeclaration[11884-11899]:SingleVariableDeclaration[13286-13301]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[11908-11917]:SimpleType[13310-13319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11918-12300]:Block[13320-13718]"
    }, {
      "left" : "PreparedStatement ps = conn.prepareStatement(sql.toString());",
      "right" : "PreparedStatement ps = conn.prepareStatement(sql.toString());",
      "info" : "VariableDeclarationStatement[11936-11997]:VariableDeclarationStatement[13338-13399]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[12014-12286]:TryStatement[13416-13704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12018-12218]:Block[13420-13620]"
    }, {
      "left" : "for (int i = 0; i < values.size(); i++)\n                        adaptors.get(i).set(ps, values.get(i), i + 1);",
      "right" : "for (int i = 0; i < values.size(); i++)\n                        adaptors.get(i).set(ps, values.get(i), i + 1);",
      "info" : "ForStatement[12040-12150]:ForStatement[13442-13552]"
    }, {
      "left" : "adaptors.get(i).set(ps, values.get(i), i + 1);",
      "right" : "adaptors.get(i).set(ps, values.get(i), i + 1);",
      "info" : "ExpressionStatement[12104-12150]:ExpressionStatement[13506-13552]"
    }, {
      "left" : "ints[0] = ps.executeUpdate();",
      "right" : "ints[0] = ps.executeUpdate();",
      "info" : "ExpressionStatement[12171-12200]:ExpressionStatement[13573-13602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12227-12286]:Block[13645-13704]"
    }, {
      "left" : "Daos.safeClose(ps);",
      "right" : "Daos.safeClose(ps);",
      "info" : "ExpressionStatement[12249-12268]:ExpressionStatement[13667-13686]"
    }, {
      "left" : "return ints[0];",
      "right" : "return ints[0];",
      "info" : "ReturnStatement[12321-12336]:ReturnStatement[13739-13754]"
    }, {
      "left" : "@SuppressWarnings({ \"rawtypes\" })",
      "right" : "@SuppressWarnings({\"rawtypes\"})",
      "info" : "SingleMemberAnnotation[12469-12502]:SingleMemberAnnotation[13891-13922]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12507-12513]:Modifier[13927-13933]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12514-12520]:Modifier[13934-13940]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12521-12525]:PrimitiveType[13941-13945]"
    }, {
      "left" : "insertBySpecialChain",
      "right" : "insertBySpecialChain",
      "info" : "SimpleName[12526-12546]:SimpleName[13946-13966]"
    }, {
      "left" : "Dao dao",
      "right" : "Dao dao",
      "info" : "SingleVariableDeclaration[12547-12554]:SingleVariableDeclaration[13967-13974]"
    }, {
      "left" : "Entity en",
      "right" : "Entity en",
      "info" : "SingleVariableDeclaration[12556-12565]:SingleVariableDeclaration[13976-13985]"
    }, {
      "left" : "String tableName",
      "right" : "String tableName",
      "info" : "SingleVariableDeclaration[12567-12583]:SingleVariableDeclaration[13987-14003]"
    }, {
      "left" : "Chain chain",
      "right" : "Chain chain",
      "info" : "SingleVariableDeclaration[12585-12596]:SingleVariableDeclaration[14005-14016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12598-14764]:Block[14018-16188]"
    }, {
      "left" : "if (en != null)",
      "right" : "if (en != null)",
      "info" : "IfStatement[12608-12666]:IfStatement[14028-14086]"
    }, {
      "left" : "tableName = en.getTableName();",
      "right" : "tableName = en.getTableName();",
      "info" : "ExpressionStatement[12636-12666]:ExpressionStatement[14056-14086]"
    }, {
      "left" : "if (tableName == null)",
      "right" : "if (tableName == null)",
      "info" : "IfStatement[12675-12782]:IfStatement[14095-14202]"
    }, {
      "left" : "throw Lang.makeThrow(DaoException.class, \"tableName and en is NULL !!\");",
      "right" : "throw Lang.makeThrow(DaoException.class, \"tableName and en is NULL !!\");",
      "info" : "ThrowStatement[12710-12782]:ThrowStatement[14130-14202]"
    }, {
      "left" : "final StringBuilder sql = new StringBuilder(\"INSERT INTO \").append(tableName).append(\" (\");",
      "right" : "final StringBuilder sql = new StringBuilder(\"INSERT INTO \").append(tableName).append(\" (\");",
      "info" : "VariableDeclarationStatement[12791-12882]:VariableDeclarationStatement[14211-14302]"
    }, {
      "left" : "StringBuilder _value_places = new StringBuilder(\" VALUES(\");",
      "right" : "StringBuilder _value_places = new StringBuilder(\" VALUES(\");",
      "info" : "VariableDeclarationStatement[12891-12951]:VariableDeclarationStatement[14311-14371]"
    }, {
      "left" : "final List<Object> values = new ArrayList<Object>();",
      "right" : "final List<Object> values = new ArrayList<Object>();",
      "info" : "VariableDeclarationStatement[12960-13012]:VariableDeclarationStatement[14380-14432]"
    }, {
      "left" : "final List<ValueAdaptor> adaptors = new ArrayList<ValueAdaptor>();",
      "right" : "final List<ValueAdaptor> adaptors = new ArrayList<ValueAdaptor>();",
      "info" : "VariableDeclarationStatement[13021-13087]:VariableDeclarationStatement[14441-14507]"
    }, {
      "left" : "Chain head = chain.head();",
      "right" : "Chain head = chain.head();",
      "info" : "VariableDeclarationStatement[13096-13122]:VariableDeclarationStatement[14516-14542]"
    }, {
      "left" : "while (head != null)",
      "right" : "while (head != null)",
      "info" : "WhileStatement[13131-14120]:WhileStatement[14551-15528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13152-14120]:Block[14572-15528]"
    }, {
      "left" : "String colName = head.name();",
      "right" : "String colName = head.name();",
      "info" : "VariableDeclarationStatement[13163-13192]:VariableDeclarationStatement[14586-14615]"
    }, {
      "left" : "MappingField mf = null;",
      "right" : "MappingField mf = null;",
      "info" : "VariableDeclarationStatement[13202-13225]:VariableDeclarationStatement[14628-14651]"
    }, {
      "left" : "if (en != null)",
      "right" : "if (en != null)",
      "info" : "IfStatement[13238-13391]:IfStatement[14664-14820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13254-13391]:Block[14680-14820]"
    }, {
      "left" : "mf = en.getField(colName);",
      "right" : "mf = en.getField(colName);",
      "info" : "ExpressionStatement[13272-13298]:ExpressionStatement[14698-14724]"
    }, {
      "left" : "if (mf != null)",
      "right" : "if (mf != null)",
      "info" : "IfStatement[13315-13377]:IfStatement[14741-14806]"
    }, {
      "left" : "colName = mf.getColumnName();",
      "right" : "colName = mf.getColumnName();",
      "info" : "ExpressionStatement[13348-13377]:ExpressionStatement[14777-14806]"
    }, {
      "left" : "sql.append(colName);",
      "right" : "sql.append(colName);",
      "info" : "ExpressionStatement[13404-13424]:ExpressionStatement[14833-14853]"
    }, {
      "left" : "if (head.special())",
      "right" : "if (head.special())",
      "info" : "IfStatement[13450-13941]:IfStatement[14867-15361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13470-13534]:Block[14887-14954]"
    }, {
      "left" : "_value_places.append(head.value());",
      "right" : "_value_places.append(head.value());",
      "info" : "ExpressionStatement[13485-13520]:ExpressionStatement[14905-14940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13540-13941]:Block[14960-15361]"
    }, {
      "left" : "if (en != null)",
      "right" : "if (en != null)",
      "info" : "IfStatement[13558-13624]:IfStatement[14978-15044]"
    }, {
      "left" : "mf = en.getField(head.name());",
      "right" : "mf = en.getField(head.name());",
      "info" : "ExpressionStatement[13594-13624]:ExpressionStatement[15014-15044]"
    }, {
      "left" : "_value_places.append(\"?\");",
      "right" : "_value_places.append(\"?\");",
      "info" : "ExpressionStatement[13641-13667]:ExpressionStatement[15061-15087]"
    }, {
      "left" : "values.add(head.value());",
      "right" : "values.add(head.value());",
      "info" : "ExpressionStatement[13684-13709]:ExpressionStatement[15104-15129]"
    }, {
      "left" : "ValueAdaptor adaptor = Jdbcs.getAdaptorBy(head.value());",
      "right" : "ValueAdaptor adaptor = Jdbcs.getAdaptorBy(head.value());",
      "info" : "VariableDeclarationStatement[13726-13782]:VariableDeclarationStatement[15146-15202]"
    }, {
      "left" : "if (mf != null && mf.getAdaptor() != null)",
      "right" : "if (mf != null && mf.getAdaptor() != null)",
      "info" : "IfStatement[13799-13888]:IfStatement[15219-15308]"
    }, {
      "left" : "adaptor = mf.getAdaptor();",
      "right" : "adaptor = mf.getAdaptor();",
      "info" : "ExpressionStatement[13862-13888]:ExpressionStatement[15282-15308]"
    }, {
      "left" : "adaptors.add(adaptor);",
      "right" : "adaptors.add(adaptor);",
      "info" : "ExpressionStatement[13905-13927]:ExpressionStatement[15325-15347]"
    }, {
      "left" : "head = head.next();",
      "right" : "head = head.next();",
      "info" : "ExpressionStatement[13967-13986]:ExpressionStatement[15375-15394]"
    }, {
      "left" : "if (head != null)",
      "right" : "if (head != null)",
      "info" : "IfStatement[13999-14110]:IfStatement[15407-15518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14017-14110]:Block[15425-15518]"
    }, {
      "left" : "sql.append(\", \");",
      "right" : "sql.append(\", \");",
      "info" : "ExpressionStatement[14035-14052]:ExpressionStatement[15443-15460]"
    }, {
      "left" : "_value_places.append(\", \");",
      "right" : "_value_places.append(\", \");",
      "info" : "ExpressionStatement[14069-14096]:ExpressionStatement[15477-15504]"
    }, {
      "left" : "sql.append(\")\");",
      "right" : "sql.append(\")\");",
      "info" : "ExpressionStatement[14129-14145]:ExpressionStatement[15537-15553]"
    }, {
      "left" : "_value_places.append(\")\");",
      "right" : "_value_places.append(\")\");",
      "info" : "ExpressionStatement[14154-14180]:ExpressionStatement[15562-15588]"
    }, {
      "left" : "sql.append(_value_places);",
      "right" : "sql.append(_value_places);",
      "info" : "ExpressionStatement[14189-14215]:ExpressionStatement[15597-15623]"
    }, {
      "left" : "if (log.isDebugEnabled())",
      "right" : "if (log.isDebugEnabled())",
      "info" : "IfStatement[14224-14277]:IfStatement[15632-15685]"
    }, {
      "left" : "log.debug(sql);",
      "right" : "log.debug(sql);",
      "info" : "ExpressionStatement[14262-14277]:ExpressionStatement[15670-15685]"
    }, {
      "left" : "dao.run(new ConnCallback() {\n            public void invoke(Connection conn) throws Exception {\n                PreparedStatement ps = conn.prepareStatement(sql.toString());\n                try {\n                    for (int i = 0; i < values.size(); i++)\n                        adaptors.get(i).set(ps, values.get(i), i + 1);\n                    ps.execute();\n                } finally {\n                    Daos.safeClose(ps);\n                }\n            }\n        });",
      "right" : "dao.run(new ConnCallback() {\n            public void invoke(Connection conn) throws Exception {\n                PreparedStatement ps = conn.prepareStatement(sql.toString());\n                try {\n                    for (int i = 0; i < values.size(); i++)\n                        adaptors.get(i).set(ps, values.get(i), i + 1);\n                    ps.execute();\n                }\n                finally {\n                    Daos.safeClose(ps);\n                }\n            }\n        });",
      "info" : "ExpressionStatement[14286-14758]:ExpressionStatement[15694-16182]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14327-14333]:Modifier[15735-15741]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14334-14338]:PrimitiveType[15742-15746]"
    }, {
      "left" : "invoke",
      "right" : "invoke",
      "info" : "SimpleName[14339-14345]:SimpleName[15747-15753]"
    }, {
      "left" : "Connection conn",
      "right" : "Connection conn",
      "info" : "SingleVariableDeclaration[14346-14361]:SingleVariableDeclaration[15754-15769]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[14370-14379]:SimpleType[15778-15787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14380-14746]:Block[15788-16170]"
    }, {
      "left" : "PreparedStatement ps = conn.prepareStatement(sql.toString());",
      "right" : "PreparedStatement ps = conn.prepareStatement(sql.toString());",
      "info" : "VariableDeclarationStatement[14398-14459]:VariableDeclarationStatement[15806-15867]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[14476-14732]:TryStatement[15884-16156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14480-14664]:Block[15888-16072]"
    }, {
      "left" : "for (int i = 0; i < values.size(); i++)\n                        adaptors.get(i).set(ps, values.get(i), i + 1);",
      "right" : "for (int i = 0; i < values.size(); i++)\n                        adaptors.get(i).set(ps, values.get(i), i + 1);",
      "info" : "ForStatement[14502-14612]:ForStatement[15910-16020]"
    }, {
      "left" : "adaptors.get(i).set(ps, values.get(i), i + 1);",
      "right" : "adaptors.get(i).set(ps, values.get(i), i + 1);",
      "info" : "ExpressionStatement[14566-14612]:ExpressionStatement[15974-16020]"
    }, {
      "left" : "ps.execute();",
      "right" : "ps.execute();",
      "info" : "ExpressionStatement[14633-14646]:ExpressionStatement[16041-16054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14673-14732]:Block[16097-16156]"
    }, {
      "left" : "Daos.safeClose(ps);",
      "right" : "Daos.safeClose(ps);",
      "info" : "ExpressionStatement[14695-14714]:ExpressionStatement[16119-16138]"
    }, {
      "left" : "@SuppressWarnings({\"unchecked\", \"rawtypes\"})",
      "right" : "@SuppressWarnings({\"unchecked\", \"rawtypes\"})",
      "info" : "SingleMemberAnnotation[16193-16237]:SingleMemberAnnotation[17960-18004]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16242-16248]:Modifier[18009-18015]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16249-16255]:Modifier[18016-18022]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[16256-16263]:PrimitiveType[18023-18030]"
    }, {
      "left" : "filterFields",
      "right" : "filterFields",
      "info" : "SimpleName[16264-16276]:SimpleName[18031-18043]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[16277-16287]:SingleVariableDeclaration[18044-18054]"
    }, {
      "left" : "FieldMatcher matcher",
      "right" : "FieldMatcher matcher",
      "info" : "SingleVariableDeclaration[16289-16309]:SingleVariableDeclaration[18095-18115]"
    }, {
      "left" : "Dao dao",
      "right" : "Dao dao",
      "info" : "SingleVariableDeclaration[16311-16318]:SingleVariableDeclaration[18156-18163]"
    }, {
      "left" : "Callback2<MappingField, Object> callback",
      "right" : "Callback2<MappingField, Object> callback",
      "info" : "SingleVariableDeclaration[16320-16360]:SingleVariableDeclaration[18204-18244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16362-18066]:Block[18246-19943]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[16372-16414]:IfStatement[18256-18298]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[16401-16414]:ReturnStatement[18285-18298]"
    }, {
      "left" : "obj = Lang.first(obj);",
      "right" : "obj = Lang.first(obj);",
      "info" : "ExpressionStatement[16423-16445]:ExpressionStatement[18307-18329]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[16454-16508]:IfStatement[18338-18392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16471-16508]:Block[18355-18392]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[16485-16498]:ReturnStatement[18369-18382]"
    }, {
      "left" : "if (obj.getClass() == Class.class)",
      "right" : "if (obj.getClass() == Class.class)",
      "info" : "IfStatement[16517-16600]:IfStatement[18401-18484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16552-16600]:Block[18436-18484]"
    }, {
      "left" : "throw Lang.impossible();",
      "right" : "throw Lang.impossible();",
      "info" : "ThrowStatement[16566-16590]:ThrowStatement[18450-18474]"
    }, {
      "left" : "if (obj instanceof String || obj instanceof Number || obj instanceof Boolean)",
      "right" : "if (obj instanceof String || obj instanceof Number || obj instanceof Boolean)",
      "info" : "IfStatement[16609-16735]:IfStatement[18493-18619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16687-16735]:Block[18571-18619]"
    }, {
      "left" : "throw Lang.impossible();",
      "right" : "throw Lang.impossible();",
      "info" : "ThrowStatement[16701-16725]:ThrowStatement[18585-18609]"
    }, {
      "left" : "Entity en = dao.getEntity(obj.getClass());",
      "right" : "Entity en = dao.getEntity(obj.getClass());",
      "info" : "VariableDeclarationStatement[16744-16786]:VariableDeclarationStatement[18628-18670]"
    }, {
      "left" : "if (en == null)",
      "right" : "if (en == null)",
      "info" : "IfStatement[16795-16859]:IfStatement[18679-18743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16811-16859]:Block[18695-18743]"
    }, {
      "left" : "throw Lang.impossible();",
      "right" : "throw Lang.impossible();",
      "info" : "ThrowStatement[16825-16849]:ThrowStatement[18709-18733]"
    }, {
      "left" : "List<MappingField> mfs = en.getMappingFields();",
      "right" : "List<MappingField> mfs = en.getMappingFields();",
      "info" : "VariableDeclarationStatement[16877-16924]:VariableDeclarationStatement[18753-18800]"
    }, {
      "left" : "if (matcher != null)",
      "right" : "if (matcher != null)",
      "info" : "IfStatement[16933-17222]:IfStatement[18809-19074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16954-17222]:Block[18830-19074]"
    }, {
      "left" : "Iterator<MappingField> it = mfs.iterator();",
      "right" : "Iterator<MappingField> it = mfs.iterator();",
      "info" : "VariableDeclarationStatement[16972-17015]:VariableDeclarationStatement[18844-18887]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[17032-17212]:WhileStatement[18900-19064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17053-17212]:Block[18921-19064]"
    }, {
      "left" : "MappingField mf = it.next();",
      "right" : "MappingField mf = it.next();",
      "info" : "VariableDeclarationStatement[17075-17103]:VariableDeclarationStatement[18939-18967]"
    }, {
      "left" : "if (!matcher.match(mf.getName()))",
      "right" : "if (!matcher.match(mf.getName()))",
      "info" : "IfStatement[17124-17194]:IfStatement[18984-19050]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[17182-17194]:ExpressionStatement[19038-19050]"
    }, {
      "left" : "boolean flag = false;",
      "right" : "boolean flag = false;",
      "info" : "VariableDeclarationStatement[17231-17252]:VariableDeclarationStatement[19083-19104]"
    }, {
      "left" : "for (MappingField mf : mfs)",
      "right" : "for (MappingField mf : mfs)",
      "info" : "EnhancedForStatement[17261-18039]:EnhancedForStatement[19113-19916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17289-18039]:Block[19141-19916]"
    }, {
      "left" : "if (matcher.isIgnoreId() && mf.isId())",
      "right" : "if (matcher.isIgnoreId() && mf.isId())",
      "info" : "IfStatement[17303-17367]:IfStatement[19155-19219]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[17358-17367]:ContinueStatement[19210-19219]"
    }, {
      "left" : "if (matcher.isIgnoreName() && mf.isName())",
      "right" : "if (matcher.isIgnoreName() && mf.isName())",
      "info" : "IfStatement[17380-17448]:IfStatement[19232-19300]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[17439-17448]:ContinueStatement[19291-19300]"
    }, {
      "left" : "if (matcher.isIgnorePk() && mf.isCompositePk())",
      "right" : "if (matcher.isIgnorePk() && mf.isCompositePk())",
      "info" : "IfStatement[17461-17534]:IfStatement[19313-19386]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[17525-17534]:ContinueStatement[19377-19386]"
    }, {
      "left" : "Object val = mf.getValue(obj);",
      "right" : "Object val = mf.getValue(obj);",
      "info" : "VariableDeclarationStatement[17547-17577]:VariableDeclarationStatement[19399-19429]"
    }, {
      "left" : "if (val == null)",
      "right" : "if (val == null)",
      "info" : "IfStatement[17590-17696]:IfStatement[19442-19548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17607-17696]:Block[19459-19548]"
    }, {
      "left" : "if (matcher.isIgnoreNull())",
      "right" : "if (matcher.isIgnoreNull())",
      "info" : "IfStatement[17625-17682]:IfStatement[19477-19534]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[17673-17682]:ContinueStatement[19525-19534]"
    }, {
      "left" : "if (val instanceof Number && ((Number)val).doubleValue() == 0.0)",
      "right" : "if (val instanceof Number && ((Number) val).doubleValue() == 0.0)",
      "info" : "IfStatement[17697-17851]:IfStatement[19561-19716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17762-17851]:Block[19627-19716]"
    }, {
      "left" : "if (matcher.isIgnoreZero())",
      "right" : "if (matcher.isIgnoreZero())",
      "info" : "IfStatement[17780-17837]:IfStatement[19645-19702]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[17828-17837]:ContinueStatement[19693-19702]"
    }, {
      "left" : "if (val instanceof Date)",
      "right" : "if (val instanceof Date)",
      "info" : "IfStatement[17852-17966]:IfStatement[19729-19843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17877-17966]:Block[19754-19843]"
    }, {
      "left" : "if (matcher.isIgnoreDate())",
      "right" : "if (matcher.isIgnoreDate())",
      "info" : "IfStatement[17895-17952]:IfStatement[19772-19829]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[17943-17952]:ContinueStatement[19820-19829]"
    }, {
      "left" : "callback.invoke(mf, val);",
      "right" : "callback.invoke(mf, val);",
      "info" : "ExpressionStatement[17979-18004]:ExpressionStatement[19856-19881]"
    }, {
      "left" : "flag = true;",
      "right" : "flag = true;",
      "info" : "ExpressionStatement[18017-18029]:ExpressionStatement[19894-19906]"
    }, {
      "left" : "return flag;",
      "right" : "return flag;",
      "info" : "ReturnStatement[18048-18060]:ReturnStatement[19925-19937]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[21750-21755]:TYPE_DECLARATION_KIND[26915-26920]"
    }, {
      "left" : "ExtDaoInvocationHandler",
      "right" : "ExtDaoInvocationHandler",
      "info" : "SimpleName[21756-21779]:SimpleName[26921-26944]"
    }, {
      "left" : "InvocationHandler",
      "right" : "InvocationHandler",
      "info" : "SimpleType[21791-21808]:SimpleType[26956-26973]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[21814-21823]:Modifier[26981-26990]"
    }, {
      "left" : "ExtDaoInvocationHandler",
      "right" : "ExtDaoInvocationHandler",
      "info" : "SimpleName[21824-21847]:SimpleName[26991-27014]"
    }, {
      "left" : "Dao dao",
      "right" : "Dao dao",
      "info" : "SingleVariableDeclaration[21848-21855]:SingleVariableDeclaration[27015-27022]"
    }, {
      "left" : "FieldFilter filter",
      "right" : "FieldFilter filter",
      "info" : "SingleVariableDeclaration[21857-21875]:SingleVariableDeclaration[27024-27042]"
    }, {
      "left" : "Object tableName",
      "right" : "Object tableName",
      "info" : "SingleVariableDeclaration[21877-21893]:SingleVariableDeclaration[27044-27060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21895-21971]:Block[27062-27159]"
    }, {
      "left" : "this.dao = dao;",
      "right" : "this.dao = dao;",
      "info" : "ExpressionStatement[21899-21914]:ExpressionStatement[27072-27087]"
    }, {
      "left" : "this.filter = filter;",
      "right" : "this.filter = filter;",
      "info" : "ExpressionStatement[21917-21938]:ExpressionStatement[27096-27117]"
    }, {
      "left" : "this.tableName = tableName;",
      "right" : "this.tableName = tableName;",
      "info" : "ExpressionStatement[21941-21968]:ExpressionStatement[27126-27153]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22048-22054]:Modifier[27246-27252]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[22055-22061]:SimpleType[27253-27259]"
    }, {
      "left" : "invoke",
      "right" : "invoke",
      "info" : "SimpleName[22062-22068]:SimpleName[27260-27266]"
    }, {
      "left" : "Object proxy",
      "right" : "Object proxy",
      "info" : "SingleVariableDeclaration[22069-22081]:SingleVariableDeclaration[27267-27279]"
    }, {
      "left" : "final Method method",
      "right" : "final Method method",
      "info" : "SingleVariableDeclaration[22083-22102]:SingleVariableDeclaration[27281-27300]"
    }, {
      "left" : "final Object[] args",
      "right" : "final Object[] args",
      "info" : "SingleVariableDeclaration[22104-22123]:SingleVariableDeclaration[27302-27321]"
    }, {
      "left" : "Throwable",
      "right" : "Throwable",
      "info" : "SimpleType[22132-22141]:SimpleType[27330-27339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22142-22815]:Block[27340-28314]"
    }, {
      "left" : "final Molecule<Object> m = new Molecule<Object>() {\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tsetObj(method.invoke(dao, args));\n\t\t\t\t}\n\t\t\t\tcatch (IllegalArgumentException e) {\n\t\t\t\t\tthrow Lang.wrapThrow(e);\n\t\t\t\t}\n\t\t\t\tcatch (IllegalAccessException e) {\n\t\t\t\t\tthrow Lang.wrapThrow(e);\n\t\t\t\t}\n\t\t\t\tcatch (InvocationTargetException e) {\n\t\t\t\t\tthrow Lang.wrapThrow(e.getTargetException());\n\t\t\t\t}\n\t\t\t}\n\t\t};",
      "right" : "final Molecule<Object> m = new Molecule<Object>() {\n            public void run() {\n                try {\n                    setObj(method.invoke(dao, args));\n                }\n                catch (IllegalArgumentException e) {\n                    throw Lang.wrapThrow(e);\n                }\n                catch (IllegalAccessException e) {\n                    throw Lang.wrapThrow(e);\n                }\n                catch (InvocationTargetException e) {\n                    throw Lang.wrapThrow(e.getTargetException());\n                }\n            }\n        };",
      "info" : "VariableDeclarationStatement[22149-22539]:VariableDeclarationStatement[27351-27921]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22204-22210]:Modifier[27415-27421]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22211-22215]:PrimitiveType[27422-27426]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[22216-22219]:SimpleName[27427-27430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22222-22534]:Block[27433-27910]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[22228-22529]:TryStatement[27451-27896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22232-22278]:Block[27455-27528]"
    }, {
      "left" : "setObj(method.invoke(dao, args));",
      "right" : "setObj(method.invoke(dao, args));",
      "info" : "ExpressionStatement[22239-22272]:ExpressionStatement[27477-27510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22318-22355]:Block[27580-27644]"
    }, {
      "left" : "throw Lang.wrapThrow(e);",
      "right" : "throw Lang.wrapThrow(e);",
      "info" : "ThrowStatement[22325-22349]:ThrowStatement[27602-27626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22393-22430]:Block[27694-27758]"
    }, {
      "left" : "throw Lang.wrapThrow(e);",
      "right" : "throw Lang.wrapThrow(e);",
      "info" : "ThrowStatement[22400-22424]:ThrowStatement[27716-27740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22471-22529]:Block[27811-27896]"
    }, {
      "left" : "throw Lang.wrapThrow(e.getTargetException());",
      "right" : "throw Lang.wrapThrow(e.getTargetException());",
      "info" : "ThrowStatement[22478-22523]:ThrowStatement[27833-27878]"
    }, {
      "left" : "if (filter != null && tableName != null)",
      "right" : "if (filter != null && tableName != null)",
      "info" : "IfStatement[22542-22712]:IfStatement[27930-28172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22583-22712]:Block[27971-28172]"
    }, {
      "left" : "TableName.run(tableName, new Runnable() {\n\t\t\t\tpublic void run() {\n\t\t\t\t\tfilter.run(m);\n\t\t\t\t}\n\t\t\t});",
      "right" : "TableName.run(tableName, new Runnable() {\n                public void run() {\n                    filter.run(m);\n                }\n            });",
      "info" : "ExpressionStatement[22588-22686]:ExpressionStatement[27985-28131]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22634-22640]:Modifier[28043-28049]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22641-22645]:PrimitiveType[28050-28054]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[22646-22649]:SimpleName[28055-28058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22652-22679]:Block[28061-28115]"
    }, {
      "left" : "filter.run(m);",
      "right" : "filter.run(m);",
      "info" : "ExpressionStatement[22659-22673]:ExpressionStatement[28083-28097]"
    }, {
      "left" : "return m.getObj();",
      "right" : "return m.getObj();",
      "info" : "ReturnStatement[22690-22708]:ReturnStatement[28144-28162]"
    }, {
      "left" : "if (filter != null)",
      "right" : "if (filter != null)",
      "info" : "IfStatement[22715-22791]:IfStatement[28181-28281]"
    }, {
      "left" : "filter.run(m);",
      "right" : "filter.run(m);",
      "info" : "ExpressionStatement[22738-22752]:ExpressionStatement[28213-28227]"
    }, {
      "left" : "TableName.run(tableName, m);",
      "right" : "TableName.run(tableName, m);",
      "info" : "ExpressionStatement[22763-22791]:ExpressionStatement[28253-28281]"
    }, {
      "left" : "return m.getObj();",
      "right" : "return m.getObj();",
      "info" : "ReturnStatement[22794-22812]:ReturnStatement[28290-28308]"
    } ]
  },
  "interFileMappings" : { }
}