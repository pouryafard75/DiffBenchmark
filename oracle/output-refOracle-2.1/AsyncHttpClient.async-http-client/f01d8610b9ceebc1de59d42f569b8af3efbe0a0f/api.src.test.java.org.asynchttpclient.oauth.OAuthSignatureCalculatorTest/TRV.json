{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final String CONSUMER_KEY = \"dpf43f3p2l4k3l03\";",
      "right" : "private static final String CONSUMER_KEY = \"dpf43f3p2l4k3l03\";",
      "info" : "FieldDeclaration[1367-1429]:FieldDeclaration[1372-1434]"
    }, {
      "left" : "private static final String CONSUMER_SECRET = \"kd94hf93k423kf44\";",
      "right" : "private static final String CONSUMER_SECRET = \"kd94hf93k423kf44\";",
      "info" : "FieldDeclaration[1435-1500]:FieldDeclaration[1440-1505]"
    }, {
      "left" : "public static final String TOKEN_KEY = \"nnch734d00sl2jdk\";",
      "right" : "public static final String TOKEN_KEY = \"nnch734d00sl2jdk\";",
      "info" : "FieldDeclaration[1506-1564]:FieldDeclaration[1511-1569]"
    }, {
      "left" : "public static final String TOKEN_SECRET = \"pfkkdhi9sl3r4s00\";",
      "right" : "public static final String TOKEN_SECRET = \"pfkkdhi9sl3r4s00\";",
      "info" : "FieldDeclaration[1570-1631]:FieldDeclaration[1575-1636]"
    }, {
      "left" : "public static final String NONCE = \"kllo9940pd9333jh\";",
      "right" : "public static final String NONCE = \"kllo9940pd9333jh\";",
      "info" : "FieldDeclaration[1637-1691]:FieldDeclaration[1642-1696]"
    }, {
      "left" : "final static long TIMESTAMP = 1191242096;",
      "right" : "final static long TIMESTAMP = 1191242096;",
      "info" : "FieldDeclaration[1697-1738]:FieldDeclaration[1702-1743]"
    }, {
      "left" : "StaticOAuthSignatureCalculator",
      "right" : "StaticOAuthSignatureCalculator",
      "info" : "TypeDeclaration[1744-2393]:TypeDeclaration[1749-2371]"
    }, {
      "left" : "private final long timestamp;",
      "right" : "private final long timestamp;",
      "info" : "FieldDeclaration[1848-1877]:FieldDeclaration[1845-1874]"
    }, {
      "left" : "private final String nonce;",
      "right" : "private final String nonce;",
      "info" : "FieldDeclaration[1886-1913]:FieldDeclaration[1883-1910]"
    }, {
      "left" : "public StaticOAuthSignatureCalculator(ConsumerKey consumerAuth, RequestToken userAuth, long timestamp, String nonce)",
      "right" : "public StaticOAuthSignatureCalculator(ConsumerKey consumerAuth, RequestToken userAuth, long timestamp, String nonce)",
      "info" : "MethodDeclaration[1931-2177]:MethodDeclaration[1920-2163]"
    }, {
      "left" : "protected long generateTimestamp()",
      "right" : "protected long generateTimestamp()",
      "info" : "MethodDeclaration[2195-2289]:MethodDeclaration[2173-2267]"
    }, {
      "left" : "protected String generateNonce()",
      "right" : "protected String generateNonce()",
      "info" : "MethodDeclaration[2299-2387]:MethodDeclaration[2277-2365]"
    }, {
      "left" : "public void testGetCalculateSignature()",
      "right" : "public void testGetCalculateSignature()",
      "info" : "MethodDeclaration[2489-3192]:MethodDeclaration[4808-5511]"
    }, {
      "left" : "public void testPostCalculateSignature()",
      "right" : "public void testPostCalculateSignature()",
      "info" : "MethodDeclaration[3198-5390]:MethodDeclaration[5517-7767]"
    }, {
      "left" : "public void testGetWithRequestBuilder()",
      "right" : "public void testGetWithRequestBuilder()",
      "info" : "MethodDeclaration[5396-7711]:MethodDeclaration[7773-10142]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2048-2177]:Block[2037-2163]"
    }, {
      "left" : "super(consumerAuth, userAuth);",
      "right" : "super(consumerAuth, userAuth);",
      "info" : "SuperConstructorInvocation[2062-2092]:SuperConstructorInvocation[2051-2081]"
    }, {
      "left" : "this.timestamp = timestamp;",
      "right" : "this.timestamp = timestamp;",
      "info" : "ExpressionStatement[2105-2132]:ExpressionStatement[2094-2121]"
    }, {
      "left" : "this.nonce = nonce;",
      "right" : "this.nonce = nonce;",
      "info" : "ExpressionStatement[2148-2167]:ExpressionStatement[2134-2153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2248-2289]:Block[2226-2267]"
    }, {
      "left" : "return timestamp;",
      "right" : "return timestamp;",
      "info" : "ReturnStatement[2262-2279]:ReturnStatement[2240-2257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2350-2387]:Block[2328-2365]"
    }, {
      "left" : "return nonce;",
      "right" : "return nonce;",
      "info" : "ReturnStatement[2364-2377]:ReturnStatement[2342-2355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2556-3192]:Block[4875-5511]"
    }, {
      "left" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "right" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "info" : "VariableDeclarationStatement[2566-2636]:VariableDeclarationStatement[4885-4955]"
    }, {
      "left" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "right" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "info" : "VariableDeclarationStatement[2645-2707]:VariableDeclarationStatement[4964-5026]"
    }, {
      "left" : "OAuthSignatureCalculator calc = new OAuthSignatureCalculator(consumer, user);",
      "right" : "OAuthSignatureCalculator calc = new OAuthSignatureCalculator(consumer, user);",
      "info" : "VariableDeclarationStatement[2716-2793]:VariableDeclarationStatement[5035-5112]"
    }, {
      "left" : "List<Param> queryParams = new ArrayList<>();",
      "right" : "List<Param> queryParams = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[2802-2846]:VariableDeclarationStatement[5121-5165]"
    }, {
      "left" : "queryParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "right" : "queryParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "info" : "ExpressionStatement[2855-2906]:ExpressionStatement[5174-5225]"
    }, {
      "left" : "queryParams.add(new Param(\"size\", \"original\"));",
      "right" : "queryParams.add(new Param(\"size\", \"original\"));",
      "info" : "ExpressionStatement[2915-2962]:ExpressionStatement[5234-5281]"
    }, {
      "left" : "String url = \"http://photos.example.net/photos\";",
      "right" : "String url = \"http://photos.example.net/photos\";",
      "info" : "VariableDeclarationStatement[2971-3019]:VariableDeclarationStatement[5290-5338]"
    }, {
      "left" : "String sig = calc.calculateSignature(\"GET\", Uri.create(url), TIMESTAMP, NONCE, null, queryParams);",
      "right" : "String sig = calc.calculateSignature(\"GET\", Uri.create(url), TIMESTAMP, NONCE, null, queryParams);",
      "info" : "VariableDeclarationStatement[3028-3126]:VariableDeclarationStatement[5347-5445]"
    }, {
      "left" : "assertEquals(sig, \"tR3+Ty81lMeYAr/Fid0kMTYa/WM=\");",
      "right" : "assertEquals(sig, \"tR3+Ty81lMeYAr/Fid0kMTYa/WM=\");",
      "info" : "ExpressionStatement[3136-3186]:ExpressionStatement[5455-5505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3266-5390]:Block[5585-7767]"
    }, {
      "left" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "right" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "info" : "VariableDeclarationStatement[3276-3346]:VariableDeclarationStatement[5595-5665]"
    }, {
      "left" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "right" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "info" : "VariableDeclarationStatement[3355-3417]:VariableDeclarationStatement[5674-5736]"
    }, {
      "left" : "OAuthSignatureCalculator calc = new StaticOAuthSignatureCalculator(consumer, user, TIMESTAMP, NONCE);",
      "right" : "OAuthSignatureCalculator calc = new StaticOAuthSignatureCalculator(consumer, user, TIMESTAMP, NONCE);",
      "info" : "VariableDeclarationStatement[3426-3527]:VariableDeclarationStatement[5745-5846]"
    }, {
      "left" : "List<Param> formParams = new ArrayList<Param>();",
      "right" : "List<Param> formParams = new ArrayList<Param>();",
      "info" : "VariableDeclarationStatement[3537-3585]:VariableDeclarationStatement[5856-5904]"
    }, {
      "left" : "formParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "right" : "formParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "info" : "ExpressionStatement[3594-3644]:ExpressionStatement[5913-5963]"
    }, {
      "left" : "formParams.add(new Param(\"size\", \"original\"));",
      "right" : "formParams.add(new Param(\"size\", \"original\"));",
      "info" : "ExpressionStatement[3653-3699]:ExpressionStatement[5972-6018]"
    }, {
      "left" : "String url = \"http://photos.example.net/photos\";",
      "right" : "String url = \"http://photos.example.net/photos\";",
      "info" : "VariableDeclarationStatement[3708-3756]:VariableDeclarationStatement[6027-6075]"
    }, {
      "left" : "final Request req = new RequestBuilder(\"POST\")\n                .setUri(Uri.create(url))\n                .setFormParams(formParams)\n                .setSignatureCalculator(calc).build();",
      "right" : "final Request req = new RequestBuilder(\"POST\")//\n                .setUri(Uri.create(url))//\n                .setFormParams(formParams)//\n                .setSignatureCalculator(calc)//\n                .build();",
      "info" : "VariableDeclarationStatement[3765-3950]:VariableDeclarationStatement[6084-6294]"
    }, {
      "left" : "String authHeader = req.getHeaders().get(\"Authorization\").get(0);",
      "right" : "String authHeader = req.getHeaders().get(\"Authorization\").get(0);",
      "info" : "VariableDeclarationStatement[4898-4963]:VariableDeclarationStatement[7275-7340]"
    }, {
      "left" : "Matcher m = Pattern.compile(\"oauth_signature=\\\"(.+?)\\\"\").matcher(authHeader);",
      "right" : "Matcher m = Pattern.compile(\"oauth_signature=\\\"(.+?)\\\"\").matcher(authHeader);",
      "info" : "VariableDeclarationStatement[4972-5049]:VariableDeclarationStatement[7349-7426]"
    }, {
      "left" : "assertEquals(m.find(), true);",
      "right" : "assertEquals(m.find(), true);",
      "info" : "ExpressionStatement[5058-5087]:ExpressionStatement[7435-7464]"
    }, {
      "left" : "String encodedSig = m.group(1);",
      "right" : "String encodedSig = m.group(1);",
      "info" : "VariableDeclarationStatement[5096-5127]:VariableDeclarationStatement[7473-7504]"
    }, {
      "left" : "String sig = null;",
      "right" : "String sig = null;",
      "info" : "VariableDeclarationStatement[5136-5154]:VariableDeclarationStatement[7513-7531]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5163-5324]:TryStatement[7540-7701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5167-5236]:Block[7544-7613]"
    }, {
      "left" : "sig = URLDecoder.decode(encodedSig, \"UTF-8\");",
      "right" : "sig = URLDecoder.decode(encodedSig, \"UTF-8\");",
      "info" : "ExpressionStatement[5181-5226]:ExpressionStatement[7558-7603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5276-5324]:Block[7653-7701]"
    }, {
      "left" : "fail(\"bad encoding\", e);",
      "right" : "fail(\"bad encoding\", e);",
      "info" : "ExpressionStatement[5290-5314]:ExpressionStatement[7667-7691]"
    }, {
      "left" : "assertEquals(sig, \"wPkvxykrw+BTdCcGqKr+3I+PsiM=\");",
      "right" : "assertEquals(sig, \"wPkvxykrw+BTdCcGqKr+3I+PsiM=\");",
      "info" : "ExpressionStatement[5334-5384]:ExpressionStatement[7711-7761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5463-7711]:Block[7840-10142]"
    }, {
      "left" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "right" : "ConsumerKey consumer = new ConsumerKey(CONSUMER_KEY, CONSUMER_SECRET);",
      "info" : "VariableDeclarationStatement[5473-5543]:VariableDeclarationStatement[7850-7920]"
    }, {
      "left" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "right" : "RequestToken user = new RequestToken(TOKEN_KEY, TOKEN_SECRET);",
      "info" : "VariableDeclarationStatement[5552-5614]:VariableDeclarationStatement[7929-7991]"
    }, {
      "left" : "OAuthSignatureCalculator calc = new StaticOAuthSignatureCalculator(consumer, user, TIMESTAMP, NONCE);",
      "right" : "OAuthSignatureCalculator calc = new StaticOAuthSignatureCalculator(consumer, user, TIMESTAMP, NONCE);",
      "info" : "VariableDeclarationStatement[5623-5724]:VariableDeclarationStatement[8000-8101]"
    }, {
      "left" : "List<Param> queryParams = new ArrayList<Param>();",
      "right" : "List<Param> queryParams = new ArrayList<Param>();",
      "info" : "VariableDeclarationStatement[5734-5783]:VariableDeclarationStatement[8111-8160]"
    }, {
      "left" : "queryParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "right" : "queryParams.add(new Param(\"file\", \"vacation.jpg\"));",
      "info" : "ExpressionStatement[5792-5843]:ExpressionStatement[8169-8220]"
    }, {
      "left" : "queryParams.add(new Param(\"size\", \"original\"));",
      "right" : "queryParams.add(new Param(\"size\", \"original\"));",
      "info" : "ExpressionStatement[5852-5899]:ExpressionStatement[8229-8276]"
    }, {
      "left" : "String url = \"http://photos.example.net/photos\";",
      "right" : "String url = \"http://photos.example.net/photos\";",
      "info" : "VariableDeclarationStatement[5908-5956]:VariableDeclarationStatement[8285-8333]"
    }, {
      "left" : "final Request req = new RequestBuilder(\"GET\")\n                .setUri(Uri.create(url))\n                .setQueryParams(queryParams)\n                .setSignatureCalculator(calc).build();",
      "right" : "final Request req = new RequestBuilder(\"GET\")//\n                .setUri(Uri.create(url))//\n                .setQueryParams(queryParams)//\n                .setSignatureCalculator(calc)//\n                .build();",
      "info" : "VariableDeclarationStatement[5966-6152]:VariableDeclarationStatement[8343-8554]"
    }, {
      "left" : "final List<Param> params = req.getQueryParams();",
      "right" : "final List<Param> params = req.getQueryParams();",
      "info" : "VariableDeclarationStatement[6162-6210]:VariableDeclarationStatement[8564-8612]"
    }, {
      "left" : "assertEquals(params.size(), 2);",
      "right" : "assertEquals(params.size(), 2);",
      "info" : "ExpressionStatement[6219-6250]:ExpressionStatement[8621-8652]"
    }, {
      "left" : "String authHeader = req.getHeaders().get(\"Authorization\").get(0);",
      "right" : "String authHeader = req.getHeaders().get(\"Authorization\").get(0);",
      "info" : "VariableDeclarationStatement[7218-7283]:VariableDeclarationStatement[9649-9714]"
    }, {
      "left" : "Matcher m = Pattern.compile(\"oauth_signature=\\\"(.+?)\\\"\").matcher(authHeader);",
      "right" : "Matcher m = Pattern.compile(\"oauth_signature=\\\"(.+?)\\\"\").matcher(authHeader);",
      "info" : "VariableDeclarationStatement[7292-7369]:VariableDeclarationStatement[9723-9800]"
    }, {
      "left" : "assertEquals(m.find(), true);",
      "right" : "assertEquals(m.find(), true);",
      "info" : "ExpressionStatement[7378-7407]:ExpressionStatement[9809-9838]"
    }, {
      "left" : "String encodedSig = m.group(1);",
      "right" : "String encodedSig = m.group(1);",
      "info" : "VariableDeclarationStatement[7416-7447]:VariableDeclarationStatement[9847-9878]"
    }, {
      "left" : "String sig = null;",
      "right" : "String sig = null;",
      "info" : "VariableDeclarationStatement[7456-7474]:VariableDeclarationStatement[9887-9905]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7483-7644]:TryStatement[9914-10075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7487-7556]:Block[9918-9987]"
    }, {
      "left" : "sig = URLDecoder.decode(encodedSig, \"UTF-8\");",
      "right" : "sig = URLDecoder.decode(encodedSig, \"UTF-8\");",
      "info" : "ExpressionStatement[7501-7546]:ExpressionStatement[9932-9977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7596-7644]:Block[10027-10075]"
    }, {
      "left" : "fail(\"bad encoding\", e);",
      "right" : "fail(\"bad encoding\", e);",
      "info" : "ExpressionStatement[7610-7634]:ExpressionStatement[10041-10065]"
    }, {
      "left" : "assertEquals(sig, \"tR3+Ty81lMeYAr/Fid0kMTYa/WM=\");",
      "right" : "assertEquals(sig, \"tR3+Ty81lMeYAr/Fid0kMTYa/WM=\");",
      "info" : "ExpressionStatement[7654-7704]:ExpressionStatement[10085-10135]"
    } ]
  },
  "interFileMappings" : { }
}