{
  "matchedElements" : [
 {
    "left" : "class : TarArchiveOutputStream",
    "right" : "class : TarArchiveOutputStream",
    "info" : "TypeDeclaration[1062-11412]:TypeDeclaration[1062-11649]"
  }, {
    "left" : "LONGFILE_ERROR",
    "right" : "LONGFILE_ERROR",
    "info" : "FieldDeclaration[1341-1448]:FieldDeclaration[1341-1448]"
  }, {
    "left" : "LONGFILE_TRUNCATE",
    "right" : "LONGFILE_TRUNCATE",
    "info" : "FieldDeclaration[1454-1556]:FieldDeclaration[1454-1556]"
  }, {
    "left" : "LONGFILE_GNU",
    "right" : "LONGFILE_GNU",
    "info" : "FieldDeclaration[1562-1683]:FieldDeclaration[1562-1683]"
  }, {
    "left" : "currSize",
    "right" : "currSize",
    "info" : "FieldDeclaration[1689-1716]:FieldDeclaration[1689-1716]"
  }, {
    "left" : "currName",
    "right" : "currName",
    "info" : "FieldDeclaration[1721-1748]:FieldDeclaration[1721-1748]"
  }, {
    "left" : "currBytes",
    "right" : "currBytes",
    "info" : "FieldDeclaration[1753-1781]:FieldDeclaration[1753-1781]"
  }, {
    "left" : "recordBuf",
    "right" : "recordBuf",
    "info" : "FieldDeclaration[1786-1820]:FieldDeclaration[1786-1820]"
  }, {
    "left" : "assemLen",
    "right" : "assemLen",
    "info" : "FieldDeclaration[1825-1852]:FieldDeclaration[1825-1852]"
  }, {
    "left" : "assemBuf",
    "right" : "assemBuf",
    "info" : "FieldDeclaration[1857-1890]:FieldDeclaration[1857-1890]"
  }, {
    "left" : "buffer",
    "right" : "buffer",
    "info" : "FieldDeclaration[1895-1928]:FieldDeclaration[1895-1928]"
  }, {
    "left" : "longFileMode",
    "right" : "longFileMode",
    "info" : "FieldDeclaration[1933-1981]:FieldDeclaration[1933-1981]"
  }, {
    "left" : "closed",
    "right" : "closed",
    "info" : "FieldDeclaration[1987-2018]:FieldDeclaration[1987-2018]"
  }, {
    "left" : "out",
    "right" : "out",
    "info" : "FieldDeclaration[2110-2141]:FieldDeclaration[2157-2188]"
  }, {
    "left" : "public TarArchiveOutputStream(os ...)",
    "right" : "public TarArchiveOutputStream(os ...)",
    "info" : "MethodDeclaration[2147-2370]:MethodDeclaration[2194-2417]"
  }, {
    "left" : "public TarArchiveOutputStream(os , blockSize int)",
    "right" : "public TarArchiveOutputStream(os , blockSize int)",
    "info" : "MethodDeclaration[2376-2644]:MethodDeclaration[2423-2691]"
  }, {
    "left" : "public TarArchiveOutputStream(os , blockSize int, recordSize int)",
    "right" : "public TarArchiveOutputStream(os , blockSize int, recordSize int)",
    "info" : "MethodDeclaration[2650-3129]:MethodDeclaration[2697-3176]"
  }, {
    "left" : "public setLongFileMode(longFileMode int) : void",
    "right" : "public setLongFileMode(longFileMode int) : void",
    "info" : "MethodDeclaration[3135-3521]:MethodDeclaration[3182-3568]"
  }, {
    "left" : "public finish() : void",
    "right" : "public finish() : void",
    "info" : "MethodDeclaration[3528-3992]:MethodDeclaration[3575-4160]"
  }, {
    "left" : "public close() : void",
    "right" : "public close() : void",
    "info" : "MethodDeclaration[3998-4393]:MethodDeclaration[4166-4561]"
  }, {
    "left" : "public getRecordSize() : int",
    "right" : "public getRecordSize() : int",
    "info" : "MethodDeclaration[4399-4603]:MethodDeclaration[4567-4771]"
  }, {
    "left" : "public putArchiveEntry(archiveEntry ) : void",
    "right" : "public putArchiveEntry(archiveEntry ) : void",
    "info" : "MethodDeclaration[4609-6782]:MethodDeclaration[4777-6984]"
  }, {
    "left" : "public closeArchiveEntry() : void",
    "right" : "public closeArchiveEntry() : void",
    "info" : "MethodDeclaration[6788-7867]:MethodDeclaration[6990-8104]"
  }, {
    "left" : "public write(wBuf , wOffset int, numToWrite int) : void",
    "right" : "public write(wBuf , wOffset int, numToWrite int) : void",
    "info" : "MethodDeclaration[7873-10778]:MethodDeclaration[8110-11015]"
  }, {
    "left" : "private writeEOFRecord() : void",
    "right" : "private writeEOFRecord() : void",
    "info" : "MethodDeclaration[10784-11109]:MethodDeclaration[11021-11346]"
  }, {
    "left" : "public flush() : void",
    "right" : "public flush() : void",
    "info" : "MethodDeclaration[11168-11235]:MethodDeclaration[11405-11472]"
  }, {
    "left" : "public createArchiveEntry(inputFile , entryName ) : ",
    "right" : "public createArchiveEntry(inputFile , entryName ) : ",
    "info" : "MethodDeclaration[11241-11410]:MethodDeclaration[11478-11647]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1271-1277]:Modifier[1271-1277]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1278-1283]:TYPE_DECLARATION_KIND[1278-1283]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2244-2250]:Modifier[2291-2297]"
  }, {
    "left" : "TarArchiveOutputStream",
    "right" : "TarArchiveOutputStream",
    "info" : "SimpleName[2251-2273]:SimpleName[2298-2320]"
  }, {
    "left" : "OutputStream os",
    "right" : "OutputStream os",
    "info" : "SingleVariableDeclaration[2274-2289]:SingleVariableDeclaration[2321-2336]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2291-2370]:Block[2338-2417]"
  }, {
    "left" : "this(os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE);",
    "right" : "this(os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE);",
    "info" : "ConstructorInvocation[2301-2364]:ConstructorInvocation[2348-2411]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2519-2525]:Modifier[2566-2572]"
  }, {
    "left" : "TarArchiveOutputStream",
    "right" : "TarArchiveOutputStream",
    "info" : "SimpleName[2526-2548]:SimpleName[2573-2595]"
  }, {
    "left" : "OutputStream os",
    "right" : "OutputStream os",
    "info" : "SingleVariableDeclaration[2549-2564]:SingleVariableDeclaration[2596-2611]"
  }, {
    "left" : "int blockSize",
    "right" : "int blockSize",
    "info" : "SingleVariableDeclaration[2566-2579]:SingleVariableDeclaration[2613-2626]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2581-2644]:Block[2628-2691]"
  }, {
    "left" : "this(os, blockSize, TarBuffer.DEFAULT_RCDSIZE);",
    "right" : "this(os, blockSize, TarBuffer.DEFAULT_RCDSIZE);",
    "info" : "ConstructorInvocation[2591-2638]:ConstructorInvocation[2638-2685]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2841-2847]:Modifier[2888-2894]"
  }, {
    "left" : "TarArchiveOutputStream",
    "right" : "TarArchiveOutputStream",
    "info" : "SimpleName[2848-2870]:SimpleName[2895-2917]"
  }, {
    "left" : "OutputStream os",
    "right" : "OutputStream os",
    "info" : "SingleVariableDeclaration[2871-2886]:SingleVariableDeclaration[2918-2933]"
  }, {
    "left" : "int blockSize",
    "right" : "int blockSize",
    "info" : "SingleVariableDeclaration[2888-2901]:SingleVariableDeclaration[2935-2948]"
  }, {
    "left" : "int recordSize",
    "right" : "int recordSize",
    "info" : "SingleVariableDeclaration[2903-2917]:SingleVariableDeclaration[2950-2964]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2919-3129]:Block[2966-3176]"
  }, {
    "left" : "out = os;",
    "right" : "out = os;",
    "info" : "ExpressionStatement[2929-2938]:ExpressionStatement[2976-2985]"
  }, {
    "left" : "this.buffer = new TarBuffer(os, blockSize, recordSize);",
    "right" : "this.buffer = new TarBuffer(os, blockSize, recordSize);",
    "info" : "ExpressionStatement[2948-3003]:ExpressionStatement[2995-3050]"
  }, {
    "left" : "this.assemLen = 0;",
    "right" : "this.assemLen = 0;",
    "info" : "ExpressionStatement[3012-3030]:ExpressionStatement[3059-3077]"
  }, {
    "left" : "this.assemBuf = new byte[recordSize];",
    "right" : "this.assemBuf = new byte[recordSize];",
    "info" : "ExpressionStatement[3039-3076]:ExpressionStatement[3086-3123]"
  }, {
    "left" : "this.recordBuf = new byte[recordSize];",
    "right" : "this.recordBuf = new byte[recordSize];",
    "info" : "ExpressionStatement[3085-3123]:ExpressionStatement[3132-3170]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3426-3432]:Modifier[3473-3479]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[3433-3437]:PrimitiveType[3480-3484]"
  }, {
    "left" : "setLongFileMode",
    "right" : "setLongFileMode",
    "info" : "SimpleName[3438-3453]:SimpleName[3485-3500]"
  }, {
    "left" : "int longFileMode",
    "right" : "int longFileMode",
    "info" : "SingleVariableDeclaration[3454-3470]:SingleVariableDeclaration[3501-3517]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3472-3521]:Block[3519-3568]"
  }, {
    "left" : "this.longFileMode = longFileMode;",
    "right" : "this.longFileMode = longFileMode;",
    "info" : "ExpressionStatement[3482-3515]:ExpressionStatement[3529-3562]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3893-3899]:Modifier[3940-3946]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[3900-3904]:PrimitiveType[3947-3951]"
  }, {
    "left" : "finish",
    "right" : "finish",
    "info" : "SimpleName[3905-3911]:SimpleName[3952-3958]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[3921-3932]:SimpleType[3968-3979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3933-3992]:Block[3980-4160]"
  }, {
    "left" : "writeEOFRecord();",
    "right" : "writeEOFRecord();",
    "info" : "ExpressionStatement[3943-3960]:ExpressionStatement[4111-4128]"
  }, {
    "left" : "writeEOFRecord();",
    "right" : "writeEOFRecord();",
    "info" : "ExpressionStatement[3969-3986]:ExpressionStatement[4137-4154]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4212-4218]:Modifier[4380-4386]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4219-4223]:PrimitiveType[4387-4391]"
  }, {
    "left" : "close",
    "right" : "close",
    "info" : "SimpleName[4224-4229]:SimpleName[4392-4397]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[4239-4250]:SimpleType[4407-4418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4251-4393]:Block[4419-4561]"
  }, {
    "left" : "if (!closed)",
    "right" : "if (!closed)",
    "info" : "IfStatement[4261-4387]:IfStatement[4429-4555]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4274-4387]:Block[4442-4555]"
  }, {
    "left" : "finish();",
    "right" : "finish();",
    "info" : "ExpressionStatement[4288-4297]:ExpressionStatement[4456-4465]"
  }, {
    "left" : "buffer.close();",
    "right" : "buffer.close();",
    "info" : "ExpressionStatement[4310-4325]:ExpressionStatement[4478-4493]"
  }, {
    "left" : "out.close();",
    "right" : "out.close();",
    "info" : "ExpressionStatement[4338-4350]:ExpressionStatement[4506-4518]"
  }, {
    "left" : "closed = true;",
    "right" : "closed = true;",
    "info" : "ExpressionStatement[4363-4377]:ExpressionStatement[4531-4545]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4530-4536]:Modifier[4698-4704]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[4537-4540]:PrimitiveType[4705-4708]"
  }, {
    "left" : "getRecordSize",
    "right" : "getRecordSize",
    "info" : "SimpleName[4541-4554]:SimpleName[4709-4722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4557-4603]:Block[4725-4771]"
  }, {
    "left" : "return buffer.getRecordSize();",
    "right" : "return buffer.getRecordSize();",
    "info" : "ReturnStatement[4567-4597]:ReturnStatement[4735-4765]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5269-5275]:Modifier[5437-5443]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5276-5280]:PrimitiveType[5444-5448]"
  }, {
    "left" : "putArchiveEntry",
    "right" : "putArchiveEntry",
    "info" : "SimpleName[5281-5296]:SimpleName[5449-5464]"
  }, {
    "left" : "ArchiveEntry archiveEntry",
    "right" : "ArchiveEntry archiveEntry",
    "info" : "SingleVariableDeclaration[5297-5322]:SingleVariableDeclaration[5465-5490]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5331-5342]:SimpleType[5499-5510]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5343-6782]:Block[5511-6984]"
  }, {
    "left" : "TarArchiveEntry entry = (TarArchiveEntry) archiveEntry;",
    "right" : "TarArchiveEntry entry = (TarArchiveEntry) archiveEntry;",
    "info" : "VariableDeclarationStatement[5353-5408]:VariableDeclarationStatement[5521-5576]"
  }, {
    "left" : "if (entry.getName().length() >= TarConstants.NAMELEN)",
    "right" : "if (entry.getName().length() >= TarConstants.NAMELEN)",
    "info" : "IfStatement[5417-6504]:IfStatement[5585-6672]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5471-6504]:Block[5639-6672]"
  }, {
    "left" : "if (longFileMode == LONGFILE_GNU)",
    "right" : "if (longFileMode == LONGFILE_GNU)",
    "info" : "IfStatement[5486-6494]:IfStatement[5654-6662]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5520-6213]:Block[5688-6381]"
  }, {
    "left" : "TarArchiveEntry longLinkEntry = new TarArchiveEntry(TarConstants.GNU_LONGLINK,\n                                                                    TarConstants.LF_GNUTYPE_LONGNAME);",
    "right" : "TarArchiveEntry longLinkEntry = new TarArchiveEntry(TarConstants.GNU_LONGLINK,\n                                                                    TarConstants.LF_GNUTYPE_LONGNAME);",
    "info" : "VariableDeclarationStatement[5655-5836]:VariableDeclarationStatement[5823-6004]"
  }, {
    "left" : "final byte[] nameBytes = entry.getName().getBytes();",
    "right" : "final byte[] nameBytes = entry.getName().getBytes();",
    "info" : "VariableDeclarationStatement[5854-5906]:VariableDeclarationStatement[6022-6074]"
  }, {
    "left" : "longLinkEntry.setSize(nameBytes.length + 1);",
    "right" : "longLinkEntry.setSize(nameBytes.length + 1);",
    "info" : "ExpressionStatement[5978-6022]:ExpressionStatement[6146-6190]"
  }, {
    "left" : "putArchiveEntry(longLinkEntry);",
    "right" : "putArchiveEntry(longLinkEntry);",
    "info" : "ExpressionStatement[6053-6084]:ExpressionStatement[6221-6252]"
  }, {
    "left" : "write(nameBytes);",
    "right" : "write(nameBytes);",
    "info" : "ExpressionStatement[6101-6118]:ExpressionStatement[6269-6286]"
  }, {
    "left" : "write(0);",
    "right" : "write(0);",
    "info" : "ExpressionStatement[6135-6144]:ExpressionStatement[6303-6312]"
  }, {
    "left" : "closeArchiveEntry();",
    "right" : "closeArchiveEntry();",
    "info" : "ExpressionStatement[6179-6199]:ExpressionStatement[6347-6367]"
  }, {
    "left" : "if (longFileMode != LONGFILE_TRUNCATE)",
    "right" : "if (longFileMode != LONGFILE_TRUNCATE)",
    "info" : "IfStatement[6219-6494]:IfStatement[6387-6662]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6258-6494]:Block[6426-6662]"
  }, {
    "left" : "throw new RuntimeException(\"file name '\" + entry.getName()\n                                           + \"' is too long ( > \"\n                                           + TarConstants.NAMELEN + \" bytes)\");",
    "right" : "throw new RuntimeException(\"file name '\" + entry.getName()\n                                           + \"' is too long ( > \"\n                                           + TarConstants.NAMELEN + \" bytes)\");",
    "info" : "ThrowStatement[6276-6480]:ThrowStatement[6444-6648]"
  }, {
    "left" : "entry.writeEntryHeader(recordBuf);",
    "right" : "entry.writeEntryHeader(recordBuf);",
    "info" : "ExpressionStatement[6514-6548]:ExpressionStatement[6682-6716]"
  }, {
    "left" : "buffer.writeRecord(recordBuf);",
    "right" : "buffer.writeRecord(recordBuf);",
    "info" : "ExpressionStatement[6557-6587]:ExpressionStatement[6725-6755]"
  }, {
    "left" : "currBytes = 0;",
    "right" : "currBytes = 0;",
    "info" : "ExpressionStatement[6597-6611]:ExpressionStatement[6765-6779]"
  }, {
    "left" : "if (entry.isDirectory())",
    "right" : "if (entry.isDirectory())",
    "info" : "IfStatement[6621-6740]:IfStatement[6789-6908]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6646-6683]:Block[6814-6851]"
  }, {
    "left" : "currSize = 0;",
    "right" : "currSize = 0;",
    "info" : "ExpressionStatement[6660-6673]:ExpressionStatement[6828-6841]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6689-6740]:Block[6857-6908]"
  }, {
    "left" : "currSize = entry.getSize();",
    "right" : "currSize = entry.getSize();",
    "info" : "ExpressionStatement[6703-6730]:ExpressionStatement[6871-6898]"
  }, {
    "left" : "currName = entry.getName();",
    "right" : "currName = entry.getName();",
    "info" : "ExpressionStatement[6749-6776]:ExpressionStatement[6917-6944]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7241-7247]:Modifier[7443-7449]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7248-7252]:PrimitiveType[7450-7454]"
  }, {
    "left" : "closeArchiveEntry",
    "right" : "closeArchiveEntry",
    "info" : "SimpleName[7253-7270]:SimpleName[7455-7472]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[7280-7291]:SimpleType[7482-7493]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7292-7867]:Block[7494-8104]"
  }, {
    "left" : "if (assemLen > 0)",
    "right" : "if (assemLen > 0)",
    "info" : "IfStatement[7302-7546]:IfStatement[7504-7748]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7320-7546]:Block[7522-7748]"
  }, {
    "left" : "for (int i = assemLen; i < assemBuf.length; ++i)",
    "right" : "for (int i = assemLen; i < assemBuf.length; ++i)",
    "info" : "ForStatement[7334-7431]:ForStatement[7536-7633]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7383-7431]:Block[7585-7633]"
  }, {
    "left" : "assemBuf[i] = 0;",
    "right" : "assemBuf[i] = 0;",
    "info" : "ExpressionStatement[7401-7417]:ExpressionStatement[7603-7619]"
  }, {
    "left" : "buffer.writeRecord(assemBuf);",
    "right" : "buffer.writeRecord(assemBuf);",
    "info" : "ExpressionStatement[7445-7474]:ExpressionStatement[7647-7676]"
  }, {
    "left" : "currBytes += assemLen;",
    "right" : "currBytes += assemLen;",
    "info" : "ExpressionStatement[7488-7510]:ExpressionStatement[7690-7712]"
  }, {
    "left" : "assemLen = 0;",
    "right" : "assemLen = 0;",
    "info" : "ExpressionStatement[7523-7536]:ExpressionStatement[7725-7738]"
  }, {
    "left" : "if (currBytes < currSize)",
    "right" : "if (currBytes < currSize)",
    "info" : "IfStatement[7556-7861]:IfStatement[7758-8063]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7582-7861]:Block[7784-8063]"
  }, {
    "left" : "throw new IOException(\"entry '\" + currName + \"' closed at '\"\n                                  + currBytes\n                                  + \"' before the '\" + currSize\n                                  + \"' bytes specified in the header were written\");",
    "right" : "throw new IOException(\"entry '\" + currName + \"' closed at '\"\n                                  + currBytes\n                                  + \"' before the '\" + currSize\n                                  + \"' bytes specified in the header were written\");",
    "info" : "ThrowStatement[7596-7851]:ThrowStatement[7798-8053]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8561-8567]:Modifier[8798-8804]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8568-8572]:PrimitiveType[8805-8809]"
  }, {
    "left" : "write",
    "right" : "write",
    "info" : "SimpleName[8573-8578]:SimpleName[8810-8815]"
  }, {
    "left" : "byte[] wBuf",
    "right" : "byte[] wBuf",
    "info" : "SingleVariableDeclaration[8579-8590]:SingleVariableDeclaration[8816-8827]"
  }, {
    "left" : "int wOffset",
    "right" : "int wOffset",
    "info" : "SingleVariableDeclaration[8592-8603]:SingleVariableDeclaration[8829-8840]"
  }, {
    "left" : "int numToWrite",
    "right" : "int numToWrite",
    "info" : "SingleVariableDeclaration[8605-8619]:SingleVariableDeclaration[8842-8856]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[8628-8639]:SimpleType[8865-8876]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8640-10778]:Block[8877-11015]"
  }, {
    "left" : "if ((currBytes + numToWrite) > currSize)",
    "right" : "if ((currBytes + numToWrite) > currSize)",
    "info" : "IfStatement[8650-9324]:IfStatement[8887-9561]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8691-9324]:Block[8928-9561]"
  }, {
    "left" : "throw new IOException(\"request to write '\" + numToWrite\n                                  + \"' bytes exceeds size in header of '\"\n                                  + currSize + \"' bytes for entry '\"\n                                  + currName + \"'\");",
    "right" : "throw new IOException(\"request to write '\" + numToWrite\n                                  + \"' bytes exceeds size in header of '\"\n                                  + currSize + \"' bytes for entry '\"\n                                  + currName + \"'\");",
    "info" : "ThrowStatement[8705-8956]:ThrowStatement[8942-9193]"
  }, {
    "left" : "if (assemLen > 0)",
    "right" : "if (assemLen > 0)",
    "info" : "IfStatement[9334-10151]:IfStatement[9571-10388]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9352-10151]:Block[9589-10388]"
  }, {
    "left" : "if ((assemLen + numToWrite) >= recordBuf.length)",
    "right" : "if ((assemLen + numToWrite) >= recordBuf.length)",
    "info" : "IfStatement[9366-10141]:IfStatement[9603-10378]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9415-9894]:Block[9652-10131]"
  }, {
    "left" : "int aLen = recordBuf.length - assemLen;",
    "right" : "int aLen = recordBuf.length - assemLen;",
    "info" : "VariableDeclarationStatement[9433-9472]:VariableDeclarationStatement[9670-9709]"
  }, {
    "left" : "System.arraycopy(assemBuf, 0, recordBuf, 0,\n                                 assemLen);",
    "right" : "System.arraycopy(assemBuf, 0, recordBuf, 0,\n                                 assemLen);",
    "info" : "ExpressionStatement[9490-9577]:ExpressionStatement[9727-9814]"
  }, {
    "left" : "System.arraycopy(wBuf, wOffset, recordBuf,\n                                 assemLen, aLen);",
    "right" : "System.arraycopy(wBuf, wOffset, recordBuf,\n                                 assemLen, aLen);",
    "info" : "ExpressionStatement[9594-9686]:ExpressionStatement[9831-9923]"
  }, {
    "left" : "buffer.writeRecord(recordBuf);",
    "right" : "buffer.writeRecord(recordBuf);",
    "info" : "ExpressionStatement[9703-9733]:ExpressionStatement[9940-9970]"
  }, {
    "left" : "currBytes += recordBuf.length;",
    "right" : "currBytes += recordBuf.length;",
    "info" : "ExpressionStatement[9751-9781]:ExpressionStatement[9988-10018]"
  }, {
    "left" : "wOffset += aLen;",
    "right" : "wOffset += aLen;",
    "info" : "ExpressionStatement[9798-9814]:ExpressionStatement[10035-10051]"
  }, {
    "left" : "numToWrite -= aLen;",
    "right" : "numToWrite -= aLen;",
    "info" : "ExpressionStatement[9831-9850]:ExpressionStatement[10068-10087]"
  }, {
    "left" : "assemLen = 0;",
    "right" : "assemLen = 0;",
    "info" : "ExpressionStatement[9867-9880]:ExpressionStatement[10104-10117]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9900-10141]:Block[10137-10378]"
  }, {
    "left" : "System.arraycopy(wBuf, wOffset, assemBuf, assemLen,\n                                 numToWrite);",
    "right" : "System.arraycopy(wBuf, wOffset, assemBuf, assemLen,\n                                 numToWrite);",
    "info" : "ExpressionStatement[9918-10015]:ExpressionStatement[10155-10252]"
  }, {
    "left" : "wOffset += numToWrite;",
    "right" : "wOffset += numToWrite;",
    "info" : "ExpressionStatement[10033-10055]:ExpressionStatement[10270-10292]"
  }, {
    "left" : "assemLen += numToWrite;",
    "right" : "assemLen += numToWrite;",
    "info" : "ExpressionStatement[10072-10095]:ExpressionStatement[10309-10332]"
  }, {
    "left" : "numToWrite = 0;",
    "right" : "numToWrite = 0;",
    "info" : "ExpressionStatement[10112-10127]:ExpressionStatement[10349-10364]"
  }, {
    "left" : "while (numToWrite > 0)",
    "right" : "while (numToWrite > 0)",
    "info" : "WhileStatement[10317-10772]:WhileStatement[10554-11009]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10340-10772]:Block[10577-11009]"
  }, {
    "left" : "if (numToWrite < recordBuf.length)",
    "right" : "if (numToWrite < recordBuf.length)",
    "info" : "IfStatement[10354-10583]:IfStatement[10591-10820]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10389-10583]:Block[10626-10820]"
  }, {
    "left" : "System.arraycopy(wBuf, wOffset, assemBuf, assemLen,\n                                 numToWrite);",
    "right" : "System.arraycopy(wBuf, wOffset, assemBuf, assemLen,\n                                 numToWrite);",
    "info" : "ExpressionStatement[10407-10504]:ExpressionStatement[10644-10741]"
  }, {
    "left" : "assemLen += numToWrite;",
    "right" : "assemLen += numToWrite;",
    "info" : "ExpressionStatement[10522-10545]:ExpressionStatement[10759-10782]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[10563-10569]:BreakStatement[10800-10806]"
  }, {
    "left" : "buffer.writeRecord(wBuf, wOffset);",
    "right" : "buffer.writeRecord(wBuf, wOffset);",
    "info" : "ExpressionStatement[10597-10631]:ExpressionStatement[10834-10868]"
  }, {
    "left" : "int num = recordBuf.length;",
    "right" : "int num = recordBuf.length;",
    "info" : "VariableDeclarationStatement[10645-10672]:VariableDeclarationStatement[10882-10909]"
  }, {
    "left" : "currBytes += num;",
    "right" : "currBytes += num;",
    "info" : "ExpressionStatement[10686-10703]:ExpressionStatement[10923-10940]"
  }, {
    "left" : "numToWrite -= num;",
    "right" : "numToWrite -= num;",
    "info" : "ExpressionStatement[10716-10734]:ExpressionStatement[10953-10971]"
  }, {
    "left" : "wOffset += num;",
    "right" : "wOffset += num;",
    "info" : "ExpressionStatement[10747-10762]:ExpressionStatement[10984-10999]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[10920-10927]:Modifier[11157-11164]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[10928-10932]:PrimitiveType[11165-11169]"
  }, {
    "left" : "writeEOFRecord",
    "right" : "writeEOFRecord",
    "info" : "SimpleName[10933-10947]:SimpleName[11170-11184]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[10957-10968]:SimpleType[11194-11205]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10969-11109]:Block[11206-11346]"
  }, {
    "left" : "for (int i = 0; i < recordBuf.length; ++i)",
    "right" : "for (int i = 0; i < recordBuf.length; ++i)",
    "info" : "ForStatement[10979-11063]:ForStatement[11216-11300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11022-11063]:Block[11259-11300]"
  }, {
    "left" : "recordBuf[i] = 0;",
    "right" : "recordBuf[i] = 0;",
    "info" : "ExpressionStatement[11036-11053]:ExpressionStatement[11273-11290]"
  }, {
    "left" : "buffer.writeRecord(recordBuf);",
    "right" : "buffer.writeRecord(recordBuf);",
    "info" : "ExpressionStatement[11073-11103]:ExpressionStatement[11310-11340]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11168-11174]:Modifier[11405-11411]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[11175-11179]:PrimitiveType[11412-11416]"
  }, {
    "left" : "flush",
    "right" : "flush",
    "info" : "SimpleName[11180-11185]:SimpleName[11417-11422]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[11195-11206]:SimpleType[11432-11443]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11207-11235]:Block[11444-11472]"
  }, {
    "left" : "out.flush();",
    "right" : "out.flush();",
    "info" : "ExpressionStatement[11217-11229]:ExpressionStatement[11454-11466]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11241-11247]:Modifier[11478-11484]"
  }, {
    "left" : "ArchiveEntry",
    "right" : "ArchiveEntry",
    "info" : "SimpleType[11248-11260]:SimpleType[11485-11497]"
  }, {
    "left" : "createArchiveEntry",
    "right" : "createArchiveEntry",
    "info" : "SimpleName[11261-11279]:SimpleName[11498-11516]"
  }, {
    "left" : "File inputFile",
    "right" : "File inputFile",
    "info" : "SingleVariableDeclaration[11280-11294]:SingleVariableDeclaration[11517-11531]"
  }, {
    "left" : "String entryName",
    "right" : "String entryName",
    "info" : "SingleVariableDeclaration[11296-11312]:SingleVariableDeclaration[11533-11549]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[11333-11344]:SimpleType[11570-11581]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11345-11410]:Block[11582-11647]"
  }, {
    "left" : "return new TarArchiveEntry(inputFile, entryName);",
    "right" : "return new TarArchiveEntry(inputFile, entryName);",
    "info" : "ReturnStatement[11355-11404]:ReturnStatement[11592-11641]"
  } ]
}