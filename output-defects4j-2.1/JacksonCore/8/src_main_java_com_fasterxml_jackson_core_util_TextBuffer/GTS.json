{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TextBuffer",
      "right" : "TextBuffer",
      "info" : "TypeDeclaration[176-23080]:TypeDeclaration[176-23107]"
    }, {
      "left" : "final static char[] NO_CHARS = new char[0];",
      "right" : "final static char[] NO_CHARS = new char[0];",
      "info" : "FieldDeclaration[894-937]:FieldDeclaration[894-937]"
    }, {
      "left" : "final static int MIN_SEGMENT_LEN = 1000;",
      "right" : "final static int MIN_SEGMENT_LEN = 1000;",
      "info" : "FieldDeclaration[943-1075]:FieldDeclaration[943-1075]"
    }, {
      "left" : "final static int MAX_SEGMENT_LEN = 0x40000;",
      "right" : "final static int MAX_SEGMENT_LEN = 0x40000;",
      "info" : "FieldDeclaration[1085-1225]:FieldDeclaration[1085-1225]"
    }, {
      "left" : "private final BufferRecycler _allocator;",
      "right" : "private final BufferRecycler _allocator;",
      "info" : "FieldDeclaration[1401-1441]:FieldDeclaration[1401-1441]"
    }, {
      "left" : "private char[] _inputBuffer;",
      "right" : "private char[] _inputBuffer;",
      "info" : "FieldDeclaration[1619-1853]:FieldDeclaration[1619-1853]"
    }, {
      "left" : "private int _inputStart;",
      "right" : "private int _inputStart;",
      "info" : "FieldDeclaration[1859-2042]:FieldDeclaration[1859-2042]"
    }, {
      "left" : "private int _inputLen;",
      "right" : "private int _inputLen;",
      "info" : "FieldDeclaration[2048-2070]:FieldDeclaration[2048-2070]"
    }, {
      "left" : "private ArrayList<char[]> _segments;",
      "right" : "private ArrayList<char[]> _segments;",
      "info" : "FieldDeclaration[2275-2386]:FieldDeclaration[2275-2386]"
    }, {
      "left" : "private boolean _hasSegments = false;",
      "right" : "private boolean _hasSegments = false;",
      "info" : "FieldDeclaration[2392-2503]:FieldDeclaration[2392-2503]"
    }, {
      "left" : "private int _segmentSize;",
      "right" : "private int _segmentSize;",
      "info" : "FieldDeclaration[2580-2682]:FieldDeclaration[2580-2682]"
    }, {
      "left" : "private char[] _currentSegment;",
      "right" : "private char[] _currentSegment;",
      "info" : "FieldDeclaration[2688-2719]:FieldDeclaration[2688-2719]"
    }, {
      "left" : "private int _currentSize;",
      "right" : "private int _currentSize;",
      "info" : "FieldDeclaration[2725-2829]:FieldDeclaration[2725-2829]"
    }, {
      "left" : "private String _resultString;",
      "right" : "private String _resultString;",
      "info" : "FieldDeclaration[3005-3184]:FieldDeclaration[3005-3184]"
    }, {
      "left" : "private char[] _resultArray;",
      "right" : "private char[] _resultArray;",
      "info" : "FieldDeclaration[3190-3218]:FieldDeclaration[3190-3218]"
    }, {
      "left" : "public TextBuffer(BufferRecycler allocator)",
      "right" : "public TextBuffer(BufferRecycler allocator)",
      "info" : "MethodDeclaration[3386-3469]:MethodDeclaration[3386-3469]"
    }, {
      "left" : "public void releaseBuffers()",
      "right" : "public void releaseBuffers()",
      "info" : "MethodDeclaration[3475-4412]:MethodDeclaration[3475-4412]"
    }, {
      "left" : "public void resetWithEmpty()",
      "right" : "public void resetWithEmpty()",
      "info" : "MethodDeclaration[4418-4928]:MethodDeclaration[4418-4928]"
    }, {
      "left" : "public void resetWithShared(char[] buf, int start, int len)",
      "right" : "public void resetWithShared(char[] buf, int start, int len)",
      "info" : "MethodDeclaration[4934-5691]:MethodDeclaration[4934-5691]"
    }, {
      "left" : "public void resetWithCopy(char[] buf, int start, int len)",
      "right" : "public void resetWithCopy(char[] buf, int start, int len)",
      "info" : "MethodDeclaration[5697-6232]:MethodDeclaration[5697-6232]"
    }, {
      "left" : "public void resetWithString(String value)",
      "right" : "public void resetWithString(String value)",
      "info" : "MethodDeclaration[6238-6533]:MethodDeclaration[6238-6533]"
    }, {
      "left" : "private char[] buf(int needed)",
      "right" : "private char[] buf(int needed)",
      "info" : "MethodDeclaration[6543-6881]:MethodDeclaration[6543-6881]"
    }, {
      "left" : "private void clearSegments()",
      "right" : "private void clearSegments()",
      "info" : "MethodDeclaration[6887-7358]:MethodDeclaration[6887-7358]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[7559-8028]:MethodDeclaration[7559-8028]"
    }, {
      "left" : "public int getTextOffset()",
      "right" : "public int getTextOffset()",
      "info" : "MethodDeclaration[8034-8335]:MethodDeclaration[8034-8335]"
    }, {
      "left" : "public boolean hasTextAsCharacters()",
      "right" : "public boolean hasTextAsCharacters()",
      "info" : "MethodDeclaration[8341-8762]:MethodDeclaration[8341-8762]"
    }, {
      "left" : "public char[] getTextBuffer()",
      "right" : "public char[] getTextBuffer()",
      "info" : "MethodDeclaration[8772-9295]:MethodDeclaration[8772-9322]"
    }, {
      "left" : "public String contentsAsString()",
      "right" : "public String contentsAsString()",
      "info" : "MethodDeclaration[9469-11182]:MethodDeclaration[9496-11209]"
    }, {
      "left" : "public char[] contentsAsArray()",
      "right" : "public char[] contentsAsArray()",
      "info" : "MethodDeclaration[11189-11380]:MethodDeclaration[11216-11407]"
    }, {
      "left" : "public BigDecimal contentsAsDecimal() throws NumberFormatException",
      "right" : "public BigDecimal contentsAsDecimal() throws NumberFormatException",
      "info" : "MethodDeclaration[11386-12243]:MethodDeclaration[11413-12270]"
    }, {
      "left" : "public double contentsAsDouble() throws NumberFormatException",
      "right" : "public double contentsAsDouble() throws NumberFormatException",
      "info" : "MethodDeclaration[12249-12486]:MethodDeclaration[12276-12513]"
    }, {
      "left" : "public void ensureNotShared()",
      "right" : "public void ensureNotShared()",
      "info" : "MethodDeclaration[12660-12923]:MethodDeclaration[12687-12950]"
    }, {
      "left" : "public void append(char c)",
      "right" : "public void append(char c)",
      "info" : "MethodDeclaration[12929-13349]:MethodDeclaration[12956-13376]"
    }, {
      "left" : "public void append(char[] c, int start, int len)",
      "right" : "public void append(char[] c, int start, int len)",
      "info" : "MethodDeclaration[13355-14556]:MethodDeclaration[13382-14583]"
    }, {
      "left" : "public void append(String str, int offset, int len)",
      "right" : "public void append(String str, int offset, int len)",
      "info" : "MethodDeclaration[14562-15758]:MethodDeclaration[14589-15785]"
    }, {
      "left" : "public char[] getCurrentSegment()",
      "right" : "public char[] getCurrentSegment()",
      "info" : "MethodDeclaration[15953-16597]:MethodDeclaration[15980-16624]"
    }, {
      "left" : "public char[] emptyAndGetCurrentSegment()",
      "right" : "public char[] emptyAndGetCurrentSegment()",
      "info" : "MethodDeclaration[16603-17169]:MethodDeclaration[16630-17196]"
    }, {
      "left" : "public int getCurrentSegmentSize()",
      "right" : "public int getCurrentSegmentSize()",
      "info" : "MethodDeclaration[17175-17234]:MethodDeclaration[17202-17261]"
    }, {
      "left" : "public void setCurrentLength(int len)",
      "right" : "public void setCurrentLength(int len)",
      "info" : "MethodDeclaration[17239-17300]:MethodDeclaration[17266-17327]"
    }, {
      "left" : "public String setCurrentAndReturn(int len)",
      "right" : "public String setCurrentAndReturn(int len)",
      "info" : "MethodDeclaration[17306-17825]:MethodDeclaration[17333-17852]"
    }, {
      "left" : "public char[] finishCurrentSegment()",
      "right" : "public char[] finishCurrentSegment()",
      "info" : "MethodDeclaration[17835-18489]:MethodDeclaration[17862-18516]"
    }, {
      "left" : "public char[] expandCurrentSegment()",
      "right" : "public char[] expandCurrentSegment()",
      "info" : "MethodDeclaration[18495-19117]:MethodDeclaration[18522-19144]"
    }, {
      "left" : "public char[] expandCurrentSegment(int minSize)",
      "right" : "public char[] expandCurrentSegment(int minSize)",
      "info" : "MethodDeclaration[19123-19653]:MethodDeclaration[19150-19680]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[19828-20077]:MethodDeclaration[19855-20104]"
    }, {
      "left" : "private void unshare(int needExtra)",
      "right" : "private void unshare(int needExtra)",
      "info" : "MethodDeclaration[20252-21024]:MethodDeclaration[20279-21051]"
    }, {
      "left" : "private void expand(int minNewSegmentSize)",
      "right" : "private void expand(int minNewSegmentSize)",
      "info" : "MethodDeclaration[21030-21844]:MethodDeclaration[21057-21871]"
    }, {
      "left" : "private char[] resultArray()",
      "right" : "private char[] resultArray()",
      "info" : "MethodDeclaration[21850-23018]:MethodDeclaration[21877-23045]"
    }, {
      "left" : "private char[] carr(int len)",
      "right" : "private char[] carr(int len)",
      "info" : "MethodDeclaration[23024-23078]:MethodDeclaration[23051-23105]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3430-3469]:Block[3430-3469]"
    }, {
      "left" : "_allocator = allocator;",
      "right" : "_allocator = allocator;",
      "info" : "ExpressionStatement[3440-3463]:ExpressionStatement[3440-3463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3933-4412]:Block[3933-4412]"
    }, {
      "left" : "if (_allocator == null)",
      "right" : "if (_allocator == null)",
      "info" : "IfStatement[3943-4406]:IfStatement[3943-4406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3967-4008]:Block[3967-4008]"
    }, {
      "left" : "resetWithEmpty();",
      "right" : "resetWithEmpty();",
      "info" : "ExpressionStatement[3981-3998]:ExpressionStatement[3981-3998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4014-4406]:Block[4014-4406]"
    }, {
      "left" : "if (_currentSegment != null)",
      "right" : "if (_currentSegment != null)",
      "info" : "IfStatement[4028-4396]:IfStatement[4028-4396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4057-4396]:Block[4057-4396]"
    }, {
      "left" : "resetWithEmpty();",
      "right" : "resetWithEmpty();",
      "info" : "ExpressionStatement[4149-4166]:ExpressionStatement[4149-4166]"
    }, {
      "left" : "char[] buf = _currentSegment;",
      "right" : "char[] buf = _currentSegment;",
      "info" : "VariableDeclarationStatement[4229-4258]:VariableDeclarationStatement[4229-4258]"
    }, {
      "left" : "_currentSegment = null;",
      "right" : "_currentSegment = null;",
      "info" : "ExpressionStatement[4275-4298]:ExpressionStatement[4275-4298]"
    }, {
      "left" : "_allocator.releaseCharBuffer(BufferRecycler.CHAR_TEXT_BUFFER, buf);",
      "right" : "_allocator.releaseCharBuffer(BufferRecycler.CHAR_TEXT_BUFFER, buf);",
      "info" : "ExpressionStatement[4315-4382]:ExpressionStatement[4315-4382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4589-4928]:Block[4589-4928]"
    }, {
      "left" : "_inputStart = -1;",
      "right" : "_inputStart = -1;",
      "info" : "ExpressionStatement[4599-4616]:ExpressionStatement[4599-4616]"
    }, {
      "left" : "_currentSize = 0;",
      "right" : "_currentSize = 0;",
      "info" : "ExpressionStatement[4661-4678]:ExpressionStatement[4661-4678]"
    }, {
      "left" : "_inputLen = 0;",
      "right" : "_inputLen = 0;",
      "info" : "ExpressionStatement[4687-4701]:ExpressionStatement[4687-4701]"
    }, {
      "left" : "_inputBuffer = null;",
      "right" : "_inputBuffer = null;",
      "info" : "ExpressionStatement[4711-4731]:ExpressionStatement[4711-4731]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[4740-4761]:ExpressionStatement[4740-4761]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[4770-4790]:ExpressionStatement[4770-4790]"
    }, {
      "left" : "if (_hasSegments)",
      "right" : "if (_hasSegments)",
      "info" : "IfStatement[4864-4922]:IfStatement[4864-4922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4882-4922]:Block[4882-4922]"
    }, {
      "left" : "clearSegments();",
      "right" : "clearSegments();",
      "info" : "ExpressionStatement[4896-4912]:ExpressionStatement[4896-4912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5290-5691]:Block[5290-5691]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[5359-5380]:ExpressionStatement[5359-5380]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[5389-5409]:ExpressionStatement[5389-5409]"
    }, {
      "left" : "_inputBuffer = buf;",
      "right" : "_inputBuffer = buf;",
      "info" : "ExpressionStatement[5480-5499]:ExpressionStatement[5480-5499]"
    }, {
      "left" : "_inputStart = start;",
      "right" : "_inputStart = start;",
      "info" : "ExpressionStatement[5508-5528]:ExpressionStatement[5508-5528]"
    }, {
      "left" : "_inputLen = len;",
      "right" : "_inputLen = len;",
      "info" : "ExpressionStatement[5537-5553]:ExpressionStatement[5537-5553]"
    }, {
      "left" : "if (_hasSegments)",
      "right" : "if (_hasSegments)",
      "info" : "IfStatement[5627-5685]:IfStatement[5627-5685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5645-5685]:Block[5645-5685]"
    }, {
      "left" : "clearSegments();",
      "right" : "clearSegments();",
      "info" : "ExpressionStatement[5659-5675]:ExpressionStatement[5659-5675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5759-6232]:Block[5759-6232]"
    }, {
      "left" : "_inputBuffer = null;",
      "right" : "_inputBuffer = null;",
      "info" : "ExpressionStatement[5769-5789]:ExpressionStatement[5769-5789]"
    }, {
      "left" : "_inputStart = -1;",
      "right" : "_inputStart = -1;",
      "info" : "ExpressionStatement[5798-5815]:ExpressionStatement[5798-5815]"
    }, {
      "left" : "_inputLen = 0;",
      "right" : "_inputLen = 0;",
      "info" : "ExpressionStatement[5860-5874]:ExpressionStatement[5860-5874]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[5884-5905]:ExpressionStatement[5884-5905]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[5914-5934]:ExpressionStatement[5914-5934]"
    }, {
      "left" : "if (_hasSegments)",
      "right" : "if (_hasSegments)",
      "info" : "IfStatement[6008-6152]:IfStatement[6008-6152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6026-6066]:Block[6026-6066]"
    }, {
      "left" : "clearSegments();",
      "right" : "clearSegments();",
      "info" : "ExpressionStatement[6040-6056]:ExpressionStatement[6040-6056]"
    }, {
      "left" : "if (_currentSegment == null)",
      "right" : "if (_currentSegment == null)",
      "info" : "IfStatement[6072-6152]:IfStatement[6072-6152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6101-6152]:Block[6101-6152]"
    }, {
      "left" : "_currentSegment = buf(len);",
      "right" : "_currentSegment = buf(len);",
      "info" : "ExpressionStatement[6115-6142]:ExpressionStatement[6115-6142]"
    }, {
      "left" : "_currentSize = _segmentSize = 0;",
      "right" : "_currentSize = _segmentSize = 0;",
      "info" : "ExpressionStatement[6161-6193]:ExpressionStatement[6161-6193]"
    }, {
      "left" : "append(buf, start, len);",
      "right" : "append(buf, start, len);",
      "info" : "ExpressionStatement[6202-6226]:ExpressionStatement[6202-6226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6284-6533]:Block[6284-6533]"
    }, {
      "left" : "_inputBuffer = null;",
      "right" : "_inputBuffer = null;",
      "info" : "ExpressionStatement[6294-6314]:ExpressionStatement[6294-6314]"
    }, {
      "left" : "_inputStart = -1;",
      "right" : "_inputStart = -1;",
      "info" : "ExpressionStatement[6323-6340]:ExpressionStatement[6323-6340]"
    }, {
      "left" : "_inputLen = 0;",
      "right" : "_inputLen = 0;",
      "info" : "ExpressionStatement[6349-6363]:ExpressionStatement[6349-6363]"
    }, {
      "left" : "_resultString = value;",
      "right" : "_resultString = value;",
      "info" : "ExpressionStatement[6373-6395]:ExpressionStatement[6373-6395]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[6404-6424]:ExpressionStatement[6404-6424]"
    }, {
      "left" : "if (_hasSegments)",
      "right" : "if (_hasSegments)",
      "info" : "IfStatement[6434-6492]:IfStatement[6434-6492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6452-6492]:Block[6452-6492]"
    }, {
      "left" : "clearSegments();",
      "right" : "clearSegments();",
      "info" : "ExpressionStatement[6466-6482]:ExpressionStatement[6466-6482]"
    }, {
      "left" : "_currentSize = 0;",
      "right" : "_currentSize = 0;",
      "info" : "ExpressionStatement[6501-6518]:ExpressionStatement[6501-6518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6682-6881]:Block[6682-6881]"
    }, {
      "left" : "if (_allocator != null)",
      "right" : "if (_allocator != null)",
      "info" : "IfStatement[6692-6815]:IfStatement[6692-6815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6716-6815]:Block[6716-6815]"
    }, {
      "left" : "return _allocator.allocCharBuffer(BufferRecycler.CHAR_TEXT_BUFFER, needed);",
      "right" : "return _allocator.allocCharBuffer(BufferRecycler.CHAR_TEXT_BUFFER, needed);",
      "info" : "ReturnStatement[6730-6805]:ReturnStatement[6730-6805]"
    }, {
      "left" : "return new char[Math.max(needed, MIN_SEGMENT_LEN)];",
      "right" : "return new char[Math.max(needed, MIN_SEGMENT_LEN)];",
      "info" : "ReturnStatement[6824-6875]:ReturnStatement[6824-6875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6920-7358]:Block[6920-7358]"
    }, {
      "left" : "_hasSegments = false;",
      "right" : "_hasSegments = false;",
      "info" : "ExpressionStatement[6930-6951]:ExpressionStatement[6930-6951]"
    }, {
      "left" : "_segments.clear();",
      "right" : "_segments.clear();",
      "info" : "ExpressionStatement[7293-7311]:ExpressionStatement[7293-7311]"
    }, {
      "left" : "_currentSize = _segmentSize = 0;",
      "right" : "_currentSize = _segmentSize = 0;",
      "info" : "ExpressionStatement[7320-7352]:ExpressionStatement[7320-7352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7664-8028]:Block[7664-8028]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[7674-7767]:IfStatement[7674-7767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7696-7767]:Block[7696-7767]"
    }, {
      "left" : "return _inputLen;",
      "right" : "return _inputLen;",
      "info" : "ReturnStatement[7740-7757]:ReturnStatement[7740-7757]"
    }, {
      "left" : "if (_resultArray != null)",
      "right" : "if (_resultArray != null)",
      "info" : "IfStatement[7776-7853]:IfStatement[7776-7853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7802-7853]:Block[7802-7853]"
    }, {
      "left" : "return _resultArray.length;",
      "right" : "return _resultArray.length;",
      "info" : "ReturnStatement[7816-7843]:ReturnStatement[7816-7843]"
    }, {
      "left" : "if (_resultString != null)",
      "right" : "if (_resultString != null)",
      "info" : "IfStatement[7862-7943]:IfStatement[7862-7943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7889-7943]:Block[7889-7943]"
    }, {
      "left" : "return _resultString.length();",
      "right" : "return _resultString.length();",
      "info" : "ReturnStatement[7903-7933]:ReturnStatement[7903-7933]"
    }, {
      "left" : "return _segmentSize + _currentSize;",
      "right" : "return _segmentSize + _currentSize;",
      "info" : "ReturnStatement[7987-8022]:ReturnStatement[7987-8022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8061-8335]:Block[8061-8335]"
    }, {
      "left" : "return (_inputStart >= 0) ? _inputStart : 0;",
      "right" : "return (_inputStart >= 0) ? _inputStart : 0;",
      "info" : "ReturnStatement[8285-8329]:ReturnStatement[8285-8329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8528-8762]:Block[8528-8762]"
    }, {
      "left" : "if (_inputStart >= 0 || _resultArray != null)",
      "right" : "if (_inputStart >= 0 || _resultArray != null)",
      "info" : "IfStatement[8585-8644]:IfStatement[8585-8644]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8632-8644]:ReturnStatement[8632-8644]"
    }, {
      "left" : "if (_resultString != null)",
      "right" : "if (_resultString != null)",
      "info" : "IfStatement[8695-8735]:IfStatement[8695-8735]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8722-8735]:ReturnStatement[8722-8735]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8744-8756]:ReturnStatement[8744-8756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8806-9295]:Block[8806-9322]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[8866-8908]:IfStatement[8866-8908]"
    }, {
      "left" : "return _inputBuffer;",
      "right" : "return _inputBuffer;",
      "info" : "ReturnStatement[8888-8908]:ReturnStatement[8888-8908]"
    }, {
      "left" : "if (_resultArray != null)",
      "right" : "if (_resultArray != null)",
      "info" : "IfStatement[8917-8964]:IfStatement[8917-8964]"
    }, {
      "left" : "return _resultArray;",
      "right" : "return _resultArray;",
      "info" : "ReturnStatement[8944-8964]:ReturnStatement[8944-8964]"
    }, {
      "left" : "if (_resultString != null)",
      "right" : "if (_resultString != null)",
      "info" : "IfStatement[8973-9076]:IfStatement[8973-9076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9000-9076]:Block[9000-9076]"
    }, {
      "left" : "return (_resultArray = _resultString.toCharArray());",
      "right" : "return (_resultArray = _resultString.toCharArray());",
      "info" : "ReturnStatement[9014-9066]:ReturnStatement[9014-9066]"
    }, {
      "left" : "if (!_hasSegments)",
      "right" : "if (!_hasSegments && _currentSegment != null)",
      "info" : "IfStatement[9139-9182]:IfStatement[9139-9209]"
    }, {
      "left" : "return _currentSegment;",
      "right" : "return _currentSegment;",
      "info" : "ReturnStatement[9159-9182]:ReturnStatement[9186-9209]"
    }, {
      "left" : "return contentsAsArray();",
      "right" : "return contentsAsArray();",
      "info" : "ReturnStatement[9264-9289]:ReturnStatement[9291-9316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9506-11182]:Block[9533-11209]"
    }, {
      "left" : "if (_resultString == null)",
      "right" : "if (_resultString == null)",
      "info" : "IfStatement[9516-11146]:IfStatement[9543-11173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9543-11146]:Block[9570-11173]"
    }, {
      "left" : "if (_resultArray != null)",
      "right" : "if (_resultArray != null)",
      "info" : "IfStatement[9626-11136]:IfStatement[9653-11163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9652-9725]:Block[9679-9752]"
    }, {
      "left" : "_resultString = new String(_resultArray);",
      "right" : "_resultString = new String(_resultArray);",
      "info" : "ExpressionStatement[9670-9711]:ExpressionStatement[9697-9738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9731-11136]:Block[9758-11163]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[9792-11122]:IfStatement[9819-11149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9814-10035]:Block[9841-10062]"
    }, {
      "left" : "if (_inputLen < 1)",
      "right" : "if (_inputLen < 1)",
      "info" : "IfStatement[9836-9931]:IfStatement[9863-9958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9855-9931]:Block[9882-9958]"
    }, {
      "left" : "return (_resultString = \"\");",
      "right" : "return (_resultString = \"\");",
      "info" : "ReturnStatement[9881-9909]:ReturnStatement[9908-9936]"
    }, {
      "left" : "_resultString = new String(_inputBuffer, _inputStart, _inputLen);",
      "right" : "_resultString = new String(_inputBuffer, _inputStart, _inputLen);",
      "info" : "ExpressionStatement[9952-10017]:ExpressionStatement[9979-10044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10041-11122]:Block[10068-11149]"
    }, {
      "left" : "int segLen = _segmentSize;",
      "right" : "int segLen = _segmentSize;",
      "info" : "VariableDeclarationStatement[10158-10184]:VariableDeclarationStatement[10185-10211]"
    }, {
      "left" : "int currLen = _currentSize;",
      "right" : "int currLen = _currentSize;",
      "info" : "VariableDeclarationStatement[10205-10232]:VariableDeclarationStatement[10232-10259]"
    }, {
      "left" : "if (segLen == 0)",
      "right" : "if (segLen == 0)",
      "info" : "IfStatement[10274-11104]:IfStatement[10301-11131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10291-10424]:Block[10318-10451]"
    }, {
      "left" : "_resultString = (currLen == 0) ? \"\" : new String(_currentSegment, 0, currLen);",
      "right" : "_resultString = (currLen == 0) ? \"\" : new String(_currentSegment, 0, currLen);",
      "info" : "ExpressionStatement[10324-10402]:ExpressionStatement[10351-10429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10430-11104]:Block[10457-11131]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder(segLen + currLen);",
      "right" : "StringBuilder sb = new StringBuilder(segLen + currLen);",
      "info" : "VariableDeclarationStatement[10479-10534]:VariableDeclarationStatement[10506-10561]"
    }, {
      "left" : "if (_segments != null)",
      "right" : "if (_segments != null)",
      "info" : "IfStatement[10608-10901]:IfStatement[10635-10928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10631-10901]:Block[10658-10928]"
    }, {
      "left" : "for (int i = 0, len = _segments.size(); i < len; ++i)",
      "right" : "for (int i = 0, len = _segments.size(); i < len; ++i)",
      "info" : "ForStatement[10661-10875]:ForStatement[10688-10902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10715-10875]:Block[10742-10902]"
    }, {
      "left" : "char[] curr = _segments.get(i);",
      "right" : "char[] curr = _segments.get(i);",
      "info" : "VariableDeclarationStatement[10749-10780]:VariableDeclarationStatement[10776-10807]"
    }, {
      "left" : "sb.append(curr, 0, curr.length);",
      "right" : "sb.append(curr, 0, curr.length);",
      "info" : "ExpressionStatement[10813-10845]:ExpressionStatement[10840-10872]"
    }, {
      "left" : "sb.append(_currentSegment, 0, _currentSize);",
      "right" : "sb.append(_currentSegment, 0, _currentSize);",
      "info" : "ExpressionStatement[10983-11027]:ExpressionStatement[11010-11054]"
    }, {
      "left" : "_resultString = sb.toString();",
      "right" : "_resultString = sb.toString();",
      "info" : "ExpressionStatement[11052-11082]:ExpressionStatement[11079-11109]"
    }, {
      "left" : "return _resultString;",
      "right" : "return _resultString;",
      "info" : "ReturnStatement[11155-11176]:ReturnStatement[11182-11203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11221-11380]:Block[11248-11407]"
    }, {
      "left" : "char[] result = _resultArray;",
      "right" : "char[] result = _resultArray;",
      "info" : "VariableDeclarationStatement[11231-11260]:VariableDeclarationStatement[11258-11287]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[11269-11351]:IfStatement[11296-11378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11289-11351]:Block[11316-11378]"
    }, {
      "left" : "_resultArray = result = resultArray();",
      "right" : "_resultArray = result = resultArray();",
      "info" : "ExpressionStatement[11303-11341]:ExpressionStatement[11330-11368]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11360-11374]:ReturnStatement[11387-11401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11571-12243]:Block[11598-12270]"
    }, {
      "left" : "if (_resultArray != null)",
      "right" : "if (_resultArray != null)",
      "info" : "IfStatement[11621-11720]:IfStatement[11648-11747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11647-11720]:Block[11674-11747]"
    }, {
      "left" : "return NumberInput.parseBigDecimal(_resultArray);",
      "right" : "return NumberInput.parseBigDecimal(_resultArray);",
      "info" : "ReturnStatement[11661-11710]:ReturnStatement[11688-11737]"
    }, {
      "left" : "if ((_inputStart >= 0) && (_inputBuffer != null))",
      "right" : "if ((_inputStart >= 0) && (_inputBuffer != null))",
      "info" : "IfStatement[11760-11907]:IfStatement[11787-11934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11810-11907]:Block[11837-11934]"
    }, {
      "left" : "return NumberInput.parseBigDecimal(_inputBuffer, _inputStart, _inputLen);",
      "right" : "return NumberInput.parseBigDecimal(_inputBuffer, _inputStart, _inputLen);",
      "info" : "ReturnStatement[11824-11897]:ReturnStatement[11851-11924]"
    }, {
      "left" : "if ((_segmentSize == 0) && (_currentSegment != null))",
      "right" : "if ((_segmentSize == 0) && (_currentSegment != null))",
      "info" : "IfStatement[11976-12123]:IfStatement[12003-12150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12030-12123]:Block[12057-12150]"
    }, {
      "left" : "return NumberInput.parseBigDecimal(_currentSegment, 0, _currentSize);",
      "right" : "return NumberInput.parseBigDecimal(_currentSegment, 0, _currentSize);",
      "info" : "ReturnStatement[12044-12113]:ReturnStatement[12071-12140]"
    }, {
      "left" : "return NumberInput.parseBigDecimal(contentsAsArray());",
      "right" : "return NumberInput.parseBigDecimal(contentsAsArray());",
      "info" : "ReturnStatement[12183-12237]:ReturnStatement[12210-12264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12419-12486]:Block[12446-12513]"
    }, {
      "left" : "return NumberInput.parseDouble(contentsAsString());",
      "right" : "return NumberInput.parseDouble(contentsAsString());",
      "info" : "ReturnStatement[12429-12480]:ReturnStatement[12456-12507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12849-12923]:Block[12876-12950]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[12859-12917]:IfStatement[12886-12944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12881-12917]:Block[12908-12944]"
    }, {
      "left" : "unshare(16);",
      "right" : "unshare(16);",
      "info" : "ExpressionStatement[12895-12907]:ExpressionStatement[12922-12934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12956-13349]:Block[12983-13376]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[13005-13063]:IfStatement[13032-13090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13027-13063]:Block[13054-13090]"
    }, {
      "left" : "unshare(16);",
      "right" : "unshare(16);",
      "info" : "ExpressionStatement[13041-13053]:ExpressionStatement[13068-13080]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[13072-13093]:ExpressionStatement[13099-13120]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[13102-13122]:ExpressionStatement[13129-13149]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[13167-13197]:VariableDeclarationStatement[13194-13224]"
    }, {
      "left" : "if (_currentSize >= curr.length)",
      "right" : "if (_currentSize >= curr.length)",
      "info" : "IfStatement[13206-13309]:IfStatement[13233-13336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13239-13309]:Block[13266-13336]"
    }, {
      "left" : "expand(1);",
      "right" : "expand(1);",
      "info" : "ExpressionStatement[13253-13263]:ExpressionStatement[13280-13290]"
    }, {
      "left" : "curr = _currentSegment;",
      "right" : "curr = _currentSegment;",
      "info" : "ExpressionStatement[13276-13299]:ExpressionStatement[13303-13326]"
    }, {
      "left" : "curr[_currentSize++] = c;",
      "right" : "curr[_currentSize++] = c;",
      "info" : "ExpressionStatement[13318-13343]:ExpressionStatement[13345-13370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13408-14556]:Block[13435-14583]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[13471-13530]:IfStatement[13498-13557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13493-13530]:Block[13520-13557]"
    }, {
      "left" : "unshare(len);",
      "right" : "unshare(len);",
      "info" : "ExpressionStatement[13507-13520]:ExpressionStatement[13534-13547]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[13539-13560]:ExpressionStatement[13566-13587]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[13569-13589]:ExpressionStatement[13596-13616]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[13635-13665]:VariableDeclarationStatement[13662-13692]"
    }, {
      "left" : "int max = curr.length - _currentSize;",
      "right" : "int max = curr.length - _currentSize;",
      "info" : "VariableDeclarationStatement[13674-13711]:VariableDeclarationStatement[13701-13738]"
    }, {
      "left" : "if (max >= len)",
      "right" : "if (max >= len)",
      "info" : "IfStatement[13733-13878]:IfStatement[13760-13905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13749-13878]:Block[13776-13905]"
    }, {
      "left" : "System.arraycopy(c, start, curr, _currentSize, len);",
      "right" : "System.arraycopy(c, start, curr, _currentSize, len);",
      "info" : "ExpressionStatement[13763-13815]:ExpressionStatement[13790-13842]"
    }, {
      "left" : "_currentSize += len;",
      "right" : "_currentSize += len;",
      "info" : "ExpressionStatement[13828-13848]:ExpressionStatement[13855-13875]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[13861-13868]:ReturnStatement[13888-13895]"
    }, {
      "left" : "if (max > 0)",
      "right" : "if (max > 0)",
      "info" : "IfStatement[13937-14076]:IfStatement[13964-14103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13950-14076]:Block[13977-14103]"
    }, {
      "left" : "System.arraycopy(c, start, curr, _currentSize, max);",
      "right" : "System.arraycopy(c, start, curr, _currentSize, max);",
      "info" : "ExpressionStatement[13964-14016]:ExpressionStatement[13991-14043]"
    }, {
      "left" : "start += max;",
      "right" : "start += max;",
      "info" : "ExpressionStatement[14029-14042]:ExpressionStatement[14056-14069]"
    }, {
      "left" : "len -= max;",
      "right" : "len -= max;",
      "info" : "ExpressionStatement[14055-14066]:ExpressionStatement[14082-14093]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[14270-14550]:DoStatement[14297-14577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14273-14533]:Block[14300-14560]"
    }, {
      "left" : "expand(len);",
      "right" : "expand(len);",
      "info" : "ExpressionStatement[14287-14299]:ExpressionStatement[14314-14326]"
    }, {
      "left" : "int amount = Math.min(_currentSegment.length, len);",
      "right" : "int amount = Math.min(_currentSegment.length, len);",
      "info" : "VariableDeclarationStatement[14312-14363]:VariableDeclarationStatement[14339-14390]"
    }, {
      "left" : "System.arraycopy(c, start, _currentSegment, 0, amount);",
      "right" : "System.arraycopy(c, start, _currentSegment, 0, amount);",
      "info" : "ExpressionStatement[14376-14431]:ExpressionStatement[14403-14458]"
    }, {
      "left" : "_currentSize += amount;",
      "right" : "_currentSize += amount;",
      "info" : "ExpressionStatement[14444-14467]:ExpressionStatement[14471-14494]"
    }, {
      "left" : "start += amount;",
      "right" : "start += amount;",
      "info" : "ExpressionStatement[14480-14496]:ExpressionStatement[14507-14523]"
    }, {
      "left" : "len -= amount;",
      "right" : "len -= amount;",
      "info" : "ExpressionStatement[14509-14523]:ExpressionStatement[14536-14550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14618-15758]:Block[14645-15785]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[14681-14740]:IfStatement[14708-14767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14703-14740]:Block[14730-14767]"
    }, {
      "left" : "unshare(len);",
      "right" : "unshare(len);",
      "info" : "ExpressionStatement[14717-14730]:ExpressionStatement[14744-14757]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[14749-14770]:ExpressionStatement[14776-14797]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[14779-14799]:ExpressionStatement[14806-14826]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[14845-14875]:VariableDeclarationStatement[14872-14902]"
    }, {
      "left" : "int max = curr.length - _currentSize;",
      "right" : "int max = curr.length - _currentSize;",
      "info" : "VariableDeclarationStatement[14884-14921]:VariableDeclarationStatement[14911-14948]"
    }, {
      "left" : "if (max >= len)",
      "right" : "if (max >= len)",
      "info" : "IfStatement[14930-15076]:IfStatement[14957-15103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14946-15076]:Block[14973-15103]"
    }, {
      "left" : "str.getChars(offset, offset+len, curr, _currentSize);",
      "right" : "str.getChars(offset, offset+len, curr, _currentSize);",
      "info" : "ExpressionStatement[14960-15013]:ExpressionStatement[14987-15040]"
    }, {
      "left" : "_currentSize += len;",
      "right" : "_currentSize += len;",
      "info" : "ExpressionStatement[15026-15046]:ExpressionStatement[15053-15073]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[15059-15066]:ReturnStatement[15086-15093]"
    }, {
      "left" : "if (max > 0)",
      "right" : "if (max > 0)",
      "info" : "IfStatement[15135-15276]:IfStatement[15162-15303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15148-15276]:Block[15175-15303]"
    }, {
      "left" : "str.getChars(offset, offset+max, curr, _currentSize);",
      "right" : "str.getChars(offset, offset+max, curr, _currentSize);",
      "info" : "ExpressionStatement[15162-15215]:ExpressionStatement[15189-15242]"
    }, {
      "left" : "len -= max;",
      "right" : "len -= max;",
      "info" : "ExpressionStatement[15228-15239]:ExpressionStatement[15255-15266]"
    }, {
      "left" : "offset += max;",
      "right" : "offset += max;",
      "info" : "ExpressionStatement[15252-15266]:ExpressionStatement[15279-15293]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[15470-15752]:DoStatement[15497-15779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15473-15735]:Block[15500-15762]"
    }, {
      "left" : "expand(len);",
      "right" : "expand(len);",
      "info" : "ExpressionStatement[15487-15499]:ExpressionStatement[15514-15526]"
    }, {
      "left" : "int amount = Math.min(_currentSegment.length, len);",
      "right" : "int amount = Math.min(_currentSegment.length, len);",
      "info" : "VariableDeclarationStatement[15512-15563]:VariableDeclarationStatement[15539-15590]"
    }, {
      "left" : "str.getChars(offset, offset+amount, _currentSegment, 0);",
      "right" : "str.getChars(offset, offset+amount, _currentSegment, 0);",
      "info" : "ExpressionStatement[15576-15632]:ExpressionStatement[15603-15659]"
    }, {
      "left" : "_currentSize += amount;",
      "right" : "_currentSize += amount;",
      "info" : "ExpressionStatement[15645-15668]:ExpressionStatement[15672-15695]"
    }, {
      "left" : "offset += amount;",
      "right" : "offset += amount;",
      "info" : "ExpressionStatement[15681-15698]:ExpressionStatement[15708-15725]"
    }, {
      "left" : "len -= amount;",
      "right" : "len -= amount;",
      "info" : "ExpressionStatement[15711-15725]:ExpressionStatement[15738-15752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15991-16597]:Block[16018-16624]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[16201-16559]:IfStatement[16228-16586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16223-16258]:Block[16250-16285]"
    }, {
      "left" : "unshare(1);",
      "right" : "unshare(1);",
      "info" : "ExpressionStatement[16237-16248]:ExpressionStatement[16264-16275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16264-16559]:Block[16291-16586]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[16278-16308]:VariableDeclarationStatement[16305-16335]"
    }, {
      "left" : "if (curr == null)",
      "right" : "if (curr == null)",
      "info" : "IfStatement[16321-16549]:IfStatement[16348-16576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16339-16396]:Block[16366-16423]"
    }, {
      "left" : "_currentSegment = buf(0);",
      "right" : "_currentSegment = buf(0);",
      "info" : "ExpressionStatement[16357-16382]:ExpressionStatement[16384-16409]"
    }, {
      "left" : "if (_currentSize >= curr.length)",
      "right" : "if (_currentSize >= curr.length)",
      "info" : "IfStatement[16402-16549]:IfStatement[16429-16576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16435-16549]:Block[16462-16576]"
    }, {
      "left" : "expand(1);",
      "right" : "expand(1);",
      "info" : "ExpressionStatement[16525-16535]:ExpressionStatement[16552-16562]"
    }, {
      "left" : "return _currentSegment;",
      "right" : "return _currentSegment;",
      "info" : "ReturnStatement[16568-16591]:ReturnStatement[16595-16618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16649-17169]:Block[16676-17196]"
    }, {
      "left" : "_inputStart = -1;",
      "right" : "_inputStart = -1;",
      "info" : "ExpressionStatement[16697-16714]:ExpressionStatement[16724-16741]"
    }, {
      "left" : "_currentSize = 0;",
      "right" : "_currentSize = 0;",
      "info" : "ExpressionStatement[16759-16776]:ExpressionStatement[16786-16803]"
    }, {
      "left" : "_inputLen = 0;",
      "right" : "_inputLen = 0;",
      "info" : "ExpressionStatement[16785-16799]:ExpressionStatement[16812-16826]"
    }, {
      "left" : "_inputBuffer = null;",
      "right" : "_inputBuffer = null;",
      "info" : "ExpressionStatement[16809-16829]:ExpressionStatement[16836-16856]"
    }, {
      "left" : "_resultString = null;",
      "right" : "_resultString = null;",
      "info" : "ExpressionStatement[16838-16859]:ExpressionStatement[16865-16886]"
    }, {
      "left" : "_resultArray = null;",
      "right" : "_resultArray = null;",
      "info" : "ExpressionStatement[16868-16888]:ExpressionStatement[16895-16915]"
    }, {
      "left" : "if (_hasSegments)",
      "right" : "if (_hasSegments)",
      "info" : "IfStatement[16962-17020]:IfStatement[16989-17047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16980-17020]:Block[17007-17047]"
    }, {
      "left" : "clearSegments();",
      "right" : "clearSegments();",
      "info" : "ExpressionStatement[16994-17010]:ExpressionStatement[17021-17037]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[17029-17059]:VariableDeclarationStatement[17056-17086]"
    }, {
      "left" : "if (curr == null)",
      "right" : "if (curr == null)",
      "info" : "IfStatement[17068-17142]:IfStatement[17095-17169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17086-17142]:Block[17113-17169]"
    }, {
      "left" : "_currentSegment = curr = buf(0);",
      "right" : "_currentSegment = curr = buf(0);",
      "info" : "ExpressionStatement[17100-17132]:ExpressionStatement[17127-17159]"
    }, {
      "left" : "return curr;",
      "right" : "return curr;",
      "info" : "ReturnStatement[17151-17163]:ReturnStatement[17178-17190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17210-17234]:Block[17237-17261]"
    }, {
      "left" : "return _currentSize;",
      "right" : "return _currentSize;",
      "info" : "ReturnStatement[17212-17232]:ReturnStatement[17239-17259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17277-17300]:Block[17304-17327]"
    }, {
      "left" : "_currentSize = len;",
      "right" : "_currentSize = len;",
      "info" : "ExpressionStatement[17279-17298]:ExpressionStatement[17306-17325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17383-17825]:Block[17410-17852]"
    }, {
      "left" : "_currentSize = len;",
      "right" : "_currentSize = len;",
      "info" : "ExpressionStatement[17393-17412]:ExpressionStatement[17420-17439]"
    }, {
      "left" : "if (_segmentSize > 0)",
      "right" : "if (_segmentSize > 0)",
      "info" : "IfStatement[17501-17606]:IfStatement[17528-17633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17523-17606]:Block[17550-17633]"
    }, {
      "left" : "return contentsAsString();",
      "right" : "return contentsAsString();",
      "info" : "ReturnStatement[17570-17596]:ReturnStatement[17597-17623]"
    }, {
      "left" : "int currLen = _currentSize;",
      "right" : "int currLen = _currentSize;",
      "info" : "VariableDeclarationStatement[17659-17686]:VariableDeclarationStatement[17686-17713]"
    }, {
      "left" : "String str = (currLen == 0) ? \"\" : new String(_currentSegment, 0, currLen);",
      "right" : "String str = (currLen == 0) ? \"\" : new String(_currentSegment, 0, currLen);",
      "info" : "VariableDeclarationStatement[17695-17770]:VariableDeclarationStatement[17722-17797]"
    }, {
      "left" : "_resultString = str;",
      "right" : "_resultString = str;",
      "info" : "ExpressionStatement[17779-17799]:ExpressionStatement[17806-17826]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[17808-17819]:ReturnStatement[17835-17846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17872-18489]:Block[17899-18516]"
    }, {
      "left" : "if (_segments == null)",
      "right" : "if (_segments == null)",
      "info" : "IfStatement[17882-17965]:IfStatement[17909-17992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17905-17965]:Block[17932-17992]"
    }, {
      "left" : "_segments = new ArrayList<char[]>();",
      "right" : "_segments = new ArrayList<char[]>();",
      "info" : "ExpressionStatement[17919-17955]:ExpressionStatement[17946-17982]"
    }, {
      "left" : "_hasSegments = true;",
      "right" : "_hasSegments = true;",
      "info" : "ExpressionStatement[17974-17994]:ExpressionStatement[18001-18021]"
    }, {
      "left" : "_segments.add(_currentSegment);",
      "right" : "_segments.add(_currentSegment);",
      "info" : "ExpressionStatement[18003-18034]:ExpressionStatement[18030-18061]"
    }, {
      "left" : "int oldLen = _currentSegment.length;",
      "right" : "int oldLen = _currentSegment.length;",
      "info" : "VariableDeclarationStatement[18043-18079]:VariableDeclarationStatement[18070-18106]"
    }, {
      "left" : "_segmentSize += oldLen;",
      "right" : "_segmentSize += oldLen;",
      "info" : "ExpressionStatement[18088-18111]:ExpressionStatement[18115-18138]"
    }, {
      "left" : "_currentSize = 0;",
      "right" : "_currentSize = 0;",
      "info" : "ExpressionStatement[18120-18137]:ExpressionStatement[18147-18164]"
    }, {
      "left" : "int newLen = oldLen + (oldLen >> 1);",
      "right" : "int newLen = oldLen + (oldLen >> 1);",
      "info" : "VariableDeclarationStatement[18185-18221]:VariableDeclarationStatement[18212-18248]"
    }, {
      "left" : "if (newLen < MIN_SEGMENT_LEN)",
      "right" : "if (newLen < MIN_SEGMENT_LEN)",
      "info" : "IfStatement[18230-18394]:IfStatement[18257-18421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18260-18309]:Block[18287-18336]"
    }, {
      "left" : "newLen = MIN_SEGMENT_LEN;",
      "right" : "newLen = MIN_SEGMENT_LEN;",
      "info" : "ExpressionStatement[18274-18299]:ExpressionStatement[18301-18326]"
    }, {
      "left" : "if (newLen > MAX_SEGMENT_LEN)",
      "right" : "if (newLen > MAX_SEGMENT_LEN)",
      "info" : "IfStatement[18315-18394]:IfStatement[18342-18421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18345-18394]:Block[18372-18421]"
    }, {
      "left" : "newLen = MAX_SEGMENT_LEN;",
      "right" : "newLen = MAX_SEGMENT_LEN;",
      "info" : "ExpressionStatement[18359-18384]:ExpressionStatement[18386-18411]"
    }, {
      "left" : "char[] curr = carr(newLen);",
      "right" : "char[] curr = carr(newLen);",
      "info" : "VariableDeclarationStatement[18403-18430]:VariableDeclarationStatement[18430-18457]"
    }, {
      "left" : "_currentSegment = curr;",
      "right" : "_currentSegment = curr;",
      "info" : "ExpressionStatement[18439-18462]:ExpressionStatement[18466-18489]"
    }, {
      "left" : "return curr;",
      "right" : "return curr;",
      "info" : "ReturnStatement[18471-18483]:ReturnStatement[18498-18510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18733-19117]:Block[18760-19144]"
    }, {
      "left" : "final char[] curr = _currentSegment;",
      "right" : "final char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[18743-18779]:VariableDeclarationStatement[18770-18806]"
    }, {
      "left" : "final int len = curr.length;",
      "right" : "final int len = curr.length;",
      "info" : "VariableDeclarationStatement[18828-18856]:VariableDeclarationStatement[18855-18883]"
    }, {
      "left" : "int newLen = len + (len >> 1);",
      "right" : "int newLen = len + (len >> 1);",
      "info" : "VariableDeclarationStatement[18865-18895]:VariableDeclarationStatement[18892-18922]"
    }, {
      "left" : "if (newLen > MAX_SEGMENT_LEN)",
      "right" : "if (newLen > MAX_SEGMENT_LEN)",
      "info" : "IfStatement[18967-19047]:IfStatement[18994-19074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18997-19047]:Block[19024-19074]"
    }, {
      "left" : "newLen = len + (len >> 2);",
      "right" : "newLen = len + (len >> 2);",
      "info" : "ExpressionStatement[19011-19037]:ExpressionStatement[19038-19064]"
    }, {
      "left" : "return (_currentSegment = Arrays.copyOf(curr, newLen));",
      "right" : "return (_currentSegment = Arrays.copyOf(curr, newLen));",
      "info" : "ReturnStatement[19056-19111]:ReturnStatement[19083-19138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19474-19653]:Block[19501-19680]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[19484-19514]:VariableDeclarationStatement[19511-19541]"
    }, {
      "left" : "if (curr.length >= minSize)",
      "right" : "if (curr.length >= minSize)",
      "info" : "IfStatement[19523-19563]:IfStatement[19550-19590]"
    }, {
      "left" : "return curr;",
      "right" : "return curr;",
      "info" : "ReturnStatement[19551-19563]:ReturnStatement[19578-19590]"
    }, {
      "left" : "_currentSegment = curr = Arrays.copyOf(curr, minSize);",
      "right" : "_currentSegment = curr = Arrays.copyOf(curr, minSize);",
      "info" : "ExpressionStatement[19572-19626]:ExpressionStatement[19599-19653]"
    }, {
      "left" : "return curr;",
      "right" : "return curr;",
      "info" : "ReturnStatement[19635-19647]:ReturnStatement[19662-19674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20047-20077]:Block[20074-20104]"
    }, {
      "left" : "return contentsAsString();",
      "right" : "return contentsAsString();",
      "info" : "ReturnStatement[20049-20075]:ReturnStatement[20076-20102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20422-21024]:Block[20449-21051]"
    }, {
      "left" : "int sharedLen = _inputLen;",
      "right" : "int sharedLen = _inputLen;",
      "info" : "VariableDeclarationStatement[20432-20458]:VariableDeclarationStatement[20459-20485]"
    }, {
      "left" : "_inputLen = 0;",
      "right" : "_inputLen = 0;",
      "info" : "ExpressionStatement[20467-20481]:ExpressionStatement[20494-20508]"
    }, {
      "left" : "char[] inputBuf = _inputBuffer;",
      "right" : "char[] inputBuf = _inputBuffer;",
      "info" : "VariableDeclarationStatement[20490-20521]:VariableDeclarationStatement[20517-20548]"
    }, {
      "left" : "_inputBuffer = null;",
      "right" : "_inputBuffer = null;",
      "info" : "ExpressionStatement[20530-20550]:ExpressionStatement[20557-20577]"
    }, {
      "left" : "int start = _inputStart;",
      "right" : "int start = _inputStart;",
      "info" : "VariableDeclarationStatement[20559-20583]:VariableDeclarationStatement[20586-20610]"
    }, {
      "left" : "_inputStart = -1;",
      "right" : "_inputStart = -1;",
      "info" : "ExpressionStatement[20592-20609]:ExpressionStatement[20619-20636]"
    }, {
      "left" : "int needed = sharedLen+needExtra;",
      "right" : "int needed = sharedLen+needExtra;",
      "info" : "VariableDeclarationStatement[20681-20714]:VariableDeclarationStatement[20708-20741]"
    }, {
      "left" : "if (_currentSegment == null || needed > _currentSegment.length)",
      "right" : "if (_currentSegment == null || needed > _currentSegment.length)",
      "info" : "IfStatement[20723-20841]:IfStatement[20750-20868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20787-20841]:Block[20814-20868]"
    }, {
      "left" : "_currentSegment = buf(needed);",
      "right" : "_currentSegment = buf(needed);",
      "info" : "ExpressionStatement[20801-20831]:ExpressionStatement[20828-20858]"
    }, {
      "left" : "if (sharedLen > 0)",
      "right" : "if (sharedLen > 0)",
      "info" : "IfStatement[20850-20958]:IfStatement[20877-20985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20869-20958]:Block[20896-20985]"
    }, {
      "left" : "System.arraycopy(inputBuf, start, _currentSegment, 0, sharedLen);",
      "right" : "System.arraycopy(inputBuf, start, _currentSegment, 0, sharedLen);",
      "info" : "ExpressionStatement[20883-20948]:ExpressionStatement[20910-20975]"
    }, {
      "left" : "_segmentSize = 0;",
      "right" : "_segmentSize = 0;",
      "info" : "ExpressionStatement[20967-20984]:ExpressionStatement[20994-21011]"
    }, {
      "left" : "_currentSize = sharedLen;",
      "right" : "_currentSize = sharedLen;",
      "info" : "ExpressionStatement[20993-21018]:ExpressionStatement[21020-21045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21176-21844]:Block[21203-21871]"
    }, {
      "left" : "if (_segments == null)",
      "right" : "if (_segments == null)",
      "info" : "IfStatement[21248-21331]:IfStatement[21275-21358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21271-21331]:Block[21298-21358]"
    }, {
      "left" : "_segments = new ArrayList<char[]>();",
      "right" : "_segments = new ArrayList<char[]>();",
      "info" : "ExpressionStatement[21285-21321]:ExpressionStatement[21312-21348]"
    }, {
      "left" : "char[] curr = _currentSegment;",
      "right" : "char[] curr = _currentSegment;",
      "info" : "VariableDeclarationStatement[21340-21370]:VariableDeclarationStatement[21367-21397]"
    }, {
      "left" : "_hasSegments = true;",
      "right" : "_hasSegments = true;",
      "info" : "ExpressionStatement[21379-21399]:ExpressionStatement[21406-21426]"
    }, {
      "left" : "_segments.add(curr);",
      "right" : "_segments.add(curr);",
      "info" : "ExpressionStatement[21408-21428]:ExpressionStatement[21435-21455]"
    }, {
      "left" : "_segmentSize += curr.length;",
      "right" : "_segmentSize += curr.length;",
      "info" : "ExpressionStatement[21437-21465]:ExpressionStatement[21464-21492]"
    }, {
      "left" : "_currentSize = 0;",
      "right" : "_currentSize = 0;",
      "info" : "ExpressionStatement[21474-21491]:ExpressionStatement[21501-21518]"
    }, {
      "left" : "int oldLen = curr.length;",
      "right" : "int oldLen = curr.length;",
      "info" : "VariableDeclarationStatement[21500-21525]:VariableDeclarationStatement[21527-21552]"
    }, {
      "left" : "int newLen = oldLen + (oldLen >> 1);",
      "right" : "int newLen = oldLen + (oldLen >> 1);",
      "info" : "VariableDeclarationStatement[21589-21625]:VariableDeclarationStatement[21616-21652]"
    }, {
      "left" : "if (newLen < MIN_SEGMENT_LEN)",
      "right" : "if (newLen < MIN_SEGMENT_LEN)",
      "info" : "IfStatement[21634-21798]:IfStatement[21661-21825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21664-21713]:Block[21691-21740]"
    }, {
      "left" : "newLen = MIN_SEGMENT_LEN;",
      "right" : "newLen = MIN_SEGMENT_LEN;",
      "info" : "ExpressionStatement[21678-21703]:ExpressionStatement[21705-21730]"
    }, {
      "left" : "if (newLen > MAX_SEGMENT_LEN)",
      "right" : "if (newLen > MAX_SEGMENT_LEN)",
      "info" : "IfStatement[21719-21798]:IfStatement[21746-21825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21749-21798]:Block[21776-21825]"
    }, {
      "left" : "newLen = MAX_SEGMENT_LEN;",
      "right" : "newLen = MAX_SEGMENT_LEN;",
      "info" : "ExpressionStatement[21763-21788]:ExpressionStatement[21790-21815]"
    }, {
      "left" : "_currentSegment = carr(newLen);",
      "right" : "_currentSegment = carr(newLen);",
      "info" : "ExpressionStatement[21807-21838]:ExpressionStatement[21834-21865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21883-23018]:Block[21910-23045]"
    }, {
      "left" : "if (_resultString != null)",
      "right" : "if (_resultString != null)",
      "info" : "IfStatement[21893-22005]:IfStatement[21920-22032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21920-22005]:Block[21947-22032]"
    }, {
      "left" : "return _resultString.toCharArray();",
      "right" : "return _resultString.toCharArray();",
      "info" : "ReturnStatement[21960-21995]:ReturnStatement[21987-22022]"
    }, {
      "left" : "if (_inputStart >= 0)",
      "right" : "if (_inputStart >= 0)",
      "info" : "IfStatement[22049-22410]:IfStatement[22076-22437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22071-22410]:Block[22098-22437]"
    }, {
      "left" : "final int len = _inputLen;",
      "right" : "final int len = _inputLen;",
      "info" : "VariableDeclarationStatement[22085-22111]:VariableDeclarationStatement[22112-22138]"
    }, {
      "left" : "if (len < 1)",
      "right" : "if (len < 1)",
      "info" : "IfStatement[22124-22185]:IfStatement[22151-22212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22137-22185]:Block[22164-22212]"
    }, {
      "left" : "return NO_CHARS;",
      "right" : "return NO_CHARS;",
      "info" : "ReturnStatement[22155-22171]:ReturnStatement[22182-22198]"
    }, {
      "left" : "final int start = _inputStart;",
      "right" : "final int start = _inputStart;",
      "info" : "VariableDeclarationStatement[22198-22228]:VariableDeclarationStatement[22225-22255]"
    }, {
      "left" : "if (start == 0)",
      "right" : "if (start == 0)",
      "info" : "IfStatement[22241-22329]:IfStatement[22268-22356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22257-22329]:Block[22284-22356]"
    }, {
      "left" : "return Arrays.copyOf(_inputBuffer, len);",
      "right" : "return Arrays.copyOf(_inputBuffer, len);",
      "info" : "ReturnStatement[22275-22315]:ReturnStatement[22302-22342]"
    }, {
      "left" : "return Arrays.copyOfRange(_inputBuffer, start, start+len);",
      "right" : "return Arrays.copyOfRange(_inputBuffer, start, start+len);",
      "info" : "ReturnStatement[22342-22400]:ReturnStatement[22369-22427]"
    }, {
      "left" : "int size = size();",
      "right" : "int size = size();",
      "info" : "VariableDeclarationStatement[22447-22465]:VariableDeclarationStatement[22474-22492]"
    }, {
      "left" : "if (size < 1)",
      "right" : "if (size < 1)",
      "info" : "IfStatement[22474-22528]:IfStatement[22501-22555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22488-22528]:Block[22515-22555]"
    }, {
      "left" : "return NO_CHARS;",
      "right" : "return NO_CHARS;",
      "info" : "ReturnStatement[22502-22518]:ReturnStatement[22529-22545]"
    }, {
      "left" : "int offset = 0;",
      "right" : "int offset = 0;",
      "info" : "VariableDeclarationStatement[22537-22552]:VariableDeclarationStatement[22564-22579]"
    }, {
      "left" : "final char[] result = carr(size);",
      "right" : "final char[] result = carr(size);",
      "info" : "VariableDeclarationStatement[22561-22594]:VariableDeclarationStatement[22588-22621]"
    }, {
      "left" : "if (_segments != null)",
      "right" : "if (_segments != null)",
      "info" : "IfStatement[22603-22913]:IfStatement[22630-22940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22626-22913]:Block[22653-22940]"
    }, {
      "left" : "for (int i = 0, len = _segments.size(); i < len; ++i)",
      "right" : "for (int i = 0, len = _segments.size(); i < len; ++i)",
      "info" : "ForStatement[22640-22903]:ForStatement[22667-22930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22694-22903]:Block[22721-22930]"
    }, {
      "left" : "char[] curr = _segments.get(i);",
      "right" : "char[] curr = _segments.get(i);",
      "info" : "VariableDeclarationStatement[22712-22743]:VariableDeclarationStatement[22739-22770]"
    }, {
      "left" : "int currLen = curr.length;",
      "right" : "int currLen = curr.length;",
      "info" : "VariableDeclarationStatement[22760-22786]:VariableDeclarationStatement[22787-22813]"
    }, {
      "left" : "System.arraycopy(curr, 0, result, offset, currLen);",
      "right" : "System.arraycopy(curr, 0, result, offset, currLen);",
      "info" : "ExpressionStatement[22803-22854]:ExpressionStatement[22830-22881]"
    }, {
      "left" : "offset += currLen;",
      "right" : "offset += currLen;",
      "info" : "ExpressionStatement[22871-22889]:ExpressionStatement[22898-22916]"
    }, {
      "left" : "System.arraycopy(_currentSegment, 0, result, offset, _currentSize);",
      "right" : "System.arraycopy(_currentSegment, 0, result, offset, _currentSize);",
      "info" : "ExpressionStatement[22922-22989]:ExpressionStatement[22949-23016]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[22998-23012]:ReturnStatement[23025-23039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23053-23078]:Block[23080-23105]"
    }, {
      "left" : "return new char[len];",
      "right" : "return new char[len];",
      "info" : "ReturnStatement[23055-23076]:ReturnStatement[23082-23103]"
    } ]
  },
  "interFileMappings" : { }
}