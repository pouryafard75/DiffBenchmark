{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "MessageDigest",
      "right" : "MessageDigest",
      "info" : "TypeDeclaration[669-2238]:TypeDeclaration[683-11934]"
    }, {
      "left" : "public static MessageDigest getInstance(String algorithm)\n      throws NoSuchAlgorithmException",
      "right" : "public static MessageDigest getInstance(String algorithm)\n      throws NoSuchAlgorithmException",
      "info" : "MethodDeclaration[882-1124]:MethodDeclaration[10578-10820]"
    }, {
      "left" : "public static boolean isEqual(byte[] digestA, byte[] digestB)",
      "right" : "public static boolean isEqual(byte[] digestA, byte[] digestB)",
      "info" : "MethodDeclaration[1128-1405]:MethodDeclaration[10824-11101]"
    }, {
      "left" : "private final String algorithm;",
      "right" : "private final String algorithm;",
      "info" : "FieldDeclaration[1409-1440]:FieldDeclaration[11105-11136]"
    }, {
      "left" : "protected MessageDigest(String algorithm)",
      "right" : "protected MessageDigest(String algorithm)",
      "info" : "MethodDeclaration[1444-1523]:MethodDeclaration[11140-11219]"
    }, {
      "left" : "public byte[] digest()",
      "right" : "public byte[] digest()",
      "info" : "MethodDeclaration[1527-1582]:MethodDeclaration[11223-11278]"
    }, {
      "left" : "public byte[] digest(byte[] input)",
      "right" : "public byte[] digest(byte[] input)",
      "info" : "MethodDeclaration[1586-1666]:MethodDeclaration[11282-11362]"
    }, {
      "left" : "public int digest(byte[] buf, int offset, int len) throws DigestException",
      "right" : "public int digest(byte[] buf, int offset, int len) throws DigestException",
      "info" : "MethodDeclaration[1670-1792]:MethodDeclaration[11366-11488]"
    }, {
      "left" : "public final String getAlgorithm()",
      "right" : "public final String getAlgorithm()",
      "info" : "MethodDeclaration[1796-1858]:MethodDeclaration[11492-11554]"
    }, {
      "left" : "public final int getDigestLength()",
      "right" : "public final int getDigestLength()",
      "info" : "MethodDeclaration[1862-1938]:MethodDeclaration[11558-11634]"
    }, {
      "left" : "public void reset()",
      "right" : "public void reset()",
      "info" : "MethodDeclaration[1942-1986]:MethodDeclaration[11638-11682]"
    }, {
      "left" : "public void update(byte input)",
      "right" : "public void update(byte input)",
      "info" : "MethodDeclaration[1990-2051]:MethodDeclaration[11686-11747]"
    }, {
      "left" : "public void update(byte[] input)",
      "right" : "public void update(byte[] input)",
      "info" : "MethodDeclaration[2055-2135]:MethodDeclaration[11751-11831]"
    }, {
      "left" : "public void update(byte[] input, int offset, int len)",
      "right" : "public void update(byte[] input, int offset, int len)",
      "info" : "MethodDeclaration[2139-2236]:MethodDeclaration[11835-11932]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[978-1124]:Block[10674-10820]"
    }, {
      "left" : "if (\"MD5\".equals(algorithm))",
      "right" : "if (\"MD5\".equals(algorithm))",
      "info" : "IfStatement[984-1050]:IfStatement[10680-10746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1013-1050]:Block[10709-10746]"
    }, {
      "left" : "return new Md5Digest();",
      "right" : "return new Md5Digest();",
      "info" : "ReturnStatement[1021-1044]:ReturnStatement[10717-10740]"
    }, {
      "left" : "throw new NoSuchAlgorithmException(algorithm + \" not supported\");",
      "right" : "throw new NoSuchAlgorithmException(algorithm + \" not supported\");",
      "info" : "ThrowStatement[1055-1120]:ThrowStatement[10751-10816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1190-1405]:Block[10886-11101]"
    }, {
      "left" : "int n = digestA.length;",
      "right" : "int n = digestA.length;",
      "info" : "VariableDeclarationStatement[1196-1219]:VariableDeclarationStatement[10892-10915]"
    }, {
      "left" : "if (n != digestB.length)",
      "right" : "if (n != digestB.length)",
      "info" : "IfStatement[1224-1276]:IfStatement[10920-10972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1249-1276]:Block[10945-10972]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1257-1270]:ReturnStatement[10953-10966]"
    }, {
      "left" : "for (int i = 0; i < n; ++i)",
      "right" : "for (int i = 0; i < n; ++i)",
      "info" : "ForStatement[1281-1384]:ForStatement[10977-11080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1309-1384]:Block[11005-11080]"
    }, {
      "left" : "if (digestA[i] != digestB[i])",
      "right" : "if (digestA[i] != digestB[i])",
      "info" : "IfStatement[1317-1378]:IfStatement[11013-11074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1347-1378]:Block[11043-11074]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1357-1370]:ReturnStatement[11053-11066]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[1389-1401]:ReturnStatement[11085-11097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1486-1523]:Block[11182-11219]"
    }, {
      "left" : "this.algorithm = algorithm;",
      "right" : "this.algorithm = algorithm;",
      "info" : "ExpressionStatement[1492-1519]:ExpressionStatement[11188-11215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1550-1582]:Block[11246-11278]"
    }, {
      "left" : "return engineDigest();",
      "right" : "return engineDigest();",
      "info" : "ReturnStatement[1556-1578]:ReturnStatement[11252-11274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1621-1666]:Block[11317-11362]"
    }, {
      "left" : "update(input);",
      "right" : "update(input);",
      "info" : "ExpressionStatement[1627-1641]:ExpressionStatement[11323-11337]"
    }, {
      "left" : "return digest();",
      "right" : "return digest();",
      "info" : "ReturnStatement[1646-1662]:ReturnStatement[11342-11358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1744-1792]:Block[11440-11488]"
    }, {
      "left" : "return engineDigest(buf, offset, len);",
      "right" : "return engineDigest(buf, offset, len);",
      "info" : "ReturnStatement[1750-1788]:ReturnStatement[11446-11484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1831-1858]:Block[11527-11554]"
    }, {
      "left" : "return algorithm;",
      "right" : "return algorithm;",
      "info" : "ReturnStatement[1837-1854]:ReturnStatement[11533-11550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1897-1938]:Block[11593-11634]"
    }, {
      "left" : "return engineGetDigestLength();",
      "right" : "return engineGetDigestLength();",
      "info" : "ReturnStatement[1903-1934]:ReturnStatement[11599-11630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1962-1986]:Block[11658-11682]"
    }, {
      "left" : "engineReset();",
      "right" : "engineReset();",
      "info" : "ExpressionStatement[1968-1982]:ExpressionStatement[11664-11678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2021-2051]:Block[11717-11747]"
    }, {
      "left" : "engineUpdate(input);",
      "right" : "engineUpdate(input);",
      "info" : "ExpressionStatement[2027-2047]:ExpressionStatement[11723-11743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2088-2135]:Block[11784-11831]"
    }, {
      "left" : "engineUpdate(input, 0, input.length);",
      "right" : "engineUpdate(input, 0, input.length);",
      "info" : "ExpressionStatement[2094-2131]:ExpressionStatement[11790-11827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2193-2236]:Block[11889-11932]"
    }, {
      "left" : "engineUpdate(input, offset, len);",
      "right" : "engineUpdate(input, offset, len);",
      "info" : "ExpressionStatement[2199-2232]:ExpressionStatement[11895-11928]"
    } ]
  },
  "interFileMappings" : {
    "Moved from File: user/src/com/google/gwt/core/client/impl/Md5Digest.java" : {
      "matchedElements" : [
 {
        "left" : "Md5Digest",
        "right" : "Md5Digest",
        "info" : "TypeDeclaration[4185-13277]:TypeDeclaration[896-10574]"
      }, {
        "left" : "static byte padding[] = {\n      (byte) 0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};",
        "right" : "static byte padding[] = {\n        (byte) 0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};",
        "info" : "FieldDeclaration[4297-4543]:FieldDeclaration[976-1228]"
      }, {
        "left" : "public static byte[] toBytes(long n)",
        "right" : "public static byte[] toBytes(long n)",
        "info" : "MethodDeclaration[4547-5040]:MethodDeclaration[1234-1774]"
      }, {
        "left" : "private static void byte2int(byte[] in, int[] out)",
        "right" : "private static void byte2int(byte[] in, int[] out)",
        "info" : "MethodDeclaration[5044-5433]:MethodDeclaration[1780-2190]"
      }, {
        "left" : "private static int f(int x, int y, int z)",
        "right" : "private static int f(int x, int y, int z)",
        "info" : "MethodDeclaration[5556-5635]:MethodDeclaration[2330-2413]"
      }, {
        "left" : "private static int ff(int a, int b, int c, int d, int x, int s, int ac)",
        "right" : "private static int ff(int a, int b, int c, int d, int x, int s, int ac)",
        "info" : "MethodDeclaration[5848-6002]:MethodDeclaration[2651-2813]"
      }, {
        "left" : "private static int g(int x, int y, int z)",
        "right" : "private static int g(int x, int y, int z)",
        "info" : "MethodDeclaration[6125-6204]:MethodDeclaration[2953-3036]"
      }, {
        "left" : "private static int gg(int a, int b, int c, int d, int x, int s, int ac)",
        "right" : "private static int gg(int a, int b, int c, int d, int x, int s, int ac)",
        "info" : "MethodDeclaration[6417-6571]:MethodDeclaration[3274-3436]"
      }, {
        "left" : "private static int h(int x, int y, int z)",
        "right" : "private static int h(int x, int y, int z)",
        "info" : "MethodDeclaration[6694-6765]:MethodDeclaration[3576-3651]"
      }, {
        "left" : "private static int hh(int a, int b, int c, int d, int x, int s, int ac)",
        "right" : "private static int hh(int a, int b, int c, int d, int x, int s, int ac)",
        "info" : "MethodDeclaration[6978-7132]:MethodDeclaration[3889-4051]"
      }, {
        "left" : "private static int i(int x, int y, int z)",
        "right" : "private static int i(int x, int y, int z)",
        "info" : "MethodDeclaration[7255-7329]:MethodDeclaration[4191-4269]"
      }, {
        "left" : "private static int ii(int a, int b, int c, int d, int x, int s, int ac)",
        "right" : "private static int ii(int a, int b, int c, int d, int x, int s, int ac)",
        "info" : "MethodDeclaration[7542-7696]:MethodDeclaration[4507-4669]"
      }, {
        "left" : "private static void int2byte(int[] in, byte[] out)",
        "right" : "private static void int2byte(int[] in, byte[] out)",
        "info" : "MethodDeclaration[7700-8161]:MethodDeclaration[4675-5161]"
      }, {
        "left" : "private byte buffer[];",
        "right" : "private byte buffer[];",
        "info" : "FieldDeclaration[8165-8187]:FieldDeclaration[5167-5189]"
      }, {
        "left" : "private long counter;",
        "right" : "private long counter;",
        "info" : "FieldDeclaration[8242-8263]:FieldDeclaration[5248-5269]"
      }, {
        "left" : "private final byte[] oneByte = new byte[1];",
        "right" : "private final byte[] oneByte = new byte[1];",
        "info" : "FieldDeclaration[8267-8310]:FieldDeclaration[5275-5318]"
      }, {
        "left" : "private int remainder;",
        "right" : "private int remainder;",
        "info" : "FieldDeclaration[8314-8336]:FieldDeclaration[5324-5346]"
      }, {
        "left" : "private int state[];",
        "right" : "private int state[];",
        "info" : "FieldDeclaration[8340-8360]:FieldDeclaration[5352-5372]"
      }, {
        "left" : "private int x[];",
        "right" : "private int x[];",
        "info" : "FieldDeclaration[8364-8380]:FieldDeclaration[5378-5394]"
      }, {
        "left" : "public Md5Digest()",
        "right" : "public Md5Digest()",
        "info" : "MethodDeclaration[8384-8445]:MethodDeclaration[5400-5467]"
      }, {
        "left" : "protected byte[] engineDigest()",
        "right" : "protected byte[] engineDigest()",
        "info" : "MethodDeclaration[8449-8818]:MethodDeclaration[5473-5868]"
      }, {
        "left" : "protected int engineGetDigestLength()",
        "right" : "protected int engineGetDigestLength()",
        "info" : "MethodDeclaration[8822-8892]:MethodDeclaration[5874-5950]"
      }, {
        "left" : "protected void engineReset()",
        "right" : "protected void engineReset()",
        "info" : "MethodDeclaration[8896-9161]:MethodDeclaration[5956-6243]"
      }, {
        "left" : "protected void engineUpdate(byte input)",
        "right" : "protected void engineUpdate(byte input)",
        "info" : "MethodDeclaration[9165-9320]:MethodDeclaration[6249-6414]"
      }, {
        "left" : "protected void engineUpdate(byte[] input, int offset, int len)",
        "right" : "protected void engineUpdate(byte[] input, int offset, int len)",
        "info" : "MethodDeclaration[9324-9855]:MethodDeclaration[6420-6987]"
      }, {
        "left" : "private void transform(byte[] buffer)",
        "right" : "private void transform(byte[] buffer)",
        "info" : "MethodDeclaration[9926-13275]:MethodDeclaration[7069-10570]"
      } ],
      "mappings" : [
 {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[4709-5040]:Block[1407-1774]"
      }, {
        "left" : "byte[] b = new byte[8];",
        "right" : "byte[] b = new byte[8];",
        "info" : "VariableDeclarationStatement[4715-4738]:VariableDeclarationStatement[1415-1438]"
      }, {
        "left" : "b[0] = (byte) (n);",
        "right" : "b[0] = (byte) (n);",
        "info" : "ExpressionStatement[4744-4762]:ExpressionStatement[1446-1464]"
      }, {
        "left" : "n >>>= 8;",
        "right" : "n >>>= 8;",
        "info" : "ExpressionStatement[4767-4776]:ExpressionStatement[1471-1480]"
      }, {
        "left" : "b[1] = (byte) (n);",
        "right" : "b[1] = (byte) (n);",
        "info" : "ExpressionStatement[4781-4799]:ExpressionStatement[1487-1505]"
      }, {
        "left" : "n >>>= 8;",
        "right" : "n >>>= 8;",
        "info" : "ExpressionStatement[4804-4813]:ExpressionStatement[1512-1521]"
      }, {
        "left" : "b[2] = (byte) (n);",
        "right" : "b[2] = (byte) (n);",
        "info" : "ExpressionStatement[4818-4836]:ExpressionStatement[1528-1546]"
      }, {
        "left" : "n >>>= 8;",
        "right" : "n >>>= 8;",
        "info" : "ExpressionStatement[4841-4850]:ExpressionStatement[1553-1562]"
      }, {
        "left" : "b[3] = (byte) (n);",
        "right" : "b[3] = (byte) (n);",
        "info" : "ExpressionStatement[4855-4873]:ExpressionStatement[1569-1587]"
      }, {
        "left" : "n >>>= 8;",
        "right" : "n >>>= 8;",
        "info" : "ExpressionStatement[4878-4887]:ExpressionStatement[1594-1603]"
      }, {
        "left" : "b[4] = (byte) (n);",
        "right" : "b[4] = (byte) (n);",
        "info" : "ExpressionStatement[4892-4910]:ExpressionStatement[1610-1628]"
      }, {
        "left" : "n >>>= 8;",
        "right" : "n >>>= 8;",
        "info" : "ExpressionStatement[4915-4924]:ExpressionStatement[1635-1644]"
      }, {
        "left" : "b[5] = (byte) (n);",
        "right" : "b[5] = (byte) (n);",
        "info" : "ExpressionStatement[4929-4947]:ExpressionStatement[1651-1669]"
      }, {
        "left" : "n >>>= 8;",
        "right" : "n >>>= 8;",
        "info" : "ExpressionStatement[4952-4961]:ExpressionStatement[1676-1685]"
      }, {
        "left" : "b[6] = (byte) (n);",
        "right" : "b[6] = (byte) (n);",
        "info" : "ExpressionStatement[4966-4984]:ExpressionStatement[1692-1710]"
      }, {
        "left" : "n >>>= 8;",
        "right" : "n >>>= 8;",
        "info" : "ExpressionStatement[4989-4998]:ExpressionStatement[1717-1726]"
      }, {
        "left" : "b[7] = (byte) (n);",
        "right" : "b[7] = (byte) (n);",
        "info" : "ExpressionStatement[5003-5021]:ExpressionStatement[1733-1751]"
      }, {
        "left" : "return b;",
        "right" : "return b;",
        "info" : "ReturnStatement[5027-5036]:ReturnStatement[1759-1768]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[5215-5433]:Block[1962-2190]"
      }, {
        "left" : "for (int inpos = 0, outpos = 0; outpos < 16; outpos++)",
        "right" : "for (int inpos = 0, outpos = 0; outpos < 16; outpos++)",
        "info" : "ForStatement[5221-5429]:ForStatement[1970-2184]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[5276-5429]:Block[2025-2184]"
      }, {
        "left" : "out[outpos] = ((in[inpos++] & 0xff) | ((in[inpos++] & 0xff) << 8)\n          | ((in[inpos++] & 0xff) << 16) | ((in[inpos++] & 0xff) << 24));",
        "right" : "out[outpos] = ((in[inpos++] & 0xff) | ((in[inpos++] & 0xff) << 8)\n            | ((in[inpos++] & 0xff) << 16) | ((in[inpos++] & 0xff) << 24));",
        "info" : "ExpressionStatement[5284-5423]:ExpressionStatement[2035-2176]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[5598-5635]:Block[2372-2413]"
      }, {
        "left" : "return (z ^ (x & (y ^ z)));",
        "right" : "return (z ^ (x & (y ^ z)));",
        "info" : "ReturnStatement[5604-5631]:ReturnStatement[2380-2407]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[5920-6002]:Block[2723-2813]"
      }, {
        "left" : "a += x + ac + f(b, c, d);",
        "right" : "a += x + ac + f(b, c, d);",
        "info" : "ExpressionStatement[5926-5951]:ExpressionStatement[2731-2756]"
      }, {
        "left" : "a = (a << s | a >>> -s);",
        "right" : "a = (a << s | a >>> -s);",
        "info" : "ExpressionStatement[5956-5980]:ExpressionStatement[2763-2787]"
      }, {
        "left" : "return a + b;",
        "right" : "return a + b;",
        "info" : "ReturnStatement[5985-5998]:ReturnStatement[2794-2807]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[6167-6204]:Block[2995-3036]"
      }, {
        "left" : "return (y ^ (z & (x ^ y)));",
        "right" : "return (y ^ (z & (x ^ y)));",
        "info" : "ReturnStatement[6173-6200]:ReturnStatement[3003-3030]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[6489-6571]:Block[3346-3436]"
      }, {
        "left" : "a += x + ac + g(b, c, d);",
        "right" : "a += x + ac + g(b, c, d);",
        "info" : "ExpressionStatement[6495-6520]:ExpressionStatement[3354-3379]"
      }, {
        "left" : "a = (a << s | a >>> -s);",
        "right" : "a = (a << s | a >>> -s);",
        "info" : "ExpressionStatement[6525-6549]:ExpressionStatement[3386-3410]"
      }, {
        "left" : "return a + b;",
        "right" : "return a + b;",
        "info" : "ReturnStatement[6554-6567]:ReturnStatement[3417-3430]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[6736-6765]:Block[3618-3651]"
      }, {
        "left" : "return (x ^ y ^ z);",
        "right" : "return (x ^ y ^ z);",
        "info" : "ReturnStatement[6742-6761]:ReturnStatement[3626-3645]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[7050-7132]:Block[3961-4051]"
      }, {
        "left" : "a += x + ac + h(b, c, d);",
        "right" : "a += x + ac + h(b, c, d);",
        "info" : "ExpressionStatement[7056-7081]:ExpressionStatement[3969-3994]"
      }, {
        "left" : "a = (a << s | a >>> -s);",
        "right" : "a = (a << s | a >>> -s);",
        "info" : "ExpressionStatement[7086-7110]:ExpressionStatement[4001-4025]"
      }, {
        "left" : "return a + b;",
        "right" : "return a + b;",
        "info" : "ReturnStatement[7115-7128]:ReturnStatement[4032-4045]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[7297-7329]:Block[4233-4269]"
      }, {
        "left" : "return (y ^ (x | ~z));",
        "right" : "return (y ^ (x | ~z));",
        "info" : "ReturnStatement[7303-7325]:ReturnStatement[4241-4263]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[7614-7696]:Block[4579-4669]"
      }, {
        "left" : "a += x + ac + i(b, c, d);",
        "right" : "a += x + ac + i(b, c, d);",
        "info" : "ExpressionStatement[7620-7645]:ExpressionStatement[4587-4612]"
      }, {
        "left" : "a = (a << s | a >>> -s);",
        "right" : "a = (a << s | a >>> -s);",
        "info" : "ExpressionStatement[7650-7674]:ExpressionStatement[4619-4643]"
      }, {
        "left" : "return a + b;",
        "right" : "return a + b;",
        "info" : "ReturnStatement[7679-7692]:ReturnStatement[4650-4663]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[7870-8161]:Block[4856-5161]"
      }, {
        "left" : "for (int inpos = 0, outpos = 0; inpos < 4; inpos++)",
        "right" : "for (int inpos = 0, outpos = 0; inpos < 4; inpos++)",
        "info" : "ForStatement[7876-8157]:ForStatement[4864-5155]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[7928-8157]:Block[4916-5155]"
      }, {
        "left" : "out[outpos++] = (byte) (in[inpos] & 0xff);",
        "right" : "out[outpos++] = (byte) (in[inpos] & 0xff);",
        "info" : "ExpressionStatement[7936-7978]:ExpressionStatement[4926-4968]"
      }, {
        "left" : "out[outpos++] = (byte) ((in[inpos] >>> 8) & 0xff);",
        "right" : "out[outpos++] = (byte) ((in[inpos] >>> 8) & 0xff);",
        "info" : "ExpressionStatement[7985-8035]:ExpressionStatement[4977-5027]"
      }, {
        "left" : "out[outpos++] = (byte) ((in[inpos] >>> 16) & 0xff);",
        "right" : "out[outpos++] = (byte) ((in[inpos] >>> 16) & 0xff);",
        "info" : "ExpressionStatement[8042-8093]:ExpressionStatement[5036-5087]"
      }, {
        "left" : "out[outpos++] = (byte) ((in[inpos] >>> 24) & 0xff);",
        "right" : "out[outpos++] = (byte) ((in[inpos] >>> 24) & 0xff);",
        "info" : "ExpressionStatement[8100-8151]:ExpressionStatement[5096-5147]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[8403-8445]:Block[5419-5467]"
      }, {
        "left" : "super(\"MD5\");",
        "right" : "super(\"MD5\");",
        "info" : "SuperConstructorInvocation[8409-8422]:SuperConstructorInvocation[5427-5440]"
      }, {
        "left" : "engineReset();",
        "right" : "engineReset();",
        "info" : "ExpressionStatement[8427-8441]:ExpressionStatement[5447-5461]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[8493-8818]:Block[5519-5868]"
      }, {
        "left" : "byte[] bits = toBytes(counter << 3);",
        "right" : "byte[] bits = toBytes(counter << 3);",
        "info" : "VariableDeclarationStatement[8499-8535]:VariableDeclarationStatement[5527-5563]"
      }, {
        "left" : "byte[] digest = new byte[16];",
        "right" : "byte[] digest = new byte[16];",
        "info" : "VariableDeclarationStatement[8540-8569]:VariableDeclarationStatement[5570-5599]"
      }, {
        "left" : "if (remainder > 8)",
        "right" : "if (remainder > 8)",
        "info" : "IfStatement[8575-8715]:IfStatement[5607-5755]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[8594-8648]:Block[5626-5684]"
      }, {
        "left" : "engineUpdate(padding, 0, remainder - 8);",
        "right" : "engineUpdate(padding, 0, remainder - 8);",
        "info" : "ExpressionStatement[8602-8642]:ExpressionStatement[5636-5676]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[8654-8715]:Block[5690-5755]"
      }, {
        "left" : "engineUpdate(padding, 0, 64 + (remainder - 8));",
        "right" : "engineUpdate(padding, 0, 64 + (remainder - 8));",
        "info" : "ExpressionStatement[8662-8709]:ExpressionStatement[5700-5747]"
      }, {
        "left" : "engineUpdate(bits, 0, 8);",
        "right" : "engineUpdate(bits, 0, 8);",
        "info" : "ExpressionStatement[8721-8746]:ExpressionStatement[5763-5788]"
      }, {
        "left" : "int2byte(state, digest);",
        "right" : "int2byte(state, digest);",
        "info" : "ExpressionStatement[8752-8776]:ExpressionStatement[5796-5820]"
      }, {
        "left" : "this.reset();",
        "right" : "this.reset();",
        "info" : "ExpressionStatement[8782-8795]:ExpressionStatement[5828-5841]"
      }, {
        "left" : "return digest;",
        "right" : "return digest;",
        "info" : "ReturnStatement[8800-8814]:ReturnStatement[5848-5862]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[8872-8892]:Block[5926-5950]"
      }, {
        "left" : "return 16;",
        "right" : "return 16;",
        "info" : "ReturnStatement[8878-8888]:ReturnStatement[5934-5944]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[8937-9161]:Block[5999-6243]"
      }, {
        "left" : "buffer = new byte[64];",
        "right" : "buffer = new byte[64];",
        "info" : "ExpressionStatement[8943-8965]:ExpressionStatement[6007-6029]"
      }, {
        "left" : "state = new int[4];",
        "right" : "state = new int[4];",
        "info" : "ExpressionStatement[8970-8989]:ExpressionStatement[6036-6055]"
      }, {
        "left" : "x = new int[16];",
        "right" : "x = new int[16];",
        "info" : "ExpressionStatement[8994-9010]:ExpressionStatement[6062-6078]"
      }, {
        "left" : "state[0] = 0x67452301;",
        "right" : "state[0] = 0x67452301;",
        "info" : "ExpressionStatement[9016-9038]:ExpressionStatement[6086-6108]"
      }, {
        "left" : "state[1] = 0xefcdab89;",
        "right" : "state[1] = 0xefcdab89;",
        "info" : "ExpressionStatement[9043-9065]:ExpressionStatement[6115-6137]"
      }, {
        "left" : "state[2] = 0x98badcfe;",
        "right" : "state[2] = 0x98badcfe;",
        "info" : "ExpressionStatement[9070-9092]:ExpressionStatement[6144-6166]"
      }, {
        "left" : "state[3] = 0x10325476;",
        "right" : "state[3] = 0x10325476;",
        "info" : "ExpressionStatement[9097-9119]:ExpressionStatement[6173-6195]"
      }, {
        "left" : "counter = 0;",
        "right" : "counter = 0;",
        "info" : "ExpressionStatement[9125-9137]:ExpressionStatement[6203-6215]"
      }, {
        "left" : "remainder = 64;",
        "right" : "remainder = 64;",
        "info" : "ExpressionStatement[9142-9157]:ExpressionStatement[6222-6237]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[9217-9320]:Block[6303-6414]"
      }, {
        "left" : "oneByte [0] = input;",
        "right" : "oneByte [0] = input;",
        "info" : "ExpressionStatement[9263-9283]:ExpressionStatement[6353-6373]"
      }, {
        "left" : "engineUpdate(oneByte, 0, 1);",
        "right" : "engineUpdate(oneByte, 0, 1);",
        "info" : "ExpressionStatement[9288-9316]:ExpressionStatement[6380-6408]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[9399-9855]:Block[6497-6987]"
      }, {
        "left" : "while (true)",
        "right" : "while (true)",
        "info" : "WhileStatement[9405-9851]:WhileStatement[6505-6981]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[9418-9851]:Block[6518-6981]"
      }, {
        "left" : "if (len >= remainder)",
        "right" : "if (len >= remainder)",
        "info" : "IfStatement[9426-9845]:IfStatement[6528-6973]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[9448-9688]:Block[6550-6806]"
      }, {
        "left" : "System.arraycopy(input, offset, buffer, (int) (counter & 63L),\n            remainder);",
        "right" : "System.arraycopy(input, offset, buffer, (int) (counter & 63L),\n              remainder);",
        "info" : "ExpressionStatement[9458-9544]:ExpressionStatement[6562-6650]"
      }, {
        "left" : "transform(buffer);",
        "right" : "transform(buffer);",
        "info" : "ExpressionStatement[9553-9571]:ExpressionStatement[6661-6679]"
      }, {
        "left" : "counter += remainder;",
        "right" : "counter += remainder;",
        "info" : "ExpressionStatement[9580-9601]:ExpressionStatement[6690-6711]"
      }, {
        "left" : "offset += remainder;",
        "right" : "offset += remainder;",
        "info" : "ExpressionStatement[9610-9630]:ExpressionStatement[6722-6742]"
      }, {
        "left" : "len -= remainder;",
        "right" : "len -= remainder;",
        "info" : "ExpressionStatement[9639-9656]:ExpressionStatement[6753-6770]"
      }, {
        "left" : "remainder = 64;",
        "right" : "remainder = 64;",
        "info" : "ExpressionStatement[9665-9680]:ExpressionStatement[6781-6796]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[9694-9845]:Block[6812-6973]"
      }, {
        "left" : "System.arraycopy(input, offset, buffer, (int) (counter & 63L), len);",
        "right" : "System.arraycopy(input, offset, buffer, (int) (counter & 63L), len);",
        "info" : "ExpressionStatement[9704-9772]:ExpressionStatement[6824-6892]"
      }, {
        "left" : "counter += len;",
        "right" : "counter += len;",
        "info" : "ExpressionStatement[9781-9796]:ExpressionStatement[6903-6918]"
      }, {
        "left" : "remainder -= len;",
        "right" : "remainder -= len;",
        "info" : "ExpressionStatement[9805-9822]:ExpressionStatement[6929-6946]"
      }, {
        "left" : "break;",
        "right" : "break;",
        "info" : "BreakStatement[9831-9837]:BreakStatement[6957-6963]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[9964-13275]:Block[7107-10570]"
      }, {
        "left" : "int a, b, c, d;",
        "right" : "int a, b, c, d;",
        "info" : "VariableDeclarationStatement[9970-9985]:VariableDeclarationStatement[7115-7130]"
      }, {
        "left" : "byte2int(buffer, x);",
        "right" : "byte2int(buffer, x);",
        "info" : "ExpressionStatement[9991-10011]:ExpressionStatement[7138-7158]"
      }, {
        "left" : "a = state[0];",
        "right" : "a = state[0];",
        "info" : "ExpressionStatement[10017-10030]:ExpressionStatement[7166-7179]"
      }, {
        "left" : "b = state[1];",
        "right" : "b = state[1];",
        "info" : "ExpressionStatement[10035-10048]:ExpressionStatement[7186-7199]"
      }, {
        "left" : "c = state[2];",
        "right" : "c = state[2];",
        "info" : "ExpressionStatement[10053-10066]:ExpressionStatement[7206-7219]"
      }, {
        "left" : "d = state[3];",
        "right" : "d = state[3];",
        "info" : "ExpressionStatement[10071-10084]:ExpressionStatement[7226-7239]"
      }, {
        "left" : "a = ff(a, b, c, d, x[0], 7, 0xd76aa478);",
        "right" : "a = ff(a, b, c, d, x[0], 7, 0xd76aa478);",
        "info" : "ExpressionStatement[10090-10130]:ExpressionStatement[7247-7287]"
      }, {
        "left" : "d = ff(d, a, b, c, x[1], 12, 0xe8c7b756);",
        "right" : "d = ff(d, a, b, c, x[1], 12, 0xe8c7b756);",
        "info" : "ExpressionStatement[10135-10176]:ExpressionStatement[7294-7335]"
      }, {
        "left" : "c = ff(c, d, a, b, x[2], 17, 0x242070db);",
        "right" : "c = ff(c, d, a, b, x[2], 17, 0x242070db);",
        "info" : "ExpressionStatement[10181-10222]:ExpressionStatement[7342-7383]"
      }, {
        "left" : "b = ff(b, c, d, a, x[3], 22, 0xc1bdceee);",
        "right" : "b = ff(b, c, d, a, x[3], 22, 0xc1bdceee);",
        "info" : "ExpressionStatement[10227-10268]:ExpressionStatement[7390-7431]"
      }, {
        "left" : "a = ff(a, b, c, d, x[4], 7, 0xf57c0faf);",
        "right" : "a = ff(a, b, c, d, x[4], 7, 0xf57c0faf);",
        "info" : "ExpressionStatement[10273-10313]:ExpressionStatement[7438-7478]"
      }, {
        "left" : "d = ff(d, a, b, c, x[5], 12, 0x4787c62a);",
        "right" : "d = ff(d, a, b, c, x[5], 12, 0x4787c62a);",
        "info" : "ExpressionStatement[10318-10359]:ExpressionStatement[7485-7526]"
      }, {
        "left" : "c = ff(c, d, a, b, x[6], 17, 0xa8304613);",
        "right" : "c = ff(c, d, a, b, x[6], 17, 0xa8304613);",
        "info" : "ExpressionStatement[10364-10405]:ExpressionStatement[7533-7574]"
      }, {
        "left" : "b = ff(b, c, d, a, x[7], 22, 0xfd469501);",
        "right" : "b = ff(b, c, d, a, x[7], 22, 0xfd469501);",
        "info" : "ExpressionStatement[10410-10451]:ExpressionStatement[7581-7622]"
      }, {
        "left" : "a = ff(a, b, c, d, x[8], 7, 0x698098d8);",
        "right" : "a = ff(a, b, c, d, x[8], 7, 0x698098d8);",
        "info" : "ExpressionStatement[10456-10496]:ExpressionStatement[7629-7669]"
      }, {
        "left" : "d = ff(d, a, b, c, x[9], 12, 0x8b44f7af);",
        "right" : "d = ff(d, a, b, c, x[9], 12, 0x8b44f7af);",
        "info" : "ExpressionStatement[10501-10542]:ExpressionStatement[7676-7717]"
      }, {
        "left" : "c = ff(c, d, a, b, x[10], 17, 0xffff5bb1);",
        "right" : "c = ff(c, d, a, b, x[10], 17, 0xffff5bb1);",
        "info" : "ExpressionStatement[10547-10589]:ExpressionStatement[7724-7766]"
      }, {
        "left" : "b = ff(b, c, d, a, x[11], 22, 0x895cd7be);",
        "right" : "b = ff(b, c, d, a, x[11], 22, 0x895cd7be);",
        "info" : "ExpressionStatement[10594-10636]:ExpressionStatement[7773-7815]"
      }, {
        "left" : "a = ff(a, b, c, d, x[12], 7, 0x6b901122);",
        "right" : "a = ff(a, b, c, d, x[12], 7, 0x6b901122);",
        "info" : "ExpressionStatement[10641-10682]:ExpressionStatement[7822-7863]"
      }, {
        "left" : "d = ff(d, a, b, c, x[13], 12, 0xfd987193);",
        "right" : "d = ff(d, a, b, c, x[13], 12, 0xfd987193);",
        "info" : "ExpressionStatement[10687-10729]:ExpressionStatement[7870-7912]"
      }, {
        "left" : "c = ff(c, d, a, b, x[14], 17, 0xa679438e);",
        "right" : "c = ff(c, d, a, b, x[14], 17, 0xa679438e);",
        "info" : "ExpressionStatement[10734-10776]:ExpressionStatement[7919-7961]"
      }, {
        "left" : "b = ff(b, c, d, a, x[15], 22, 0x49b40821);",
        "right" : "b = ff(b, c, d, a, x[15], 22, 0x49b40821);",
        "info" : "ExpressionStatement[10781-10823]:ExpressionStatement[7968-8010]"
      }, {
        "left" : "a = gg(a, b, c, d, x[1], 5, 0xf61e2562);",
        "right" : "a = gg(a, b, c, d, x[1], 5, 0xf61e2562);",
        "info" : "ExpressionStatement[10829-10869]:ExpressionStatement[8018-8058]"
      }, {
        "left" : "d = gg(d, a, b, c, x[6], 9, 0xc040b340);",
        "right" : "d = gg(d, a, b, c, x[6], 9, 0xc040b340);",
        "info" : "ExpressionStatement[10874-10914]:ExpressionStatement[8065-8105]"
      }, {
        "left" : "c = gg(c, d, a, b, x[11], 14, 0x265e5a51);",
        "right" : "c = gg(c, d, a, b, x[11], 14, 0x265e5a51);",
        "info" : "ExpressionStatement[10919-10961]:ExpressionStatement[8112-8154]"
      }, {
        "left" : "b = gg(b, c, d, a, x[0], 20, 0xe9b6c7aa);",
        "right" : "b = gg(b, c, d, a, x[0], 20, 0xe9b6c7aa);",
        "info" : "ExpressionStatement[10966-11007]:ExpressionStatement[8161-8202]"
      }, {
        "left" : "a = gg(a, b, c, d, x[5], 5, 0xd62f105d);",
        "right" : "a = gg(a, b, c, d, x[5], 5, 0xd62f105d);",
        "info" : "ExpressionStatement[11012-11052]:ExpressionStatement[8209-8249]"
      }, {
        "left" : "d = gg(d, a, b, c, x[10], 9, 0x2441453);",
        "right" : "d = gg(d, a, b, c, x[10], 9, 0x2441453);",
        "info" : "ExpressionStatement[11057-11097]:ExpressionStatement[8256-8296]"
      }, {
        "left" : "c = gg(c, d, a, b, x[15], 14, 0xd8a1e681);",
        "right" : "c = gg(c, d, a, b, x[15], 14, 0xd8a1e681);",
        "info" : "ExpressionStatement[11102-11144]:ExpressionStatement[8303-8345]"
      }, {
        "left" : "b = gg(b, c, d, a, x[4], 20, 0xe7d3fbc8);",
        "right" : "b = gg(b, c, d, a, x[4], 20, 0xe7d3fbc8);",
        "info" : "ExpressionStatement[11149-11190]:ExpressionStatement[8352-8393]"
      }, {
        "left" : "a = gg(a, b, c, d, x[9], 5, 0x21e1cde6);",
        "right" : "a = gg(a, b, c, d, x[9], 5, 0x21e1cde6);",
        "info" : "ExpressionStatement[11195-11235]:ExpressionStatement[8400-8440]"
      }, {
        "left" : "d = gg(d, a, b, c, x[14], 9, 0xc33707d6);",
        "right" : "d = gg(d, a, b, c, x[14], 9, 0xc33707d6);",
        "info" : "ExpressionStatement[11240-11281]:ExpressionStatement[8447-8488]"
      }, {
        "left" : "c = gg(c, d, a, b, x[3], 14, 0xf4d50d87);",
        "right" : "c = gg(c, d, a, b, x[3], 14, 0xf4d50d87);",
        "info" : "ExpressionStatement[11286-11327]:ExpressionStatement[8495-8536]"
      }, {
        "left" : "b = gg(b, c, d, a, x[8], 20, 0x455a14ed);",
        "right" : "b = gg(b, c, d, a, x[8], 20, 0x455a14ed);",
        "info" : "ExpressionStatement[11332-11373]:ExpressionStatement[8543-8584]"
      }, {
        "left" : "a = gg(a, b, c, d, x[13], 5, 0xa9e3e905);",
        "right" : "a = gg(a, b, c, d, x[13], 5, 0xa9e3e905);",
        "info" : "ExpressionStatement[11378-11419]:ExpressionStatement[8591-8632]"
      }, {
        "left" : "d = gg(d, a, b, c, x[2], 9, 0xfcefa3f8);",
        "right" : "d = gg(d, a, b, c, x[2], 9, 0xfcefa3f8);",
        "info" : "ExpressionStatement[11424-11464]:ExpressionStatement[8639-8679]"
      }, {
        "left" : "c = gg(c, d, a, b, x[7], 14, 0x676f02d9);",
        "right" : "c = gg(c, d, a, b, x[7], 14, 0x676f02d9);",
        "info" : "ExpressionStatement[11469-11510]:ExpressionStatement[8686-8727]"
      }, {
        "left" : "b = gg(b, c, d, a, x[12], 20, 0x8d2a4c8a);",
        "right" : "b = gg(b, c, d, a, x[12], 20, 0x8d2a4c8a);",
        "info" : "ExpressionStatement[11515-11557]:ExpressionStatement[8734-8776]"
      }, {
        "left" : "a = hh(a, b, c, d, x[5], 4, 0xfffa3942);",
        "right" : "a = hh(a, b, c, d, x[5], 4, 0xfffa3942);",
        "info" : "ExpressionStatement[11563-11603]:ExpressionStatement[8784-8824]"
      }, {
        "left" : "d = hh(d, a, b, c, x[8], 11, 0x8771f681);",
        "right" : "d = hh(d, a, b, c, x[8], 11, 0x8771f681);",
        "info" : "ExpressionStatement[11608-11649]:ExpressionStatement[8831-8872]"
      }, {
        "left" : "c = hh(c, d, a, b, x[11], 16, 0x6d9d6122);",
        "right" : "c = hh(c, d, a, b, x[11], 16, 0x6d9d6122);",
        "info" : "ExpressionStatement[11654-11696]:ExpressionStatement[8879-8921]"
      }, {
        "left" : "b = hh(b, c, d, a, x[14], 23, 0xfde5380c);",
        "right" : "b = hh(b, c, d, a, x[14], 23, 0xfde5380c);",
        "info" : "ExpressionStatement[11701-11743]:ExpressionStatement[8928-8970]"
      }, {
        "left" : "a = hh(a, b, c, d, x[1], 4, 0xa4beea44);",
        "right" : "a = hh(a, b, c, d, x[1], 4, 0xa4beea44);",
        "info" : "ExpressionStatement[11748-11788]:ExpressionStatement[8977-9017]"
      }, {
        "left" : "d = hh(d, a, b, c, x[4], 11, 0x4bdecfa9);",
        "right" : "d = hh(d, a, b, c, x[4], 11, 0x4bdecfa9);",
        "info" : "ExpressionStatement[11793-11834]:ExpressionStatement[9024-9065]"
      }, {
        "left" : "c = hh(c, d, a, b, x[7], 16, 0xf6bb4b60);",
        "right" : "c = hh(c, d, a, b, x[7], 16, 0xf6bb4b60);",
        "info" : "ExpressionStatement[11839-11880]:ExpressionStatement[9072-9113]"
      }, {
        "left" : "b = hh(b, c, d, a, x[10], 23, 0xbebfbc70);",
        "right" : "b = hh(b, c, d, a, x[10], 23, 0xbebfbc70);",
        "info" : "ExpressionStatement[11885-11927]:ExpressionStatement[9120-9162]"
      }, {
        "left" : "a = hh(a, b, c, d, x[13], 4, 0x289b7ec6);",
        "right" : "a = hh(a, b, c, d, x[13], 4, 0x289b7ec6);",
        "info" : "ExpressionStatement[11932-11973]:ExpressionStatement[9169-9210]"
      }, {
        "left" : "d = hh(d, a, b, c, x[0], 11, 0xeaa127fa);",
        "right" : "d = hh(d, a, b, c, x[0], 11, 0xeaa127fa);",
        "info" : "ExpressionStatement[11978-12019]:ExpressionStatement[9217-9258]"
      }, {
        "left" : "c = hh(c, d, a, b, x[3], 16, 0xd4ef3085);",
        "right" : "c = hh(c, d, a, b, x[3], 16, 0xd4ef3085);",
        "info" : "ExpressionStatement[12024-12065]:ExpressionStatement[9265-9306]"
      }, {
        "left" : "b = hh(b, c, d, a, x[6], 23, 0x4881d05);",
        "right" : "b = hh(b, c, d, a, x[6], 23, 0x4881d05);",
        "info" : "ExpressionStatement[12070-12110]:ExpressionStatement[9313-9353]"
      }, {
        "left" : "a = hh(a, b, c, d, x[9], 4, 0xd9d4d039);",
        "right" : "a = hh(a, b, c, d, x[9], 4, 0xd9d4d039);",
        "info" : "ExpressionStatement[12115-12155]:ExpressionStatement[9360-9400]"
      }, {
        "left" : "d = hh(d, a, b, c, x[12], 11, 0xe6db99e5);",
        "right" : "d = hh(d, a, b, c, x[12], 11, 0xe6db99e5);",
        "info" : "ExpressionStatement[12160-12202]:ExpressionStatement[9407-9449]"
      }, {
        "left" : "c = hh(c, d, a, b, x[15], 16, 0x1fa27cf8);",
        "right" : "c = hh(c, d, a, b, x[15], 16, 0x1fa27cf8);",
        "info" : "ExpressionStatement[12207-12249]:ExpressionStatement[9456-9498]"
      }, {
        "left" : "b = hh(b, c, d, a, x[2], 23, 0xc4ac5665);",
        "right" : "b = hh(b, c, d, a, x[2], 23, 0xc4ac5665);",
        "info" : "ExpressionStatement[12254-12295]:ExpressionStatement[9505-9546]"
      }, {
        "left" : "a = ii(a, b, c, d, x[0], 6, 0xf4292244);",
        "right" : "a = ii(a, b, c, d, x[0], 6, 0xf4292244);",
        "info" : "ExpressionStatement[12301-12341]:ExpressionStatement[9554-9594]"
      }, {
        "left" : "d = ii(d, a, b, c, x[7], 10, 0x432aff97);",
        "right" : "d = ii(d, a, b, c, x[7], 10, 0x432aff97);",
        "info" : "ExpressionStatement[12346-12387]:ExpressionStatement[9601-9642]"
      }, {
        "left" : "c = ii(c, d, a, b, x[14], 15, 0xab9423a7);",
        "right" : "c = ii(c, d, a, b, x[14], 15, 0xab9423a7);",
        "info" : "ExpressionStatement[12392-12434]:ExpressionStatement[9649-9691]"
      }, {
        "left" : "b = ii(b, c, d, a, x[5], 21, 0xfc93a039);",
        "right" : "b = ii(b, c, d, a, x[5], 21, 0xfc93a039);",
        "info" : "ExpressionStatement[12439-12480]:ExpressionStatement[9698-9739]"
      }, {
        "left" : "a = ii(a, b, c, d, x[12], 6, 0x655b59c3);",
        "right" : "a = ii(a, b, c, d, x[12], 6, 0x655b59c3);",
        "info" : "ExpressionStatement[12485-12526]:ExpressionStatement[9746-9787]"
      }, {
        "left" : "d = ii(d, a, b, c, x[3], 10, 0x8f0ccc92);",
        "right" : "d = ii(d, a, b, c, x[3], 10, 0x8f0ccc92);",
        "info" : "ExpressionStatement[12531-12572]:ExpressionStatement[9794-9835]"
      }, {
        "left" : "c = ii(c, d, a, b, x[10], 15, 0xffeff47d);",
        "right" : "c = ii(c, d, a, b, x[10], 15, 0xffeff47d);",
        "info" : "ExpressionStatement[12577-12619]:ExpressionStatement[9842-9884]"
      }, {
        "left" : "b = ii(b, c, d, a, x[1], 21, 0x85845dd1);",
        "right" : "b = ii(b, c, d, a, x[1], 21, 0x85845dd1);",
        "info" : "ExpressionStatement[12624-12665]:ExpressionStatement[9891-9932]"
      }, {
        "left" : "a = ii(a, b, c, d, x[8], 6, 0x6fa87e4f);",
        "right" : "a = ii(a, b, c, d, x[8], 6, 0x6fa87e4f);",
        "info" : "ExpressionStatement[12670-12710]:ExpressionStatement[9939-9979]"
      }, {
        "left" : "d = ii(d, a, b, c, x[15], 10, 0xfe2ce6e0);",
        "right" : "d = ii(d, a, b, c, x[15], 10, 0xfe2ce6e0);",
        "info" : "ExpressionStatement[12715-12757]:ExpressionStatement[9986-10028]"
      }, {
        "left" : "c = ii(c, d, a, b, x[6], 15, 0xa3014314);",
        "right" : "c = ii(c, d, a, b, x[6], 15, 0xa3014314);",
        "info" : "ExpressionStatement[12762-12803]:ExpressionStatement[10035-10076]"
      }, {
        "left" : "b = ii(b, c, d, a, x[13], 21, 0x4e0811a1);",
        "right" : "b = ii(b, c, d, a, x[13], 21, 0x4e0811a1);",
        "info" : "ExpressionStatement[12808-12850]:ExpressionStatement[10083-10125]"
      }, {
        "left" : "a = ii(a, b, c, d, x[4], 6, 0xf7537e82);",
        "right" : "a = ii(a, b, c, d, x[4], 6, 0xf7537e82);",
        "info" : "ExpressionStatement[12855-12895]:ExpressionStatement[10132-10172]"
      }, {
        "left" : "d = ii(d, a, b, c, x[11], 10, 0xbd3af235);",
        "right" : "d = ii(d, a, b, c, x[11], 10, 0xbd3af235);",
        "info" : "ExpressionStatement[12900-12942]:ExpressionStatement[10179-10221]"
      }, {
        "left" : "c = ii(c, d, a, b, x[2], 15, 0x2ad7d2bb);",
        "right" : "c = ii(c, d, a, b, x[2], 15, 0x2ad7d2bb);",
        "info" : "ExpressionStatement[12947-12988]:ExpressionStatement[10228-10269]"
      }, {
        "left" : "b = ii(b, c, d, a, x[9], 21, 0xeb86d391);",
        "right" : "b = ii(b, c, d, a, x[9], 21, 0xeb86d391);",
        "info" : "ExpressionStatement[12993-13034]:ExpressionStatement[10276-10317]"
      }, {
        "left" : "state[0] = ensureInt(state[0] + a);",
        "right" : "state[0] = ensureInt(state[0] + a);",
        "info" : "ExpressionStatement[13116-13151]:ExpressionStatement[10403-10438]"
      }, {
        "left" : "state[1] = ensureInt(state[1] + b);",
        "right" : "state[1] = ensureInt(state[1] + b);",
        "info" : "ExpressionStatement[13156-13191]:ExpressionStatement[10445-10480]"
      }, {
        "left" : "state[2] = ensureInt(state[2] + c);",
        "right" : "state[2] = ensureInt(state[2] + c);",
        "info" : "ExpressionStatement[13196-13231]:ExpressionStatement[10487-10522]"
      }, {
        "left" : "state[3] = ensureInt(state[3] + d);",
        "right" : "state[3] = ensureInt(state[3] + d);",
        "info" : "ExpressionStatement[13236-13271]:ExpressionStatement[10529-10564]"
      } ]
    }
  }
}