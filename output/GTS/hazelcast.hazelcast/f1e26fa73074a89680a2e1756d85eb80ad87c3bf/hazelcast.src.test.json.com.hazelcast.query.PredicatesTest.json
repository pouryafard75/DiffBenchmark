{
  "matchedElements" : [ {
    "left" : "class : PredicatesTest",
    "right" : "class : PredicatesTest",
    "info" : "TypeDeclaration[2590-13392]:TypeDeclaration[2588-13390]"
  }, {
    "left" : "public testAndPredicate_whenFirstIndexAwarePredicateIsNotIndexed() : void",
    "right" : "public testAndPredicate_whenFirstIndexAwarePredicateIsNotIndexed() : void",
    "info" : "MethodDeclaration[2724-3410]:MethodDeclaration[2722-3408]"
  }, {
    "left" : "class : ShouldExecuteOncePredicate",
    "right" : "class : ShouldExecuteOncePredicate",
    "info" : "TypeDeclaration[3416-4010]:TypeDeclaration[3414-4008]"
  }, {
    "left" : "executed",
    "right" : "executed",
    "info" : "FieldDeclaration[3498-3523]:FieldDeclaration[3496-3521]"
  }, {
    "left" : "public apply(mapEntry ) : boolean",
    "right" : "public apply(mapEntry ) : boolean",
    "info" : "MethodDeclaration[3533-3750]:MethodDeclaration[3531-3748]"
  }, {
    "left" : "public filter(queryContext ) : ",
    "right" : "public filter(queryContext ) : ",
    "info" : "MethodDeclaration[3760-3881]:MethodDeclaration[3758-3879]"
  }, {
    "left" : "public isIndexed(queryContext ) : boolean",
    "right" : "public isIndexed(queryContext ) : boolean",
    "info" : "MethodDeclaration[3891-4004]:MethodDeclaration[3889-4002]"
  }, {
    "left" : "public testEqual() : void",
    "right" : "public testEqual() : void",
    "info" : "MethodDeclaration[4016-4696]:MethodDeclaration[4014-4694]"
  }, {
    "left" : "public testAnd() : void",
    "right" : "public testAnd() : void",
    "info" : "MethodDeclaration[4703-5247]:MethodDeclaration[4701-5245]"
  }, {
    "left" : "public testOr() : void",
    "right" : "public testOr() : void",
    "info" : "MethodDeclaration[5253-5448]:MethodDeclaration[5251-5446]"
  }, {
    "left" : "public testGreaterEqual() : void",
    "right" : "public testGreaterEqual() : void",
    "info" : "MethodDeclaration[5454-5557]:MethodDeclaration[5452-5555]"
  }, {
    "left" : "public testLessThan() : void",
    "right" : "public testLessThan() : void",
    "info" : "MethodDeclaration[5563-5877]:MethodDeclaration[5561-5875]"
  }, {
    "left" : "public testGreaterThan() : void",
    "right" : "public testGreaterThan() : void",
    "info" : "MethodDeclaration[5883-6315]:MethodDeclaration[5881-6313]"
  }, {
    "left" : "public testLessEqual() : void",
    "right" : "public testLessEqual() : void",
    "info" : "MethodDeclaration[6321-6418]:MethodDeclaration[6319-6416]"
  }, {
    "left" : "public testPredicatesAgainstANullField() : void",
    "right" : "public testPredicatesAgainstANullField() : void",
    "info" : "MethodDeclaration[6424-7220]:MethodDeclaration[6422-7218]"
  }, {
    "left" : "public testBetween() : void",
    "right" : "public testBetween() : void",
    "info" : "MethodDeclaration[7226-7562]:MethodDeclaration[7224-7560]"
  }, {
    "left" : "public testIn() : void",
    "right" : "public testIn() : void",
    "info" : "MethodDeclaration[7568-7815]:MethodDeclaration[7566-7813]"
  }, {
    "left" : "public testLike() : void",
    "right" : "public testLike() : void",
    "info" : "MethodDeclaration[7821-9109]:MethodDeclaration[7819-9107]"
  }, {
    "left" : "public testILike() : void",
    "right" : "public testILike() : void",
    "info" : "MethodDeclaration[9115-9499]:MethodDeclaration[9113-9497]"
  }, {
    "left" : "public testIsInstanceOf() : void",
    "right" : "public testIsInstanceOf() : void",
    "info" : "MethodDeclaration[9505-9769]:MethodDeclaration[9503-9767]"
  }, {
    "left" : "public testCriteriaAPI() : void",
    "right" : "public testCriteriaAPI() : void",
    "info" : "MethodDeclaration[9775-10259]:MethodDeclaration[9773-10257]"
  }, {
    "left" : "public testBetweenNull() : void",
    "right" : "public testBetweenNull() : void",
    "info" : "MethodDeclaration[10265-10395]:MethodDeclaration[10263-10393]"
  }, {
    "left" : "public testLessThanNull() : void",
    "right" : "public testLessThanNull() : void",
    "info" : "MethodDeclaration[10401-10527]:MethodDeclaration[10399-10525]"
  }, {
    "left" : "public testLessEqualNull() : void",
    "right" : "public testLessEqualNull() : void",
    "info" : "MethodDeclaration[10533-10661]:MethodDeclaration[10531-10659]"
  }, {
    "left" : "public testGreaterThanNull() : void",
    "right" : "public testGreaterThanNull() : void",
    "info" : "MethodDeclaration[10667-10799]:MethodDeclaration[10665-10797]"
  }, {
    "left" : "public testGreaterEqualNull() : void",
    "right" : "public testGreaterEqualNull() : void",
    "info" : "MethodDeclaration[10805-10939]:MethodDeclaration[10803-10937]"
  }, {
    "left" : "public testInNullWithNullArray() : void",
    "right" : "public testInNullWithNullArray() : void",
    "info" : "MethodDeclaration[10945-11072]:MethodDeclaration[10943-11070]"
  }, {
    "left" : "class : DummyEntry",
    "right" : "class : DummyEntry",
    "info" : "TypeDeclaration[11078-11571]:TypeDeclaration[11076-11569]"
  }, {
    "left" : "package DummyEntry(attribute )",
    "right" : "package DummyEntry(attribute )",
    "info" : "MethodDeclaration[11133-11231]:MethodDeclaration[11131-11229]"
  }, {
    "left" : "public getAttribute(attributeName ) : ",
    "right" : "public getAttribute(attributeName ) : ",
    "info" : "MethodDeclaration[11241-11389]:MethodDeclaration[11239-11387]"
  }, {
    "left" : "public getAttributeType(attributeName ) : ",
    "right" : "public getAttributeType(attributeName ) : ",
    "info" : "MethodDeclaration[11399-11565]:MethodDeclaration[11397-11563]"
  }, {
    "left" : "class : NullDummyEntry",
    "right" : "class : NullDummyEntry",
    "info" : "TypeDeclaration[11577-12732]:TypeDeclaration[11575-12730]"
  }, {
    "left" : "nullField",
    "right" : "nullField",
    "info" : "FieldDeclaration[11643-11669]:FieldDeclaration[11641-11667]"
  }, {
    "left" : "private NullDummyEntry()",
    "right" : "private NullDummyEntry()",
    "info" : "MethodDeclaration[11679-11715]:MethodDeclaration[11677-11713]"
  }, {
    "left" : "public getNullField() : ",
    "right" : "public getNullField() : ",
    "info" : "MethodDeclaration[11725-11796]:MethodDeclaration[11723-11794]"
  }, {
    "left" : "public setNullField(nullField ) : void",
    "right" : "public setNullField(nullField ) : void",
    "info" : "MethodDeclaration[11806-11901]:MethodDeclaration[11804-11899]"
  }, {
    "left" : "public getValue() : ",
    "right" : "public getValue() : ",
    "info" : "MethodDeclaration[11911-11990]:MethodDeclaration[11909-11988]"
  }, {
    "left" : "public setValue(value ) : ",
    "right" : "public setValue(value ) : ",
    "info" : "MethodDeclaration[12000-12091]:MethodDeclaration[11998-12089]"
  }, {
    "left" : "public getKey() : ",
    "right" : "public getKey() : ",
    "info" : "MethodDeclaration[12101-12175]:MethodDeclaration[12099-12173]"
  }, {
    "left" : "public getAttribute(attributeName ) : ",
    "right" : "public getAttribute(attributeName ) : ",
    "info" : "MethodDeclaration[12185-12314]:MethodDeclaration[12183-12312]"
  }, {
    "left" : "public getAttributeType(attributeName ) : ",
    "right" : "public getAttributeType(attributeName ) : ",
    "info" : "MethodDeclaration[12324-12455]:MethodDeclaration[12322-12453]"
  }, {
    "left" : "public getKeyData() : ",
    "right" : "public getKeyData() : ",
    "info" : "MethodDeclaration[12465-12544]:MethodDeclaration[12463-12542]"
  }, {
    "left" : "public getValueData() : ",
    "right" : "public getValueData() : ",
    "info" : "MethodDeclaration[12554-12635]:MethodDeclaration[12552-12633]"
  }, {
    "left" : "public getIndexKey() : ",
    "right" : "public getIndexKey() : ",
    "info" : "MethodDeclaration[12645-12725]:MethodDeclaration[12643-12723]"
  }, {
    "left" : "private createEntry(key , value ) : ",
    "right" : "private createEntry(key , value ) : ",
    "info" : "MethodDeclaration[12738-12878]:MethodDeclaration[12736-12876]"
  }, {
    "left" : "private assertPredicateTrue(p , comparable ) : void",
    "right" : "private assertPredicateTrue(p , comparable ) : void",
    "info" : "MethodDeclaration[12884-13017]:MethodDeclaration[12882-13015]"
  }, {
    "left" : "private assertPredicateFalse(p , comparable ) : void",
    "right" : "private assertPredicateFalse(p , comparable ) : void",
    "info" : "MethodDeclaration[13023-13158]:MethodDeclaration[13021-13156]"
  }, {
    "left" : "private assertTrue_withNullEntry(p ) : void",
    "right" : "private assertTrue_withNullEntry(p ) : void",
    "info" : "MethodDeclaration[13164-13273]:MethodDeclaration[13162-13271]"
  }, {
    "left" : "private assertFalse_withNullEntry(p ) : void",
    "right" : "private assertFalse_withNullEntry(p ) : void",
    "info" : "MethodDeclaration[13279-13390]:MethodDeclaration[13277-13388]"
  } ],
  "mappings" : [ {
    "left" : "com.hazelcast.query.Predicates.AndPredicate",
    "right" : "com.hazelcast.query.impl.predicates.AndPredicate",
    "info" : "QualifiedName[1422-1465]:QualifiedName[1416-1464]"
  }, {
    "left" : "com.hazelcast.query.Predicates.EqualPredicate",
    "right" : "com.hazelcast.query.impl.predicates.EqualPredicate",
    "info" : "QualifiedName[1481-1526]:QualifiedName[1474-1524]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2823-3410]:Block[2821-3408]"
  }, {
    "left" : "final HazelcastInstance instance = createHazelcastInstance();",
    "right" : "final HazelcastInstance instance = createHazelcastInstance();",
    "info" : "VariableDeclarationStatement[2833-2894]:VariableDeclarationStatement[2831-2892]"
  }, {
    "left" : "final IMap<Object, Object> map = instance.getMap(\"map\");",
    "right" : "final IMap<Object, Object> map = instance.getMap(\"map\");",
    "info" : "VariableDeclarationStatement[2903-2959]:VariableDeclarationStatement[2901-2957]"
  }, {
    "left" : "map.addIndex(\"name\", false);",
    "right" : "map.addIndex(\"name\", false);",
    "info" : "ExpressionStatement[2968-2996]:ExpressionStatement[2966-2994]"
  }, {
    "left" : "String name = randomString();",
    "right" : "String name = randomString();",
    "info" : "VariableDeclarationStatement[3005-3034]:VariableDeclarationStatement[3003-3032]"
  }, {
    "left" : "map.put(\"key\", new Value(name));",
    "right" : "map.put(\"key\", new Value(name));",
    "info" : "ExpressionStatement[3043-3075]:ExpressionStatement[3041-3073]"
  }, {
    "left" : "final ShouldExecuteOncePredicate indexAwareNotIndexedPredicate = new ShouldExecuteOncePredicate();",
    "right" : "final ShouldExecuteOncePredicate indexAwareNotIndexedPredicate = new ShouldExecuteOncePredicate();",
    "info" : "VariableDeclarationStatement[3085-3183]:VariableDeclarationStatement[3083-3181]"
  }, {
    "left" : "final EqualPredicate equalPredicate = new EqualPredicate(\"name\", name);",
    "right" : "final EqualPredicate equalPredicate = new EqualPredicate(\"name\", name);",
    "info" : "VariableDeclarationStatement[3192-3263]:VariableDeclarationStatement[3190-3261]"
  }, {
    "left" : "final AndPredicate andPredicate = new AndPredicate(indexAwareNotIndexedPredicate, equalPredicate);",
    "right" : "final AndPredicate andPredicate = new AndPredicate(indexAwareNotIndexedPredicate, equalPredicate);",
    "info" : "VariableDeclarationStatement[3272-3370]:VariableDeclarationStatement[3270-3368]"
  }, {
    "left" : "map.values(andPredicate);",
    "right" : "map.values(andPredicate);",
    "info" : "ExpressionStatement[3379-3404]:ExpressionStatement[3377-3402]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3592-3750]:Block[3590-3748]"
  }, {
    "left" : "if (!executed)",
    "right" : "if (!executed)",
    "info" : "IfStatement[3606-3698]:IfStatement[3604-3696]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3621-3698]:Block[3619-3696]"
  }, {
    "left" : "executed = true;",
    "right" : "executed = true;",
    "info" : "ExpressionStatement[3639-3655]:ExpressionStatement[3637-3653]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[3672-3684]:ReturnStatement[3670-3682]"
  }, {
    "left" : "throw new RuntimeException();",
    "right" : "throw new RuntimeException();",
    "info" : "ThrowStatement[3711-3740]:ThrowStatement[3709-3738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3845-3881]:Block[3843-3879]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[3859-3871]:ReturnStatement[3857-3869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3967-4004]:Block[3965-4002]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[3981-3994]:ReturnStatement[3979-3992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4050-4696]:Block[4048-4694]"
  }, {
    "left" : "assertPredicateTrue(equal(null, \"value\"), \"value\");",
    "right" : "assertPredicateTrue(equal(null, \"value\"), \"value\");",
    "info" : "ExpressionStatement[4060-4111]:ExpressionStatement[4058-4109]"
  }, {
    "left" : "assertPredicateFalse(equal(null, \"value1\"), \"value\");",
    "right" : "assertPredicateFalse(equal(null, \"value1\"), \"value\");",
    "info" : "ExpressionStatement[4120-4173]:ExpressionStatement[4118-4171]"
  }, {
    "left" : "assertPredicateTrue(equal(null, TRUE), true);",
    "right" : "assertPredicateTrue(equal(null, TRUE), true);",
    "info" : "ExpressionStatement[4182-4227]:ExpressionStatement[4180-4225]"
  }, {
    "left" : "assertPredicateTrue(equal(null, true), TRUE);",
    "right" : "assertPredicateTrue(equal(null, true), TRUE);",
    "info" : "ExpressionStatement[4236-4281]:ExpressionStatement[4234-4279]"
  }, {
    "left" : "assertPredicateFalse(equal(null, true), FALSE);",
    "right" : "assertPredicateFalse(equal(null, true), FALSE);",
    "info" : "ExpressionStatement[4290-4337]:ExpressionStatement[4288-4335]"
  }, {
    "left" : "assertPredicateFalse(equal(null, new BigDecimal(\"1.23E3\")), new BigDecimal(\"1.23E2\"));",
    "right" : "assertPredicateFalse(equal(null, new BigDecimal(\"1.23E3\")), new BigDecimal(\"1.23E2\"));",
    "info" : "ExpressionStatement[4346-4432]:ExpressionStatement[4344-4430]"
  }, {
    "left" : "assertPredicateTrue(equal(null, new BigDecimal(\"1.23E3\")), new BigDecimal(\"1.23E3\"));",
    "right" : "assertPredicateTrue(equal(null, new BigDecimal(\"1.23E3\")), new BigDecimal(\"1.23E3\"));",
    "info" : "ExpressionStatement[4441-4526]:ExpressionStatement[4439-4524]"
  }, {
    "left" : "assertPredicateFalse(equal(null, 15.22), 15.23);",
    "right" : "assertPredicateFalse(equal(null, 15.22), 15.23);",
    "info" : "ExpressionStatement[4535-4583]:ExpressionStatement[4533-4581]"
  }, {
    "left" : "assertPredicateTrue(equal(null, 15.22), 15.22);",
    "right" : "assertPredicateTrue(equal(null, 15.22), 15.22);",
    "info" : "ExpressionStatement[4592-4639]:ExpressionStatement[4590-4637]"
  }, {
    "left" : "assertPredicateFalse(equal(null, 16), 15);",
    "right" : "assertPredicateFalse(equal(null, 16), 15);",
    "info" : "ExpressionStatement[4648-4690]:ExpressionStatement[4646-4688]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4735-5247]:Block[4733-5245]"
  }, {
    "left" : "final Predicate and1 = and(greaterThan(null, 4), lessThan(null, 6));",
    "right" : "final Predicate and1 = and(greaterThan(null, 4), lessThan(null, 6));",
    "info" : "VariableDeclarationStatement[4745-4813]:VariableDeclarationStatement[4743-4811]"
  }, {
    "left" : "assertPredicateTrue(and1, 5);",
    "right" : "assertPredicateTrue(and1, 5);",
    "info" : "ExpressionStatement[4822-4851]:ExpressionStatement[4820-4849]"
  }, {
    "left" : "final Predicate and2 = and(greaterThan(null, 5), lessThan(null, 6));",
    "right" : "final Predicate and2 = and(greaterThan(null, 5), lessThan(null, 6));",
    "info" : "VariableDeclarationStatement[4860-4928]:VariableDeclarationStatement[4858-4926]"
  }, {
    "left" : "assertPredicateFalse(and2, 4);",
    "right" : "assertPredicateFalse(and2, 4);",
    "info" : "ExpressionStatement[4937-4967]:ExpressionStatement[4935-4965]"
  }, {
    "left" : "final Predicate and3 = and(greaterThan(null, 4), lessThan(null, 6), equal(null, 5));",
    "right" : "final Predicate and3 = and(greaterThan(null, 4), lessThan(null, 6), equal(null, 5));",
    "info" : "VariableDeclarationStatement[4976-5060]:VariableDeclarationStatement[4974-5058]"
  }, {
    "left" : "assertPredicateTrue(and3, 5);",
    "right" : "assertPredicateTrue(and3, 5);",
    "info" : "ExpressionStatement[5069-5098]:ExpressionStatement[5067-5096]"
  }, {
    "left" : "final Predicate and4 = Predicates.and(greaterThan(null, 3), lessThan(null, 6), equal(null, 4));",
    "right" : "final Predicate and4 = Predicates.and(greaterThan(null, 3), lessThan(null, 6), equal(null, 4));",
    "info" : "VariableDeclarationStatement[5107-5202]:VariableDeclarationStatement[5105-5200]"
  }, {
    "left" : "assertPredicateFalse(and4, 5);",
    "right" : "assertPredicateFalse(and4, 5);",
    "info" : "ExpressionStatement[5211-5241]:ExpressionStatement[5209-5239]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5284-5448]:Block[5282-5446]"
  }, {
    "left" : "final Predicate or1 = or(equal(null, 3), equal(null, 4), equal(null, 5));",
    "right" : "final Predicate or1 = or(equal(null, 3), equal(null, 4), equal(null, 5));",
    "info" : "VariableDeclarationStatement[5294-5367]:VariableDeclarationStatement[5292-5365]"
  }, {
    "left" : "assertPredicateTrue(or1, 4);",
    "right" : "assertPredicateTrue(or1, 4);",
    "info" : "ExpressionStatement[5376-5404]:ExpressionStatement[5374-5402]"
  }, {
    "left" : "assertPredicateFalse(or1, 6);",
    "right" : "assertPredicateFalse(or1, 6);",
    "info" : "ExpressionStatement[5413-5442]:ExpressionStatement[5411-5440]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5495-5557]:Block[5493-5555]"
  }, {
    "left" : "assertPredicateTrue(greaterEqual(null, 5), 5);",
    "right" : "assertPredicateTrue(greaterEqual(null, 5), 5);",
    "info" : "ExpressionStatement[5505-5551]:ExpressionStatement[5503-5549]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5600-5877]:Block[5598-5875]"
  }, {
    "left" : "assertPredicateTrue(lessThan(null, 7), 6);",
    "right" : "assertPredicateTrue(lessThan(null, 7), 6);",
    "info" : "ExpressionStatement[5610-5652]:ExpressionStatement[5608-5650]"
  }, {
    "left" : "assertPredicateFalse(lessThan(null, 3), 4);",
    "right" : "assertPredicateFalse(lessThan(null, 3), 4);",
    "info" : "ExpressionStatement[5661-5704]:ExpressionStatement[5659-5702]"
  }, {
    "left" : "assertPredicateFalse(lessThan(null, 4), 4);",
    "right" : "assertPredicateFalse(lessThan(null, 4), 4);",
    "info" : "ExpressionStatement[5713-5756]:ExpressionStatement[5711-5754]"
  }, {
    "left" : "assertPredicateTrue(lessThan(null, \"tc\"), \"bz\");",
    "right" : "assertPredicateTrue(lessThan(null, \"tc\"), \"bz\");",
    "info" : "ExpressionStatement[5765-5813]:ExpressionStatement[5763-5811]"
  }, {
    "left" : "assertPredicateFalse(lessThan(null, \"gx\"), \"h0\");",
    "right" : "assertPredicateFalse(lessThan(null, \"gx\"), \"h0\");",
    "info" : "ExpressionStatement[5822-5871]:ExpressionStatement[5820-5869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5923-6315]:Block[5921-6313]"
  }, {
    "left" : "assertPredicateTrue(greaterThan(null, 5), 6);",
    "right" : "assertPredicateTrue(greaterThan(null, 5), 6);",
    "info" : "ExpressionStatement[5933-5978]:ExpressionStatement[5931-5976]"
  }, {
    "left" : "assertPredicateFalse(greaterThan(null, 5), 4);",
    "right" : "assertPredicateFalse(greaterThan(null, 5), 4);",
    "info" : "ExpressionStatement[5987-6033]:ExpressionStatement[5985-6031]"
  }, {
    "left" : "assertPredicateFalse(greaterThan(null, 5), 5);",
    "right" : "assertPredicateFalse(greaterThan(null, 5), 5);",
    "info" : "ExpressionStatement[6042-6088]:ExpressionStatement[6040-6086]"
  }, {
    "left" : "assertPredicateTrue(greaterThan(null, \"aa\"), \"xa\");",
    "right" : "assertPredicateTrue(greaterThan(null, \"aa\"), \"xa\");",
    "info" : "ExpressionStatement[6097-6148]:ExpressionStatement[6095-6146]"
  }, {
    "left" : "assertPredicateFalse(greaterThan(null, \"da\"), \"cz\");",
    "right" : "assertPredicateFalse(greaterThan(null, \"da\"), \"cz\");",
    "info" : "ExpressionStatement[6157-6209]:ExpressionStatement[6155-6207]"
  }, {
    "left" : "assertPredicateTrue(greaterThan(null, new BigDecimal(\"1.23E2\")), new BigDecimal(\"1.23E3\"));",
    "right" : "assertPredicateTrue(greaterThan(null, new BigDecimal(\"1.23E2\")), new BigDecimal(\"1.23E3\"));",
    "info" : "ExpressionStatement[6218-6309]:ExpressionStatement[6216-6307]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6359-6418]:Block[6357-6416]"
  }, {
    "left" : "assertPredicateTrue(lessEqual(null, 4), 4);",
    "right" : "assertPredicateTrue(lessEqual(null, 4), 4);",
    "info" : "ExpressionStatement[6369-6412]:ExpressionStatement[6367-6410]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6480-7220]:Block[6478-7218]"
  }, {
    "left" : "assertFalse_withNullEntry(lessEqual(\"nullField\", 1));",
    "right" : "assertFalse_withNullEntry(lessEqual(\"nullField\", 1));",
    "info" : "ExpressionStatement[6490-6543]:ExpressionStatement[6488-6541]"
  }, {
    "left" : "assertFalse_withNullEntry(in(\"nullField\", 1));",
    "right" : "assertFalse_withNullEntry(in(\"nullField\", 1));",
    "info" : "ExpressionStatement[6553-6599]:ExpressionStatement[6551-6597]"
  }, {
    "left" : "assertFalse_withNullEntry(lessThan(\"nullField\", 1));",
    "right" : "assertFalse_withNullEntry(lessThan(\"nullField\", 1));",
    "info" : "ExpressionStatement[6608-6660]:ExpressionStatement[6606-6658]"
  }, {
    "left" : "assertFalse_withNullEntry(greaterEqual(\"nullField\", 1));",
    "right" : "assertFalse_withNullEntry(greaterEqual(\"nullField\", 1));",
    "info" : "ExpressionStatement[6669-6725]:ExpressionStatement[6667-6723]"
  }, {
    "left" : "assertFalse_withNullEntry(greaterThan(\"nullField\", 1));",
    "right" : "assertFalse_withNullEntry(greaterThan(\"nullField\", 1));",
    "info" : "ExpressionStatement[6734-6789]:ExpressionStatement[6732-6787]"
  }, {
    "left" : "assertFalse_withNullEntry(equal(\"nullField\", 1));",
    "right" : "assertFalse_withNullEntry(equal(\"nullField\", 1));",
    "info" : "ExpressionStatement[6798-6847]:ExpressionStatement[6796-6845]"
  }, {
    "left" : "assertFalse_withNullEntry(notEqual(\"nullField\", null));",
    "right" : "assertFalse_withNullEntry(notEqual(\"nullField\", null));",
    "info" : "ExpressionStatement[6856-6911]:ExpressionStatement[6854-6909]"
  }, {
    "left" : "assertFalse_withNullEntry(notEqual(\"nullField\", 1));",
    "right" : "assertFalse_withNullEntry(notEqual(\"nullField\", 1));",
    "info" : "ExpressionStatement[6920-6972]:ExpressionStatement[6918-6970]"
  }, {
    "left" : "assertFalse_withNullEntry(between(\"nullField\", 1, 1));",
    "right" : "assertFalse_withNullEntry(between(\"nullField\", 1, 1));",
    "info" : "ExpressionStatement[6981-7035]:ExpressionStatement[6979-7033]"
  }, {
    "left" : "assertTrue_withNullEntry(like(\"nullField\", null));",
    "right" : "assertTrue_withNullEntry(like(\"nullField\", null));",
    "info" : "ExpressionStatement[7044-7094]:ExpressionStatement[7042-7092]"
  }, {
    "left" : "assertTrue_withNullEntry(ilike(\"nullField\", null));",
    "right" : "assertTrue_withNullEntry(ilike(\"nullField\", null));",
    "info" : "ExpressionStatement[7103-7154]:ExpressionStatement[7101-7152]"
  }, {
    "left" : "assertTrue_withNullEntry(regex(\"nullField\", null));",
    "right" : "assertTrue_withNullEntry(regex(\"nullField\", null));",
    "info" : "ExpressionStatement[7163-7214]:ExpressionStatement[7161-7212]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7262-7562]:Block[7260-7560]"
  }, {
    "left" : "assertPredicateTrue(between(null, 4, 6), 5);",
    "right" : "assertPredicateTrue(between(null, 4, 6), 5);",
    "info" : "ExpressionStatement[7272-7316]:ExpressionStatement[7270-7314]"
  }, {
    "left" : "assertPredicateTrue(between(null, 5, 6), 5);",
    "right" : "assertPredicateTrue(between(null, 5, 6), 5);",
    "info" : "ExpressionStatement[7325-7369]:ExpressionStatement[7323-7367]"
  }, {
    "left" : "assertPredicateTrue(between(null, \"abc\", \"xyz\"), \"prs\");",
    "right" : "assertPredicateTrue(between(null, \"abc\", \"xyz\"), \"prs\");",
    "info" : "ExpressionStatement[7378-7434]:ExpressionStatement[7376-7432]"
  }, {
    "left" : "assertPredicateFalse(between(null, \"klmn\", \"xyz\"), \"efgh\");",
    "right" : "assertPredicateFalse(between(null, \"klmn\", \"xyz\"), \"efgh\");",
    "info" : "ExpressionStatement[7443-7502]:ExpressionStatement[7441-7500]"
  }, {
    "left" : "assertPredicateFalse(between(null, 6, 7), 5);",
    "right" : "assertPredicateFalse(between(null, 6, 7), 5);",
    "info" : "ExpressionStatement[7511-7556]:ExpressionStatement[7509-7554]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7599-7815]:Block[7597-7813]"
  }, {
    "left" : "assertPredicateTrue(in(null, 4, 7, 8, 5), 5);",
    "right" : "assertPredicateTrue(in(null, 4, 7, 8, 5), 5);",
    "info" : "ExpressionStatement[7609-7654]:ExpressionStatement[7607-7652]"
  }, {
    "left" : "assertPredicateTrue(in(null, 5, 7, 8), 5);",
    "right" : "assertPredicateTrue(in(null, 5, 7, 8), 5);",
    "info" : "ExpressionStatement[7663-7705]:ExpressionStatement[7661-7703]"
  }, {
    "left" : "assertPredicateFalse(in(null, 6, 7, 8), 5);",
    "right" : "assertPredicateFalse(in(null, 6, 7, 8), 5);",
    "info" : "ExpressionStatement[7714-7757]:ExpressionStatement[7712-7755]"
  }, {
    "left" : "assertPredicateFalse(in(null, 6, 7, 8), 9);",
    "right" : "assertPredicateFalse(in(null, 6, 7, 8), 9);",
    "info" : "ExpressionStatement[7766-7809]:ExpressionStatement[7764-7807]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7854-9109]:Block[7852-9107]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"J%\"), \"Java\");",
    "right" : "assertPredicateTrue(like(null, \"J%\"), \"Java\");",
    "info" : "ExpressionStatement[7864-7910]:ExpressionStatement[7862-7908]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"Ja%\"), \"Java\");",
    "right" : "assertPredicateTrue(like(null, \"Ja%\"), \"Java\");",
    "info" : "ExpressionStatement[7919-7966]:ExpressionStatement[7917-7964]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"J_v_\"), \"Java\");",
    "right" : "assertPredicateTrue(like(null, \"J_v_\"), \"Java\");",
    "info" : "ExpressionStatement[7975-8023]:ExpressionStatement[7973-8021]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"_av_\"), \"Java\");",
    "right" : "assertPredicateTrue(like(null, \"_av_\"), \"Java\");",
    "info" : "ExpressionStatement[8032-8080]:ExpressionStatement[8030-8078]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"_a__\"), \"Java\");",
    "right" : "assertPredicateTrue(like(null, \"_a__\"), \"Java\");",
    "info" : "ExpressionStatement[8089-8137]:ExpressionStatement[8087-8135]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"J%v_\"), \"Java\");",
    "right" : "assertPredicateTrue(like(null, \"J%v_\"), \"Java\");",
    "info" : "ExpressionStatement[8146-8194]:ExpressionStatement[8144-8192]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"J%_\"), \"Java\");",
    "right" : "assertPredicateTrue(like(null, \"J%_\"), \"Java\");",
    "info" : "ExpressionStatement[8203-8250]:ExpressionStatement[8201-8248]"
  }, {
    "left" : "assertPredicateFalse(like(null, \"java\"), \"Java\");",
    "right" : "assertPredicateFalse(like(null, \"java\"), \"Java\");",
    "info" : "ExpressionStatement[8259-8308]:ExpressionStatement[8257-8306]"
  }, {
    "left" : "assertPredicateFalse(like(null, \"j%\"), \"Java\");",
    "right" : "assertPredicateFalse(like(null, \"j%\"), \"Java\");",
    "info" : "ExpressionStatement[8317-8364]:ExpressionStatement[8315-8362]"
  }, {
    "left" : "assertPredicateFalse(like(null, \"J_a\"), \"Java\");",
    "right" : "assertPredicateFalse(like(null, \"J_a\"), \"Java\");",
    "info" : "ExpressionStatement[8373-8421]:ExpressionStatement[8371-8419]"
  }, {
    "left" : "assertPredicateFalse(like(null, \"J_ava\"), \"Java\");",
    "right" : "assertPredicateFalse(like(null, \"J_ava\"), \"Java\");",
    "info" : "ExpressionStatement[8430-8480]:ExpressionStatement[8428-8478]"
  }, {
    "left" : "assertPredicateFalse(like(null, \"J_a_a\"), \"Java\");",
    "right" : "assertPredicateFalse(like(null, \"J_a_a\"), \"Java\");",
    "info" : "ExpressionStatement[8489-8539]:ExpressionStatement[8487-8537]"
  }, {
    "left" : "assertPredicateFalse(like(null, \"J_av__\"), \"Java\");",
    "right" : "assertPredicateFalse(like(null, \"J_av__\"), \"Java\");",
    "info" : "ExpressionStatement[8548-8599]:ExpressionStatement[8546-8597]"
  }, {
    "left" : "assertPredicateFalse(like(null, \"J_Va\"), \"Java\");",
    "right" : "assertPredicateFalse(like(null, \"J_Va\"), \"Java\");",
    "info" : "ExpressionStatement[8608-8657]:ExpressionStatement[8606-8655]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"Java World\"), \"Java World\");",
    "right" : "assertPredicateTrue(like(null, \"Java World\"), \"Java World\");",
    "info" : "ExpressionStatement[8666-8726]:ExpressionStatement[8664-8724]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"Java%ld\"), \"Java World\");",
    "right" : "assertPredicateTrue(like(null, \"Java%ld\"), \"Java World\");",
    "info" : "ExpressionStatement[8735-8792]:ExpressionStatement[8733-8790]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"%World\"), \"Java World\");",
    "right" : "assertPredicateTrue(like(null, \"%World\"), \"Java World\");",
    "info" : "ExpressionStatement[8801-8857]:ExpressionStatement[8799-8855]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"Java_World\"), \"Java World\");",
    "right" : "assertPredicateTrue(like(null, \"Java_World\"), \"Java World\");",
    "info" : "ExpressionStatement[8866-8926]:ExpressionStatement[8864-8924]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"J.-*.*\\\\%\"), \"J.-*.*%\");",
    "right" : "assertPredicateTrue(like(null, \"J.-*.*\\\\%\"), \"J.-*.*%\");",
    "info" : "ExpressionStatement[8936-8992]:ExpressionStatement[8934-8990]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"J\\\\_\"), \"J_\");",
    "right" : "assertPredicateTrue(like(null, \"J\\\\_\"), \"J_\");",
    "info" : "ExpressionStatement[9001-9047]:ExpressionStatement[8999-9045]"
  }, {
    "left" : "assertPredicateTrue(like(null, \"J%\"), \"Java\");",
    "right" : "assertPredicateTrue(like(null, \"J%\"), \"Java\");",
    "info" : "ExpressionStatement[9056-9102]:ExpressionStatement[9054-9100]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9149-9499]:Block[9147-9497]"
  }, {
    "left" : "assertPredicateFalse(like(null, \"JavaWorld\"), \"Java World\");",
    "right" : "assertPredicateFalse(like(null, \"JavaWorld\"), \"Java World\");",
    "info" : "ExpressionStatement[9159-9219]:ExpressionStatement[9157-9217]"
  }, {
    "left" : "assertPredicateTrue(ilike(null, \"Java_World\"), \"java World\");",
    "right" : "assertPredicateTrue(ilike(null, \"Java_World\"), \"java World\");",
    "info" : "ExpressionStatement[9228-9289]:ExpressionStatement[9226-9287]"
  }, {
    "left" : "assertPredicateTrue(ilike(null, \"java%ld\"), \"Java World\");",
    "right" : "assertPredicateTrue(ilike(null, \"java%ld\"), \"Java World\");",
    "info" : "ExpressionStatement[9298-9356]:ExpressionStatement[9296-9354]"
  }, {
    "left" : "assertPredicateTrue(ilike(null, \"%world\"), \"Java World\");",
    "right" : "assertPredicateTrue(ilike(null, \"%world\"), \"Java World\");",
    "info" : "ExpressionStatement[9365-9422]:ExpressionStatement[9363-9420]"
  }, {
    "left" : "assertPredicateFalse(ilike(null, \"Java_World\"), \"gava World\");",
    "right" : "assertPredicateFalse(ilike(null, \"Java_World\"), \"gava World\");",
    "info" : "ExpressionStatement[9431-9493]:ExpressionStatement[9429-9491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9546-9769]:Block[9544-9767]"
  }, {
    "left" : "assertTrue(instanceOf(Long.class).apply(new DummyEntry(1L)));",
    "right" : "assertTrue(instanceOf(Long.class).apply(new DummyEntry(1L)));",
    "info" : "ExpressionStatement[9556-9617]:ExpressionStatement[9554-9615]"
  }, {
    "left" : "assertFalse(instanceOf(Long.class).apply(new DummyEntry(\"Java\")));",
    "right" : "assertFalse(instanceOf(Long.class).apply(new DummyEntry(\"Java\")));",
    "info" : "ExpressionStatement[9626-9692]:ExpressionStatement[9624-9690]"
  }, {
    "left" : "assertTrue(instanceOf(Number.class).apply(new DummyEntry(4)));",
    "right" : "assertTrue(instanceOf(Number.class).apply(new DummyEntry(4)));",
    "info" : "ExpressionStatement[9701-9763]:ExpressionStatement[9699-9761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9815-10259]:Block[9813-10257]"
  }, {
    "left" : "Object value = new Employee(12, \"abc-123-xvz\", 34, true, 10D);",
    "right" : "Object value = new Employee(12, \"abc-123-xvz\", 34, true, 10D);",
    "info" : "VariableDeclarationStatement[9825-9887]:VariableDeclarationStatement[9823-9885]"
  }, {
    "left" : "EntryObject e = new PredicateBuilder().getEntryObject();",
    "right" : "EntryObject e = new PredicateBuilder().getEntryObject();",
    "info" : "VariableDeclarationStatement[9896-9952]:VariableDeclarationStatement[9894-9950]"
  }, {
    "left" : "EntryObject e2 = e.get(\"age\");",
    "right" : "EntryObject e2 = e.get(\"age\");",
    "info" : "VariableDeclarationStatement[9961-9991]:VariableDeclarationStatement[9959-9989]"
  }, {
    "left" : "Predicate predicate = e2.greaterEqual(29).and(e2.lessEqual(36));",
    "right" : "Predicate predicate = e2.greaterEqual(29).and(e2.lessEqual(36));",
    "info" : "VariableDeclarationStatement[10000-10064]:VariableDeclarationStatement[9998-10062]"
  }, {
    "left" : "assertTrue(predicate.apply(createEntry(\"1\", value)));",
    "right" : "assertTrue(predicate.apply(createEntry(\"1\", value)));",
    "info" : "ExpressionStatement[10073-10126]:ExpressionStatement[10071-10124]"
  }, {
    "left" : "e = new PredicateBuilder().getEntryObject();",
    "right" : "e = new PredicateBuilder().getEntryObject();",
    "info" : "ExpressionStatement[10135-10179]:ExpressionStatement[10133-10177]"
  }, {
    "left" : "assertTrue(e.get(\"id\").equal(12).apply(createEntry(\"1\", value)));",
    "right" : "assertTrue(e.get(\"id\").equal(12).apply(createEntry(\"1\", value)));",
    "info" : "ExpressionStatement[10188-10253]:ExpressionStatement[10186-10251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10344-10395]:Block[10342-10393]"
  }, {
    "left" : "Predicates.between(\"\", null, null);",
    "right" : "Predicates.between(\"\", null, null);",
    "info" : "ExpressionStatement[10354-10389]:ExpressionStatement[10352-10387]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10481-10527]:Block[10479-10525]"
  }, {
    "left" : "Predicates.lessThan(\"\", null);",
    "right" : "Predicates.lessThan(\"\", null);",
    "info" : "ExpressionStatement[10491-10521]:ExpressionStatement[10489-10519]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10614-10661]:Block[10612-10659]"
  }, {
    "left" : "Predicates.lessEqual(\"\", null);",
    "right" : "Predicates.lessEqual(\"\", null);",
    "info" : "ExpressionStatement[10624-10655]:ExpressionStatement[10622-10653]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10750-10799]:Block[10748-10797]"
  }, {
    "left" : "Predicates.greaterThan(\"\", null);",
    "right" : "Predicates.greaterThan(\"\", null);",
    "info" : "ExpressionStatement[10760-10793]:ExpressionStatement[10758-10791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10889-10939]:Block[10887-10937]"
  }, {
    "left" : "Predicates.greaterEqual(\"\", null);",
    "right" : "Predicates.greaterEqual(\"\", null);",
    "info" : "ExpressionStatement[10899-10933]:ExpressionStatement[10897-10931]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11032-11072]:Block[11030-11070]"
  }, {
    "left" : "Predicates.in(\"\", null);",
    "right" : "Predicates.in(\"\", null);",
    "info" : "ExpressionStatement[11042-11066]:ExpressionStatement[11040-11064]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11166-11231]:Block[11164-11229]"
  }, {
    "left" : "super(null, toData(\"1\"), \"1\", attribute);",
    "right" : "super(null, toData(\"1\"), \"1\", attribute);",
    "info" : "SuperConstructorInvocation[11180-11221]:SuperConstructorInvocation[11178-11219]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11334-11389]:Block[11332-11387]"
  }, {
    "left" : "return (Comparable) getValue();",
    "right" : "return (Comparable) getValue();",
    "info" : "ReturnStatement[11348-11379]:ReturnStatement[11346-11377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11477-11565]:Block[11475-11563]"
  }, {
    "left" : "return ReflectionHelper.getAttributeType(getValue().getClass());",
    "right" : "return ReflectionHelper.getAttributeType(getValue().getClass());",
    "info" : "ReturnStatement[11491-11555]:ReturnStatement[11489-11553]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11704-11715]:Block[11702-11713]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11755-11796]:Block[11753-11794]"
  }, {
    "left" : "return nullField;",
    "right" : "return nullField;",
    "info" : "ReturnStatement[11769-11786]:ReturnStatement[11767-11784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11850-11901]:Block[11848-11899]"
  }, {
    "left" : "this.nullField = nullField;",
    "right" : "this.nullField = nullField;",
    "info" : "ExpressionStatement[11864-11891]:ExpressionStatement[11862-11889]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11954-11990]:Block[11952-11988]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[11968-11980]:ReturnStatement[11966-11978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12055-12091]:Block[12053-12089]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[12069-12081]:ReturnStatement[12067-12079]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12142-12175]:Block[12140-12173]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[12156-12165]:ReturnStatement[12154-12163]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12278-12314]:Block[12276-12312]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[12292-12304]:ReturnStatement[12290-12302]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12402-12455]:Block[12400-12453]"
  }, {
    "left" : "return AttributeType.INTEGER;",
    "right" : "return AttributeType.INTEGER;",
    "info" : "ReturnStatement[12416-12445]:ReturnStatement[12414-12443]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12508-12544]:Block[12506-12542]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[12522-12534]:ReturnStatement[12520-12532]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12599-12635]:Block[12597-12633]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[12613-12625]:ReturnStatement[12611-12623]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12689-12725]:Block[12687-12723]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[12703-12715]:ReturnStatement[12701-12713]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12809-12878]:Block[12807-12876]"
  }, {
    "left" : "return new QueryEntry(null, toData(key), key, value);",
    "right" : "return new QueryEntry(null, toData(key), key, value);",
    "info" : "ReturnStatement[12819-12872]:ReturnStatement[12817-12870]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12953-13017]:Block[12951-13015]"
  }, {
    "left" : "assertTrue(p.apply(new DummyEntry(comparable)));",
    "right" : "assertTrue(p.apply(new DummyEntry(comparable)));",
    "info" : "ExpressionStatement[12963-13011]:ExpressionStatement[12961-13009]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13093-13158]:Block[13091-13156]"
  }, {
    "left" : "assertFalse(p.apply(new DummyEntry(comparable)));",
    "right" : "assertFalse(p.apply(new DummyEntry(comparable)));",
    "info" : "ExpressionStatement[13103-13152]:ExpressionStatement[13101-13150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13215-13273]:Block[13213-13271]"
  }, {
    "left" : "assertTrue(p.apply(new NullDummyEntry()));",
    "right" : "assertTrue(p.apply(new NullDummyEntry()));",
    "info" : "ExpressionStatement[13225-13267]:ExpressionStatement[13223-13265]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13331-13390]:Block[13329-13388]"
  }, {
    "left" : "assertFalse(p.apply(new NullDummyEntry()));",
    "right" : "assertFalse(p.apply(new NullDummyEntry()));",
    "info" : "ExpressionStatement[13341-13384]:ExpressionStatement[13339-13382]"
  } ]
}