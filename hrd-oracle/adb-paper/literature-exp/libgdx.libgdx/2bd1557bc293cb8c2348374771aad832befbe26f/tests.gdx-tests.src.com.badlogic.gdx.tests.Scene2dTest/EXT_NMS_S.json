{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Scene2dTest",
      "right" : "Scene2dTest",
      "info" : "TypeDeclaration[2160-7662]:TypeDeclaration[2160-7701]"
    }, {
      "left" : "Stage stage;",
      "right" : "Stage stage;",
      "info" : "FieldDeclaration[2204-2216]:FieldDeclaration[2204-2216]"
    }, {
      "left" : "private FloatAction meow = new FloatAction(10, 5);",
      "right" : "private FloatAction meow = new FloatAction(10, 5);",
      "info" : "FieldDeclaration[2218-2268]:FieldDeclaration[2218-2268]"
    }, {
      "left" : "private TiledDrawable patch;",
      "right" : "private TiledDrawable patch;",
      "info" : "FieldDeclaration[2270-2298]:FieldDeclaration[2270-2298]"
    }, {
      "left" : "public void create ()",
      "right" : "public void create ()",
      "info" : "MethodDeclaration[2301-7230]:MethodDeclaration[2301-7269]"
    }, {
      "left" : "public void draw (Batch batch, float parentAlpha)",
      "right" : "public void draw (Batch batch, float parentAlpha)",
      "info" : "MethodDeclaration[2510-2795]:MethodDeclaration[2510-2795]"
    }, {
      "left" : "public boolean touchDown (InputEvent event, float x, float y, int pointer, int button)",
      "right" : "public boolean touchDown (InputEvent event, float x, float y, int pointer, int button)",
      "info" : "MethodDeclaration[2935-3077]:MethodDeclaration[2935-3077]"
    }, {
      "left" : "public void touchUp (InputEvent event, float x, float y, int pointer, int button)",
      "right" : "public void touchUp (InputEvent event, float x, float y, int pointer, int button)",
      "info" : "MethodDeclaration[3082-3221]:MethodDeclaration[3082-3221]"
    }, {
      "left" : "public boolean longPress (Actor actor, float x, float y)",
      "right" : "public boolean longPress (Actor actor, float x, float y)",
      "info" : "MethodDeclaration[4277-4411]:MethodDeclaration[4277-4411]"
    }, {
      "left" : "public void fling (InputEvent event, float velocityX, float velocityY, int button)",
      "right" : "public void fling (InputEvent event, float velocityX, float velocityY, int button)",
      "info" : "MethodDeclaration[4416-4570]:MethodDeclaration[4416-4570]"
    }, {
      "left" : "public void zoom (InputEvent event, float initialDistance, float distance)",
      "right" : "public void zoom (InputEvent event, float initialDistance, float distance)",
      "info" : "MethodDeclaration[4575-4725]:MethodDeclaration[4575-4725]"
    }, {
      "left" : "public void pan (InputEvent event, float x, float y, float deltaX, float deltaY)",
      "right" : "public void pan (InputEvent event, float x, float y, float deltaX, float deltaY)",
      "info" : "MethodDeclaration[4730-4973]:MethodDeclaration[4730-4973]"
    }, {
      "left" : "public void run ()",
      "right" : "public void run ()",
      "info" : "MethodDeclaration[5593-5642]:MethodDeclaration[5593-5642]"
    }, {
      "left" : "public void render ()",
      "right" : "public void render ()",
      "info" : "MethodDeclaration[7233-7510]:MethodDeclaration[7272-7549]"
    }, {
      "left" : "public void resize (int width, int height)",
      "right" : "public void resize (int width, int height)",
      "info" : "MethodDeclaration[7513-7611]:MethodDeclaration[7552-7650]"
    }, {
      "left" : "public void dispose ()",
      "right" : "public void dispose ()",
      "info" : "MethodDeclaration[7614-7660]:MethodDeclaration[7653-7699]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2160-2166]:Modifier[2160-2166]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2167-2172]:TYPE_DECLARATION_KIND[2167-2172]"
    }, {
      "left" : "Scene2dTest",
      "right" : "Scene2dTest",
      "info" : "SimpleName[2173-2184]:SimpleName[2173-2184]"
    }, {
      "left" : "GdxTest",
      "right" : "GdxTest",
      "info" : "SimpleType[2193-2200]:SimpleType[2193-2200]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2301-2307]:Modifier[2301-2307]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2308-2312]:PrimitiveType[2308-2312]"
    }, {
      "left" : "create",
      "right" : "create",
      "info" : "SimpleName[2313-2319]:SimpleName[2313-2319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2323-7230]:Block[2323-7269]"
    }, {
      "left" : "stage = new Stage();",
      "right" : "stage = new Stage();",
      "info" : "ExpressionStatement[2327-2347]:ExpressionStatement[2327-2347]"
    }, {
      "left" : "Gdx.input.setInputProcessor(stage);",
      "right" : "Gdx.input.setInputProcessor(stage);",
      "info" : "ExpressionStatement[2350-2385]:ExpressionStatement[2350-2385]"
    }, {
      "left" : "final TextureRegion region = new TextureRegion(new Texture(\"data/badlogic.jpg\"));",
      "right" : "final TextureRegion region = new TextureRegion(new Texture(\"data/badlogic.jpg\"));",
      "info" : "VariableDeclarationStatement[2389-2470]:VariableDeclarationStatement[2389-2470]"
    }, {
      "left" : "final Actor actor = new Actor() {\n\t\t\tpublic void draw (Batch batch, float parentAlpha) {\n\t\t\t\tColor color = getColor();\n\t\t\t\tbatch.setColor(color.r, color.g, color.b, parentAlpha);\n\t\t\t\tbatch.draw(region, getX(), getY(), getOriginX(), getOriginY(), getWidth(), getHeight(), getScaleX(), getScaleY(),\n\t\t\t\t\tgetRotation());\n\t\t\t}\n\t\t};",
      "right" : "final Actor actor = new Actor() {\n\t\t\tpublic void draw (Batch batch, float parentAlpha) {\n\t\t\t\tColor color = getColor();\n\t\t\t\tbatch.setColor(color.r, color.g, color.b, parentAlpha);\n\t\t\t\tbatch.draw(region, getX(), getY(), getOriginX(), getOriginY(), getWidth(), getHeight(), getScaleX(), getScaleY(),\n\t\t\t\t\tgetRotation());\n\t\t\t}\n\t\t};",
      "info" : "VariableDeclarationStatement[2473-2800]:VariableDeclarationStatement[2473-2800]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2510-2516]:Modifier[2510-2516]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2517-2521]:PrimitiveType[2517-2521]"
    }, {
      "left" : "draw",
      "right" : "draw",
      "info" : "SimpleName[2522-2526]:SimpleName[2522-2526]"
    }, {
      "left" : "Batch batch",
      "right" : "Batch batch",
      "info" : "SingleVariableDeclaration[2528-2539]:SingleVariableDeclaration[2528-2539]"
    }, {
      "left" : "float parentAlpha",
      "right" : "float parentAlpha",
      "info" : "SingleVariableDeclaration[2541-2558]:SingleVariableDeclaration[2541-2558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2560-2795]:Block[2560-2795]"
    }, {
      "left" : "Color color = getColor();",
      "right" : "Color color = getColor();",
      "info" : "VariableDeclarationStatement[2566-2591]:VariableDeclarationStatement[2566-2591]"
    }, {
      "left" : "batch.setColor(color.r, color.g, color.b, parentAlpha);",
      "right" : "batch.setColor(color.r, color.g, color.b, parentAlpha);",
      "info" : "ExpressionStatement[2596-2651]:ExpressionStatement[2596-2651]"
    }, {
      "left" : "batch.draw(region, getX(), getY(), getOriginX(), getOriginY(), getWidth(), getHeight(), getScaleX(), getScaleY(),\n\t\t\t\t\tgetRotation());",
      "right" : "batch.draw(region, getX(), getY(), getOriginX(), getOriginY(), getWidth(), getHeight(), getScaleX(), getScaleY(),\n\t\t\t\t\tgetRotation());",
      "info" : "ExpressionStatement[2656-2790]:ExpressionStatement[2656-2790]"
    }, {
      "left" : "actor.setBounds(15, 15, 100, 100);",
      "right" : "actor.setBounds(15, 15, 100, 100);",
      "info" : "ExpressionStatement[2803-2837]:ExpressionStatement[2803-2837]"
    }, {
      "left" : "actor.setOrigin(50, 50);",
      "right" : "actor.setOrigin(50, 50);",
      "info" : "ExpressionStatement[2840-2864]:ExpressionStatement[2840-2864]"
    }, {
      "left" : "stage.addActor(actor);",
      "right" : "stage.addActor(actor);",
      "info" : "ExpressionStatement[2867-2889]:ExpressionStatement[2867-2889]"
    }, {
      "left" : "actor.addListener(new InputListener() {\n\t\t\tpublic boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {\n\t\t\t\tSystem.out.println(\"down\");\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tpublic void touchUp (InputEvent event, float x, float y, int pointer, int button) {\n\t\t\t\tSystem.out.println(\"up \" + event.getTarget());\n\t\t\t}\n\t\t});",
      "right" : "actor.addListener(new InputListener() {\n\t\t\tpublic boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {\n\t\t\t\tSystem.out.println(\"down\");\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tpublic void touchUp (InputEvent event, float x, float y, int pointer, int button) {\n\t\t\t\tSystem.out.println(\"up \" + event.getTarget());\n\t\t\t}\n\t\t});",
      "info" : "ExpressionStatement[2892-3227]:ExpressionStatement[2892-3227]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2935-2941]:Modifier[2935-2941]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2942-2949]:PrimitiveType[2942-2949]"
    }, {
      "left" : "touchDown",
      "right" : "touchDown",
      "info" : "SimpleName[2950-2959]:SimpleName[2950-2959]"
    }, {
      "left" : "InputEvent event",
      "right" : "InputEvent event",
      "info" : "SingleVariableDeclaration[2961-2977]:SingleVariableDeclaration[2961-2977]"
    }, {
      "left" : "float x",
      "right" : "float x",
      "info" : "SingleVariableDeclaration[2979-2986]:SingleVariableDeclaration[2979-2986]"
    }, {
      "left" : "float y",
      "right" : "float y",
      "info" : "SingleVariableDeclaration[2988-2995]:SingleVariableDeclaration[2988-2995]"
    }, {
      "left" : "int pointer",
      "right" : "int pointer",
      "info" : "SingleVariableDeclaration[2997-3008]:SingleVariableDeclaration[2997-3008]"
    }, {
      "left" : "int button",
      "right" : "int button",
      "info" : "SingleVariableDeclaration[3010-3020]:SingleVariableDeclaration[3010-3020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3022-3077]:Block[3022-3077]"
    }, {
      "left" : "System.out.println(\"down\");",
      "right" : "System.out.println(\"down\");",
      "info" : "ExpressionStatement[3028-3055]:ExpressionStatement[3028-3055]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3060-3072]:ReturnStatement[3060-3072]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3082-3088]:Modifier[3082-3088]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3089-3093]:PrimitiveType[3089-3093]"
    }, {
      "left" : "touchUp",
      "right" : "touchUp",
      "info" : "SimpleName[3094-3101]:SimpleName[3094-3101]"
    }, {
      "left" : "InputEvent event",
      "right" : "InputEvent event",
      "info" : "SingleVariableDeclaration[3103-3119]:SingleVariableDeclaration[3103-3119]"
    }, {
      "left" : "float x",
      "right" : "float x",
      "info" : "SingleVariableDeclaration[3121-3128]:SingleVariableDeclaration[3121-3128]"
    }, {
      "left" : "float y",
      "right" : "float y",
      "info" : "SingleVariableDeclaration[3130-3137]:SingleVariableDeclaration[3130-3137]"
    }, {
      "left" : "int pointer",
      "right" : "int pointer",
      "info" : "SingleVariableDeclaration[3139-3150]:SingleVariableDeclaration[3139-3150]"
    }, {
      "left" : "int button",
      "right" : "int button",
      "info" : "SingleVariableDeclaration[3152-3162]:SingleVariableDeclaration[3152-3162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3164-3221]:Block[3164-3221]"
    }, {
      "left" : "System.out.println(\"up \" + event.getTarget());",
      "right" : "System.out.println(\"up \" + event.getTarget());",
      "info" : "ExpressionStatement[3170-3216]:ExpressionStatement[3170-3216]"
    }, {
      "left" : "Skin skin = new Skin(Gdx.files.internal(\"data/uiskin.json\"));",
      "right" : "Skin skin = new Skin(Gdx.files.internal(\"data/uiskin.json\"));",
      "info" : "VariableDeclarationStatement[3231-3292]:VariableDeclarationStatement[3231-3292]"
    }, {
      "left" : "VerticalGroup g = new VerticalGroup().space(5).reverse().pad(5).fill();",
      "right" : "VerticalGroup g = new VerticalGroup().space(5).reverse().pad(5).fill();",
      "info" : "VariableDeclarationStatement[3296-3367]:VariableDeclarationStatement[3296-3367]"
    }, {
      "left" : "for (int i = 0; i < 10; i++)\n\t\t\tg.addActor(new TextButton(\"button \" + i, skin));",
      "right" : "for (int i = 0; i < 10; i++)\n\t\t\tg.addActor(new TextButton(\"button \" + i, skin));",
      "info" : "ForStatement[3370-3450]:ForStatement[3370-3450]"
    }, {
      "left" : "g.addActor(new TextButton(\"button \" + i, skin));",
      "right" : "g.addActor(new TextButton(\"button \" + i, skin));",
      "info" : "ExpressionStatement[3402-3450]:ExpressionStatement[3402-3450]"
    }, {
      "left" : "g.addActor(new TextButton(\"longer button\", skin));",
      "right" : "g.addActor(new TextButton(\"longer button\", skin));",
      "info" : "ExpressionStatement[3453-3503]:ExpressionStatement[3453-3503]"
    }, {
      "left" : "Table table = new Table().debug();",
      "right" : "Table table = new Table().debug();",
      "info" : "VariableDeclarationStatement[3506-3540]:VariableDeclarationStatement[3506-3540]"
    }, {
      "left" : "table.add(g);",
      "right" : "table.add(g);",
      "info" : "ExpressionStatement[3543-3556]:ExpressionStatement[3543-3556]"
    }, {
      "left" : "table.pack();",
      "right" : "table.pack();",
      "info" : "ExpressionStatement[3559-3572]:ExpressionStatement[3559-3572]"
    }, {
      "left" : "table.setPosition(5, 100);",
      "right" : "table.setPosition(5, 100);",
      "info" : "ExpressionStatement[3575-3601]:ExpressionStatement[3575-3601]"
    }, {
      "left" : "stage.addActor(table);",
      "right" : "stage.addActor(table);",
      "info" : "ExpressionStatement[3604-3626]:ExpressionStatement[3604-3626]"
    }, {
      "left" : "HorizontalGroup h = new HorizontalGroup().space(5).reverse().pad(5).fill();",
      "right" : "HorizontalGroup h = new HorizontalGroup().space(5).reverse().pad(5).fill();",
      "info" : "VariableDeclarationStatement[3630-3705]:VariableDeclarationStatement[3630-3705]"
    }, {
      "left" : "for (int i = 0; i < 5; i++)\n\t\t\th.addActor(new TextButton(\"button \" + i, skin));",
      "right" : "for (int i = 0; i < 5; i++)\n\t\t\th.addActor(new TextButton(\"button \" + i, skin));",
      "info" : "ForStatement[3708-3787]:ForStatement[3708-3787]"
    }, {
      "left" : "h.addActor(new TextButton(\"button \" + i, skin));",
      "right" : "h.addActor(new TextButton(\"button \" + i, skin));",
      "info" : "ExpressionStatement[3739-3787]:ExpressionStatement[3739-3787]"
    }, {
      "left" : "h.addActor(new TextButton(\"some taller\\nbutton\", skin));",
      "right" : "h.addActor(new TextButton(\"some taller\\nbutton\", skin));",
      "info" : "ExpressionStatement[3790-3846]:ExpressionStatement[3790-3846]"
    }, {
      "left" : "table = new Table().debug();",
      "right" : "table = new Table().debug();",
      "info" : "ExpressionStatement[3849-3877]:ExpressionStatement[3849-3877]"
    }, {
      "left" : "table.add(h);",
      "right" : "table.add(h);",
      "info" : "ExpressionStatement[3880-3893]:ExpressionStatement[3880-3893]"
    }, {
      "left" : "table.pack();",
      "right" : "table.pack();",
      "info" : "ExpressionStatement[3896-3909]:ExpressionStatement[3896-3909]"
    }, {
      "left" : "table.setPosition(130, 100);",
      "right" : "table.setPosition(130, 100);",
      "info" : "ExpressionStatement[3912-3940]:ExpressionStatement[3912-3940]"
    }, {
      "left" : "stage.addActor(table);",
      "right" : "stage.addActor(table);",
      "info" : "ExpressionStatement[3943-3965]:ExpressionStatement[3943-3965]"
    }, {
      "left" : "table.toFront();",
      "right" : "table.toFront();",
      "info" : "ExpressionStatement[3968-3984]:ExpressionStatement[3968-3984]"
    }, {
      "left" : "final TextButton button = new TextButton(\"Fancy Background\", skin);",
      "right" : "final TextButton button = new TextButton(\"Fancy Background\", skin);",
      "info" : "VariableDeclarationStatement[3988-4055]:VariableDeclarationStatement[3988-4055]"
    }, {
      "left" : "button.addListener(new ActorGestureListener() {\n\t\t\tpublic boolean longPress (Actor actor, float x, float y) {\n\t\t\t\tSystem.out.println(\"long press \" + x + \", \" + y);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tpublic void fling (InputEvent event, float velocityX, float velocityY, int button) {\n\t\t\t\tSystem.out.println(\"fling \" + velocityX + \", \" + velocityY);\n\t\t\t}\n\n\t\t\tpublic void zoom (InputEvent event, float initialDistance, float distance) {\n\t\t\t\tSystem.out.println(\"zoom \" + initialDistance + \", \" + distance);\n\t\t\t}\n\n\t\t\tpublic void pan (InputEvent event, float x, float y, float deltaX, float deltaY) {\n\t\t\t\tevent.getListenerActor().moveBy(deltaX, deltaY);\n\t\t\t\tif (deltaX < 0) System.out.println(\"panning \" + deltaX + \", \" + deltaY + \" \" + event.getTarget());\n\t\t\t}\n\t\t});",
      "right" : "button.addListener(new ActorGestureListener() {\n\t\t\tpublic boolean longPress (Actor actor, float x, float y) {\n\t\t\t\tSystem.out.println(\"long press \" + x + \", \" + y);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tpublic void fling (InputEvent event, float velocityX, float velocityY, int button) {\n\t\t\t\tSystem.out.println(\"fling \" + velocityX + \", \" + velocityY);\n\t\t\t}\n\n\t\t\tpublic void zoom (InputEvent event, float initialDistance, float distance) {\n\t\t\t\tSystem.out.println(\"zoom \" + initialDistance + \", \" + distance);\n\t\t\t}\n\n\t\t\tpublic void pan (InputEvent event, float x, float y, float deltaX, float deltaY) {\n\t\t\t\tevent.getListenerActor().moveBy(deltaX, deltaY);\n\t\t\t\tif (deltaX < 0) System.out.println(\"panning \" + deltaX + \", \" + deltaY + \" \" + event.getTarget());\n\t\t\t}\n\t\t});",
      "info" : "ExpressionStatement[4226-4979]:ExpressionStatement[4226-4979]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4277-4283]:Modifier[4277-4283]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4284-4291]:PrimitiveType[4284-4291]"
    }, {
      "left" : "longPress",
      "right" : "longPress",
      "info" : "SimpleName[4292-4301]:SimpleName[4292-4301]"
    }, {
      "left" : "Actor actor",
      "right" : "Actor actor",
      "info" : "SingleVariableDeclaration[4303-4314]:SingleVariableDeclaration[4303-4314]"
    }, {
      "left" : "float x",
      "right" : "float x",
      "info" : "SingleVariableDeclaration[4316-4323]:SingleVariableDeclaration[4316-4323]"
    }, {
      "left" : "float y",
      "right" : "float y",
      "info" : "SingleVariableDeclaration[4325-4332]:SingleVariableDeclaration[4325-4332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4334-4411]:Block[4334-4411]"
    }, {
      "left" : "System.out.println(\"long press \" + x + \", \" + y);",
      "right" : "System.out.println(\"long press \" + x + \", \" + y);",
      "info" : "ExpressionStatement[4340-4389]:ExpressionStatement[4340-4389]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[4394-4406]:ReturnStatement[4394-4406]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4416-4422]:Modifier[4416-4422]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4423-4427]:PrimitiveType[4423-4427]"
    }, {
      "left" : "fling",
      "right" : "fling",
      "info" : "SimpleName[4428-4433]:SimpleName[4428-4433]"
    }, {
      "left" : "InputEvent event",
      "right" : "InputEvent event",
      "info" : "SingleVariableDeclaration[4435-4451]:SingleVariableDeclaration[4435-4451]"
    }, {
      "left" : "float velocityX",
      "right" : "float velocityX",
      "info" : "SingleVariableDeclaration[4453-4468]:SingleVariableDeclaration[4453-4468]"
    }, {
      "left" : "float velocityY",
      "right" : "float velocityY",
      "info" : "SingleVariableDeclaration[4470-4485]:SingleVariableDeclaration[4470-4485]"
    }, {
      "left" : "int button",
      "right" : "int button",
      "info" : "SingleVariableDeclaration[4487-4497]:SingleVariableDeclaration[4487-4497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4499-4570]:Block[4499-4570]"
    }, {
      "left" : "System.out.println(\"fling \" + velocityX + \", \" + velocityY);",
      "right" : "System.out.println(\"fling \" + velocityX + \", \" + velocityY);",
      "info" : "ExpressionStatement[4505-4565]:ExpressionStatement[4505-4565]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4575-4581]:Modifier[4575-4581]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4582-4586]:PrimitiveType[4582-4586]"
    }, {
      "left" : "zoom",
      "right" : "zoom",
      "info" : "SimpleName[4587-4591]:SimpleName[4587-4591]"
    }, {
      "left" : "InputEvent event",
      "right" : "InputEvent event",
      "info" : "SingleVariableDeclaration[4593-4609]:SingleVariableDeclaration[4593-4609]"
    }, {
      "left" : "float initialDistance",
      "right" : "float initialDistance",
      "info" : "SingleVariableDeclaration[4611-4632]:SingleVariableDeclaration[4611-4632]"
    }, {
      "left" : "float distance",
      "right" : "float distance",
      "info" : "SingleVariableDeclaration[4634-4648]:SingleVariableDeclaration[4634-4648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4650-4725]:Block[4650-4725]"
    }, {
      "left" : "System.out.println(\"zoom \" + initialDistance + \", \" + distance);",
      "right" : "System.out.println(\"zoom \" + initialDistance + \", \" + distance);",
      "info" : "ExpressionStatement[4656-4720]:ExpressionStatement[4656-4720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4730-4736]:Modifier[4730-4736]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4737-4741]:PrimitiveType[4737-4741]"
    }, {
      "left" : "pan",
      "right" : "pan",
      "info" : "SimpleName[4742-4745]:SimpleName[4742-4745]"
    }, {
      "left" : "InputEvent event",
      "right" : "InputEvent event",
      "info" : "SingleVariableDeclaration[4747-4763]:SingleVariableDeclaration[4747-4763]"
    }, {
      "left" : "float x",
      "right" : "float x",
      "info" : "SingleVariableDeclaration[4765-4772]:SingleVariableDeclaration[4765-4772]"
    }, {
      "left" : "float y",
      "right" : "float y",
      "info" : "SingleVariableDeclaration[4774-4781]:SingleVariableDeclaration[4774-4781]"
    }, {
      "left" : "float deltaX",
      "right" : "float deltaX",
      "info" : "SingleVariableDeclaration[4783-4795]:SingleVariableDeclaration[4783-4795]"
    }, {
      "left" : "float deltaY",
      "right" : "float deltaY",
      "info" : "SingleVariableDeclaration[4797-4809]:SingleVariableDeclaration[4797-4809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4811-4973]:Block[4811-4973]"
    }, {
      "left" : "event.getListenerActor().moveBy(deltaX, deltaY);",
      "right" : "event.getListenerActor().moveBy(deltaX, deltaY);",
      "info" : "ExpressionStatement[4817-4865]:ExpressionStatement[4817-4865]"
    }, {
      "left" : "if (deltaX < 0)",
      "right" : "if (deltaX < 0)",
      "info" : "IfStatement[4870-4968]:IfStatement[4870-4968]"
    }, {
      "left" : "System.out.println(\"panning \" + deltaX + \", \" + deltaY + \" \" + event.getTarget());",
      "right" : "System.out.println(\"panning \" + deltaX + \", \" + deltaY + \" \" + event.getTarget());",
      "info" : "ExpressionStatement[4886-4968]:ExpressionStatement[4886-4968]"
    }, {
      "left" : "button.setPosition(50, 50);",
      "right" : "button.setPosition(50, 50);",
      "info" : "ExpressionStatement[5121-5148]:ExpressionStatement[5121-5148]"
    }, {
      "left" : "stage.addActor(button);",
      "right" : "stage.addActor(button);",
      "info" : "ExpressionStatement[5151-5174]:ExpressionStatement[5151-5174]"
    }, {
      "left" : "meow.setDuration(2);",
      "right" : "meow.setDuration(2);",
      "info" : "ExpressionStatement[5475-5495]:ExpressionStatement[5475-5495]"
    }, {
      "left" : "actor.addAction(forever(sequence(moveBy(50, 0, 2), moveBy(-50, 0, 2), run(new Runnable() {\n\t\t\tpublic void run () {\n\t\t\t\tactor.setZIndex(0);\n\t\t\t}\n\t\t}))));",
      "right" : "actor.addAction(forever(sequence(moveBy(50, 0, 2), moveBy(-50, 0, 2), run(new Runnable() {\n\t\t\tpublic void run () {\n\t\t\t\tactor.setZIndex(0);\n\t\t\t}\n\t\t}))));",
      "info" : "ExpressionStatement[5499-5651]:ExpressionStatement[5499-5651]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5593-5599]:Modifier[5593-5599]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5600-5604]:PrimitiveType[5600-5604]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[5605-5608]:SimpleName[5605-5608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5612-5642]:Block[5612-5642]"
    }, {
      "left" : "actor.setZIndex(0);",
      "right" : "actor.setZIndex(0);",
      "info" : "ExpressionStatement[5618-5637]:ExpressionStatement[5618-5637]"
    }, {
      "left" : "patch = new TiledDrawable(skin.getRegion(\"default-round\"));",
      "right" : "patch = new TiledDrawable(skin.getRegion(\"default-round\"));",
      "info" : "ExpressionStatement[5935-5994]:ExpressionStatement[5935-5994]"
    }, {
      "left" : "Window window = new Window(\"Moo\", skin);",
      "right" : "Window window = new Window(\"Moo\", skin);",
      "info" : "VariableDeclarationStatement[5998-6038]:VariableDeclarationStatement[5998-6038]"
    }, {
      "left" : "Label lbl = new Label(\"ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJ\", skin);",
      "right" : "Label lbl = new Label(\"ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJ\", skin);",
      "info" : "VariableDeclarationStatement[6041-6161]:VariableDeclarationStatement[6041-6161]"
    }, {
      "left" : "lbl.setWrap(true);",
      "right" : "lbl.setWrap(true);",
      "info" : "ExpressionStatement[6164-6182]:ExpressionStatement[6164-6182]"
    }, {
      "left" : "window.row();",
      "right" : "window.row();",
      "info" : "ExpressionStatement[6185-6198]:ExpressionStatement[6185-6198]"
    }, {
      "left" : "window.add(lbl).width(400);",
      "right" : "window.add(lbl).width(400);",
      "info" : "ExpressionStatement[6201-6228]:ExpressionStatement[6201-6228]"
    }, {
      "left" : "window.pack();",
      "right" : "window.pack();",
      "info" : "ExpressionStatement[6231-6245]:ExpressionStatement[6248-6262]"
    }, {
      "left" : "window.pack();",
      "right" : "window.pack();",
      "info" : "ExpressionStatement[6248-6262]:ExpressionStatement[6231-6245]"
    }, {
      "left" : "stage.addActor(window);",
      "right" : "stage.addActor(window);",
      "info" : "ExpressionStatement[6265-6288]:ExpressionStatement[6265-6288]"
    }, {
      "left" : "ImageTextButtonStyle style = new ImageTextButtonStyle(skin.get(\"default\", TextButtonStyle.class));",
      "right" : "ImageTextButtonStyle style = new ImageTextButtonStyle(skin.get(\"default\", TextButtonStyle.class));",
      "info" : "VariableDeclarationStatement[6292-6390]:VariableDeclarationStatement[6292-6390]"
    }, {
      "left" : "style.imageUp = skin.getDrawable(\"default-round\");",
      "right" : "style.imageUp = skin.getDrawable(\"default-round\");",
      "info" : "ExpressionStatement[6393-6443]:ExpressionStatement[6393-6443]"
    }, {
      "left" : "ImageTextButton buttonLeft = new ImageTextButton(\"HI IM LEFT\", style);",
      "right" : "ImageTextButton buttonLeft = new ImageTextButton(\"HI IM LEFT\", style);",
      "info" : "VariableDeclarationStatement[6446-6516]:VariableDeclarationStatement[6446-6516]"
    }, {
      "left" : "ImageTextButton buttonRight = new ImageTextButton(\"HI IM RIGHT\", style) {\n\t\t\t{\n\t\t\t\tclearChildren();\n\t\t\t\tadd(getLabel());\n\t\t\t\tadd(getImage());\n\t\t\t}\n\t\t};",
      "right" : "ImageTextButton buttonRight = new ImageTextButton(\"HI IM RIGHT\", style) {\n\t\t\t{\n\t\t\t\tclearChildren();\n\t\t\t\tadd(getLabel());\n\t\t\t\tadd(getImage());\n\t\t\t}\n\t\t};",
      "info" : "VariableDeclarationStatement[6519-6670]:VariableDeclarationStatement[6519-6670]"
    }, {
      "left" : "ImageTextButton",
      "right" : "CheckBox",
      "info" : "SimpleName[6519-6534]:SimpleName[6744-6752]"
    }, {
      "left" : "ImageTextButton buttonRight = new ImageTextButton(\"HI IM RIGHT\", style) {\n\t\t\t{\n\t\t\t\tclearChildren();\n\t\t\t\tadd(getLabel());\n\t\t\t\tadd(getImage());\n\t\t\t}\n\t\t};",
      "right" : "CheckBox checkBoxRight = new CheckBox(\"HI IM RIGHT\", skin, \"default\") {\n\t\t\t{\n\t\t\t\tclearChildren();\n\t\t\t\tadd(getLabel());\n\t\t\t\tadd(getImage());\n\t\t\t}\n\t\t};",
      "info" : "VariableDeclarationStatement[6519-6670]:VariableDeclarationStatement[6744-6893]"
    }, {
      "left" : "buttonRight",
      "right" : "checkBoxRight",
      "info" : "SimpleName[6535-6546]:SimpleName[6753-6766]"
    }, {
      "left" : "ImageTextButton",
      "right" : "CheckBox",
      "info" : "SimpleName[6553-6568]:SimpleName[6773-6781]"
    }, {
      "left" : "style",
      "right" : "skin",
      "info" : "SimpleName[6584-6589]:SimpleName[6797-6801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6596-6665]:Block[6596-6665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6596-6665]:Block[6819-6888]"
    }, {
      "left" : "clearChildren();",
      "right" : "clearChildren();",
      "info" : "ExpressionStatement[6602-6618]:ExpressionStatement[6602-6618]"
    }, {
      "left" : "clearChildren();",
      "right" : "clearChildren();",
      "info" : "ExpressionStatement[6602-6618]:ExpressionStatement[6825-6841]"
    }, {
      "left" : "add(getLabel());",
      "right" : "add(getLabel());",
      "info" : "ExpressionStatement[6623-6639]:ExpressionStatement[6623-6639]"
    }, {
      "left" : "add(getLabel());",
      "right" : "add(getLabel());",
      "info" : "ExpressionStatement[6623-6639]:ExpressionStatement[6846-6862]"
    }, {
      "left" : "add(getImage());",
      "right" : "add(getImage());",
      "info" : "ExpressionStatement[6644-6660]:ExpressionStatement[6644-6660]"
    }, {
      "left" : "add(getImage());",
      "right" : "add(getImage());",
      "info" : "ExpressionStatement[6644-6660]:ExpressionStatement[6867-6883]"
    }, {
      "left" : "CheckBox checkBoxLeft = new CheckBox(\"HI IM LEFT\", skin, \"default\");",
      "right" : "CheckBox checkBoxLeft = new CheckBox(\"HI IM LEFT\", skin, \"default\");",
      "info" : "VariableDeclarationStatement[6673-6741]:VariableDeclarationStatement[6673-6741]"
    }, {
      "left" : "CheckBox",
      "right" : "CheckBox",
      "info" : "SimpleType[6744-6752]:SimpleType[6744-6752]"
    }, {
      "left" : "CheckBox",
      "right" : "CheckBox",
      "info" : "SimpleType[6773-6781]:SimpleType[6773-6781]"
    }, {
      "left" : "checkBoxRight.setCheckBoxRight(true);",
      "right" : "lbl.setWrap(true);",
      "info" : "ExpressionStatement[6817-6854]:ExpressionStatement[6164-6182]"
    }, {
      "left" : "checkBoxRight",
      "right" : "checkBoxRight",
      "info" : "METHOD_INVOCATION_RECEIVER[6817-6830]:METHOD_INVOCATION_RECEIVER[7008-7021]"
    }, {
      "left" : "setCheckBoxRight",
      "right" : "setWrap",
      "info" : "SimpleName[6831-6847]:SimpleName[6168-6175]"
    }, {
      "left" : "buttonLeft.setPosition(300, 400);",
      "right" : "buttonLeft.setPosition(300, 400);",
      "info" : "ExpressionStatement[6858-6891]:ExpressionStatement[6897-6930]"
    }, {
      "left" : "buttonRight.setPosition(300, 370);",
      "right" : "buttonRight.setPosition(300, 370);",
      "info" : "ExpressionStatement[6894-6928]:ExpressionStatement[6933-6967]"
    }, {
      "left" : "checkBoxLeft.setPosition(150, 400);",
      "right" : "checkBoxLeft.setPosition(150, 400);",
      "info" : "ExpressionStatement[6931-6966]:ExpressionStatement[6970-7005]"
    }, {
      "left" : "checkBoxRight.setPosition(150, 370);",
      "right" : "checkBoxRight.setPosition(150, 370);",
      "info" : "ExpressionStatement[6969-7005]:ExpressionStatement[7008-7044]"
    }, {
      "left" : "stage.addActor(buttonLeft);",
      "right" : "stage.addActor(buttonLeft);",
      "info" : "ExpressionStatement[7009-7036]:ExpressionStatement[7048-7075]"
    }, {
      "left" : "stage.addActor(buttonRight);",
      "right" : "stage.addActor(buttonRight);",
      "info" : "ExpressionStatement[7039-7067]:ExpressionStatement[7078-7106]"
    }, {
      "left" : "stage.addActor(checkBoxLeft);",
      "right" : "stage.addActor(checkBoxLeft);",
      "info" : "ExpressionStatement[7070-7099]:ExpressionStatement[7109-7138]"
    }, {
      "left" : "stage.addActor(checkBoxRight);",
      "right" : "stage.addActor(checkBoxRight);",
      "info" : "ExpressionStatement[7102-7132]:ExpressionStatement[7141-7171]"
    }, {
      "left" : "buttonLeft.debug();",
      "right" : "buttonLeft.debug();",
      "info" : "ExpressionStatement[7136-7155]:ExpressionStatement[7175-7194]"
    }, {
      "left" : "buttonRight.debug();",
      "right" : "buttonRight.debug();",
      "info" : "ExpressionStatement[7158-7178]:ExpressionStatement[7197-7217]"
    }, {
      "left" : "checkBoxLeft.debug();",
      "right" : "checkBoxLeft.debug();",
      "info" : "ExpressionStatement[7181-7202]:ExpressionStatement[7220-7241]"
    }, {
      "left" : "checkBoxRight.debug();",
      "right" : "checkBoxRight.debug();",
      "info" : "ExpressionStatement[7205-7227]:ExpressionStatement[7244-7266]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7233-7239]:Modifier[7272-7278]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7240-7244]:PrimitiveType[7279-7283]"
    }, {
      "left" : "render",
      "right" : "render",
      "info" : "SimpleName[7245-7251]:SimpleName[7284-7290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7255-7510]:Block[7294-7549]"
    }, {
      "left" : "Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);",
      "right" : "Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);",
      "info" : "ExpressionStatement[7301-7342]:ExpressionStatement[7340-7381]"
    }, {
      "left" : "stage.act(Gdx.graphics.getDeltaTime());",
      "right" : "stage.act(Gdx.graphics.getDeltaTime());",
      "info" : "ExpressionStatement[7345-7384]:ExpressionStatement[7384-7423]"
    }, {
      "left" : "stage.draw();",
      "right" : "stage.draw();",
      "info" : "ExpressionStatement[7387-7400]:ExpressionStatement[7426-7439]"
    }, {
      "left" : "stage.getBatch().begin();",
      "right" : "stage.getBatch().begin();",
      "info" : "ExpressionStatement[7404-7429]:ExpressionStatement[7443-7468]"
    }, {
      "left" : "patch.draw(stage.getBatch(), 300, 100, 126, 126);",
      "right" : "patch.draw(stage.getBatch(), 300, 100, 126, 126);",
      "info" : "ExpressionStatement[7432-7481]:ExpressionStatement[7471-7520]"
    }, {
      "left" : "stage.getBatch().end();",
      "right" : "stage.getBatch().end();",
      "info" : "ExpressionStatement[7484-7507]:ExpressionStatement[7523-7546]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7513-7519]:Modifier[7552-7558]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7520-7524]:PrimitiveType[7559-7563]"
    }, {
      "left" : "resize",
      "right" : "resize",
      "info" : "SimpleName[7525-7531]:SimpleName[7564-7570]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[7533-7542]:SingleVariableDeclaration[7572-7581]"
    }, {
      "left" : "int height",
      "right" : "int height",
      "info" : "SingleVariableDeclaration[7544-7554]:SingleVariableDeclaration[7583-7593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7556-7611]:Block[7595-7650]"
    }, {
      "left" : "stage.getViewport().update(width, height, true);",
      "right" : "stage.getViewport().update(width, height, true);",
      "info" : "ExpressionStatement[7560-7608]:ExpressionStatement[7599-7647]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7614-7620]:Modifier[7653-7659]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7621-7625]:PrimitiveType[7660-7664]"
    }, {
      "left" : "dispose",
      "right" : "dispose",
      "info" : "SimpleName[7626-7633]:SimpleName[7665-7672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7637-7660]:Block[7676-7699]"
    }, {
      "left" : "stage.dispose();",
      "right" : "stage.dispose();",
      "info" : "ExpressionStatement[7641-7657]:ExpressionStatement[7680-7696]"
    } ]
  },
  "interFileMappings" : { }
}