{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "StringUtils",
      "right" : "StringUtils",
      "info" : "TypeDeclaration[972-226519]:TypeDeclaration[972-226707]"
    }, {
      "left" : "public static final String EMPTY = \"\";",
      "right" : "public static final String EMPTY = \"\";",
      "info" : "FieldDeclaration[5849-5962]:FieldDeclaration[5849-5962]"
    }, {
      "left" : "public static final int INDEX_NOT_FOUND = -1;",
      "right" : "public static final int INDEX_NOT_FOUND = -1;",
      "info" : "FieldDeclaration[5968-6088]:FieldDeclaration[5968-6088]"
    }, {
      "left" : "private static final int PAD_LIMIT = 8192;",
      "right" : "private static final int PAD_LIMIT = 8192;",
      "info" : "FieldDeclaration[6094-6228]:FieldDeclaration[6094-6228]"
    }, {
      "left" : "public StringUtils()",
      "right" : "public StringUtils()",
      "info" : "MethodDeclaration[6234-6603]:MethodDeclaration[6234-6603]"
    }, {
      "left" : "public static boolean isEmpty(CharSequence str)",
      "right" : "public static boolean isEmpty(CharSequence str)",
      "info" : "MethodDeclaration[6707-7427]:MethodDeclaration[6707-7427]"
    }, {
      "left" : "public static boolean isNotEmpty(CharSequence str)",
      "right" : "public static boolean isNotEmpty(CharSequence str)",
      "info" : "MethodDeclaration[7433-8022]:MethodDeclaration[7433-8022]"
    }, {
      "left" : "public static boolean isBlank(CharSequence str)",
      "right" : "public static boolean isBlank(CharSequence str)",
      "info" : "MethodDeclaration[8028-8881]:MethodDeclaration[8028-8881]"
    }, {
      "left" : "public static boolean isNotBlank(CharSequence str)",
      "right" : "public static boolean isNotBlank(CharSequence str)",
      "info" : "MethodDeclaration[8887-9543]:MethodDeclaration[8887-9543]"
    }, {
      "left" : "public static String trim(String str)",
      "right" : "public static String trim(String str)",
      "info" : "MethodDeclaration[9639-10602]:MethodDeclaration[9639-10602]"
    }, {
      "left" : "public static String trimToNull(String str)",
      "right" : "public static String trimToNull(String str)",
      "info" : "MethodDeclaration[10608-11623]:MethodDeclaration[10608-11623]"
    }, {
      "left" : "public static String trimToEmpty(String str)",
      "right" : "public static String trimToEmpty(String str)",
      "info" : "MethodDeclaration[11629-12595]:MethodDeclaration[11629-12595]"
    }, {
      "left" : "public static String strip(String str)",
      "right" : "public static String strip(String str)",
      "info" : "MethodDeclaration[12696-13619]:MethodDeclaration[12696-13619]"
    }, {
      "left" : "public static String stripToNull(String str)",
      "right" : "public static String stripToNull(String str)",
      "info" : "MethodDeclaration[13625-14755]:MethodDeclaration[13625-14755]"
    }, {
      "left" : "public static String stripToEmpty(String str)",
      "right" : "public static String stripToEmpty(String str)",
      "info" : "MethodDeclaration[14761-15767]:MethodDeclaration[14761-15767]"
    }, {
      "left" : "public static String strip(String str, String stripChars)",
      "right" : "public static String strip(String str, String stripChars)",
      "info" : "MethodDeclaration[15773-17158]:MethodDeclaration[15773-17158]"
    }, {
      "left" : "public static String stripStart(String str, String stripChars)",
      "right" : "public static String stripStart(String str, String stripChars)",
      "info" : "MethodDeclaration[17164-18887]:MethodDeclaration[17164-18887]"
    }, {
      "left" : "public static String stripEnd(String str, String stripChars)",
      "right" : "public static String stripEnd(String str, String stripChars)",
      "info" : "MethodDeclaration[18893-20555]:MethodDeclaration[18893-20555]"
    }, {
      "left" : "public static String[] stripAll(String[] strs)",
      "right" : "public static String[] stripAll(String[] strs)",
      "info" : "MethodDeclaration[20655-21572]:MethodDeclaration[20655-21572]"
    }, {
      "left" : "public static String[] stripAll(String[] strs, String stripChars)",
      "right" : "public static String[] stripAll(String[] strs, String stripChars)",
      "info" : "MethodDeclaration[21578-23156]:MethodDeclaration[21578-23156]"
    }, {
      "left" : "public static boolean equals(String str1, String str2)",
      "right" : "public static boolean equals(String str1, String str2)",
      "info" : "MethodDeclaration[23254-24186]:MethodDeclaration[23254-24186]"
    }, {
      "left" : "public static boolean equalsIgnoreCase(String str1, String str2)",
      "right" : "public static boolean equalsIgnoreCase(String str1, String str2)",
      "info" : "MethodDeclaration[24192-25222]:MethodDeclaration[24192-25222]"
    }, {
      "left" : "public static int indexOf(String str, char searchChar)",
      "right" : "public static int indexOf(String str, char searchChar)",
      "info" : "MethodDeclaration[25321-26191]:MethodDeclaration[25321-26191]"
    }, {
      "left" : "public static int indexOf(String str, char searchChar, int startPos)",
      "right" : "public static int indexOf(String str, char searchChar, int startPos)",
      "info" : "MethodDeclaration[26197-27448]:MethodDeclaration[26197-27448]"
    }, {
      "left" : "public static int indexOf(String str, String searchStr)",
      "right" : "public static int indexOf(String str, String searchStr)",
      "info" : "MethodDeclaration[27454-28490]:MethodDeclaration[27454-28490]"
    }, {
      "left" : "public static int ordinalIndexOf(String str, String searchStr, int ordinal)",
      "right" : "public static int ordinalIndexOf(String str, String searchStr, int ordinal)",
      "info" : "MethodDeclaration[28496-30303]:MethodDeclaration[28496-30303]"
    }, {
      "left" : "public static int indexOf(String str, String searchStr, int startPos)",
      "right" : "public static int indexOf(String str, String searchStr, int startPos)",
      "info" : "MethodDeclaration[30309-32064]:MethodDeclaration[30309-32064]"
    }, {
      "left" : "public static int lastIndexOf(String str, char searchChar)",
      "right" : "public static int lastIndexOf(String str, char searchChar)",
      "info" : "MethodDeclaration[32167-33063]:MethodDeclaration[32167-33063]"
    }, {
      "left" : "public static int lastIndexOf(String str, char searchChar, int startPos)",
      "right" : "public static int lastIndexOf(String str, char searchChar, int startPos)",
      "info" : "MethodDeclaration[33069-34448]:MethodDeclaration[33069-34448]"
    }, {
      "left" : "public static int lastIndexOf(String str, String searchStr)",
      "right" : "public static int lastIndexOf(String str, String searchStr)",
      "info" : "MethodDeclaration[34454-35528]:MethodDeclaration[34454-35528]"
    }, {
      "left" : "public static int lastIndexOf(String str, String searchStr, int startPos)",
      "right" : "public static int lastIndexOf(String str, String searchStr, int startPos)",
      "info" : "MethodDeclaration[35534-37072]:MethodDeclaration[35534-37072]"
    }, {
      "left" : "public static boolean contains(String str, char searchChar)",
      "right" : "public static boolean contains(String str, char searchChar)",
      "info" : "MethodDeclaration[37172-38069]:MethodDeclaration[37172-38069]"
    }, {
      "left" : "public static boolean contains(String str, String searchStr)",
      "right" : "public static boolean contains(String str, String searchStr)",
      "info" : "MethodDeclaration[38075-39084]:MethodDeclaration[38075-39084]"
    }, {
      "left" : "public static boolean containsIgnoreCase(String str, String searchStr)",
      "right" : "public static boolean containsIgnoreCase(String str, String searchStr)",
      "info" : "MethodDeclaration[39090-40268]:MethodDeclaration[39090-40456]"
    }, {
      "left" : "public static int indexOfAny(String str, char[] searchChars)",
      "right" : "public static int indexOfAny(String str, char[] searchChars)",
      "info" : "MethodDeclaration[40376-41768]:MethodDeclaration[40564-41956]"
    }, {
      "left" : "public static int indexOfAny(String str, String searchChars)",
      "right" : "public static int indexOfAny(String str, String searchChars)",
      "info" : "MethodDeclaration[41774-42892]:MethodDeclaration[41962-43080]"
    }, {
      "left" : "public static boolean containsAny(String str, char[] searchChars)",
      "right" : "public static boolean containsAny(String str, char[] searchChars)",
      "info" : "MethodDeclaration[42995-44502]:MethodDeclaration[43183-44690]"
    }, {
      "left" : "public static boolean containsAny(String str, String searchChars)",
      "right" : "public static boolean containsAny(String str, String searchChars)",
      "info" : "MethodDeclaration[44508-45739]:MethodDeclaration[44696-45927]"
    }, {
      "left" : "public static int indexOfAnyBut(String str, char[] searchChars)",
      "right" : "public static int indexOfAnyBut(String str, char[] searchChars)",
      "info" : "MethodDeclaration[45850-47271]:MethodDeclaration[46038-47459]"
    }, {
      "left" : "public static int indexOfAnyBut(String str, String searchChars)",
      "right" : "public static int indexOfAnyBut(String str, String searchChars)",
      "info" : "MethodDeclaration[47277-48540]:MethodDeclaration[47465-48728]"
    }, {
      "left" : "public static boolean containsOnly(String str, char[] valid)",
      "right" : "public static boolean containsOnly(String str, char[] valid)",
      "info" : "MethodDeclaration[48644-49965]:MethodDeclaration[48832-50153]"
    }, {
      "left" : "public static boolean containsOnly(String str, String validChars)",
      "right" : "public static boolean containsOnly(String str, String validChars)",
      "info" : "MethodDeclaration[49971-51123]:MethodDeclaration[50159-51311]"
    }, {
      "left" : "public static boolean containsNone(String str, char[] invalidChars)",
      "right" : "public static boolean containsNone(String str, char[] invalidChars)",
      "info" : "MethodDeclaration[51227-52672]:MethodDeclaration[51415-52860]"
    }, {
      "left" : "public static boolean containsNone(String str, String invalidChars)",
      "right" : "public static boolean containsNone(String str, String invalidChars)",
      "info" : "MethodDeclaration[52678-53831]:MethodDeclaration[52866-54019]"
    }, {
      "left" : "public static int indexOfAny(String str, String[] searchStrs)",
      "right" : "public static int indexOfAny(String str, String[] searchStrs)",
      "info" : "MethodDeclaration[53941-55988]:MethodDeclaration[54129-56176]"
    }, {
      "left" : "public static int lastIndexOfAny(String str, String[] searchStrs)",
      "right" : "public static int lastIndexOfAny(String str, String[] searchStrs)",
      "info" : "MethodDeclaration[55994-57837]:MethodDeclaration[56182-58025]"
    }, {
      "left" : "public static String substring(String str, int start)",
      "right" : "public static String substring(String str, int start)",
      "info" : "MethodDeclaration[57938-59398]:MethodDeclaration[58126-59586]"
    }, {
      "left" : "public static String substring(String str, int start, int end)",
      "right" : "public static String substring(String str, int start, int end)",
      "info" : "MethodDeclaration[59404-61824]:MethodDeclaration[59592-62012]"
    }, {
      "left" : "public static String left(String str, int len)",
      "right" : "public static String left(String str, int len)",
      "info" : "MethodDeclaration[61930-63046]:MethodDeclaration[62118-63234]"
    }, {
      "left" : "public static String right(String str, int len)",
      "right" : "public static String right(String str, int len)",
      "info" : "MethodDeclaration[63052-64193]:MethodDeclaration[63240-64381]"
    }, {
      "left" : "public static String mid(String str, int pos, int len)",
      "right" : "public static String mid(String str, int pos, int len)",
      "info" : "MethodDeclaration[64199-65655]:MethodDeclaration[64387-65843]"
    }, {
      "left" : "public static String substringBefore(String str, String separator)",
      "right" : "public static String substringBefore(String str, String separator)",
      "info" : "MethodDeclaration[65777-67321]:MethodDeclaration[65965-67509]"
    }, {
      "left" : "public static String substringAfter(String str, String separator)",
      "right" : "public static String substringAfter(String str, String separator)",
      "info" : "MethodDeclaration[67327-68904]:MethodDeclaration[67515-69092]"
    }, {
      "left" : "public static String substringBeforeLast(String str, String separator)",
      "right" : "public static String substringBeforeLast(String str, String separator)",
      "info" : "MethodDeclaration[68910-70427]:MethodDeclaration[69098-70615]"
    }, {
      "left" : "public static String substringAfterLast(String str, String separator)",
      "right" : "public static String substringAfterLast(String str, String separator)",
      "info" : "MethodDeclaration[70433-72157]:MethodDeclaration[70621-72345]"
    }, {
      "left" : "public static String substringBetween(String str, String tag)",
      "right" : "public static String substringBetween(String str, String tag)",
      "info" : "MethodDeclaration[72266-73271]:MethodDeclaration[72454-73459]"
    }, {
      "left" : "public static String substringBetween(String str, String open, String close)",
      "right" : "public static String substringBetween(String str, String open, String close)",
      "info" : "MethodDeclaration[73277-75030]:MethodDeclaration[73465-75218]"
    }, {
      "left" : "public static String[] substringsBetween(String str, String open, String close)",
      "right" : "public static String[] substringsBetween(String str, String open, String close)",
      "info" : "MethodDeclaration[75036-77139]:MethodDeclaration[75224-77327]"
    }, {
      "left" : "public static String[] split(String str)",
      "right" : "public static String[] split(String str)",
      "info" : "MethodDeclaration[77344-78313]:MethodDeclaration[77532-78501]"
    }, {
      "left" : "public static String[] split(String str, char separatorChar)",
      "right" : "public static String[] split(String str, char separatorChar)",
      "info" : "MethodDeclaration[78319-79463]:MethodDeclaration[78507-79651]"
    }, {
      "left" : "public static String[] split(String str, String separatorChars)",
      "right" : "public static String[] split(String str, String separatorChars)",
      "info" : "MethodDeclaration[79469-80725]:MethodDeclaration[79657-80913]"
    }, {
      "left" : "public static String[] split(String str, String separatorChars, int max)",
      "right" : "public static String[] split(String str, String separatorChars, int max)",
      "info" : "MethodDeclaration[80731-82307]:MethodDeclaration[80919-82495]"
    }, {
      "left" : "public static String[] splitByWholeSeparator(String str, String separator)",
      "right" : "public static String[] splitByWholeSeparator(String str, String separator)",
      "info" : "MethodDeclaration[82313-83640]:MethodDeclaration[82501-83828]"
    }, {
      "left" : "public static String[] splitByWholeSeparator( String str, String separator, int max )",
      "right" : "public static String[] splitByWholeSeparator( String str, String separator, int max )",
      "info" : "MethodDeclaration[83646-85276]:MethodDeclaration[83834-85464]"
    }, {
      "left" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator)",
      "right" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator)",
      "info" : "MethodDeclaration[85282-86824]:MethodDeclaration[85470-87012]"
    }, {
      "left" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator, int max)",
      "right" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator, int max)",
      "info" : "MethodDeclaration[86830-88692]:MethodDeclaration[87018-88880]"
    }, {
      "left" : "private static String[] splitByWholeSeparatorWorker(String str, String separator, int max, \n                                                        boolean preserveAllTokens)",
      "right" : "private static String[] splitByWholeSeparatorWorker(String str, String separator, int max, \n                                                        boolean preserveAllTokens)",
      "info" : "MethodDeclaration[88698-91910]:MethodDeclaration[88886-92098]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str)",
      "right" : "public static String[] splitPreserveAllTokens(String str)",
      "info" : "MethodDeclaration[91995-93270]:MethodDeclaration[92183-93458]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str, char separatorChar)",
      "right" : "public static String[] splitPreserveAllTokens(String str, char separatorChar)",
      "info" : "MethodDeclaration[93276-95194]:MethodDeclaration[93464-95382]"
    }, {
      "left" : "private static String[] splitWorker(String str, char separatorChar, boolean preserveAllTokens)",
      "right" : "private static String[] splitWorker(String str, char separatorChar, boolean preserveAllTokens)",
      "info" : "MethodDeclaration[95200-96849]:MethodDeclaration[95388-97037]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str, String separatorChars)",
      "right" : "public static String[] splitPreserveAllTokens(String str, String separatorChars)",
      "info" : "MethodDeclaration[96855-98881]:MethodDeclaration[97043-99069]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str, String separatorChars, int max)",
      "right" : "public static String[] splitPreserveAllTokens(String str, String separatorChars, int max)",
      "info" : "MethodDeclaration[98887-101033]:MethodDeclaration[99075-101221]"
    }, {
      "left" : "private static String[] splitWorker(String str, String separatorChars, int max, boolean preserveAllTokens)",
      "right" : "private static String[] splitWorker(String str, String separatorChars, int max, boolean preserveAllTokens)",
      "info" : "MethodDeclaration[101039-104764]:MethodDeclaration[101227-104952]"
    }, {
      "left" : "public static String[] splitByCharacterType(String str)",
      "right" : "public static String[] splitByCharacterType(String str)",
      "info" : "MethodDeclaration[104770-105972]:MethodDeclaration[104958-106160]"
    }, {
      "left" : "public static String[] splitByCharacterTypeCamelCase(String str)",
      "right" : "public static String[] splitByCharacterTypeCamelCase(String str)",
      "info" : "MethodDeclaration[105978-107595]:MethodDeclaration[106166-107783]"
    }, {
      "left" : "private static String[] splitByCharacterType(String str, boolean camelCase)",
      "right" : "private static String[] splitByCharacterType(String str, boolean camelCase)",
      "info" : "MethodDeclaration[107601-109719]:MethodDeclaration[107789-109907]"
    }, {
      "left" : "public static String join(Object[] array)",
      "right" : "public static String join(Object[] array)",
      "info" : "MethodDeclaration[109818-110640]:MethodDeclaration[110006-110828]"
    }, {
      "left" : "public static String join(Object[] array, char separator)",
      "right" : "public static String join(Object[] array, char separator)",
      "info" : "MethodDeclaration[110646-111720]:MethodDeclaration[110834-111908]"
    }, {
      "left" : "public static String join(Object[] array, char separator, int startIndex, int endIndex)",
      "right" : "public static String join(Object[] array, char separator, int startIndex, int endIndex)",
      "info" : "MethodDeclaration[111726-113587]:MethodDeclaration[111914-113775]"
    }, {
      "left" : "public static String join(Object[] array, String separator)",
      "right" : "public static String join(Object[] array, String separator)",
      "info" : "MethodDeclaration[113594-114809]:MethodDeclaration[113782-114997]"
    }, {
      "left" : "public static String join(Object[] array, String separator, int startIndex, int endIndex)",
      "right" : "public static String join(Object[] array, String separator, int startIndex, int endIndex)",
      "info" : "MethodDeclaration[114815-117103]:MethodDeclaration[115003-117291]"
    }, {
      "left" : "public static String join(Iterator<?> iterator, char separator)",
      "right" : "public static String join(Iterator<?> iterator, char separator)",
      "info" : "MethodDeclaration[117109-118586]:MethodDeclaration[117297-118774]"
    }, {
      "left" : "public static String join(Iterator<?> iterator, String separator)",
      "right" : "public static String join(Iterator<?> iterator, String separator)",
      "info" : "MethodDeclaration[118592-120111]:MethodDeclaration[118780-120299]"
    }, {
      "left" : "public static String join(Collection<?> collection, char separator)",
      "right" : "public static String join(Collection<?> collection, char separator)",
      "info" : "MethodDeclaration[120117-120953]:MethodDeclaration[120305-121141]"
    }, {
      "left" : "public static String join(Collection<?> collection, String separator)",
      "right" : "public static String join(Collection<?> collection, String separator)",
      "info" : "MethodDeclaration[120959-121801]:MethodDeclaration[121147-121989]"
    }, {
      "left" : "public static String deleteWhitespace(String str)",
      "right" : "public static String deleteWhitespace(String str)",
      "info" : "MethodDeclaration[121899-122928]:MethodDeclaration[122087-123116]"
    }, {
      "left" : "public static String removeStart(String str, String remove)",
      "right" : "public static String removeStart(String str, String remove)",
      "info" : "MethodDeclaration[123026-124389]:MethodDeclaration[123214-124577]"
    }, {
      "left" : "public static String removeStartIgnoreCase(String str, String remove)",
      "right" : "public static String removeStartIgnoreCase(String str, String remove)",
      "info" : "MethodDeclaration[124395-125968]:MethodDeclaration[124583-126156]"
    }, {
      "left" : "public static String removeEnd(String str, String remove)",
      "right" : "public static String removeEnd(String str, String remove)",
      "info" : "MethodDeclaration[125974-127337]:MethodDeclaration[126162-127525]"
    }, {
      "left" : "public static String removeEndIgnoreCase(String str, String remove)",
      "right" : "public static String removeEndIgnoreCase(String str, String remove)",
      "info" : "MethodDeclaration[127343-128762]:MethodDeclaration[127531-128950]"
    }, {
      "left" : "public static String remove(String str, String remove)",
      "right" : "public static String remove(String str, String remove)",
      "info" : "MethodDeclaration[128768-129938]:MethodDeclaration[128956-130126]"
    }, {
      "left" : "public static String remove(String str, char remove)",
      "right" : "public static String remove(String str, char remove)",
      "info" : "MethodDeclaration[129944-131095]:MethodDeclaration[130132-131283]"
    }, {
      "left" : "public static String replaceOnce(String text, String searchString, String replacement)",
      "right" : "public static String replaceOnce(String text, String searchString, String replacement)",
      "info" : "MethodDeclaration[131196-132417]:MethodDeclaration[131384-132605]"
    }, {
      "left" : "public static String replace(String text, String searchString, String replacement)",
      "right" : "public static String replace(String text, String searchString, String replacement)",
      "info" : "MethodDeclaration[132423-133603]:MethodDeclaration[132611-133791]"
    }, {
      "left" : "public static String replace(String text, String searchString, String replacement, int max)",
      "right" : "public static String replace(String text, String searchString, String replacement, int max)",
      "info" : "MethodDeclaration[133609-135971]:MethodDeclaration[133797-136159]"
    }, {
      "left" : "public static String replaceEach(String text, String[] searchList, String[] replacementList)",
      "right" : "public static String replaceEach(String text, String[] searchList, String[] replacementList)",
      "info" : "MethodDeclaration[135977-137923]:MethodDeclaration[136165-138111]"
    }, {
      "left" : "public static String replaceEachRepeatedly(String text, String[] searchList, String[] replacementList)",
      "right" : "public static String replaceEachRepeatedly(String text, String[] searchList, String[] replacementList)",
      "info" : "MethodDeclaration[137929-140606]:MethodDeclaration[138117-140794]"
    }, {
      "left" : "private static String replaceEach(String text, String[] searchList, String[] replacementList, \n                                      boolean repeat, int timeToLive)",
      "right" : "private static String replaceEach(String text, String[] searchList, String[] replacementList, \n                                      boolean repeat, int timeToLive)",
      "info" : "MethodDeclaration[140612-147670]:MethodDeclaration[140800-147858]"
    }, {
      "left" : "public static String replaceChars(String str, char searchChar, char replaceChar)",
      "right" : "public static String replaceChars(String str, char searchChar, char replaceChar)",
      "info" : "MethodDeclaration[147786-148861]:MethodDeclaration[147974-149049]"
    }, {
      "left" : "public static String replaceChars(String str, String searchChars, String replaceChars)",
      "right" : "public static String replaceChars(String str, String searchChars, String replaceChars)",
      "info" : "MethodDeclaration[148867-151504]:MethodDeclaration[149055-151692]"
    }, {
      "left" : "public static String overlay(String str, String overlay, int start, int end)",
      "right" : "public static String overlay(String str, String overlay, int start, int end)",
      "info" : "MethodDeclaration[151603-153830]:MethodDeclaration[151791-154018]"
    }, {
      "left" : "public static String chomp(String str)",
      "right" : "public static String chomp(String str)",
      "info" : "MethodDeclaration[153930-155633]:MethodDeclaration[154118-155821]"
    }, {
      "left" : "public static String chomp(String str, String separator)",
      "right" : "public static String chomp(String str, String separator)",
      "info" : "MethodDeclaration[155639-157057]:MethodDeclaration[155827-157245]"
    }, {
      "left" : "public static String chop(String str)",
      "right" : "public static String chop(String str)",
      "info" : "MethodDeclaration[157157-158545]:MethodDeclaration[157345-158733]"
    }, {
      "left" : "public static String repeat(String str, int repeat)",
      "right" : "public static String repeat(String str, int repeat)",
      "info" : "MethodDeclaration[158741-160820]:MethodDeclaration[158929-161008]"
    }, {
      "left" : "public static String repeat(String str, String separator, int repeat)",
      "right" : "public static String repeat(String str, String separator, int repeat)",
      "info" : "MethodDeclaration[160826-162042]:MethodDeclaration[161014-162230]"
    }, {
      "left" : "private static String padding(int repeat, char padChar) throws IndexOutOfBoundsException",
      "right" : "private static String padding(int repeat, char padChar) throws IndexOutOfBoundsException",
      "info" : "MethodDeclaration[162048-163375]:MethodDeclaration[162236-163563]"
    }, {
      "left" : "public static String rightPad(String str, int size)",
      "right" : "public static String rightPad(String str, int size)",
      "info" : "MethodDeclaration[163381-164171]:MethodDeclaration[163569-164359]"
    }, {
      "left" : "public static String rightPad(String str, int size, char padChar)",
      "right" : "public static String rightPad(String str, int size, char padChar)",
      "info" : "MethodDeclaration[164177-165406]:MethodDeclaration[164365-165594]"
    }, {
      "left" : "public static String rightPad(String str, int size, String padStr)",
      "right" : "public static String rightPad(String str, int size, String padStr)",
      "info" : "MethodDeclaration[165412-167372]:MethodDeclaration[165600-167560]"
    }, {
      "left" : "public static String leftPad(String str, int size)",
      "right" : "public static String leftPad(String str, int size)",
      "info" : "MethodDeclaration[167378-168158]:MethodDeclaration[167566-168346]"
    }, {
      "left" : "public static String leftPad(String str, int size, char padChar)",
      "right" : "public static String leftPad(String str, int size, char padChar)",
      "info" : "MethodDeclaration[168164-169364]:MethodDeclaration[168352-169552]"
    }, {
      "left" : "public static String leftPad(String str, int size, String padStr)",
      "right" : "public static String leftPad(String str, int size, String padStr)",
      "info" : "MethodDeclaration[169370-171298]:MethodDeclaration[169558-171486]"
    }, {
      "left" : "public static int length(String str)",
      "right" : "public static int length(String str)",
      "info" : "MethodDeclaration[171304-171670]:MethodDeclaration[171492-171858]"
    }, {
      "left" : "public static String center(String str, int size)",
      "right" : "public static String center(String str, int size)",
      "info" : "MethodDeclaration[171775-172777]:MethodDeclaration[171963-172965]"
    }, {
      "left" : "public static String center(String str, int size, char padChar)",
      "right" : "public static String center(String str, int size, char padChar)",
      "info" : "MethodDeclaration[172783-174204]:MethodDeclaration[172971-174392]"
    }, {
      "left" : "public static String center(String str, int size, String padStr)",
      "right" : "public static String center(String str, int size, String padStr)",
      "info" : "MethodDeclaration[174210-175887]:MethodDeclaration[174398-176075]"
    }, {
      "left" : "public static String upperCase(String str)",
      "right" : "public static String upperCase(String str)",
      "info" : "MethodDeclaration[175994-176980]:MethodDeclaration[176182-177168]"
    }, {
      "left" : "public static String upperCase(String str, Locale locale)",
      "right" : "public static String upperCase(String str, Locale locale)",
      "info" : "MethodDeclaration[176986-177803]:MethodDeclaration[177174-177991]"
    }, {
      "left" : "public static String lowerCase(String str)",
      "right" : "public static String lowerCase(String str)",
      "info" : "MethodDeclaration[177809-178795]:MethodDeclaration[177997-178983]"
    }, {
      "left" : "public static String lowerCase(String str, Locale locale)",
      "right" : "public static String lowerCase(String str, Locale locale)",
      "info" : "MethodDeclaration[178801-179618]:MethodDeclaration[178989-179806]"
    }, {
      "left" : "public static String capitalize(String str)",
      "right" : "public static String capitalize(String str)",
      "info" : "MethodDeclaration[179624-180725]:MethodDeclaration[179812-180913]"
    }, {
      "left" : "public static String uncapitalize(String str)",
      "right" : "public static String uncapitalize(String str)",
      "info" : "MethodDeclaration[180731-181850]:MethodDeclaration[180919-182038]"
    }, {
      "left" : "public static String swapCase(String str)",
      "right" : "public static String swapCase(String str)",
      "info" : "MethodDeclaration[181856-183652]:MethodDeclaration[182044-183840]"
    }, {
      "left" : "public static int countMatches(String str, String sub)",
      "right" : "public static int countMatches(String str, String sub)",
      "info" : "MethodDeclaration[183757-184854]:MethodDeclaration[183945-185042]"
    }, {
      "left" : "public static boolean isAlpha(String str)",
      "right" : "public static boolean isAlpha(String str)",
      "info" : "MethodDeclaration[184961-185916]:MethodDeclaration[185149-186104]"
    }, {
      "left" : "public static boolean isAlphaSpace(String str)",
      "right" : "public static boolean isAlphaSpace(String str)",
      "info" : "MethodDeclaration[185922-187026]:MethodDeclaration[186110-187214]"
    }, {
      "left" : "public static boolean isAlphanumeric(String str)",
      "right" : "public static boolean isAlphanumeric(String str)",
      "info" : "MethodDeclaration[187032-188120]:MethodDeclaration[187220-188308]"
    }, {
      "left" : "public static boolean isAlphanumericSpace(String str)",
      "right" : "public static boolean isAlphanumericSpace(String str)",
      "info" : "MethodDeclaration[188126-189285]:MethodDeclaration[188314-189473]"
    }, {
      "left" : "public static boolean isAsciiPrintable(String str)",
      "right" : "public static boolean isAsciiPrintable(String str)",
      "info" : "MethodDeclaration[189291-190650]:MethodDeclaration[189479-190838]"
    }, {
      "left" : "public static boolean isNumeric(String str)",
      "right" : "public static boolean isNumeric(String str)",
      "info" : "MethodDeclaration[190656-191777]:MethodDeclaration[190844-191965]"
    }, {
      "left" : "public static boolean isNumericSpace(String str)",
      "right" : "public static boolean isNumericSpace(String str)",
      "info" : "MethodDeclaration[191783-192987]:MethodDeclaration[191971-193175]"
    }, {
      "left" : "public static boolean isWhitespace(String str)",
      "right" : "public static boolean isWhitespace(String str)",
      "info" : "MethodDeclaration[192993-194005]:MethodDeclaration[193181-194193]"
    }, {
      "left" : "public static boolean isAllLowerCase(String str)",
      "right" : "public static boolean isAllLowerCase(String str)",
      "info" : "MethodDeclaration[194011-195003]:MethodDeclaration[194199-195191]"
    }, {
      "left" : "public static boolean isAllUpperCase(String str)",
      "right" : "public static boolean isAllUpperCase(String str)",
      "info" : "MethodDeclaration[195009-196001]:MethodDeclaration[195197-196189]"
    }, {
      "left" : "public static String defaultString(String str)",
      "right" : "public static String defaultString(String str)",
      "info" : "MethodDeclaration[196101-196732]:MethodDeclaration[196289-196920]"
    }, {
      "left" : "public static String defaultString(String str, String defaultStr)",
      "right" : "public static String defaultString(String str, String defaultStr)",
      "info" : "MethodDeclaration[196738-197541]:MethodDeclaration[196926-197729]"
    }, {
      "left" : "public static String defaultIfEmpty(String str, String defaultStr)",
      "right" : "public static String defaultIfEmpty(String str, String defaultStr)",
      "info" : "MethodDeclaration[197547-198393]:MethodDeclaration[197735-198581]"
    }, {
      "left" : "public static String reverse(String str)",
      "right" : "public static String reverse(String str)",
      "info" : "MethodDeclaration[198494-199119]:MethodDeclaration[198682-199307]"
    }, {
      "left" : "public static String reverseDelimited(String str, char separatorChar)",
      "right" : "public static String reverseDelimited(String str, char separatorChar)",
      "info" : "MethodDeclaration[199125-200245]:MethodDeclaration[199313-200433]"
    }, {
      "left" : "public static String abbreviate(String str, int maxWidth)",
      "right" : "public static String abbreviate(String str, int maxWidth)",
      "info" : "MethodDeclaration[200349-201847]:MethodDeclaration[200537-202035]"
    }, {
      "left" : "public static String abbreviate(String str, int offset, int maxWidth)",
      "right" : "public static String abbreviate(String str, int offset, int maxWidth)",
      "info" : "MethodDeclaration[201853-204728]:MethodDeclaration[202041-204916]"
    }, {
      "left" : "public static String difference(String str1, String str2)",
      "right" : "public static String difference(String str1, String str2)",
      "info" : "MethodDeclaration[204830-206168]:MethodDeclaration[205018-206356]"
    }, {
      "left" : "public static int indexOfDifference(String str1, String str2)",
      "right" : "public static int indexOfDifference(String str1, String str2)",
      "info" : "MethodDeclaration[206174-207575]:MethodDeclaration[206362-207763]"
    }, {
      "left" : "public static int indexOfDifference(String[] strs)",
      "right" : "public static int indexOfDifference(String[] strs)",
      "info" : "MethodDeclaration[207581-211352]:MethodDeclaration[207769-211540]"
    }, {
      "left" : "public static String getCommonPrefix(String[] strs)",
      "right" : "public static String getCommonPrefix(String[] strs)",
      "info" : "MethodDeclaration[211362-213809]:MethodDeclaration[211550-213997]"
    }, {
      "left" : "public static int getLevenshteinDistance(String s, String t)",
      "right" : "public static int getLevenshteinDistance(String s, String t)",
      "info" : "MethodDeclaration[213911-218682]:MethodDeclaration[214099-218870]"
    }, {
      "left" : "public static boolean startsWith(String str, String prefix)",
      "right" : "public static boolean startsWith(String str, String prefix)",
      "info" : "MethodDeclaration[219248-220222]:MethodDeclaration[219436-220410]"
    }, {
      "left" : "public static boolean startsWithIgnoreCase(String str, String prefix)",
      "right" : "public static boolean startsWithIgnoreCase(String str, String prefix)",
      "info" : "MethodDeclaration[220228-221281]:MethodDeclaration[220416-221469]"
    }, {
      "left" : "private static boolean startsWith(String str, String prefix, boolean ignoreCase)",
      "right" : "private static boolean startsWith(String str, String prefix, boolean ignoreCase)",
      "info" : "MethodDeclaration[221287-222125]:MethodDeclaration[221475-222313]"
    }, {
      "left" : "public static boolean startsWithAny(String string, String[] searchStrings)",
      "right" : "public static boolean startsWithAny(String string, String[] searchStrings)",
      "info" : "MethodDeclaration[222135-223404]:MethodDeclaration[222323-223592]"
    }, {
      "left" : "public static boolean endsWith(String str, String suffix)",
      "right" : "public static boolean endsWith(String str, String suffix)",
      "info" : "MethodDeclaration[223505-224512]:MethodDeclaration[223693-224700]"
    }, {
      "left" : "public static boolean endsWithIgnoreCase(String str, String suffix)",
      "right" : "public static boolean endsWithIgnoreCase(String str, String suffix)",
      "info" : "MethodDeclaration[224518-225614]:MethodDeclaration[224706-225802]"
    }, {
      "left" : "private static boolean endsWith(String str, String suffix, boolean ignoreCase)",
      "right" : "private static boolean endsWith(String str, String suffix, boolean ignoreCase)",
      "info" : "MethodDeclaration[225620-226516]:MethodDeclaration[225808-226704]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6558-6564]:Modifier[6558-6564]"
    }, {
      "left" : "StringUtils",
      "right" : "StringUtils",
      "info" : "SimpleName[6565-6576]:SimpleName[6565-6576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6579-6603]:Block[6579-6603]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[6589-6597]:SuperConstructorInvocation[6589-6597]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7323-7329]:Modifier[7323-7329]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7330-7336]:Modifier[7330-7336]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7337-7344]:PrimitiveType[7337-7344]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[7345-7352]:SimpleName[7345-7352]"
    }, {
      "left" : "CharSequence str",
      "right" : "CharSequence str",
      "info" : "SingleVariableDeclaration[7353-7369]:SingleVariableDeclaration[7353-7369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7371-7427]:Block[7371-7427]"
    }, {
      "left" : "return str == null || str.length() == 0;",
      "right" : "return str == null || str.length() == 0;",
      "info" : "ReturnStatement[7381-7421]:ReturnStatement[7381-7421]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7922-7928]:Modifier[7922-7928]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7929-7935]:Modifier[7929-7935]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7936-7943]:PrimitiveType[7936-7943]"
    }, {
      "left" : "isNotEmpty",
      "right" : "isNotEmpty",
      "info" : "SimpleName[7944-7954]:SimpleName[7944-7954]"
    }, {
      "left" : "CharSequence str",
      "right" : "CharSequence str",
      "info" : "SingleVariableDeclaration[7955-7971]:SingleVariableDeclaration[7955-7971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7973-8022]:Block[7973-8022]"
    }, {
      "left" : "return !StringUtils.isEmpty(str);",
      "right" : "return !StringUtils.isEmpty(str);",
      "info" : "ReturnStatement[7983-8016]:ReturnStatement[7983-8016]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8526-8532]:Modifier[8526-8532]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8533-8539]:Modifier[8533-8539]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8540-8547]:PrimitiveType[8540-8547]"
    }, {
      "left" : "isBlank",
      "right" : "isBlank",
      "info" : "SimpleName[8548-8555]:SimpleName[8548-8555]"
    }, {
      "left" : "CharSequence str",
      "right" : "CharSequence str",
      "info" : "SingleVariableDeclaration[8556-8572]:SingleVariableDeclaration[8556-8572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8574-8881]:Block[8574-8881]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[8584-8595]:VariableDeclarationStatement[8584-8595]"
    }, {
      "left" : "if (str == null || (strLen = str.length()) == 0)",
      "right" : "if (str == null || (strLen = str.length()) == 0)",
      "info" : "IfStatement[8604-8689]:IfStatement[8604-8689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8653-8689]:Block[8653-8689]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8667-8679]:ReturnStatement[8667-8679]"
    }, {
      "left" : "for (int i = 0; i < strLen; i++)",
      "right" : "for (int i = 0; i < strLen; i++)",
      "info" : "ForStatement[8698-8854]:ForStatement[8698-8854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8731-8854]:Block[8731-8854]"
    }, {
      "left" : "if ((Character.isWhitespace(str.charAt(i)) == false))",
      "right" : "if ((Character.isWhitespace(str.charAt(i)) == false))",
      "info" : "IfStatement[8745-8844]:IfStatement[8745-8844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8799-8844]:Block[8799-8844]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8817-8830]:ReturnStatement[8817-8830]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8863-8875]:ReturnStatement[8863-8875]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9443-9449]:Modifier[9443-9449]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9450-9456]:Modifier[9450-9456]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9457-9464]:PrimitiveType[9457-9464]"
    }, {
      "left" : "isNotBlank",
      "right" : "isNotBlank",
      "info" : "SimpleName[9465-9475]:SimpleName[9465-9475]"
    }, {
      "left" : "CharSequence str",
      "right" : "CharSequence str",
      "info" : "SingleVariableDeclaration[9476-9492]:SingleVariableDeclaration[9476-9492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9494-9543]:Block[9494-9543]"
    }, {
      "left" : "return !StringUtils.isBlank(str);",
      "right" : "return !StringUtils.isBlank(str);",
      "info" : "ReturnStatement[9504-9537]:ReturnStatement[9504-9537]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10509-10515]:Modifier[10509-10515]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10516-10522]:Modifier[10516-10522]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10523-10529]:SimpleType[10523-10529]"
    }, {
      "left" : "trim",
      "right" : "trim",
      "info" : "SimpleName[10530-10534]:SimpleName[10530-10534]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[10535-10545]:SingleVariableDeclaration[10535-10545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10547-10602]:Block[10547-10602]"
    }, {
      "left" : "return str == null ? null : str.trim();",
      "right" : "return str == null ? null : str.trim();",
      "info" : "ReturnStatement[10557-10596]:ReturnStatement[10557-10596]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11501-11507]:Modifier[11501-11507]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11508-11514]:Modifier[11508-11514]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11515-11521]:SimpleType[11515-11521]"
    }, {
      "left" : "trimToNull",
      "right" : "trimToNull",
      "info" : "SimpleName[11522-11532]:SimpleName[11522-11532]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[11533-11543]:SingleVariableDeclaration[11533-11543]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11545-11623]:Block[11545-11623]"
    }, {
      "left" : "String ts = trim(str);",
      "right" : "String ts = trim(str);",
      "info" : "VariableDeclarationStatement[11555-11577]:VariableDeclarationStatement[11555-11577]"
    }, {
      "left" : "return isEmpty(ts) ? null : ts;",
      "right" : "return isEmpty(ts) ? null : ts;",
      "info" : "ReturnStatement[11586-11617]:ReturnStatement[11586-11617]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12494-12500]:Modifier[12494-12500]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12501-12507]:Modifier[12501-12507]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12508-12514]:SimpleType[12508-12514]"
    }, {
      "left" : "trimToEmpty",
      "right" : "trimToEmpty",
      "info" : "SimpleName[12515-12526]:SimpleName[12515-12526]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[12527-12537]:SingleVariableDeclaration[12527-12537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12539-12595]:Block[12539-12595]"
    }, {
      "left" : "return str == null ? EMPTY : str.trim();",
      "right" : "return str == null ? EMPTY : str.trim();",
      "info" : "ReturnStatement[12549-12589]:ReturnStatement[12549-12589]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13540-13546]:Modifier[13540-13546]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13547-13553]:Modifier[13547-13553]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[13554-13560]:SimpleType[13554-13560]"
    }, {
      "left" : "strip",
      "right" : "strip",
      "info" : "SimpleName[13561-13566]:SimpleName[13561-13566]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[13567-13577]:SingleVariableDeclaration[13567-13577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13579-13619]:Block[13579-13619]"
    }, {
      "left" : "return strip(str, null);",
      "right" : "return strip(str, null);",
      "info" : "ReturnStatement[13589-13613]:ReturnStatement[13589-13613]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14562-14568]:Modifier[14562-14568]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14569-14575]:Modifier[14569-14575]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[14576-14582]:SimpleType[14576-14582]"
    }, {
      "left" : "stripToNull",
      "right" : "stripToNull",
      "info" : "SimpleName[14583-14594]:SimpleName[14583-14594]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[14595-14605]:SingleVariableDeclaration[14595-14605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14607-14755]:Block[14607-14755]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[14617-14670]:IfStatement[14617-14670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14634-14670]:Block[14634-14670]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14648-14660]:ReturnStatement[14648-14660]"
    }, {
      "left" : "str = strip(str, null);",
      "right" : "str = strip(str, null);",
      "info" : "ExpressionStatement[14679-14702]:ExpressionStatement[14679-14702]"
    }, {
      "left" : "return str.length() == 0 ? null : str;",
      "right" : "return str.length() == 0 ? null : str;",
      "info" : "ReturnStatement[14711-14749]:ReturnStatement[14711-14749]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15659-15665]:Modifier[15659-15665]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15666-15672]:Modifier[15666-15672]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[15673-15679]:SimpleType[15673-15679]"
    }, {
      "left" : "stripToEmpty",
      "right" : "stripToEmpty",
      "info" : "SimpleName[15680-15692]:SimpleName[15680-15692]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[15693-15703]:SingleVariableDeclaration[15693-15703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15705-15767]:Block[15705-15767]"
    }, {
      "left" : "return str == null ? EMPTY : strip(str, null);",
      "right" : "return str == null ? EMPTY : strip(str, null);",
      "info" : "ReturnStatement[15715-15761]:ReturnStatement[15715-15761]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16946-16952]:Modifier[16946-16952]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16953-16959]:Modifier[16953-16959]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[16960-16966]:SimpleType[16960-16966]"
    }, {
      "left" : "strip",
      "right" : "strip",
      "info" : "SimpleName[16967-16972]:SimpleName[16967-16972]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[16973-16983]:SingleVariableDeclaration[16973-16983]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[16985-17002]:SingleVariableDeclaration[16985-17002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17004-17158]:Block[17004-17158]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[17014-17067]:IfStatement[17014-17067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17032-17067]:Block[17032-17067]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[17046-17057]:ReturnStatement[17046-17057]"
    }, {
      "left" : "str = stripStart(str, stripChars);",
      "right" : "str = stripStart(str, stripChars);",
      "info" : "ExpressionStatement[17076-17110]:ExpressionStatement[17076-17110]"
    }, {
      "left" : "return stripEnd(str, stripChars);",
      "right" : "return stripEnd(str, stripChars);",
      "info" : "ReturnStatement[17119-17152]:ReturnStatement[17119-17152]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18260-18266]:Modifier[18260-18266]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18267-18273]:Modifier[18267-18273]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[18274-18280]:SimpleType[18274-18280]"
    }, {
      "left" : "stripStart",
      "right" : "stripStart",
      "info" : "SimpleName[18281-18291]:SimpleName[18281-18291]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[18292-18302]:SingleVariableDeclaration[18292-18302]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[18304-18321]:SingleVariableDeclaration[18304-18321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18323-18887]:Block[18323-18887]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[18333-18344]:VariableDeclarationStatement[18333-18344]"
    }, {
      "left" : "if (str == null || (strLen = str.length()) == 0)",
      "right" : "if (str == null || (strLen = str.length()) == 0)",
      "info" : "IfStatement[18353-18437]:IfStatement[18353-18437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18402-18437]:Block[18402-18437]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[18416-18427]:ReturnStatement[18416-18427]"
    }, {
      "left" : "int start = 0;",
      "right" : "int start = 0;",
      "info" : "VariableDeclarationStatement[18446-18460]:VariableDeclarationStatement[18446-18460]"
    }, {
      "left" : "if (stripChars == null)",
      "right" : "if (stripChars == null)",
      "info" : "IfStatement[18469-18844]:IfStatement[18469-18844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18493-18628]:Block[18493-18628]"
    }, {
      "left" : "while ((start != strLen) && Character.isWhitespace(str.charAt(start)))",
      "right" : "while ((start != strLen) && Character.isWhitespace(str.charAt(start)))",
      "info" : "WhileStatement[18507-18618]:WhileStatement[18507-18618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18578-18618]:Block[18578-18618]"
    }, {
      "left" : "start++;",
      "right" : "start++;",
      "info" : "ExpressionStatement[18596-18604]:ExpressionStatement[18596-18604]"
    }, {
      "left" : "if (stripChars.length() == 0)",
      "right" : "if (stripChars.length() == 0)",
      "info" : "IfStatement[18634-18844]:IfStatement[18634-18844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18664-18699]:Block[18664-18699]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[18678-18689]:ReturnStatement[18678-18689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18705-18844]:Block[18705-18844]"
    }, {
      "left" : "while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1))",
      "right" : "while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1))",
      "info" : "WhileStatement[18719-18834]:WhileStatement[18719-18834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18794-18834]:Block[18794-18834]"
    }, {
      "left" : "start++;",
      "right" : "start++;",
      "info" : "ExpressionStatement[18812-18820]:ExpressionStatement[18812-18820]"
    }, {
      "left" : "return str.substring(start);",
      "right" : "return str.substring(start);",
      "info" : "ReturnStatement[18853-18881]:ReturnStatement[18853-18881]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19971-19977]:Modifier[19971-19977]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19978-19984]:Modifier[19978-19984]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[19985-19991]:SimpleType[19985-19991]"
    }, {
      "left" : "stripEnd",
      "right" : "stripEnd",
      "info" : "SimpleName[19992-20000]:SimpleName[19992-20000]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[20001-20011]:SingleVariableDeclaration[20001-20011]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[20013-20030]:SingleVariableDeclaration[20013-20030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20032-20555]:Block[20032-20555]"
    }, {
      "left" : "int end;",
      "right" : "int end;",
      "info" : "VariableDeclarationStatement[20042-20050]:VariableDeclarationStatement[20042-20050]"
    }, {
      "left" : "if (str == null || (end = str.length()) == 0)",
      "right" : "if (str == null || (end = str.length()) == 0)",
      "info" : "IfStatement[20059-20140]:IfStatement[20059-20140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20105-20140]:Block[20105-20140]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[20119-20130]:ReturnStatement[20119-20130]"
    }, {
      "left" : "if (stripChars == null)",
      "right" : "if (stripChars == null)",
      "info" : "IfStatement[20150-20511]:IfStatement[20150-20511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20174-20302]:Block[20174-20302]"
    }, {
      "left" : "while ((end != 0) && Character.isWhitespace(str.charAt(end - 1)))",
      "right" : "while ((end != 0) && Character.isWhitespace(str.charAt(end - 1)))",
      "info" : "WhileStatement[20188-20292]:WhileStatement[20188-20292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20254-20292]:Block[20254-20292]"
    }, {
      "left" : "end--;",
      "right" : "end--;",
      "info" : "ExpressionStatement[20272-20278]:ExpressionStatement[20272-20278]"
    }, {
      "left" : "if (stripChars.length() == 0)",
      "right" : "if (stripChars.length() == 0)",
      "info" : "IfStatement[20308-20511]:IfStatement[20308-20511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20338-20373]:Block[20338-20373]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[20352-20363]:ReturnStatement[20352-20363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20379-20511]:Block[20379-20511]"
    }, {
      "left" : "while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1))",
      "right" : "while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1))",
      "info" : "WhileStatement[20393-20501]:WhileStatement[20393-20501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20463-20501]:Block[20463-20501]"
    }, {
      "left" : "end--;",
      "right" : "end--;",
      "info" : "ExpressionStatement[20481-20487]:ExpressionStatement[20481-20487]"
    }, {
      "left" : "return str.substring(0, end);",
      "right" : "return str.substring(0, end);",
      "info" : "ReturnStatement[20520-20549]:ReturnStatement[20520-20549]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21481-21487]:Modifier[21481-21487]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[21488-21494]:Modifier[21488-21494]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[21495-21503]:ArrayType[21495-21503]"
    }, {
      "left" : "stripAll",
      "right" : "stripAll",
      "info" : "SimpleName[21504-21512]:SimpleName[21504-21512]"
    }, {
      "left" : "String[] strs",
      "right" : "String[] strs",
      "info" : "SingleVariableDeclaration[21513-21526]:SingleVariableDeclaration[21513-21526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21528-21572]:Block[21528-21572]"
    }, {
      "left" : "return stripAll(strs, null);",
      "right" : "return stripAll(strs, null);",
      "info" : "ReturnStatement[21538-21566]:ReturnStatement[21538-21566]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22791-22797]:Modifier[22791-22797]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[22798-22804]:Modifier[22798-22804]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[22805-22813]:ArrayType[22805-22813]"
    }, {
      "left" : "stripAll",
      "right" : "stripAll",
      "info" : "SimpleName[22814-22822]:SimpleName[22814-22822]"
    }, {
      "left" : "String[] strs",
      "right" : "String[] strs",
      "info" : "SingleVariableDeclaration[22823-22836]:SingleVariableDeclaration[22823-22836]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[22838-22855]:SingleVariableDeclaration[22838-22855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22857-23156]:Block[22857-23156]"
    }, {
      "left" : "int strsLen;",
      "right" : "int strsLen;",
      "info" : "VariableDeclarationStatement[22867-22879]:VariableDeclarationStatement[22867-22879]"
    }, {
      "left" : "if (strs == null || (strsLen = strs.length) == 0)",
      "right" : "if (strs == null || (strsLen = strs.length) == 0)",
      "info" : "IfStatement[22888-22974]:IfStatement[22888-22974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22938-22974]:Block[22938-22974]"
    }, {
      "left" : "return strs;",
      "right" : "return strs;",
      "info" : "ReturnStatement[22952-22964]:ReturnStatement[22952-22964]"
    }, {
      "left" : "String[] newArr = new String[strsLen];",
      "right" : "String[] newArr = new String[strsLen];",
      "info" : "VariableDeclarationStatement[22983-23021]:VariableDeclarationStatement[22983-23021]"
    }, {
      "left" : "for (int i = 0; i < strsLen; i++)",
      "right" : "for (int i = 0; i < strsLen; i++)",
      "info" : "ForStatement[23030-23127]:ForStatement[23030-23127]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23064-23127]:Block[23064-23127]"
    }, {
      "left" : "newArr[i] = strip(strs[i], stripChars);",
      "right" : "newArr[i] = strip(strs[i], stripChars);",
      "info" : "ExpressionStatement[23078-23117]:ExpressionStatement[23078-23117]"
    }, {
      "left" : "return newArr;",
      "right" : "return newArr;",
      "info" : "ReturnStatement[23136-23150]:ReturnStatement[23136-23150]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24060-24066]:Modifier[24060-24066]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[24067-24073]:Modifier[24067-24073]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[24074-24081]:PrimitiveType[24074-24081]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[24082-24088]:SimpleName[24082-24088]"
    }, {
      "left" : "String str1",
      "right" : "String str1",
      "info" : "SingleVariableDeclaration[24089-24100]:SingleVariableDeclaration[24089-24100]"
    }, {
      "left" : "String str2",
      "right" : "String str2",
      "info" : "SingleVariableDeclaration[24102-24113]:SingleVariableDeclaration[24102-24113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24115-24186]:Block[24115-24186]"
    }, {
      "left" : "return str1 == null ? str2 == null : str1.equals(str2);",
      "right" : "return str1 == null ? str2 == null : str1.equals(str2);",
      "info" : "ReturnStatement[24125-24180]:ReturnStatement[24125-24180]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25076-25082]:Modifier[25076-25082]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[25083-25089]:Modifier[25083-25089]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[25090-25097]:PrimitiveType[25090-25097]"
    }, {
      "left" : "equalsIgnoreCase",
      "right" : "equalsIgnoreCase",
      "info" : "SimpleName[25098-25114]:SimpleName[25098-25114]"
    }, {
      "left" : "String str1",
      "right" : "String str1",
      "info" : "SingleVariableDeclaration[25115-25126]:SingleVariableDeclaration[25115-25126]"
    }, {
      "left" : "String str2",
      "right" : "String str2",
      "info" : "SingleVariableDeclaration[25128-25139]:SingleVariableDeclaration[25128-25139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25141-25222]:Block[25141-25222]"
    }, {
      "left" : "return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);",
      "right" : "return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);",
      "info" : "ReturnStatement[25151-25216]:ReturnStatement[25151-25216]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26028-26034]:Modifier[26028-26034]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[26035-26041]:Modifier[26035-26041]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[26042-26045]:PrimitiveType[26042-26045]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[26046-26053]:SimpleName[26046-26053]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[26054-26064]:SingleVariableDeclaration[26054-26064]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[26066-26081]:SingleVariableDeclaration[26066-26081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26083-26191]:Block[26083-26191]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[26093-26145]:IfStatement[26093-26145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26111-26145]:Block[26111-26145]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[26125-26135]:ReturnStatement[26125-26135]"
    }, {
      "left" : "return str.indexOf(searchChar);",
      "right" : "return str.indexOf(searchChar);",
      "info" : "ReturnStatement[26154-26185]:ReturnStatement[26154-26185]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27261-27267]:Modifier[27261-27267]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[27268-27274]:Modifier[27268-27274]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[27275-27278]:PrimitiveType[27275-27278]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[27279-27286]:SimpleName[27279-27286]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[27287-27297]:SingleVariableDeclaration[27287-27297]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[27299-27314]:SingleVariableDeclaration[27299-27314]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[27316-27328]:SingleVariableDeclaration[27316-27328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27330-27448]:Block[27330-27448]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[27340-27392]:IfStatement[27340-27392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27358-27392]:Block[27358-27392]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[27372-27382]:ReturnStatement[27372-27382]"
    }, {
      "left" : "return str.indexOf(searchChar, startPos);",
      "right" : "return str.indexOf(searchChar, startPos);",
      "info" : "ReturnStatement[27401-27442]:ReturnStatement[27401-27442]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28307-28313]:Modifier[28307-28313]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[28314-28320]:Modifier[28314-28320]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[28321-28324]:PrimitiveType[28321-28324]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[28325-28332]:SimpleName[28325-28332]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[28333-28343]:SingleVariableDeclaration[28333-28343]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[28345-28361]:SingleVariableDeclaration[28345-28361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28363-28490]:Block[28363-28490]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[28373-28445]:IfStatement[28373-28445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28411-28445]:Block[28411-28445]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[28425-28435]:ReturnStatement[28425-28435]"
    }, {
      "left" : "return str.indexOf(searchStr);",
      "right" : "return str.indexOf(searchStr);",
      "info" : "ReturnStatement[28454-28484]:ReturnStatement[28454-28484]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29760-29766]:Modifier[29760-29766]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[29767-29773]:Modifier[29767-29773]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[29774-29777]:PrimitiveType[29774-29777]"
    }, {
      "left" : "ordinalIndexOf",
      "right" : "ordinalIndexOf",
      "info" : "SimpleName[29778-29792]:SimpleName[29778-29792]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[29793-29803]:SingleVariableDeclaration[29793-29803]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[29805-29821]:SingleVariableDeclaration[29805-29821]"
    }, {
      "left" : "int ordinal",
      "right" : "int ordinal",
      "info" : "SingleVariableDeclaration[29823-29834]:SingleVariableDeclaration[29823-29834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29836-30303]:Block[29836-30303]"
    }, {
      "left" : "if (str == null || searchStr == null || ordinal <= 0)",
      "right" : "if (str == null || searchStr == null || ordinal <= 0)",
      "info" : "IfStatement[29846-29947]:IfStatement[29846-29947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29900-29947]:Block[29900-29947]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[29914-29937]:ReturnStatement[29914-29937]"
    }, {
      "left" : "if (searchStr.length() == 0)",
      "right" : "if (searchStr.length() == 0)",
      "info" : "IfStatement[29956-30018]:IfStatement[29956-30018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29985-30018]:Block[29985-30018]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[29999-30008]:ReturnStatement[29999-30008]"
    }, {
      "left" : "int found = 0;",
      "right" : "int found = 0;",
      "info" : "VariableDeclarationStatement[30027-30041]:VariableDeclarationStatement[30027-30041]"
    }, {
      "left" : "int index = INDEX_NOT_FOUND;",
      "right" : "int index = INDEX_NOT_FOUND;",
      "info" : "VariableDeclarationStatement[30050-30078]:VariableDeclarationStatement[30050-30078]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[30087-30275]:DoStatement[30087-30275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30090-30250]:Block[30090-30250]"
    }, {
      "left" : "index = str.indexOf(searchStr, index + 1);",
      "right" : "index = str.indexOf(searchStr, index + 1);",
      "info" : "ExpressionStatement[30104-30146]:ExpressionStatement[30104-30146]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[30159-30219]:IfStatement[30159-30219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30174-30219]:Block[30174-30219]"
    }, {
      "left" : "return index;",
      "right" : "return index;",
      "info" : "ReturnStatement[30192-30205]:ReturnStatement[30192-30205]"
    }, {
      "left" : "found++;",
      "right" : "found++;",
      "info" : "ExpressionStatement[30232-30240]:ExpressionStatement[30232-30240]"
    }, {
      "left" : "return index;",
      "right" : "return index;",
      "info" : "ReturnStatement[30284-30297]:ReturnStatement[30284-30297]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31669-31675]:Modifier[31669-31675]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31676-31682]:Modifier[31676-31682]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[31683-31686]:PrimitiveType[31683-31686]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[31687-31694]:SimpleName[31687-31694]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[31695-31705]:SingleVariableDeclaration[31695-31705]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[31707-31723]:SingleVariableDeclaration[31707-31723]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[31725-31737]:SingleVariableDeclaration[31725-31737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31739-32064]:Block[31739-32064]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[31749-31821]:IfStatement[31749-31821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31787-31821]:Block[31787-31821]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[31801-31811]:ReturnStatement[31801-31811]"
    }, {
      "left" : "if (searchStr.length() == 0 && startPos >= str.length())",
      "right" : "if (searchStr.length() == 0 && startPos >= str.length())",
      "info" : "IfStatement[31908-32009]:IfStatement[31908-32009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31965-32009]:Block[31965-32009]"
    }, {
      "left" : "return str.length();",
      "right" : "return str.length();",
      "info" : "ReturnStatement[31979-31999]:ReturnStatement[31979-31999]"
    }, {
      "left" : "return str.indexOf(searchStr, startPos);",
      "right" : "return str.indexOf(searchStr, startPos);",
      "info" : "ReturnStatement[32018-32058]:ReturnStatement[32018-32058]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32892-32898]:Modifier[32892-32898]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[32899-32905]:Modifier[32899-32905]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[32906-32909]:PrimitiveType[32906-32909]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[32910-32921]:SimpleName[32910-32921]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[32922-32932]:SingleVariableDeclaration[32922-32932]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[32934-32949]:SingleVariableDeclaration[32934-32949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32951-33063]:Block[32951-33063]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[32961-33013]:IfStatement[32961-33013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32979-33013]:Block[32979-33013]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[32993-33003]:ReturnStatement[32993-33003]"
    }, {
      "left" : "return str.lastIndexOf(searchChar);",
      "right" : "return str.lastIndexOf(searchChar);",
      "info" : "ReturnStatement[33022-33057]:ReturnStatement[33022-33057]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34253-34259]:Modifier[34253-34259]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[34260-34266]:Modifier[34260-34266]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[34267-34270]:PrimitiveType[34267-34270]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[34271-34282]:SimpleName[34271-34282]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[34283-34293]:SingleVariableDeclaration[34283-34293]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[34295-34310]:SingleVariableDeclaration[34295-34310]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[34312-34324]:SingleVariableDeclaration[34312-34324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34326-34448]:Block[34326-34448]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[34336-34388]:IfStatement[34336-34388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34354-34388]:Block[34354-34388]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[34368-34378]:ReturnStatement[34368-34378]"
    }, {
      "left" : "return str.lastIndexOf(searchChar, startPos);",
      "right" : "return str.lastIndexOf(searchChar, startPos);",
      "info" : "ReturnStatement[34397-34442]:ReturnStatement[34397-34442]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35337-35343]:Modifier[35337-35343]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[35344-35350]:Modifier[35344-35350]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[35351-35354]:PrimitiveType[35351-35354]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[35355-35366]:SimpleName[35355-35366]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[35367-35377]:SingleVariableDeclaration[35367-35377]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[35379-35395]:SingleVariableDeclaration[35379-35395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35397-35528]:Block[35397-35528]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[35407-35479]:IfStatement[35407-35479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35445-35479]:Block[35445-35479]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[35459-35469]:ReturnStatement[35459-35469]"
    }, {
      "left" : "return str.lastIndexOf(searchStr);",
      "right" : "return str.lastIndexOf(searchStr);",
      "info" : "ReturnStatement[35488-35522]:ReturnStatement[35488-35522]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36857-36863]:Modifier[36857-36863]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[36864-36870]:Modifier[36864-36870]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[36871-36874]:PrimitiveType[36871-36874]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[36875-36886]:SimpleName[36875-36886]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[36887-36897]:SingleVariableDeclaration[36887-36897]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[36899-36915]:SingleVariableDeclaration[36899-36915]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[36917-36929]:SingleVariableDeclaration[36917-36929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36931-37072]:Block[36931-37072]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[36941-37013]:IfStatement[36941-37013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36979-37013]:Block[36979-37013]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[36993-37003]:ReturnStatement[36993-37003]"
    }, {
      "left" : "return str.lastIndexOf(searchStr, startPos);",
      "right" : "return str.lastIndexOf(searchStr, startPos);",
      "info" : "ReturnStatement[37022-37066]:ReturnStatement[37022-37066]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37893-37899]:Modifier[37893-37899]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[37900-37906]:Modifier[37900-37906]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[37907-37914]:PrimitiveType[37907-37914]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[37915-37923]:SimpleName[37915-37923]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[37924-37934]:SingleVariableDeclaration[37924-37934]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[37936-37951]:SingleVariableDeclaration[37936-37951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37953-38069]:Block[37953-38069]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[37963-38018]:IfStatement[37963-38018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37981-38018]:Block[37981-38018]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[37995-38008]:ReturnStatement[37995-38008]"
    }, {
      "left" : "return str.indexOf(searchChar) >= 0;",
      "right" : "return str.indexOf(searchChar) >= 0;",
      "info" : "ReturnStatement[38027-38063]:ReturnStatement[38027-38063]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38888-38894]:Modifier[38888-38894]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[38895-38901]:Modifier[38895-38901]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[38902-38909]:PrimitiveType[38902-38909]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[38910-38918]:SimpleName[38910-38918]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[38919-38929]:SingleVariableDeclaration[38919-38929]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[38931-38947]:SingleVariableDeclaration[38931-38947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38949-39084]:Block[38949-39084]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[38959-39034]:IfStatement[38959-39034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38997-39034]:Block[38997-39034]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[39011-39024]:ReturnStatement[39011-39024]"
    }, {
      "left" : "return str.indexOf(searchStr) >= 0;",
      "right" : "return str.indexOf(searchStr) >= 0;",
      "info" : "ReturnStatement[39043-39078]:ReturnStatement[39043-39078]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40037-40043]:Modifier[40037-40043]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[40044-40050]:Modifier[40044-40050]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[40051-40058]:PrimitiveType[40051-40058]"
    }, {
      "left" : "containsIgnoreCase",
      "right" : "containsIgnoreCase",
      "info" : "SimpleName[40059-40077]:SimpleName[40059-40077]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[40078-40088]:SingleVariableDeclaration[40078-40088]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[40090-40106]:SingleVariableDeclaration[40090-40106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40108-40268]:Block[40108-40456]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[40118-40193]:IfStatement[40118-40193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40156-40193]:Block[40156-40193]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[40170-40183]:ReturnStatement[40170-40183]"
    }, {
      "left" : "str.toUpperCase()",
      "right" : "str.length()",
      "info" : "MethodInvocation[40218-40235]:MethodInvocation[40250-40262]"
    }, {
      "left" : "toUpperCase",
      "right" : "length",
      "info" : "SimpleName[40222-40233]:SimpleName[40254-40260]"
    }, {
      "left" : "searchStr.toUpperCase()",
      "right" : "searchStr.length()",
      "info" : "MethodInvocation[40237-40260]:MethodInvocation[40212-40230]"
    }, {
      "left" : "toUpperCase",
      "right" : "length",
      "info" : "SimpleName[40247-40258]:SimpleName[40222-40228]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41324-41330]:Modifier[41512-41518]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[41331-41337]:Modifier[41519-41525]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[41338-41341]:PrimitiveType[41526-41529]"
    }, {
      "left" : "indexOfAny",
      "right" : "indexOfAny",
      "info" : "SimpleName[41342-41352]:SimpleName[41530-41540]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[41353-41363]:SingleVariableDeclaration[41541-41551]"
    }, {
      "left" : "char[] searchChars",
      "right" : "char[] searchChars",
      "info" : "SingleVariableDeclaration[41365-41383]:SingleVariableDeclaration[41553-41571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41385-41768]:Block[41573-41956]"
    }, {
      "left" : "if (isEmpty(str) || ArrayUtils.isEmpty(searchChars))",
      "right" : "if (isEmpty(str) || ArrayUtils.isEmpty(searchChars))",
      "info" : "IfStatement[41395-41482]:IfStatement[41583-41670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41448-41482]:Block[41636-41670]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[41462-41472]:ReturnStatement[41650-41660]"
    }, {
      "left" : "for (int i = 0; i < str.length(); i++)",
      "right" : "for (int i = 0; i < str.length(); i++)",
      "info" : "ForStatement[41491-41743]:ForStatement[41679-41931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41530-41743]:Block[41718-41931]"
    }, {
      "left" : "char ch = str.charAt(i);",
      "right" : "char ch = str.charAt(i);",
      "info" : "VariableDeclarationStatement[41544-41568]:VariableDeclarationStatement[41732-41756]"
    }, {
      "left" : "for (int j = 0; j < searchChars.length; j++)",
      "right" : "for (int j = 0; j < searchChars.length; j++)",
      "info" : "ForStatement[41581-41733]:ForStatement[41769-41921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41626-41733]:Block[41814-41921]"
    }, {
      "left" : "if (searchChars[j] == ch)",
      "right" : "if (searchChars[j] == ch)",
      "info" : "IfStatement[41644-41719]:IfStatement[41832-41907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41670-41719]:Block[41858-41907]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[41692-41701]:ReturnStatement[41880-41889]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[41752-41762]:ReturnStatement[41940-41950]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42680-42686]:Modifier[42868-42874]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[42687-42693]:Modifier[42875-42881]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[42694-42697]:PrimitiveType[42882-42885]"
    }, {
      "left" : "indexOfAny",
      "right" : "indexOfAny",
      "info" : "SimpleName[42698-42708]:SimpleName[42886-42896]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[42709-42719]:SingleVariableDeclaration[42897-42907]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[42721-42739]:SingleVariableDeclaration[42909-42927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42741-42892]:Block[42929-43080]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(searchChars))",
      "right" : "if (isEmpty(str) || isEmpty(searchChars))",
      "info" : "IfStatement[42751-42827]:IfStatement[42939-43015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42793-42827]:Block[42981-43015]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[42807-42817]:ReturnStatement[42995-43005]"
    }, {
      "left" : "return indexOfAny(str, searchChars.toCharArray());",
      "right" : "return indexOfAny(str, searchChars.toCharArray());",
      "info" : "ReturnStatement[42836-42886]:ReturnStatement[43024-43074]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44009-44015]:Modifier[44197-44203]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[44016-44022]:Modifier[44204-44210]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[44023-44030]:PrimitiveType[44211-44218]"
    }, {
      "left" : "containsAny",
      "right" : "containsAny",
      "info" : "SimpleName[44031-44042]:SimpleName[44219-44230]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[44043-44053]:SingleVariableDeclaration[44231-44241]"
    }, {
      "left" : "char[] searchChars",
      "right" : "char[] searchChars",
      "info" : "SingleVariableDeclaration[44055-44073]:SingleVariableDeclaration[44243-44261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44075-44502]:Block[44263-44690]"
    }, {
      "left" : "if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0)",
      "right" : "if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0)",
      "info" : "IfStatement[44085-44210]:IfStatement[44273-44398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44173-44210]:Block[44361-44398]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44187-44200]:ReturnStatement[44375-44388]"
    }, {
      "left" : "for (int i = 0; i < str.length(); i++)",
      "right" : "for (int i = 0; i < str.length(); i++)",
      "info" : "ForStatement[44219-44474]:ForStatement[44407-44662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44258-44474]:Block[44446-44662]"
    }, {
      "left" : "char ch = str.charAt(i);",
      "right" : "char ch = str.charAt(i);",
      "info" : "VariableDeclarationStatement[44272-44296]:VariableDeclarationStatement[44460-44484]"
    }, {
      "left" : "for (int j = 0; j < searchChars.length; j++)",
      "right" : "for (int j = 0; j < searchChars.length; j++)",
      "info" : "ForStatement[44309-44464]:ForStatement[44497-44652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44354-44464]:Block[44542-44652]"
    }, {
      "left" : "if (searchChars[j] == ch)",
      "right" : "if (searchChars[j] == ch)",
      "info" : "IfStatement[44372-44450]:IfStatement[44560-44638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44398-44450]:Block[44586-44638]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[44420-44432]:ReturnStatement[44608-44620]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44483-44496]:ReturnStatement[44671-44684]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45535-45541]:Modifier[45723-45729]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[45542-45548]:Modifier[45730-45736]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[45549-45556]:PrimitiveType[45737-45744]"
    }, {
      "left" : "containsAny",
      "right" : "containsAny",
      "info" : "SimpleName[45557-45568]:SimpleName[45745-45756]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[45569-45579]:SingleVariableDeclaration[45757-45767]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[45581-45599]:SingleVariableDeclaration[45769-45787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45601-45739]:Block[45789-45927]"
    }, {
      "left" : "if (searchChars == null)",
      "right" : "if (searchChars == null)",
      "info" : "IfStatement[45611-45673]:IfStatement[45799-45861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45636-45673]:Block[45824-45861]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45650-45663]:ReturnStatement[45838-45851]"
    }, {
      "left" : "return containsAny(str, searchChars.toCharArray());",
      "right" : "return containsAny(str, searchChars.toCharArray());",
      "info" : "ReturnStatement[45682-45733]:ReturnStatement[45870-45921]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46788-46794]:Modifier[46976-46982]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[46795-46801]:Modifier[46983-46989]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[46802-46805]:PrimitiveType[46990-46993]"
    }, {
      "left" : "indexOfAnyBut",
      "right" : "indexOfAnyBut",
      "info" : "SimpleName[46806-46819]:SimpleName[46994-47007]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[46820-46830]:SingleVariableDeclaration[47008-47018]"
    }, {
      "left" : "char[] searchChars",
      "right" : "char[] searchChars",
      "info" : "SingleVariableDeclaration[46832-46850]:SingleVariableDeclaration[47020-47038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46852-47271]:Block[47040-47459]"
    }, {
      "left" : "if (isEmpty(str) || ArrayUtils.isEmpty(searchChars))",
      "right" : "if (isEmpty(str) || ArrayUtils.isEmpty(searchChars))",
      "info" : "IfStatement[46862-46949]:IfStatement[47050-47137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46915-46949]:Block[47103-47137]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[46929-46939]:ReturnStatement[47117-47127]"
    }, {
      "left" : "outer : for (int i = 0; i < str.length(); i++) {\n            char ch = str.charAt(i);\n            for (int j = 0; j < searchChars.length; j++) {\n                if (searchChars[j] == ch) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "right" : "outer : for (int i = 0; i < str.length(); i++) {\n            char ch = str.charAt(i);\n            for (int j = 0; j < searchChars.length; j++) {\n                if (searchChars[j] == ch) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "info" : "LabeledStatement[46958-47246]:LabeledStatement[47146-47434]"
    }, {
      "left" : "for (int i = 0; i < str.length(); i++)",
      "right" : "for (int i = 0; i < str.length(); i++)",
      "info" : "ForStatement[46966-47246]:ForStatement[47154-47434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47005-47246]:Block[47193-47434]"
    }, {
      "left" : "char ch = str.charAt(i);",
      "right" : "char ch = str.charAt(i);",
      "info" : "VariableDeclarationStatement[47019-47043]:VariableDeclarationStatement[47207-47231]"
    }, {
      "left" : "for (int j = 0; j < searchChars.length; j++)",
      "right" : "for (int j = 0; j < searchChars.length; j++)",
      "info" : "ForStatement[47056-47214]:ForStatement[47244-47402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47101-47214]:Block[47289-47402]"
    }, {
      "left" : "if (searchChars[j] == ch)",
      "right" : "if (searchChars[j] == ch)",
      "info" : "IfStatement[47119-47200]:IfStatement[47307-47388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47145-47200]:Block[47333-47388]"
    }, {
      "left" : "continue outer;",
      "right" : "continue outer;",
      "info" : "ContinueStatement[47167-47182]:ContinueStatement[47355-47370]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[47227-47236]:ReturnStatement[47415-47424]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[47255-47265]:ReturnStatement[47443-47453]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48208-48214]:Modifier[48396-48402]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[48215-48221]:Modifier[48403-48409]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[48222-48225]:PrimitiveType[48410-48413]"
    }, {
      "left" : "indexOfAnyBut",
      "right" : "indexOfAnyBut",
      "info" : "SimpleName[48226-48239]:SimpleName[48414-48427]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[48240-48250]:SingleVariableDeclaration[48428-48438]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[48252-48270]:SingleVariableDeclaration[48440-48458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48272-48540]:Block[48460-48728]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(searchChars))",
      "right" : "if (isEmpty(str) || isEmpty(searchChars))",
      "info" : "IfStatement[48282-48358]:IfStatement[48470-48546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48324-48358]:Block[48512-48546]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[48338-48348]:ReturnStatement[48526-48536]"
    }, {
      "left" : "for (int i = 0; i < str.length(); i++)",
      "right" : "for (int i = 0; i < str.length(); i++)",
      "info" : "ForStatement[48367-48515]:ForStatement[48555-48703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48406-48515]:Block[48594-48703]"
    }, {
      "left" : "if (searchChars.indexOf(str.charAt(i)) < 0)",
      "right" : "if (searchChars.indexOf(str.charAt(i)) < 0)",
      "info" : "IfStatement[48420-48505]:IfStatement[48608-48693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48464-48505]:Block[48652-48693]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[48482-48491]:ReturnStatement[48670-48679]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[48524-48534]:ReturnStatement[48712-48722]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49554-49560]:Modifier[49742-49748]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[49561-49567]:Modifier[49749-49755]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[49568-49575]:PrimitiveType[49756-49763]"
    }, {
      "left" : "containsOnly",
      "right" : "containsOnly",
      "info" : "SimpleName[49576-49588]:SimpleName[49764-49776]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[49589-49599]:SingleVariableDeclaration[49777-49787]"
    }, {
      "left" : "char[] valid",
      "right" : "char[] valid",
      "info" : "SingleVariableDeclaration[49601-49613]:SingleVariableDeclaration[49789-49801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49615-49965]:Block[49803-50153]"
    }, {
      "left" : "if ((valid == null) || (str == null))",
      "right" : "if ((valid == null) || (str == null))",
      "info" : "IfStatement[49699-49774]:IfStatement[49887-49962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49737-49774]:Block[49925-49962]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[49751-49764]:ReturnStatement[49939-49952]"
    }, {
      "left" : "if (str.length() == 0)",
      "right" : "if (str.length() == 0)",
      "info" : "IfStatement[49783-49842]:IfStatement[49971-50030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49806-49842]:Block[49994-50030]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[49820-49832]:ReturnStatement[50008-50020]"
    }, {
      "left" : "if (valid.length == 0)",
      "right" : "if (valid.length == 0)",
      "info" : "IfStatement[49851-49911]:IfStatement[50039-50099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49874-49911]:Block[50062-50099]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[49888-49901]:ReturnStatement[50076-50089]"
    }, {
      "left" : "return indexOfAnyBut(str, valid) == -1;",
      "right" : "return indexOfAnyBut(str, valid) == -1;",
      "info" : "ReturnStatement[49920-49959]:ReturnStatement[50108-50147]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50905-50911]:Modifier[51093-51099]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[50912-50918]:Modifier[51100-51106]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[50919-50926]:PrimitiveType[51107-51114]"
    }, {
      "left" : "containsOnly",
      "right" : "containsOnly",
      "info" : "SimpleName[50927-50939]:SimpleName[51115-51127]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[50940-50950]:SingleVariableDeclaration[51128-51138]"
    }, {
      "left" : "String validChars",
      "right" : "String validChars",
      "info" : "SingleVariableDeclaration[50952-50969]:SingleVariableDeclaration[51140-51157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50971-51123]:Block[51159-51311]"
    }, {
      "left" : "if (str == null || validChars == null)",
      "right" : "if (str == null || validChars == null)",
      "info" : "IfStatement[50981-51057]:IfStatement[51169-51245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51020-51057]:Block[51208-51245]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[51034-51047]:ReturnStatement[51222-51235]"
    }, {
      "left" : "return containsOnly(str, validChars.toCharArray());",
      "right" : "return containsOnly(str, validChars.toCharArray());",
      "info" : "ReturnStatement[51066-51117]:ReturnStatement[51254-51305]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52157-52163]:Modifier[52345-52351]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[52164-52170]:Modifier[52352-52358]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[52171-52178]:PrimitiveType[52359-52366]"
    }, {
      "left" : "containsNone",
      "right" : "containsNone",
      "info" : "SimpleName[52179-52191]:SimpleName[52367-52379]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[52192-52202]:SingleVariableDeclaration[52380-52390]"
    }, {
      "left" : "char[] invalidChars",
      "right" : "char[] invalidChars",
      "info" : "SingleVariableDeclaration[52204-52223]:SingleVariableDeclaration[52392-52411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52225-52672]:Block[52413-52860]"
    }, {
      "left" : "if (str == null || invalidChars == null)",
      "right" : "if (str == null || invalidChars == null)",
      "info" : "IfStatement[52235-52312]:IfStatement[52423-52500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52276-52312]:Block[52464-52500]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52290-52302]:ReturnStatement[52478-52490]"
    }, {
      "left" : "int strSize = str.length();",
      "right" : "int strSize = str.length();",
      "info" : "VariableDeclarationStatement[52321-52348]:VariableDeclarationStatement[52509-52536]"
    }, {
      "left" : "int validSize = invalidChars.length;",
      "right" : "int validSize = invalidChars.length;",
      "info" : "VariableDeclarationStatement[52357-52393]:VariableDeclarationStatement[52545-52581]"
    }, {
      "left" : "for (int i = 0; i < strSize; i++)",
      "right" : "for (int i = 0; i < strSize; i++)",
      "info" : "ForStatement[52402-52645]:ForStatement[52590-52833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52436-52645]:Block[52624-52833]"
    }, {
      "left" : "char ch = str.charAt(i);",
      "right" : "char ch = str.charAt(i);",
      "info" : "VariableDeclarationStatement[52450-52474]:VariableDeclarationStatement[52638-52662]"
    }, {
      "left" : "for (int j = 0; j < validSize; j++)",
      "right" : "for (int j = 0; j < validSize; j++)",
      "info" : "ForStatement[52487-52635]:ForStatement[52675-52823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52523-52635]:Block[52711-52823]"
    }, {
      "left" : "if (invalidChars[j] == ch)",
      "right" : "if (invalidChars[j] == ch)",
      "info" : "IfStatement[52541-52621]:IfStatement[52729-52809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52568-52621]:Block[52756-52809]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52590-52603]:ReturnStatement[52778-52791]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52654-52666]:ReturnStatement[52842-52854]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53608-53614]:Modifier[53796-53802]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[53615-53621]:Modifier[53803-53809]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[53622-53629]:PrimitiveType[53810-53817]"
    }, {
      "left" : "containsNone",
      "right" : "containsNone",
      "info" : "SimpleName[53630-53642]:SimpleName[53818-53830]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[53643-53653]:SingleVariableDeclaration[53831-53841]"
    }, {
      "left" : "String invalidChars",
      "right" : "String invalidChars",
      "info" : "SingleVariableDeclaration[53655-53674]:SingleVariableDeclaration[53843-53862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53676-53831]:Block[53864-54019]"
    }, {
      "left" : "if (str == null || invalidChars == null)",
      "right" : "if (str == null || invalidChars == null)",
      "info" : "IfStatement[53686-53763]:IfStatement[53874-53951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53727-53763]:Block[53915-53951]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[53741-53753]:ReturnStatement[53929-53941]"
    }, {
      "left" : "return containsNone(str, invalidChars.toCharArray());",
      "right" : "return containsNone(str, invalidChars.toCharArray());",
      "info" : "ReturnStatement[53772-53825]:ReturnStatement[53960-54013]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55285-55291]:Modifier[55473-55479]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[55292-55298]:Modifier[55480-55486]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[55299-55302]:PrimitiveType[55487-55490]"
    }, {
      "left" : "indexOfAny",
      "right" : "indexOfAny",
      "info" : "SimpleName[55303-55313]:SimpleName[55491-55501]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[55314-55324]:SingleVariableDeclaration[55502-55512]"
    }, {
      "left" : "String[] searchStrs",
      "right" : "String[] searchStrs",
      "info" : "SingleVariableDeclaration[55326-55345]:SingleVariableDeclaration[55514-55533]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55347-55988]:Block[55535-56176]"
    }, {
      "left" : "if ((str == null) || (searchStrs == null))",
      "right" : "if ((str == null) || (searchStrs == null))",
      "info" : "IfStatement[55357-55434]:IfStatement[55545-55622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55400-55434]:Block[55588-55622]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[55414-55424]:ReturnStatement[55602-55612]"
    }, {
      "left" : "int sz = searchStrs.length;",
      "right" : "int sz = searchStrs.length;",
      "info" : "VariableDeclarationStatement[55443-55470]:VariableDeclarationStatement[55631-55658]"
    }, {
      "left" : "int ret = Integer.MAX_VALUE;",
      "right" : "int ret = Integer.MAX_VALUE;",
      "info" : "VariableDeclarationStatement[55532-55560]:VariableDeclarationStatement[55720-55748]"
    }, {
      "left" : "int tmp = 0;",
      "right" : "int tmp = 0;",
      "info" : "VariableDeclarationStatement[55570-55582]:VariableDeclarationStatement[55758-55770]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[55591-55927]:ForStatement[55779-56115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55620-55927]:Block[55808-56115]"
    }, {
      "left" : "String search = searchStrs[i];",
      "right" : "String search = searchStrs[i];",
      "info" : "VariableDeclarationStatement[55634-55664]:VariableDeclarationStatement[55822-55852]"
    }, {
      "left" : "if (search == null)",
      "right" : "if (search == null)",
      "info" : "IfStatement[55677-55738]:IfStatement[55865-55926]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55697-55738]:Block[55885-55926]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[55715-55724]:ContinueStatement[55903-55912]"
    }, {
      "left" : "tmp = str.indexOf(search);",
      "right" : "tmp = str.indexOf(search);",
      "info" : "ExpressionStatement[55751-55777]:ExpressionStatement[55939-55965]"
    }, {
      "left" : "if (tmp == -1)",
      "right" : "if (tmp == -1)",
      "info" : "IfStatement[55790-55846]:IfStatement[55978-56034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55805-55846]:Block[55993-56034]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[55823-55832]:ContinueStatement[56011-56020]"
    }, {
      "left" : "if (tmp < ret)",
      "right" : "if (tmp < ret)",
      "info" : "IfStatement[55860-55917]:IfStatement[56048-56105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55875-55917]:Block[56063-56105]"
    }, {
      "left" : "ret = tmp;",
      "right" : "ret = tmp;",
      "info" : "ExpressionStatement[55893-55903]:ExpressionStatement[56081-56091]"
    }, {
      "left" : "return (ret == Integer.MAX_VALUE) ? -1 : ret;",
      "right" : "return (ret == Integer.MAX_VALUE) ? -1 : ret;",
      "info" : "ReturnStatement[55937-55982]:ReturnStatement[56125-56170]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57300-57306]:Modifier[57488-57494]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[57307-57313]:Modifier[57495-57501]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[57314-57317]:PrimitiveType[57502-57505]"
    }, {
      "left" : "lastIndexOfAny",
      "right" : "lastIndexOfAny",
      "info" : "SimpleName[57318-57332]:SimpleName[57506-57520]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[57333-57343]:SingleVariableDeclaration[57521-57531]"
    }, {
      "left" : "String[] searchStrs",
      "right" : "String[] searchStrs",
      "info" : "SingleVariableDeclaration[57345-57364]:SingleVariableDeclaration[57533-57552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57366-57837]:Block[57554-58025]"
    }, {
      "left" : "if ((str == null) || (searchStrs == null))",
      "right" : "if ((str == null) || (searchStrs == null))",
      "info" : "IfStatement[57376-57453]:IfStatement[57564-57641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57419-57453]:Block[57607-57641]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[57433-57443]:ReturnStatement[57621-57631]"
    }, {
      "left" : "int sz = searchStrs.length;",
      "right" : "int sz = searchStrs.length;",
      "info" : "VariableDeclarationStatement[57462-57489]:VariableDeclarationStatement[57650-57677]"
    }, {
      "left" : "int ret = -1;",
      "right" : "int ret = -1;",
      "info" : "VariableDeclarationStatement[57498-57511]:VariableDeclarationStatement[57686-57699]"
    }, {
      "left" : "int tmp = 0;",
      "right" : "int tmp = 0;",
      "info" : "VariableDeclarationStatement[57520-57532]:VariableDeclarationStatement[57708-57720]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[57541-57811]:ForStatement[57729-57999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57570-57811]:Block[57758-57999]"
    }, {
      "left" : "String search = searchStrs[i];",
      "right" : "String search = searchStrs[i];",
      "info" : "VariableDeclarationStatement[57584-57614]:VariableDeclarationStatement[57772-57802]"
    }, {
      "left" : "if (search == null)",
      "right" : "if (search == null)",
      "info" : "IfStatement[57627-57688]:IfStatement[57815-57876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57647-57688]:Block[57835-57876]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[57665-57674]:ContinueStatement[57853-57862]"
    }, {
      "left" : "tmp = str.lastIndexOf(search);",
      "right" : "tmp = str.lastIndexOf(search);",
      "info" : "ExpressionStatement[57701-57731]:ExpressionStatement[57889-57919]"
    }, {
      "left" : "if (tmp > ret)",
      "right" : "if (tmp > ret)",
      "info" : "IfStatement[57744-57801]:IfStatement[57932-57989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57759-57801]:Block[57947-57989]"
    }, {
      "left" : "ret = tmp;",
      "right" : "ret = tmp;",
      "info" : "ExpressionStatement[57777-57787]:ExpressionStatement[57965-57975]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[57820-57831]:ReturnStatement[58008-58019]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58939-58945]:Modifier[59127-59133]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[58946-58952]:Modifier[59134-59140]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[58953-58959]:SimpleType[59141-59147]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[58960-58969]:SimpleName[59148-59157]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[58970-58980]:SingleVariableDeclaration[59158-59168]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[58982-58991]:SingleVariableDeclaration[59170-59179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58993-59398]:Block[59181-59586]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[59003-59056]:IfStatement[59191-59244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59020-59056]:Block[59208-59244]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[59034-59046]:ReturnStatement[59222-59234]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[59125-59223]:IfStatement[59313-59411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59140-59223]:Block[59328-59411]"
    }, {
      "left" : "start = str.length() + start;",
      "right" : "start = str.length() + start;",
      "info" : "ExpressionStatement[59154-59183]:ExpressionStatement[59342-59371]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[59233-59282]:IfStatement[59421-59470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59248-59282]:Block[59436-59470]"
    }, {
      "left" : "start = 0;",
      "right" : "start = 0;",
      "info" : "ExpressionStatement[59262-59272]:ExpressionStatement[59450-59460]"
    }, {
      "left" : "if (start > str.length())",
      "right" : "if (start > str.length())",
      "info" : "IfStatement[59291-59354]:IfStatement[59479-59542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59317-59354]:Block[59505-59542]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[59331-59344]:ReturnStatement[59519-59532]"
    }, {
      "left" : "return str.substring(start);",
      "right" : "return str.substring(start);",
      "info" : "ReturnStatement[59364-59392]:ReturnStatement[59552-59580]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61080-61086]:Modifier[61268-61274]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[61087-61093]:Modifier[61275-61281]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[61094-61100]:SimpleType[61282-61288]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[61101-61110]:SimpleName[61289-61298]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[61111-61121]:SingleVariableDeclaration[61299-61309]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[61123-61132]:SingleVariableDeclaration[61311-61320]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[61134-61141]:SingleVariableDeclaration[61322-61329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61143-61824]:Block[61331-62012]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[61153-61206]:IfStatement[61341-61394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61170-61206]:Block[61358-61394]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[61184-61196]:ReturnStatement[61372-61384]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[61244-61334]:IfStatement[61432-61522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61257-61334]:Block[61445-61522]"
    }, {
      "left" : "end = str.length() + end;",
      "right" : "end = str.length() + end;",
      "info" : "ExpressionStatement[61271-61296]:ExpressionStatement[61459-61484]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[61343-61441]:IfStatement[61531-61629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61358-61441]:Block[61546-61629]"
    }, {
      "left" : "start = str.length() + start;",
      "right" : "start = str.length() + start;",
      "info" : "ExpressionStatement[61372-61401]:ExpressionStatement[61560-61589]"
    }, {
      "left" : "if (end > str.length())",
      "right" : "if (end > str.length())",
      "info" : "IfStatement[61480-61547]:IfStatement[61668-61735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61504-61547]:Block[61692-61735]"
    }, {
      "left" : "end = str.length();",
      "right" : "end = str.length();",
      "info" : "ExpressionStatement[61518-61537]:ExpressionStatement[61706-61725]"
    }, {
      "left" : "if (start > end)",
      "right" : "if (start > end)",
      "info" : "IfStatement[61608-61662]:IfStatement[61796-61850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61625-61662]:Block[61813-61850]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[61639-61652]:ReturnStatement[61827-61840]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[61672-61721]:IfStatement[61860-61909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61687-61721]:Block[61875-61909]"
    }, {
      "left" : "start = 0;",
      "right" : "start = 0;",
      "info" : "ExpressionStatement[61701-61711]:ExpressionStatement[61889-61899]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[61730-61775]:IfStatement[61918-61963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61743-61775]:Block[61931-61963]"
    }, {
      "left" : "end = 0;",
      "right" : "end = 0;",
      "info" : "ExpressionStatement[61757-61765]:ExpressionStatement[61945-61953]"
    }, {
      "left" : "return str.substring(start, end);",
      "right" : "return str.substring(start, end);",
      "info" : "ReturnStatement[61785-61818]:ReturnStatement[61973-62006]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62764-62770]:Modifier[62952-62958]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[62771-62777]:Modifier[62959-62965]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[62778-62784]:SimpleType[62966-62972]"
    }, {
      "left" : "left",
      "right" : "left",
      "info" : "SimpleName[62785-62789]:SimpleName[62973-62977]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[62790-62800]:SingleVariableDeclaration[62978-62988]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[62802-62809]:SingleVariableDeclaration[62990-62997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62811-63046]:Block[62999-63234]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[62821-62874]:IfStatement[63009-63062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62838-62874]:Block[63026-63062]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[62852-62864]:ReturnStatement[63040-63052]"
    }, {
      "left" : "if (len < 0)",
      "right" : "if (len < 0)",
      "info" : "IfStatement[62883-62933]:IfStatement[63071-63121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62896-62933]:Block[63084-63121]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[62910-62923]:ReturnStatement[63098-63111]"
    }, {
      "left" : "if (str.length() <= len)",
      "right" : "if (str.length() <= len)",
      "info" : "IfStatement[62942-63002]:IfStatement[63130-63190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62967-63002]:Block[63155-63190]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[62981-62992]:ReturnStatement[63169-63180]"
    }, {
      "left" : "return str.substring(0, len);",
      "right" : "return str.substring(0, len);",
      "info" : "ReturnStatement[63011-63040]:ReturnStatement[63199-63228]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63898-63904]:Modifier[64086-64092]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[63905-63911]:Modifier[64093-64099]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[63912-63918]:SimpleType[64100-64106]"
    }, {
      "left" : "right",
      "right" : "right",
      "info" : "SimpleName[63919-63924]:SimpleName[64107-64112]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[63925-63935]:SingleVariableDeclaration[64113-64123]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[63937-63944]:SingleVariableDeclaration[64125-64132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63946-64193]:Block[64134-64381]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[63956-64009]:IfStatement[64144-64197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63973-64009]:Block[64161-64197]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[63987-63999]:ReturnStatement[64175-64187]"
    }, {
      "left" : "if (len < 0)",
      "right" : "if (len < 0)",
      "info" : "IfStatement[64018-64068]:IfStatement[64206-64256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64031-64068]:Block[64219-64256]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[64045-64058]:ReturnStatement[64233-64246]"
    }, {
      "left" : "if (str.length() <= len)",
      "right" : "if (str.length() <= len)",
      "info" : "IfStatement[64077-64137]:IfStatement[64265-64325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64102-64137]:Block[64290-64325]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[64116-64127]:ReturnStatement[64304-64315]"
    }, {
      "left" : "return str.substring(str.length() - len);",
      "right" : "return str.substring(str.length() - len);",
      "info" : "ReturnStatement[64146-64187]:ReturnStatement[64334-64375]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65258-65264]:Modifier[65446-65452]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[65265-65271]:Modifier[65453-65459]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[65272-65278]:SimpleType[65460-65466]"
    }, {
      "left" : "mid",
      "right" : "mid",
      "info" : "SimpleName[65279-65282]:SimpleName[65467-65470]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[65283-65293]:SingleVariableDeclaration[65471-65481]"
    }, {
      "left" : "int pos",
      "right" : "int pos",
      "info" : "SingleVariableDeclaration[65295-65302]:SingleVariableDeclaration[65483-65490]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[65304-65311]:SingleVariableDeclaration[65492-65499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65313-65655]:Block[65501-65843]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[65323-65376]:IfStatement[65511-65564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65340-65376]:Block[65528-65564]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[65354-65366]:ReturnStatement[65542-65554]"
    }, {
      "left" : "if (len < 0 || pos > str.length())",
      "right" : "if (len < 0 || pos > str.length())",
      "info" : "IfStatement[65385-65457]:IfStatement[65573-65645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65420-65457]:Block[65608-65645]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[65434-65447]:ReturnStatement[65622-65635]"
    }, {
      "left" : "if (pos < 0)",
      "right" : "if (pos < 0)",
      "info" : "IfStatement[65466-65511]:IfStatement[65654-65699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65479-65511]:Block[65667-65699]"
    }, {
      "left" : "pos = 0;",
      "right" : "pos = 0;",
      "info" : "ExpressionStatement[65493-65501]:ExpressionStatement[65681-65689]"
    }, {
      "left" : "if (str.length() <= (pos + len))",
      "right" : "if (str.length() <= (pos + len))",
      "info" : "IfStatement[65520-65603]:IfStatement[65708-65791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65553-65603]:Block[65741-65791]"
    }, {
      "left" : "return str.substring(pos);",
      "right" : "return str.substring(pos);",
      "info" : "ReturnStatement[65567-65593]:ReturnStatement[65755-65781]"
    }, {
      "left" : "return str.substring(pos, pos + len);",
      "right" : "return str.substring(pos, pos + len);",
      "info" : "ReturnStatement[65612-65649]:ReturnStatement[65800-65837]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66950-66956]:Modifier[67138-67144]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[66957-66963]:Modifier[67145-67151]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[66964-66970]:SimpleType[67152-67158]"
    }, {
      "left" : "substringBefore",
      "right" : "substringBefore",
      "info" : "SimpleName[66971-66986]:SimpleName[67159-67174]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[66987-66997]:SingleVariableDeclaration[67175-67185]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[66999-67015]:SingleVariableDeclaration[67187-67203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67017-67321]:Block[67205-67509]"
    }, {
      "left" : "if (isEmpty(str) || separator == null)",
      "right" : "if (isEmpty(str) || separator == null)",
      "info" : "IfStatement[67027-67101]:IfStatement[67215-67289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67066-67101]:Block[67254-67289]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[67080-67091]:ReturnStatement[67268-67279]"
    }, {
      "left" : "if (separator.length() == 0)",
      "right" : "if (separator.length() == 0)",
      "info" : "IfStatement[67110-67176]:IfStatement[67298-67364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67139-67176]:Block[67327-67364]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[67153-67166]:ReturnStatement[67341-67354]"
    }, {
      "left" : "int pos = str.indexOf(separator);",
      "right" : "int pos = str.indexOf(separator);",
      "info" : "VariableDeclarationStatement[67185-67218]:VariableDeclarationStatement[67373-67406]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[67227-67277]:IfStatement[67415-67465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67242-67277]:Block[67430-67465]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[67256-67267]:ReturnStatement[67444-67455]"
    }, {
      "left" : "return str.substring(0, pos);",
      "right" : "return str.substring(0, pos);",
      "info" : "ReturnStatement[67286-67315]:ReturnStatement[67474-67503]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68541-68547]:Modifier[68729-68735]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[68548-68554]:Modifier[68736-68742]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[68555-68561]:SimpleType[68743-68749]"
    }, {
      "left" : "substringAfter",
      "right" : "substringAfter",
      "info" : "SimpleName[68562-68576]:SimpleName[68750-68764]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[68577-68587]:SingleVariableDeclaration[68765-68775]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[68589-68605]:SingleVariableDeclaration[68777-68793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68607-68904]:Block[68795-69092]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[68617-68670]:IfStatement[68805-68858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68635-68670]:Block[68823-68858]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[68649-68660]:ReturnStatement[68837-68848]"
    }, {
      "left" : "if (separator == null)",
      "right" : "if (separator == null)",
      "info" : "IfStatement[68679-68739]:IfStatement[68867-68927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68702-68739]:Block[68890-68927]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[68716-68729]:ReturnStatement[68904-68917]"
    }, {
      "left" : "int pos = str.indexOf(separator);",
      "right" : "int pos = str.indexOf(separator);",
      "info" : "VariableDeclarationStatement[68748-68781]:VariableDeclarationStatement[68936-68969]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[68790-68842]:IfStatement[68978-69030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68805-68842]:Block[68993-69030]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[68819-68832]:ReturnStatement[69007-69020]"
    }, {
      "left" : "return str.substring(pos + separator.length());",
      "right" : "return str.substring(pos + separator.length());",
      "info" : "ReturnStatement[68851-68898]:ReturnStatement[69039-69086]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70122-70128]:Modifier[70310-70316]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[70129-70135]:Modifier[70317-70323]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[70136-70142]:SimpleType[70324-70330]"
    }, {
      "left" : "substringBeforeLast",
      "right" : "substringBeforeLast",
      "info" : "SimpleName[70143-70162]:SimpleName[70331-70350]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[70163-70173]:SingleVariableDeclaration[70351-70361]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[70175-70191]:SingleVariableDeclaration[70363-70379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70193-70427]:Block[70381-70615]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(separator))",
      "right" : "if (isEmpty(str) || isEmpty(separator))",
      "info" : "IfStatement[70203-70278]:IfStatement[70391-70466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70243-70278]:Block[70431-70466]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[70257-70268]:ReturnStatement[70445-70456]"
    }, {
      "left" : "int pos = str.lastIndexOf(separator);",
      "right" : "int pos = str.lastIndexOf(separator);",
      "info" : "VariableDeclarationStatement[70287-70324]:VariableDeclarationStatement[70475-70512]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[70333-70383]:IfStatement[70521-70571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70348-70383]:Block[70536-70571]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[70362-70373]:ReturnStatement[70550-70561]"
    }, {
      "left" : "return str.substring(0, pos);",
      "right" : "return str.substring(0, pos);",
      "info" : "ReturnStatement[70392-70421]:ReturnStatement[70580-70609]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[71739-71745]:Modifier[71927-71933]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[71746-71752]:Modifier[71934-71940]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[71753-71759]:SimpleType[71941-71947]"
    }, {
      "left" : "substringAfterLast",
      "right" : "substringAfterLast",
      "info" : "SimpleName[71760-71778]:SimpleName[71948-71966]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[71779-71789]:SingleVariableDeclaration[71967-71977]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[71791-71807]:SingleVariableDeclaration[71979-71995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71809-72157]:Block[71997-72345]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[71819-71872]:IfStatement[72007-72060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71837-71872]:Block[72025-72060]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[71851-71862]:ReturnStatement[72039-72050]"
    }, {
      "left" : "if (isEmpty(separator))",
      "right" : "if (isEmpty(separator))",
      "info" : "IfStatement[71881-71942]:IfStatement[72069-72130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71905-71942]:Block[72093-72130]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[71919-71932]:ReturnStatement[72107-72120]"
    }, {
      "left" : "int pos = str.lastIndexOf(separator);",
      "right" : "int pos = str.lastIndexOf(separator);",
      "info" : "VariableDeclarationStatement[71951-71988]:VariableDeclarationStatement[72139-72176]"
    }, {
      "left" : "if (pos == -1 || pos == (str.length() - separator.length()))",
      "right" : "if (pos == -1 || pos == (str.length() - separator.length()))",
      "info" : "IfStatement[71997-72095]:IfStatement[72185-72283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72058-72095]:Block[72246-72283]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[72072-72085]:ReturnStatement[72260-72273]"
    }, {
      "left" : "return str.substring(pos + separator.length());",
      "right" : "return str.substring(pos + separator.length());",
      "info" : "ReturnStatement[72104-72151]:ReturnStatement[72292-72339]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73154-73160]:Modifier[73342-73348]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[73161-73167]:Modifier[73349-73355]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[73168-73174]:SimpleType[73356-73362]"
    }, {
      "left" : "substringBetween",
      "right" : "substringBetween",
      "info" : "SimpleName[73175-73191]:SimpleName[73363-73379]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[73192-73202]:SingleVariableDeclaration[73380-73390]"
    }, {
      "left" : "String tag",
      "right" : "String tag",
      "info" : "SingleVariableDeclaration[73204-73214]:SingleVariableDeclaration[73392-73402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73216-73271]:Block[73404-73459]"
    }, {
      "left" : "return substringBetween(str, tag, tag);",
      "right" : "return substringBetween(str, tag, tag);",
      "info" : "ReturnStatement[73226-73265]:ReturnStatement[73414-73453]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74580-74586]:Modifier[74768-74774]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[74587-74593]:Modifier[74775-74781]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[74594-74600]:SimpleType[74782-74788]"
    }, {
      "left" : "substringBetween",
      "right" : "substringBetween",
      "info" : "SimpleName[74601-74617]:SimpleName[74789-74805]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[74618-74628]:SingleVariableDeclaration[74806-74816]"
    }, {
      "left" : "String open",
      "right" : "String open",
      "info" : "SingleVariableDeclaration[74630-74641]:SingleVariableDeclaration[74818-74829]"
    }, {
      "left" : "String close",
      "right" : "String close",
      "info" : "SingleVariableDeclaration[74643-74655]:SingleVariableDeclaration[74831-74843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74657-75030]:Block[74845-75218]"
    }, {
      "left" : "if (str == null || open == null || close == null)",
      "right" : "if (str == null || open == null || close == null)",
      "info" : "IfStatement[74667-74753]:IfStatement[74855-74941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74717-74753]:Block[74905-74941]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[74731-74743]:ReturnStatement[74919-74931]"
    }, {
      "left" : "int start = str.indexOf(open);",
      "right" : "int start = str.indexOf(open);",
      "info" : "VariableDeclarationStatement[74762-74792]:VariableDeclarationStatement[74950-74980]"
    }, {
      "left" : "if (start != -1)",
      "right" : "if (start != -1)",
      "info" : "IfStatement[74801-75003]:IfStatement[74989-75191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74818-75003]:Block[75006-75191]"
    }, {
      "left" : "int end = str.indexOf(close, start + open.length());",
      "right" : "int end = str.indexOf(close, start + open.length());",
      "info" : "VariableDeclarationStatement[74832-74884]:VariableDeclarationStatement[75020-75072]"
    }, {
      "left" : "if (end != -1)",
      "right" : "if (end != -1)",
      "info" : "IfStatement[74897-74993]:IfStatement[75085-75181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74912-74993]:Block[75100-75181]"
    }, {
      "left" : "return str.substring(start + open.length(), end);",
      "right" : "return str.substring(start + open.length(), end);",
      "info" : "ReturnStatement[74930-74979]:ReturnStatement[75118-75167]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[75012-75024]:ReturnStatement[75200-75212]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[76168-76174]:Modifier[76356-76362]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[76175-76181]:Modifier[76363-76369]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[76182-76190]:ArrayType[76370-76378]"
    }, {
      "left" : "substringsBetween",
      "right" : "substringsBetween",
      "info" : "SimpleName[76191-76208]:SimpleName[76379-76396]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[76209-76219]:SingleVariableDeclaration[76397-76407]"
    }, {
      "left" : "String open",
      "right" : "String open",
      "info" : "SingleVariableDeclaration[76221-76232]:SingleVariableDeclaration[76409-76420]"
    }, {
      "left" : "String close",
      "right" : "String close",
      "info" : "SingleVariableDeclaration[76234-76246]:SingleVariableDeclaration[76422-76434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76248-77139]:Block[76436-77327]"
    }, {
      "left" : "if (str == null || isEmpty(open) || isEmpty(close))",
      "right" : "if (str == null || isEmpty(open) || isEmpty(close))",
      "info" : "IfStatement[76258-76346]:IfStatement[76446-76534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76310-76346]:Block[76498-76534]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[76324-76336]:ReturnStatement[76512-76524]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[76355-76381]:VariableDeclarationStatement[76543-76569]"
    }, {
      "left" : "if (strLen == 0)",
      "right" : "if (strLen == 0)",
      "info" : "IfStatement[76390-76468]:IfStatement[76578-76656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76407-76468]:Block[76595-76656]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[76421-76458]:ReturnStatement[76609-76646]"
    }, {
      "left" : "int closeLen = close.length();",
      "right" : "int closeLen = close.length();",
      "info" : "VariableDeclarationStatement[76477-76507]:VariableDeclarationStatement[76665-76695]"
    }, {
      "left" : "int openLen = open.length();",
      "right" : "int openLen = open.length();",
      "info" : "VariableDeclarationStatement[76516-76544]:VariableDeclarationStatement[76704-76732]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[76553-76597]:VariableDeclarationStatement[76741-76785]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[76606-76618]:VariableDeclarationStatement[76794-76806]"
    }, {
      "left" : "while (pos < (strLen - closeLen))",
      "right" : "while (pos < (strLen - closeLen))",
      "info" : "WhileStatement[76627-77012]:WhileStatement[76815-77200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76661-77012]:Block[76849-77200]"
    }, {
      "left" : "int start = str.indexOf(open, pos);",
      "right" : "int start = str.indexOf(open, pos);",
      "info" : "VariableDeclarationStatement[76675-76710]:VariableDeclarationStatement[76863-76898]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[76723-76776]:IfStatement[76911-76964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76738-76776]:Block[76926-76964]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[76756-76762]:BreakStatement[76944-76950]"
    }, {
      "left" : "start += openLen;",
      "right" : "start += openLen;",
      "info" : "ExpressionStatement[76789-76806]:ExpressionStatement[76977-76994]"
    }, {
      "left" : "int end = str.indexOf(close, start);",
      "right" : "int end = str.indexOf(close, start);",
      "info" : "VariableDeclarationStatement[76819-76855]:VariableDeclarationStatement[77007-77043]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[76868-76919]:IfStatement[77056-77107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76881-76919]:Block[77069-77107]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[76899-76905]:BreakStatement[77087-77093]"
    }, {
      "left" : "list.add(str.substring(start, end));",
      "right" : "list.add(str.substring(start, end));",
      "info" : "ExpressionStatement[76932-76968]:ExpressionStatement[77120-77156]"
    }, {
      "left" : "pos = end + closeLen;",
      "right" : "pos = end + closeLen;",
      "info" : "ExpressionStatement[76981-77002]:ExpressionStatement[77169-77190]"
    }, {
      "left" : "if (list.isEmpty())",
      "right" : "if (list.isEmpty())",
      "info" : "IfStatement[77021-77077]:IfStatement[77209-77265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77041-77077]:Block[77229-77265]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[77055-77067]:ReturnStatement[77243-77255]"
    }, {
      "left" : "return list.toArray(new String [list.size()]);",
      "right" : "return list.toArray(new String [list.size()]);",
      "info" : "ReturnStatement[77087-77133]:ReturnStatement[77275-77321]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78228-78234]:Modifier[78416-78422]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[78235-78241]:Modifier[78423-78429]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[78242-78250]:ArrayType[78430-78438]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[78251-78256]:SimpleName[78439-78444]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[78257-78267]:SingleVariableDeclaration[78445-78455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78269-78313]:Block[78457-78501]"
    }, {
      "left" : "return split(str, null, -1);",
      "right" : "return split(str, null, -1);",
      "info" : "ReturnStatement[78279-78307]:ReturnStatement[78467-78495]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79340-79346]:Modifier[79528-79534]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[79347-79353]:Modifier[79535-79541]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[79354-79362]:ArrayType[79542-79550]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[79363-79368]:SimpleName[79551-79556]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[79369-79379]:SingleVariableDeclaration[79557-79567]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[79381-79399]:SingleVariableDeclaration[79569-79587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79401-79463]:Block[79589-79651]"
    }, {
      "left" : "return splitWorker(str, separatorChar, false);",
      "right" : "return splitWorker(str, separatorChar, false);",
      "info" : "ReturnStatement[79411-79457]:ReturnStatement[79599-79645]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80594-80600]:Modifier[80782-80788]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[80601-80607]:Modifier[80789-80795]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[80608-80616]:ArrayType[80796-80804]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[80617-80622]:SimpleName[80805-80810]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[80623-80633]:SingleVariableDeclaration[80811-80821]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[80635-80656]:SingleVariableDeclaration[80823-80844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80658-80725]:Block[80846-80913]"
    }, {
      "left" : "return splitWorker(str, separatorChars, -1, false);",
      "right" : "return splitWorker(str, separatorChars, -1, false);",
      "info" : "ReturnStatement[80668-80719]:ReturnStatement[80856-80907]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[82166-82172]:Modifier[82354-82360]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[82173-82179]:Modifier[82361-82367]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[82180-82188]:ArrayType[82368-82376]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[82189-82194]:SimpleName[82377-82382]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[82195-82205]:SingleVariableDeclaration[82383-82393]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[82207-82228]:SingleVariableDeclaration[82395-82416]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[82230-82237]:SingleVariableDeclaration[82418-82425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82239-82307]:Block[82427-82495]"
    }, {
      "left" : "return splitWorker(str, separatorChars, max, false);",
      "right" : "return splitWorker(str, separatorChars, max, false);",
      "info" : "ReturnStatement[82249-82301]:ReturnStatement[82437-82489]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[83484-83490]:Modifier[83672-83678]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[83491-83497]:Modifier[83679-83685]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[83498-83506]:ArrayType[83686-83694]"
    }, {
      "left" : "splitByWholeSeparator",
      "right" : "splitByWholeSeparator",
      "info" : "SimpleName[83507-83528]:SimpleName[83695-83716]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[83529-83539]:SingleVariableDeclaration[83717-83727]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[83541-83557]:SingleVariableDeclaration[83729-83745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83559-83640]:Block[83747-83828]"
    }, {
      "left" : "return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",
      "right" : "return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",
      "info" : "ReturnStatement[83569-83634]:ReturnStatement[83757-83822]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[85111-85117]:Modifier[85299-85305]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[85118-85124]:Modifier[85306-85312]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[85125-85133]:ArrayType[85313-85321]"
    }, {
      "left" : "splitByWholeSeparator",
      "right" : "splitByWholeSeparator",
      "info" : "SimpleName[85134-85155]:SimpleName[85322-85343]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[85157-85167]:SingleVariableDeclaration[85345-85355]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[85169-85185]:SingleVariableDeclaration[85357-85373]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[85187-85194]:SingleVariableDeclaration[85375-85382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85197-85276]:Block[85385-85464]"
    }, {
      "left" : "return splitByWholeSeparatorWorker(str, separator, max, false);",
      "right" : "return splitByWholeSeparatorWorker(str, separator, max, false);",
      "info" : "ReturnStatement[85207-85270]:ReturnStatement[85395-85458]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[86655-86661]:Modifier[86843-86849]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[86662-86668]:Modifier[86850-86856]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[86669-86677]:ArrayType[86857-86865]"
    }, {
      "left" : "splitByWholeSeparatorPreserveAllTokens",
      "right" : "splitByWholeSeparatorPreserveAllTokens",
      "info" : "SimpleName[86678-86716]:SimpleName[86866-86904]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[86717-86727]:SingleVariableDeclaration[86905-86915]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[86729-86745]:SingleVariableDeclaration[86917-86933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86747-86824]:Block[86935-87012]"
    }, {
      "left" : "return splitByWholeSeparatorWorker(str, separator, -1, true);",
      "right" : "return splitByWholeSeparatorWorker(str, separator, -1, true);",
      "info" : "ReturnStatement[86757-86818]:ReturnStatement[86945-87006]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[88513-88519]:Modifier[88701-88707]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[88520-88526]:Modifier[88708-88714]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[88527-88535]:ArrayType[88715-88723]"
    }, {
      "left" : "splitByWholeSeparatorPreserveAllTokens",
      "right" : "splitByWholeSeparatorPreserveAllTokens",
      "info" : "SimpleName[88536-88574]:SimpleName[88724-88762]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[88575-88585]:SingleVariableDeclaration[88763-88773]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[88587-88603]:SingleVariableDeclaration[88775-88791]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[88605-88612]:SingleVariableDeclaration[88793-88800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88614-88692]:Block[88802-88880]"
    }, {
      "left" : "return splitByWholeSeparatorWorker(str, separator, max, true);",
      "right" : "return splitByWholeSeparatorWorker(str, separator, max, true);",
      "info" : "ReturnStatement[88624-88686]:ReturnStatement[88812-88874]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[89444-89451]:Modifier[89632-89639]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[89452-89458]:Modifier[89640-89646]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[89459-89467]:ArrayType[89647-89655]"
    }, {
      "left" : "splitByWholeSeparatorWorker",
      "right" : "splitByWholeSeparatorWorker",
      "info" : "SimpleName[89468-89495]:SimpleName[89656-89683]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[89496-89506]:SingleVariableDeclaration[89684-89694]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[89508-89524]:SingleVariableDeclaration[89696-89712]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[89526-89533]:SingleVariableDeclaration[89714-89721]"
    }, {
      "left" : "boolean preserveAllTokens",
      "right" : "boolean preserveAllTokens",
      "info" : "SingleVariableDeclaration[89592-89617]:SingleVariableDeclaration[89780-89805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89624-91910]:Block[89812-92098]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[89634-89687]:IfStatement[89822-89875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89651-89687]:Block[89839-89875]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[89665-89677]:ReturnStatement[89853-89865]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[89697-89720]:VariableDeclarationStatement[89885-89908]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[89730-89805]:IfStatement[89918-89993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89744-89805]:Block[89932-89993]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[89758-89795]:ReturnStatement[89946-89983]"
    }, {
      "left" : "if ((separator == null) || (EMPTY.equals(separator)))",
      "right" : "if ((separator == null) || (EMPTY.equals(separator)))",
      "info" : "IfStatement[89815-89983]:IfStatement[90003-90171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89869-89983]:Block[90057-90171]"
    }, {
      "left" : "return splitWorker(str, null, max, preserveAllTokens);",
      "right" : "return splitWorker(str, null, max, preserveAllTokens);",
      "info" : "ReturnStatement[89919-89973]:ReturnStatement[90107-90161]"
    }, {
      "left" : "int separatorLength = separator.length();",
      "right" : "int separatorLength = separator.length();",
      "info" : "VariableDeclarationStatement[89993-90034]:VariableDeclarationStatement[90181-90222]"
    }, {
      "left" : "ArrayList<String> substrings = new ArrayList<String>();",
      "right" : "ArrayList<String> substrings = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[90044-90099]:VariableDeclarationStatement[90232-90287]"
    }, {
      "left" : "int numberOfSubstrings = 0;",
      "right" : "int numberOfSubstrings = 0;",
      "info" : "VariableDeclarationStatement[90108-90135]:VariableDeclarationStatement[90296-90323]"
    }, {
      "left" : "int beg = 0;",
      "right" : "int beg = 0;",
      "info" : "VariableDeclarationStatement[90144-90156]:VariableDeclarationStatement[90332-90344]"
    }, {
      "left" : "int end = 0;",
      "right" : "int end = 0;",
      "info" : "VariableDeclarationStatement[90165-90177]:VariableDeclarationStatement[90353-90365]"
    }, {
      "left" : "while (end < len)",
      "right" : "while (end < len)",
      "info" : "WhileStatement[90186-91837]:WhileStatement[90374-92025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90204-91837]:Block[90392-92025]"
    }, {
      "left" : "end = str.indexOf(separator, beg);",
      "right" : "end = str.indexOf(separator, beg);",
      "info" : "ExpressionStatement[90218-90252]:ExpressionStatement[90406-90440]"
    }, {
      "left" : "if (end > -1)",
      "right" : "if (end > -1)",
      "info" : "IfStatement[90266-91827]:IfStatement[90454-92015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90280-91642]:Block[90468-91830]"
    }, {
      "left" : "if (end > beg)",
      "right" : "if (end > beg)",
      "info" : "IfStatement[90298-91628]:IfStatement[90486-91816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90313-91081]:Block[90501-91269]"
    }, {
      "left" : "numberOfSubstrings += 1;",
      "right" : "numberOfSubstrings += 1;",
      "info" : "ExpressionStatement[90335-90359]:ExpressionStatement[90523-90547]"
    }, {
      "left" : "if (numberOfSubstrings == max)",
      "right" : "if (numberOfSubstrings == max)",
      "info" : "IfStatement[90381-91063]:IfStatement[90569-91251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90412-90530]:Block[90600-90718]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[90438-90448]:ExpressionStatement[90626-90636]"
    }, {
      "left" : "substrings.add(str.substring(beg));",
      "right" : "substrings.add(str.substring(beg));",
      "info" : "ExpressionStatement[90473-90508]:ExpressionStatement[90661-90696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90536-91063]:Block[90724-91251]"
    }, {
      "left" : "substrings.add(str.substring(beg, end));",
      "right" : "substrings.add(str.substring(beg, end));",
      "info" : "ExpressionStatement[90720-90760]:ExpressionStatement[90908-90948]"
    }, {
      "left" : "beg = end + separatorLength;",
      "right" : "beg = end + separatorLength;",
      "info" : "ExpressionStatement[91013-91041]:ExpressionStatement[91201-91229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91087-91628]:Block[91275-91816]"
    }, {
      "left" : "if (preserveAllTokens)",
      "right" : "if (preserveAllTokens)",
      "info" : "IfStatement[91196-91561]:IfStatement[91384-91749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91219-91561]:Block[91407-91749]"
    }, {
      "left" : "numberOfSubstrings += 1;",
      "right" : "numberOfSubstrings += 1;",
      "info" : "ExpressionStatement[91245-91269]:ExpressionStatement[91433-91457]"
    }, {
      "left" : "if (numberOfSubstrings == max)",
      "right" : "if (numberOfSubstrings == max)",
      "info" : "IfStatement[91294-91539]:IfStatement[91482-91727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91325-91455]:Block[91513-91643]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[91355-91365]:ExpressionStatement[91543-91553]"
    }, {
      "left" : "substrings.add(str.substring(beg));",
      "right" : "substrings.add(str.substring(beg));",
      "info" : "ExpressionStatement[91394-91429]:ExpressionStatement[91582-91617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91461-91539]:Block[91649-91727]"
    }, {
      "left" : "substrings.add(EMPTY);",
      "right" : "substrings.add(EMPTY);",
      "info" : "ExpressionStatement[91491-91513]:ExpressionStatement[91679-91701]"
    }, {
      "left" : "beg = end + separatorLength;",
      "right" : "beg = end + separatorLength;",
      "info" : "ExpressionStatement[91582-91610]:ExpressionStatement[91770-91798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91648-91827]:Block[91836-92015]"
    }, {
      "left" : "substrings.add(str.substring(beg));",
      "right" : "substrings.add(str.substring(beg));",
      "info" : "ExpressionStatement[91751-91786]:ExpressionStatement[91939-91974]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[91803-91813]:ExpressionStatement[91991-92001]"
    }, {
      "left" : "return substrings.toArray(new String[substrings.size()]);",
      "right" : "return substrings.toArray(new String[substrings.size()]);",
      "info" : "ReturnStatement[91847-91904]:ReturnStatement[92035-92092]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[93156-93162]:Modifier[93344-93350]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[93163-93169]:Modifier[93351-93357]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[93170-93178]:ArrayType[93358-93366]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[93179-93201]:SimpleName[93367-93389]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[93202-93212]:SingleVariableDeclaration[93390-93400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93214-93270]:Block[93402-93458]"
    }, {
      "left" : "return splitWorker(str, null, -1, true);",
      "right" : "return splitWorker(str, null, -1, true);",
      "info" : "ReturnStatement[93224-93264]:ReturnStatement[93412-93452]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[95055-95061]:Modifier[95243-95249]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[95062-95068]:Modifier[95250-95256]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[95069-95077]:ArrayType[95257-95265]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[95078-95100]:SimpleName[95266-95288]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[95101-95111]:SingleVariableDeclaration[95289-95299]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[95113-95131]:SingleVariableDeclaration[95301-95319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95133-95194]:Block[95321-95382]"
    }, {
      "left" : "return splitWorker(str, separatorChar, true);",
      "right" : "return splitWorker(str, separatorChar, true);",
      "info" : "ReturnStatement[95143-95188]:ReturnStatement[95331-95376]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[95780-95787]:Modifier[95968-95975]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[95788-95794]:Modifier[95976-95982]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[95795-95803]:ArrayType[95983-95991]"
    }, {
      "left" : "splitWorker",
      "right" : "splitWorker",
      "info" : "SimpleName[95804-95815]:SimpleName[95992-96003]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[95816-95826]:SingleVariableDeclaration[96004-96014]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[95828-95846]:SingleVariableDeclaration[96016-96034]"
    }, {
      "left" : "boolean preserveAllTokens",
      "right" : "boolean preserveAllTokens",
      "info" : "SingleVariableDeclaration[95848-95873]:SingleVariableDeclaration[96036-96061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95875-96849]:Block[96063-97037]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[95932-95985]:IfStatement[96120-96173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95949-95985]:Block[96137-96173]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[95963-95975]:ReturnStatement[96151-96163]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[95994-96017]:VariableDeclarationStatement[96182-96205]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[96026-96101]:IfStatement[96214-96289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96040-96101]:Block[96228-96289]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[96054-96091]:ReturnStatement[96242-96279]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[96110-96154]:VariableDeclarationStatement[96298-96342]"
    }, {
      "left" : "int i = 0, start = 0;",
      "right" : "int i = 0, start = 0;",
      "info" : "VariableDeclarationStatement[96163-96184]:VariableDeclarationStatement[96351-96372]"
    }, {
      "left" : "boolean match = false;",
      "right" : "boolean match = false;",
      "info" : "VariableDeclarationStatement[96193-96215]:VariableDeclarationStatement[96381-96403]"
    }, {
      "left" : "boolean lastMatch = false;",
      "right" : "boolean lastMatch = false;",
      "info" : "VariableDeclarationStatement[96224-96250]:VariableDeclarationStatement[96412-96438]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[96259-96675]:WhileStatement[96447-96863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96275-96675]:Block[96463-96863]"
    }, {
      "left" : "if (str.charAt(i) == separatorChar)",
      "right" : "if (str.charAt(i) == separatorChar)",
      "info" : "IfStatement[96289-96591]:IfStatement[96477-96779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96325-96591]:Block[96513-96779]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[96343-96522]:IfStatement[96531-96710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96375-96522]:Block[96563-96710]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[96397-96431]:ExpressionStatement[96585-96619]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[96452-96466]:ExpressionStatement[96640-96654]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[96487-96504]:ExpressionStatement[96675-96692]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[96539-96551]:ExpressionStatement[96727-96739]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[96568-96577]:ContinueStatement[96756-96765]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[96604-96622]:ExpressionStatement[96792-96810]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[96635-96648]:ExpressionStatement[96823-96836]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[96661-96665]:ExpressionStatement[96849-96853]"
    }, {
      "left" : "if (match || (preserveAllTokens && lastMatch))",
      "right" : "if (match || (preserveAllTokens && lastMatch))",
      "info" : "IfStatement[96684-96789]:IfStatement[96872-96977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96731-96789]:Block[96919-96977]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[96745-96779]:ExpressionStatement[96933-96967]"
    }, {
      "left" : "return list.toArray(new String[list.size()]);",
      "right" : "return list.toArray(new String[list.size()]);",
      "info" : "ReturnStatement[96798-96843]:ReturnStatement[96986-97031]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[98734-98740]:Modifier[98922-98928]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[98741-98747]:Modifier[98929-98935]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[98748-98756]:ArrayType[98936-98944]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[98757-98779]:SimpleName[98945-98967]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[98780-98790]:SingleVariableDeclaration[98968-98978]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[98792-98813]:SingleVariableDeclaration[98980-99001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98815-98881]:Block[99003-99069]"
    }, {
      "left" : "return splitWorker(str, separatorChars, -1, true);",
      "right" : "return splitWorker(str, separatorChars, -1, true);",
      "info" : "ReturnStatement[98825-98875]:ReturnStatement[99013-99063]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[100876-100882]:Modifier[101064-101070]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[100883-100889]:Modifier[101071-101077]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[100890-100898]:ArrayType[101078-101086]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[100899-100921]:SimpleName[101087-101109]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[100922-100932]:SingleVariableDeclaration[101110-101120]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[100934-100955]:SingleVariableDeclaration[101122-101143]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[100957-100964]:SingleVariableDeclaration[101145-101152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100966-101033]:Block[101154-101221]"
    }, {
      "left" : "return splitWorker(str, separatorChars, max, true);",
      "right" : "return splitWorker(str, separatorChars, max, true);",
      "info" : "ReturnStatement[100976-101027]:ReturnStatement[101164-101215]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[101740-101747]:Modifier[101928-101935]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[101748-101754]:Modifier[101936-101942]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[101755-101763]:ArrayType[101943-101951]"
    }, {
      "left" : "splitWorker",
      "right" : "splitWorker",
      "info" : "SimpleName[101764-101775]:SimpleName[101952-101963]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[101776-101786]:SingleVariableDeclaration[101964-101974]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[101788-101809]:SingleVariableDeclaration[101976-101997]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[101811-101818]:SingleVariableDeclaration[101999-102006]"
    }, {
      "left" : "boolean preserveAllTokens",
      "right" : "boolean preserveAllTokens",
      "info" : "SingleVariableDeclaration[101820-101845]:SingleVariableDeclaration[102008-102033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101847-104764]:Block[102035-104952]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[102027-102080]:IfStatement[102215-102268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102044-102080]:Block[102232-102268]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[102058-102070]:ReturnStatement[102246-102258]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[102089-102112]:VariableDeclarationStatement[102277-102300]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[102121-102196]:IfStatement[102309-102384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102135-102196]:Block[102323-102384]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[102149-102186]:ReturnStatement[102337-102374]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[102205-102249]:VariableDeclarationStatement[102393-102437]"
    }, {
      "left" : "int sizePlus1 = 1;",
      "right" : "int sizePlus1 = 1;",
      "info" : "VariableDeclarationStatement[102258-102276]:VariableDeclarationStatement[102446-102464]"
    }, {
      "left" : "int i = 0, start = 0;",
      "right" : "int i = 0, start = 0;",
      "info" : "VariableDeclarationStatement[102285-102306]:VariableDeclarationStatement[102473-102494]"
    }, {
      "left" : "boolean match = false;",
      "right" : "boolean match = false;",
      "info" : "VariableDeclarationStatement[102315-102337]:VariableDeclarationStatement[102503-102525]"
    }, {
      "left" : "boolean lastMatch = false;",
      "right" : "boolean lastMatch = false;",
      "info" : "VariableDeclarationStatement[102346-102372]:VariableDeclarationStatement[102534-102560]"
    }, {
      "left" : "if (separatorChars == null)",
      "right" : "if (separatorChars == null)",
      "info" : "IfStatement[102381-104590]:IfStatement[102569-104778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102409-103119]:Block[102597-103307]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[102474-103109]:WhileStatement[102662-103297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102490-103109]:Block[102678-103297]"
    }, {
      "left" : "if (Character.isWhitespace(str.charAt(i)))",
      "right" : "if (Character.isWhitespace(str.charAt(i)))",
      "info" : "IfStatement[102508-103009]:IfStatement[102696-103197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102551-103009]:Block[102739-103197]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[102573-102928]:IfStatement[102761-103116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102605-102928]:Block[102793-103116]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[102631-102648]:ExpressionStatement[102819-102836]"
    }, {
      "left" : "if (sizePlus1++ == max)",
      "right" : "if (sizePlus1++ == max)",
      "info" : "IfStatement[102673-102808]:IfStatement[102861-102996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102697-102808]:Block[102885-102996]"
    }, {
      "left" : "i = len;",
      "right" : "i = len;",
      "info" : "ExpressionStatement[102727-102735]:ExpressionStatement[102915-102923]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[102764-102782]:ExpressionStatement[102952-102970]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[102833-102867]:ExpressionStatement[103021-103055]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[102892-102906]:ExpressionStatement[103080-103094]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[102949-102961]:ExpressionStatement[103137-103149]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[102982-102991]:ContinueStatement[103170-103179]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[103026-103044]:ExpressionStatement[103214-103232]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[103061-103074]:ExpressionStatement[103249-103262]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[103091-103095]:ExpressionStatement[103279-103283]"
    }, {
      "left" : "if (separatorChars.length() == 1)",
      "right" : "if (separatorChars.length() == 1)",
      "info" : "IfStatement[103125-104590]:IfStatement[103313-104778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103159-103891]:Block[103347-104079]"
    }, {
      "left" : "char sep = separatorChars.charAt(0);",
      "right" : "char sep = separatorChars.charAt(0);",
      "info" : "VariableDeclarationStatement[103214-103250]:VariableDeclarationStatement[103402-103438]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[103263-103881]:WhileStatement[103451-104069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103279-103881]:Block[103467-104069]"
    }, {
      "left" : "if (str.charAt(i) == sep)",
      "right" : "if (str.charAt(i) == sep)",
      "info" : "IfStatement[103297-103781]:IfStatement[103485-103969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103323-103781]:Block[103511-103969]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[103345-103700]:IfStatement[103533-103888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103377-103700]:Block[103565-103888]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[103403-103420]:ExpressionStatement[103591-103608]"
    }, {
      "left" : "if (sizePlus1++ == max)",
      "right" : "if (sizePlus1++ == max)",
      "info" : "IfStatement[103445-103580]:IfStatement[103633-103768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103469-103580]:Block[103657-103768]"
    }, {
      "left" : "i = len;",
      "right" : "i = len;",
      "info" : "ExpressionStatement[103499-103507]:ExpressionStatement[103687-103695]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[103536-103554]:ExpressionStatement[103724-103742]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[103605-103639]:ExpressionStatement[103793-103827]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[103664-103678]:ExpressionStatement[103852-103866]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[103721-103733]:ExpressionStatement[103909-103921]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[103754-103763]:ContinueStatement[103942-103951]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[103798-103816]:ExpressionStatement[103986-104004]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[103833-103846]:ExpressionStatement[104021-104034]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[103863-103867]:ExpressionStatement[104051-104055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103897-104590]:Block[104085-104778]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[103940-104580]:WhileStatement[104128-104768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103956-104580]:Block[104144-104768]"
    }, {
      "left" : "if (separatorChars.indexOf(str.charAt(i)) >= 0)",
      "right" : "if (separatorChars.indexOf(str.charAt(i)) >= 0)",
      "info" : "IfStatement[103974-104480]:IfStatement[104162-104668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104022-104480]:Block[104210-104668]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[104044-104399]:IfStatement[104232-104587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104076-104399]:Block[104264-104587]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[104102-104119]:ExpressionStatement[104290-104307]"
    }, {
      "left" : "if (sizePlus1++ == max)",
      "right" : "if (sizePlus1++ == max)",
      "info" : "IfStatement[104144-104279]:IfStatement[104332-104467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104168-104279]:Block[104356-104467]"
    }, {
      "left" : "i = len;",
      "right" : "i = len;",
      "info" : "ExpressionStatement[104198-104206]:ExpressionStatement[104386-104394]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[104235-104253]:ExpressionStatement[104423-104441]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[104304-104338]:ExpressionStatement[104492-104526]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[104363-104377]:ExpressionStatement[104551-104565]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[104420-104432]:ExpressionStatement[104608-104620]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[104453-104462]:ContinueStatement[104641-104650]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[104497-104515]:ExpressionStatement[104685-104703]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[104532-104545]:ExpressionStatement[104720-104733]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[104562-104566]:ExpressionStatement[104750-104754]"
    }, {
      "left" : "if (match || (preserveAllTokens && lastMatch))",
      "right" : "if (match || (preserveAllTokens && lastMatch))",
      "info" : "IfStatement[104599-104704]:IfStatement[104787-104892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104646-104704]:Block[104834-104892]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[104660-104694]:ExpressionStatement[104848-104882]"
    }, {
      "left" : "return list.toArray(new String[list.size()]);",
      "right" : "return list.toArray(new String[list.size()]);",
      "info" : "ReturnStatement[104713-104758]:ReturnStatement[104901-104946]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[105860-105866]:Modifier[106048-106054]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[105867-105873]:Modifier[106055-106061]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[105874-105882]:ArrayType[106062-106070]"
    }, {
      "left" : "splitByCharacterType",
      "right" : "splitByCharacterType",
      "info" : "SimpleName[105883-105903]:SimpleName[106071-106091]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[105904-105914]:SingleVariableDeclaration[106092-106102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105916-105972]:Block[106104-106160]"
    }, {
      "left" : "return splitByCharacterType(str, false);",
      "right" : "return splitByCharacterType(str, false);",
      "info" : "ReturnStatement[105926-105966]:ReturnStatement[106114-106154]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[107475-107481]:Modifier[107663-107669]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[107482-107488]:Modifier[107670-107676]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[107489-107497]:ArrayType[107677-107685]"
    }, {
      "left" : "splitByCharacterTypeCamelCase",
      "right" : "splitByCharacterTypeCamelCase",
      "info" : "SimpleName[107498-107527]:SimpleName[107686-107715]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[107528-107538]:SingleVariableDeclaration[107716-107726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107540-107595]:Block[107728-107783]"
    }, {
      "left" : "return splitByCharacterType(str, true);",
      "right" : "return splitByCharacterType(str, true);",
      "info" : "ReturnStatement[107550-107589]:ReturnStatement[107738-107777]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[108446-108453]:Modifier[108634-108641]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[108454-108460]:Modifier[108642-108648]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[108461-108469]:ArrayType[108649-108657]"
    }, {
      "left" : "splitByCharacterType",
      "right" : "splitByCharacterType",
      "info" : "SimpleName[108470-108490]:SimpleName[108658-108678]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[108491-108501]:SingleVariableDeclaration[108679-108689]"
    }, {
      "left" : "boolean camelCase",
      "right" : "boolean camelCase",
      "info" : "SingleVariableDeclaration[108503-108520]:SingleVariableDeclaration[108691-108708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108522-109719]:Block[108710-109907]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[108532-108585]:IfStatement[108720-108773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108549-108585]:Block[108737-108773]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[108563-108575]:ReturnStatement[108751-108763]"
    }, {
      "left" : "if (str.length() == 0)",
      "right" : "if (str.length() == 0)",
      "info" : "IfStatement[108594-108678]:IfStatement[108782-108866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108617-108678]:Block[108805-108866]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[108631-108668]:ReturnStatement[108819-108856]"
    }, {
      "left" : "char[] c = str.toCharArray();",
      "right" : "char[] c = str.toCharArray();",
      "info" : "VariableDeclarationStatement[108687-108716]:VariableDeclarationStatement[108875-108904]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[108725-108769]:VariableDeclarationStatement[108913-108957]"
    }, {
      "left" : "int tokenStart = 0;",
      "right" : "int tokenStart = 0;",
      "info" : "VariableDeclarationStatement[108778-108797]:VariableDeclarationStatement[108966-108985]"
    }, {
      "left" : "int currentType = Character.getType(c[tokenStart]);",
      "right" : "int currentType = Character.getType(c[tokenStart]);",
      "info" : "VariableDeclarationStatement[108806-108857]:VariableDeclarationStatement[108994-109045]"
    }, {
      "left" : "for (int pos = tokenStart + 1; pos < c.length; pos++)",
      "right" : "for (int pos = tokenStart + 1; pos < c.length; pos++)",
      "info" : "ForStatement[108866-109591]:ForStatement[109054-109779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108920-109591]:Block[109108-109779]"
    }, {
      "left" : "int type = Character.getType(c[pos]);",
      "right" : "int type = Character.getType(c[pos]);",
      "info" : "VariableDeclarationStatement[108934-108971]:VariableDeclarationStatement[109122-109159]"
    }, {
      "left" : "if (type == currentType)",
      "right" : "if (type == currentType)",
      "info" : "IfStatement[108984-109050]:IfStatement[109172-109238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109009-109050]:Block[109197-109238]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[109027-109036]:ContinueStatement[109215-109224]"
    }, {
      "left" : "if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER)",
      "right" : "if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER)",
      "info" : "IfStatement[109063-109549]:IfStatement[109251-109737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109161-109423]:Block[109349-109611]"
    }, {
      "left" : "int newTokenStart = pos - 1;",
      "right" : "int newTokenStart = pos - 1;",
      "info" : "VariableDeclarationStatement[109179-109207]:VariableDeclarationStatement[109367-109395]"
    }, {
      "left" : "if (newTokenStart != tokenStart)",
      "right" : "if (newTokenStart != tokenStart)",
      "info" : "IfStatement[109224-109409]:IfStatement[109412-109597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109257-109409]:Block[109445-109597]"
    }, {
      "left" : "list.add(new String(c, tokenStart, newTokenStart - tokenStart));",
      "right" : "list.add(new String(c, tokenStart, newTokenStart - tokenStart));",
      "info" : "ExpressionStatement[109279-109343]:ExpressionStatement[109467-109531]"
    }, {
      "left" : "tokenStart = newTokenStart;",
      "right" : "tokenStart = newTokenStart;",
      "info" : "ExpressionStatement[109364-109391]:ExpressionStatement[109552-109579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109429-109549]:Block[109617-109737]"
    }, {
      "left" : "list.add(new String(c, tokenStart, pos - tokenStart));",
      "right" : "list.add(new String(c, tokenStart, pos - tokenStart));",
      "info" : "ExpressionStatement[109447-109501]:ExpressionStatement[109635-109689]"
    }, {
      "left" : "tokenStart = pos;",
      "right" : "tokenStart = pos;",
      "info" : "ExpressionStatement[109518-109535]:ExpressionStatement[109706-109723]"
    }, {
      "left" : "currentType = type;",
      "right" : "currentType = type;",
      "info" : "ExpressionStatement[109562-109581]:ExpressionStatement[109750-109769]"
    }, {
      "left" : "list.add(new String(c, tokenStart, c.length - tokenStart));",
      "right" : "list.add(new String(c, tokenStart, c.length - tokenStart));",
      "info" : "ExpressionStatement[109600-109659]:ExpressionStatement[109788-109847]"
    }, {
      "left" : "return list.toArray(new String[list.size()]);",
      "right" : "return list.toArray(new String[list.size()]);",
      "info" : "ReturnStatement[109668-109713]:ReturnStatement[109856-109901]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[110557-110563]:Modifier[110745-110751]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[110564-110570]:Modifier[110752-110758]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[110571-110577]:SimpleType[110759-110765]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[110578-110582]:SimpleName[110766-110770]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[110583-110597]:SingleVariableDeclaration[110771-110785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110599-110640]:Block[110787-110828]"
    }, {
      "left" : "return join(array, null);",
      "right" : "return join(array, null);",
      "info" : "ReturnStatement[110609-110634]:ReturnStatement[110797-110822]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[111534-111540]:Modifier[111722-111728]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[111541-111547]:Modifier[111729-111735]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[111548-111554]:SimpleType[111736-111742]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[111555-111559]:SimpleName[111743-111747]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[111560-111574]:SingleVariableDeclaration[111748-111762]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[111576-111590]:SingleVariableDeclaration[111764-111778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111592-111720]:Block[111780-111908]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[111602-111657]:IfStatement[111790-111845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111621-111657]:Block[111809-111845]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[111635-111647]:ReturnStatement[111823-111835]"
    }, {
      "left" : "return join(array, separator, 0, array.length);",
      "right" : "return join(array, separator, 0, array.length);",
      "info" : "ReturnStatement[111667-111714]:ReturnStatement[111855-111902]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[112890-112896]:Modifier[113078-113084]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[112897-112903]:Modifier[113085-113091]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[112904-112910]:SimpleType[113092-113098]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[112911-112915]:SimpleName[113099-113103]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[112916-112930]:SingleVariableDeclaration[113104-113118]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[112932-112946]:SingleVariableDeclaration[113120-113134]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[112948-112962]:SingleVariableDeclaration[113136-113150]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[112964-112976]:SingleVariableDeclaration[113152-113164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112978-113587]:Block[113166-113775]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[112988-113043]:IfStatement[113176-113231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113007-113043]:Block[113195-113231]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[113021-113033]:ReturnStatement[113209-113221]"
    }, {
      "left" : "int bufSize = (endIndex - startIndex);",
      "right" : "int bufSize = (endIndex - startIndex);",
      "info" : "VariableDeclarationStatement[113052-113090]:VariableDeclarationStatement[113240-113278]"
    }, {
      "left" : "if (bufSize <= 0)",
      "right" : "if (bufSize <= 0)",
      "info" : "IfStatement[113099-113154]:IfStatement[113287-113342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113117-113154]:Block[113305-113342]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[113131-113144]:ReturnStatement[113319-113332]"
    }, {
      "left" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);",
      "right" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);",
      "info" : "ExpressionStatement[113164-113254]:ExpressionStatement[113352-113442]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(bufSize);",
      "right" : "StringBuilder buf = new StringBuilder(bufSize);",
      "info" : "VariableDeclarationStatement[113263-113310]:VariableDeclarationStatement[113451-113498]"
    }, {
      "left" : "for (int i = startIndex; i < endIndex; i++)",
      "right" : "for (int i = startIndex; i < endIndex; i++)",
      "info" : "ForStatement[113320-113550]:ForStatement[113508-113738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113364-113550]:Block[113552-113738]"
    }, {
      "left" : "if (i > startIndex)",
      "right" : "if (i > startIndex)",
      "info" : "IfStatement[113378-113452]:IfStatement[113566-113640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113398-113452]:Block[113586-113640]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[113416-113438]:ExpressionStatement[113604-113626]"
    }, {
      "left" : "if (array[i] != null)",
      "right" : "if (array[i] != null)",
      "info" : "IfStatement[113465-113540]:IfStatement[113653-113728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113487-113540]:Block[113675-113728]"
    }, {
      "left" : "buf.append(array[i]);",
      "right" : "buf.append(array[i]);",
      "info" : "ExpressionStatement[113505-113526]:ExpressionStatement[113693-113714]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[113559-113581]:ReturnStatement[113747-113769]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[114622-114628]:Modifier[114810-114816]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[114629-114635]:Modifier[114817-114823]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[114636-114642]:SimpleType[114824-114830]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[114643-114647]:SimpleName[114831-114835]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[114648-114662]:SingleVariableDeclaration[114836-114850]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[114664-114680]:SingleVariableDeclaration[114852-114868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114682-114809]:Block[114870-114997]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[114692-114747]:IfStatement[114880-114935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114711-114747]:Block[114899-114935]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[114725-114737]:ReturnStatement[114913-114925]"
    }, {
      "left" : "return join(array, separator, 0, array.length);",
      "right" : "return join(array, separator, 0, array.length);",
      "info" : "ReturnStatement[114756-114803]:ReturnStatement[114944-114991]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[116119-116125]:Modifier[116307-116313]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[116126-116132]:Modifier[116314-116320]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[116133-116139]:SimpleType[116321-116327]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[116140-116144]:SimpleName[116328-116332]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[116145-116159]:SingleVariableDeclaration[116333-116347]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[116161-116177]:SingleVariableDeclaration[116349-116365]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[116179-116193]:SingleVariableDeclaration[116367-116381]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[116195-116207]:SingleVariableDeclaration[116383-116395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116209-117103]:Block[116397-117291]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[116219-116274]:IfStatement[116407-116462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116238-116274]:Block[116426-116462]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[116252-116264]:ReturnStatement[116440-116452]"
    }, {
      "left" : "if (separator == null)",
      "right" : "if (separator == null)",
      "info" : "IfStatement[116283-116348]:IfStatement[116471-116536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116306-116348]:Block[116494-116536]"
    }, {
      "left" : "separator = EMPTY;",
      "right" : "separator = EMPTY;",
      "info" : "ExpressionStatement[116320-116338]:ExpressionStatement[116508-116526]"
    }, {
      "left" : "int bufSize = (endIndex - startIndex);",
      "right" : "int bufSize = (endIndex - startIndex);",
      "info" : "VariableDeclarationStatement[116526-116564]:VariableDeclarationStatement[116714-116752]"
    }, {
      "left" : "if (bufSize <= 0)",
      "right" : "if (bufSize <= 0)",
      "info" : "IfStatement[116573-116628]:IfStatement[116761-116816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116591-116628]:Block[116779-116816]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[116605-116618]:ReturnStatement[116793-116806]"
    }, {
      "left" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length())\n                        + separator.length());",
      "right" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length())\n                        + separator.length());",
      "info" : "ExpressionStatement[116638-116769]:ExpressionStatement[116826-116957]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(bufSize);",
      "right" : "StringBuilder buf = new StringBuilder(bufSize);",
      "info" : "VariableDeclarationStatement[116779-116826]:VariableDeclarationStatement[116967-117014]"
    }, {
      "left" : "for (int i = startIndex; i < endIndex; i++)",
      "right" : "for (int i = startIndex; i < endIndex; i++)",
      "info" : "ForStatement[116836-117066]:ForStatement[117024-117254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116880-117066]:Block[117068-117254]"
    }, {
      "left" : "if (i > startIndex)",
      "right" : "if (i > startIndex)",
      "info" : "IfStatement[116894-116968]:IfStatement[117082-117156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116914-116968]:Block[117102-117156]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[116932-116954]:ExpressionStatement[117120-117142]"
    }, {
      "left" : "if (array[i] != null)",
      "right" : "if (array[i] != null)",
      "info" : "IfStatement[116981-117056]:IfStatement[117169-117244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117003-117056]:Block[117191-117244]"
    }, {
      "left" : "buf.append(array[i]);",
      "right" : "buf.append(array[i]);",
      "info" : "ExpressionStatement[117021-117042]:ExpressionStatement[117209-117230]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[117075-117097]:ReturnStatement[117263-117285]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[117740-117746]:Modifier[117928-117934]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[117747-117753]:Modifier[117935-117941]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[117754-117760]:SimpleType[117942-117948]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[117761-117765]:SimpleName[117949-117953]"
    }, {
      "left" : "Iterator<?> iterator",
      "right" : "Iterator<?> iterator",
      "info" : "SingleVariableDeclaration[117766-117786]:SingleVariableDeclaration[117954-117974]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[117788-117802]:SingleVariableDeclaration[117976-117990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117804-118586]:Block[117992-118774]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[117886-117944]:IfStatement[118074-118132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117908-117944]:Block[118096-118132]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[117922-117934]:ReturnStatement[118110-118122]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[117953-118015]:IfStatement[118141-118203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117978-118015]:Block[118166-118203]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[117992-118005]:ReturnStatement[118180-118193]"
    }, {
      "left" : "Object first = iterator.next();",
      "right" : "Object first = iterator.next();",
      "info" : "VariableDeclarationStatement[118024-118055]:VariableDeclarationStatement[118212-118243]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[118064-118148]:IfStatement[118252-118336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118089-118148]:Block[118277-118336]"
    }, {
      "left" : "return ObjectUtils.toString(first);",
      "right" : "return ObjectUtils.toString(first);",
      "info" : "ReturnStatement[118103-118138]:ReturnStatement[118291-118326]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(256);",
      "right" : "StringBuilder buf = new StringBuilder(256);",
      "info" : "VariableDeclarationStatement[118190-118233]:VariableDeclarationStatement[118378-118421]"
    }, {
      "left" : "if (first != null)",
      "right" : "if (first != null)",
      "info" : "IfStatement[118284-118345]:IfStatement[118472-118533]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118303-118345]:Block[118491-118533]"
    }, {
      "left" : "buf.append(first);",
      "right" : "buf.append(first);",
      "info" : "ExpressionStatement[118317-118335]:ExpressionStatement[118505-118523]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[118355-118548]:WhileStatement[118543-118736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118382-118548]:Block[118570-118736]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[118396-118418]:ExpressionStatement[118584-118606]"
    }, {
      "left" : "Object obj = iterator.next();",
      "right" : "Object obj = iterator.next();",
      "info" : "VariableDeclarationStatement[118431-118460]:VariableDeclarationStatement[118619-118648]"
    }, {
      "left" : "if (obj != null)",
      "right" : "if (obj != null)",
      "info" : "IfStatement[118473-118538]:IfStatement[118661-118726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118490-118538]:Block[118678-118726]"
    }, {
      "left" : "buf.append(obj);",
      "right" : "buf.append(obj);",
      "info" : "ExpressionStatement[118508-118524]:ExpressionStatement[118696-118712]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[118558-118580]:ReturnStatement[118746-118768]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[119209-119215]:Modifier[119397-119403]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[119216-119222]:Modifier[119404-119410]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[119223-119229]:SimpleType[119411-119417]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[119230-119234]:SimpleName[119418-119422]"
    }, {
      "left" : "Iterator<?> iterator",
      "right" : "Iterator<?> iterator",
      "info" : "SingleVariableDeclaration[119235-119255]:SingleVariableDeclaration[119423-119443]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[119257-119273]:SingleVariableDeclaration[119445-119461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119275-120111]:Block[119463-120299]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[119357-119415]:IfStatement[119545-119603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119379-119415]:Block[119567-119603]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[119393-119405]:ReturnStatement[119581-119593]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[119424-119486]:IfStatement[119612-119674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119449-119486]:Block[119637-119674]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[119463-119476]:ReturnStatement[119651-119664]"
    }, {
      "left" : "Object first = iterator.next();",
      "right" : "Object first = iterator.next();",
      "info" : "VariableDeclarationStatement[119495-119526]:VariableDeclarationStatement[119683-119714]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[119535-119619]:IfStatement[119723-119807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119560-119619]:Block[119748-119807]"
    }, {
      "left" : "return ObjectUtils.toString(first);",
      "right" : "return ObjectUtils.toString(first);",
      "info" : "ReturnStatement[119574-119609]:ReturnStatement[119762-119797]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(256);",
      "right" : "StringBuilder buf = new StringBuilder(256);",
      "info" : "VariableDeclarationStatement[119661-119704]:VariableDeclarationStatement[119849-119892]"
    }, {
      "left" : "if (first != null)",
      "right" : "if (first != null)",
      "info" : "IfStatement[119755-119816]:IfStatement[119943-120004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119774-119816]:Block[119962-120004]"
    }, {
      "left" : "buf.append(first);",
      "right" : "buf.append(first);",
      "info" : "ExpressionStatement[119788-119806]:ExpressionStatement[119976-119994]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[119826-120074]:WhileStatement[120014-120262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119853-120074]:Block[120041-120262]"
    }, {
      "left" : "if (separator != null)",
      "right" : "if (separator != null)",
      "info" : "IfStatement[119867-119944]:IfStatement[120055-120132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119890-119944]:Block[120078-120132]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[119908-119930]:ExpressionStatement[120096-120118]"
    }, {
      "left" : "Object obj = iterator.next();",
      "right" : "Object obj = iterator.next();",
      "info" : "VariableDeclarationStatement[119957-119986]:VariableDeclarationStatement[120145-120174]"
    }, {
      "left" : "if (obj != null)",
      "right" : "if (obj != null)",
      "info" : "IfStatement[119999-120064]:IfStatement[120187-120252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120016-120064]:Block[120204-120252]"
    }, {
      "left" : "buf.append(obj);",
      "right" : "buf.append(obj);",
      "info" : "ExpressionStatement[120034-120050]:ExpressionStatement[120222-120238]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[120083-120105]:ReturnStatement[120271-120293]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[120754-120760]:Modifier[120942-120948]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[120761-120767]:Modifier[120949-120955]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[120768-120774]:SimpleType[120956-120962]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[120775-120779]:SimpleName[120963-120967]"
    }, {
      "left" : "Collection<?> collection",
      "right" : "Collection<?> collection",
      "info" : "SingleVariableDeclaration[120780-120804]:SingleVariableDeclaration[120968-120992]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[120806-120820]:SingleVariableDeclaration[120994-121008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120822-120953]:Block[121010-121141]"
    }, {
      "left" : "if (collection == null)",
      "right" : "if (collection == null)",
      "info" : "IfStatement[120832-120892]:IfStatement[121020-121080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120856-120892]:Block[121044-121080]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[120870-120882]:ReturnStatement[121058-121070]"
    }, {
      "left" : "return join(collection.iterator(), separator);",
      "right" : "return join(collection.iterator(), separator);",
      "info" : "ReturnStatement[120901-120947]:ReturnStatement[121089-121135]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[121600-121606]:Modifier[121788-121794]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[121607-121613]:Modifier[121795-121801]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[121614-121620]:SimpleType[121802-121808]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[121621-121625]:SimpleName[121809-121813]"
    }, {
      "left" : "Collection<?> collection",
      "right" : "Collection<?> collection",
      "info" : "SingleVariableDeclaration[121626-121650]:SingleVariableDeclaration[121814-121838]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[121652-121668]:SingleVariableDeclaration[121840-121856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121670-121801]:Block[121858-121989]"
    }, {
      "left" : "if (collection == null)",
      "right" : "if (collection == null)",
      "info" : "IfStatement[121680-121740]:IfStatement[121868-121928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121704-121740]:Block[121892-121928]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[121718-121730]:ReturnStatement[121906-121918]"
    }, {
      "left" : "return join(collection.iterator(), separator);",
      "right" : "return join(collection.iterator(), separator);",
      "info" : "ReturnStatement[121749-121795]:ReturnStatement[121937-121983]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[122450-122456]:Modifier[122638-122644]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[122457-122463]:Modifier[122645-122651]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[122464-122470]:SimpleType[122652-122658]"
    }, {
      "left" : "deleteWhitespace",
      "right" : "deleteWhitespace",
      "info" : "SimpleName[122471-122487]:SimpleName[122659-122675]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[122488-122498]:SingleVariableDeclaration[122676-122686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122500-122928]:Block[122688-123116]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[122510-122563]:IfStatement[122698-122751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122528-122563]:Block[122716-122751]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[122542-122553]:ReturnStatement[122730-122741]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[122572-122594]:VariableDeclarationStatement[122760-122782]"
    }, {
      "left" : "char[] chs = new char[sz];",
      "right" : "char[] chs = new char[sz];",
      "info" : "VariableDeclarationStatement[122603-122629]:VariableDeclarationStatement[122791-122817]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[122638-122652]:VariableDeclarationStatement[122826-122840]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[122661-122819]:ForStatement[122849-123007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122690-122819]:Block[122878-123007]"
    }, {
      "left" : "if (!Character.isWhitespace(str.charAt(i)))",
      "right" : "if (!Character.isWhitespace(str.charAt(i)))",
      "info" : "IfStatement[122704-122809]:IfStatement[122892-122997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122748-122809]:Block[122936-122997]"
    }, {
      "left" : "chs[count++] = str.charAt(i);",
      "right" : "chs[count++] = str.charAt(i);",
      "info" : "ExpressionStatement[122766-122795]:ExpressionStatement[122954-122983]"
    }, {
      "left" : "if (count == sz)",
      "right" : "if (count == sz)",
      "info" : "IfStatement[122828-122880]:IfStatement[123016-123068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122845-122880]:Block[123033-123068]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[122859-122870]:ReturnStatement[123047-123058]"
    }, {
      "left" : "return new String(chs, 0, count);",
      "right" : "return new String(chs, 0, count);",
      "info" : "ReturnStatement[122889-122922]:ReturnStatement[123077-123110]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[124123-124129]:Modifier[124311-124317]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[124130-124136]:Modifier[124318-124324]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[124137-124143]:SimpleType[124325-124331]"
    }, {
      "left" : "removeStart",
      "right" : "removeStart",
      "info" : "SimpleName[124144-124155]:SimpleName[124332-124343]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[124156-124166]:SingleVariableDeclaration[124344-124354]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[124168-124181]:SingleVariableDeclaration[124356-124369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124183-124389]:Block[124371-124577]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[124193-124265]:IfStatement[124381-124453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124230-124265]:Block[124418-124453]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[124244-124255]:ReturnStatement[124432-124443]"
    }, {
      "left" : "if (str.startsWith(remove))",
      "right" : "if (str.startsWith(remove))",
      "info" : "IfStatement[124274-124363]:IfStatement[124462-124551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124301-124363]:Block[124489-124551]"
    }, {
      "left" : "return str.substring(remove.length());",
      "right" : "return str.substring(remove.length());",
      "info" : "ReturnStatement[124315-124353]:ReturnStatement[124503-124541]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[124372-124383]:ReturnStatement[124560-124571]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[125680-125686]:Modifier[125868-125874]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[125687-125693]:Modifier[125875-125881]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[125694-125700]:SimpleType[125882-125888]"
    }, {
      "left" : "removeStartIgnoreCase",
      "right" : "removeStartIgnoreCase",
      "info" : "SimpleName[125701-125722]:SimpleName[125889-125910]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[125723-125733]:SingleVariableDeclaration[125911-125921]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[125735-125748]:SingleVariableDeclaration[125923-125936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125750-125968]:Block[125938-126156]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[125760-125832]:IfStatement[125948-126020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125797-125832]:Block[125985-126020]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[125811-125822]:ReturnStatement[125999-126010]"
    }, {
      "left" : "if (startsWithIgnoreCase(str, remove))",
      "right" : "if (startsWithIgnoreCase(str, remove))",
      "info" : "IfStatement[125841-125942]:IfStatement[126029-126130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125880-125942]:Block[126068-126130]"
    }, {
      "left" : "return str.substring(remove.length());",
      "right" : "return str.substring(remove.length());",
      "info" : "ReturnStatement[125894-125932]:ReturnStatement[126082-126120]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[125951-125962]:ReturnStatement[126139-126150]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[127056-127062]:Modifier[127244-127250]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[127063-127069]:Modifier[127251-127257]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[127070-127076]:SimpleType[127258-127264]"
    }, {
      "left" : "removeEnd",
      "right" : "removeEnd",
      "info" : "SimpleName[127077-127086]:SimpleName[127265-127274]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[127087-127097]:SingleVariableDeclaration[127275-127285]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[127099-127112]:SingleVariableDeclaration[127287-127300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127114-127337]:Block[127302-127525]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[127124-127196]:IfStatement[127312-127384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127161-127196]:Block[127349-127384]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[127175-127186]:ReturnStatement[127363-127374]"
    }, {
      "left" : "if (str.endsWith(remove))",
      "right" : "if (str.endsWith(remove))",
      "info" : "IfStatement[127205-127311]:IfStatement[127393-127499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127231-127311]:Block[127419-127499]"
    }, {
      "left" : "return str.substring(0, str.length() - remove.length());",
      "right" : "return str.substring(0, str.length() - remove.length());",
      "info" : "ReturnStatement[127245-127301]:ReturnStatement[127433-127489]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[127320-127331]:ReturnStatement[127508-127519]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[128460-128466]:Modifier[128648-128654]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[128467-128473]:Modifier[128655-128661]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[128474-128480]:SimpleType[128662-128668]"
    }, {
      "left" : "removeEndIgnoreCase",
      "right" : "removeEndIgnoreCase",
      "info" : "SimpleName[128481-128500]:SimpleName[128669-128688]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[128501-128511]:SingleVariableDeclaration[128689-128699]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[128513-128526]:SingleVariableDeclaration[128701-128714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128528-128762]:Block[128716-128950]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[128538-128610]:IfStatement[128726-128798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128575-128610]:Block[128763-128798]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[128589-128600]:ReturnStatement[128777-128788]"
    }, {
      "left" : "if (endsWithIgnoreCase(str, remove))",
      "right" : "if (endsWithIgnoreCase(str, remove))",
      "info" : "IfStatement[128619-128736]:IfStatement[128807-128924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128656-128736]:Block[128844-128924]"
    }, {
      "left" : "return str.substring(0, str.length() - remove.length());",
      "right" : "return str.substring(0, str.length() - remove.length());",
      "info" : "ReturnStatement[128670-128726]:ReturnStatement[128858-128914]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[128745-128756]:ReturnStatement[128933-128944]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[129747-129753]:Modifier[129935-129941]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[129754-129760]:Modifier[129942-129948]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[129761-129767]:SimpleType[129949-129955]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[129768-129774]:SimpleName[129956-129962]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[129775-129785]:SingleVariableDeclaration[129963-129973]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[129787-129800]:SingleVariableDeclaration[129975-129988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129802-129938]:Block[129990-130126]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[129812-129884]:IfStatement[130000-130072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129849-129884]:Block[130037-130072]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[129863-129874]:ReturnStatement[130051-130062]"
    }, {
      "left" : "return replace(str, remove, EMPTY, -1);",
      "right" : "return replace(str, remove, EMPTY, -1);",
      "info" : "ReturnStatement[129893-129932]:ReturnStatement[130081-130120]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[130687-130693]:Modifier[130875-130881]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[130694-130700]:Modifier[130882-130888]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[130701-130707]:SimpleType[130889-130895]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[130708-130714]:SimpleName[130896-130902]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[130715-130725]:SingleVariableDeclaration[130903-130913]"
    }, {
      "left" : "char remove",
      "right" : "char remove",
      "info" : "SingleVariableDeclaration[130727-130738]:SingleVariableDeclaration[130915-130926]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130740-131095]:Block[130928-131283]"
    }, {
      "left" : "if (isEmpty(str) || str.indexOf(remove) == -1)",
      "right" : "if (isEmpty(str) || str.indexOf(remove) == -1)",
      "info" : "IfStatement[130750-130832]:IfStatement[130938-131020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130797-130832]:Block[130985-131020]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[130811-130822]:ReturnStatement[130999-131010]"
    }, {
      "left" : "char[] chars = str.toCharArray();",
      "right" : "char[] chars = str.toCharArray();",
      "info" : "VariableDeclarationStatement[130841-130874]:VariableDeclarationStatement[131029-131062]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[130883-130895]:VariableDeclarationStatement[131071-131083]"
    }, {
      "left" : "for (int i = 0; i < chars.length; i++)",
      "right" : "for (int i = 0; i < chars.length; i++)",
      "info" : "ForStatement[130904-131047]:ForStatement[131092-131235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130943-131047]:Block[131131-131235]"
    }, {
      "left" : "if (chars[i] != remove)",
      "right" : "if (chars[i] != remove)",
      "info" : "IfStatement[130957-131037]:IfStatement[131145-131225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130981-131037]:Block[131169-131225]"
    }, {
      "left" : "chars[pos++] = chars[i];",
      "right" : "chars[pos++] = chars[i];",
      "info" : "ExpressionStatement[130999-131023]:ExpressionStatement[131187-131211]"
    }, {
      "left" : "return new String(chars, 0, pos);",
      "right" : "return new String(chars, 0, pos);",
      "info" : "ReturnStatement[131056-131089]:ReturnStatement[131244-131277]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[132263-132269]:Modifier[132451-132457]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[132270-132276]:Modifier[132458-132464]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[132277-132283]:SimpleType[132465-132471]"
    }, {
      "left" : "replaceOnce",
      "right" : "replaceOnce",
      "info" : "SimpleName[132284-132295]:SimpleName[132472-132483]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[132296-132307]:SingleVariableDeclaration[132484-132495]"
    }, {
      "left" : "String searchString",
      "right" : "String searchString",
      "info" : "SingleVariableDeclaration[132309-132328]:SingleVariableDeclaration[132497-132516]"
    }, {
      "left" : "String replacement",
      "right" : "String replacement",
      "info" : "SingleVariableDeclaration[132330-132348]:SingleVariableDeclaration[132518-132536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132350-132417]:Block[132538-132605]"
    }, {
      "left" : "return replace(text, searchString, replacement, 1);",
      "right" : "return replace(text, searchString, replacement, 1);",
      "info" : "ReturnStatement[132360-132411]:ReturnStatement[132548-132599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[133452-133458]:Modifier[133640-133646]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[133459-133465]:Modifier[133647-133653]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[133466-133472]:SimpleType[133654-133660]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[133473-133480]:SimpleName[133661-133668]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[133481-133492]:SingleVariableDeclaration[133669-133680]"
    }, {
      "left" : "String searchString",
      "right" : "String searchString",
      "info" : "SingleVariableDeclaration[133494-133513]:SingleVariableDeclaration[133682-133701]"
    }, {
      "left" : "String replacement",
      "right" : "String replacement",
      "info" : "SingleVariableDeclaration[133515-133533]:SingleVariableDeclaration[133703-133721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133535-133603]:Block[133723-133791]"
    }, {
      "left" : "return replace(text, searchString, replacement, -1);",
      "right" : "return replace(text, searchString, replacement, -1);",
      "info" : "ReturnStatement[133545-133597]:ReturnStatement[133733-133785]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[134981-134987]:Modifier[135169-135175]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[134988-134994]:Modifier[135176-135182]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[134995-135001]:SimpleType[135183-135189]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[135002-135009]:SimpleName[135190-135197]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[135010-135021]:SingleVariableDeclaration[135198-135209]"
    }, {
      "left" : "String searchString",
      "right" : "String searchString",
      "info" : "SingleVariableDeclaration[135023-135042]:SingleVariableDeclaration[135211-135230]"
    }, {
      "left" : "String replacement",
      "right" : "String replacement",
      "info" : "SingleVariableDeclaration[135044-135062]:SingleVariableDeclaration[135232-135250]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[135064-135071]:SingleVariableDeclaration[135252-135259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135073-135971]:Block[135261-136159]"
    }, {
      "left" : "if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0)",
      "right" : "if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0)",
      "info" : "IfStatement[135083-135198]:IfStatement[135271-135386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135162-135198]:Block[135350-135386]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[135176-135188]:ReturnStatement[135364-135376]"
    }, {
      "left" : "int start = 0;",
      "right" : "int start = 0;",
      "info" : "VariableDeclarationStatement[135207-135221]:VariableDeclarationStatement[135395-135409]"
    }, {
      "left" : "int end = text.indexOf(searchString, start);",
      "right" : "int end = text.indexOf(searchString, start);",
      "info" : "VariableDeclarationStatement[135230-135274]:VariableDeclarationStatement[135418-135462]"
    }, {
      "left" : "if (end == -1)",
      "right" : "if (end == -1)",
      "info" : "IfStatement[135283-135334]:IfStatement[135471-135522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135298-135334]:Block[135486-135522]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[135312-135324]:ReturnStatement[135500-135512]"
    }, {
      "left" : "int replLength = searchString.length();",
      "right" : "int replLength = searchString.length();",
      "info" : "VariableDeclarationStatement[135343-135382]:VariableDeclarationStatement[135531-135570]"
    }, {
      "left" : "int increase = replacement.length() - replLength;",
      "right" : "int increase = replacement.length() - replLength;",
      "info" : "VariableDeclarationStatement[135391-135440]:VariableDeclarationStatement[135579-135628]"
    }, {
      "left" : "increase = (increase < 0 ? 0 : increase);",
      "right" : "increase = (increase < 0 ? 0 : increase);",
      "info" : "ExpressionStatement[135449-135490]:ExpressionStatement[135637-135678]"
    }, {
      "left" : "increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));",
      "right" : "increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));",
      "info" : "ExpressionStatement[135499-135550]:ExpressionStatement[135687-135738]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "right" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "info" : "VariableDeclarationStatement[135559-135623]:VariableDeclarationStatement[135747-135811]"
    }, {
      "left" : "while (end != -1)",
      "right" : "while (end != -1)",
      "info" : "WhileStatement[135632-135891]:WhileStatement[135820-136079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135650-135891]:Block[135838-136079]"
    }, {
      "left" : "buf.append(text.substring(start, end)).append(replacement);",
      "right" : "buf.append(text.substring(start, end)).append(replacement);",
      "info" : "ExpressionStatement[135664-135723]:ExpressionStatement[135852-135911]"
    }, {
      "left" : "start = end + replLength;",
      "right" : "start = end + replLength;",
      "info" : "ExpressionStatement[135736-135761]:ExpressionStatement[135924-135949]"
    }, {
      "left" : "if (--max == 0)",
      "right" : "if (--max == 0)",
      "info" : "IfStatement[135774-135828]:IfStatement[135962-136016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135790-135828]:Block[135978-136016]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[135808-135814]:BreakStatement[135996-136002]"
    }, {
      "left" : "end = text.indexOf(searchString, start);",
      "right" : "end = text.indexOf(searchString, start);",
      "info" : "ExpressionStatement[135841-135881]:ExpressionStatement[136029-136069]"
    }, {
      "left" : "buf.append(text.substring(start));",
      "right" : "buf.append(text.substring(start));",
      "info" : "ExpressionStatement[135900-135934]:ExpressionStatement[136088-136122]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[135943-135965]:ReturnStatement[136131-136153]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[137750-137756]:Modifier[137938-137944]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[137757-137763]:Modifier[137945-137951]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[137764-137770]:SimpleType[137952-137958]"
    }, {
      "left" : "replaceEach",
      "right" : "replaceEach",
      "info" : "SimpleName[137771-137782]:SimpleName[137959-137970]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[137783-137794]:SingleVariableDeclaration[137971-137982]"
    }, {
      "left" : "String[] searchList",
      "right" : "String[] searchList",
      "info" : "SingleVariableDeclaration[137796-137815]:SingleVariableDeclaration[137984-138003]"
    }, {
      "left" : "String[] replacementList",
      "right" : "String[] replacementList",
      "info" : "SingleVariableDeclaration[137817-137841]:SingleVariableDeclaration[138005-138029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137843-137923]:Block[138031-138111]"
    }, {
      "left" : "return replaceEach(text, searchList, replacementList, false, 0);",
      "right" : "return replaceEach(text, searchList, replacementList, false, 0);",
      "info" : "ReturnStatement[137853-137917]:ReturnStatement[138041-138105]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[140224-140230]:Modifier[140412-140418]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[140231-140237]:Modifier[140419-140425]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[140238-140244]:SimpleType[140426-140432]"
    }, {
      "left" : "replaceEachRepeatedly",
      "right" : "replaceEachRepeatedly",
      "info" : "SimpleName[140245-140266]:SimpleName[140433-140454]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[140267-140278]:SingleVariableDeclaration[140455-140466]"
    }, {
      "left" : "String[] searchList",
      "right" : "String[] searchList",
      "info" : "SingleVariableDeclaration[140280-140299]:SingleVariableDeclaration[140468-140487]"
    }, {
      "left" : "String[] replacementList",
      "right" : "String[] replacementList",
      "info" : "SingleVariableDeclaration[140301-140325]:SingleVariableDeclaration[140489-140513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140327-140606]:Block[140515-140794]"
    }, {
      "left" : "int timeToLive = searchList == null ? 0 : searchList.length;",
      "right" : "int timeToLive = searchList == null ? 0 : searchList.length;",
      "info" : "VariableDeclarationStatement[140459-140519]:VariableDeclarationStatement[140647-140707]"
    }, {
      "left" : "return replaceEach(text, searchList, replacementList, true, timeToLive);",
      "right" : "return replaceEach(text, searchList, replacementList, true, timeToLive);",
      "info" : "ReturnStatement[140528-140600]:ReturnStatement[140716-140788]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[142976-142983]:Modifier[143164-143171]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[142984-142990]:Modifier[143172-143178]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[142991-142997]:SimpleType[143179-143185]"
    }, {
      "left" : "replaceEach",
      "right" : "replaceEach",
      "info" : "SimpleName[142998-143009]:SimpleName[143186-143197]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[143010-143021]:SingleVariableDeclaration[143198-143209]"
    }, {
      "left" : "String[] searchList",
      "right" : "String[] searchList",
      "info" : "SingleVariableDeclaration[143023-143042]:SingleVariableDeclaration[143211-143230]"
    }, {
      "left" : "String[] replacementList",
      "right" : "String[] replacementList",
      "info" : "SingleVariableDeclaration[143044-143068]:SingleVariableDeclaration[143232-143256]"
    }, {
      "left" : "boolean repeat",
      "right" : "boolean repeat",
      "info" : "SingleVariableDeclaration[143109-143123]:SingleVariableDeclaration[143297-143311]"
    }, {
      "left" : "int timeToLive",
      "right" : "int timeToLive",
      "info" : "SingleVariableDeclaration[143125-143139]:SingleVariableDeclaration[143313-143327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143146-147670]:Block[143334-147858]"
    }, {
      "left" : "if (text == null || text.length() == 0 || searchList == null || \n            searchList.length == 0 || replacementList == null || replacementList.length == 0)",
      "right" : "if (text == null || text.length() == 0 || searchList == null || \n            searchList.length == 0 || replacementList == null || replacementList.length == 0)",
      "info" : "IfStatement[143339-143543]:IfStatement[143527-143731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143507-143543]:Block[143695-143731]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[143521-143533]:ReturnStatement[143709-143721]"
    }, {
      "left" : "if (timeToLive < 0)",
      "right" : "if (timeToLive < 0)",
      "info" : "IfStatement[143607-143743]:IfStatement[143795-143931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143627-143743]:Block[143815-143931]"
    }, {
      "left" : "throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);",
      "right" : "throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);",
      "info" : "ThrowStatement[143641-143733]:ThrowStatement[143829-143921]"
    }, {
      "left" : "int searchLength = searchList.length;",
      "right" : "int searchLength = searchList.length;",
      "info" : "VariableDeclarationStatement[143753-143790]:VariableDeclarationStatement[143941-143978]"
    }, {
      "left" : "int replacementLength = replacementList.length;",
      "right" : "int replacementLength = replacementList.length;",
      "info" : "VariableDeclarationStatement[143799-143846]:VariableDeclarationStatement[143987-144034]"
    }, {
      "left" : "if (searchLength != replacementLength)",
      "right" : "if (searchLength != replacementLength)",
      "info" : "IfStatement[143916-144156]:IfStatement[144104-144344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143955-144156]:Block[144143-144344]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Search and Replace array lengths don't match: \"\n                + searchLength\n                + \" vs \"\n                + replacementLength);",
      "right" : "throw new IllegalArgumentException(\"Search and Replace array lengths don't match: \"\n                + searchLength\n                + \" vs \"\n                + replacementLength);",
      "info" : "ThrowStatement[143969-144146]:ThrowStatement[144157-144334]"
    }, {
      "left" : "boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];",
      "right" : "boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];",
      "info" : "VariableDeclarationStatement[144216-144280]:VariableDeclarationStatement[144404-144468]"
    }, {
      "left" : "int textIndex = -1;",
      "right" : "int textIndex = -1;",
      "info" : "VariableDeclarationStatement[144341-144360]:VariableDeclarationStatement[144529-144548]"
    }, {
      "left" : "int replaceIndex = -1;",
      "right" : "int replaceIndex = -1;",
      "info" : "VariableDeclarationStatement[144369-144391]:VariableDeclarationStatement[144557-144579]"
    }, {
      "left" : "int tempIndex = -1;",
      "right" : "int tempIndex = -1;",
      "info" : "VariableDeclarationStatement[144400-144419]:VariableDeclarationStatement[144588-144607]"
    }, {
      "left" : "for (int i = 0; i < searchLength; i++)",
      "right" : "for (int i = 0; i < searchLength; i++)",
      "info" : "ForStatement[144551-145202]:ForStatement[144739-145390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144590-145202]:Block[144778-145390]"
    }, {
      "left" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                searchList[i].length() == 0 || replacementList[i] == null)",
      "right" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                searchList[i].length() == 0 || replacementList[i] == null)",
      "info" : "IfStatement[144604-144795]:IfStatement[144792-144983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144754-144795]:Block[144942-144983]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[144772-144781]:ContinueStatement[144960-144969]"
    }, {
      "left" : "tempIndex = text.indexOf(searchList[i]);",
      "right" : "tempIndex = text.indexOf(searchList[i]);",
      "info" : "ExpressionStatement[144808-144848]:ExpressionStatement[144996-145036]"
    }, {
      "left" : "if (tempIndex == -1)",
      "right" : "if (tempIndex == -1)",
      "info" : "IfStatement[144919-145192]:IfStatement[145107-145380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144940-145008]:Block[145128-145196]"
    }, {
      "left" : "noMoreMatchesForReplIndex[i] = true;",
      "right" : "noMoreMatchesForReplIndex[i] = true;",
      "info" : "ExpressionStatement[144958-144994]:ExpressionStatement[145146-145182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145014-145192]:Block[145202-145380]"
    }, {
      "left" : "if (textIndex == -1 || tempIndex < textIndex)",
      "right" : "if (textIndex == -1 || tempIndex < textIndex)",
      "info" : "IfStatement[145032-145178]:IfStatement[145220-145366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145078-145178]:Block[145266-145366]"
    }, {
      "left" : "textIndex = tempIndex;",
      "right" : "textIndex = tempIndex;",
      "info" : "ExpressionStatement[145100-145122]:ExpressionStatement[145288-145310]"
    }, {
      "left" : "replaceIndex = i;",
      "right" : "replaceIndex = i;",
      "info" : "ExpressionStatement[145143-145160]:ExpressionStatement[145331-145348]"
    }, {
      "left" : "if (textIndex == -1)",
      "right" : "if (textIndex == -1)",
      "info" : "IfStatement[145300-145357]:IfStatement[145488-145545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145321-145357]:Block[145509-145545]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[145335-145347]:ReturnStatement[145523-145535]"
    }, {
      "left" : "int start = 0;",
      "right" : "int start = 0;",
      "info" : "VariableDeclarationStatement[145367-145381]:VariableDeclarationStatement[145555-145569]"
    }, {
      "left" : "int increase = 0;",
      "right" : "int increase = 0;",
      "info" : "VariableDeclarationStatement[145502-145519]:VariableDeclarationStatement[145690-145707]"
    }, {
      "left" : "for (int i = 0; i < searchList.length; i++)",
      "right" : "for (int i = 0; i < searchList.length; i++)",
      "info" : "ForStatement[145637-145878]:ForStatement[145825-146066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145681-145878]:Block[145869-146066]"
    }, {
      "left" : "int greater = replacementList[i].length() - searchList[i].length();",
      "right" : "int greater = replacementList[i].length() - searchList[i].length();",
      "info" : "VariableDeclarationStatement[145695-145762]:VariableDeclarationStatement[145883-145950]"
    }, {
      "left" : "if (greater > 0)",
      "right" : "if (greater > 0)",
      "info" : "IfStatement[145775-145868]:IfStatement[145963-146056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145792-145868]:Block[145980-146056]"
    }, {
      "left" : "increase += 3 * greater;",
      "right" : "increase += 3 * greater;",
      "info" : "ExpressionStatement[145810-145834]:ExpressionStatement[145998-146022]"
    }, {
      "left" : "increase = Math.min(increase, text.length() / 5);",
      "right" : "increase = Math.min(increase, text.length() / 5);",
      "info" : "ExpressionStatement[145956-146005]:ExpressionStatement[146144-146193]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "right" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "info" : "VariableDeclarationStatement[146015-146079]:VariableDeclarationStatement[146203-146267]"
    }, {
      "left" : "while (textIndex != -1)",
      "right" : "while (textIndex != -1)",
      "info" : "WhileStatement[146089-147333]:WhileStatement[146277-147521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[146113-147333]:Block[146301-147521]"
    }, {
      "left" : "for (int i = start; i < textIndex; i++)",
      "right" : "for (int i = start; i < textIndex; i++)",
      "info" : "ForStatement[146128-146227]:ForStatement[146316-146415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[146168-146227]:Block[146356-146415]"
    }, {
      "left" : "buf.append(text.charAt(i));",
      "right" : "buf.append(text.charAt(i));",
      "info" : "ExpressionStatement[146186-146213]:ExpressionStatement[146374-146401]"
    }, {
      "left" : "buf.append(replacementList[replaceIndex]);",
      "right" : "buf.append(replacementList[replaceIndex]);",
      "info" : "ExpressionStatement[146240-146282]:ExpressionStatement[146428-146470]"
    }, {
      "left" : "start = textIndex + searchList[replaceIndex].length();",
      "right" : "start = textIndex + searchList[replaceIndex].length();",
      "info" : "ExpressionStatement[146296-146350]:ExpressionStatement[146484-146538]"
    }, {
      "left" : "textIndex = -1;",
      "right" : "textIndex = -1;",
      "info" : "ExpressionStatement[146364-146379]:ExpressionStatement[146552-146567]"
    }, {
      "left" : "replaceIndex = -1;",
      "right" : "replaceIndex = -1;",
      "info" : "ExpressionStatement[146392-146410]:ExpressionStatement[146580-146598]"
    }, {
      "left" : "tempIndex = -1;",
      "right" : "tempIndex = -1;",
      "info" : "ExpressionStatement[146423-146438]:ExpressionStatement[146611-146626]"
    }, {
      "left" : "for (int i = 0; i < searchLength; i++)",
      "right" : "for (int i = 0; i < searchLength; i++)",
      "info" : "ForStatement[146552-147274]:ForStatement[146740-147462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[146591-147274]:Block[146779-147462]"
    }, {
      "left" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                    searchList[i].length() == 0 || replacementList[i] == null)",
      "right" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                    searchList[i].length() == 0 || replacementList[i] == null)",
      "info" : "IfStatement[146609-146816]:IfStatement[146797-147004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[146767-146816]:Block[146955-147004]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[146789-146798]:ContinueStatement[146977-146986]"
    }, {
      "left" : "tempIndex = text.indexOf(searchList[i], start);",
      "right" : "tempIndex = text.indexOf(searchList[i], start);",
      "info" : "ExpressionStatement[146833-146880]:ExpressionStatement[147021-147068]"
    }, {
      "left" : "if (tempIndex == -1)",
      "right" : "if (tempIndex == -1)",
      "info" : "IfStatement[146959-147260]:IfStatement[147147-147448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[146980-147056]:Block[147168-147244]"
    }, {
      "left" : "noMoreMatchesForReplIndex[i] = true;",
      "right" : "noMoreMatchesForReplIndex[i] = true;",
      "info" : "ExpressionStatement[147002-147038]:ExpressionStatement[147190-147226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[147062-147260]:Block[147250-147448]"
    }, {
      "left" : "if (textIndex == -1 || tempIndex < textIndex)",
      "right" : "if (textIndex == -1 || tempIndex < textIndex)",
      "info" : "IfStatement[147084-147242]:IfStatement[147272-147430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[147130-147242]:Block[147318-147430]"
    }, {
      "left" : "textIndex = tempIndex;",
      "right" : "textIndex = tempIndex;",
      "info" : "ExpressionStatement[147156-147178]:ExpressionStatement[147344-147366]"
    }, {
      "left" : "replaceIndex = i;",
      "right" : "replaceIndex = i;",
      "info" : "ExpressionStatement[147203-147220]:ExpressionStatement[147391-147408]"
    }, {
      "left" : "int textLength = text.length();",
      "right" : "int textLength = text.length();",
      "info" : "VariableDeclarationStatement[147342-147373]:VariableDeclarationStatement[147530-147561]"
    }, {
      "left" : "for (int i = start; i < textLength; i++)",
      "right" : "for (int i = start; i < textLength; i++)",
      "info" : "ForStatement[147382-147474]:ForStatement[147570-147662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[147423-147474]:Block[147611-147662]"
    }, {
      "left" : "buf.append(text.charAt(i));",
      "right" : "buf.append(text.charAt(i));",
      "info" : "ExpressionStatement[147437-147464]:ExpressionStatement[147625-147652]"
    }, {
      "left" : "String result = buf.toString();",
      "right" : "String result = buf.toString();",
      "info" : "VariableDeclarationStatement[147483-147514]:VariableDeclarationStatement[147671-147702]"
    }, {
      "left" : "if (!repeat)",
      "right" : "if (!repeat)",
      "info" : "IfStatement[147523-147574]:IfStatement[147711-147762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[147536-147574]:Block[147724-147762]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[147550-147564]:ReturnStatement[147738-147752]"
    }, {
      "left" : "return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",
      "right" : "return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",
      "info" : "ReturnStatement[147584-147664]:ReturnStatement[147772-147852]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[148658-148664]:Modifier[148846-148852]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[148665-148671]:Modifier[148853-148859]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[148672-148678]:SimpleType[148860-148866]"
    }, {
      "left" : "replaceChars",
      "right" : "replaceChars",
      "info" : "SimpleName[148679-148691]:SimpleName[148867-148879]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[148692-148702]:SingleVariableDeclaration[148880-148890]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[148704-148719]:SingleVariableDeclaration[148892-148907]"
    }, {
      "left" : "char replaceChar",
      "right" : "char replaceChar",
      "info" : "SingleVariableDeclaration[148721-148737]:SingleVariableDeclaration[148909-148925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[148739-148861]:Block[148927-149049]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[148749-148802]:IfStatement[148937-148990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[148766-148802]:Block[148954-148990]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[148780-148792]:ReturnStatement[148968-148980]"
    }, {
      "left" : "return str.replace(searchChar, replaceChar);",
      "right" : "return str.replace(searchChar, replaceChar);",
      "info" : "ReturnStatement[148811-148855]:ReturnStatement[148999-149043]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[150569-150575]:Modifier[150757-150763]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[150576-150582]:Modifier[150764-150770]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[150583-150589]:SimpleType[150771-150777]"
    }, {
      "left" : "replaceChars",
      "right" : "replaceChars",
      "info" : "SimpleName[150590-150602]:SimpleName[150778-150790]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[150603-150613]:SingleVariableDeclaration[150791-150801]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[150615-150633]:SingleVariableDeclaration[150803-150821]"
    }, {
      "left" : "String replaceChars",
      "right" : "String replaceChars",
      "info" : "SingleVariableDeclaration[150635-150654]:SingleVariableDeclaration[150823-150842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150656-151504]:Block[150844-151692]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(searchChars))",
      "right" : "if (isEmpty(str) || isEmpty(searchChars))",
      "info" : "IfStatement[150666-150743]:IfStatement[150854-150931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150708-150743]:Block[150896-150931]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[150722-150733]:ReturnStatement[150910-150921]"
    }, {
      "left" : "if (replaceChars == null)",
      "right" : "if (replaceChars == null)",
      "info" : "IfStatement[150752-150823]:IfStatement[150940-151011]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150778-150823]:Block[150966-151011]"
    }, {
      "left" : "replaceChars = EMPTY;",
      "right" : "replaceChars = EMPTY;",
      "info" : "ExpressionStatement[150792-150813]:ExpressionStatement[150980-151001]"
    }, {
      "left" : "boolean modified = false;",
      "right" : "boolean modified = false;",
      "info" : "VariableDeclarationStatement[150832-150857]:VariableDeclarationStatement[151020-151045]"
    }, {
      "left" : "int replaceCharsLength = replaceChars.length();",
      "right" : "int replaceCharsLength = replaceChars.length();",
      "info" : "VariableDeclarationStatement[150866-150913]:VariableDeclarationStatement[151054-151101]"
    }, {
      "left" : "int strLength = str.length();",
      "right" : "int strLength = str.length();",
      "info" : "VariableDeclarationStatement[150922-150951]:VariableDeclarationStatement[151110-151139]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(strLength);",
      "right" : "StringBuilder buf = new StringBuilder(strLength);",
      "info" : "VariableDeclarationStatement[150960-151009]:VariableDeclarationStatement[151148-151197]"
    }, {
      "left" : "for (int i = 0; i < strLength; i++)",
      "right" : "for (int i = 0; i < strLength; i++)",
      "info" : "ForStatement[151018-151409]:ForStatement[151206-151597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151054-151409]:Block[151242-151597]"
    }, {
      "left" : "char ch = str.charAt(i);",
      "right" : "char ch = str.charAt(i);",
      "info" : "VariableDeclarationStatement[151068-151092]:VariableDeclarationStatement[151256-151280]"
    }, {
      "left" : "int index = searchChars.indexOf(ch);",
      "right" : "int index = searchChars.indexOf(ch);",
      "info" : "VariableDeclarationStatement[151105-151141]:VariableDeclarationStatement[151293-151329]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[151154-151399]:IfStatement[151342-151587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151170-151346]:Block[151358-151534]"
    }, {
      "left" : "modified = true;",
      "right" : "modified = true;",
      "info" : "ExpressionStatement[151188-151204]:ExpressionStatement[151376-151392]"
    }, {
      "left" : "if (index < replaceCharsLength)",
      "right" : "if (index < replaceCharsLength)",
      "info" : "IfStatement[151221-151332]:IfStatement[151409-151520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151253-151332]:Block[151441-151520]"
    }, {
      "left" : "buf.append(replaceChars.charAt(index));",
      "right" : "buf.append(replaceChars.charAt(index));",
      "info" : "ExpressionStatement[151275-151314]:ExpressionStatement[151463-151502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151352-151399]:Block[151540-151587]"
    }, {
      "left" : "buf.append(ch);",
      "right" : "buf.append(ch);",
      "info" : "ExpressionStatement[151370-151385]:ExpressionStatement[151558-151573]"
    }, {
      "left" : "if (modified)",
      "right" : "if (modified)",
      "info" : "IfStatement[151418-151478]:IfStatement[151606-151666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151432-151478]:Block[151620-151666]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[151446-151468]:ReturnStatement[151634-151656]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[151487-151498]:ReturnStatement[151675-151686]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[153020-153026]:Modifier[153208-153214]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[153027-153033]:Modifier[153215-153221]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[153034-153040]:SimpleType[153222-153228]"
    }, {
      "left" : "overlay",
      "right" : "overlay",
      "info" : "SimpleName[153041-153048]:SimpleName[153229-153236]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[153049-153059]:SingleVariableDeclaration[153237-153247]"
    }, {
      "left" : "String overlay",
      "right" : "String overlay",
      "info" : "SingleVariableDeclaration[153061-153075]:SingleVariableDeclaration[153249-153263]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[153077-153086]:SingleVariableDeclaration[153265-153274]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[153088-153095]:SingleVariableDeclaration[153276-153283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153097-153830]:Block[153285-154018]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[153107-153160]:IfStatement[153295-153348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153124-153160]:Block[153312-153348]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[153138-153150]:ReturnStatement[153326-153338]"
    }, {
      "left" : "if (overlay == null)",
      "right" : "if (overlay == null)",
      "info" : "IfStatement[153169-153230]:IfStatement[153357-153418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153190-153230]:Block[153378-153418]"
    }, {
      "left" : "overlay = EMPTY;",
      "right" : "overlay = EMPTY;",
      "info" : "ExpressionStatement[153204-153220]:ExpressionStatement[153392-153408]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[153239-153262]:VariableDeclarationStatement[153427-153450]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[153271-153320]:IfStatement[153459-153508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153286-153320]:Block[153474-153508]"
    }, {
      "left" : "start = 0;",
      "right" : "start = 0;",
      "info" : "ExpressionStatement[153300-153310]:ExpressionStatement[153488-153498]"
    }, {
      "left" : "if (start > len)",
      "right" : "if (start > len)",
      "info" : "IfStatement[153329-153382]:IfStatement[153517-153570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153346-153382]:Block[153534-153570]"
    }, {
      "left" : "start = len;",
      "right" : "start = len;",
      "info" : "ExpressionStatement[153360-153372]:ExpressionStatement[153548-153560]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[153391-153436]:IfStatement[153579-153624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153404-153436]:Block[153592-153624]"
    }, {
      "left" : "end = 0;",
      "right" : "end = 0;",
      "info" : "ExpressionStatement[153418-153426]:ExpressionStatement[153606-153614]"
    }, {
      "left" : "if (end > len)",
      "right" : "if (end > len)",
      "info" : "IfStatement[153445-153494]:IfStatement[153633-153682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153460-153494]:Block[153648-153682]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[153474-153484]:ExpressionStatement[153662-153672]"
    }, {
      "left" : "if (start > end)",
      "right" : "if (start > end)",
      "info" : "IfStatement[153503-153610]:IfStatement[153691-153798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153520-153610]:Block[153708-153798]"
    }, {
      "left" : "int temp = start;",
      "right" : "int temp = start;",
      "info" : "VariableDeclarationStatement[153534-153551]:VariableDeclarationStatement[153722-153739]"
    }, {
      "left" : "start = end;",
      "right" : "start = end;",
      "info" : "ExpressionStatement[153564-153576]:ExpressionStatement[153752-153764]"
    }, {
      "left" : "end = temp;",
      "right" : "end = temp;",
      "info" : "ExpressionStatement[153589-153600]:ExpressionStatement[153777-153788]"
    }, {
      "left" : "return new StringBuilder(len + start - end + overlay.length() + 1)\n            .append(str.substring(0, start))\n            .append(overlay)\n            .append(str.substring(end))\n            .toString();",
      "right" : "return new StringBuilder(len + start - end + overlay.length() + 1)\n            .append(str.substring(0, start))\n            .append(overlay)\n            .append(str.substring(end))\n            .toString();",
      "info" : "ReturnStatement[153619-153824]:ReturnStatement[153807-154012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[154979-154985]:Modifier[155167-155173]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[154986-154992]:Modifier[155174-155180]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[154993-154999]:SimpleType[155181-155187]"
    }, {
      "left" : "chomp",
      "right" : "chomp",
      "info" : "SimpleName[155000-155005]:SimpleName[155188-155193]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[155006-155016]:SingleVariableDeclaration[155194-155204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155018-155633]:Block[155206-155821]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[155028-155081]:IfStatement[155216-155269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155046-155081]:Block[155234-155269]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[155060-155071]:ReturnStatement[155248-155259]"
    }, {
      "left" : "if (str.length() == 1)",
      "right" : "if (str.length() == 1)",
      "info" : "IfStatement[155091-155290]:IfStatement[155279-155478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155114-155290]:Block[155302-155478]"
    }, {
      "left" : "char ch = str.charAt(0);",
      "right" : "char ch = str.charAt(0);",
      "info" : "VariableDeclarationStatement[155128-155152]:VariableDeclarationStatement[155316-155340]"
    }, {
      "left" : "if (ch == CharUtils.CR || ch == CharUtils.LF)",
      "right" : "if (ch == CharUtils.CR || ch == CharUtils.LF)",
      "info" : "IfStatement[155165-155256]:IfStatement[155353-155444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155211-155256]:Block[155399-155444]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[155229-155242]:ReturnStatement[155417-155430]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[155269-155280]:ReturnStatement[155457-155468]"
    }, {
      "left" : "int lastIdx = str.length() - 1;",
      "right" : "int lastIdx = str.length() - 1;",
      "info" : "VariableDeclarationStatement[155300-155331]:VariableDeclarationStatement[155488-155519]"
    }, {
      "left" : "char last = str.charAt(lastIdx);",
      "right" : "char last = str.charAt(lastIdx);",
      "info" : "VariableDeclarationStatement[155340-155372]:VariableDeclarationStatement[155528-155560]"
    }, {
      "left" : "if (last == CharUtils.LF)",
      "right" : "if (last == CharUtils.LF)",
      "info" : "IfStatement[155382-155585]:IfStatement[155570-155773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155408-155519]:Block[155596-155707]"
    }, {
      "left" : "if (str.charAt(lastIdx - 1) == CharUtils.CR)",
      "right" : "if (str.charAt(lastIdx - 1) == CharUtils.CR)",
      "info" : "IfStatement[155422-155509]:IfStatement[155610-155697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155467-155509]:Block[155655-155697]"
    }, {
      "left" : "lastIdx--;",
      "right" : "lastIdx--;",
      "info" : "ExpressionStatement[155485-155495]:ExpressionStatement[155673-155683]"
    }, {
      "left" : "if (last != CharUtils.CR)",
      "right" : "if (last != CharUtils.CR)",
      "info" : "IfStatement[155525-155585]:IfStatement[155713-155773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155551-155585]:Block[155739-155773]"
    }, {
      "left" : "lastIdx++;",
      "right" : "lastIdx++;",
      "info" : "ExpressionStatement[155565-155575]:ExpressionStatement[155753-155763]"
    }, {
      "left" : "return str.substring(0, lastIdx);",
      "right" : "return str.substring(0, lastIdx);",
      "info" : "ReturnStatement[155594-155627]:ReturnStatement[155782-155815]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[156769-156775]:Modifier[156957-156963]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[156776-156782]:Modifier[156964-156970]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[156783-156789]:SimpleType[156971-156977]"
    }, {
      "left" : "chomp",
      "right" : "chomp",
      "info" : "SimpleName[156790-156795]:SimpleName[156978-156983]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[156796-156806]:SingleVariableDeclaration[156984-156994]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[156808-156824]:SingleVariableDeclaration[156996-157012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156826-157057]:Block[157014-157245]"
    }, {
      "left" : "if (isEmpty(str) || separator == null)",
      "right" : "if (isEmpty(str) || separator == null)",
      "info" : "IfStatement[156836-156910]:IfStatement[157024-157098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156875-156910]:Block[157063-157098]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[156889-156900]:ReturnStatement[157077-157088]"
    }, {
      "left" : "if (str.endsWith(separator))",
      "right" : "if (str.endsWith(separator))",
      "info" : "IfStatement[156919-157031]:IfStatement[157107-157219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156948-157031]:Block[157136-157219]"
    }, {
      "left" : "return str.substring(0, str.length() - separator.length());",
      "right" : "return str.substring(0, str.length() - separator.length());",
      "info" : "ReturnStatement[156962-157021]:ReturnStatement[157150-157209]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[157040-157051]:ReturnStatement[157228-157239]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[158025-158031]:Modifier[158213-158219]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[158032-158038]:Modifier[158220-158226]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[158039-158045]:SimpleType[158227-158233]"
    }, {
      "left" : "chop",
      "right" : "chop",
      "info" : "SimpleName[158046-158050]:SimpleName[158234-158238]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[158051-158061]:SingleVariableDeclaration[158239-158249]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158063-158545]:Block[158251-158733]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[158073-158126]:IfStatement[158261-158314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158090-158126]:Block[158278-158314]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[158104-158116]:ReturnStatement[158292-158304]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[158135-158161]:VariableDeclarationStatement[158323-158349]"
    }, {
      "left" : "if (strLen < 2)",
      "right" : "if (strLen < 2)",
      "info" : "IfStatement[158170-158223]:IfStatement[158358-158411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158186-158223]:Block[158374-158411]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[158200-158213]:ReturnStatement[158388-158401]"
    }, {
      "left" : "int lastIdx = strLen - 1;",
      "right" : "int lastIdx = strLen - 1;",
      "info" : "VariableDeclarationStatement[158232-158257]:VariableDeclarationStatement[158420-158445]"
    }, {
      "left" : "String ret = str.substring(0, lastIdx);",
      "right" : "String ret = str.substring(0, lastIdx);",
      "info" : "VariableDeclarationStatement[158266-158305]:VariableDeclarationStatement[158454-158493]"
    }, {
      "left" : "char last = str.charAt(lastIdx);",
      "right" : "char last = str.charAt(lastIdx);",
      "info" : "VariableDeclarationStatement[158314-158346]:VariableDeclarationStatement[158502-158534]"
    }, {
      "left" : "if (last == CharUtils.LF)",
      "right" : "if (last == CharUtils.LF)",
      "info" : "IfStatement[158355-158519]:IfStatement[158543-158707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158381-158519]:Block[158569-158707]"
    }, {
      "left" : "if (ret.charAt(lastIdx - 1) == CharUtils.CR)",
      "right" : "if (ret.charAt(lastIdx - 1) == CharUtils.CR)",
      "info" : "IfStatement[158395-158509]:IfStatement[158583-158697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158440-158509]:Block[158628-158697]"
    }, {
      "left" : "return ret.substring(0, lastIdx - 1);",
      "right" : "return ret.substring(0, lastIdx - 1);",
      "info" : "ReturnStatement[158458-158495]:ReturnStatement[158646-158683]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[158528-158539]:ReturnStatement[158716-158727]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[159382-159388]:Modifier[159570-159576]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[159389-159395]:Modifier[159577-159583]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[159396-159402]:SimpleType[159584-159590]"
    }, {
      "left" : "repeat",
      "right" : "repeat",
      "info" : "SimpleName[159403-159409]:SimpleName[159591-159597]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[159410-159420]:SingleVariableDeclaration[159598-159608]"
    }, {
      "left" : "int repeat",
      "right" : "int repeat",
      "info" : "SingleVariableDeclaration[159422-159432]:SingleVariableDeclaration[159610-159620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159434-160820]:Block[159622-161008]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[159491-159544]:IfStatement[159679-159732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159508-159544]:Block[159696-159732]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[159522-159534]:ReturnStatement[159710-159722]"
    }, {
      "left" : "if (repeat <= 0)",
      "right" : "if (repeat <= 0)",
      "info" : "IfStatement[159553-159607]:IfStatement[159741-159795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159570-159607]:Block[159758-159795]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[159584-159597]:ReturnStatement[159772-159785]"
    }, {
      "left" : "int inputLength = str.length();",
      "right" : "int inputLength = str.length();",
      "info" : "VariableDeclarationStatement[159616-159647]:VariableDeclarationStatement[159804-159835]"
    }, {
      "left" : "if (repeat == 1 || inputLength == 0)",
      "right" : "if (repeat == 1 || inputLength == 0)",
      "info" : "IfStatement[159656-159728]:IfStatement[159844-159916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159693-159728]:Block[159881-159916]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[159707-159718]:ReturnStatement[159895-159906]"
    }, {
      "left" : "if (inputLength == 1 && repeat <= PAD_LIMIT)",
      "right" : "if (inputLength == 1 && repeat <= PAD_LIMIT)",
      "info" : "IfStatement[159737-159844]:IfStatement[159925-160032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159782-159844]:Block[159970-160032]"
    }, {
      "left" : "return padding(repeat, str.charAt(0));",
      "right" : "return padding(repeat, str.charAt(0));",
      "info" : "ReturnStatement[159796-159834]:ReturnStatement[159984-160022]"
    }, {
      "left" : "int outputLength = inputLength * repeat;",
      "right" : "int outputLength = inputLength * repeat;",
      "info" : "VariableDeclarationStatement[159854-159894]:VariableDeclarationStatement[160042-160082]"
    }, {
      "left" : "switch (inputLength) {\n            case 1 :\n                char ch = str.charAt(0);\n                char[] output1 = new char[outputLength];\n                for (int i = repeat - 1; i >= 0; i--) {\n                    output1[i] = ch;\n                }\n                return new String(output1);\n            case 2 :\n                char ch0 = str.charAt(0);\n                char ch1 = str.charAt(1);\n                char[] output2 = new char[outputLength];\n                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {\n                    output2[i] = ch0;\n                    output2[i + 1] = ch1;\n                }\n                return new String(output2);\n            default :\n                StringBuilder buf = new StringBuilder(outputLength);\n                for (int i = 0; i < repeat; i++) {\n                    buf.append(str);\n                }\n                return buf.toString();\n        }",
      "right" : "switch (inputLength) {\n            case 1 :\n                char ch = str.charAt(0);\n                char[] output1 = new char[outputLength];\n                for (int i = repeat - 1; i >= 0; i--) {\n                    output1[i] = ch;\n                }\n                return new String(output1);\n            case 2 :\n                char ch0 = str.charAt(0);\n                char ch1 = str.charAt(1);\n                char[] output2 = new char[outputLength];\n                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {\n                    output2[i] = ch0;\n                    output2[i + 1] = ch1;\n                }\n                return new String(output2);\n            default :\n                StringBuilder buf = new StringBuilder(outputLength);\n                for (int i = 0; i < repeat; i++) {\n                    buf.append(str);\n                }\n                return buf.toString();\n        }",
      "info" : "SwitchStatement[159903-160814]:SwitchStatement[160091-161002]"
    }, {
      "left" : "case 1 :",
      "right" : "case 1 :",
      "info" : "SwitchCase[159938-159946]:SwitchCase[160126-160134]"
    }, {
      "left" : "char ch = str.charAt(0);",
      "right" : "char ch = str.charAt(0);",
      "info" : "VariableDeclarationStatement[159963-159987]:VariableDeclarationStatement[160151-160175]"
    }, {
      "left" : "char[] output1 = new char[outputLength];",
      "right" : "char[] output1 = new char[outputLength];",
      "info" : "VariableDeclarationStatement[160004-160044]:VariableDeclarationStatement[160192-160232]"
    }, {
      "left" : "for (int i = repeat - 1; i >= 0; i--)",
      "right" : "for (int i = repeat - 1; i >= 0; i--)",
      "info" : "ForStatement[160061-160155]:ForStatement[160249-160343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160099-160155]:Block[160287-160343]"
    }, {
      "left" : "output1[i] = ch;",
      "right" : "output1[i] = ch;",
      "info" : "ExpressionStatement[160121-160137]:ExpressionStatement[160309-160325]"
    }, {
      "left" : "return new String(output1);",
      "right" : "return new String(output1);",
      "info" : "ReturnStatement[160172-160199]:ReturnStatement[160360-160387]"
    }, {
      "left" : "case 2 :",
      "right" : "case 2 :",
      "info" : "SwitchCase[160212-160220]:SwitchCase[160400-160408]"
    }, {
      "left" : "char ch0 = str.charAt(0);",
      "right" : "char ch0 = str.charAt(0);",
      "info" : "VariableDeclarationStatement[160237-160262]:VariableDeclarationStatement[160425-160450]"
    }, {
      "left" : "char ch1 = str.charAt(1);",
      "right" : "char ch1 = str.charAt(1);",
      "info" : "VariableDeclarationStatement[160279-160304]:VariableDeclarationStatement[160467-160492]"
    }, {
      "left" : "char[] output2 = new char[outputLength];",
      "right" : "char[] output2 = new char[outputLength];",
      "info" : "VariableDeclarationStatement[160321-160361]:VariableDeclarationStatement[160509-160549]"
    }, {
      "left" : "for (int i = repeat * 2 - 2; i >= 0; i--, i--)",
      "right" : "for (int i = repeat * 2 - 2; i >= 0; i--, i--)",
      "info" : "ForStatement[160378-160524]:ForStatement[160566-160712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160425-160524]:Block[160613-160712]"
    }, {
      "left" : "output2[i] = ch0;",
      "right" : "output2[i] = ch0;",
      "info" : "ExpressionStatement[160447-160464]:ExpressionStatement[160635-160652]"
    }, {
      "left" : "output2[i + 1] = ch1;",
      "right" : "output2[i + 1] = ch1;",
      "info" : "ExpressionStatement[160485-160506]:ExpressionStatement[160673-160694]"
    }, {
      "left" : "return new String(output2);",
      "right" : "return new String(output2);",
      "info" : "ReturnStatement[160541-160568]:ReturnStatement[160729-160756]"
    }, {
      "left" : "default :",
      "right" : "default :",
      "info" : "SwitchCase[160581-160590]:SwitchCase[160769-160778]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(outputLength);",
      "right" : "StringBuilder buf = new StringBuilder(outputLength);",
      "info" : "VariableDeclarationStatement[160607-160659]:VariableDeclarationStatement[160795-160847]"
    }, {
      "left" : "for (int i = 0; i < repeat; i++)",
      "right" : "for (int i = 0; i < repeat; i++)",
      "info" : "ForStatement[160676-160765]:ForStatement[160864-160953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160709-160765]:Block[160897-160953]"
    }, {
      "left" : "buf.append(str);",
      "right" : "buf.append(str);",
      "info" : "ExpressionStatement[160731-160747]:ExpressionStatement[160919-160935]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[160782-160804]:ReturnStatement[160970-160992]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[161621-161627]:Modifier[161809-161815]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[161628-161634]:Modifier[161816-161822]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[161635-161641]:SimpleType[161823-161829]"
    }, {
      "left" : "repeat",
      "right" : "repeat",
      "info" : "SimpleName[161642-161648]:SimpleName[161830-161836]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[161649-161659]:SingleVariableDeclaration[161837-161847]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[161661-161677]:SingleVariableDeclaration[161849-161865]"
    }, {
      "left" : "int repeat",
      "right" : "int repeat",
      "info" : "SingleVariableDeclaration[161679-161689]:SingleVariableDeclaration[161867-161877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161691-162042]:Block[161879-162230]"
    }, {
      "left" : "if(str == null || separator == null)",
      "right" : "if(str == null || separator == null)",
      "info" : "IfStatement[161701-162036]:IfStatement[161889-162224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161738-161789]:Block[161926-161977]"
    }, {
      "left" : "return repeat(str, repeat);",
      "right" : "return repeat(str, repeat);",
      "info" : "ReturnStatement[161752-161779]:ReturnStatement[161940-161967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161795-162036]:Block[161983-162224]"
    }, {
      "left" : "String result = repeat(str + separator, repeat);",
      "right" : "String result = repeat(str + separator, repeat);",
      "info" : "VariableDeclarationStatement[161929-161977]:VariableDeclarationStatement[162117-162165]"
    }, {
      "left" : "return removeEnd(result, separator);",
      "right" : "return removeEnd(result, separator);",
      "info" : "ReturnStatement[161990-162026]:ReturnStatement[162178-162214]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[162987-162994]:Modifier[163175-163182]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[162995-163001]:Modifier[163183-163189]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[163002-163008]:SimpleType[163190-163196]"
    }, {
      "left" : "padding",
      "right" : "padding",
      "info" : "SimpleName[163009-163016]:SimpleName[163197-163204]"
    }, {
      "left" : "int repeat",
      "right" : "int repeat",
      "info" : "SingleVariableDeclaration[163017-163027]:SingleVariableDeclaration[163205-163215]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[163029-163041]:SingleVariableDeclaration[163217-163229]"
    }, {
      "left" : "IndexOutOfBoundsException",
      "right" : "IndexOutOfBoundsException",
      "info" : "SimpleType[163050-163075]:SimpleType[163238-163263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163076-163375]:Block[163264-163563]"
    }, {
      "left" : "if (repeat < 0)",
      "right" : "if (repeat < 0)",
      "info" : "IfStatement[163086-163205]:IfStatement[163274-163393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163102-163205]:Block[163290-163393]"
    }, {
      "left" : "throw new IndexOutOfBoundsException(\"Cannot pad a negative amount: \" + repeat);",
      "right" : "throw new IndexOutOfBoundsException(\"Cannot pad a negative amount: \" + repeat);",
      "info" : "ThrowStatement[163116-163195]:ThrowStatement[163304-163383]"
    }, {
      "left" : "final char[] buf = new char[repeat];",
      "right" : "final char[] buf = new char[repeat];",
      "info" : "VariableDeclarationStatement[163214-163250]:VariableDeclarationStatement[163402-163438]"
    }, {
      "left" : "for (int i = 0; i < buf.length; i++)",
      "right" : "for (int i = 0; i < buf.length; i++)",
      "info" : "ForStatement[163259-163337]:ForStatement[163447-163525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163296-163337]:Block[163484-163525]"
    }, {
      "left" : "buf[i] = padChar;",
      "right" : "buf[i] = padChar;",
      "info" : "ExpressionStatement[163310-163327]:ExpressionStatement[163498-163515]"
    }, {
      "left" : "return new String(buf);",
      "right" : "return new String(buf);",
      "info" : "ReturnStatement[163346-163369]:ReturnStatement[163534-163557]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[164071-164077]:Modifier[164259-164265]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[164078-164084]:Modifier[164266-164272]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[164085-164091]:SimpleType[164273-164279]"
    }, {
      "left" : "rightPad",
      "right" : "rightPad",
      "info" : "SimpleName[164092-164100]:SimpleName[164280-164288]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[164101-164111]:SingleVariableDeclaration[164289-164299]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[164113-164121]:SingleVariableDeclaration[164301-164309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164123-164171]:Block[164311-164359]"
    }, {
      "left" : "return rightPad(str, size, ' ');",
      "right" : "return rightPad(str, size, ' ');",
      "info" : "ReturnStatement[164133-164165]:ReturnStatement[164321-164353]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[164973-164979]:Modifier[165161-165167]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[164980-164986]:Modifier[165168-165174]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[164987-164993]:SimpleType[165175-165181]"
    }, {
      "left" : "rightPad",
      "right" : "rightPad",
      "info" : "SimpleName[164994-165002]:SimpleName[165182-165190]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[165003-165013]:SingleVariableDeclaration[165191-165201]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[165015-165023]:SingleVariableDeclaration[165203-165211]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[165025-165037]:SingleVariableDeclaration[165213-165225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165039-165406]:Block[165227-165594]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[165049-165102]:IfStatement[165237-165290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165066-165102]:Block[165254-165290]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[165080-165092]:ReturnStatement[165268-165280]"
    }, {
      "left" : "int pads = size - str.length();",
      "right" : "int pads = size - str.length();",
      "info" : "VariableDeclarationStatement[165111-165142]:VariableDeclarationStatement[165299-165330]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[165151-165242]:IfStatement[165339-165430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165166-165242]:Block[165354-165430]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[165180-165191]:ReturnStatement[165368-165379]"
    }, {
      "left" : "if (pads > PAD_LIMIT)",
      "right" : "if (pads > PAD_LIMIT)",
      "info" : "IfStatement[165251-165349]:IfStatement[165439-165537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165273-165349]:Block[165461-165537]"
    }, {
      "left" : "return rightPad(str, size, String.valueOf(padChar));",
      "right" : "return rightPad(str, size, String.valueOf(padChar));",
      "info" : "ReturnStatement[165287-165339]:ReturnStatement[165475-165527]"
    }, {
      "left" : "return str.concat(padding(pads, padChar));",
      "right" : "return str.concat(padding(pads, padChar));",
      "info" : "ReturnStatement[165358-165400]:ReturnStatement[165546-165588]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[166396-166402]:Modifier[166584-166590]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[166403-166409]:Modifier[166591-166597]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[166410-166416]:SimpleType[166598-166604]"
    }, {
      "left" : "rightPad",
      "right" : "rightPad",
      "info" : "SimpleName[166417-166425]:SimpleName[166605-166613]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[166426-166436]:SingleVariableDeclaration[166614-166624]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[166438-166446]:SingleVariableDeclaration[166626-166634]"
    }, {
      "left" : "String padStr",
      "right" : "String padStr",
      "info" : "SingleVariableDeclaration[166448-166461]:SingleVariableDeclaration[166636-166649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166463-167372]:Block[166651-167560]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[166473-166526]:IfStatement[166661-166714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166490-166526]:Block[166678-166714]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[166504-166516]:ReturnStatement[166692-166704]"
    }, {
      "left" : "if (isEmpty(padStr))",
      "right" : "if (isEmpty(padStr))",
      "info" : "IfStatement[166535-166593]:IfStatement[166723-166781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166556-166593]:Block[166744-166781]"
    }, {
      "left" : "padStr = \" \";",
      "right" : "padStr = \" \";",
      "info" : "ExpressionStatement[166570-166583]:ExpressionStatement[166758-166771]"
    }, {
      "left" : "int padLen = padStr.length();",
      "right" : "int padLen = padStr.length();",
      "info" : "VariableDeclarationStatement[166602-166631]:VariableDeclarationStatement[166790-166819]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[166640-166666]:VariableDeclarationStatement[166828-166854]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[166675-166700]:VariableDeclarationStatement[166863-166888]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[166709-166800]:IfStatement[166897-166988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166724-166800]:Block[166912-166988]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[166738-166749]:ReturnStatement[166926-166937]"
    }, {
      "left" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "right" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "info" : "IfStatement[166809-166916]:IfStatement[166997-167104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166847-166916]:Block[167035-167104]"
    }, {
      "left" : "return rightPad(str, size, padStr.charAt(0));",
      "right" : "return rightPad(str, size, padStr.charAt(0));",
      "info" : "ReturnStatement[166861-166906]:ReturnStatement[167049-167094]"
    }, {
      "left" : "if (pads == padLen)",
      "right" : "if (pads == padLen)",
      "info" : "IfStatement[166926-167366]:IfStatement[167114-167554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166946-166996]:Block[167134-167184]"
    }, {
      "left" : "return str.concat(padStr);",
      "right" : "return str.concat(padStr);",
      "info" : "ReturnStatement[166960-166986]:ReturnStatement[167148-167174]"
    }, {
      "left" : "if (pads < padLen)",
      "right" : "if (pads < padLen)",
      "info" : "IfStatement[167002-167366]:IfStatement[167190-167554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167021-167090]:Block[167209-167278]"
    }, {
      "left" : "return str.concat(padStr.substring(0, pads));",
      "right" : "return str.concat(padStr.substring(0, pads));",
      "info" : "ReturnStatement[167035-167080]:ReturnStatement[167223-167268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167096-167366]:Block[167284-167554]"
    }, {
      "left" : "char[] padding = new char[pads];",
      "right" : "char[] padding = new char[pads];",
      "info" : "VariableDeclarationStatement[167110-167142]:VariableDeclarationStatement[167298-167330]"
    }, {
      "left" : "char[] padChars = padStr.toCharArray();",
      "right" : "char[] padChars = padStr.toCharArray();",
      "info" : "VariableDeclarationStatement[167155-167194]:VariableDeclarationStatement[167343-167382]"
    }, {
      "left" : "for (int i = 0; i < pads; i++)",
      "right" : "for (int i = 0; i < pads; i++)",
      "info" : "ForStatement[167207-167304]:ForStatement[167395-167492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167238-167304]:Block[167426-167492]"
    }, {
      "left" : "padding[i] = padChars[i % padLen];",
      "right" : "padding[i] = padChars[i % padLen];",
      "info" : "ExpressionStatement[167256-167290]:ExpressionStatement[167444-167478]"
    }, {
      "left" : "return str.concat(new String(padding));",
      "right" : "return str.concat(new String(padding));",
      "info" : "ReturnStatement[167317-167356]:ReturnStatement[167505-167544]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[168060-168066]:Modifier[168248-168254]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[168067-168073]:Modifier[168255-168261]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[168074-168080]:SimpleType[168262-168268]"
    }, {
      "left" : "leftPad",
      "right" : "leftPad",
      "info" : "SimpleName[168081-168088]:SimpleName[168269-168276]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[168089-168099]:SingleVariableDeclaration[168277-168287]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[168101-168109]:SingleVariableDeclaration[168289-168297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168111-168158]:Block[168299-168346]"
    }, {
      "left" : "return leftPad(str, size, ' ');",
      "right" : "return leftPad(str, size, ' ');",
      "info" : "ReturnStatement[168121-168152]:ReturnStatement[168309-168340]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[168933-168939]:Modifier[169121-169127]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[168940-168946]:Modifier[169128-169134]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[168947-168953]:SimpleType[169135-169141]"
    }, {
      "left" : "leftPad",
      "right" : "leftPad",
      "info" : "SimpleName[168954-168961]:SimpleName[169142-169149]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[168962-168972]:SingleVariableDeclaration[169150-169160]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[168974-168982]:SingleVariableDeclaration[169162-169170]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[168984-168996]:SingleVariableDeclaration[169172-169184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168998-169364]:Block[169186-169552]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[169008-169061]:IfStatement[169196-169249]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169025-169061]:Block[169213-169249]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[169039-169051]:ReturnStatement[169227-169239]"
    }, {
      "left" : "int pads = size - str.length();",
      "right" : "int pads = size - str.length();",
      "info" : "VariableDeclarationStatement[169070-169101]:VariableDeclarationStatement[169258-169289]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[169110-169201]:IfStatement[169298-169389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169125-169201]:Block[169313-169389]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[169139-169150]:ReturnStatement[169327-169338]"
    }, {
      "left" : "if (pads > PAD_LIMIT)",
      "right" : "if (pads > PAD_LIMIT)",
      "info" : "IfStatement[169210-169307]:IfStatement[169398-169495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169232-169307]:Block[169420-169495]"
    }, {
      "left" : "return leftPad(str, size, String.valueOf(padChar));",
      "right" : "return leftPad(str, size, String.valueOf(padChar));",
      "info" : "ReturnStatement[169246-169297]:ReturnStatement[169434-169485]"
    }, {
      "left" : "return padding(pads, padChar).concat(str);",
      "right" : "return padding(pads, padChar).concat(str);",
      "info" : "ReturnStatement[169316-169358]:ReturnStatement[169504-169546]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[170324-170330]:Modifier[170512-170518]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[170331-170337]:Modifier[170519-170525]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[170338-170344]:SimpleType[170526-170532]"
    }, {
      "left" : "leftPad",
      "right" : "leftPad",
      "info" : "SimpleName[170345-170352]:SimpleName[170533-170540]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[170353-170363]:SingleVariableDeclaration[170541-170551]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[170365-170373]:SingleVariableDeclaration[170553-170561]"
    }, {
      "left" : "String padStr",
      "right" : "String padStr",
      "info" : "SingleVariableDeclaration[170375-170388]:SingleVariableDeclaration[170563-170576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170390-171298]:Block[170578-171486]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[170400-170453]:IfStatement[170588-170641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170417-170453]:Block[170605-170641]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[170431-170443]:ReturnStatement[170619-170631]"
    }, {
      "left" : "if (isEmpty(padStr))",
      "right" : "if (isEmpty(padStr))",
      "info" : "IfStatement[170462-170520]:IfStatement[170650-170708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170483-170520]:Block[170671-170708]"
    }, {
      "left" : "padStr = \" \";",
      "right" : "padStr = \" \";",
      "info" : "ExpressionStatement[170497-170510]:ExpressionStatement[170685-170698]"
    }, {
      "left" : "int padLen = padStr.length();",
      "right" : "int padLen = padStr.length();",
      "info" : "VariableDeclarationStatement[170529-170558]:VariableDeclarationStatement[170717-170746]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[170567-170593]:VariableDeclarationStatement[170755-170781]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[170602-170627]:VariableDeclarationStatement[170790-170815]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[170636-170727]:IfStatement[170824-170915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170651-170727]:Block[170839-170915]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[170665-170676]:ReturnStatement[170853-170864]"
    }, {
      "left" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "right" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "info" : "IfStatement[170736-170842]:IfStatement[170924-171030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170774-170842]:Block[170962-171030]"
    }, {
      "left" : "return leftPad(str, size, padStr.charAt(0));",
      "right" : "return leftPad(str, size, padStr.charAt(0));",
      "info" : "ReturnStatement[170788-170832]:ReturnStatement[170976-171020]"
    }, {
      "left" : "if (pads == padLen)",
      "right" : "if (pads == padLen)",
      "info" : "IfStatement[170852-171292]:IfStatement[171040-171480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170872-170922]:Block[171060-171110]"
    }, {
      "left" : "return padStr.concat(str);",
      "right" : "return padStr.concat(str);",
      "info" : "ReturnStatement[170886-170912]:ReturnStatement[171074-171100]"
    }, {
      "left" : "if (pads < padLen)",
      "right" : "if (pads < padLen)",
      "info" : "IfStatement[170928-171292]:IfStatement[171116-171480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170947-171016]:Block[171135-171204]"
    }, {
      "left" : "return padStr.substring(0, pads).concat(str);",
      "right" : "return padStr.substring(0, pads).concat(str);",
      "info" : "ReturnStatement[170961-171006]:ReturnStatement[171149-171194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171022-171292]:Block[171210-171480]"
    }, {
      "left" : "char[] padding = new char[pads];",
      "right" : "char[] padding = new char[pads];",
      "info" : "VariableDeclarationStatement[171036-171068]:VariableDeclarationStatement[171224-171256]"
    }, {
      "left" : "char[] padChars = padStr.toCharArray();",
      "right" : "char[] padChars = padStr.toCharArray();",
      "info" : "VariableDeclarationStatement[171081-171120]:VariableDeclarationStatement[171269-171308]"
    }, {
      "left" : "for (int i = 0; i < pads; i++)",
      "right" : "for (int i = 0; i < pads; i++)",
      "info" : "ForStatement[171133-171230]:ForStatement[171321-171418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171164-171230]:Block[171352-171418]"
    }, {
      "left" : "padding[i] = padChars[i % padLen];",
      "right" : "padding[i] = padChars[i % padLen];",
      "info" : "ExpressionStatement[171182-171216]:ExpressionStatement[171370-171404]"
    }, {
      "left" : "return new String(padding).concat(str);",
      "right" : "return new String(padding).concat(str);",
      "info" : "ReturnStatement[171243-171282]:ReturnStatement[171431-171470]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[171579-171585]:Modifier[171767-171773]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[171586-171592]:Modifier[171774-171780]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[171593-171596]:PrimitiveType[171781-171784]"
    }, {
      "left" : "length",
      "right" : "length",
      "info" : "SimpleName[171597-171603]:SimpleName[171785-171791]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[171604-171614]:SingleVariableDeclaration[171792-171802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171616-171670]:Block[171804-171858]"
    }, {
      "left" : "return str == null ? 0 : str.length();",
      "right" : "return str == null ? 0 : str.length();",
      "info" : "ReturnStatement[171626-171664]:ReturnStatement[171814-171852]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[172681-172687]:Modifier[172869-172875]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[172688-172694]:Modifier[172876-172882]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[172695-172701]:SimpleType[172883-172889]"
    }, {
      "left" : "center",
      "right" : "center",
      "info" : "SimpleName[172702-172708]:SimpleName[172890-172896]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[172709-172719]:SingleVariableDeclaration[172897-172907]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[172721-172729]:SingleVariableDeclaration[172909-172917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172731-172777]:Block[172919-172965]"
    }, {
      "left" : "return center(str, size, ' ');",
      "right" : "return center(str, size, ' ');",
      "info" : "ReturnStatement[172741-172771]:ReturnStatement[172929-172959]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[173811-173817]:Modifier[173999-174005]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[173818-173824]:Modifier[174006-174012]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[173825-173831]:SimpleType[174013-174019]"
    }, {
      "left" : "center",
      "right" : "center",
      "info" : "SimpleName[173832-173838]:SimpleName[174020-174026]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[173839-173849]:SingleVariableDeclaration[174027-174037]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[173851-173859]:SingleVariableDeclaration[174039-174047]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[173861-173873]:SingleVariableDeclaration[174049-174061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173875-174204]:Block[174063-174392]"
    }, {
      "left" : "if (str == null || size <= 0)",
      "right" : "if (str == null || size <= 0)",
      "info" : "IfStatement[173885-173950]:IfStatement[174073-174138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173915-173950]:Block[174103-174138]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[173929-173940]:ReturnStatement[174117-174128]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[173959-173985]:VariableDeclarationStatement[174147-174173]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[173994-174019]:VariableDeclarationStatement[174182-174207]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[174028-174078]:IfStatement[174216-174266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174043-174078]:Block[174231-174266]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[174057-174068]:ReturnStatement[174245-174256]"
    }, {
      "left" : "str = leftPad(str, strLen + pads / 2, padChar);",
      "right" : "str = leftPad(str, strLen + pads / 2, padChar);",
      "info" : "ExpressionStatement[174087-174134]:ExpressionStatement[174275-174322]"
    }, {
      "left" : "str = rightPad(str, size, padChar);",
      "right" : "str = rightPad(str, size, padChar);",
      "info" : "ExpressionStatement[174143-174178]:ExpressionStatement[174331-174366]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[174187-174198]:ReturnStatement[174375-174386]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[175428-175434]:Modifier[175616-175622]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[175435-175441]:Modifier[175623-175629]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[175442-175448]:SimpleType[175630-175636]"
    }, {
      "left" : "center",
      "right" : "center",
      "info" : "SimpleName[175449-175455]:SimpleName[175637-175643]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[175456-175466]:SingleVariableDeclaration[175644-175654]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[175468-175476]:SingleVariableDeclaration[175656-175664]"
    }, {
      "left" : "String padStr",
      "right" : "String padStr",
      "info" : "SingleVariableDeclaration[175478-175491]:SingleVariableDeclaration[175666-175679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175493-175887]:Block[175681-176075]"
    }, {
      "left" : "if (str == null || size <= 0)",
      "right" : "if (str == null || size <= 0)",
      "info" : "IfStatement[175503-175568]:IfStatement[175691-175756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175533-175568]:Block[175721-175756]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[175547-175558]:ReturnStatement[175735-175746]"
    }, {
      "left" : "if (isEmpty(padStr))",
      "right" : "if (isEmpty(padStr))",
      "info" : "IfStatement[175577-175635]:IfStatement[175765-175823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175598-175635]:Block[175786-175823]"
    }, {
      "left" : "padStr = \" \";",
      "right" : "padStr = \" \";",
      "info" : "ExpressionStatement[175612-175625]:ExpressionStatement[175800-175813]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[175644-175670]:VariableDeclarationStatement[175832-175858]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[175679-175704]:VariableDeclarationStatement[175867-175892]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[175713-175763]:IfStatement[175901-175951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175728-175763]:Block[175916-175951]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[175742-175753]:ReturnStatement[175930-175941]"
    }, {
      "left" : "str = leftPad(str, strLen + pads / 2, padStr);",
      "right" : "str = leftPad(str, strLen + pads / 2, padStr);",
      "info" : "ExpressionStatement[175772-175818]:ExpressionStatement[175960-176006]"
    }, {
      "left" : "str = rightPad(str, size, padStr);",
      "right" : "str = rightPad(str, size, padStr);",
      "info" : "ExpressionStatement[175827-175861]:ExpressionStatement[176015-176049]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[175870-175881]:ReturnStatement[176058-176069]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[176834-176840]:Modifier[177022-177028]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[176841-176847]:Modifier[177029-177035]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[176848-176854]:SimpleType[177036-177042]"
    }, {
      "left" : "upperCase",
      "right" : "upperCase",
      "info" : "SimpleName[176855-176864]:SimpleName[177043-177052]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[176865-176875]:SingleVariableDeclaration[177053-177063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[176877-176980]:Block[177065-177168]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[176887-176940]:IfStatement[177075-177128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[176904-176940]:Block[177092-177128]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[176918-176930]:ReturnStatement[177106-177118]"
    }, {
      "left" : "return str.toUpperCase();",
      "right" : "return str.toUpperCase();",
      "info" : "ReturnStatement[176949-176974]:ReturnStatement[177137-177162]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[177636-177642]:Modifier[177824-177830]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[177643-177649]:Modifier[177831-177837]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[177650-177656]:SimpleType[177838-177844]"
    }, {
      "left" : "upperCase",
      "right" : "upperCase",
      "info" : "SimpleName[177657-177666]:SimpleName[177845-177854]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[177667-177677]:SingleVariableDeclaration[177855-177865]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[177679-177692]:SingleVariableDeclaration[177867-177880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[177694-177803]:Block[177882-177991]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[177704-177757]:IfStatement[177892-177945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[177721-177757]:Block[177909-177945]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[177735-177747]:ReturnStatement[177923-177935]"
    }, {
      "left" : "return str.toUpperCase(locale);",
      "right" : "return str.toUpperCase(locale);",
      "info" : "ReturnStatement[177766-177797]:ReturnStatement[177954-177985]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[178649-178655]:Modifier[178837-178843]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[178656-178662]:Modifier[178844-178850]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[178663-178669]:SimpleType[178851-178857]"
    }, {
      "left" : "lowerCase",
      "right" : "lowerCase",
      "info" : "SimpleName[178670-178679]:SimpleName[178858-178867]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[178680-178690]:SingleVariableDeclaration[178868-178878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[178692-178795]:Block[178880-178983]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[178702-178755]:IfStatement[178890-178943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[178719-178755]:Block[178907-178943]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[178733-178745]:ReturnStatement[178921-178933]"
    }, {
      "left" : "return str.toLowerCase();",
      "right" : "return str.toLowerCase();",
      "info" : "ReturnStatement[178764-178789]:ReturnStatement[178952-178977]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[179451-179457]:Modifier[179639-179645]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[179458-179464]:Modifier[179646-179652]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[179465-179471]:SimpleType[179653-179659]"
    }, {
      "left" : "lowerCase",
      "right" : "lowerCase",
      "info" : "SimpleName[179472-179481]:SimpleName[179660-179669]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[179482-179492]:SingleVariableDeclaration[179670-179680]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[179494-179507]:SingleVariableDeclaration[179682-179695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179509-179618]:Block[179697-179806]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[179519-179572]:IfStatement[179707-179760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179536-179572]:Block[179724-179760]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[179550-179562]:ReturnStatement[179738-179750]"
    }, {
      "left" : "return str.toLowerCase(locale);",
      "right" : "return str.toLowerCase(locale);",
      "info" : "ReturnStatement[179581-179612]:ReturnStatement[179769-179800]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[180399-180405]:Modifier[180587-180593]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[180406-180412]:Modifier[180594-180600]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[180413-180419]:SimpleType[180601-180607]"
    }, {
      "left" : "capitalize",
      "right" : "capitalize",
      "info" : "SimpleName[180420-180430]:SimpleName[180608-180618]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[180431-180441]:SingleVariableDeclaration[180619-180629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180443-180725]:Block[180631-180913]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[180453-180464]:VariableDeclarationStatement[180641-180652]"
    }, {
      "left" : "if (str == null || (strLen = str.length()) == 0)",
      "right" : "if (str == null || (strLen = str.length()) == 0)",
      "info" : "IfStatement[180473-180557]:IfStatement[180661-180745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180522-180557]:Block[180710-180745]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[180536-180547]:ReturnStatement[180724-180735]"
    }, {
      "left" : "return new StringBuilder(strLen)\n            .append(Character.toTitleCase(str.charAt(0)))\n            .append(str.substring(1))\n            .toString();",
      "right" : "return new StringBuilder(strLen)\n            .append(Character.toTitleCase(str.charAt(0)))\n            .append(str.substring(1))\n            .toString();",
      "info" : "ReturnStatement[180566-180719]:ReturnStatement[180754-180907]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[181522-181528]:Modifier[181710-181716]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[181529-181535]:Modifier[181717-181723]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[181536-181542]:SimpleType[181724-181730]"
    }, {
      "left" : "uncapitalize",
      "right" : "uncapitalize",
      "info" : "SimpleName[181543-181555]:SimpleName[181731-181743]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[181556-181566]:SingleVariableDeclaration[181744-181754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181568-181850]:Block[181756-182038]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[181578-181589]:VariableDeclarationStatement[181766-181777]"
    }, {
      "left" : "if (str == null || (strLen = str.length()) == 0)",
      "right" : "if (str == null || (strLen = str.length()) == 0)",
      "info" : "IfStatement[181598-181682]:IfStatement[181786-181870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181647-181682]:Block[181835-181870]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[181661-181672]:ReturnStatement[181849-181860]"
    }, {
      "left" : "return new StringBuilder(strLen)\n            .append(Character.toLowerCase(str.charAt(0)))\n            .append(str.substring(1))\n            .toString();",
      "right" : "return new StringBuilder(strLen)\n            .append(Character.toLowerCase(str.charAt(0)))\n            .append(str.substring(1))\n            .toString();",
      "info" : "ReturnStatement[181691-181844]:ReturnStatement[181879-182032]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[182953-182959]:Modifier[183141-183147]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[182960-182966]:Modifier[183148-183154]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[182967-182973]:SimpleType[183155-183161]"
    }, {
      "left" : "swapCase",
      "right" : "swapCase",
      "info" : "SimpleName[182974-182982]:SimpleName[183162-183170]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[182983-182993]:SingleVariableDeclaration[183171-183181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[182995-183652]:Block[183183-183840]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[183005-183016]:VariableDeclarationStatement[183193-183204]"
    }, {
      "left" : "if (str == null || (strLen = str.length()) == 0)",
      "right" : "if (str == null || (strLen = str.length()) == 0)",
      "info" : "IfStatement[183025-183109]:IfStatement[183213-183297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183074-183109]:Block[183262-183297]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[183088-183099]:ReturnStatement[183276-183287]"
    }, {
      "left" : "StringBuilder buffer = new StringBuilder(strLen);",
      "right" : "StringBuilder buffer = new StringBuilder(strLen);",
      "info" : "VariableDeclarationStatement[183118-183167]:VariableDeclarationStatement[183306-183355]"
    }, {
      "left" : "char ch = 0;",
      "right" : "char ch = 0;",
      "info" : "VariableDeclarationStatement[183177-183189]:VariableDeclarationStatement[183365-183377]"
    }, {
      "left" : "for (int i = 0; i < strLen; i++)",
      "right" : "for (int i = 0; i < strLen; i++)",
      "info" : "ForStatement[183198-183612]:ForStatement[183386-183800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183231-183612]:Block[183419-183800]"
    }, {
      "left" : "ch = str.charAt(i);",
      "right" : "ch = str.charAt(i);",
      "info" : "ExpressionStatement[183245-183264]:ExpressionStatement[183433-183452]"
    }, {
      "left" : "if (Character.isUpperCase(ch))",
      "right" : "if (Character.isUpperCase(ch))",
      "info" : "IfStatement[183277-183571]:IfStatement[183465-183759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183308-183371]:Block[183496-183559]"
    }, {
      "left" : "ch = Character.toLowerCase(ch);",
      "right" : "ch = Character.toLowerCase(ch);",
      "info" : "ExpressionStatement[183326-183357]:ExpressionStatement[183514-183545]"
    }, {
      "left" : "if (Character.isTitleCase(ch))",
      "right" : "if (Character.isTitleCase(ch))",
      "info" : "IfStatement[183377-183571]:IfStatement[183565-183759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183408-183471]:Block[183596-183659]"
    }, {
      "left" : "ch = Character.toLowerCase(ch);",
      "right" : "ch = Character.toLowerCase(ch);",
      "info" : "ExpressionStatement[183426-183457]:ExpressionStatement[183614-183645]"
    }, {
      "left" : "if (Character.isLowerCase(ch))",
      "right" : "if (Character.isLowerCase(ch))",
      "info" : "IfStatement[183477-183571]:IfStatement[183665-183759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183508-183571]:Block[183696-183759]"
    }, {
      "left" : "ch = Character.toUpperCase(ch);",
      "right" : "ch = Character.toUpperCase(ch);",
      "info" : "ExpressionStatement[183526-183557]:ExpressionStatement[183714-183745]"
    }, {
      "left" : "buffer.append(ch);",
      "right" : "buffer.append(ch);",
      "info" : "ExpressionStatement[183584-183602]:ExpressionStatement[183772-183790]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[183621-183646]:ReturnStatement[183809-183834]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[184532-184538]:Modifier[184720-184726]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[184539-184545]:Modifier[184727-184733]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[184546-184549]:PrimitiveType[184734-184737]"
    }, {
      "left" : "countMatches",
      "right" : "countMatches",
      "info" : "SimpleName[184550-184562]:SimpleName[184738-184750]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[184563-184573]:SingleVariableDeclaration[184751-184761]"
    }, {
      "left" : "String sub",
      "right" : "String sub",
      "info" : "SingleVariableDeclaration[184575-184585]:SingleVariableDeclaration[184763-184773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184587-184854]:Block[184775-185042]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(sub))",
      "right" : "if (isEmpty(str) || isEmpty(sub))",
      "info" : "IfStatement[184597-184664]:IfStatement[184785-184852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184631-184664]:Block[184819-184852]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[184645-184654]:ReturnStatement[184833-184842]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[184673-184687]:VariableDeclarationStatement[184861-184875]"
    }, {
      "left" : "int idx = 0;",
      "right" : "int idx = 0;",
      "info" : "VariableDeclarationStatement[184696-184708]:VariableDeclarationStatement[184884-184896]"
    }, {
      "left" : "while ((idx = str.indexOf(sub, idx)) != -1)",
      "right" : "while ((idx = str.indexOf(sub, idx)) != -1)",
      "info" : "WhileStatement[184717-184826]:WhileStatement[184905-185014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184761-184826]:Block[184949-185014]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[184775-184783]:ExpressionStatement[184963-184971]"
    }, {
      "left" : "idx += sub.length();",
      "right" : "idx += sub.length();",
      "info" : "ExpressionStatement[184796-184816]:ExpressionStatement[184984-185004]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[184835-184848]:ReturnStatement[185023-185036]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[185597-185603]:Modifier[185785-185791]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[185604-185610]:Modifier[185792-185798]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[185611-185618]:PrimitiveType[185799-185806]"
    }, {
      "left" : "isAlpha",
      "right" : "isAlpha",
      "info" : "SimpleName[185619-185626]:SimpleName[185807-185814]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[185627-185637]:SingleVariableDeclaration[185815-185825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185639-185916]:Block[185827-186104]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[185649-185703]:IfStatement[185837-185891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185666-185703]:Block[185854-185891]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[185680-185693]:ReturnStatement[185868-185881]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[185712-185734]:VariableDeclarationStatement[185900-185922]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[185743-185889]:ForStatement[185931-186077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185772-185889]:Block[185960-186077]"
    }, {
      "left" : "if (Character.isLetter(str.charAt(i)) == false)",
      "right" : "if (Character.isLetter(str.charAt(i)) == false)",
      "info" : "IfStatement[185786-185879]:IfStatement[185974-186067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185834-185879]:Block[186022-186067]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[185852-185865]:ReturnStatement[186040-186053]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[185898-185910]:ReturnStatement[186086-186098]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[186674-186680]:Modifier[186862-186868]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[186681-186687]:Modifier[186869-186875]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[186688-186695]:PrimitiveType[186876-186883]"
    }, {
      "left" : "isAlphaSpace",
      "right" : "isAlphaSpace",
      "info" : "SimpleName[186696-186708]:SimpleName[186884-186896]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[186709-186719]:SingleVariableDeclaration[186897-186907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[186721-187026]:Block[186909-187214]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[186731-186785]:IfStatement[186919-186973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[186748-186785]:Block[186936-186973]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[186762-186775]:ReturnStatement[186950-186963]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[186794-186816]:VariableDeclarationStatement[186982-187004]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[186825-186999]:ForStatement[187013-187187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[186854-186999]:Block[187042-187187]"
    }, {
      "left" : "if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' '))",
      "right" : "if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' '))",
      "info" : "IfStatement[186868-186989]:IfStatement[187056-187177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[186944-186989]:Block[187132-187177]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[186962-186975]:ReturnStatement[187150-187163]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[187008-187020]:ReturnStatement[187196-187208]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[187787-187793]:Modifier[187975-187981]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[187794-187800]:Modifier[187982-187988]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[187801-187808]:PrimitiveType[187989-187996]"
    }, {
      "left" : "isAlphanumeric",
      "right" : "isAlphanumeric",
      "info" : "SimpleName[187809-187823]:SimpleName[187997-188011]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[187824-187834]:SingleVariableDeclaration[188012-188022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187836-188120]:Block[188024-188308]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[187846-187900]:IfStatement[188034-188088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187863-187900]:Block[188051-188088]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[187877-187890]:ReturnStatement[188065-188078]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[187909-187931]:VariableDeclarationStatement[188097-188119]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[187940-188093]:ForStatement[188128-188281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187969-188093]:Block[188157-188281]"
    }, {
      "left" : "if (Character.isLetterOrDigit(str.charAt(i)) == false)",
      "right" : "if (Character.isLetterOrDigit(str.charAt(i)) == false)",
      "info" : "IfStatement[187983-188083]:IfStatement[188171-188271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[188038-188083]:Block[188226-188271]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[188056-188069]:ReturnStatement[188244-188257]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[188102-188114]:ReturnStatement[188290-188302]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[188919-188925]:Modifier[189107-189113]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[188926-188932]:Modifier[189114-189120]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[188933-188940]:PrimitiveType[189121-189128]"
    }, {
      "left" : "isAlphanumericSpace",
      "right" : "isAlphanumericSpace",
      "info" : "SimpleName[188941-188960]:SimpleName[189129-189148]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[188961-188971]:SingleVariableDeclaration[189149-189159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[188973-189285]:Block[189161-189473]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[188983-189037]:IfStatement[189171-189225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189000-189037]:Block[189188-189225]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[189014-189027]:ReturnStatement[189202-189215]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[189046-189068]:VariableDeclarationStatement[189234-189256]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[189077-189258]:ForStatement[189265-189446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189106-189258]:Block[189294-189446]"
    }, {
      "left" : "if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' '))",
      "right" : "if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' '))",
      "info" : "IfStatement[189120-189248]:IfStatement[189308-189436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189203-189248]:Block[189391-189436]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[189221-189234]:ReturnStatement[189409-189422]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[189267-189279]:ReturnStatement[189455-189467]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[190314-190320]:Modifier[190502-190508]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[190321-190327]:Modifier[190509-190515]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[190328-190335]:PrimitiveType[190516-190523]"
    }, {
      "left" : "isAsciiPrintable",
      "right" : "isAsciiPrintable",
      "info" : "SimpleName[190336-190352]:SimpleName[190524-190540]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[190353-190363]:SingleVariableDeclaration[190541-190551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190365-190650]:Block[190553-190838]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[190375-190429]:IfStatement[190563-190617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190392-190429]:Block[190580-190617]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[190406-190419]:ReturnStatement[190594-190607]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[190438-190460]:VariableDeclarationStatement[190626-190648]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[190469-190623]:ForStatement[190657-190811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190498-190623]:Block[190686-190811]"
    }, {
      "left" : "if (CharUtils.isAsciiPrintable(str.charAt(i)) == false)",
      "right" : "if (CharUtils.isAsciiPrintable(str.charAt(i)) == false)",
      "info" : "IfStatement[190512-190613]:IfStatement[190700-190801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190568-190613]:Block[190756-190801]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[190586-190599]:ReturnStatement[190774-190787]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[190632-190644]:ReturnStatement[190820-190832]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[191457-191463]:Modifier[191645-191651]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[191464-191470]:Modifier[191652-191658]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[191471-191478]:PrimitiveType[191659-191666]"
    }, {
      "left" : "isNumeric",
      "right" : "isNumeric",
      "info" : "SimpleName[191479-191488]:SimpleName[191667-191676]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[191489-191499]:SingleVariableDeclaration[191677-191687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191501-191777]:Block[191689-191965]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[191511-191565]:IfStatement[191699-191753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191528-191565]:Block[191716-191753]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[191542-191555]:ReturnStatement[191730-191743]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[191574-191596]:VariableDeclarationStatement[191762-191784]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[191605-191750]:ForStatement[191793-191938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191634-191750]:Block[191822-191938]"
    }, {
      "left" : "if (Character.isDigit(str.charAt(i)) == false)",
      "right" : "if (Character.isDigit(str.charAt(i)) == false)",
      "info" : "IfStatement[191648-191740]:IfStatement[191836-191928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191695-191740]:Block[191883-191928]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[191713-191726]:ReturnStatement[191901-191914]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[191759-191771]:ReturnStatement[191947-191959]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[192634-192640]:Modifier[192822-192828]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[192641-192647]:Modifier[192829-192835]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[192648-192655]:PrimitiveType[192836-192843]"
    }, {
      "left" : "isNumericSpace",
      "right" : "isNumericSpace",
      "info" : "SimpleName[192656-192670]:SimpleName[192844-192858]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[192671-192681]:SingleVariableDeclaration[192859-192869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[192683-192987]:Block[192871-193175]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[192693-192747]:IfStatement[192881-192935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[192710-192747]:Block[192898-192935]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[192724-192737]:ReturnStatement[192912-192925]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[192756-192778]:VariableDeclarationStatement[192944-192966]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[192787-192960]:ForStatement[192975-193148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[192816-192960]:Block[193004-193148]"
    }, {
      "left" : "if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' '))",
      "right" : "if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' '))",
      "info" : "IfStatement[192830-192950]:IfStatement[193018-193138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[192905-192950]:Block[193093-193138]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[192923-192936]:ReturnStatement[193111-193124]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[192969-192981]:ReturnStatement[193157-193169]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[193675-193681]:Modifier[193863-193869]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[193682-193688]:Modifier[193870-193876]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[193689-193696]:PrimitiveType[193877-193884]"
    }, {
      "left" : "isWhitespace",
      "right" : "isWhitespace",
      "info" : "SimpleName[193697-193709]:SimpleName[193885-193897]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[193710-193720]:SingleVariableDeclaration[193898-193908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193722-194005]:Block[193910-194193]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[193732-193786]:IfStatement[193920-193974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193749-193786]:Block[193937-193974]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[193763-193776]:ReturnStatement[193951-193964]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[193795-193817]:VariableDeclarationStatement[193983-194005]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[193826-193978]:ForStatement[194014-194166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193855-193978]:Block[194043-194166]"
    }, {
      "left" : "if ((Character.isWhitespace(str.charAt(i)) == false))",
      "right" : "if ((Character.isWhitespace(str.charAt(i)) == false))",
      "info" : "IfStatement[193869-193968]:IfStatement[194057-194156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193923-193968]:Block[194111-194156]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[193941-193954]:ReturnStatement[194129-194142]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[193987-193999]:ReturnStatement[194175-194187]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[194658-194664]:Modifier[194846-194852]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[194665-194671]:Modifier[194853-194859]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[194672-194679]:PrimitiveType[194860-194867]"
    }, {
      "left" : "isAllLowerCase",
      "right" : "isAllLowerCase",
      "info" : "SimpleName[194680-194694]:SimpleName[194868-194882]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[194695-194705]:SingleVariableDeclaration[194883-194893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194707-195003]:Block[194895-195191]"
    }, {
      "left" : "if (str == null || isEmpty(str))",
      "right" : "if (str == null || isEmpty(str))",
      "info" : "IfStatement[194717-194787]:IfStatement[194905-194975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194750-194787]:Block[194938-194975]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[194764-194777]:ReturnStatement[194952-194965]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[194796-194818]:VariableDeclarationStatement[194984-195006]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[194827-194976]:ForStatement[195015-195164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194856-194976]:Block[195044-195164]"
    }, {
      "left" : "if (Character.isLowerCase(str.charAt(i)) == false)",
      "right" : "if (Character.isLowerCase(str.charAt(i)) == false)",
      "info" : "IfStatement[194870-194966]:IfStatement[195058-195154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194921-194966]:Block[195109-195154]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[194939-194952]:ReturnStatement[195127-195140]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[194985-194997]:ReturnStatement[195173-195185]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[195656-195662]:Modifier[195844-195850]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[195663-195669]:Modifier[195851-195857]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[195670-195677]:PrimitiveType[195858-195865]"
    }, {
      "left" : "isAllUpperCase",
      "right" : "isAllUpperCase",
      "info" : "SimpleName[195678-195692]:SimpleName[195866-195880]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[195693-195703]:SingleVariableDeclaration[195881-195891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195705-196001]:Block[195893-196189]"
    }, {
      "left" : "if (str == null || isEmpty(str))",
      "right" : "if (str == null || isEmpty(str))",
      "info" : "IfStatement[195715-195785]:IfStatement[195903-195973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195748-195785]:Block[195936-195973]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[195762-195775]:ReturnStatement[195950-195963]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[195794-195816]:VariableDeclarationStatement[195982-196004]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[195825-195974]:ForStatement[196013-196162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195854-195974]:Block[196042-196162]"
    }, {
      "left" : "if (Character.isUpperCase(str.charAt(i)) == false)",
      "right" : "if (Character.isUpperCase(str.charAt(i)) == false)",
      "info" : "IfStatement[195868-195964]:IfStatement[196056-196152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195919-195964]:Block[196107-196152]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[195937-195950]:ReturnStatement[196125-196138]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[195983-195995]:ReturnStatement[196171-196183]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[196636-196642]:Modifier[196824-196830]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[196643-196649]:Modifier[196831-196837]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[196650-196656]:SimpleType[196838-196844]"
    }, {
      "left" : "defaultString",
      "right" : "defaultString",
      "info" : "SimpleName[196657-196670]:SimpleName[196845-196858]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[196671-196681]:SingleVariableDeclaration[196859-196869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[196683-196732]:Block[196871-196920]"
    }, {
      "left" : "return str == null ? EMPTY : str;",
      "right" : "return str == null ? EMPTY : str;",
      "info" : "ReturnStatement[196693-196726]:ReturnStatement[196881-196914]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[197421-197427]:Modifier[197609-197615]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[197428-197434]:Modifier[197616-197622]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[197435-197441]:SimpleType[197623-197629]"
    }, {
      "left" : "defaultString",
      "right" : "defaultString",
      "info" : "SimpleName[197442-197455]:SimpleName[197630-197643]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[197456-197466]:SingleVariableDeclaration[197644-197654]"
    }, {
      "left" : "String defaultStr",
      "right" : "String defaultStr",
      "info" : "SingleVariableDeclaration[197468-197485]:SingleVariableDeclaration[197656-197673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[197487-197541]:Block[197675-197729]"
    }, {
      "left" : "return str == null ? defaultStr : str;",
      "right" : "return str == null ? defaultStr : str;",
      "info" : "ReturnStatement[197497-197535]:ReturnStatement[197685-197723]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[198259-198265]:Modifier[198447-198453]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[198266-198272]:Modifier[198454-198460]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[198273-198279]:SimpleType[198461-198467]"
    }, {
      "left" : "defaultIfEmpty",
      "right" : "defaultIfEmpty",
      "info" : "SimpleName[198280-198294]:SimpleName[198468-198482]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[198295-198305]:SingleVariableDeclaration[198483-198493]"
    }, {
      "left" : "String defaultStr",
      "right" : "String defaultStr",
      "info" : "SingleVariableDeclaration[198307-198324]:SingleVariableDeclaration[198495-198512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198326-198393]:Block[198514-198581]"
    }, {
      "left" : "return StringUtils.isEmpty(str) ? defaultStr : str;",
      "right" : "return StringUtils.isEmpty(str) ? defaultStr : str;",
      "info" : "ReturnStatement[198336-198387]:ReturnStatement[198524-198575]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[198949-198955]:Modifier[199137-199143]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[198956-198962]:Modifier[199144-199150]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[198963-198969]:SimpleType[199151-199157]"
    }, {
      "left" : "reverse",
      "right" : "reverse",
      "info" : "SimpleName[198970-198977]:SimpleName[199158-199165]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[198978-198988]:SingleVariableDeclaration[199166-199176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198990-199119]:Block[199178-199307]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[199000-199053]:IfStatement[199188-199241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199017-199053]:Block[199205-199241]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[199031-199043]:ReturnStatement[199219-199231]"
    }, {
      "left" : "return new StringBuilder(str).reverse().toString();",
      "right" : "return new StringBuilder(str).reverse().toString();",
      "info" : "ReturnStatement[199062-199113]:ReturnStatement[199250-199301]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[199871-199877]:Modifier[200059-200065]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[199878-199884]:Modifier[200066-200072]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[199885-199891]:SimpleType[200073-200079]"
    }, {
      "left" : "reverseDelimited",
      "right" : "reverseDelimited",
      "info" : "SimpleName[199892-199908]:SimpleName[200080-200096]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[199909-199919]:SingleVariableDeclaration[200097-200107]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[199921-199939]:SingleVariableDeclaration[200109-200127]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199941-200245]:Block[200129-200433]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[199951-200004]:IfStatement[200139-200192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199968-200004]:Block[200156-200192]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[199982-199994]:ReturnStatement[200170-200182]"
    }, {
      "left" : "String[] strs = split(str, separatorChar);",
      "right" : "String[] strs = split(str, separatorChar);",
      "info" : "VariableDeclarationStatement[200121-200163]:VariableDeclarationStatement[200309-200351]"
    }, {
      "left" : "ArrayUtils.reverse(strs);",
      "right" : "ArrayUtils.reverse(strs);",
      "info" : "ExpressionStatement[200172-200197]:ExpressionStatement[200360-200385]"
    }, {
      "left" : "return join(strs, separatorChar);",
      "right" : "return join(strs, separatorChar);",
      "info" : "ReturnStatement[200206-200239]:ReturnStatement[200394-200427]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[201737-201743]:Modifier[201925-201931]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[201744-201750]:Modifier[201932-201938]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[201751-201757]:SimpleType[201939-201945]"
    }, {
      "left" : "abbreviate",
      "right" : "abbreviate",
      "info" : "SimpleName[201758-201768]:SimpleName[201946-201956]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[201769-201779]:SingleVariableDeclaration[201957-201967]"
    }, {
      "left" : "int maxWidth",
      "right" : "int maxWidth",
      "info" : "SingleVariableDeclaration[201781-201793]:SingleVariableDeclaration[201969-201981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[201795-201847]:Block[201983-202035]"
    }, {
      "left" : "return abbreviate(str, 0, maxWidth);",
      "right" : "return abbreviate(str, 0, maxWidth);",
      "info" : "ReturnStatement[201805-201841]:ReturnStatement[201993-202029]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[203754-203760]:Modifier[203942-203948]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[203761-203767]:Modifier[203949-203955]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[203768-203774]:SimpleType[203956-203962]"
    }, {
      "left" : "abbreviate",
      "right" : "abbreviate",
      "info" : "SimpleName[203775-203785]:SimpleName[203963-203973]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[203786-203796]:SingleVariableDeclaration[203974-203984]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[203798-203808]:SingleVariableDeclaration[203986-203996]"
    }, {
      "left" : "int maxWidth",
      "right" : "int maxWidth",
      "info" : "SingleVariableDeclaration[203810-203822]:SingleVariableDeclaration[203998-204010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203824-204728]:Block[204012-204916]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[203834-203887]:IfStatement[204022-204075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203851-203887]:Block[204039-204075]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[203865-203877]:ReturnStatement[204053-204065]"
    }, {
      "left" : "if (maxWidth < 4)",
      "right" : "if (maxWidth < 4)",
      "info" : "IfStatement[203896-204008]:IfStatement[204084-204196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203914-204008]:Block[204102-204196]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Minimum abbreviation width is 4\");",
      "right" : "throw new IllegalArgumentException(\"Minimum abbreviation width is 4\");",
      "info" : "ThrowStatement[203928-203998]:ThrowStatement[204116-204186]"
    }, {
      "left" : "if (str.length() <= maxWidth)",
      "right" : "if (str.length() <= maxWidth)",
      "info" : "IfStatement[204017-204082]:IfStatement[204205-204270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204047-204082]:Block[204235-204270]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[204061-204072]:ReturnStatement[204249-204260]"
    }, {
      "left" : "if (offset > str.length())",
      "right" : "if (offset > str.length())",
      "info" : "IfStatement[204091-204164]:IfStatement[204279-204352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204118-204164]:Block[204306-204352]"
    }, {
      "left" : "offset = str.length();",
      "right" : "offset = str.length();",
      "info" : "ExpressionStatement[204132-204154]:ExpressionStatement[204320-204342]"
    }, {
      "left" : "if ((str.length() - offset) < (maxWidth - 3))",
      "right" : "if ((str.length() - offset) < (maxWidth - 3))",
      "info" : "IfStatement[204173-204282]:IfStatement[204361-204470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204219-204282]:Block[204407-204470]"
    }, {
      "left" : "offset = str.length() - (maxWidth - 3);",
      "right" : "offset = str.length() - (maxWidth - 3);",
      "info" : "ExpressionStatement[204233-204272]:ExpressionStatement[204421-204460]"
    }, {
      "left" : "if (offset <= 4)",
      "right" : "if (offset <= 4)",
      "info" : "IfStatement[204291-204378]:IfStatement[204479-204566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204308-204378]:Block[204496-204566]"
    }, {
      "left" : "return str.substring(0, maxWidth - 3) + \"...\";",
      "right" : "return str.substring(0, maxWidth - 3) + \"...\";",
      "info" : "ReturnStatement[204322-204368]:ReturnStatement[204510-204556]"
    }, {
      "left" : "if (maxWidth < 7)",
      "right" : "if (maxWidth < 7)",
      "info" : "IfStatement[204387-204511]:IfStatement[204575-204699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204405-204511]:Block[204593-204699]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Minimum abbreviation width with offset is 7\");",
      "right" : "throw new IllegalArgumentException(\"Minimum abbreviation width with offset is 7\");",
      "info" : "ThrowStatement[204419-204501]:ThrowStatement[204607-204689]"
    }, {
      "left" : "if ((offset + (maxWidth - 3)) < str.length())",
      "right" : "if ((offset + (maxWidth - 3)) < str.length())",
      "info" : "IfStatement[204520-204653]:IfStatement[204708-204841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204566-204653]:Block[204754-204841]"
    }, {
      "left" : "return \"...\" + abbreviate(str.substring(offset), maxWidth - 3);",
      "right" : "return \"...\" + abbreviate(str.substring(offset), maxWidth - 3);",
      "info" : "ReturnStatement[204580-204643]:ReturnStatement[204768-204831]"
    }, {
      "left" : "return \"...\" + str.substring(str.length() - (maxWidth - 3));",
      "right" : "return \"...\" + str.substring(str.length() - (maxWidth - 3));",
      "info" : "ReturnStatement[204662-204722]:ReturnStatement[204850-204910]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[205834-205840]:Modifier[206022-206028]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[205841-205847]:Modifier[206029-206035]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[205848-205854]:SimpleType[206036-206042]"
    }, {
      "left" : "difference",
      "right" : "difference",
      "info" : "SimpleName[205855-205865]:SimpleName[206043-206053]"
    }, {
      "left" : "String str1",
      "right" : "String str1",
      "info" : "SingleVariableDeclaration[205866-205877]:SingleVariableDeclaration[206054-206065]"
    }, {
      "left" : "String str2",
      "right" : "String str2",
      "info" : "SingleVariableDeclaration[205879-205890]:SingleVariableDeclaration[206067-206078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[205892-206168]:Block[206080-206356]"
    }, {
      "left" : "if (str1 == null)",
      "right" : "if (str1 == null)",
      "info" : "IfStatement[205902-205956]:IfStatement[206090-206144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[205920-205956]:Block[206108-206144]"
    }, {
      "left" : "return str2;",
      "right" : "return str2;",
      "info" : "ReturnStatement[205934-205946]:ReturnStatement[206122-206134]"
    }, {
      "left" : "if (str2 == null)",
      "right" : "if (str2 == null)",
      "info" : "IfStatement[205965-206019]:IfStatement[206153-206207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[205983-206019]:Block[206171-206207]"
    }, {
      "left" : "return str1;",
      "right" : "return str1;",
      "info" : "ReturnStatement[205997-206009]:ReturnStatement[206185-206197]"
    }, {
      "left" : "int at = indexOfDifference(str1, str2);",
      "right" : "int at = indexOfDifference(str1, str2);",
      "info" : "VariableDeclarationStatement[206028-206067]:VariableDeclarationStatement[206216-206255]"
    }, {
      "left" : "if (at == -1)",
      "right" : "if (at == -1)",
      "info" : "IfStatement[206076-206127]:IfStatement[206264-206315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[206090-206127]:Block[206278-206315]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[206104-206117]:ReturnStatement[206292-206305]"
    }, {
      "left" : "return str2.substring(at);",
      "right" : "return str2.substring(at);",
      "info" : "ReturnStatement[206136-206162]:ReturnStatement[206324-206350]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[207083-207089]:Modifier[207271-207277]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[207090-207096]:Modifier[207278-207284]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[207097-207100]:PrimitiveType[207285-207288]"
    }, {
      "left" : "indexOfDifference",
      "right" : "indexOfDifference",
      "info" : "SimpleName[207101-207118]:SimpleName[207289-207306]"
    }, {
      "left" : "String str1",
      "right" : "String str1",
      "info" : "SingleVariableDeclaration[207119-207130]:SingleVariableDeclaration[207307-207318]"
    }, {
      "left" : "String str2",
      "right" : "String str2",
      "info" : "SingleVariableDeclaration[207132-207143]:SingleVariableDeclaration[207320-207331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207145-207575]:Block[207333-207763]"
    }, {
      "left" : "if (str1 == str2)",
      "right" : "if (str1 == str2)",
      "info" : "IfStatement[207155-207207]:IfStatement[207343-207395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207173-207207]:Block[207361-207395]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[207187-207197]:ReturnStatement[207375-207385]"
    }, {
      "left" : "if (str1 == null || str2 == null)",
      "right" : "if (str1 == null || str2 == null)",
      "info" : "IfStatement[207216-207283]:IfStatement[207404-207471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207250-207283]:Block[207438-207471]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[207264-207273]:ReturnStatement[207452-207461]"
    }, {
      "left" : "int i;",
      "right" : "int i;",
      "info" : "VariableDeclarationStatement[207292-207298]:VariableDeclarationStatement[207480-207486]"
    }, {
      "left" : "for (i = 0; i < str1.length() && i < str2.length(); ++i)",
      "right" : "for (i = 0; i < str1.length() && i < str2.length(); ++i)",
      "info" : "ForStatement[207307-207464]:ForStatement[207495-207652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207364-207464]:Block[207552-207652]"
    }, {
      "left" : "if (str1.charAt(i) != str2.charAt(i))",
      "right" : "if (str1.charAt(i) != str2.charAt(i))",
      "info" : "IfStatement[207378-207454]:IfStatement[207566-207642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207416-207454]:Block[207604-207642]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[207434-207440]:BreakStatement[207622-207628]"
    }, {
      "left" : "if (i < str2.length() || i < str1.length())",
      "right" : "if (i < str2.length() || i < str1.length())",
      "info" : "IfStatement[207473-207550]:IfStatement[207661-207738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207517-207550]:Block[207705-207738]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[207531-207540]:ReturnStatement[207719-207728]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[207559-207569]:ReturnStatement[207747-207757]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[209212-209218]:Modifier[209400-209406]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[209219-209225]:Modifier[209407-209413]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[209226-209229]:PrimitiveType[209414-209417]"
    }, {
      "left" : "indexOfDifference",
      "right" : "indexOfDifference",
      "info" : "SimpleName[209230-209247]:SimpleName[209418-209435]"
    }, {
      "left" : "String[] strs",
      "right" : "String[] strs",
      "info" : "SingleVariableDeclaration[209248-209261]:SingleVariableDeclaration[209436-209449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209263-211352]:Block[209451-211540]"
    }, {
      "left" : "if (strs == null || strs.length <= 1)",
      "right" : "if (strs == null || strs.length <= 1)",
      "info" : "IfStatement[209273-209345]:IfStatement[209461-209533]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209311-209345]:Block[209499-209533]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[209325-209335]:ReturnStatement[209513-209523]"
    }, {
      "left" : "boolean anyStringNull = false;",
      "right" : "boolean anyStringNull = false;",
      "info" : "VariableDeclarationStatement[209354-209384]:VariableDeclarationStatement[209542-209572]"
    }, {
      "left" : "boolean allStringsNull = true;",
      "right" : "boolean allStringsNull = true;",
      "info" : "VariableDeclarationStatement[209393-209423]:VariableDeclarationStatement[209581-209611]"
    }, {
      "left" : "int arrayLen = strs.length;",
      "right" : "int arrayLen = strs.length;",
      "info" : "VariableDeclarationStatement[209432-209459]:VariableDeclarationStatement[209620-209647]"
    }, {
      "left" : "int shortestStrLen = Integer.MAX_VALUE;",
      "right" : "int shortestStrLen = Integer.MAX_VALUE;",
      "info" : "VariableDeclarationStatement[209468-209507]:VariableDeclarationStatement[209656-209695]"
    }, {
      "left" : "int longestStrLen = 0;",
      "right" : "int longestStrLen = 0;",
      "info" : "VariableDeclarationStatement[209516-209538]:VariableDeclarationStatement[209704-209726]"
    }, {
      "left" : "for (int i = 0; i < arrayLen; i++)",
      "right" : "for (int i = 0; i < arrayLen; i++)",
      "info" : "ForStatement[209733-210115]:ForStatement[209921-210303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209768-210115]:Block[209956-210303]"
    }, {
      "left" : "if (strs[i] == null)",
      "right" : "if (strs[i] == null)",
      "info" : "IfStatement[209782-210105]:IfStatement[209970-210293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209803-209892]:Block[209991-210080]"
    }, {
      "left" : "anyStringNull = true;",
      "right" : "anyStringNull = true;",
      "info" : "ExpressionStatement[209821-209842]:ExpressionStatement[210009-210030]"
    }, {
      "left" : "shortestStrLen = 0;",
      "right" : "shortestStrLen = 0;",
      "info" : "ExpressionStatement[209859-209878]:ExpressionStatement[210047-210066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209898-210105]:Block[210086-210293]"
    }, {
      "left" : "allStringsNull = false;",
      "right" : "allStringsNull = false;",
      "info" : "ExpressionStatement[209916-209939]:ExpressionStatement[210104-210127]"
    }, {
      "left" : "shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",
      "right" : "shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",
      "info" : "ExpressionStatement[209956-210016]:ExpressionStatement[210144-210204]"
    }, {
      "left" : "longestStrLen = Math.max(strs[i].length(), longestStrLen);",
      "right" : "longestStrLen = Math.max(strs[i].length(), longestStrLen);",
      "info" : "ExpressionStatement[210033-210091]:ExpressionStatement[210221-210279]"
    }, {
      "left" : "if (allStringsNull || (longestStrLen == 0 && !anyStringNull))",
      "right" : "if (allStringsNull || (longestStrLen == 0 && !anyStringNull))",
      "info" : "IfStatement[210191-210287]:IfStatement[210379-210475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210253-210287]:Block[210441-210475]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[210267-210277]:ReturnStatement[210455-210465]"
    }, {
      "left" : "if (shortestStrLen == 0)",
      "right" : "if (shortestStrLen == 0)",
      "info" : "IfStatement[210365-210423]:IfStatement[210553-210611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210390-210423]:Block[210578-210611]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[210404-210413]:ReturnStatement[210592-210601]"
    }, {
      "left" : "int firstDiff = -1;",
      "right" : "int firstDiff = -1;",
      "info" : "VariableDeclarationStatement[210507-210526]:VariableDeclarationStatement[210695-210714]"
    }, {
      "left" : "for (int stringPos = 0; stringPos < shortestStrLen; stringPos++)",
      "right" : "for (int stringPos = 0; stringPos < shortestStrLen; stringPos++)",
      "info" : "ForStatement[210535-210990]:ForStatement[210723-211178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210600-210990]:Block[210788-211178]"
    }, {
      "left" : "char comparisonChar = strs[0].charAt(stringPos);",
      "right" : "char comparisonChar = strs[0].charAt(stringPos);",
      "info" : "VariableDeclarationStatement[210614-210662]:VariableDeclarationStatement[210802-210850]"
    }, {
      "left" : "for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++)",
      "right" : "for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++)",
      "info" : "ForStatement[210675-210908]:ForStatement[210863-211096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210731-210908]:Block[210919-211096]"
    }, {
      "left" : "if (strs[arrayPos].charAt(stringPos) != comparisonChar)",
      "right" : "if (strs[arrayPos].charAt(stringPos) != comparisonChar)",
      "info" : "IfStatement[210749-210894]:IfStatement[210937-211082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210805-210894]:Block[210993-211082]"
    }, {
      "left" : "firstDiff = stringPos;",
      "right" : "firstDiff = stringPos;",
      "info" : "ExpressionStatement[210827-210849]:ExpressionStatement[211015-211037]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[210870-210876]:BreakStatement[211058-211064]"
    }, {
      "left" : "if (firstDiff != -1)",
      "right" : "if (firstDiff != -1)",
      "info" : "IfStatement[210921-210980]:IfStatement[211109-211168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210942-210980]:Block[211130-211168]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[210960-210966]:BreakStatement[211148-211154]"
    }, {
      "left" : "if (firstDiff == -1 && shortestStrLen != longestStrLen)",
      "right" : "if (firstDiff == -1 && shortestStrLen != longestStrLen)",
      "info" : "IfStatement[211000-211320]:IfStatement[211188-211508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[211056-211320]:Block[211244-211508]"
    }, {
      "left" : "return shortestStrLen;",
      "right" : "return shortestStrLen;",
      "info" : "ReturnStatement[211288-211310]:ReturnStatement[211476-211498]"
    }, {
      "left" : "return firstDiff;",
      "right" : "return firstDiff;",
      "info" : "ReturnStatement[211329-211346]:ReturnStatement[211517-211534]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[213140-213146]:Modifier[213328-213334]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[213147-213153]:Modifier[213335-213341]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[213154-213160]:SimpleType[213342-213348]"
    }, {
      "left" : "getCommonPrefix",
      "right" : "getCommonPrefix",
      "info" : "SimpleName[213161-213176]:SimpleName[213349-213364]"
    }, {
      "left" : "String[] strs",
      "right" : "String[] strs",
      "info" : "SingleVariableDeclaration[213177-213190]:SingleVariableDeclaration[213365-213378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213192-213809]:Block[213380-213997]"
    }, {
      "left" : "if (strs == null || strs.length == 0)",
      "right" : "if (strs == null || strs.length == 0)",
      "info" : "IfStatement[213202-213277]:IfStatement[213390-213465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213240-213277]:Block[213428-213465]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[213254-213267]:ReturnStatement[213442-213455]"
    }, {
      "left" : "int smallestIndexOfDiff = indexOfDifference(strs);",
      "right" : "int smallestIndexOfDiff = indexOfDifference(strs);",
      "info" : "VariableDeclarationStatement[213286-213336]:VariableDeclarationStatement[213474-213524]"
    }, {
      "left" : "if (smallestIndexOfDiff == -1)",
      "right" : "if (smallestIndexOfDiff == -1)",
      "info" : "IfStatement[213345-213803]:IfStatement[213533-213991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213376-213536]:Block[213564-213724]"
    }, {
      "left" : "if (strs[0] == null)",
      "right" : "if (strs[0] == null)",
      "info" : "IfStatement[213432-213498]:IfStatement[213620-213686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213453-213498]:Block[213641-213686]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[213471-213484]:ReturnStatement[213659-213672]"
    }, {
      "left" : "return strs[0];",
      "right" : "return strs[0];",
      "info" : "ReturnStatement[213511-213526]:ReturnStatement[213699-213714]"
    }, {
      "left" : "if (smallestIndexOfDiff == 0)",
      "right" : "if (smallestIndexOfDiff == 0)",
      "info" : "IfStatement[213542-213803]:IfStatement[213730-213991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213572-213664]:Block[213760-213852]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[213641-213654]:ReturnStatement[213829-213842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213670-213803]:Block[213858-213991]"
    }, {
      "left" : "return strs[0].substring(0, smallestIndexOfDiff);",
      "right" : "return strs[0].substring(0, smallestIndexOfDiff);",
      "info" : "ReturnStatement[213744-213793]:ReturnStatement[213932-213981]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[215781-215787]:Modifier[215969-215975]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[215788-215794]:Modifier[215976-215982]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[215795-215798]:PrimitiveType[215983-215986]"
    }, {
      "left" : "getLevenshteinDistance",
      "right" : "getLevenshteinDistance",
      "info" : "SimpleName[215799-215821]:SimpleName[215987-216009]"
    }, {
      "left" : "String s",
      "right" : "String s",
      "info" : "SingleVariableDeclaration[215822-215830]:SingleVariableDeclaration[216010-216018]"
    }, {
      "left" : "String t",
      "right" : "String t",
      "info" : "SingleVariableDeclaration[215832-215840]:SingleVariableDeclaration[216020-216028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[215842-218682]:Block[216030-218870]"
    }, {
      "left" : "if (s == null || t == null)",
      "right" : "if (s == null || t == null)",
      "info" : "IfStatement[215852-215967]:IfStatement[216040-216155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[215880-215967]:Block[216068-216155]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Strings must not be null\");",
      "right" : "throw new IllegalArgumentException(\"Strings must not be null\");",
      "info" : "ThrowStatement[215894-215957]:ThrowStatement[216082-216145]"
    }, {
      "left" : "int n = s.length();",
      "right" : "int n = s.length();",
      "info" : "VariableDeclarationStatement[217185-217204]:VariableDeclarationStatement[217373-217392]"
    }, {
      "left" : "int m = t.length();",
      "right" : "int m = t.length();",
      "info" : "VariableDeclarationStatement[217228-217247]:VariableDeclarationStatement[217416-217435]"
    }, {
      "left" : "if (n == 0)",
      "right" : "if (n == 0)",
      "info" : "IfStatement[217272-217368]:IfStatement[217460-217556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[217284-217317]:Block[217472-217505]"
    }, {
      "left" : "return m;",
      "right" : "return m;",
      "info" : "ReturnStatement[217298-217307]:ReturnStatement[217486-217495]"
    }, {
      "left" : "if (m == 0)",
      "right" : "if (m == 0)",
      "info" : "IfStatement[217323-217368]:IfStatement[217511-217556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[217335-217368]:Block[217523-217556]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[217349-217358]:ReturnStatement[217537-217546]"
    }, {
      "left" : "if (n > m)",
      "right" : "if (n > m)",
      "info" : "IfStatement[217378-217576]:IfStatement[217566-217764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[217389-217576]:Block[217577-217764]"
    }, {
      "left" : "String tmp = s;",
      "right" : "String tmp = s;",
      "info" : "VariableDeclarationStatement[217464-217479]:VariableDeclarationStatement[217652-217667]"
    }, {
      "left" : "s = t;",
      "right" : "s = t;",
      "info" : "ExpressionStatement[217492-217498]:ExpressionStatement[217680-217686]"
    }, {
      "left" : "t = tmp;",
      "right" : "t = tmp;",
      "info" : "ExpressionStatement[217511-217519]:ExpressionStatement[217699-217707]"
    }, {
      "left" : "n = m;",
      "right" : "n = m;",
      "info" : "ExpressionStatement[217532-217538]:ExpressionStatement[217720-217726]"
    }, {
      "left" : "m = t.length();",
      "right" : "m = t.length();",
      "info" : "ExpressionStatement[217551-217566]:ExpressionStatement[217739-217754]"
    }, {
      "left" : "int p[] = new int[n+1];",
      "right" : "int p[] = new int[n+1];",
      "info" : "VariableDeclarationStatement[217586-217609]:VariableDeclarationStatement[217774-217797]"
    }, {
      "left" : "int d[] = new int[n+1];",
      "right" : "int d[] = new int[n+1];",
      "info" : "VariableDeclarationStatement[217656-217679]:VariableDeclarationStatement[217844-217867]"
    }, {
      "left" : "int _d[];",
      "right" : "int _d[];",
      "info" : "VariableDeclarationStatement[217716-217725]:VariableDeclarationStatement[217904-217913]"
    }, {
      "left" : "int i;",
      "right" : "int i;",
      "info" : "VariableDeclarationStatement[217819-217825]:VariableDeclarationStatement[218007-218013]"
    }, {
      "left" : "int j;",
      "right" : "int j;",
      "info" : "VariableDeclarationStatement[217856-217862]:VariableDeclarationStatement[218044-218050]"
    }, {
      "left" : "char t_j;",
      "right" : "char t_j;",
      "info" : "VariableDeclarationStatement[217894-217903]:VariableDeclarationStatement[218082-218091]"
    }, {
      "left" : "int cost;",
      "right" : "int cost;",
      "info" : "VariableDeclarationStatement[217935-217944]:VariableDeclarationStatement[218123-218132]"
    }, {
      "left" : "for (i = 0; i<=n; i++)",
      "right" : "for (i = 0; i<=n; i++)",
      "info" : "ForStatement[217962-218018]:ForStatement[218150-218206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[217985-218018]:Block[218173-218206]"
    }, {
      "left" : "p[i] = i;",
      "right" : "p[i] = i;",
      "info" : "ExpressionStatement[217999-218008]:ExpressionStatement[218187-218196]"
    }, {
      "left" : "for (j = 1; j<=m; j++)",
      "right" : "for (j = 1; j<=m; j++)",
      "info" : "ForStatement[218028-218524]:ForStatement[218216-218712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218051-218524]:Block[218239-218712]"
    }, {
      "left" : "t_j = t.charAt(j-1);",
      "right" : "t_j = t.charAt(j-1);",
      "info" : "ExpressionStatement[218065-218085]:ExpressionStatement[218253-218273]"
    }, {
      "left" : "d[0] = j;",
      "right" : "d[0] = j;",
      "info" : "ExpressionStatement[218098-218107]:ExpressionStatement[218286-218295]"
    }, {
      "left" : "for (i=1; i<=n; i++)",
      "right" : "for (i=1; i<=n; i++)",
      "info" : "ForStatement[218121-218376]:ForStatement[218309-218564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218142-218376]:Block[218330-218564]"
    }, {
      "left" : "cost = s.charAt(i-1)==t_j ? 0 : 1;",
      "right" : "cost = s.charAt(i-1)==t_j ? 0 : 1;",
      "info" : "ExpressionStatement[218160-218194]:ExpressionStatement[218348-218382]"
    }, {
      "left" : "d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",
      "right" : "d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",
      "info" : "ExpressionStatement[218304-218362]:ExpressionStatement[218492-218550]"
    }, {
      "left" : "_d = p;",
      "right" : "_d = p;",
      "info" : "ExpressionStatement[218468-218475]:ExpressionStatement[218656-218663]"
    }, {
      "left" : "p = d;",
      "right" : "p = d;",
      "info" : "ExpressionStatement[218488-218494]:ExpressionStatement[218676-218682]"
    }, {
      "left" : "d = _d;",
      "right" : "d = _d;",
      "info" : "ExpressionStatement[218507-218514]:ExpressionStatement[218695-218702]"
    }, {
      "left" : "return p[n];",
      "right" : "return p[n];",
      "info" : "ReturnStatement[218664-218676]:ReturnStatement[218852-218864]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[220108-220114]:Modifier[220296-220302]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[220115-220121]:Modifier[220303-220309]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[220122-220129]:PrimitiveType[220310-220317]"
    }, {
      "left" : "startsWith",
      "right" : "startsWith",
      "info" : "SimpleName[220130-220140]:SimpleName[220318-220328]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[220141-220151]:SingleVariableDeclaration[220329-220339]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[220153-220166]:SingleVariableDeclaration[220341-220354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[220168-220222]:Block[220356-220410]"
    }, {
      "left" : "return startsWith(str, prefix, false);",
      "right" : "return startsWith(str, prefix, false);",
      "info" : "ReturnStatement[220178-220216]:ReturnStatement[220366-220404]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[221158-221164]:Modifier[221346-221352]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[221165-221171]:Modifier[221353-221359]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[221172-221179]:PrimitiveType[221360-221367]"
    }, {
      "left" : "startsWithIgnoreCase",
      "right" : "startsWithIgnoreCase",
      "info" : "SimpleName[221180-221200]:SimpleName[221368-221388]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[221201-221211]:SingleVariableDeclaration[221389-221399]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[221213-221226]:SingleVariableDeclaration[221401-221414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221228-221281]:Block[221416-221469]"
    }, {
      "left" : "return startsWith(str, prefix, true);",
      "right" : "return startsWith(str, prefix, true);",
      "info" : "ReturnStatement[221238-221275]:ReturnStatement[221426-221463]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[221771-221778]:Modifier[221959-221966]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[221779-221785]:Modifier[221967-221973]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[221786-221793]:PrimitiveType[221974-221981]"
    }, {
      "left" : "startsWith",
      "right" : "startsWith",
      "info" : "SimpleName[221794-221804]:SimpleName[221982-221992]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[221805-221815]:SingleVariableDeclaration[221993-222003]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[221817-221830]:SingleVariableDeclaration[222005-222018]"
    }, {
      "left" : "boolean ignoreCase",
      "right" : "boolean ignoreCase",
      "info" : "SingleVariableDeclaration[221832-221850]:SingleVariableDeclaration[222020-222038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221852-222125]:Block[222040-222313]"
    }, {
      "left" : "if (str == null || prefix == null)",
      "right" : "if (str == null || prefix == null)",
      "info" : "IfStatement[221862-221960]:IfStatement[222050-222148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221897-221960]:Block[222085-222148]"
    }, {
      "left" : "return (str == null && prefix == null);",
      "right" : "return (str == null && prefix == null);",
      "info" : "ReturnStatement[221911-221950]:ReturnStatement[222099-222138]"
    }, {
      "left" : "if (prefix.length() > str.length())",
      "right" : "if (prefix.length() > str.length())",
      "info" : "IfStatement[221969-222042]:IfStatement[222157-222230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222005-222042]:Block[222193-222230]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[222019-222032]:ReturnStatement[222207-222220]"
    }, {
      "left" : "return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",
      "right" : "return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",
      "info" : "ReturnStatement[222051-222119]:ReturnStatement[222239-222307]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[222970-222976]:Modifier[223158-223164]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[222977-222983]:Modifier[223165-223171]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[222984-222991]:PrimitiveType[223172-223179]"
    }, {
      "left" : "startsWithAny",
      "right" : "startsWithAny",
      "info" : "SimpleName[222992-223005]:SimpleName[223180-223193]"
    }, {
      "left" : "String string",
      "right" : "String string",
      "info" : "SingleVariableDeclaration[223006-223019]:SingleVariableDeclaration[223194-223207]"
    }, {
      "left" : "String[] searchStrings",
      "right" : "String[] searchStrings",
      "info" : "SingleVariableDeclaration[223021-223043]:SingleVariableDeclaration[223209-223231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223045-223404]:Block[223233-223592]"
    }, {
      "left" : "if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings))",
      "right" : "if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings))",
      "info" : "IfStatement[223055-223150]:IfStatement[223243-223338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223113-223150]:Block[223301-223338]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[223127-223140]:ReturnStatement[223315-223328]"
    }, {
      "left" : "for (int i = 0; i < searchStrings.length; i++)",
      "right" : "for (int i = 0; i < searchStrings.length; i++)",
      "info" : "ForStatement[223159-223376]:ForStatement[223347-223564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223206-223376]:Block[223394-223564]"
    }, {
      "left" : "String searchString = searchStrings[i];",
      "right" : "String searchString = searchStrings[i];",
      "info" : "VariableDeclarationStatement[223220-223259]:VariableDeclarationStatement[223408-223447]"
    }, {
      "left" : "if (StringUtils.startsWith(string, searchString))",
      "right" : "if (StringUtils.startsWith(string, searchString))",
      "info" : "IfStatement[223272-223366]:IfStatement[223460-223554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223322-223366]:Block[223510-223554]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[223340-223352]:ReturnStatement[223528-223540]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[223385-223398]:ReturnStatement[223573-223586]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[224402-224408]:Modifier[224590-224596]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[224409-224415]:Modifier[224597-224603]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[224416-224423]:PrimitiveType[224604-224611]"
    }, {
      "left" : "endsWith",
      "right" : "endsWith",
      "info" : "SimpleName[224424-224432]:SimpleName[224612-224620]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[224433-224443]:SingleVariableDeclaration[224621-224631]"
    }, {
      "left" : "String suffix",
      "right" : "String suffix",
      "info" : "SingleVariableDeclaration[224445-224458]:SingleVariableDeclaration[224633-224646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[224460-224512]:Block[224648-224700]"
    }, {
      "left" : "return endsWith(str, suffix, false);",
      "right" : "return endsWith(str, suffix, false);",
      "info" : "ReturnStatement[224470-224506]:ReturnStatement[224658-224694]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[225495-225501]:Modifier[225683-225689]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[225502-225508]:Modifier[225690-225696]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[225509-225516]:PrimitiveType[225697-225704]"
    }, {
      "left" : "endsWithIgnoreCase",
      "right" : "endsWithIgnoreCase",
      "info" : "SimpleName[225517-225535]:SimpleName[225705-225723]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[225536-225546]:SingleVariableDeclaration[225724-225734]"
    }, {
      "left" : "String suffix",
      "right" : "String suffix",
      "info" : "SingleVariableDeclaration[225548-225561]:SingleVariableDeclaration[225736-225749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[225563-225614]:Block[225751-225802]"
    }, {
      "left" : "return endsWith(str, suffix, true);",
      "right" : "return endsWith(str, suffix, true);",
      "info" : "ReturnStatement[225573-225608]:ReturnStatement[225761-225796]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[226100-226107]:Modifier[226288-226295]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[226108-226114]:Modifier[226296-226302]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[226115-226122]:PrimitiveType[226303-226310]"
    }, {
      "left" : "endsWith",
      "right" : "endsWith",
      "info" : "SimpleName[226123-226131]:SimpleName[226311-226319]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[226132-226142]:SingleVariableDeclaration[226320-226330]"
    }, {
      "left" : "String suffix",
      "right" : "String suffix",
      "info" : "SingleVariableDeclaration[226144-226157]:SingleVariableDeclaration[226332-226345]"
    }, {
      "left" : "boolean ignoreCase",
      "right" : "boolean ignoreCase",
      "info" : "SingleVariableDeclaration[226159-226177]:SingleVariableDeclaration[226347-226365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226179-226516]:Block[226367-226704]"
    }, {
      "left" : "if (str == null || suffix == null)",
      "right" : "if (str == null || suffix == null)",
      "info" : "IfStatement[226189-226287]:IfStatement[226377-226475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226224-226287]:Block[226412-226475]"
    }, {
      "left" : "return (str == null && suffix == null);",
      "right" : "return (str == null && suffix == null);",
      "info" : "ReturnStatement[226238-226277]:ReturnStatement[226426-226465]"
    }, {
      "left" : "if (suffix.length() > str.length())",
      "right" : "if (suffix.length() > str.length())",
      "info" : "IfStatement[226296-226369]:IfStatement[226484-226557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226332-226369]:Block[226520-226557]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[226346-226359]:ReturnStatement[226534-226547]"
    }, {
      "left" : "int strOffset = str.length() - suffix.length();",
      "right" : "int strOffset = str.length() - suffix.length();",
      "info" : "VariableDeclarationStatement[226378-226425]:VariableDeclarationStatement[226566-226613]"
    }, {
      "left" : "return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",
      "right" : "return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",
      "info" : "ReturnStatement[226434-226510]:ReturnStatement[226622-226698]"
    } ]
  },
  "interFileMappings" : { }
}