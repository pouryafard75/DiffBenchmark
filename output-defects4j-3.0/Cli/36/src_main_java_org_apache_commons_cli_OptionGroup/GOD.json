{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "OptionGroup",
      "right" : "OptionGroup",
      "info" : "TypeDeclaration[971-4725]:TypeDeclaration[977-4737]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1096-1179]:FieldDeclaration[1102-1185]"
    }, {
      "left" : "private final Map<String, Option> optionMap = new HashMap<String, Option>();",
      "right" : "private final Map<String, Option> optionMap = new LinkedHashMap<String, Option>();",
      "info" : "FieldDeclaration[1189-1293]:FieldDeclaration[1195-1305]"
    }, {
      "left" : "private String selected;",
      "right" : "private String selected;",
      "info" : "FieldDeclaration[1299-1366]:FieldDeclaration[1311-1378]"
    }, {
      "left" : "private boolean required;",
      "right" : "private boolean required;",
      "info" : "FieldDeclaration[1372-1449]:FieldDeclaration[1384-1461]"
    }, {
      "left" : "public OptionGroup addOption(Option option)",
      "right" : "public OptionGroup addOption(Option option)",
      "info" : "MethodDeclaration[1455-1832]:MethodDeclaration[1467-1844]"
    }, {
      "left" : "public Collection<String> getNames()",
      "right" : "public Collection<String> getNames()",
      "info" : "MethodDeclaration[1838-2078]:MethodDeclaration[1850-2090]"
    }, {
      "left" : "public Collection<Option> getOptions()",
      "right" : "public Collection<Option> getOptions()",
      "info" : "MethodDeclaration[2084-2307]:MethodDeclaration[2096-2319]"
    }, {
      "left" : "public void setSelected(Option option) throws AlreadySelectedException",
      "right" : "public void setSelected(Option option) throws AlreadySelectedException",
      "info" : "MethodDeclaration[2313-3167]:MethodDeclaration[2325-3179]"
    }, {
      "left" : "public String getSelected()",
      "right" : "public String getSelected()",
      "info" : "MethodDeclaration[3173-3293]:MethodDeclaration[3185-3305]"
    }, {
      "left" : "public void setRequired(boolean required)",
      "right" : "public void setRequired(boolean required)",
      "info" : "MethodDeclaration[3299-3461]:MethodDeclaration[3311-3473]"
    }, {
      "left" : "public boolean isRequired()",
      "right" : "public boolean isRequired()",
      "info" : "MethodDeclaration[3467-3661]:MethodDeclaration[3479-3673]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[3667-4723]:MethodDeclaration[3679-4735]"
    } ],
    "mappings" : [
 {
      "left" : "java.util.HashMap",
      "right" : "java.util.LinkedHashMap",
      "info" : "QualifiedName[902-919]:QualifiedName[929-952]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1041-1047]:Modifier[1047-1053]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1048-1053]:TYPE_DECLARATION_KIND[1054-1059]"
    }, {
      "left" : "OptionGroup",
      "right" : "OptionGroup",
      "info" : "SimpleName[1054-1065]:SimpleName[1060-1071]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[1077-1089]:SimpleType[1083-1095]"
    }, {
      "left" : "HashMap",
      "right" : "LinkedHashMap",
      "info" : "SimpleName[1267-1274]:SimpleName[1273-1286]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1646-1652]:Modifier[1658-1664]"
    }, {
      "left" : "OptionGroup",
      "right" : "OptionGroup",
      "info" : "SimpleType[1653-1664]:SimpleType[1665-1676]"
    }, {
      "left" : "addOption",
      "right" : "addOption",
      "info" : "SimpleName[1665-1674]:SimpleName[1677-1686]"
    }, {
      "left" : "Option option",
      "right" : "Option option",
      "info" : "SingleVariableDeclaration[1675-1688]:SingleVariableDeclaration[1687-1700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1694-1832]:Block[1706-1844]"
    }, {
      "left" : "optionMap.put(option.getKey(), option);",
      "right" : "optionMap.put(option.getKey(), option);",
      "info" : "ExpressionStatement[1765-1804]:ExpressionStatement[1777-1816]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[1814-1826]:ReturnStatement[1826-1838]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1945-1951]:Modifier[1957-1963]"
    }, {
      "left" : "Collection<String>",
      "right" : "Collection<String>",
      "info" : "ParameterizedType[1952-1970]:ParameterizedType[1964-1982]"
    }, {
      "left" : "getNames",
      "right" : "getNames",
      "info" : "SimpleName[1971-1979]:SimpleName[1983-1991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1986-2078]:Block[1998-2090]"
    }, {
      "left" : "return optionMap.keySet();",
      "right" : "return optionMap.keySet();",
      "info" : "ReturnStatement[2046-2072]:ReturnStatement[2058-2084]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2170-2176]:Modifier[2182-2188]"
    }, {
      "left" : "Collection<Option>",
      "right" : "Collection<Option>",
      "info" : "ParameterizedType[2177-2195]:ParameterizedType[2189-2207]"
    }, {
      "left" : "getOptions",
      "right" : "getOptions",
      "info" : "SimpleName[2196-2206]:SimpleName[2208-2218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2213-2307]:Block[2225-2319]"
    }, {
      "left" : "return optionMap.values();",
      "right" : "return optionMap.values();",
      "info" : "ReturnStatement[2275-2301]:ReturnStatement[2287-2313]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2556-2562]:Modifier[2568-2574]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2563-2567]:PrimitiveType[2575-2579]"
    }, {
      "left" : "setSelected",
      "right" : "setSelected",
      "info" : "SimpleName[2568-2579]:SimpleName[2580-2591]"
    }, {
      "left" : "Option option",
      "right" : "Option option",
      "info" : "SingleVariableDeclaration[2580-2593]:SingleVariableDeclaration[2592-2605]"
    }, {
      "left" : "AlreadySelectedException",
      "right" : "AlreadySelectedException",
      "info" : "SimpleType[2602-2626]:SimpleType[2614-2638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2631-3167]:Block[2643-3179]"
    }, {
      "left" : "if (option == null)",
      "right" : "if (option == null)",
      "info" : "IfStatement[2641-2781]:IfStatement[2653-2793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2669-2781]:Block[2681-2793]"
    }, {
      "left" : "selected = null;",
      "right" : "selected = null;",
      "info" : "ExpressionStatement[2735-2751]:ExpressionStatement[2747-2763]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[2764-2771]:ReturnStatement[2776-2783]"
    }, {
      "left" : "if (selected == null || selected.equals(option.getKey()))",
      "right" : "if (selected == null || selected.equals(option.getKey()))",
      "info" : "IfStatement[2949-3161]:IfStatement[2961-3173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3015-3066]:Block[3027-3078]"
    }, {
      "left" : "selected = option.getKey();",
      "right" : "selected = option.getKey();",
      "info" : "ExpressionStatement[3029-3056]:ExpressionStatement[3041-3068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3088-3161]:Block[3100-3173]"
    }, {
      "left" : "throw new AlreadySelectedException(this, option);",
      "right" : "throw new AlreadySelectedException(this, option);",
      "info" : "ThrowStatement[3102-3151]:ThrowStatement[3114-3163]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3229-3235]:Modifier[3241-3247]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3236-3242]:SimpleType[3248-3254]"
    }, {
      "left" : "getSelected",
      "right" : "getSelected",
      "info" : "SimpleName[3243-3254]:SimpleName[3255-3266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3261-3293]:Block[3273-3305]"
    }, {
      "left" : "return selected;",
      "right" : "return selected;",
      "info" : "ReturnStatement[3271-3287]:ReturnStatement[3283-3299]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3374-3380]:Modifier[3386-3392]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3381-3385]:PrimitiveType[3393-3397]"
    }, {
      "left" : "setRequired",
      "right" : "setRequired",
      "info" : "SimpleName[3386-3397]:SimpleName[3398-3409]"
    }, {
      "left" : "boolean required",
      "right" : "boolean required",
      "info" : "SingleVariableDeclaration[3398-3414]:SingleVariableDeclaration[3410-3426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3420-3461]:Block[3432-3473]"
    }, {
      "left" : "this.required = required;",
      "right" : "this.required = required;",
      "info" : "ExpressionStatement[3430-3455]:ExpressionStatement[3442-3467]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3597-3603]:Modifier[3609-3615]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3604-3611]:PrimitiveType[3616-3623]"
    }, {
      "left" : "isRequired",
      "right" : "isRequired",
      "info" : "SimpleName[3612-3622]:SimpleName[3624-3634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3629-3661]:Block[3641-3673]"
    }, {
      "left" : "return required;",
      "right" : "return required;",
      "info" : "ReturnStatement[3639-3655]:ReturnStatement[3651-3667]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3811-3820]:MarkerAnnotation[3823-3832]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3825-3831]:Modifier[3837-3843]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3832-3838]:SimpleType[3844-3850]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[3839-3847]:SimpleName[3851-3859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3854-4723]:Block[3866-4735]"
    }, {
      "left" : "StringBuilder buff = new StringBuilder();",
      "right" : "StringBuilder buff = new StringBuilder();",
      "info" : "VariableDeclarationStatement[3864-3905]:VariableDeclarationStatement[3876-3917]"
    }, {
      "left" : "Iterator<Option> iter = getOptions().iterator();",
      "right" : "Iterator<Option> iter = getOptions().iterator();",
      "info" : "VariableDeclarationStatement[3923-3971]:VariableDeclarationStatement[3935-3983]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[3981-3998]:ExpressionStatement[3993-4010]"
    }, {
      "left" : "while (iter.hasNext())",
      "right" : "while (iter.hasNext())",
      "info" : "WhileStatement[4008-4657]:WhileStatement[4020-4669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4039-4657]:Block[4051-4669]"
    }, {
      "left" : "Option option = iter.next();",
      "right" : "Option option = iter.next();",
      "info" : "VariableDeclarationStatement[4053-4081]:VariableDeclarationStatement[4065-4093]"
    }, {
      "left" : "if (option.getOpt() != null)",
      "right" : "if (option.getOpt() != null)",
      "info" : "IfStatement[4095-4361]:IfStatement[4107-4373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4136-4231]:Block[4148-4243]"
    }, {
      "left" : "buff.append(\"-\");",
      "right" : "buff.append(\"-\");",
      "info" : "ExpressionStatement[4154-4171]:ExpressionStatement[4166-4183]"
    }, {
      "left" : "buff.append(option.getOpt());",
      "right" : "buff.append(option.getOpt());",
      "info" : "ExpressionStatement[4188-4217]:ExpressionStatement[4200-4229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4261-4361]:Block[4273-4373]"
    }, {
      "left" : "buff.append(\"--\");",
      "right" : "buff.append(\"--\");",
      "info" : "ExpressionStatement[4279-4297]:ExpressionStatement[4291-4309]"
    }, {
      "left" : "buff.append(option.getLongOpt());",
      "right" : "buff.append(option.getLongOpt());",
      "info" : "ExpressionStatement[4314-4347]:ExpressionStatement[4326-4359]"
    }, {
      "left" : "if (option.getDescription() != null)",
      "right" : "if (option.getDescription() != null)",
      "info" : "IfStatement[4387-4539]:IfStatement[4399-4551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4436-4539]:Block[4448-4551]"
    }, {
      "left" : "buff.append(\" \");",
      "right" : "buff.append(\" \");",
      "info" : "ExpressionStatement[4454-4471]:ExpressionStatement[4466-4483]"
    }, {
      "left" : "buff.append(option.getDescription());",
      "right" : "buff.append(option.getDescription());",
      "info" : "ExpressionStatement[4488-4525]:ExpressionStatement[4500-4537]"
    }, {
      "left" : "if (iter.hasNext())",
      "right" : "if (iter.hasNext())",
      "info" : "IfStatement[4565-4647]:IfStatement[4577-4659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4597-4647]:Block[4609-4659]"
    }, {
      "left" : "buff.append(\", \");",
      "right" : "buff.append(\", \");",
      "info" : "ExpressionStatement[4615-4633]:ExpressionStatement[4627-4645]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[4667-4684]:ExpressionStatement[4679-4696]"
    }, {
      "left" : "return buff.toString();",
      "right" : "return buff.toString();",
      "info" : "ReturnStatement[4694-4717]:ReturnStatement[4706-4729]"
    } ]
  },
  "interFileMappings" : { }
}