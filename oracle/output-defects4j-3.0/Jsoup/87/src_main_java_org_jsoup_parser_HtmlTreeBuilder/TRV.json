{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "static final String[] TagsSearchInScope = new String[]{\"applet\", \"caption\", \"html\", \"marquee\", \"object\", \"table\", \"td\", \"th\"};",
      "right" : "static final String[] TagsSearchInScope = new String[]{\"applet\", \"caption\", \"html\", \"marquee\", \"object\", \"table\", \"td\", \"th\"};",
      "info" : "FieldDeclaration[780-906]:FieldDeclaration[780-906]"
    }, {
      "left" : "static final String[] TagSearchList = new String[]{\"ol\", \"ul\"};",
      "right" : "static final String[] TagSearchList = new String[]{\"ol\", \"ul\"};",
      "info" : "FieldDeclaration[911-974]:FieldDeclaration[911-974]"
    }, {
      "left" : "static final String[] TagSearchButton = new String[]{\"button\"};",
      "right" : "static final String[] TagSearchButton = new String[]{\"button\"};",
      "info" : "FieldDeclaration[979-1042]:FieldDeclaration[979-1042]"
    }, {
      "left" : "static final String[] TagSearchTableScope = new String[]{\"html\", \"table\"};",
      "right" : "static final String[] TagSearchTableScope = new String[]{\"html\", \"table\"};",
      "info" : "FieldDeclaration[1047-1121]:FieldDeclaration[1047-1121]"
    }, {
      "left" : "static final String[] TagSearchSelectScope = new String[]{\"optgroup\", \"option\"};",
      "right" : "static final String[] TagSearchSelectScope = new String[]{\"optgroup\", \"option\"};",
      "info" : "FieldDeclaration[1126-1206]:FieldDeclaration[1126-1206]"
    }, {
      "left" : "static final String[] TagSearchEndTags = new String[]{\"dd\", \"dt\", \"li\", \"optgroup\", \"option\", \"p\", \"rp\", \"rt\"};",
      "right" : "static final String[] TagSearchEndTags = new String[]{\"dd\", \"dt\", \"li\", \"optgroup\", \"option\", \"p\", \"rp\", \"rt\"};",
      "info" : "FieldDeclaration[1211-1322]:FieldDeclaration[1211-1322]"
    }, {
      "left" : "static final String[] TagSearchSpecial = new String[]{\"address\", \"applet\", \"area\", \"article\", \"aside\", \"base\", \"basefont\", \"bgsound\",\n        \"blockquote\", \"body\", \"br\", \"button\", \"caption\", \"center\", \"col\", \"colgroup\", \"command\", \"dd\",\n        \"details\", \"dir\", \"div\", \"dl\", \"dt\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\",\n        \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\",\n        \"iframe\", \"img\", \"input\", \"isindex\", \"li\", \"link\", \"listing\", \"marquee\", \"menu\", \"meta\", \"nav\",\n        \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"p\", \"param\", \"plaintext\", \"pre\", \"script\",\n        \"section\", \"select\", \"style\", \"summary\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\",\n        \"title\", \"tr\", \"ul\", \"wbr\", \"xmp\"};",
      "right" : "static final String[] TagSearchSpecial = new String[]{\"address\", \"applet\", \"area\", \"article\", \"aside\", \"base\", \"basefont\", \"bgsound\",\n        \"blockquote\", \"body\", \"br\", \"button\", \"caption\", \"center\", \"col\", \"colgroup\", \"command\", \"dd\",\n        \"details\", \"dir\", \"div\", \"dl\", \"dt\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\",\n        \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\",\n        \"iframe\", \"img\", \"input\", \"isindex\", \"li\", \"link\", \"listing\", \"marquee\", \"menu\", \"meta\", \"nav\",\n        \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"p\", \"param\", \"plaintext\", \"pre\", \"script\",\n        \"section\", \"select\", \"style\", \"summary\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\",\n        \"title\", \"tr\", \"ul\", \"wbr\", \"xmp\"};",
      "info" : "FieldDeclaration[1327-2138]:FieldDeclaration[1327-2138]"
    }, {
      "left" : "public static final int MaxScopeSearchDepth = 100;",
      "right" : "public static final int MaxScopeSearchDepth = 100;",
      "info" : "FieldDeclaration[2144-2194]:FieldDeclaration[2144-2194]"
    }, {
      "left" : "private HtmlTreeBuilderState state;",
      "right" : "private HtmlTreeBuilderState state;",
      "info" : "FieldDeclaration[2266-2301]:FieldDeclaration[2266-2301]"
    }, {
      "left" : "private HtmlTreeBuilderState originalState;",
      "right" : "private HtmlTreeBuilderState originalState;",
      "info" : "FieldDeclaration[2327-2370]:FieldDeclaration[2327-2370]"
    }, {
      "left" : "private boolean baseUriSetFromDoc;",
      "right" : "private boolean baseUriSetFromDoc;",
      "info" : "FieldDeclaration[2403-2437]:FieldDeclaration[2403-2437]"
    }, {
      "left" : "private Element headElement;",
      "right" : "private Element headElement;",
      "info" : "FieldDeclaration[2442-2470]:FieldDeclaration[2442-2470]"
    }, {
      "left" : "private FormElement formElement;",
      "right" : "private FormElement formElement;",
      "info" : "FieldDeclaration[2503-2535]:FieldDeclaration[2503-2535]"
    }, {
      "left" : "private Element contextElement;",
      "right" : "private Element contextElement;",
      "info" : "FieldDeclaration[2568-2599]:FieldDeclaration[2568-2599]"
    }, {
      "left" : "private ArrayList<Element> formattingElements;",
      "right" : "private ArrayList<Element> formattingElements;",
      "info" : "FieldDeclaration[2672-2718]:FieldDeclaration[2672-2718]"
    }, {
      "left" : "private List<String> pendingTableCharacters;",
      "right" : "private List<String> pendingTableCharacters;",
      "info" : "FieldDeclaration[2760-2804]:FieldDeclaration[2760-2804]"
    }, {
      "left" : "private Token.EndTag emptyEnd;",
      "right" : "private Token.EndTag emptyEnd;",
      "info" : "FieldDeclaration[2845-2875]:FieldDeclaration[2845-2875]"
    }, {
      "left" : "private boolean framesetOk;",
      "right" : "private boolean framesetOk;",
      "info" : "FieldDeclaration[2905-2932]:FieldDeclaration[2905-2932]"
    }, {
      "left" : "private boolean fosterInserts;",
      "right" : "private boolean fosterInserts;",
      "info" : "FieldDeclaration[2966-2996]:FieldDeclaration[2966-2996]"
    }, {
      "left" : "private boolean fragmentParsing;",
      "right" : "private boolean fragmentParsing;",
      "info" : "FieldDeclaration[3039-3071]:FieldDeclaration[3039-3071]"
    }, {
      "left" : "ParseSettings defaultSettings()",
      "right" : "ParseSettings defaultSettings()",
      "info" : "MethodDeclaration[3110-3191]:MethodDeclaration[3110-3191]"
    }, {
      "left" : "protected void initialiseParse(Reader input, String baseUri, Parser parser)",
      "right" : "protected void initialiseParse(Reader input, String baseUri, Parser parser)",
      "info" : "MethodDeclaration[3197-3878]:MethodDeclaration[3197-3878]"
    }, {
      "left" : "List<Node> parseFragment(String inputFragment, Element context, String baseUri, Parser parser)",
      "right" : "List<Node> parseFragment(String inputFragment, Element context, String baseUri, Parser parser)",
      "info" : "MethodDeclaration[3884-6033]:MethodDeclaration[3884-6033]"
    }, {
      "left" : "protected boolean process(Token token)",
      "right" : "protected boolean process(Token token)",
      "info" : "MethodDeclaration[6039-6177]:MethodDeclaration[6039-6177]"
    }, {
      "left" : "boolean process(Token token, HtmlTreeBuilderState state)",
      "right" : "boolean process(Token token, HtmlTreeBuilderState state)",
      "info" : "MethodDeclaration[6183-6320]:MethodDeclaration[6183-6320]"
    }, {
      "left" : "void transition(HtmlTreeBuilderState state)",
      "right" : "void transition(HtmlTreeBuilderState state)",
      "info" : "MethodDeclaration[6326-6405]:MethodDeclaration[6326-6405]"
    }, {
      "left" : "HtmlTreeBuilderState state()",
      "right" : "HtmlTreeBuilderState state()",
      "info" : "MethodDeclaration[6411-6469]:MethodDeclaration[6411-6469]"
    }, {
      "left" : "void markInsertionMode()",
      "right" : "void markInsertionMode()",
      "info" : "MethodDeclaration[6475-6538]:MethodDeclaration[6475-6538]"
    }, {
      "left" : "HtmlTreeBuilderState originalState()",
      "right" : "HtmlTreeBuilderState originalState()",
      "info" : "MethodDeclaration[6544-6618]:MethodDeclaration[6544-6618]"
    }, {
      "left" : "void framesetOk(boolean framesetOk)",
      "right" : "void framesetOk(boolean framesetOk)",
      "info" : "MethodDeclaration[6624-6705]:MethodDeclaration[6624-6705]"
    }, {
      "left" : "boolean framesetOk()",
      "right" : "boolean framesetOk()",
      "info" : "MethodDeclaration[6711-6766]:MethodDeclaration[6711-6766]"
    }, {
      "left" : "Document getDocument()",
      "right" : "Document getDocument()",
      "info" : "MethodDeclaration[6772-6822]:MethodDeclaration[6772-6822]"
    }, {
      "left" : "String getBaseUri()",
      "right" : "String getBaseUri()",
      "info" : "MethodDeclaration[6828-6879]:MethodDeclaration[6828-6879]"
    }, {
      "left" : "void maybeSetBaseUri(Element base)",
      "right" : "void maybeSetBaseUri(Element base)",
      "info" : "MethodDeclaration[6885-7340]:MethodDeclaration[6885-7340]"
    }, {
      "left" : "boolean isFragmentParsing()",
      "right" : "boolean isFragmentParsing()",
      "info" : "MethodDeclaration[7346-7413]:MethodDeclaration[7346-7413]"
    }, {
      "left" : "void error(HtmlTreeBuilderState state)",
      "right" : "void error(HtmlTreeBuilderState state)",
      "info" : "MethodDeclaration[7419-7654]:MethodDeclaration[7419-7654]"
    }, {
      "left" : "Element insert(Token.StartTag startTag)",
      "right" : "Element insert(Token.StartTag startTag)",
      "info" : "MethodDeclaration[7660-8462]:MethodDeclaration[7660-8462]"
    }, {
      "left" : "Element insertStartTag(String startTagName)",
      "right" : "Element insertStartTag(String startTagName)",
      "info" : "MethodDeclaration[8468-8638]:MethodDeclaration[8468-8638]"
    }, {
      "left" : "void insert(Element el)",
      "right" : "void insert(Element el)",
      "info" : "MethodDeclaration[8644-8722]:MethodDeclaration[8644-8722]"
    }, {
      "left" : "Element insertEmpty(Token.StartTag startTag)",
      "right" : "Element insertEmpty(Token.StartTag startTag)",
      "info" : "MethodDeclaration[8728-9281]:MethodDeclaration[8728-9281]"
    }, {
      "left" : "FormElement insertForm(Token.StartTag startTag, boolean onStack)",
      "right" : "FormElement insertForm(Token.StartTag startTag, boolean onStack)",
      "info" : "MethodDeclaration[9287-9613]:MethodDeclaration[9287-9613]"
    }, {
      "left" : "void insert(Token.Comment commentToken)",
      "right" : "void insert(Token.Comment commentToken)",
      "info" : "MethodDeclaration[9619-9758]:MethodDeclaration[9619-9758]"
    }, {
      "left" : "void insert(Token.Character characterToken)",
      "right" : "void insert(Token.Character characterToken)",
      "info" : "MethodDeclaration[9764-10342]:MethodDeclaration[9764-10342]"
    }, {
      "left" : "private void insertNode(Node node)",
      "right" : "private void insertNode(Node node)",
      "info" : "MethodDeclaration[10348-10925]:MethodDeclaration[10348-10925]"
    }, {
      "left" : "Element pop()",
      "right" : "Element pop()",
      "info" : "MethodDeclaration[10931-11022]:MethodDeclaration[10931-11022]"
    }, {
      "left" : "void push(Element element)",
      "right" : "void push(Element element)",
      "info" : "MethodDeclaration[11028-11090]:MethodDeclaration[11028-11090]"
    }, {
      "left" : "ArrayList<Element> getStack()",
      "right" : "ArrayList<Element> getStack()",
      "info" : "MethodDeclaration[11096-11155]:MethodDeclaration[11096-11155]"
    }, {
      "left" : "boolean onStack(Element el)",
      "right" : "boolean onStack(Element el)",
      "info" : "MethodDeclaration[11161-11240]:MethodDeclaration[11161-11240]"
    }, {
      "left" : "private boolean isElementInQueue(ArrayList<Element> queue, Element element)",
      "right" : "private boolean isElementInQueue(ArrayList<Element> queue, Element element)",
      "info" : "MethodDeclaration[11246-11541]:MethodDeclaration[11246-11541]"
    }, {
      "left" : "boolean removeFromStack(Element el)",
      "right" : "boolean removeFromStack(Element el)",
      "info" : "MethodDeclaration[11822-12107]:MethodDeclaration[11824-12109]"
    }, {
      "left" : "void clearStackToTableContext()",
      "right" : "void clearStackToTableContext()",
      "info" : "MethodDeclaration[12999-13076]:MethodDeclaration[13007-13084]"
    }, {
      "left" : "void clearStackToTableBodyContext()",
      "right" : "void clearStackToTableBodyContext()",
      "info" : "MethodDeclaration[13082-13193]:MethodDeclaration[13090-13201]"
    }, {
      "left" : "void clearStackToTableRowContext()",
      "right" : "void clearStackToTableRowContext()",
      "info" : "MethodDeclaration[13199-13288]:MethodDeclaration[13207-13296]"
    }, {
      "left" : "Element aboveOnStack(Element el)",
      "right" : "Element aboveOnStack(Element el)",
      "info" : "MethodDeclaration[13641-13927]:MethodDeclaration[13653-13939]"
    }, {
      "left" : "void insertOnStackAfter(Element after, Element in)",
      "right" : "void insertOnStackAfter(Element after, Element in)",
      "info" : "MethodDeclaration[13933-14095]:MethodDeclaration[13945-14107]"
    }, {
      "left" : "void replaceOnStack(Element out, Element in)",
      "right" : "void replaceOnStack(Element out, Element in)",
      "info" : "MethodDeclaration[14101-14193]:MethodDeclaration[14113-14205]"
    }, {
      "left" : "private void replaceInQueue(ArrayList<Element> queue, Element out, Element in)",
      "right" : "private void replaceInQueue(ArrayList<Element> queue, Element out, Element in)",
      "info" : "MethodDeclaration[14199-14385]:MethodDeclaration[14211-14397]"
    }, {
      "left" : "private String[] specificScopeTarget = {null};",
      "right" : "private String[] specificScopeTarget = {null};",
      "info" : "FieldDeclaration[16440-16486]:FieldDeclaration[16454-16500]"
    }, {
      "left" : "private boolean inSpecificScope(String targetName, String[] baseTypes, String[] extraTypes)",
      "right" : "private boolean inSpecificScope(String targetName, String[] baseTypes, String[] extraTypes)",
      "info" : "MethodDeclaration[16492-16712]:MethodDeclaration[16506-16726]"
    }, {
      "left" : "boolean inScope(String[] targetNames)",
      "right" : "boolean inScope(String[] targetNames)",
      "info" : "MethodDeclaration[17613-17728]:MethodDeclaration[17629-17744]"
    }, {
      "left" : "boolean inScope(String targetName)",
      "right" : "boolean inScope(String targetName)",
      "info" : "MethodDeclaration[17734-17818]:MethodDeclaration[17750-17834]"
    }, {
      "left" : "boolean inScope(String targetName, String[] extras)",
      "right" : "boolean inScope(String targetName, String[] extras)",
      "info" : "MethodDeclaration[17824-18090]:MethodDeclaration[17840-18106]"
    }, {
      "left" : "boolean inListItemScope(String targetName)",
      "right" : "boolean inListItemScope(String targetName)",
      "info" : "MethodDeclaration[18096-18197]:MethodDeclaration[18112-18213]"
    }, {
      "left" : "boolean inButtonScope(String targetName)",
      "right" : "boolean inButtonScope(String targetName)",
      "info" : "MethodDeclaration[18203-18304]:MethodDeclaration[18219-18320]"
    }, {
      "left" : "boolean inTableScope(String targetName)",
      "right" : "boolean inTableScope(String targetName)",
      "info" : "MethodDeclaration[18310-18428]:MethodDeclaration[18326-18444]"
    }, {
      "left" : "void setHeadElement(Element headElement)",
      "right" : "void setHeadElement(Element headElement)",
      "info" : "MethodDeclaration[18895-18983]:MethodDeclaration[18913-19001]"
    }, {
      "left" : "Element getHeadElement()",
      "right" : "Element getHeadElement()",
      "info" : "MethodDeclaration[18989-19049]:MethodDeclaration[19007-19067]"
    }, {
      "left" : "boolean isFosterInserts()",
      "right" : "boolean isFosterInserts()",
      "info" : "MethodDeclaration[19055-19118]:MethodDeclaration[19073-19136]"
    }, {
      "left" : "void setFosterInserts(boolean fosterInserts)",
      "right" : "void setFosterInserts(boolean fosterInserts)",
      "info" : "MethodDeclaration[19124-19220]:MethodDeclaration[19142-19238]"
    }, {
      "left" : "FormElement getFormElement()",
      "right" : "FormElement getFormElement()",
      "info" : "MethodDeclaration[19226-19290]:MethodDeclaration[19244-19308]"
    }, {
      "left" : "void setFormElement(FormElement formElement)",
      "right" : "void setFormElement(FormElement formElement)",
      "info" : "MethodDeclaration[19296-19388]:MethodDeclaration[19314-19406]"
    }, {
      "left" : "void newPendingTableCharacters()",
      "right" : "void newPendingTableCharacters()",
      "info" : "MethodDeclaration[19394-19486]:MethodDeclaration[19412-19504]"
    }, {
      "left" : "List<String> getPendingTableCharacters()",
      "right" : "List<String> getPendingTableCharacters()",
      "info" : "MethodDeclaration[19492-19579]:MethodDeclaration[19510-19597]"
    }, {
      "left" : "void generateImpliedEndTags()",
      "right" : "void generateImpliedEndTags()",
      "info" : "MethodDeclaration[20433-20508]:MethodDeclaration[20455-20530]"
    }, {
      "left" : "Element lastFormattingElement()",
      "right" : "Element lastFormattingElement()",
      "info" : "MethodDeclaration[20729-20875]:MethodDeclaration[20753-20899]"
    }, {
      "left" : "Element removeLastFormattingElement()",
      "right" : "Element removeLastFormattingElement()",
      "info" : "MethodDeclaration[20881-21086]:MethodDeclaration[20905-21110]"
    }, {
      "left" : "void pushActiveFormattingElements(Element in)",
      "right" : "void pushActiveFormattingElements(Element in)",
      "info" : "MethodDeclaration[21126-21632]:MethodDeclaration[21150-21656]"
    }, {
      "left" : "void clearFormattingElementsToLastMarker()",
      "right" : "void clearFormattingElementsToLastMarker()",
      "info" : "MethodDeclaration[23502-23717]:MethodDeclaration[23563-23778]"
    }, {
      "left" : "void removeFromActiveFormattingElements(Element el)",
      "right" : "void removeFromActiveFormattingElements(Element el)",
      "info" : "MethodDeclaration[23723-24035]:MethodDeclaration[23784-24096]"
    }, {
      "left" : "boolean isInActiveFormattingElements(Element el)",
      "right" : "boolean isInActiveFormattingElements(Element el)",
      "info" : "MethodDeclaration[24041-24154]:MethodDeclaration[24102-24215]"
    }, {
      "left" : "void replaceActiveFormattingElement(Element out, Element in)",
      "right" : "void replaceActiveFormattingElement(Element out, Element in)",
      "info" : "MethodDeclaration[24537-24658]:MethodDeclaration[24600-24721]"
    }, {
      "left" : "void insertMarkerToFormattingElements()",
      "right" : "void insertMarkerToFormattingElements()",
      "info" : "MethodDeclaration[24664-24749]:MethodDeclaration[24727-24812]"
    }, {
      "left" : "void insertInFosterParent(Node in)",
      "right" : "void insertInFosterParent(Node in)",
      "info" : "MethodDeclaration[24755-25474]:MethodDeclaration[24818-25537]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[25480-25722]:MethodDeclaration[25543-25785]"
    } ],
    "mappings" : [
 {
      "left" : "ParseSettings",
      "right" : "ParseSettings",
      "info" : "SimpleType[3110-3123]:SimpleType[3110-3123]"
    }, {
      "left" : "defaultSettings",
      "right" : "defaultSettings",
      "info" : "SimpleName[3124-3139]:SimpleName[3124-3139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3142-3191]:Block[3142-3191]"
    }, {
      "left" : "return ParseSettings.htmlDefault;",
      "right" : "return ParseSettings.htmlDefault;",
      "info" : "ReturnStatement[3152-3185]:ReturnStatement[3152-3185]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3197-3206]:MarkerAnnotation[3197-3206]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3211-3220]:Modifier[3211-3220]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3221-3225]:PrimitiveType[3221-3225]"
    }, {
      "left" : "initialiseParse",
      "right" : "initialiseParse",
      "info" : "SimpleName[3226-3241]:SimpleName[3226-3241]"
    }, {
      "left" : "Reader input",
      "right" : "Reader input",
      "info" : "SingleVariableDeclaration[3242-3254]:SingleVariableDeclaration[3242-3254]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[3256-3270]:SingleVariableDeclaration[3256-3270]"
    }, {
      "left" : "Parser parser",
      "right" : "Parser parser",
      "info" : "SingleVariableDeclaration[3272-3285]:SingleVariableDeclaration[3272-3285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3287-3878]:Block[3287-3878]"
    }, {
      "left" : "super.initialiseParse(input, baseUri, parser);",
      "right" : "super.initialiseParse(input, baseUri, parser);",
      "info" : "ExpressionStatement[3297-3343]:ExpressionStatement[3297-3343]"
    }, {
      "left" : "state = HtmlTreeBuilderState.Initial;",
      "right" : "state = HtmlTreeBuilderState.Initial;",
      "info" : "ExpressionStatement[3453-3490]:ExpressionStatement[3453-3490]"
    }, {
      "left" : "originalState = null;",
      "right" : "originalState = null;",
      "info" : "ExpressionStatement[3499-3520]:ExpressionStatement[3499-3520]"
    }, {
      "left" : "baseUriSetFromDoc = false;",
      "right" : "baseUriSetFromDoc = false;",
      "info" : "ExpressionStatement[3529-3555]:ExpressionStatement[3529-3555]"
    }, {
      "left" : "headElement = null;",
      "right" : "headElement = null;",
      "info" : "ExpressionStatement[3564-3583]:ExpressionStatement[3564-3583]"
    }, {
      "left" : "formElement = null;",
      "right" : "formElement = null;",
      "info" : "ExpressionStatement[3592-3611]:ExpressionStatement[3592-3611]"
    }, {
      "left" : "contextElement = null;",
      "right" : "contextElement = null;",
      "info" : "ExpressionStatement[3620-3642]:ExpressionStatement[3620-3642]"
    }, {
      "left" : "formattingElements = new ArrayList<>();",
      "right" : "formattingElements = new ArrayList<>();",
      "info" : "ExpressionStatement[3651-3690]:ExpressionStatement[3651-3690]"
    }, {
      "left" : "pendingTableCharacters = new ArrayList<>();",
      "right" : "pendingTableCharacters = new ArrayList<>();",
      "info" : "ExpressionStatement[3699-3742]:ExpressionStatement[3699-3742]"
    }, {
      "left" : "emptyEnd = new Token.EndTag();",
      "right" : "emptyEnd = new Token.EndTag();",
      "info" : "ExpressionStatement[3751-3781]:ExpressionStatement[3751-3781]"
    }, {
      "left" : "framesetOk = true;",
      "right" : "framesetOk = true;",
      "info" : "ExpressionStatement[3790-3808]:ExpressionStatement[3790-3808]"
    }, {
      "left" : "fosterInserts = false;",
      "right" : "fosterInserts = false;",
      "info" : "ExpressionStatement[3817-3839]:ExpressionStatement[3817-3839]"
    }, {
      "left" : "fragmentParsing = false;",
      "right" : "fragmentParsing = false;",
      "info" : "ExpressionStatement[3848-3872]:ExpressionStatement[3848-3872]"
    }, {
      "left" : "List<Node>",
      "right" : "List<Node>",
      "info" : "ParameterizedType[3884-3894]:ParameterizedType[3884-3894]"
    }, {
      "left" : "parseFragment",
      "right" : "parseFragment",
      "info" : "SimpleName[3895-3908]:SimpleName[3895-3908]"
    }, {
      "left" : "String inputFragment",
      "right" : "String inputFragment",
      "info" : "SingleVariableDeclaration[3909-3929]:SingleVariableDeclaration[3909-3929]"
    }, {
      "left" : "Element context",
      "right" : "Element context",
      "info" : "SingleVariableDeclaration[3931-3946]:SingleVariableDeclaration[3931-3946]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[3948-3962]:SingleVariableDeclaration[3948-3962]"
    }, {
      "left" : "Parser parser",
      "right" : "Parser parser",
      "info" : "SingleVariableDeclaration[3964-3977]:SingleVariableDeclaration[3964-3977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3979-6033]:Block[3979-6033]"
    }, {
      "left" : "state = HtmlTreeBuilderState.Initial;",
      "right" : "state = HtmlTreeBuilderState.Initial;",
      "info" : "ExpressionStatement[4020-4057]:ExpressionStatement[4020-4057]"
    }, {
      "left" : "initialiseParse(new StringReader(inputFragment), baseUri, parser);",
      "right" : "initialiseParse(new StringReader(inputFragment), baseUri, parser);",
      "info" : "ExpressionStatement[4066-4132]:ExpressionStatement[4066-4132]"
    }, {
      "left" : "contextElement = context;",
      "right" : "contextElement = context;",
      "info" : "ExpressionStatement[4141-4166]:ExpressionStatement[4141-4166]"
    }, {
      "left" : "fragmentParsing = true;",
      "right" : "fragmentParsing = true;",
      "info" : "ExpressionStatement[4175-4198]:ExpressionStatement[4175-4198]"
    }, {
      "left" : "Element root = null;",
      "right" : "Element root = null;",
      "info" : "VariableDeclarationStatement[4207-4227]:VariableDeclarationStatement[4207-4227]"
    }, {
      "left" : "if (context != null)",
      "right" : "if (context != null)",
      "info" : "IfStatement[4237-5888]:IfStatement[4237-5888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4258-5888]:Block[4258-5888]"
    }, {
      "left" : "if (context.ownerDocument() != null)",
      "right" : "if (context.ownerDocument() != null)",
      "info" : "IfStatement[4272-4395]:IfStatement[4272-4395]"
    }, {
      "left" : "doc.quirksMode(context.ownerDocument().quirksMode());",
      "right" : "doc.quirksMode(context.ownerDocument().quirksMode());",
      "info" : "ExpressionStatement[4342-4395]:ExpressionStatement[4342-4395]"
    }, {
      "left" : "String contextTag = context.tagName();",
      "right" : "String contextTag = context.tagName();",
      "info" : "VariableDeclarationStatement[4456-4494]:VariableDeclarationStatement[4456-4494]"
    }, {
      "left" : "if (StringUtil.in(contextTag, \"title\", \"textarea\"))",
      "right" : "if (StringUtil.in(contextTag, \"title\", \"textarea\"))",
      "info" : "IfStatement[4507-5227]:IfStatement[4507-5227]"
    }, {
      "left" : "tokeniser.transition(TokeniserState.Rcdata);",
      "right" : "tokeniser.transition(TokeniserState.Rcdata);",
      "info" : "ExpressionStatement[4575-4619]:ExpressionStatement[4575-4619]"
    }, {
      "left" : "if (StringUtil.in(contextTag, \"iframe\", \"noembed\", \"noframes\", \"style\", \"xmp\"))",
      "right" : "if (StringUtil.in(contextTag, \"iframe\", \"noembed\", \"noframes\", \"style\", \"xmp\"))",
      "info" : "IfStatement[4637-5227]:IfStatement[4637-5227]"
    }, {
      "left" : "tokeniser.transition(TokeniserState.Rawtext);",
      "right" : "tokeniser.transition(TokeniserState.Rawtext);",
      "info" : "ExpressionStatement[4733-4778]:ExpressionStatement[4733-4778]"
    }, {
      "left" : "if (contextTag.equals(\"script\"))",
      "right" : "if (contextTag.equals(\"script\"))",
      "info" : "IfStatement[4796-5227]:IfStatement[4796-5227]"
    }, {
      "left" : "tokeniser.transition(TokeniserState.ScriptData);",
      "right" : "tokeniser.transition(TokeniserState.ScriptData);",
      "info" : "ExpressionStatement[4845-4893]:ExpressionStatement[4845-4893]"
    }, {
      "left" : "if (contextTag.equals((\"noscript\")))",
      "right" : "if (contextTag.equals((\"noscript\")))",
      "info" : "IfStatement[4911-5227]:IfStatement[4911-5227]"
    }, {
      "left" : "tokeniser.transition(TokeniserState.Data);",
      "right" : "tokeniser.transition(TokeniserState.Data);",
      "info" : "ExpressionStatement[4964-5006]:ExpressionStatement[4964-5006]"
    }, {
      "left" : "if (contextTag.equals(\"plaintext\"))",
      "right" : "if (contextTag.equals(\"plaintext\"))",
      "info" : "IfStatement[5057-5227]:IfStatement[5057-5227]"
    }, {
      "left" : "tokeniser.transition(TokeniserState.Data);",
      "right" : "tokeniser.transition(TokeniserState.Data);",
      "info" : "ExpressionStatement[5109-5151]:ExpressionStatement[5109-5151]"
    }, {
      "left" : "tokeniser.transition(TokeniserState.Data);",
      "right" : "tokeniser.transition(TokeniserState.Data);",
      "info" : "ExpressionStatement[5185-5227]:ExpressionStatement[5185-5227]"
    }, {
      "left" : "root = new Element(Tag.valueOf(\"html\", settings), baseUri);",
      "right" : "root = new Element(Tag.valueOf(\"html\", settings), baseUri);",
      "info" : "ExpressionStatement[5252-5311]:ExpressionStatement[5252-5311]"
    }, {
      "left" : "doc.appendChild(root);",
      "right" : "doc.appendChild(root);",
      "info" : "ExpressionStatement[5324-5346]:ExpressionStatement[5324-5346]"
    }, {
      "left" : "stack.add(root);",
      "right" : "stack.add(root);",
      "info" : "ExpressionStatement[5359-5375]:ExpressionStatement[5359-5375]"
    }, {
      "left" : "resetInsertionMode();",
      "right" : "resetInsertionMode();",
      "info" : "ExpressionStatement[5388-5409]:ExpressionStatement[5388-5409]"
    }, {
      "left" : "Elements contextChain = context.parents();",
      "right" : "Elements contextChain = context.parents();",
      "info" : "VariableDeclarationStatement[5577-5619]:VariableDeclarationStatement[5577-5619]"
    }, {
      "left" : "contextChain.add(0, context);",
      "right" : "contextChain.add(0, context);",
      "info" : "ExpressionStatement[5632-5661]:ExpressionStatement[5632-5661]"
    }, {
      "left" : "for (Element parent: contextChain)",
      "right" : "for (Element parent: contextChain)",
      "info" : "EnhancedForStatement[5674-5878]:EnhancedForStatement[5674-5878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5709-5878]:Block[5709-5878]"
    }, {
      "left" : "if (parent instanceof FormElement)",
      "right" : "if (parent instanceof FormElement)",
      "info" : "IfStatement[5727-5864]:IfStatement[5727-5864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5762-5864]:Block[5762-5864]"
    }, {
      "left" : "formElement = (FormElement) parent;",
      "right" : "formElement = (FormElement) parent;",
      "info" : "ExpressionStatement[5784-5819]:ExpressionStatement[5784-5819]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[5840-5846]:BreakStatement[5840-5846]"
    }, {
      "left" : "runParser();",
      "right" : "runParser();",
      "info" : "ExpressionStatement[5898-5910]:ExpressionStatement[5898-5910]"
    }, {
      "left" : "if (context != null)",
      "right" : "if (context != null)",
      "info" : "IfStatement[5919-6027]:IfStatement[5919-6027]"
    }, {
      "left" : "return root.childNodes();",
      "right" : "return root.childNodes();",
      "info" : "ReturnStatement[5952-5977]:ReturnStatement[5952-5977]"
    }, {
      "left" : "return doc.childNodes();",
      "right" : "return doc.childNodes();",
      "info" : "ReturnStatement[6003-6027]:ReturnStatement[6003-6027]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6039-6048]:MarkerAnnotation[6039-6048]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6053-6062]:Modifier[6053-6062]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6063-6070]:PrimitiveType[6063-6070]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[6071-6078]:SimpleName[6071-6078]"
    }, {
      "left" : "Token token",
      "right" : "Token token",
      "info" : "SingleVariableDeclaration[6079-6090]:SingleVariableDeclaration[6079-6090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6092-6177]:Block[6092-6177]"
    }, {
      "left" : "currentToken = token;",
      "right" : "currentToken = token;",
      "info" : "ExpressionStatement[6102-6123]:ExpressionStatement[6102-6123]"
    }, {
      "left" : "return this.state.process(token, this);",
      "right" : "return this.state.process(token, this);",
      "info" : "ReturnStatement[6132-6171]:ReturnStatement[6132-6171]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6183-6190]:PrimitiveType[6183-6190]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[6191-6198]:SimpleName[6191-6198]"
    }, {
      "left" : "Token token",
      "right" : "Token token",
      "info" : "SingleVariableDeclaration[6199-6210]:SingleVariableDeclaration[6199-6210]"
    }, {
      "left" : "HtmlTreeBuilderState state",
      "right" : "HtmlTreeBuilderState state",
      "info" : "SingleVariableDeclaration[6212-6238]:SingleVariableDeclaration[6212-6238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6240-6320]:Block[6240-6320]"
    }, {
      "left" : "currentToken = token;",
      "right" : "currentToken = token;",
      "info" : "ExpressionStatement[6250-6271]:ExpressionStatement[6250-6271]"
    }, {
      "left" : "return state.process(token, this);",
      "right" : "return state.process(token, this);",
      "info" : "ReturnStatement[6280-6314]:ReturnStatement[6280-6314]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6326-6330]:PrimitiveType[6326-6330]"
    }, {
      "left" : "transition",
      "right" : "transition",
      "info" : "SimpleName[6331-6341]:SimpleName[6331-6341]"
    }, {
      "left" : "HtmlTreeBuilderState state",
      "right" : "HtmlTreeBuilderState state",
      "info" : "SingleVariableDeclaration[6342-6368]:SingleVariableDeclaration[6342-6368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6370-6405]:Block[6370-6405]"
    }, {
      "left" : "this.state = state;",
      "right" : "this.state = state;",
      "info" : "ExpressionStatement[6380-6399]:ExpressionStatement[6380-6399]"
    }, {
      "left" : "HtmlTreeBuilderState",
      "right" : "HtmlTreeBuilderState",
      "info" : "SimpleType[6411-6431]:SimpleType[6411-6431]"
    }, {
      "left" : "state",
      "right" : "state",
      "info" : "SimpleName[6432-6437]:SimpleName[6432-6437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6440-6469]:Block[6440-6469]"
    }, {
      "left" : "return state;",
      "right" : "return state;",
      "info" : "ReturnStatement[6450-6463]:ReturnStatement[6450-6463]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6475-6479]:PrimitiveType[6475-6479]"
    }, {
      "left" : "markInsertionMode",
      "right" : "markInsertionMode",
      "info" : "SimpleName[6480-6497]:SimpleName[6480-6497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6500-6538]:Block[6500-6538]"
    }, {
      "left" : "originalState = state;",
      "right" : "originalState = state;",
      "info" : "ExpressionStatement[6510-6532]:ExpressionStatement[6510-6532]"
    }, {
      "left" : "HtmlTreeBuilderState",
      "right" : "HtmlTreeBuilderState",
      "info" : "SimpleType[6544-6564]:SimpleType[6544-6564]"
    }, {
      "left" : "originalState",
      "right" : "originalState",
      "info" : "SimpleName[6565-6578]:SimpleName[6565-6578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6581-6618]:Block[6581-6618]"
    }, {
      "left" : "return originalState;",
      "right" : "return originalState;",
      "info" : "ReturnStatement[6591-6612]:ReturnStatement[6591-6612]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6624-6628]:PrimitiveType[6624-6628]"
    }, {
      "left" : "framesetOk",
      "right" : "framesetOk",
      "info" : "SimpleName[6629-6639]:SimpleName[6629-6639]"
    }, {
      "left" : "boolean framesetOk",
      "right" : "boolean framesetOk",
      "info" : "SingleVariableDeclaration[6640-6658]:SingleVariableDeclaration[6640-6658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6660-6705]:Block[6660-6705]"
    }, {
      "left" : "this.framesetOk = framesetOk;",
      "right" : "this.framesetOk = framesetOk;",
      "info" : "ExpressionStatement[6670-6699]:ExpressionStatement[6670-6699]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6711-6718]:PrimitiveType[6711-6718]"
    }, {
      "left" : "framesetOk",
      "right" : "framesetOk",
      "info" : "SimpleName[6719-6729]:SimpleName[6719-6729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6732-6766]:Block[6732-6766]"
    }, {
      "left" : "return framesetOk;",
      "right" : "return framesetOk;",
      "info" : "ReturnStatement[6742-6760]:ReturnStatement[6742-6760]"
    }, {
      "left" : "Document",
      "right" : "Document",
      "info" : "SimpleType[6772-6780]:SimpleType[6772-6780]"
    }, {
      "left" : "getDocument",
      "right" : "getDocument",
      "info" : "SimpleName[6781-6792]:SimpleName[6781-6792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6795-6822]:Block[6795-6822]"
    }, {
      "left" : "return doc;",
      "right" : "return doc;",
      "info" : "ReturnStatement[6805-6816]:ReturnStatement[6805-6816]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6828-6834]:SimpleType[6828-6834]"
    }, {
      "left" : "getBaseUri",
      "right" : "getBaseUri",
      "info" : "SimpleName[6835-6845]:SimpleName[6835-6845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6848-6879]:Block[6848-6879]"
    }, {
      "left" : "return baseUri;",
      "right" : "return baseUri;",
      "info" : "ReturnStatement[6858-6873]:ReturnStatement[6858-6873]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6885-6889]:PrimitiveType[6885-6889]"
    }, {
      "left" : "maybeSetBaseUri",
      "right" : "maybeSetBaseUri",
      "info" : "SimpleName[6890-6905]:SimpleName[6890-6905]"
    }, {
      "left" : "Element base",
      "right" : "Element base",
      "info" : "SingleVariableDeclaration[6906-6918]:SingleVariableDeclaration[6906-6918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6920-7340]:Block[6920-7340]"
    }, {
      "left" : "if (baseUriSetFromDoc)",
      "right" : "if (baseUriSetFromDoc)",
      "info" : "IfStatement[6930-7021]:IfStatement[6930-7021]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[7014-7021]:ReturnStatement[7014-7021]"
    }, {
      "left" : "String href = base.absUrl(\"href\");",
      "right" : "String href = base.absUrl(\"href\");",
      "info" : "VariableDeclarationStatement[7031-7065]:VariableDeclarationStatement[7031-7065]"
    }, {
      "left" : "if (href.length() != 0)",
      "right" : "if (href.length() != 0)",
      "info" : "IfStatement[7074-7334]:IfStatement[7074-7334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7098-7334]:Block[7098-7334]"
    }, {
      "left" : "baseUri = href;",
      "right" : "baseUri = href;",
      "info" : "ExpressionStatement[7140-7155]:ExpressionStatement[7140-7155]"
    }, {
      "left" : "baseUriSetFromDoc = true;",
      "right" : "baseUriSetFromDoc = true;",
      "info" : "ExpressionStatement[7168-7193]:ExpressionStatement[7168-7193]"
    }, {
      "left" : "doc.setBaseUri(href);",
      "right" : "doc.setBaseUri(href);",
      "info" : "ExpressionStatement[7206-7227]:ExpressionStatement[7206-7227]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7346-7353]:PrimitiveType[7346-7353]"
    }, {
      "left" : "isFragmentParsing",
      "right" : "isFragmentParsing",
      "info" : "SimpleName[7354-7371]:SimpleName[7354-7371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7374-7413]:Block[7374-7413]"
    }, {
      "left" : "return fragmentParsing;",
      "right" : "return fragmentParsing;",
      "info" : "ReturnStatement[7384-7407]:ReturnStatement[7384-7407]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7419-7423]:PrimitiveType[7419-7423]"
    }, {
      "left" : "error",
      "right" : "error",
      "info" : "SimpleName[7424-7429]:SimpleName[7424-7429]"
    }, {
      "left" : "HtmlTreeBuilderState state",
      "right" : "HtmlTreeBuilderState state",
      "info" : "SingleVariableDeclaration[7430-7456]:SingleVariableDeclaration[7430-7456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7458-7654]:Block[7458-7654]"
    }, {
      "left" : "if (parser.getErrors().canAddError())",
      "right" : "if (parser.getErrors().canAddError())",
      "info" : "IfStatement[7468-7648]:IfStatement[7468-7648]"
    }, {
      "left" : "parser.getErrors().add(new ParseError(reader.pos(), \"Unexpected token [%s] when in state [%s]\", currentToken.tokenType(), state));",
      "right" : "parser.getErrors().add(new ParseError(reader.pos(), \"Unexpected token [%s] when in state [%s]\", currentToken.tokenType(), state));",
      "info" : "ExpressionStatement[7518-7648]:ExpressionStatement[7518-7648]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[7660-7667]:SimpleType[7660-7667]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[7668-7674]:SimpleName[7668-7674]"
    }, {
      "left" : "Token.StartTag startTag",
      "right" : "Token.StartTag startTag",
      "info" : "SingleVariableDeclaration[7675-7698]:SingleVariableDeclaration[7675-7698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7700-8462]:Block[7700-8462]"
    }, {
      "left" : "if (startTag.isSelfClosing())",
      "right" : "if (startTag.isSelfClosing())",
      "info" : "IfStatement[7862-8274]:IfStatement[7862-8274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7892-8274]:Block[7892-8274]"
    }, {
      "left" : "Element el = insertEmpty(startTag);",
      "right" : "Element el = insertEmpty(startTag);",
      "info" : "VariableDeclarationStatement[7906-7941]:VariableDeclarationStatement[7906-7941]"
    }, {
      "left" : "stack.add(el);",
      "right" : "stack.add(el);",
      "info" : "ExpressionStatement[7954-7968]:ExpressionStatement[7954-7968]"
    }, {
      "left" : "tokeniser.transition(TokeniserState.Data);",
      "right" : "tokeniser.transition(TokeniserState.Data);",
      "info" : "ExpressionStatement[7981-8023]:ExpressionStatement[7981-8023]"
    }, {
      "left" : "tokeniser.emit(emptyEnd.reset().name(el.tagName()));",
      "right" : "tokeniser.emit(emptyEnd.reset().name(el.tagName()));",
      "info" : "ExpressionStatement[8107-8159]:ExpressionStatement[8107-8159]"
    }, {
      "left" : "return el;",
      "right" : "return el;",
      "info" : "ReturnStatement[8254-8264]:ReturnStatement[8254-8264]"
    }, {
      "left" : "Element el = new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));",
      "right" : "Element el = new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));",
      "info" : "VariableDeclarationStatement[8292-8417]:VariableDeclarationStatement[8292-8417]"
    }, {
      "left" : "insert(el);",
      "right" : "insert(el);",
      "info" : "ExpressionStatement[8426-8437]:ExpressionStatement[8426-8437]"
    }, {
      "left" : "return el;",
      "right" : "return el;",
      "info" : "ReturnStatement[8446-8456]:ReturnStatement[8446-8456]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[8468-8475]:SimpleType[8468-8475]"
    }, {
      "left" : "insertStartTag",
      "right" : "insertStartTag",
      "info" : "SimpleName[8476-8490]:SimpleName[8476-8490]"
    }, {
      "left" : "String startTagName",
      "right" : "String startTagName",
      "info" : "SingleVariableDeclaration[8491-8510]:SingleVariableDeclaration[8491-8510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8512-8638]:Block[8512-8638]"
    }, {
      "left" : "Element el = new Element(Tag.valueOf(startTagName, settings), baseUri);",
      "right" : "Element el = new Element(Tag.valueOf(startTagName, settings), baseUri);",
      "info" : "VariableDeclarationStatement[8522-8593]:VariableDeclarationStatement[8522-8593]"
    }, {
      "left" : "insert(el);",
      "right" : "insert(el);",
      "info" : "ExpressionStatement[8602-8613]:ExpressionStatement[8602-8613]"
    }, {
      "left" : "return el;",
      "right" : "return el;",
      "info" : "ReturnStatement[8622-8632]:ReturnStatement[8622-8632]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8644-8648]:PrimitiveType[8644-8648]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[8649-8655]:SimpleName[8649-8655]"
    }, {
      "left" : "Element el",
      "right" : "Element el",
      "info" : "SingleVariableDeclaration[8656-8666]:SingleVariableDeclaration[8656-8666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8668-8722]:Block[8668-8722]"
    }, {
      "left" : "insertNode(el);",
      "right" : "insertNode(el);",
      "info" : "ExpressionStatement[8678-8693]:ExpressionStatement[8678-8693]"
    }, {
      "left" : "stack.add(el);",
      "right" : "stack.add(el);",
      "info" : "ExpressionStatement[8702-8716]:ExpressionStatement[8702-8716]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[8728-8735]:SimpleType[8728-8735]"
    }, {
      "left" : "insertEmpty",
      "right" : "insertEmpty",
      "info" : "SimpleName[8736-8747]:SimpleName[8736-8747]"
    }, {
      "left" : "Token.StartTag startTag",
      "right" : "Token.StartTag startTag",
      "info" : "SingleVariableDeclaration[8748-8771]:SingleVariableDeclaration[8748-8771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8773-9281]:Block[8773-9281]"
    }, {
      "left" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
      "right" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
      "info" : "VariableDeclarationStatement[8783-8832]:VariableDeclarationStatement[8783-8832]"
    }, {
      "left" : "Element el = new Element(tag, baseUri, startTag.attributes);",
      "right" : "Element el = new Element(tag, baseUri, startTag.attributes);",
      "info" : "VariableDeclarationStatement[8841-8901]:VariableDeclarationStatement[8841-8901]"
    }, {
      "left" : "insertNode(el);",
      "right" : "insertNode(el);",
      "info" : "ExpressionStatement[8910-8925]:ExpressionStatement[8910-8925]"
    }, {
      "left" : "if (startTag.isSelfClosing())",
      "right" : "if (startTag.isSelfClosing())",
      "info" : "IfStatement[8934-9256]:IfStatement[8934-9256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8964-9256]:Block[8964-9256]"
    }, {
      "left" : "if (tag.isKnownTag())",
      "right" : "if (tag.isKnownTag())",
      "info" : "IfStatement[8978-9246]:IfStatement[8978-9246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9000-9134]:Block[9000-9134]"
    }, {
      "left" : "if (!tag.isEmpty())",
      "right" : "if (!tag.isEmpty())",
      "info" : "IfStatement[9018-9120]:IfStatement[9018-9120]"
    }, {
      "left" : "tokeniser.error(\"Tag cannot be self closing; not a void tag\");",
      "right" : "tokeniser.error(\"Tag cannot be self closing; not a void tag\");",
      "info" : "ExpressionStatement[9058-9120]:ExpressionStatement[9058-9120]"
    }, {
      "left" : "tag.setSelfClosing();",
      "right" : "tag.setSelfClosing();",
      "info" : "ExpressionStatement[9225-9246]:ExpressionStatement[9225-9246]"
    }, {
      "left" : "return el;",
      "right" : "return el;",
      "info" : "ReturnStatement[9265-9275]:ReturnStatement[9265-9275]"
    }, {
      "left" : "FormElement",
      "right" : "FormElement",
      "info" : "SimpleType[9287-9298]:SimpleType[9287-9298]"
    }, {
      "left" : "insertForm",
      "right" : "insertForm",
      "info" : "SimpleName[9299-9309]:SimpleName[9299-9309]"
    }, {
      "left" : "Token.StartTag startTag",
      "right" : "Token.StartTag startTag",
      "info" : "SingleVariableDeclaration[9310-9333]:SingleVariableDeclaration[9310-9333]"
    }, {
      "left" : "boolean onStack",
      "right" : "boolean onStack",
      "info" : "SingleVariableDeclaration[9335-9350]:SingleVariableDeclaration[9335-9350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9352-9613]:Block[9352-9613]"
    }, {
      "left" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
      "right" : "Tag tag = Tag.valueOf(startTag.name(), settings);",
      "info" : "VariableDeclarationStatement[9362-9411]:VariableDeclarationStatement[9362-9411]"
    }, {
      "left" : "FormElement el = new FormElement(tag, baseUri, startTag.attributes);",
      "right" : "FormElement el = new FormElement(tag, baseUri, startTag.attributes);",
      "info" : "VariableDeclarationStatement[9420-9488]:VariableDeclarationStatement[9420-9488]"
    }, {
      "left" : "setFormElement(el);",
      "right" : "setFormElement(el);",
      "info" : "ExpressionStatement[9497-9516]:ExpressionStatement[9497-9516]"
    }, {
      "left" : "insertNode(el);",
      "right" : "insertNode(el);",
      "info" : "ExpressionStatement[9525-9540]:ExpressionStatement[9525-9540]"
    }, {
      "left" : "if (onStack)",
      "right" : "if (onStack)",
      "info" : "IfStatement[9549-9588]:IfStatement[9549-9588]"
    }, {
      "left" : "stack.add(el);",
      "right" : "stack.add(el);",
      "info" : "ExpressionStatement[9574-9588]:ExpressionStatement[9574-9588]"
    }, {
      "left" : "return el;",
      "right" : "return el;",
      "info" : "ReturnStatement[9597-9607]:ReturnStatement[9597-9607]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9619-9623]:PrimitiveType[9619-9623]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[9624-9630]:SimpleName[9624-9630]"
    }, {
      "left" : "Token.Comment commentToken",
      "right" : "Token.Comment commentToken",
      "info" : "SingleVariableDeclaration[9631-9657]:SingleVariableDeclaration[9631-9657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9659-9758]:Block[9659-9758]"
    }, {
      "left" : "Comment comment = new Comment(commentToken.getData());",
      "right" : "Comment comment = new Comment(commentToken.getData());",
      "info" : "VariableDeclarationStatement[9669-9723]:VariableDeclarationStatement[9669-9723]"
    }, {
      "left" : "insertNode(comment);",
      "right" : "insertNode(comment);",
      "info" : "ExpressionStatement[9732-9752]:ExpressionStatement[9732-9752]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9764-9768]:PrimitiveType[9764-9768]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[9769-9775]:SimpleName[9769-9775]"
    }, {
      "left" : "Token.Character characterToken",
      "right" : "Token.Character characterToken",
      "info" : "SingleVariableDeclaration[9776-9806]:SingleVariableDeclaration[9776-9806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9808-10342]:Block[9808-10342]"
    }, {
      "left" : "final Node node;",
      "right" : "final Node node;",
      "info" : "VariableDeclarationStatement[9818-9834]:VariableDeclarationStatement[9818-9834]"
    }, {
      "left" : "final Element el = currentElement();",
      "right" : "final Element el = currentElement();",
      "info" : "VariableDeclarationStatement[9843-9879]:VariableDeclarationStatement[9843-9879]"
    }, {
      "left" : "final String tagName = el.tagName();",
      "right" : "final String tagName = el.tagName();",
      "info" : "VariableDeclarationStatement[9888-9924]:VariableDeclarationStatement[9888-9924]"
    }, {
      "left" : "final String data = characterToken.getData();",
      "right" : "final String data = characterToken.getData();",
      "info" : "VariableDeclarationStatement[9933-9978]:VariableDeclarationStatement[9933-9978]"
    }, {
      "left" : "if (characterToken.isCData())",
      "right" : "if (characterToken.isCData())",
      "info" : "IfStatement[9988-10218]:IfStatement[9988-10218]"
    }, {
      "left" : "node = new CDataNode(data);",
      "right" : "node = new CDataNode(data);",
      "info" : "ExpressionStatement[10030-10057]:ExpressionStatement[10030-10057]"
    }, {
      "left" : "if (tagName.equals(\"script\") || tagName.equals(\"style\"))",
      "right" : "if (tagName.equals(\"script\") || tagName.equals(\"style\"))",
      "info" : "IfStatement[10071-10218]:IfStatement[10071-10218]"
    }, {
      "left" : "node = new DataNode(data);",
      "right" : "node = new DataNode(data);",
      "info" : "ExpressionStatement[10140-10166]:ExpressionStatement[10140-10166]"
    }, {
      "left" : "node = new TextNode(data);",
      "right" : "node = new TextNode(data);",
      "info" : "ExpressionStatement[10192-10218]:ExpressionStatement[10192-10218]"
    }, {
      "left" : "el.appendChild(node);",
      "right" : "el.appendChild(node);",
      "info" : "ExpressionStatement[10227-10248]:ExpressionStatement[10227-10248]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10348-10355]:Modifier[10348-10355]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10356-10360]:PrimitiveType[10356-10360]"
    }, {
      "left" : "insertNode",
      "right" : "insertNode",
      "info" : "SimpleName[10361-10371]:SimpleName[10361-10371]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[10372-10381]:SingleVariableDeclaration[10372-10381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10383-10925]:Block[10383-10925]"
    }, {
      "left" : "if (stack.size() == 0)",
      "right" : "if (stack.size() == 0)",
      "info" : "IfStatement[10486-10680]:IfStatement[10486-10680]"
    }, {
      "left" : "doc.appendChild(node);",
      "right" : "doc.appendChild(node);",
      "info" : "ExpressionStatement[10521-10543]:ExpressionStatement[10521-10543]"
    }, {
      "left" : "if (isFosterInserts())",
      "right" : "if (isFosterInserts())",
      "info" : "IfStatement[10557-10680]:IfStatement[10557-10680]"
    }, {
      "left" : "insertInFosterParent(node);",
      "right" : "insertInFosterParent(node);",
      "info" : "ExpressionStatement[10592-10619]:ExpressionStatement[10592-10619]"
    }, {
      "left" : "currentElement().appendChild(node);",
      "right" : "currentElement().appendChild(node);",
      "info" : "ExpressionStatement[10645-10680]:ExpressionStatement[10645-10680]"
    }, {
      "left" : "if (node instanceof Element && ((Element) node).tag().isFormListed())",
      "right" : "if (node instanceof Element && ((Element) node).tag().isFormListed())",
      "info" : "IfStatement[10745-10919]:IfStatement[10745-10919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10815-10919]:Block[10815-10919]"
    }, {
      "left" : "if (formElement != null)",
      "right" : "if (formElement != null)",
      "info" : "IfStatement[10829-10909]:IfStatement[10829-10909]"
    }, {
      "left" : "formElement.addElement((Element) node);",
      "right" : "formElement.addElement((Element) node);",
      "info" : "ExpressionStatement[10870-10909]:ExpressionStatement[10870-10909]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[10931-10938]:SimpleType[10931-10938]"
    }, {
      "left" : "pop",
      "right" : "pop",
      "info" : "SimpleName[10939-10942]:SimpleName[10939-10942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10945-11022]:Block[10945-11022]"
    }, {
      "left" : "int size = stack.size();",
      "right" : "int size = stack.size();",
      "info" : "VariableDeclarationStatement[10955-10979]:VariableDeclarationStatement[10955-10979]"
    }, {
      "left" : "return stack.remove(size-1);",
      "right" : "return stack.remove(size-1);",
      "info" : "ReturnStatement[10988-11016]:ReturnStatement[10988-11016]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11028-11032]:PrimitiveType[11028-11032]"
    }, {
      "left" : "push",
      "right" : "push",
      "info" : "SimpleName[11033-11037]:SimpleName[11033-11037]"
    }, {
      "left" : "Element element",
      "right" : "Element element",
      "info" : "SingleVariableDeclaration[11038-11053]:SingleVariableDeclaration[11038-11053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11055-11090]:Block[11055-11090]"
    }, {
      "left" : "stack.add(element);",
      "right" : "stack.add(element);",
      "info" : "ExpressionStatement[11065-11084]:ExpressionStatement[11065-11084]"
    }, {
      "left" : "ArrayList<Element>",
      "right" : "ArrayList<Element>",
      "info" : "ParameterizedType[11096-11114]:ParameterizedType[11096-11114]"
    }, {
      "left" : "getStack",
      "right" : "getStack",
      "info" : "SimpleName[11115-11123]:SimpleName[11115-11123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11126-11155]:Block[11126-11155]"
    }, {
      "left" : "return stack;",
      "right" : "return stack;",
      "info" : "ReturnStatement[11136-11149]:ReturnStatement[11136-11149]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11161-11168]:PrimitiveType[11161-11168]"
    }, {
      "left" : "onStack",
      "right" : "onStack",
      "info" : "SimpleName[11169-11176]:SimpleName[11169-11176]"
    }, {
      "left" : "Element el",
      "right" : "Element el",
      "info" : "SingleVariableDeclaration[11177-11187]:SingleVariableDeclaration[11177-11187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11189-11240]:Block[11189-11240]"
    }, {
      "left" : "return isElementInQueue(stack, el);",
      "right" : "return isElementInQueue(stack, el);",
      "info" : "ReturnStatement[11199-11234]:ReturnStatement[11199-11234]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11246-11253]:Modifier[11246-11253]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11254-11261]:PrimitiveType[11254-11261]"
    }, {
      "left" : "isElementInQueue",
      "right" : "isElementInQueue",
      "info" : "SimpleName[11262-11278]:SimpleName[11262-11278]"
    }, {
      "left" : "ArrayList<Element> queue",
      "right" : "ArrayList<Element> queue",
      "info" : "SingleVariableDeclaration[11279-11303]:SingleVariableDeclaration[11279-11303]"
    }, {
      "left" : "Element element",
      "right" : "Element element",
      "info" : "SingleVariableDeclaration[11305-11320]:SingleVariableDeclaration[11305-11320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11322-11541]:Block[11322-11541]"
    }, {
      "left" : "for (int pos = queue.size() -1; pos >= 0; pos--)",
      "right" : "for (int pos = queue.size() -1; pos >= 0; pos--)",
      "info" : "ForStatement[11332-11513]:ForStatement[11332-11513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11381-11513]:Block[11381-11513]"
    }, {
      "left" : "Element next = queue.get(pos);",
      "right" : "Element next = queue.get(pos);",
      "info" : "VariableDeclarationStatement[11395-11425]:VariableDeclarationStatement[11395-11425]"
    }, {
      "left" : "if (next == element)",
      "right" : "if (next == element)",
      "info" : "IfStatement[11438-11503]:IfStatement[11438-11503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11459-11503]:Block[11459-11503]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11477-11489]:ReturnStatement[11477-11489]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11522-11535]:ReturnStatement[11522-11535]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11822-11829]:PrimitiveType[11824-11831]"
    }, {
      "left" : "removeFromStack",
      "right" : "removeFromStack",
      "info" : "SimpleName[11830-11845]:SimpleName[11832-11847]"
    }, {
      "left" : "Element el",
      "right" : "Element el",
      "info" : "SingleVariableDeclaration[11846-11856]:SingleVariableDeclaration[11848-11858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11858-12107]:Block[11860-12109]"
    }, {
      "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
      "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
      "info" : "ForStatement[11868-12079]:ForStatement[11870-12081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11917-12079]:Block[11919-12081]"
    }, {
      "left" : "Element next = stack.get(pos);",
      "right" : "Element next = stack.get(pos);",
      "info" : "VariableDeclarationStatement[11931-11961]:VariableDeclarationStatement[11933-11963]"
    }, {
      "left" : "if (next == el)",
      "right" : "if (next == el)",
      "info" : "IfStatement[11974-12069]:IfStatement[11976-12071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11990-12069]:Block[11992-12071]"
    }, {
      "left" : "stack.remove(pos);",
      "right" : "stack.remove(pos);",
      "info" : "ExpressionStatement[12008-12026]:ExpressionStatement[12010-12028]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[12043-12055]:ReturnStatement[12045-12057]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[12088-12101]:ReturnStatement[12090-12103]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12999-13003]:PrimitiveType[13007-13011]"
    }, {
      "left" : "clearStackToTableContext",
      "right" : "clearStackToTableContext",
      "info" : "SimpleName[13004-13028]:SimpleName[13012-13036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13031-13076]:Block[13039-13084]"
    }, {
      "left" : "clearStackToContext(\"table\");",
      "right" : "clearStackToContext(\"table\");",
      "info" : "ExpressionStatement[13041-13070]:ExpressionStatement[13049-13078]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13082-13086]:PrimitiveType[13090-13094]"
    }, {
      "left" : "clearStackToTableBodyContext",
      "right" : "clearStackToTableBodyContext",
      "info" : "SimpleName[13087-13115]:SimpleName[13095-13123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13118-13193]:Block[13126-13201]"
    }, {
      "left" : "clearStackToContext(\"tbody\", \"tfoot\", \"thead\", \"template\");",
      "right" : "clearStackToContext(\"tbody\", \"tfoot\", \"thead\", \"template\");",
      "info" : "ExpressionStatement[13128-13187]:ExpressionStatement[13136-13195]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13199-13203]:PrimitiveType[13207-13211]"
    }, {
      "left" : "clearStackToTableRowContext",
      "right" : "clearStackToTableRowContext",
      "info" : "SimpleName[13204-13231]:SimpleName[13212-13239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13234-13288]:Block[13242-13296]"
    }, {
      "left" : "clearStackToContext(\"tr\", \"template\");",
      "right" : "clearStackToContext(\"tr\", \"template\");",
      "info" : "ExpressionStatement[13244-13282]:ExpressionStatement[13252-13290]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[13641-13648]:SimpleType[13653-13660]"
    }, {
      "left" : "aboveOnStack",
      "right" : "aboveOnStack",
      "info" : "SimpleName[13649-13661]:SimpleName[13661-13673]"
    }, {
      "left" : "Element el",
      "right" : "Element el",
      "info" : "SingleVariableDeclaration[13662-13672]:SingleVariableDeclaration[13674-13684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13674-13927]:Block[13686-13939]"
    }, {
      "left" : "assert onStack(el);",
      "right" : "assert onStack(el);",
      "info" : "AssertStatement[13684-13703]:AssertStatement[13696-13715]"
    }, {
      "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
      "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
      "info" : "ForStatement[13712-13900]:ForStatement[13724-13912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13761-13900]:Block[13773-13912]"
    }, {
      "left" : "Element next = stack.get(pos);",
      "right" : "Element next = stack.get(pos);",
      "info" : "VariableDeclarationStatement[13775-13805]:VariableDeclarationStatement[13787-13817]"
    }, {
      "left" : "if (next == el)",
      "right" : "if (next == el)",
      "info" : "IfStatement[13818-13890]:IfStatement[13830-13902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13834-13890]:Block[13846-13902]"
    }, {
      "left" : "return stack.get(pos-1);",
      "right" : "return stack.get(pos-1);",
      "info" : "ReturnStatement[13852-13876]:ReturnStatement[13864-13888]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13909-13921]:ReturnStatement[13921-13933]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13933-13937]:PrimitiveType[13945-13949]"
    }, {
      "left" : "insertOnStackAfter",
      "right" : "insertOnStackAfter",
      "info" : "SimpleName[13938-13956]:SimpleName[13950-13968]"
    }, {
      "left" : "Element after",
      "right" : "Element after",
      "info" : "SingleVariableDeclaration[13957-13970]:SingleVariableDeclaration[13969-13982]"
    }, {
      "left" : "Element in",
      "right" : "Element in",
      "info" : "SingleVariableDeclaration[13972-13982]:SingleVariableDeclaration[13984-13994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13984-14095]:Block[13996-14107]"
    }, {
      "left" : "int i = stack.lastIndexOf(after);",
      "right" : "int i = stack.lastIndexOf(after);",
      "info" : "VariableDeclarationStatement[13994-14027]:VariableDeclarationStatement[14006-14039]"
    }, {
      "left" : "Validate.isTrue(i != -1);",
      "right" : "Validate.isTrue(i != -1);",
      "info" : "ExpressionStatement[14036-14061]:ExpressionStatement[14048-14073]"
    }, {
      "left" : "stack.add(i+1, in);",
      "right" : "stack.add(i+1, in);",
      "info" : "ExpressionStatement[14070-14089]:ExpressionStatement[14082-14101]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14101-14105]:PrimitiveType[14113-14117]"
    }, {
      "left" : "replaceOnStack",
      "right" : "replaceOnStack",
      "info" : "SimpleName[14106-14120]:SimpleName[14118-14132]"
    }, {
      "left" : "Element out",
      "right" : "Element out",
      "info" : "SingleVariableDeclaration[14121-14132]:SingleVariableDeclaration[14133-14144]"
    }, {
      "left" : "Element in",
      "right" : "Element in",
      "info" : "SingleVariableDeclaration[14134-14144]:SingleVariableDeclaration[14146-14156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14146-14193]:Block[14158-14205]"
    }, {
      "left" : "replaceInQueue(stack, out, in);",
      "right" : "replaceInQueue(stack, out, in);",
      "info" : "ExpressionStatement[14156-14187]:ExpressionStatement[14168-14199]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[14199-14206]:Modifier[14211-14218]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14207-14211]:PrimitiveType[14219-14223]"
    }, {
      "left" : "replaceInQueue",
      "right" : "replaceInQueue",
      "info" : "SimpleName[14212-14226]:SimpleName[14224-14238]"
    }, {
      "left" : "ArrayList<Element> queue",
      "right" : "ArrayList<Element> queue",
      "info" : "SingleVariableDeclaration[14227-14251]:SingleVariableDeclaration[14239-14263]"
    }, {
      "left" : "Element out",
      "right" : "Element out",
      "info" : "SingleVariableDeclaration[14253-14264]:SingleVariableDeclaration[14265-14276]"
    }, {
      "left" : "Element in",
      "right" : "Element in",
      "info" : "SingleVariableDeclaration[14266-14276]:SingleVariableDeclaration[14278-14288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14278-14385]:Block[14290-14397]"
    }, {
      "left" : "int i = queue.lastIndexOf(out);",
      "right" : "int i = queue.lastIndexOf(out);",
      "info" : "VariableDeclarationStatement[14288-14319]:VariableDeclarationStatement[14300-14331]"
    }, {
      "left" : "Validate.isTrue(i != -1);",
      "right" : "Validate.isTrue(i != -1);",
      "info" : "ExpressionStatement[14328-14353]:ExpressionStatement[14340-14365]"
    }, {
      "left" : "queue.set(i, in);",
      "right" : "queue.set(i, in);",
      "info" : "ExpressionStatement[14362-14379]:ExpressionStatement[14374-14391]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[16492-16499]:Modifier[16506-16513]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[16500-16507]:PrimitiveType[16514-16521]"
    }, {
      "left" : "inSpecificScope",
      "right" : "inSpecificScope",
      "info" : "SimpleName[16508-16523]:SimpleName[16522-16537]"
    }, {
      "left" : "String targetName",
      "right" : "String targetName",
      "info" : "SingleVariableDeclaration[16524-16541]:SingleVariableDeclaration[16538-16555]"
    }, {
      "left" : "String[] baseTypes",
      "right" : "String[] baseTypes",
      "info" : "SingleVariableDeclaration[16543-16561]:SingleVariableDeclaration[16557-16575]"
    }, {
      "left" : "String[] extraTypes",
      "right" : "String[] extraTypes",
      "info" : "SingleVariableDeclaration[16563-16582]:SingleVariableDeclaration[16577-16596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16584-16712]:Block[16598-16726]"
    }, {
      "left" : "specificScopeTarget[0] = targetName;",
      "right" : "specificScopeTarget[0] = targetName;",
      "info" : "ExpressionStatement[16594-16630]:ExpressionStatement[16608-16644]"
    }, {
      "left" : "return inSpecificScope(specificScopeTarget, baseTypes, extraTypes);",
      "right" : "return inSpecificScope(specificScopeTarget, baseTypes, extraTypes);",
      "info" : "ReturnStatement[16639-16706]:ReturnStatement[16653-16720]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[17613-17620]:PrimitiveType[17629-17636]"
    }, {
      "left" : "inScope",
      "right" : "inScope",
      "info" : "SimpleName[17621-17628]:SimpleName[17637-17644]"
    }, {
      "left" : "String[] targetNames",
      "right" : "String[] targetNames",
      "info" : "SingleVariableDeclaration[17629-17649]:SingleVariableDeclaration[17645-17665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17651-17728]:Block[17667-17744]"
    }, {
      "left" : "return inSpecificScope(targetNames, TagsSearchInScope, null);",
      "right" : "return inSpecificScope(targetNames, TagsSearchInScope, null);",
      "info" : "ReturnStatement[17661-17722]:ReturnStatement[17677-17738]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[17734-17741]:PrimitiveType[17750-17757]"
    }, {
      "left" : "inScope",
      "right" : "inScope",
      "info" : "SimpleName[17742-17749]:SimpleName[17758-17765]"
    }, {
      "left" : "String targetName",
      "right" : "String targetName",
      "info" : "SingleVariableDeclaration[17750-17767]:SingleVariableDeclaration[17766-17783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17769-17818]:Block[17785-17834]"
    }, {
      "left" : "return inScope(targetName, null);",
      "right" : "return inScope(targetName, null);",
      "info" : "ReturnStatement[17779-17812]:ReturnStatement[17795-17828]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[17824-17831]:PrimitiveType[17840-17847]"
    }, {
      "left" : "inScope",
      "right" : "inScope",
      "info" : "SimpleName[17832-17839]:SimpleName[17848-17855]"
    }, {
      "left" : "String targetName",
      "right" : "String targetName",
      "info" : "SingleVariableDeclaration[17840-17857]:SingleVariableDeclaration[17856-17873]"
    }, {
      "left" : "String[] extras",
      "right" : "String[] extras",
      "info" : "SingleVariableDeclaration[17859-17874]:SingleVariableDeclaration[17875-17890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17876-18090]:Block[17892-18106]"
    }, {
      "left" : "return inSpecificScope(targetName, TagsSearchInScope, extras);",
      "right" : "return inSpecificScope(targetName, TagsSearchInScope, extras);",
      "info" : "ReturnStatement[17886-17948]:ReturnStatement[17902-17964]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[18096-18103]:PrimitiveType[18112-18119]"
    }, {
      "left" : "inListItemScope",
      "right" : "inListItemScope",
      "info" : "SimpleName[18104-18119]:SimpleName[18120-18135]"
    }, {
      "left" : "String targetName",
      "right" : "String targetName",
      "info" : "SingleVariableDeclaration[18120-18137]:SingleVariableDeclaration[18136-18153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18139-18197]:Block[18155-18213]"
    }, {
      "left" : "return inScope(targetName, TagSearchList);",
      "right" : "return inScope(targetName, TagSearchList);",
      "info" : "ReturnStatement[18149-18191]:ReturnStatement[18165-18207]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[18203-18210]:PrimitiveType[18219-18226]"
    }, {
      "left" : "inButtonScope",
      "right" : "inButtonScope",
      "info" : "SimpleName[18211-18224]:SimpleName[18227-18240]"
    }, {
      "left" : "String targetName",
      "right" : "String targetName",
      "info" : "SingleVariableDeclaration[18225-18242]:SingleVariableDeclaration[18241-18258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18244-18304]:Block[18260-18320]"
    }, {
      "left" : "return inScope(targetName, TagSearchButton);",
      "right" : "return inScope(targetName, TagSearchButton);",
      "info" : "ReturnStatement[18254-18298]:ReturnStatement[18270-18314]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[18310-18317]:PrimitiveType[18326-18333]"
    }, {
      "left" : "inTableScope",
      "right" : "inTableScope",
      "info" : "SimpleName[18318-18330]:SimpleName[18334-18346]"
    }, {
      "left" : "String targetName",
      "right" : "String targetName",
      "info" : "SingleVariableDeclaration[18331-18348]:SingleVariableDeclaration[18347-18364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18350-18428]:Block[18366-18444]"
    }, {
      "left" : "return inSpecificScope(targetName, TagSearchTableScope, null);",
      "right" : "return inSpecificScope(targetName, TagSearchTableScope, null);",
      "info" : "ReturnStatement[18360-18422]:ReturnStatement[18376-18438]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18895-18899]:PrimitiveType[18913-18917]"
    }, {
      "left" : "setHeadElement",
      "right" : "setHeadElement",
      "info" : "SimpleName[18900-18914]:SimpleName[18918-18932]"
    }, {
      "left" : "Element headElement",
      "right" : "Element headElement",
      "info" : "SingleVariableDeclaration[18915-18934]:SingleVariableDeclaration[18933-18952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18936-18983]:Block[18954-19001]"
    }, {
      "left" : "this.headElement = headElement;",
      "right" : "this.headElement = headElement;",
      "info" : "ExpressionStatement[18946-18977]:ExpressionStatement[18964-18995]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[18989-18996]:SimpleType[19007-19014]"
    }, {
      "left" : "getHeadElement",
      "right" : "getHeadElement",
      "info" : "SimpleName[18997-19011]:SimpleName[19015-19029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19014-19049]:Block[19032-19067]"
    }, {
      "left" : "return headElement;",
      "right" : "return headElement;",
      "info" : "ReturnStatement[19024-19043]:ReturnStatement[19042-19061]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[19055-19062]:PrimitiveType[19073-19080]"
    }, {
      "left" : "isFosterInserts",
      "right" : "isFosterInserts",
      "info" : "SimpleName[19063-19078]:SimpleName[19081-19096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19081-19118]:Block[19099-19136]"
    }, {
      "left" : "return fosterInserts;",
      "right" : "return fosterInserts;",
      "info" : "ReturnStatement[19091-19112]:ReturnStatement[19109-19130]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19124-19128]:PrimitiveType[19142-19146]"
    }, {
      "left" : "setFosterInserts",
      "right" : "setFosterInserts",
      "info" : "SimpleName[19129-19145]:SimpleName[19147-19163]"
    }, {
      "left" : "boolean fosterInserts",
      "right" : "boolean fosterInserts",
      "info" : "SingleVariableDeclaration[19146-19167]:SingleVariableDeclaration[19164-19185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19169-19220]:Block[19187-19238]"
    }, {
      "left" : "this.fosterInserts = fosterInserts;",
      "right" : "this.fosterInserts = fosterInserts;",
      "info" : "ExpressionStatement[19179-19214]:ExpressionStatement[19197-19232]"
    }, {
      "left" : "FormElement",
      "right" : "FormElement",
      "info" : "SimpleType[19226-19237]:SimpleType[19244-19255]"
    }, {
      "left" : "getFormElement",
      "right" : "getFormElement",
      "info" : "SimpleName[19238-19252]:SimpleName[19256-19270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19255-19290]:Block[19273-19308]"
    }, {
      "left" : "return formElement;",
      "right" : "return formElement;",
      "info" : "ReturnStatement[19265-19284]:ReturnStatement[19283-19302]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19296-19300]:PrimitiveType[19314-19318]"
    }, {
      "left" : "setFormElement",
      "right" : "setFormElement",
      "info" : "SimpleName[19301-19315]:SimpleName[19319-19333]"
    }, {
      "left" : "FormElement formElement",
      "right" : "FormElement formElement",
      "info" : "SingleVariableDeclaration[19316-19339]:SingleVariableDeclaration[19334-19357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19341-19388]:Block[19359-19406]"
    }, {
      "left" : "this.formElement = formElement;",
      "right" : "this.formElement = formElement;",
      "info" : "ExpressionStatement[19351-19382]:ExpressionStatement[19369-19400]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19394-19398]:PrimitiveType[19412-19416]"
    }, {
      "left" : "newPendingTableCharacters",
      "right" : "newPendingTableCharacters",
      "info" : "SimpleName[19399-19424]:SimpleName[19417-19442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19427-19486]:Block[19445-19504]"
    }, {
      "left" : "pendingTableCharacters = new ArrayList<>();",
      "right" : "pendingTableCharacters = new ArrayList<>();",
      "info" : "ExpressionStatement[19437-19480]:ExpressionStatement[19455-19498]"
    }, {
      "left" : "List<String>",
      "right" : "List<String>",
      "info" : "ParameterizedType[19492-19504]:ParameterizedType[19510-19522]"
    }, {
      "left" : "getPendingTableCharacters",
      "right" : "getPendingTableCharacters",
      "info" : "SimpleName[19505-19530]:SimpleName[19523-19548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19533-19579]:Block[19551-19597]"
    }, {
      "left" : "return pendingTableCharacters;",
      "right" : "return pendingTableCharacters;",
      "info" : "ReturnStatement[19543-19573]:ReturnStatement[19561-19591]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20433-20437]:PrimitiveType[20455-20459]"
    }, {
      "left" : "generateImpliedEndTags",
      "right" : "generateImpliedEndTags",
      "info" : "SimpleName[20438-20460]:SimpleName[20460-20482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20463-20508]:Block[20485-20530]"
    }, {
      "left" : "generateImpliedEndTags(null);",
      "right" : "generateImpliedEndTags(null);",
      "info" : "ExpressionStatement[20473-20502]:ExpressionStatement[20495-20524]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[20729-20736]:SimpleType[20753-20760]"
    }, {
      "left" : "lastFormattingElement",
      "right" : "lastFormattingElement",
      "info" : "SimpleName[20737-20758]:SimpleName[20761-20782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20761-20875]:Block[20785-20899]"
    }, {
      "left" : "return formattingElements.size() > 0 ? formattingElements.get(formattingElements.size()-1) : null;",
      "right" : "return formattingElements.size() > 0 ? formattingElements.get(formattingElements.size()-1) : null;",
      "info" : "ReturnStatement[20771-20869]:ReturnStatement[20795-20893]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[20881-20888]:SimpleType[20905-20912]"
    }, {
      "left" : "removeLastFormattingElement",
      "right" : "removeLastFormattingElement",
      "info" : "SimpleName[20889-20916]:SimpleName[20913-20940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20919-21086]:Block[20943-21110]"
    }, {
      "left" : "int size = formattingElements.size();",
      "right" : "int size = formattingElements.size();",
      "info" : "VariableDeclarationStatement[20929-20966]:VariableDeclarationStatement[20953-20990]"
    }, {
      "left" : "if (size > 0)",
      "right" : "if (size > 0)",
      "info" : "IfStatement[20975-21080]:IfStatement[20999-21104]"
    }, {
      "left" : "return formattingElements.remove(size-1);",
      "right" : "return formattingElements.remove(size-1);",
      "info" : "ReturnStatement[21001-21042]:ReturnStatement[21025-21066]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[21068-21080]:ReturnStatement[21092-21104]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21126-21130]:PrimitiveType[21150-21154]"
    }, {
      "left" : "pushActiveFormattingElements",
      "right" : "pushActiveFormattingElements",
      "info" : "SimpleName[21131-21159]:SimpleName[21155-21183]"
    }, {
      "left" : "Element in",
      "right" : "Element in",
      "info" : "SingleVariableDeclaration[21160-21170]:SingleVariableDeclaration[21184-21194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21172-21632]:Block[21196-21656]"
    }, {
      "left" : "int numSeen = 0;",
      "right" : "int numSeen = 0;",
      "info" : "VariableDeclarationStatement[21182-21198]:VariableDeclarationStatement[21206-21222]"
    }, {
      "left" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
      "right" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
      "info" : "ForStatement[21207-21590]:ForStatement[21231-21614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21269-21590]:Block[21293-21614]"
    }, {
      "left" : "Element el = formattingElements.get(pos);",
      "right" : "Element el = formattingElements.get(pos);",
      "info" : "VariableDeclarationStatement[21283-21324]:VariableDeclarationStatement[21307-21348]"
    }, {
      "left" : "if (el == null)",
      "right" : "if (el == null)",
      "info" : "IfStatement[21337-21385]:IfStatement[21361-21409]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21379-21385]:BreakStatement[21403-21409]"
    }, {
      "left" : "if (isSameFormattingElement(in, el))",
      "right" : "if (isSameFormattingElement(in, el))",
      "info" : "IfStatement[21399-21462]:IfStatement[21423-21486]"
    }, {
      "left" : "numSeen++;",
      "right" : "numSeen++;",
      "info" : "ExpressionStatement[21452-21462]:ExpressionStatement[21476-21486]"
    }, {
      "left" : "if (numSeen == 3)",
      "right" : "if (numSeen == 3)",
      "info" : "IfStatement[21476-21580]:IfStatement[21500-21604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21494-21580]:Block[21518-21604]"
    }, {
      "left" : "formattingElements.remove(pos);",
      "right" : "formattingElements.remove(pos);",
      "info" : "ExpressionStatement[21512-21543]:ExpressionStatement[21536-21567]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21560-21566]:BreakStatement[21584-21590]"
    }, {
      "left" : "formattingElements.add(in);",
      "right" : "formattingElements.add(in);",
      "info" : "ExpressionStatement[21599-21626]:ExpressionStatement[21623-21650]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23502-23506]:PrimitiveType[23563-23567]"
    }, {
      "left" : "clearFormattingElementsToLastMarker",
      "right" : "clearFormattingElementsToLastMarker",
      "info" : "SimpleName[23507-23542]:SimpleName[23568-23603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23545-23717]:Block[23606-23778]"
    }, {
      "left" : "while (!formattingElements.isEmpty())",
      "right" : "while (!formattingElements.isEmpty())",
      "info" : "WhileStatement[23555-23711]:WhileStatement[23616-23772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23593-23711]:Block[23654-23772]"
    }, {
      "left" : "Element el = removeLastFormattingElement();",
      "right" : "Element el = removeLastFormattingElement();",
      "info" : "VariableDeclarationStatement[23607-23650]:VariableDeclarationStatement[23668-23711]"
    }, {
      "left" : "if (el == null)",
      "right" : "if (el == null)",
      "info" : "IfStatement[23663-23701]:IfStatement[23724-23762]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[23695-23701]:BreakStatement[23756-23762]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23723-23727]:PrimitiveType[23784-23788]"
    }, {
      "left" : "removeFromActiveFormattingElements",
      "right" : "removeFromActiveFormattingElements",
      "info" : "SimpleName[23728-23762]:SimpleName[23789-23823]"
    }, {
      "left" : "Element el",
      "right" : "Element el",
      "info" : "SingleVariableDeclaration[23763-23773]:SingleVariableDeclaration[23824-23834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23775-24035]:Block[23836-24096]"
    }, {
      "left" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
      "right" : "for (int pos = formattingElements.size() -1; pos >= 0; pos--)",
      "info" : "ForStatement[23785-24029]:ForStatement[23846-24090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23847-24029]:Block[23908-24090]"
    }, {
      "left" : "Element next = formattingElements.get(pos);",
      "right" : "Element next = formattingElements.get(pos);",
      "info" : "VariableDeclarationStatement[23861-23904]:VariableDeclarationStatement[23922-23965]"
    }, {
      "left" : "if (next == el)",
      "right" : "if (next == el)",
      "info" : "IfStatement[23917-24019]:IfStatement[23978-24080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23933-24019]:Block[23994-24080]"
    }, {
      "left" : "formattingElements.remove(pos);",
      "right" : "formattingElements.remove(pos);",
      "info" : "ExpressionStatement[23951-23982]:ExpressionStatement[24012-24043]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[23999-24005]:BreakStatement[24060-24066]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[24041-24048]:PrimitiveType[24102-24109]"
    }, {
      "left" : "isInActiveFormattingElements",
      "right" : "isInActiveFormattingElements",
      "info" : "SimpleName[24049-24077]:SimpleName[24110-24138]"
    }, {
      "left" : "Element el",
      "right" : "Element el",
      "info" : "SingleVariableDeclaration[24078-24088]:SingleVariableDeclaration[24139-24149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24090-24154]:Block[24151-24215]"
    }, {
      "left" : "return isElementInQueue(formattingElements, el);",
      "right" : "return isElementInQueue(formattingElements, el);",
      "info" : "ReturnStatement[24100-24148]:ReturnStatement[24161-24209]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24537-24541]:PrimitiveType[24600-24604]"
    }, {
      "left" : "replaceActiveFormattingElement",
      "right" : "replaceActiveFormattingElement",
      "info" : "SimpleName[24542-24572]:SimpleName[24605-24635]"
    }, {
      "left" : "Element out",
      "right" : "Element out",
      "info" : "SingleVariableDeclaration[24573-24584]:SingleVariableDeclaration[24636-24647]"
    }, {
      "left" : "Element in",
      "right" : "Element in",
      "info" : "SingleVariableDeclaration[24586-24596]:SingleVariableDeclaration[24649-24659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24598-24658]:Block[24661-24721]"
    }, {
      "left" : "replaceInQueue(formattingElements, out, in);",
      "right" : "replaceInQueue(formattingElements, out, in);",
      "info" : "ExpressionStatement[24608-24652]:ExpressionStatement[24671-24715]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24664-24668]:PrimitiveType[24727-24731]"
    }, {
      "left" : "insertMarkerToFormattingElements",
      "right" : "insertMarkerToFormattingElements",
      "info" : "SimpleName[24669-24701]:SimpleName[24732-24764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24704-24749]:Block[24767-24812]"
    }, {
      "left" : "formattingElements.add(null);",
      "right" : "formattingElements.add(null);",
      "info" : "ExpressionStatement[24714-24743]:ExpressionStatement[24777-24806]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24755-24759]:PrimitiveType[24818-24822]"
    }, {
      "left" : "insertInFosterParent",
      "right" : "insertInFosterParent",
      "info" : "SimpleName[24760-24780]:SimpleName[24823-24843]"
    }, {
      "left" : "Node in",
      "right" : "Node in",
      "info" : "SingleVariableDeclaration[24781-24788]:SingleVariableDeclaration[24844-24851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24790-25474]:Block[24853-25537]"
    }, {
      "left" : "Element fosterParent;",
      "right" : "Element fosterParent;",
      "info" : "VariableDeclarationStatement[24800-24821]:VariableDeclarationStatement[24863-24884]"
    }, {
      "left" : "Element lastTable = getFromStack(\"table\");",
      "right" : "Element lastTable = getFromStack(\"table\");",
      "info" : "VariableDeclarationStatement[24830-24872]:VariableDeclarationStatement[24893-24935]"
    }, {
      "left" : "boolean isLastTableParent = false;",
      "right" : "boolean isLastTableParent = false;",
      "info" : "VariableDeclarationStatement[24881-24915]:VariableDeclarationStatement[24944-24978]"
    }, {
      "left" : "if (lastTable != null)",
      "right" : "if (lastTable != null)",
      "info" : "IfStatement[24924-25250]:IfStatement[24987-25313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24947-25172]:Block[25010-25235]"
    }, {
      "left" : "if (lastTable.parent() != null)",
      "right" : "if (lastTable.parent() != null)",
      "info" : "IfStatement[24961-25162]:IfStatement[25024-25225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24993-25101]:Block[25056-25164]"
    }, {
      "left" : "fosterParent = lastTable.parent();",
      "right" : "fosterParent = lastTable.parent();",
      "info" : "ExpressionStatement[25011-25045]:ExpressionStatement[25074-25108]"
    }, {
      "left" : "isLastTableParent = true;",
      "right" : "isLastTableParent = true;",
      "info" : "ExpressionStatement[25062-25087]:ExpressionStatement[25125-25150]"
    }, {
      "left" : "fosterParent = aboveOnStack(lastTable);",
      "right" : "fosterParent = aboveOnStack(lastTable);",
      "info" : "ExpressionStatement[25123-25162]:ExpressionStatement[25186-25225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25178-25250]:Block[25241-25313]"
    }, {
      "left" : "fosterParent = stack.get(0);",
      "right" : "fosterParent = stack.get(0);",
      "info" : "ExpressionStatement[25212-25240]:ExpressionStatement[25275-25303]"
    }, {
      "left" : "if (isLastTableParent)",
      "right" : "if (isLastTableParent)",
      "info" : "IfStatement[25260-25468]:IfStatement[25323-25531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25283-25413]:Block[25346-25476]"
    }, {
      "left" : "Validate.notNull(lastTable);",
      "right" : "Validate.notNull(lastTable);",
      "info" : "ExpressionStatement[25297-25325]:ExpressionStatement[25360-25388]"
    }, {
      "left" : "lastTable.before(in);",
      "right" : "lastTable.before(in);",
      "info" : "ExpressionStatement[25382-25403]:ExpressionStatement[25445-25466]"
    }, {
      "left" : "fosterParent.appendChild(in);",
      "right" : "fosterParent.appendChild(in);",
      "info" : "ExpressionStatement[25439-25468]:ExpressionStatement[25502-25531]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25480-25489]:MarkerAnnotation[25543-25552]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25494-25500]:Modifier[25557-25563]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[25501-25507]:SimpleType[25564-25570]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[25508-25516]:SimpleName[25571-25579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25519-25722]:Block[25582-25785]"
    }, {
      "left" : "return \"TreeBuilder{\" +\n                \"currentToken=\" + currentToken +\n                \", state=\" + state +\n                \", currentElement=\" + currentElement() +\n                '}';",
      "right" : "return \"TreeBuilder{\" +\n                \"currentToken=\" + currentToken +\n                \", state=\" + state +\n                \", currentElement=\" + currentElement() +\n                '}';",
      "info" : "ReturnStatement[25529-25716]:ReturnStatement[25592-25779]"
    } ]
  },
  "interFileMappings" : { }
}