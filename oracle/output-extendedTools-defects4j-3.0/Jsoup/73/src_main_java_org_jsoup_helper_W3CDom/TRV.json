{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "protected DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
      "right" : "protected DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
      "info" : "FieldDeclaration[920-1000]:FieldDeclaration[944-1024]"
    }, {
      "left" : "public Document fromJsoup(org.jsoup.nodes.Document in)",
      "right" : "public Document fromJsoup(org.jsoup.nodes.Document in)",
      "info" : "MethodDeclaration[1006-1618]:MethodDeclaration[1030-1642]"
    }, {
      "left" : "public void convert(org.jsoup.nodes.Document in, Document out)",
      "right" : "public void convert(org.jsoup.nodes.Document in, Document out)",
      "info" : "MethodDeclaration[1624-2216]:MethodDeclaration[1648-2240]"
    }, {
      "left" : "private static final String xmlnsKey = \"xmlns\";",
      "right" : "private static final String xmlnsKey = \"xmlns\";",
      "info" : "FieldDeclaration[2360-2407]:FieldDeclaration[2384-2431]"
    }, {
      "left" : "private static final String xmlnsPrefix = \"xmlns:\";",
      "right" : "private static final String xmlnsPrefix = \"xmlns:\";",
      "info" : "FieldDeclaration[2416-2467]:FieldDeclaration[2440-2491]"
    }, {
      "left" : "private final Document doc;",
      "right" : "private final Document doc;",
      "info" : "FieldDeclaration[2477-2504]:FieldDeclaration[2501-2528]"
    }, {
      "left" : "private Element dest;",
      "right" : "private Element dest;",
      "info" : "FieldDeclaration[2589-2610]:FieldDeclaration[2661-2682]"
    }, {
      "left" : "private void copyAttributes(org.jsoup.nodes.Node source, Element el)",
      "right" : "private void copyAttributes(org.jsoup.nodes.Node source, Element el)",
      "info" : "MethodDeclaration[4558-5002]:MethodDeclaration[4855-5299]"
    }, {
      "left" : "public String asString(Document doc)",
      "right" : "public String asString(Document doc)",
      "info" : "MethodDeclaration[5999-6669]:MethodDeclaration[6308-6978]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1123-1129]:Modifier[1147-1153]"
    }, {
      "left" : "Document",
      "right" : "Document",
      "info" : "SimpleType[1130-1138]:SimpleType[1154-1162]"
    }, {
      "left" : "fromJsoup",
      "right" : "fromJsoup",
      "info" : "SimpleName[1139-1148]:SimpleName[1163-1172]"
    }, {
      "left" : "org.jsoup.nodes.Document in",
      "right" : "org.jsoup.nodes.Document in",
      "info" : "SingleVariableDeclaration[1149-1176]:SingleVariableDeclaration[1173-1200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1178-1618]:Block[1202-1642]"
    }, {
      "left" : "Validate.notNull(in);",
      "right" : "Validate.notNull(in);",
      "info" : "ExpressionStatement[1188-1209]:ExpressionStatement[1212-1233]"
    }, {
      "left" : "DocumentBuilder builder;",
      "right" : "DocumentBuilder builder;",
      "info" : "VariableDeclarationStatement[1218-1242]:VariableDeclarationStatement[1242-1266]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[1251-1612]:TryStatement[1275-1636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1255-1513]:Block[1279-1537]"
    }, {
      "left" : "factory.setNamespaceAware(true);",
      "right" : "factory.setNamespaceAware(true);",
      "info" : "ExpressionStatement[1315-1347]:ExpressionStatement[1339-1371]"
    }, {
      "left" : "builder = factory.newDocumentBuilder();",
      "right" : "builder = factory.newDocumentBuilder();",
      "info" : "ExpressionStatement[1360-1399]:ExpressionStatement[1384-1423]"
    }, {
      "left" : "Document out = builder.newDocument();",
      "right" : "Document out = builder.newDocument();",
      "info" : "VariableDeclarationStatement[1412-1449]:VariableDeclarationStatement[1436-1473]"
    }, {
      "left" : "convert(in, out);",
      "right" : "convert(in, out);",
      "info" : "ExpressionStatement[1462-1479]:ExpressionStatement[1486-1503]"
    }, {
      "left" : "return out;",
      "right" : "return out;",
      "info" : "ReturnStatement[1492-1503]:ReturnStatement[1516-1527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1553-1612]:Block[1577-1636]"
    }, {
      "left" : "throw new IllegalStateException(e);",
      "right" : "throw new IllegalStateException(e);",
      "info" : "ThrowStatement[1567-1602]:ThrowStatement[1591-1626]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1912-1918]:Modifier[1936-1942]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1919-1923]:PrimitiveType[1943-1947]"
    }, {
      "left" : "convert",
      "right" : "convert",
      "info" : "SimpleName[1924-1931]:SimpleName[1948-1955]"
    }, {
      "left" : "org.jsoup.nodes.Document in",
      "right" : "org.jsoup.nodes.Document in",
      "info" : "SingleVariableDeclaration[1932-1959]:SingleVariableDeclaration[1956-1983]"
    }, {
      "left" : "Document out",
      "right" : "Document out",
      "info" : "SingleVariableDeclaration[1961-1973]:SingleVariableDeclaration[1985-1997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1975-2216]:Block[1999-2240]"
    }, {
      "left" : "if (!StringUtil.isBlank(in.location()))",
      "right" : "if (!StringUtil.isBlank(in.location()))",
      "info" : "IfStatement[1985-2071]:IfStatement[2009-2095]"
    }, {
      "left" : "out.setDocumentURI(in.location());",
      "right" : "out.setDocumentURI(in.location());",
      "info" : "ExpressionStatement[2037-2071]:ExpressionStatement[2061-2095]"
    }, {
      "left" : "org.jsoup.nodes.Element rootEl = in.child(0);",
      "right" : "org.jsoup.nodes.Element rootEl = in.child(0);",
      "info" : "VariableDeclarationStatement[2081-2126]:VariableDeclarationStatement[2105-2150]"
    }, {
      "left" : "NodeTraversor.traverse(new W3CBuilder(out), rootEl);",
      "right" : "NodeTraversor.traverse(new W3CBuilder(out), rootEl);",
      "info" : "ExpressionStatement[2158-2210]:ExpressionStatement[2182-2234]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4558-4565]:Modifier[4855-4862]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4566-4570]:PrimitiveType[4863-4867]"
    }, {
      "left" : "copyAttributes",
      "right" : "copyAttributes",
      "info" : "SimpleName[4571-4585]:SimpleName[4868-4882]"
    }, {
      "left" : "org.jsoup.nodes.Node source",
      "right" : "org.jsoup.nodes.Node source",
      "info" : "SingleVariableDeclaration[4586-4613]:SingleVariableDeclaration[4883-4910]"
    }, {
      "left" : "Element el",
      "right" : "Element el",
      "info" : "SingleVariableDeclaration[4615-4625]:SingleVariableDeclaration[4912-4922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4627-5002]:Block[4924-5299]"
    }, {
      "left" : "for (Attribute attribute : source.attributes())",
      "right" : "for (Attribute attribute : source.attributes())",
      "info" : "EnhancedForStatement[4641-4992]:EnhancedForStatement[4938-5289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4689-4992]:Block[4986-5289]"
    }, {
      "left" : "String key = attribute.getKey().replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");",
      "right" : "String key = attribute.getKey().replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");",
      "info" : "VariableDeclarationStatement[4784-4851]:VariableDeclarationStatement[5081-5148]"
    }, {
      "left" : "if (key.matches(\"[a-zA-Z_:][-a-zA-Z0-9_:.]*\"))",
      "right" : "if (key.matches(\"[a-zA-Z_:][-a-zA-Z0-9_:.]*\"))",
      "info" : "IfStatement[4868-4978]:IfStatement[5165-5275]"
    }, {
      "left" : "el.setAttribute(key, attribute.getValue());",
      "right" : "el.setAttribute(key, attribute.getValue());",
      "info" : "ExpressionStatement[4935-4978]:ExpressionStatement[5232-5275]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6121-6127]:Modifier[6430-6436]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6128-6134]:SimpleType[6437-6443]"
    }, {
      "left" : "asString",
      "right" : "asString",
      "info" : "SimpleName[6135-6143]:SimpleName[6444-6452]"
    }, {
      "left" : "Document doc",
      "right" : "Document doc",
      "info" : "SingleVariableDeclaration[6144-6156]:SingleVariableDeclaration[6453-6465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6158-6669]:Block[6467-6978]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6168-6663]:TryStatement[6477-6972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6172-6572]:Block[6481-6881]"
    }, {
      "left" : "DOMSource domSource = new DOMSource(doc);",
      "right" : "DOMSource domSource = new DOMSource(doc);",
      "info" : "VariableDeclarationStatement[6186-6227]:VariableDeclarationStatement[6495-6536]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[6240-6281]:VariableDeclarationStatement[6549-6590]"
    }, {
      "left" : "StreamResult result = new StreamResult(writer);",
      "right" : "StreamResult result = new StreamResult(writer);",
      "info" : "VariableDeclarationStatement[6294-6341]:VariableDeclarationStatement[6603-6650]"
    }, {
      "left" : "TransformerFactory tf = TransformerFactory.newInstance();",
      "right" : "TransformerFactory tf = TransformerFactory.newInstance();",
      "info" : "VariableDeclarationStatement[6354-6411]:VariableDeclarationStatement[6663-6720]"
    }, {
      "left" : "Transformer transformer = tf.newTransformer();",
      "right" : "Transformer transformer = tf.newTransformer();",
      "info" : "VariableDeclarationStatement[6424-6470]:VariableDeclarationStatement[6733-6779]"
    }, {
      "left" : "transformer.transform(domSource, result);",
      "right" : "transformer.transform(domSource, result);",
      "info" : "ExpressionStatement[6483-6524]:ExpressionStatement[6792-6833]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[6537-6562]:ReturnStatement[6846-6871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6604-6663]:Block[6913-6972]"
    }, {
      "left" : "throw new IllegalStateException(e);",
      "right" : "throw new IllegalStateException(e);",
      "info" : "ThrowStatement[6618-6653]:ThrowStatement[6927-6962]"
    } ]
  },
  "interFileMappings" : { }
}