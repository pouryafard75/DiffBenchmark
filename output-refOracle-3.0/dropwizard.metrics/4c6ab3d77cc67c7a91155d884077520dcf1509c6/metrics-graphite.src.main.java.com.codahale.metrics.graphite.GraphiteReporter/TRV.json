{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static Builder forRegistry(MetricRegistry registry)",
      "right" : "public static Builder forRegistry(MetricRegistry registry)",
      "info" : "MethodDeclaration[499-812]:MethodDeclaration[499-812]"
    }, {
      "left" : "Builder",
      "right" : "Builder",
      "info" : "TypeDeclaration[818-3839]:TypeDeclaration[818-3839]"
    }, {
      "left" : "private final MetricRegistry registry;",
      "right" : "private final MetricRegistry registry;",
      "info" : "FieldDeclaration[1100-1138]:FieldDeclaration[1100-1138]"
    }, {
      "left" : "private Clock clock;",
      "right" : "private Clock clock;",
      "info" : "FieldDeclaration[1147-1167]:FieldDeclaration[1147-1167]"
    }, {
      "left" : "private String prefix;",
      "right" : "private String prefix;",
      "info" : "FieldDeclaration[1176-1198]:FieldDeclaration[1176-1198]"
    }, {
      "left" : "private TimeUnit rateUnit;",
      "right" : "private TimeUnit rateUnit;",
      "info" : "FieldDeclaration[1207-1233]:FieldDeclaration[1207-1233]"
    }, {
      "left" : "private TimeUnit durationUnit;",
      "right" : "private TimeUnit durationUnit;",
      "info" : "FieldDeclaration[1242-1272]:FieldDeclaration[1242-1272]"
    }, {
      "left" : "private MetricFilter filter;",
      "right" : "private MetricFilter filter;",
      "info" : "FieldDeclaration[1281-1309]:FieldDeclaration[1281-1309]"
    }, {
      "left" : "private Builder(MetricRegistry registry)",
      "right" : "private Builder(MetricRegistry registry)",
      "info" : "MethodDeclaration[1319-1633]:MethodDeclaration[1319-1633]"
    }, {
      "left" : "public Builder withClock(Clock clock)",
      "right" : "public Builder withClock(Clock clock)",
      "info" : "MethodDeclaration[1643-1927]:MethodDeclaration[1643-1927]"
    }, {
      "left" : "public Builder prefixedWith(String prefix)",
      "right" : "public Builder prefixedWith(String prefix)",
      "info" : "MethodDeclaration[1937-2232]:MethodDeclaration[1937-2232]"
    }, {
      "left" : "public Builder convertRatesTo(TimeUnit rateUnit)",
      "right" : "public Builder convertRatesTo(TimeUnit rateUnit)",
      "info" : "MethodDeclaration[2242-2523]:MethodDeclaration[2242-2523]"
    }, {
      "left" : "public Builder convertDurationsTo(TimeUnit durationUnit)",
      "right" : "public Builder convertDurationsTo(TimeUnit durationUnit)",
      "info" : "MethodDeclaration[2533-2838]:MethodDeclaration[2533-2838]"
    }, {
      "left" : "public Builder filter(MetricFilter filter)",
      "right" : "public Builder filter(MetricFilter filter)",
      "info" : "MethodDeclaration[2848-3137]:MethodDeclaration[2848-3137]"
    }, {
      "left" : "public GraphiteReporter build(GraphiteSender graphite)",
      "right" : "public GraphiteReporter build(GraphiteSender graphite)",
      "info" : "MethodDeclaration[3147-3833]:MethodDeclaration[3147-3833]"
    }, {
      "left" : "private static final Logger LOGGER = LoggerFactory.getLogger(GraphiteReporter.class);",
      "right" : "private static final Logger LOGGER = LoggerFactory.getLogger(GraphiteReporter.class);",
      "info" : "FieldDeclaration[3845-3930]:FieldDeclaration[3845-3930]"
    }, {
      "left" : "private final GraphiteSender graphite;",
      "right" : "private final GraphiteSender graphite;",
      "info" : "FieldDeclaration[3936-3974]:FieldDeclaration[3936-3974]"
    }, {
      "left" : "private final Clock clock;",
      "right" : "private final Clock clock;",
      "info" : "FieldDeclaration[3979-4005]:FieldDeclaration[3979-4005]"
    }, {
      "left" : "private final String prefix;",
      "right" : "private final String prefix;",
      "info" : "FieldDeclaration[4010-4038]:FieldDeclaration[4010-4038]"
    }, {
      "left" : "private GraphiteReporter(MetricRegistry registry,\n                             GraphiteSender graphite,\n                             Clock clock,\n                             String prefix,\n                             TimeUnit rateUnit,\n                             TimeUnit durationUnit,\n                             MetricFilter filter)",
      "right" : "private GraphiteReporter(MetricRegistry registry,\n                             GraphiteSender graphite,\n                             Clock clock,\n                             String prefix,\n                             TimeUnit rateUnit,\n                             TimeUnit durationUnit,\n                             MetricFilter filter)",
      "info" : "MethodDeclaration[4044-4561]:MethodDeclaration[4044-4561]"
    }, {
      "left" : "public void stop()",
      "right" : "public void stop()",
      "info" : "MethodDeclaration[6231-6525]:MethodDeclaration[6298-6592]"
    }, {
      "left" : "private void reportTimer(String name, Timer timer, long timestamp) throws IOException",
      "right" : "private void reportTimer(String name, Timer timer, long timestamp) throws IOException",
      "info" : "MethodDeclaration[6531-8094]:MethodDeclaration[6598-8161]"
    }, {
      "left" : "private void reportMetered(String name, Metered meter, long timestamp) throws IOException",
      "right" : "private void reportMetered(String name, Metered meter, long timestamp) throws IOException",
      "info" : "MethodDeclaration[8100-8883]:MethodDeclaration[8167-8950]"
    }, {
      "left" : "private void reportHistogram(String name, Histogram histogram, long timestamp) throws IOException",
      "right" : "private void reportHistogram(String name, Histogram histogram, long timestamp) throws IOException",
      "info" : "MethodDeclaration[8889-10028]:MethodDeclaration[8956-10095]"
    }, {
      "left" : "private void reportCounter(String name, Counter counter, long timestamp) throws IOException",
      "right" : "private void reportCounter(String name, Counter counter, long timestamp) throws IOException",
      "info" : "MethodDeclaration[10034-10218]:MethodDeclaration[10101-10285]"
    }, {
      "left" : "private void reportGauge(String name, Gauge gauge, long timestamp) throws IOException",
      "right" : "private void reportGauge(String name, Gauge gauge, long timestamp) throws IOException",
      "info" : "MethodDeclaration[10224-10470]:MethodDeclaration[10291-10537]"
    }, {
      "left" : "private String format(Object o)",
      "right" : "private String format(Object o)",
      "info" : "MethodDeclaration[10476-11103]:MethodDeclaration[10543-11170]"
    }, {
      "left" : "private String prefix(String... components)",
      "right" : "private String prefix(String... components)",
      "info" : "MethodDeclaration[11109-11216]:MethodDeclaration[11176-11283]"
    }, {
      "left" : "private String format(long n)",
      "right" : "private String format(long n)",
      "info" : "MethodDeclaration[11222-11292]:MethodDeclaration[11289-11359]"
    }, {
      "left" : "private String format(double v)",
      "right" : "private String format(double v)",
      "info" : "MethodDeclaration[11298-11518]:MethodDeclaration[11365-11585]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[708-714]:Modifier[708-714]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[715-721]:Modifier[715-721]"
    }, {
      "left" : "Builder",
      "right" : "Builder",
      "info" : "SimpleType[722-729]:SimpleType[722-729]"
    }, {
      "left" : "forRegistry",
      "right" : "forRegistry",
      "info" : "SimpleName[730-741]:SimpleName[730-741]"
    }, {
      "left" : "MetricRegistry registry",
      "right" : "MetricRegistry registry",
      "info" : "SingleVariableDeclaration[742-765]:SingleVariableDeclaration[742-765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[767-812]:Block[767-812]"
    }, {
      "left" : "return new Builder(registry);",
      "right" : "return new Builder(registry);",
      "info" : "ReturnStatement[777-806]:ReturnStatement[777-806]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1062-1068]:Modifier[1062-1068]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1069-1075]:Modifier[1069-1075]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1076-1081]:TYPE_DECLARATION_KIND[1076-1081]"
    }, {
      "left" : "Builder",
      "right" : "Builder",
      "info" : "SimpleName[1082-1089]:SimpleName[1082-1089]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1319-1326]:Modifier[1319-1326]"
    }, {
      "left" : "Builder",
      "right" : "Builder",
      "info" : "SimpleName[1327-1334]:SimpleName[1327-1334]"
    }, {
      "left" : "MetricRegistry registry",
      "right" : "MetricRegistry registry",
      "info" : "SingleVariableDeclaration[1335-1358]:SingleVariableDeclaration[1335-1358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1360-1633]:Block[1360-1633]"
    }, {
      "left" : "this.registry = registry;",
      "right" : "this.registry = registry;",
      "info" : "ExpressionStatement[1374-1399]:ExpressionStatement[1374-1399]"
    }, {
      "left" : "this.clock = Clock.defaultClock();",
      "right" : "this.clock = Clock.defaultClock();",
      "info" : "ExpressionStatement[1412-1446]:ExpressionStatement[1412-1446]"
    }, {
      "left" : "this.prefix = null;",
      "right" : "this.prefix = null;",
      "info" : "ExpressionStatement[1459-1478]:ExpressionStatement[1459-1478]"
    }, {
      "left" : "this.rateUnit = TimeUnit.SECONDS;",
      "right" : "this.rateUnit = TimeUnit.SECONDS;",
      "info" : "ExpressionStatement[1491-1524]:ExpressionStatement[1491-1524]"
    }, {
      "left" : "this.durationUnit = TimeUnit.MILLISECONDS;",
      "right" : "this.durationUnit = TimeUnit.MILLISECONDS;",
      "info" : "ExpressionStatement[1537-1579]:ExpressionStatement[1537-1579]"
    }, {
      "left" : "this.filter = MetricFilter.ALL;",
      "right" : "this.filter = MetricFilter.ALL;",
      "info" : "ExpressionStatement[1592-1623]:ExpressionStatement[1592-1623]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1821-1827]:Modifier[1821-1827]"
    }, {
      "left" : "Builder",
      "right" : "Builder",
      "info" : "SimpleType[1828-1835]:SimpleType[1828-1835]"
    }, {
      "left" : "withClock",
      "right" : "withClock",
      "info" : "SimpleName[1836-1845]:SimpleName[1836-1845]"
    }, {
      "left" : "Clock clock",
      "right" : "Clock clock",
      "info" : "SingleVariableDeclaration[1846-1857]:SingleVariableDeclaration[1846-1857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1859-1927]:Block[1859-1927]"
    }, {
      "left" : "this.clock = clock;",
      "right" : "this.clock = clock;",
      "info" : "ExpressionStatement[1873-1892]:ExpressionStatement[1873-1892]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[1905-1917]:ReturnStatement[1905-1917]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2119-2125]:Modifier[2119-2125]"
    }, {
      "left" : "Builder",
      "right" : "Builder",
      "info" : "SimpleType[2126-2133]:SimpleType[2126-2133]"
    }, {
      "left" : "prefixedWith",
      "right" : "prefixedWith",
      "info" : "SimpleName[2134-2146]:SimpleName[2134-2146]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[2147-2160]:SingleVariableDeclaration[2147-2160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2162-2232]:Block[2162-2232]"
    }, {
      "left" : "this.prefix = prefix;",
      "right" : "this.prefix = prefix;",
      "info" : "ExpressionStatement[2176-2197]:ExpressionStatement[2176-2197]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2210-2222]:ReturnStatement[2210-2222]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2400-2406]:Modifier[2400-2406]"
    }, {
      "left" : "Builder",
      "right" : "Builder",
      "info" : "SimpleType[2407-2414]:SimpleType[2407-2414]"
    }, {
      "left" : "convertRatesTo",
      "right" : "convertRatesTo",
      "info" : "SimpleName[2415-2429]:SimpleName[2415-2429]"
    }, {
      "left" : "TimeUnit rateUnit",
      "right" : "TimeUnit rateUnit",
      "info" : "SingleVariableDeclaration[2430-2447]:SingleVariableDeclaration[2430-2447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2449-2523]:Block[2449-2523]"
    }, {
      "left" : "this.rateUnit = rateUnit;",
      "right" : "this.rateUnit = rateUnit;",
      "info" : "ExpressionStatement[2463-2488]:ExpressionStatement[2463-2488]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2501-2513]:ReturnStatement[2501-2513]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2699-2705]:Modifier[2699-2705]"
    }, {
      "left" : "Builder",
      "right" : "Builder",
      "info" : "SimpleType[2706-2713]:SimpleType[2706-2713]"
    }, {
      "left" : "convertDurationsTo",
      "right" : "convertDurationsTo",
      "info" : "SimpleName[2714-2732]:SimpleName[2714-2732]"
    }, {
      "left" : "TimeUnit durationUnit",
      "right" : "TimeUnit durationUnit",
      "info" : "SingleVariableDeclaration[2733-2754]:SingleVariableDeclaration[2733-2754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2756-2838]:Block[2756-2838]"
    }, {
      "left" : "this.durationUnit = durationUnit;",
      "right" : "this.durationUnit = durationUnit;",
      "info" : "ExpressionStatement[2770-2803]:ExpressionStatement[2770-2803]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2816-2828]:ReturnStatement[2816-2828]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3024-3030]:Modifier[3024-3030]"
    }, {
      "left" : "Builder",
      "right" : "Builder",
      "info" : "SimpleType[3031-3038]:SimpleType[3031-3038]"
    }, {
      "left" : "filter",
      "right" : "filter",
      "info" : "SimpleName[3039-3045]:SimpleName[3039-3045]"
    }, {
      "left" : "MetricFilter filter",
      "right" : "MetricFilter filter",
      "info" : "SingleVariableDeclaration[3046-3065]:SingleVariableDeclaration[3046-3065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3067-3137]:Block[3067-3137]"
    }, {
      "left" : "this.filter = filter;",
      "right" : "this.filter = filter;",
      "info" : "ExpressionStatement[3081-3102]:ExpressionStatement[3081-3102]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3115-3127]:ReturnStatement[3115-3127]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3419-3425]:Modifier[3419-3425]"
    }, {
      "left" : "GraphiteReporter",
      "right" : "GraphiteReporter",
      "info" : "SimpleType[3426-3442]:SimpleType[3426-3442]"
    }, {
      "left" : "build",
      "right" : "build",
      "info" : "SimpleName[3443-3448]:SimpleName[3443-3448]"
    }, {
      "left" : "GraphiteSender graphite",
      "right" : "GraphiteSender graphite",
      "info" : "SingleVariableDeclaration[3449-3472]:SingleVariableDeclaration[3449-3472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3474-3833]:Block[3474-3833]"
    }, {
      "left" : "return new GraphiteReporter(registry,\n                                        graphite,\n                                        clock,\n                                        prefix,\n                                        rateUnit,\n                                        durationUnit,\n                                        filter);",
      "right" : "return new GraphiteReporter(registry,\n                                        graphite,\n                                        clock,\n                                        prefix,\n                                        rateUnit,\n                                        durationUnit,\n                                        filter);",
      "info" : "ReturnStatement[3488-3823]:ReturnStatement[3488-3823]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4044-4051]:Modifier[4044-4051]"
    }, {
      "left" : "GraphiteReporter",
      "right" : "GraphiteReporter",
      "info" : "SimpleName[4052-4068]:SimpleName[4052-4068]"
    }, {
      "left" : "MetricRegistry registry",
      "right" : "MetricRegistry registry",
      "info" : "SingleVariableDeclaration[4069-4092]:SingleVariableDeclaration[4069-4092]"
    }, {
      "left" : "GraphiteSender graphite",
      "right" : "GraphiteSender graphite",
      "info" : "SingleVariableDeclaration[4123-4146]:SingleVariableDeclaration[4123-4146]"
    }, {
      "left" : "Clock clock",
      "right" : "Clock clock",
      "info" : "SingleVariableDeclaration[4177-4188]:SingleVariableDeclaration[4177-4188]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[4219-4232]:SingleVariableDeclaration[4219-4232]"
    }, {
      "left" : "TimeUnit rateUnit",
      "right" : "TimeUnit rateUnit",
      "info" : "SingleVariableDeclaration[4263-4280]:SingleVariableDeclaration[4263-4280]"
    }, {
      "left" : "TimeUnit durationUnit",
      "right" : "TimeUnit durationUnit",
      "info" : "SingleVariableDeclaration[4311-4332]:SingleVariableDeclaration[4311-4332]"
    }, {
      "left" : "MetricFilter filter",
      "right" : "MetricFilter filter",
      "info" : "SingleVariableDeclaration[4363-4382]:SingleVariableDeclaration[4363-4382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4384-4561]:Block[4384-4561]"
    }, {
      "left" : "super(registry, \"graphite-reporter\", filter, rateUnit, durationUnit);",
      "right" : "super(registry, \"graphite-reporter\", filter, rateUnit, durationUnit);",
      "info" : "SuperConstructorInvocation[4394-4463]:SuperConstructorInvocation[4394-4463]"
    }, {
      "left" : "this.graphite = graphite;",
      "right" : "this.graphite = graphite;",
      "info" : "ExpressionStatement[4472-4497]:ExpressionStatement[4472-4497]"
    }, {
      "left" : "this.clock = clock;",
      "right" : "this.clock = clock;",
      "info" : "ExpressionStatement[4506-4525]:ExpressionStatement[4506-4525]"
    }, {
      "left" : "this.prefix = prefix;",
      "right" : "this.prefix = prefix;",
      "info" : "ExpressionStatement[4534-4555]:ExpressionStatement[4534-4555]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6231-6240]:MarkerAnnotation[6298-6307]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6245-6251]:Modifier[6312-6318]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6252-6256]:PrimitiveType[6319-6323]"
    }, {
      "left" : "stop",
      "right" : "stop",
      "info" : "SimpleName[6257-6261]:SimpleName[6324-6328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6264-6525]:Block[6331-6592]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6274-6519]:TryStatement[6341-6586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6278-6315]:Block[6345-6382]"
    }, {
      "left" : "super.stop();",
      "right" : "super.stop();",
      "info" : "ExpressionStatement[6292-6305]:ExpressionStatement[6359-6372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6324-6519]:Block[6391-6586]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6338-6509]:TryStatement[6405-6576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6342-6391]:Block[6409-6458]"
    }, {
      "left" : "graphite.close();",
      "right" : "graphite.close();",
      "info" : "ExpressionStatement[6360-6377]:ExpressionStatement[6427-6444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6414-6509]:Block[6481-6576]"
    }, {
      "left" : "LOGGER.debug(\"Error disconnecting from Graphite\", graphite, e);",
      "right" : "LOGGER.debug(\"Error disconnecting from Graphite\", graphite, e);",
      "info" : "ExpressionStatement[6432-6495]:ExpressionStatement[6499-6562]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[6531-6538]:Modifier[6598-6605]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6539-6543]:PrimitiveType[6606-6610]"
    }, {
      "left" : "reportTimer",
      "right" : "reportTimer",
      "info" : "SimpleName[6544-6555]:SimpleName[6611-6622]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[6556-6567]:SingleVariableDeclaration[6623-6634]"
    }, {
      "left" : "Timer timer",
      "right" : "Timer timer",
      "info" : "SingleVariableDeclaration[6569-6580]:SingleVariableDeclaration[6636-6647]"
    }, {
      "left" : "long timestamp",
      "right" : "long timestamp",
      "info" : "SingleVariableDeclaration[6582-6596]:SingleVariableDeclaration[6649-6663]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[6605-6616]:SimpleType[6672-6683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6617-8094]:Block[6684-8161]"
    }, {
      "left" : "final Snapshot snapshot = timer.getSnapshot();",
      "right" : "final Snapshot snapshot = timer.getSnapshot();",
      "info" : "VariableDeclarationStatement[6627-6673]:VariableDeclarationStatement[6694-6740]"
    }, {
      "left" : "graphite.send(prefix(name, \"max\"), format(convertDuration(snapshot.getMax())), timestamp);",
      "right" : "graphite.send(prefix(name, \"max\"), format(convertDuration(snapshot.getMax())), timestamp);",
      "info" : "ExpressionStatement[6683-6773]:ExpressionStatement[6750-6840]"
    }, {
      "left" : "graphite.send(prefix(name, \"mean\"), format(convertDuration(snapshot.getMean())), timestamp);",
      "right" : "graphite.send(prefix(name, \"mean\"), format(convertDuration(snapshot.getMean())), timestamp);",
      "info" : "ExpressionStatement[6782-6874]:ExpressionStatement[6849-6941]"
    }, {
      "left" : "graphite.send(prefix(name, \"min\"), format(convertDuration(snapshot.getMin())), timestamp);",
      "right" : "graphite.send(prefix(name, \"min\"), format(convertDuration(snapshot.getMin())), timestamp);",
      "info" : "ExpressionStatement[6883-6973]:ExpressionStatement[6950-7040]"
    }, {
      "left" : "graphite.send(prefix(name, \"stddev\"),\n                      format(convertDuration(snapshot.getStdDev())),\n                      timestamp);",
      "right" : "graphite.send(prefix(name, \"stddev\"),\n                      format(convertDuration(snapshot.getStdDev())),\n                      timestamp);",
      "info" : "ExpressionStatement[6982-7122]:ExpressionStatement[7049-7189]"
    }, {
      "left" : "graphite.send(prefix(name, \"p50\"),\n                      format(convertDuration(snapshot.getMedian())),\n                      timestamp);",
      "right" : "graphite.send(prefix(name, \"p50\"),\n                      format(convertDuration(snapshot.getMedian())),\n                      timestamp);",
      "info" : "ExpressionStatement[7131-7268]:ExpressionStatement[7198-7335]"
    }, {
      "left" : "graphite.send(prefix(name, \"p75\"),\n                      format(convertDuration(snapshot.get75thPercentile())),\n                      timestamp);",
      "right" : "graphite.send(prefix(name, \"p75\"),\n                      format(convertDuration(snapshot.get75thPercentile())),\n                      timestamp);",
      "info" : "ExpressionStatement[7277-7422]:ExpressionStatement[7344-7489]"
    }, {
      "left" : "graphite.send(prefix(name, \"p95\"),\n                      format(convertDuration(snapshot.get95thPercentile())),\n                      timestamp);",
      "right" : "graphite.send(prefix(name, \"p95\"),\n                      format(convertDuration(snapshot.get95thPercentile())),\n                      timestamp);",
      "info" : "ExpressionStatement[7431-7576]:ExpressionStatement[7498-7643]"
    }, {
      "left" : "graphite.send(prefix(name, \"p98\"),\n                      format(convertDuration(snapshot.get98thPercentile())),\n                      timestamp);",
      "right" : "graphite.send(prefix(name, \"p98\"),\n                      format(convertDuration(snapshot.get98thPercentile())),\n                      timestamp);",
      "info" : "ExpressionStatement[7585-7730]:ExpressionStatement[7652-7797]"
    }, {
      "left" : "graphite.send(prefix(name, \"p99\"),\n                      format(convertDuration(snapshot.get99thPercentile())),\n                      timestamp);",
      "right" : "graphite.send(prefix(name, \"p99\"),\n                      format(convertDuration(snapshot.get99thPercentile())),\n                      timestamp);",
      "info" : "ExpressionStatement[7739-7884]:ExpressionStatement[7806-7951]"
    }, {
      "left" : "graphite.send(prefix(name, \"p999\"),\n                      format(convertDuration(snapshot.get999thPercentile())),\n                      timestamp);",
      "right" : "graphite.send(prefix(name, \"p999\"),\n                      format(convertDuration(snapshot.get999thPercentile())),\n                      timestamp);",
      "info" : "ExpressionStatement[7893-8040]:ExpressionStatement[7960-8107]"
    }, {
      "left" : "reportMetered(name, timer, timestamp);",
      "right" : "reportMetered(name, timer, timestamp);",
      "info" : "ExpressionStatement[8050-8088]:ExpressionStatement[8117-8155]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8100-8107]:Modifier[8167-8174]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8108-8112]:PrimitiveType[8175-8179]"
    }, {
      "left" : "reportMetered",
      "right" : "reportMetered",
      "info" : "SimpleName[8113-8126]:SimpleName[8180-8193]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[8127-8138]:SingleVariableDeclaration[8194-8205]"
    }, {
      "left" : "Metered meter",
      "right" : "Metered meter",
      "info" : "SingleVariableDeclaration[8140-8153]:SingleVariableDeclaration[8207-8220]"
    }, {
      "left" : "long timestamp",
      "right" : "long timestamp",
      "info" : "SingleVariableDeclaration[8155-8169]:SingleVariableDeclaration[8222-8236]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[8178-8189]:SimpleType[8245-8256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8190-8883]:Block[8257-8950]"
    }, {
      "left" : "graphite.send(prefix(name, \"count\"), format(meter.getCount()), timestamp);",
      "right" : "graphite.send(prefix(name, \"count\"), format(meter.getCount()), timestamp);",
      "info" : "ExpressionStatement[8200-8274]:ExpressionStatement[8267-8341]"
    }, {
      "left" : "graphite.send(prefix(name, \"m1_rate\"),\n                      format(convertRate(meter.getOneMinuteRate())),\n                      timestamp);",
      "right" : "graphite.send(prefix(name, \"m1_rate\"),\n                      format(convertRate(meter.getOneMinuteRate())),\n                      timestamp);",
      "info" : "ExpressionStatement[8283-8424]:ExpressionStatement[8350-8491]"
    }, {
      "left" : "graphite.send(prefix(name, \"m5_rate\"),\n                      format(convertRate(meter.getFiveMinuteRate())),\n                      timestamp);",
      "right" : "graphite.send(prefix(name, \"m5_rate\"),\n                      format(convertRate(meter.getFiveMinuteRate())),\n                      timestamp);",
      "info" : "ExpressionStatement[8433-8575]:ExpressionStatement[8500-8642]"
    }, {
      "left" : "graphite.send(prefix(name, \"m15_rate\"),\n                      format(convertRate(meter.getFifteenMinuteRate())),\n                      timestamp);",
      "right" : "graphite.send(prefix(name, \"m15_rate\"),\n                      format(convertRate(meter.getFifteenMinuteRate())),\n                      timestamp);",
      "info" : "ExpressionStatement[8584-8730]:ExpressionStatement[8651-8797]"
    }, {
      "left" : "graphite.send(prefix(name, \"mean_rate\"),\n                      format(convertRate(meter.getMeanRate())),\n                      timestamp);",
      "right" : "graphite.send(prefix(name, \"mean_rate\"),\n                      format(convertRate(meter.getMeanRate())),\n                      timestamp);",
      "info" : "ExpressionStatement[8739-8877]:ExpressionStatement[8806-8944]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8889-8896]:Modifier[8956-8963]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8897-8901]:PrimitiveType[8964-8968]"
    }, {
      "left" : "reportHistogram",
      "right" : "reportHistogram",
      "info" : "SimpleName[8902-8917]:SimpleName[8969-8984]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[8918-8929]:SingleVariableDeclaration[8985-8996]"
    }, {
      "left" : "Histogram histogram",
      "right" : "Histogram histogram",
      "info" : "SingleVariableDeclaration[8931-8950]:SingleVariableDeclaration[8998-9017]"
    }, {
      "left" : "long timestamp",
      "right" : "long timestamp",
      "info" : "SingleVariableDeclaration[8952-8966]:SingleVariableDeclaration[9019-9033]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[8975-8986]:SimpleType[9042-9053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8987-10028]:Block[9054-10095]"
    }, {
      "left" : "final Snapshot snapshot = histogram.getSnapshot();",
      "right" : "final Snapshot snapshot = histogram.getSnapshot();",
      "info" : "VariableDeclarationStatement[8997-9047]:VariableDeclarationStatement[9064-9114]"
    }, {
      "left" : "graphite.send(prefix(name, \"count\"), format(histogram.getCount()), timestamp);",
      "right" : "graphite.send(prefix(name, \"count\"), format(histogram.getCount()), timestamp);",
      "info" : "ExpressionStatement[9056-9134]:ExpressionStatement[9123-9201]"
    }, {
      "left" : "graphite.send(prefix(name, \"max\"), format(snapshot.getMax()), timestamp);",
      "right" : "graphite.send(prefix(name, \"max\"), format(snapshot.getMax()), timestamp);",
      "info" : "ExpressionStatement[9143-9216]:ExpressionStatement[9210-9283]"
    }, {
      "left" : "graphite.send(prefix(name, \"mean\"), format(snapshot.getMean()), timestamp);",
      "right" : "graphite.send(prefix(name, \"mean\"), format(snapshot.getMean()), timestamp);",
      "info" : "ExpressionStatement[9225-9300]:ExpressionStatement[9292-9367]"
    }, {
      "left" : "graphite.send(prefix(name, \"min\"), format(snapshot.getMin()), timestamp);",
      "right" : "graphite.send(prefix(name, \"min\"), format(snapshot.getMin()), timestamp);",
      "info" : "ExpressionStatement[9309-9382]:ExpressionStatement[9376-9449]"
    }, {
      "left" : "graphite.send(prefix(name, \"stddev\"), format(snapshot.getStdDev()), timestamp);",
      "right" : "graphite.send(prefix(name, \"stddev\"), format(snapshot.getStdDev()), timestamp);",
      "info" : "ExpressionStatement[9391-9470]:ExpressionStatement[9458-9537]"
    }, {
      "left" : "graphite.send(prefix(name, \"p50\"), format(snapshot.getMedian()), timestamp);",
      "right" : "graphite.send(prefix(name, \"p50\"), format(snapshot.getMedian()), timestamp);",
      "info" : "ExpressionStatement[9479-9555]:ExpressionStatement[9546-9622]"
    }, {
      "left" : "graphite.send(prefix(name, \"p75\"), format(snapshot.get75thPercentile()), timestamp);",
      "right" : "graphite.send(prefix(name, \"p75\"), format(snapshot.get75thPercentile()), timestamp);",
      "info" : "ExpressionStatement[9564-9648]:ExpressionStatement[9631-9715]"
    }, {
      "left" : "graphite.send(prefix(name, \"p95\"), format(snapshot.get95thPercentile()), timestamp);",
      "right" : "graphite.send(prefix(name, \"p95\"), format(snapshot.get95thPercentile()), timestamp);",
      "info" : "ExpressionStatement[9657-9741]:ExpressionStatement[9724-9808]"
    }, {
      "left" : "graphite.send(prefix(name, \"p98\"), format(snapshot.get98thPercentile()), timestamp);",
      "right" : "graphite.send(prefix(name, \"p98\"), format(snapshot.get98thPercentile()), timestamp);",
      "info" : "ExpressionStatement[9750-9834]:ExpressionStatement[9817-9901]"
    }, {
      "left" : "graphite.send(prefix(name, \"p99\"), format(snapshot.get99thPercentile()), timestamp);",
      "right" : "graphite.send(prefix(name, \"p99\"), format(snapshot.get99thPercentile()), timestamp);",
      "info" : "ExpressionStatement[9843-9927]:ExpressionStatement[9910-9994]"
    }, {
      "left" : "graphite.send(prefix(name, \"p999\"), format(snapshot.get999thPercentile()), timestamp);",
      "right" : "graphite.send(prefix(name, \"p999\"), format(snapshot.get999thPercentile()), timestamp);",
      "info" : "ExpressionStatement[9936-10022]:ExpressionStatement[10003-10089]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10034-10041]:Modifier[10101-10108]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10042-10046]:PrimitiveType[10109-10113]"
    }, {
      "left" : "reportCounter",
      "right" : "reportCounter",
      "info" : "SimpleName[10047-10060]:SimpleName[10114-10127]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[10061-10072]:SingleVariableDeclaration[10128-10139]"
    }, {
      "left" : "Counter counter",
      "right" : "Counter counter",
      "info" : "SingleVariableDeclaration[10074-10089]:SingleVariableDeclaration[10141-10156]"
    }, {
      "left" : "long timestamp",
      "right" : "long timestamp",
      "info" : "SingleVariableDeclaration[10091-10105]:SingleVariableDeclaration[10158-10172]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[10114-10125]:SimpleType[10181-10192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10126-10218]:Block[10193-10285]"
    }, {
      "left" : "graphite.send(prefix(name, \"count\"), format(counter.getCount()), timestamp);",
      "right" : "graphite.send(prefix(name, \"count\"), format(counter.getCount()), timestamp);",
      "info" : "ExpressionStatement[10136-10212]:ExpressionStatement[10203-10279]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10224-10231]:Modifier[10291-10298]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10232-10236]:PrimitiveType[10299-10303]"
    }, {
      "left" : "reportGauge",
      "right" : "reportGauge",
      "info" : "SimpleName[10237-10248]:SimpleName[10304-10315]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[10249-10260]:SingleVariableDeclaration[10316-10327]"
    }, {
      "left" : "Gauge gauge",
      "right" : "Gauge gauge",
      "info" : "SingleVariableDeclaration[10262-10273]:SingleVariableDeclaration[10329-10340]"
    }, {
      "left" : "long timestamp",
      "right" : "long timestamp",
      "info" : "SingleVariableDeclaration[10275-10289]:SingleVariableDeclaration[10342-10356]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[10298-10309]:SimpleType[10365-10376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10310-10470]:Block[10377-10537]"
    }, {
      "left" : "final String value = format(gauge.getValue());",
      "right" : "final String value = format(gauge.getValue());",
      "info" : "VariableDeclarationStatement[10320-10366]:VariableDeclarationStatement[10387-10433]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[10375-10464]:IfStatement[10442-10531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10394-10464]:Block[10461-10531]"
    }, {
      "left" : "graphite.send(prefix(name), value, timestamp);",
      "right" : "graphite.send(prefix(name), value, timestamp);",
      "info" : "ExpressionStatement[10408-10454]:ExpressionStatement[10475-10521]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10476-10483]:Modifier[10543-10550]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10484-10490]:SimpleType[10551-10557]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[10491-10497]:SimpleName[10558-10564]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[10498-10506]:SingleVariableDeclaration[10565-10573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10508-11103]:Block[10575-11170]"
    }, {
      "left" : "if (o instanceof Float)",
      "right" : "if (o instanceof Float)",
      "info" : "IfStatement[10518-11076]:IfStatement[10585-11143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10542-10607]:Block[10609-10674]"
    }, {
      "left" : "return format(((Float) o).doubleValue());",
      "right" : "return format(((Float) o).doubleValue());",
      "info" : "ReturnStatement[10556-10597]:ReturnStatement[10623-10664]"
    }, {
      "left" : "if (o instanceof Double)",
      "right" : "if (o instanceof Double)",
      "info" : "IfStatement[10613-11076]:IfStatement[10680-11143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10638-10704]:Block[10705-10771]"
    }, {
      "left" : "return format(((Double) o).doubleValue());",
      "right" : "return format(((Double) o).doubleValue());",
      "info" : "ReturnStatement[10652-10694]:ReturnStatement[10719-10761]"
    }, {
      "left" : "if (o instanceof Byte)",
      "right" : "if (o instanceof Byte)",
      "info" : "IfStatement[10710-11076]:IfStatement[10777-11143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10733-10795]:Block[10800-10862]"
    }, {
      "left" : "return format(((Byte) o).longValue());",
      "right" : "return format(((Byte) o).longValue());",
      "info" : "ReturnStatement[10747-10785]:ReturnStatement[10814-10852]"
    }, {
      "left" : "if (o instanceof Short)",
      "right" : "if (o instanceof Short)",
      "info" : "IfStatement[10801-11076]:IfStatement[10868-11143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10825-10888]:Block[10892-10955]"
    }, {
      "left" : "return format(((Short) o).longValue());",
      "right" : "return format(((Short) o).longValue());",
      "info" : "ReturnStatement[10839-10878]:ReturnStatement[10906-10945]"
    }, {
      "left" : "if (o instanceof Integer)",
      "right" : "if (o instanceof Integer)",
      "info" : "IfStatement[10894-11076]:IfStatement[10961-11143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10920-10985]:Block[10987-11052]"
    }, {
      "left" : "return format(((Integer) o).longValue());",
      "right" : "return format(((Integer) o).longValue());",
      "info" : "ReturnStatement[10934-10975]:ReturnStatement[11001-11042]"
    }, {
      "left" : "if (o instanceof Long)",
      "right" : "if (o instanceof Long)",
      "info" : "IfStatement[10991-11076]:IfStatement[11058-11143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11014-11076]:Block[11081-11143]"
    }, {
      "left" : "return format(((Long) o).longValue());",
      "right" : "return format(((Long) o).longValue());",
      "info" : "ReturnStatement[11028-11066]:ReturnStatement[11095-11133]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11085-11097]:ReturnStatement[11152-11164]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11109-11116]:Modifier[11176-11183]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11117-11123]:SimpleType[11184-11190]"
    }, {
      "left" : "prefix",
      "right" : "prefix",
      "info" : "SimpleName[11124-11130]:SimpleName[11191-11197]"
    }, {
      "left" : "String... components",
      "right" : "String... components",
      "info" : "SingleVariableDeclaration[11131-11151]:SingleVariableDeclaration[11198-11218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11153-11216]:Block[11220-11283]"
    }, {
      "left" : "return MetricRegistry.name(prefix, components);",
      "right" : "return MetricRegistry.name(prefix, components);",
      "info" : "ReturnStatement[11163-11210]:ReturnStatement[11230-11277]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11222-11229]:Modifier[11289-11296]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11230-11236]:SimpleType[11297-11303]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[11237-11243]:SimpleName[11304-11310]"
    }, {
      "left" : "long n",
      "right" : "long n",
      "info" : "SingleVariableDeclaration[11244-11250]:SingleVariableDeclaration[11311-11317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11252-11292]:Block[11319-11359]"
    }, {
      "left" : "return Long.toString(n);",
      "right" : "return Long.toString(n);",
      "info" : "ReturnStatement[11262-11286]:ReturnStatement[11329-11353]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11298-11305]:Modifier[11365-11372]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11306-11312]:SimpleType[11373-11379]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[11313-11319]:SimpleName[11380-11386]"
    }, {
      "left" : "double v",
      "right" : "double v",
      "info" : "SingleVariableDeclaration[11320-11328]:SingleVariableDeclaration[11387-11395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11330-11518]:Block[11397-11585]"
    }, {
      "left" : "return String.format(Locale.US, \"%2.2f\", v);",
      "right" : "return String.format(Locale.US, \"%2.2f\", v);",
      "info" : "ReturnStatement[11468-11512]:ReturnStatement[11535-11579]"
    } ]
  },
  "interFileMappings" : { }
}