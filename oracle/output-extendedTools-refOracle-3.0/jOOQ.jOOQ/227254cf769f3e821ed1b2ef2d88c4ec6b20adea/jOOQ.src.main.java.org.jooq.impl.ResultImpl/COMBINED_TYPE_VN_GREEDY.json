{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ResultImpl",
      "right" : "ResultImpl",
      "info" : "TypeDeclaration[3664-76366]:TypeDeclaration[3664-77784]"
    }, {
      "left" : "private static final long serialVersionUID = 6416154375799578362L;",
      "right" : "private static final long serialVersionUID = 6416154375799578362L;",
      "info" : "FieldDeclaration[3845-3948]:FieldDeclaration[3845-3948]"
    }, {
      "left" : "private Configuration     configuration;",
      "right" : "private Configuration     configuration;",
      "info" : "FieldDeclaration[3954-3994]:FieldDeclaration[3954-3994]"
    }, {
      "left" : "private final Fields<R>   fields;",
      "right" : "private final Fields<R>   fields;",
      "info" : "FieldDeclaration[3999-4032]:FieldDeclaration[3999-4032]"
    }, {
      "left" : "private final List<R>     records;",
      "right" : "private final List<R>     records;",
      "info" : "FieldDeclaration[4037-4071]:FieldDeclaration[4037-4071]"
    }, {
      "left" : "ResultImpl(Configuration configuration, Collection<? extends Field<?>> fields)",
      "right" : "ResultImpl(Configuration configuration, Collection<? extends Field<?>> fields)",
      "info" : "MethodDeclaration[4077-4215]:MethodDeclaration[4077-4215]"
    }, {
      "left" : "ResultImpl(Configuration configuration, Field<?>... fields)",
      "right" : "ResultImpl(Configuration configuration, Field<?>... fields)",
      "info" : "MethodDeclaration[4221-4340]:MethodDeclaration[4221-4340]"
    }, {
      "left" : "ResultImpl(Configuration configuration, Fields<R> fields)",
      "right" : "ResultImpl(Configuration configuration, Fields<R> fields)",
      "info" : "MethodDeclaration[4346-4528]:MethodDeclaration[4346-4528]"
    }, {
      "left" : "public final void attach(Configuration c)",
      "right" : "public final void attach(Configuration c)",
      "info" : "MethodDeclaration[4724-4947]:MethodDeclaration[4724-4947]"
    }, {
      "left" : "public final void detach()",
      "right" : "public final void detach()",
      "info" : "MethodDeclaration[4953-5023]:MethodDeclaration[4953-5023]"
    }, {
      "left" : "public final Configuration configuration()",
      "right" : "public final Configuration configuration()",
      "info" : "MethodDeclaration[5029-5123]:MethodDeclaration[5029-5123]"
    }, {
      "left" : "public final RecordType<R> recordType()",
      "right" : "public final RecordType<R> recordType()",
      "info" : "MethodDeclaration[5315-5399]:MethodDeclaration[5315-5399]"
    }, {
      "left" : "public final Row fieldsRow()",
      "right" : "public final Row fieldsRow()",
      "info" : "MethodDeclaration[5405-5491]:MethodDeclaration[5405-5491]"
    }, {
      "left" : "public final <T> Field<T> field(Field<T> field)",
      "right" : "public final <T> Field<T> field(Field<T> field)",
      "info" : "MethodDeclaration[5497-5602]:MethodDeclaration[5497-5602]"
    }, {
      "left" : "public final Field<?> field(String name)",
      "right" : "public final Field<?> field(String name)",
      "info" : "MethodDeclaration[5608-5705]:MethodDeclaration[5608-5705]"
    }, {
      "left" : "public final <T> Field<T> field(String name, Class<T> type)",
      "right" : "public final <T> Field<T> field(String name, Class<T> type)",
      "info" : "MethodDeclaration[5711-5833]:MethodDeclaration[5711-5833]"
    }, {
      "left" : "public final <T> Field<T> field(String name, DataType<T> dataType)",
      "right" : "public final <T> Field<T> field(String name, DataType<T> dataType)",
      "info" : "MethodDeclaration[5839-5972]:MethodDeclaration[5839-5972]"
    }, {
      "left" : "public final Field<?> field(Name name)",
      "right" : "public final Field<?> field(Name name)",
      "info" : "MethodDeclaration[5978-6073]:MethodDeclaration[5978-6073]"
    }, {
      "left" : "public final <T> Field<T> field(Name name, Class<T> type)",
      "right" : "public final <T> Field<T> field(Name name, Class<T> type)",
      "info" : "MethodDeclaration[6079-6199]:MethodDeclaration[6079-6199]"
    }, {
      "left" : "public final <T> Field<T> field(Name name, DataType<T> dataType)",
      "right" : "public final <T> Field<T> field(Name name, DataType<T> dataType)",
      "info" : "MethodDeclaration[6205-6336]:MethodDeclaration[6205-6336]"
    }, {
      "left" : "public final Field<?> field(int index)",
      "right" : "public final Field<?> field(int index)",
      "info" : "MethodDeclaration[6342-6438]:MethodDeclaration[6342-6438]"
    }, {
      "left" : "public final <T> Field<T> field(int index, Class<T> type)",
      "right" : "public final <T> Field<T> field(int index, Class<T> type)",
      "info" : "MethodDeclaration[6444-6565]:MethodDeclaration[6444-6565]"
    }, {
      "left" : "public final <T> Field<T> field(int index, DataType<T> dataType)",
      "right" : "public final <T> Field<T> field(int index, DataType<T> dataType)",
      "info" : "MethodDeclaration[6571-6703]:MethodDeclaration[6571-6703]"
    }, {
      "left" : "public final Field<?>[] fields()",
      "right" : "public final Field<?>[] fields()",
      "info" : "MethodDeclaration[6709-6803]:MethodDeclaration[6709-6803]"
    }, {
      "left" : "final Field<?>[] fields(Field<?>... f)",
      "right" : "final Field<?>[] fields(Field<?>... f)",
      "info" : "MethodDeclaration[6857-7057]:MethodDeclaration[6857-7057]"
    }, {
      "left" : "final Field<?>[] fields(int... indexes)",
      "right" : "final Field<?>[] fields(int... indexes)",
      "info" : "MethodDeclaration[7111-7330]:MethodDeclaration[7111-7330]"
    }, {
      "left" : "final Field<?>[] fields(String... names)",
      "right" : "final Field<?>[] fields(String... names)",
      "info" : "MethodDeclaration[7384-7598]:MethodDeclaration[7384-7598]"
    }, {
      "left" : "final Field<?>[] fields(Name... names)",
      "right" : "final Field<?>[] fields(Name... names)",
      "info" : "MethodDeclaration[7652-7864]:MethodDeclaration[7652-7864]"
    }, {
      "left" : "public final boolean isEmpty()",
      "right" : "public final boolean isEmpty()",
      "info" : "MethodDeclaration[7870-7956]:MethodDeclaration[7870-7956]"
    }, {
      "left" : "public final boolean isNotEmpty()",
      "right" : "public final boolean isNotEmpty()",
      "info" : "MethodDeclaration[7962-8052]:MethodDeclaration[7962-8052]"
    }, {
      "left" : "public final <T> T getValue(int index, Field<T> field)",
      "right" : "public final <T> T getValue(int index, Field<T> field)",
      "info" : "MethodDeclaration[8058-8177]:MethodDeclaration[8058-8177]"
    }, {
      "left" : "public final <T> T getValue(int index, Field<T> field, T defaultValue)",
      "right" : "public final <T> T getValue(int index, Field<T> field, T defaultValue)",
      "info" : "MethodDeclaration[8183-8348]:MethodDeclaration[8183-8348]"
    }, {
      "left" : "public final Object getValue(int index, int fieldIndex)",
      "right" : "public final Object getValue(int index, int fieldIndex)",
      "info" : "MethodDeclaration[8354-8479]:MethodDeclaration[8354-8479]"
    }, {
      "left" : "public final Object getValue(int index, int fieldIndex, Object defaultValue)",
      "right" : "public final Object getValue(int index, int fieldIndex, Object defaultValue)",
      "info" : "MethodDeclaration[8485-8661]:MethodDeclaration[8485-8661]"
    }, {
      "left" : "public final Object getValue(int index, String fieldName)",
      "right" : "public final Object getValue(int index, String fieldName)",
      "info" : "MethodDeclaration[8667-8793]:MethodDeclaration[8667-8793]"
    }, {
      "left" : "public final Object getValue(int index, String fieldName, Object defaultValue)",
      "right" : "public final Object getValue(int index, String fieldName, Object defaultValue)",
      "info" : "MethodDeclaration[8799-8976]:MethodDeclaration[8799-8976]"
    }, {
      "left" : "public final <T> List<T> getValues(Field<T> field)",
      "right" : "public final <T> List<T> getValues(Field<T> field)",
      "info" : "MethodDeclaration[8982-9123]:MethodDeclaration[8982-9123]"
    }, {
      "left" : "public final <T> List<T> getValues(Field<?> field, Class<? extends T> type)",
      "right" : "public final <T> List<T> getValues(Field<?> field, Class<? extends T> type)",
      "info" : "MethodDeclaration[9129-9282]:MethodDeclaration[9129-9282]"
    }, {
      "left" : "public final <T, U> List<U> getValues(Field<T> field, Converter<? super T, U> converter)",
      "right" : "public final <T, U> List<U> getValues(Field<T> field, Converter<? super T, U> converter)",
      "info" : "MethodDeclaration[9288-9459]:MethodDeclaration[9288-9459]"
    }, {
      "left" : "public final List<?> getValues(int fieldIndex)",
      "right" : "public final List<?> getValues(int fieldIndex)",
      "info" : "MethodDeclaration[9465-9714]:MethodDeclaration[9465-9714]"
    }, {
      "left" : "public final <T> List<T> getValues(int fieldIndex, Class<? extends T> type)",
      "right" : "public final <T> List<T> getValues(int fieldIndex, Class<? extends T> type)",
      "info" : "MethodDeclaration[9720-9878]:MethodDeclaration[9720-9878]"
    }, {
      "left" : "public final <U> List<U> getValues(int fieldIndex, Converter<?, U> converter)",
      "right" : "public final <U> List<U> getValues(int fieldIndex, Converter<?, U> converter)",
      "info" : "MethodDeclaration[9884-10049]:MethodDeclaration[9884-10049]"
    }, {
      "left" : "public final List<?> getValues(String fieldName)",
      "right" : "public final List<?> getValues(String fieldName)",
      "info" : "MethodDeclaration[10055-10169]:MethodDeclaration[10055-10169]"
    }, {
      "left" : "public final <T> List<T> getValues(String fieldName, Class<? extends T> type)",
      "right" : "public final <T> List<T> getValues(String fieldName, Class<? extends T> type)",
      "info" : "MethodDeclaration[10175-10334]:MethodDeclaration[10175-10334]"
    }, {
      "left" : "public final <U> List<U> getValues(String fieldName, Converter<?, U> converter)",
      "right" : "public final <U> List<U> getValues(String fieldName, Converter<?, U> converter)",
      "info" : "MethodDeclaration[10340-10506]:MethodDeclaration[10340-10506]"
    }, {
      "left" : "public final List<?> getValues(Name fieldName)",
      "right" : "public final List<?> getValues(Name fieldName)",
      "info" : "MethodDeclaration[10512-10624]:MethodDeclaration[10512-10624]"
    }, {
      "left" : "public final <T> List<T> getValues(Name fieldName, Class<? extends T> type)",
      "right" : "public final <T> List<T> getValues(Name fieldName, Class<? extends T> type)",
      "info" : "MethodDeclaration[10630-10787]:MethodDeclaration[10630-10787]"
    }, {
      "left" : "public final <U> List<U> getValues(Name fieldName, Converter<?, U> converter)",
      "right" : "public final <U> List<U> getValues(Name fieldName, Converter<?, U> converter)",
      "info" : "MethodDeclaration[10793-10957]:MethodDeclaration[10793-10957]"
    }, {
      "left" : "final void addRecord(R record)",
      "right" : "final void addRecord(R record)",
      "info" : "MethodDeclaration[10963-11030]:MethodDeclaration[10963-11030]"
    }, {
      "left" : "public final String format()",
      "right" : "public final String format()",
      "info" : "MethodDeclaration[11036-11194]:MethodDeclaration[11036-11194]"
    }, {
      "left" : "public final void format(OutputStream stream)",
      "right" : "public final void format(OutputStream stream)",
      "info" : "MethodDeclaration[11200-11315]:MethodDeclaration[11200-11315]"
    }, {
      "left" : "public final void format(Writer writer)",
      "right" : "public final void format(Writer writer)",
      "info" : "MethodDeclaration[11321-11410]:MethodDeclaration[11321-11410]"
    }, {
      "left" : "public final String format(int maxRecords)",
      "right" : "public final String format(int maxRecords)",
      "info" : "MethodDeclaration[11416-11600]:MethodDeclaration[11416-11600]"
    }, {
      "left" : "public final void format(OutputStream stream, int maxRecords)",
      "right" : "public final void format(OutputStream stream, int maxRecords)",
      "info" : "MethodDeclaration[11606-11749]:MethodDeclaration[11606-11749]"
    }, {
      "left" : "public final void format(Writer writer, int maxRecords)",
      "right" : "public final void format(Writer writer, int maxRecords)",
      "info" : "MethodDeclaration[11755-17465]:MethodDeclaration[11755-17465]"
    }, {
      "left" : "private static final String alignNumberValue(Integer columnDecimalPlaces, String value)",
      "right" : "private static final String alignNumberValue(Integer columnDecimalPlaces, String value)",
      "info" : "MethodDeclaration[17471-18071]:MethodDeclaration[17471-18071]"
    }, {
      "left" : "private static final int getDecimalPlaces(String value)",
      "right" : "private static final int getDecimalPlaces(String value)",
      "info" : "MethodDeclaration[18077-18345]:MethodDeclaration[18077-18345]"
    }, {
      "left" : "public final String formatHTML()",
      "right" : "public final String formatHTML()",
      "info" : "MethodDeclaration[18351-18517]:MethodDeclaration[18351-18517]"
    }, {
      "left" : "public final void formatHTML(OutputStream stream)",
      "right" : "public final void formatHTML(OutputStream stream)",
      "info" : "MethodDeclaration[18523-18646]:MethodDeclaration[18523-18646]"
    }, {
      "left" : "public final void formatHTML(Writer writer)",
      "right" : "public final void formatHTML(Writer writer)",
      "info" : "MethodDeclaration[18652-19758]:MethodDeclaration[18652-19758]"
    }, {
      "left" : "public final String formatCSV()",
      "right" : "public final String formatCSV(boolean header)",
      "info" : "MethodDeclaration[19764-19928]:MethodDeclaration[19855-20041]"
    }, {
      "left" : "public final String formatCSV(char delimiter)",
      "right" : "public final String formatCSV(boolean header, char delimiter)",
      "info" : "MethodDeclaration[20167-20356]:MethodDeclaration[20656-20861]"
    }, {
      "left" : "public final void formatCSV(OutputStream stream, char delimiter)",
      "right" : "public final void formatCSV(OutputStream stream, boolean header, char delimiter)",
      "info" : "MethodDeclaration[20362-20510]:MethodDeclaration[21003-21167]"
    }, {
      "left" : "public final String formatCSV(char delimiter, String nullString)",
      "right" : "public final String formatCSV(boolean header, char delimiter, String nullString)",
      "info" : "MethodDeclaration[20644-20864]:MethodDeclaration[21602-21846]"
    }, {
      "left" : "public final void formatCSV(Writer writer, char delimiter, String nullString)",
      "right" : "public final void formatCSV(Writer writer, boolean header, char delimiter, String nullString)",
      "info" : "MethodDeclaration[21055-21989]:MethodDeclaration[22389-23407]"
    }, {
      "left" : "private final String formatCSV0(Object value, String nullString)",
      "right" : "private final String formatCSV0(Object value, String nullString)",
      "info" : "MethodDeclaration[21995-22627]:MethodDeclaration[23413-24045]"
    }, {
      "left" : "private final Object formatJSON0(Object value)",
      "right" : "private final Object formatJSON0(Object value)",
      "info" : "MethodDeclaration[22633-22819]:MethodDeclaration[24051-24237]"
    }, {
      "left" : "private static final String format0(Object value, boolean changed, boolean visual)",
      "right" : "private static final String format0(Object value, boolean changed, boolean visual)",
      "info" : "MethodDeclaration[22825-23853]:MethodDeclaration[24243-25271]"
    }, {
      "left" : "public final String formatJSON()",
      "right" : "public final String formatJSON()",
      "info" : "MethodDeclaration[23859-24025]:MethodDeclaration[25277-25443]"
    }, {
      "left" : "public final void formatJSON(OutputStream stream)",
      "right" : "public final void formatJSON(OutputStream stream)",
      "info" : "MethodDeclaration[24031-24154]:MethodDeclaration[25449-25572]"
    }, {
      "left" : "public final void formatJSON(Writer writer)",
      "right" : "public final void formatJSON(Writer writer)",
      "info" : "MethodDeclaration[24160-25379]:MethodDeclaration[25578-26797]"
    }, {
      "left" : "public final String formatXML()",
      "right" : "public final String formatXML()",
      "info" : "MethodDeclaration[25385-25549]:MethodDeclaration[26803-26967]"
    }, {
      "left" : "public final void formatXML(OutputStream stream)",
      "right" : "public final void formatXML(OutputStream stream)",
      "info" : "MethodDeclaration[25555-25676]:MethodDeclaration[26973-27094]"
    }, {
      "left" : "public final void formatXML(Writer writer)",
      "right" : "public final void formatXML(Writer writer)",
      "info" : "MethodDeclaration[25682-27365]:MethodDeclaration[27100-28783]"
    }, {
      "left" : "public final String formatInsert()",
      "right" : "public final String formatInsert()",
      "info" : "MethodDeclaration[27371-27541]:MethodDeclaration[28789-28959]"
    }, {
      "left" : "public final void formatInsert(OutputStream stream)",
      "right" : "public final void formatInsert(OutputStream stream)",
      "info" : "MethodDeclaration[27547-27674]:MethodDeclaration[28965-29092]"
    }, {
      "left" : "public final void formatInsert(Writer writer)",
      "right" : "public final void formatInsert(Writer writer)",
      "info" : "MethodDeclaration[27680-28044]:MethodDeclaration[29098-29462]"
    }, {
      "left" : "public final String formatInsert(Table<?> table, Field<?>... f)",
      "right" : "public final String formatInsert(Table<?> table, Field<?>... f)",
      "info" : "MethodDeclaration[28050-28259]:MethodDeclaration[29468-29677]"
    }, {
      "left" : "public final void formatInsert(OutputStream stream, Table<?> table, Field<?>... f)",
      "right" : "public final void formatInsert(OutputStream stream, Table<?> table, Field<?>... f)",
      "info" : "MethodDeclaration[28265-28433]:MethodDeclaration[29683-29851]"
    }, {
      "left" : "public final void formatInsert(Writer writer, Table<?> table, Field<?>... f)",
      "right" : "public final void formatInsert(Writer writer, Table<?> table, Field<?>... f)",
      "info" : "MethodDeclaration[28439-28925]:MethodDeclaration[29857-30343]"
    }, {
      "left" : "public final Document intoXML()",
      "right" : "public final Document intoXML()",
      "info" : "MethodDeclaration[28931-30819]:MethodDeclaration[30349-32237]"
    }, {
      "left" : "public final <H extends ContentHandler> H intoXML(H handler) throws SAXException",
      "right" : "public final <H extends ContentHandler> H intoXML(H handler) throws SAXException",
      "info" : "MethodDeclaration[30825-32669]:MethodDeclaration[32243-34087]"
    }, {
      "left" : "private final String escapeXML(String string)",
      "right" : "private final String escapeXML(String string)",
      "info" : "MethodDeclaration[32675-32904]:MethodDeclaration[34093-34322]"
    }, {
      "left" : "public final List<Map<String, Object>> intoMaps()",
      "right" : "public final List<Map<String, Object>> intoMaps()",
      "info" : "MethodDeclaration[32910-33165]:MethodDeclaration[34328-34583]"
    }, {
      "left" : "public final <K> Map<K, R> intoMap(Field<K> key)",
      "right" : "public final <K> Map<K, R> intoMap(Field<K> key)",
      "info" : "MethodDeclaration[33171-33297]:MethodDeclaration[34589-34715]"
    }, {
      "left" : "public final Map<?, R> intoMap(int keyFieldIndex)",
      "right" : "public final Map<?, R> intoMap(int keyFieldIndex)",
      "info" : "MethodDeclaration[33303-33414]:MethodDeclaration[34721-34832]"
    }, {
      "left" : "public final Map<?, R> intoMap(String keyFieldName)",
      "right" : "public final Map<?, R> intoMap(String keyFieldName)",
      "info" : "MethodDeclaration[33420-33538]:MethodDeclaration[34838-34956]"
    }, {
      "left" : "public final Map<?, R> intoMap(Name keyFieldName)",
      "right" : "public final Map<?, R> intoMap(Name keyFieldName)",
      "info" : "MethodDeclaration[33544-33660]:MethodDeclaration[34962-35078]"
    }, {
      "left" : "private final <K> Map<K, R> intoMap0(int keyFieldIndex)",
      "right" : "private final <K> Map<K, R> intoMap0(int keyFieldIndex)",
      "info" : "MethodDeclaration[33666-34024]:MethodDeclaration[35084-35442]"
    }, {
      "left" : "public final <K, V> Map<K, V> intoMap(Field<K> key, Field<V> value)",
      "right" : "public final <K, V> Map<K, V> intoMap(Field<K> key, Field<V> value)",
      "info" : "MethodDeclaration[34030-34267]:MethodDeclaration[35448-35685]"
    }, {
      "left" : "public final Map<?, ?> intoMap(int keyFieldIndex, int valueFieldIndex)",
      "right" : "public final Map<?, ?> intoMap(int keyFieldIndex, int valueFieldIndex)",
      "info" : "MethodDeclaration[34273-34422]:MethodDeclaration[35691-35840]"
    }, {
      "left" : "public final Map<?, ?> intoMap(String keyFieldName, String valueFieldName)",
      "right" : "public final Map<?, ?> intoMap(String keyFieldName, String valueFieldName)",
      "info" : "MethodDeclaration[34428-34592]:MethodDeclaration[35846-36010]"
    }, {
      "left" : "public final Map<?, ?> intoMap(Name keyFieldName, Name valueFieldName)",
      "right" : "public final Map<?, ?> intoMap(Name keyFieldName, Name valueFieldName)",
      "info" : "MethodDeclaration[34598-34758]:MethodDeclaration[36016-36176]"
    }, {
      "left" : "private final <K, V> Map<K, V> intoMap0(int kIndex, int vIndex)",
      "right" : "private final <K, V> Map<K, V> intoMap0(int kIndex, int vIndex)",
      "info" : "MethodDeclaration[34764-35137]:MethodDeclaration[36182-36555]"
    }, {
      "left" : "public final Map<Record, R> intoMap(int[] keyFieldIndexes)",
      "right" : "public final Map<Record, R> intoMap(int[] keyFieldIndexes)",
      "info" : "MethodDeclaration[35143-35272]:MethodDeclaration[36561-36690]"
    }, {
      "left" : "public final Map<Record, R> intoMap(String[] keyFieldNames)",
      "right" : "public final Map<Record, R> intoMap(String[] keyFieldNames)",
      "info" : "MethodDeclaration[35278-35406]:MethodDeclaration[36696-36824]"
    }, {
      "left" : "public final Map<Record, R> intoMap(Name[] keyFieldNames)",
      "right" : "public final Map<Record, R> intoMap(Name[] keyFieldNames)",
      "info" : "MethodDeclaration[35412-35538]:MethodDeclaration[36830-36956]"
    }, {
      "left" : "public final Map<Record, R> intoMap(Field<?>[] keys)",
      "right" : "public final Map<Record, R> intoMap(Field<?>[] keys)",
      "info" : "MethodDeclaration[35544-36171]:MethodDeclaration[36962-37589]"
    }, {
      "left" : "public final <E> Map<List<?>, E> intoMap(int[] keyFieldIndexes, Class<? extends E> type)",
      "right" : "public final <E> Map<List<?>, E> intoMap(int[] keyFieldIndexes, Class<? extends E> type)",
      "info" : "MethodDeclaration[36177-36342]:MethodDeclaration[37595-37760]"
    }, {
      "left" : "public final <E> Map<List<?>, E> intoMap(String[] keyFieldNames, Class<? extends E> type)",
      "right" : "public final <E> Map<List<?>, E> intoMap(String[] keyFieldNames, Class<? extends E> type)",
      "info" : "MethodDeclaration[36348-36512]:MethodDeclaration[37766-37930]"
    }, {
      "left" : "public final <E> Map<List<?>, E> intoMap(Name[] keyFieldNames, Class<? extends E> type)",
      "right" : "public final <E> Map<List<?>, E> intoMap(Name[] keyFieldNames, Class<? extends E> type)",
      "info" : "MethodDeclaration[36518-36680]:MethodDeclaration[37936-38098]"
    }, {
      "left" : "public final <E> Map<List<?>, E> intoMap(Field<?>[] keys, Class<? extends E> type)",
      "right" : "public final <E> Map<List<?>, E> intoMap(Field<?>[] keys, Class<? extends E> type)",
      "info" : "MethodDeclaration[36686-36892]:MethodDeclaration[38104-38310]"
    }, {
      "left" : "public final <E> Map<List<?>, E> intoMap(int[] keyFieldIndexes, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<List<?>, E> intoMap(int[] keyFieldIndexes, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[36898-37075]:MethodDeclaration[38316-38493]"
    }, {
      "left" : "public final <E> Map<List<?>, E> intoMap(String[] keyFieldNames, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<List<?>, E> intoMap(String[] keyFieldNames, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[37081-37257]:MethodDeclaration[38499-38675]"
    }, {
      "left" : "public final <E> Map<List<?>, E> intoMap(Name[] keyFieldNames, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<List<?>, E> intoMap(Name[] keyFieldNames, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[37263-37437]:MethodDeclaration[38681-38855]"
    }, {
      "left" : "public final <E> Map<List<?>, E> intoMap(Field<?>[] keys, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<List<?>, E> intoMap(Field<?>[] keys, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[37443-38134]:MethodDeclaration[38861-39552]"
    }, {
      "left" : "public final <S extends Record> Map<S, R> intoMap(Table<S> table)",
      "right" : "public final <S extends Record> Map<S, R> intoMap(Table<S> table)",
      "info" : "MethodDeclaration[38140-38555]:MethodDeclaration[39558-39973]"
    }, {
      "left" : "public final <E, S extends Record> Map<S, E> intoMap(Table<S> table, Class<? extends E> type)",
      "right" : "public final <E, S extends Record> Map<S, E> intoMap(Table<S> table, Class<? extends E> type)",
      "info" : "MethodDeclaration[38561-38779]:MethodDeclaration[39979-40197]"
    }, {
      "left" : "public final <E, S extends Record> Map<S, E> intoMap(Table<S> table, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E, S extends Record> Map<S, E> intoMap(Table<S> table, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[38785-39250]:MethodDeclaration[40203-40668]"
    }, {
      "left" : "public final <E> Map<?, E> intoMap(int keyFieldIndex, Class<? extends E> type)",
      "right" : "public final <E> Map<?, E> intoMap(int keyFieldIndex, Class<? extends E> type)",
      "info" : "MethodDeclaration[39256-39467]:MethodDeclaration[40674-40885]"
    }, {
      "left" : "public final <E> Map<?, E> intoMap(String keyFieldName, Class<? extends E> type)",
      "right" : "public final <E> Map<?, E> intoMap(String keyFieldName, Class<? extends E> type)",
      "info" : "MethodDeclaration[39473-39685]:MethodDeclaration[40891-41103]"
    }, {
      "left" : "public final <E> Map<?, E> intoMap(Name keyFieldName, Class<? extends E> type)",
      "right" : "public final <E> Map<?, E> intoMap(Name keyFieldName, Class<? extends E> type)",
      "info" : "MethodDeclaration[39691-39901]:MethodDeclaration[41109-41319]"
    }, {
      "left" : "public final <K, E> Map<K, E> intoMap(Field<K> key, Class<? extends E> type)",
      "right" : "public final <K, E> Map<K, E> intoMap(Field<K> key, Class<? extends E> type)",
      "info" : "MethodDeclaration[39907-40106]:MethodDeclaration[41325-41524]"
    }, {
      "left" : "public final <E> Map<?, E> intoMap(int keyFieldIndex, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<?, E> intoMap(int keyFieldIndex, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[40112-40270]:MethodDeclaration[41530-41688]"
    }, {
      "left" : "public final <E> Map<?, E> intoMap(String keyFieldName, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<?, E> intoMap(String keyFieldName, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[40276-40441]:MethodDeclaration[41694-41859]"
    }, {
      "left" : "public final <E> Map<?, E> intoMap(Name keyFieldName, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<?, E> intoMap(Name keyFieldName, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[40447-40610]:MethodDeclaration[41865-42028]"
    }, {
      "left" : "public final <K, E> Map<K, E> intoMap(Field<K> key, RecordMapper<? super R, E> mapper)",
      "right" : "public final <K, E> Map<K, E> intoMap(Field<K> key, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[40616-40788]:MethodDeclaration[42034-42206]"
    }, {
      "left" : "private final <K, E> Map<K, E> intoMap0(int keyFieldIndex, RecordMapper<? super R, E> mapper)",
      "right" : "private final <K, E> Map<K, E> intoMap0(int keyFieldIndex, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[40794-41202]:MethodDeclaration[42212-42620]"
    }, {
      "left" : "public final <K> Map<K, Result<R>> intoGroups(Field<K> key)",
      "right" : "public final <K> Map<K, Result<R>> intoGroups(Field<K> key)",
      "info" : "MethodDeclaration[41208-41348]:MethodDeclaration[42626-42766]"
    }, {
      "left" : "public final Map<?, Result<R>> intoGroups(int keyFieldIndex)",
      "right" : "public final Map<?, Result<R>> intoGroups(int keyFieldIndex)",
      "info" : "MethodDeclaration[41354-41479]:MethodDeclaration[42772-42897]"
    }, {
      "left" : "public final Map<?, Result<R>> intoGroups(String keyFieldName)",
      "right" : "public final Map<?, Result<R>> intoGroups(String keyFieldName)",
      "info" : "MethodDeclaration[41485-41617]:MethodDeclaration[42903-43035]"
    }, {
      "left" : "public final Map<?, Result<R>> intoGroups(Name keyFieldName)",
      "right" : "public final Map<?, Result<R>> intoGroups(Name keyFieldName)",
      "info" : "MethodDeclaration[41623-41753]:MethodDeclaration[43041-43171]"
    }, {
      "left" : "private final <K> Map<K, Result<R>> intoGroups0(int keyFieldIndex)",
      "right" : "private final <K> Map<K, Result<R>> intoGroups0(int keyFieldIndex)",
      "info" : "MethodDeclaration[41759-42252]:MethodDeclaration[43177-43670]"
    }, {
      "left" : "public final <K, V> Map<K, List<V>> intoGroups(Field<K> key, Field<V> value)",
      "right" : "public final <K, V> Map<K, List<V>> intoGroups(Field<K> key, Field<V> value)",
      "info" : "MethodDeclaration[42258-42507]:MethodDeclaration[43676-43925]"
    }, {
      "left" : "public final Map<?, List<?>> intoGroups(int keyFieldIndex, int valueFieldIndex)",
      "right" : "public final Map<?, List<?>> intoGroups(int keyFieldIndex, int valueFieldIndex)",
      "info" : "MethodDeclaration[42513-42680]:MethodDeclaration[43931-44098]"
    }, {
      "left" : "public final Map<?, List<?>> intoGroups(String keyFieldName, String valueFieldName)",
      "right" : "public final Map<?, List<?>> intoGroups(String keyFieldName, String valueFieldName)",
      "info" : "MethodDeclaration[42686-42868]:MethodDeclaration[44104-44286]"
    }, {
      "left" : "public final Map<?, List<?>> intoGroups(Name keyFieldName, Name valueFieldName)",
      "right" : "public final Map<?, List<?>> intoGroups(Name keyFieldName, Name valueFieldName)",
      "info" : "MethodDeclaration[42874-43052]:MethodDeclaration[44292-44470]"
    }, {
      "left" : "private final <K, V> Map<K, List<V>> intoGroups0(int kIndex, int vIndex)",
      "right" : "private final <K, V> Map<K, List<V>> intoGroups0(int kIndex, int vIndex)",
      "info" : "MethodDeclaration[43058-43558]:MethodDeclaration[44476-44976]"
    }, {
      "left" : "public final <E> Map<?, List<E>> intoGroups(int keyFieldIndex, Class<? extends E> type)",
      "right" : "public final <E> Map<?, List<E>> intoGroups(int keyFieldIndex, Class<? extends E> type)",
      "info" : "MethodDeclaration[43564-43787]:MethodDeclaration[44982-45205]"
    }, {
      "left" : "public final <E> Map<?, List<E>> intoGroups(String keyFieldName, Class<? extends E> type)",
      "right" : "public final <E> Map<?, List<E>> intoGroups(String keyFieldName, Class<? extends E> type)",
      "info" : "MethodDeclaration[43793-44017]:MethodDeclaration[45211-45435]"
    }, {
      "left" : "public final <E> Map<?, List<E>> intoGroups(Name keyFieldName, Class<? extends E> type)",
      "right" : "public final <E> Map<?, List<E>> intoGroups(Name keyFieldName, Class<? extends E> type)",
      "info" : "MethodDeclaration[44023-44245]:MethodDeclaration[45441-45663]"
    }, {
      "left" : "public final <K, E> Map<K, List<E>> intoGroups(Field<K> key, Class<? extends E> type)",
      "right" : "public final <K, E> Map<K, List<E>> intoGroups(Field<K> key, Class<? extends E> type)",
      "info" : "MethodDeclaration[44251-44462]:MethodDeclaration[45669-45880]"
    }, {
      "left" : "public final <K, E> Map<K, List<E>> intoGroups(Field<K> key, RecordMapper<? super R, E> mapper)",
      "right" : "public final <K, E> Map<K, List<E>> intoGroups(Field<K> key, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[44468-44652]:MethodDeclaration[45886-46070]"
    }, {
      "left" : "public final <E> Map<?, List<E>> intoGroups(int keyFieldIndex, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<?, List<E>> intoGroups(int keyFieldIndex, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[44658-44828]:MethodDeclaration[46076-46246]"
    }, {
      "left" : "public final <E> Map<?, List<E>> intoGroups(String keyFieldName, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<?, List<E>> intoGroups(String keyFieldName, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[44834-45011]:MethodDeclaration[46252-46429]"
    }, {
      "left" : "public final <E> Map<?, List<E>> intoGroups(Name keyFieldName, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<?, List<E>> intoGroups(Name keyFieldName, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[45017-45192]:MethodDeclaration[46435-46610]"
    }, {
      "left" : "private final <K, E> Map<K, List<E>> intoGroups0(int keyFieldIndex, RecordMapper<? super R, E> mapper)",
      "right" : "private final <K, E> Map<K, List<E>> intoGroups0(int keyFieldIndex, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[45198-45710]:MethodDeclaration[46616-47128]"
    }, {
      "left" : "public final Map<Record, Result<R>> intoGroups(int[] keyFieldIndexes)",
      "right" : "public final Map<Record, Result<R>> intoGroups(int[] keyFieldIndexes)",
      "info" : "MethodDeclaration[45716-45859]:MethodDeclaration[47134-47277]"
    }, {
      "left" : "public final Map<Record, Result<R>> intoGroups(String[] keyFieldNames)",
      "right" : "public final Map<Record, Result<R>> intoGroups(String[] keyFieldNames)",
      "info" : "MethodDeclaration[45865-46007]:MethodDeclaration[47283-47425]"
    }, {
      "left" : "public final Map<Record, Result<R>> intoGroups(Name[] keyFieldNames)",
      "right" : "public final Map<Record, Result<R>> intoGroups(Name[] keyFieldNames)",
      "info" : "MethodDeclaration[46013-46153]:MethodDeclaration[47431-47571]"
    }, {
      "left" : "public final Map<Record, Result<R>> intoGroups(Field<?>[] keys)",
      "right" : "public final Map<Record, Result<R>> intoGroups(Field<?>[] keys)",
      "info" : "MethodDeclaration[46159-46863]:MethodDeclaration[47577-48281]"
    }, {
      "left" : "public <E> Map<Record, List<E>> intoGroups(int[] keyFieldIndexes, Class<? extends E> type)",
      "right" : "public <E> Map<Record, List<E>> intoGroups(int[] keyFieldIndexes, Class<? extends E> type)",
      "info" : "MethodDeclaration[46869-47097]:MethodDeclaration[48287-48515]"
    }, {
      "left" : "public <E> Map<Record, List<E>> intoGroups(String[] keyFieldNames, Class<? extends E> type)",
      "right" : "public <E> Map<Record, List<E>> intoGroups(String[] keyFieldNames, Class<? extends E> type)",
      "info" : "MethodDeclaration[47103-47330]:MethodDeclaration[48521-48748]"
    }, {
      "left" : "public <E> Map<Record, List<E>> intoGroups(Name[] keyFieldNames, Class<? extends E> type)",
      "right" : "public <E> Map<Record, List<E>> intoGroups(Name[] keyFieldNames, Class<? extends E> type)",
      "info" : "MethodDeclaration[47336-47561]:MethodDeclaration[48754-48979]"
    }, {
      "left" : "public final <E> Map<Record, List<E>> intoGroups(Field<?>[] keys, Class<? extends E> type)",
      "right" : "public final <E> Map<Record, List<E>> intoGroups(Field<?>[] keys, Class<? extends E> type)",
      "info" : "MethodDeclaration[47567-47784]:MethodDeclaration[48985-49202]"
    }, {
      "left" : "public final <E> Map<Record, List<E>> intoGroups(int[] keyFieldIndexes, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<Record, List<E>> intoGroups(int[] keyFieldIndexes, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[47790-47978]:MethodDeclaration[49208-49396]"
    }, {
      "left" : "public final <E> Map<Record, List<E>> intoGroups(String[] keyFieldNames, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<Record, List<E>> intoGroups(String[] keyFieldNames, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[47984-48171]:MethodDeclaration[49402-49589]"
    }, {
      "left" : "public final <E> Map<Record, List<E>> intoGroups(Name[] keyFieldNames, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<Record, List<E>> intoGroups(Name[] keyFieldNames, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[48177-48362]:MethodDeclaration[49595-49780]"
    }, {
      "left" : "public final <E> Map<Record, List<E>> intoGroups(Field<?>[] keys, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> Map<Record, List<E>> intoGroups(Field<?>[] keys, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[48368-49076]:MethodDeclaration[49786-50494]"
    }, {
      "left" : "public final <S extends Record> Map<S, Result<R>> intoGroups(Table<S> table)",
      "right" : "public final <S extends Record> Map<S, Result<R>> intoGroups(Table<S> table)",
      "info" : "MethodDeclaration[49082-49590]:MethodDeclaration[50500-51008]"
    }, {
      "left" : "public final <E, S extends Record> Map<S, List<E>> intoGroups(Table<S> table, Class<? extends E> type)",
      "right" : "public final <E, S extends Record> Map<S, List<E>> intoGroups(Table<S> table, Class<? extends E> type)",
      "info" : "MethodDeclaration[49596-49826]:MethodDeclaration[51014-51244]"
    }, {
      "left" : "public final <E, S extends Record> Map<S, List<E>> intoGroups(Table<S> table, RecordMapper<? super R, E> mapper)",
      "right" : "public final <E, S extends Record> Map<S, List<E>> intoGroups(Table<S> table, RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[49832-50343]:MethodDeclaration[51250-51761]"
    }, {
      "left" : "public final Object[][] intoArray()",
      "right" : "public final Object[][] intoArray()",
      "info" : "MethodDeclaration[50349-50451]:MethodDeclaration[51767-51869]"
    }, {
      "left" : "public final Object[][] intoArrays()",
      "right" : "public final Object[][] intoArrays()",
      "info" : "MethodDeclaration[50457-50707]:MethodDeclaration[51875-52125]"
    }, {
      "left" : "public final Object[] intoArray(int fieldIndex)",
      "right" : "public final Object[] intoArray(int fieldIndex)",
      "info" : "MethodDeclaration[50713-50967]:MethodDeclaration[52131-52385]"
    }, {
      "left" : "public final <T> T[] intoArray(int fieldIndex, Class<? extends T> type)",
      "right" : "public final <T> T[] intoArray(int fieldIndex, Class<? extends T> type)",
      "info" : "MethodDeclaration[50973-51138]:MethodDeclaration[52391-52556]"
    }, {
      "left" : "public final <U> U[] intoArray(int fieldIndex, Converter<?, U> converter)",
      "right" : "public final <U> U[] intoArray(int fieldIndex, Converter<?, U> converter)",
      "info" : "MethodDeclaration[51144-51310]:MethodDeclaration[52562-52728]"
    }, {
      "left" : "public final Object[] intoArray(String fieldName)",
      "right" : "public final Object[] intoArray(String fieldName)",
      "info" : "MethodDeclaration[51316-51562]:MethodDeclaration[52734-52980]"
    }, {
      "left" : "public final <T> T[] intoArray(String fieldName, Class<? extends T> type)",
      "right" : "public final <T> T[] intoArray(String fieldName, Class<? extends T> type)",
      "info" : "MethodDeclaration[51568-51734]:MethodDeclaration[52986-53152]"
    }, {
      "left" : "public final <U> U[] intoArray(String fieldName, Converter<?, U> converter)",
      "right" : "public final <U> U[] intoArray(String fieldName, Converter<?, U> converter)",
      "info" : "MethodDeclaration[51740-51907]:MethodDeclaration[53158-53325]"
    }, {
      "left" : "public final Object[] intoArray(Name fieldName)",
      "right" : "public final Object[] intoArray(Name fieldName)",
      "info" : "MethodDeclaration[51913-52157]:MethodDeclaration[53331-53575]"
    }, {
      "left" : "public final <T> T[] intoArray(Name fieldName, Class<? extends T> type)",
      "right" : "public final <T> T[] intoArray(Name fieldName, Class<? extends T> type)",
      "info" : "MethodDeclaration[52163-52327]:MethodDeclaration[53581-53745]"
    }, {
      "left" : "public final <U> U[] intoArray(Name fieldName, Converter<?, U> converter)",
      "right" : "public final <U> U[] intoArray(Name fieldName, Converter<?, U> converter)",
      "info" : "MethodDeclaration[52333-52498]:MethodDeclaration[53751-53916]"
    }, {
      "left" : "public final <T> T[] intoArray(Field<T> field)",
      "right" : "public final <T> T[] intoArray(Field<T> field)",
      "info" : "MethodDeclaration[52504-52658]:MethodDeclaration[53922-54076]"
    }, {
      "left" : "public final <T> T[] intoArray(Field<?> field, Class<? extends T> type)",
      "right" : "public final <T> T[] intoArray(Field<?> field, Class<? extends T> type)",
      "info" : "MethodDeclaration[52664-52824]:MethodDeclaration[54082-54242]"
    }, {
      "left" : "public final <T, U> U[] intoArray(Field<T> field, Converter<? super T, U> converter)",
      "right" : "public final <T, U> U[] intoArray(Field<T> field, Converter<? super T, U> converter)",
      "info" : "MethodDeclaration[52830-53002]:MethodDeclaration[54248-54420]"
    }, {
      "left" : "public final Set<?> intoSet(int fieldIndex)",
      "right" : "public final Set<?> intoSet(int fieldIndex)",
      "info" : "MethodDeclaration[53008-53138]:MethodDeclaration[54426-54556]"
    }, {
      "left" : "public final <T> Set<T> intoSet(int fieldIndex, Class<? extends T> type)",
      "right" : "public final <T> Set<T> intoSet(int fieldIndex, Class<? extends T> type)",
      "info" : "MethodDeclaration[53144-53304]:MethodDeclaration[54562-54722]"
    }, {
      "left" : "public final <U> Set<U> intoSet(int fieldIndex, Converter<?, U> converter)",
      "right" : "public final <U> Set<U> intoSet(int fieldIndex, Converter<?, U> converter)",
      "info" : "MethodDeclaration[53310-53477]:MethodDeclaration[54728-54895]"
    }, {
      "left" : "public final Set<?> intoSet(String fieldName)",
      "right" : "public final Set<?> intoSet(String fieldName)",
      "info" : "MethodDeclaration[53483-53614]:MethodDeclaration[54901-55032]"
    }, {
      "left" : "public final <T> Set<T> intoSet(String fieldName, Class<? extends T> type)",
      "right" : "public final <T> Set<T> intoSet(String fieldName, Class<? extends T> type)",
      "info" : "MethodDeclaration[53620-53781]:MethodDeclaration[55038-55199]"
    }, {
      "left" : "public final <U> Set<U> intoSet(String fieldName, Converter<?, U> converter)",
      "right" : "public final <U> Set<U> intoSet(String fieldName, Converter<?, U> converter)",
      "info" : "MethodDeclaration[53787-53955]:MethodDeclaration[55205-55373]"
    }, {
      "left" : "public final Set<?> intoSet(Name fieldName)",
      "right" : "public final Set<?> intoSet(Name fieldName)",
      "info" : "MethodDeclaration[53961-54090]:MethodDeclaration[55379-55508]"
    }, {
      "left" : "public final <T> Set<T> intoSet(Name fieldName, Class<? extends T> type)",
      "right" : "public final <T> Set<T> intoSet(Name fieldName, Class<? extends T> type)",
      "info" : "MethodDeclaration[54096-54255]:MethodDeclaration[55514-55673]"
    }, {
      "left" : "public final <U> Set<U> intoSet(Name fieldName, Converter<?, U> converter)",
      "right" : "public final <U> Set<U> intoSet(Name fieldName, Converter<?, U> converter)",
      "info" : "MethodDeclaration[54261-54427]:MethodDeclaration[55679-55845]"
    }, {
      "left" : "public final <T> Set<T> intoSet(Field<T> field)",
      "right" : "public final <T> Set<T> intoSet(Field<T> field)",
      "info" : "MethodDeclaration[54433-54557]:MethodDeclaration[55851-55975]"
    }, {
      "left" : "public final <T> Set<T> intoSet(Field<?> field, Class<? extends T> type)",
      "right" : "public final <T> Set<T> intoSet(Field<?> field, Class<? extends T> type)",
      "info" : "MethodDeclaration[54563-54718]:MethodDeclaration[55981-56136]"
    }, {
      "left" : "public final <T, U> Set<U> intoSet(Field<T> field, Converter<? super T, U> converter)",
      "right" : "public final <T, U> Set<U> intoSet(Field<T> field, Converter<? super T, U> converter)",
      "info" : "MethodDeclaration[54724-54897]:MethodDeclaration[56142-56315]"
    }, {
      "left" : "public final Result<Record> into(Field<?>... f)",
      "right" : "public final Result<Record> into(Field<?>... f)",
      "info" : "MethodDeclaration[54903-55158]:MethodDeclaration[56321-56576]"
    }, {
      "left" : "public final <T1> Result<Record1<T1>> into(Field<T1> field1)",
      "right" : "public final <T1> Result<Record1<T1>> into(Field<T1> field1)",
      "info" : "MethodDeclaration[55205-55341]:MethodDeclaration[56623-56759]"
    }, {
      "left" : "public final <T1, T2> Result<Record2<T1, T2>> into(Field<T1> field1, Field<T2> field2)",
      "right" : "public final <T1, T2> Result<Record2<T1, T2>> into(Field<T1> field1, Field<T2> field2)",
      "info" : "MethodDeclaration[55347-55517]:MethodDeclaration[56765-56935]"
    }, {
      "left" : "public final <T1, T2, T3> Result<Record3<T1, T2, T3>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3)",
      "right" : "public final <T1, T2, T3> Result<Record3<T1, T2, T3>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3)",
      "info" : "MethodDeclaration[55523-55727]:MethodDeclaration[56941-57145]"
    }, {
      "left" : "public final <T1, T2, T3, T4> Result<Record4<T1, T2, T3, T4>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4)",
      "right" : "public final <T1, T2, T3, T4> Result<Record4<T1, T2, T3, T4>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4)",
      "info" : "MethodDeclaration[55733-55971]:MethodDeclaration[57151-57389]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5> Result<Record5<T1, T2, T3, T4, T5>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5)",
      "right" : "public final <T1, T2, T3, T4, T5> Result<Record5<T1, T2, T3, T4, T5>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5)",
      "info" : "MethodDeclaration[55977-56249]:MethodDeclaration[57395-57667]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6> Result<Record6<T1, T2, T3, T4, T5, T6>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6)",
      "right" : "public final <T1, T2, T3, T4, T5, T6> Result<Record6<T1, T2, T3, T4, T5, T6>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6)",
      "info" : "MethodDeclaration[56255-56561]:MethodDeclaration[57673-57979]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7> Result<Record7<T1, T2, T3, T4, T5, T6, T7>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7> Result<Record7<T1, T2, T3, T4, T5, T6, T7>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7)",
      "info" : "MethodDeclaration[56567-56907]:MethodDeclaration[57985-58325]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8> Result<Record8<T1, T2, T3, T4, T5, T6, T7, T8>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8> Result<Record8<T1, T2, T3, T4, T5, T6, T7, T8>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8)",
      "info" : "MethodDeclaration[56913-57287]:MethodDeclaration[58331-58705]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9> Result<Record9<T1, T2, T3, T4, T5, T6, T7, T8, T9>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9> Result<Record9<T1, T2, T3, T4, T5, T6, T7, T8, T9>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9)",
      "info" : "MethodDeclaration[57293-57701]:MethodDeclaration[58711-59119]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Result<Record10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Result<Record10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10)",
      "info" : "MethodDeclaration[57707-58155]:MethodDeclaration[59125-59573]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Result<Record11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Result<Record11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11)",
      "info" : "MethodDeclaration[58161-58648]:MethodDeclaration[59579-60066]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Result<Record12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Result<Record12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12)",
      "info" : "MethodDeclaration[58654-59180]:MethodDeclaration[60072-60598]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Result<Record13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Result<Record13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13)",
      "info" : "MethodDeclaration[59186-59751]:MethodDeclaration[60604-61169]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Result<Record14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Result<Record14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14)",
      "info" : "MethodDeclaration[59757-60361]:MethodDeclaration[61175-61779]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Result<Record15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Result<Record15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15)",
      "info" : "MethodDeclaration[60367-61010]:MethodDeclaration[61785-62428]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Result<Record16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Result<Record16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16)",
      "info" : "MethodDeclaration[61016-61698]:MethodDeclaration[62434-63116]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> Result<Record17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> Result<Record17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17)",
      "info" : "MethodDeclaration[61704-62425]:MethodDeclaration[63122-63843]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> Result<Record18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> Result<Record18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18)",
      "info" : "MethodDeclaration[62431-63191]:MethodDeclaration[63849-64609]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> Result<Record19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> Result<Record19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19)",
      "info" : "MethodDeclaration[63197-63996]:MethodDeclaration[64615-65414]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> Result<Record20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> Result<Record20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20)",
      "info" : "MethodDeclaration[64002-64840]:MethodDeclaration[65420-66258]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> Result<Record21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20, Field<T21> field21)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> Result<Record21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20, Field<T21> field21)",
      "info" : "MethodDeclaration[64846-65723]:MethodDeclaration[66264-67141]"
    }, {
      "left" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> Result<Record22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20, Field<T21> field21, Field<T22> field22)",
      "right" : "public final <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> Result<Record22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20, Field<T21> field21, Field<T22> field22)",
      "info" : "MethodDeclaration[65729-66645]:MethodDeclaration[67147-68063]"
    }, {
      "left" : "public final <E> List<E> into(Class<? extends E> type)",
      "right" : "public final <E> List<E> into(Class<? extends E> type)",
      "info" : "MethodDeclaration[66686-67026]:MethodDeclaration[68104-68444]"
    }, {
      "left" : "public final <Z extends Record> Result<Z> into(Table<Z> table)",
      "right" : "public final <Z extends Record> Result<Z> into(Table<Z> table)",
      "info" : "MethodDeclaration[67032-67300]:MethodDeclaration[68450-68718]"
    }, {
      "left" : "public final <H extends RecordHandler<? super R>> H into(H handler)",
      "right" : "public final <H extends RecordHandler<? super R>> H into(H handler)",
      "info" : "MethodDeclaration[67306-67496]:MethodDeclaration[68724-68914]"
    }, {
      "left" : "public final ResultSet intoResultSet()",
      "right" : "public final ResultSet intoResultSet()",
      "info" : "MethodDeclaration[67502-67602]:MethodDeclaration[68920-69020]"
    }, {
      "left" : "public final <E> List<E> map(RecordMapper<? super R, E> mapper)",
      "right" : "public final <E> List<E> map(RecordMapper<? super R, E> mapper)",
      "info" : "MethodDeclaration[67608-67849]:MethodDeclaration[69026-69267]"
    }, {
      "left" : "public final <T extends Comparable<? super T>> Result<R> sortAsc(Field<T> field)",
      "right" : "public final <T extends Comparable<? super T>> Result<R> sortAsc(Field<T> field)",
      "info" : "MethodDeclaration[67855-68016]:MethodDeclaration[69273-69434]"
    }, {
      "left" : "public final Result<R> sortAsc(int fieldIndex)",
      "right" : "public final Result<R> sortAsc(int fieldIndex)",
      "info" : "MethodDeclaration[68022-68151]:MethodDeclaration[69440-69569]"
    }, {
      "left" : "public final Result<R> sortAsc(String fieldName)",
      "right" : "public final Result<R> sortAsc(String fieldName)",
      "info" : "MethodDeclaration[68157-68287]:MethodDeclaration[69575-69705]"
    }, {
      "left" : "public final Result<R> sortAsc(Name fieldName)",
      "right" : "public final Result<R> sortAsc(Name fieldName)",
      "info" : "MethodDeclaration[68293-68421]:MethodDeclaration[69711-69839]"
    }, {
      "left" : "public final <T> Result<R> sortAsc(Field<T> field, Comparator<? super T> comparator)",
      "right" : "public final <T> Result<R> sortAsc(Field<T> field, Comparator<? super T> comparator)",
      "info" : "MethodDeclaration[68427-68602]:MethodDeclaration[69845-70020]"
    }, {
      "left" : "public final Result<R> sortAsc(int fieldIndex, Comparator<?> comparator)",
      "right" : "public final Result<R> sortAsc(int fieldIndex, Comparator<?> comparator)",
      "info" : "MethodDeclaration[68608-68772]:MethodDeclaration[70026-70190]"
    }, {
      "left" : "public final Result<R> sortAsc(String fieldName, Comparator<?> comparator)",
      "right" : "public final Result<R> sortAsc(String fieldName, Comparator<?> comparator)",
      "info" : "MethodDeclaration[68778-68947]:MethodDeclaration[70196-70365]"
    }, {
      "left" : "public final Result<R> sortAsc(Name fieldName, Comparator<?> comparator)",
      "right" : "public final Result<R> sortAsc(Name fieldName, Comparator<?> comparator)",
      "info" : "MethodDeclaration[68953-69120]:MethodDeclaration[70371-70538]"
    }, {
      "left" : "public final Result<R> sortAsc(Comparator<? super R> comparator)",
      "right" : "public final Result<R> sortAsc(Comparator<? super R> comparator)",
      "info" : "MethodDeclaration[69126-69277]:MethodDeclaration[70544-70695]"
    }, {
      "left" : "public final <T extends Comparable<? super T>> Result<R> sortDesc(Field<T> field)",
      "right" : "public final <T extends Comparable<? super T>> Result<R> sortDesc(Field<T> field)",
      "info" : "MethodDeclaration[69283-69471]:MethodDeclaration[70701-70889]"
    }, {
      "left" : "public final Result<R> sortDesc(int fieldIndex)",
      "right" : "public final Result<R> sortDesc(int fieldIndex)",
      "info" : "MethodDeclaration[69477-69633]:MethodDeclaration[70895-71051]"
    }, {
      "left" : "public final Result<R> sortDesc(String fieldName)",
      "right" : "public final Result<R> sortDesc(String fieldName)",
      "info" : "MethodDeclaration[69639-69796]:MethodDeclaration[71057-71214]"
    }, {
      "left" : "public final Result<R> sortDesc(Name fieldName)",
      "right" : "public final Result<R> sortDesc(Name fieldName)",
      "info" : "MethodDeclaration[69802-69957]:MethodDeclaration[71220-71375]"
    }, {
      "left" : "public final <T> Result<R> sortDesc(Field<T> field, Comparator<? super T> comparator)",
      "right" : "public final <T> Result<R> sortDesc(Field<T> field, Comparator<? super T> comparator)",
      "info" : "MethodDeclaration[69963-70139]:MethodDeclaration[71381-71557]"
    }, {
      "left" : "public final Result<R> sortDesc(int fieldIndex, Comparator<?> comparator)",
      "right" : "public final Result<R> sortDesc(int fieldIndex, Comparator<?> comparator)",
      "info" : "MethodDeclaration[70145-70314]:MethodDeclaration[71563-71732]"
    }, {
      "left" : "public final Result<R> sortDesc(String fieldName, Comparator<?> comparator)",
      "right" : "public final Result<R> sortDesc(String fieldName, Comparator<?> comparator)",
      "info" : "MethodDeclaration[70320-70490]:MethodDeclaration[71738-71908]"
    }, {
      "left" : "public final Result<R> sortDesc(Name fieldName, Comparator<?> comparator)",
      "right" : "public final Result<R> sortDesc(Name fieldName, Comparator<?> comparator)",
      "info" : "MethodDeclaration[70496-70664]:MethodDeclaration[71914-72082]"
    }, {
      "left" : "public final Result<R> sortDesc(Comparator<? super R> comparator)",
      "right" : "public final Result<R> sortDesc(Comparator<? super R> comparator)",
      "info" : "MethodDeclaration[70670-70819]:MethodDeclaration[72088-72237]"
    }, {
      "left" : "public final Result<R> intern(Field<?>... f)",
      "right" : "public final Result<R> intern(Field<?>... f)",
      "info" : "MethodDeclaration[70825-70935]:MethodDeclaration[72243-72353]"
    }, {
      "left" : "public final Result<R> intern(int... fieldIndexes)",
      "right" : "public final Result<R> intern(int... fieldIndexes)",
      "info" : "MethodDeclaration[70941-71306]:MethodDeclaration[72359-72724]"
    }, {
      "left" : "public final Result<R> intern(String... fieldNames)",
      "right" : "public final Result<R> intern(String... fieldNames)",
      "info" : "MethodDeclaration[71312-71438]:MethodDeclaration[72730-72856]"
    }, {
      "left" : "public final Result<R> intern(Name... fieldNames)",
      "right" : "public final Result<R> intern(Name... fieldNames)",
      "info" : "MethodDeclaration[71444-71568]:MethodDeclaration[72862-72986]"
    }, {
      "left" : "RecordComparator",
      "right" : "RecordComparator",
      "info" : "TypeDeclaration[71574-72210]:TypeDeclaration[72992-73628]"
    }, {
      "left" : "private final Comparator<? super T> comparator;",
      "right" : "private final Comparator<? super T> comparator;",
      "info" : "FieldDeclaration[71760-71807]:FieldDeclaration[73178-73225]"
    }, {
      "left" : "private final int fieldIndex;",
      "right" : "private final int fieldIndex;",
      "info" : "FieldDeclaration[71816-71845]:FieldDeclaration[73234-73263]"
    }, {
      "left" : "RecordComparator(int fieldIndex, Comparator<? super T> comparator)",
      "right" : "RecordComparator(int fieldIndex, Comparator<? super T> comparator)",
      "info" : "MethodDeclaration[71855-72017]:MethodDeclaration[73273-73435]"
    }, {
      "left" : "public int compare(R record1, R record2)",
      "right" : "public int compare(R record1, R record2)",
      "info" : "MethodDeclaration[72027-72204]:MethodDeclaration[73445-73622]"
    }, {
      "left" : "NaturalComparator",
      "right" : "NaturalComparator",
      "info" : "TypeDeclaration[72216-72706]:TypeDeclaration[73634-74124]"
    }, {
      "left" : "public int compare(T o1, T o2)",
      "right" : "public int compare(T o1, T o2)",
      "info" : "MethodDeclaration[72368-72700]:MethodDeclaration[73786-74118]"
    }, {
      "left" : "public final <O extends UpdatableRecord<O>> Result<O> fetchParents(ForeignKey<R, O> key)",
      "right" : "public final <O extends UpdatableRecord<O>> Result<O> fetchParents(ForeignKey<R, O> key)",
      "info" : "MethodDeclaration[72918-73067]:MethodDeclaration[74336-74485]"
    }, {
      "left" : "public final <O extends TableRecord<O>> Result<O> fetchChildren(ForeignKey<O, R> key)",
      "right" : "public final <O extends TableRecord<O>> Result<O> fetchChildren(ForeignKey<O, R> key)",
      "info" : "MethodDeclaration[73073-73220]:MethodDeclaration[74491-74638]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[73411-73482]:MethodDeclaration[74829-74900]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[73488-73566]:MethodDeclaration[74906-74984]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[73572-73869]:MethodDeclaration[74990-75287]"
    }, {
      "left" : "public final int size()",
      "right" : "public final int size()",
      "info" : "MethodDeclaration[74059-74135]:MethodDeclaration[75477-75553]"
    }, {
      "left" : "public final boolean contains(Object o)",
      "right" : "public final boolean contains(Object o)",
      "info" : "MethodDeclaration[74141-74238]:MethodDeclaration[75559-75656]"
    }, {
      "left" : "public final Object[] toArray()",
      "right" : "public final Object[] toArray()",
      "info" : "MethodDeclaration[74244-74331]:MethodDeclaration[75662-75749]"
    }, {
      "left" : "public final <T> T[] toArray(T[] a)",
      "right" : "public final <T> T[] toArray(T[] a)",
      "info" : "MethodDeclaration[74337-74429]:MethodDeclaration[75755-75847]"
    }, {
      "left" : "public final boolean add(R e)",
      "right" : "public final boolean add(R e)",
      "info" : "MethodDeclaration[74435-74517]:MethodDeclaration[75853-75935]"
    }, {
      "left" : "public final boolean remove(Object o)",
      "right" : "public final boolean remove(Object o)",
      "info" : "MethodDeclaration[74523-74616]:MethodDeclaration[75941-76034]"
    }, {
      "left" : "public final boolean containsAll(Collection<?> c)",
      "right" : "public final boolean containsAll(Collection<?> c)",
      "info" : "MethodDeclaration[74622-74732]:MethodDeclaration[76040-76150]"
    }, {
      "left" : "public final boolean addAll(Collection<? extends R> c)",
      "right" : "public final boolean addAll(Collection<? extends R> c)",
      "info" : "MethodDeclaration[74738-74848]:MethodDeclaration[76156-76266]"
    }, {
      "left" : "public final boolean addAll(int index, Collection<? extends R> c)",
      "right" : "public final boolean addAll(int index, Collection<? extends R> c)",
      "info" : "MethodDeclaration[74854-74982]:MethodDeclaration[76272-76400]"
    }, {
      "left" : "public final boolean removeAll(Collection<?> c)",
      "right" : "public final boolean removeAll(Collection<?> c)",
      "info" : "MethodDeclaration[74988-75094]:MethodDeclaration[76406-76512]"
    }, {
      "left" : "public final boolean retainAll(Collection<?> c)",
      "right" : "public final boolean retainAll(Collection<?> c)",
      "info" : "MethodDeclaration[75100-75206]:MethodDeclaration[76518-76624]"
    }, {
      "left" : "public final void clear()",
      "right" : "public final void clear()",
      "info" : "MethodDeclaration[75212-75284]:MethodDeclaration[76630-76702]"
    }, {
      "left" : "public final R get(int index)",
      "right" : "public final R get(int index)",
      "info" : "MethodDeclaration[75290-75376]:MethodDeclaration[76708-76794]"
    }, {
      "left" : "public final R set(int index, R element)",
      "right" : "public final R set(int index, R element)",
      "info" : "MethodDeclaration[75382-75488]:MethodDeclaration[76800-76906]"
    }, {
      "left" : "public final void add(int index, R element)",
      "right" : "public final void add(int index, R element)",
      "info" : "MethodDeclaration[75494-75596]:MethodDeclaration[76912-77014]"
    }, {
      "left" : "public final R remove(int index)",
      "right" : "public final R remove(int index)",
      "info" : "MethodDeclaration[75602-75694]:MethodDeclaration[77020-77112]"
    }, {
      "left" : "public final int indexOf(Object o)",
      "right" : "public final int indexOf(Object o)",
      "info" : "MethodDeclaration[75700-75791]:MethodDeclaration[77118-77209]"
    }, {
      "left" : "public final int lastIndexOf(Object o)",
      "right" : "public final int lastIndexOf(Object o)",
      "info" : "MethodDeclaration[75797-75896]:MethodDeclaration[77215-77314]"
    }, {
      "left" : "public final Iterator<R> iterator()",
      "right" : "public final Iterator<R> iterator()",
      "info" : "MethodDeclaration[75902-75994]:MethodDeclaration[77320-77412]"
    }, {
      "left" : "public final ListIterator<R> listIterator()",
      "right" : "public final ListIterator<R> listIterator()",
      "info" : "MethodDeclaration[76000-76104]:MethodDeclaration[77418-77522]"
    }, {
      "left" : "public final ListIterator<R> listIterator(int index)",
      "right" : "public final ListIterator<R> listIterator(int index)",
      "info" : "MethodDeclaration[76110-76228]:MethodDeclaration[77528-77646]"
    }, {
      "left" : "public final List<R> subList(int fromIndex, int toIndex)",
      "right" : "public final List<R> subList(int fromIndex, int toIndex)",
      "info" : "MethodDeclaration[76234-76364]:MethodDeclaration[77652-77782]"
    } ],
    "mappings" : [
 {
      "left" : "@SuppressWarnings({\"rawtypes\", \"unchecked\" })",
      "right" : "@SuppressWarnings({\"rawtypes\", \"unchecked\" })",
      "info" : "SingleMemberAnnotation[3716-3761]:SingleMemberAnnotation[3716-3761]"
    }, {
      "left" : "ResultImpl",
      "right" : "ResultImpl",
      "info" : "SimpleName[4077-4087]:SimpleName[4077-4087]"
    }, {
      "left" : "Configuration configuration",
      "right" : "Configuration configuration",
      "info" : "SingleVariableDeclaration[4088-4115]:SingleVariableDeclaration[4088-4115]"
    }, {
      "left" : "Collection<? extends Field<?>> fields",
      "right" : "Collection<? extends Field<?>> fields",
      "info" : "SingleVariableDeclaration[4117-4154]:SingleVariableDeclaration[4117-4154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4156-4215]:Block[4156-4215]"
    }, {
      "left" : "this(configuration, new Fields<R>(fields));",
      "right" : "this(configuration, new Fields<R>(fields));",
      "info" : "ConstructorInvocation[4166-4209]:ConstructorInvocation[4166-4209]"
    }, {
      "left" : "ResultImpl",
      "right" : "ResultImpl",
      "info" : "SimpleName[4221-4231]:SimpleName[4221-4231]"
    }, {
      "left" : "Configuration configuration",
      "right" : "Configuration configuration",
      "info" : "SingleVariableDeclaration[4232-4259]:SingleVariableDeclaration[4232-4259]"
    }, {
      "left" : "Field<?>... fields",
      "right" : "Field<?>... fields",
      "info" : "SingleVariableDeclaration[4261-4279]:SingleVariableDeclaration[4261-4279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4281-4340]:Block[4281-4340]"
    }, {
      "left" : "this(configuration, new Fields<R>(fields));",
      "right" : "this(configuration, new Fields<R>(fields));",
      "info" : "ConstructorInvocation[4291-4334]:ConstructorInvocation[4291-4334]"
    }, {
      "left" : "ResultImpl",
      "right" : "ResultImpl",
      "info" : "SimpleName[4346-4356]:SimpleName[4346-4356]"
    }, {
      "left" : "Configuration configuration",
      "right" : "Configuration configuration",
      "info" : "SingleVariableDeclaration[4357-4384]:SingleVariableDeclaration[4357-4384]"
    }, {
      "left" : "Fields<R> fields",
      "right" : "Fields<R> fields",
      "info" : "SingleVariableDeclaration[4386-4402]:SingleVariableDeclaration[4386-4402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4404-4528]:Block[4404-4528]"
    }, {
      "left" : "this.configuration = configuration;",
      "right" : "this.configuration = configuration;",
      "info" : "ExpressionStatement[4414-4449]:ExpressionStatement[4414-4449]"
    }, {
      "left" : "this.fields = fields;",
      "right" : "this.fields = fields;",
      "info" : "ExpressionStatement[4458-4479]:ExpressionStatement[4458-4479]"
    }, {
      "left" : "this.records = new ArrayList<R>();",
      "right" : "this.records = new ArrayList<R>();",
      "info" : "ExpressionStatement[4488-4522]:ExpressionStatement[4488-4522]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4724-4733]:MarkerAnnotation[4724-4733]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4738-4744]:Modifier[4738-4744]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[4745-4750]:Modifier[4745-4750]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4751-4755]:PrimitiveType[4751-4755]"
    }, {
      "left" : "attach",
      "right" : "attach",
      "info" : "SimpleName[4756-4762]:SimpleName[4756-4762]"
    }, {
      "left" : "Configuration c",
      "right" : "Configuration c",
      "info" : "SingleVariableDeclaration[4763-4778]:SingleVariableDeclaration[4763-4778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4780-4947]:Block[4780-4947]"
    }, {
      "left" : "this.configuration = c;",
      "right" : "this.configuration = c;",
      "info" : "ExpressionStatement[4790-4813]:ExpressionStatement[4790-4813]"
    }, {
      "left" : "for (R record : records)",
      "right" : "for (R record : records)",
      "info" : "EnhancedForStatement[4823-4941]:EnhancedForStatement[4823-4941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4848-4941]:Block[4848-4941]"
    }, {
      "left" : "if (record != null)",
      "right" : "if (record != null)",
      "info" : "IfStatement[4862-4931]:IfStatement[4862-4931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4882-4931]:Block[4882-4931]"
    }, {
      "left" : "record.attach(c);",
      "right" : "record.attach(c);",
      "info" : "ExpressionStatement[4900-4917]:ExpressionStatement[4900-4917]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4953-4962]:MarkerAnnotation[4953-4962]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4967-4973]:Modifier[4967-4973]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[4974-4979]:Modifier[4974-4979]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4980-4984]:PrimitiveType[4980-4984]"
    }, {
      "left" : "detach",
      "right" : "detach",
      "info" : "SimpleName[4985-4991]:SimpleName[4985-4991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4994-5023]:Block[4994-5023]"
    }, {
      "left" : "attach(null);",
      "right" : "attach(null);",
      "info" : "ExpressionStatement[5004-5017]:ExpressionStatement[5004-5017]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5029-5038]:MarkerAnnotation[5029-5038]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5043-5049]:Modifier[5043-5049]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5050-5055]:Modifier[5050-5055]"
    }, {
      "left" : "Configuration",
      "right" : "Configuration",
      "info" : "SimpleType[5056-5069]:SimpleType[5056-5069]"
    }, {
      "left" : "configuration",
      "right" : "configuration",
      "info" : "SimpleName[5070-5083]:SimpleName[5070-5083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5086-5123]:Block[5086-5123]"
    }, {
      "left" : "return configuration;",
      "right" : "return configuration;",
      "info" : "ReturnStatement[5096-5117]:ReturnStatement[5096-5117]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5315-5324]:MarkerAnnotation[5315-5324]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5329-5335]:Modifier[5329-5335]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5336-5341]:Modifier[5336-5341]"
    }, {
      "left" : "RecordType<R>",
      "right" : "RecordType<R>",
      "info" : "ParameterizedType[5342-5355]:ParameterizedType[5342-5355]"
    }, {
      "left" : "recordType",
      "right" : "recordType",
      "info" : "SimpleName[5356-5366]:SimpleName[5356-5366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5369-5399]:Block[5369-5399]"
    }, {
      "left" : "return fields;",
      "right" : "return fields;",
      "info" : "ReturnStatement[5379-5393]:ReturnStatement[5379-5393]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5405-5414]:MarkerAnnotation[5405-5414]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5419-5425]:Modifier[5419-5425]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5426-5431]:Modifier[5426-5431]"
    }, {
      "left" : "Row",
      "right" : "Row",
      "info" : "SimpleType[5432-5435]:SimpleType[5432-5435]"
    }, {
      "left" : "fieldsRow",
      "right" : "fieldsRow",
      "info" : "SimpleName[5436-5445]:SimpleName[5436-5445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5448-5491]:Block[5448-5491]"
    }, {
      "left" : "return new RowImpl(fields);",
      "right" : "return new RowImpl(fields);",
      "info" : "ReturnStatement[5458-5485]:ReturnStatement[5458-5485]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5497-5506]:MarkerAnnotation[5497-5506]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5511-5517]:Modifier[5511-5517]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5518-5523]:Modifier[5518-5523]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[5525-5526]:TypeParameter[5525-5526]"
    }, {
      "left" : "Field<T>",
      "right" : "Field<T>",
      "info" : "ParameterizedType[5528-5536]:ParameterizedType[5528-5536]"
    }, {
      "left" : "field",
      "right" : "field",
      "info" : "SimpleName[5537-5542]:SimpleName[5537-5542]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[5543-5557]:SingleVariableDeclaration[5543-5557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5559-5602]:Block[5559-5602]"
    }, {
      "left" : "return fields.field(field);",
      "right" : "return fields.field(field);",
      "info" : "ReturnStatement[5569-5596]:ReturnStatement[5569-5596]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5608-5617]:MarkerAnnotation[5608-5617]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5622-5628]:Modifier[5622-5628]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5629-5634]:Modifier[5629-5634]"
    }, {
      "left" : "Field<?>",
      "right" : "Field<?>",
      "info" : "ParameterizedType[5635-5643]:ParameterizedType[5635-5643]"
    }, {
      "left" : "field",
      "right" : "field",
      "info" : "SimpleName[5644-5649]:SimpleName[5644-5649]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[5650-5661]:SingleVariableDeclaration[5650-5661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5663-5705]:Block[5663-5705]"
    }, {
      "left" : "return fields.field(name);",
      "right" : "return fields.field(name);",
      "info" : "ReturnStatement[5673-5699]:ReturnStatement[5673-5699]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5711-5720]:MarkerAnnotation[5711-5720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5725-5731]:Modifier[5725-5731]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5732-5737]:Modifier[5732-5737]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[5739-5740]:TypeParameter[5739-5740]"
    }, {
      "left" : "Field<T>",
      "right" : "Field<T>",
      "info" : "ParameterizedType[5742-5750]:ParameterizedType[5742-5750]"
    }, {
      "left" : "field",
      "right" : "field",
      "info" : "SimpleName[5751-5756]:SimpleName[5751-5756]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[5757-5768]:SingleVariableDeclaration[5757-5768]"
    }, {
      "left" : "Class<T> type",
      "right" : "Class<T> type",
      "info" : "SingleVariableDeclaration[5770-5783]:SingleVariableDeclaration[5770-5783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5785-5833]:Block[5785-5833]"
    }, {
      "left" : "return fields.field(name, type);",
      "right" : "return fields.field(name, type);",
      "info" : "ReturnStatement[5795-5827]:ReturnStatement[5795-5827]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5839-5848]:MarkerAnnotation[5839-5848]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5853-5859]:Modifier[5853-5859]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5860-5865]:Modifier[5860-5865]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[5867-5868]:TypeParameter[5867-5868]"
    }, {
      "left" : "Field<T>",
      "right" : "Field<T>",
      "info" : "ParameterizedType[5870-5878]:ParameterizedType[5870-5878]"
    }, {
      "left" : "field",
      "right" : "field",
      "info" : "SimpleName[5879-5884]:SimpleName[5879-5884]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[5885-5896]:SingleVariableDeclaration[5885-5896]"
    }, {
      "left" : "DataType<T> dataType",
      "right" : "DataType<T> dataType",
      "info" : "SingleVariableDeclaration[5898-5918]:SingleVariableDeclaration[5898-5918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5920-5972]:Block[5920-5972]"
    }, {
      "left" : "return fields.field(name, dataType);",
      "right" : "return fields.field(name, dataType);",
      "info" : "ReturnStatement[5930-5966]:ReturnStatement[5930-5966]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5978-5987]:MarkerAnnotation[5978-5987]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5992-5998]:Modifier[5992-5998]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5999-6004]:Modifier[5999-6004]"
    }, {
      "left" : "Field<?>",
      "right" : "Field<?>",
      "info" : "ParameterizedType[6005-6013]:ParameterizedType[6005-6013]"
    }, {
      "left" : "field",
      "right" : "field",
      "info" : "SimpleName[6014-6019]:SimpleName[6014-6019]"
    }, {
      "left" : "Name name",
      "right" : "Name name",
      "info" : "SingleVariableDeclaration[6020-6029]:SingleVariableDeclaration[6020-6029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6031-6073]:Block[6031-6073]"
    }, {
      "left" : "return fields.field(name);",
      "right" : "return fields.field(name);",
      "info" : "ReturnStatement[6041-6067]:ReturnStatement[6041-6067]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6079-6088]:MarkerAnnotation[6079-6088]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6093-6099]:Modifier[6093-6099]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6100-6105]:Modifier[6100-6105]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[6107-6108]:TypeParameter[6107-6108]"
    }, {
      "left" : "Field<T>",
      "right" : "Field<T>",
      "info" : "ParameterizedType[6110-6118]:ParameterizedType[6110-6118]"
    }, {
      "left" : "field",
      "right" : "field",
      "info" : "SimpleName[6119-6124]:SimpleName[6119-6124]"
    }, {
      "left" : "Name name",
      "right" : "Name name",
      "info" : "SingleVariableDeclaration[6125-6134]:SingleVariableDeclaration[6125-6134]"
    }, {
      "left" : "Class<T> type",
      "right" : "Class<T> type",
      "info" : "SingleVariableDeclaration[6136-6149]:SingleVariableDeclaration[6136-6149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6151-6199]:Block[6151-6199]"
    }, {
      "left" : "return fields.field(name, type);",
      "right" : "return fields.field(name, type);",
      "info" : "ReturnStatement[6161-6193]:ReturnStatement[6161-6193]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6205-6214]:MarkerAnnotation[6205-6214]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6219-6225]:Modifier[6219-6225]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6226-6231]:Modifier[6226-6231]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[6233-6234]:TypeParameter[6233-6234]"
    }, {
      "left" : "Field<T>",
      "right" : "Field<T>",
      "info" : "ParameterizedType[6236-6244]:ParameterizedType[6236-6244]"
    }, {
      "left" : "field",
      "right" : "field",
      "info" : "SimpleName[6245-6250]:SimpleName[6245-6250]"
    }, {
      "left" : "Name name",
      "right" : "Name name",
      "info" : "SingleVariableDeclaration[6251-6260]:SingleVariableDeclaration[6251-6260]"
    }, {
      "left" : "DataType<T> dataType",
      "right" : "DataType<T> dataType",
      "info" : "SingleVariableDeclaration[6262-6282]:SingleVariableDeclaration[6262-6282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6284-6336]:Block[6284-6336]"
    }, {
      "left" : "return fields.field(name, dataType);",
      "right" : "return fields.field(name, dataType);",
      "info" : "ReturnStatement[6294-6330]:ReturnStatement[6294-6330]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6342-6351]:MarkerAnnotation[6342-6351]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6356-6362]:Modifier[6356-6362]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6363-6368]:Modifier[6363-6368]"
    }, {
      "left" : "Field<?>",
      "right" : "Field<?>",
      "info" : "ParameterizedType[6369-6377]:ParameterizedType[6369-6377]"
    }, {
      "left" : "field",
      "right" : "field",
      "info" : "SimpleName[6378-6383]:SimpleName[6378-6383]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[6384-6393]:SingleVariableDeclaration[6384-6393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6395-6438]:Block[6395-6438]"
    }, {
      "left" : "return fields.field(index);",
      "right" : "return fields.field(index);",
      "info" : "ReturnStatement[6405-6432]:ReturnStatement[6405-6432]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6444-6453]:MarkerAnnotation[6444-6453]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6458-6464]:Modifier[6458-6464]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6465-6470]:Modifier[6465-6470]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[6472-6473]:TypeParameter[6472-6473]"
    }, {
      "left" : "Field<T>",
      "right" : "Field<T>",
      "info" : "ParameterizedType[6475-6483]:ParameterizedType[6475-6483]"
    }, {
      "left" : "field",
      "right" : "field",
      "info" : "SimpleName[6484-6489]:SimpleName[6484-6489]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[6490-6499]:SingleVariableDeclaration[6490-6499]"
    }, {
      "left" : "Class<T> type",
      "right" : "Class<T> type",
      "info" : "SingleVariableDeclaration[6501-6514]:SingleVariableDeclaration[6501-6514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6516-6565]:Block[6516-6565]"
    }, {
      "left" : "return fields.field(index, type);",
      "right" : "return fields.field(index, type);",
      "info" : "ReturnStatement[6526-6559]:ReturnStatement[6526-6559]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6571-6580]:MarkerAnnotation[6571-6580]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6585-6591]:Modifier[6585-6591]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6592-6597]:Modifier[6592-6597]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[6599-6600]:TypeParameter[6599-6600]"
    }, {
      "left" : "Field<T>",
      "right" : "Field<T>",
      "info" : "ParameterizedType[6602-6610]:ParameterizedType[6602-6610]"
    }, {
      "left" : "field",
      "right" : "field",
      "info" : "SimpleName[6611-6616]:SimpleName[6611-6616]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[6617-6626]:SingleVariableDeclaration[6617-6626]"
    }, {
      "left" : "DataType<T> dataType",
      "right" : "DataType<T> dataType",
      "info" : "SingleVariableDeclaration[6628-6648]:SingleVariableDeclaration[6628-6648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6650-6703]:Block[6650-6703]"
    }, {
      "left" : "return fields.field(index, dataType);",
      "right" : "return fields.field(index, dataType);",
      "info" : "ReturnStatement[6660-6697]:ReturnStatement[6660-6697]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6709-6718]:MarkerAnnotation[6709-6718]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6723-6729]:Modifier[6723-6729]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6730-6735]:Modifier[6730-6735]"
    }, {
      "left" : "Field<?>[]",
      "right" : "Field<?>[]",
      "info" : "ArrayType[6736-6746]:ArrayType[6736-6746]"
    }, {
      "left" : "fields",
      "right" : "fields",
      "info" : "SimpleName[6747-6753]:SimpleName[6747-6753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6756-6803]:Block[6756-6803]"
    }, {
      "left" : "return fields.fields().clone();",
      "right" : "return fields.fields().clone();",
      "info" : "ReturnStatement[6766-6797]:ReturnStatement[6766-6797]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6857-6862]:Modifier[6857-6862]"
    }, {
      "left" : "Field<?>[]",
      "right" : "Field<?>[]",
      "info" : "ArrayType[6863-6873]:ArrayType[6863-6873]"
    }, {
      "left" : "fields",
      "right" : "fields",
      "info" : "SimpleName[6874-6880]:SimpleName[6874-6880]"
    }, {
      "left" : "Field<?>... f",
      "right" : "Field<?>... f",
      "info" : "SingleVariableDeclaration[6881-6894]:SingleVariableDeclaration[6881-6894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6896-7057]:Block[6896-7057]"
    }, {
      "left" : "Field<?>[] result = new Field[f.length];",
      "right" : "Field<?>[] result = new Field[f.length];",
      "info" : "VariableDeclarationStatement[6906-6946]:VariableDeclarationStatement[6906-6946]"
    }, {
      "left" : "for (int i = 0; i < f.length; i++)\n            result[i] = field(f[i]);",
      "right" : "for (int i = 0; i < f.length; i++)\n            result[i] = field(f[i]);",
      "info" : "ForStatement[6956-7027]:ForStatement[6956-7027]"
    }, {
      "left" : "result[i] = field(f[i]);",
      "right" : "result[i] = field(f[i]);",
      "info" : "ExpressionStatement[7003-7027]:ExpressionStatement[7003-7027]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[7037-7051]:ReturnStatement[7037-7051]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[7111-7116]:Modifier[7111-7116]"
    }, {
      "left" : "Field<?>[]",
      "right" : "Field<?>[]",
      "info" : "ArrayType[7117-7127]:ArrayType[7117-7127]"
    }, {
      "left" : "fields",
      "right" : "fields",
      "info" : "SimpleName[7128-7134]:SimpleName[7128-7134]"
    }, {
      "left" : "int... indexes",
      "right" : "int... indexes",
      "info" : "SingleVariableDeclaration[7135-7149]:SingleVariableDeclaration[7135-7149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7151-7330]:Block[7151-7330]"
    }, {
      "left" : "Field<?>[] result = new Field[indexes.length];",
      "right" : "Field<?>[] result = new Field[indexes.length];",
      "info" : "VariableDeclarationStatement[7161-7207]:VariableDeclarationStatement[7161-7207]"
    }, {
      "left" : "for (int i = 0; i < indexes.length; i++)\n            result[i] = field(indexes[i]);",
      "right" : "for (int i = 0; i < indexes.length; i++)\n            result[i] = field(indexes[i]);",
      "info" : "ForStatement[7217-7300]:ForStatement[7217-7300]"
    }, {
      "left" : "result[i] = field(indexes[i]);",
      "right" : "result[i] = field(indexes[i]);",
      "info" : "ExpressionStatement[7270-7300]:ExpressionStatement[7270-7300]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[7310-7324]:ReturnStatement[7310-7324]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[7384-7389]:Modifier[7384-7389]"
    }, {
      "left" : "Field<?>[]",
      "right" : "Field<?>[]",
      "info" : "ArrayType[7390-7400]:ArrayType[7390-7400]"
    }, {
      "left" : "fields",
      "right" : "fields",
      "info" : "SimpleName[7401-7407]:SimpleName[7401-7407]"
    }, {
      "left" : "String... names",
      "right" : "String... names",
      "info" : "SingleVariableDeclaration[7408-7423]:SingleVariableDeclaration[7408-7423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7425-7598]:Block[7425-7598]"
    }, {
      "left" : "Field<?>[] result = new Field[names.length];",
      "right" : "Field<?>[] result = new Field[names.length];",
      "info" : "VariableDeclarationStatement[7435-7479]:VariableDeclarationStatement[7435-7479]"
    }, {
      "left" : "for (int i = 0; i < names.length; i++)\n            result[i] = field(names[i]);",
      "right" : "for (int i = 0; i < names.length; i++)\n            result[i] = field(names[i]);",
      "info" : "ForStatement[7489-7568]:ForStatement[7489-7568]"
    }, {
      "left" : "result[i] = field(names[i]);",
      "right" : "result[i] = field(names[i]);",
      "info" : "ExpressionStatement[7540-7568]:ExpressionStatement[7540-7568]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[7578-7592]:ReturnStatement[7578-7592]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[7652-7657]:Modifier[7652-7657]"
    }, {
      "left" : "Field<?>[]",
      "right" : "Field<?>[]",
      "info" : "ArrayType[7658-7668]:ArrayType[7658-7668]"
    }, {
      "left" : "fields",
      "right" : "fields",
      "info" : "SimpleName[7669-7675]:SimpleName[7669-7675]"
    }, {
      "left" : "Name... names",
      "right" : "Name... names",
      "info" : "SingleVariableDeclaration[7676-7689]:SingleVariableDeclaration[7676-7689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7691-7864]:Block[7691-7864]"
    }, {
      "left" : "Field<?>[] result = new Field[names.length];",
      "right" : "Field<?>[] result = new Field[names.length];",
      "info" : "VariableDeclarationStatement[7701-7745]:VariableDeclarationStatement[7701-7745]"
    }, {
      "left" : "for (int i = 0; i < names.length; i++)\n            result[i] = field(names[i]);",
      "right" : "for (int i = 0; i < names.length; i++)\n            result[i] = field(names[i]);",
      "info" : "ForStatement[7755-7834]:ForStatement[7755-7834]"
    }, {
      "left" : "result[i] = field(names[i]);",
      "right" : "result[i] = field(names[i]);",
      "info" : "ExpressionStatement[7806-7834]:ExpressionStatement[7806-7834]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[7844-7858]:ReturnStatement[7844-7858]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7870-7879]:MarkerAnnotation[7870-7879]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7884-7890]:Modifier[7884-7890]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[7891-7896]:Modifier[7891-7896]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7897-7904]:PrimitiveType[7897-7904]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[7905-7912]:SimpleName[7905-7912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7915-7956]:Block[7915-7956]"
    }, {
      "left" : "return records.isEmpty();",
      "right" : "return records.isEmpty();",
      "info" : "ReturnStatement[7925-7950]:ReturnStatement[7925-7950]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7962-7971]:MarkerAnnotation[7962-7971]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7976-7982]:Modifier[7976-7982]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[7983-7988]:Modifier[7983-7988]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7989-7996]:PrimitiveType[7989-7996]"
    }, {
      "left" : "isNotEmpty",
      "right" : "isNotEmpty",
      "info" : "SimpleName[7997-8007]:SimpleName[7997-8007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8010-8052]:Block[8010-8052]"
    }, {
      "left" : "return !records.isEmpty();",
      "right" : "return !records.isEmpty();",
      "info" : "ReturnStatement[8020-8046]:ReturnStatement[8020-8046]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8058-8067]:MarkerAnnotation[8058-8067]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8072-8078]:Modifier[8072-8078]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[8079-8084]:Modifier[8079-8084]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[8086-8087]:TypeParameter[8086-8087]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[8089-8090]:SimpleType[8089-8090]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[8091-8099]:SimpleName[8091-8099]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[8100-8109]:SingleVariableDeclaration[8100-8109]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[8111-8125]:SingleVariableDeclaration[8111-8125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8127-8177]:Block[8127-8177]"
    }, {
      "left" : "return get(index).getValue(field);",
      "right" : "return get(index).getValue(field);",
      "info" : "ReturnStatement[8137-8171]:ReturnStatement[8137-8171]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8183-8192]:MarkerAnnotation[8183-8192]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[8197-8208]:MarkerAnnotation[8197-8208]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8213-8219]:Modifier[8213-8219]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[8220-8225]:Modifier[8220-8225]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[8227-8228]:TypeParameter[8227-8228]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[8230-8231]:SimpleType[8230-8231]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[8232-8240]:SimpleName[8232-8240]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[8241-8250]:SingleVariableDeclaration[8241-8250]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[8252-8266]:SingleVariableDeclaration[8252-8266]"
    }, {
      "left" : "T defaultValue",
      "right" : "T defaultValue",
      "info" : "SingleVariableDeclaration[8268-8282]:SingleVariableDeclaration[8268-8282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8284-8348]:Block[8284-8348]"
    }, {
      "left" : "return get(index).getValue(field, defaultValue);",
      "right" : "return get(index).getValue(field, defaultValue);",
      "info" : "ReturnStatement[8294-8342]:ReturnStatement[8294-8342]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8354-8363]:MarkerAnnotation[8354-8363]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8368-8374]:Modifier[8368-8374]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[8375-8380]:Modifier[8375-8380]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[8381-8387]:SimpleType[8381-8387]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[8388-8396]:SimpleName[8388-8396]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[8397-8406]:SingleVariableDeclaration[8397-8406]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[8408-8422]:SingleVariableDeclaration[8408-8422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8424-8479]:Block[8424-8479]"
    }, {
      "left" : "return get(index).getValue(fieldIndex);",
      "right" : "return get(index).getValue(fieldIndex);",
      "info" : "ReturnStatement[8434-8473]:ReturnStatement[8434-8473]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8485-8494]:MarkerAnnotation[8485-8494]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[8499-8510]:MarkerAnnotation[8499-8510]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8515-8521]:Modifier[8515-8521]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[8522-8527]:Modifier[8522-8527]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[8528-8534]:SimpleType[8528-8534]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[8535-8543]:SimpleName[8535-8543]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[8544-8553]:SingleVariableDeclaration[8544-8553]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[8555-8569]:SingleVariableDeclaration[8555-8569]"
    }, {
      "left" : "Object defaultValue",
      "right" : "Object defaultValue",
      "info" : "SingleVariableDeclaration[8571-8590]:SingleVariableDeclaration[8571-8590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8592-8661]:Block[8592-8661]"
    }, {
      "left" : "return get(index).getValue(fieldIndex, defaultValue);",
      "right" : "return get(index).getValue(fieldIndex, defaultValue);",
      "info" : "ReturnStatement[8602-8655]:ReturnStatement[8602-8655]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8667-8676]:MarkerAnnotation[8667-8676]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8681-8687]:Modifier[8681-8687]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[8688-8693]:Modifier[8688-8693]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[8694-8700]:SimpleType[8694-8700]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[8701-8709]:SimpleName[8701-8709]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[8710-8719]:SingleVariableDeclaration[8710-8719]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[8721-8737]:SingleVariableDeclaration[8721-8737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8739-8793]:Block[8739-8793]"
    }, {
      "left" : "return get(index).getValue(fieldName);",
      "right" : "return get(index).getValue(fieldName);",
      "info" : "ReturnStatement[8749-8787]:ReturnStatement[8749-8787]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8799-8808]:MarkerAnnotation[8799-8808]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[8813-8824]:MarkerAnnotation[8813-8824]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8829-8835]:Modifier[8829-8835]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[8836-8841]:Modifier[8836-8841]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[8842-8848]:SimpleType[8842-8848]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[8849-8857]:SimpleName[8849-8857]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[8858-8867]:SingleVariableDeclaration[8858-8867]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[8869-8885]:SingleVariableDeclaration[8869-8885]"
    }, {
      "left" : "Object defaultValue",
      "right" : "Object defaultValue",
      "info" : "SingleVariableDeclaration[8887-8906]:SingleVariableDeclaration[8887-8906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8908-8976]:Block[8908-8976]"
    }, {
      "left" : "return get(index).getValue(fieldName, defaultValue);",
      "right" : "return get(index).getValue(fieldName, defaultValue);",
      "info" : "ReturnStatement[8918-8970]:ReturnStatement[8918-8970]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8982-8991]:MarkerAnnotation[8982-8991]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8996-9002]:Modifier[8996-9002]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9003-9008]:Modifier[9003-9008]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[9010-9011]:TypeParameter[9010-9011]"
    }, {
      "left" : "List<T>",
      "right" : "List<T>",
      "info" : "ParameterizedType[9013-9020]:ParameterizedType[9013-9020]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[9021-9030]:SimpleName[9021-9030]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[9031-9045]:SingleVariableDeclaration[9031-9045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9047-9123]:Block[9047-9123]"
    }, {
      "left" : "return (List<T>) getValues(indexOrFail(fieldsRow(), field));",
      "right" : "return (List<T>) getValues(indexOrFail(fieldsRow(), field));",
      "info" : "ReturnStatement[9057-9117]:ReturnStatement[9057-9117]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9129-9138]:MarkerAnnotation[9129-9138]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9143-9149]:Modifier[9143-9149]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9150-9155]:Modifier[9150-9155]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[9157-9158]:TypeParameter[9157-9158]"
    }, {
      "left" : "List<T>",
      "right" : "List<T>",
      "info" : "ParameterizedType[9160-9167]:ParameterizedType[9160-9167]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[9168-9177]:SimpleName[9168-9177]"
    }, {
      "left" : "Field<?> field",
      "right" : "Field<?> field",
      "info" : "SingleVariableDeclaration[9178-9192]:SingleVariableDeclaration[9178-9192]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[9194-9217]:SingleVariableDeclaration[9194-9217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9219-9282]:Block[9219-9282]"
    }, {
      "left" : "return Convert.convert(getValues(field), type);",
      "right" : "return Convert.convert(getValues(field), type);",
      "info" : "ReturnStatement[9229-9276]:ReturnStatement[9229-9276]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9288-9297]:MarkerAnnotation[9288-9297]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9302-9308]:Modifier[9302-9308]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9309-9314]:Modifier[9309-9314]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[9316-9317]:TypeParameter[9316-9317]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[9319-9320]:TypeParameter[9319-9320]"
    }, {
      "left" : "List<U>",
      "right" : "List<U>",
      "info" : "ParameterizedType[9322-9329]:ParameterizedType[9322-9329]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[9330-9339]:SimpleName[9330-9339]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[9340-9354]:SingleVariableDeclaration[9340-9354]"
    }, {
      "left" : "Converter<? super T, U> converter",
      "right" : "Converter<? super T, U> converter",
      "info" : "SingleVariableDeclaration[9356-9389]:SingleVariableDeclaration[9356-9389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9391-9459]:Block[9391-9459]"
    }, {
      "left" : "return Convert.convert(getValues(field), converter);",
      "right" : "return Convert.convert(getValues(field), converter);",
      "info" : "ReturnStatement[9401-9453]:ReturnStatement[9401-9453]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9465-9474]:MarkerAnnotation[9465-9474]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9479-9485]:Modifier[9479-9485]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9486-9491]:Modifier[9486-9491]"
    }, {
      "left" : "List<?>",
      "right" : "List<?>",
      "info" : "ParameterizedType[9492-9499]:ParameterizedType[9492-9499]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[9500-9509]:SimpleName[9500-9509]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[9510-9524]:SingleVariableDeclaration[9510-9524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9526-9714]:Block[9526-9714]"
    }, {
      "left" : "List<Object> result = new ArrayList<Object>(size());",
      "right" : "List<Object> result = new ArrayList<Object>(size());",
      "info" : "VariableDeclarationStatement[9536-9588]:VariableDeclarationStatement[9536-9588]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[9598-9684]:EnhancedForStatement[9598-9684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9620-9684]:Block[9620-9684]"
    }, {
      "left" : "result.add(record.getValue(fieldIndex));",
      "right" : "result.add(record.getValue(fieldIndex));",
      "info" : "ExpressionStatement[9634-9674]:ExpressionStatement[9634-9674]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[9694-9708]:ReturnStatement[9694-9708]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9720-9729]:MarkerAnnotation[9720-9729]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9734-9740]:Modifier[9734-9740]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9741-9746]:Modifier[9741-9746]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[9748-9749]:TypeParameter[9748-9749]"
    }, {
      "left" : "List<T>",
      "right" : "List<T>",
      "info" : "ParameterizedType[9751-9758]:ParameterizedType[9751-9758]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[9759-9768]:SimpleName[9759-9768]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[9769-9783]:SingleVariableDeclaration[9769-9783]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[9785-9808]:SingleVariableDeclaration[9785-9808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9810-9878]:Block[9810-9878]"
    }, {
      "left" : "return Convert.convert(getValues(fieldIndex), type);",
      "right" : "return Convert.convert(getValues(fieldIndex), type);",
      "info" : "ReturnStatement[9820-9872]:ReturnStatement[9820-9872]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9884-9893]:MarkerAnnotation[9884-9893]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9898-9904]:Modifier[9898-9904]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9905-9910]:Modifier[9905-9910]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[9912-9913]:TypeParameter[9912-9913]"
    }, {
      "left" : "List<U>",
      "right" : "List<U>",
      "info" : "ParameterizedType[9915-9922]:ParameterizedType[9915-9922]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[9923-9932]:SimpleName[9923-9932]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[9933-9947]:SingleVariableDeclaration[9933-9947]"
    }, {
      "left" : "Converter<?, U> converter",
      "right" : "Converter<?, U> converter",
      "info" : "SingleVariableDeclaration[9949-9974]:SingleVariableDeclaration[9949-9974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9976-10049]:Block[9976-10049]"
    }, {
      "left" : "return Convert.convert(getValues(fieldIndex), converter);",
      "right" : "return Convert.convert(getValues(fieldIndex), converter);",
      "info" : "ReturnStatement[9986-10043]:ReturnStatement[9986-10043]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10055-10064]:MarkerAnnotation[10055-10064]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10069-10075]:Modifier[10069-10075]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[10076-10081]:Modifier[10076-10081]"
    }, {
      "left" : "List<?>",
      "right" : "List<?>",
      "info" : "ParameterizedType[10082-10089]:ParameterizedType[10082-10089]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[10090-10099]:SimpleName[10090-10099]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[10100-10116]:SingleVariableDeclaration[10100-10116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10118-10169]:Block[10118-10169]"
    }, {
      "left" : "return getValues(field(fieldName));",
      "right" : "return getValues(field(fieldName));",
      "info" : "ReturnStatement[10128-10163]:ReturnStatement[10128-10163]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10175-10184]:MarkerAnnotation[10175-10184]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10189-10195]:Modifier[10189-10195]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[10196-10201]:Modifier[10196-10201]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[10203-10204]:TypeParameter[10203-10204]"
    }, {
      "left" : "List<T>",
      "right" : "List<T>",
      "info" : "ParameterizedType[10206-10213]:ParameterizedType[10206-10213]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[10214-10223]:SimpleName[10214-10223]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[10224-10240]:SingleVariableDeclaration[10224-10240]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[10242-10265]:SingleVariableDeclaration[10242-10265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10267-10334]:Block[10267-10334]"
    }, {
      "left" : "return Convert.convert(getValues(fieldName), type);",
      "right" : "return Convert.convert(getValues(fieldName), type);",
      "info" : "ReturnStatement[10277-10328]:ReturnStatement[10277-10328]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10340-10349]:MarkerAnnotation[10340-10349]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10354-10360]:Modifier[10354-10360]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[10361-10366]:Modifier[10361-10366]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[10368-10369]:TypeParameter[10368-10369]"
    }, {
      "left" : "List<U>",
      "right" : "List<U>",
      "info" : "ParameterizedType[10371-10378]:ParameterizedType[10371-10378]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[10379-10388]:SimpleName[10379-10388]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[10389-10405]:SingleVariableDeclaration[10389-10405]"
    }, {
      "left" : "Converter<?, U> converter",
      "right" : "Converter<?, U> converter",
      "info" : "SingleVariableDeclaration[10407-10432]:SingleVariableDeclaration[10407-10432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10434-10506]:Block[10434-10506]"
    }, {
      "left" : "return Convert.convert(getValues(fieldName), converter);",
      "right" : "return Convert.convert(getValues(fieldName), converter);",
      "info" : "ReturnStatement[10444-10500]:ReturnStatement[10444-10500]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10512-10521]:MarkerAnnotation[10512-10521]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10526-10532]:Modifier[10526-10532]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[10533-10538]:Modifier[10533-10538]"
    }, {
      "left" : "List<?>",
      "right" : "List<?>",
      "info" : "ParameterizedType[10539-10546]:ParameterizedType[10539-10546]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[10547-10556]:SimpleName[10547-10556]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[10557-10571]:SingleVariableDeclaration[10557-10571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10573-10624]:Block[10573-10624]"
    }, {
      "left" : "return getValues(field(fieldName));",
      "right" : "return getValues(field(fieldName));",
      "info" : "ReturnStatement[10583-10618]:ReturnStatement[10583-10618]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10630-10639]:MarkerAnnotation[10630-10639]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10644-10650]:Modifier[10644-10650]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[10651-10656]:Modifier[10651-10656]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[10658-10659]:TypeParameter[10658-10659]"
    }, {
      "left" : "List<T>",
      "right" : "List<T>",
      "info" : "ParameterizedType[10661-10668]:ParameterizedType[10661-10668]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[10669-10678]:SimpleName[10669-10678]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[10679-10693]:SingleVariableDeclaration[10679-10693]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[10695-10718]:SingleVariableDeclaration[10695-10718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10720-10787]:Block[10720-10787]"
    }, {
      "left" : "return Convert.convert(getValues(fieldName), type);",
      "right" : "return Convert.convert(getValues(fieldName), type);",
      "info" : "ReturnStatement[10730-10781]:ReturnStatement[10730-10781]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10793-10802]:MarkerAnnotation[10793-10802]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10807-10813]:Modifier[10807-10813]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[10814-10819]:Modifier[10814-10819]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[10821-10822]:TypeParameter[10821-10822]"
    }, {
      "left" : "List<U>",
      "right" : "List<U>",
      "info" : "ParameterizedType[10824-10831]:ParameterizedType[10824-10831]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[10832-10841]:SimpleName[10832-10841]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[10842-10856]:SingleVariableDeclaration[10842-10856]"
    }, {
      "left" : "Converter<?, U> converter",
      "right" : "Converter<?, U> converter",
      "info" : "SingleVariableDeclaration[10858-10883]:SingleVariableDeclaration[10858-10883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10885-10957]:Block[10885-10957]"
    }, {
      "left" : "return Convert.convert(getValues(fieldName), converter);",
      "right" : "return Convert.convert(getValues(fieldName), converter);",
      "info" : "ReturnStatement[10895-10951]:ReturnStatement[10895-10951]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[10963-10968]:Modifier[10963-10968]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10969-10973]:PrimitiveType[10969-10973]"
    }, {
      "left" : "addRecord",
      "right" : "addRecord",
      "info" : "SimpleName[10974-10983]:SimpleName[10974-10983]"
    }, {
      "left" : "R record",
      "right" : "R record",
      "info" : "SingleVariableDeclaration[10984-10992]:SingleVariableDeclaration[10984-10992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10994-11030]:Block[10994-11030]"
    }, {
      "left" : "records.add(record);",
      "right" : "records.add(record);",
      "info" : "ExpressionStatement[11004-11024]:ExpressionStatement[11004-11024]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11036-11045]:MarkerAnnotation[11036-11045]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11050-11056]:Modifier[11050-11056]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[11057-11062]:Modifier[11057-11062]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11063-11069]:SimpleType[11063-11069]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[11070-11076]:SimpleName[11070-11076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11079-11194]:Block[11079-11194]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[11089-11130]:VariableDeclarationStatement[11089-11130]"
    }, {
      "left" : "format(writer);",
      "right" : "format(writer);",
      "info" : "ExpressionStatement[11139-11154]:ExpressionStatement[11139-11154]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[11163-11188]:ReturnStatement[11163-11188]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11200-11209]:MarkerAnnotation[11200-11209]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11214-11220]:Modifier[11214-11220]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[11221-11226]:Modifier[11221-11226]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11227-11231]:PrimitiveType[11227-11231]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[11232-11238]:SimpleName[11232-11238]"
    }, {
      "left" : "OutputStream stream",
      "right" : "OutputStream stream",
      "info" : "SingleVariableDeclaration[11239-11258]:SingleVariableDeclaration[11239-11258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11260-11315]:Block[11260-11315]"
    }, {
      "left" : "format(new OutputStreamWriter(stream));",
      "right" : "format(new OutputStreamWriter(stream));",
      "info" : "ExpressionStatement[11270-11309]:ExpressionStatement[11270-11309]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11321-11330]:MarkerAnnotation[11321-11330]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11335-11341]:Modifier[11335-11341]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[11342-11347]:Modifier[11342-11347]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11348-11352]:PrimitiveType[11348-11352]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[11353-11359]:SimpleName[11353-11359]"
    }, {
      "left" : "Writer writer",
      "right" : "Writer writer",
      "info" : "SingleVariableDeclaration[11360-11373]:SingleVariableDeclaration[11360-11373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11375-11410]:Block[11375-11410]"
    }, {
      "left" : "format(writer, 50);",
      "right" : "format(writer, 50);",
      "info" : "ExpressionStatement[11385-11404]:ExpressionStatement[11385-11404]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11416-11425]:MarkerAnnotation[11416-11425]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11430-11436]:Modifier[11430-11436]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[11437-11442]:Modifier[11437-11442]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11443-11449]:SimpleType[11443-11449]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[11450-11456]:SimpleName[11450-11456]"
    }, {
      "left" : "int maxRecords",
      "right" : "int maxRecords",
      "info" : "SingleVariableDeclaration[11457-11471]:SingleVariableDeclaration[11457-11471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11473-11600]:Block[11473-11600]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[11483-11524]:VariableDeclarationStatement[11483-11524]"
    }, {
      "left" : "format(writer, maxRecords);",
      "right" : "format(writer, maxRecords);",
      "info" : "ExpressionStatement[11533-11560]:ExpressionStatement[11533-11560]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[11569-11594]:ReturnStatement[11569-11594]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11606-11615]:MarkerAnnotation[11606-11615]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11620-11626]:Modifier[11620-11626]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[11627-11632]:Modifier[11627-11632]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11633-11637]:PrimitiveType[11633-11637]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[11638-11644]:SimpleName[11638-11644]"
    }, {
      "left" : "OutputStream stream",
      "right" : "OutputStream stream",
      "info" : "SingleVariableDeclaration[11645-11664]:SingleVariableDeclaration[11645-11664]"
    }, {
      "left" : "int maxRecords",
      "right" : "int maxRecords",
      "info" : "SingleVariableDeclaration[11666-11680]:SingleVariableDeclaration[11666-11680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11682-11749]:Block[11682-11749]"
    }, {
      "left" : "format(new OutputStreamWriter(stream), maxRecords);",
      "right" : "format(new OutputStreamWriter(stream), maxRecords);",
      "info" : "ExpressionStatement[11692-11743]:ExpressionStatement[11692-11743]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11755-11764]:MarkerAnnotation[11755-11764]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11769-11775]:Modifier[11769-11775]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[11776-11781]:Modifier[11776-11781]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11782-11786]:PrimitiveType[11782-11786]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[11787-11793]:SimpleName[11787-11793]"
    }, {
      "left" : "Writer writer",
      "right" : "Writer writer",
      "info" : "SingleVariableDeclaration[11794-11807]:SingleVariableDeclaration[11794-11807]"
    }, {
      "left" : "int maxRecords",
      "right" : "int maxRecords",
      "info" : "SingleVariableDeclaration[11809-11823]:SingleVariableDeclaration[11809-11823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11825-17465]:Block[11825-17465]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[11835-17459]:TryStatement[11835-17459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11839-17339]:Block[11839-17339]"
    }, {
      "left" : "final int COL_MIN_WIDTH = 4;",
      "right" : "final int COL_MIN_WIDTH = 4;",
      "info" : "VariableDeclarationStatement[11853-11881]:VariableDeclarationStatement[11853-11881]"
    }, {
      "left" : "final int COL_MAX_WIDTH = 50;",
      "right" : "final int COL_MAX_WIDTH = 50;",
      "info" : "VariableDeclarationStatement[11894-11923]:VariableDeclarationStatement[11894-11923]"
    }, {
      "left" : "final int NUM_COL_MAX_WIDTH = 100;",
      "right" : "final int NUM_COL_MAX_WIDTH = 100;",
      "info" : "VariableDeclarationStatement[12018-12052]:VariableDeclarationStatement[12018-12052]"
    }, {
      "left" : "final int MAX_RECORDS = min(50, maxRecords);",
      "right" : "final int MAX_RECORDS = min(50, maxRecords);",
      "info" : "VariableDeclarationStatement[12155-12199]:VariableDeclarationStatement[12155-12199]"
    }, {
      "left" : "final int[] decimalPlaces = new int[fields.fields.length];",
      "right" : "final int[] decimalPlaces = new int[fields.fields.length];",
      "info" : "VariableDeclarationStatement[12276-12334]:VariableDeclarationStatement[12276-12334]"
    }, {
      "left" : "final int[] widths = new int[fields.fields.length];",
      "right" : "final int[] widths = new int[fields.fields.length];",
      "info" : "VariableDeclarationStatement[12347-12398]:VariableDeclarationStatement[12347-12398]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[12412-13226]:ForStatement[12412-13226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12471-13226]:Block[12471-13226]"
    }, {
      "left" : "if (Number.class.isAssignableFrom(fields.fields[index].getType()))",
      "right" : "if (Number.class.isAssignableFrom(fields.fields[index].getType()))",
      "info" : "IfStatement[12489-13212]:IfStatement[12489-13212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12556-13212]:Block[12556-13212]"
    }, {
      "left" : "List<Integer> decimalPlacesList = new ArrayList<Integer>();",
      "right" : "List<Integer> decimalPlacesList = new ArrayList<Integer>();",
      "info" : "VariableDeclarationStatement[12578-12637]:VariableDeclarationStatement[12578-12637]"
    }, {
      "left" : "decimalPlacesList.add(0);",
      "right" : "decimalPlacesList.add(0);",
      "info" : "ExpressionStatement[12693-12718]:ExpressionStatement[12693-12718]"
    }, {
      "left" : "String value;",
      "right" : "String value;",
      "info" : "VariableDeclarationStatement[12812-12825]:VariableDeclarationStatement[12812-12825]"
    }, {
      "left" : "for (int i = 0; i < min(MAX_RECORDS, size()); i++)",
      "right" : "for (int i = 0; i < min(MAX_RECORDS, size()); i++)",
      "info" : "ForStatement[12846-13082]:ForStatement[12846-13082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12897-13082]:Block[12897-13082]"
    }, {
      "left" : "value = format0(getValue(i, index), get(i).changed(index), true);",
      "right" : "value = format0(getValue(i, index), get(i).changed(index), true);",
      "info" : "ExpressionStatement[12923-12988]:ExpressionStatement[12923-12988]"
    }, {
      "left" : "decimalPlacesList.add(getDecimalPlaces(value));",
      "right" : "decimalPlacesList.add(getDecimalPlaces(value));",
      "info" : "ExpressionStatement[13013-13060]:ExpressionStatement[13013-13060]"
    }, {
      "left" : "decimalPlaces[index] = Collections.max(decimalPlacesList);",
      "right" : "decimalPlaces[index] = Collections.max(decimalPlacesList);",
      "info" : "ExpressionStatement[13136-13194]:ExpressionStatement[13136-13194]"
    }, {
      "left" : "int colMaxWidth;",
      "right" : "int colMaxWidth;",
      "info" : "VariableDeclarationStatement[13277-13293]:VariableDeclarationStatement[13277-13293]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[13306-14486]:ForStatement[13306-14486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13365-14486]:Block[13365-14486]"
    }, {
      "left" : "boolean isNumCol = Number.class.isAssignableFrom(fields.fields[index].getType());",
      "right" : "boolean isNumCol = Number.class.isAssignableFrom(fields.fields[index].getType());",
      "info" : "VariableDeclarationStatement[13421-13502]:VariableDeclarationStatement[13421-13502]"
    }, {
      "left" : "colMaxWidth = isNumCol ? NUM_COL_MAX_WIDTH : COL_MAX_WIDTH;",
      "right" : "colMaxWidth = isNumCol ? NUM_COL_MAX_WIDTH : COL_MAX_WIDTH;",
      "info" : "ExpressionStatement[13520-13579]:ExpressionStatement[13520-13579]"
    }, {
      "left" : "List<Integer> widthList = new ArrayList<Integer>();",
      "right" : "List<Integer> widthList = new ArrayList<Integer>();",
      "info" : "VariableDeclarationStatement[13650-13701]:VariableDeclarationStatement[13650-13701]"
    }, {
      "left" : "widthList.add(min(colMaxWidth, max(COL_MIN_WIDTH, fields.fields[index].getName().length())));",
      "right" : "widthList.add(min(colMaxWidth, max(COL_MIN_WIDTH, fields.fields[index].getName().length())));",
      "info" : "ExpressionStatement[13766-13859]:ExpressionStatement[13766-13859]"
    }, {
      "left" : "String value;",
      "right" : "String value;",
      "info" : "VariableDeclarationStatement[13920-13933]:VariableDeclarationStatement[13920-13933]"
    }, {
      "left" : "for (int i = 0; i < min(MAX_RECORDS, size()); i++)",
      "right" : "for (int i = 0; i < min(MAX_RECORDS, size()); i++)",
      "info" : "ForStatement[13950-14383]:ForStatement[13950-14383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14001-14383]:Block[14001-14383]"
    }, {
      "left" : "value = format0(getValue(i, index), get(i).changed(index), true);",
      "right" : "value = format0(getValue(i, index), get(i).changed(index), true);",
      "info" : "ExpressionStatement[14023-14088]:ExpressionStatement[14023-14088]"
    }, {
      "left" : "if (isNumCol)",
      "right" : "if (isNumCol)",
      "info" : "IfStatement[14179-14295]:IfStatement[14179-14295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14193-14295]:Block[14193-14295]"
    }, {
      "left" : "value = alignNumberValue(decimalPlaces[index], value);",
      "right" : "value = alignNumberValue(decimalPlaces[index], value);",
      "info" : "ExpressionStatement[14219-14273]:ExpressionStatement[14219-14273]"
    }, {
      "left" : "widthList.add(min(colMaxWidth, value.length()));",
      "right" : "widthList.add(min(colMaxWidth, value.length()));",
      "info" : "ExpressionStatement[14317-14365]:ExpressionStatement[14317-14365]"
    }, {
      "left" : "widths[index] = Collections.max(widthList);",
      "right" : "widths[index] = Collections.max(widthList);",
      "info" : "ExpressionStatement[14429-14472]:ExpressionStatement[14429-14472]"
    }, {
      "left" : "writer.append(\"+\");",
      "right" : "writer.append(\"+\");",
      "info" : "ExpressionStatement[14649-14668]:ExpressionStatement[14649-14668]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[14681-14856]:ForStatement[14681-14856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14740-14856]:Block[14740-14856]"
    }, {
      "left" : "writer.append(rightPad(\"\", widths[index], \"-\"));",
      "right" : "writer.append(rightPad(\"\", widths[index], \"-\"));",
      "info" : "ExpressionStatement[14758-14806]:ExpressionStatement[14758-14806]"
    }, {
      "left" : "writer.append(\"+\");",
      "right" : "writer.append(\"+\");",
      "info" : "ExpressionStatement[14823-14842]:ExpressionStatement[14823-14842]"
    }, {
      "left" : "writer.append(\"\\n|\");",
      "right" : "writer.append(\"\\n|\");",
      "info" : "ExpressionStatement[14899-14920]:ExpressionStatement[14899-14920]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[14933-15457]:ForStatement[14933-15457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14992-15457]:Block[14992-15457]"
    }, {
      "left" : "String padded;",
      "right" : "String padded;",
      "info" : "VariableDeclarationStatement[15010-15024]:VariableDeclarationStatement[15010-15024]"
    }, {
      "left" : "if (Number.class.isAssignableFrom(fields.fields[index].getType()))",
      "right" : "if (Number.class.isAssignableFrom(fields.fields[index].getType()))",
      "info" : "IfStatement[15042-15340]:IfStatement[15042-15340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15109-15213]:Block[15109-15213]"
    }, {
      "left" : "padded = leftPad(fields.fields[index].getName(), widths[index]);",
      "right" : "padded = leftPad(fields.fields[index].getName(), widths[index]);",
      "info" : "ExpressionStatement[15131-15195]:ExpressionStatement[15131-15195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15235-15340]:Block[15235-15340]"
    }, {
      "left" : "padded = rightPad(fields.fields[index].getName(), widths[index]);",
      "right" : "padded = rightPad(fields.fields[index].getName(), widths[index]);",
      "info" : "ExpressionStatement[15257-15322]:ExpressionStatement[15257-15322]"
    }, {
      "left" : "writer.append(abbreviate(padded, widths[index]));",
      "right" : "writer.append(abbreviate(padded, widths[index]));",
      "info" : "ExpressionStatement[15358-15407]:ExpressionStatement[15358-15407]"
    }, {
      "left" : "writer.append(\"|\");",
      "right" : "writer.append(\"|\");",
      "info" : "ExpressionStatement[15424-15443]:ExpressionStatement[15424-15443]"
    }, {
      "left" : "writer.append(\"\\n+\");",
      "right" : "writer.append(\"\\n+\");",
      "info" : "ExpressionStatement[15502-15523]:ExpressionStatement[15502-15523]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[15536-15711]:ForStatement[15536-15711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15595-15711]:Block[15595-15711]"
    }, {
      "left" : "writer.append(rightPad(\"\", widths[index], \"-\"));",
      "right" : "writer.append(rightPad(\"\", widths[index], \"-\"));",
      "info" : "ExpressionStatement[15613-15661]:ExpressionStatement[15613-15661]"
    }, {
      "left" : "writer.append(\"+\");",
      "right" : "writer.append(\"+\");",
      "info" : "ExpressionStatement[15678-15697]:ExpressionStatement[15678-15697]"
    }, {
      "left" : "for (int i = 0; i < min(maxRecords, size()); i++)",
      "right" : "for (int i = 0; i < min(maxRecords, size()); i++)",
      "info" : "ForStatement[15754-16741]:ForStatement[15754-16741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15804-16741]:Block[15804-16741]"
    }, {
      "left" : "writer.append(\"\\n|\");",
      "right" : "writer.append(\"\\n|\");",
      "info" : "ExpressionStatement[15822-15843]:ExpressionStatement[15822-15843]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[15861-16727]:ForStatement[15861-16727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15920-16727]:Block[15920-16727]"
    }, {
      "left" : "String value = format0(getValue(i, index), get(i).changed(index), true).replace(\"\\n\", \"{lf}\").replace(\"\\r\", \"{cr}\");",
      "right" : "String value = format0(getValue(i, index), get(i).changed(index), true).replace(\"\\n\", \"{lf}\").replace(\"\\r\", \"{cr}\");",
      "info" : "VariableDeclarationStatement[15942-16058]:VariableDeclarationStatement[15942-16058]"
    }, {
      "left" : "String padded;",
      "right" : "String padded;",
      "info" : "VariableDeclarationStatement[16080-16094]:VariableDeclarationStatement[16080-16094]"
    }, {
      "left" : "if (Number.class.isAssignableFrom(fields.fields[index].getType()))",
      "right" : "if (Number.class.isAssignableFrom(fields.fields[index].getType()))",
      "info" : "IfStatement[16115-16598]:IfStatement[16115-16598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16182-16447]:Block[16182-16447]"
    }, {
      "left" : "value = alignNumberValue(decimalPlaces[index], value);",
      "right" : "value = alignNumberValue(decimalPlaces[index], value);",
      "info" : "ExpressionStatement[16270-16324]:ExpressionStatement[16270-16324]"
    }, {
      "left" : "padded = leftPad(value, widths[index]);",
      "right" : "padded = leftPad(value, widths[index]);",
      "info" : "ExpressionStatement[16386-16425]:ExpressionStatement[16386-16425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16473-16598]:Block[16473-16598]"
    }, {
      "left" : "padded = rightPad(value, widths[index]);",
      "right" : "padded = rightPad(value, widths[index]);",
      "info" : "ExpressionStatement[16536-16576]:ExpressionStatement[16536-16576]"
    }, {
      "left" : "writer.append(abbreviate(padded, widths[index]));",
      "right" : "writer.append(abbreviate(padded, widths[index]));",
      "info" : "ExpressionStatement[16620-16669]:ExpressionStatement[16620-16669]"
    }, {
      "left" : "writer.append(\"|\");",
      "right" : "writer.append(\"|\");",
      "info" : "ExpressionStatement[16690-16709]:ExpressionStatement[16690-16709]"
    }, {
      "left" : "if (size() > 0)",
      "right" : "if (size() > 0)",
      "info" : "IfStatement[16788-17062]:IfStatement[16788-17062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16804-17062]:Block[16804-17062]"
    }, {
      "left" : "writer.append(\"\\n+\");",
      "right" : "writer.append(\"\\n+\");",
      "info" : "ExpressionStatement[16822-16843]:ExpressionStatement[16822-16843]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[16861-17048]:ForStatement[16861-17048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16920-17048]:Block[16920-17048]"
    }, {
      "left" : "writer.append(rightPad(\"\", widths[index], \"-\"));",
      "right" : "writer.append(rightPad(\"\", widths[index], \"-\"));",
      "info" : "ExpressionStatement[16942-16990]:ExpressionStatement[16942-16990]"
    }, {
      "left" : "writer.append(\"+\");",
      "right" : "writer.append(\"+\");",
      "info" : "ExpressionStatement[17011-17030]:ExpressionStatement[17011-17030]"
    }, {
      "left" : "if (maxRecords < size())",
      "right" : "if (maxRecords < size())",
      "info" : "IfStatement[17131-17329]:IfStatement[17131-17329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17156-17329]:Block[17156-17329]"
    }, {
      "left" : "writer.append(\"\\n|...\");",
      "right" : "writer.append(\"\\n|...\");",
      "info" : "ExpressionStatement[17174-17198]:ExpressionStatement[17174-17198]"
    }, {
      "left" : "writer.append(\"\" + (size() - maxRecords));",
      "right" : "writer.append(\"\" + (size() - maxRecords));",
      "info" : "ExpressionStatement[17215-17257]:ExpressionStatement[17215-17257]"
    }, {
      "left" : "writer.append(\" record(s) truncated...\");",
      "right" : "writer.append(\" record(s) truncated...\");",
      "info" : "ExpressionStatement[17274-17315]:ExpressionStatement[17274-17315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17378-17459]:Block[17378-17459]"
    }, {
      "left" : "throw new IOException(\"Exception while writing TEXT\", e);",
      "right" : "throw new IOException(\"Exception while writing TEXT\", e);",
      "info" : "ThrowStatement[17392-17449]:ThrowStatement[17392-17449]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17471-17478]:Modifier[17471-17478]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17479-17485]:Modifier[17479-17485]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[17486-17491]:Modifier[17486-17491]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[17492-17498]:SimpleType[17492-17498]"
    }, {
      "left" : "alignNumberValue",
      "right" : "alignNumberValue",
      "info" : "SimpleName[17499-17515]:SimpleName[17499-17515]"
    }, {
      "left" : "Integer columnDecimalPlaces",
      "right" : "Integer columnDecimalPlaces",
      "info" : "SingleVariableDeclaration[17516-17543]:SingleVariableDeclaration[17516-17543]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[17545-17557]:SingleVariableDeclaration[17545-17557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17559-18071]:Block[17559-18071]"
    }, {
      "left" : "if (!\"{null}\".equals(value) && columnDecimalPlaces != 0)",
      "right" : "if (!\"{null}\".equals(value) && columnDecimalPlaces != 0)",
      "info" : "IfStatement[17569-18042]:IfStatement[17569-18042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17626-18042]:Block[17626-18042]"
    }, {
      "left" : "int decimalPlaces = getDecimalPlaces(value);",
      "right" : "int decimalPlaces = getDecimalPlaces(value);",
      "info" : "VariableDeclarationStatement[17640-17684]:VariableDeclarationStatement[17640-17684]"
    }, {
      "left" : "int rightPadSize = value.length() + columnDecimalPlaces - decimalPlaces;",
      "right" : "int rightPadSize = value.length() + columnDecimalPlaces - decimalPlaces;",
      "info" : "VariableDeclarationStatement[17697-17769]:VariableDeclarationStatement[17697-17769]"
    }, {
      "left" : "if (decimalPlaces == 0)",
      "right" : "if (decimalPlaces == 0)",
      "info" : "IfStatement[17783-18032]:IfStatement[17783-18032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17807-17944]:Block[17807-17944]"
    }, {
      "left" : "value = rightPad(value, rightPadSize + 1);",
      "right" : "value = rightPad(value, rightPadSize + 1);",
      "info" : "ExpressionStatement[17888-17930]:ExpressionStatement[17888-17930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17962-18032]:Block[17962-18032]"
    }, {
      "left" : "value = rightPad(value, rightPadSize);",
      "right" : "value = rightPad(value, rightPadSize);",
      "info" : "ExpressionStatement[17980-18018]:ExpressionStatement[17980-18018]"
    }, {
      "left" : "return value;",
      "right" : "return value;",
      "info" : "ReturnStatement[18052-18065]:ReturnStatement[18052-18065]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18077-18084]:Modifier[18077-18084]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18085-18091]:Modifier[18085-18091]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18092-18097]:Modifier[18092-18097]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[18098-18101]:PrimitiveType[18098-18101]"
    }, {
      "left" : "getDecimalPlaces",
      "right" : "getDecimalPlaces",
      "info" : "SimpleName[18102-18118]:SimpleName[18102-18118]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[18119-18131]:SingleVariableDeclaration[18119-18131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18133-18345]:Block[18133-18345]"
    }, {
      "left" : "int decimalPlaces = 0;",
      "right" : "int decimalPlaces = 0;",
      "info" : "VariableDeclarationStatement[18143-18165]:VariableDeclarationStatement[18143-18165]"
    }, {
      "left" : "int dotIndex = value.indexOf(\".\");",
      "right" : "int dotIndex = value.indexOf(\".\");",
      "info" : "VariableDeclarationStatement[18175-18209]:VariableDeclarationStatement[18175-18209]"
    }, {
      "left" : "if (dotIndex != -1)",
      "right" : "if (dotIndex != -1)",
      "info" : "IfStatement[18218-18308]:IfStatement[18218-18308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18238-18308]:Block[18238-18308]"
    }, {
      "left" : "decimalPlaces = value.length() - dotIndex - 1;",
      "right" : "decimalPlaces = value.length() - dotIndex - 1;",
      "info" : "ExpressionStatement[18252-18298]:ExpressionStatement[18252-18298]"
    }, {
      "left" : "return decimalPlaces;",
      "right" : "return decimalPlaces;",
      "info" : "ReturnStatement[18318-18339]:ReturnStatement[18318-18339]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18351-18360]:MarkerAnnotation[18351-18360]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18365-18371]:Modifier[18365-18371]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18372-18377]:Modifier[18372-18377]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[18378-18384]:SimpleType[18378-18384]"
    }, {
      "left" : "formatHTML",
      "right" : "formatHTML",
      "info" : "SimpleName[18385-18395]:SimpleName[18385-18395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18398-18517]:Block[18398-18517]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[18408-18449]:VariableDeclarationStatement[18408-18449]"
    }, {
      "left" : "formatHTML(writer);",
      "right" : "formatHTML(writer);",
      "info" : "ExpressionStatement[18458-18477]:ExpressionStatement[18458-18477]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[18486-18511]:ReturnStatement[18486-18511]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18523-18532]:MarkerAnnotation[18523-18532]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18537-18543]:Modifier[18537-18543]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18544-18549]:Modifier[18544-18549]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18550-18554]:PrimitiveType[18550-18554]"
    }, {
      "left" : "formatHTML",
      "right" : "formatHTML",
      "info" : "SimpleName[18555-18565]:SimpleName[18555-18565]"
    }, {
      "left" : "OutputStream stream",
      "right" : "OutputStream stream",
      "info" : "SingleVariableDeclaration[18566-18585]:SingleVariableDeclaration[18566-18585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18587-18646]:Block[18587-18646]"
    }, {
      "left" : "formatHTML(new OutputStreamWriter(stream));",
      "right" : "formatHTML(new OutputStreamWriter(stream));",
      "info" : "ExpressionStatement[18597-18640]:ExpressionStatement[18597-18640]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18652-18661]:MarkerAnnotation[18652-18661]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18666-18672]:Modifier[18666-18672]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[18673-18678]:Modifier[18673-18678]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18679-18683]:PrimitiveType[18679-18683]"
    }, {
      "left" : "formatHTML",
      "right" : "formatHTML",
      "info" : "SimpleName[18684-18694]:SimpleName[18684-18694]"
    }, {
      "left" : "Writer writer",
      "right" : "Writer writer",
      "info" : "SingleVariableDeclaration[18695-18708]:SingleVariableDeclaration[18695-18708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18710-19758]:Block[18710-19758]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[18720-19752]:TryStatement[18720-19752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18724-19632]:Block[18724-19632]"
    }, {
      "left" : "writer.append(\"<table>\");",
      "right" : "writer.append(\"<table>\");",
      "info" : "ExpressionStatement[18738-18763]:ExpressionStatement[18738-18763]"
    }, {
      "left" : "writer.append(\"<thead>\");",
      "right" : "writer.append(\"<thead>\");",
      "info" : "ExpressionStatement[18776-18801]:ExpressionStatement[18776-18801]"
    }, {
      "left" : "writer.append(\"<tr>\");",
      "right" : "writer.append(\"<tr>\");",
      "info" : "ExpressionStatement[18814-18836]:ExpressionStatement[18814-18836]"
    }, {
      "left" : "for (Field<?> field : fields.fields)",
      "right" : "for (Field<?> field : fields.fields)",
      "info" : "EnhancedForStatement[18850-19029]:EnhancedForStatement[18850-19029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18887-19029]:Block[18887-19029]"
    }, {
      "left" : "writer.append(\"<th>\");",
      "right" : "writer.append(\"<th>\");",
      "info" : "ExpressionStatement[18905-18927]:ExpressionStatement[18905-18927]"
    }, {
      "left" : "writer.append(field.getName());",
      "right" : "writer.append(field.getName());",
      "info" : "ExpressionStatement[18944-18975]:ExpressionStatement[18944-18975]"
    }, {
      "left" : "writer.append(\"</th>\");",
      "right" : "writer.append(\"</th>\");",
      "info" : "ExpressionStatement[18992-19015]:ExpressionStatement[18992-19015]"
    }, {
      "left" : "writer.append(\"</tr>\");",
      "right" : "writer.append(\"</tr>\");",
      "info" : "ExpressionStatement[19043-19066]:ExpressionStatement[19043-19066]"
    }, {
      "left" : "writer.append(\"</thead>\");",
      "right" : "writer.append(\"</thead>\");",
      "info" : "ExpressionStatement[19079-19105]:ExpressionStatement[19079-19105]"
    }, {
      "left" : "writer.append(\"<tbody>\");",
      "right" : "writer.append(\"<tbody>\");",
      "info" : "ExpressionStatement[19118-19143]:ExpressionStatement[19118-19143]"
    }, {
      "left" : "for (Record record : this)",
      "right" : "for (Record record : this)",
      "info" : "EnhancedForStatement[19157-19543]:EnhancedForStatement[19157-19543]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19184-19543]:Block[19184-19543]"
    }, {
      "left" : "writer.append(\"<tr>\");",
      "right" : "writer.append(\"<tr>\");",
      "info" : "ExpressionStatement[19202-19224]:ExpressionStatement[19202-19224]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[19242-19488]:ForStatement[19242-19488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19301-19488]:Block[19301-19488]"
    }, {
      "left" : "writer.append(\"<td>\");",
      "right" : "writer.append(\"<td>\");",
      "info" : "ExpressionStatement[19323-19345]:ExpressionStatement[19323-19345]"
    }, {
      "left" : "writer.append(format0(record.getValue(index), false, true));",
      "right" : "writer.append(format0(record.getValue(index), false, true));",
      "info" : "ExpressionStatement[19366-19426]:ExpressionStatement[19366-19426]"
    }, {
      "left" : "writer.append(\"</td>\");",
      "right" : "writer.append(\"</td>\");",
      "info" : "ExpressionStatement[19447-19470]:ExpressionStatement[19447-19470]"
    }, {
      "left" : "writer.append(\"</tr>\");",
      "right" : "writer.append(\"</tr>\");",
      "info" : "ExpressionStatement[19506-19529]:ExpressionStatement[19506-19529]"
    }, {
      "left" : "writer.append(\"</tbody>\");",
      "right" : "writer.append(\"</tbody>\");",
      "info" : "ExpressionStatement[19557-19583]:ExpressionStatement[19557-19583]"
    }, {
      "left" : "writer.append(\"</table>\");",
      "right" : "writer.append(\"</table>\");",
      "info" : "ExpressionStatement[19596-19622]:ExpressionStatement[19596-19622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19671-19752]:Block[19671-19752]"
    }, {
      "left" : "throw new IOException(\"Exception while writing HTML\", e);",
      "right" : "throw new IOException(\"Exception while writing HTML\", e);",
      "info" : "ThrowStatement[19685-19742]:ThrowStatement[19685-19742]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19764-19773]:MarkerAnnotation[20047-20056]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19778-19784]:Modifier[19869-19875]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[19785-19790]:Modifier[19876-19881]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[19791-19797]:SimpleType[19791-19797]"
    }, {
      "left" : "formatCSV",
      "right" : "formatCSV",
      "info" : "SimpleName[19798-19807]:SimpleName[19889-19898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19810-19928]:Block[19915-20041]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[19820-19861]:VariableDeclarationStatement[19925-19966]"
    }, {
      "left" : "formatCSV(writer);",
      "right" : "formatCSV(writer, header);",
      "info" : "ExpressionStatement[19870-19888]:ExpressionStatement[19975-20001]"
    }, {
      "left" : "writer",
      "right" : "writer",
      "info" : "METHOD_INVOCATION_ARGUMENTS[19880-19886]:SimpleName[19985-19991]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[19897-19922]:ReturnStatement[20010-20035]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19934-19943]:MarkerAnnotation[20156-20165]"
    }, {
      "left" : "OutputStream stream",
      "right" : "OutputStream stream",
      "info" : "SingleVariableDeclaration[19976-19995]:SingleVariableDeclaration[20089-20108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19997-20055]:Block[20235-20301]"
    }, {
      "left" : "formatCSV(new OutputStreamWriter(stream));",
      "right" : "formatCSV(new OutputStreamWriter(stream), header);",
      "info" : "ExpressionStatement[20007-20049]:ExpressionStatement[20245-20295]"
    }, {
      "left" : "new OutputStreamWriter(stream)",
      "right" : "new OutputStreamWriter(stream)",
      "info" : "ClassInstanceCreation[20017-20047]:ClassInstanceCreation[20255-20285]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20061-20070]:MarkerAnnotation[20307-20316]"
    }, {
      "left" : "Writer writer",
      "right" : "Writer writer",
      "info" : "SingleVariableDeclaration[20103-20116]:SingleVariableDeclaration[20349-20362]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20167-20176]:MarkerAnnotation[20656-20665]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20181-20187]:Modifier[20670-20676]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[20188-20193]:Modifier[20677-20682]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[20194-20200]:SimpleType[20683-20689]"
    }, {
      "left" : "formatCSV",
      "right" : "formatCSV",
      "info" : "SimpleName[20201-20210]:SimpleName[20690-20699]"
    }, {
      "left" : "char delimiter",
      "right" : "char delimiter",
      "info" : "SingleVariableDeclaration[20211-20225]:SingleVariableDeclaration[20716-20730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20227-20356]:Block[20732-20861]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[20237-20278]:VariableDeclarationStatement[20742-20783]"
    }, {
      "left" : "formatCSV(writer, delimiter);",
      "right" : "formatCSV(writer, delimiter);",
      "info" : "ExpressionStatement[20287-20316]:ExpressionStatement[20792-20821]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[20325-20350]:ReturnStatement[20830-20855]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20362-20371]:MarkerAnnotation[21003-21012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20376-20382]:Modifier[21017-21023]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[20383-20388]:Modifier[21024-21029]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20389-20393]:PrimitiveType[21030-21034]"
    }, {
      "left" : "formatCSV",
      "right" : "formatCSV",
      "info" : "SimpleName[20394-20403]:SimpleName[21035-21044]"
    }, {
      "left" : "OutputStream stream",
      "right" : "OutputStream stream",
      "info" : "SingleVariableDeclaration[20404-20423]:SingleVariableDeclaration[21045-21064]"
    }, {
      "left" : "char delimiter",
      "right" : "char delimiter",
      "info" : "SingleVariableDeclaration[20425-20439]:SingleVariableDeclaration[21082-21096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20441-20510]:Block[21098-21167]"
    }, {
      "left" : "formatCSV(new OutputStreamWriter(stream), delimiter);",
      "right" : "formatCSV(new OutputStreamWriter(stream), delimiter);",
      "info" : "ExpressionStatement[20451-20504]:ExpressionStatement[21108-21161]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20516-20525]:MarkerAnnotation[20540-20549]"
    }, {
      "left" : "Writer writer",
      "right" : "Writer writer",
      "info" : "SingleVariableDeclaration[20558-20571]:SingleVariableDeclaration[20452-20465]"
    }, {
      "left" : "char delimiter",
      "right" : "char delimiter",
      "info" : "SingleVariableDeclaration[20573-20587]:SingleVariableDeclaration[20930-20944]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20644-20653]:MarkerAnnotation[20867-20876]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20658-20664]:Modifier[21616-21622]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[20665-20670]:Modifier[21623-21628]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[20671-20677]:SimpleType[21482-21488]"
    }, {
      "left" : "formatCSV",
      "right" : "formatCSV",
      "info" : "SimpleName[20678-20687]:SimpleName[21636-21645]"
    }, {
      "left" : "char delimiter",
      "right" : "char delimiter",
      "info" : "SingleVariableDeclaration[20688-20702]:SingleVariableDeclaration[21499-21513]"
    }, {
      "left" : "String nullString",
      "right" : "String nullString",
      "info" : "SingleVariableDeclaration[20704-20721]:SingleVariableDeclaration[21515-21532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20723-20864]:Block[21697-21846]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[20733-20774]:VariableDeclarationStatement[21707-21748]"
    }, {
      "left" : "formatCSV(writer, delimiter, nullString);",
      "right" : "formatCSV(writer, header, delimiter, nullString);",
      "info" : "ExpressionStatement[20783-20824]:ExpressionStatement[21757-21806]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[20833-20858]:ReturnStatement[21815-21840]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20870-20879]:MarkerAnnotation[21173-21182]"
    }, {
      "left" : "OutputStream stream",
      "right" : "OutputStream stream",
      "info" : "SingleVariableDeclaration[20912-20931]:SingleVariableDeclaration[21894-21913]"
    }, {
      "left" : "char delimiter",
      "right" : "char delimiter",
      "info" : "SingleVariableDeclaration[20933-20947]:SingleVariableDeclaration[21662-21676]"
    }, {
      "left" : "String nullString",
      "right" : "String nullString",
      "info" : "SingleVariableDeclaration[20949-20966]:SingleVariableDeclaration[21678-21695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20968-21049]:Block[22133-22222]"
    }, {
      "left" : "formatCSV(new OutputStreamWriter(stream), delimiter, nullString);",
      "right" : "formatCSV(new OutputStreamWriter(stream), header, delimiter, nullString);",
      "info" : "ExpressionStatement[20978-21043]:ExpressionStatement[22143-22216]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21055-21064]:MarkerAnnotation[22389-22398]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21069-21075]:Modifier[22403-22409]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[21076-21081]:Modifier[22410-22415]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21082-21086]:PrimitiveType[22416-22420]"
    }, {
      "left" : "formatCSV",
      "right" : "formatCSV",
      "info" : "SimpleName[21087-21096]:SimpleName[22421-22430]"
    }, {
      "left" : "Writer writer",
      "right" : "Writer writer",
      "info" : "SingleVariableDeclaration[21097-21110]:SingleVariableDeclaration[22431-22444]"
    }, {
      "left" : "char delimiter",
      "right" : "char delimiter",
      "info" : "SingleVariableDeclaration[21112-21126]:SingleVariableDeclaration[22462-22476]"
    }, {
      "left" : "String nullString",
      "right" : "String nullString",
      "info" : "SingleVariableDeclaration[21128-21145]:SingleVariableDeclaration[22478-22495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21147-21989]:Block[22497-23407]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[21157-21983]:TryStatement[22507-23401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21161-21864]:Block[22511-23282]"
    }, {
      "left" : "String sep1 = \"\";",
      "right" : "String sep1 = \"\";",
      "info" : "VariableDeclarationStatement[21175-21192]:VariableDeclarationStatement[22555-22572]"
    }, {
      "left" : "for (Field<?> field : fields.fields)",
      "right" : "for (Field<?> field : fields.fields)",
      "info" : "EnhancedForStatement[21205-21413]:EnhancedForStatement[22589-22813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21242-21413]:Block[22626-22813]"
    }, {
      "left" : "writer.append(sep1);",
      "right" : "writer.append(sep1);",
      "info" : "ExpressionStatement[21260-21280]:ExpressionStatement[22648-22668]"
    }, {
      "left" : "writer.append(formatCSV0(field.getName(), \"\"));",
      "right" : "writer.append(formatCSV0(field.getName(), \"\"));",
      "info" : "ExpressionStatement[21297-21344]:ExpressionStatement[22689-22736]"
    }, {
      "left" : "sep1 = Character.toString(delimiter);",
      "right" : "sep1 = Character.toString(delimiter);",
      "info" : "ExpressionStatement[21362-21399]:ExpressionStatement[22758-22795]"
    }, {
      "left" : "writer.append(\"\\n\");",
      "right" : "writer.append(\"\\n\");",
      "info" : "ExpressionStatement[21427-21447]:ExpressionStatement[22831-22851]"
    }, {
      "left" : "for (Record record : this)",
      "right" : "for (Record record : this)",
      "info" : "EnhancedForStatement[21461-21854]:EnhancedForStatement[22879-23272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21488-21854]:Block[22906-23272]"
    }, {
      "left" : "String sep2 = \"\";",
      "right" : "String sep2 = \"\";",
      "info" : "VariableDeclarationStatement[21506-21523]:VariableDeclarationStatement[22924-22941]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[21541-21802]:ForStatement[22959-23220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21600-21802]:Block[23018-23220]"
    }, {
      "left" : "writer.append(sep2);",
      "right" : "writer.append(sep2);",
      "info" : "ExpressionStatement[21622-21642]:ExpressionStatement[23040-23060]"
    }, {
      "left" : "writer.append(formatCSV0(record.getValue(index), nullString));",
      "right" : "writer.append(formatCSV0(record.getValue(index), nullString));",
      "info" : "ExpressionStatement[21663-21725]:ExpressionStatement[23081-23143]"
    }, {
      "left" : "sep2 = Character.toString(delimiter);",
      "right" : "sep2 = Character.toString(delimiter);",
      "info" : "ExpressionStatement[21747-21784]:ExpressionStatement[23165-23202]"
    }, {
      "left" : "writer.append(\"\\n\");",
      "right" : "writer.append(\"\\n\");",
      "info" : "ExpressionStatement[21820-21840]:ExpressionStatement[23238-23258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21903-21983]:Block[23321-23401]"
    }, {
      "left" : "throw new IOException(\"Exception while writing CSV\", e);",
      "right" : "throw new IOException(\"Exception while writing CSV\", e);",
      "info" : "ThrowStatement[21917-21973]:ThrowStatement[23335-23391]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21995-22002]:Modifier[23413-23420]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[22003-22008]:Modifier[23421-23426]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[22009-22015]:SimpleType[23427-23433]"
    }, {
      "left" : "formatCSV0",
      "right" : "formatCSV0",
      "info" : "SimpleName[22016-22026]:SimpleName[23434-23444]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[22027-22039]:SingleVariableDeclaration[23445-23457]"
    }, {
      "left" : "String nullString",
      "right" : "String nullString",
      "info" : "SingleVariableDeclaration[22041-22058]:SingleVariableDeclaration[23459-23476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22060-22627]:Block[23478-24045]"
    }, {
      "left" : "if (value == null || \"\".equals(value))",
      "right" : "if (value == null || \"\".equals(value))",
      "info" : "IfStatement[22112-22326]:IfStatement[23530-23744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22151-22326]:Block[23569-23744]"
    }, {
      "left" : "if (StringUtils.isEmpty(nullString))",
      "right" : "if (StringUtils.isEmpty(nullString))",
      "info" : "IfStatement[22165-22316]:IfStatement[23583-23734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22202-22248]:Block[23620-23666]"
    }, {
      "left" : "return \"\\\"\\\"\";",
      "right" : "return \"\\\"\\\"\";",
      "info" : "ReturnStatement[22220-22234]:ReturnStatement[23638-23652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22266-22316]:Block[23684-23734]"
    }, {
      "left" : "return nullString;",
      "right" : "return nullString;",
      "info" : "ReturnStatement[22284-22302]:ReturnStatement[23702-23720]"
    }, {
      "left" : "String result = format0(value, false, false);",
      "right" : "String result = format0(value, false, false);",
      "info" : "VariableDeclarationStatement[22336-22381]:VariableDeclarationStatement[23754-23799]"
    }, {
      "left" : "if (StringUtils.containsAny(result, ',', ';', '\\t', '\"', '\\n', '\\r', '\\'', '\\\\'))",
      "right" : "if (StringUtils.containsAny(result, ',', ';', '\\t', '\"', '\\n', '\\r', '\\'', '\\\\'))",
      "info" : "IfStatement[22391-22621]:IfStatement[23809-24039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22473-22569]:Block[23891-23987]"
    }, {
      "left" : "return \"\\\"\" + result.replace(\"\\\\\", \"\\\\\\\\\").replace(\"\\\"\", \"\\\"\\\"\") + \"\\\"\";",
      "right" : "return \"\\\"\" + result.replace(\"\\\\\", \"\\\\\\\\\").replace(\"\\\"\", \"\\\"\\\"\") + \"\\\"\";",
      "info" : "ReturnStatement[22487-22559]:ReturnStatement[23905-23977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22583-22621]:Block[24001-24039]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[22597-22611]:ReturnStatement[24015-24029]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[22633-22640]:Modifier[24051-24058]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[22641-22646]:Modifier[24059-24064]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[22647-22653]:SimpleType[24065-24071]"
    }, {
      "left" : "formatJSON0",
      "right" : "formatJSON0",
      "info" : "SimpleName[22654-22665]:SimpleName[24072-24083]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[22666-22678]:SingleVariableDeclaration[24084-24096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22680-22819]:Block[24098-24237]"
    }, {
      "left" : "if (value instanceof byte[])",
      "right" : "if (value instanceof byte[])",
      "info" : "IfStatement[22690-22790]:IfStatement[24108-24208]"
    }, {
      "left" : "return DatatypeConverter.printBase64Binary((byte[]) value);",
      "right" : "return DatatypeConverter.printBase64Binary((byte[]) value);",
      "info" : "ReturnStatement[22731-22790]:ReturnStatement[24149-24208]"
    }, {
      "left" : "return value;",
      "right" : "return value;",
      "info" : "ReturnStatement[22800-22813]:ReturnStatement[24218-24231]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23028-23035]:Modifier[24446-24453]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[23036-23042]:Modifier[24454-24460]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[23043-23048]:Modifier[24461-24466]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[23049-23055]:SimpleType[24467-24473]"
    }, {
      "left" : "format0",
      "right" : "format0",
      "info" : "SimpleName[23056-23063]:SimpleName[24474-24481]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[23064-23076]:SingleVariableDeclaration[24482-24494]"
    }, {
      "left" : "boolean changed",
      "right" : "boolean changed",
      "info" : "SingleVariableDeclaration[23078-23093]:SingleVariableDeclaration[24496-24511]"
    }, {
      "left" : "boolean visual",
      "right" : "boolean visual",
      "info" : "SingleVariableDeclaration[23095-23109]:SingleVariableDeclaration[24513-24527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23111-23853]:Block[24529-25271]"
    }, {
      "left" : "String formatted = changed && visual ? \"*\" : \"\";",
      "right" : "String formatted = changed && visual ? \"*\" : \"\";",
      "info" : "VariableDeclarationStatement[23121-23169]:VariableDeclarationStatement[24539-24587]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[23179-23820]:IfStatement[24597-25238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23198-23260]:Block[24616-24678]"
    }, {
      "left" : "formatted += visual ? \"{null}\" : null;",
      "right" : "formatted += visual ? \"{null}\" : null;",
      "info" : "ExpressionStatement[23212-23250]:ExpressionStatement[24630-24668]"
    }, {
      "left" : "if (value.getClass() == byte[].class)",
      "right" : "if (value.getClass() == byte[].class)",
      "info" : "IfStatement[23274-23820]:IfStatement[24692-25238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23312-23401]:Block[24730-24819]"
    }, {
      "left" : "formatted += DatatypeConverter.printBase64Binary((byte[]) value);",
      "right" : "formatted += DatatypeConverter.printBase64Binary((byte[]) value);",
      "info" : "ExpressionStatement[23326-23391]:ExpressionStatement[24744-24809]"
    }, {
      "left" : "if (value.getClass().isArray())",
      "right" : "if (value.getClass().isArray())",
      "info" : "IfStatement[23415-23820]:IfStatement[24833-25238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23447-23518]:Block[24865-24936]"
    }, {
      "left" : "formatted += Arrays.toString((Object[]) value);",
      "right" : "formatted += Arrays.toString((Object[]) value);",
      "info" : "ExpressionStatement[23461-23508]:ExpressionStatement[24879-24926]"
    }, {
      "left" : "if (value instanceof EnumType)",
      "right" : "if (value instanceof EnumType)",
      "info" : "IfStatement[23532-23820]:IfStatement[24950-25238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23563-23632]:Block[24981-25050]"
    }, {
      "left" : "formatted += ((EnumType) value).getLiteral();",
      "right" : "formatted += ((EnumType) value).getLiteral();",
      "info" : "ExpressionStatement[23577-23622]:ExpressionStatement[24995-25040]"
    }, {
      "left" : "if (value instanceof Record)",
      "right" : "if (value instanceof Record)",
      "info" : "IfStatement[23646-23820]:IfStatement[25064-25238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23675-23752]:Block[25093-25170]"
    }, {
      "left" : "formatted += ((Record) value).valuesRow().toString();",
      "right" : "formatted += ((Record) value).valuesRow().toString();",
      "info" : "ExpressionStatement[23689-23742]:ExpressionStatement[25107-25160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23766-23820]:Block[25184-25238]"
    }, {
      "left" : "formatted += value.toString();",
      "right" : "formatted += value.toString();",
      "info" : "ExpressionStatement[23780-23810]:ExpressionStatement[25198-25228]"
    }, {
      "left" : "return formatted;",
      "right" : "return formatted;",
      "info" : "ReturnStatement[23830-23847]:ReturnStatement[25248-25265]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23859-23868]:MarkerAnnotation[25277-25286]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23873-23879]:Modifier[25291-25297]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[23880-23885]:Modifier[25298-25303]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[23886-23892]:SimpleType[25304-25310]"
    }, {
      "left" : "formatJSON",
      "right" : "formatJSON",
      "info" : "SimpleName[23893-23903]:SimpleName[25311-25321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23906-24025]:Block[25324-25443]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[23916-23957]:VariableDeclarationStatement[25334-25375]"
    }, {
      "left" : "formatJSON(writer);",
      "right" : "formatJSON(writer);",
      "info" : "ExpressionStatement[23966-23985]:ExpressionStatement[25384-25403]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[23994-24019]:ReturnStatement[25412-25437]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24031-24040]:MarkerAnnotation[25449-25458]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24045-24051]:Modifier[25463-25469]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[24052-24057]:Modifier[25470-25475]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24058-24062]:PrimitiveType[25476-25480]"
    }, {
      "left" : "formatJSON",
      "right" : "formatJSON",
      "info" : "SimpleName[24063-24073]:SimpleName[25481-25491]"
    }, {
      "left" : "OutputStream stream",
      "right" : "OutputStream stream",
      "info" : "SingleVariableDeclaration[24074-24093]:SingleVariableDeclaration[25492-25511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24095-24154]:Block[25513-25572]"
    }, {
      "left" : "formatJSON(new OutputStreamWriter(stream));",
      "right" : "formatJSON(new OutputStreamWriter(stream));",
      "info" : "ExpressionStatement[24105-24148]:ExpressionStatement[25523-25566]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24160-24169]:MarkerAnnotation[25578-25587]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24174-24180]:Modifier[25592-25598]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[24181-24186]:Modifier[25599-25604]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24187-24191]:PrimitiveType[25605-25609]"
    }, {
      "left" : "formatJSON",
      "right" : "formatJSON",
      "info" : "SimpleName[24192-24202]:SimpleName[25610-25620]"
    }, {
      "left" : "Writer writer",
      "right" : "Writer writer",
      "info" : "SingleVariableDeclaration[24203-24216]:SingleVariableDeclaration[25621-25634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24218-25379]:Block[25636-26797]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[24228-25373]:TryStatement[25646-26791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24232-25253]:Block[25650-26671]"
    }, {
      "left" : "List<Map<String, String>> f = new ArrayList<Map<String, String>>();",
      "right" : "List<Map<String, String>> f = new ArrayList<Map<String, String>>();",
      "info" : "VariableDeclarationStatement[24246-24313]:VariableDeclarationStatement[25664-25731]"
    }, {
      "left" : "List<List<Object>> r = new ArrayList<List<Object>>();",
      "right" : "List<List<Object>> r = new ArrayList<List<Object>>();",
      "info" : "VariableDeclarationStatement[24326-24379]:VariableDeclarationStatement[25744-25797]"
    }, {
      "left" : "Map<String, String> fieldMap;",
      "right" : "Map<String, String> fieldMap;",
      "info" : "VariableDeclarationStatement[24393-24422]:VariableDeclarationStatement[25811-25840]"
    }, {
      "left" : "for (Field<?> field : fields.fields)",
      "right" : "for (Field<?> field : fields.fields)",
      "info" : "EnhancedForStatement[24435-24727]:EnhancedForStatement[25853-26145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24472-24727]:Block[25890-26145]"
    }, {
      "left" : "fieldMap = new LinkedHashMap<String, String>();",
      "right" : "fieldMap = new LinkedHashMap<String, String>();",
      "info" : "ExpressionStatement[24490-24537]:ExpressionStatement[25908-25955]"
    }, {
      "left" : "fieldMap.put(\"name\", field.getName());",
      "right" : "fieldMap.put(\"name\", field.getName());",
      "info" : "ExpressionStatement[24554-24592]:ExpressionStatement[25972-26010]"
    }, {
      "left" : "fieldMap.put(\"type\", field.getDataType().getTypeName().toUpperCase());",
      "right" : "fieldMap.put(\"type\", field.getDataType().getTypeName().toUpperCase());",
      "info" : "ExpressionStatement[24609-24679]:ExpressionStatement[26027-26097]"
    }, {
      "left" : "f.add(fieldMap);",
      "right" : "f.add(fieldMap);",
      "info" : "ExpressionStatement[24697-24713]:ExpressionStatement[26115-26131]"
    }, {
      "left" : "for (Record record : this)",
      "right" : "for (Record record : this)",
      "info" : "EnhancedForStatement[24741-25037]:EnhancedForStatement[26159-26455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24768-25037]:Block[26186-26455]"
    }, {
      "left" : "List<Object> list = new ArrayList<Object>();",
      "right" : "List<Object> list = new ArrayList<Object>();",
      "info" : "VariableDeclarationStatement[24786-24830]:VariableDeclarationStatement[26204-26248]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[24848-24993]:ForStatement[26266-26411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24907-24993]:Block[26325-26411]"
    }, {
      "left" : "list.add(formatJSON0(record.getValue(index)));",
      "right" : "list.add(formatJSON0(record.getValue(index)));",
      "info" : "ExpressionStatement[24929-24975]:ExpressionStatement[26347-26393]"
    }, {
      "left" : "r.add(list);",
      "right" : "r.add(list);",
      "info" : "ExpressionStatement[25011-25023]:ExpressionStatement[26429-26441]"
    }, {
      "left" : "Map<String, List<?>> map = new LinkedHashMap<String, List<?>>();",
      "right" : "Map<String, List<?>> map = new LinkedHashMap<String, List<?>>();",
      "info" : "VariableDeclarationStatement[25051-25115]:VariableDeclarationStatement[26469-26533]"
    }, {
      "left" : "map.put(\"fields\", f);",
      "right" : "map.put(\"fields\", f);",
      "info" : "ExpressionStatement[25129-25150]:ExpressionStatement[26547-26568]"
    }, {
      "left" : "map.put(\"records\", r);",
      "right" : "map.put(\"records\", r);",
      "info" : "ExpressionStatement[25163-25185]:ExpressionStatement[26581-26603]"
    }, {
      "left" : "writer.append(JSONObject.toJSONString(map));",
      "right" : "writer.append(JSONObject.toJSONString(map));",
      "info" : "ExpressionStatement[25199-25243]:ExpressionStatement[26617-26661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25292-25373]:Block[26710-26791]"
    }, {
      "left" : "throw new IOException(\"Exception while writing JSON\", e);",
      "right" : "throw new IOException(\"Exception while writing JSON\", e);",
      "info" : "ThrowStatement[25306-25363]:ThrowStatement[26724-26781]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25385-25394]:MarkerAnnotation[26803-26812]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25399-25405]:Modifier[26817-26823]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[25406-25411]:Modifier[26824-26829]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[25412-25418]:SimpleType[26830-26836]"
    }, {
      "left" : "formatXML",
      "right" : "formatXML",
      "info" : "SimpleName[25419-25428]:SimpleName[26837-26846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25431-25549]:Block[26849-26967]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[25441-25482]:VariableDeclarationStatement[26859-26900]"
    }, {
      "left" : "formatXML(writer);",
      "right" : "formatXML(writer);",
      "info" : "ExpressionStatement[25491-25509]:ExpressionStatement[26909-26927]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[25518-25543]:ReturnStatement[26936-26961]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25555-25564]:MarkerAnnotation[26973-26982]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25569-25575]:Modifier[26987-26993]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[25576-25581]:Modifier[26994-26999]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25582-25586]:PrimitiveType[27000-27004]"
    }, {
      "left" : "formatXML",
      "right" : "formatXML",
      "info" : "SimpleName[25587-25596]:SimpleName[27005-27014]"
    }, {
      "left" : "OutputStream stream",
      "right" : "OutputStream stream",
      "info" : "SingleVariableDeclaration[25597-25616]:SingleVariableDeclaration[27015-27034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25618-25676]:Block[27036-27094]"
    }, {
      "left" : "formatXML(new OutputStreamWriter(stream));",
      "right" : "formatXML(new OutputStreamWriter(stream));",
      "info" : "ExpressionStatement[25628-25670]:ExpressionStatement[27046-27088]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25682-25691]:MarkerAnnotation[27100-27109]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25696-25702]:Modifier[27114-27120]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[25703-25708]:Modifier[27121-27126]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25709-25713]:PrimitiveType[27127-27131]"
    }, {
      "left" : "formatXML",
      "right" : "formatXML",
      "info" : "SimpleName[25714-25723]:SimpleName[27132-27141]"
    }, {
      "left" : "Writer writer",
      "right" : "Writer writer",
      "info" : "SingleVariableDeclaration[25724-25737]:SingleVariableDeclaration[27142-27155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25739-27365]:Block[27157-28783]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[25749-27359]:TryStatement[27167-28777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25753-27240]:Block[27171-28658]"
    }, {
      "left" : "writer.append(\"<result xmlns=\\\"http://www.jooq.org/xsd/jooq-export-2.6.0.xsd\\\">\");",
      "right" : "writer.append(\"<result xmlns=\\\"http://www.jooq.org/xsd/jooq-export-2.6.0.xsd\\\">\");",
      "info" : "ExpressionStatement[25767-25849]:ExpressionStatement[27185-27267]"
    }, {
      "left" : "writer.append(\"<fields>\");",
      "right" : "writer.append(\"<fields>\");",
      "info" : "ExpressionStatement[25862-25888]:ExpressionStatement[27280-27306]"
    }, {
      "left" : "for (Field<?> field : fields.fields)",
      "right" : "for (Field<?> field : fields.fields)",
      "info" : "EnhancedForStatement[25902-26261]:EnhancedForStatement[27320-27679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25939-26261]:Block[27357-27679]"
    }, {
      "left" : "writer.append(\"<field name=\\\"\");",
      "right" : "writer.append(\"<field name=\\\"\");",
      "info" : "ExpressionStatement[25957-25989]:ExpressionStatement[27375-27407]"
    }, {
      "left" : "writer.append(escapeXML(field.getName()));",
      "right" : "writer.append(escapeXML(field.getName()));",
      "info" : "ExpressionStatement[26006-26048]:ExpressionStatement[27424-27466]"
    }, {
      "left" : "writer.append(\"\\\" \");",
      "right" : "writer.append(\"\\\" \");",
      "info" : "ExpressionStatement[26065-26086]:ExpressionStatement[27483-27504]"
    }, {
      "left" : "writer.append(\"type=\\\"\");",
      "right" : "writer.append(\"type=\\\"\");",
      "info" : "ExpressionStatement[26103-26128]:ExpressionStatement[27521-27546]"
    }, {
      "left" : "writer.append(field.getDataType().getTypeName().toUpperCase());",
      "right" : "writer.append(field.getDataType().getTypeName().toUpperCase());",
      "info" : "ExpressionStatement[26145-26208]:ExpressionStatement[27563-27626]"
    }, {
      "left" : "writer.append(\"\\\"/>\");",
      "right" : "writer.append(\"\\\"/>\");",
      "info" : "ExpressionStatement[26225-26247]:ExpressionStatement[27643-27665]"
    }, {
      "left" : "writer.append(\"</fields>\");",
      "right" : "writer.append(\"</fields>\");",
      "info" : "ExpressionStatement[26275-26302]:ExpressionStatement[27693-27720]"
    }, {
      "left" : "writer.append(\"<records>\");",
      "right" : "writer.append(\"<records>\");",
      "info" : "ExpressionStatement[26315-26342]:ExpressionStatement[27733-27760]"
    }, {
      "left" : "for (Record record : this)",
      "right" : "for (Record record : this)",
      "info" : "EnhancedForStatement[26356-27148]:EnhancedForStatement[27774-28566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26383-27148]:Block[27801-28566]"
    }, {
      "left" : "writer.append(\"<record>\");",
      "right" : "writer.append(\"<record>\");",
      "info" : "ExpressionStatement[26401-26427]:ExpressionStatement[27819-27845]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[26445-27089]:ForStatement[27863-28507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26504-27089]:Block[27922-28507]"
    }, {
      "left" : "Object value = record.getValue(index);",
      "right" : "Object value = record.getValue(index);",
      "info" : "VariableDeclarationStatement[26526-26564]:VariableDeclarationStatement[27944-27982]"
    }, {
      "left" : "writer.append(\"<value field=\\\"\");",
      "right" : "writer.append(\"<value field=\\\"\");",
      "info" : "ExpressionStatement[26586-26619]:ExpressionStatement[28004-28037]"
    }, {
      "left" : "writer.append(escapeXML(fields.fields[index].getName()));",
      "right" : "writer.append(escapeXML(fields.fields[index].getName()));",
      "info" : "ExpressionStatement[26640-26697]:ExpressionStatement[28058-28115]"
    }, {
      "left" : "writer.append(\"\\\"\");",
      "right" : "writer.append(\"\\\"\");",
      "info" : "ExpressionStatement[26718-26738]:ExpressionStatement[28136-28156]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[26760-27071]:IfStatement[28178-28489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26779-26847]:Block[28197-28265]"
    }, {
      "left" : "writer.append(\"/>\");",
      "right" : "writer.append(\"/>\");",
      "info" : "ExpressionStatement[26805-26825]:ExpressionStatement[28223-28243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26873-27071]:Block[28291-28489]"
    }, {
      "left" : "writer.append(\">\");",
      "right" : "writer.append(\">\");",
      "info" : "ExpressionStatement[26899-26918]:ExpressionStatement[28317-28336]"
    }, {
      "left" : "writer.append(escapeXML(format0(value, false, false)));",
      "right" : "writer.append(escapeXML(format0(value, false, false)));",
      "info" : "ExpressionStatement[26943-26998]:ExpressionStatement[28361-28416]"
    }, {
      "left" : "writer.append(\"</value>\");",
      "right" : "writer.append(\"</value>\");",
      "info" : "ExpressionStatement[27023-27049]:ExpressionStatement[28441-28467]"
    }, {
      "left" : "writer.append(\"</record>\");",
      "right" : "writer.append(\"</record>\");",
      "info" : "ExpressionStatement[27107-27134]:ExpressionStatement[28525-28552]"
    }, {
      "left" : "writer.append(\"</records>\");",
      "right" : "writer.append(\"</records>\");",
      "info" : "ExpressionStatement[27162-27190]:ExpressionStatement[28580-28608]"
    }, {
      "left" : "writer.append(\"</result>\");",
      "right" : "writer.append(\"</result>\");",
      "info" : "ExpressionStatement[27203-27230]:ExpressionStatement[28621-28648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27279-27359]:Block[28697-28777]"
    }, {
      "left" : "throw new IOException(\"Exception while writing XML\", e);",
      "right" : "throw new IOException(\"Exception while writing XML\", e);",
      "info" : "ThrowStatement[27293-27349]:ThrowStatement[28711-28767]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27371-27380]:MarkerAnnotation[28789-28798]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27385-27391]:Modifier[28803-28809]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[27392-27397]:Modifier[28810-28815]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[27398-27404]:SimpleType[28816-28822]"
    }, {
      "left" : "formatInsert",
      "right" : "formatInsert",
      "info" : "SimpleName[27405-27417]:SimpleName[28823-28835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27420-27541]:Block[28838-28959]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[27430-27471]:VariableDeclarationStatement[28848-28889]"
    }, {
      "left" : "formatInsert(writer);",
      "right" : "formatInsert(writer);",
      "info" : "ExpressionStatement[27480-27501]:ExpressionStatement[28898-28919]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[27510-27535]:ReturnStatement[28928-28953]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27547-27556]:MarkerAnnotation[28965-28974]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27561-27567]:Modifier[28979-28985]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[27568-27573]:Modifier[28986-28991]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27574-27578]:PrimitiveType[28992-28996]"
    }, {
      "left" : "formatInsert",
      "right" : "formatInsert",
      "info" : "SimpleName[27579-27591]:SimpleName[28997-29009]"
    }, {
      "left" : "OutputStream stream",
      "right" : "OutputStream stream",
      "info" : "SingleVariableDeclaration[27592-27611]:SingleVariableDeclaration[29010-29029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27613-27674]:Block[29031-29092]"
    }, {
      "left" : "formatInsert(new OutputStreamWriter(stream));",
      "right" : "formatInsert(new OutputStreamWriter(stream));",
      "info" : "ExpressionStatement[27623-27668]:ExpressionStatement[29041-29086]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27680-27689]:MarkerAnnotation[29098-29107]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27694-27700]:Modifier[29112-29118]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[27701-27706]:Modifier[29119-29124]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27707-27711]:PrimitiveType[29125-29129]"
    }, {
      "left" : "formatInsert",
      "right" : "formatInsert",
      "info" : "SimpleName[27712-27724]:SimpleName[29130-29142]"
    }, {
      "left" : "Writer writer",
      "right" : "Writer writer",
      "info" : "SingleVariableDeclaration[27725-27738]:SingleVariableDeclaration[29143-29156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27740-28044]:Block[29158-29462]"
    }, {
      "left" : "Table<?> table = null;",
      "right" : "Table<?> table = null;",
      "info" : "VariableDeclarationStatement[27750-27772]:VariableDeclarationStatement[29168-29190]"
    }, {
      "left" : "if (records.size() > 0 && records.get(0) instanceof TableRecord)",
      "right" : "if (records.size() > 0 && records.get(0) instanceof TableRecord)",
      "info" : "IfStatement[27782-27912]:IfStatement[29200-29330]"
    }, {
      "left" : "table = ((TableRecord<?>) records.get(0)).getTable();",
      "right" : "table = ((TableRecord<?>) records.get(0)).getTable();",
      "info" : "ExpressionStatement[27859-27912]:ExpressionStatement[29277-29330]"
    }, {
      "left" : "if (table == null)",
      "right" : "if (table == null)",
      "info" : "IfStatement[27922-27990]:IfStatement[29340-29408]"
    }, {
      "left" : "table = table(name(\"UNKNOWN_TABLE\"));",
      "right" : "table = table(name(\"UNKNOWN_TABLE\"));",
      "info" : "ExpressionStatement[27953-27990]:ExpressionStatement[29371-29408]"
    }, {
      "left" : "formatInsert(writer, table, fields());",
      "right" : "formatInsert(writer, table, fields());",
      "info" : "ExpressionStatement[28000-28038]:ExpressionStatement[29418-29456]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28050-28059]:MarkerAnnotation[29468-29477]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28064-28070]:Modifier[29482-29488]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[28071-28076]:Modifier[29489-29494]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[28077-28083]:SimpleType[29495-29501]"
    }, {
      "left" : "formatInsert",
      "right" : "formatInsert",
      "info" : "SimpleName[28084-28096]:SimpleName[29502-29514]"
    }, {
      "left" : "Table<?> table",
      "right" : "Table<?> table",
      "info" : "SingleVariableDeclaration[28097-28111]:SingleVariableDeclaration[29515-29529]"
    }, {
      "left" : "Field<?>... f",
      "right" : "Field<?>... f",
      "info" : "SingleVariableDeclaration[28113-28126]:SingleVariableDeclaration[29531-29544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28128-28259]:Block[29546-29677]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[28138-28179]:VariableDeclarationStatement[29556-29597]"
    }, {
      "left" : "formatInsert(writer, table, f);",
      "right" : "formatInsert(writer, table, f);",
      "info" : "ExpressionStatement[28188-28219]:ExpressionStatement[29606-29637]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[28228-28253]:ReturnStatement[29646-29671]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28265-28274]:MarkerAnnotation[29683-29692]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28279-28285]:Modifier[29697-29703]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[28286-28291]:Modifier[29704-29709]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28292-28296]:PrimitiveType[29710-29714]"
    }, {
      "left" : "formatInsert",
      "right" : "formatInsert",
      "info" : "SimpleName[28297-28309]:SimpleName[29715-29727]"
    }, {
      "left" : "OutputStream stream",
      "right" : "OutputStream stream",
      "info" : "SingleVariableDeclaration[28310-28329]:SingleVariableDeclaration[29728-29747]"
    }, {
      "left" : "Table<?> table",
      "right" : "Table<?> table",
      "info" : "SingleVariableDeclaration[28331-28345]:SingleVariableDeclaration[29749-29763]"
    }, {
      "left" : "Field<?>... f",
      "right" : "Field<?>... f",
      "info" : "SingleVariableDeclaration[28347-28360]:SingleVariableDeclaration[29765-29778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28362-28433]:Block[29780-29851]"
    }, {
      "left" : "formatInsert(new OutputStreamWriter(stream), table, f);",
      "right" : "formatInsert(new OutputStreamWriter(stream), table, f);",
      "info" : "ExpressionStatement[28372-28427]:ExpressionStatement[29790-29845]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28439-28448]:MarkerAnnotation[29857-29866]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28453-28459]:Modifier[29871-29877]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[28460-28465]:Modifier[29878-29883]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28466-28470]:PrimitiveType[29884-29888]"
    }, {
      "left" : "formatInsert",
      "right" : "formatInsert",
      "info" : "SimpleName[28471-28483]:SimpleName[29889-29901]"
    }, {
      "left" : "Writer writer",
      "right" : "Writer writer",
      "info" : "SingleVariableDeclaration[28484-28497]:SingleVariableDeclaration[29902-29915]"
    }, {
      "left" : "Table<?> table",
      "right" : "Table<?> table",
      "info" : "SingleVariableDeclaration[28499-28513]:SingleVariableDeclaration[29917-29931]"
    }, {
      "left" : "Field<?>... f",
      "right" : "Field<?>... f",
      "info" : "SingleVariableDeclaration[28515-28528]:SingleVariableDeclaration[29933-29946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28530-28925]:Block[29948-30343]"
    }, {
      "left" : "DSLContext ctx = DSL.using(configuration());",
      "right" : "DSLContext ctx = DSL.using(configuration());",
      "info" : "VariableDeclarationStatement[28540-28584]:VariableDeclarationStatement[29958-30002]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[28594-28919]:TryStatement[30012-30337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28598-28796]:Block[30016-30214]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[28612-28786]:EnhancedForStatement[30030-30204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28634-28786]:Block[30052-30204]"
    }, {
      "left" : "writer.append(ctx.renderInlined(insertInto(table, f).values(record.intoArray())));",
      "right" : "writer.append(ctx.renderInlined(insertInto(table, f).values(record.intoArray())));",
      "info" : "ExpressionStatement[28652-28734]:ExpressionStatement[30070-30152]"
    }, {
      "left" : "writer.append(\";\\n\");",
      "right" : "writer.append(\";\\n\");",
      "info" : "ExpressionStatement[28751-28772]:ExpressionStatement[30169-30190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28835-28919]:Block[30253-30337]"
    }, {
      "left" : "throw new IOException(\"Exception while writing INSERTs\", e);",
      "right" : "throw new IOException(\"Exception while writing INSERTs\", e);",
      "info" : "ThrowStatement[28849-28909]:ThrowStatement[30267-30327]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[28931-28940]:MarkerAnnotation[30349-30358]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28945-28951]:Modifier[30363-30369]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[28952-28957]:Modifier[30370-30375]"
    }, {
      "left" : "Document",
      "right" : "Document",
      "info" : "SimpleType[28958-28966]:SimpleType[30376-30384]"
    }, {
      "left" : "intoXML",
      "right" : "intoXML",
      "info" : "SimpleName[28967-28974]:SimpleName[30385-30392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28977-30819]:Block[30395-32237]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[28987-30813]:TryStatement[30405-32231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28991-30701]:Block[30409-32119]"
    }, {
      "left" : "DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
      "right" : "DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
      "info" : "VariableDeclarationStatement[29005-29075]:VariableDeclarationStatement[30423-30493]"
    }, {
      "left" : "DocumentBuilder builder = factory.newDocumentBuilder();",
      "right" : "DocumentBuilder builder = factory.newDocumentBuilder();",
      "info" : "VariableDeclarationStatement[29088-29143]:VariableDeclarationStatement[30506-30561]"
    }, {
      "left" : "Document document = builder.newDocument();",
      "right" : "Document document = builder.newDocument();",
      "info" : "VariableDeclarationStatement[29156-29198]:VariableDeclarationStatement[30574-30616]"
    }, {
      "left" : "Element eResult = document.createElement(\"result\");",
      "right" : "Element eResult = document.createElement(\"result\");",
      "info" : "VariableDeclarationStatement[29212-29263]:VariableDeclarationStatement[30630-30681]"
    }, {
      "left" : "eResult.setAttribute(\"xmlns\", \"http://www.jooq.org/xsd/jooq-export-2.6.0.xsd\");",
      "right" : "eResult.setAttribute(\"xmlns\", \"http://www.jooq.org/xsd/jooq-export-2.6.0.xsd\");",
      "info" : "ExpressionStatement[29276-29355]:ExpressionStatement[30694-30773]"
    }, {
      "left" : "document.appendChild(eResult);",
      "right" : "document.appendChild(eResult);",
      "info" : "ExpressionStatement[29368-29398]:ExpressionStatement[30786-30816]"
    }, {
      "left" : "Element eFields = document.createElement(\"fields\");",
      "right" : "Element eFields = document.createElement(\"fields\");",
      "info" : "VariableDeclarationStatement[29412-29463]:VariableDeclarationStatement[30830-30881]"
    }, {
      "left" : "eResult.appendChild(eFields);",
      "right" : "eResult.appendChild(eFields);",
      "info" : "ExpressionStatement[29476-29505]:ExpressionStatement[30894-30923]"
    }, {
      "left" : "for (Field<?> field : fields.fields)",
      "right" : "for (Field<?> field : fields.fields)",
      "info" : "EnhancedForStatement[29519-29838]:EnhancedForStatement[30937-31256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29556-29838]:Block[30974-31256]"
    }, {
      "left" : "Element eField = document.createElement(\"field\");",
      "right" : "Element eField = document.createElement(\"field\");",
      "info" : "VariableDeclarationStatement[29574-29623]:VariableDeclarationStatement[30992-31041]"
    }, {
      "left" : "eField.setAttribute(\"name\", field.getName());",
      "right" : "eField.setAttribute(\"name\", field.getName());",
      "info" : "ExpressionStatement[29640-29685]:ExpressionStatement[31058-31103]"
    }, {
      "left" : "eField.setAttribute(\"type\", field.getDataType().getTypeName().toUpperCase());",
      "right" : "eField.setAttribute(\"type\", field.getDataType().getTypeName().toUpperCase());",
      "info" : "ExpressionStatement[29702-29779]:ExpressionStatement[31120-31197]"
    }, {
      "left" : "eFields.appendChild(eField);",
      "right" : "eFields.appendChild(eField);",
      "info" : "ExpressionStatement[29796-29824]:ExpressionStatement[31214-31242]"
    }, {
      "left" : "Element eRecords = document.createElement(\"records\");",
      "right" : "Element eRecords = document.createElement(\"records\");",
      "info" : "VariableDeclarationStatement[29852-29905]:VariableDeclarationStatement[31270-31323]"
    }, {
      "left" : "eResult.appendChild(eRecords);",
      "right" : "eResult.appendChild(eRecords);",
      "info" : "ExpressionStatement[29918-29948]:ExpressionStatement[31336-31366]"
    }, {
      "left" : "for (Record record : this)",
      "right" : "for (Record record : this)",
      "info" : "EnhancedForStatement[29962-30661]:EnhancedForStatement[31380-32079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29989-30661]:Block[31407-32079]"
    }, {
      "left" : "Element eRecord = document.createElement(\"record\");",
      "right" : "Element eRecord = document.createElement(\"record\");",
      "info" : "VariableDeclarationStatement[30007-30058]:VariableDeclarationStatement[31425-31476]"
    }, {
      "left" : "eRecords.appendChild(eRecord);",
      "right" : "eRecords.appendChild(eRecord);",
      "info" : "ExpressionStatement[30075-30105]:ExpressionStatement[31493-31523]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[30123-30647]:ForStatement[31541-32065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30182-30647]:Block[31600-32065]"
    }, {
      "left" : "Field<?> field = fields.fields[index];",
      "right" : "Field<?> field = fields.fields[index];",
      "info" : "VariableDeclarationStatement[30204-30242]:VariableDeclarationStatement[31622-31660]"
    }, {
      "left" : "Object value = record.getValue(index);",
      "right" : "Object value = record.getValue(index);",
      "info" : "VariableDeclarationStatement[30263-30301]:VariableDeclarationStatement[31681-31719]"
    }, {
      "left" : "Element eValue = document.createElement(\"value\");",
      "right" : "Element eValue = document.createElement(\"value\");",
      "info" : "VariableDeclarationStatement[30323-30372]:VariableDeclarationStatement[31741-31790]"
    }, {
      "left" : "eValue.setAttribute(\"field\", field.getName());",
      "right" : "eValue.setAttribute(\"field\", field.getName());",
      "info" : "ExpressionStatement[30393-30439]:ExpressionStatement[31811-31857]"
    }, {
      "left" : "eRecord.appendChild(eValue);",
      "right" : "eRecord.appendChild(eValue);",
      "info" : "ExpressionStatement[30460-30488]:ExpressionStatement[31878-31906]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[30510-30629]:IfStatement[31928-32047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30529-30629]:Block[31947-32047]"
    }, {
      "left" : "eValue.setTextContent(format0(value, false, false));",
      "right" : "eValue.setTextContent(format0(value, false, false));",
      "info" : "ExpressionStatement[30555-30607]:ExpressionStatement[31973-32025]"
    }, {
      "left" : "return document;",
      "right" : "return document;",
      "info" : "ReturnStatement[30675-30691]:ReturnStatement[32093-32109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30754-30813]:Block[32172-32231]"
    }, {
      "left" : "throw new RuntimeException(ignore);",
      "right" : "throw new RuntimeException(ignore);",
      "info" : "ThrowStatement[30768-30803]:ThrowStatement[32186-32221]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[30825-30834]:MarkerAnnotation[32243-32252]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30839-30845]:Modifier[32257-32263]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30846-30851]:Modifier[32264-32269]"
    }, {
      "left" : "H extends ContentHandler",
      "right" : "H extends ContentHandler",
      "info" : "TypeParameter[30853-30877]:TypeParameter[32271-32295]"
    }, {
      "left" : "H",
      "right" : "H",
      "info" : "SimpleType[30879-30880]:SimpleType[32297-32298]"
    }, {
      "left" : "intoXML",
      "right" : "intoXML",
      "info" : "SimpleName[30881-30888]:SimpleName[32299-32306]"
    }, {
      "left" : "H handler",
      "right" : "H handler",
      "info" : "SingleVariableDeclaration[30889-30898]:SingleVariableDeclaration[32307-32316]"
    }, {
      "left" : "SAXException",
      "right" : "SAXException",
      "info" : "SimpleType[30907-30919]:SimpleType[32325-32337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30920-32669]:Block[32338-34087]"
    }, {
      "left" : "Attributes empty = new AttributesImpl();",
      "right" : "Attributes empty = new AttributesImpl();",
      "info" : "VariableDeclarationStatement[30930-30970]:VariableDeclarationStatement[32348-32388]"
    }, {
      "left" : "handler.startDocument();",
      "right" : "handler.startDocument();",
      "info" : "ExpressionStatement[30980-31004]:ExpressionStatement[32398-32422]"
    }, {
      "left" : "handler.startPrefixMapping(\"\", \"http://www.jooq.org/xsd/jooq-export-2.6.0.xsd\");",
      "right" : "handler.startPrefixMapping(\"\", \"http://www.jooq.org/xsd/jooq-export-2.6.0.xsd\");",
      "info" : "ExpressionStatement[31013-31093]:ExpressionStatement[32431-32511]"
    }, {
      "left" : "handler.startElement(\"\", \"\", \"result\", empty);",
      "right" : "handler.startElement(\"\", \"\", \"result\", empty);",
      "info" : "ExpressionStatement[31102-31148]:ExpressionStatement[32520-32566]"
    }, {
      "left" : "handler.startElement(\"\", \"\", \"fields\", empty);",
      "right" : "handler.startElement(\"\", \"\", \"fields\", empty);",
      "info" : "ExpressionStatement[31157-31203]:ExpressionStatement[32575-32621]"
    }, {
      "left" : "for (Field<?> field : fields.fields)",
      "right" : "for (Field<?> field : fields.fields)",
      "info" : "EnhancedForStatement[31213-31606]:EnhancedForStatement[32631-33024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31250-31606]:Block[32668-33024]"
    }, {
      "left" : "AttributesImpl attrs = new AttributesImpl();",
      "right" : "AttributesImpl attrs = new AttributesImpl();",
      "info" : "VariableDeclarationStatement[31264-31308]:VariableDeclarationStatement[32682-32726]"
    }, {
      "left" : "attrs.addAttribute(\"\", \"\", \"name\", \"CDATA\", field.getName());",
      "right" : "attrs.addAttribute(\"\", \"\", \"name\", \"CDATA\", field.getName());",
      "info" : "ExpressionStatement[31321-31382]:ExpressionStatement[32739-32800]"
    }, {
      "left" : "attrs.addAttribute(\"\", \"\", \"type\", \"CDATA\", field.getDataType().getTypeName().toUpperCase());",
      "right" : "attrs.addAttribute(\"\", \"\", \"type\", \"CDATA\", field.getDataType().getTypeName().toUpperCase());",
      "info" : "ExpressionStatement[31395-31488]:ExpressionStatement[32813-32906]"
    }, {
      "left" : "handler.startElement(\"\", \"\", \"field\", attrs);",
      "right" : "handler.startElement(\"\", \"\", \"field\", attrs);",
      "info" : "ExpressionStatement[31502-31547]:ExpressionStatement[32920-32965]"
    }, {
      "left" : "handler.endElement(\"\", \"\", \"field\");",
      "right" : "handler.endElement(\"\", \"\", \"field\");",
      "info" : "ExpressionStatement[31560-31596]:ExpressionStatement[32978-33014]"
    }, {
      "left" : "handler.endElement(\"\", \"\", \"fields\");",
      "right" : "handler.endElement(\"\", \"\", \"fields\");",
      "info" : "ExpressionStatement[31616-31653]:ExpressionStatement[33034-33071]"
    }, {
      "left" : "handler.startElement(\"\", \"\", \"records\", empty);",
      "right" : "handler.startElement(\"\", \"\", \"records\", empty);",
      "info" : "ExpressionStatement[31662-31709]:ExpressionStatement[33080-33127]"
    }, {
      "left" : "for (Record record : this)",
      "right" : "for (Record record : this)",
      "info" : "EnhancedForStatement[31719-32522]:EnhancedForStatement[33137-33940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31746-32522]:Block[33164-33940]"
    }, {
      "left" : "handler.startElement(\"\", \"\", \"record\", empty);",
      "right" : "handler.startElement(\"\", \"\", \"record\", empty);",
      "info" : "ExpressionStatement[31760-31806]:ExpressionStatement[33178-33224]"
    }, {
      "left" : "for (int index = 0; index < fields.fields.length; index++)",
      "right" : "for (int index = 0; index < fields.fields.length; index++)",
      "info" : "ForStatement[31820-32461]:ForStatement[33238-33879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31879-32461]:Block[33297-33879]"
    }, {
      "left" : "Field<?> field = fields.fields[index];",
      "right" : "Field<?> field = fields.fields[index];",
      "info" : "VariableDeclarationStatement[31897-31935]:VariableDeclarationStatement[33315-33353]"
    }, {
      "left" : "Object value = record.getValue(index);",
      "right" : "Object value = record.getValue(index);",
      "info" : "VariableDeclarationStatement[31952-31990]:VariableDeclarationStatement[33370-33408]"
    }, {
      "left" : "AttributesImpl attrs = new AttributesImpl();",
      "right" : "AttributesImpl attrs = new AttributesImpl();",
      "info" : "VariableDeclarationStatement[32008-32052]:VariableDeclarationStatement[33426-33470]"
    }, {
      "left" : "attrs.addAttribute(\"\", \"\", \"field\", \"CDATA\", field.getName());",
      "right" : "attrs.addAttribute(\"\", \"\", \"field\", \"CDATA\", field.getName());",
      "info" : "ExpressionStatement[32069-32131]:ExpressionStatement[33487-33549]"
    }, {
      "left" : "handler.startElement(\"\", \"\", \"value\", attrs);",
      "right" : "handler.startElement(\"\", \"\", \"value\", attrs);",
      "info" : "ExpressionStatement[32149-32194]:ExpressionStatement[33567-33612]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[32212-32393]:IfStatement[33630-33811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32231-32393]:Block[33649-33811]"
    }, {
      "left" : "char[] chars = format0(value, false, false).toCharArray();",
      "right" : "char[] chars = format0(value, false, false).toCharArray();",
      "info" : "VariableDeclarationStatement[32253-32311]:VariableDeclarationStatement[33671-33729]"
    }, {
      "left" : "handler.characters(chars, 0, chars.length);",
      "right" : "handler.characters(chars, 0, chars.length);",
      "info" : "ExpressionStatement[32332-32375]:ExpressionStatement[33750-33793]"
    }, {
      "left" : "handler.endElement(\"\", \"\", \"value\");",
      "right" : "handler.endElement(\"\", \"\", \"value\");",
      "info" : "ExpressionStatement[32411-32447]:ExpressionStatement[33829-33865]"
    }, {
      "left" : "handler.endElement(\"\", \"\", \"record\");",
      "right" : "handler.endElement(\"\", \"\", \"record\");",
      "info" : "ExpressionStatement[32475-32512]:ExpressionStatement[33893-33930]"
    }, {
      "left" : "handler.endElement(\"\", \"\", \"records\");",
      "right" : "handler.endElement(\"\", \"\", \"records\");",
      "info" : "ExpressionStatement[32532-32570]:ExpressionStatement[33950-33988]"
    }, {
      "left" : "handler.endPrefixMapping(\"\");",
      "right" : "handler.endPrefixMapping(\"\");",
      "info" : "ExpressionStatement[32579-32608]:ExpressionStatement[33997-34026]"
    }, {
      "left" : "handler.endDocument();",
      "right" : "handler.endDocument();",
      "info" : "ExpressionStatement[32617-32639]:ExpressionStatement[34035-34057]"
    }, {
      "left" : "return handler;",
      "right" : "return handler;",
      "info" : "ReturnStatement[32648-32663]:ReturnStatement[34066-34081]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[32675-32682]:Modifier[34093-34100]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[32683-32688]:Modifier[34101-34106]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[32689-32695]:SimpleType[34107-34113]"
    }, {
      "left" : "escapeXML",
      "right" : "escapeXML",
      "info" : "SimpleName[32696-32705]:SimpleName[34114-34123]"
    }, {
      "left" : "String string",
      "right" : "String string",
      "info" : "SingleVariableDeclaration[32706-32719]:SingleVariableDeclaration[34124-34137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32721-32904]:Block[34139-34322]"
    }, {
      "left" : "return StringUtils.replaceEach(string,\n            new String[] { \"\\\"\", \"'\", \"<\", \">\", \"&\" },\n            new String[] { \"&quot;\", \"&apos;\", \"&lt;\", \"&gt;\", \"&amp;\"});",
      "right" : "return StringUtils.replaceEach(string,\n            new String[] { \"\\\"\", \"'\", \"<\", \">\", \"&\" },\n            new String[] { \"&quot;\", \"&apos;\", \"&lt;\", \"&gt;\", \"&amp;\"});",
      "info" : "ReturnStatement[32731-32898]:ReturnStatement[34149-34316]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[32910-32919]:MarkerAnnotation[34328-34337]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32924-32930]:Modifier[34342-34348]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[32931-32936]:Modifier[34349-34354]"
    }, {
      "left" : "List<Map<String, Object>>",
      "right" : "List<Map<String, Object>>",
      "info" : "ParameterizedType[32937-32962]:ParameterizedType[34355-34380]"
    }, {
      "left" : "intoMaps",
      "right" : "intoMaps",
      "info" : "SimpleName[32963-32971]:SimpleName[34381-34389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32974-33165]:Block[34392-34583]"
    }, {
      "left" : "List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();",
      "right" : "List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();",
      "info" : "VariableDeclarationStatement[32984-33054]:VariableDeclarationStatement[34402-34472]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[33064-33137]:EnhancedForStatement[34482-34555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33086-33137]:Block[34504-34555]"
    }, {
      "left" : "list.add(record.intoMap());",
      "right" : "list.add(record.intoMap());",
      "info" : "ExpressionStatement[33100-33127]:ExpressionStatement[34518-34545]"
    }, {
      "left" : "return list;",
      "right" : "return list;",
      "info" : "ReturnStatement[33147-33159]:ReturnStatement[34565-34577]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[33171-33180]:MarkerAnnotation[34589-34598]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33185-33191]:Modifier[34603-34609]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[33192-33197]:Modifier[34610-34615]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[33199-33200]:TypeParameter[34617-34618]"
    }, {
      "left" : "Map<K, R>",
      "right" : "Map<K, R>",
      "info" : "ParameterizedType[33202-33211]:ParameterizedType[34620-34629]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[33212-33219]:SimpleName[34630-34637]"
    }, {
      "left" : "Field<K> key",
      "right" : "Field<K> key",
      "info" : "SingleVariableDeclaration[33220-33232]:SingleVariableDeclaration[34638-34650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33234-33297]:Block[34652-34715]"
    }, {
      "left" : "return intoMap0(indexOrFail(fieldsRow(), key));",
      "right" : "return intoMap0(indexOrFail(fieldsRow(), key));",
      "info" : "ReturnStatement[33244-33291]:ReturnStatement[34662-34709]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[33303-33312]:MarkerAnnotation[34721-34730]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33317-33323]:Modifier[34735-34741]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[33324-33329]:Modifier[34742-34747]"
    }, {
      "left" : "Map<?, R>",
      "right" : "Map<?, R>",
      "info" : "ParameterizedType[33330-33339]:ParameterizedType[34748-34757]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[33340-33347]:SimpleName[34758-34765]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[33348-33365]:SingleVariableDeclaration[34766-34783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33367-33414]:Block[34785-34832]"
    }, {
      "left" : "return intoMap0(keyFieldIndex);",
      "right" : "return intoMap0(keyFieldIndex);",
      "info" : "ReturnStatement[33377-33408]:ReturnStatement[34795-34826]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[33420-33429]:MarkerAnnotation[34838-34847]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33434-33440]:Modifier[34852-34858]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[33441-33446]:Modifier[34859-34864]"
    }, {
      "left" : "Map<?, R>",
      "right" : "Map<?, R>",
      "info" : "ParameterizedType[33447-33456]:ParameterizedType[34865-34874]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[33457-33464]:SimpleName[34875-34882]"
    }, {
      "left" : "String keyFieldName",
      "right" : "String keyFieldName",
      "info" : "SingleVariableDeclaration[33465-33484]:SingleVariableDeclaration[34883-34902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33486-33538]:Block[34904-34956]"
    }, {
      "left" : "return intoMap(field(keyFieldName));",
      "right" : "return intoMap(field(keyFieldName));",
      "info" : "ReturnStatement[33496-33532]:ReturnStatement[34914-34950]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[33544-33553]:MarkerAnnotation[34962-34971]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33558-33564]:Modifier[34976-34982]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[33565-33570]:Modifier[34983-34988]"
    }, {
      "left" : "Map<?, R>",
      "right" : "Map<?, R>",
      "info" : "ParameterizedType[33571-33580]:ParameterizedType[34989-34998]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[33581-33588]:SimpleName[34999-35006]"
    }, {
      "left" : "Name keyFieldName",
      "right" : "Name keyFieldName",
      "info" : "SingleVariableDeclaration[33589-33606]:SingleVariableDeclaration[35007-35024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33608-33660]:Block[35026-35078]"
    }, {
      "left" : "return intoMap(field(keyFieldName));",
      "right" : "return intoMap(field(keyFieldName));",
      "info" : "ReturnStatement[33618-33654]:ReturnStatement[35036-35072]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[33666-33673]:Modifier[35084-35091]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[33674-33679]:Modifier[35092-35097]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[33681-33682]:TypeParameter[35099-35100]"
    }, {
      "left" : "Map<K, R>",
      "right" : "Map<K, R>",
      "info" : "ParameterizedType[33684-33693]:ParameterizedType[35102-35111]"
    }, {
      "left" : "intoMap0",
      "right" : "intoMap0",
      "info" : "SimpleName[33694-33702]:SimpleName[35112-35120]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[33703-33720]:SingleVariableDeclaration[35121-35138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33722-34024]:Block[35140-35442]"
    }, {
      "left" : "Map<K, R> map = new LinkedHashMap<K, R>();",
      "right" : "Map<K, R> map = new LinkedHashMap<K, R>();",
      "info" : "VariableDeclarationStatement[33732-33774]:VariableDeclarationStatement[35150-35192]"
    }, {
      "left" : "for (R record : this)\n            if (map.put((K) record.getValue(keyFieldIndex), record) != null)\n                throw new InvalidResultException(\"Key \" + keyFieldIndex + \" is not unique in Result for \" + this);",
      "right" : "for (R record : this)\n            if (map.put((K) record.getValue(keyFieldIndex), record) != null)\n                throw new InvalidResultException(\"Key \" + keyFieldIndex + \" is not unique in Result for \" + this);",
      "info" : "EnhancedForStatement[33784-33997]:EnhancedForStatement[35202-35415]"
    }, {
      "left" : "if (map.put((K) record.getValue(keyFieldIndex), record) != null)",
      "right" : "if (map.put((K) record.getValue(keyFieldIndex), record) != null)",
      "info" : "IfStatement[33818-33997]:IfStatement[35236-35415]"
    }, {
      "left" : "throw new InvalidResultException(\"Key \" + keyFieldIndex + \" is not unique in Result for \" + this);",
      "right" : "throw new InvalidResultException(\"Key \" + keyFieldIndex + \" is not unique in Result for \" + this);",
      "info" : "ThrowStatement[33899-33997]:ThrowStatement[35317-35415]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[34007-34018]:ReturnStatement[35425-35436]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[34030-34039]:MarkerAnnotation[35448-35457]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34044-34050]:Modifier[35462-35468]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[34051-34056]:Modifier[35469-35474]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[34058-34059]:TypeParameter[35476-35477]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "TypeParameter[34061-34062]:TypeParameter[35479-35480]"
    }, {
      "left" : "Map<K, V>",
      "right" : "Map<K, V>",
      "info" : "ParameterizedType[34064-34073]:ParameterizedType[35482-35491]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[34074-34081]:SimpleName[35492-35499]"
    }, {
      "left" : "Field<K> key",
      "right" : "Field<K> key",
      "info" : "SingleVariableDeclaration[34082-34094]:SingleVariableDeclaration[35500-35512]"
    }, {
      "left" : "Field<V> value",
      "right" : "Field<V> value",
      "info" : "SingleVariableDeclaration[34096-34110]:SingleVariableDeclaration[35514-35528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34112-34267]:Block[35530-35685]"
    }, {
      "left" : "int kIndex = indexOrFail(fieldsRow(), key);",
      "right" : "int kIndex = indexOrFail(fieldsRow(), key);",
      "info" : "VariableDeclarationStatement[34122-34165]:VariableDeclarationStatement[35540-35583]"
    }, {
      "left" : "int vIndex = indexOrFail(fieldsRow(), value);",
      "right" : "int vIndex = indexOrFail(fieldsRow(), value);",
      "info" : "VariableDeclarationStatement[34174-34219]:VariableDeclarationStatement[35592-35637]"
    }, {
      "left" : "return intoMap0(kIndex, vIndex);",
      "right" : "return intoMap0(kIndex, vIndex);",
      "info" : "ReturnStatement[34229-34261]:ReturnStatement[35647-35679]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[34273-34282]:MarkerAnnotation[35691-35700]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34287-34293]:Modifier[35705-35711]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[34294-34299]:Modifier[35712-35717]"
    }, {
      "left" : "Map<?, ?>",
      "right" : "Map<?, ?>",
      "info" : "ParameterizedType[34300-34309]:ParameterizedType[35718-35727]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[34310-34317]:SimpleName[35728-35735]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[34318-34335]:SingleVariableDeclaration[35736-35753]"
    }, {
      "left" : "int valueFieldIndex",
      "right" : "int valueFieldIndex",
      "info" : "SingleVariableDeclaration[34337-34356]:SingleVariableDeclaration[35755-35774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34358-34422]:Block[35776-35840]"
    }, {
      "left" : "return intoMap0(keyFieldIndex, valueFieldIndex);",
      "right" : "return intoMap0(keyFieldIndex, valueFieldIndex);",
      "info" : "ReturnStatement[34368-34416]:ReturnStatement[35786-35834]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[34428-34437]:MarkerAnnotation[35846-35855]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34442-34448]:Modifier[35860-35866]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[34449-34454]:Modifier[35867-35872]"
    }, {
      "left" : "Map<?, ?>",
      "right" : "Map<?, ?>",
      "info" : "ParameterizedType[34455-34464]:ParameterizedType[35873-35882]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[34465-34472]:SimpleName[35883-35890]"
    }, {
      "left" : "String keyFieldName",
      "right" : "String keyFieldName",
      "info" : "SingleVariableDeclaration[34473-34492]:SingleVariableDeclaration[35891-35910]"
    }, {
      "left" : "String valueFieldName",
      "right" : "String valueFieldName",
      "info" : "SingleVariableDeclaration[34494-34515]:SingleVariableDeclaration[35912-35933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34517-34592]:Block[35935-36010]"
    }, {
      "left" : "return intoMap(field(keyFieldName), field(valueFieldName));",
      "right" : "return intoMap(field(keyFieldName), field(valueFieldName));",
      "info" : "ReturnStatement[34527-34586]:ReturnStatement[35945-36004]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[34598-34607]:MarkerAnnotation[36016-36025]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34612-34618]:Modifier[36030-36036]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[34619-34624]:Modifier[36037-36042]"
    }, {
      "left" : "Map<?, ?>",
      "right" : "Map<?, ?>",
      "info" : "ParameterizedType[34625-34634]:ParameterizedType[36043-36052]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[34635-34642]:SimpleName[36053-36060]"
    }, {
      "left" : "Name keyFieldName",
      "right" : "Name keyFieldName",
      "info" : "SingleVariableDeclaration[34643-34660]:SingleVariableDeclaration[36061-36078]"
    }, {
      "left" : "Name valueFieldName",
      "right" : "Name valueFieldName",
      "info" : "SingleVariableDeclaration[34662-34681]:SingleVariableDeclaration[36080-36099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34683-34758]:Block[36101-36176]"
    }, {
      "left" : "return intoMap(field(keyFieldName), field(valueFieldName));",
      "right" : "return intoMap(field(keyFieldName), field(valueFieldName));",
      "info" : "ReturnStatement[34693-34752]:ReturnStatement[36111-36170]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[34764-34771]:Modifier[36182-36189]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[34772-34777]:Modifier[36190-36195]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[34779-34780]:TypeParameter[36197-36198]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "TypeParameter[34782-34783]:TypeParameter[36200-36201]"
    }, {
      "left" : "Map<K, V>",
      "right" : "Map<K, V>",
      "info" : "ParameterizedType[34785-34794]:ParameterizedType[36203-36212]"
    }, {
      "left" : "intoMap0",
      "right" : "intoMap0",
      "info" : "SimpleName[34795-34803]:SimpleName[36213-36221]"
    }, {
      "left" : "int kIndex",
      "right" : "int kIndex",
      "info" : "SingleVariableDeclaration[34804-34814]:SingleVariableDeclaration[36222-36232]"
    }, {
      "left" : "int vIndex",
      "right" : "int vIndex",
      "info" : "SingleVariableDeclaration[34816-34826]:SingleVariableDeclaration[36234-36244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34828-35137]:Block[36246-36555]"
    }, {
      "left" : "Map<K, V> map = new LinkedHashMap<K, V>();",
      "right" : "Map<K, V> map = new LinkedHashMap<K, V>();",
      "info" : "VariableDeclarationStatement[34838-34880]:VariableDeclarationStatement[36256-36298]"
    }, {
      "left" : "for (R record : this)\n            if (map.put((K) record.getValue(kIndex), (V) record.getValue(vIndex)) != null)\n                throw new InvalidResultException(\"Key \" + kIndex + \" is not unique in Result for \" + this);",
      "right" : "for (R record : this)\n            if (map.put((K) record.getValue(kIndex), (V) record.getValue(vIndex)) != null)\n                throw new InvalidResultException(\"Key \" + kIndex + \" is not unique in Result for \" + this);",
      "info" : "EnhancedForStatement[34890-35110]:EnhancedForStatement[36308-36528]"
    }, {
      "left" : "if (map.put((K) record.getValue(kIndex), (V) record.getValue(vIndex)) != null)",
      "right" : "if (map.put((K) record.getValue(kIndex), (V) record.getValue(vIndex)) != null)",
      "info" : "IfStatement[34924-35110]:IfStatement[36342-36528]"
    }, {
      "left" : "throw new InvalidResultException(\"Key \" + kIndex + \" is not unique in Result for \" + this);",
      "right" : "throw new InvalidResultException(\"Key \" + kIndex + \" is not unique in Result for \" + this);",
      "info" : "ThrowStatement[35019-35110]:ThrowStatement[36437-36528]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[35120-35131]:ReturnStatement[36538-36549]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[35143-35152]:MarkerAnnotation[36561-36570]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35157-35163]:Modifier[36575-36581]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[35164-35169]:Modifier[36582-36587]"
    }, {
      "left" : "Map<Record, R>",
      "right" : "Map<Record, R>",
      "info" : "ParameterizedType[35170-35184]:ParameterizedType[36588-36602]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[35185-35192]:SimpleName[36603-36610]"
    }, {
      "left" : "int[] keyFieldIndexes",
      "right" : "int[] keyFieldIndexes",
      "info" : "SingleVariableDeclaration[35193-35214]:SingleVariableDeclaration[36611-36632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35216-35272]:Block[36634-36690]"
    }, {
      "left" : "return intoMap(fields(keyFieldIndexes));",
      "right" : "return intoMap(fields(keyFieldIndexes));",
      "info" : "ReturnStatement[35226-35266]:ReturnStatement[36644-36684]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[35278-35287]:MarkerAnnotation[36696-36705]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35292-35298]:Modifier[36710-36716]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[35299-35304]:Modifier[36717-36722]"
    }, {
      "left" : "Map<Record, R>",
      "right" : "Map<Record, R>",
      "info" : "ParameterizedType[35305-35319]:ParameterizedType[36723-36737]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[35320-35327]:SimpleName[36738-36745]"
    }, {
      "left" : "String[] keyFieldNames",
      "right" : "String[] keyFieldNames",
      "info" : "SingleVariableDeclaration[35328-35350]:SingleVariableDeclaration[36746-36768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35352-35406]:Block[36770-36824]"
    }, {
      "left" : "return intoMap(fields(keyFieldNames));",
      "right" : "return intoMap(fields(keyFieldNames));",
      "info" : "ReturnStatement[35362-35400]:ReturnStatement[36780-36818]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[35412-35421]:MarkerAnnotation[36830-36839]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35426-35432]:Modifier[36844-36850]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[35433-35438]:Modifier[36851-36856]"
    }, {
      "left" : "Map<Record, R>",
      "right" : "Map<Record, R>",
      "info" : "ParameterizedType[35439-35453]:ParameterizedType[36857-36871]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[35454-35461]:SimpleName[36872-36879]"
    }, {
      "left" : "Name[] keyFieldNames",
      "right" : "Name[] keyFieldNames",
      "info" : "SingleVariableDeclaration[35462-35482]:SingleVariableDeclaration[36880-36900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35484-35538]:Block[36902-36956]"
    }, {
      "left" : "return intoMap(fields(keyFieldNames));",
      "right" : "return intoMap(fields(keyFieldNames));",
      "info" : "ReturnStatement[35494-35532]:ReturnStatement[36912-36950]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[35544-35553]:MarkerAnnotation[36962-36971]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35558-35564]:Modifier[36976-36982]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[35565-35570]:Modifier[36983-36988]"
    }, {
      "left" : "Map<Record, R>",
      "right" : "Map<Record, R>",
      "info" : "ParameterizedType[35571-35585]:ParameterizedType[36989-37003]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[35586-35593]:SimpleName[37004-37011]"
    }, {
      "left" : "Field<?>[] keys",
      "right" : "Field<?>[] keys",
      "info" : "SingleVariableDeclaration[35594-35609]:SingleVariableDeclaration[37012-37027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35611-36171]:Block[37029-37589]"
    }, {
      "left" : "if (keys == null)",
      "right" : "if (keys == null)",
      "info" : "IfStatement[35621-35683]:IfStatement[37039-37101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35639-35683]:Block[37057-37101]"
    }, {
      "left" : "keys = new Field[0];",
      "right" : "keys = new Field[0];",
      "info" : "ExpressionStatement[35653-35673]:ExpressionStatement[37071-37091]"
    }, {
      "left" : "Map<Record, R> map = new LinkedHashMap<Record, R>();",
      "right" : "Map<Record, R> map = new LinkedHashMap<Record, R>();",
      "info" : "VariableDeclarationStatement[35693-35745]:VariableDeclarationStatement[37111-37163]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[35754-36144]:EnhancedForStatement[37172-37562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35776-36144]:Block[37194-37562]"
    }, {
      "left" : "RecordImpl key = new RecordImpl(keys);",
      "right" : "RecordImpl key = new RecordImpl(keys);",
      "info" : "VariableDeclarationStatement[35790-35828]:VariableDeclarationStatement[37208-37246]"
    }, {
      "left" : "for (Field<?> field : keys)",
      "right" : "for (Field<?> field : keys)",
      "info" : "EnhancedForStatement[35842-35945]:EnhancedForStatement[37260-37363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35870-35945]:Block[37288-37363]"
    }, {
      "left" : "Utils.copyValue(key, field, record, field);",
      "right" : "Utils.copyValue(key, field, record, field);",
      "info" : "ExpressionStatement[35888-35931]:ExpressionStatement[37306-37349]"
    }, {
      "left" : "if (map.put(key, record) != null)",
      "right" : "if (map.put(key, record) != null)",
      "info" : "IfStatement[35959-36134]:IfStatement[37377-37552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35993-36134]:Block[37411-37552]"
    }, {
      "left" : "throw new InvalidResultException(\"Key list \" + Arrays.asList(keys) + \" is not unique in Result for \" + this);",
      "right" : "throw new InvalidResultException(\"Key list \" + Arrays.asList(keys) + \" is not unique in Result for \" + this);",
      "info" : "ThrowStatement[36011-36120]:ThrowStatement[37429-37538]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[36154-36165]:ReturnStatement[37572-37583]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36177-36186]:MarkerAnnotation[37595-37604]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36191-36197]:Modifier[37609-37615]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[36198-36203]:Modifier[37616-37621]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[36205-36206]:TypeParameter[37623-37624]"
    }, {
      "left" : "Map<List<?>, E>",
      "right" : "Map<List<?>, E>",
      "info" : "ParameterizedType[36208-36223]:ParameterizedType[37626-37641]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[36224-36231]:SimpleName[37642-37649]"
    }, {
      "left" : "int[] keyFieldIndexes",
      "right" : "int[] keyFieldIndexes",
      "info" : "SingleVariableDeclaration[36232-36253]:SingleVariableDeclaration[37650-37671]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[36255-36278]:SingleVariableDeclaration[37673-37696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36280-36342]:Block[37698-37760]"
    }, {
      "left" : "return intoMap(fields(keyFieldIndexes), type);",
      "right" : "return intoMap(fields(keyFieldIndexes), type);",
      "info" : "ReturnStatement[36290-36336]:ReturnStatement[37708-37754]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36348-36357]:MarkerAnnotation[37766-37775]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36362-36368]:Modifier[37780-37786]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[36369-36374]:Modifier[37787-37792]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[36376-36377]:TypeParameter[37794-37795]"
    }, {
      "left" : "Map<List<?>, E>",
      "right" : "Map<List<?>, E>",
      "info" : "ParameterizedType[36379-36394]:ParameterizedType[37797-37812]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[36395-36402]:SimpleName[37813-37820]"
    }, {
      "left" : "String[] keyFieldNames",
      "right" : "String[] keyFieldNames",
      "info" : "SingleVariableDeclaration[36403-36425]:SingleVariableDeclaration[37821-37843]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[36427-36450]:SingleVariableDeclaration[37845-37868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36452-36512]:Block[37870-37930]"
    }, {
      "left" : "return intoMap(fields(keyFieldNames), type);",
      "right" : "return intoMap(fields(keyFieldNames), type);",
      "info" : "ReturnStatement[36462-36506]:ReturnStatement[37880-37924]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36518-36527]:MarkerAnnotation[37936-37945]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36532-36538]:Modifier[37950-37956]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[36539-36544]:Modifier[37957-37962]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[36546-36547]:TypeParameter[37964-37965]"
    }, {
      "left" : "Map<List<?>, E>",
      "right" : "Map<List<?>, E>",
      "info" : "ParameterizedType[36549-36564]:ParameterizedType[37967-37982]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[36565-36572]:SimpleName[37983-37990]"
    }, {
      "left" : "Name[] keyFieldNames",
      "right" : "Name[] keyFieldNames",
      "info" : "SingleVariableDeclaration[36573-36593]:SingleVariableDeclaration[37991-38011]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[36595-36618]:SingleVariableDeclaration[38013-38036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36620-36680]:Block[38038-38098]"
    }, {
      "left" : "return intoMap(fields(keyFieldNames), type);",
      "right" : "return intoMap(fields(keyFieldNames), type);",
      "info" : "ReturnStatement[36630-36674]:ReturnStatement[38048-38092]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36686-36695]:MarkerAnnotation[38104-38113]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36700-36706]:Modifier[38118-38124]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[36707-36712]:Modifier[38125-38130]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[36714-36715]:TypeParameter[38132-38133]"
    }, {
      "left" : "Map<List<?>, E>",
      "right" : "Map<List<?>, E>",
      "info" : "ParameterizedType[36717-36732]:ParameterizedType[38135-38150]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[36733-36740]:SimpleName[38151-38158]"
    }, {
      "left" : "Field<?>[] keys",
      "right" : "Field<?>[] keys",
      "info" : "SingleVariableDeclaration[36741-36756]:SingleVariableDeclaration[38159-38174]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[36758-36781]:SingleVariableDeclaration[38176-38199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36783-36892]:Block[38201-38310]"
    }, {
      "left" : "return intoMap(keys, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoMap(keys, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[36793-36886]:ReturnStatement[38211-38304]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36898-36907]:MarkerAnnotation[38316-38325]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36912-36918]:Modifier[38330-38336]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[36919-36924]:Modifier[38337-38342]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[36926-36927]:TypeParameter[38344-38345]"
    }, {
      "left" : "Map<List<?>, E>",
      "right" : "Map<List<?>, E>",
      "info" : "ParameterizedType[36929-36944]:ParameterizedType[38347-38362]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[36945-36952]:SimpleName[38363-38370]"
    }, {
      "left" : "int[] keyFieldIndexes",
      "right" : "int[] keyFieldIndexes",
      "info" : "SingleVariableDeclaration[36953-36974]:SingleVariableDeclaration[38371-38392]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[36976-37009]:SingleVariableDeclaration[38394-38427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37011-37075]:Block[38429-38493]"
    }, {
      "left" : "return intoMap(fields(keyFieldIndexes), mapper);",
      "right" : "return intoMap(fields(keyFieldIndexes), mapper);",
      "info" : "ReturnStatement[37021-37069]:ReturnStatement[38439-38487]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[37081-37090]:MarkerAnnotation[38499-38508]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37095-37101]:Modifier[38513-38519]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[37102-37107]:Modifier[38520-38525]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[37109-37110]:TypeParameter[38527-38528]"
    }, {
      "left" : "Map<List<?>, E>",
      "right" : "Map<List<?>, E>",
      "info" : "ParameterizedType[37112-37127]:ParameterizedType[38530-38545]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[37128-37135]:SimpleName[38546-38553]"
    }, {
      "left" : "String[] keyFieldNames",
      "right" : "String[] keyFieldNames",
      "info" : "SingleVariableDeclaration[37136-37158]:SingleVariableDeclaration[38554-38576]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[37160-37193]:SingleVariableDeclaration[38578-38611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37195-37257]:Block[38613-38675]"
    }, {
      "left" : "return intoMap(fields(keyFieldNames), mapper);",
      "right" : "return intoMap(fields(keyFieldNames), mapper);",
      "info" : "ReturnStatement[37205-37251]:ReturnStatement[38623-38669]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[37263-37272]:MarkerAnnotation[38681-38690]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37277-37283]:Modifier[38695-38701]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[37284-37289]:Modifier[38702-38707]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[37291-37292]:TypeParameter[38709-38710]"
    }, {
      "left" : "Map<List<?>, E>",
      "right" : "Map<List<?>, E>",
      "info" : "ParameterizedType[37294-37309]:ParameterizedType[38712-38727]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[37310-37317]:SimpleName[38728-38735]"
    }, {
      "left" : "Name[] keyFieldNames",
      "right" : "Name[] keyFieldNames",
      "info" : "SingleVariableDeclaration[37318-37338]:SingleVariableDeclaration[38736-38756]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[37340-37373]:SingleVariableDeclaration[38758-38791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37375-37437]:Block[38793-38855]"
    }, {
      "left" : "return intoMap(fields(keyFieldNames), mapper);",
      "right" : "return intoMap(fields(keyFieldNames), mapper);",
      "info" : "ReturnStatement[37385-37431]:ReturnStatement[38803-38849]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[37443-37452]:MarkerAnnotation[38861-38870]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37457-37463]:Modifier[38875-38881]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[37464-37469]:Modifier[38882-38887]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[37471-37472]:TypeParameter[38889-38890]"
    }, {
      "left" : "Map<List<?>, E>",
      "right" : "Map<List<?>, E>",
      "info" : "ParameterizedType[37474-37489]:ParameterizedType[38892-38907]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[37490-37497]:SimpleName[38908-38915]"
    }, {
      "left" : "Field<?>[] keys",
      "right" : "Field<?>[] keys",
      "info" : "SingleVariableDeclaration[37498-37513]:SingleVariableDeclaration[38916-38931]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[37515-37548]:SingleVariableDeclaration[38933-38966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37550-38134]:Block[38968-39552]"
    }, {
      "left" : "if (keys == null)",
      "right" : "if (keys == null)",
      "info" : "IfStatement[37560-37622]:IfStatement[38978-39040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37578-37622]:Block[38996-39040]"
    }, {
      "left" : "keys = new Field[0];",
      "right" : "keys = new Field[0];",
      "info" : "ExpressionStatement[37592-37612]:ExpressionStatement[39010-39030]"
    }, {
      "left" : "Map<List<?>, E> map = new LinkedHashMap<List<?>, E>();",
      "right" : "Map<List<?>, E> map = new LinkedHashMap<List<?>, E>();",
      "info" : "VariableDeclarationStatement[37632-37686]:VariableDeclarationStatement[39050-39104]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[37696-38107]:EnhancedForStatement[39114-39525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37718-38107]:Block[39136-39525]"
    }, {
      "left" : "List<Object> keyValueList = new ArrayList<Object>();",
      "right" : "List<Object> keyValueList = new ArrayList<Object>();",
      "info" : "VariableDeclarationStatement[37732-37784]:VariableDeclarationStatement[39150-39202]"
    }, {
      "left" : "for (Field<?> key : keys)",
      "right" : "for (Field<?> key : keys)",
      "info" : "EnhancedForStatement[37797-37894]:EnhancedForStatement[39215-39312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37823-37894]:Block[39241-39312]"
    }, {
      "left" : "keyValueList.add(record.getValue(key));",
      "right" : "keyValueList.add(record.getValue(key));",
      "info" : "ExpressionStatement[37841-37880]:ExpressionStatement[39259-39298]"
    }, {
      "left" : "if (map.put(keyValueList, mapper.map(record)) != null)",
      "right" : "if (map.put(keyValueList, mapper.map(record)) != null)",
      "info" : "IfStatement[37908-38097]:IfStatement[39326-39515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37963-38097]:Block[39381-39515]"
    }, {
      "left" : "throw new InvalidResultException(\"Key list \" + keyValueList + \" is not unique in Result for \" + this);",
      "right" : "throw new InvalidResultException(\"Key list \" + keyValueList + \" is not unique in Result for \" + this);",
      "info" : "ThrowStatement[37981-38083]:ThrowStatement[39399-39501]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[38117-38128]:ReturnStatement[39535-39546]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38140-38149]:MarkerAnnotation[39558-39567]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38154-38160]:Modifier[39572-39578]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[38161-38166]:Modifier[39579-39584]"
    }, {
      "left" : "S extends Record",
      "right" : "S extends Record",
      "info" : "TypeParameter[38168-38184]:TypeParameter[39586-39602]"
    }, {
      "left" : "Map<S, R>",
      "right" : "Map<S, R>",
      "info" : "ParameterizedType[38186-38195]:ParameterizedType[39604-39613]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[38196-38203]:SimpleName[39614-39621]"
    }, {
      "left" : "Table<S> table",
      "right" : "Table<S> table",
      "info" : "SingleVariableDeclaration[38204-38218]:SingleVariableDeclaration[39622-39636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38220-38555]:Block[39638-39973]"
    }, {
      "left" : "Map<S, R> map = new LinkedHashMap<S, R>();",
      "right" : "Map<S, R> map = new LinkedHashMap<S, R>();",
      "info" : "VariableDeclarationStatement[38230-38272]:VariableDeclarationStatement[39648-39690]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[38282-38528]:EnhancedForStatement[39700-39946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38304-38528]:Block[39722-39946]"
    }, {
      "left" : "S key = record.into(table);",
      "right" : "S key = record.into(table);",
      "info" : "VariableDeclarationStatement[38318-38345]:VariableDeclarationStatement[39736-39763]"
    }, {
      "left" : "if (map.put(key, record) != null)",
      "right" : "if (map.put(key, record) != null)",
      "info" : "IfStatement[38359-38518]:IfStatement[39777-39936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38393-38518]:Block[39811-39936]"
    }, {
      "left" : "throw new InvalidResultException(\"Key list \" + key + \" is not unique in Result for \" + this);",
      "right" : "throw new InvalidResultException(\"Key list \" + key + \" is not unique in Result for \" + this);",
      "info" : "ThrowStatement[38411-38504]:ThrowStatement[39829-39922]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[38538-38549]:ReturnStatement[39956-39967]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38561-38570]:MarkerAnnotation[39979-39988]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38575-38581]:Modifier[39993-39999]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[38582-38587]:Modifier[40000-40005]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[38589-38590]:TypeParameter[40007-40008]"
    }, {
      "left" : "S extends Record",
      "right" : "S extends Record",
      "info" : "TypeParameter[38592-38608]:TypeParameter[40010-40026]"
    }, {
      "left" : "Map<S, E>",
      "right" : "Map<S, E>",
      "info" : "ParameterizedType[38610-38619]:ParameterizedType[40028-40037]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[38620-38627]:SimpleName[40038-40045]"
    }, {
      "left" : "Table<S> table",
      "right" : "Table<S> table",
      "info" : "SingleVariableDeclaration[38628-38642]:SingleVariableDeclaration[40046-40060]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[38644-38667]:SingleVariableDeclaration[40062-40085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38669-38779]:Block[40087-40197]"
    }, {
      "left" : "return intoMap(table, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoMap(table, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[38679-38773]:ReturnStatement[40097-40191]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38785-38794]:MarkerAnnotation[40203-40212]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38799-38805]:Modifier[40217-40223]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[38806-38811]:Modifier[40224-40229]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[38813-38814]:TypeParameter[40231-40232]"
    }, {
      "left" : "S extends Record",
      "right" : "S extends Record",
      "info" : "TypeParameter[38816-38832]:TypeParameter[40234-40250]"
    }, {
      "left" : "Map<S, E>",
      "right" : "Map<S, E>",
      "info" : "ParameterizedType[38834-38843]:ParameterizedType[40252-40261]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[38844-38851]:SimpleName[40262-40269]"
    }, {
      "left" : "Table<S> table",
      "right" : "Table<S> table",
      "info" : "SingleVariableDeclaration[38852-38866]:SingleVariableDeclaration[40270-40284]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[38868-38901]:SingleVariableDeclaration[40286-40319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38903-39250]:Block[40321-40668]"
    }, {
      "left" : "Map<S, E> map = new LinkedHashMap<S, E>();",
      "right" : "Map<S, E> map = new LinkedHashMap<S, E>();",
      "info" : "VariableDeclarationStatement[38913-38955]:VariableDeclarationStatement[40331-40373]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[38965-39223]:EnhancedForStatement[40383-40641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38987-39223]:Block[40405-40641]"
    }, {
      "left" : "S key = record.into(table);",
      "right" : "S key = record.into(table);",
      "info" : "VariableDeclarationStatement[39001-39028]:VariableDeclarationStatement[40419-40446]"
    }, {
      "left" : "if (map.put(key, mapper.map(record)) != null)",
      "right" : "if (map.put(key, mapper.map(record)) != null)",
      "info" : "IfStatement[39042-39213]:IfStatement[40460-40631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39088-39213]:Block[40506-40631]"
    }, {
      "left" : "throw new InvalidResultException(\"Key list \" + key + \" is not unique in Result for \" + this);",
      "right" : "throw new InvalidResultException(\"Key list \" + key + \" is not unique in Result for \" + this);",
      "info" : "ThrowStatement[39106-39199]:ThrowStatement[40524-40617]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[39233-39244]:ReturnStatement[40651-40662]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39256-39265]:MarkerAnnotation[40674-40683]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39270-39276]:Modifier[40688-40694]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[39277-39282]:Modifier[40695-40700]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[39284-39285]:TypeParameter[40702-40703]"
    }, {
      "left" : "Map<?, E>",
      "right" : "Map<?, E>",
      "info" : "ParameterizedType[39287-39296]:ParameterizedType[40705-40714]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[39297-39304]:SimpleName[40715-40722]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[39305-39322]:SingleVariableDeclaration[40723-40740]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[39324-39347]:SingleVariableDeclaration[40742-40765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39349-39467]:Block[40767-40885]"
    }, {
      "left" : "return intoMap(keyFieldIndex, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoMap(keyFieldIndex, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[39359-39461]:ReturnStatement[40777-40879]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39473-39482]:MarkerAnnotation[40891-40900]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39487-39493]:Modifier[40905-40911]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[39494-39499]:Modifier[40912-40917]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[39501-39502]:TypeParameter[40919-40920]"
    }, {
      "left" : "Map<?, E>",
      "right" : "Map<?, E>",
      "info" : "ParameterizedType[39504-39513]:ParameterizedType[40922-40931]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[39514-39521]:SimpleName[40932-40939]"
    }, {
      "left" : "String keyFieldName",
      "right" : "String keyFieldName",
      "info" : "SingleVariableDeclaration[39522-39541]:SingleVariableDeclaration[40940-40959]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[39543-39566]:SingleVariableDeclaration[40961-40984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39568-39685]:Block[40986-41103]"
    }, {
      "left" : "return intoMap(keyFieldName, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoMap(keyFieldName, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[39578-39679]:ReturnStatement[40996-41097]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39691-39700]:MarkerAnnotation[41109-41118]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39705-39711]:Modifier[41123-41129]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[39712-39717]:Modifier[41130-41135]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[39719-39720]:TypeParameter[41137-41138]"
    }, {
      "left" : "Map<?, E>",
      "right" : "Map<?, E>",
      "info" : "ParameterizedType[39722-39731]:ParameterizedType[41140-41149]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[39732-39739]:SimpleName[41150-41157]"
    }, {
      "left" : "Name keyFieldName",
      "right" : "Name keyFieldName",
      "info" : "SingleVariableDeclaration[39740-39757]:SingleVariableDeclaration[41158-41175]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[39759-39782]:SingleVariableDeclaration[41177-41200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39784-39901]:Block[41202-41319]"
    }, {
      "left" : "return intoMap(keyFieldName, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoMap(keyFieldName, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[39794-39895]:ReturnStatement[41212-41313]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39907-39916]:MarkerAnnotation[41325-41334]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39921-39927]:Modifier[41339-41345]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[39928-39933]:Modifier[41346-41351]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[39935-39936]:TypeParameter[41353-41354]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[39938-39939]:TypeParameter[41356-41357]"
    }, {
      "left" : "Map<K, E>",
      "right" : "Map<K, E>",
      "info" : "ParameterizedType[39941-39950]:ParameterizedType[41359-41368]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[39951-39958]:SimpleName[41369-41376]"
    }, {
      "left" : "Field<K> key",
      "right" : "Field<K> key",
      "info" : "SingleVariableDeclaration[39959-39971]:SingleVariableDeclaration[41377-41389]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[39973-39996]:SingleVariableDeclaration[41391-41414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39998-40106]:Block[41416-41524]"
    }, {
      "left" : "return intoMap(key, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoMap(key, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[40008-40100]:ReturnStatement[41426-41518]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40112-40121]:MarkerAnnotation[41530-41539]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40126-40132]:Modifier[41544-41550]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[40133-40138]:Modifier[41551-41556]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[40140-40141]:TypeParameter[41558-41559]"
    }, {
      "left" : "Map<?, E>",
      "right" : "Map<?, E>",
      "info" : "ParameterizedType[40143-40152]:ParameterizedType[41561-41570]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[40153-40160]:SimpleName[41571-41578]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[40161-40178]:SingleVariableDeclaration[41579-41596]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[40180-40213]:SingleVariableDeclaration[41598-41631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40215-40270]:Block[41633-41688]"
    }, {
      "left" : "return intoMap0(keyFieldIndex, mapper);",
      "right" : "return intoMap0(keyFieldIndex, mapper);",
      "info" : "ReturnStatement[40225-40264]:ReturnStatement[41643-41682]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40276-40285]:MarkerAnnotation[41694-41703]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40290-40296]:Modifier[41708-41714]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[40297-40302]:Modifier[41715-41720]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[40304-40305]:TypeParameter[41722-41723]"
    }, {
      "left" : "Map<?, E>",
      "right" : "Map<?, E>",
      "info" : "ParameterizedType[40307-40316]:ParameterizedType[41725-41734]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[40317-40324]:SimpleName[41735-41742]"
    }, {
      "left" : "String keyFieldName",
      "right" : "String keyFieldName",
      "info" : "SingleVariableDeclaration[40325-40344]:SingleVariableDeclaration[41743-41762]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[40346-40379]:SingleVariableDeclaration[41764-41797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40381-40441]:Block[41799-41859]"
    }, {
      "left" : "return intoMap(field(keyFieldName), mapper);",
      "right" : "return intoMap(field(keyFieldName), mapper);",
      "info" : "ReturnStatement[40391-40435]:ReturnStatement[41809-41853]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40447-40456]:MarkerAnnotation[41865-41874]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40461-40467]:Modifier[41879-41885]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[40468-40473]:Modifier[41886-41891]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[40475-40476]:TypeParameter[41893-41894]"
    }, {
      "left" : "Map<?, E>",
      "right" : "Map<?, E>",
      "info" : "ParameterizedType[40478-40487]:ParameterizedType[41896-41905]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[40488-40495]:SimpleName[41906-41913]"
    }, {
      "left" : "Name keyFieldName",
      "right" : "Name keyFieldName",
      "info" : "SingleVariableDeclaration[40496-40513]:SingleVariableDeclaration[41914-41931]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[40515-40548]:SingleVariableDeclaration[41933-41966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40550-40610]:Block[41968-42028]"
    }, {
      "left" : "return intoMap(field(keyFieldName), mapper);",
      "right" : "return intoMap(field(keyFieldName), mapper);",
      "info" : "ReturnStatement[40560-40604]:ReturnStatement[41978-42022]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40616-40625]:MarkerAnnotation[42034-42043]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40630-40636]:Modifier[42048-42054]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[40637-40642]:Modifier[42055-42060]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[40644-40645]:TypeParameter[42062-42063]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[40647-40648]:TypeParameter[42065-42066]"
    }, {
      "left" : "Map<K, E>",
      "right" : "Map<K, E>",
      "info" : "ParameterizedType[40650-40659]:ParameterizedType[42068-42077]"
    }, {
      "left" : "intoMap",
      "right" : "intoMap",
      "info" : "SimpleName[40660-40667]:SimpleName[42078-42085]"
    }, {
      "left" : "Field<K> key",
      "right" : "Field<K> key",
      "info" : "SingleVariableDeclaration[40668-40680]:SingleVariableDeclaration[42086-42098]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[40682-40715]:SingleVariableDeclaration[42100-42133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40717-40788]:Block[42135-42206]"
    }, {
      "left" : "return intoMap0(indexOrFail(fieldsRow(), key), mapper);",
      "right" : "return intoMap0(indexOrFail(fieldsRow(), key), mapper);",
      "info" : "ReturnStatement[40727-40782]:ReturnStatement[42145-42200]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[40794-40801]:Modifier[42212-42219]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[40802-40807]:Modifier[42220-42225]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[40809-40810]:TypeParameter[42227-42228]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[40812-40813]:TypeParameter[42230-42231]"
    }, {
      "left" : "Map<K, E>",
      "right" : "Map<K, E>",
      "info" : "ParameterizedType[40815-40824]:ParameterizedType[42233-42242]"
    }, {
      "left" : "intoMap0",
      "right" : "intoMap0",
      "info" : "SimpleName[40825-40833]:SimpleName[42243-42251]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[40834-40851]:SingleVariableDeclaration[42252-42269]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[40853-40886]:SingleVariableDeclaration[42271-42304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40888-41202]:Block[42306-42620]"
    }, {
      "left" : "Map<K, E> map = new LinkedHashMap<K, E>();",
      "right" : "Map<K, E> map = new LinkedHashMap<K, E>();",
      "info" : "VariableDeclarationStatement[40898-40940]:VariableDeclarationStatement[42316-42358]"
    }, {
      "left" : "for (R record : this)\n            if (map.put((K) record.getValue(keyFieldIndex), mapper.map(record)) != null)\n                throw new InvalidResultException(\"Key \" + keyFieldIndex + \" is not unique in Result for \" + this);",
      "right" : "for (R record : this)\n            if (map.put((K) record.getValue(keyFieldIndex), mapper.map(record)) != null)\n                throw new InvalidResultException(\"Key \" + keyFieldIndex + \" is not unique in Result for \" + this);",
      "info" : "EnhancedForStatement[40950-41175]:EnhancedForStatement[42368-42593]"
    }, {
      "left" : "if (map.put((K) record.getValue(keyFieldIndex), mapper.map(record)) != null)",
      "right" : "if (map.put((K) record.getValue(keyFieldIndex), mapper.map(record)) != null)",
      "info" : "IfStatement[40984-41175]:IfStatement[42402-42593]"
    }, {
      "left" : "throw new InvalidResultException(\"Key \" + keyFieldIndex + \" is not unique in Result for \" + this);",
      "right" : "throw new InvalidResultException(\"Key \" + keyFieldIndex + \" is not unique in Result for \" + this);",
      "info" : "ThrowStatement[41077-41175]:ThrowStatement[42495-42593]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[41185-41196]:ReturnStatement[42603-42614]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41208-41217]:MarkerAnnotation[42626-42635]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41222-41228]:Modifier[42640-42646]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[41229-41234]:Modifier[42647-42652]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[41236-41237]:TypeParameter[42654-42655]"
    }, {
      "left" : "Map<K, Result<R>>",
      "right" : "Map<K, Result<R>>",
      "info" : "ParameterizedType[41239-41256]:ParameterizedType[42657-42674]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[41257-41267]:SimpleName[42675-42685]"
    }, {
      "left" : "Field<K> key",
      "right" : "Field<K> key",
      "info" : "SingleVariableDeclaration[41268-41280]:SingleVariableDeclaration[42686-42698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41282-41348]:Block[42700-42766]"
    }, {
      "left" : "return intoGroups0(indexOrFail(fieldsRow(), key));",
      "right" : "return intoGroups0(indexOrFail(fieldsRow(), key));",
      "info" : "ReturnStatement[41292-41342]:ReturnStatement[42710-42760]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41354-41363]:MarkerAnnotation[42772-42781]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41368-41374]:Modifier[42786-42792]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[41375-41380]:Modifier[42793-42798]"
    }, {
      "left" : "Map<?, Result<R>>",
      "right" : "Map<?, Result<R>>",
      "info" : "ParameterizedType[41381-41398]:ParameterizedType[42799-42816]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[41399-41409]:SimpleName[42817-42827]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[41410-41427]:SingleVariableDeclaration[42828-42845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41429-41479]:Block[42847-42897]"
    }, {
      "left" : "return intoGroups0(keyFieldIndex);",
      "right" : "return intoGroups0(keyFieldIndex);",
      "info" : "ReturnStatement[41439-41473]:ReturnStatement[42857-42891]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41485-41494]:MarkerAnnotation[42903-42912]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41499-41505]:Modifier[42917-42923]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[41506-41511]:Modifier[42924-42929]"
    }, {
      "left" : "Map<?, Result<R>>",
      "right" : "Map<?, Result<R>>",
      "info" : "ParameterizedType[41512-41529]:ParameterizedType[42930-42947]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[41530-41540]:SimpleName[42948-42958]"
    }, {
      "left" : "String keyFieldName",
      "right" : "String keyFieldName",
      "info" : "SingleVariableDeclaration[41541-41560]:SingleVariableDeclaration[42959-42978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41562-41617]:Block[42980-43035]"
    }, {
      "left" : "return intoGroups(field(keyFieldName));",
      "right" : "return intoGroups(field(keyFieldName));",
      "info" : "ReturnStatement[41572-41611]:ReturnStatement[42990-43029]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[41623-41632]:MarkerAnnotation[43041-43050]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41637-41643]:Modifier[43055-43061]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[41644-41649]:Modifier[43062-43067]"
    }, {
      "left" : "Map<?, Result<R>>",
      "right" : "Map<?, Result<R>>",
      "info" : "ParameterizedType[41650-41667]:ParameterizedType[43068-43085]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[41668-41678]:SimpleName[43086-43096]"
    }, {
      "left" : "Name keyFieldName",
      "right" : "Name keyFieldName",
      "info" : "SingleVariableDeclaration[41679-41696]:SingleVariableDeclaration[43097-43114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41698-41753]:Block[43116-43171]"
    }, {
      "left" : "return intoGroups(field(keyFieldName));",
      "right" : "return intoGroups(field(keyFieldName));",
      "info" : "ReturnStatement[41708-41747]:ReturnStatement[43126-43165]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[41759-41766]:Modifier[43177-43184]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[41767-41772]:Modifier[43185-43190]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[41774-41775]:TypeParameter[43192-43193]"
    }, {
      "left" : "Map<K, Result<R>>",
      "right" : "Map<K, Result<R>>",
      "info" : "ParameterizedType[41777-41794]:ParameterizedType[43195-43212]"
    }, {
      "left" : "intoGroups0",
      "right" : "intoGroups0",
      "info" : "SimpleName[41795-41806]:SimpleName[43213-43224]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[41807-41824]:SingleVariableDeclaration[43225-43242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41826-42252]:Block[43244-43670]"
    }, {
      "left" : "Map<K, Result<R>> map = new LinkedHashMap<K, Result<R>>();",
      "right" : "Map<K, Result<R>> map = new LinkedHashMap<K, Result<R>>();",
      "info" : "VariableDeclarationStatement[41836-41894]:VariableDeclarationStatement[43254-43312]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[41904-42225]:EnhancedForStatement[43322-43643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41926-42225]:Block[43344-43643]"
    }, {
      "left" : "K val = (K) record.getValue(keyFieldIndex);",
      "right" : "K val = (K) record.getValue(keyFieldIndex);",
      "info" : "VariableDeclarationStatement[41940-41983]:VariableDeclarationStatement[43358-43401]"
    }, {
      "left" : "Result<R> result = map.get(val);",
      "right" : "Result<R> result = map.get(val);",
      "info" : "VariableDeclarationStatement[41996-42028]:VariableDeclarationStatement[43414-43446]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[42042-42182]:IfStatement[43460-43600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42062-42182]:Block[43480-43600]"
    }, {
      "left" : "result = new ResultImpl<R>(configuration, fields);",
      "right" : "result = new ResultImpl<R>(configuration, fields);",
      "info" : "ExpressionStatement[42080-42130]:ExpressionStatement[43498-43548]"
    }, {
      "left" : "map.put(val, result);",
      "right" : "map.put(val, result);",
      "info" : "ExpressionStatement[42147-42168]:ExpressionStatement[43565-43586]"
    }, {
      "left" : "result.add(record);",
      "right" : "result.add(record);",
      "info" : "ExpressionStatement[42196-42215]:ExpressionStatement[43614-43633]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[42235-42246]:ReturnStatement[43653-43664]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42258-42267]:MarkerAnnotation[43676-43685]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42272-42278]:Modifier[43690-43696]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[42279-42284]:Modifier[43697-43702]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[42286-42287]:TypeParameter[43704-43705]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "TypeParameter[42289-42290]:TypeParameter[43707-43708]"
    }, {
      "left" : "Map<K, List<V>>",
      "right" : "Map<K, List<V>>",
      "info" : "ParameterizedType[42292-42307]:ParameterizedType[43710-43725]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[42308-42318]:SimpleName[43726-43736]"
    }, {
      "left" : "Field<K> key",
      "right" : "Field<K> key",
      "info" : "SingleVariableDeclaration[42319-42331]:SingleVariableDeclaration[43737-43749]"
    }, {
      "left" : "Field<V> value",
      "right" : "Field<V> value",
      "info" : "SingleVariableDeclaration[42333-42347]:SingleVariableDeclaration[43751-43765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42349-42507]:Block[43767-43925]"
    }, {
      "left" : "int kIndex = indexOrFail(fieldsRow(), key);",
      "right" : "int kIndex = indexOrFail(fieldsRow(), key);",
      "info" : "VariableDeclarationStatement[42359-42402]:VariableDeclarationStatement[43777-43820]"
    }, {
      "left" : "int vIndex = indexOrFail(fieldsRow(), value);",
      "right" : "int vIndex = indexOrFail(fieldsRow(), value);",
      "info" : "VariableDeclarationStatement[42411-42456]:VariableDeclarationStatement[43829-43874]"
    }, {
      "left" : "return intoGroups0(kIndex, vIndex);",
      "right" : "return intoGroups0(kIndex, vIndex);",
      "info" : "ReturnStatement[42466-42501]:ReturnStatement[43884-43919]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42513-42522]:MarkerAnnotation[43931-43940]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42527-42533]:Modifier[43945-43951]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[42534-42539]:Modifier[43952-43957]"
    }, {
      "left" : "Map<?, List<?>>",
      "right" : "Map<?, List<?>>",
      "info" : "ParameterizedType[42540-42555]:ParameterizedType[43958-43973]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[42556-42566]:SimpleName[43974-43984]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[42567-42584]:SingleVariableDeclaration[43985-44002]"
    }, {
      "left" : "int valueFieldIndex",
      "right" : "int valueFieldIndex",
      "info" : "SingleVariableDeclaration[42586-42605]:SingleVariableDeclaration[44004-44023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42607-42680]:Block[44025-44098]"
    }, {
      "left" : "return (Map) intoGroups0(keyFieldIndex, valueFieldIndex);",
      "right" : "return (Map) intoGroups0(keyFieldIndex, valueFieldIndex);",
      "info" : "ReturnStatement[42617-42674]:ReturnStatement[44035-44092]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42686-42695]:MarkerAnnotation[44104-44113]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42700-42706]:Modifier[44118-44124]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[42707-42712]:Modifier[44125-44130]"
    }, {
      "left" : "Map<?, List<?>>",
      "right" : "Map<?, List<?>>",
      "info" : "ParameterizedType[42713-42728]:ParameterizedType[44131-44146]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[42729-42739]:SimpleName[44147-44157]"
    }, {
      "left" : "String keyFieldName",
      "right" : "String keyFieldName",
      "info" : "SingleVariableDeclaration[42740-42759]:SingleVariableDeclaration[44158-44177]"
    }, {
      "left" : "String valueFieldName",
      "right" : "String valueFieldName",
      "info" : "SingleVariableDeclaration[42761-42782]:SingleVariableDeclaration[44179-44200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42784-42868]:Block[44202-44286]"
    }, {
      "left" : "return (Map) intoGroups(field(keyFieldName), field(valueFieldName));",
      "right" : "return (Map) intoGroups(field(keyFieldName), field(valueFieldName));",
      "info" : "ReturnStatement[42794-42862]:ReturnStatement[44212-44280]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[42874-42883]:MarkerAnnotation[44292-44301]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42888-42894]:Modifier[44306-44312]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[42895-42900]:Modifier[44313-44318]"
    }, {
      "left" : "Map<?, List<?>>",
      "right" : "Map<?, List<?>>",
      "info" : "ParameterizedType[42901-42916]:ParameterizedType[44319-44334]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[42917-42927]:SimpleName[44335-44345]"
    }, {
      "left" : "Name keyFieldName",
      "right" : "Name keyFieldName",
      "info" : "SingleVariableDeclaration[42928-42945]:SingleVariableDeclaration[44346-44363]"
    }, {
      "left" : "Name valueFieldName",
      "right" : "Name valueFieldName",
      "info" : "SingleVariableDeclaration[42947-42966]:SingleVariableDeclaration[44365-44384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42968-43052]:Block[44386-44470]"
    }, {
      "left" : "return (Map) intoGroups(field(keyFieldName), field(valueFieldName));",
      "right" : "return (Map) intoGroups(field(keyFieldName), field(valueFieldName));",
      "info" : "ReturnStatement[42978-43046]:ReturnStatement[44396-44464]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[43058-43065]:Modifier[44476-44483]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[43066-43071]:Modifier[44484-44489]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[43073-43074]:TypeParameter[44491-44492]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "TypeParameter[43076-43077]:TypeParameter[44494-44495]"
    }, {
      "left" : "Map<K, List<V>>",
      "right" : "Map<K, List<V>>",
      "info" : "ParameterizedType[43079-43094]:ParameterizedType[44497-44512]"
    }, {
      "left" : "intoGroups0",
      "right" : "intoGroups0",
      "info" : "SimpleName[43095-43106]:SimpleName[44513-44524]"
    }, {
      "left" : "int kIndex",
      "right" : "int kIndex",
      "info" : "SingleVariableDeclaration[43107-43117]:SingleVariableDeclaration[44525-44535]"
    }, {
      "left" : "int vIndex",
      "right" : "int vIndex",
      "info" : "SingleVariableDeclaration[43119-43129]:SingleVariableDeclaration[44537-44547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43131-43558]:Block[44549-44976]"
    }, {
      "left" : "Map<K, List<V>> map = new LinkedHashMap<K, List<V>>();",
      "right" : "Map<K, List<V>> map = new LinkedHashMap<K, List<V>>();",
      "info" : "VariableDeclarationStatement[43141-43195]:VariableDeclarationStatement[44559-44613]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[43205-43531]:EnhancedForStatement[44623-44949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43227-43531]:Block[44645-44949]"
    }, {
      "left" : "K k = (K) record.getValue(kIndex);",
      "right" : "K k = (K) record.getValue(kIndex);",
      "info" : "VariableDeclarationStatement[43241-43275]:VariableDeclarationStatement[44659-44693]"
    }, {
      "left" : "V v = (V) record.getValue(vIndex);",
      "right" : "V v = (V) record.getValue(vIndex);",
      "info" : "VariableDeclarationStatement[43288-43322]:VariableDeclarationStatement[44706-44740]"
    }, {
      "left" : "List<V> result = map.get(k);",
      "right" : "List<V> result = map.get(k);",
      "info" : "VariableDeclarationStatement[43335-43363]:VariableDeclarationStatement[44753-44781]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[43377-43493]:IfStatement[44795-44911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43397-43493]:Block[44815-44911]"
    }, {
      "left" : "result = new ArrayList<V>();",
      "right" : "result = new ArrayList<V>();",
      "info" : "ExpressionStatement[43415-43443]:ExpressionStatement[44833-44861]"
    }, {
      "left" : "map.put(k, result);",
      "right" : "map.put(k, result);",
      "info" : "ExpressionStatement[43460-43479]:ExpressionStatement[44878-44897]"
    }, {
      "left" : "result.add(v);",
      "right" : "result.add(v);",
      "info" : "ExpressionStatement[43507-43521]:ExpressionStatement[44925-44939]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[43541-43552]:ReturnStatement[44959-44970]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43564-43573]:MarkerAnnotation[44982-44991]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43578-43584]:Modifier[44996-45002]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[43585-43590]:Modifier[45003-45008]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[43592-43593]:TypeParameter[45010-45011]"
    }, {
      "left" : "Map<?, List<E>>",
      "right" : "Map<?, List<E>>",
      "info" : "ParameterizedType[43595-43610]:ParameterizedType[45013-45028]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[43611-43621]:SimpleName[45029-45039]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[43622-43639]:SingleVariableDeclaration[45040-45057]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[43641-43664]:SingleVariableDeclaration[45059-45082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43666-43787]:Block[45084-45205]"
    }, {
      "left" : "return intoGroups(keyFieldIndex, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoGroups(keyFieldIndex, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[43676-43781]:ReturnStatement[45094-45199]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[43793-43802]:MarkerAnnotation[45211-45220]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43807-43813]:Modifier[45225-45231]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[43814-43819]:Modifier[45232-45237]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[43821-43822]:TypeParameter[45239-45240]"
    }, {
      "left" : "Map<?, List<E>>",
      "right" : "Map<?, List<E>>",
      "info" : "ParameterizedType[43824-43839]:ParameterizedType[45242-45257]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[43840-43850]:SimpleName[45258-45268]"
    }, {
      "left" : "String keyFieldName",
      "right" : "String keyFieldName",
      "info" : "SingleVariableDeclaration[43851-43870]:SingleVariableDeclaration[45269-45288]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[43872-43895]:SingleVariableDeclaration[45290-45313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43897-44017]:Block[45315-45435]"
    }, {
      "left" : "return intoGroups(keyFieldName, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoGroups(keyFieldName, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[43907-44011]:ReturnStatement[45325-45429]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[44023-44032]:MarkerAnnotation[45441-45450]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44037-44043]:Modifier[45455-45461]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[44044-44049]:Modifier[45462-45467]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[44051-44052]:TypeParameter[45469-45470]"
    }, {
      "left" : "Map<?, List<E>>",
      "right" : "Map<?, List<E>>",
      "info" : "ParameterizedType[44054-44069]:ParameterizedType[45472-45487]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[44070-44080]:SimpleName[45488-45498]"
    }, {
      "left" : "Name keyFieldName",
      "right" : "Name keyFieldName",
      "info" : "SingleVariableDeclaration[44081-44098]:SingleVariableDeclaration[45499-45516]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[44100-44123]:SingleVariableDeclaration[45518-45541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44125-44245]:Block[45543-45663]"
    }, {
      "left" : "return intoGroups(keyFieldName, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoGroups(keyFieldName, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[44135-44239]:ReturnStatement[45553-45657]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[44251-44260]:MarkerAnnotation[45669-45678]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44265-44271]:Modifier[45683-45689]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[44272-44277]:Modifier[45690-45695]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[44279-44280]:TypeParameter[45697-45698]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[44282-44283]:TypeParameter[45700-45701]"
    }, {
      "left" : "Map<K, List<E>>",
      "right" : "Map<K, List<E>>",
      "info" : "ParameterizedType[44285-44300]:ParameterizedType[45703-45718]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[44301-44311]:SimpleName[45719-45729]"
    }, {
      "left" : "Field<K> key",
      "right" : "Field<K> key",
      "info" : "SingleVariableDeclaration[44312-44324]:SingleVariableDeclaration[45730-45742]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[44326-44349]:SingleVariableDeclaration[45744-45767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44351-44462]:Block[45769-45880]"
    }, {
      "left" : "return intoGroups(key, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoGroups(key, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[44361-44456]:ReturnStatement[45779-45874]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[44468-44477]:MarkerAnnotation[45886-45895]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44482-44488]:Modifier[45900-45906]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[44489-44494]:Modifier[45907-45912]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[44496-44497]:TypeParameter[45914-45915]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[44499-44500]:TypeParameter[45917-45918]"
    }, {
      "left" : "Map<K, List<E>>",
      "right" : "Map<K, List<E>>",
      "info" : "ParameterizedType[44502-44517]:ParameterizedType[45920-45935]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[44518-44528]:SimpleName[45936-45946]"
    }, {
      "left" : "Field<K> key",
      "right" : "Field<K> key",
      "info" : "SingleVariableDeclaration[44529-44541]:SingleVariableDeclaration[45947-45959]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[44543-44576]:SingleVariableDeclaration[45961-45994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44578-44652]:Block[45996-46070]"
    }, {
      "left" : "return intoGroups0(indexOrFail(fieldsRow(), key), mapper);",
      "right" : "return intoGroups0(indexOrFail(fieldsRow(), key), mapper);",
      "info" : "ReturnStatement[44588-44646]:ReturnStatement[46006-46064]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[44658-44667]:MarkerAnnotation[46076-46085]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44672-44678]:Modifier[46090-46096]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[44679-44684]:Modifier[46097-46102]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[44686-44687]:TypeParameter[46104-46105]"
    }, {
      "left" : "Map<?, List<E>>",
      "right" : "Map<?, List<E>>",
      "info" : "ParameterizedType[44689-44704]:ParameterizedType[46107-46122]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[44705-44715]:SimpleName[46123-46133]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[44716-44733]:SingleVariableDeclaration[46134-46151]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[44735-44768]:SingleVariableDeclaration[46153-46186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44770-44828]:Block[46188-46246]"
    }, {
      "left" : "return intoGroups0(keyFieldIndex, mapper);",
      "right" : "return intoGroups0(keyFieldIndex, mapper);",
      "info" : "ReturnStatement[44780-44822]:ReturnStatement[46198-46240]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[44834-44843]:MarkerAnnotation[46252-46261]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44848-44854]:Modifier[46266-46272]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[44855-44860]:Modifier[46273-46278]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[44862-44863]:TypeParameter[46280-46281]"
    }, {
      "left" : "Map<?, List<E>>",
      "right" : "Map<?, List<E>>",
      "info" : "ParameterizedType[44865-44880]:ParameterizedType[46283-46298]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[44881-44891]:SimpleName[46299-46309]"
    }, {
      "left" : "String keyFieldName",
      "right" : "String keyFieldName",
      "info" : "SingleVariableDeclaration[44892-44911]:SingleVariableDeclaration[46310-46329]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[44913-44946]:SingleVariableDeclaration[46331-46364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44948-45011]:Block[46366-46429]"
    }, {
      "left" : "return intoGroups(field(keyFieldName), mapper);",
      "right" : "return intoGroups(field(keyFieldName), mapper);",
      "info" : "ReturnStatement[44958-45005]:ReturnStatement[46376-46423]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[45017-45026]:MarkerAnnotation[46435-46444]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45031-45037]:Modifier[46449-46455]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[45038-45043]:Modifier[46456-46461]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[45045-45046]:TypeParameter[46463-46464]"
    }, {
      "left" : "Map<?, List<E>>",
      "right" : "Map<?, List<E>>",
      "info" : "ParameterizedType[45048-45063]:ParameterizedType[46466-46481]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[45064-45074]:SimpleName[46482-46492]"
    }, {
      "left" : "Name keyFieldName",
      "right" : "Name keyFieldName",
      "info" : "SingleVariableDeclaration[45075-45092]:SingleVariableDeclaration[46493-46510]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[45094-45127]:SingleVariableDeclaration[46512-46545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45129-45192]:Block[46547-46610]"
    }, {
      "left" : "return intoGroups(field(keyFieldName), mapper);",
      "right" : "return intoGroups(field(keyFieldName), mapper);",
      "info" : "ReturnStatement[45139-45186]:ReturnStatement[46557-46604]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[45198-45205]:Modifier[46616-46623]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[45206-45211]:Modifier[46624-46629]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[45213-45214]:TypeParameter[46631-46632]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[45216-45217]:TypeParameter[46634-46635]"
    }, {
      "left" : "Map<K, List<E>>",
      "right" : "Map<K, List<E>>",
      "info" : "ParameterizedType[45219-45234]:ParameterizedType[46637-46652]"
    }, {
      "left" : "intoGroups0",
      "right" : "intoGroups0",
      "info" : "SimpleName[45235-45246]:SimpleName[46653-46664]"
    }, {
      "left" : "int keyFieldIndex",
      "right" : "int keyFieldIndex",
      "info" : "SingleVariableDeclaration[45247-45264]:SingleVariableDeclaration[46665-46682]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[45266-45299]:SingleVariableDeclaration[46684-46717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45301-45710]:Block[46719-47128]"
    }, {
      "left" : "Map<K, List<E>> map = new LinkedHashMap<K, List<E>>();",
      "right" : "Map<K, List<E>> map = new LinkedHashMap<K, List<E>>();",
      "info" : "VariableDeclarationStatement[45311-45365]:VariableDeclarationStatement[46729-46783]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[45375-45683]:EnhancedForStatement[46793-47101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45397-45683]:Block[46815-47101]"
    }, {
      "left" : "K keyVal = (K) record.getValue(keyFieldIndex);",
      "right" : "K keyVal = (K) record.getValue(keyFieldIndex);",
      "info" : "VariableDeclarationStatement[45411-45457]:VariableDeclarationStatement[46829-46875]"
    }, {
      "left" : "List<E> list = map.get(keyVal);",
      "right" : "List<E> list = map.get(keyVal);",
      "info" : "VariableDeclarationStatement[45471-45502]:VariableDeclarationStatement[46889-46920]"
    }, {
      "left" : "if (list == null)",
      "right" : "if (list == null)",
      "info" : "IfStatement[45515-45630]:IfStatement[46933-47048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45533-45630]:Block[46951-47048]"
    }, {
      "left" : "list = new ArrayList<E>();",
      "right" : "list = new ArrayList<E>();",
      "info" : "ExpressionStatement[45551-45577]:ExpressionStatement[46969-46995]"
    }, {
      "left" : "map.put(keyVal, list);",
      "right" : "map.put(keyVal, list);",
      "info" : "ExpressionStatement[45594-45616]:ExpressionStatement[47012-47034]"
    }, {
      "left" : "list.add(mapper.map(record));",
      "right" : "list.add(mapper.map(record));",
      "info" : "ExpressionStatement[45644-45673]:ExpressionStatement[47062-47091]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[45693-45704]:ReturnStatement[47111-47122]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[45716-45725]:MarkerAnnotation[47134-47143]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45730-45736]:Modifier[47148-47154]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[45737-45742]:Modifier[47155-47160]"
    }, {
      "left" : "Map<Record, Result<R>>",
      "right" : "Map<Record, Result<R>>",
      "info" : "ParameterizedType[45743-45765]:ParameterizedType[47161-47183]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[45766-45776]:SimpleName[47184-47194]"
    }, {
      "left" : "int[] keyFieldIndexes",
      "right" : "int[] keyFieldIndexes",
      "info" : "SingleVariableDeclaration[45777-45798]:SingleVariableDeclaration[47195-47216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45800-45859]:Block[47218-47277]"
    }, {
      "left" : "return intoGroups(fields(keyFieldIndexes));",
      "right" : "return intoGroups(fields(keyFieldIndexes));",
      "info" : "ReturnStatement[45810-45853]:ReturnStatement[47228-47271]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[45865-45874]:MarkerAnnotation[47283-47292]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45879-45885]:Modifier[47297-47303]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[45886-45891]:Modifier[47304-47309]"
    }, {
      "left" : "Map<Record, Result<R>>",
      "right" : "Map<Record, Result<R>>",
      "info" : "ParameterizedType[45892-45914]:ParameterizedType[47310-47332]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[45915-45925]:SimpleName[47333-47343]"
    }, {
      "left" : "String[] keyFieldNames",
      "right" : "String[] keyFieldNames",
      "info" : "SingleVariableDeclaration[45926-45948]:SingleVariableDeclaration[47344-47366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45950-46007]:Block[47368-47425]"
    }, {
      "left" : "return intoGroups(fields(keyFieldNames));",
      "right" : "return intoGroups(fields(keyFieldNames));",
      "info" : "ReturnStatement[45960-46001]:ReturnStatement[47378-47419]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[46013-46022]:MarkerAnnotation[47431-47440]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46027-46033]:Modifier[47445-47451]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[46034-46039]:Modifier[47452-47457]"
    }, {
      "left" : "Map<Record, Result<R>>",
      "right" : "Map<Record, Result<R>>",
      "info" : "ParameterizedType[46040-46062]:ParameterizedType[47458-47480]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[46063-46073]:SimpleName[47481-47491]"
    }, {
      "left" : "Name[] keyFieldNames",
      "right" : "Name[] keyFieldNames",
      "info" : "SingleVariableDeclaration[46074-46094]:SingleVariableDeclaration[47492-47512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46096-46153]:Block[47514-47571]"
    }, {
      "left" : "return intoGroups(fields(keyFieldNames));",
      "right" : "return intoGroups(fields(keyFieldNames));",
      "info" : "ReturnStatement[46106-46147]:ReturnStatement[47524-47565]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[46159-46168]:MarkerAnnotation[47577-47586]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46173-46179]:Modifier[47591-47597]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[46180-46185]:Modifier[47598-47603]"
    }, {
      "left" : "Map<Record, Result<R>>",
      "right" : "Map<Record, Result<R>>",
      "info" : "ParameterizedType[46186-46208]:ParameterizedType[47604-47626]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[46209-46219]:SimpleName[47627-47637]"
    }, {
      "left" : "Field<?>[] keys",
      "right" : "Field<?>[] keys",
      "info" : "SingleVariableDeclaration[46220-46235]:SingleVariableDeclaration[47638-47653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46237-46863]:Block[47655-48281]"
    }, {
      "left" : "if (keys == null)",
      "right" : "if (keys == null)",
      "info" : "IfStatement[46247-46309]:IfStatement[47665-47727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46265-46309]:Block[47683-47727]"
    }, {
      "left" : "keys = new Field[0];",
      "right" : "keys = new Field[0];",
      "info" : "ExpressionStatement[46279-46299]:ExpressionStatement[47697-47717]"
    }, {
      "left" : "Map<Record, Result<R>> map = new LinkedHashMap<Record, Result<R>>();",
      "right" : "Map<Record, Result<R>> map = new LinkedHashMap<Record, Result<R>>();",
      "info" : "VariableDeclarationStatement[46319-46387]:VariableDeclarationStatement[47737-47805]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[46396-46836]:EnhancedForStatement[47814-48254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46418-46836]:Block[47836-48254]"
    }, {
      "left" : "RecordImpl key = new RecordImpl(keys);",
      "right" : "RecordImpl key = new RecordImpl(keys);",
      "info" : "VariableDeclarationStatement[46432-46470]:VariableDeclarationStatement[47850-47888]"
    }, {
      "left" : "for (Field<?> field : keys)",
      "right" : "for (Field<?> field : keys)",
      "info" : "EnhancedForStatement[46484-46587]:EnhancedForStatement[47902-48005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46512-46587]:Block[47930-48005]"
    }, {
      "left" : "Utils.copyValue(key, field, record, field);",
      "right" : "Utils.copyValue(key, field, record, field);",
      "info" : "ExpressionStatement[46530-46573]:ExpressionStatement[47948-47991]"
    }, {
      "left" : "Result<R> result = map.get(key);",
      "right" : "Result<R> result = map.get(key);",
      "info" : "VariableDeclarationStatement[46601-46633]:VariableDeclarationStatement[48019-48051]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[46646-46793]:IfStatement[48064-48211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46666-46793]:Block[48084-48211]"
    }, {
      "left" : "result = new ResultImpl<R>(configuration(), this.fields);",
      "right" : "result = new ResultImpl<R>(configuration(), this.fields);",
      "info" : "ExpressionStatement[46684-46741]:ExpressionStatement[48102-48159]"
    }, {
      "left" : "map.put(key, result);",
      "right" : "map.put(key, result);",
      "info" : "ExpressionStatement[46758-46779]:ExpressionStatement[48176-48197]"
    }, {
      "left" : "result.add(record);",
      "right" : "result.add(record);",
      "info" : "ExpressionStatement[46807-46826]:ExpressionStatement[48225-48244]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[46846-46857]:ReturnStatement[48264-48275]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[46869-46878]:MarkerAnnotation[48287-48296]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46883-46889]:Modifier[48301-48307]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[46891-46892]:TypeParameter[48309-48310]"
    }, {
      "left" : "Map<Record, List<E>>",
      "right" : "Map<Record, List<E>>",
      "info" : "ParameterizedType[46894-46914]:ParameterizedType[48312-48332]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[46915-46925]:SimpleName[48333-48343]"
    }, {
      "left" : "int[] keyFieldIndexes",
      "right" : "int[] keyFieldIndexes",
      "info" : "SingleVariableDeclaration[46926-46947]:SingleVariableDeclaration[48344-48365]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[46949-46972]:SingleVariableDeclaration[48367-48390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46974-47097]:Block[48392-48515]"
    }, {
      "left" : "return intoGroups(keyFieldIndexes, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoGroups(keyFieldIndexes, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[46984-47091]:ReturnStatement[48402-48509]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47103-47112]:MarkerAnnotation[48521-48530]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47117-47123]:Modifier[48535-48541]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[47125-47126]:TypeParameter[48543-48544]"
    }, {
      "left" : "Map<Record, List<E>>",
      "right" : "Map<Record, List<E>>",
      "info" : "ParameterizedType[47128-47148]:ParameterizedType[48546-48566]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[47149-47159]:SimpleName[48567-48577]"
    }, {
      "left" : "String[] keyFieldNames",
      "right" : "String[] keyFieldNames",
      "info" : "SingleVariableDeclaration[47160-47182]:SingleVariableDeclaration[48578-48600]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[47184-47207]:SingleVariableDeclaration[48602-48625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47209-47330]:Block[48627-48748]"
    }, {
      "left" : "return intoGroups(keyFieldNames, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoGroups(keyFieldNames, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[47219-47324]:ReturnStatement[48637-48742]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47336-47345]:MarkerAnnotation[48754-48763]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47350-47356]:Modifier[48768-48774]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[47358-47359]:TypeParameter[48776-48777]"
    }, {
      "left" : "Map<Record, List<E>>",
      "right" : "Map<Record, List<E>>",
      "info" : "ParameterizedType[47361-47381]:ParameterizedType[48779-48799]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[47382-47392]:SimpleName[48800-48810]"
    }, {
      "left" : "Name[] keyFieldNames",
      "right" : "Name[] keyFieldNames",
      "info" : "SingleVariableDeclaration[47393-47413]:SingleVariableDeclaration[48811-48831]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[47415-47438]:SingleVariableDeclaration[48833-48856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47440-47561]:Block[48858-48979]"
    }, {
      "left" : "return intoGroups(keyFieldNames, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoGroups(keyFieldNames, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[47450-47555]:ReturnStatement[48868-48973]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47567-47576]:MarkerAnnotation[48985-48994]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47581-47587]:Modifier[48999-49005]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[47588-47593]:Modifier[49006-49011]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[47595-47596]:TypeParameter[49013-49014]"
    }, {
      "left" : "Map<Record, List<E>>",
      "right" : "Map<Record, List<E>>",
      "info" : "ParameterizedType[47598-47618]:ParameterizedType[49016-49036]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[47619-47629]:SimpleName[49037-49047]"
    }, {
      "left" : "Field<?>[] keys",
      "right" : "Field<?>[] keys",
      "info" : "SingleVariableDeclaration[47630-47645]:SingleVariableDeclaration[49048-49063]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[47647-47670]:SingleVariableDeclaration[49065-49088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47672-47784]:Block[49090-49202]"
    }, {
      "left" : "return intoGroups(keys, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoGroups(keys, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[47682-47778]:ReturnStatement[49100-49196]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47790-47799]:MarkerAnnotation[49208-49217]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47804-47810]:Modifier[49222-49228]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[47811-47816]:Modifier[49229-49234]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[47818-47819]:TypeParameter[49236-49237]"
    }, {
      "left" : "Map<Record, List<E>>",
      "right" : "Map<Record, List<E>>",
      "info" : "ParameterizedType[47821-47841]:ParameterizedType[49239-49259]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[47842-47852]:SimpleName[49260-49270]"
    }, {
      "left" : "int[] keyFieldIndexes",
      "right" : "int[] keyFieldIndexes",
      "info" : "SingleVariableDeclaration[47853-47874]:SingleVariableDeclaration[49271-49292]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[47876-47909]:SingleVariableDeclaration[49294-49327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47911-47978]:Block[49329-49396]"
    }, {
      "left" : "return intoGroups(fields(keyFieldIndexes), mapper);",
      "right" : "return intoGroups(fields(keyFieldIndexes), mapper);",
      "info" : "ReturnStatement[47921-47972]:ReturnStatement[49339-49390]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47984-47993]:MarkerAnnotation[49402-49411]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47998-48004]:Modifier[49416-49422]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[48005-48010]:Modifier[49423-49428]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[48012-48013]:TypeParameter[49430-49431]"
    }, {
      "left" : "Map<Record, List<E>>",
      "right" : "Map<Record, List<E>>",
      "info" : "ParameterizedType[48015-48035]:ParameterizedType[49433-49453]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[48036-48046]:SimpleName[49454-49464]"
    }, {
      "left" : "String[] keyFieldNames",
      "right" : "String[] keyFieldNames",
      "info" : "SingleVariableDeclaration[48047-48069]:SingleVariableDeclaration[49465-49487]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[48071-48104]:SingleVariableDeclaration[49489-49522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48106-48171]:Block[49524-49589]"
    }, {
      "left" : "return intoGroups(fields(keyFieldNames), mapper);",
      "right" : "return intoGroups(fields(keyFieldNames), mapper);",
      "info" : "ReturnStatement[48116-48165]:ReturnStatement[49534-49583]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[48177-48186]:MarkerAnnotation[49595-49604]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48191-48197]:Modifier[49609-49615]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[48198-48203]:Modifier[49616-49621]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[48205-48206]:TypeParameter[49623-49624]"
    }, {
      "left" : "Map<Record, List<E>>",
      "right" : "Map<Record, List<E>>",
      "info" : "ParameterizedType[48208-48228]:ParameterizedType[49626-49646]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[48229-48239]:SimpleName[49647-49657]"
    }, {
      "left" : "Name[] keyFieldNames",
      "right" : "Name[] keyFieldNames",
      "info" : "SingleVariableDeclaration[48240-48260]:SingleVariableDeclaration[49658-49678]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[48262-48295]:SingleVariableDeclaration[49680-49713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48297-48362]:Block[49715-49780]"
    }, {
      "left" : "return intoGroups(fields(keyFieldNames), mapper);",
      "right" : "return intoGroups(fields(keyFieldNames), mapper);",
      "info" : "ReturnStatement[48307-48356]:ReturnStatement[49725-49774]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[48368-48377]:MarkerAnnotation[49786-49795]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48382-48388]:Modifier[49800-49806]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[48389-48394]:Modifier[49807-49812]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[48396-48397]:TypeParameter[49814-49815]"
    }, {
      "left" : "Map<Record, List<E>>",
      "right" : "Map<Record, List<E>>",
      "info" : "ParameterizedType[48399-48419]:ParameterizedType[49817-49837]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[48420-48430]:SimpleName[49838-49848]"
    }, {
      "left" : "Field<?>[] keys",
      "right" : "Field<?>[] keys",
      "info" : "SingleVariableDeclaration[48431-48446]:SingleVariableDeclaration[49849-49864]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[48448-48481]:SingleVariableDeclaration[49866-49899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48483-49076]:Block[49901-50494]"
    }, {
      "left" : "if (keys == null)",
      "right" : "if (keys == null)",
      "info" : "IfStatement[48493-48555]:IfStatement[49911-49973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48511-48555]:Block[49929-49973]"
    }, {
      "left" : "keys = new Field[0];",
      "right" : "keys = new Field[0];",
      "info" : "ExpressionStatement[48525-48545]:ExpressionStatement[49943-49963]"
    }, {
      "left" : "Map<Record, List<E>> map = new LinkedHashMap<Record, List<E>>();",
      "right" : "Map<Record, List<E>> map = new LinkedHashMap<Record, List<E>>();",
      "info" : "VariableDeclarationStatement[48565-48629]:VariableDeclarationStatement[49983-50047]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[48638-49049]:EnhancedForStatement[50056-50467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48660-49049]:Block[50078-50467]"
    }, {
      "left" : "RecordImpl key = new RecordImpl(keys);",
      "right" : "RecordImpl key = new RecordImpl(keys);",
      "info" : "VariableDeclarationStatement[48674-48712]:VariableDeclarationStatement[50092-50130]"
    }, {
      "left" : "for (Field<?> field : keys)",
      "right" : "for (Field<?> field : keys)",
      "info" : "EnhancedForStatement[48726-48829]:EnhancedForStatement[50144-50247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48754-48829]:Block[50172-50247]"
    }, {
      "left" : "Utils.copyValue(key, field, record, field);",
      "right" : "Utils.copyValue(key, field, record, field);",
      "info" : "ExpressionStatement[48772-48815]:ExpressionStatement[50190-50233]"
    }, {
      "left" : "List<E> list = map.get(key);",
      "right" : "List<E> list = map.get(key);",
      "info" : "VariableDeclarationStatement[48843-48871]:VariableDeclarationStatement[50261-50289]"
    }, {
      "left" : "if (list == null)",
      "right" : "if (list == null)",
      "info" : "IfStatement[48884-48996]:IfStatement[50302-50414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48902-48996]:Block[50320-50414]"
    }, {
      "left" : "list = new ArrayList<E>();",
      "right" : "list = new ArrayList<E>();",
      "info" : "ExpressionStatement[48920-48946]:ExpressionStatement[50338-50364]"
    }, {
      "left" : "map.put(key, list);",
      "right" : "map.put(key, list);",
      "info" : "ExpressionStatement[48963-48982]:ExpressionStatement[50381-50400]"
    }, {
      "left" : "list.add(mapper.map(record));",
      "right" : "list.add(mapper.map(record));",
      "info" : "ExpressionStatement[49010-49039]:ExpressionStatement[50428-50457]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[49059-49070]:ReturnStatement[50477-50488]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[49082-49091]:MarkerAnnotation[50500-50509]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49096-49102]:Modifier[50514-50520]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[49103-49108]:Modifier[50521-50526]"
    }, {
      "left" : "S extends Record",
      "right" : "S extends Record",
      "info" : "TypeParameter[49110-49126]:TypeParameter[50528-50544]"
    }, {
      "left" : "Map<S, Result<R>>",
      "right" : "Map<S, Result<R>>",
      "info" : "ParameterizedType[49128-49145]:ParameterizedType[50546-50563]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[49146-49156]:SimpleName[50564-50574]"
    }, {
      "left" : "Table<S> table",
      "right" : "Table<S> table",
      "info" : "SingleVariableDeclaration[49157-49171]:SingleVariableDeclaration[50575-50589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49173-49590]:Block[50591-51008]"
    }, {
      "left" : "Map<S, Result<R>> map = new LinkedHashMap<S, Result<R>>();",
      "right" : "Map<S, Result<R>> map = new LinkedHashMap<S, Result<R>>();",
      "info" : "VariableDeclarationStatement[49183-49241]:VariableDeclarationStatement[50601-50659]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[49251-49563]:EnhancedForStatement[50669-50981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49273-49563]:Block[50691-50981]"
    }, {
      "left" : "S key = record.into(table);",
      "right" : "S key = record.into(table);",
      "info" : "VariableDeclarationStatement[49287-49314]:VariableDeclarationStatement[50705-50732]"
    }, {
      "left" : "Result<R> result = map.get(key);",
      "right" : "Result<R> result = map.get(key);",
      "info" : "VariableDeclarationStatement[49328-49360]:VariableDeclarationStatement[50746-50778]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[49373-49520]:IfStatement[50791-50938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49393-49520]:Block[50811-50938]"
    }, {
      "left" : "result = new ResultImpl<R>(configuration(), this.fields);",
      "right" : "result = new ResultImpl<R>(configuration(), this.fields);",
      "info" : "ExpressionStatement[49411-49468]:ExpressionStatement[50829-50886]"
    }, {
      "left" : "map.put(key, result);",
      "right" : "map.put(key, result);",
      "info" : "ExpressionStatement[49485-49506]:ExpressionStatement[50903-50924]"
    }, {
      "left" : "result.add(record);",
      "right" : "result.add(record);",
      "info" : "ExpressionStatement[49534-49553]:ExpressionStatement[50952-50971]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[49573-49584]:ReturnStatement[50991-51002]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[49596-49605]:MarkerAnnotation[51014-51023]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49610-49616]:Modifier[51028-51034]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[49617-49622]:Modifier[51035-51040]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[49624-49625]:TypeParameter[51042-51043]"
    }, {
      "left" : "S extends Record",
      "right" : "S extends Record",
      "info" : "TypeParameter[49627-49643]:TypeParameter[51045-51061]"
    }, {
      "left" : "Map<S, List<E>>",
      "right" : "Map<S, List<E>>",
      "info" : "ParameterizedType[49645-49660]:ParameterizedType[51063-51078]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[49661-49671]:SimpleName[51079-51089]"
    }, {
      "left" : "Table<S> table",
      "right" : "Table<S> table",
      "info" : "SingleVariableDeclaration[49672-49686]:SingleVariableDeclaration[51090-51104]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[49688-49711]:SingleVariableDeclaration[51106-51129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49713-49826]:Block[51131-51244]"
    }, {
      "left" : "return intoGroups(table, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "right" : "return intoGroups(table, Utils.configuration(this).recordMapperProvider().provide(fields, type));",
      "info" : "ReturnStatement[49723-49820]:ReturnStatement[51141-51238]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[49832-49841]:MarkerAnnotation[51250-51259]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49846-49852]:Modifier[51264-51270]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[49853-49858]:Modifier[51271-51276]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[49860-49861]:TypeParameter[51278-51279]"
    }, {
      "left" : "S extends Record",
      "right" : "S extends Record",
      "info" : "TypeParameter[49863-49879]:TypeParameter[51281-51297]"
    }, {
      "left" : "Map<S, List<E>>",
      "right" : "Map<S, List<E>>",
      "info" : "ParameterizedType[49881-49896]:ParameterizedType[51299-51314]"
    }, {
      "left" : "intoGroups",
      "right" : "intoGroups",
      "info" : "SimpleName[49897-49907]:SimpleName[51315-51325]"
    }, {
      "left" : "Table<S> table",
      "right" : "Table<S> table",
      "info" : "SingleVariableDeclaration[49908-49922]:SingleVariableDeclaration[51326-51340]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[49924-49957]:SingleVariableDeclaration[51342-51375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49959-50343]:Block[51377-51761]"
    }, {
      "left" : "Map<S, List<E>> map = new LinkedHashMap<S, List<E>>();",
      "right" : "Map<S, List<E>> map = new LinkedHashMap<S, List<E>>();",
      "info" : "VariableDeclarationStatement[49969-50023]:VariableDeclarationStatement[51387-51441]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[50033-50316]:EnhancedForStatement[51451-51734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50055-50316]:Block[51473-51734]"
    }, {
      "left" : "S key = record.into(table);",
      "right" : "S key = record.into(table);",
      "info" : "VariableDeclarationStatement[50069-50096]:VariableDeclarationStatement[51487-51514]"
    }, {
      "left" : "List<E> list = map.get(key);",
      "right" : "List<E> list = map.get(key);",
      "info" : "VariableDeclarationStatement[50110-50138]:VariableDeclarationStatement[51528-51556]"
    }, {
      "left" : "if (list == null)",
      "right" : "if (list == null)",
      "info" : "IfStatement[50151-50263]:IfStatement[51569-51681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50169-50263]:Block[51587-51681]"
    }, {
      "left" : "list = new ArrayList<E>();",
      "right" : "list = new ArrayList<E>();",
      "info" : "ExpressionStatement[50187-50213]:ExpressionStatement[51605-51631]"
    }, {
      "left" : "map.put(key, list);",
      "right" : "map.put(key, list);",
      "info" : "ExpressionStatement[50230-50249]:ExpressionStatement[51648-51667]"
    }, {
      "left" : "list.add(mapper.map(record));",
      "right" : "list.add(mapper.map(record));",
      "info" : "ExpressionStatement[50277-50306]:ExpressionStatement[51695-51724]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[50326-50337]:ReturnStatement[51744-51755]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[50349-50358]:MarkerAnnotation[51767-51776]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[50363-50374]:MarkerAnnotation[51781-51792]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50379-50385]:Modifier[51797-51803]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[50386-50391]:Modifier[51804-51809]"
    }, {
      "left" : "Object[][]",
      "right" : "Object[][]",
      "info" : "ArrayType[50392-50402]:ArrayType[51810-51820]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[50403-50412]:SimpleName[51821-51830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50415-50451]:Block[51833-51869]"
    }, {
      "left" : "return intoArrays();",
      "right" : "return intoArrays();",
      "info" : "ReturnStatement[50425-50445]:ReturnStatement[51843-51863]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[50457-50466]:MarkerAnnotation[51875-51884]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50471-50477]:Modifier[51889-51895]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[50478-50483]:Modifier[51896-51901]"
    }, {
      "left" : "Object[][]",
      "right" : "Object[][]",
      "info" : "ArrayType[50484-50494]:ArrayType[51902-51912]"
    }, {
      "left" : "intoArrays",
      "right" : "intoArrays",
      "info" : "SimpleName[50495-50505]:SimpleName[51913-51923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50508-50707]:Block[51926-52125]"
    }, {
      "left" : "int size = size();",
      "right" : "int size = size();",
      "info" : "VariableDeclarationStatement[50518-50536]:VariableDeclarationStatement[51936-51954]"
    }, {
      "left" : "Object[][] array = new Object[size][];",
      "right" : "Object[][] array = new Object[size][];",
      "info" : "VariableDeclarationStatement[50545-50583]:VariableDeclarationStatement[51963-52001]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[50593-50678]:ForStatement[52011-52096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50624-50678]:Block[52042-52096]"
    }, {
      "left" : "array[i] = get(i).intoArray();",
      "right" : "array[i] = get(i).intoArray();",
      "info" : "ExpressionStatement[50638-50668]:ExpressionStatement[52056-52086]"
    }, {
      "left" : "return array;",
      "right" : "return array;",
      "info" : "ReturnStatement[50688-50701]:ReturnStatement[52106-52119]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[50713-50722]:MarkerAnnotation[52131-52140]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50727-50733]:Modifier[52145-52151]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[50734-50739]:Modifier[52152-52157]"
    }, {
      "left" : "Object[]",
      "right" : "Object[]",
      "info" : "ArrayType[50740-50748]:ArrayType[52158-52166]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[50749-50758]:SimpleName[52167-52176]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[50759-50773]:SingleVariableDeclaration[52177-52191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50775-50967]:Block[52193-52385]"
    }, {
      "left" : "Class<?> type = fields.fields[fieldIndex].getType();",
      "right" : "Class<?> type = fields.fields[fieldIndex].getType();",
      "info" : "VariableDeclarationStatement[50785-50837]:VariableDeclarationStatement[52203-52255]"
    }, {
      "left" : "List<?> list = getValues(fieldIndex);",
      "right" : "List<?> list = getValues(fieldIndex);",
      "info" : "VariableDeclarationStatement[50846-50883]:VariableDeclarationStatement[52264-52301]"
    }, {
      "left" : "return list.toArray((Object[]) Array.newInstance(type, list.size()));",
      "right" : "return list.toArray((Object[]) Array.newInstance(type, list.size()));",
      "info" : "ReturnStatement[50892-50961]:ReturnStatement[52310-52379]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[50973-50982]:MarkerAnnotation[52391-52400]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50987-50993]:Modifier[52405-52411]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[50994-50999]:Modifier[52412-52417]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[51001-51002]:TypeParameter[52419-52420]"
    }, {
      "left" : "T[]",
      "right" : "T[]",
      "info" : "ArrayType[51004-51007]:ArrayType[52422-52425]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[51008-51017]:SimpleName[52426-52435]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[51018-51032]:SingleVariableDeclaration[52436-52450]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[51034-51057]:SingleVariableDeclaration[52452-52475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51059-51138]:Block[52477-52556]"
    }, {
      "left" : "return (T[]) Convert.convertArray(intoArray(fieldIndex), type);",
      "right" : "return (T[]) Convert.convertArray(intoArray(fieldIndex), type);",
      "info" : "ReturnStatement[51069-51132]:ReturnStatement[52487-52550]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[51144-51153]:MarkerAnnotation[52562-52571]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51158-51164]:Modifier[52576-52582]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[51165-51170]:Modifier[52583-52588]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[51172-51173]:TypeParameter[52590-52591]"
    }, {
      "left" : "U[]",
      "right" : "U[]",
      "info" : "ArrayType[51175-51178]:ArrayType[52593-52596]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[51179-51188]:SimpleName[52597-52606]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[51189-51203]:SingleVariableDeclaration[52607-52621]"
    }, {
      "left" : "Converter<?, U> converter",
      "right" : "Converter<?, U> converter",
      "info" : "SingleVariableDeclaration[51205-51230]:SingleVariableDeclaration[52623-52648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51232-51310]:Block[52650-52728]"
    }, {
      "left" : "return Convert.convertArray(intoArray(fieldIndex), converter);",
      "right" : "return Convert.convertArray(intoArray(fieldIndex), converter);",
      "info" : "ReturnStatement[51242-51304]:ReturnStatement[52660-52722]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[51316-51325]:MarkerAnnotation[52734-52743]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51330-51336]:Modifier[52748-52754]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[51337-51342]:Modifier[52755-52760]"
    }, {
      "left" : "Object[]",
      "right" : "Object[]",
      "info" : "ArrayType[51343-51351]:ArrayType[52761-52769]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[51352-51361]:SimpleName[52770-52779]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[51362-51378]:SingleVariableDeclaration[52780-52796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51380-51562]:Block[52798-52980]"
    }, {
      "left" : "Class<?> type = field(fieldName).getType();",
      "right" : "Class<?> type = field(fieldName).getType();",
      "info" : "VariableDeclarationStatement[51390-51433]:VariableDeclarationStatement[52808-52851]"
    }, {
      "left" : "List<?> list = getValues(fieldName);",
      "right" : "List<?> list = getValues(fieldName);",
      "info" : "VariableDeclarationStatement[51442-51478]:VariableDeclarationStatement[52860-52896]"
    }, {
      "left" : "return list.toArray((Object[]) Array.newInstance(type, list.size()));",
      "right" : "return list.toArray((Object[]) Array.newInstance(type, list.size()));",
      "info" : "ReturnStatement[51487-51556]:ReturnStatement[52905-52974]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[51568-51577]:MarkerAnnotation[52986-52995]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51582-51588]:Modifier[53000-53006]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[51589-51594]:Modifier[53007-53012]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[51596-51597]:TypeParameter[53014-53015]"
    }, {
      "left" : "T[]",
      "right" : "T[]",
      "info" : "ArrayType[51599-51602]:ArrayType[53017-53020]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[51603-51612]:SimpleName[53021-53030]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[51613-51629]:SingleVariableDeclaration[53031-53047]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[51631-51654]:SingleVariableDeclaration[53049-53072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51656-51734]:Block[53074-53152]"
    }, {
      "left" : "return (T[]) Convert.convertArray(intoArray(fieldName), type);",
      "right" : "return (T[]) Convert.convertArray(intoArray(fieldName), type);",
      "info" : "ReturnStatement[51666-51728]:ReturnStatement[53084-53146]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[51740-51749]:MarkerAnnotation[53158-53167]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51754-51760]:Modifier[53172-53178]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[51761-51766]:Modifier[53179-53184]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[51768-51769]:TypeParameter[53186-53187]"
    }, {
      "left" : "U[]",
      "right" : "U[]",
      "info" : "ArrayType[51771-51774]:ArrayType[53189-53192]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[51775-51784]:SimpleName[53193-53202]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[51785-51801]:SingleVariableDeclaration[53203-53219]"
    }, {
      "left" : "Converter<?, U> converter",
      "right" : "Converter<?, U> converter",
      "info" : "SingleVariableDeclaration[51803-51828]:SingleVariableDeclaration[53221-53246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51830-51907]:Block[53248-53325]"
    }, {
      "left" : "return Convert.convertArray(intoArray(fieldName), converter);",
      "right" : "return Convert.convertArray(intoArray(fieldName), converter);",
      "info" : "ReturnStatement[51840-51901]:ReturnStatement[53258-53319]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[51913-51922]:MarkerAnnotation[53331-53340]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51927-51933]:Modifier[53345-53351]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[51934-51939]:Modifier[53352-53357]"
    }, {
      "left" : "Object[]",
      "right" : "Object[]",
      "info" : "ArrayType[51940-51948]:ArrayType[53358-53366]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[51949-51958]:SimpleName[53367-53376]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[51959-51973]:SingleVariableDeclaration[53377-53391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51975-52157]:Block[53393-53575]"
    }, {
      "left" : "Class<?> type = field(fieldName).getType();",
      "right" : "Class<?> type = field(fieldName).getType();",
      "info" : "VariableDeclarationStatement[51985-52028]:VariableDeclarationStatement[53403-53446]"
    }, {
      "left" : "List<?> list = getValues(fieldName);",
      "right" : "List<?> list = getValues(fieldName);",
      "info" : "VariableDeclarationStatement[52037-52073]:VariableDeclarationStatement[53455-53491]"
    }, {
      "left" : "return list.toArray((Object[]) Array.newInstance(type, list.size()));",
      "right" : "return list.toArray((Object[]) Array.newInstance(type, list.size()));",
      "info" : "ReturnStatement[52082-52151]:ReturnStatement[53500-53569]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[52163-52172]:MarkerAnnotation[53581-53590]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52177-52183]:Modifier[53595-53601]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[52184-52189]:Modifier[53602-53607]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[52191-52192]:TypeParameter[53609-53610]"
    }, {
      "left" : "T[]",
      "right" : "T[]",
      "info" : "ArrayType[52194-52197]:ArrayType[53612-53615]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[52198-52207]:SimpleName[53616-53625]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[52208-52222]:SingleVariableDeclaration[53626-53640]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[52224-52247]:SingleVariableDeclaration[53642-53665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52249-52327]:Block[53667-53745]"
    }, {
      "left" : "return (T[]) Convert.convertArray(intoArray(fieldName), type);",
      "right" : "return (T[]) Convert.convertArray(intoArray(fieldName), type);",
      "info" : "ReturnStatement[52259-52321]:ReturnStatement[53677-53739]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[52333-52342]:MarkerAnnotation[53751-53760]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52347-52353]:Modifier[53765-53771]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[52354-52359]:Modifier[53772-53777]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[52361-52362]:TypeParameter[53779-53780]"
    }, {
      "left" : "U[]",
      "right" : "U[]",
      "info" : "ArrayType[52364-52367]:ArrayType[53782-53785]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[52368-52377]:SimpleName[53786-53795]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[52378-52392]:SingleVariableDeclaration[53796-53810]"
    }, {
      "left" : "Converter<?, U> converter",
      "right" : "Converter<?, U> converter",
      "info" : "SingleVariableDeclaration[52394-52419]:SingleVariableDeclaration[53812-53837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52421-52498]:Block[53839-53916]"
    }, {
      "left" : "return Convert.convertArray(intoArray(fieldName), converter);",
      "right" : "return Convert.convertArray(intoArray(fieldName), converter);",
      "info" : "ReturnStatement[52431-52492]:ReturnStatement[53849-53910]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[52504-52513]:MarkerAnnotation[53922-53931]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52518-52524]:Modifier[53936-53942]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[52525-52530]:Modifier[53943-53948]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[52532-52533]:TypeParameter[53950-53951]"
    }, {
      "left" : "T[]",
      "right" : "T[]",
      "info" : "ArrayType[52535-52538]:ArrayType[53953-53956]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[52539-52548]:SimpleName[53957-53966]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[52549-52563]:SingleVariableDeclaration[53967-53981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52565-52658]:Block[53983-54076]"
    }, {
      "left" : "return getValues(field).toArray((T[]) Array.newInstance(field.getType(), 0));",
      "right" : "return getValues(field).toArray((T[]) Array.newInstance(field.getType(), 0));",
      "info" : "ReturnStatement[52575-52652]:ReturnStatement[53993-54070]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[52664-52673]:MarkerAnnotation[54082-54091]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52678-52684]:Modifier[54096-54102]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[52685-52690]:Modifier[54103-54108]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[52692-52693]:TypeParameter[54110-54111]"
    }, {
      "left" : "T[]",
      "right" : "T[]",
      "info" : "ArrayType[52695-52698]:ArrayType[54113-54116]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[52699-52708]:SimpleName[54117-54126]"
    }, {
      "left" : "Field<?> field",
      "right" : "Field<?> field",
      "info" : "SingleVariableDeclaration[52709-52723]:SingleVariableDeclaration[54127-54141]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[52725-52748]:SingleVariableDeclaration[54143-54166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52750-52824]:Block[54168-54242]"
    }, {
      "left" : "return (T[]) Convert.convertArray(intoArray(field), type);",
      "right" : "return (T[]) Convert.convertArray(intoArray(field), type);",
      "info" : "ReturnStatement[52760-52818]:ReturnStatement[54178-54236]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[52830-52839]:MarkerAnnotation[54248-54257]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52844-52850]:Modifier[54262-54268]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[52851-52856]:Modifier[54269-54274]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[52858-52859]:TypeParameter[54276-54277]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[52861-52862]:TypeParameter[54279-54280]"
    }, {
      "left" : "U[]",
      "right" : "U[]",
      "info" : "ArrayType[52864-52867]:ArrayType[54282-54285]"
    }, {
      "left" : "intoArray",
      "right" : "intoArray",
      "info" : "SimpleName[52868-52877]:SimpleName[54286-54295]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[52878-52892]:SingleVariableDeclaration[54296-54310]"
    }, {
      "left" : "Converter<? super T, U> converter",
      "right" : "Converter<? super T, U> converter",
      "info" : "SingleVariableDeclaration[52894-52927]:SingleVariableDeclaration[54312-54345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52929-53002]:Block[54347-54420]"
    }, {
      "left" : "return Convert.convertArray(intoArray(field), converter);",
      "right" : "return Convert.convertArray(intoArray(field), converter);",
      "info" : "ReturnStatement[52939-52996]:ReturnStatement[54357-54414]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[53008-53017]:MarkerAnnotation[54426-54435]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53022-53028]:Modifier[54440-54446]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[53029-53034]:Modifier[54447-54452]"
    }, {
      "left" : "Set<?>",
      "right" : "Set<?>",
      "info" : "ParameterizedType[53035-53041]:ParameterizedType[54453-54459]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[53042-53049]:SimpleName[54460-54467]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[53050-53064]:SingleVariableDeclaration[54468-54482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53066-53138]:Block[54484-54556]"
    }, {
      "left" : "return new LinkedHashSet<Object>(getValues(fieldIndex));",
      "right" : "return new LinkedHashSet<Object>(getValues(fieldIndex));",
      "info" : "ReturnStatement[53076-53132]:ReturnStatement[54494-54550]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[53144-53153]:MarkerAnnotation[54562-54571]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53158-53164]:Modifier[54576-54582]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[53165-53170]:Modifier[54583-54588]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[53172-53173]:TypeParameter[54590-54591]"
    }, {
      "left" : "Set<T>",
      "right" : "Set<T>",
      "info" : "ParameterizedType[53175-53181]:ParameterizedType[54593-54599]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[53182-53189]:SimpleName[54600-54607]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[53190-53204]:SingleVariableDeclaration[54608-54622]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[53206-53229]:SingleVariableDeclaration[54624-54647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53231-53304]:Block[54649-54722]"
    }, {
      "left" : "return new LinkedHashSet<T>(getValues(fieldIndex, type));",
      "right" : "return new LinkedHashSet<T>(getValues(fieldIndex, type));",
      "info" : "ReturnStatement[53241-53298]:ReturnStatement[54659-54716]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[53310-53319]:MarkerAnnotation[54728-54737]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53324-53330]:Modifier[54742-54748]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[53331-53336]:Modifier[54749-54754]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[53338-53339]:TypeParameter[54756-54757]"
    }, {
      "left" : "Set<U>",
      "right" : "Set<U>",
      "info" : "ParameterizedType[53341-53347]:ParameterizedType[54759-54765]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[53348-53355]:SimpleName[54766-54773]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[53356-53370]:SingleVariableDeclaration[54774-54788]"
    }, {
      "left" : "Converter<?, U> converter",
      "right" : "Converter<?, U> converter",
      "info" : "SingleVariableDeclaration[53372-53397]:SingleVariableDeclaration[54790-54815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53399-53477]:Block[54817-54895]"
    }, {
      "left" : "return new LinkedHashSet<U>(getValues(fieldIndex, converter));",
      "right" : "return new LinkedHashSet<U>(getValues(fieldIndex, converter));",
      "info" : "ReturnStatement[53409-53471]:ReturnStatement[54827-54889]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[53483-53492]:MarkerAnnotation[54901-54910]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53497-53503]:Modifier[54915-54921]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[53504-53509]:Modifier[54922-54927]"
    }, {
      "left" : "Set<?>",
      "right" : "Set<?>",
      "info" : "ParameterizedType[53510-53516]:ParameterizedType[54928-54934]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[53517-53524]:SimpleName[54935-54942]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[53525-53541]:SingleVariableDeclaration[54943-54959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53543-53614]:Block[54961-55032]"
    }, {
      "left" : "return new LinkedHashSet<Object>(getValues(fieldName));",
      "right" : "return new LinkedHashSet<Object>(getValues(fieldName));",
      "info" : "ReturnStatement[53553-53608]:ReturnStatement[54971-55026]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[53620-53629]:MarkerAnnotation[55038-55047]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53634-53640]:Modifier[55052-55058]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[53641-53646]:Modifier[55059-55064]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[53648-53649]:TypeParameter[55066-55067]"
    }, {
      "left" : "Set<T>",
      "right" : "Set<T>",
      "info" : "ParameterizedType[53651-53657]:ParameterizedType[55069-55075]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[53658-53665]:SimpleName[55076-55083]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[53666-53682]:SingleVariableDeclaration[55084-55100]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[53684-53707]:SingleVariableDeclaration[55102-55125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53709-53781]:Block[55127-55199]"
    }, {
      "left" : "return new LinkedHashSet<T>(getValues(fieldName, type));",
      "right" : "return new LinkedHashSet<T>(getValues(fieldName, type));",
      "info" : "ReturnStatement[53719-53775]:ReturnStatement[55137-55193]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[53787-53796]:MarkerAnnotation[55205-55214]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53801-53807]:Modifier[55219-55225]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[53808-53813]:Modifier[55226-55231]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[53815-53816]:TypeParameter[55233-55234]"
    }, {
      "left" : "Set<U>",
      "right" : "Set<U>",
      "info" : "ParameterizedType[53818-53824]:ParameterizedType[55236-55242]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[53825-53832]:SimpleName[55243-55250]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[53833-53849]:SingleVariableDeclaration[55251-55267]"
    }, {
      "left" : "Converter<?, U> converter",
      "right" : "Converter<?, U> converter",
      "info" : "SingleVariableDeclaration[53851-53876]:SingleVariableDeclaration[55269-55294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53878-53955]:Block[55296-55373]"
    }, {
      "left" : "return new LinkedHashSet<U>(getValues(fieldName, converter));",
      "right" : "return new LinkedHashSet<U>(getValues(fieldName, converter));",
      "info" : "ReturnStatement[53888-53949]:ReturnStatement[55306-55367]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[53961-53970]:MarkerAnnotation[55379-55388]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53975-53981]:Modifier[55393-55399]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[53982-53987]:Modifier[55400-55405]"
    }, {
      "left" : "Set<?>",
      "right" : "Set<?>",
      "info" : "ParameterizedType[53988-53994]:ParameterizedType[55406-55412]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[53995-54002]:SimpleName[55413-55420]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[54003-54017]:SingleVariableDeclaration[55421-55435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54019-54090]:Block[55437-55508]"
    }, {
      "left" : "return new LinkedHashSet<Object>(getValues(fieldName));",
      "right" : "return new LinkedHashSet<Object>(getValues(fieldName));",
      "info" : "ReturnStatement[54029-54084]:ReturnStatement[55447-55502]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[54096-54105]:MarkerAnnotation[55514-55523]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54110-54116]:Modifier[55528-55534]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[54117-54122]:Modifier[55535-55540]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[54124-54125]:TypeParameter[55542-55543]"
    }, {
      "left" : "Set<T>",
      "right" : "Set<T>",
      "info" : "ParameterizedType[54127-54133]:ParameterizedType[55545-55551]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[54134-54141]:SimpleName[55552-55559]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[54142-54156]:SingleVariableDeclaration[55560-55574]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[54158-54181]:SingleVariableDeclaration[55576-55599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54183-54255]:Block[55601-55673]"
    }, {
      "left" : "return new LinkedHashSet<T>(getValues(fieldName, type));",
      "right" : "return new LinkedHashSet<T>(getValues(fieldName, type));",
      "info" : "ReturnStatement[54193-54249]:ReturnStatement[55611-55667]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[54261-54270]:MarkerAnnotation[55679-55688]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54275-54281]:Modifier[55693-55699]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[54282-54287]:Modifier[55700-55705]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[54289-54290]:TypeParameter[55707-55708]"
    }, {
      "left" : "Set<U>",
      "right" : "Set<U>",
      "info" : "ParameterizedType[54292-54298]:ParameterizedType[55710-55716]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[54299-54306]:SimpleName[55717-55724]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[54307-54321]:SingleVariableDeclaration[55725-55739]"
    }, {
      "left" : "Converter<?, U> converter",
      "right" : "Converter<?, U> converter",
      "info" : "SingleVariableDeclaration[54323-54348]:SingleVariableDeclaration[55741-55766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54350-54427]:Block[55768-55845]"
    }, {
      "left" : "return new LinkedHashSet<U>(getValues(fieldName, converter));",
      "right" : "return new LinkedHashSet<U>(getValues(fieldName, converter));",
      "info" : "ReturnStatement[54360-54421]:ReturnStatement[55778-55839]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[54433-54442]:MarkerAnnotation[55851-55860]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54447-54453]:Modifier[55865-55871]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[54454-54459]:Modifier[55872-55877]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[54461-54462]:TypeParameter[55879-55880]"
    }, {
      "left" : "Set<T>",
      "right" : "Set<T>",
      "info" : "ParameterizedType[54464-54470]:ParameterizedType[55882-55888]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[54471-54478]:SimpleName[55889-55896]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[54479-54493]:SingleVariableDeclaration[55897-55911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54495-54557]:Block[55913-55975]"
    }, {
      "left" : "return new LinkedHashSet<T>(getValues(field));",
      "right" : "return new LinkedHashSet<T>(getValues(field));",
      "info" : "ReturnStatement[54505-54551]:ReturnStatement[55923-55969]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[54563-54572]:MarkerAnnotation[55981-55990]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54577-54583]:Modifier[55995-56001]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[54584-54589]:Modifier[56002-56007]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[54591-54592]:TypeParameter[56009-56010]"
    }, {
      "left" : "Set<T>",
      "right" : "Set<T>",
      "info" : "ParameterizedType[54594-54600]:ParameterizedType[56012-56018]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[54601-54608]:SimpleName[56019-56026]"
    }, {
      "left" : "Field<?> field",
      "right" : "Field<?> field",
      "info" : "SingleVariableDeclaration[54609-54623]:SingleVariableDeclaration[56027-56041]"
    }, {
      "left" : "Class<? extends T> type",
      "right" : "Class<? extends T> type",
      "info" : "SingleVariableDeclaration[54625-54648]:SingleVariableDeclaration[56043-56066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54650-54718]:Block[56068-56136]"
    }, {
      "left" : "return new LinkedHashSet<T>(getValues(field, type));",
      "right" : "return new LinkedHashSet<T>(getValues(field, type));",
      "info" : "ReturnStatement[54660-54712]:ReturnStatement[56078-56130]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[54724-54733]:MarkerAnnotation[56142-56151]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54738-54744]:Modifier[56156-56162]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[54745-54750]:Modifier[56163-56168]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[54752-54753]:TypeParameter[56170-56171]"
    }, {
      "left" : "U",
      "right" : "U",
      "info" : "TypeParameter[54755-54756]:TypeParameter[56173-56174]"
    }, {
      "left" : "Set<U>",
      "right" : "Set<U>",
      "info" : "ParameterizedType[54758-54764]:ParameterizedType[56176-56182]"
    }, {
      "left" : "intoSet",
      "right" : "intoSet",
      "info" : "SimpleName[54765-54772]:SimpleName[56183-56190]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[54773-54787]:SingleVariableDeclaration[56191-56205]"
    }, {
      "left" : "Converter<? super T, U> converter",
      "right" : "Converter<? super T, U> converter",
      "info" : "SingleVariableDeclaration[54789-54822]:SingleVariableDeclaration[56207-56240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54824-54897]:Block[56242-56315]"
    }, {
      "left" : "return new LinkedHashSet<U>(getValues(field, converter));",
      "right" : "return new LinkedHashSet<U>(getValues(field, converter));",
      "info" : "ReturnStatement[54834-54891]:ReturnStatement[56252-56309]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[54903-54912]:MarkerAnnotation[56321-56330]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54917-54923]:Modifier[56335-56341]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[54924-54929]:Modifier[56342-56347]"
    }, {
      "left" : "Result<Record>",
      "right" : "Result<Record>",
      "info" : "ParameterizedType[54930-54944]:ParameterizedType[56348-56362]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[54945-54949]:SimpleName[56363-56367]"
    }, {
      "left" : "Field<?>... f",
      "right" : "Field<?>... f",
      "info" : "SingleVariableDeclaration[54950-54963]:SingleVariableDeclaration[56368-56381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54965-55158]:Block[56383-56576]"
    }, {
      "left" : "Result<Record> result = new ResultImpl<Record>(Utils.configuration(this), f);",
      "right" : "Result<Record> result = new ResultImpl<Record>(Utils.configuration(this), f);",
      "info" : "VariableDeclarationStatement[54975-55052]:VariableDeclarationStatement[56393-56470]"
    }, {
      "left" : "for (Record record : this)\n            result.add(record.into(f));",
      "right" : "for (Record record : this)\n            result.add(record.into(f));",
      "info" : "EnhancedForStatement[55062-55128]:EnhancedForStatement[56480-56546]"
    }, {
      "left" : "result.add(record.into(f));",
      "right" : "result.add(record.into(f));",
      "info" : "ExpressionStatement[55101-55128]:ExpressionStatement[56519-56546]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[55138-55152]:ReturnStatement[56556-56570]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[55205-55214]:MarkerAnnotation[56623-56632]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55219-55225]:Modifier[56637-56643]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[55226-55231]:Modifier[56644-56649]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[55233-55235]:TypeParameter[56651-56653]"
    }, {
      "left" : "Result<Record1<T1>>",
      "right" : "Result<Record1<T1>>",
      "info" : "ParameterizedType[55237-55256]:ParameterizedType[56655-56674]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[55257-55261]:SimpleName[56675-56679]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[55262-55278]:SingleVariableDeclaration[56680-56696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55280-55341]:Block[56698-56759]"
    }, {
      "left" : "return (Result) into(new Field[] { field1 });",
      "right" : "return (Result) into(new Field[] { field1 });",
      "info" : "ReturnStatement[55290-55335]:ReturnStatement[56708-56753]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[55347-55356]:MarkerAnnotation[56765-56774]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55361-55367]:Modifier[56779-56785]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[55368-55373]:Modifier[56786-56791]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[55375-55377]:TypeParameter[56793-56795]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[55379-55381]:TypeParameter[56797-56799]"
    }, {
      "left" : "Result<Record2<T1, T2>>",
      "right" : "Result<Record2<T1, T2>>",
      "info" : "ParameterizedType[55383-55406]:ParameterizedType[56801-56824]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[55407-55411]:SimpleName[56825-56829]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[55412-55428]:SingleVariableDeclaration[56830-56846]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[55430-55446]:SingleVariableDeclaration[56848-56864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55448-55517]:Block[56866-56935]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2 });",
      "right" : "return (Result) into(new Field[] { field1, field2 });",
      "info" : "ReturnStatement[55458-55511]:ReturnStatement[56876-56929]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[55523-55532]:MarkerAnnotation[56941-56950]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55537-55543]:Modifier[56955-56961]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[55544-55549]:Modifier[56962-56967]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[55551-55553]:TypeParameter[56969-56971]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[55555-55557]:TypeParameter[56973-56975]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[55559-55561]:TypeParameter[56977-56979]"
    }, {
      "left" : "Result<Record3<T1, T2, T3>>",
      "right" : "Result<Record3<T1, T2, T3>>",
      "info" : "ParameterizedType[55563-55590]:ParameterizedType[56981-57008]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[55591-55595]:SimpleName[57009-57013]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[55596-55612]:SingleVariableDeclaration[57014-57030]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[55614-55630]:SingleVariableDeclaration[57032-57048]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[55632-55648]:SingleVariableDeclaration[57050-57066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55650-55727]:Block[57068-57145]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3 });",
      "info" : "ReturnStatement[55660-55721]:ReturnStatement[57078-57139]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[55733-55742]:MarkerAnnotation[57151-57160]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55747-55753]:Modifier[57165-57171]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[55754-55759]:Modifier[57172-57177]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[55761-55763]:TypeParameter[57179-57181]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[55765-55767]:TypeParameter[57183-57185]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[55769-55771]:TypeParameter[57187-57189]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[55773-55775]:TypeParameter[57191-57193]"
    }, {
      "left" : "Result<Record4<T1, T2, T3, T4>>",
      "right" : "Result<Record4<T1, T2, T3, T4>>",
      "info" : "ParameterizedType[55777-55808]:ParameterizedType[57195-57226]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[55809-55813]:SimpleName[57227-57231]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[55814-55830]:SingleVariableDeclaration[57232-57248]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[55832-55848]:SingleVariableDeclaration[57250-57266]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[55850-55866]:SingleVariableDeclaration[57268-57284]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[55868-55884]:SingleVariableDeclaration[57286-57302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55886-55971]:Block[57304-57389]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4 });",
      "info" : "ReturnStatement[55896-55965]:ReturnStatement[57314-57383]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[55977-55986]:MarkerAnnotation[57395-57404]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55991-55997]:Modifier[57409-57415]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[55998-56003]:Modifier[57416-57421]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[56005-56007]:TypeParameter[57423-57425]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[56009-56011]:TypeParameter[57427-57429]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[56013-56015]:TypeParameter[57431-57433]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[56017-56019]:TypeParameter[57435-57437]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[56021-56023]:TypeParameter[57439-57441]"
    }, {
      "left" : "Result<Record5<T1, T2, T3, T4, T5>>",
      "right" : "Result<Record5<T1, T2, T3, T4, T5>>",
      "info" : "ParameterizedType[56025-56060]:ParameterizedType[57443-57478]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[56061-56065]:SimpleName[57479-57483]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[56066-56082]:SingleVariableDeclaration[57484-57500]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[56084-56100]:SingleVariableDeclaration[57502-57518]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[56102-56118]:SingleVariableDeclaration[57520-57536]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[56120-56136]:SingleVariableDeclaration[57538-57554]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[56138-56154]:SingleVariableDeclaration[57556-57572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56156-56249]:Block[57574-57667]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5 });",
      "info" : "ReturnStatement[56166-56243]:ReturnStatement[57584-57661]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[56255-56264]:MarkerAnnotation[57673-57682]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56269-56275]:Modifier[57687-57693]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[56276-56281]:Modifier[57694-57699]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[56283-56285]:TypeParameter[57701-57703]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[56287-56289]:TypeParameter[57705-57707]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[56291-56293]:TypeParameter[57709-57711]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[56295-56297]:TypeParameter[57713-57715]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[56299-56301]:TypeParameter[57717-57719]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[56303-56305]:TypeParameter[57721-57723]"
    }, {
      "left" : "Result<Record6<T1, T2, T3, T4, T5, T6>>",
      "right" : "Result<Record6<T1, T2, T3, T4, T5, T6>>",
      "info" : "ParameterizedType[56307-56346]:ParameterizedType[57725-57764]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[56347-56351]:SimpleName[57765-57769]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[56352-56368]:SingleVariableDeclaration[57770-57786]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[56370-56386]:SingleVariableDeclaration[57788-57804]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[56388-56404]:SingleVariableDeclaration[57806-57822]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[56406-56422]:SingleVariableDeclaration[57824-57840]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[56424-56440]:SingleVariableDeclaration[57842-57858]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[56442-56458]:SingleVariableDeclaration[57860-57876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56460-56561]:Block[57878-57979]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6 });",
      "info" : "ReturnStatement[56470-56555]:ReturnStatement[57888-57973]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[56567-56576]:MarkerAnnotation[57985-57994]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56581-56587]:Modifier[57999-58005]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[56588-56593]:Modifier[58006-58011]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[56595-56597]:TypeParameter[58013-58015]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[56599-56601]:TypeParameter[58017-58019]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[56603-56605]:TypeParameter[58021-58023]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[56607-56609]:TypeParameter[58025-58027]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[56611-56613]:TypeParameter[58029-58031]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[56615-56617]:TypeParameter[58033-58035]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[56619-56621]:TypeParameter[58037-58039]"
    }, {
      "left" : "Result<Record7<T1, T2, T3, T4, T5, T6, T7>>",
      "right" : "Result<Record7<T1, T2, T3, T4, T5, T6, T7>>",
      "info" : "ParameterizedType[56623-56666]:ParameterizedType[58041-58084]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[56667-56671]:SimpleName[58085-58089]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[56672-56688]:SingleVariableDeclaration[58090-58106]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[56690-56706]:SingleVariableDeclaration[58108-58124]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[56708-56724]:SingleVariableDeclaration[58126-58142]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[56726-56742]:SingleVariableDeclaration[58144-58160]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[56744-56760]:SingleVariableDeclaration[58162-58178]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[56762-56778]:SingleVariableDeclaration[58180-58196]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[56780-56796]:SingleVariableDeclaration[58198-58214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56798-56907]:Block[58216-58325]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7 });",
      "info" : "ReturnStatement[56808-56901]:ReturnStatement[58226-58319]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[56913-56922]:MarkerAnnotation[58331-58340]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56927-56933]:Modifier[58345-58351]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[56934-56939]:Modifier[58352-58357]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[56941-56943]:TypeParameter[58359-58361]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[56945-56947]:TypeParameter[58363-58365]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[56949-56951]:TypeParameter[58367-58369]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[56953-56955]:TypeParameter[58371-58373]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[56957-56959]:TypeParameter[58375-58377]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[56961-56963]:TypeParameter[58379-58381]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[56965-56967]:TypeParameter[58383-58385]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[56969-56971]:TypeParameter[58387-58389]"
    }, {
      "left" : "Result<Record8<T1, T2, T3, T4, T5, T6, T7, T8>>",
      "right" : "Result<Record8<T1, T2, T3, T4, T5, T6, T7, T8>>",
      "info" : "ParameterizedType[56973-57020]:ParameterizedType[58391-58438]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[57021-57025]:SimpleName[58439-58443]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[57026-57042]:SingleVariableDeclaration[58444-58460]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[57044-57060]:SingleVariableDeclaration[58462-58478]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[57062-57078]:SingleVariableDeclaration[58480-58496]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[57080-57096]:SingleVariableDeclaration[58498-58514]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[57098-57114]:SingleVariableDeclaration[58516-58532]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[57116-57132]:SingleVariableDeclaration[58534-58550]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[57134-57150]:SingleVariableDeclaration[58552-58568]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[57152-57168]:SingleVariableDeclaration[58570-58586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57170-57287]:Block[58588-58705]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8 });",
      "info" : "ReturnStatement[57180-57281]:ReturnStatement[58598-58699]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[57293-57302]:MarkerAnnotation[58711-58720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57307-57313]:Modifier[58725-58731]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[57314-57319]:Modifier[58732-58737]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[57321-57323]:TypeParameter[58739-58741]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[57325-57327]:TypeParameter[58743-58745]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[57329-57331]:TypeParameter[58747-58749]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[57333-57335]:TypeParameter[58751-58753]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[57337-57339]:TypeParameter[58755-58757]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[57341-57343]:TypeParameter[58759-58761]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[57345-57347]:TypeParameter[58763-58765]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[57349-57351]:TypeParameter[58767-58769]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[57353-57355]:TypeParameter[58771-58773]"
    }, {
      "left" : "Result<Record9<T1, T2, T3, T4, T5, T6, T7, T8, T9>>",
      "right" : "Result<Record9<T1, T2, T3, T4, T5, T6, T7, T8, T9>>",
      "info" : "ParameterizedType[57357-57408]:ParameterizedType[58775-58826]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[57409-57413]:SimpleName[58827-58831]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[57414-57430]:SingleVariableDeclaration[58832-58848]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[57432-57448]:SingleVariableDeclaration[58850-58866]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[57450-57466]:SingleVariableDeclaration[58868-58884]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[57468-57484]:SingleVariableDeclaration[58886-58902]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[57486-57502]:SingleVariableDeclaration[58904-58920]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[57504-57520]:SingleVariableDeclaration[58922-58938]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[57522-57538]:SingleVariableDeclaration[58940-58956]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[57540-57556]:SingleVariableDeclaration[58958-58974]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[57558-57574]:SingleVariableDeclaration[58976-58992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57576-57701]:Block[58994-59119]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9 });",
      "info" : "ReturnStatement[57586-57695]:ReturnStatement[59004-59113]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[57707-57716]:MarkerAnnotation[59125-59134]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57721-57727]:Modifier[59139-59145]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[57728-57733]:Modifier[59146-59151]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[57735-57737]:TypeParameter[59153-59155]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[57739-57741]:TypeParameter[59157-59159]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[57743-57745]:TypeParameter[59161-59163]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[57747-57749]:TypeParameter[59165-59167]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[57751-57753]:TypeParameter[59169-59171]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[57755-57757]:TypeParameter[59173-59175]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[57759-57761]:TypeParameter[59177-59179]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[57763-57765]:TypeParameter[59181-59183]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[57767-57769]:TypeParameter[59185-59187]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[57771-57774]:TypeParameter[59189-59192]"
    }, {
      "left" : "Result<Record10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>",
      "right" : "Result<Record10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>>",
      "info" : "ParameterizedType[57776-57833]:ParameterizedType[59194-59251]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[57834-57838]:SimpleName[59252-59256]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[57839-57855]:SingleVariableDeclaration[59257-59273]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[57857-57873]:SingleVariableDeclaration[59275-59291]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[57875-57891]:SingleVariableDeclaration[59293-59309]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[57893-57909]:SingleVariableDeclaration[59311-59327]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[57911-57927]:SingleVariableDeclaration[59329-59345]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[57929-57945]:SingleVariableDeclaration[59347-59363]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[57947-57963]:SingleVariableDeclaration[59365-59381]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[57965-57981]:SingleVariableDeclaration[59383-59399]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[57983-57999]:SingleVariableDeclaration[59401-59417]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[58001-58019]:SingleVariableDeclaration[59419-59437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58021-58155]:Block[59439-59573]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10 });",
      "info" : "ReturnStatement[58031-58149]:ReturnStatement[59449-59567]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[58161-58170]:MarkerAnnotation[59579-59588]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58175-58181]:Modifier[59593-59599]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[58182-58187]:Modifier[59600-59605]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[58189-58191]:TypeParameter[59607-59609]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[58193-58195]:TypeParameter[59611-59613]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[58197-58199]:TypeParameter[59615-59617]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[58201-58203]:TypeParameter[59619-59621]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[58205-58207]:TypeParameter[59623-59625]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[58209-58211]:TypeParameter[59627-59629]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[58213-58215]:TypeParameter[59631-59633]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[58217-58219]:TypeParameter[59635-59637]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[58221-58223]:TypeParameter[59639-59641]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[58225-58228]:TypeParameter[59643-59646]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[58230-58233]:TypeParameter[59648-59651]"
    }, {
      "left" : "Result<Record11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>>",
      "right" : "Result<Record11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>>",
      "info" : "ParameterizedType[58235-58297]:ParameterizedType[59653-59715]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[58298-58302]:SimpleName[59716-59720]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[58303-58319]:SingleVariableDeclaration[59721-59737]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[58321-58337]:SingleVariableDeclaration[59739-59755]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[58339-58355]:SingleVariableDeclaration[59757-59773]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[58357-58373]:SingleVariableDeclaration[59775-59791]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[58375-58391]:SingleVariableDeclaration[59793-59809]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[58393-58409]:SingleVariableDeclaration[59811-59827]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[58411-58427]:SingleVariableDeclaration[59829-59845]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[58429-58445]:SingleVariableDeclaration[59847-59863]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[58447-58463]:SingleVariableDeclaration[59865-59881]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[58465-58483]:SingleVariableDeclaration[59883-59901]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[58485-58503]:SingleVariableDeclaration[59903-59921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58505-58648]:Block[59923-60066]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11 });",
      "info" : "ReturnStatement[58515-58642]:ReturnStatement[59933-60060]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[58654-58663]:MarkerAnnotation[60072-60081]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58668-58674]:Modifier[60086-60092]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[58675-58680]:Modifier[60093-60098]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[58682-58684]:TypeParameter[60100-60102]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[58686-58688]:TypeParameter[60104-60106]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[58690-58692]:TypeParameter[60108-60110]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[58694-58696]:TypeParameter[60112-60114]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[58698-58700]:TypeParameter[60116-60118]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[58702-58704]:TypeParameter[60120-60122]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[58706-58708]:TypeParameter[60124-60126]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[58710-58712]:TypeParameter[60128-60130]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[58714-58716]:TypeParameter[60132-60134]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[58718-58721]:TypeParameter[60136-60139]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[58723-58726]:TypeParameter[60141-60144]"
    }, {
      "left" : "T12",
      "right" : "T12",
      "info" : "TypeParameter[58728-58731]:TypeParameter[60146-60149]"
    }, {
      "left" : "Result<Record12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>>",
      "right" : "Result<Record12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>>",
      "info" : "ParameterizedType[58733-58800]:ParameterizedType[60151-60218]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[58801-58805]:SimpleName[60219-60223]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[58806-58822]:SingleVariableDeclaration[60224-60240]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[58824-58840]:SingleVariableDeclaration[60242-60258]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[58842-58858]:SingleVariableDeclaration[60260-60276]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[58860-58876]:SingleVariableDeclaration[60278-60294]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[58878-58894]:SingleVariableDeclaration[60296-60312]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[58896-58912]:SingleVariableDeclaration[60314-60330]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[58914-58930]:SingleVariableDeclaration[60332-60348]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[58932-58948]:SingleVariableDeclaration[60350-60366]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[58950-58966]:SingleVariableDeclaration[60368-60384]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[58968-58986]:SingleVariableDeclaration[60386-60404]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[58988-59006]:SingleVariableDeclaration[60406-60424]"
    }, {
      "left" : "Field<T12> field12",
      "right" : "Field<T12> field12",
      "info" : "SingleVariableDeclaration[59008-59026]:SingleVariableDeclaration[60426-60444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59028-59180]:Block[60446-60598]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12 });",
      "info" : "ReturnStatement[59038-59174]:ReturnStatement[60456-60592]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[59186-59195]:MarkerAnnotation[60604-60613]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59200-59206]:Modifier[60618-60624]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[59207-59212]:Modifier[60625-60630]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[59214-59216]:TypeParameter[60632-60634]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[59218-59220]:TypeParameter[60636-60638]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[59222-59224]:TypeParameter[60640-60642]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[59226-59228]:TypeParameter[60644-60646]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[59230-59232]:TypeParameter[60648-60650]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[59234-59236]:TypeParameter[60652-60654]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[59238-59240]:TypeParameter[60656-60658]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[59242-59244]:TypeParameter[60660-60662]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[59246-59248]:TypeParameter[60664-60666]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[59250-59253]:TypeParameter[60668-60671]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[59255-59258]:TypeParameter[60673-60676]"
    }, {
      "left" : "T12",
      "right" : "T12",
      "info" : "TypeParameter[59260-59263]:TypeParameter[60678-60681]"
    }, {
      "left" : "T13",
      "right" : "T13",
      "info" : "TypeParameter[59265-59268]:TypeParameter[60683-60686]"
    }, {
      "left" : "Result<Record13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>>",
      "right" : "Result<Record13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>>",
      "info" : "ParameterizedType[59270-59342]:ParameterizedType[60688-60760]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[59343-59347]:SimpleName[60761-60765]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[59348-59364]:SingleVariableDeclaration[60766-60782]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[59366-59382]:SingleVariableDeclaration[60784-60800]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[59384-59400]:SingleVariableDeclaration[60802-60818]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[59402-59418]:SingleVariableDeclaration[60820-60836]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[59420-59436]:SingleVariableDeclaration[60838-60854]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[59438-59454]:SingleVariableDeclaration[60856-60872]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[59456-59472]:SingleVariableDeclaration[60874-60890]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[59474-59490]:SingleVariableDeclaration[60892-60908]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[59492-59508]:SingleVariableDeclaration[60910-60926]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[59510-59528]:SingleVariableDeclaration[60928-60946]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[59530-59548]:SingleVariableDeclaration[60948-60966]"
    }, {
      "left" : "Field<T12> field12",
      "right" : "Field<T12> field12",
      "info" : "SingleVariableDeclaration[59550-59568]:SingleVariableDeclaration[60968-60986]"
    }, {
      "left" : "Field<T13> field13",
      "right" : "Field<T13> field13",
      "info" : "SingleVariableDeclaration[59570-59588]:SingleVariableDeclaration[60988-61006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59590-59751]:Block[61008-61169]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13 });",
      "info" : "ReturnStatement[59600-59745]:ReturnStatement[61018-61163]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[59757-59766]:MarkerAnnotation[61175-61184]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59771-59777]:Modifier[61189-61195]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[59778-59783]:Modifier[61196-61201]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[59785-59787]:TypeParameter[61203-61205]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[59789-59791]:TypeParameter[61207-61209]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[59793-59795]:TypeParameter[61211-61213]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[59797-59799]:TypeParameter[61215-61217]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[59801-59803]:TypeParameter[61219-61221]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[59805-59807]:TypeParameter[61223-61225]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[59809-59811]:TypeParameter[61227-61229]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[59813-59815]:TypeParameter[61231-61233]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[59817-59819]:TypeParameter[61235-61237]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[59821-59824]:TypeParameter[61239-61242]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[59826-59829]:TypeParameter[61244-61247]"
    }, {
      "left" : "T12",
      "right" : "T12",
      "info" : "TypeParameter[59831-59834]:TypeParameter[61249-61252]"
    }, {
      "left" : "T13",
      "right" : "T13",
      "info" : "TypeParameter[59836-59839]:TypeParameter[61254-61257]"
    }, {
      "left" : "T14",
      "right" : "T14",
      "info" : "TypeParameter[59841-59844]:TypeParameter[61259-61262]"
    }, {
      "left" : "Result<Record14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>>",
      "right" : "Result<Record14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>>",
      "info" : "ParameterizedType[59846-59923]:ParameterizedType[61264-61341]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[59924-59928]:SimpleName[61342-61346]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[59929-59945]:SingleVariableDeclaration[61347-61363]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[59947-59963]:SingleVariableDeclaration[61365-61381]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[59965-59981]:SingleVariableDeclaration[61383-61399]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[59983-59999]:SingleVariableDeclaration[61401-61417]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[60001-60017]:SingleVariableDeclaration[61419-61435]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[60019-60035]:SingleVariableDeclaration[61437-61453]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[60037-60053]:SingleVariableDeclaration[61455-61471]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[60055-60071]:SingleVariableDeclaration[61473-61489]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[60073-60089]:SingleVariableDeclaration[61491-61507]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[60091-60109]:SingleVariableDeclaration[61509-61527]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[60111-60129]:SingleVariableDeclaration[61529-61547]"
    }, {
      "left" : "Field<T12> field12",
      "right" : "Field<T12> field12",
      "info" : "SingleVariableDeclaration[60131-60149]:SingleVariableDeclaration[61549-61567]"
    }, {
      "left" : "Field<T13> field13",
      "right" : "Field<T13> field13",
      "info" : "SingleVariableDeclaration[60151-60169]:SingleVariableDeclaration[61569-61587]"
    }, {
      "left" : "Field<T14> field14",
      "right" : "Field<T14> field14",
      "info" : "SingleVariableDeclaration[60171-60189]:SingleVariableDeclaration[61589-61607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60191-60361]:Block[61609-61779]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14 });",
      "info" : "ReturnStatement[60201-60355]:ReturnStatement[61619-61773]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[60367-60376]:MarkerAnnotation[61785-61794]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60381-60387]:Modifier[61799-61805]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[60388-60393]:Modifier[61806-61811]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[60395-60397]:TypeParameter[61813-61815]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[60399-60401]:TypeParameter[61817-61819]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[60403-60405]:TypeParameter[61821-61823]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[60407-60409]:TypeParameter[61825-61827]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[60411-60413]:TypeParameter[61829-61831]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[60415-60417]:TypeParameter[61833-61835]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[60419-60421]:TypeParameter[61837-61839]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[60423-60425]:TypeParameter[61841-61843]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[60427-60429]:TypeParameter[61845-61847]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[60431-60434]:TypeParameter[61849-61852]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[60436-60439]:TypeParameter[61854-61857]"
    }, {
      "left" : "T12",
      "right" : "T12",
      "info" : "TypeParameter[60441-60444]:TypeParameter[61859-61862]"
    }, {
      "left" : "T13",
      "right" : "T13",
      "info" : "TypeParameter[60446-60449]:TypeParameter[61864-61867]"
    }, {
      "left" : "T14",
      "right" : "T14",
      "info" : "TypeParameter[60451-60454]:TypeParameter[61869-61872]"
    }, {
      "left" : "T15",
      "right" : "T15",
      "info" : "TypeParameter[60456-60459]:TypeParameter[61874-61877]"
    }, {
      "left" : "Result<Record15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>>",
      "right" : "Result<Record15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>>",
      "info" : "ParameterizedType[60461-60543]:ParameterizedType[61879-61961]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[60544-60548]:SimpleName[61962-61966]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[60549-60565]:SingleVariableDeclaration[61967-61983]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[60567-60583]:SingleVariableDeclaration[61985-62001]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[60585-60601]:SingleVariableDeclaration[62003-62019]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[60603-60619]:SingleVariableDeclaration[62021-62037]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[60621-60637]:SingleVariableDeclaration[62039-62055]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[60639-60655]:SingleVariableDeclaration[62057-62073]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[60657-60673]:SingleVariableDeclaration[62075-62091]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[60675-60691]:SingleVariableDeclaration[62093-62109]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[60693-60709]:SingleVariableDeclaration[62111-62127]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[60711-60729]:SingleVariableDeclaration[62129-62147]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[60731-60749]:SingleVariableDeclaration[62149-62167]"
    }, {
      "left" : "Field<T12> field12",
      "right" : "Field<T12> field12",
      "info" : "SingleVariableDeclaration[60751-60769]:SingleVariableDeclaration[62169-62187]"
    }, {
      "left" : "Field<T13> field13",
      "right" : "Field<T13> field13",
      "info" : "SingleVariableDeclaration[60771-60789]:SingleVariableDeclaration[62189-62207]"
    }, {
      "left" : "Field<T14> field14",
      "right" : "Field<T14> field14",
      "info" : "SingleVariableDeclaration[60791-60809]:SingleVariableDeclaration[62209-62227]"
    }, {
      "left" : "Field<T15> field15",
      "right" : "Field<T15> field15",
      "info" : "SingleVariableDeclaration[60811-60829]:SingleVariableDeclaration[62229-62247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60831-61010]:Block[62249-62428]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15 });",
      "info" : "ReturnStatement[60841-61004]:ReturnStatement[62259-62422]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[61016-61025]:MarkerAnnotation[62434-62443]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61030-61036]:Modifier[62448-62454]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[61037-61042]:Modifier[62455-62460]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[61044-61046]:TypeParameter[62462-62464]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[61048-61050]:TypeParameter[62466-62468]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[61052-61054]:TypeParameter[62470-62472]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[61056-61058]:TypeParameter[62474-62476]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[61060-61062]:TypeParameter[62478-62480]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[61064-61066]:TypeParameter[62482-62484]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[61068-61070]:TypeParameter[62486-62488]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[61072-61074]:TypeParameter[62490-62492]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[61076-61078]:TypeParameter[62494-62496]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[61080-61083]:TypeParameter[62498-62501]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[61085-61088]:TypeParameter[62503-62506]"
    }, {
      "left" : "T12",
      "right" : "T12",
      "info" : "TypeParameter[61090-61093]:TypeParameter[62508-62511]"
    }, {
      "left" : "T13",
      "right" : "T13",
      "info" : "TypeParameter[61095-61098]:TypeParameter[62513-62516]"
    }, {
      "left" : "T14",
      "right" : "T14",
      "info" : "TypeParameter[61100-61103]:TypeParameter[62518-62521]"
    }, {
      "left" : "T15",
      "right" : "T15",
      "info" : "TypeParameter[61105-61108]:TypeParameter[62523-62526]"
    }, {
      "left" : "T16",
      "right" : "T16",
      "info" : "TypeParameter[61110-61113]:TypeParameter[62528-62531]"
    }, {
      "left" : "Result<Record16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>>",
      "right" : "Result<Record16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>>",
      "info" : "ParameterizedType[61115-61202]:ParameterizedType[62533-62620]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[61203-61207]:SimpleName[62621-62625]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[61208-61224]:SingleVariableDeclaration[62626-62642]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[61226-61242]:SingleVariableDeclaration[62644-62660]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[61244-61260]:SingleVariableDeclaration[62662-62678]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[61262-61278]:SingleVariableDeclaration[62680-62696]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[61280-61296]:SingleVariableDeclaration[62698-62714]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[61298-61314]:SingleVariableDeclaration[62716-62732]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[61316-61332]:SingleVariableDeclaration[62734-62750]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[61334-61350]:SingleVariableDeclaration[62752-62768]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[61352-61368]:SingleVariableDeclaration[62770-62786]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[61370-61388]:SingleVariableDeclaration[62788-62806]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[61390-61408]:SingleVariableDeclaration[62808-62826]"
    }, {
      "left" : "Field<T12> field12",
      "right" : "Field<T12> field12",
      "info" : "SingleVariableDeclaration[61410-61428]:SingleVariableDeclaration[62828-62846]"
    }, {
      "left" : "Field<T13> field13",
      "right" : "Field<T13> field13",
      "info" : "SingleVariableDeclaration[61430-61448]:SingleVariableDeclaration[62848-62866]"
    }, {
      "left" : "Field<T14> field14",
      "right" : "Field<T14> field14",
      "info" : "SingleVariableDeclaration[61450-61468]:SingleVariableDeclaration[62868-62886]"
    }, {
      "left" : "Field<T15> field15",
      "right" : "Field<T15> field15",
      "info" : "SingleVariableDeclaration[61470-61488]:SingleVariableDeclaration[62888-62906]"
    }, {
      "left" : "Field<T16> field16",
      "right" : "Field<T16> field16",
      "info" : "SingleVariableDeclaration[61490-61508]:SingleVariableDeclaration[62908-62926]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61510-61698]:Block[62928-63116]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16 });",
      "info" : "ReturnStatement[61520-61692]:ReturnStatement[62938-63110]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[61704-61713]:MarkerAnnotation[63122-63131]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61718-61724]:Modifier[63136-63142]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[61725-61730]:Modifier[63143-63148]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[61732-61734]:TypeParameter[63150-63152]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[61736-61738]:TypeParameter[63154-63156]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[61740-61742]:TypeParameter[63158-63160]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[61744-61746]:TypeParameter[63162-63164]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[61748-61750]:TypeParameter[63166-63168]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[61752-61754]:TypeParameter[63170-63172]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[61756-61758]:TypeParameter[63174-63176]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[61760-61762]:TypeParameter[63178-63180]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[61764-61766]:TypeParameter[63182-63184]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[61768-61771]:TypeParameter[63186-63189]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[61773-61776]:TypeParameter[63191-63194]"
    }, {
      "left" : "T12",
      "right" : "T12",
      "info" : "TypeParameter[61778-61781]:TypeParameter[63196-63199]"
    }, {
      "left" : "T13",
      "right" : "T13",
      "info" : "TypeParameter[61783-61786]:TypeParameter[63201-63204]"
    }, {
      "left" : "T14",
      "right" : "T14",
      "info" : "TypeParameter[61788-61791]:TypeParameter[63206-63209]"
    }, {
      "left" : "T15",
      "right" : "T15",
      "info" : "TypeParameter[61793-61796]:TypeParameter[63211-63214]"
    }, {
      "left" : "T16",
      "right" : "T16",
      "info" : "TypeParameter[61798-61801]:TypeParameter[63216-63219]"
    }, {
      "left" : "T17",
      "right" : "T17",
      "info" : "TypeParameter[61803-61806]:TypeParameter[63221-63224]"
    }, {
      "left" : "Result<Record17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>>",
      "right" : "Result<Record17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>>",
      "info" : "ParameterizedType[61808-61900]:ParameterizedType[63226-63318]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[61901-61905]:SimpleName[63319-63323]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[61906-61922]:SingleVariableDeclaration[63324-63340]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[61924-61940]:SingleVariableDeclaration[63342-63358]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[61942-61958]:SingleVariableDeclaration[63360-63376]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[61960-61976]:SingleVariableDeclaration[63378-63394]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[61978-61994]:SingleVariableDeclaration[63396-63412]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[61996-62012]:SingleVariableDeclaration[63414-63430]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[62014-62030]:SingleVariableDeclaration[63432-63448]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[62032-62048]:SingleVariableDeclaration[63450-63466]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[62050-62066]:SingleVariableDeclaration[63468-63484]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[62068-62086]:SingleVariableDeclaration[63486-63504]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[62088-62106]:SingleVariableDeclaration[63506-63524]"
    }, {
      "left" : "Field<T12> field12",
      "right" : "Field<T12> field12",
      "info" : "SingleVariableDeclaration[62108-62126]:SingleVariableDeclaration[63526-63544]"
    }, {
      "left" : "Field<T13> field13",
      "right" : "Field<T13> field13",
      "info" : "SingleVariableDeclaration[62128-62146]:SingleVariableDeclaration[63546-63564]"
    }, {
      "left" : "Field<T14> field14",
      "right" : "Field<T14> field14",
      "info" : "SingleVariableDeclaration[62148-62166]:SingleVariableDeclaration[63566-63584]"
    }, {
      "left" : "Field<T15> field15",
      "right" : "Field<T15> field15",
      "info" : "SingleVariableDeclaration[62168-62186]:SingleVariableDeclaration[63586-63604]"
    }, {
      "left" : "Field<T16> field16",
      "right" : "Field<T16> field16",
      "info" : "SingleVariableDeclaration[62188-62206]:SingleVariableDeclaration[63606-63624]"
    }, {
      "left" : "Field<T17> field17",
      "right" : "Field<T17> field17",
      "info" : "SingleVariableDeclaration[62208-62226]:SingleVariableDeclaration[63626-63644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62228-62425]:Block[63646-63843]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17 });",
      "info" : "ReturnStatement[62238-62419]:ReturnStatement[63656-63837]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[62431-62440]:MarkerAnnotation[63849-63858]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62445-62451]:Modifier[63863-63869]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[62452-62457]:Modifier[63870-63875]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[62459-62461]:TypeParameter[63877-63879]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[62463-62465]:TypeParameter[63881-63883]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[62467-62469]:TypeParameter[63885-63887]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[62471-62473]:TypeParameter[63889-63891]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[62475-62477]:TypeParameter[63893-63895]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[62479-62481]:TypeParameter[63897-63899]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[62483-62485]:TypeParameter[63901-63903]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[62487-62489]:TypeParameter[63905-63907]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[62491-62493]:TypeParameter[63909-63911]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[62495-62498]:TypeParameter[63913-63916]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[62500-62503]:TypeParameter[63918-63921]"
    }, {
      "left" : "T12",
      "right" : "T12",
      "info" : "TypeParameter[62505-62508]:TypeParameter[63923-63926]"
    }, {
      "left" : "T13",
      "right" : "T13",
      "info" : "TypeParameter[62510-62513]:TypeParameter[63928-63931]"
    }, {
      "left" : "T14",
      "right" : "T14",
      "info" : "TypeParameter[62515-62518]:TypeParameter[63933-63936]"
    }, {
      "left" : "T15",
      "right" : "T15",
      "info" : "TypeParameter[62520-62523]:TypeParameter[63938-63941]"
    }, {
      "left" : "T16",
      "right" : "T16",
      "info" : "TypeParameter[62525-62528]:TypeParameter[63943-63946]"
    }, {
      "left" : "T17",
      "right" : "T17",
      "info" : "TypeParameter[62530-62533]:TypeParameter[63948-63951]"
    }, {
      "left" : "T18",
      "right" : "T18",
      "info" : "TypeParameter[62535-62538]:TypeParameter[63953-63956]"
    }, {
      "left" : "Result<Record18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>>",
      "right" : "Result<Record18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>>",
      "info" : "ParameterizedType[62540-62637]:ParameterizedType[63958-64055]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[62638-62642]:SimpleName[64056-64060]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[62643-62659]:SingleVariableDeclaration[64061-64077]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[62661-62677]:SingleVariableDeclaration[64079-64095]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[62679-62695]:SingleVariableDeclaration[64097-64113]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[62697-62713]:SingleVariableDeclaration[64115-64131]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[62715-62731]:SingleVariableDeclaration[64133-64149]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[62733-62749]:SingleVariableDeclaration[64151-64167]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[62751-62767]:SingleVariableDeclaration[64169-64185]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[62769-62785]:SingleVariableDeclaration[64187-64203]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[62787-62803]:SingleVariableDeclaration[64205-64221]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[62805-62823]:SingleVariableDeclaration[64223-64241]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[62825-62843]:SingleVariableDeclaration[64243-64261]"
    }, {
      "left" : "Field<T12> field12",
      "right" : "Field<T12> field12",
      "info" : "SingleVariableDeclaration[62845-62863]:SingleVariableDeclaration[64263-64281]"
    }, {
      "left" : "Field<T13> field13",
      "right" : "Field<T13> field13",
      "info" : "SingleVariableDeclaration[62865-62883]:SingleVariableDeclaration[64283-64301]"
    }, {
      "left" : "Field<T14> field14",
      "right" : "Field<T14> field14",
      "info" : "SingleVariableDeclaration[62885-62903]:SingleVariableDeclaration[64303-64321]"
    }, {
      "left" : "Field<T15> field15",
      "right" : "Field<T15> field15",
      "info" : "SingleVariableDeclaration[62905-62923]:SingleVariableDeclaration[64323-64341]"
    }, {
      "left" : "Field<T16> field16",
      "right" : "Field<T16> field16",
      "info" : "SingleVariableDeclaration[62925-62943]:SingleVariableDeclaration[64343-64361]"
    }, {
      "left" : "Field<T17> field17",
      "right" : "Field<T17> field17",
      "info" : "SingleVariableDeclaration[62945-62963]:SingleVariableDeclaration[64363-64381]"
    }, {
      "left" : "Field<T18> field18",
      "right" : "Field<T18> field18",
      "info" : "SingleVariableDeclaration[62965-62983]:SingleVariableDeclaration[64383-64401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62985-63191]:Block[64403-64609]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18 });",
      "info" : "ReturnStatement[62995-63185]:ReturnStatement[64413-64603]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[63197-63206]:MarkerAnnotation[64615-64624]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63211-63217]:Modifier[64629-64635]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[63218-63223]:Modifier[64636-64641]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[63225-63227]:TypeParameter[64643-64645]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[63229-63231]:TypeParameter[64647-64649]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[63233-63235]:TypeParameter[64651-64653]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[63237-63239]:TypeParameter[64655-64657]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[63241-63243]:TypeParameter[64659-64661]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[63245-63247]:TypeParameter[64663-64665]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[63249-63251]:TypeParameter[64667-64669]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[63253-63255]:TypeParameter[64671-64673]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[63257-63259]:TypeParameter[64675-64677]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[63261-63264]:TypeParameter[64679-64682]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[63266-63269]:TypeParameter[64684-64687]"
    }, {
      "left" : "T12",
      "right" : "T12",
      "info" : "TypeParameter[63271-63274]:TypeParameter[64689-64692]"
    }, {
      "left" : "T13",
      "right" : "T13",
      "info" : "TypeParameter[63276-63279]:TypeParameter[64694-64697]"
    }, {
      "left" : "T14",
      "right" : "T14",
      "info" : "TypeParameter[63281-63284]:TypeParameter[64699-64702]"
    }, {
      "left" : "T15",
      "right" : "T15",
      "info" : "TypeParameter[63286-63289]:TypeParameter[64704-64707]"
    }, {
      "left" : "T16",
      "right" : "T16",
      "info" : "TypeParameter[63291-63294]:TypeParameter[64709-64712]"
    }, {
      "left" : "T17",
      "right" : "T17",
      "info" : "TypeParameter[63296-63299]:TypeParameter[64714-64717]"
    }, {
      "left" : "T18",
      "right" : "T18",
      "info" : "TypeParameter[63301-63304]:TypeParameter[64719-64722]"
    }, {
      "left" : "T19",
      "right" : "T19",
      "info" : "TypeParameter[63306-63309]:TypeParameter[64724-64727]"
    }, {
      "left" : "Result<Record19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>>",
      "right" : "Result<Record19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>>",
      "info" : "ParameterizedType[63311-63413]:ParameterizedType[64729-64831]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[63414-63418]:SimpleName[64832-64836]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[63419-63435]:SingleVariableDeclaration[64837-64853]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[63437-63453]:SingleVariableDeclaration[64855-64871]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[63455-63471]:SingleVariableDeclaration[64873-64889]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[63473-63489]:SingleVariableDeclaration[64891-64907]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[63491-63507]:SingleVariableDeclaration[64909-64925]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[63509-63525]:SingleVariableDeclaration[64927-64943]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[63527-63543]:SingleVariableDeclaration[64945-64961]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[63545-63561]:SingleVariableDeclaration[64963-64979]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[63563-63579]:SingleVariableDeclaration[64981-64997]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[63581-63599]:SingleVariableDeclaration[64999-65017]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[63601-63619]:SingleVariableDeclaration[65019-65037]"
    }, {
      "left" : "Field<T12> field12",
      "right" : "Field<T12> field12",
      "info" : "SingleVariableDeclaration[63621-63639]:SingleVariableDeclaration[65039-65057]"
    }, {
      "left" : "Field<T13> field13",
      "right" : "Field<T13> field13",
      "info" : "SingleVariableDeclaration[63641-63659]:SingleVariableDeclaration[65059-65077]"
    }, {
      "left" : "Field<T14> field14",
      "right" : "Field<T14> field14",
      "info" : "SingleVariableDeclaration[63661-63679]:SingleVariableDeclaration[65079-65097]"
    }, {
      "left" : "Field<T15> field15",
      "right" : "Field<T15> field15",
      "info" : "SingleVariableDeclaration[63681-63699]:SingleVariableDeclaration[65099-65117]"
    }, {
      "left" : "Field<T16> field16",
      "right" : "Field<T16> field16",
      "info" : "SingleVariableDeclaration[63701-63719]:SingleVariableDeclaration[65119-65137]"
    }, {
      "left" : "Field<T17> field17",
      "right" : "Field<T17> field17",
      "info" : "SingleVariableDeclaration[63721-63739]:SingleVariableDeclaration[65139-65157]"
    }, {
      "left" : "Field<T18> field18",
      "right" : "Field<T18> field18",
      "info" : "SingleVariableDeclaration[63741-63759]:SingleVariableDeclaration[65159-65177]"
    }, {
      "left" : "Field<T19> field19",
      "right" : "Field<T19> field19",
      "info" : "SingleVariableDeclaration[63761-63779]:SingleVariableDeclaration[65179-65197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63781-63996]:Block[65199-65414]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18, field19 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18, field19 });",
      "info" : "ReturnStatement[63791-63990]:ReturnStatement[65209-65408]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[64002-64011]:MarkerAnnotation[65420-65429]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64016-64022]:Modifier[65434-65440]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[64023-64028]:Modifier[65441-65446]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[64030-64032]:TypeParameter[65448-65450]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[64034-64036]:TypeParameter[65452-65454]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[64038-64040]:TypeParameter[65456-65458]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[64042-64044]:TypeParameter[65460-65462]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[64046-64048]:TypeParameter[65464-65466]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[64050-64052]:TypeParameter[65468-65470]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[64054-64056]:TypeParameter[65472-65474]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[64058-64060]:TypeParameter[65476-65478]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[64062-64064]:TypeParameter[65480-65482]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[64066-64069]:TypeParameter[65484-65487]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[64071-64074]:TypeParameter[65489-65492]"
    }, {
      "left" : "T12",
      "right" : "T12",
      "info" : "TypeParameter[64076-64079]:TypeParameter[65494-65497]"
    }, {
      "left" : "T13",
      "right" : "T13",
      "info" : "TypeParameter[64081-64084]:TypeParameter[65499-65502]"
    }, {
      "left" : "T14",
      "right" : "T14",
      "info" : "TypeParameter[64086-64089]:TypeParameter[65504-65507]"
    }, {
      "left" : "T15",
      "right" : "T15",
      "info" : "TypeParameter[64091-64094]:TypeParameter[65509-65512]"
    }, {
      "left" : "T16",
      "right" : "T16",
      "info" : "TypeParameter[64096-64099]:TypeParameter[65514-65517]"
    }, {
      "left" : "T17",
      "right" : "T17",
      "info" : "TypeParameter[64101-64104]:TypeParameter[65519-65522]"
    }, {
      "left" : "T18",
      "right" : "T18",
      "info" : "TypeParameter[64106-64109]:TypeParameter[65524-65527]"
    }, {
      "left" : "T19",
      "right" : "T19",
      "info" : "TypeParameter[64111-64114]:TypeParameter[65529-65532]"
    }, {
      "left" : "T20",
      "right" : "T20",
      "info" : "TypeParameter[64116-64119]:TypeParameter[65534-65537]"
    }, {
      "left" : "Result<Record20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>>",
      "right" : "Result<Record20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>>",
      "info" : "ParameterizedType[64121-64228]:ParameterizedType[65539-65646]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[64229-64233]:SimpleName[65647-65651]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[64234-64250]:SingleVariableDeclaration[65652-65668]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[64252-64268]:SingleVariableDeclaration[65670-65686]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[64270-64286]:SingleVariableDeclaration[65688-65704]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[64288-64304]:SingleVariableDeclaration[65706-65722]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[64306-64322]:SingleVariableDeclaration[65724-65740]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[64324-64340]:SingleVariableDeclaration[65742-65758]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[64342-64358]:SingleVariableDeclaration[65760-65776]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[64360-64376]:SingleVariableDeclaration[65778-65794]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[64378-64394]:SingleVariableDeclaration[65796-65812]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[64396-64414]:SingleVariableDeclaration[65814-65832]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[64416-64434]:SingleVariableDeclaration[65834-65852]"
    }, {
      "left" : "Field<T12> field12",
      "right" : "Field<T12> field12",
      "info" : "SingleVariableDeclaration[64436-64454]:SingleVariableDeclaration[65854-65872]"
    }, {
      "left" : "Field<T13> field13",
      "right" : "Field<T13> field13",
      "info" : "SingleVariableDeclaration[64456-64474]:SingleVariableDeclaration[65874-65892]"
    }, {
      "left" : "Field<T14> field14",
      "right" : "Field<T14> field14",
      "info" : "SingleVariableDeclaration[64476-64494]:SingleVariableDeclaration[65894-65912]"
    }, {
      "left" : "Field<T15> field15",
      "right" : "Field<T15> field15",
      "info" : "SingleVariableDeclaration[64496-64514]:SingleVariableDeclaration[65914-65932]"
    }, {
      "left" : "Field<T16> field16",
      "right" : "Field<T16> field16",
      "info" : "SingleVariableDeclaration[64516-64534]:SingleVariableDeclaration[65934-65952]"
    }, {
      "left" : "Field<T17> field17",
      "right" : "Field<T17> field17",
      "info" : "SingleVariableDeclaration[64536-64554]:SingleVariableDeclaration[65954-65972]"
    }, {
      "left" : "Field<T18> field18",
      "right" : "Field<T18> field18",
      "info" : "SingleVariableDeclaration[64556-64574]:SingleVariableDeclaration[65974-65992]"
    }, {
      "left" : "Field<T19> field19",
      "right" : "Field<T19> field19",
      "info" : "SingleVariableDeclaration[64576-64594]:SingleVariableDeclaration[65994-66012]"
    }, {
      "left" : "Field<T20> field20",
      "right" : "Field<T20> field20",
      "info" : "SingleVariableDeclaration[64596-64614]:SingleVariableDeclaration[66014-66032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64616-64840]:Block[66034-66258]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18, field19, field20 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18, field19, field20 });",
      "info" : "ReturnStatement[64626-64834]:ReturnStatement[66044-66252]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[64846-64855]:MarkerAnnotation[66264-66273]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64860-64866]:Modifier[66278-66284]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[64867-64872]:Modifier[66285-66290]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[64874-64876]:TypeParameter[66292-66294]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[64878-64880]:TypeParameter[66296-66298]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[64882-64884]:TypeParameter[66300-66302]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[64886-64888]:TypeParameter[66304-66306]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[64890-64892]:TypeParameter[66308-66310]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[64894-64896]:TypeParameter[66312-66314]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[64898-64900]:TypeParameter[66316-66318]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[64902-64904]:TypeParameter[66320-66322]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[64906-64908]:TypeParameter[66324-66326]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[64910-64913]:TypeParameter[66328-66331]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[64915-64918]:TypeParameter[66333-66336]"
    }, {
      "left" : "T12",
      "right" : "T12",
      "info" : "TypeParameter[64920-64923]:TypeParameter[66338-66341]"
    }, {
      "left" : "T13",
      "right" : "T13",
      "info" : "TypeParameter[64925-64928]:TypeParameter[66343-66346]"
    }, {
      "left" : "T14",
      "right" : "T14",
      "info" : "TypeParameter[64930-64933]:TypeParameter[66348-66351]"
    }, {
      "left" : "T15",
      "right" : "T15",
      "info" : "TypeParameter[64935-64938]:TypeParameter[66353-66356]"
    }, {
      "left" : "T16",
      "right" : "T16",
      "info" : "TypeParameter[64940-64943]:TypeParameter[66358-66361]"
    }, {
      "left" : "T17",
      "right" : "T17",
      "info" : "TypeParameter[64945-64948]:TypeParameter[66363-66366]"
    }, {
      "left" : "T18",
      "right" : "T18",
      "info" : "TypeParameter[64950-64953]:TypeParameter[66368-66371]"
    }, {
      "left" : "T19",
      "right" : "T19",
      "info" : "TypeParameter[64955-64958]:TypeParameter[66373-66376]"
    }, {
      "left" : "T20",
      "right" : "T20",
      "info" : "TypeParameter[64960-64963]:TypeParameter[66378-66381]"
    }, {
      "left" : "T21",
      "right" : "T21",
      "info" : "TypeParameter[64965-64968]:TypeParameter[66383-66386]"
    }, {
      "left" : "Result<Record21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>>",
      "right" : "Result<Record21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>>",
      "info" : "ParameterizedType[64970-65082]:ParameterizedType[66388-66500]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[65083-65087]:SimpleName[66501-66505]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[65088-65104]:SingleVariableDeclaration[66506-66522]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[65106-65122]:SingleVariableDeclaration[66524-66540]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[65124-65140]:SingleVariableDeclaration[66542-66558]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[65142-65158]:SingleVariableDeclaration[66560-66576]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[65160-65176]:SingleVariableDeclaration[66578-66594]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[65178-65194]:SingleVariableDeclaration[66596-66612]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[65196-65212]:SingleVariableDeclaration[66614-66630]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[65214-65230]:SingleVariableDeclaration[66632-66648]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[65232-65248]:SingleVariableDeclaration[66650-66666]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[65250-65268]:SingleVariableDeclaration[66668-66686]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[65270-65288]:SingleVariableDeclaration[66688-66706]"
    }, {
      "left" : "Field<T12> field12",
      "right" : "Field<T12> field12",
      "info" : "SingleVariableDeclaration[65290-65308]:SingleVariableDeclaration[66708-66726]"
    }, {
      "left" : "Field<T13> field13",
      "right" : "Field<T13> field13",
      "info" : "SingleVariableDeclaration[65310-65328]:SingleVariableDeclaration[66728-66746]"
    }, {
      "left" : "Field<T14> field14",
      "right" : "Field<T14> field14",
      "info" : "SingleVariableDeclaration[65330-65348]:SingleVariableDeclaration[66748-66766]"
    }, {
      "left" : "Field<T15> field15",
      "right" : "Field<T15> field15",
      "info" : "SingleVariableDeclaration[65350-65368]:SingleVariableDeclaration[66768-66786]"
    }, {
      "left" : "Field<T16> field16",
      "right" : "Field<T16> field16",
      "info" : "SingleVariableDeclaration[65370-65388]:SingleVariableDeclaration[66788-66806]"
    }, {
      "left" : "Field<T17> field17",
      "right" : "Field<T17> field17",
      "info" : "SingleVariableDeclaration[65390-65408]:SingleVariableDeclaration[66808-66826]"
    }, {
      "left" : "Field<T18> field18",
      "right" : "Field<T18> field18",
      "info" : "SingleVariableDeclaration[65410-65428]:SingleVariableDeclaration[66828-66846]"
    }, {
      "left" : "Field<T19> field19",
      "right" : "Field<T19> field19",
      "info" : "SingleVariableDeclaration[65430-65448]:SingleVariableDeclaration[66848-66866]"
    }, {
      "left" : "Field<T20> field20",
      "right" : "Field<T20> field20",
      "info" : "SingleVariableDeclaration[65450-65468]:SingleVariableDeclaration[66868-66886]"
    }, {
      "left" : "Field<T21> field21",
      "right" : "Field<T21> field21",
      "info" : "SingleVariableDeclaration[65470-65488]:SingleVariableDeclaration[66888-66906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65490-65723]:Block[66908-67141]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18, field19, field20, field21 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18, field19, field20, field21 });",
      "info" : "ReturnStatement[65500-65717]:ReturnStatement[66918-67135]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[65729-65738]:MarkerAnnotation[67147-67156]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65743-65749]:Modifier[67161-67167]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[65750-65755]:Modifier[67168-67173]"
    }, {
      "left" : "T1",
      "right" : "T1",
      "info" : "TypeParameter[65757-65759]:TypeParameter[67175-67177]"
    }, {
      "left" : "T2",
      "right" : "T2",
      "info" : "TypeParameter[65761-65763]:TypeParameter[67179-67181]"
    }, {
      "left" : "T3",
      "right" : "T3",
      "info" : "TypeParameter[65765-65767]:TypeParameter[67183-67185]"
    }, {
      "left" : "T4",
      "right" : "T4",
      "info" : "TypeParameter[65769-65771]:TypeParameter[67187-67189]"
    }, {
      "left" : "T5",
      "right" : "T5",
      "info" : "TypeParameter[65773-65775]:TypeParameter[67191-67193]"
    }, {
      "left" : "T6",
      "right" : "T6",
      "info" : "TypeParameter[65777-65779]:TypeParameter[67195-67197]"
    }, {
      "left" : "T7",
      "right" : "T7",
      "info" : "TypeParameter[65781-65783]:TypeParameter[67199-67201]"
    }, {
      "left" : "T8",
      "right" : "T8",
      "info" : "TypeParameter[65785-65787]:TypeParameter[67203-67205]"
    }, {
      "left" : "T9",
      "right" : "T9",
      "info" : "TypeParameter[65789-65791]:TypeParameter[67207-67209]"
    }, {
      "left" : "T10",
      "right" : "T10",
      "info" : "TypeParameter[65793-65796]:TypeParameter[67211-67214]"
    }, {
      "left" : "T11",
      "right" : "T11",
      "info" : "TypeParameter[65798-65801]:TypeParameter[67216-67219]"
    }, {
      "left" : "T12",
      "right" : "T12",
      "info" : "TypeParameter[65803-65806]:TypeParameter[67221-67224]"
    }, {
      "left" : "T13",
      "right" : "T13",
      "info" : "TypeParameter[65808-65811]:TypeParameter[67226-67229]"
    }, {
      "left" : "T14",
      "right" : "T14",
      "info" : "TypeParameter[65813-65816]:TypeParameter[67231-67234]"
    }, {
      "left" : "T15",
      "right" : "T15",
      "info" : "TypeParameter[65818-65821]:TypeParameter[67236-67239]"
    }, {
      "left" : "T16",
      "right" : "T16",
      "info" : "TypeParameter[65823-65826]:TypeParameter[67241-67244]"
    }, {
      "left" : "T17",
      "right" : "T17",
      "info" : "TypeParameter[65828-65831]:TypeParameter[67246-67249]"
    }, {
      "left" : "T18",
      "right" : "T18",
      "info" : "TypeParameter[65833-65836]:TypeParameter[67251-67254]"
    }, {
      "left" : "T19",
      "right" : "T19",
      "info" : "TypeParameter[65838-65841]:TypeParameter[67256-67259]"
    }, {
      "left" : "T20",
      "right" : "T20",
      "info" : "TypeParameter[65843-65846]:TypeParameter[67261-67264]"
    }, {
      "left" : "T21",
      "right" : "T21",
      "info" : "TypeParameter[65848-65851]:TypeParameter[67266-67269]"
    }, {
      "left" : "T22",
      "right" : "T22",
      "info" : "TypeParameter[65853-65856]:TypeParameter[67271-67274]"
    }, {
      "left" : "Result<Record22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>>",
      "right" : "Result<Record22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>>",
      "info" : "ParameterizedType[65858-65975]:ParameterizedType[67276-67393]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[65976-65980]:SimpleName[67394-67398]"
    }, {
      "left" : "Field<T1> field1",
      "right" : "Field<T1> field1",
      "info" : "SingleVariableDeclaration[65981-65997]:SingleVariableDeclaration[67399-67415]"
    }, {
      "left" : "Field<T2> field2",
      "right" : "Field<T2> field2",
      "info" : "SingleVariableDeclaration[65999-66015]:SingleVariableDeclaration[67417-67433]"
    }, {
      "left" : "Field<T3> field3",
      "right" : "Field<T3> field3",
      "info" : "SingleVariableDeclaration[66017-66033]:SingleVariableDeclaration[67435-67451]"
    }, {
      "left" : "Field<T4> field4",
      "right" : "Field<T4> field4",
      "info" : "SingleVariableDeclaration[66035-66051]:SingleVariableDeclaration[67453-67469]"
    }, {
      "left" : "Field<T5> field5",
      "right" : "Field<T5> field5",
      "info" : "SingleVariableDeclaration[66053-66069]:SingleVariableDeclaration[67471-67487]"
    }, {
      "left" : "Field<T6> field6",
      "right" : "Field<T6> field6",
      "info" : "SingleVariableDeclaration[66071-66087]:SingleVariableDeclaration[67489-67505]"
    }, {
      "left" : "Field<T7> field7",
      "right" : "Field<T7> field7",
      "info" : "SingleVariableDeclaration[66089-66105]:SingleVariableDeclaration[67507-67523]"
    }, {
      "left" : "Field<T8> field8",
      "right" : "Field<T8> field8",
      "info" : "SingleVariableDeclaration[66107-66123]:SingleVariableDeclaration[67525-67541]"
    }, {
      "left" : "Field<T9> field9",
      "right" : "Field<T9> field9",
      "info" : "SingleVariableDeclaration[66125-66141]:SingleVariableDeclaration[67543-67559]"
    }, {
      "left" : "Field<T10> field10",
      "right" : "Field<T10> field10",
      "info" : "SingleVariableDeclaration[66143-66161]:SingleVariableDeclaration[67561-67579]"
    }, {
      "left" : "Field<T11> field11",
      "right" : "Field<T11> field11",
      "info" : "SingleVariableDeclaration[66163-66181]:SingleVariableDeclaration[67581-67599]"
    }, {
      "left" : "Field<T12> field12",
      "right" : "Field<T12> field12",
      "info" : "SingleVariableDeclaration[66183-66201]:SingleVariableDeclaration[67601-67619]"
    }, {
      "left" : "Field<T13> field13",
      "right" : "Field<T13> field13",
      "info" : "SingleVariableDeclaration[66203-66221]:SingleVariableDeclaration[67621-67639]"
    }, {
      "left" : "Field<T14> field14",
      "right" : "Field<T14> field14",
      "info" : "SingleVariableDeclaration[66223-66241]:SingleVariableDeclaration[67641-67659]"
    }, {
      "left" : "Field<T15> field15",
      "right" : "Field<T15> field15",
      "info" : "SingleVariableDeclaration[66243-66261]:SingleVariableDeclaration[67661-67679]"
    }, {
      "left" : "Field<T16> field16",
      "right" : "Field<T16> field16",
      "info" : "SingleVariableDeclaration[66263-66281]:SingleVariableDeclaration[67681-67699]"
    }, {
      "left" : "Field<T17> field17",
      "right" : "Field<T17> field17",
      "info" : "SingleVariableDeclaration[66283-66301]:SingleVariableDeclaration[67701-67719]"
    }, {
      "left" : "Field<T18> field18",
      "right" : "Field<T18> field18",
      "info" : "SingleVariableDeclaration[66303-66321]:SingleVariableDeclaration[67721-67739]"
    }, {
      "left" : "Field<T19> field19",
      "right" : "Field<T19> field19",
      "info" : "SingleVariableDeclaration[66323-66341]:SingleVariableDeclaration[67741-67759]"
    }, {
      "left" : "Field<T20> field20",
      "right" : "Field<T20> field20",
      "info" : "SingleVariableDeclaration[66343-66361]:SingleVariableDeclaration[67761-67779]"
    }, {
      "left" : "Field<T21> field21",
      "right" : "Field<T21> field21",
      "info" : "SingleVariableDeclaration[66363-66381]:SingleVariableDeclaration[67781-67799]"
    }, {
      "left" : "Field<T22> field22",
      "right" : "Field<T22> field22",
      "info" : "SingleVariableDeclaration[66383-66401]:SingleVariableDeclaration[67801-67819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66403-66645]:Block[67821-68063]"
    }, {
      "left" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18, field19, field20, field21, field22 });",
      "right" : "return (Result) into(new Field[] { field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18, field19, field20, field21, field22 });",
      "info" : "ReturnStatement[66413-66639]:ReturnStatement[67831-68057]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[66686-66695]:MarkerAnnotation[68104-68113]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66700-66706]:Modifier[68118-68124]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[66707-66712]:Modifier[68125-68130]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[66714-66715]:TypeParameter[68132-68133]"
    }, {
      "left" : "List<E>",
      "right" : "List<E>",
      "info" : "ParameterizedType[66717-66724]:ParameterizedType[68135-68142]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[66725-66729]:SimpleName[68143-68147]"
    }, {
      "left" : "Class<? extends E> type",
      "right" : "Class<? extends E> type",
      "info" : "SingleVariableDeclaration[66730-66753]:SingleVariableDeclaration[68148-68171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66755-67026]:Block[68173-68444]"
    }, {
      "left" : "List<E> list = new ArrayList<E>(size());",
      "right" : "List<E> list = new ArrayList<E>(size());",
      "info" : "VariableDeclarationStatement[66765-66805]:VariableDeclarationStatement[68183-68223]"
    }, {
      "left" : "RecordMapper<R, E> mapper = Utils.configuration(this).recordMapperProvider().provide(fields, type);",
      "right" : "RecordMapper<R, E> mapper = Utils.configuration(this).recordMapperProvider().provide(fields, type);",
      "info" : "VariableDeclarationStatement[66814-66913]:VariableDeclarationStatement[68232-68331]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[66923-66998]:EnhancedForStatement[68341-68416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66945-66998]:Block[68363-68416]"
    }, {
      "left" : "list.add(mapper.map(record));",
      "right" : "list.add(mapper.map(record));",
      "info" : "ExpressionStatement[66959-66988]:ExpressionStatement[68377-68406]"
    }, {
      "left" : "return list;",
      "right" : "return list;",
      "info" : "ReturnStatement[67008-67020]:ReturnStatement[68426-68438]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[67032-67041]:MarkerAnnotation[68450-68459]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67046-67052]:Modifier[68464-68470]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[67053-67058]:Modifier[68471-68476]"
    }, {
      "left" : "Z extends Record",
      "right" : "Z extends Record",
      "info" : "TypeParameter[67060-67076]:TypeParameter[68478-68494]"
    }, {
      "left" : "Result<Z>",
      "right" : "Result<Z>",
      "info" : "ParameterizedType[67078-67087]:ParameterizedType[68496-68505]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[67088-67092]:SimpleName[68506-68510]"
    }, {
      "left" : "Table<Z> table",
      "right" : "Table<Z> table",
      "info" : "SingleVariableDeclaration[67093-67107]:SingleVariableDeclaration[68511-68525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67109-67300]:Block[68527-68718]"
    }, {
      "left" : "Result<Z> list = new ResultImpl<Z>(configuration(), table.fields());",
      "right" : "Result<Z> list = new ResultImpl<Z>(configuration(), table.fields());",
      "info" : "VariableDeclarationStatement[67119-67187]:VariableDeclarationStatement[68537-68605]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[67197-67272]:EnhancedForStatement[68615-68690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67219-67272]:Block[68637-68690]"
    }, {
      "left" : "list.add(record.into(table));",
      "right" : "list.add(record.into(table));",
      "info" : "ExpressionStatement[67233-67262]:ExpressionStatement[68651-68680]"
    }, {
      "left" : "return list;",
      "right" : "return list;",
      "info" : "ReturnStatement[67282-67294]:ReturnStatement[68700-68712]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[67306-67315]:MarkerAnnotation[68724-68733]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67320-67326]:Modifier[68738-68744]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[67327-67332]:Modifier[68745-68750]"
    }, {
      "left" : "H extends RecordHandler<? super R>",
      "right" : "H extends RecordHandler<? super R>",
      "info" : "TypeParameter[67334-67368]:TypeParameter[68752-68786]"
    }, {
      "left" : "H",
      "right" : "H",
      "info" : "SimpleType[67370-67371]:SimpleType[68788-68789]"
    }, {
      "left" : "into",
      "right" : "into",
      "info" : "SimpleName[67372-67376]:SimpleName[68790-68794]"
    }, {
      "left" : "H handler",
      "right" : "H handler",
      "info" : "SingleVariableDeclaration[67377-67386]:SingleVariableDeclaration[68795-68804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67388-67496]:Block[68806-68914]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[67398-67465]:EnhancedForStatement[68816-68883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67420-67465]:Block[68838-68883]"
    }, {
      "left" : "handler.next(record);",
      "right" : "handler.next(record);",
      "info" : "ExpressionStatement[67434-67455]:ExpressionStatement[68852-68873]"
    }, {
      "left" : "return handler;",
      "right" : "return handler;",
      "info" : "ReturnStatement[67475-67490]:ReturnStatement[68893-68908]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[67502-67511]:MarkerAnnotation[68920-68929]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67516-67522]:Modifier[68934-68940]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[67523-67528]:Modifier[68941-68946]"
    }, {
      "left" : "ResultSet",
      "right" : "ResultSet",
      "info" : "SimpleType[67529-67538]:SimpleType[68947-68956]"
    }, {
      "left" : "intoResultSet",
      "right" : "intoResultSet",
      "info" : "SimpleName[67539-67552]:SimpleName[68957-68970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67555-67602]:Block[68973-69020]"
    }, {
      "left" : "return new MockResultSet(this);",
      "right" : "return new MockResultSet(this);",
      "info" : "ReturnStatement[67565-67596]:ReturnStatement[68983-69014]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[67608-67617]:MarkerAnnotation[69026-69035]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67622-67628]:Modifier[69040-69046]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[67629-67634]:Modifier[69047-69052]"
    }, {
      "left" : "E",
      "right" : "E",
      "info" : "TypeParameter[67636-67637]:TypeParameter[69054-69055]"
    }, {
      "left" : "List<E>",
      "right" : "List<E>",
      "info" : "ParameterizedType[67639-67646]:ParameterizedType[69057-69064]"
    }, {
      "left" : "map",
      "right" : "map",
      "info" : "SimpleName[67647-67650]:SimpleName[69065-69068]"
    }, {
      "left" : "RecordMapper<? super R, E> mapper",
      "right" : "RecordMapper<? super R, E> mapper",
      "info" : "SingleVariableDeclaration[67651-67684]:SingleVariableDeclaration[69069-69102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67686-67849]:Block[69104-69267]"
    }, {
      "left" : "List<E> result = new ArrayList<E>();",
      "right" : "List<E> result = new ArrayList<E>();",
      "info" : "VariableDeclarationStatement[67696-67732]:VariableDeclarationStatement[69114-69150]"
    }, {
      "left" : "for (R record : this)",
      "right" : "for (R record : this)",
      "info" : "EnhancedForStatement[67742-67819]:EnhancedForStatement[69160-69237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67764-67819]:Block[69182-69237]"
    }, {
      "left" : "result.add(mapper.map(record));",
      "right" : "result.add(mapper.map(record));",
      "info" : "ExpressionStatement[67778-67809]:ExpressionStatement[69196-69227]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[67829-67843]:ReturnStatement[69247-69261]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[67855-67864]:MarkerAnnotation[69273-69282]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67869-67875]:Modifier[69287-69293]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[67876-67881]:Modifier[69294-69299]"
    }, {
      "left" : "T extends Comparable<? super T>",
      "right" : "T extends Comparable<? super T>",
      "info" : "TypeParameter[67883-67914]:TypeParameter[69301-69332]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[67916-67925]:ParameterizedType[69334-69343]"
    }, {
      "left" : "sortAsc",
      "right" : "sortAsc",
      "info" : "SimpleName[67926-67933]:SimpleName[69344-69351]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[67934-67948]:SingleVariableDeclaration[69352-69366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67950-68016]:Block[69368-69434]"
    }, {
      "left" : "return sortAsc(field, new NaturalComparator<T>());",
      "right" : "return sortAsc(field, new NaturalComparator<T>());",
      "info" : "ReturnStatement[67960-68010]:ReturnStatement[69378-69428]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[68022-68031]:MarkerAnnotation[69440-69449]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68036-68042]:Modifier[69454-69460]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[68043-68048]:Modifier[69461-69466]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[68049-68058]:ParameterizedType[69467-69476]"
    }, {
      "left" : "sortAsc",
      "right" : "sortAsc",
      "info" : "SimpleName[68059-68066]:SimpleName[69477-69484]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[68067-68081]:SingleVariableDeclaration[69485-69499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68083-68151]:Block[69501-69569]"
    }, {
      "left" : "return sortAsc(fieldIndex, new NaturalComparator());",
      "right" : "return sortAsc(fieldIndex, new NaturalComparator());",
      "info" : "ReturnStatement[68093-68145]:ReturnStatement[69511-69563]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[68157-68166]:MarkerAnnotation[69575-69584]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68171-68177]:Modifier[69589-69595]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[68178-68183]:Modifier[69596-69601]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[68184-68193]:ParameterizedType[69602-69611]"
    }, {
      "left" : "sortAsc",
      "right" : "sortAsc",
      "info" : "SimpleName[68194-68201]:SimpleName[69612-69619]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[68202-68218]:SingleVariableDeclaration[69620-69636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68220-68287]:Block[69638-69705]"
    }, {
      "left" : "return sortAsc(fieldName, new NaturalComparator());",
      "right" : "return sortAsc(fieldName, new NaturalComparator());",
      "info" : "ReturnStatement[68230-68281]:ReturnStatement[69648-69699]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[68293-68302]:MarkerAnnotation[69711-69720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68307-68313]:Modifier[69725-69731]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[68314-68319]:Modifier[69732-69737]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[68320-68329]:ParameterizedType[69738-69747]"
    }, {
      "left" : "sortAsc",
      "right" : "sortAsc",
      "info" : "SimpleName[68330-68337]:SimpleName[69748-69755]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[68338-68352]:SingleVariableDeclaration[69756-69770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68354-68421]:Block[69772-69839]"
    }, {
      "left" : "return sortAsc(fieldName, new NaturalComparator());",
      "right" : "return sortAsc(fieldName, new NaturalComparator());",
      "info" : "ReturnStatement[68364-68415]:ReturnStatement[69782-69833]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[68427-68436]:MarkerAnnotation[69845-69854]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68441-68447]:Modifier[69859-69865]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[68448-68453]:Modifier[69866-69871]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[68455-68456]:TypeParameter[69873-69874]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[68458-68467]:ParameterizedType[69876-69885]"
    }, {
      "left" : "sortAsc",
      "right" : "sortAsc",
      "info" : "SimpleName[68468-68475]:SimpleName[69886-69893]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[68476-68490]:SingleVariableDeclaration[69894-69908]"
    }, {
      "left" : "Comparator<? super T> comparator",
      "right" : "Comparator<? super T> comparator",
      "info" : "SingleVariableDeclaration[68492-68524]:SingleVariableDeclaration[69910-69942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68526-68602]:Block[69944-70020]"
    }, {
      "left" : "return sortAsc(indexOrFail(fieldsRow(), field), comparator);",
      "right" : "return sortAsc(indexOrFail(fieldsRow(), field), comparator);",
      "info" : "ReturnStatement[68536-68596]:ReturnStatement[69954-70014]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[68608-68617]:MarkerAnnotation[70026-70035]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68622-68628]:Modifier[70040-70046]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[68629-68634]:Modifier[70047-70052]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[68635-68644]:ParameterizedType[70053-70062]"
    }, {
      "left" : "sortAsc",
      "right" : "sortAsc",
      "info" : "SimpleName[68645-68652]:SimpleName[70063-70070]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[68653-68667]:SingleVariableDeclaration[70071-70085]"
    }, {
      "left" : "Comparator<?> comparator",
      "right" : "Comparator<?> comparator",
      "info" : "SingleVariableDeclaration[68669-68693]:SingleVariableDeclaration[70087-70111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68695-68772]:Block[70113-70190]"
    }, {
      "left" : "return sortAsc(new RecordComparator(fieldIndex, comparator));",
      "right" : "return sortAsc(new RecordComparator(fieldIndex, comparator));",
      "info" : "ReturnStatement[68705-68766]:ReturnStatement[70123-70184]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[68778-68787]:MarkerAnnotation[70196-70205]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68792-68798]:Modifier[70210-70216]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[68799-68804]:Modifier[70217-70222]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[68805-68814]:ParameterizedType[70223-70232]"
    }, {
      "left" : "sortAsc",
      "right" : "sortAsc",
      "info" : "SimpleName[68815-68822]:SimpleName[70233-70240]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[68823-68839]:SingleVariableDeclaration[70241-70257]"
    }, {
      "left" : "Comparator<?> comparator",
      "right" : "Comparator<?> comparator",
      "info" : "SingleVariableDeclaration[68841-68865]:SingleVariableDeclaration[70259-70283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68867-68947]:Block[70285-70365]"
    }, {
      "left" : "return sortAsc(indexOrFail(fieldsRow(), fieldName), comparator);",
      "right" : "return sortAsc(indexOrFail(fieldsRow(), fieldName), comparator);",
      "info" : "ReturnStatement[68877-68941]:ReturnStatement[70295-70359]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[68953-68962]:MarkerAnnotation[70371-70380]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68967-68973]:Modifier[70385-70391]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[68974-68979]:Modifier[70392-70397]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[68980-68989]:ParameterizedType[70398-70407]"
    }, {
      "left" : "sortAsc",
      "right" : "sortAsc",
      "info" : "SimpleName[68990-68997]:SimpleName[70408-70415]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[68998-69012]:SingleVariableDeclaration[70416-70430]"
    }, {
      "left" : "Comparator<?> comparator",
      "right" : "Comparator<?> comparator",
      "info" : "SingleVariableDeclaration[69014-69038]:SingleVariableDeclaration[70432-70456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69040-69120]:Block[70458-70538]"
    }, {
      "left" : "return sortAsc(indexOrFail(fieldsRow(), fieldName), comparator);",
      "right" : "return sortAsc(indexOrFail(fieldsRow(), fieldName), comparator);",
      "info" : "ReturnStatement[69050-69114]:ReturnStatement[70468-70532]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[69126-69135]:MarkerAnnotation[70544-70553]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69140-69146]:Modifier[70558-70564]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[69147-69152]:Modifier[70565-70570]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[69153-69162]:ParameterizedType[70571-70580]"
    }, {
      "left" : "sortAsc",
      "right" : "sortAsc",
      "info" : "SimpleName[69163-69170]:SimpleName[70581-70588]"
    }, {
      "left" : "Comparator<? super R> comparator",
      "right" : "Comparator<? super R> comparator",
      "info" : "SingleVariableDeclaration[69171-69203]:SingleVariableDeclaration[70589-70621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69205-69277]:Block[70623-70695]"
    }, {
      "left" : "Collections.sort(this, comparator);",
      "right" : "Collections.sort(this, comparator);",
      "info" : "ExpressionStatement[69215-69250]:ExpressionStatement[70633-70668]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[69259-69271]:ReturnStatement[70677-70689]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[69283-69292]:MarkerAnnotation[70701-70710]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69297-69303]:Modifier[70715-70721]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[69304-69309]:Modifier[70722-70727]"
    }, {
      "left" : "T extends Comparable<? super T>",
      "right" : "T extends Comparable<? super T>",
      "info" : "TypeParameter[69311-69342]:TypeParameter[70729-70760]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[69344-69353]:ParameterizedType[70762-70771]"
    }, {
      "left" : "sortDesc",
      "right" : "sortDesc",
      "info" : "SimpleName[69354-69362]:SimpleName[70772-70780]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[69363-69377]:SingleVariableDeclaration[70781-70795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69379-69471]:Block[70797-70889]"
    }, {
      "left" : "return sortAsc(field, Collections.reverseOrder(new NaturalComparator<T>()));",
      "right" : "return sortAsc(field, Collections.reverseOrder(new NaturalComparator<T>()));",
      "info" : "ReturnStatement[69389-69465]:ReturnStatement[70807-70883]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[69477-69486]:MarkerAnnotation[70895-70904]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69491-69497]:Modifier[70909-70915]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[69498-69503]:Modifier[70916-70921]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[69504-69513]:ParameterizedType[70922-70931]"
    }, {
      "left" : "sortDesc",
      "right" : "sortDesc",
      "info" : "SimpleName[69514-69522]:SimpleName[70932-70940]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[69523-69537]:SingleVariableDeclaration[70941-70955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69539-69633]:Block[70957-71051]"
    }, {
      "left" : "return sortAsc(fieldIndex, Collections.reverseOrder(new NaturalComparator()));",
      "right" : "return sortAsc(fieldIndex, Collections.reverseOrder(new NaturalComparator()));",
      "info" : "ReturnStatement[69549-69627]:ReturnStatement[70967-71045]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[69639-69648]:MarkerAnnotation[71057-71066]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69653-69659]:Modifier[71071-71077]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[69660-69665]:Modifier[71078-71083]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[69666-69675]:ParameterizedType[71084-71093]"
    }, {
      "left" : "sortDesc",
      "right" : "sortDesc",
      "info" : "SimpleName[69676-69684]:SimpleName[71094-71102]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[69685-69701]:SingleVariableDeclaration[71103-71119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69703-69796]:Block[71121-71214]"
    }, {
      "left" : "return sortAsc(fieldName, Collections.reverseOrder(new NaturalComparator()));",
      "right" : "return sortAsc(fieldName, Collections.reverseOrder(new NaturalComparator()));",
      "info" : "ReturnStatement[69713-69790]:ReturnStatement[71131-71208]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[69802-69811]:MarkerAnnotation[71220-71229]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69816-69822]:Modifier[71234-71240]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[69823-69828]:Modifier[71241-71246]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[69829-69838]:ParameterizedType[71247-71256]"
    }, {
      "left" : "sortDesc",
      "right" : "sortDesc",
      "info" : "SimpleName[69839-69847]:SimpleName[71257-71265]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[69848-69862]:SingleVariableDeclaration[71266-71280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69864-69957]:Block[71282-71375]"
    }, {
      "left" : "return sortAsc(fieldName, Collections.reverseOrder(new NaturalComparator()));",
      "right" : "return sortAsc(fieldName, Collections.reverseOrder(new NaturalComparator()));",
      "info" : "ReturnStatement[69874-69951]:ReturnStatement[71292-71369]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[69963-69972]:MarkerAnnotation[71381-71390]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69977-69983]:Modifier[71395-71401]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[69984-69989]:Modifier[71402-71407]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[69991-69992]:TypeParameter[71409-71410]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[69994-70003]:ParameterizedType[71412-71421]"
    }, {
      "left" : "sortDesc",
      "right" : "sortDesc",
      "info" : "SimpleName[70004-70012]:SimpleName[71422-71430]"
    }, {
      "left" : "Field<T> field",
      "right" : "Field<T> field",
      "info" : "SingleVariableDeclaration[70013-70027]:SingleVariableDeclaration[71431-71445]"
    }, {
      "left" : "Comparator<? super T> comparator",
      "right" : "Comparator<? super T> comparator",
      "info" : "SingleVariableDeclaration[70029-70061]:SingleVariableDeclaration[71447-71479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70063-70139]:Block[71481-71557]"
    }, {
      "left" : "return sortAsc(field, Collections.reverseOrder(comparator));",
      "right" : "return sortAsc(field, Collections.reverseOrder(comparator));",
      "info" : "ReturnStatement[70073-70133]:ReturnStatement[71491-71551]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[70145-70154]:MarkerAnnotation[71563-71572]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70159-70165]:Modifier[71577-71583]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[70166-70171]:Modifier[71584-71589]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[70172-70181]:ParameterizedType[71590-71599]"
    }, {
      "left" : "sortDesc",
      "right" : "sortDesc",
      "info" : "SimpleName[70182-70190]:SimpleName[71600-71608]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[70191-70205]:SingleVariableDeclaration[71609-71623]"
    }, {
      "left" : "Comparator<?> comparator",
      "right" : "Comparator<?> comparator",
      "info" : "SingleVariableDeclaration[70207-70231]:SingleVariableDeclaration[71625-71649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70233-70314]:Block[71651-71732]"
    }, {
      "left" : "return sortAsc(fieldIndex, Collections.reverseOrder(comparator));",
      "right" : "return sortAsc(fieldIndex, Collections.reverseOrder(comparator));",
      "info" : "ReturnStatement[70243-70308]:ReturnStatement[71661-71726]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[70320-70329]:MarkerAnnotation[71738-71747]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70334-70340]:Modifier[71752-71758]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[70341-70346]:Modifier[71759-71764]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[70347-70356]:ParameterizedType[71765-71774]"
    }, {
      "left" : "sortDesc",
      "right" : "sortDesc",
      "info" : "SimpleName[70357-70365]:SimpleName[71775-71783]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[70366-70382]:SingleVariableDeclaration[71784-71800]"
    }, {
      "left" : "Comparator<?> comparator",
      "right" : "Comparator<?> comparator",
      "info" : "SingleVariableDeclaration[70384-70408]:SingleVariableDeclaration[71802-71826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70410-70490]:Block[71828-71908]"
    }, {
      "left" : "return sortAsc(fieldName, Collections.reverseOrder(comparator));",
      "right" : "return sortAsc(fieldName, Collections.reverseOrder(comparator));",
      "info" : "ReturnStatement[70420-70484]:ReturnStatement[71838-71902]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[70496-70505]:MarkerAnnotation[71914-71923]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70510-70516]:Modifier[71928-71934]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[70517-70522]:Modifier[71935-71940]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[70523-70532]:ParameterizedType[71941-71950]"
    }, {
      "left" : "sortDesc",
      "right" : "sortDesc",
      "info" : "SimpleName[70533-70541]:SimpleName[71951-71959]"
    }, {
      "left" : "Name fieldName",
      "right" : "Name fieldName",
      "info" : "SingleVariableDeclaration[70542-70556]:SingleVariableDeclaration[71960-71974]"
    }, {
      "left" : "Comparator<?> comparator",
      "right" : "Comparator<?> comparator",
      "info" : "SingleVariableDeclaration[70558-70582]:SingleVariableDeclaration[71976-72000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70584-70664]:Block[72002-72082]"
    }, {
      "left" : "return sortAsc(fieldName, Collections.reverseOrder(comparator));",
      "right" : "return sortAsc(fieldName, Collections.reverseOrder(comparator));",
      "info" : "ReturnStatement[70594-70658]:ReturnStatement[72012-72076]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[70670-70679]:MarkerAnnotation[72088-72097]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70684-70690]:Modifier[72102-72108]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[70691-70696]:Modifier[72109-72114]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[70697-70706]:ParameterizedType[72115-72124]"
    }, {
      "left" : "sortDesc",
      "right" : "sortDesc",
      "info" : "SimpleName[70707-70715]:SimpleName[72125-72133]"
    }, {
      "left" : "Comparator<? super R> comparator",
      "right" : "Comparator<? super R> comparator",
      "info" : "SingleVariableDeclaration[70716-70748]:SingleVariableDeclaration[72134-72166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70750-70819]:Block[72168-72237]"
    }, {
      "left" : "return sortAsc(Collections.reverseOrder(comparator));",
      "right" : "return sortAsc(Collections.reverseOrder(comparator));",
      "info" : "ReturnStatement[70760-70813]:ReturnStatement[72178-72231]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[70825-70834]:MarkerAnnotation[72243-72252]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70839-70845]:Modifier[72257-72263]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[70846-70851]:Modifier[72264-72269]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[70852-70861]:ParameterizedType[72270-72279]"
    }, {
      "left" : "intern",
      "right" : "intern",
      "info" : "SimpleName[70862-70868]:SimpleName[72280-72286]"
    }, {
      "left" : "Field<?>... f",
      "right" : "Field<?>... f",
      "info" : "SingleVariableDeclaration[70869-70882]:SingleVariableDeclaration[72287-72300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70884-70935]:Block[72302-72353]"
    }, {
      "left" : "return intern(fields.indexesOf(f));",
      "right" : "return intern(fields.indexesOf(f));",
      "info" : "ReturnStatement[70894-70929]:ReturnStatement[72312-72347]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[70941-70950]:MarkerAnnotation[72359-72368]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70955-70961]:Modifier[72373-72379]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[70962-70967]:Modifier[72380-72385]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[70968-70977]:ParameterizedType[72386-72395]"
    }, {
      "left" : "intern",
      "right" : "intern",
      "info" : "SimpleName[70978-70984]:SimpleName[72396-72402]"
    }, {
      "left" : "int... fieldIndexes",
      "right" : "int... fieldIndexes",
      "info" : "SingleVariableDeclaration[70985-71004]:SingleVariableDeclaration[72403-72422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71006-71306]:Block[72424-72724]"
    }, {
      "left" : "for (int fieldIndex : fieldIndexes)",
      "right" : "for (int fieldIndex : fieldIndexes)",
      "info" : "EnhancedForStatement[71016-71278]:EnhancedForStatement[72434-72696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71052-71278]:Block[72470-72696]"
    }, {
      "left" : "if (fields.fields[fieldIndex].getType() == String.class)",
      "right" : "if (fields.fields[fieldIndex].getType() == String.class)",
      "info" : "IfStatement[71066-71268]:IfStatement[72484-72686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71123-71268]:Block[72541-72686]"
    }, {
      "left" : "for (Record record : this)",
      "right" : "for (Record record : this)",
      "info" : "EnhancedForStatement[71141-71254]:EnhancedForStatement[72559-72672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71168-71254]:Block[72586-72672]"
    }, {
      "left" : "((AbstractRecord) record).intern0(fieldIndex);",
      "right" : "((AbstractRecord) record).intern0(fieldIndex);",
      "info" : "ExpressionStatement[71190-71236]:ExpressionStatement[72608-72654]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[71288-71300]:ReturnStatement[72706-72718]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[71312-71321]:MarkerAnnotation[72730-72739]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[71326-71332]:Modifier[72744-72750]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[71333-71338]:Modifier[72751-72756]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[71339-71348]:ParameterizedType[72757-72766]"
    }, {
      "left" : "intern",
      "right" : "intern",
      "info" : "SimpleName[71349-71355]:SimpleName[72767-72773]"
    }, {
      "left" : "String... fieldNames",
      "right" : "String... fieldNames",
      "info" : "SingleVariableDeclaration[71356-71376]:SingleVariableDeclaration[72774-72794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71378-71438]:Block[72796-72856]"
    }, {
      "left" : "return intern(fields.indexesOf(fieldNames));",
      "right" : "return intern(fields.indexesOf(fieldNames));",
      "info" : "ReturnStatement[71388-71432]:ReturnStatement[72806-72850]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[71444-71453]:MarkerAnnotation[72862-72871]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[71458-71464]:Modifier[72876-72882]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[71465-71470]:Modifier[72883-72888]"
    }, {
      "left" : "Result<R>",
      "right" : "Result<R>",
      "info" : "ParameterizedType[71471-71480]:ParameterizedType[72889-72898]"
    }, {
      "left" : "intern",
      "right" : "intern",
      "info" : "SimpleName[71481-71487]:SimpleName[72899-72905]"
    }, {
      "left" : "Name... fieldNames",
      "right" : "Name... fieldNames",
      "info" : "SingleVariableDeclaration[71488-71506]:SingleVariableDeclaration[72906-72924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71508-71568]:Block[72926-72986]"
    }, {
      "left" : "return intern(fields.indexesOf(fieldNames));",
      "right" : "return intern(fields.indexesOf(fieldNames));",
      "info" : "ReturnStatement[71518-71562]:ReturnStatement[72936-72980]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[71665-71672]:Modifier[73083-73090]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[71673-71679]:Modifier[73091-73097]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[71680-71685]:TYPE_DECLARATION_KIND[73098-73103]"
    }, {
      "left" : "RecordComparator",
      "right" : "RecordComparator",
      "info" : "SimpleName[71686-71702]:SimpleName[73104-73120]"
    }, {
      "left" : "RecordComparator",
      "right" : "RecordComparator",
      "info" : "SimpleName[71855-71871]:SimpleName[73273-73289]"
    }, {
      "left" : "int fieldIndex",
      "right" : "int fieldIndex",
      "info" : "SingleVariableDeclaration[71872-71886]:SingleVariableDeclaration[73290-73304]"
    }, {
      "left" : "Comparator<? super T> comparator",
      "right" : "Comparator<? super T> comparator",
      "info" : "SingleVariableDeclaration[71888-71920]:SingleVariableDeclaration[73306-73338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71922-72017]:Block[73340-73435]"
    }, {
      "left" : "this.fieldIndex = fieldIndex;",
      "right" : "this.fieldIndex = fieldIndex;",
      "info" : "ExpressionStatement[71936-71965]:ExpressionStatement[73354-73383]"
    }, {
      "left" : "this.comparator = comparator;",
      "right" : "this.comparator = comparator;",
      "info" : "ExpressionStatement[71978-72007]:ExpressionStatement[73396-73425]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[72027-72036]:MarkerAnnotation[73445-73454]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[72045-72051]:Modifier[73463-73469]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[72052-72055]:PrimitiveType[73470-73473]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[72056-72063]:SimpleName[73474-73481]"
    }, {
      "left" : "R record1",
      "right" : "R record1",
      "info" : "SingleVariableDeclaration[72064-72073]:SingleVariableDeclaration[73482-73491]"
    }, {
      "left" : "R record2",
      "right" : "R record2",
      "info" : "SingleVariableDeclaration[72075-72084]:SingleVariableDeclaration[73493-73502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72086-72204]:Block[73504-73622]"
    }, {
      "left" : "return comparator.compare((T) record1.getValue(fieldIndex), (T) record2.getValue(fieldIndex));",
      "right" : "return comparator.compare((T) record1.getValue(fieldIndex), (T) record2.getValue(fieldIndex));",
      "info" : "ReturnStatement[72100-72194]:ReturnStatement[73518-73612]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[72260-72267]:Modifier[73678-73685]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[72268-72274]:Modifier[73686-73692]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[72275-72280]:TYPE_DECLARATION_KIND[73693-73698]"
    }, {
      "left" : "NaturalComparator",
      "right" : "NaturalComparator",
      "info" : "SimpleName[72281-72298]:SimpleName[73699-73716]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[72368-72377]:MarkerAnnotation[73786-73795]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[72386-72392]:Modifier[73804-73810]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[72393-72396]:PrimitiveType[73811-73814]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[72397-72404]:SimpleName[73815-73822]"
    }, {
      "left" : "T o1",
      "right" : "T o1",
      "info" : "SingleVariableDeclaration[72405-72409]:SingleVariableDeclaration[73823-73827]"
    }, {
      "left" : "T o2",
      "right" : "T o2",
      "info" : "SingleVariableDeclaration[72411-72415]:SingleVariableDeclaration[73829-73833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72417-72700]:Block[73835-74118]"
    }, {
      "left" : "if (o1 == null && o2 == null)",
      "right" : "if (o1 == null && o2 == null)",
      "info" : "IfStatement[72431-72653]:IfStatement[73849-74071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72461-72502]:Block[73879-73920]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[72479-72488]:ReturnStatement[73897-73906]"
    }, {
      "left" : "if (o1 == null)",
      "right" : "if (o1 == null)",
      "info" : "IfStatement[72520-72653]:IfStatement[73938-74071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72536-72578]:Block[73954-73996]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[72554-72564]:ReturnStatement[73972-73982]"
    }, {
      "left" : "if (o2 == null)",
      "right" : "if (o2 == null)",
      "info" : "IfStatement[72596-72653]:IfStatement[74014-74071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72612-72653]:Block[74030-74071]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[72630-72639]:ReturnStatement[74048-74057]"
    }, {
      "left" : "return o1.compareTo(o2);",
      "right" : "return o1.compareTo(o2);",
      "info" : "ReturnStatement[72666-72690]:ReturnStatement[74084-74108]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[72918-72927]:MarkerAnnotation[74336-74345]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[72932-72938]:Modifier[74350-74356]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[72939-72944]:Modifier[74357-74362]"
    }, {
      "left" : "O extends UpdatableRecord<O>",
      "right" : "O extends UpdatableRecord<O>",
      "info" : "TypeParameter[72946-72974]:TypeParameter[74364-74392]"
    }, {
      "left" : "Result<O>",
      "right" : "Result<O>",
      "info" : "ParameterizedType[72976-72985]:ParameterizedType[74394-74403]"
    }, {
      "left" : "fetchParents",
      "right" : "fetchParents",
      "info" : "SimpleName[72986-72998]:SimpleName[74404-74416]"
    }, {
      "left" : "ForeignKey<R, O> key",
      "right" : "ForeignKey<R, O> key",
      "info" : "SingleVariableDeclaration[72999-73019]:SingleVariableDeclaration[74417-74437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73021-73067]:Block[74439-74485]"
    }, {
      "left" : "return key.fetchParents(this);",
      "right" : "return key.fetchParents(this);",
      "info" : "ReturnStatement[73031-73061]:ReturnStatement[74449-74479]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[73073-73082]:MarkerAnnotation[74491-74500]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73087-73093]:Modifier[74505-74511]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[73094-73099]:Modifier[74512-74517]"
    }, {
      "left" : "O extends TableRecord<O>",
      "right" : "O extends TableRecord<O>",
      "info" : "TypeParameter[73101-73125]:TypeParameter[74519-74543]"
    }, {
      "left" : "Result<O>",
      "right" : "Result<O>",
      "info" : "ParameterizedType[73127-73136]:ParameterizedType[74545-74554]"
    }, {
      "left" : "fetchChildren",
      "right" : "fetchChildren",
      "info" : "SimpleName[73137-73150]:SimpleName[74555-74568]"
    }, {
      "left" : "ForeignKey<O, R> key",
      "right" : "ForeignKey<O, R> key",
      "info" : "SingleVariableDeclaration[73151-73171]:SingleVariableDeclaration[74569-74589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73173-73220]:Block[74591-74638]"
    }, {
      "left" : "return key.fetchChildren(this);",
      "right" : "return key.fetchChildren(this);",
      "info" : "ReturnStatement[73183-73214]:ReturnStatement[74601-74632]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[73411-73420]:MarkerAnnotation[74829-74838]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73425-73431]:Modifier[74843-74849]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[73432-73438]:SimpleType[74850-74856]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[73439-73447]:SimpleName[74857-74865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73450-73482]:Block[74868-74900]"
    }, {
      "left" : "return format();",
      "right" : "return format();",
      "info" : "ReturnStatement[73460-73476]:ReturnStatement[74878-74894]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[73488-73497]:MarkerAnnotation[74906-74915]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73502-73508]:Modifier[74920-74926]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[73509-73512]:PrimitiveType[74927-74930]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[73513-73521]:SimpleName[74931-74939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73524-73566]:Block[74942-74984]"
    }, {
      "left" : "return records.hashCode();",
      "right" : "return records.hashCode();",
      "info" : "ReturnStatement[73534-73560]:ReturnStatement[74952-74978]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[73572-73581]:MarkerAnnotation[74990-74999]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73586-73592]:Modifier[75004-75010]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[73593-73600]:PrimitiveType[75011-75018]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[73601-73607]:SimpleName[75019-75025]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[73608-73618]:SingleVariableDeclaration[75026-75036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73620-73869]:Block[75038-75287]"
    }, {
      "left" : "if (this == obj)",
      "right" : "if (this == obj)",
      "info" : "IfStatement[73630-73683]:IfStatement[75048-75101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73647-73683]:Block[75065-75101]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[73661-73673]:ReturnStatement[75079-75091]"
    }, {
      "left" : "if (obj instanceof ResultImpl)",
      "right" : "if (obj instanceof ResultImpl)",
      "info" : "IfStatement[73693-73840]:IfStatement[75111-75258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73724-73840]:Block[75142-75258]"
    }, {
      "left" : "ResultImpl<R> other = (ResultImpl<R>) obj;",
      "right" : "ResultImpl<R> other = (ResultImpl<R>) obj;",
      "info" : "VariableDeclarationStatement[73738-73780]:VariableDeclarationStatement[75156-75198]"
    }, {
      "left" : "return records.equals(other.records);",
      "right" : "return records.equals(other.records);",
      "info" : "ReturnStatement[73793-73830]:ReturnStatement[75211-75248]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[73850-73863]:ReturnStatement[75268-75281]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[74059-74068]:MarkerAnnotation[75477-75486]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74073-74079]:Modifier[75491-75497]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[74080-74085]:Modifier[75498-75503]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[74086-74089]:PrimitiveType[75504-75507]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[74090-74094]:SimpleName[75508-75512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74097-74135]:Block[75515-75553]"
    }, {
      "left" : "return records.size();",
      "right" : "return records.size();",
      "info" : "ReturnStatement[74107-74129]:ReturnStatement[75525-75547]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[74141-74150]:MarkerAnnotation[75559-75568]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74155-74161]:Modifier[75573-75579]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[74162-74167]:Modifier[75580-75585]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[74168-74175]:PrimitiveType[75586-75593]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[74176-74184]:SimpleName[75594-75602]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[74185-74193]:SingleVariableDeclaration[75603-75611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74195-74238]:Block[75613-75656]"
    }, {
      "left" : "return records.contains(o);",
      "right" : "return records.contains(o);",
      "info" : "ReturnStatement[74205-74232]:ReturnStatement[75623-75650]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[74244-74253]:MarkerAnnotation[75662-75671]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74258-74264]:Modifier[75676-75682]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[74265-74270]:Modifier[75683-75688]"
    }, {
      "left" : "Object[]",
      "right" : "Object[]",
      "info" : "ArrayType[74271-74279]:ArrayType[75689-75697]"
    }, {
      "left" : "toArray",
      "right" : "toArray",
      "info" : "SimpleName[74280-74287]:SimpleName[75698-75705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74290-74331]:Block[75708-75749]"
    }, {
      "left" : "return records.toArray();",
      "right" : "return records.toArray();",
      "info" : "ReturnStatement[74300-74325]:ReturnStatement[75718-75743]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[74337-74346]:MarkerAnnotation[75755-75764]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74351-74357]:Modifier[75769-75775]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[74358-74363]:Modifier[75776-75781]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[74365-74366]:TypeParameter[75783-75784]"
    }, {
      "left" : "T[]",
      "right" : "T[]",
      "info" : "ArrayType[74368-74371]:ArrayType[75786-75789]"
    }, {
      "left" : "toArray",
      "right" : "toArray",
      "info" : "SimpleName[74372-74379]:SimpleName[75790-75797]"
    }, {
      "left" : "T[] a",
      "right" : "T[] a",
      "info" : "SingleVariableDeclaration[74380-74385]:SingleVariableDeclaration[75798-75803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74387-74429]:Block[75805-75847]"
    }, {
      "left" : "return records.toArray(a);",
      "right" : "return records.toArray(a);",
      "info" : "ReturnStatement[74397-74423]:ReturnStatement[75815-75841]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[74435-74444]:MarkerAnnotation[75853-75862]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74449-74455]:Modifier[75867-75873]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[74456-74461]:Modifier[75874-75879]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[74462-74469]:PrimitiveType[75880-75887]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[74470-74473]:SimpleName[75888-75891]"
    }, {
      "left" : "R e",
      "right" : "R e",
      "info" : "SingleVariableDeclaration[74474-74477]:SingleVariableDeclaration[75892-75895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74479-74517]:Block[75897-75935]"
    }, {
      "left" : "return records.add(e);",
      "right" : "return records.add(e);",
      "info" : "ReturnStatement[74489-74511]:ReturnStatement[75907-75929]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[74523-74532]:MarkerAnnotation[75941-75950]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74537-74543]:Modifier[75955-75961]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[74544-74549]:Modifier[75962-75967]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[74550-74557]:PrimitiveType[75968-75975]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[74558-74564]:SimpleName[75976-75982]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[74565-74573]:SingleVariableDeclaration[75983-75991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74575-74616]:Block[75993-76034]"
    }, {
      "left" : "return records.remove(o);",
      "right" : "return records.remove(o);",
      "info" : "ReturnStatement[74585-74610]:ReturnStatement[76003-76028]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[74622-74631]:MarkerAnnotation[76040-76049]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74636-74642]:Modifier[76054-76060]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[74643-74648]:Modifier[76061-76066]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[74649-74656]:PrimitiveType[76067-76074]"
    }, {
      "left" : "containsAll",
      "right" : "containsAll",
      "info" : "SimpleName[74657-74668]:SimpleName[76075-76086]"
    }, {
      "left" : "Collection<?> c",
      "right" : "Collection<?> c",
      "info" : "SingleVariableDeclaration[74669-74684]:SingleVariableDeclaration[76087-76102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74686-74732]:Block[76104-76150]"
    }, {
      "left" : "return records.containsAll(c);",
      "right" : "return records.containsAll(c);",
      "info" : "ReturnStatement[74696-74726]:ReturnStatement[76114-76144]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[74738-74747]:MarkerAnnotation[76156-76165]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74752-74758]:Modifier[76170-76176]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[74759-74764]:Modifier[76177-76182]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[74765-74772]:PrimitiveType[76183-76190]"
    }, {
      "left" : "addAll",
      "right" : "addAll",
      "info" : "SimpleName[74773-74779]:SimpleName[76191-76197]"
    }, {
      "left" : "Collection<? extends R> c",
      "right" : "Collection<? extends R> c",
      "info" : "SingleVariableDeclaration[74780-74805]:SingleVariableDeclaration[76198-76223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74807-74848]:Block[76225-76266]"
    }, {
      "left" : "return records.addAll(c);",
      "right" : "return records.addAll(c);",
      "info" : "ReturnStatement[74817-74842]:ReturnStatement[76235-76260]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[74854-74863]:MarkerAnnotation[76272-76281]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74868-74874]:Modifier[76286-76292]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[74875-74880]:Modifier[76293-76298]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[74881-74888]:PrimitiveType[76299-76306]"
    }, {
      "left" : "addAll",
      "right" : "addAll",
      "info" : "SimpleName[74889-74895]:SimpleName[76307-76313]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[74896-74905]:SingleVariableDeclaration[76314-76323]"
    }, {
      "left" : "Collection<? extends R> c",
      "right" : "Collection<? extends R> c",
      "info" : "SingleVariableDeclaration[74907-74932]:SingleVariableDeclaration[76325-76350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74934-74982]:Block[76352-76400]"
    }, {
      "left" : "return records.addAll(index, c);",
      "right" : "return records.addAll(index, c);",
      "info" : "ReturnStatement[74944-74976]:ReturnStatement[76362-76394]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[74988-74997]:MarkerAnnotation[76406-76415]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75002-75008]:Modifier[76420-76426]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[75009-75014]:Modifier[76427-76432]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[75015-75022]:PrimitiveType[76433-76440]"
    }, {
      "left" : "removeAll",
      "right" : "removeAll",
      "info" : "SimpleName[75023-75032]:SimpleName[76441-76450]"
    }, {
      "left" : "Collection<?> c",
      "right" : "Collection<?> c",
      "info" : "SingleVariableDeclaration[75033-75048]:SingleVariableDeclaration[76451-76466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75050-75094]:Block[76468-76512]"
    }, {
      "left" : "return records.removeAll(c);",
      "right" : "return records.removeAll(c);",
      "info" : "ReturnStatement[75060-75088]:ReturnStatement[76478-76506]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[75100-75109]:MarkerAnnotation[76518-76527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75114-75120]:Modifier[76532-76538]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[75121-75126]:Modifier[76539-76544]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[75127-75134]:PrimitiveType[76545-76552]"
    }, {
      "left" : "retainAll",
      "right" : "retainAll",
      "info" : "SimpleName[75135-75144]:SimpleName[76553-76562]"
    }, {
      "left" : "Collection<?> c",
      "right" : "Collection<?> c",
      "info" : "SingleVariableDeclaration[75145-75160]:SingleVariableDeclaration[76563-76578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75162-75206]:Block[76580-76624]"
    }, {
      "left" : "return records.retainAll(c);",
      "right" : "return records.retainAll(c);",
      "info" : "ReturnStatement[75172-75200]:ReturnStatement[76590-76618]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[75212-75221]:MarkerAnnotation[76630-76639]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75226-75232]:Modifier[76644-76650]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[75233-75238]:Modifier[76651-76656]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[75239-75243]:PrimitiveType[76657-76661]"
    }, {
      "left" : "clear",
      "right" : "clear",
      "info" : "SimpleName[75244-75249]:SimpleName[76662-76667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75252-75284]:Block[76670-76702]"
    }, {
      "left" : "records.clear();",
      "right" : "records.clear();",
      "info" : "ExpressionStatement[75262-75278]:ExpressionStatement[76680-76696]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[75290-75299]:MarkerAnnotation[76708-76717]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75304-75310]:Modifier[76722-76728]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[75311-75316]:Modifier[76729-76734]"
    }, {
      "left" : "R",
      "right" : "R",
      "info" : "SimpleType[75317-75318]:SimpleType[76735-76736]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[75319-75322]:SimpleName[76737-76740]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[75323-75332]:SingleVariableDeclaration[76741-76750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75334-75376]:Block[76752-76794]"
    }, {
      "left" : "return records.get(index);",
      "right" : "return records.get(index);",
      "info" : "ReturnStatement[75344-75370]:ReturnStatement[76762-76788]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[75382-75391]:MarkerAnnotation[76800-76809]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75396-75402]:Modifier[76814-76820]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[75403-75408]:Modifier[76821-76826]"
    }, {
      "left" : "R",
      "right" : "R",
      "info" : "SimpleType[75409-75410]:SimpleType[76827-76828]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[75411-75414]:SimpleName[76829-76832]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[75415-75424]:SingleVariableDeclaration[76833-76842]"
    }, {
      "left" : "R element",
      "right" : "R element",
      "info" : "SingleVariableDeclaration[75426-75435]:SingleVariableDeclaration[76844-76853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75437-75488]:Block[76855-76906]"
    }, {
      "left" : "return records.set(index, element);",
      "right" : "return records.set(index, element);",
      "info" : "ReturnStatement[75447-75482]:ReturnStatement[76865-76900]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[75494-75503]:MarkerAnnotation[76912-76921]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75508-75514]:Modifier[76926-76932]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[75515-75520]:Modifier[76933-76938]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[75521-75525]:PrimitiveType[76939-76943]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[75526-75529]:SimpleName[76944-76947]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[75530-75539]:SingleVariableDeclaration[76948-76957]"
    }, {
      "left" : "R element",
      "right" : "R element",
      "info" : "SingleVariableDeclaration[75541-75550]:SingleVariableDeclaration[76959-76968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75552-75596]:Block[76970-77014]"
    }, {
      "left" : "records.add(index, element);",
      "right" : "records.add(index, element);",
      "info" : "ExpressionStatement[75562-75590]:ExpressionStatement[76980-77008]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[75602-75611]:MarkerAnnotation[77020-77029]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75616-75622]:Modifier[77034-77040]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[75623-75628]:Modifier[77041-77046]"
    }, {
      "left" : "R",
      "right" : "R",
      "info" : "SimpleType[75629-75630]:SimpleType[77047-77048]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[75631-75637]:SimpleName[77049-77055]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[75638-75647]:SingleVariableDeclaration[77056-77065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75649-75694]:Block[77067-77112]"
    }, {
      "left" : "return records.remove(index);",
      "right" : "return records.remove(index);",
      "info" : "ReturnStatement[75659-75688]:ReturnStatement[77077-77106]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[75700-75709]:MarkerAnnotation[77118-77127]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75714-75720]:Modifier[77132-77138]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[75721-75726]:Modifier[77139-77144]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[75727-75730]:PrimitiveType[77145-77148]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[75731-75738]:SimpleName[77149-77156]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[75739-75747]:SingleVariableDeclaration[77157-77165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75749-75791]:Block[77167-77209]"
    }, {
      "left" : "return records.indexOf(o);",
      "right" : "return records.indexOf(o);",
      "info" : "ReturnStatement[75759-75785]:ReturnStatement[77177-77203]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[75797-75806]:MarkerAnnotation[77215-77224]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75811-75817]:Modifier[77229-77235]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[75818-75823]:Modifier[77236-77241]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[75824-75827]:PrimitiveType[77242-77245]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[75828-75839]:SimpleName[77246-77257]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[75840-75848]:SingleVariableDeclaration[77258-77266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75850-75896]:Block[77268-77314]"
    }, {
      "left" : "return records.lastIndexOf(o);",
      "right" : "return records.lastIndexOf(o);",
      "info" : "ReturnStatement[75860-75890]:ReturnStatement[77278-77308]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[75902-75911]:MarkerAnnotation[77320-77329]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75916-75922]:Modifier[77334-77340]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[75923-75928]:Modifier[77341-77346]"
    }, {
      "left" : "Iterator<R>",
      "right" : "Iterator<R>",
      "info" : "ParameterizedType[75929-75940]:ParameterizedType[77347-77358]"
    }, {
      "left" : "iterator",
      "right" : "iterator",
      "info" : "SimpleName[75941-75949]:SimpleName[77359-77367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75952-75994]:Block[77370-77412]"
    }, {
      "left" : "return records.iterator();",
      "right" : "return records.iterator();",
      "info" : "ReturnStatement[75962-75988]:ReturnStatement[77380-77406]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[76000-76009]:MarkerAnnotation[77418-77427]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[76014-76020]:Modifier[77432-77438]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[76021-76026]:Modifier[77439-77444]"
    }, {
      "left" : "ListIterator<R>",
      "right" : "ListIterator<R>",
      "info" : "ParameterizedType[76027-76042]:ParameterizedType[77445-77460]"
    }, {
      "left" : "listIterator",
      "right" : "listIterator",
      "info" : "SimpleName[76043-76055]:SimpleName[77461-77473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76058-76104]:Block[77476-77522]"
    }, {
      "left" : "return records.listIterator();",
      "right" : "return records.listIterator();",
      "info" : "ReturnStatement[76068-76098]:ReturnStatement[77486-77516]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[76110-76119]:MarkerAnnotation[77528-77537]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[76124-76130]:Modifier[77542-77548]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[76131-76136]:Modifier[77549-77554]"
    }, {
      "left" : "ListIterator<R>",
      "right" : "ListIterator<R>",
      "info" : "ParameterizedType[76137-76152]:ParameterizedType[77555-77570]"
    }, {
      "left" : "listIterator",
      "right" : "listIterator",
      "info" : "SimpleName[76153-76165]:SimpleName[77571-77583]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[76166-76175]:SingleVariableDeclaration[77584-77593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76177-76228]:Block[77595-77646]"
    }, {
      "left" : "return records.listIterator(index);",
      "right" : "return records.listIterator(index);",
      "info" : "ReturnStatement[76187-76222]:ReturnStatement[77605-77640]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[76234-76243]:MarkerAnnotation[77652-77661]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[76248-76254]:Modifier[77666-77672]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[76255-76260]:Modifier[77673-77678]"
    }, {
      "left" : "List<R>",
      "right" : "List<R>",
      "info" : "ParameterizedType[76261-76268]:ParameterizedType[77679-77686]"
    }, {
      "left" : "subList",
      "right" : "subList",
      "info" : "SimpleName[76269-76276]:SimpleName[77687-77694]"
    }, {
      "left" : "int fromIndex",
      "right" : "int fromIndex",
      "info" : "SingleVariableDeclaration[76277-76290]:SingleVariableDeclaration[77695-77708]"
    }, {
      "left" : "int toIndex",
      "right" : "int toIndex",
      "info" : "SingleVariableDeclaration[76292-76303]:SingleVariableDeclaration[77710-77721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76305-76364]:Block[77723-77782]"
    }, {
      "left" : "return records.subList(fromIndex, toIndex);",
      "right" : "return records.subList(fromIndex, toIndex);",
      "info" : "ReturnStatement[76315-76358]:ReturnStatement[77733-77776]"
    } ]
  },
  "interFileMappings" : { }
}