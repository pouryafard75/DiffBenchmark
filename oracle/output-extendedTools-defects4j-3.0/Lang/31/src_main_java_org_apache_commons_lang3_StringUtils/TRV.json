{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static final String EMPTY = \"\";",
      "right" : "public static final String EMPTY = \"\";",
      "info" : "FieldDeclaration[5901-6014]:FieldDeclaration[5901-6014]"
    }, {
      "left" : "public static final int INDEX_NOT_FOUND = -1;",
      "right" : "public static final int INDEX_NOT_FOUND = -1;",
      "info" : "FieldDeclaration[6020-6140]:FieldDeclaration[6020-6140]"
    }, {
      "left" : "private static final int PAD_LIMIT = 8192;",
      "right" : "private static final int PAD_LIMIT = 8192;",
      "info" : "FieldDeclaration[6146-6280]:FieldDeclaration[6146-6280]"
    }, {
      "left" : "public StringUtils()",
      "right" : "public StringUtils()",
      "info" : "MethodDeclaration[6286-6655]:MethodDeclaration[6286-6655]"
    }, {
      "left" : "public static boolean isEmpty(CharSequence cs)",
      "right" : "public static boolean isEmpty(CharSequence cs)",
      "info" : "MethodDeclaration[6759-7499]:MethodDeclaration[6759-7499]"
    }, {
      "left" : "public static boolean isNotEmpty(CharSequence cs)",
      "right" : "public static boolean isNotEmpty(CharSequence cs)",
      "info" : "MethodDeclaration[7505-8109]:MethodDeclaration[7505-8109]"
    }, {
      "left" : "public static boolean isBlank(CharSequence cs)",
      "right" : "public static boolean isBlank(CharSequence cs)",
      "info" : "MethodDeclaration[8115-8981]:MethodDeclaration[8115-8981]"
    }, {
      "left" : "public static boolean isNotBlank(CharSequence cs)",
      "right" : "public static boolean isNotBlank(CharSequence cs)",
      "info" : "MethodDeclaration[8987-9658]:MethodDeclaration[8987-9658]"
    }, {
      "left" : "public static String trim(String str)",
      "right" : "public static String trim(String str)",
      "info" : "MethodDeclaration[9754-10717]:MethodDeclaration[9754-10717]"
    }, {
      "left" : "public static String trimToNull(String str)",
      "right" : "public static String trimToNull(String str)",
      "info" : "MethodDeclaration[10723-11738]:MethodDeclaration[10723-11738]"
    }, {
      "left" : "public static String trimToEmpty(String str)",
      "right" : "public static String trimToEmpty(String str)",
      "info" : "MethodDeclaration[11744-12710]:MethodDeclaration[11744-12710]"
    }, {
      "left" : "public static String strip(String str)",
      "right" : "public static String strip(String str)",
      "info" : "MethodDeclaration[12811-13734]:MethodDeclaration[12811-13734]"
    }, {
      "left" : "public static String stripToNull(String str)",
      "right" : "public static String stripToNull(String str)",
      "info" : "MethodDeclaration[13740-14870]:MethodDeclaration[13740-14870]"
    }, {
      "left" : "public static String stripToEmpty(String str)",
      "right" : "public static String stripToEmpty(String str)",
      "info" : "MethodDeclaration[14876-15882]:MethodDeclaration[14876-15882]"
    }, {
      "left" : "public static String strip(String str, String stripChars)",
      "right" : "public static String strip(String str, String stripChars)",
      "info" : "MethodDeclaration[15888-17273]:MethodDeclaration[15888-17273]"
    }, {
      "left" : "public static String stripStart(String str, String stripChars)",
      "right" : "public static String stripStart(String str, String stripChars)",
      "info" : "MethodDeclaration[17279-19015]:MethodDeclaration[17279-19015]"
    }, {
      "left" : "public static String stripEnd(String str, String stripChars)",
      "right" : "public static String stripEnd(String str, String stripChars)",
      "info" : "MethodDeclaration[19021-20696]:MethodDeclaration[19021-20696]"
    }, {
      "left" : "public static String[] stripAll(String[] strs)",
      "right" : "public static String[] stripAll(String[] strs)",
      "info" : "MethodDeclaration[20796-21713]:MethodDeclaration[20796-21713]"
    }, {
      "left" : "public static String[] stripAll(String[] strs, String stripChars)",
      "right" : "public static String[] stripAll(String[] strs, String stripChars)",
      "info" : "MethodDeclaration[21719-23297]:MethodDeclaration[21719-23297]"
    }, {
      "left" : "public static String stripAccents(String input)",
      "right" : "public static String stripAccents(String input)",
      "info" : "MethodDeclaration[23303-26479]:MethodDeclaration[23303-26479]"
    }, {
      "left" : "public static boolean equals(CharSequence cs1, CharSequence cs2)",
      "right" : "public static boolean equals(CharSequence cs1, CharSequence cs2)",
      "info" : "MethodDeclaration[26577-27537]:MethodDeclaration[26577-27537]"
    }, {
      "left" : "public static boolean equalsIgnoreCase(String str1, String str2)",
      "right" : "public static boolean equalsIgnoreCase(String str1, String str2)",
      "info" : "MethodDeclaration[27543-28573]:MethodDeclaration[27543-28573]"
    }, {
      "left" : "public static int indexOf(String str, char searchChar)",
      "right" : "public static int indexOf(String str, char searchChar)",
      "info" : "MethodDeclaration[28672-29573]:MethodDeclaration[28672-29573]"
    }, {
      "left" : "public static int indexOf(String str, char searchChar, int startPos)",
      "right" : "public static int indexOf(String str, char searchChar, int startPos)",
      "info" : "MethodDeclaration[29579-30861]:MethodDeclaration[29579-30861]"
    }, {
      "left" : "public static int indexOf(String str, String searchStr)",
      "right" : "public static int indexOf(String str, String searchStr)",
      "info" : "MethodDeclaration[30867-31987]:MethodDeclaration[30867-31987]"
    }, {
      "left" : "public static int indexOf(String str, String searchStr, int startPos)",
      "right" : "public static int indexOf(String str, String searchStr, int startPos)",
      "info" : "MethodDeclaration[31993-33647]:MethodDeclaration[31993-33647]"
    }, {
      "left" : "public static int ordinalIndexOf(String str, String searchStr, int ordinal)",
      "right" : "public static int ordinalIndexOf(String str, String searchStr, int ordinal)",
      "info" : "MethodDeclaration[33653-35238]:MethodDeclaration[33653-35238]"
    }, {
      "left" : "// Shared code between ordinalIndexOf(String,String,int) and lastOrdinalIndexOf(String,String,int)\n    private static int ordinalIndexOf(String str, String searchStr, int ordinal, boolean lastIndex)",
      "right" : "// Shared code between ordinalIndexOf(String,String,int) and lastOrdinalIndexOf(String,String,int)\n    private static int ordinalIndexOf(String str, String searchStr, int ordinal, boolean lastIndex)",
      "info" : "MethodDeclaration[35244-36744]:MethodDeclaration[35244-36744]"
    }, {
      "left" : "public static int indexOfIgnoreCase(String str, String searchStr)",
      "right" : "public static int indexOfIgnoreCase(String str, String searchStr)",
      "info" : "MethodDeclaration[36750-37879]:MethodDeclaration[36750-37879]"
    }, {
      "left" : "public static int indexOfIgnoreCase(String str, String searchStr, int startPos)",
      "right" : "public static int indexOfIgnoreCase(String str, String searchStr, int startPos)",
      "info" : "MethodDeclaration[37885-40003]:MethodDeclaration[37885-40003]"
    }, {
      "left" : "public static int lastIndexOf(String str, char searchChar)",
      "right" : "public static int lastIndexOf(String str, char searchChar)",
      "info" : "MethodDeclaration[40106-41015]:MethodDeclaration[40106-41015]"
    }, {
      "left" : "public static int lastIndexOf(String str, char searchChar, int startPos)",
      "right" : "public static int lastIndexOf(String str, char searchChar, int startPos)",
      "info" : "MethodDeclaration[41021-42413]:MethodDeclaration[41021-42413]"
    }, {
      "left" : "public static int lastIndexOf(String str, String searchStr)",
      "right" : "public static int lastIndexOf(String str, String searchStr)",
      "info" : "MethodDeclaration[42419-43506]:MethodDeclaration[42419-43506]"
    }, {
      "left" : "public static int lastOrdinalIndexOf(String str, String searchStr, int ordinal)",
      "right" : "public static int lastOrdinalIndexOf(String str, String searchStr, int ordinal)",
      "info" : "MethodDeclaration[43512-45164]:MethodDeclaration[43512-45164]"
    }, {
      "left" : "public static int lastIndexOf(String str, String searchStr, int startPos)",
      "right" : "public static int lastIndexOf(String str, String searchStr, int startPos)",
      "info" : "MethodDeclaration[45170-46721]:MethodDeclaration[45170-46721]"
    }, {
      "left" : "public static int lastIndexOfIgnoreCase(String str, String searchStr)",
      "right" : "public static int lastIndexOfIgnoreCase(String str, String searchStr)",
      "info" : "MethodDeclaration[46727-47955]:MethodDeclaration[46727-47955]"
    }, {
      "left" : "public static int lastIndexOfIgnoreCase(String str, String searchStr, int startPos)",
      "right" : "public static int lastIndexOfIgnoreCase(String str, String searchStr, int startPos)",
      "info" : "MethodDeclaration[47961-49985]:MethodDeclaration[47961-49985]"
    }, {
      "left" : "public static boolean contains(String str, char searchChar)",
      "right" : "public static boolean contains(String str, char searchChar)",
      "info" : "MethodDeclaration[50085-50982]:MethodDeclaration[50085-50982]"
    }, {
      "left" : "public static boolean contains(String str, String searchStr)",
      "right" : "public static boolean contains(String str, String searchStr)",
      "info" : "MethodDeclaration[50988-51997]:MethodDeclaration[50988-51997]"
    }, {
      "left" : "public static boolean containsIgnoreCase(String str, String searchStr)",
      "right" : "public static boolean containsIgnoreCase(String str, String searchStr)",
      "info" : "MethodDeclaration[52003-53369]:MethodDeclaration[52003-53369]"
    }, {
      "left" : "public static int indexOfAny(CharSequence cs, char[] searchChars)",
      "right" : "public static int indexOfAny(CharSequence cs, char[] searchChars)",
      "info" : "MethodDeclaration[53477-54908]:MethodDeclaration[53477-54908]"
    }, {
      "left" : "public static int indexOfAny(CharSequence cs, String searchChars)",
      "right" : "public static int indexOfAny(CharSequence cs, String searchChars)",
      "info" : "MethodDeclaration[54914-56059]:MethodDeclaration[54914-56059]"
    }, {
      "left" : "public static boolean containsAny(CharSequence cs, String searchChars)",
      "right" : "public static boolean containsAny(CharSequence cs, String searchChars)",
      "info" : "MethodDeclaration[57699-58957]:MethodDeclaration[58003-59261]"
    }, {
      "left" : "public static int indexOfAnyBut(CharSequence cs, char[] searchChars)",
      "right" : "public static int indexOfAnyBut(CharSequence cs, char[] searchChars)",
      "info" : "MethodDeclaration[59068-60536]:MethodDeclaration[59372-60840]"
    }, {
      "left" : "public static int indexOfAnyBut(String str, String searchChars)",
      "right" : "public static int indexOfAnyBut(String str, String searchChars)",
      "info" : "MethodDeclaration[60542-61831]:MethodDeclaration[60846-62135]"
    }, {
      "left" : "public static boolean containsOnly(CharSequence cs, char[] valid)",
      "right" : "public static boolean containsOnly(CharSequence cs, char[] valid)",
      "info" : "MethodDeclaration[61935-63292]:MethodDeclaration[62239-63596]"
    }, {
      "left" : "public static boolean containsOnly(CharSequence cs, String validChars)",
      "right" : "public static boolean containsOnly(CharSequence cs, String validChars)",
      "info" : "MethodDeclaration[63298-64478]:MethodDeclaration[63602-64782]"
    }, {
      "left" : "public static boolean containsNone(CharSequence cs, char[] invalidChars)",
      "right" : "public static boolean containsNone(CharSequence cs, char[] invalidChars)",
      "info" : "MethodDeclaration[64582-66060]:MethodDeclaration[64886-66364]"
    }, {
      "left" : "public static boolean containsNone(CharSequence cs, String invalidChars)",
      "right" : "public static boolean containsNone(CharSequence cs, String invalidChars)",
      "info" : "MethodDeclaration[66066-67239]:MethodDeclaration[66370-67543]"
    }, {
      "left" : "public static int indexOfAny(String str, String[] searchStrs)",
      "right" : "public static int indexOfAny(String str, String[] searchStrs)",
      "info" : "MethodDeclaration[67349-69431]:MethodDeclaration[67653-69735]"
    }, {
      "left" : "public static int lastIndexOfAny(String str, String[] searchStrs)",
      "right" : "public static int lastIndexOfAny(String str, String[] searchStrs)",
      "info" : "MethodDeclaration[69437-71302]:MethodDeclaration[69741-71606]"
    }, {
      "left" : "public static String substring(String str, int start)",
      "right" : "public static String substring(String str, int start)",
      "info" : "MethodDeclaration[71403-72863]:MethodDeclaration[71707-73167]"
    }, {
      "left" : "public static String substring(String str, int start, int end)",
      "right" : "public static String substring(String str, int start, int end)",
      "info" : "MethodDeclaration[72869-75289]:MethodDeclaration[73173-75593]"
    }, {
      "left" : "public static String left(String str, int len)",
      "right" : "public static String left(String str, int len)",
      "info" : "MethodDeclaration[75395-76511]:MethodDeclaration[75699-76815]"
    }, {
      "left" : "public static String right(String str, int len)",
      "right" : "public static String right(String str, int len)",
      "info" : "MethodDeclaration[76517-77658]:MethodDeclaration[76821-77962]"
    }, {
      "left" : "public static String mid(String str, int pos, int len)",
      "right" : "public static String mid(String str, int pos, int len)",
      "info" : "MethodDeclaration[77664-79120]:MethodDeclaration[77968-79424]"
    }, {
      "left" : "public static String substringBefore(String str, String separator)",
      "right" : "public static String substringBefore(String str, String separator)",
      "info" : "MethodDeclaration[79242-80799]:MethodDeclaration[79546-81103]"
    }, {
      "left" : "public static String substringAfter(String str, String separator)",
      "right" : "public static String substringAfter(String str, String separator)",
      "info" : "MethodDeclaration[80805-82395]:MethodDeclaration[81109-82699]"
    }, {
      "left" : "public static String substringBeforeLast(String str, String separator)",
      "right" : "public static String substringBeforeLast(String str, String separator)",
      "info" : "MethodDeclaration[82401-83931]:MethodDeclaration[82705-84235]"
    }, {
      "left" : "public static String substringAfterLast(String str, String separator)",
      "right" : "public static String substringAfterLast(String str, String separator)",
      "info" : "MethodDeclaration[83937-85674]:MethodDeclaration[84241-85978]"
    }, {
      "left" : "public static String substringBetween(String str, String tag)",
      "right" : "public static String substringBetween(String str, String tag)",
      "info" : "MethodDeclaration[85783-86788]:MethodDeclaration[86087-87092]"
    }, {
      "left" : "public static String substringBetween(String str, String open, String close)",
      "right" : "public static String substringBetween(String str, String open, String close)",
      "info" : "MethodDeclaration[86794-88573]:MethodDeclaration[87098-88877]"
    }, {
      "left" : "public static String[] substringsBetween(String str, String open, String close)",
      "right" : "public static String[] substringsBetween(String str, String open, String close)",
      "info" : "MethodDeclaration[88579-90682]:MethodDeclaration[88883-90986]"
    }, {
      "left" : "public static String[] split(String str)",
      "right" : "public static String[] split(String str)",
      "info" : "MethodDeclaration[90887-91856]:MethodDeclaration[91191-92160]"
    }, {
      "left" : "public static String[] split(String str, char separatorChar)",
      "right" : "public static String[] split(String str, char separatorChar)",
      "info" : "MethodDeclaration[91862-93006]:MethodDeclaration[92166-93310]"
    }, {
      "left" : "public static String[] split(String str, String separatorChars)",
      "right" : "public static String[] split(String str, String separatorChars)",
      "info" : "MethodDeclaration[93012-94268]:MethodDeclaration[93316-94572]"
    }, {
      "left" : "public static String[] split(String str, String separatorChars, int max)",
      "right" : "public static String[] split(String str, String separatorChars, int max)",
      "info" : "MethodDeclaration[94274-95850]:MethodDeclaration[94578-96154]"
    }, {
      "left" : "public static String[] splitByWholeSeparator(String str, String separator)",
      "right" : "public static String[] splitByWholeSeparator(String str, String separator)",
      "info" : "MethodDeclaration[95856-97183]:MethodDeclaration[96160-97487]"
    }, {
      "left" : "public static String[] splitByWholeSeparator( String str, String separator, int max )",
      "right" : "public static String[] splitByWholeSeparator( String str, String separator, int max )",
      "info" : "MethodDeclaration[97189-98819]:MethodDeclaration[97493-99123]"
    }, {
      "left" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator)",
      "right" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator)",
      "info" : "MethodDeclaration[98825-100367]:MethodDeclaration[99129-100671]"
    }, {
      "left" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator, int max)",
      "right" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator, int max)",
      "info" : "MethodDeclaration[100373-102235]:MethodDeclaration[100677-102539]"
    }, {
      "left" : "private static String[] splitByWholeSeparatorWorker(String str, String separator, int max, \n                                                        boolean preserveAllTokens)",
      "right" : "private static String[] splitByWholeSeparatorWorker(String str, String separator, int max, \n                                                        boolean preserveAllTokens)",
      "info" : "MethodDeclaration[102241-105453]:MethodDeclaration[102545-105757]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str)",
      "right" : "public static String[] splitPreserveAllTokens(String str)",
      "info" : "MethodDeclaration[105538-106813]:MethodDeclaration[105842-107117]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str, char separatorChar)",
      "right" : "public static String[] splitPreserveAllTokens(String str, char separatorChar)",
      "info" : "MethodDeclaration[106819-108737]:MethodDeclaration[107123-109041]"
    }, {
      "left" : "private static String[] splitWorker(String str, char separatorChar, boolean preserveAllTokens)",
      "right" : "private static String[] splitWorker(String str, char separatorChar, boolean preserveAllTokens)",
      "info" : "MethodDeclaration[108743-110392]:MethodDeclaration[109047-110696]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str, String separatorChars)",
      "right" : "public static String[] splitPreserveAllTokens(String str, String separatorChars)",
      "info" : "MethodDeclaration[110398-112424]:MethodDeclaration[110702-112728]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str, String separatorChars, int max)",
      "right" : "public static String[] splitPreserveAllTokens(String str, String separatorChars, int max)",
      "info" : "MethodDeclaration[112430-114576]:MethodDeclaration[112734-114880]"
    }, {
      "left" : "private static String[] splitWorker(String str, String separatorChars, int max, boolean preserveAllTokens)",
      "right" : "private static String[] splitWorker(String str, String separatorChars, int max, boolean preserveAllTokens)",
      "info" : "MethodDeclaration[114582-118307]:MethodDeclaration[114886-118611]"
    }, {
      "left" : "public static String[] splitByCharacterType(String str)",
      "right" : "public static String[] splitByCharacterType(String str)",
      "info" : "MethodDeclaration[118313-119515]:MethodDeclaration[118617-119819]"
    }, {
      "left" : "public static String[] splitByCharacterTypeCamelCase(String str)",
      "right" : "public static String[] splitByCharacterTypeCamelCase(String str)",
      "info" : "MethodDeclaration[119521-121138]:MethodDeclaration[119825-121442]"
    }, {
      "left" : "private static String[] splitByCharacterType(String str, boolean camelCase)",
      "right" : "private static String[] splitByCharacterType(String str, boolean camelCase)",
      "info" : "MethodDeclaration[121144-123262]:MethodDeclaration[121448-123566]"
    }, {
      "left" : "public static String join(Object[] array)",
      "right" : "public static String join(Object[] array)",
      "info" : "MethodDeclaration[123361-124183]:MethodDeclaration[123665-124487]"
    }, {
      "left" : "public static String join(Object[] array, char separator)",
      "right" : "public static String join(Object[] array, char separator)",
      "info" : "MethodDeclaration[124189-125263]:MethodDeclaration[124493-125567]"
    }, {
      "left" : "public static String join(Object[] array, char separator, int startIndex, int endIndex)",
      "right" : "public static String join(Object[] array, char separator, int startIndex, int endIndex)",
      "info" : "MethodDeclaration[125269-127130]:MethodDeclaration[125573-127434]"
    }, {
      "left" : "public static String join(Object[] array, String separator)",
      "right" : "public static String join(Object[] array, String separator)",
      "info" : "MethodDeclaration[127137-128352]:MethodDeclaration[127441-128656]"
    }, {
      "left" : "public static String join(Object[] array, String separator, int startIndex, int endIndex)",
      "right" : "public static String join(Object[] array, String separator, int startIndex, int endIndex)",
      "info" : "MethodDeclaration[128358-130646]:MethodDeclaration[128662-130950]"
    }, {
      "left" : "public static String join(Iterator<?> iterator, char separator)",
      "right" : "public static String join(Iterator<?> iterator, char separator)",
      "info" : "MethodDeclaration[130652-132129]:MethodDeclaration[130956-132433]"
    }, {
      "left" : "public static String join(Iterator<?> iterator, String separator)",
      "right" : "public static String join(Iterator<?> iterator, String separator)",
      "info" : "MethodDeclaration[132135-133654]:MethodDeclaration[132439-133958]"
    }, {
      "left" : "public static String join(Iterable<?> iterable, char separator)",
      "right" : "public static String join(Iterable<?> iterable, char separator)",
      "info" : "MethodDeclaration[133660-134493]:MethodDeclaration[133964-134797]"
    }, {
      "left" : "public static String join(Iterable<?> iterable, String separator)",
      "right" : "public static String join(Iterable<?> iterable, String separator)",
      "info" : "MethodDeclaration[134499-135338]:MethodDeclaration[134803-135642]"
    }, {
      "left" : "public static String deleteWhitespace(String str)",
      "right" : "public static String deleteWhitespace(String str)",
      "info" : "MethodDeclaration[135436-136465]:MethodDeclaration[135740-136769]"
    }, {
      "left" : "public static String removeStart(String str, String remove)",
      "right" : "public static String removeStart(String str, String remove)",
      "info" : "MethodDeclaration[136563-137926]:MethodDeclaration[136867-138230]"
    }, {
      "left" : "public static String removeStartIgnoreCase(String str, String remove)",
      "right" : "public static String removeStartIgnoreCase(String str, String remove)",
      "info" : "MethodDeclaration[137932-139505]:MethodDeclaration[138236-139809]"
    }, {
      "left" : "public static String removeEnd(String str, String remove)",
      "right" : "public static String removeEnd(String str, String remove)",
      "info" : "MethodDeclaration[139511-140874]:MethodDeclaration[139815-141178]"
    }, {
      "left" : "public static String removeEndIgnoreCase(String str, String remove)",
      "right" : "public static String removeEndIgnoreCase(String str, String remove)",
      "info" : "MethodDeclaration[140880-142530]:MethodDeclaration[141184-142834]"
    }, {
      "left" : "public static String remove(String str, String remove)",
      "right" : "public static String remove(String str, String remove)",
      "info" : "MethodDeclaration[142536-143706]:MethodDeclaration[142840-144010]"
    }, {
      "left" : "public static String remove(String str, char remove)",
      "right" : "public static String remove(String str, char remove)",
      "info" : "MethodDeclaration[143712-144876]:MethodDeclaration[144016-145180]"
    }, {
      "left" : "public static String replaceOnce(String text, String searchString, String replacement)",
      "right" : "public static String replaceOnce(String text, String searchString, String replacement)",
      "info" : "MethodDeclaration[144977-146198]:MethodDeclaration[145281-146502]"
    }, {
      "left" : "public static String replace(String text, String searchString, String replacement)",
      "right" : "public static String replace(String text, String searchString, String replacement)",
      "info" : "MethodDeclaration[146204-147384]:MethodDeclaration[146508-147688]"
    }, {
      "left" : "public static String replace(String text, String searchString, String replacement, int max)",
      "right" : "public static String replace(String text, String searchString, String replacement, int max)",
      "info" : "MethodDeclaration[147390-149778]:MethodDeclaration[147694-150082]"
    }, {
      "left" : "public static String replaceEach(String text, String[] searchList, String[] replacementList)",
      "right" : "public static String replaceEach(String text, String[] searchList, String[] replacementList)",
      "info" : "MethodDeclaration[149784-151730]:MethodDeclaration[150088-152034]"
    }, {
      "left" : "public static String replaceEachRepeatedly(String text, String[] searchList, String[] replacementList)",
      "right" : "public static String replaceEachRepeatedly(String text, String[] searchList, String[] replacementList)",
      "info" : "MethodDeclaration[151736-154413]:MethodDeclaration[152040-154717]"
    }, {
      "left" : "private static String replaceEach(String text, String[] searchList, String[] replacementList, \n                                      boolean repeat, int timeToLive)",
      "right" : "private static String replaceEach(String text, String[] searchList, String[] replacementList, \n                                      boolean repeat, int timeToLive)",
      "info" : "MethodDeclaration[154419-161588]:MethodDeclaration[154723-161892]"
    }, {
      "left" : "public static String replaceChars(String str, char searchChar, char replaceChar)",
      "right" : "public static String replaceChars(String str, char searchChar, char replaceChar)",
      "info" : "MethodDeclaration[161704-162779]:MethodDeclaration[162008-163083]"
    }, {
      "left" : "public static String replaceChars(String str, String searchChars, String replaceChars)",
      "right" : "public static String replaceChars(String str, String searchChars, String replaceChars)",
      "info" : "MethodDeclaration[162785-165422]:MethodDeclaration[163089-165726]"
    }, {
      "left" : "public static String overlay(String str, String overlay, int start, int end)",
      "right" : "public static String overlay(String str, String overlay, int start, int end)",
      "info" : "MethodDeclaration[165521-167748]:MethodDeclaration[165825-168052]"
    }, {
      "left" : "public static String chomp(String str)",
      "right" : "public static String chomp(String str)",
      "info" : "MethodDeclaration[167848-169551]:MethodDeclaration[168152-169855]"
    }, {
      "left" : "public static String chomp(String str, String separator)",
      "right" : "public static String chomp(String str, String separator)",
      "info" : "MethodDeclaration[169557-170975]:MethodDeclaration[169861-171279]"
    }, {
      "left" : "public static String chop(String str)",
      "right" : "public static String chop(String str)",
      "info" : "MethodDeclaration[171075-172463]:MethodDeclaration[171379-172767]"
    }, {
      "left" : "public static String repeat(String str, int repeat)",
      "right" : "public static String repeat(String str, int repeat)",
      "info" : "MethodDeclaration[172659-174756]:MethodDeclaration[172963-175060]"
    }, {
      "left" : "public static String repeat(String str, String separator, int repeat)",
      "right" : "public static String repeat(String str, String separator, int repeat)",
      "info" : "MethodDeclaration[174762-175978]:MethodDeclaration[175066-176282]"
    }, {
      "left" : "private static String padding(int repeat, char padChar) throws IndexOutOfBoundsException",
      "right" : "private static String padding(int repeat, char padChar) throws IndexOutOfBoundsException",
      "info" : "MethodDeclaration[175984-177311]:MethodDeclaration[176288-177615]"
    }, {
      "left" : "public static String rightPad(String str, int size)",
      "right" : "public static String rightPad(String str, int size)",
      "info" : "MethodDeclaration[177317-178107]:MethodDeclaration[177621-178411]"
    }, {
      "left" : "public static String rightPad(String str, int size, char padChar)",
      "right" : "public static String rightPad(String str, int size, char padChar)",
      "info" : "MethodDeclaration[178113-179342]:MethodDeclaration[178417-179646]"
    }, {
      "left" : "public static String rightPad(String str, int size, String padStr)",
      "right" : "public static String rightPad(String str, int size, String padStr)",
      "info" : "MethodDeclaration[179348-181308]:MethodDeclaration[179652-181612]"
    }, {
      "left" : "public static String leftPad(String str, int size)",
      "right" : "public static String leftPad(String str, int size)",
      "info" : "MethodDeclaration[181314-182094]:MethodDeclaration[181618-182398]"
    }, {
      "left" : "public static String leftPad(String str, int size, char padChar)",
      "right" : "public static String leftPad(String str, int size, char padChar)",
      "info" : "MethodDeclaration[182100-183300]:MethodDeclaration[182404-183604]"
    }, {
      "left" : "public static String leftPad(String str, int size, String padStr)",
      "right" : "public static String leftPad(String str, int size, String padStr)",
      "info" : "MethodDeclaration[183306-185234]:MethodDeclaration[183610-185538]"
    }, {
      "left" : "public static int length(CharSequence cs)",
      "right" : "public static int length(CharSequence cs)",
      "info" : "MethodDeclaration[185237-185683]:MethodDeclaration[185541-185987]"
    }, {
      "left" : "public static String center(String str, int size)",
      "right" : "public static String center(String str, int size)",
      "info" : "MethodDeclaration[185788-186790]:MethodDeclaration[186092-187094]"
    }, {
      "left" : "public static String center(String str, int size, char padChar)",
      "right" : "public static String center(String str, int size, char padChar)",
      "info" : "MethodDeclaration[186796-188217]:MethodDeclaration[187100-188521]"
    }, {
      "left" : "public static String center(String str, int size, String padStr)",
      "right" : "public static String center(String str, int size, String padStr)",
      "info" : "MethodDeclaration[188223-189900]:MethodDeclaration[188527-190204]"
    }, {
      "left" : "public static String upperCase(String str)",
      "right" : "public static String upperCase(String str)",
      "info" : "MethodDeclaration[190007-190993]:MethodDeclaration[190311-191297]"
    }, {
      "left" : "public static String upperCase(String str, Locale locale)",
      "right" : "public static String upperCase(String str, Locale locale)",
      "info" : "MethodDeclaration[190999-191816]:MethodDeclaration[191303-192120]"
    }, {
      "left" : "public static String lowerCase(String str)",
      "right" : "public static String lowerCase(String str)",
      "info" : "MethodDeclaration[191822-192808]:MethodDeclaration[192126-193112]"
    }, {
      "left" : "public static String lowerCase(String str, Locale locale)",
      "right" : "public static String lowerCase(String str, Locale locale)",
      "info" : "MethodDeclaration[192814-193631]:MethodDeclaration[193118-193935]"
    }, {
      "left" : "public static String capitalize(CharSequence cs)",
      "right" : "public static String capitalize(CharSequence cs)",
      "info" : "MethodDeclaration[193637-194816]:MethodDeclaration[193941-195120]"
    }, {
      "left" : "public static String uncapitalize(CharSequence cs)",
      "right" : "public static String uncapitalize(CharSequence cs)",
      "info" : "MethodDeclaration[194822-196031]:MethodDeclaration[195126-196335]"
    }, {
      "left" : "public static String swapCase(String str)",
      "right" : "public static String swapCase(String str)",
      "info" : "MethodDeclaration[196037-197833]:MethodDeclaration[196341-198137]"
    }, {
      "left" : "public static int countMatches(String str, String sub)",
      "right" : "public static int countMatches(String str, String sub)",
      "info" : "MethodDeclaration[197938-199048]:MethodDeclaration[198242-199352]"
    }, {
      "left" : "public static boolean isAlpha(CharSequence cs)",
      "right" : "public static boolean isAlpha(CharSequence cs)",
      "info" : "MethodDeclaration[199155-200137]:MethodDeclaration[199459-200441]"
    }, {
      "left" : "public static boolean isAlphaSpace(CharSequence cs)",
      "right" : "public static boolean isAlphaSpace(CharSequence cs)",
      "info" : "MethodDeclaration[200143-201273]:MethodDeclaration[200447-201577]"
    }, {
      "left" : "public static boolean isAlphanumeric(CharSequence cs)",
      "right" : "public static boolean isAlphanumeric(CharSequence cs)",
      "info" : "MethodDeclaration[201279-202394]:MethodDeclaration[201583-202698]"
    }, {
      "left" : "public static boolean isAlphanumericSpace(CharSequence cs)",
      "right" : "public static boolean isAlphanumericSpace(CharSequence cs)",
      "info" : "MethodDeclaration[202400-203585]:MethodDeclaration[202704-203889]"
    }, {
      "left" : "public static boolean isAsciiPrintable(CharSequence cs)",
      "right" : "public static boolean isAsciiPrintable(CharSequence cs)",
      "info" : "MethodDeclaration[203591-204977]:MethodDeclaration[203895-205281]"
    }, {
      "left" : "public static boolean isNumeric(CharSequence cs)",
      "right" : "public static boolean isNumeric(CharSequence cs)",
      "info" : "MethodDeclaration[204983-206131]:MethodDeclaration[205287-206435]"
    }, {
      "left" : "public static boolean isNumericSpace(CharSequence cs)",
      "right" : "public static boolean isNumericSpace(CharSequence cs)",
      "info" : "MethodDeclaration[206137-207367]:MethodDeclaration[206441-207671]"
    }, {
      "left" : "public static boolean isWhitespace(CharSequence cs)",
      "right" : "public static boolean isWhitespace(CharSequence cs)",
      "info" : "MethodDeclaration[207373-208412]:MethodDeclaration[207677-208716]"
    }, {
      "left" : "public static boolean isAllLowerCase(CharSequence cs)",
      "right" : "public static boolean isAllLowerCase(CharSequence cs)",
      "info" : "MethodDeclaration[208418-209454]:MethodDeclaration[208722-209758]"
    }, {
      "left" : "public static boolean isAllUpperCase(CharSequence cs)",
      "right" : "public static boolean isAllUpperCase(CharSequence cs)",
      "info" : "MethodDeclaration[209460-210489]:MethodDeclaration[209764-210793]"
    }, {
      "left" : "public static String defaultString(String str)",
      "right" : "public static String defaultString(String str)",
      "info" : "MethodDeclaration[210589-211220]:MethodDeclaration[210893-211524]"
    }, {
      "left" : "public static String defaultString(String str, String defaultStr)",
      "right" : "public static String defaultString(String str, String defaultStr)",
      "info" : "MethodDeclaration[211226-212029]:MethodDeclaration[211530-212333]"
    }, {
      "left" : "public static CharSequence defaultIfEmpty(CharSequence str, CharSequence defaultStr)",
      "right" : "public static CharSequence defaultIfEmpty(CharSequence str, CharSequence defaultStr)",
      "info" : "MethodDeclaration[212035-212929]:MethodDeclaration[212339-213233]"
    }, {
      "left" : "public static String reverse(String str)",
      "right" : "public static String reverse(String str)",
      "info" : "MethodDeclaration[213030-213653]:MethodDeclaration[213334-213957]"
    }, {
      "left" : "public static String reverseDelimited(String str, char separatorChar)",
      "right" : "public static String reverseDelimited(String str, char separatorChar)",
      "info" : "MethodDeclaration[213659-214779]:MethodDeclaration[213963-215083]"
    }, {
      "left" : "public static String abbreviate(String str, int maxWidth)",
      "right" : "public static String abbreviate(String str, int maxWidth)",
      "info" : "MethodDeclaration[214883-216381]:MethodDeclaration[215187-216685]"
    }, {
      "left" : "public static String abbreviate(String str, int offset, int maxWidth)",
      "right" : "public static String abbreviate(String str, int offset, int maxWidth)",
      "info" : "MethodDeclaration[216387-219316]:MethodDeclaration[216691-219620]"
    }, {
      "left" : "public static String abbreviateMiddle(String str, String middle, int length)",
      "right" : "public static String abbreviateMiddle(String str, String middle, int length)",
      "info" : "MethodDeclaration[219326-221511]:MethodDeclaration[219630-221815]"
    }, {
      "left" : "public static String difference(String str1, String str2)",
      "right" : "public static String difference(String str1, String str2)",
      "info" : "MethodDeclaration[221613-222964]:MethodDeclaration[221917-223268]"
    }, {
      "left" : "public static int indexOfDifference(CharSequence cs1, CharSequence cs2)",
      "right" : "public static int indexOfDifference(CharSequence cs1, CharSequence cs2)",
      "info" : "MethodDeclaration[222970-224417]:MethodDeclaration[223274-224721]"
    }, {
      "left" : "public static int indexOfDifference(CharSequence[] css)",
      "right" : "public static int indexOfDifference(CharSequence[] css)",
      "info" : "MethodDeclaration[224423-228234]:MethodDeclaration[224727-228538]"
    }, {
      "left" : "public static String getCommonPrefix(String[] strs)",
      "right" : "public static String getCommonPrefix(String[] strs)",
      "info" : "MethodDeclaration[228244-230704]:MethodDeclaration[228548-231008]"
    }, {
      "left" : "public static int getLevenshteinDistance(CharSequence s, CharSequence t)",
      "right" : "public static int getLevenshteinDistance(CharSequence s, CharSequence t)",
      "info" : "MethodDeclaration[230806-235592]:MethodDeclaration[231110-235896]"
    }, {
      "left" : "public static boolean startsWith(String str, String prefix)",
      "right" : "public static boolean startsWith(String str, String prefix)",
      "info" : "MethodDeclaration[236158-237132]:MethodDeclaration[236462-237436]"
    }, {
      "left" : "public static boolean startsWithIgnoreCase(String str, String prefix)",
      "right" : "public static boolean startsWithIgnoreCase(String str, String prefix)",
      "info" : "MethodDeclaration[237138-238191]:MethodDeclaration[237442-238495]"
    }, {
      "left" : "private static boolean startsWith(String str, String prefix, boolean ignoreCase)",
      "right" : "private static boolean startsWith(String str, String prefix, boolean ignoreCase)",
      "info" : "MethodDeclaration[238197-239035]:MethodDeclaration[238501-239339]"
    }, {
      "left" : "public static boolean startsWithAny(String string, String[] searchStrings)",
      "right" : "public static boolean startsWithAny(String string, String[] searchStrings)",
      "info" : "MethodDeclaration[239045-240314]:MethodDeclaration[239349-240618]"
    }, {
      "left" : "public static boolean endsWith(String str, String suffix)",
      "right" : "public static boolean endsWith(String str, String suffix)",
      "info" : "MethodDeclaration[240415-241422]:MethodDeclaration[240719-241726]"
    }, {
      "left" : "public static boolean endsWithIgnoreCase(String str, String suffix)",
      "right" : "public static boolean endsWithIgnoreCase(String str, String suffix)",
      "info" : "MethodDeclaration[241428-242524]:MethodDeclaration[241732-242828]"
    }, {
      "left" : "private static boolean endsWith(String str, String suffix, boolean ignoreCase)",
      "right" : "private static boolean endsWith(String str, String suffix, boolean ignoreCase)",
      "info" : "MethodDeclaration[242530-243424]:MethodDeclaration[242834-243728]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6610-6616]:Modifier[6610-6616]"
    }, {
      "left" : "StringUtils",
      "right" : "StringUtils",
      "info" : "SimpleName[6617-6628]:SimpleName[6617-6628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6631-6655]:Block[6631-6655]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[6641-6649]:SuperConstructorInvocation[6641-6649]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7398-7404]:Modifier[7398-7404]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7405-7411]:Modifier[7405-7411]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7412-7419]:PrimitiveType[7412-7419]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[7420-7427]:SimpleName[7420-7427]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[7428-7443]:SingleVariableDeclaration[7428-7443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7445-7499]:Block[7445-7499]"
    }, {
      "left" : "return cs == null || cs.length() == 0;",
      "right" : "return cs == null || cs.length() == 0;",
      "info" : "ReturnStatement[7455-7493]:ReturnStatement[7455-7493]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8011-8017]:Modifier[8011-8017]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8018-8024]:Modifier[8018-8024]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8025-8032]:PrimitiveType[8025-8032]"
    }, {
      "left" : "isNotEmpty",
      "right" : "isNotEmpty",
      "info" : "SimpleName[8033-8043]:SimpleName[8033-8043]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[8044-8059]:SingleVariableDeclaration[8044-8059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8061-8109]:Block[8061-8109]"
    }, {
      "left" : "return !StringUtils.isEmpty(cs);",
      "right" : "return !StringUtils.isEmpty(cs);",
      "info" : "ReturnStatement[8071-8103]:ReturnStatement[8071-8103]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8630-8636]:Modifier[8630-8636]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8637-8643]:Modifier[8637-8643]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8644-8651]:PrimitiveType[8644-8651]"
    }, {
      "left" : "isBlank",
      "right" : "isBlank",
      "info" : "SimpleName[8652-8659]:SimpleName[8652-8659]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[8660-8675]:SingleVariableDeclaration[8660-8675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8677-8981]:Block[8677-8981]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[8687-8698]:VariableDeclarationStatement[8687-8698]"
    }, {
      "left" : "if (cs == null || (strLen = cs.length()) == 0)",
      "right" : "if (cs == null || (strLen = cs.length()) == 0)",
      "info" : "IfStatement[8707-8790]:IfStatement[8707-8790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8754-8790]:Block[8754-8790]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8768-8780]:ReturnStatement[8768-8780]"
    }, {
      "left" : "for (int i = 0; i < strLen; i++)",
      "right" : "for (int i = 0; i < strLen; i++)",
      "info" : "ForStatement[8799-8954]:ForStatement[8799-8954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8832-8954]:Block[8832-8954]"
    }, {
      "left" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
      "right" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
      "info" : "IfStatement[8846-8944]:IfStatement[8846-8944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8899-8944]:Block[8899-8944]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8917-8930]:ReturnStatement[8917-8930]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8963-8975]:ReturnStatement[8963-8975]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9560-9566]:Modifier[9560-9566]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9567-9573]:Modifier[9567-9573]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9574-9581]:PrimitiveType[9574-9581]"
    }, {
      "left" : "isNotBlank",
      "right" : "isNotBlank",
      "info" : "SimpleName[9582-9592]:SimpleName[9582-9592]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[9593-9608]:SingleVariableDeclaration[9593-9608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9610-9658]:Block[9610-9658]"
    }, {
      "left" : "return !StringUtils.isBlank(cs);",
      "right" : "return !StringUtils.isBlank(cs);",
      "info" : "ReturnStatement[9620-9652]:ReturnStatement[9620-9652]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10624-10630]:Modifier[10624-10630]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10631-10637]:Modifier[10631-10637]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10638-10644]:SimpleType[10638-10644]"
    }, {
      "left" : "trim",
      "right" : "trim",
      "info" : "SimpleName[10645-10649]:SimpleName[10645-10649]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[10650-10660]:SingleVariableDeclaration[10650-10660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10662-10717]:Block[10662-10717]"
    }, {
      "left" : "return str == null ? null : str.trim();",
      "right" : "return str == null ? null : str.trim();",
      "info" : "ReturnStatement[10672-10711]:ReturnStatement[10672-10711]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11616-11622]:Modifier[11616-11622]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11623-11629]:Modifier[11623-11629]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11630-11636]:SimpleType[11630-11636]"
    }, {
      "left" : "trimToNull",
      "right" : "trimToNull",
      "info" : "SimpleName[11637-11647]:SimpleName[11637-11647]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[11648-11658]:SingleVariableDeclaration[11648-11658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11660-11738]:Block[11660-11738]"
    }, {
      "left" : "String ts = trim(str);",
      "right" : "String ts = trim(str);",
      "info" : "VariableDeclarationStatement[11670-11692]:VariableDeclarationStatement[11670-11692]"
    }, {
      "left" : "return isEmpty(ts) ? null : ts;",
      "right" : "return isEmpty(ts) ? null : ts;",
      "info" : "ReturnStatement[11701-11732]:ReturnStatement[11701-11732]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12609-12615]:Modifier[12609-12615]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12616-12622]:Modifier[12616-12622]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12623-12629]:SimpleType[12623-12629]"
    }, {
      "left" : "trimToEmpty",
      "right" : "trimToEmpty",
      "info" : "SimpleName[12630-12641]:SimpleName[12630-12641]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[12642-12652]:SingleVariableDeclaration[12642-12652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12654-12710]:Block[12654-12710]"
    }, {
      "left" : "return str == null ? EMPTY : str.trim();",
      "right" : "return str == null ? EMPTY : str.trim();",
      "info" : "ReturnStatement[12664-12704]:ReturnStatement[12664-12704]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13655-13661]:Modifier[13655-13661]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13662-13668]:Modifier[13662-13668]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[13669-13675]:SimpleType[13669-13675]"
    }, {
      "left" : "strip",
      "right" : "strip",
      "info" : "SimpleName[13676-13681]:SimpleName[13676-13681]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[13682-13692]:SingleVariableDeclaration[13682-13692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13694-13734]:Block[13694-13734]"
    }, {
      "left" : "return strip(str, null);",
      "right" : "return strip(str, null);",
      "info" : "ReturnStatement[13704-13728]:ReturnStatement[13704-13728]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14677-14683]:Modifier[14677-14683]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14684-14690]:Modifier[14684-14690]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[14691-14697]:SimpleType[14691-14697]"
    }, {
      "left" : "stripToNull",
      "right" : "stripToNull",
      "info" : "SimpleName[14698-14709]:SimpleName[14698-14709]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[14710-14720]:SingleVariableDeclaration[14710-14720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14722-14870]:Block[14722-14870]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[14732-14785]:IfStatement[14732-14785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14749-14785]:Block[14749-14785]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14763-14775]:ReturnStatement[14763-14775]"
    }, {
      "left" : "str = strip(str, null);",
      "right" : "str = strip(str, null);",
      "info" : "ExpressionStatement[14794-14817]:ExpressionStatement[14794-14817]"
    }, {
      "left" : "return str.length() == 0 ? null : str;",
      "right" : "return str.length() == 0 ? null : str;",
      "info" : "ReturnStatement[14826-14864]:ReturnStatement[14826-14864]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15774-15780]:Modifier[15774-15780]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15781-15787]:Modifier[15781-15787]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[15788-15794]:SimpleType[15788-15794]"
    }, {
      "left" : "stripToEmpty",
      "right" : "stripToEmpty",
      "info" : "SimpleName[15795-15807]:SimpleName[15795-15807]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[15808-15818]:SingleVariableDeclaration[15808-15818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15820-15882]:Block[15820-15882]"
    }, {
      "left" : "return str == null ? EMPTY : strip(str, null);",
      "right" : "return str == null ? EMPTY : strip(str, null);",
      "info" : "ReturnStatement[15830-15876]:ReturnStatement[15830-15876]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17061-17067]:Modifier[17061-17067]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17068-17074]:Modifier[17068-17074]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[17075-17081]:SimpleType[17075-17081]"
    }, {
      "left" : "strip",
      "right" : "strip",
      "info" : "SimpleName[17082-17087]:SimpleName[17082-17087]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[17088-17098]:SingleVariableDeclaration[17088-17098]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[17100-17117]:SingleVariableDeclaration[17100-17117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17119-17273]:Block[17119-17273]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[17129-17182]:IfStatement[17129-17182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17147-17182]:Block[17147-17182]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[17161-17172]:ReturnStatement[17161-17172]"
    }, {
      "left" : "str = stripStart(str, stripChars);",
      "right" : "str = stripStart(str, stripChars);",
      "info" : "ExpressionStatement[17191-17225]:ExpressionStatement[17191-17225]"
    }, {
      "left" : "return stripEnd(str, stripChars);",
      "right" : "return stripEnd(str, stripChars);",
      "info" : "ReturnStatement[17234-17267]:ReturnStatement[17234-17267]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18375-18381]:Modifier[18375-18381]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18382-18388]:Modifier[18382-18388]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[18389-18395]:SimpleType[18389-18395]"
    }, {
      "left" : "stripStart",
      "right" : "stripStart",
      "info" : "SimpleName[18396-18406]:SimpleName[18396-18406]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[18407-18417]:SingleVariableDeclaration[18407-18417]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[18419-18436]:SingleVariableDeclaration[18419-18436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18438-19015]:Block[18438-19015]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[18448-18459]:VariableDeclarationStatement[18448-18459]"
    }, {
      "left" : "if (str == null || (strLen = str.length()) == 0)",
      "right" : "if (str == null || (strLen = str.length()) == 0)",
      "info" : "IfStatement[18468-18552]:IfStatement[18468-18552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18517-18552]:Block[18517-18552]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[18531-18542]:ReturnStatement[18531-18542]"
    }, {
      "left" : "int start = 0;",
      "right" : "int start = 0;",
      "info" : "VariableDeclarationStatement[18561-18575]:VariableDeclarationStatement[18561-18575]"
    }, {
      "left" : "if (stripChars == null)",
      "right" : "if (stripChars == null)",
      "info" : "IfStatement[18584-18972]:IfStatement[18584-18972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18608-18743]:Block[18608-18743]"
    }, {
      "left" : "while ((start != strLen) && Character.isWhitespace(str.charAt(start)))",
      "right" : "while ((start != strLen) && Character.isWhitespace(str.charAt(start)))",
      "info" : "WhileStatement[18622-18733]:WhileStatement[18622-18733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18693-18733]:Block[18693-18733]"
    }, {
      "left" : "start++;",
      "right" : "start++;",
      "info" : "ExpressionStatement[18711-18719]:ExpressionStatement[18711-18719]"
    }, {
      "left" : "if (stripChars.length() == 0)",
      "right" : "if (stripChars.length() == 0)",
      "info" : "IfStatement[18749-18972]:IfStatement[18749-18972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18779-18814]:Block[18779-18814]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[18793-18804]:ReturnStatement[18793-18804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18820-18972]:Block[18820-18972]"
    }, {
      "left" : "while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND))",
      "right" : "while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND))",
      "info" : "WhileStatement[18834-18962]:WhileStatement[18834-18962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18922-18962]:Block[18922-18962]"
    }, {
      "left" : "start++;",
      "right" : "start++;",
      "info" : "ExpressionStatement[18940-18948]:ExpressionStatement[18940-18948]"
    }, {
      "left" : "return str.substring(start);",
      "right" : "return str.substring(start);",
      "info" : "ReturnStatement[18981-19009]:ReturnStatement[18981-19009]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20099-20105]:Modifier[20099-20105]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[20106-20112]:Modifier[20106-20112]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[20113-20119]:SimpleType[20113-20119]"
    }, {
      "left" : "stripEnd",
      "right" : "stripEnd",
      "info" : "SimpleName[20120-20128]:SimpleName[20120-20128]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[20129-20139]:SingleVariableDeclaration[20129-20139]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[20141-20158]:SingleVariableDeclaration[20141-20158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20160-20696]:Block[20160-20696]"
    }, {
      "left" : "int end;",
      "right" : "int end;",
      "info" : "VariableDeclarationStatement[20170-20178]:VariableDeclarationStatement[20170-20178]"
    }, {
      "left" : "if (str == null || (end = str.length()) == 0)",
      "right" : "if (str == null || (end = str.length()) == 0)",
      "info" : "IfStatement[20187-20268]:IfStatement[20187-20268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20233-20268]:Block[20233-20268]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[20247-20258]:ReturnStatement[20247-20258]"
    }, {
      "left" : "if (stripChars == null)",
      "right" : "if (stripChars == null)",
      "info" : "IfStatement[20278-20652]:IfStatement[20278-20652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20302-20430]:Block[20302-20430]"
    }, {
      "left" : "while ((end != 0) && Character.isWhitespace(str.charAt(end - 1)))",
      "right" : "while ((end != 0) && Character.isWhitespace(str.charAt(end - 1)))",
      "info" : "WhileStatement[20316-20420]:WhileStatement[20316-20420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20382-20420]:Block[20382-20420]"
    }, {
      "left" : "end--;",
      "right" : "end--;",
      "info" : "ExpressionStatement[20400-20406]:ExpressionStatement[20400-20406]"
    }, {
      "left" : "if (stripChars.length() == 0)",
      "right" : "if (stripChars.length() == 0)",
      "info" : "IfStatement[20436-20652]:IfStatement[20436-20652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20466-20501]:Block[20466-20501]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[20480-20491]:ReturnStatement[20480-20491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20507-20652]:Block[20507-20652]"
    }, {
      "left" : "while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND))",
      "right" : "while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND))",
      "info" : "WhileStatement[20521-20642]:WhileStatement[20521-20642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20604-20642]:Block[20604-20642]"
    }, {
      "left" : "end--;",
      "right" : "end--;",
      "info" : "ExpressionStatement[20622-20628]:ExpressionStatement[20622-20628]"
    }, {
      "left" : "return str.substring(0, end);",
      "right" : "return str.substring(0, end);",
      "info" : "ReturnStatement[20661-20690]:ReturnStatement[20661-20690]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21622-21628]:Modifier[21622-21628]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[21629-21635]:Modifier[21629-21635]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[21636-21644]:ArrayType[21636-21644]"
    }, {
      "left" : "stripAll",
      "right" : "stripAll",
      "info" : "SimpleName[21645-21653]:SimpleName[21645-21653]"
    }, {
      "left" : "String[] strs",
      "right" : "String[] strs",
      "info" : "SingleVariableDeclaration[21654-21667]:SingleVariableDeclaration[21654-21667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21669-21713]:Block[21669-21713]"
    }, {
      "left" : "return stripAll(strs, null);",
      "right" : "return stripAll(strs, null);",
      "info" : "ReturnStatement[21679-21707]:ReturnStatement[21679-21707]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22932-22938]:Modifier[22932-22938]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[22939-22945]:Modifier[22939-22945]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[22946-22954]:ArrayType[22946-22954]"
    }, {
      "left" : "stripAll",
      "right" : "stripAll",
      "info" : "SimpleName[22955-22963]:SimpleName[22955-22963]"
    }, {
      "left" : "String[] strs",
      "right" : "String[] strs",
      "info" : "SingleVariableDeclaration[22964-22977]:SingleVariableDeclaration[22964-22977]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[22979-22996]:SingleVariableDeclaration[22979-22996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22998-23297]:Block[22998-23297]"
    }, {
      "left" : "int strsLen;",
      "right" : "int strsLen;",
      "info" : "VariableDeclarationStatement[23008-23020]:VariableDeclarationStatement[23008-23020]"
    }, {
      "left" : "if (strs == null || (strsLen = strs.length) == 0)",
      "right" : "if (strs == null || (strsLen = strs.length) == 0)",
      "info" : "IfStatement[23029-23115]:IfStatement[23029-23115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23079-23115]:Block[23079-23115]"
    }, {
      "left" : "return strs;",
      "right" : "return strs;",
      "info" : "ReturnStatement[23093-23105]:ReturnStatement[23093-23105]"
    }, {
      "left" : "String[] newArr = new String[strsLen];",
      "right" : "String[] newArr = new String[strsLen];",
      "info" : "VariableDeclarationStatement[23124-23162]:VariableDeclarationStatement[23124-23162]"
    }, {
      "left" : "for (int i = 0; i < strsLen; i++)",
      "right" : "for (int i = 0; i < strsLen; i++)",
      "info" : "ForStatement[23171-23268]:ForStatement[23171-23268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23205-23268]:Block[23205-23268]"
    }, {
      "left" : "newArr[i] = strip(strs[i], stripChars);",
      "right" : "newArr[i] = strip(strs[i], stripChars);",
      "info" : "ExpressionStatement[23219-23258]:ExpressionStatement[23219-23258]"
    }, {
      "left" : "return newArr;",
      "right" : "return newArr;",
      "info" : "ReturnStatement[23277-23291]:ReturnStatement[23277-23291]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23847-23853]:Modifier[23847-23853]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[23854-23860]:Modifier[23854-23860]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[23861-23867]:SimpleType[23861-23867]"
    }, {
      "left" : "stripAccents",
      "right" : "stripAccents",
      "info" : "SimpleName[23868-23880]:SimpleName[23868-23880]"
    }, {
      "left" : "String input",
      "right" : "String input",
      "info" : "SingleVariableDeclaration[23881-23893]:SingleVariableDeclaration[23881-23893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23895-26479]:Block[23895-26479]"
    }, {
      "left" : "if(input == null)",
      "right" : "if(input == null)",
      "info" : "IfStatement[23905-23959]:IfStatement[23905-23959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23923-23959]:Block[23923-23959]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23937-23949]:ReturnStatement[23937-23949]"
    }, {
      "left" : "if(SystemUtils.isJavaVersionAtLeast(1.6f))",
      "right" : "if(SystemUtils.isJavaVersionAtLeast(1.6f))",
      "info" : "IfStatement[23968-26473]:IfStatement[23968-26473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24011-26336]:Block[24011-26336]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[24193-26326]:TryStatement[24193-26326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24197-25183]:Block[24197-25183]"
    }, {
      "left" : "Class<?> normalizerFormClass = ClassUtils.getClass(\"java.text.Normalizer$Form\", false);",
      "right" : "Class<?> normalizerFormClass = ClassUtils.getClass(\"java.text.Normalizer$Form\", false);",
      "info" : "VariableDeclarationStatement[24270-24357]:VariableDeclarationStatement[24270-24357]"
    }, {
      "left" : "Class<?> normalizerClass = ClassUtils.getClass(\"java.text.Normalizer\", false);",
      "right" : "Class<?> normalizerClass = ClassUtils.getClass(\"java.text.Normalizer\", false);",
      "info" : "VariableDeclarationStatement[24414-24492]:VariableDeclarationStatement[24414-24492]"
    }, {
      "left" : "java.lang.reflect.Method method = normalizerClass.getMethod(\"normalize\", CharSequence.class, normalizerFormClass );",
      "right" : "java.lang.reflect.Method method = normalizerClass.getMethod(\"normalize\", CharSequence.class, normalizerFormClass );",
      "info" : "VariableDeclarationStatement[24561-24676]:VariableDeclarationStatement[24561-24676]"
    }, {
      "left" : "java.lang.reflect.Field nfd = normalizerFormClass.getField(\"NFD\");",
      "right" : "java.lang.reflect.Field nfd = normalizerFormClass.getField(\"NFD\");",
      "info" : "VariableDeclarationStatement[24738-24804]:VariableDeclarationStatement[24738-24804]"
    }, {
      "left" : "String decomposed = (String) method.invoke( null, input, nfd.get(null) );",
      "right" : "String decomposed = (String) method.invoke( null, input, nfd.get(null) );",
      "info" : "VariableDeclarationStatement[24855-24928]:VariableDeclarationStatement[24855-24928]"
    }, {
      "left" : "java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\");",
      "right" : "java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\");",
      "info" : "VariableDeclarationStatement[24987-25096]:VariableDeclarationStatement[24987-25096]"
    }, {
      "left" : "return accentPattern.matcher(decomposed).replaceAll(\"\");",
      "right" : "return accentPattern.matcher(decomposed).replaceAll(\"\");",
      "info" : "ReturnStatement[25113-25169]:ReturnStatement[25113-25169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25219-25346]:Block[25219-25346]"
    }, {
      "left" : "throw new RuntimeException(\"ClassNotFoundException occurred during 1.6 backcompat code\", cnfe);",
      "right" : "throw new RuntimeException(\"ClassNotFoundException occurred during 1.6 backcompat code\", cnfe);",
      "info" : "ThrowStatement[25237-25332]:ThrowStatement[25237-25332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25381-25507]:Block[25381-25507]"
    }, {
      "left" : "throw new RuntimeException(\"NoSuchMethodException occurred during 1.6 backcompat code\", nsme);",
      "right" : "throw new RuntimeException(\"NoSuchMethodException occurred during 1.6 backcompat code\", nsme);",
      "info" : "ThrowStatement[25399-25493]:ThrowStatement[25399-25493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25541-25666]:Block[25541-25666]"
    }, {
      "left" : "throw new RuntimeException(\"NoSuchFieldException occurred during 1.6 backcompat code\", nsfe);",
      "right" : "throw new RuntimeException(\"NoSuchFieldException occurred during 1.6 backcompat code\", nsfe);",
      "info" : "ThrowStatement[25559-25652]:ThrowStatement[25559-25652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25701-25827]:Block[25701-25827]"
    }, {
      "left" : "throw new RuntimeException(\"IllegalAccessException occurred during 1.6 backcompat code\", iae);",
      "right" : "throw new RuntimeException(\"IllegalAccessException occurred during 1.6 backcompat code\", iae);",
      "info" : "ThrowStatement[25719-25813]:ThrowStatement[25719-25813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25864-25992]:Block[25864-25992]"
    }, {
      "left" : "throw new RuntimeException(\"IllegalArgumentException occurred during 1.6 backcompat code\", iae);",
      "right" : "throw new RuntimeException(\"IllegalArgumentException occurred during 1.6 backcompat code\", iae);",
      "info" : "ThrowStatement[25882-25978]:ThrowStatement[25882-25978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26048-26177]:Block[26048-26177]"
    }, {
      "left" : "throw new RuntimeException(\"InvocationTargetException occurred during 1.6 backcompat code\", ite);",
      "right" : "throw new RuntimeException(\"InvocationTargetException occurred during 1.6 backcompat code\", ite);",
      "info" : "ThrowStatement[26066-26163]:ThrowStatement[26066-26163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26206-26326]:Block[26206-26326]"
    }, {
      "left" : "throw new RuntimeException(\"SecurityException occurred during 1.6 backcompat code\", se);",
      "right" : "throw new RuntimeException(\"SecurityException occurred during 1.6 backcompat code\", se);",
      "info" : "ThrowStatement[26224-26312]:ThrowStatement[26224-26312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26342-26473]:Block[26342-26473]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"The stripAccents(String) method is not supported until Java 1.6\");",
      "right" : "throw new UnsupportedOperationException(\"The stripAccents(String) method is not supported until Java 1.6\");",
      "info" : "ThrowStatement[26356-26463]:ThrowStatement[26356-26463]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27405-27411]:Modifier[27405-27411]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[27412-27418]:Modifier[27412-27418]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[27419-27426]:PrimitiveType[27419-27426]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[27427-27433]:SimpleName[27427-27433]"
    }, {
      "left" : "CharSequence cs1",
      "right" : "CharSequence cs1",
      "info" : "SingleVariableDeclaration[27434-27450]:SingleVariableDeclaration[27434-27450]"
    }, {
      "left" : "CharSequence cs2",
      "right" : "CharSequence cs2",
      "info" : "SingleVariableDeclaration[27452-27468]:SingleVariableDeclaration[27452-27468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27470-27537]:Block[27470-27537]"
    }, {
      "left" : "return cs1 == null ? cs2 == null : cs1.equals(cs2);",
      "right" : "return cs1 == null ? cs2 == null : cs1.equals(cs2);",
      "info" : "ReturnStatement[27480-27531]:ReturnStatement[27480-27531]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28427-28433]:Modifier[28427-28433]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[28434-28440]:Modifier[28434-28440]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[28441-28448]:PrimitiveType[28441-28448]"
    }, {
      "left" : "equalsIgnoreCase",
      "right" : "equalsIgnoreCase",
      "info" : "SimpleName[28449-28465]:SimpleName[28449-28465]"
    }, {
      "left" : "String str1",
      "right" : "String str1",
      "info" : "SingleVariableDeclaration[28466-28477]:SingleVariableDeclaration[28466-28477]"
    }, {
      "left" : "String str2",
      "right" : "String str2",
      "info" : "SingleVariableDeclaration[28479-28490]:SingleVariableDeclaration[28479-28490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28492-28573]:Block[28492-28573]"
    }, {
      "left" : "return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);",
      "right" : "return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);",
      "info" : "ReturnStatement[28502-28567]:ReturnStatement[28502-28567]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29397-29403]:Modifier[29397-29403]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[29404-29410]:Modifier[29404-29410]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[29411-29414]:PrimitiveType[29411-29414]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[29415-29422]:SimpleName[29415-29422]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[29423-29433]:SingleVariableDeclaration[29423-29433]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[29435-29450]:SingleVariableDeclaration[29435-29450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29452-29573]:Block[29452-29573]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[29462-29527]:IfStatement[29462-29527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29480-29527]:Block[29480-29527]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[29494-29517]:ReturnStatement[29494-29517]"
    }, {
      "left" : "return str.indexOf(searchChar);",
      "right" : "return str.indexOf(searchChar);",
      "info" : "ReturnStatement[29536-29567]:ReturnStatement[29536-29567]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30661-30667]:Modifier[30661-30667]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30668-30674]:Modifier[30668-30674]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[30675-30678]:PrimitiveType[30675-30678]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[30679-30686]:SimpleName[30679-30686]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[30687-30697]:SingleVariableDeclaration[30687-30697]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[30699-30714]:SingleVariableDeclaration[30699-30714]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[30716-30728]:SingleVariableDeclaration[30716-30728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30730-30861]:Block[30730-30861]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[30740-30805]:IfStatement[30740-30805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30758-30805]:Block[30758-30805]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[30772-30795]:ReturnStatement[30772-30795]"
    }, {
      "left" : "return str.indexOf(searchChar, startPos);",
      "right" : "return str.indexOf(searchChar, startPos);",
      "info" : "ReturnStatement[30814-30855]:ReturnStatement[30814-30855]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31791-31797]:Modifier[31791-31797]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31798-31804]:Modifier[31798-31804]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[31805-31808]:PrimitiveType[31805-31808]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[31809-31816]:SimpleName[31809-31816]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[31817-31827]:SingleVariableDeclaration[31817-31827]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[31829-31845]:SingleVariableDeclaration[31829-31845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31847-31987]:Block[31847-31987]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[31857-31942]:IfStatement[31857-31942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31895-31942]:Block[31895-31942]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[31909-31932]:ReturnStatement[31909-31932]"
    }, {
      "left" : "return str.indexOf(searchStr);",
      "right" : "return str.indexOf(searchStr);",
      "info" : "ReturnStatement[31951-31981]:ReturnStatement[31951-31981]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33427-33433]:Modifier[33427-33433]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33434-33440]:Modifier[33434-33440]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[33441-33444]:PrimitiveType[33441-33444]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[33445-33452]:SimpleName[33445-33452]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[33453-33463]:SingleVariableDeclaration[33453-33463]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[33465-33481]:SingleVariableDeclaration[33465-33481]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[33483-33495]:SingleVariableDeclaration[33483-33495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33497-33647]:Block[33497-33647]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[33507-33592]:IfStatement[33507-33592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33545-33592]:Block[33545-33592]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[33559-33582]:ReturnStatement[33559-33582]"
    }, {
      "left" : "return str.indexOf(searchStr, startPos);",
      "right" : "return str.indexOf(searchStr, startPos);",
      "info" : "ReturnStatement[33601-33641]:ReturnStatement[33601-33641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35092-35098]:Modifier[35092-35098]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[35099-35105]:Modifier[35099-35105]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[35106-35109]:PrimitiveType[35106-35109]"
    }, {
      "left" : "ordinalIndexOf",
      "right" : "ordinalIndexOf",
      "info" : "SimpleName[35110-35124]:SimpleName[35110-35124]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[35125-35135]:SingleVariableDeclaration[35125-35135]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[35137-35153]:SingleVariableDeclaration[35137-35153]"
    }, {
      "left" : "int ordinal",
      "right" : "int ordinal",
      "info" : "SingleVariableDeclaration[35155-35166]:SingleVariableDeclaration[35155-35166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35168-35238]:Block[35168-35238]"
    }, {
      "left" : "return ordinalIndexOf(str, searchStr, ordinal, false);",
      "right" : "return ordinalIndexOf(str, searchStr, ordinal, false);",
      "info" : "ReturnStatement[35178-35232]:ReturnStatement[35178-35232]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[35997-36004]:Modifier[35997-36004]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[36005-36011]:Modifier[36005-36011]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[36012-36015]:PrimitiveType[36012-36015]"
    }, {
      "left" : "ordinalIndexOf",
      "right" : "ordinalIndexOf",
      "info" : "SimpleName[36016-36030]:SimpleName[36016-36030]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[36031-36041]:SingleVariableDeclaration[36031-36041]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[36043-36059]:SingleVariableDeclaration[36043-36059]"
    }, {
      "left" : "int ordinal",
      "right" : "int ordinal",
      "info" : "SingleVariableDeclaration[36061-36072]:SingleVariableDeclaration[36061-36072]"
    }, {
      "left" : "boolean lastIndex",
      "right" : "boolean lastIndex",
      "info" : "SingleVariableDeclaration[36074-36091]:SingleVariableDeclaration[36074-36091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36093-36744]:Block[36093-36744]"
    }, {
      "left" : "if (str == null || searchStr == null || ordinal <= 0)",
      "right" : "if (str == null || searchStr == null || ordinal <= 0)",
      "info" : "IfStatement[36103-36204]:IfStatement[36103-36204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36157-36204]:Block[36157-36204]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[36171-36194]:ReturnStatement[36171-36194]"
    }, {
      "left" : "if (searchStr.length() == 0)",
      "right" : "if (searchStr.length() == 0)",
      "info" : "IfStatement[36213-36302]:IfStatement[36213-36302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36242-36302]:Block[36242-36302]"
    }, {
      "left" : "return lastIndex ? str.length() : 0;",
      "right" : "return lastIndex ? str.length() : 0;",
      "info" : "ReturnStatement[36256-36292]:ReturnStatement[36256-36292]"
    }, {
      "left" : "int found = 0;",
      "right" : "int found = 0;",
      "info" : "VariableDeclarationStatement[36311-36325]:VariableDeclarationStatement[36311-36325]"
    }, {
      "left" : "int index = lastIndex ? str.length() : INDEX_NOT_FOUND;",
      "right" : "int index = lastIndex ? str.length() : INDEX_NOT_FOUND;",
      "info" : "VariableDeclarationStatement[36334-36389]:VariableDeclarationStatement[36334-36389]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[36398-36716]:DoStatement[36398-36716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36401-36691]:Block[36401-36691]"
    }, {
      "left" : "if(lastIndex)",
      "right" : "if(lastIndex)",
      "info" : "IfStatement[36415-36587]:IfStatement[36415-36587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36429-36507]:Block[36429-36507]"
    }, {
      "left" : "index = str.lastIndexOf(searchStr, index - 1);",
      "right" : "index = str.lastIndexOf(searchStr, index - 1);",
      "info" : "ExpressionStatement[36447-36493]:ExpressionStatement[36447-36493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36513-36587]:Block[36513-36587]"
    }, {
      "left" : "index = str.indexOf(searchStr, index + 1);",
      "right" : "index = str.indexOf(searchStr, index + 1);",
      "info" : "ExpressionStatement[36531-36573]:ExpressionStatement[36531-36573]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[36600-36660]:IfStatement[36600-36660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36615-36660]:Block[36615-36660]"
    }, {
      "left" : "return index;",
      "right" : "return index;",
      "info" : "ReturnStatement[36633-36646]:ReturnStatement[36633-36646]"
    }, {
      "left" : "found++;",
      "right" : "found++;",
      "info" : "ExpressionStatement[36673-36681]:ExpressionStatement[36673-36681]"
    }, {
      "left" : "return index;",
      "right" : "return index;",
      "info" : "ReturnStatement[36725-36738]:ReturnStatement[36725-36738]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37753-37759]:Modifier[37753-37759]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[37760-37766]:Modifier[37760-37766]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[37767-37770]:PrimitiveType[37767-37770]"
    }, {
      "left" : "indexOfIgnoreCase",
      "right" : "indexOfIgnoreCase",
      "info" : "SimpleName[37771-37788]:SimpleName[37771-37788]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[37789-37799]:SingleVariableDeclaration[37789-37799]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[37801-37817]:SingleVariableDeclaration[37801-37817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37819-37879]:Block[37819-37879]"
    }, {
      "left" : "return indexOfIgnoreCase(str, searchStr, 0);",
      "right" : "return indexOfIgnoreCase(str, searchStr, 0);",
      "info" : "ReturnStatement[37829-37873]:ReturnStatement[37829-37873]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39321-39327]:Modifier[39321-39327]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39328-39334]:Modifier[39328-39334]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[39335-39338]:PrimitiveType[39335-39338]"
    }, {
      "left" : "indexOfIgnoreCase",
      "right" : "indexOfIgnoreCase",
      "info" : "SimpleName[39339-39356]:SimpleName[39339-39356]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[39357-39367]:SingleVariableDeclaration[39357-39367]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[39369-39385]:SingleVariableDeclaration[39369-39385]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[39387-39399]:SingleVariableDeclaration[39387-39399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39401-40003]:Block[39401-40003]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[39411-39496]:IfStatement[39411-39496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39449-39496]:Block[39449-39496]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[39463-39486]:ReturnStatement[39463-39486]"
    }, {
      "left" : "if (startPos < 0)",
      "right" : "if (startPos < 0)",
      "info" : "IfStatement[39505-39560]:IfStatement[39505-39560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39523-39560]:Block[39523-39560]"
    }, {
      "left" : "startPos = 0;",
      "right" : "startPos = 0;",
      "info" : "ExpressionStatement[39537-39550]:ExpressionStatement[39537-39550]"
    }, {
      "left" : "int endLimit = (str.length() - searchStr.length()) + 1;",
      "right" : "int endLimit = (str.length() - searchStr.length()) + 1;",
      "info" : "VariableDeclarationStatement[39569-39624]:VariableDeclarationStatement[39569-39624]"
    }, {
      "left" : "if (startPos > endLimit)",
      "right" : "if (startPos > endLimit)",
      "info" : "IfStatement[39633-39705]:IfStatement[39633-39705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39658-39705]:Block[39658-39705]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[39672-39695]:ReturnStatement[39672-39695]"
    }, {
      "left" : "if (searchStr.length() == 0)",
      "right" : "if (searchStr.length() == 0)",
      "info" : "IfStatement[39714-39783]:IfStatement[39714-39783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39743-39783]:Block[39743-39783]"
    }, {
      "left" : "return startPos;",
      "right" : "return startPos;",
      "info" : "ReturnStatement[39757-39773]:ReturnStatement[39757-39773]"
    }, {
      "left" : "for (int i = startPos; i < endLimit; i++)",
      "right" : "for (int i = startPos; i < endLimit; i++)",
      "info" : "ForStatement[39792-39965]:ForStatement[39792-39965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39834-39965]:Block[39834-39965]"
    }, {
      "left" : "if (str.regionMatches(true, i, searchStr, 0, searchStr.length()))",
      "right" : "if (str.regionMatches(true, i, searchStr, 0, searchStr.length()))",
      "info" : "IfStatement[39848-39955]:IfStatement[39848-39955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39914-39955]:Block[39914-39955]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[39932-39941]:ReturnStatement[39932-39941]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[39974-39997]:ReturnStatement[39974-39997]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40831-40837]:Modifier[40831-40837]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[40838-40844]:Modifier[40838-40844]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[40845-40848]:PrimitiveType[40845-40848]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[40849-40860]:SimpleName[40849-40860]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[40861-40871]:SingleVariableDeclaration[40861-40871]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[40873-40888]:SingleVariableDeclaration[40873-40888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40890-41015]:Block[40890-41015]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[40900-40965]:IfStatement[40900-40965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40918-40965]:Block[40918-40965]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[40932-40955]:ReturnStatement[40932-40955]"
    }, {
      "left" : "return str.lastIndexOf(searchChar);",
      "right" : "return str.lastIndexOf(searchChar);",
      "info" : "ReturnStatement[40974-41009]:ReturnStatement[40974-41009]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42205-42211]:Modifier[42205-42211]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[42212-42218]:Modifier[42212-42218]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[42219-42222]:PrimitiveType[42219-42222]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[42223-42234]:SimpleName[42223-42234]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[42235-42245]:SingleVariableDeclaration[42235-42245]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[42247-42262]:SingleVariableDeclaration[42247-42262]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[42264-42276]:SingleVariableDeclaration[42264-42276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42278-42413]:Block[42278-42413]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[42288-42353]:IfStatement[42288-42353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42306-42353]:Block[42306-42353]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[42320-42343]:ReturnStatement[42320-42343]"
    }, {
      "left" : "return str.lastIndexOf(searchChar, startPos);",
      "right" : "return str.lastIndexOf(searchChar, startPos);",
      "info" : "ReturnStatement[42362-42407]:ReturnStatement[42362-42407]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43302-43308]:Modifier[43302-43308]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[43309-43315]:Modifier[43309-43315]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[43316-43319]:PrimitiveType[43316-43319]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[43320-43331]:SimpleName[43320-43331]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[43332-43342]:SingleVariableDeclaration[43332-43342]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[43344-43360]:SingleVariableDeclaration[43344-43360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43362-43506]:Block[43362-43506]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[43372-43457]:IfStatement[43372-43457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43410-43457]:Block[43410-43457]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[43424-43447]:ReturnStatement[43424-43447]"
    }, {
      "left" : "return str.lastIndexOf(searchStr);",
      "right" : "return str.lastIndexOf(searchStr);",
      "info" : "ReturnStatement[43466-43500]:ReturnStatement[43466-43500]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45015-45021]:Modifier[45015-45021]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[45022-45028]:Modifier[45022-45028]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[45029-45032]:PrimitiveType[45029-45032]"
    }, {
      "left" : "lastOrdinalIndexOf",
      "right" : "lastOrdinalIndexOf",
      "info" : "SimpleName[45033-45051]:SimpleName[45033-45051]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[45052-45062]:SingleVariableDeclaration[45052-45062]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[45064-45080]:SingleVariableDeclaration[45064-45080]"
    }, {
      "left" : "int ordinal",
      "right" : "int ordinal",
      "info" : "SingleVariableDeclaration[45082-45093]:SingleVariableDeclaration[45082-45093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45095-45164]:Block[45095-45164]"
    }, {
      "left" : "return ordinalIndexOf(str, searchStr, ordinal, true);",
      "right" : "return ordinalIndexOf(str, searchStr, ordinal, true);",
      "info" : "ReturnStatement[45105-45158]:ReturnStatement[45105-45158]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46493-46499]:Modifier[46493-46499]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[46500-46506]:Modifier[46500-46506]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[46507-46510]:PrimitiveType[46507-46510]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[46511-46522]:SimpleName[46511-46522]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[46523-46533]:SingleVariableDeclaration[46523-46533]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[46535-46551]:SingleVariableDeclaration[46535-46551]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[46553-46565]:SingleVariableDeclaration[46553-46565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46567-46721]:Block[46567-46721]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[46577-46662]:IfStatement[46577-46662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46615-46662]:Block[46615-46662]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[46629-46652]:ReturnStatement[46629-46652]"
    }, {
      "left" : "return str.lastIndexOf(searchStr, startPos);",
      "right" : "return str.lastIndexOf(searchStr, startPos);",
      "info" : "ReturnStatement[46671-46715]:ReturnStatement[46671-46715]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47716-47722]:Modifier[47716-47722]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[47723-47729]:Modifier[47723-47729]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[47730-47733]:PrimitiveType[47730-47733]"
    }, {
      "left" : "lastIndexOfIgnoreCase",
      "right" : "lastIndexOfIgnoreCase",
      "info" : "SimpleName[47734-47755]:SimpleName[47734-47755]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[47756-47766]:SingleVariableDeclaration[47756-47766]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[47768-47784]:SingleVariableDeclaration[47768-47784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47786-47955]:Block[47786-47955]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[47796-47881]:IfStatement[47796-47881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47834-47881]:Block[47834-47881]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[47848-47871]:ReturnStatement[47848-47871]"
    }, {
      "left" : "return lastIndexOfIgnoreCase(str, searchStr, str.length());",
      "right" : "return lastIndexOfIgnoreCase(str, searchStr, str.length());",
      "info" : "ReturnStatement[47890-47949]:ReturnStatement[47890-47949]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49309-49315]:Modifier[49309-49315]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[49316-49322]:Modifier[49316-49322]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[49323-49326]:PrimitiveType[49323-49326]"
    }, {
      "left" : "lastIndexOfIgnoreCase",
      "right" : "lastIndexOfIgnoreCase",
      "info" : "SimpleName[49327-49348]:SimpleName[49327-49348]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[49349-49359]:SingleVariableDeclaration[49349-49359]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[49361-49377]:SingleVariableDeclaration[49361-49377]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[49379-49391]:SingleVariableDeclaration[49379-49391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49393-49985]:Block[49393-49985]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[49403-49488]:IfStatement[49403-49488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49441-49488]:Block[49441-49488]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[49455-49478]:ReturnStatement[49455-49478]"
    }, {
      "left" : "if (startPos > (str.length() - searchStr.length()))",
      "right" : "if (startPos > (str.length() - searchStr.length()))",
      "info" : "IfStatement[49497-49618]:IfStatement[49497-49618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49549-49618]:Block[49549-49618]"
    }, {
      "left" : "startPos = str.length() - searchStr.length();",
      "right" : "startPos = str.length() - searchStr.length();",
      "info" : "ExpressionStatement[49563-49608]:ExpressionStatement[49563-49608]"
    }, {
      "left" : "if (startPos < 0)",
      "right" : "if (startPos < 0)",
      "info" : "IfStatement[49627-49692]:IfStatement[49627-49692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49645-49692]:Block[49645-49692]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[49659-49682]:ReturnStatement[49659-49682]"
    }, {
      "left" : "if (searchStr.length() == 0)",
      "right" : "if (searchStr.length() == 0)",
      "info" : "IfStatement[49701-49770]:IfStatement[49701-49770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49730-49770]:Block[49730-49770]"
    }, {
      "left" : "return startPos;",
      "right" : "return startPos;",
      "info" : "ReturnStatement[49744-49760]:ReturnStatement[49744-49760]"
    }, {
      "left" : "for (int i = startPos; i >= 0; i--)",
      "right" : "for (int i = startPos; i >= 0; i--)",
      "info" : "ForStatement[49780-49947]:ForStatement[49780-49947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49816-49947]:Block[49816-49947]"
    }, {
      "left" : "if (str.regionMatches(true, i, searchStr, 0, searchStr.length()))",
      "right" : "if (str.regionMatches(true, i, searchStr, 0, searchStr.length()))",
      "info" : "IfStatement[49830-49937]:IfStatement[49830-49937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49896-49937]:Block[49896-49937]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[49914-49923]:ReturnStatement[49914-49923]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[49956-49979]:ReturnStatement[49956-49979]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50806-50812]:Modifier[50806-50812]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[50813-50819]:Modifier[50813-50819]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[50820-50827]:PrimitiveType[50820-50827]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[50828-50836]:SimpleName[50828-50836]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[50837-50847]:SingleVariableDeclaration[50837-50847]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[50849-50864]:SingleVariableDeclaration[50849-50864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50866-50982]:Block[50866-50982]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[50876-50931]:IfStatement[50876-50931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50894-50931]:Block[50894-50931]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[50908-50921]:ReturnStatement[50908-50921]"
    }, {
      "left" : "return str.indexOf(searchChar) >= 0;",
      "right" : "return str.indexOf(searchChar) >= 0;",
      "info" : "ReturnStatement[50940-50976]:ReturnStatement[50940-50976]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51801-51807]:Modifier[51801-51807]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[51808-51814]:Modifier[51808-51814]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[51815-51822]:PrimitiveType[51815-51822]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[51823-51831]:SimpleName[51823-51831]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[51832-51842]:SingleVariableDeclaration[51832-51842]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[51844-51860]:SingleVariableDeclaration[51844-51860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51862-51997]:Block[51862-51997]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[51872-51947]:IfStatement[51872-51947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51910-51947]:Block[51910-51947]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[51924-51937]:ReturnStatement[51924-51937]"
    }, {
      "left" : "return str.indexOf(searchStr) >= 0;",
      "right" : "return str.indexOf(searchStr) >= 0;",
      "info" : "ReturnStatement[51956-51991]:ReturnStatement[51956-51991]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52950-52956]:Modifier[52950-52956]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[52957-52963]:Modifier[52957-52963]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[52964-52971]:PrimitiveType[52964-52971]"
    }, {
      "left" : "containsIgnoreCase",
      "right" : "containsIgnoreCase",
      "info" : "SimpleName[52972-52990]:SimpleName[52972-52990]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[52991-53001]:SingleVariableDeclaration[52991-53001]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[53003-53019]:SingleVariableDeclaration[53003-53019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53021-53369]:Block[53021-53369]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[53031-53106]:IfStatement[53031-53106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53069-53106]:Block[53069-53106]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53083-53096]:ReturnStatement[53083-53096]"
    }, {
      "left" : "int len = searchStr.length();",
      "right" : "int len = searchStr.length();",
      "info" : "VariableDeclarationStatement[53115-53144]:VariableDeclarationStatement[53115-53144]"
    }, {
      "left" : "int max = str.length() - len;",
      "right" : "int max = str.length() - len;",
      "info" : "VariableDeclarationStatement[53153-53182]:VariableDeclarationStatement[53153-53182]"
    }, {
      "left" : "for (int i = 0; i <= max; i++)",
      "right" : "for (int i = 0; i <= max; i++)",
      "info" : "ForStatement[53191-53341]:ForStatement[53191-53341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53222-53341]:Block[53222-53341]"
    }, {
      "left" : "if (str.regionMatches(true, i, searchStr, 0, len))",
      "right" : "if (str.regionMatches(true, i, searchStr, 0, len))",
      "info" : "IfStatement[53236-53331]:IfStatement[53236-53331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53287-53331]:Block[53287-53331]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[53305-53317]:ReturnStatement[53305-53317]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53350-53363]:ReturnStatement[53350-53363]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54436-54442]:Modifier[54436-54442]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[54443-54449]:Modifier[54443-54449]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[54450-54453]:PrimitiveType[54450-54453]"
    }, {
      "left" : "indexOfAny",
      "right" : "indexOfAny",
      "info" : "SimpleName[54454-54464]:SimpleName[54454-54464]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[54465-54480]:SingleVariableDeclaration[54465-54480]"
    }, {
      "left" : "char[] searchChars",
      "right" : "char[] searchChars",
      "info" : "SingleVariableDeclaration[54482-54500]:SingleVariableDeclaration[54482-54500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54502-54908]:Block[54502-54908]"
    }, {
      "left" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
      "right" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
      "info" : "IfStatement[54512-54611]:IfStatement[54512-54611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54564-54611]:Block[54564-54611]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[54578-54601]:ReturnStatement[54578-54601]"
    }, {
      "left" : "for (int i = 0; i < cs.length(); i++)",
      "right" : "for (int i = 0; i < cs.length(); i++)",
      "info" : "ForStatement[54620-54870]:ForStatement[54620-54870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54658-54870]:Block[54658-54870]"
    }, {
      "left" : "char ch = cs.charAt(i);",
      "right" : "char ch = cs.charAt(i);",
      "info" : "VariableDeclarationStatement[54672-54695]:VariableDeclarationStatement[54672-54695]"
    }, {
      "left" : "for (int j = 0; j < searchChars.length; j++)",
      "right" : "for (int j = 0; j < searchChars.length; j++)",
      "info" : "ForStatement[54708-54860]:ForStatement[54708-54860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54753-54860]:Block[54753-54860]"
    }, {
      "left" : "if (searchChars[j] == ch)",
      "right" : "if (searchChars[j] == ch)",
      "info" : "IfStatement[54771-54846]:IfStatement[54771-54846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54797-54846]:Block[54797-54846]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[54819-54828]:ReturnStatement[54819-54828]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[54879-54902]:ReturnStatement[54879-54902]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55831-55837]:Modifier[55831-55837]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[55838-55844]:Modifier[55838-55844]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[55845-55848]:PrimitiveType[55845-55848]"
    }, {
      "left" : "indexOfAny",
      "right" : "indexOfAny",
      "info" : "SimpleName[55849-55859]:SimpleName[55849-55859]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[55860-55875]:SingleVariableDeclaration[55860-55875]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[55877-55895]:SingleVariableDeclaration[55877-55895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55897-56059]:Block[55897-56059]"
    }, {
      "left" : "if (isEmpty(cs) || isEmpty(searchChars))",
      "right" : "if (isEmpty(cs) || isEmpty(searchChars))",
      "info" : "IfStatement[55907-55995]:IfStatement[55907-55995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55948-55995]:Block[55948-55995]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[55962-55985]:ReturnStatement[55962-55985]"
    }, {
      "left" : "return indexOfAny(cs, searchChars.toCharArray());",
      "right" : "return indexOfAny(cs, searchChars.toCharArray());",
      "info" : "ReturnStatement[56004-56053]:ReturnStatement[56004-56053]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58749-58755]:Modifier[59053-59059]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[58756-58762]:Modifier[59060-59066]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[58763-58770]:PrimitiveType[59067-59074]"
    }, {
      "left" : "containsAny",
      "right" : "containsAny",
      "info" : "SimpleName[58771-58782]:SimpleName[59075-59086]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[58783-58798]:SingleVariableDeclaration[59087-59102]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[58800-58818]:SingleVariableDeclaration[59104-59122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58820-58957]:Block[59124-59261]"
    }, {
      "left" : "if (searchChars == null)",
      "right" : "if (searchChars == null)",
      "info" : "IfStatement[58830-58892]:IfStatement[59134-59196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58855-58892]:Block[59159-59196]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[58869-58882]:ReturnStatement[59173-59186]"
    }, {
      "left" : "return containsAny(cs, searchChars.toCharArray());",
      "right" : "return containsAny(cs, searchChars.toCharArray());",
      "info" : "ReturnStatement[58901-58951]:ReturnStatement[59205-59255]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60025-60031]:Modifier[60329-60335]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[60032-60038]:Modifier[60336-60342]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[60039-60042]:PrimitiveType[60343-60346]"
    }, {
      "left" : "indexOfAnyBut",
      "right" : "indexOfAnyBut",
      "info" : "SimpleName[60043-60056]:SimpleName[60347-60360]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[60057-60072]:SingleVariableDeclaration[60361-60376]"
    }, {
      "left" : "char[] searchChars",
      "right" : "char[] searchChars",
      "info" : "SingleVariableDeclaration[60074-60092]:SingleVariableDeclaration[60378-60396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60094-60536]:Block[60398-60840]"
    }, {
      "left" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
      "right" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
      "info" : "IfStatement[60104-60203]:IfStatement[60408-60507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60156-60203]:Block[60460-60507]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[60170-60193]:ReturnStatement[60474-60497]"
    }, {
      "left" : "outer : for (int i = 0; i < cs.length(); i++) {\n            char ch = cs.charAt(i);\n            for (int j = 0; j < searchChars.length; j++) {\n                if (searchChars[j] == ch) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "right" : "outer : for (int i = 0; i < cs.length(); i++) {\n            char ch = cs.charAt(i);\n            for (int j = 0; j < searchChars.length; j++) {\n                if (searchChars[j] == ch) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "info" : "LabeledStatement[60212-60498]:LabeledStatement[60516-60802]"
    }, {
      "left" : "for (int i = 0; i < cs.length(); i++)",
      "right" : "for (int i = 0; i < cs.length(); i++)",
      "info" : "ForStatement[60220-60498]:ForStatement[60524-60802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60258-60498]:Block[60562-60802]"
    }, {
      "left" : "char ch = cs.charAt(i);",
      "right" : "char ch = cs.charAt(i);",
      "info" : "VariableDeclarationStatement[60272-60295]:VariableDeclarationStatement[60576-60599]"
    }, {
      "left" : "for (int j = 0; j < searchChars.length; j++)",
      "right" : "for (int j = 0; j < searchChars.length; j++)",
      "info" : "ForStatement[60308-60466]:ForStatement[60612-60770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60353-60466]:Block[60657-60770]"
    }, {
      "left" : "if (searchChars[j] == ch)",
      "right" : "if (searchChars[j] == ch)",
      "info" : "IfStatement[60371-60452]:IfStatement[60675-60756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60397-60452]:Block[60701-60756]"
    }, {
      "left" : "continue outer;",
      "right" : "continue outer;",
      "info" : "ContinueStatement[60419-60434]:ContinueStatement[60723-60738]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[60479-60488]:ReturnStatement[60783-60792]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[60507-60530]:ReturnStatement[60811-60834]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61473-61479]:Modifier[61777-61783]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[61480-61486]:Modifier[61784-61790]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[61487-61490]:PrimitiveType[61791-61794]"
    }, {
      "left" : "indexOfAnyBut",
      "right" : "indexOfAnyBut",
      "info" : "SimpleName[61491-61504]:SimpleName[61795-61808]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[61505-61515]:SingleVariableDeclaration[61809-61819]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[61517-61535]:SingleVariableDeclaration[61821-61839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61537-61831]:Block[61841-62135]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(searchChars))",
      "right" : "if (isEmpty(str) || isEmpty(searchChars))",
      "info" : "IfStatement[61547-61636]:IfStatement[61851-61940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61589-61636]:Block[61893-61940]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[61603-61626]:ReturnStatement[61907-61930]"
    }, {
      "left" : "for (int i = 0; i < str.length(); i++)",
      "right" : "for (int i = 0; i < str.length(); i++)",
      "info" : "ForStatement[61645-61793]:ForStatement[61949-62097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61684-61793]:Block[61988-62097]"
    }, {
      "left" : "if (searchChars.indexOf(str.charAt(i)) < 0)",
      "right" : "if (searchChars.indexOf(str.charAt(i)) < 0)",
      "info" : "IfStatement[61698-61783]:IfStatement[62002-62087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61742-61783]:Block[62046-62087]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[61760-61769]:ReturnStatement[62064-62073]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[61802-61825]:ReturnStatement[62106-62129]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62870-62876]:Modifier[63174-63180]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[62877-62883]:Modifier[63181-63187]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[62884-62891]:PrimitiveType[63188-63195]"
    }, {
      "left" : "containsOnly",
      "right" : "containsOnly",
      "info" : "SimpleName[62892-62904]:SimpleName[63196-63208]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[62905-62920]:SingleVariableDeclaration[63209-63224]"
    }, {
      "left" : "char[] valid",
      "right" : "char[] valid",
      "info" : "SingleVariableDeclaration[62922-62934]:SingleVariableDeclaration[63226-63238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62936-63292]:Block[63240-63596]"
    }, {
      "left" : "if (valid == null || cs == null)",
      "right" : "if (valid == null || cs == null)",
      "info" : "IfStatement[63020-63090]:IfStatement[63324-63394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63053-63090]:Block[63357-63394]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63067-63080]:ReturnStatement[63371-63384]"
    }, {
      "left" : "if (cs.length() == 0)",
      "right" : "if (cs.length() == 0)",
      "info" : "IfStatement[63099-63157]:IfStatement[63403-63461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63121-63157]:Block[63425-63461]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[63135-63147]:ReturnStatement[63439-63451]"
    }, {
      "left" : "if (valid.length == 0)",
      "right" : "if (valid.length == 0)",
      "info" : "IfStatement[63166-63226]:IfStatement[63470-63530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63189-63226]:Block[63493-63530]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63203-63216]:ReturnStatement[63507-63520]"
    }, {
      "left" : "return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",
      "right" : "return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[63235-63286]:ReturnStatement[63539-63590]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64257-64263]:Modifier[64561-64567]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[64264-64270]:Modifier[64568-64574]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64271-64278]:PrimitiveType[64575-64582]"
    }, {
      "left" : "containsOnly",
      "right" : "containsOnly",
      "info" : "SimpleName[64279-64291]:SimpleName[64583-64595]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[64292-64307]:SingleVariableDeclaration[64596-64611]"
    }, {
      "left" : "String validChars",
      "right" : "String validChars",
      "info" : "SingleVariableDeclaration[64309-64326]:SingleVariableDeclaration[64613-64630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64328-64478]:Block[64632-64782]"
    }, {
      "left" : "if (cs == null || validChars == null)",
      "right" : "if (cs == null || validChars == null)",
      "info" : "IfStatement[64338-64413]:IfStatement[64642-64717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64376-64413]:Block[64680-64717]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[64390-64403]:ReturnStatement[64694-64707]"
    }, {
      "left" : "return containsOnly(cs, validChars.toCharArray());",
      "right" : "return containsOnly(cs, validChars.toCharArray());",
      "info" : "ReturnStatement[64422-64472]:ReturnStatement[64726-64776]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65543-65549]:Modifier[65847-65853]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[65550-65556]:Modifier[65854-65860]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65557-65564]:PrimitiveType[65861-65868]"
    }, {
      "left" : "containsNone",
      "right" : "containsNone",
      "info" : "SimpleName[65565-65577]:SimpleName[65869-65881]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[65578-65593]:SingleVariableDeclaration[65882-65897]"
    }, {
      "left" : "char[] invalidChars",
      "right" : "char[] invalidChars",
      "info" : "SingleVariableDeclaration[65595-65614]:SingleVariableDeclaration[65899-65918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65616-66060]:Block[65920-66364]"
    }, {
      "left" : "if (cs == null || invalidChars == null)",
      "right" : "if (cs == null || invalidChars == null)",
      "info" : "IfStatement[65626-65702]:IfStatement[65930-66006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65666-65702]:Block[65970-66006]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[65680-65692]:ReturnStatement[65984-65996]"
    }, {
      "left" : "int strSize = cs.length();",
      "right" : "int strSize = cs.length();",
      "info" : "VariableDeclarationStatement[65711-65737]:VariableDeclarationStatement[66015-66041]"
    }, {
      "left" : "int validSize = invalidChars.length;",
      "right" : "int validSize = invalidChars.length;",
      "info" : "VariableDeclarationStatement[65746-65782]:VariableDeclarationStatement[66050-66086]"
    }, {
      "left" : "for (int i = 0; i < strSize; i++)",
      "right" : "for (int i = 0; i < strSize; i++)",
      "info" : "ForStatement[65791-66033]:ForStatement[66095-66337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65825-66033]:Block[66129-66337]"
    }, {
      "left" : "char ch = cs.charAt(i);",
      "right" : "char ch = cs.charAt(i);",
      "info" : "VariableDeclarationStatement[65839-65862]:VariableDeclarationStatement[66143-66166]"
    }, {
      "left" : "for (int j = 0; j < validSize; j++)",
      "right" : "for (int j = 0; j < validSize; j++)",
      "info" : "ForStatement[65875-66023]:ForStatement[66179-66327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65911-66023]:Block[66215-66327]"
    }, {
      "left" : "if (invalidChars[j] == ch)",
      "right" : "if (invalidChars[j] == ch)",
      "info" : "IfStatement[65929-66009]:IfStatement[66233-66313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65956-66009]:Block[66260-66313]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[65978-65991]:ReturnStatement[66282-66295]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[66042-66054]:ReturnStatement[66346-66358]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67013-67019]:Modifier[67317-67323]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[67020-67026]:Modifier[67324-67330]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[67027-67034]:PrimitiveType[67331-67338]"
    }, {
      "left" : "containsNone",
      "right" : "containsNone",
      "info" : "SimpleName[67035-67047]:SimpleName[67339-67351]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[67048-67063]:SingleVariableDeclaration[67352-67367]"
    }, {
      "left" : "String invalidChars",
      "right" : "String invalidChars",
      "info" : "SingleVariableDeclaration[67065-67084]:SingleVariableDeclaration[67369-67388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67086-67239]:Block[67390-67543]"
    }, {
      "left" : "if (cs == null || invalidChars == null)",
      "right" : "if (cs == null || invalidChars == null)",
      "info" : "IfStatement[67096-67172]:IfStatement[67400-67476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67136-67172]:Block[67440-67476]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[67150-67162]:ReturnStatement[67454-67466]"
    }, {
      "left" : "return containsNone(cs, invalidChars.toCharArray());",
      "right" : "return containsNone(cs, invalidChars.toCharArray());",
      "info" : "ReturnStatement[67181-67233]:ReturnStatement[67485-67537]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68693-68699]:Modifier[68997-69003]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[68700-68706]:Modifier[69004-69010]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[68707-68710]:PrimitiveType[69011-69014]"
    }, {
      "left" : "indexOfAny",
      "right" : "indexOfAny",
      "info" : "SimpleName[68711-68721]:SimpleName[69015-69025]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[68722-68732]:SingleVariableDeclaration[69026-69036]"
    }, {
      "left" : "String[] searchStrs",
      "right" : "String[] searchStrs",
      "info" : "SingleVariableDeclaration[68734-68753]:SingleVariableDeclaration[69038-69057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68755-69431]:Block[69059-69735]"
    }, {
      "left" : "if (str == null || searchStrs == null)",
      "right" : "if (str == null || searchStrs == null)",
      "info" : "IfStatement[68765-68851]:IfStatement[69069-69155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68804-68851]:Block[69108-69155]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[68818-68841]:ReturnStatement[69122-69145]"
    }, {
      "left" : "int sz = searchStrs.length;",
      "right" : "int sz = searchStrs.length;",
      "info" : "VariableDeclarationStatement[68860-68887]:VariableDeclarationStatement[69164-69191]"
    }, {
      "left" : "int ret = Integer.MAX_VALUE;",
      "right" : "int ret = Integer.MAX_VALUE;",
      "info" : "VariableDeclarationStatement[68949-68977]:VariableDeclarationStatement[69253-69281]"
    }, {
      "left" : "int tmp = 0;",
      "right" : "int tmp = 0;",
      "info" : "VariableDeclarationStatement[68987-68999]:VariableDeclarationStatement[69291-69303]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[69008-69357]:ForStatement[69312-69661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69037-69357]:Block[69341-69661]"
    }, {
      "left" : "String search = searchStrs[i];",
      "right" : "String search = searchStrs[i];",
      "info" : "VariableDeclarationStatement[69051-69081]:VariableDeclarationStatement[69355-69385]"
    }, {
      "left" : "if (search == null)",
      "right" : "if (search == null)",
      "info" : "IfStatement[69094-69155]:IfStatement[69398-69459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69114-69155]:Block[69418-69459]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[69132-69141]:ContinueStatement[69436-69445]"
    }, {
      "left" : "tmp = str.indexOf(search);",
      "right" : "tmp = str.indexOf(search);",
      "info" : "ExpressionStatement[69168-69194]:ExpressionStatement[69472-69498]"
    }, {
      "left" : "if (tmp == INDEX_NOT_FOUND)",
      "right" : "if (tmp == INDEX_NOT_FOUND)",
      "info" : "IfStatement[69207-69276]:IfStatement[69511-69580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69235-69276]:Block[69539-69580]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[69253-69262]:ContinueStatement[69557-69566]"
    }, {
      "left" : "if (tmp < ret)",
      "right" : "if (tmp < ret)",
      "info" : "IfStatement[69290-69347]:IfStatement[69594-69651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69305-69347]:Block[69609-69651]"
    }, {
      "left" : "ret = tmp;",
      "right" : "ret = tmp;",
      "info" : "ExpressionStatement[69323-69333]:ExpressionStatement[69627-69637]"
    }, {
      "left" : "return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;",
      "right" : "return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;",
      "info" : "ReturnStatement[69367-69425]:ReturnStatement[69671-69729]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70743-70749]:Modifier[71047-71053]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[70750-70756]:Modifier[71054-71060]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[70757-70760]:PrimitiveType[71061-71064]"
    }, {
      "left" : "lastIndexOfAny",
      "right" : "lastIndexOfAny",
      "info" : "SimpleName[70761-70775]:SimpleName[71065-71079]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[70776-70786]:SingleVariableDeclaration[71080-71090]"
    }, {
      "left" : "String[] searchStrs",
      "right" : "String[] searchStrs",
      "info" : "SingleVariableDeclaration[70788-70807]:SingleVariableDeclaration[71092-71111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70809-71302]:Block[71113-71606]"
    }, {
      "left" : "if (str == null || searchStrs == null)",
      "right" : "if (str == null || searchStrs == null)",
      "info" : "IfStatement[70819-70905]:IfStatement[71123-71209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70858-70905]:Block[71162-71209]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[70872-70895]:ReturnStatement[71176-71199]"
    }, {
      "left" : "int sz = searchStrs.length;",
      "right" : "int sz = searchStrs.length;",
      "info" : "VariableDeclarationStatement[70914-70941]:VariableDeclarationStatement[71218-71245]"
    }, {
      "left" : "int ret = INDEX_NOT_FOUND;",
      "right" : "int ret = INDEX_NOT_FOUND;",
      "info" : "VariableDeclarationStatement[70950-70976]:VariableDeclarationStatement[71254-71280]"
    }, {
      "left" : "int tmp = 0;",
      "right" : "int tmp = 0;",
      "info" : "VariableDeclarationStatement[70985-70997]:VariableDeclarationStatement[71289-71301]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[71006-71276]:ForStatement[71310-71580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71035-71276]:Block[71339-71580]"
    }, {
      "left" : "String search = searchStrs[i];",
      "right" : "String search = searchStrs[i];",
      "info" : "VariableDeclarationStatement[71049-71079]:VariableDeclarationStatement[71353-71383]"
    }, {
      "left" : "if (search == null)",
      "right" : "if (search == null)",
      "info" : "IfStatement[71092-71153]:IfStatement[71396-71457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71112-71153]:Block[71416-71457]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[71130-71139]:ContinueStatement[71434-71443]"
    }, {
      "left" : "tmp = str.lastIndexOf(search);",
      "right" : "tmp = str.lastIndexOf(search);",
      "info" : "ExpressionStatement[71166-71196]:ExpressionStatement[71470-71500]"
    }, {
      "left" : "if (tmp > ret)",
      "right" : "if (tmp > ret)",
      "info" : "IfStatement[71209-71266]:IfStatement[71513-71570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71224-71266]:Block[71528-71570]"
    }, {
      "left" : "ret = tmp;",
      "right" : "ret = tmp;",
      "info" : "ExpressionStatement[71242-71252]:ExpressionStatement[71546-71556]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[71285-71296]:ReturnStatement[71589-71600]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[72404-72410]:Modifier[72708-72714]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[72411-72417]:Modifier[72715-72721]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[72418-72424]:SimpleType[72722-72728]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[72425-72434]:SimpleName[72729-72738]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[72435-72445]:SingleVariableDeclaration[72739-72749]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[72447-72456]:SingleVariableDeclaration[72751-72760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72458-72863]:Block[72762-73167]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[72468-72521]:IfStatement[72772-72825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72485-72521]:Block[72789-72825]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[72499-72511]:ReturnStatement[72803-72815]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[72590-72688]:IfStatement[72894-72992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72605-72688]:Block[72909-72992]"
    }, {
      "left" : "start = str.length() + start;",
      "right" : "start = str.length() + start;",
      "info" : "ExpressionStatement[72619-72648]:ExpressionStatement[72923-72952]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[72698-72747]:IfStatement[73002-73051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72713-72747]:Block[73017-73051]"
    }, {
      "left" : "start = 0;",
      "right" : "start = 0;",
      "info" : "ExpressionStatement[72727-72737]:ExpressionStatement[73031-73041]"
    }, {
      "left" : "if (start > str.length())",
      "right" : "if (start > str.length())",
      "info" : "IfStatement[72756-72819]:IfStatement[73060-73123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72782-72819]:Block[73086-73123]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[72796-72809]:ReturnStatement[73100-73113]"
    }, {
      "left" : "return str.substring(start);",
      "right" : "return str.substring(start);",
      "info" : "ReturnStatement[72829-72857]:ReturnStatement[73133-73161]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74545-74551]:Modifier[74849-74855]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[74552-74558]:Modifier[74856-74862]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[74559-74565]:SimpleType[74863-74869]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[74566-74575]:SimpleName[74870-74879]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[74576-74586]:SingleVariableDeclaration[74880-74890]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[74588-74597]:SingleVariableDeclaration[74892-74901]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[74599-74606]:SingleVariableDeclaration[74903-74910]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74608-75289]:Block[74912-75593]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[74618-74671]:IfStatement[74922-74975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74635-74671]:Block[74939-74975]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[74649-74661]:ReturnStatement[74953-74965]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[74709-74799]:IfStatement[75013-75103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74722-74799]:Block[75026-75103]"
    }, {
      "left" : "end = str.length() + end;",
      "right" : "end = str.length() + end;",
      "info" : "ExpressionStatement[74736-74761]:ExpressionStatement[75040-75065]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[74808-74906]:IfStatement[75112-75210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74823-74906]:Block[75127-75210]"
    }, {
      "left" : "start = str.length() + start;",
      "right" : "start = str.length() + start;",
      "info" : "ExpressionStatement[74837-74866]:ExpressionStatement[75141-75170]"
    }, {
      "left" : "if (end > str.length())",
      "right" : "if (end > str.length())",
      "info" : "IfStatement[74945-75012]:IfStatement[75249-75316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74969-75012]:Block[75273-75316]"
    }, {
      "left" : "end = str.length();",
      "right" : "end = str.length();",
      "info" : "ExpressionStatement[74983-75002]:ExpressionStatement[75287-75306]"
    }, {
      "left" : "if (start > end)",
      "right" : "if (start > end)",
      "info" : "IfStatement[75073-75127]:IfStatement[75377-75431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75090-75127]:Block[75394-75431]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[75104-75117]:ReturnStatement[75408-75421]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[75137-75186]:IfStatement[75441-75490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75152-75186]:Block[75456-75490]"
    }, {
      "left" : "start = 0;",
      "right" : "start = 0;",
      "info" : "ExpressionStatement[75166-75176]:ExpressionStatement[75470-75480]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[75195-75240]:IfStatement[75499-75544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75208-75240]:Block[75512-75544]"
    }, {
      "left" : "end = 0;",
      "right" : "end = 0;",
      "info" : "ExpressionStatement[75222-75230]:ExpressionStatement[75526-75534]"
    }, {
      "left" : "return str.substring(start, end);",
      "right" : "return str.substring(start, end);",
      "info" : "ReturnStatement[75250-75283]:ReturnStatement[75554-75587]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[76229-76235]:Modifier[76533-76539]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[76236-76242]:Modifier[76540-76546]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[76243-76249]:SimpleType[76547-76553]"
    }, {
      "left" : "left",
      "right" : "left",
      "info" : "SimpleName[76250-76254]:SimpleName[76554-76558]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[76255-76265]:SingleVariableDeclaration[76559-76569]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[76267-76274]:SingleVariableDeclaration[76571-76578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76276-76511]:Block[76580-76815]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[76286-76339]:IfStatement[76590-76643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76303-76339]:Block[76607-76643]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[76317-76329]:ReturnStatement[76621-76633]"
    }, {
      "left" : "if (len < 0)",
      "right" : "if (len < 0)",
      "info" : "IfStatement[76348-76398]:IfStatement[76652-76702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76361-76398]:Block[76665-76702]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[76375-76388]:ReturnStatement[76679-76692]"
    }, {
      "left" : "if (str.length() <= len)",
      "right" : "if (str.length() <= len)",
      "info" : "IfStatement[76407-76467]:IfStatement[76711-76771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76432-76467]:Block[76736-76771]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[76446-76457]:ReturnStatement[76750-76761]"
    }, {
      "left" : "return str.substring(0, len);",
      "right" : "return str.substring(0, len);",
      "info" : "ReturnStatement[76476-76505]:ReturnStatement[76780-76809]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[77363-77369]:Modifier[77667-77673]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[77370-77376]:Modifier[77674-77680]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[77377-77383]:SimpleType[77681-77687]"
    }, {
      "left" : "right",
      "right" : "right",
      "info" : "SimpleName[77384-77389]:SimpleName[77688-77693]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[77390-77400]:SingleVariableDeclaration[77694-77704]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[77402-77409]:SingleVariableDeclaration[77706-77713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77411-77658]:Block[77715-77962]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[77421-77474]:IfStatement[77725-77778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77438-77474]:Block[77742-77778]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[77452-77464]:ReturnStatement[77756-77768]"
    }, {
      "left" : "if (len < 0)",
      "right" : "if (len < 0)",
      "info" : "IfStatement[77483-77533]:IfStatement[77787-77837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77496-77533]:Block[77800-77837]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[77510-77523]:ReturnStatement[77814-77827]"
    }, {
      "left" : "if (str.length() <= len)",
      "right" : "if (str.length() <= len)",
      "info" : "IfStatement[77542-77602]:IfStatement[77846-77906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77567-77602]:Block[77871-77906]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[77581-77592]:ReturnStatement[77885-77896]"
    }, {
      "left" : "return str.substring(str.length() - len);",
      "right" : "return str.substring(str.length() - len);",
      "info" : "ReturnStatement[77611-77652]:ReturnStatement[77915-77956]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78723-78729]:Modifier[79027-79033]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[78730-78736]:Modifier[79034-79040]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[78737-78743]:SimpleType[79041-79047]"
    }, {
      "left" : "mid",
      "right" : "mid",
      "info" : "SimpleName[78744-78747]:SimpleName[79048-79051]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[78748-78758]:SingleVariableDeclaration[79052-79062]"
    }, {
      "left" : "int pos",
      "right" : "int pos",
      "info" : "SingleVariableDeclaration[78760-78767]:SingleVariableDeclaration[79064-79071]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[78769-78776]:SingleVariableDeclaration[79073-79080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78778-79120]:Block[79082-79424]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[78788-78841]:IfStatement[79092-79145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78805-78841]:Block[79109-79145]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[78819-78831]:ReturnStatement[79123-79135]"
    }, {
      "left" : "if (len < 0 || pos > str.length())",
      "right" : "if (len < 0 || pos > str.length())",
      "info" : "IfStatement[78850-78922]:IfStatement[79154-79226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78885-78922]:Block[79189-79226]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[78899-78912]:ReturnStatement[79203-79216]"
    }, {
      "left" : "if (pos < 0)",
      "right" : "if (pos < 0)",
      "info" : "IfStatement[78931-78976]:IfStatement[79235-79280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78944-78976]:Block[79248-79280]"
    }, {
      "left" : "pos = 0;",
      "right" : "pos = 0;",
      "info" : "ExpressionStatement[78958-78966]:ExpressionStatement[79262-79270]"
    }, {
      "left" : "if (str.length() <= (pos + len))",
      "right" : "if (str.length() <= (pos + len))",
      "info" : "IfStatement[78985-79068]:IfStatement[79289-79372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79018-79068]:Block[79322-79372]"
    }, {
      "left" : "return str.substring(pos);",
      "right" : "return str.substring(pos);",
      "info" : "ReturnStatement[79032-79058]:ReturnStatement[79336-79362]"
    }, {
      "left" : "return str.substring(pos, pos + len);",
      "right" : "return str.substring(pos, pos + len);",
      "info" : "ReturnStatement[79077-79114]:ReturnStatement[79381-79418]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80415-80421]:Modifier[80719-80725]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[80422-80428]:Modifier[80726-80732]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[80429-80435]:SimpleType[80733-80739]"
    }, {
      "left" : "substringBefore",
      "right" : "substringBefore",
      "info" : "SimpleName[80436-80451]:SimpleName[80740-80755]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[80452-80462]:SingleVariableDeclaration[80756-80766]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[80464-80480]:SingleVariableDeclaration[80768-80784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80482-80799]:Block[80786-81103]"
    }, {
      "left" : "if (isEmpty(str) || separator == null)",
      "right" : "if (isEmpty(str) || separator == null)",
      "info" : "IfStatement[80492-80566]:IfStatement[80796-80870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80531-80566]:Block[80835-80870]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[80545-80556]:ReturnStatement[80849-80860]"
    }, {
      "left" : "if (separator.length() == 0)",
      "right" : "if (separator.length() == 0)",
      "info" : "IfStatement[80575-80641]:IfStatement[80879-80945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80604-80641]:Block[80908-80945]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[80618-80631]:ReturnStatement[80922-80935]"
    }, {
      "left" : "int pos = str.indexOf(separator);",
      "right" : "int pos = str.indexOf(separator);",
      "info" : "VariableDeclarationStatement[80650-80683]:VariableDeclarationStatement[80954-80987]"
    }, {
      "left" : "if (pos == INDEX_NOT_FOUND)",
      "right" : "if (pos == INDEX_NOT_FOUND)",
      "info" : "IfStatement[80692-80755]:IfStatement[80996-81059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80720-80755]:Block[81024-81059]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[80734-80745]:ReturnStatement[81038-81049]"
    }, {
      "left" : "return str.substring(0, pos);",
      "right" : "return str.substring(0, pos);",
      "info" : "ReturnStatement[80764-80793]:ReturnStatement[81068-81097]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[82019-82025]:Modifier[82323-82329]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[82026-82032]:Modifier[82330-82336]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[82033-82039]:SimpleType[82337-82343]"
    }, {
      "left" : "substringAfter",
      "right" : "substringAfter",
      "info" : "SimpleName[82040-82054]:SimpleName[82344-82358]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[82055-82065]:SingleVariableDeclaration[82359-82369]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[82067-82083]:SingleVariableDeclaration[82371-82387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82085-82395]:Block[82389-82699]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[82095-82148]:IfStatement[82399-82452]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82113-82148]:Block[82417-82452]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[82127-82138]:ReturnStatement[82431-82442]"
    }, {
      "left" : "if (separator == null)",
      "right" : "if (separator == null)",
      "info" : "IfStatement[82157-82217]:IfStatement[82461-82521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82180-82217]:Block[82484-82521]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[82194-82207]:ReturnStatement[82498-82511]"
    }, {
      "left" : "int pos = str.indexOf(separator);",
      "right" : "int pos = str.indexOf(separator);",
      "info" : "VariableDeclarationStatement[82226-82259]:VariableDeclarationStatement[82530-82563]"
    }, {
      "left" : "if (pos == INDEX_NOT_FOUND)",
      "right" : "if (pos == INDEX_NOT_FOUND)",
      "info" : "IfStatement[82268-82333]:IfStatement[82572-82637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82296-82333]:Block[82600-82637]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[82310-82323]:ReturnStatement[82614-82627]"
    }, {
      "left" : "return str.substring(pos + separator.length());",
      "right" : "return str.substring(pos + separator.length());",
      "info" : "ReturnStatement[82342-82389]:ReturnStatement[82646-82693]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[83613-83619]:Modifier[83917-83923]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[83620-83626]:Modifier[83924-83930]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[83627-83633]:SimpleType[83931-83937]"
    }, {
      "left" : "substringBeforeLast",
      "right" : "substringBeforeLast",
      "info" : "SimpleName[83634-83653]:SimpleName[83938-83957]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[83654-83664]:SingleVariableDeclaration[83958-83968]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[83666-83682]:SingleVariableDeclaration[83970-83986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83684-83931]:Block[83988-84235]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(separator))",
      "right" : "if (isEmpty(str) || isEmpty(separator))",
      "info" : "IfStatement[83694-83769]:IfStatement[83998-84073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83734-83769]:Block[84038-84073]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[83748-83759]:ReturnStatement[84052-84063]"
    }, {
      "left" : "int pos = str.lastIndexOf(separator);",
      "right" : "int pos = str.lastIndexOf(separator);",
      "info" : "VariableDeclarationStatement[83778-83815]:VariableDeclarationStatement[84082-84119]"
    }, {
      "left" : "if (pos == INDEX_NOT_FOUND)",
      "right" : "if (pos == INDEX_NOT_FOUND)",
      "info" : "IfStatement[83824-83887]:IfStatement[84128-84191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83852-83887]:Block[84156-84191]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[83866-83877]:ReturnStatement[84170-84181]"
    }, {
      "left" : "return str.substring(0, pos);",
      "right" : "return str.substring(0, pos);",
      "info" : "ReturnStatement[83896-83925]:ReturnStatement[84200-84229]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[85243-85249]:Modifier[85547-85553]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[85250-85256]:Modifier[85554-85560]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[85257-85263]:SimpleType[85561-85567]"
    }, {
      "left" : "substringAfterLast",
      "right" : "substringAfterLast",
      "info" : "SimpleName[85264-85282]:SimpleName[85568-85586]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[85283-85293]:SingleVariableDeclaration[85587-85597]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[85295-85311]:SingleVariableDeclaration[85599-85615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85313-85674]:Block[85617-85978]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[85323-85376]:IfStatement[85627-85680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85341-85376]:Block[85645-85680]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[85355-85366]:ReturnStatement[85659-85670]"
    }, {
      "left" : "if (isEmpty(separator))",
      "right" : "if (isEmpty(separator))",
      "info" : "IfStatement[85385-85446]:IfStatement[85689-85750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85409-85446]:Block[85713-85750]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[85423-85436]:ReturnStatement[85727-85740]"
    }, {
      "left" : "int pos = str.lastIndexOf(separator);",
      "right" : "int pos = str.lastIndexOf(separator);",
      "info" : "VariableDeclarationStatement[85455-85492]:VariableDeclarationStatement[85759-85796]"
    }, {
      "left" : "if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length()))",
      "right" : "if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length()))",
      "info" : "IfStatement[85501-85612]:IfStatement[85805-85916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85575-85612]:Block[85879-85916]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[85589-85602]:ReturnStatement[85893-85906]"
    }, {
      "left" : "return str.substring(pos + separator.length());",
      "right" : "return str.substring(pos + separator.length());",
      "info" : "ReturnStatement[85621-85668]:ReturnStatement[85925-85972]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[86671-86677]:Modifier[86975-86981]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[86678-86684]:Modifier[86982-86988]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[86685-86691]:SimpleType[86989-86995]"
    }, {
      "left" : "substringBetween",
      "right" : "substringBetween",
      "info" : "SimpleName[86692-86708]:SimpleName[86996-87012]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[86709-86719]:SingleVariableDeclaration[87013-87023]"
    }, {
      "left" : "String tag",
      "right" : "String tag",
      "info" : "SingleVariableDeclaration[86721-86731]:SingleVariableDeclaration[87025-87035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86733-86788]:Block[87037-87092]"
    }, {
      "left" : "return substringBetween(str, tag, tag);",
      "right" : "return substringBetween(str, tag, tag);",
      "info" : "ReturnStatement[86743-86782]:ReturnStatement[87047-87086]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[88097-88103]:Modifier[88401-88407]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[88104-88110]:Modifier[88408-88414]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[88111-88117]:SimpleType[88415-88421]"
    }, {
      "left" : "substringBetween",
      "right" : "substringBetween",
      "info" : "SimpleName[88118-88134]:SimpleName[88422-88438]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[88135-88145]:SingleVariableDeclaration[88439-88449]"
    }, {
      "left" : "String open",
      "right" : "String open",
      "info" : "SingleVariableDeclaration[88147-88158]:SingleVariableDeclaration[88451-88462]"
    }, {
      "left" : "String close",
      "right" : "String close",
      "info" : "SingleVariableDeclaration[88160-88172]:SingleVariableDeclaration[88464-88476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88174-88573]:Block[88478-88877]"
    }, {
      "left" : "if (str == null || open == null || close == null)",
      "right" : "if (str == null || open == null || close == null)",
      "info" : "IfStatement[88184-88270]:IfStatement[88488-88574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88234-88270]:Block[88538-88574]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[88248-88260]:ReturnStatement[88552-88564]"
    }, {
      "left" : "int start = str.indexOf(open);",
      "right" : "int start = str.indexOf(open);",
      "info" : "VariableDeclarationStatement[88279-88309]:VariableDeclarationStatement[88583-88613]"
    }, {
      "left" : "if (start != INDEX_NOT_FOUND)",
      "right" : "if (start != INDEX_NOT_FOUND)",
      "info" : "IfStatement[88318-88546]:IfStatement[88622-88850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88348-88546]:Block[88652-88850]"
    }, {
      "left" : "int end = str.indexOf(close, start + open.length());",
      "right" : "int end = str.indexOf(close, start + open.length());",
      "info" : "VariableDeclarationStatement[88362-88414]:VariableDeclarationStatement[88666-88718]"
    }, {
      "left" : "if (end != INDEX_NOT_FOUND)",
      "right" : "if (end != INDEX_NOT_FOUND)",
      "info" : "IfStatement[88427-88536]:IfStatement[88731-88840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88455-88536]:Block[88759-88840]"
    }, {
      "left" : "return str.substring(start + open.length(), end);",
      "right" : "return str.substring(start + open.length(), end);",
      "info" : "ReturnStatement[88473-88522]:ReturnStatement[88777-88826]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[88555-88567]:ReturnStatement[88859-88871]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[89711-89717]:Modifier[90015-90021]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[89718-89724]:Modifier[90022-90028]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[89725-89733]:ArrayType[90029-90037]"
    }, {
      "left" : "substringsBetween",
      "right" : "substringsBetween",
      "info" : "SimpleName[89734-89751]:SimpleName[90038-90055]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[89752-89762]:SingleVariableDeclaration[90056-90066]"
    }, {
      "left" : "String open",
      "right" : "String open",
      "info" : "SingleVariableDeclaration[89764-89775]:SingleVariableDeclaration[90068-90079]"
    }, {
      "left" : "String close",
      "right" : "String close",
      "info" : "SingleVariableDeclaration[89777-89789]:SingleVariableDeclaration[90081-90093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89791-90682]:Block[90095-90986]"
    }, {
      "left" : "if (str == null || isEmpty(open) || isEmpty(close))",
      "right" : "if (str == null || isEmpty(open) || isEmpty(close))",
      "info" : "IfStatement[89801-89889]:IfStatement[90105-90193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89853-89889]:Block[90157-90193]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[89867-89879]:ReturnStatement[90171-90183]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[89898-89924]:VariableDeclarationStatement[90202-90228]"
    }, {
      "left" : "if (strLen == 0)",
      "right" : "if (strLen == 0)",
      "info" : "IfStatement[89933-90011]:IfStatement[90237-90315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89950-90011]:Block[90254-90315]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[89964-90001]:ReturnStatement[90268-90305]"
    }, {
      "left" : "int closeLen = close.length();",
      "right" : "int closeLen = close.length();",
      "info" : "VariableDeclarationStatement[90020-90050]:VariableDeclarationStatement[90324-90354]"
    }, {
      "left" : "int openLen = open.length();",
      "right" : "int openLen = open.length();",
      "info" : "VariableDeclarationStatement[90059-90087]:VariableDeclarationStatement[90363-90391]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[90096-90140]:VariableDeclarationStatement[90400-90444]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[90149-90161]:VariableDeclarationStatement[90453-90465]"
    }, {
      "left" : "while (pos < (strLen - closeLen))",
      "right" : "while (pos < (strLen - closeLen))",
      "info" : "WhileStatement[90170-90555]:WhileStatement[90474-90859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90204-90555]:Block[90508-90859]"
    }, {
      "left" : "int start = str.indexOf(open, pos);",
      "right" : "int start = str.indexOf(open, pos);",
      "info" : "VariableDeclarationStatement[90218-90253]:VariableDeclarationStatement[90522-90557]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[90266-90319]:IfStatement[90570-90623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90281-90319]:Block[90585-90623]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[90299-90305]:BreakStatement[90603-90609]"
    }, {
      "left" : "start += openLen;",
      "right" : "start += openLen;",
      "info" : "ExpressionStatement[90332-90349]:ExpressionStatement[90636-90653]"
    }, {
      "left" : "int end = str.indexOf(close, start);",
      "right" : "int end = str.indexOf(close, start);",
      "info" : "VariableDeclarationStatement[90362-90398]:VariableDeclarationStatement[90666-90702]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[90411-90462]:IfStatement[90715-90766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90424-90462]:Block[90728-90766]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[90442-90448]:BreakStatement[90746-90752]"
    }, {
      "left" : "list.add(str.substring(start, end));",
      "right" : "list.add(str.substring(start, end));",
      "info" : "ExpressionStatement[90475-90511]:ExpressionStatement[90779-90815]"
    }, {
      "left" : "pos = end + closeLen;",
      "right" : "pos = end + closeLen;",
      "info" : "ExpressionStatement[90524-90545]:ExpressionStatement[90828-90849]"
    }, {
      "left" : "if (list.isEmpty())",
      "right" : "if (list.isEmpty())",
      "info" : "IfStatement[90564-90620]:IfStatement[90868-90924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90584-90620]:Block[90888-90924]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[90598-90610]:ReturnStatement[90902-90914]"
    }, {
      "left" : "return list.toArray(new String [list.size()]);",
      "right" : "return list.toArray(new String [list.size()]);",
      "info" : "ReturnStatement[90630-90676]:ReturnStatement[90934-90980]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[91771-91777]:Modifier[92075-92081]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[91778-91784]:Modifier[92082-92088]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[91785-91793]:ArrayType[92089-92097]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[91794-91799]:SimpleName[92098-92103]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[91800-91810]:SingleVariableDeclaration[92104-92114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91812-91856]:Block[92116-92160]"
    }, {
      "left" : "return split(str, null, -1);",
      "right" : "return split(str, null, -1);",
      "info" : "ReturnStatement[91822-91850]:ReturnStatement[92126-92154]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[92883-92889]:Modifier[93187-93193]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[92890-92896]:Modifier[93194-93200]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[92897-92905]:ArrayType[93201-93209]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[92906-92911]:SimpleName[93210-93215]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[92912-92922]:SingleVariableDeclaration[93216-93226]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[92924-92942]:SingleVariableDeclaration[93228-93246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92944-93006]:Block[93248-93310]"
    }, {
      "left" : "return splitWorker(str, separatorChar, false);",
      "right" : "return splitWorker(str, separatorChar, false);",
      "info" : "ReturnStatement[92954-93000]:ReturnStatement[93258-93304]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[94137-94143]:Modifier[94441-94447]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[94144-94150]:Modifier[94448-94454]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[94151-94159]:ArrayType[94455-94463]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[94160-94165]:SimpleName[94464-94469]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[94166-94176]:SingleVariableDeclaration[94470-94480]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[94178-94199]:SingleVariableDeclaration[94482-94503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94201-94268]:Block[94505-94572]"
    }, {
      "left" : "return splitWorker(str, separatorChars, -1, false);",
      "right" : "return splitWorker(str, separatorChars, -1, false);",
      "info" : "ReturnStatement[94211-94262]:ReturnStatement[94515-94566]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[95709-95715]:Modifier[96013-96019]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[95716-95722]:Modifier[96020-96026]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[95723-95731]:ArrayType[96027-96035]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[95732-95737]:SimpleName[96036-96041]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[95738-95748]:SingleVariableDeclaration[96042-96052]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[95750-95771]:SingleVariableDeclaration[96054-96075]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[95773-95780]:SingleVariableDeclaration[96077-96084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95782-95850]:Block[96086-96154]"
    }, {
      "left" : "return splitWorker(str, separatorChars, max, false);",
      "right" : "return splitWorker(str, separatorChars, max, false);",
      "info" : "ReturnStatement[95792-95844]:ReturnStatement[96096-96148]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[97027-97033]:Modifier[97331-97337]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[97034-97040]:Modifier[97338-97344]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[97041-97049]:ArrayType[97345-97353]"
    }, {
      "left" : "splitByWholeSeparator",
      "right" : "splitByWholeSeparator",
      "info" : "SimpleName[97050-97071]:SimpleName[97354-97375]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[97072-97082]:SingleVariableDeclaration[97376-97386]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[97084-97100]:SingleVariableDeclaration[97388-97404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97102-97183]:Block[97406-97487]"
    }, {
      "left" : "return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",
      "right" : "return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",
      "info" : "ReturnStatement[97112-97177]:ReturnStatement[97416-97481]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[98654-98660]:Modifier[98958-98964]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[98661-98667]:Modifier[98965-98971]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[98668-98676]:ArrayType[98972-98980]"
    }, {
      "left" : "splitByWholeSeparator",
      "right" : "splitByWholeSeparator",
      "info" : "SimpleName[98677-98698]:SimpleName[98981-99002]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[98700-98710]:SingleVariableDeclaration[99004-99014]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[98712-98728]:SingleVariableDeclaration[99016-99032]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[98730-98737]:SingleVariableDeclaration[99034-99041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98740-98819]:Block[99044-99123]"
    }, {
      "left" : "return splitByWholeSeparatorWorker(str, separator, max, false);",
      "right" : "return splitByWholeSeparatorWorker(str, separator, max, false);",
      "info" : "ReturnStatement[98750-98813]:ReturnStatement[99054-99117]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[100198-100204]:Modifier[100502-100508]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[100205-100211]:Modifier[100509-100515]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[100212-100220]:ArrayType[100516-100524]"
    }, {
      "left" : "splitByWholeSeparatorPreserveAllTokens",
      "right" : "splitByWholeSeparatorPreserveAllTokens",
      "info" : "SimpleName[100221-100259]:SimpleName[100525-100563]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[100260-100270]:SingleVariableDeclaration[100564-100574]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[100272-100288]:SingleVariableDeclaration[100576-100592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100290-100367]:Block[100594-100671]"
    }, {
      "left" : "return splitByWholeSeparatorWorker(str, separator, -1, true);",
      "right" : "return splitByWholeSeparatorWorker(str, separator, -1, true);",
      "info" : "ReturnStatement[100300-100361]:ReturnStatement[100604-100665]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[102056-102062]:Modifier[102360-102366]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[102063-102069]:Modifier[102367-102373]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[102070-102078]:ArrayType[102374-102382]"
    }, {
      "left" : "splitByWholeSeparatorPreserveAllTokens",
      "right" : "splitByWholeSeparatorPreserveAllTokens",
      "info" : "SimpleName[102079-102117]:SimpleName[102383-102421]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[102118-102128]:SingleVariableDeclaration[102422-102432]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[102130-102146]:SingleVariableDeclaration[102434-102450]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[102148-102155]:SingleVariableDeclaration[102452-102459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102157-102235]:Block[102461-102539]"
    }, {
      "left" : "return splitByWholeSeparatorWorker(str, separator, max, true);",
      "right" : "return splitByWholeSeparatorWorker(str, separator, max, true);",
      "info" : "ReturnStatement[102167-102229]:ReturnStatement[102471-102533]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[102987-102994]:Modifier[103291-103298]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[102995-103001]:Modifier[103299-103305]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[103002-103010]:ArrayType[103306-103314]"
    }, {
      "left" : "splitByWholeSeparatorWorker",
      "right" : "splitByWholeSeparatorWorker",
      "info" : "SimpleName[103011-103038]:SimpleName[103315-103342]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[103039-103049]:SingleVariableDeclaration[103343-103353]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[103051-103067]:SingleVariableDeclaration[103355-103371]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[103069-103076]:SingleVariableDeclaration[103373-103380]"
    }, {
      "left" : "boolean preserveAllTokens",
      "right" : "boolean preserveAllTokens",
      "info" : "SingleVariableDeclaration[103135-103160]:SingleVariableDeclaration[103439-103464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103167-105453]:Block[103471-105757]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[103177-103230]:IfStatement[103481-103534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103194-103230]:Block[103498-103534]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[103208-103220]:ReturnStatement[103512-103524]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[103240-103263]:VariableDeclarationStatement[103544-103567]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[103273-103348]:IfStatement[103577-103652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103287-103348]:Block[103591-103652]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[103301-103338]:ReturnStatement[103605-103642]"
    }, {
      "left" : "if ((separator == null) || (EMPTY.equals(separator)))",
      "right" : "if ((separator == null) || (EMPTY.equals(separator)))",
      "info" : "IfStatement[103358-103526]:IfStatement[103662-103830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103412-103526]:Block[103716-103830]"
    }, {
      "left" : "return splitWorker(str, null, max, preserveAllTokens);",
      "right" : "return splitWorker(str, null, max, preserveAllTokens);",
      "info" : "ReturnStatement[103462-103516]:ReturnStatement[103766-103820]"
    }, {
      "left" : "int separatorLength = separator.length();",
      "right" : "int separatorLength = separator.length();",
      "info" : "VariableDeclarationStatement[103536-103577]:VariableDeclarationStatement[103840-103881]"
    }, {
      "left" : "ArrayList<String> substrings = new ArrayList<String>();",
      "right" : "ArrayList<String> substrings = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[103587-103642]:VariableDeclarationStatement[103891-103946]"
    }, {
      "left" : "int numberOfSubstrings = 0;",
      "right" : "int numberOfSubstrings = 0;",
      "info" : "VariableDeclarationStatement[103651-103678]:VariableDeclarationStatement[103955-103982]"
    }, {
      "left" : "int beg = 0;",
      "right" : "int beg = 0;",
      "info" : "VariableDeclarationStatement[103687-103699]:VariableDeclarationStatement[103991-104003]"
    }, {
      "left" : "int end = 0;",
      "right" : "int end = 0;",
      "info" : "VariableDeclarationStatement[103708-103720]:VariableDeclarationStatement[104012-104024]"
    }, {
      "left" : "while (end < len)",
      "right" : "while (end < len)",
      "info" : "WhileStatement[103729-105380]:WhileStatement[104033-105684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103747-105380]:Block[104051-105684]"
    }, {
      "left" : "end = str.indexOf(separator, beg);",
      "right" : "end = str.indexOf(separator, beg);",
      "info" : "ExpressionStatement[103761-103795]:ExpressionStatement[104065-104099]"
    }, {
      "left" : "if (end > -1)",
      "right" : "if (end > -1)",
      "info" : "IfStatement[103809-105370]:IfStatement[104113-105674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103823-105185]:Block[104127-105489]"
    }, {
      "left" : "if (end > beg)",
      "right" : "if (end > beg)",
      "info" : "IfStatement[103841-105171]:IfStatement[104145-105475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103856-104624]:Block[104160-104928]"
    }, {
      "left" : "numberOfSubstrings += 1;",
      "right" : "numberOfSubstrings += 1;",
      "info" : "ExpressionStatement[103878-103902]:ExpressionStatement[104182-104206]"
    }, {
      "left" : "if (numberOfSubstrings == max)",
      "right" : "if (numberOfSubstrings == max)",
      "info" : "IfStatement[103924-104606]:IfStatement[104228-104910]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103955-104073]:Block[104259-104377]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[103981-103991]:ExpressionStatement[104285-104295]"
    }, {
      "left" : "substrings.add(str.substring(beg));",
      "right" : "substrings.add(str.substring(beg));",
      "info" : "ExpressionStatement[104016-104051]:ExpressionStatement[104320-104355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104079-104606]:Block[104383-104910]"
    }, {
      "left" : "substrings.add(str.substring(beg, end));",
      "right" : "substrings.add(str.substring(beg, end));",
      "info" : "ExpressionStatement[104263-104303]:ExpressionStatement[104567-104607]"
    }, {
      "left" : "beg = end + separatorLength;",
      "right" : "beg = end + separatorLength;",
      "info" : "ExpressionStatement[104556-104584]:ExpressionStatement[104860-104888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104630-105171]:Block[104934-105475]"
    }, {
      "left" : "if (preserveAllTokens)",
      "right" : "if (preserveAllTokens)",
      "info" : "IfStatement[104739-105104]:IfStatement[105043-105408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104762-105104]:Block[105066-105408]"
    }, {
      "left" : "numberOfSubstrings += 1;",
      "right" : "numberOfSubstrings += 1;",
      "info" : "ExpressionStatement[104788-104812]:ExpressionStatement[105092-105116]"
    }, {
      "left" : "if (numberOfSubstrings == max)",
      "right" : "if (numberOfSubstrings == max)",
      "info" : "IfStatement[104837-105082]:IfStatement[105141-105386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104868-104998]:Block[105172-105302]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[104898-104908]:ExpressionStatement[105202-105212]"
    }, {
      "left" : "substrings.add(str.substring(beg));",
      "right" : "substrings.add(str.substring(beg));",
      "info" : "ExpressionStatement[104937-104972]:ExpressionStatement[105241-105276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105004-105082]:Block[105308-105386]"
    }, {
      "left" : "substrings.add(EMPTY);",
      "right" : "substrings.add(EMPTY);",
      "info" : "ExpressionStatement[105034-105056]:ExpressionStatement[105338-105360]"
    }, {
      "left" : "beg = end + separatorLength;",
      "right" : "beg = end + separatorLength;",
      "info" : "ExpressionStatement[105125-105153]:ExpressionStatement[105429-105457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105191-105370]:Block[105495-105674]"
    }, {
      "left" : "substrings.add(str.substring(beg));",
      "right" : "substrings.add(str.substring(beg));",
      "info" : "ExpressionStatement[105294-105329]:ExpressionStatement[105598-105633]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[105346-105356]:ExpressionStatement[105650-105660]"
    }, {
      "left" : "return substrings.toArray(new String[substrings.size()]);",
      "right" : "return substrings.toArray(new String[substrings.size()]);",
      "info" : "ReturnStatement[105390-105447]:ReturnStatement[105694-105751]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[106699-106705]:Modifier[107003-107009]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[106706-106712]:Modifier[107010-107016]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[106713-106721]:ArrayType[107017-107025]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[106722-106744]:SimpleName[107026-107048]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[106745-106755]:SingleVariableDeclaration[107049-107059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106757-106813]:Block[107061-107117]"
    }, {
      "left" : "return splitWorker(str, null, -1, true);",
      "right" : "return splitWorker(str, null, -1, true);",
      "info" : "ReturnStatement[106767-106807]:ReturnStatement[107071-107111]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[108598-108604]:Modifier[108902-108908]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[108605-108611]:Modifier[108909-108915]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[108612-108620]:ArrayType[108916-108924]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[108621-108643]:SimpleName[108925-108947]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[108644-108654]:SingleVariableDeclaration[108948-108958]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[108656-108674]:SingleVariableDeclaration[108960-108978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108676-108737]:Block[108980-109041]"
    }, {
      "left" : "return splitWorker(str, separatorChar, true);",
      "right" : "return splitWorker(str, separatorChar, true);",
      "info" : "ReturnStatement[108686-108731]:ReturnStatement[108990-109035]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[109323-109330]:Modifier[109627-109634]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[109331-109337]:Modifier[109635-109641]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[109338-109346]:ArrayType[109642-109650]"
    }, {
      "left" : "splitWorker",
      "right" : "splitWorker",
      "info" : "SimpleName[109347-109358]:SimpleName[109651-109662]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[109359-109369]:SingleVariableDeclaration[109663-109673]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[109371-109389]:SingleVariableDeclaration[109675-109693]"
    }, {
      "left" : "boolean preserveAllTokens",
      "right" : "boolean preserveAllTokens",
      "info" : "SingleVariableDeclaration[109391-109416]:SingleVariableDeclaration[109695-109720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109418-110392]:Block[109722-110696]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[109475-109528]:IfStatement[109779-109832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109492-109528]:Block[109796-109832]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[109506-109518]:ReturnStatement[109810-109822]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[109537-109560]:VariableDeclarationStatement[109841-109864]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[109569-109644]:IfStatement[109873-109948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109583-109644]:Block[109887-109948]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[109597-109634]:ReturnStatement[109901-109938]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[109653-109697]:VariableDeclarationStatement[109957-110001]"
    }, {
      "left" : "int i = 0, start = 0;",
      "right" : "int i = 0, start = 0;",
      "info" : "VariableDeclarationStatement[109706-109727]:VariableDeclarationStatement[110010-110031]"
    }, {
      "left" : "boolean match = false;",
      "right" : "boolean match = false;",
      "info" : "VariableDeclarationStatement[109736-109758]:VariableDeclarationStatement[110040-110062]"
    }, {
      "left" : "boolean lastMatch = false;",
      "right" : "boolean lastMatch = false;",
      "info" : "VariableDeclarationStatement[109767-109793]:VariableDeclarationStatement[110071-110097]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[109802-110218]:WhileStatement[110106-110522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109818-110218]:Block[110122-110522]"
    }, {
      "left" : "if (str.charAt(i) == separatorChar)",
      "right" : "if (str.charAt(i) == separatorChar)",
      "info" : "IfStatement[109832-110134]:IfStatement[110136-110438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109868-110134]:Block[110172-110438]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[109886-110065]:IfStatement[110190-110369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109918-110065]:Block[110222-110369]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[109940-109974]:ExpressionStatement[110244-110278]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[109995-110009]:ExpressionStatement[110299-110313]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[110030-110047]:ExpressionStatement[110334-110351]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[110082-110094]:ExpressionStatement[110386-110398]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[110111-110120]:ContinueStatement[110415-110424]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[110147-110165]:ExpressionStatement[110451-110469]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[110178-110191]:ExpressionStatement[110482-110495]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[110204-110208]:ExpressionStatement[110508-110512]"
    }, {
      "left" : "if (match || (preserveAllTokens && lastMatch))",
      "right" : "if (match || (preserveAllTokens && lastMatch))",
      "info" : "IfStatement[110227-110332]:IfStatement[110531-110636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110274-110332]:Block[110578-110636]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[110288-110322]:ExpressionStatement[110592-110626]"
    }, {
      "left" : "return list.toArray(new String[list.size()]);",
      "right" : "return list.toArray(new String[list.size()]);",
      "info" : "ReturnStatement[110341-110386]:ReturnStatement[110645-110690]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[112277-112283]:Modifier[112581-112587]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[112284-112290]:Modifier[112588-112594]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[112291-112299]:ArrayType[112595-112603]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[112300-112322]:SimpleName[112604-112626]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[112323-112333]:SingleVariableDeclaration[112627-112637]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[112335-112356]:SingleVariableDeclaration[112639-112660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112358-112424]:Block[112662-112728]"
    }, {
      "left" : "return splitWorker(str, separatorChars, -1, true);",
      "right" : "return splitWorker(str, separatorChars, -1, true);",
      "info" : "ReturnStatement[112368-112418]:ReturnStatement[112672-112722]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[114419-114425]:Modifier[114723-114729]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[114426-114432]:Modifier[114730-114736]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[114433-114441]:ArrayType[114737-114745]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[114442-114464]:SimpleName[114746-114768]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[114465-114475]:SingleVariableDeclaration[114769-114779]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[114477-114498]:SingleVariableDeclaration[114781-114802]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[114500-114507]:SingleVariableDeclaration[114804-114811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114509-114576]:Block[114813-114880]"
    }, {
      "left" : "return splitWorker(str, separatorChars, max, true);",
      "right" : "return splitWorker(str, separatorChars, max, true);",
      "info" : "ReturnStatement[114519-114570]:ReturnStatement[114823-114874]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[115283-115290]:Modifier[115587-115594]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[115291-115297]:Modifier[115595-115601]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[115298-115306]:ArrayType[115602-115610]"
    }, {
      "left" : "splitWorker",
      "right" : "splitWorker",
      "info" : "SimpleName[115307-115318]:SimpleName[115611-115622]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[115319-115329]:SingleVariableDeclaration[115623-115633]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[115331-115352]:SingleVariableDeclaration[115635-115656]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[115354-115361]:SingleVariableDeclaration[115658-115665]"
    }, {
      "left" : "boolean preserveAllTokens",
      "right" : "boolean preserveAllTokens",
      "info" : "SingleVariableDeclaration[115363-115388]:SingleVariableDeclaration[115667-115692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115390-118307]:Block[115694-118611]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[115570-115623]:IfStatement[115874-115927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115587-115623]:Block[115891-115927]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[115601-115613]:ReturnStatement[115905-115917]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[115632-115655]:VariableDeclarationStatement[115936-115959]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[115664-115739]:IfStatement[115968-116043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115678-115739]:Block[115982-116043]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[115692-115729]:ReturnStatement[115996-116033]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[115748-115792]:VariableDeclarationStatement[116052-116096]"
    }, {
      "left" : "int sizePlus1 = 1;",
      "right" : "int sizePlus1 = 1;",
      "info" : "VariableDeclarationStatement[115801-115819]:VariableDeclarationStatement[116105-116123]"
    }, {
      "left" : "int i = 0, start = 0;",
      "right" : "int i = 0, start = 0;",
      "info" : "VariableDeclarationStatement[115828-115849]:VariableDeclarationStatement[116132-116153]"
    }, {
      "left" : "boolean match = false;",
      "right" : "boolean match = false;",
      "info" : "VariableDeclarationStatement[115858-115880]:VariableDeclarationStatement[116162-116184]"
    }, {
      "left" : "boolean lastMatch = false;",
      "right" : "boolean lastMatch = false;",
      "info" : "VariableDeclarationStatement[115889-115915]:VariableDeclarationStatement[116193-116219]"
    }, {
      "left" : "if (separatorChars == null)",
      "right" : "if (separatorChars == null)",
      "info" : "IfStatement[115924-118133]:IfStatement[116228-118437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115952-116662]:Block[116256-116966]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[116017-116652]:WhileStatement[116321-116956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116033-116652]:Block[116337-116956]"
    }, {
      "left" : "if (Character.isWhitespace(str.charAt(i)))",
      "right" : "if (Character.isWhitespace(str.charAt(i)))",
      "info" : "IfStatement[116051-116552]:IfStatement[116355-116856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116094-116552]:Block[116398-116856]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[116116-116471]:IfStatement[116420-116775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116148-116471]:Block[116452-116775]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[116174-116191]:ExpressionStatement[116478-116495]"
    }, {
      "left" : "if (sizePlus1++ == max)",
      "right" : "if (sizePlus1++ == max)",
      "info" : "IfStatement[116216-116351]:IfStatement[116520-116655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116240-116351]:Block[116544-116655]"
    }, {
      "left" : "i = len;",
      "right" : "i = len;",
      "info" : "ExpressionStatement[116270-116278]:ExpressionStatement[116574-116582]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[116307-116325]:ExpressionStatement[116611-116629]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[116376-116410]:ExpressionStatement[116680-116714]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[116435-116449]:ExpressionStatement[116739-116753]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[116492-116504]:ExpressionStatement[116796-116808]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[116525-116534]:ContinueStatement[116829-116838]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[116569-116587]:ExpressionStatement[116873-116891]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[116604-116617]:ExpressionStatement[116908-116921]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[116634-116638]:ExpressionStatement[116938-116942]"
    }, {
      "left" : "if (separatorChars.length() == 1)",
      "right" : "if (separatorChars.length() == 1)",
      "info" : "IfStatement[116668-118133]:IfStatement[116972-118437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116702-117434]:Block[117006-117738]"
    }, {
      "left" : "char sep = separatorChars.charAt(0);",
      "right" : "char sep = separatorChars.charAt(0);",
      "info" : "VariableDeclarationStatement[116757-116793]:VariableDeclarationStatement[117061-117097]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[116806-117424]:WhileStatement[117110-117728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116822-117424]:Block[117126-117728]"
    }, {
      "left" : "if (str.charAt(i) == sep)",
      "right" : "if (str.charAt(i) == sep)",
      "info" : "IfStatement[116840-117324]:IfStatement[117144-117628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116866-117324]:Block[117170-117628]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[116888-117243]:IfStatement[117192-117547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116920-117243]:Block[117224-117547]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[116946-116963]:ExpressionStatement[117250-117267]"
    }, {
      "left" : "if (sizePlus1++ == max)",
      "right" : "if (sizePlus1++ == max)",
      "info" : "IfStatement[116988-117123]:IfStatement[117292-117427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117012-117123]:Block[117316-117427]"
    }, {
      "left" : "i = len;",
      "right" : "i = len;",
      "info" : "ExpressionStatement[117042-117050]:ExpressionStatement[117346-117354]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[117079-117097]:ExpressionStatement[117383-117401]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[117148-117182]:ExpressionStatement[117452-117486]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[117207-117221]:ExpressionStatement[117511-117525]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[117264-117276]:ExpressionStatement[117568-117580]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[117297-117306]:ContinueStatement[117601-117610]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[117341-117359]:ExpressionStatement[117645-117663]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[117376-117389]:ExpressionStatement[117680-117693]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[117406-117410]:ExpressionStatement[117710-117714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117440-118133]:Block[117744-118437]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[117483-118123]:WhileStatement[117787-118427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117499-118123]:Block[117803-118427]"
    }, {
      "left" : "if (separatorChars.indexOf(str.charAt(i)) >= 0)",
      "right" : "if (separatorChars.indexOf(str.charAt(i)) >= 0)",
      "info" : "IfStatement[117517-118023]:IfStatement[117821-118327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117565-118023]:Block[117869-118327]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[117587-117942]:IfStatement[117891-118246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117619-117942]:Block[117923-118246]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[117645-117662]:ExpressionStatement[117949-117966]"
    }, {
      "left" : "if (sizePlus1++ == max)",
      "right" : "if (sizePlus1++ == max)",
      "info" : "IfStatement[117687-117822]:IfStatement[117991-118126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117711-117822]:Block[118015-118126]"
    }, {
      "left" : "i = len;",
      "right" : "i = len;",
      "info" : "ExpressionStatement[117741-117749]:ExpressionStatement[118045-118053]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[117778-117796]:ExpressionStatement[118082-118100]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[117847-117881]:ExpressionStatement[118151-118185]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[117906-117920]:ExpressionStatement[118210-118224]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[117963-117975]:ExpressionStatement[118267-118279]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[117996-118005]:ContinueStatement[118300-118309]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[118040-118058]:ExpressionStatement[118344-118362]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[118075-118088]:ExpressionStatement[118379-118392]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[118105-118109]:ExpressionStatement[118409-118413]"
    }, {
      "left" : "if (match || (preserveAllTokens && lastMatch))",
      "right" : "if (match || (preserveAllTokens && lastMatch))",
      "info" : "IfStatement[118142-118247]:IfStatement[118446-118551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118189-118247]:Block[118493-118551]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[118203-118237]:ExpressionStatement[118507-118541]"
    }, {
      "left" : "return list.toArray(new String[list.size()]);",
      "right" : "return list.toArray(new String[list.size()]);",
      "info" : "ReturnStatement[118256-118301]:ReturnStatement[118560-118605]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[119403-119409]:Modifier[119707-119713]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[119410-119416]:Modifier[119714-119720]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[119417-119425]:ArrayType[119721-119729]"
    }, {
      "left" : "splitByCharacterType",
      "right" : "splitByCharacterType",
      "info" : "SimpleName[119426-119446]:SimpleName[119730-119750]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[119447-119457]:SingleVariableDeclaration[119751-119761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119459-119515]:Block[119763-119819]"
    }, {
      "left" : "return splitByCharacterType(str, false);",
      "right" : "return splitByCharacterType(str, false);",
      "info" : "ReturnStatement[119469-119509]:ReturnStatement[119773-119813]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[121018-121024]:Modifier[121322-121328]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[121025-121031]:Modifier[121329-121335]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[121032-121040]:ArrayType[121336-121344]"
    }, {
      "left" : "splitByCharacterTypeCamelCase",
      "right" : "splitByCharacterTypeCamelCase",
      "info" : "SimpleName[121041-121070]:SimpleName[121345-121374]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[121071-121081]:SingleVariableDeclaration[121375-121385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121083-121138]:Block[121387-121442]"
    }, {
      "left" : "return splitByCharacterType(str, true);",
      "right" : "return splitByCharacterType(str, true);",
      "info" : "ReturnStatement[121093-121132]:ReturnStatement[121397-121436]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[121989-121996]:Modifier[122293-122300]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[121997-122003]:Modifier[122301-122307]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[122004-122012]:ArrayType[122308-122316]"
    }, {
      "left" : "splitByCharacterType",
      "right" : "splitByCharacterType",
      "info" : "SimpleName[122013-122033]:SimpleName[122317-122337]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[122034-122044]:SingleVariableDeclaration[122338-122348]"
    }, {
      "left" : "boolean camelCase",
      "right" : "boolean camelCase",
      "info" : "SingleVariableDeclaration[122046-122063]:SingleVariableDeclaration[122350-122367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122065-123262]:Block[122369-123566]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[122075-122128]:IfStatement[122379-122432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122092-122128]:Block[122396-122432]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[122106-122118]:ReturnStatement[122410-122422]"
    }, {
      "left" : "if (str.length() == 0)",
      "right" : "if (str.length() == 0)",
      "info" : "IfStatement[122137-122221]:IfStatement[122441-122525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122160-122221]:Block[122464-122525]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[122174-122211]:ReturnStatement[122478-122515]"
    }, {
      "left" : "char[] c = str.toCharArray();",
      "right" : "char[] c = str.toCharArray();",
      "info" : "VariableDeclarationStatement[122230-122259]:VariableDeclarationStatement[122534-122563]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[122268-122312]:VariableDeclarationStatement[122572-122616]"
    }, {
      "left" : "int tokenStart = 0;",
      "right" : "int tokenStart = 0;",
      "info" : "VariableDeclarationStatement[122321-122340]:VariableDeclarationStatement[122625-122644]"
    }, {
      "left" : "int currentType = Character.getType(c[tokenStart]);",
      "right" : "int currentType = Character.getType(c[tokenStart]);",
      "info" : "VariableDeclarationStatement[122349-122400]:VariableDeclarationStatement[122653-122704]"
    }, {
      "left" : "for (int pos = tokenStart + 1; pos < c.length; pos++)",
      "right" : "for (int pos = tokenStart + 1; pos < c.length; pos++)",
      "info" : "ForStatement[122409-123134]:ForStatement[122713-123438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122463-123134]:Block[122767-123438]"
    }, {
      "left" : "int type = Character.getType(c[pos]);",
      "right" : "int type = Character.getType(c[pos]);",
      "info" : "VariableDeclarationStatement[122477-122514]:VariableDeclarationStatement[122781-122818]"
    }, {
      "left" : "if (type == currentType)",
      "right" : "if (type == currentType)",
      "info" : "IfStatement[122527-122593]:IfStatement[122831-122897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122552-122593]:Block[122856-122897]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[122570-122579]:ContinueStatement[122874-122883]"
    }, {
      "left" : "if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER)",
      "right" : "if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER)",
      "info" : "IfStatement[122606-123092]:IfStatement[122910-123396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122704-122966]:Block[123008-123270]"
    }, {
      "left" : "int newTokenStart = pos - 1;",
      "right" : "int newTokenStart = pos - 1;",
      "info" : "VariableDeclarationStatement[122722-122750]:VariableDeclarationStatement[123026-123054]"
    }, {
      "left" : "if (newTokenStart != tokenStart)",
      "right" : "if (newTokenStart != tokenStart)",
      "info" : "IfStatement[122767-122952]:IfStatement[123071-123256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122800-122952]:Block[123104-123256]"
    }, {
      "left" : "list.add(new String(c, tokenStart, newTokenStart - tokenStart));",
      "right" : "list.add(new String(c, tokenStart, newTokenStart - tokenStart));",
      "info" : "ExpressionStatement[122822-122886]:ExpressionStatement[123126-123190]"
    }, {
      "left" : "tokenStart = newTokenStart;",
      "right" : "tokenStart = newTokenStart;",
      "info" : "ExpressionStatement[122907-122934]:ExpressionStatement[123211-123238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122972-123092]:Block[123276-123396]"
    }, {
      "left" : "list.add(new String(c, tokenStart, pos - tokenStart));",
      "right" : "list.add(new String(c, tokenStart, pos - tokenStart));",
      "info" : "ExpressionStatement[122990-123044]:ExpressionStatement[123294-123348]"
    }, {
      "left" : "tokenStart = pos;",
      "right" : "tokenStart = pos;",
      "info" : "ExpressionStatement[123061-123078]:ExpressionStatement[123365-123382]"
    }, {
      "left" : "currentType = type;",
      "right" : "currentType = type;",
      "info" : "ExpressionStatement[123105-123124]:ExpressionStatement[123409-123428]"
    }, {
      "left" : "list.add(new String(c, tokenStart, c.length - tokenStart));",
      "right" : "list.add(new String(c, tokenStart, c.length - tokenStart));",
      "info" : "ExpressionStatement[123143-123202]:ExpressionStatement[123447-123506]"
    }, {
      "left" : "return list.toArray(new String[list.size()]);",
      "right" : "return list.toArray(new String[list.size()]);",
      "info" : "ReturnStatement[123211-123256]:ReturnStatement[123515-123560]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[124100-124106]:Modifier[124404-124410]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[124107-124113]:Modifier[124411-124417]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[124114-124120]:SimpleType[124418-124424]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[124121-124125]:SimpleName[124425-124429]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[124126-124140]:SingleVariableDeclaration[124430-124444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124142-124183]:Block[124446-124487]"
    }, {
      "left" : "return join(array, null);",
      "right" : "return join(array, null);",
      "info" : "ReturnStatement[124152-124177]:ReturnStatement[124456-124481]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[125077-125083]:Modifier[125381-125387]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[125084-125090]:Modifier[125388-125394]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[125091-125097]:SimpleType[125395-125401]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[125098-125102]:SimpleName[125402-125406]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[125103-125117]:SingleVariableDeclaration[125407-125421]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[125119-125133]:SingleVariableDeclaration[125423-125437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125135-125263]:Block[125439-125567]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[125145-125200]:IfStatement[125449-125504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125164-125200]:Block[125468-125504]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[125178-125190]:ReturnStatement[125482-125494]"
    }, {
      "left" : "return join(array, separator, 0, array.length);",
      "right" : "return join(array, separator, 0, array.length);",
      "info" : "ReturnStatement[125210-125257]:ReturnStatement[125514-125561]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[126433-126439]:Modifier[126737-126743]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[126440-126446]:Modifier[126744-126750]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[126447-126453]:SimpleType[126751-126757]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[126454-126458]:SimpleName[126758-126762]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[126459-126473]:SingleVariableDeclaration[126763-126777]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[126475-126489]:SingleVariableDeclaration[126779-126793]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[126491-126505]:SingleVariableDeclaration[126795-126809]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[126507-126519]:SingleVariableDeclaration[126811-126823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126521-127130]:Block[126825-127434]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[126531-126586]:IfStatement[126835-126890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126550-126586]:Block[126854-126890]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[126564-126576]:ReturnStatement[126868-126880]"
    }, {
      "left" : "int bufSize = (endIndex - startIndex);",
      "right" : "int bufSize = (endIndex - startIndex);",
      "info" : "VariableDeclarationStatement[126595-126633]:VariableDeclarationStatement[126899-126937]"
    }, {
      "left" : "if (bufSize <= 0)",
      "right" : "if (bufSize <= 0)",
      "info" : "IfStatement[126642-126697]:IfStatement[126946-127001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126660-126697]:Block[126964-127001]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[126674-126687]:ReturnStatement[126978-126991]"
    }, {
      "left" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);",
      "right" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);",
      "info" : "ExpressionStatement[126707-126797]:ExpressionStatement[127011-127101]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(bufSize);",
      "right" : "StringBuilder buf = new StringBuilder(bufSize);",
      "info" : "VariableDeclarationStatement[126806-126853]:VariableDeclarationStatement[127110-127157]"
    }, {
      "left" : "for (int i = startIndex; i < endIndex; i++)",
      "right" : "for (int i = startIndex; i < endIndex; i++)",
      "info" : "ForStatement[126863-127093]:ForStatement[127167-127397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126907-127093]:Block[127211-127397]"
    }, {
      "left" : "if (i > startIndex)",
      "right" : "if (i > startIndex)",
      "info" : "IfStatement[126921-126995]:IfStatement[127225-127299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126941-126995]:Block[127245-127299]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[126959-126981]:ExpressionStatement[127263-127285]"
    }, {
      "left" : "if (array[i] != null)",
      "right" : "if (array[i] != null)",
      "info" : "IfStatement[127008-127083]:IfStatement[127312-127387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127030-127083]:Block[127334-127387]"
    }, {
      "left" : "buf.append(array[i]);",
      "right" : "buf.append(array[i]);",
      "info" : "ExpressionStatement[127048-127069]:ExpressionStatement[127352-127373]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[127102-127124]:ReturnStatement[127406-127428]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[128165-128171]:Modifier[128469-128475]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[128172-128178]:Modifier[128476-128482]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[128179-128185]:SimpleType[128483-128489]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[128186-128190]:SimpleName[128490-128494]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[128191-128205]:SingleVariableDeclaration[128495-128509]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[128207-128223]:SingleVariableDeclaration[128511-128527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128225-128352]:Block[128529-128656]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[128235-128290]:IfStatement[128539-128594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128254-128290]:Block[128558-128594]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[128268-128280]:ReturnStatement[128572-128584]"
    }, {
      "left" : "return join(array, separator, 0, array.length);",
      "right" : "return join(array, separator, 0, array.length);",
      "info" : "ReturnStatement[128299-128346]:ReturnStatement[128603-128650]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[129662-129668]:Modifier[129966-129972]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[129669-129675]:Modifier[129973-129979]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[129676-129682]:SimpleType[129980-129986]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[129683-129687]:SimpleName[129987-129991]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[129688-129702]:SingleVariableDeclaration[129992-130006]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[129704-129720]:SingleVariableDeclaration[130008-130024]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[129722-129736]:SingleVariableDeclaration[130026-130040]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[129738-129750]:SingleVariableDeclaration[130042-130054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129752-130646]:Block[130056-130950]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[129762-129817]:IfStatement[130066-130121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129781-129817]:Block[130085-130121]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[129795-129807]:ReturnStatement[130099-130111]"
    }, {
      "left" : "if (separator == null)",
      "right" : "if (separator == null)",
      "info" : "IfStatement[129826-129891]:IfStatement[130130-130195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129849-129891]:Block[130153-130195]"
    }, {
      "left" : "separator = EMPTY;",
      "right" : "separator = EMPTY;",
      "info" : "ExpressionStatement[129863-129881]:ExpressionStatement[130167-130185]"
    }, {
      "left" : "int bufSize = (endIndex - startIndex);",
      "right" : "int bufSize = (endIndex - startIndex);",
      "info" : "VariableDeclarationStatement[130069-130107]:VariableDeclarationStatement[130373-130411]"
    }, {
      "left" : "if (bufSize <= 0)",
      "right" : "if (bufSize <= 0)",
      "info" : "IfStatement[130116-130171]:IfStatement[130420-130475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130134-130171]:Block[130438-130475]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[130148-130161]:ReturnStatement[130452-130465]"
    }, {
      "left" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length())\n                        + separator.length());",
      "right" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length())\n                        + separator.length());",
      "info" : "ExpressionStatement[130181-130312]:ExpressionStatement[130485-130616]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(bufSize);",
      "right" : "StringBuilder buf = new StringBuilder(bufSize);",
      "info" : "VariableDeclarationStatement[130322-130369]:VariableDeclarationStatement[130626-130673]"
    }, {
      "left" : "for (int i = startIndex; i < endIndex; i++)",
      "right" : "for (int i = startIndex; i < endIndex; i++)",
      "info" : "ForStatement[130379-130609]:ForStatement[130683-130913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130423-130609]:Block[130727-130913]"
    }, {
      "left" : "if (i > startIndex)",
      "right" : "if (i > startIndex)",
      "info" : "IfStatement[130437-130511]:IfStatement[130741-130815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130457-130511]:Block[130761-130815]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[130475-130497]:ExpressionStatement[130779-130801]"
    }, {
      "left" : "if (array[i] != null)",
      "right" : "if (array[i] != null)",
      "info" : "IfStatement[130524-130599]:IfStatement[130828-130903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130546-130599]:Block[130850-130903]"
    }, {
      "left" : "buf.append(array[i]);",
      "right" : "buf.append(array[i]);",
      "info" : "ExpressionStatement[130564-130585]:ExpressionStatement[130868-130889]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[130618-130640]:ReturnStatement[130922-130944]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[131283-131289]:Modifier[131587-131593]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[131290-131296]:Modifier[131594-131600]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[131297-131303]:SimpleType[131601-131607]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[131304-131308]:SimpleName[131608-131612]"
    }, {
      "left" : "Iterator<?> iterator",
      "right" : "Iterator<?> iterator",
      "info" : "SingleVariableDeclaration[131309-131329]:SingleVariableDeclaration[131613-131633]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[131331-131345]:SingleVariableDeclaration[131635-131649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131347-132129]:Block[131651-132433]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[131429-131487]:IfStatement[131733-131791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131451-131487]:Block[131755-131791]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[131465-131477]:ReturnStatement[131769-131781]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[131496-131558]:IfStatement[131800-131862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131521-131558]:Block[131825-131862]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[131535-131548]:ReturnStatement[131839-131852]"
    }, {
      "left" : "Object first = iterator.next();",
      "right" : "Object first = iterator.next();",
      "info" : "VariableDeclarationStatement[131567-131598]:VariableDeclarationStatement[131871-131902]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[131607-131691]:IfStatement[131911-131995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131632-131691]:Block[131936-131995]"
    }, {
      "left" : "return ObjectUtils.toString(first);",
      "right" : "return ObjectUtils.toString(first);",
      "info" : "ReturnStatement[131646-131681]:ReturnStatement[131950-131985]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(256);",
      "right" : "StringBuilder buf = new StringBuilder(256);",
      "info" : "VariableDeclarationStatement[131733-131776]:VariableDeclarationStatement[132037-132080]"
    }, {
      "left" : "if (first != null)",
      "right" : "if (first != null)",
      "info" : "IfStatement[131827-131888]:IfStatement[132131-132192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131846-131888]:Block[132150-132192]"
    }, {
      "left" : "buf.append(first);",
      "right" : "buf.append(first);",
      "info" : "ExpressionStatement[131860-131878]:ExpressionStatement[132164-132182]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[131898-132091]:WhileStatement[132202-132395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131925-132091]:Block[132229-132395]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[131939-131961]:ExpressionStatement[132243-132265]"
    }, {
      "left" : "Object obj = iterator.next();",
      "right" : "Object obj = iterator.next();",
      "info" : "VariableDeclarationStatement[131974-132003]:VariableDeclarationStatement[132278-132307]"
    }, {
      "left" : "if (obj != null)",
      "right" : "if (obj != null)",
      "info" : "IfStatement[132016-132081]:IfStatement[132320-132385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132033-132081]:Block[132337-132385]"
    }, {
      "left" : "buf.append(obj);",
      "right" : "buf.append(obj);",
      "info" : "ExpressionStatement[132051-132067]:ExpressionStatement[132355-132371]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[132101-132123]:ReturnStatement[132405-132427]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[132752-132758]:Modifier[133056-133062]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[132759-132765]:Modifier[133063-133069]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[132766-132772]:SimpleType[133070-133076]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[132773-132777]:SimpleName[133077-133081]"
    }, {
      "left" : "Iterator<?> iterator",
      "right" : "Iterator<?> iterator",
      "info" : "SingleVariableDeclaration[132778-132798]:SingleVariableDeclaration[133082-133102]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[132800-132816]:SingleVariableDeclaration[133104-133120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132818-133654]:Block[133122-133958]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[132900-132958]:IfStatement[133204-133262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132922-132958]:Block[133226-133262]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[132936-132948]:ReturnStatement[133240-133252]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[132967-133029]:IfStatement[133271-133333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132992-133029]:Block[133296-133333]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[133006-133019]:ReturnStatement[133310-133323]"
    }, {
      "left" : "Object first = iterator.next();",
      "right" : "Object first = iterator.next();",
      "info" : "VariableDeclarationStatement[133038-133069]:VariableDeclarationStatement[133342-133373]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[133078-133162]:IfStatement[133382-133466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133103-133162]:Block[133407-133466]"
    }, {
      "left" : "return ObjectUtils.toString(first);",
      "right" : "return ObjectUtils.toString(first);",
      "info" : "ReturnStatement[133117-133152]:ReturnStatement[133421-133456]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(256);",
      "right" : "StringBuilder buf = new StringBuilder(256);",
      "info" : "VariableDeclarationStatement[133204-133247]:VariableDeclarationStatement[133508-133551]"
    }, {
      "left" : "if (first != null)",
      "right" : "if (first != null)",
      "info" : "IfStatement[133298-133359]:IfStatement[133602-133663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133317-133359]:Block[133621-133663]"
    }, {
      "left" : "buf.append(first);",
      "right" : "buf.append(first);",
      "info" : "ExpressionStatement[133331-133349]:ExpressionStatement[133635-133653]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[133369-133617]:WhileStatement[133673-133921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133396-133617]:Block[133700-133921]"
    }, {
      "left" : "if (separator != null)",
      "right" : "if (separator != null)",
      "info" : "IfStatement[133410-133487]:IfStatement[133714-133791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133433-133487]:Block[133737-133791]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[133451-133473]:ExpressionStatement[133755-133777]"
    }, {
      "left" : "Object obj = iterator.next();",
      "right" : "Object obj = iterator.next();",
      "info" : "VariableDeclarationStatement[133500-133529]:VariableDeclarationStatement[133804-133833]"
    }, {
      "left" : "if (obj != null)",
      "right" : "if (obj != null)",
      "info" : "IfStatement[133542-133607]:IfStatement[133846-133911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133559-133607]:Block[133863-133911]"
    }, {
      "left" : "buf.append(obj);",
      "right" : "buf.append(obj);",
      "info" : "ExpressionStatement[133577-133593]:ExpressionStatement[133881-133897]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[133626-133648]:ReturnStatement[133930-133952]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[134302-134308]:Modifier[134606-134612]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[134309-134315]:Modifier[134613-134619]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[134316-134322]:SimpleType[134620-134626]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[134323-134327]:SimpleName[134627-134631]"
    }, {
      "left" : "Iterable<?> iterable",
      "right" : "Iterable<?> iterable",
      "info" : "SingleVariableDeclaration[134328-134348]:SingleVariableDeclaration[134632-134652]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[134350-134364]:SingleVariableDeclaration[134654-134668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134366-134493]:Block[134670-134797]"
    }, {
      "left" : "if (iterable == null)",
      "right" : "if (iterable == null)",
      "info" : "IfStatement[134376-134434]:IfStatement[134680-134738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134398-134434]:Block[134702-134738]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[134412-134424]:ReturnStatement[134716-134728]"
    }, {
      "left" : "return join(iterable.iterator(), separator);",
      "right" : "return join(iterable.iterator(), separator);",
      "info" : "ReturnStatement[134443-134487]:ReturnStatement[134747-134791]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[135145-135151]:Modifier[135449-135455]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[135152-135158]:Modifier[135456-135462]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[135159-135165]:SimpleType[135463-135469]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[135166-135170]:SimpleName[135470-135474]"
    }, {
      "left" : "Iterable<?> iterable",
      "right" : "Iterable<?> iterable",
      "info" : "SingleVariableDeclaration[135171-135191]:SingleVariableDeclaration[135475-135495]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[135193-135209]:SingleVariableDeclaration[135497-135513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135211-135338]:Block[135515-135642]"
    }, {
      "left" : "if (iterable == null)",
      "right" : "if (iterable == null)",
      "info" : "IfStatement[135221-135279]:IfStatement[135525-135583]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135243-135279]:Block[135547-135583]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[135257-135269]:ReturnStatement[135561-135573]"
    }, {
      "left" : "return join(iterable.iterator(), separator);",
      "right" : "return join(iterable.iterator(), separator);",
      "info" : "ReturnStatement[135288-135332]:ReturnStatement[135592-135636]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[135987-135993]:Modifier[136291-136297]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[135994-136000]:Modifier[136298-136304]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[136001-136007]:SimpleType[136305-136311]"
    }, {
      "left" : "deleteWhitespace",
      "right" : "deleteWhitespace",
      "info" : "SimpleName[136008-136024]:SimpleName[136312-136328]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[136025-136035]:SingleVariableDeclaration[136329-136339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136037-136465]:Block[136341-136769]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[136047-136100]:IfStatement[136351-136404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136065-136100]:Block[136369-136404]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[136079-136090]:ReturnStatement[136383-136394]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[136109-136131]:VariableDeclarationStatement[136413-136435]"
    }, {
      "left" : "char[] chs = new char[sz];",
      "right" : "char[] chs = new char[sz];",
      "info" : "VariableDeclarationStatement[136140-136166]:VariableDeclarationStatement[136444-136470]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[136175-136189]:VariableDeclarationStatement[136479-136493]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[136198-136356]:ForStatement[136502-136660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136227-136356]:Block[136531-136660]"
    }, {
      "left" : "if (!Character.isWhitespace(str.charAt(i)))",
      "right" : "if (!Character.isWhitespace(str.charAt(i)))",
      "info" : "IfStatement[136241-136346]:IfStatement[136545-136650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136285-136346]:Block[136589-136650]"
    }, {
      "left" : "chs[count++] = str.charAt(i);",
      "right" : "chs[count++] = str.charAt(i);",
      "info" : "ExpressionStatement[136303-136332]:ExpressionStatement[136607-136636]"
    }, {
      "left" : "if (count == sz)",
      "right" : "if (count == sz)",
      "info" : "IfStatement[136365-136417]:IfStatement[136669-136721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136382-136417]:Block[136686-136721]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[136396-136407]:ReturnStatement[136700-136711]"
    }, {
      "left" : "return new String(chs, 0, count);",
      "right" : "return new String(chs, 0, count);",
      "info" : "ReturnStatement[136426-136459]:ReturnStatement[136730-136763]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[137660-137666]:Modifier[137964-137970]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[137667-137673]:Modifier[137971-137977]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[137674-137680]:SimpleType[137978-137984]"
    }, {
      "left" : "removeStart",
      "right" : "removeStart",
      "info" : "SimpleName[137681-137692]:SimpleName[137985-137996]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[137693-137703]:SingleVariableDeclaration[137997-138007]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[137705-137718]:SingleVariableDeclaration[138009-138022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137720-137926]:Block[138024-138230]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[137730-137802]:IfStatement[138034-138106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137767-137802]:Block[138071-138106]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[137781-137792]:ReturnStatement[138085-138096]"
    }, {
      "left" : "if (str.startsWith(remove))",
      "right" : "if (str.startsWith(remove))",
      "info" : "IfStatement[137811-137900]:IfStatement[138115-138204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137838-137900]:Block[138142-138204]"
    }, {
      "left" : "return str.substring(remove.length());",
      "right" : "return str.substring(remove.length());",
      "info" : "ReturnStatement[137852-137890]:ReturnStatement[138156-138194]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[137909-137920]:ReturnStatement[138213-138224]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[139217-139223]:Modifier[139521-139527]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[139224-139230]:Modifier[139528-139534]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[139231-139237]:SimpleType[139535-139541]"
    }, {
      "left" : "removeStartIgnoreCase",
      "right" : "removeStartIgnoreCase",
      "info" : "SimpleName[139238-139259]:SimpleName[139542-139563]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[139260-139270]:SingleVariableDeclaration[139564-139574]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[139272-139285]:SingleVariableDeclaration[139576-139589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139287-139505]:Block[139591-139809]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[139297-139369]:IfStatement[139601-139673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139334-139369]:Block[139638-139673]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[139348-139359]:ReturnStatement[139652-139663]"
    }, {
      "left" : "if (startsWithIgnoreCase(str, remove))",
      "right" : "if (startsWithIgnoreCase(str, remove))",
      "info" : "IfStatement[139378-139479]:IfStatement[139682-139783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139417-139479]:Block[139721-139783]"
    }, {
      "left" : "return str.substring(remove.length());",
      "right" : "return str.substring(remove.length());",
      "info" : "ReturnStatement[139431-139469]:ReturnStatement[139735-139773]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[139488-139499]:ReturnStatement[139792-139803]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[140593-140599]:Modifier[140897-140903]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[140600-140606]:Modifier[140904-140910]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[140607-140613]:SimpleType[140911-140917]"
    }, {
      "left" : "removeEnd",
      "right" : "removeEnd",
      "info" : "SimpleName[140614-140623]:SimpleName[140918-140927]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[140624-140634]:SingleVariableDeclaration[140928-140938]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[140636-140649]:SingleVariableDeclaration[140940-140953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140651-140874]:Block[140955-141178]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[140661-140733]:IfStatement[140965-141037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140698-140733]:Block[141002-141037]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[140712-140723]:ReturnStatement[141016-141027]"
    }, {
      "left" : "if (str.endsWith(remove))",
      "right" : "if (str.endsWith(remove))",
      "info" : "IfStatement[140742-140848]:IfStatement[141046-141152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140768-140848]:Block[141072-141152]"
    }, {
      "left" : "return str.substring(0, str.length() - remove.length());",
      "right" : "return str.substring(0, str.length() - remove.length());",
      "info" : "ReturnStatement[140782-140838]:ReturnStatement[141086-141142]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[140857-140868]:ReturnStatement[141161-141172]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[142228-142234]:Modifier[142532-142538]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[142235-142241]:Modifier[142539-142545]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[142242-142248]:SimpleType[142546-142552]"
    }, {
      "left" : "removeEndIgnoreCase",
      "right" : "removeEndIgnoreCase",
      "info" : "SimpleName[142249-142268]:SimpleName[142553-142572]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[142269-142279]:SingleVariableDeclaration[142573-142583]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[142281-142294]:SingleVariableDeclaration[142585-142598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142296-142530]:Block[142600-142834]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[142306-142378]:IfStatement[142610-142682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142343-142378]:Block[142647-142682]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[142357-142368]:ReturnStatement[142661-142672]"
    }, {
      "left" : "if (endsWithIgnoreCase(str, remove))",
      "right" : "if (endsWithIgnoreCase(str, remove))",
      "info" : "IfStatement[142387-142504]:IfStatement[142691-142808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142424-142504]:Block[142728-142808]"
    }, {
      "left" : "return str.substring(0, str.length() - remove.length());",
      "right" : "return str.substring(0, str.length() - remove.length());",
      "info" : "ReturnStatement[142438-142494]:ReturnStatement[142742-142798]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[142513-142524]:ReturnStatement[142817-142828]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[143515-143521]:Modifier[143819-143825]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[143522-143528]:Modifier[143826-143832]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[143529-143535]:SimpleType[143833-143839]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[143536-143542]:SimpleName[143840-143846]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[143543-143553]:SingleVariableDeclaration[143847-143857]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[143555-143568]:SingleVariableDeclaration[143859-143872]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143570-143706]:Block[143874-144010]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[143580-143652]:IfStatement[143884-143956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143617-143652]:Block[143921-143956]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[143631-143642]:ReturnStatement[143935-143946]"
    }, {
      "left" : "return replace(str, remove, EMPTY, -1);",
      "right" : "return replace(str, remove, EMPTY, -1);",
      "info" : "ReturnStatement[143661-143700]:ReturnStatement[143965-144004]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[144455-144461]:Modifier[144759-144765]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[144462-144468]:Modifier[144766-144772]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[144469-144475]:SimpleType[144773-144779]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[144476-144482]:SimpleName[144780-144786]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[144483-144493]:SingleVariableDeclaration[144787-144797]"
    }, {
      "left" : "char remove",
      "right" : "char remove",
      "info" : "SingleVariableDeclaration[144495-144506]:SingleVariableDeclaration[144799-144810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144508-144876]:Block[144812-145180]"
    }, {
      "left" : "if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND)",
      "right" : "if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND)",
      "info" : "IfStatement[144518-144613]:IfStatement[144822-144917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144578-144613]:Block[144882-144917]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[144592-144603]:ReturnStatement[144896-144907]"
    }, {
      "left" : "char[] chars = str.toCharArray();",
      "right" : "char[] chars = str.toCharArray();",
      "info" : "VariableDeclarationStatement[144622-144655]:VariableDeclarationStatement[144926-144959]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[144664-144676]:VariableDeclarationStatement[144968-144980]"
    }, {
      "left" : "for (int i = 0; i < chars.length; i++)",
      "right" : "for (int i = 0; i < chars.length; i++)",
      "info" : "ForStatement[144685-144828]:ForStatement[144989-145132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144724-144828]:Block[145028-145132]"
    }, {
      "left" : "if (chars[i] != remove)",
      "right" : "if (chars[i] != remove)",
      "info" : "IfStatement[144738-144818]:IfStatement[145042-145122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144762-144818]:Block[145066-145122]"
    }, {
      "left" : "chars[pos++] = chars[i];",
      "right" : "chars[pos++] = chars[i];",
      "info" : "ExpressionStatement[144780-144804]:ExpressionStatement[145084-145108]"
    }, {
      "left" : "return new String(chars, 0, pos);",
      "right" : "return new String(chars, 0, pos);",
      "info" : "ReturnStatement[144837-144870]:ReturnStatement[145141-145174]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[146044-146050]:Modifier[146348-146354]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[146051-146057]:Modifier[146355-146361]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[146058-146064]:SimpleType[146362-146368]"
    }, {
      "left" : "replaceOnce",
      "right" : "replaceOnce",
      "info" : "SimpleName[146065-146076]:SimpleName[146369-146380]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[146077-146088]:SingleVariableDeclaration[146381-146392]"
    }, {
      "left" : "String searchString",
      "right" : "String searchString",
      "info" : "SingleVariableDeclaration[146090-146109]:SingleVariableDeclaration[146394-146413]"
    }, {
      "left" : "String replacement",
      "right" : "String replacement",
      "info" : "SingleVariableDeclaration[146111-146129]:SingleVariableDeclaration[146415-146433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[146131-146198]:Block[146435-146502]"
    }, {
      "left" : "return replace(text, searchString, replacement, 1);",
      "right" : "return replace(text, searchString, replacement, 1);",
      "info" : "ReturnStatement[146141-146192]:ReturnStatement[146445-146496]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[147233-147239]:Modifier[147537-147543]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[147240-147246]:Modifier[147544-147550]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[147247-147253]:SimpleType[147551-147557]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[147254-147261]:SimpleName[147558-147565]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[147262-147273]:SingleVariableDeclaration[147566-147577]"
    }, {
      "left" : "String searchString",
      "right" : "String searchString",
      "info" : "SingleVariableDeclaration[147275-147294]:SingleVariableDeclaration[147579-147598]"
    }, {
      "left" : "String replacement",
      "right" : "String replacement",
      "info" : "SingleVariableDeclaration[147296-147314]:SingleVariableDeclaration[147600-147618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[147316-147384]:Block[147620-147688]"
    }, {
      "left" : "return replace(text, searchString, replacement, -1);",
      "right" : "return replace(text, searchString, replacement, -1);",
      "info" : "ReturnStatement[147326-147378]:ReturnStatement[147630-147682]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[148762-148768]:Modifier[149066-149072]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[148769-148775]:Modifier[149073-149079]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[148776-148782]:SimpleType[149080-149086]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[148783-148790]:SimpleName[149087-149094]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[148791-148802]:SingleVariableDeclaration[149095-149106]"
    }, {
      "left" : "String searchString",
      "right" : "String searchString",
      "info" : "SingleVariableDeclaration[148804-148823]:SingleVariableDeclaration[149108-149127]"
    }, {
      "left" : "String replacement",
      "right" : "String replacement",
      "info" : "SingleVariableDeclaration[148825-148843]:SingleVariableDeclaration[149129-149147]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[148845-148852]:SingleVariableDeclaration[149149-149156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[148854-149778]:Block[149158-150082]"
    }, {
      "left" : "if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0)",
      "right" : "if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0)",
      "info" : "IfStatement[148864-148979]:IfStatement[149168-149283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[148943-148979]:Block[149247-149283]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[148957-148969]:ReturnStatement[149261-149273]"
    }, {
      "left" : "int start = 0;",
      "right" : "int start = 0;",
      "info" : "VariableDeclarationStatement[148988-149002]:VariableDeclarationStatement[149292-149306]"
    }, {
      "left" : "int end = text.indexOf(searchString, start);",
      "right" : "int end = text.indexOf(searchString, start);",
      "info" : "VariableDeclarationStatement[149011-149055]:VariableDeclarationStatement[149315-149359]"
    }, {
      "left" : "if (end == INDEX_NOT_FOUND)",
      "right" : "if (end == INDEX_NOT_FOUND)",
      "info" : "IfStatement[149064-149128]:IfStatement[149368-149432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149092-149128]:Block[149396-149432]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[149106-149118]:ReturnStatement[149410-149422]"
    }, {
      "left" : "int replLength = searchString.length();",
      "right" : "int replLength = searchString.length();",
      "info" : "VariableDeclarationStatement[149137-149176]:VariableDeclarationStatement[149441-149480]"
    }, {
      "left" : "int increase = replacement.length() - replLength;",
      "right" : "int increase = replacement.length() - replLength;",
      "info" : "VariableDeclarationStatement[149185-149234]:VariableDeclarationStatement[149489-149538]"
    }, {
      "left" : "increase = (increase < 0 ? 0 : increase);",
      "right" : "increase = (increase < 0 ? 0 : increase);",
      "info" : "ExpressionStatement[149243-149284]:ExpressionStatement[149547-149588]"
    }, {
      "left" : "increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));",
      "right" : "increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));",
      "info" : "ExpressionStatement[149293-149344]:ExpressionStatement[149597-149648]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "right" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "info" : "VariableDeclarationStatement[149353-149417]:VariableDeclarationStatement[149657-149721]"
    }, {
      "left" : "while (end != INDEX_NOT_FOUND)",
      "right" : "while (end != INDEX_NOT_FOUND)",
      "info" : "WhileStatement[149426-149698]:WhileStatement[149730-150002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149457-149698]:Block[149761-150002]"
    }, {
      "left" : "buf.append(text.substring(start, end)).append(replacement);",
      "right" : "buf.append(text.substring(start, end)).append(replacement);",
      "info" : "ExpressionStatement[149471-149530]:ExpressionStatement[149775-149834]"
    }, {
      "left" : "start = end + replLength;",
      "right" : "start = end + replLength;",
      "info" : "ExpressionStatement[149543-149568]:ExpressionStatement[149847-149872]"
    }, {
      "left" : "if (--max == 0)",
      "right" : "if (--max == 0)",
      "info" : "IfStatement[149581-149635]:IfStatement[149885-149939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149597-149635]:Block[149901-149939]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[149615-149621]:BreakStatement[149919-149925]"
    }, {
      "left" : "end = text.indexOf(searchString, start);",
      "right" : "end = text.indexOf(searchString, start);",
      "info" : "ExpressionStatement[149648-149688]:ExpressionStatement[149952-149992]"
    }, {
      "left" : "buf.append(text.substring(start));",
      "right" : "buf.append(text.substring(start));",
      "info" : "ExpressionStatement[149707-149741]:ExpressionStatement[150011-150045]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[149750-149772]:ReturnStatement[150054-150076]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[151557-151563]:Modifier[151861-151867]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[151564-151570]:Modifier[151868-151874]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[151571-151577]:SimpleType[151875-151881]"
    }, {
      "left" : "replaceEach",
      "right" : "replaceEach",
      "info" : "SimpleName[151578-151589]:SimpleName[151882-151893]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[151590-151601]:SingleVariableDeclaration[151894-151905]"
    }, {
      "left" : "String[] searchList",
      "right" : "String[] searchList",
      "info" : "SingleVariableDeclaration[151603-151622]:SingleVariableDeclaration[151907-151926]"
    }, {
      "left" : "String[] replacementList",
      "right" : "String[] replacementList",
      "info" : "SingleVariableDeclaration[151624-151648]:SingleVariableDeclaration[151928-151952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151650-151730]:Block[151954-152034]"
    }, {
      "left" : "return replaceEach(text, searchList, replacementList, false, 0);",
      "right" : "return replaceEach(text, searchList, replacementList, false, 0);",
      "info" : "ReturnStatement[151660-151724]:ReturnStatement[151964-152028]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[154031-154037]:Modifier[154335-154341]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[154038-154044]:Modifier[154342-154348]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[154045-154051]:SimpleType[154349-154355]"
    }, {
      "left" : "replaceEachRepeatedly",
      "right" : "replaceEachRepeatedly",
      "info" : "SimpleName[154052-154073]:SimpleName[154356-154377]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[154074-154085]:SingleVariableDeclaration[154378-154389]"
    }, {
      "left" : "String[] searchList",
      "right" : "String[] searchList",
      "info" : "SingleVariableDeclaration[154087-154106]:SingleVariableDeclaration[154391-154410]"
    }, {
      "left" : "String[] replacementList",
      "right" : "String[] replacementList",
      "info" : "SingleVariableDeclaration[154108-154132]:SingleVariableDeclaration[154412-154436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[154134-154413]:Block[154438-154717]"
    }, {
      "left" : "int timeToLive = searchList == null ? 0 : searchList.length;",
      "right" : "int timeToLive = searchList == null ? 0 : searchList.length;",
      "info" : "VariableDeclarationStatement[154266-154326]:VariableDeclarationStatement[154570-154630]"
    }, {
      "left" : "return replaceEach(text, searchList, replacementList, true, timeToLive);",
      "right" : "return replaceEach(text, searchList, replacementList, true, timeToLive);",
      "info" : "ReturnStatement[154335-154407]:ReturnStatement[154639-154711]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[156783-156790]:Modifier[157087-157094]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[156791-156797]:Modifier[157095-157101]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[156798-156804]:SimpleType[157102-157108]"
    }, {
      "left" : "replaceEach",
      "right" : "replaceEach",
      "info" : "SimpleName[156805-156816]:SimpleName[157109-157120]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[156817-156828]:SingleVariableDeclaration[157121-157132]"
    }, {
      "left" : "String[] searchList",
      "right" : "String[] searchList",
      "info" : "SingleVariableDeclaration[156830-156849]:SingleVariableDeclaration[157134-157153]"
    }, {
      "left" : "String[] replacementList",
      "right" : "String[] replacementList",
      "info" : "SingleVariableDeclaration[156851-156875]:SingleVariableDeclaration[157155-157179]"
    }, {
      "left" : "boolean repeat",
      "right" : "boolean repeat",
      "info" : "SingleVariableDeclaration[156916-156930]:SingleVariableDeclaration[157220-157234]"
    }, {
      "left" : "int timeToLive",
      "right" : "int timeToLive",
      "info" : "SingleVariableDeclaration[156932-156946]:SingleVariableDeclaration[157236-157250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156953-161588]:Block[157257-161892]"
    }, {
      "left" : "if (text == null || text.length() == 0 || searchList == null || \n            searchList.length == 0 || replacementList == null || replacementList.length == 0)",
      "right" : "if (text == null || text.length() == 0 || searchList == null || \n            searchList.length == 0 || replacementList == null || replacementList.length == 0)",
      "info" : "IfStatement[157146-157350]:IfStatement[157450-157654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157314-157350]:Block[157618-157654]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[157328-157340]:ReturnStatement[157632-157644]"
    }, {
      "left" : "if (timeToLive < 0)",
      "right" : "if (timeToLive < 0)",
      "info" : "IfStatement[157414-157550]:IfStatement[157718-157854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157434-157550]:Block[157738-157854]"
    }, {
      "left" : "throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);",
      "right" : "throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);",
      "info" : "ThrowStatement[157448-157540]:ThrowStatement[157752-157844]"
    }, {
      "left" : "int searchLength = searchList.length;",
      "right" : "int searchLength = searchList.length;",
      "info" : "VariableDeclarationStatement[157560-157597]:VariableDeclarationStatement[157864-157901]"
    }, {
      "left" : "int replacementLength = replacementList.length;",
      "right" : "int replacementLength = replacementList.length;",
      "info" : "VariableDeclarationStatement[157606-157653]:VariableDeclarationStatement[157910-157957]"
    }, {
      "left" : "if (searchLength != replacementLength)",
      "right" : "if (searchLength != replacementLength)",
      "info" : "IfStatement[157723-157963]:IfStatement[158027-158267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157762-157963]:Block[158066-158267]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Search and Replace array lengths don't match: \"\n                + searchLength\n                + \" vs \"\n                + replacementLength);",
      "right" : "throw new IllegalArgumentException(\"Search and Replace array lengths don't match: \"\n                + searchLength\n                + \" vs \"\n                + replacementLength);",
      "info" : "ThrowStatement[157776-157953]:ThrowStatement[158080-158257]"
    }, {
      "left" : "boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];",
      "right" : "boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];",
      "info" : "VariableDeclarationStatement[158023-158087]:VariableDeclarationStatement[158327-158391]"
    }, {
      "left" : "int textIndex = -1;",
      "right" : "int textIndex = -1;",
      "info" : "VariableDeclarationStatement[158148-158167]:VariableDeclarationStatement[158452-158471]"
    }, {
      "left" : "int replaceIndex = -1;",
      "right" : "int replaceIndex = -1;",
      "info" : "VariableDeclarationStatement[158176-158198]:VariableDeclarationStatement[158480-158502]"
    }, {
      "left" : "int tempIndex = -1;",
      "right" : "int tempIndex = -1;",
      "info" : "VariableDeclarationStatement[158207-158226]:VariableDeclarationStatement[158511-158530]"
    }, {
      "left" : "for (int i = 0; i < searchLength; i++)",
      "right" : "for (int i = 0; i < searchLength; i++)",
      "info" : "ForStatement[158358-159009]:ForStatement[158662-159313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158397-159009]:Block[158701-159313]"
    }, {
      "left" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                searchList[i].length() == 0 || replacementList[i] == null)",
      "right" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                searchList[i].length() == 0 || replacementList[i] == null)",
      "info" : "IfStatement[158411-158602]:IfStatement[158715-158906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158561-158602]:Block[158865-158906]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[158579-158588]:ContinueStatement[158883-158892]"
    }, {
      "left" : "tempIndex = text.indexOf(searchList[i]);",
      "right" : "tempIndex = text.indexOf(searchList[i]);",
      "info" : "ExpressionStatement[158615-158655]:ExpressionStatement[158919-158959]"
    }, {
      "left" : "if (tempIndex == -1)",
      "right" : "if (tempIndex == -1)",
      "info" : "IfStatement[158726-158999]:IfStatement[159030-159303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158747-158815]:Block[159051-159119]"
    }, {
      "left" : "noMoreMatchesForReplIndex[i] = true;",
      "right" : "noMoreMatchesForReplIndex[i] = true;",
      "info" : "ExpressionStatement[158765-158801]:ExpressionStatement[159069-159105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158821-158999]:Block[159125-159303]"
    }, {
      "left" : "if (textIndex == -1 || tempIndex < textIndex)",
      "right" : "if (textIndex == -1 || tempIndex < textIndex)",
      "info" : "IfStatement[158839-158985]:IfStatement[159143-159289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158885-158985]:Block[159189-159289]"
    }, {
      "left" : "textIndex = tempIndex;",
      "right" : "textIndex = tempIndex;",
      "info" : "ExpressionStatement[158907-158929]:ExpressionStatement[159211-159233]"
    }, {
      "left" : "replaceIndex = i;",
      "right" : "replaceIndex = i;",
      "info" : "ExpressionStatement[158950-158967]:ExpressionStatement[159254-159271]"
    }, {
      "left" : "if (textIndex == -1)",
      "right" : "if (textIndex == -1)",
      "info" : "IfStatement[159107-159164]:IfStatement[159411-159468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159128-159164]:Block[159432-159468]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[159142-159154]:ReturnStatement[159446-159458]"
    }, {
      "left" : "int start = 0;",
      "right" : "int start = 0;",
      "info" : "VariableDeclarationStatement[159174-159188]:VariableDeclarationStatement[159478-159492]"
    }, {
      "left" : "int increase = 0;",
      "right" : "int increase = 0;",
      "info" : "VariableDeclarationStatement[159309-159326]:VariableDeclarationStatement[159613-159630]"
    }, {
      "left" : "for (int i = 0; i < searchList.length; i++)",
      "right" : "for (int i = 0; i < searchList.length; i++)",
      "info" : "ForStatement[159444-159796]:ForStatement[159748-160100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159488-159796]:Block[159792-160100]"
    }, {
      "left" : "if (searchList[i] == null || replacementList[i] == null)",
      "right" : "if (searchList[i] == null || replacementList[i] == null)",
      "info" : "IfStatement[159502-159600]:IfStatement[159806-159904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159559-159600]:Block[159863-159904]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[159577-159586]:ContinueStatement[159881-159890]"
    }, {
      "left" : "int greater = replacementList[i].length() - searchList[i].length();",
      "right" : "int greater = replacementList[i].length() - searchList[i].length();",
      "info" : "VariableDeclarationStatement[159613-159680]:VariableDeclarationStatement[159917-159984]"
    }, {
      "left" : "if (greater > 0)",
      "right" : "if (greater > 0)",
      "info" : "IfStatement[159693-159786]:IfStatement[159997-160090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159710-159786]:Block[160014-160090]"
    }, {
      "left" : "increase += 3 * greater;",
      "right" : "increase += 3 * greater;",
      "info" : "ExpressionStatement[159728-159752]:ExpressionStatement[160032-160056]"
    }, {
      "left" : "increase = Math.min(increase, text.length() / 5);",
      "right" : "increase = Math.min(increase, text.length() / 5);",
      "info" : "ExpressionStatement[159874-159923]:ExpressionStatement[160178-160227]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "right" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "info" : "VariableDeclarationStatement[159933-159997]:VariableDeclarationStatement[160237-160301]"
    }, {
      "left" : "while (textIndex != -1)",
      "right" : "while (textIndex != -1)",
      "info" : "WhileStatement[160007-161251]:WhileStatement[160311-161555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160031-161251]:Block[160335-161555]"
    }, {
      "left" : "for (int i = start; i < textIndex; i++)",
      "right" : "for (int i = start; i < textIndex; i++)",
      "info" : "ForStatement[160046-160145]:ForStatement[160350-160449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160086-160145]:Block[160390-160449]"
    }, {
      "left" : "buf.append(text.charAt(i));",
      "right" : "buf.append(text.charAt(i));",
      "info" : "ExpressionStatement[160104-160131]:ExpressionStatement[160408-160435]"
    }, {
      "left" : "buf.append(replacementList[replaceIndex]);",
      "right" : "buf.append(replacementList[replaceIndex]);",
      "info" : "ExpressionStatement[160158-160200]:ExpressionStatement[160462-160504]"
    }, {
      "left" : "start = textIndex + searchList[replaceIndex].length();",
      "right" : "start = textIndex + searchList[replaceIndex].length();",
      "info" : "ExpressionStatement[160214-160268]:ExpressionStatement[160518-160572]"
    }, {
      "left" : "textIndex = -1;",
      "right" : "textIndex = -1;",
      "info" : "ExpressionStatement[160282-160297]:ExpressionStatement[160586-160601]"
    }, {
      "left" : "replaceIndex = -1;",
      "right" : "replaceIndex = -1;",
      "info" : "ExpressionStatement[160310-160328]:ExpressionStatement[160614-160632]"
    }, {
      "left" : "tempIndex = -1;",
      "right" : "tempIndex = -1;",
      "info" : "ExpressionStatement[160341-160356]:ExpressionStatement[160645-160660]"
    }, {
      "left" : "for (int i = 0; i < searchLength; i++)",
      "right" : "for (int i = 0; i < searchLength; i++)",
      "info" : "ForStatement[160470-161192]:ForStatement[160774-161496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160509-161192]:Block[160813-161496]"
    }, {
      "left" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                    searchList[i].length() == 0 || replacementList[i] == null)",
      "right" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                    searchList[i].length() == 0 || replacementList[i] == null)",
      "info" : "IfStatement[160527-160734]:IfStatement[160831-161038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160685-160734]:Block[160989-161038]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[160707-160716]:ContinueStatement[161011-161020]"
    }, {
      "left" : "tempIndex = text.indexOf(searchList[i], start);",
      "right" : "tempIndex = text.indexOf(searchList[i], start);",
      "info" : "ExpressionStatement[160751-160798]:ExpressionStatement[161055-161102]"
    }, {
      "left" : "if (tempIndex == -1)",
      "right" : "if (tempIndex == -1)",
      "info" : "IfStatement[160877-161178]:IfStatement[161181-161482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160898-160974]:Block[161202-161278]"
    }, {
      "left" : "noMoreMatchesForReplIndex[i] = true;",
      "right" : "noMoreMatchesForReplIndex[i] = true;",
      "info" : "ExpressionStatement[160920-160956]:ExpressionStatement[161224-161260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160980-161178]:Block[161284-161482]"
    }, {
      "left" : "if (textIndex == -1 || tempIndex < textIndex)",
      "right" : "if (textIndex == -1 || tempIndex < textIndex)",
      "info" : "IfStatement[161002-161160]:IfStatement[161306-161464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161048-161160]:Block[161352-161464]"
    }, {
      "left" : "textIndex = tempIndex;",
      "right" : "textIndex = tempIndex;",
      "info" : "ExpressionStatement[161074-161096]:ExpressionStatement[161378-161400]"
    }, {
      "left" : "replaceIndex = i;",
      "right" : "replaceIndex = i;",
      "info" : "ExpressionStatement[161121-161138]:ExpressionStatement[161425-161442]"
    }, {
      "left" : "int textLength = text.length();",
      "right" : "int textLength = text.length();",
      "info" : "VariableDeclarationStatement[161260-161291]:VariableDeclarationStatement[161564-161595]"
    }, {
      "left" : "for (int i = start; i < textLength; i++)",
      "right" : "for (int i = start; i < textLength; i++)",
      "info" : "ForStatement[161300-161392]:ForStatement[161604-161696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161341-161392]:Block[161645-161696]"
    }, {
      "left" : "buf.append(text.charAt(i));",
      "right" : "buf.append(text.charAt(i));",
      "info" : "ExpressionStatement[161355-161382]:ExpressionStatement[161659-161686]"
    }, {
      "left" : "String result = buf.toString();",
      "right" : "String result = buf.toString();",
      "info" : "VariableDeclarationStatement[161401-161432]:VariableDeclarationStatement[161705-161736]"
    }, {
      "left" : "if (!repeat)",
      "right" : "if (!repeat)",
      "info" : "IfStatement[161441-161492]:IfStatement[161745-161796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161454-161492]:Block[161758-161796]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[161468-161482]:ReturnStatement[161772-161786]"
    }, {
      "left" : "return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",
      "right" : "return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",
      "info" : "ReturnStatement[161502-161582]:ReturnStatement[161806-161886]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[162576-162582]:Modifier[162880-162886]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[162583-162589]:Modifier[162887-162893]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[162590-162596]:SimpleType[162894-162900]"
    }, {
      "left" : "replaceChars",
      "right" : "replaceChars",
      "info" : "SimpleName[162597-162609]:SimpleName[162901-162913]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[162610-162620]:SingleVariableDeclaration[162914-162924]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[162622-162637]:SingleVariableDeclaration[162926-162941]"
    }, {
      "left" : "char replaceChar",
      "right" : "char replaceChar",
      "info" : "SingleVariableDeclaration[162639-162655]:SingleVariableDeclaration[162943-162959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162657-162779]:Block[162961-163083]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[162667-162720]:IfStatement[162971-163024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162684-162720]:Block[162988-163024]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[162698-162710]:ReturnStatement[163002-163014]"
    }, {
      "left" : "return str.replace(searchChar, replaceChar);",
      "right" : "return str.replace(searchChar, replaceChar);",
      "info" : "ReturnStatement[162729-162773]:ReturnStatement[163033-163077]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[164487-164493]:Modifier[164791-164797]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[164494-164500]:Modifier[164798-164804]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[164501-164507]:SimpleType[164805-164811]"
    }, {
      "left" : "replaceChars",
      "right" : "replaceChars",
      "info" : "SimpleName[164508-164520]:SimpleName[164812-164824]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[164521-164531]:SingleVariableDeclaration[164825-164835]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[164533-164551]:SingleVariableDeclaration[164837-164855]"
    }, {
      "left" : "String replaceChars",
      "right" : "String replaceChars",
      "info" : "SingleVariableDeclaration[164553-164572]:SingleVariableDeclaration[164857-164876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164574-165422]:Block[164878-165726]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(searchChars))",
      "right" : "if (isEmpty(str) || isEmpty(searchChars))",
      "info" : "IfStatement[164584-164661]:IfStatement[164888-164965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164626-164661]:Block[164930-164965]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[164640-164651]:ReturnStatement[164944-164955]"
    }, {
      "left" : "if (replaceChars == null)",
      "right" : "if (replaceChars == null)",
      "info" : "IfStatement[164670-164741]:IfStatement[164974-165045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164696-164741]:Block[165000-165045]"
    }, {
      "left" : "replaceChars = EMPTY;",
      "right" : "replaceChars = EMPTY;",
      "info" : "ExpressionStatement[164710-164731]:ExpressionStatement[165014-165035]"
    }, {
      "left" : "boolean modified = false;",
      "right" : "boolean modified = false;",
      "info" : "VariableDeclarationStatement[164750-164775]:VariableDeclarationStatement[165054-165079]"
    }, {
      "left" : "int replaceCharsLength = replaceChars.length();",
      "right" : "int replaceCharsLength = replaceChars.length();",
      "info" : "VariableDeclarationStatement[164784-164831]:VariableDeclarationStatement[165088-165135]"
    }, {
      "left" : "int strLength = str.length();",
      "right" : "int strLength = str.length();",
      "info" : "VariableDeclarationStatement[164840-164869]:VariableDeclarationStatement[165144-165173]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(strLength);",
      "right" : "StringBuilder buf = new StringBuilder(strLength);",
      "info" : "VariableDeclarationStatement[164878-164927]:VariableDeclarationStatement[165182-165231]"
    }, {
      "left" : "for (int i = 0; i < strLength; i++)",
      "right" : "for (int i = 0; i < strLength; i++)",
      "info" : "ForStatement[164936-165327]:ForStatement[165240-165631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164972-165327]:Block[165276-165631]"
    }, {
      "left" : "char ch = str.charAt(i);",
      "right" : "char ch = str.charAt(i);",
      "info" : "VariableDeclarationStatement[164986-165010]:VariableDeclarationStatement[165290-165314]"
    }, {
      "left" : "int index = searchChars.indexOf(ch);",
      "right" : "int index = searchChars.indexOf(ch);",
      "info" : "VariableDeclarationStatement[165023-165059]:VariableDeclarationStatement[165327-165363]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[165072-165317]:IfStatement[165376-165621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165088-165264]:Block[165392-165568]"
    }, {
      "left" : "modified = true;",
      "right" : "modified = true;",
      "info" : "ExpressionStatement[165106-165122]:ExpressionStatement[165410-165426]"
    }, {
      "left" : "if (index < replaceCharsLength)",
      "right" : "if (index < replaceCharsLength)",
      "info" : "IfStatement[165139-165250]:IfStatement[165443-165554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165171-165250]:Block[165475-165554]"
    }, {
      "left" : "buf.append(replaceChars.charAt(index));",
      "right" : "buf.append(replaceChars.charAt(index));",
      "info" : "ExpressionStatement[165193-165232]:ExpressionStatement[165497-165536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165270-165317]:Block[165574-165621]"
    }, {
      "left" : "buf.append(ch);",
      "right" : "buf.append(ch);",
      "info" : "ExpressionStatement[165288-165303]:ExpressionStatement[165592-165607]"
    }, {
      "left" : "if (modified)",
      "right" : "if (modified)",
      "info" : "IfStatement[165336-165396]:IfStatement[165640-165700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165350-165396]:Block[165654-165700]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[165364-165386]:ReturnStatement[165668-165690]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[165405-165416]:ReturnStatement[165709-165720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[166938-166944]:Modifier[167242-167248]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[166945-166951]:Modifier[167249-167255]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[166952-166958]:SimpleType[167256-167262]"
    }, {
      "left" : "overlay",
      "right" : "overlay",
      "info" : "SimpleName[166959-166966]:SimpleName[167263-167270]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[166967-166977]:SingleVariableDeclaration[167271-167281]"
    }, {
      "left" : "String overlay",
      "right" : "String overlay",
      "info" : "SingleVariableDeclaration[166979-166993]:SingleVariableDeclaration[167283-167297]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[166995-167004]:SingleVariableDeclaration[167299-167308]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[167006-167013]:SingleVariableDeclaration[167310-167317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167015-167748]:Block[167319-168052]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[167025-167078]:IfStatement[167329-167382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167042-167078]:Block[167346-167382]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[167056-167068]:ReturnStatement[167360-167372]"
    }, {
      "left" : "if (overlay == null)",
      "right" : "if (overlay == null)",
      "info" : "IfStatement[167087-167148]:IfStatement[167391-167452]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167108-167148]:Block[167412-167452]"
    }, {
      "left" : "overlay = EMPTY;",
      "right" : "overlay = EMPTY;",
      "info" : "ExpressionStatement[167122-167138]:ExpressionStatement[167426-167442]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[167157-167180]:VariableDeclarationStatement[167461-167484]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[167189-167238]:IfStatement[167493-167542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167204-167238]:Block[167508-167542]"
    }, {
      "left" : "start = 0;",
      "right" : "start = 0;",
      "info" : "ExpressionStatement[167218-167228]:ExpressionStatement[167522-167532]"
    }, {
      "left" : "if (start > len)",
      "right" : "if (start > len)",
      "info" : "IfStatement[167247-167300]:IfStatement[167551-167604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167264-167300]:Block[167568-167604]"
    }, {
      "left" : "start = len;",
      "right" : "start = len;",
      "info" : "ExpressionStatement[167278-167290]:ExpressionStatement[167582-167594]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[167309-167354]:IfStatement[167613-167658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167322-167354]:Block[167626-167658]"
    }, {
      "left" : "end = 0;",
      "right" : "end = 0;",
      "info" : "ExpressionStatement[167336-167344]:ExpressionStatement[167640-167648]"
    }, {
      "left" : "if (end > len)",
      "right" : "if (end > len)",
      "info" : "IfStatement[167363-167412]:IfStatement[167667-167716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167378-167412]:Block[167682-167716]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[167392-167402]:ExpressionStatement[167696-167706]"
    }, {
      "left" : "if (start > end)",
      "right" : "if (start > end)",
      "info" : "IfStatement[167421-167528]:IfStatement[167725-167832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167438-167528]:Block[167742-167832]"
    }, {
      "left" : "int temp = start;",
      "right" : "int temp = start;",
      "info" : "VariableDeclarationStatement[167452-167469]:VariableDeclarationStatement[167756-167773]"
    }, {
      "left" : "start = end;",
      "right" : "start = end;",
      "info" : "ExpressionStatement[167482-167494]:ExpressionStatement[167786-167798]"
    }, {
      "left" : "end = temp;",
      "right" : "end = temp;",
      "info" : "ExpressionStatement[167507-167518]:ExpressionStatement[167811-167822]"
    }, {
      "left" : "return new StringBuilder(len + start - end + overlay.length() + 1)\n            .append(str.substring(0, start))\n            .append(overlay)\n            .append(str.substring(end))\n            .toString();",
      "right" : "return new StringBuilder(len + start - end + overlay.length() + 1)\n            .append(str.substring(0, start))\n            .append(overlay)\n            .append(str.substring(end))\n            .toString();",
      "info" : "ReturnStatement[167537-167742]:ReturnStatement[167841-168046]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[168897-168903]:Modifier[169201-169207]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[168904-168910]:Modifier[169208-169214]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[168911-168917]:SimpleType[169215-169221]"
    }, {
      "left" : "chomp",
      "right" : "chomp",
      "info" : "SimpleName[168918-168923]:SimpleName[169222-169227]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[168924-168934]:SingleVariableDeclaration[169228-169238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168936-169551]:Block[169240-169855]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[168946-168999]:IfStatement[169250-169303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168964-168999]:Block[169268-169303]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[168978-168989]:ReturnStatement[169282-169293]"
    }, {
      "left" : "if (str.length() == 1)",
      "right" : "if (str.length() == 1)",
      "info" : "IfStatement[169009-169208]:IfStatement[169313-169512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169032-169208]:Block[169336-169512]"
    }, {
      "left" : "char ch = str.charAt(0);",
      "right" : "char ch = str.charAt(0);",
      "info" : "VariableDeclarationStatement[169046-169070]:VariableDeclarationStatement[169350-169374]"
    }, {
      "left" : "if (ch == CharUtils.CR || ch == CharUtils.LF)",
      "right" : "if (ch == CharUtils.CR || ch == CharUtils.LF)",
      "info" : "IfStatement[169083-169174]:IfStatement[169387-169478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169129-169174]:Block[169433-169478]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[169147-169160]:ReturnStatement[169451-169464]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[169187-169198]:ReturnStatement[169491-169502]"
    }, {
      "left" : "int lastIdx = str.length() - 1;",
      "right" : "int lastIdx = str.length() - 1;",
      "info" : "VariableDeclarationStatement[169218-169249]:VariableDeclarationStatement[169522-169553]"
    }, {
      "left" : "char last = str.charAt(lastIdx);",
      "right" : "char last = str.charAt(lastIdx);",
      "info" : "VariableDeclarationStatement[169258-169290]:VariableDeclarationStatement[169562-169594]"
    }, {
      "left" : "if (last == CharUtils.LF)",
      "right" : "if (last == CharUtils.LF)",
      "info" : "IfStatement[169300-169503]:IfStatement[169604-169807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169326-169437]:Block[169630-169741]"
    }, {
      "left" : "if (str.charAt(lastIdx - 1) == CharUtils.CR)",
      "right" : "if (str.charAt(lastIdx - 1) == CharUtils.CR)",
      "info" : "IfStatement[169340-169427]:IfStatement[169644-169731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169385-169427]:Block[169689-169731]"
    }, {
      "left" : "lastIdx--;",
      "right" : "lastIdx--;",
      "info" : "ExpressionStatement[169403-169413]:ExpressionStatement[169707-169717]"
    }, {
      "left" : "if (last != CharUtils.CR)",
      "right" : "if (last != CharUtils.CR)",
      "info" : "IfStatement[169443-169503]:IfStatement[169747-169807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169469-169503]:Block[169773-169807]"
    }, {
      "left" : "lastIdx++;",
      "right" : "lastIdx++;",
      "info" : "ExpressionStatement[169483-169493]:ExpressionStatement[169787-169797]"
    }, {
      "left" : "return str.substring(0, lastIdx);",
      "right" : "return str.substring(0, lastIdx);",
      "info" : "ReturnStatement[169512-169545]:ReturnStatement[169816-169849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[170687-170693]:Modifier[170991-170997]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[170694-170700]:Modifier[170998-171004]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[170701-170707]:SimpleType[171005-171011]"
    }, {
      "left" : "chomp",
      "right" : "chomp",
      "info" : "SimpleName[170708-170713]:SimpleName[171012-171017]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[170714-170724]:SingleVariableDeclaration[171018-171028]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[170726-170742]:SingleVariableDeclaration[171030-171046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170744-170975]:Block[171048-171279]"
    }, {
      "left" : "if (isEmpty(str) || separator == null)",
      "right" : "if (isEmpty(str) || separator == null)",
      "info" : "IfStatement[170754-170828]:IfStatement[171058-171132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170793-170828]:Block[171097-171132]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[170807-170818]:ReturnStatement[171111-171122]"
    }, {
      "left" : "if (str.endsWith(separator))",
      "right" : "if (str.endsWith(separator))",
      "info" : "IfStatement[170837-170949]:IfStatement[171141-171253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170866-170949]:Block[171170-171253]"
    }, {
      "left" : "return str.substring(0, str.length() - separator.length());",
      "right" : "return str.substring(0, str.length() - separator.length());",
      "info" : "ReturnStatement[170880-170939]:ReturnStatement[171184-171243]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[170958-170969]:ReturnStatement[171262-171273]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[171943-171949]:Modifier[172247-172253]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[171950-171956]:Modifier[172254-172260]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[171957-171963]:SimpleType[172261-172267]"
    }, {
      "left" : "chop",
      "right" : "chop",
      "info" : "SimpleName[171964-171968]:SimpleName[172268-172272]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[171969-171979]:SingleVariableDeclaration[172273-172283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171981-172463]:Block[172285-172767]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[171991-172044]:IfStatement[172295-172348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172008-172044]:Block[172312-172348]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[172022-172034]:ReturnStatement[172326-172338]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[172053-172079]:VariableDeclarationStatement[172357-172383]"
    }, {
      "left" : "if (strLen < 2)",
      "right" : "if (strLen < 2)",
      "info" : "IfStatement[172088-172141]:IfStatement[172392-172445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172104-172141]:Block[172408-172445]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[172118-172131]:ReturnStatement[172422-172435]"
    }, {
      "left" : "int lastIdx = strLen - 1;",
      "right" : "int lastIdx = strLen - 1;",
      "info" : "VariableDeclarationStatement[172150-172175]:VariableDeclarationStatement[172454-172479]"
    }, {
      "left" : "String ret = str.substring(0, lastIdx);",
      "right" : "String ret = str.substring(0, lastIdx);",
      "info" : "VariableDeclarationStatement[172184-172223]:VariableDeclarationStatement[172488-172527]"
    }, {
      "left" : "char last = str.charAt(lastIdx);",
      "right" : "char last = str.charAt(lastIdx);",
      "info" : "VariableDeclarationStatement[172232-172264]:VariableDeclarationStatement[172536-172568]"
    }, {
      "left" : "if (last == CharUtils.LF)",
      "right" : "if (last == CharUtils.LF)",
      "info" : "IfStatement[172273-172437]:IfStatement[172577-172741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172299-172437]:Block[172603-172741]"
    }, {
      "left" : "if (ret.charAt(lastIdx - 1) == CharUtils.CR)",
      "right" : "if (ret.charAt(lastIdx - 1) == CharUtils.CR)",
      "info" : "IfStatement[172313-172427]:IfStatement[172617-172731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172358-172427]:Block[172662-172731]"
    }, {
      "left" : "return ret.substring(0, lastIdx - 1);",
      "right" : "return ret.substring(0, lastIdx - 1);",
      "info" : "ReturnStatement[172376-172413]:ReturnStatement[172680-172717]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[172446-172457]:ReturnStatement[172750-172761]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[173318-173324]:Modifier[173622-173628]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[173325-173331]:Modifier[173629-173635]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[173332-173338]:SimpleType[173636-173642]"
    }, {
      "left" : "repeat",
      "right" : "repeat",
      "info" : "SimpleName[173339-173345]:SimpleName[173643-173649]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[173346-173356]:SingleVariableDeclaration[173650-173660]"
    }, {
      "left" : "int repeat",
      "right" : "int repeat",
      "info" : "SingleVariableDeclaration[173358-173368]:SingleVariableDeclaration[173662-173672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173370-174756]:Block[173674-175060]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[173427-173480]:IfStatement[173731-173784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173444-173480]:Block[173748-173784]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[173458-173470]:ReturnStatement[173762-173774]"
    }, {
      "left" : "if (repeat <= 0)",
      "right" : "if (repeat <= 0)",
      "info" : "IfStatement[173489-173543]:IfStatement[173793-173847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173506-173543]:Block[173810-173847]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[173520-173533]:ReturnStatement[173824-173837]"
    }, {
      "left" : "int inputLength = str.length();",
      "right" : "int inputLength = str.length();",
      "info" : "VariableDeclarationStatement[173552-173583]:VariableDeclarationStatement[173856-173887]"
    }, {
      "left" : "if (repeat == 1 || inputLength == 0)",
      "right" : "if (repeat == 1 || inputLength == 0)",
      "info" : "IfStatement[173592-173664]:IfStatement[173896-173968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173629-173664]:Block[173933-173968]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[173643-173654]:ReturnStatement[173947-173958]"
    }, {
      "left" : "if (inputLength == 1 && repeat <= PAD_LIMIT)",
      "right" : "if (inputLength == 1 && repeat <= PAD_LIMIT)",
      "info" : "IfStatement[173673-173780]:IfStatement[173977-174084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173718-173780]:Block[174022-174084]"
    }, {
      "left" : "return padding(repeat, str.charAt(0));",
      "right" : "return padding(repeat, str.charAt(0));",
      "info" : "ReturnStatement[173732-173770]:ReturnStatement[174036-174074]"
    }, {
      "left" : "int outputLength = inputLength * repeat;",
      "right" : "int outputLength = inputLength * repeat;",
      "info" : "VariableDeclarationStatement[173790-173830]:VariableDeclarationStatement[174094-174134]"
    }, {
      "left" : "switch (inputLength) {\n            case 1 :\n                char ch = str.charAt(0);\n                char[] output1 = new char[outputLength];\n                for (int i = repeat - 1; i >= 0; i--) {\n                    output1[i] = ch;\n                }\n                return new String(output1);\n            case 2 :\n                char ch0 = str.charAt(0);\n                char ch1 = str.charAt(1);\n                char[] output2 = new char[outputLength];\n                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {\n                    output2[i] = ch0;\n                    output2[i + 1] = ch1;\n                }\n                return new String(output2);\n            default :\n                StringBuilder buf = new StringBuilder(outputLength);\n                for (int i = 0; i < repeat; i++) {\n                    buf.append(str);\n                }\n                return buf.toString();\n        }",
      "right" : "switch (inputLength) {\n            case 1 :\n                char ch = str.charAt(0);\n                char[] output1 = new char[outputLength];\n                for (int i = repeat - 1; i >= 0; i--) {\n                    output1[i] = ch;\n                }\n                return new String(output1);\n            case 2 :\n                char ch0 = str.charAt(0);\n                char ch1 = str.charAt(1);\n                char[] output2 = new char[outputLength];\n                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {\n                    output2[i] = ch0;\n                    output2[i + 1] = ch1;\n                }\n                return new String(output2);\n            default :\n                StringBuilder buf = new StringBuilder(outputLength);\n                for (int i = 0; i < repeat; i++) {\n                    buf.append(str);\n                }\n                return buf.toString();\n        }",
      "info" : "SwitchStatement[173839-174750]:SwitchStatement[174143-175054]"
    }, {
      "left" : "case 1 :",
      "right" : "case 1 :",
      "info" : "SwitchCase[173874-173882]:SwitchCase[174178-174186]"
    }, {
      "left" : "char ch = str.charAt(0);",
      "right" : "char ch = str.charAt(0);",
      "info" : "VariableDeclarationStatement[173899-173923]:VariableDeclarationStatement[174203-174227]"
    }, {
      "left" : "char[] output1 = new char[outputLength];",
      "right" : "char[] output1 = new char[outputLength];",
      "info" : "VariableDeclarationStatement[173940-173980]:VariableDeclarationStatement[174244-174284]"
    }, {
      "left" : "for (int i = repeat - 1; i >= 0; i--)",
      "right" : "for (int i = repeat - 1; i >= 0; i--)",
      "info" : "ForStatement[173997-174091]:ForStatement[174301-174395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174035-174091]:Block[174339-174395]"
    }, {
      "left" : "output1[i] = ch;",
      "right" : "output1[i] = ch;",
      "info" : "ExpressionStatement[174057-174073]:ExpressionStatement[174361-174377]"
    }, {
      "left" : "return new String(output1);",
      "right" : "return new String(output1);",
      "info" : "ReturnStatement[174108-174135]:ReturnStatement[174412-174439]"
    }, {
      "left" : "case 2 :",
      "right" : "case 2 :",
      "info" : "SwitchCase[174148-174156]:SwitchCase[174452-174460]"
    }, {
      "left" : "char ch0 = str.charAt(0);",
      "right" : "char ch0 = str.charAt(0);",
      "info" : "VariableDeclarationStatement[174173-174198]:VariableDeclarationStatement[174477-174502]"
    }, {
      "left" : "char ch1 = str.charAt(1);",
      "right" : "char ch1 = str.charAt(1);",
      "info" : "VariableDeclarationStatement[174215-174240]:VariableDeclarationStatement[174519-174544]"
    }, {
      "left" : "char[] output2 = new char[outputLength];",
      "right" : "char[] output2 = new char[outputLength];",
      "info" : "VariableDeclarationStatement[174257-174297]:VariableDeclarationStatement[174561-174601]"
    }, {
      "left" : "for (int i = repeat * 2 - 2; i >= 0; i--, i--)",
      "right" : "for (int i = repeat * 2 - 2; i >= 0; i--, i--)",
      "info" : "ForStatement[174314-174460]:ForStatement[174618-174764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174361-174460]:Block[174665-174764]"
    }, {
      "left" : "output2[i] = ch0;",
      "right" : "output2[i] = ch0;",
      "info" : "ExpressionStatement[174383-174400]:ExpressionStatement[174687-174704]"
    }, {
      "left" : "output2[i + 1] = ch1;",
      "right" : "output2[i + 1] = ch1;",
      "info" : "ExpressionStatement[174421-174442]:ExpressionStatement[174725-174746]"
    }, {
      "left" : "return new String(output2);",
      "right" : "return new String(output2);",
      "info" : "ReturnStatement[174477-174504]:ReturnStatement[174781-174808]"
    }, {
      "left" : "default :",
      "right" : "default :",
      "info" : "SwitchCase[174517-174526]:SwitchCase[174821-174830]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(outputLength);",
      "right" : "StringBuilder buf = new StringBuilder(outputLength);",
      "info" : "VariableDeclarationStatement[174543-174595]:VariableDeclarationStatement[174847-174899]"
    }, {
      "left" : "for (int i = 0; i < repeat; i++)",
      "right" : "for (int i = 0; i < repeat; i++)",
      "info" : "ForStatement[174612-174701]:ForStatement[174916-175005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174645-174701]:Block[174949-175005]"
    }, {
      "left" : "buf.append(str);",
      "right" : "buf.append(str);",
      "info" : "ExpressionStatement[174667-174683]:ExpressionStatement[174971-174987]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[174718-174740]:ReturnStatement[175022-175044]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[175557-175563]:Modifier[175861-175867]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[175564-175570]:Modifier[175868-175874]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[175571-175577]:SimpleType[175875-175881]"
    }, {
      "left" : "repeat",
      "right" : "repeat",
      "info" : "SimpleName[175578-175584]:SimpleName[175882-175888]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[175585-175595]:SingleVariableDeclaration[175889-175899]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[175597-175613]:SingleVariableDeclaration[175901-175917]"
    }, {
      "left" : "int repeat",
      "right" : "int repeat",
      "info" : "SingleVariableDeclaration[175615-175625]:SingleVariableDeclaration[175919-175929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175627-175978]:Block[175931-176282]"
    }, {
      "left" : "if(str == null || separator == null)",
      "right" : "if(str == null || separator == null)",
      "info" : "IfStatement[175637-175972]:IfStatement[175941-176276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175674-175725]:Block[175978-176029]"
    }, {
      "left" : "return repeat(str, repeat);",
      "right" : "return repeat(str, repeat);",
      "info" : "ReturnStatement[175688-175715]:ReturnStatement[175992-176019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175731-175972]:Block[176035-176276]"
    }, {
      "left" : "String result = repeat(str + separator, repeat);",
      "right" : "String result = repeat(str + separator, repeat);",
      "info" : "VariableDeclarationStatement[175865-175913]:VariableDeclarationStatement[176169-176217]"
    }, {
      "left" : "return removeEnd(result, separator);",
      "right" : "return removeEnd(result, separator);",
      "info" : "ReturnStatement[175926-175962]:ReturnStatement[176230-176266]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[176923-176930]:Modifier[177227-177234]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[176931-176937]:Modifier[177235-177241]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[176938-176944]:SimpleType[177242-177248]"
    }, {
      "left" : "padding",
      "right" : "padding",
      "info" : "SimpleName[176945-176952]:SimpleName[177249-177256]"
    }, {
      "left" : "int repeat",
      "right" : "int repeat",
      "info" : "SingleVariableDeclaration[176953-176963]:SingleVariableDeclaration[177257-177267]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[176965-176977]:SingleVariableDeclaration[177269-177281]"
    }, {
      "left" : "IndexOutOfBoundsException",
      "right" : "IndexOutOfBoundsException",
      "info" : "SimpleType[176986-177011]:SimpleType[177290-177315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[177012-177311]:Block[177316-177615]"
    }, {
      "left" : "if (repeat < 0)",
      "right" : "if (repeat < 0)",
      "info" : "IfStatement[177022-177141]:IfStatement[177326-177445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[177038-177141]:Block[177342-177445]"
    }, {
      "left" : "throw new IndexOutOfBoundsException(\"Cannot pad a negative amount: \" + repeat);",
      "right" : "throw new IndexOutOfBoundsException(\"Cannot pad a negative amount: \" + repeat);",
      "info" : "ThrowStatement[177052-177131]:ThrowStatement[177356-177435]"
    }, {
      "left" : "final char[] buf = new char[repeat];",
      "right" : "final char[] buf = new char[repeat];",
      "info" : "VariableDeclarationStatement[177150-177186]:VariableDeclarationStatement[177454-177490]"
    }, {
      "left" : "for (int i = 0; i < buf.length; i++)",
      "right" : "for (int i = 0; i < buf.length; i++)",
      "info" : "ForStatement[177195-177273]:ForStatement[177499-177577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[177232-177273]:Block[177536-177577]"
    }, {
      "left" : "buf[i] = padChar;",
      "right" : "buf[i] = padChar;",
      "info" : "ExpressionStatement[177246-177263]:ExpressionStatement[177550-177567]"
    }, {
      "left" : "return new String(buf);",
      "right" : "return new String(buf);",
      "info" : "ReturnStatement[177282-177305]:ReturnStatement[177586-177609]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[178007-178013]:Modifier[178311-178317]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[178014-178020]:Modifier[178318-178324]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[178021-178027]:SimpleType[178325-178331]"
    }, {
      "left" : "rightPad",
      "right" : "rightPad",
      "info" : "SimpleName[178028-178036]:SimpleName[178332-178340]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[178037-178047]:SingleVariableDeclaration[178341-178351]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[178049-178057]:SingleVariableDeclaration[178353-178361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[178059-178107]:Block[178363-178411]"
    }, {
      "left" : "return rightPad(str, size, ' ');",
      "right" : "return rightPad(str, size, ' ');",
      "info" : "ReturnStatement[178069-178101]:ReturnStatement[178373-178405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[178909-178915]:Modifier[179213-179219]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[178916-178922]:Modifier[179220-179226]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[178923-178929]:SimpleType[179227-179233]"
    }, {
      "left" : "rightPad",
      "right" : "rightPad",
      "info" : "SimpleName[178930-178938]:SimpleName[179234-179242]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[178939-178949]:SingleVariableDeclaration[179243-179253]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[178951-178959]:SingleVariableDeclaration[179255-179263]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[178961-178973]:SingleVariableDeclaration[179265-179277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[178975-179342]:Block[179279-179646]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[178985-179038]:IfStatement[179289-179342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179002-179038]:Block[179306-179342]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[179016-179028]:ReturnStatement[179320-179332]"
    }, {
      "left" : "int pads = size - str.length();",
      "right" : "int pads = size - str.length();",
      "info" : "VariableDeclarationStatement[179047-179078]:VariableDeclarationStatement[179351-179382]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[179087-179178]:IfStatement[179391-179482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179102-179178]:Block[179406-179482]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[179116-179127]:ReturnStatement[179420-179431]"
    }, {
      "left" : "if (pads > PAD_LIMIT)",
      "right" : "if (pads > PAD_LIMIT)",
      "info" : "IfStatement[179187-179285]:IfStatement[179491-179589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179209-179285]:Block[179513-179589]"
    }, {
      "left" : "return rightPad(str, size, String.valueOf(padChar));",
      "right" : "return rightPad(str, size, String.valueOf(padChar));",
      "info" : "ReturnStatement[179223-179275]:ReturnStatement[179527-179579]"
    }, {
      "left" : "return str.concat(padding(pads, padChar));",
      "right" : "return str.concat(padding(pads, padChar));",
      "info" : "ReturnStatement[179294-179336]:ReturnStatement[179598-179640]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[180332-180338]:Modifier[180636-180642]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[180339-180345]:Modifier[180643-180649]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[180346-180352]:SimpleType[180650-180656]"
    }, {
      "left" : "rightPad",
      "right" : "rightPad",
      "info" : "SimpleName[180353-180361]:SimpleName[180657-180665]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[180362-180372]:SingleVariableDeclaration[180666-180676]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[180374-180382]:SingleVariableDeclaration[180678-180686]"
    }, {
      "left" : "String padStr",
      "right" : "String padStr",
      "info" : "SingleVariableDeclaration[180384-180397]:SingleVariableDeclaration[180688-180701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180399-181308]:Block[180703-181612]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[180409-180462]:IfStatement[180713-180766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180426-180462]:Block[180730-180766]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[180440-180452]:ReturnStatement[180744-180756]"
    }, {
      "left" : "if (isEmpty(padStr))",
      "right" : "if (isEmpty(padStr))",
      "info" : "IfStatement[180471-180529]:IfStatement[180775-180833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180492-180529]:Block[180796-180833]"
    }, {
      "left" : "padStr = \" \";",
      "right" : "padStr = \" \";",
      "info" : "ExpressionStatement[180506-180519]:ExpressionStatement[180810-180823]"
    }, {
      "left" : "int padLen = padStr.length();",
      "right" : "int padLen = padStr.length();",
      "info" : "VariableDeclarationStatement[180538-180567]:VariableDeclarationStatement[180842-180871]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[180576-180602]:VariableDeclarationStatement[180880-180906]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[180611-180636]:VariableDeclarationStatement[180915-180940]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[180645-180736]:IfStatement[180949-181040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180660-180736]:Block[180964-181040]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[180674-180685]:ReturnStatement[180978-180989]"
    }, {
      "left" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "right" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "info" : "IfStatement[180745-180852]:IfStatement[181049-181156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180783-180852]:Block[181087-181156]"
    }, {
      "left" : "return rightPad(str, size, padStr.charAt(0));",
      "right" : "return rightPad(str, size, padStr.charAt(0));",
      "info" : "ReturnStatement[180797-180842]:ReturnStatement[181101-181146]"
    }, {
      "left" : "if (pads == padLen)",
      "right" : "if (pads == padLen)",
      "info" : "IfStatement[180862-181302]:IfStatement[181166-181606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180882-180932]:Block[181186-181236]"
    }, {
      "left" : "return str.concat(padStr);",
      "right" : "return str.concat(padStr);",
      "info" : "ReturnStatement[180896-180922]:ReturnStatement[181200-181226]"
    }, {
      "left" : "if (pads < padLen)",
      "right" : "if (pads < padLen)",
      "info" : "IfStatement[180938-181302]:IfStatement[181242-181606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180957-181026]:Block[181261-181330]"
    }, {
      "left" : "return str.concat(padStr.substring(0, pads));",
      "right" : "return str.concat(padStr.substring(0, pads));",
      "info" : "ReturnStatement[180971-181016]:ReturnStatement[181275-181320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181032-181302]:Block[181336-181606]"
    }, {
      "left" : "char[] padding = new char[pads];",
      "right" : "char[] padding = new char[pads];",
      "info" : "VariableDeclarationStatement[181046-181078]:VariableDeclarationStatement[181350-181382]"
    }, {
      "left" : "char[] padChars = padStr.toCharArray();",
      "right" : "char[] padChars = padStr.toCharArray();",
      "info" : "VariableDeclarationStatement[181091-181130]:VariableDeclarationStatement[181395-181434]"
    }, {
      "left" : "for (int i = 0; i < pads; i++)",
      "right" : "for (int i = 0; i < pads; i++)",
      "info" : "ForStatement[181143-181240]:ForStatement[181447-181544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181174-181240]:Block[181478-181544]"
    }, {
      "left" : "padding[i] = padChars[i % padLen];",
      "right" : "padding[i] = padChars[i % padLen];",
      "info" : "ExpressionStatement[181192-181226]:ExpressionStatement[181496-181530]"
    }, {
      "left" : "return str.concat(new String(padding));",
      "right" : "return str.concat(new String(padding));",
      "info" : "ReturnStatement[181253-181292]:ReturnStatement[181557-181596]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[181996-182002]:Modifier[182300-182306]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[182003-182009]:Modifier[182307-182313]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[182010-182016]:SimpleType[182314-182320]"
    }, {
      "left" : "leftPad",
      "right" : "leftPad",
      "info" : "SimpleName[182017-182024]:SimpleName[182321-182328]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[182025-182035]:SingleVariableDeclaration[182329-182339]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[182037-182045]:SingleVariableDeclaration[182341-182349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[182047-182094]:Block[182351-182398]"
    }, {
      "left" : "return leftPad(str, size, ' ');",
      "right" : "return leftPad(str, size, ' ');",
      "info" : "ReturnStatement[182057-182088]:ReturnStatement[182361-182392]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[182869-182875]:Modifier[183173-183179]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[182876-182882]:Modifier[183180-183186]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[182883-182889]:SimpleType[183187-183193]"
    }, {
      "left" : "leftPad",
      "right" : "leftPad",
      "info" : "SimpleName[182890-182897]:SimpleName[183194-183201]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[182898-182908]:SingleVariableDeclaration[183202-183212]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[182910-182918]:SingleVariableDeclaration[183214-183222]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[182920-182932]:SingleVariableDeclaration[183224-183236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[182934-183300]:Block[183238-183604]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[182944-182997]:IfStatement[183248-183301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[182961-182997]:Block[183265-183301]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[182975-182987]:ReturnStatement[183279-183291]"
    }, {
      "left" : "int pads = size - str.length();",
      "right" : "int pads = size - str.length();",
      "info" : "VariableDeclarationStatement[183006-183037]:VariableDeclarationStatement[183310-183341]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[183046-183137]:IfStatement[183350-183441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183061-183137]:Block[183365-183441]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[183075-183086]:ReturnStatement[183379-183390]"
    }, {
      "left" : "if (pads > PAD_LIMIT)",
      "right" : "if (pads > PAD_LIMIT)",
      "info" : "IfStatement[183146-183243]:IfStatement[183450-183547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183168-183243]:Block[183472-183547]"
    }, {
      "left" : "return leftPad(str, size, String.valueOf(padChar));",
      "right" : "return leftPad(str, size, String.valueOf(padChar));",
      "info" : "ReturnStatement[183182-183233]:ReturnStatement[183486-183537]"
    }, {
      "left" : "return padding(pads, padChar).concat(str);",
      "right" : "return padding(pads, padChar).concat(str);",
      "info" : "ReturnStatement[183252-183294]:ReturnStatement[183556-183598]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[184260-184266]:Modifier[184564-184570]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[184267-184273]:Modifier[184571-184577]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[184274-184280]:SimpleType[184578-184584]"
    }, {
      "left" : "leftPad",
      "right" : "leftPad",
      "info" : "SimpleName[184281-184288]:SimpleName[184585-184592]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[184289-184299]:SingleVariableDeclaration[184593-184603]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[184301-184309]:SingleVariableDeclaration[184605-184613]"
    }, {
      "left" : "String padStr",
      "right" : "String padStr",
      "info" : "SingleVariableDeclaration[184311-184324]:SingleVariableDeclaration[184615-184628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184326-185234]:Block[184630-185538]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[184336-184389]:IfStatement[184640-184693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184353-184389]:Block[184657-184693]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[184367-184379]:ReturnStatement[184671-184683]"
    }, {
      "left" : "if (isEmpty(padStr))",
      "right" : "if (isEmpty(padStr))",
      "info" : "IfStatement[184398-184456]:IfStatement[184702-184760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184419-184456]:Block[184723-184760]"
    }, {
      "left" : "padStr = \" \";",
      "right" : "padStr = \" \";",
      "info" : "ExpressionStatement[184433-184446]:ExpressionStatement[184737-184750]"
    }, {
      "left" : "int padLen = padStr.length();",
      "right" : "int padLen = padStr.length();",
      "info" : "VariableDeclarationStatement[184465-184494]:VariableDeclarationStatement[184769-184798]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[184503-184529]:VariableDeclarationStatement[184807-184833]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[184538-184563]:VariableDeclarationStatement[184842-184867]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[184572-184663]:IfStatement[184876-184967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184587-184663]:Block[184891-184967]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[184601-184612]:ReturnStatement[184905-184916]"
    }, {
      "left" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "right" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "info" : "IfStatement[184672-184778]:IfStatement[184976-185082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184710-184778]:Block[185014-185082]"
    }, {
      "left" : "return leftPad(str, size, padStr.charAt(0));",
      "right" : "return leftPad(str, size, padStr.charAt(0));",
      "info" : "ReturnStatement[184724-184768]:ReturnStatement[185028-185072]"
    }, {
      "left" : "if (pads == padLen)",
      "right" : "if (pads == padLen)",
      "info" : "IfStatement[184788-185228]:IfStatement[185092-185532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184808-184858]:Block[185112-185162]"
    }, {
      "left" : "return padStr.concat(str);",
      "right" : "return padStr.concat(str);",
      "info" : "ReturnStatement[184822-184848]:ReturnStatement[185126-185152]"
    }, {
      "left" : "if (pads < padLen)",
      "right" : "if (pads < padLen)",
      "info" : "IfStatement[184864-185228]:IfStatement[185168-185532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184883-184952]:Block[185187-185256]"
    }, {
      "left" : "return padStr.substring(0, pads).concat(str);",
      "right" : "return padStr.substring(0, pads).concat(str);",
      "info" : "ReturnStatement[184897-184942]:ReturnStatement[185201-185246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184958-185228]:Block[185262-185532]"
    }, {
      "left" : "char[] padding = new char[pads];",
      "right" : "char[] padding = new char[pads];",
      "info" : "VariableDeclarationStatement[184972-185004]:VariableDeclarationStatement[185276-185308]"
    }, {
      "left" : "char[] padChars = padStr.toCharArray();",
      "right" : "char[] padChars = padStr.toCharArray();",
      "info" : "VariableDeclarationStatement[185017-185056]:VariableDeclarationStatement[185321-185360]"
    }, {
      "left" : "for (int i = 0; i < pads; i++)",
      "right" : "for (int i = 0; i < pads; i++)",
      "info" : "ForStatement[185069-185166]:ForStatement[185373-185470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185100-185166]:Block[185404-185470]"
    }, {
      "left" : "padding[i] = padChars[i % padLen];",
      "right" : "padding[i] = padChars[i % padLen];",
      "info" : "ExpressionStatement[185118-185152]:ExpressionStatement[185422-185456]"
    }, {
      "left" : "return new String(padding).concat(str);",
      "right" : "return new String(padding).concat(str);",
      "info" : "ReturnStatement[185179-185218]:ReturnStatement[185483-185522]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[185598-185604]:Modifier[185902-185908]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[185605-185611]:Modifier[185909-185915]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[185612-185615]:PrimitiveType[185916-185919]"
    }, {
      "left" : "length",
      "right" : "length",
      "info" : "SimpleName[185616-185622]:SimpleName[185920-185926]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[185623-185638]:SingleVariableDeclaration[185927-185942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185640-185683]:Block[185944-185987]"
    }, {
      "left" : "return CharSequenceUtils.length(cs);",
      "right" : "return CharSequenceUtils.length(cs);",
      "info" : "ReturnStatement[185644-185680]:ReturnStatement[185948-185984]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[186694-186700]:Modifier[186998-187004]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[186701-186707]:Modifier[187005-187011]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[186708-186714]:SimpleType[187012-187018]"
    }, {
      "left" : "center",
      "right" : "center",
      "info" : "SimpleName[186715-186721]:SimpleName[187019-187025]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[186722-186732]:SingleVariableDeclaration[187026-187036]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[186734-186742]:SingleVariableDeclaration[187038-187046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[186744-186790]:Block[187048-187094]"
    }, {
      "left" : "return center(str, size, ' ');",
      "right" : "return center(str, size, ' ');",
      "info" : "ReturnStatement[186754-186784]:ReturnStatement[187058-187088]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[187824-187830]:Modifier[188128-188134]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[187831-187837]:Modifier[188135-188141]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[187838-187844]:SimpleType[188142-188148]"
    }, {
      "left" : "center",
      "right" : "center",
      "info" : "SimpleName[187845-187851]:SimpleName[188149-188155]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[187852-187862]:SingleVariableDeclaration[188156-188166]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[187864-187872]:SingleVariableDeclaration[188168-188176]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[187874-187886]:SingleVariableDeclaration[188178-188190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187888-188217]:Block[188192-188521]"
    }, {
      "left" : "if (str == null || size <= 0)",
      "right" : "if (str == null || size <= 0)",
      "info" : "IfStatement[187898-187963]:IfStatement[188202-188267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187928-187963]:Block[188232-188267]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[187942-187953]:ReturnStatement[188246-188257]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[187972-187998]:VariableDeclarationStatement[188276-188302]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[188007-188032]:VariableDeclarationStatement[188311-188336]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[188041-188091]:IfStatement[188345-188395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[188056-188091]:Block[188360-188395]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[188070-188081]:ReturnStatement[188374-188385]"
    }, {
      "left" : "str = leftPad(str, strLen + pads / 2, padChar);",
      "right" : "str = leftPad(str, strLen + pads / 2, padChar);",
      "info" : "ExpressionStatement[188100-188147]:ExpressionStatement[188404-188451]"
    }, {
      "left" : "str = rightPad(str, size, padChar);",
      "right" : "str = rightPad(str, size, padChar);",
      "info" : "ExpressionStatement[188156-188191]:ExpressionStatement[188460-188495]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[188200-188211]:ReturnStatement[188504-188515]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[189441-189447]:Modifier[189745-189751]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[189448-189454]:Modifier[189752-189758]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[189455-189461]:SimpleType[189759-189765]"
    }, {
      "left" : "center",
      "right" : "center",
      "info" : "SimpleName[189462-189468]:SimpleName[189766-189772]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[189469-189479]:SingleVariableDeclaration[189773-189783]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[189481-189489]:SingleVariableDeclaration[189785-189793]"
    }, {
      "left" : "String padStr",
      "right" : "String padStr",
      "info" : "SingleVariableDeclaration[189491-189504]:SingleVariableDeclaration[189795-189808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189506-189900]:Block[189810-190204]"
    }, {
      "left" : "if (str == null || size <= 0)",
      "right" : "if (str == null || size <= 0)",
      "info" : "IfStatement[189516-189581]:IfStatement[189820-189885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189546-189581]:Block[189850-189885]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[189560-189571]:ReturnStatement[189864-189875]"
    }, {
      "left" : "if (isEmpty(padStr))",
      "right" : "if (isEmpty(padStr))",
      "info" : "IfStatement[189590-189648]:IfStatement[189894-189952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189611-189648]:Block[189915-189952]"
    }, {
      "left" : "padStr = \" \";",
      "right" : "padStr = \" \";",
      "info" : "ExpressionStatement[189625-189638]:ExpressionStatement[189929-189942]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[189657-189683]:VariableDeclarationStatement[189961-189987]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[189692-189717]:VariableDeclarationStatement[189996-190021]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[189726-189776]:IfStatement[190030-190080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189741-189776]:Block[190045-190080]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[189755-189766]:ReturnStatement[190059-190070]"
    }, {
      "left" : "str = leftPad(str, strLen + pads / 2, padStr);",
      "right" : "str = leftPad(str, strLen + pads / 2, padStr);",
      "info" : "ExpressionStatement[189785-189831]:ExpressionStatement[190089-190135]"
    }, {
      "left" : "str = rightPad(str, size, padStr);",
      "right" : "str = rightPad(str, size, padStr);",
      "info" : "ExpressionStatement[189840-189874]:ExpressionStatement[190144-190178]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[189883-189894]:ReturnStatement[190187-190198]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[190847-190853]:Modifier[191151-191157]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[190854-190860]:Modifier[191158-191164]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[190861-190867]:SimpleType[191165-191171]"
    }, {
      "left" : "upperCase",
      "right" : "upperCase",
      "info" : "SimpleName[190868-190877]:SimpleName[191172-191181]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[190878-190888]:SingleVariableDeclaration[191182-191192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190890-190993]:Block[191194-191297]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[190900-190953]:IfStatement[191204-191257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190917-190953]:Block[191221-191257]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[190931-190943]:ReturnStatement[191235-191247]"
    }, {
      "left" : "return str.toUpperCase();",
      "right" : "return str.toUpperCase();",
      "info" : "ReturnStatement[190962-190987]:ReturnStatement[191266-191291]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[191649-191655]:Modifier[191953-191959]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[191656-191662]:Modifier[191960-191966]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[191663-191669]:SimpleType[191967-191973]"
    }, {
      "left" : "upperCase",
      "right" : "upperCase",
      "info" : "SimpleName[191670-191679]:SimpleName[191974-191983]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[191680-191690]:SingleVariableDeclaration[191984-191994]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[191692-191705]:SingleVariableDeclaration[191996-192009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191707-191816]:Block[192011-192120]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[191717-191770]:IfStatement[192021-192074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191734-191770]:Block[192038-192074]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[191748-191760]:ReturnStatement[192052-192064]"
    }, {
      "left" : "return str.toUpperCase(locale);",
      "right" : "return str.toUpperCase(locale);",
      "info" : "ReturnStatement[191779-191810]:ReturnStatement[192083-192114]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[192662-192668]:Modifier[192966-192972]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[192669-192675]:Modifier[192973-192979]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[192676-192682]:SimpleType[192980-192986]"
    }, {
      "left" : "lowerCase",
      "right" : "lowerCase",
      "info" : "SimpleName[192683-192692]:SimpleName[192987-192996]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[192693-192703]:SingleVariableDeclaration[192997-193007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[192705-192808]:Block[193009-193112]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[192715-192768]:IfStatement[193019-193072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[192732-192768]:Block[193036-193072]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[192746-192758]:ReturnStatement[193050-193062]"
    }, {
      "left" : "return str.toLowerCase();",
      "right" : "return str.toLowerCase();",
      "info" : "ReturnStatement[192777-192802]:ReturnStatement[193081-193106]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[193464-193470]:Modifier[193768-193774]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[193471-193477]:Modifier[193775-193781]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[193478-193484]:SimpleType[193782-193788]"
    }, {
      "left" : "lowerCase",
      "right" : "lowerCase",
      "info" : "SimpleName[193485-193494]:SimpleName[193789-193798]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[193495-193505]:SingleVariableDeclaration[193799-193809]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[193507-193520]:SingleVariableDeclaration[193811-193824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193522-193631]:Block[193826-193935]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[193532-193585]:IfStatement[193836-193889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193549-193585]:Block[193853-193889]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[193563-193575]:ReturnStatement[193867-193879]"
    }, {
      "left" : "return str.toLowerCase(locale);",
      "right" : "return str.toLowerCase(locale);",
      "info" : "ReturnStatement[193594-193625]:ReturnStatement[193898-193929]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[194410-194416]:Modifier[194714-194720]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[194417-194423]:Modifier[194721-194727]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[194424-194430]:SimpleType[194728-194734]"
    }, {
      "left" : "capitalize",
      "right" : "capitalize",
      "info" : "SimpleName[194431-194441]:SimpleName[194735-194745]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[194442-194457]:SingleVariableDeclaration[194746-194761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194459-194816]:Block[194763-195120]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[194469-194522]:IfStatement[194773-194826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194486-194522]:Block[194790-194826]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[194500-194512]:ReturnStatement[194804-194816]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[194531-194542]:VariableDeclarationStatement[194835-194846]"
    }, {
      "left" : "if ((strLen = cs.length()) == 0)",
      "right" : "if ((strLen = cs.length()) == 0)",
      "info" : "IfStatement[194551-194629]:IfStatement[194855-194933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194584-194629]:Block[194888-194933]"
    }, {
      "left" : "return cs.toString();",
      "right" : "return cs.toString();",
      "info" : "ReturnStatement[194598-194619]:ReturnStatement[194902-194923]"
    }, {
      "left" : "return new StringBuilder(strLen)\n            .append(Character.toTitleCase(cs.charAt(0)))\n            .append(CharSequenceUtils.subSequence(cs, 1))\n            .toString();",
      "right" : "return new StringBuilder(strLen)\n            .append(Character.toTitleCase(cs.charAt(0)))\n            .append(CharSequenceUtils.subSequence(cs, 1))\n            .toString();",
      "info" : "ReturnStatement[194638-194810]:ReturnStatement[194942-195114]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[195623-195629]:Modifier[195927-195933]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[195630-195636]:Modifier[195934-195940]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[195637-195643]:SimpleType[195941-195947]"
    }, {
      "left" : "uncapitalize",
      "right" : "uncapitalize",
      "info" : "SimpleName[195644-195656]:SimpleName[195948-195960]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[195657-195672]:SingleVariableDeclaration[195961-195976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195674-196031]:Block[195978-196335]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[195684-195737]:IfStatement[195988-196041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195701-195737]:Block[196005-196041]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[195715-195727]:ReturnStatement[196019-196031]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[195746-195757]:VariableDeclarationStatement[196050-196061]"
    }, {
      "left" : "if ((strLen = cs.length()) == 0)",
      "right" : "if ((strLen = cs.length()) == 0)",
      "info" : "IfStatement[195766-195844]:IfStatement[196070-196148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195799-195844]:Block[196103-196148]"
    }, {
      "left" : "return cs.toString();",
      "right" : "return cs.toString();",
      "info" : "ReturnStatement[195813-195834]:ReturnStatement[196117-196138]"
    }, {
      "left" : "return new StringBuilder(strLen)\n            .append(Character.toLowerCase(cs.charAt(0)))\n            .append(CharSequenceUtils.subSequence(cs, 1))\n            .toString();",
      "right" : "return new StringBuilder(strLen)\n            .append(Character.toLowerCase(cs.charAt(0)))\n            .append(CharSequenceUtils.subSequence(cs, 1))\n            .toString();",
      "info" : "ReturnStatement[195853-196025]:ReturnStatement[196157-196329]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[197134-197140]:Modifier[197438-197444]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[197141-197147]:Modifier[197445-197451]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[197148-197154]:SimpleType[197452-197458]"
    }, {
      "left" : "swapCase",
      "right" : "swapCase",
      "info" : "SimpleName[197155-197163]:SimpleName[197459-197467]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[197164-197174]:SingleVariableDeclaration[197468-197478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[197176-197833]:Block[197480-198137]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[197186-197197]:VariableDeclarationStatement[197490-197501]"
    }, {
      "left" : "if (str == null || (strLen = str.length()) == 0)",
      "right" : "if (str == null || (strLen = str.length()) == 0)",
      "info" : "IfStatement[197206-197290]:IfStatement[197510-197594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[197255-197290]:Block[197559-197594]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[197269-197280]:ReturnStatement[197573-197584]"
    }, {
      "left" : "StringBuilder buffer = new StringBuilder(strLen);",
      "right" : "StringBuilder buffer = new StringBuilder(strLen);",
      "info" : "VariableDeclarationStatement[197299-197348]:VariableDeclarationStatement[197603-197652]"
    }, {
      "left" : "char ch = 0;",
      "right" : "char ch = 0;",
      "info" : "VariableDeclarationStatement[197358-197370]:VariableDeclarationStatement[197662-197674]"
    }, {
      "left" : "for (int i = 0; i < strLen; i++)",
      "right" : "for (int i = 0; i < strLen; i++)",
      "info" : "ForStatement[197379-197793]:ForStatement[197683-198097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[197412-197793]:Block[197716-198097]"
    }, {
      "left" : "ch = str.charAt(i);",
      "right" : "ch = str.charAt(i);",
      "info" : "ExpressionStatement[197426-197445]:ExpressionStatement[197730-197749]"
    }, {
      "left" : "if (Character.isUpperCase(ch))",
      "right" : "if (Character.isUpperCase(ch))",
      "info" : "IfStatement[197458-197752]:IfStatement[197762-198056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[197489-197552]:Block[197793-197856]"
    }, {
      "left" : "ch = Character.toLowerCase(ch);",
      "right" : "ch = Character.toLowerCase(ch);",
      "info" : "ExpressionStatement[197507-197538]:ExpressionStatement[197811-197842]"
    }, {
      "left" : "if (Character.isTitleCase(ch))",
      "right" : "if (Character.isTitleCase(ch))",
      "info" : "IfStatement[197558-197752]:IfStatement[197862-198056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[197589-197652]:Block[197893-197956]"
    }, {
      "left" : "ch = Character.toLowerCase(ch);",
      "right" : "ch = Character.toLowerCase(ch);",
      "info" : "ExpressionStatement[197607-197638]:ExpressionStatement[197911-197942]"
    }, {
      "left" : "if (Character.isLowerCase(ch))",
      "right" : "if (Character.isLowerCase(ch))",
      "info" : "IfStatement[197658-197752]:IfStatement[197962-198056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[197689-197752]:Block[197993-198056]"
    }, {
      "left" : "ch = Character.toUpperCase(ch);",
      "right" : "ch = Character.toUpperCase(ch);",
      "info" : "ExpressionStatement[197707-197738]:ExpressionStatement[198011-198042]"
    }, {
      "left" : "buffer.append(ch);",
      "right" : "buffer.append(ch);",
      "info" : "ExpressionStatement[197765-197783]:ExpressionStatement[198069-198087]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[197802-197827]:ReturnStatement[198106-198131]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[198713-198719]:Modifier[199017-199023]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[198720-198726]:Modifier[199024-199030]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[198727-198730]:PrimitiveType[199031-199034]"
    }, {
      "left" : "countMatches",
      "right" : "countMatches",
      "info" : "SimpleName[198731-198743]:SimpleName[199035-199047]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[198744-198754]:SingleVariableDeclaration[199048-199058]"
    }, {
      "left" : "String sub",
      "right" : "String sub",
      "info" : "SingleVariableDeclaration[198756-198766]:SingleVariableDeclaration[199060-199070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198768-199048]:Block[199072-199352]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(sub))",
      "right" : "if (isEmpty(str) || isEmpty(sub))",
      "info" : "IfStatement[198778-198845]:IfStatement[199082-199149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198812-198845]:Block[199116-199149]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[198826-198835]:ReturnStatement[199130-199139]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[198854-198868]:VariableDeclarationStatement[199158-199172]"
    }, {
      "left" : "int idx = 0;",
      "right" : "int idx = 0;",
      "info" : "VariableDeclarationStatement[198877-198889]:VariableDeclarationStatement[199181-199193]"
    }, {
      "left" : "while ((idx = str.indexOf(sub, idx)) != INDEX_NOT_FOUND)",
      "right" : "while ((idx = str.indexOf(sub, idx)) != INDEX_NOT_FOUND)",
      "info" : "WhileStatement[198898-199020]:WhileStatement[199202-199324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198955-199020]:Block[199259-199324]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[198969-198977]:ExpressionStatement[199273-199281]"
    }, {
      "left" : "idx += sub.length();",
      "right" : "idx += sub.length();",
      "info" : "ExpressionStatement[198990-199010]:ExpressionStatement[199294-199314]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[199029-199042]:ReturnStatement[199333-199346]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[199816-199822]:Modifier[200120-200126]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[199823-199829]:Modifier[200127-200133]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[199830-199837]:PrimitiveType[200134-200141]"
    }, {
      "left" : "isAlpha",
      "right" : "isAlpha",
      "info" : "SimpleName[199838-199845]:SimpleName[200142-200149]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[199846-199861]:SingleVariableDeclaration[200150-200165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199863-200137]:Block[200167-200441]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[199873-199926]:IfStatement[200177-200230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199889-199926]:Block[200193-200230]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[199903-199916]:ReturnStatement[200207-200220]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[199935-199956]:VariableDeclarationStatement[200239-200260]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[199965-200110]:ForStatement[200269-200414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199994-200110]:Block[200298-200414]"
    }, {
      "left" : "if (Character.isLetter(cs.charAt(i)) == false)",
      "right" : "if (Character.isLetter(cs.charAt(i)) == false)",
      "info" : "IfStatement[200008-200100]:IfStatement[200312-200404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[200055-200100]:Block[200359-200404]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[200073-200086]:ReturnStatement[200377-200390]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[200119-200131]:ReturnStatement[200423-200435]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[200920-200926]:Modifier[201224-201230]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[200927-200933]:Modifier[201231-201237]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[200934-200941]:PrimitiveType[201238-201245]"
    }, {
      "left" : "isAlphaSpace",
      "right" : "isAlphaSpace",
      "info" : "SimpleName[200942-200954]:SimpleName[201246-201258]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[200955-200970]:SingleVariableDeclaration[201259-201274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[200972-201273]:Block[201276-201577]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[200982-201035]:IfStatement[201286-201339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[200998-201035]:Block[201302-201339]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[201012-201025]:ReturnStatement[201316-201329]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[201044-201065]:VariableDeclarationStatement[201348-201369]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[201074-201246]:ForStatement[201378-201550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[201103-201246]:Block[201407-201550]"
    }, {
      "left" : "if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "right" : "if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "info" : "IfStatement[201117-201236]:IfStatement[201421-201540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[201191-201236]:Block[201495-201540]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[201209-201222]:ReturnStatement[201513-201526]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[201255-201267]:ReturnStatement[201559-201571]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[202059-202065]:Modifier[202363-202369]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[202066-202072]:Modifier[202370-202376]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[202073-202080]:PrimitiveType[202377-202384]"
    }, {
      "left" : "isAlphanumeric",
      "right" : "isAlphanumeric",
      "info" : "SimpleName[202081-202095]:SimpleName[202385-202399]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[202096-202111]:SingleVariableDeclaration[202400-202415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[202113-202394]:Block[202417-202698]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[202123-202176]:IfStatement[202427-202480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[202139-202176]:Block[202443-202480]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[202153-202166]:ReturnStatement[202457-202470]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[202185-202206]:VariableDeclarationStatement[202489-202510]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[202215-202367]:ForStatement[202519-202671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[202244-202367]:Block[202548-202671]"
    }, {
      "left" : "if (Character.isLetterOrDigit(cs.charAt(i)) == false)",
      "right" : "if (Character.isLetterOrDigit(cs.charAt(i)) == false)",
      "info" : "IfStatement[202258-202357]:IfStatement[202562-202661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[202312-202357]:Block[202616-202661]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[202330-202343]:ReturnStatement[202634-202647]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[202376-202388]:ReturnStatement[202680-202692]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[203218-203224]:Modifier[203522-203528]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[203225-203231]:Modifier[203529-203535]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[203232-203239]:PrimitiveType[203536-203543]"
    }, {
      "left" : "isAlphanumericSpace",
      "right" : "isAlphanumericSpace",
      "info" : "SimpleName[203240-203259]:SimpleName[203544-203563]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[203260-203275]:SingleVariableDeclaration[203564-203579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203277-203585]:Block[203581-203889]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[203287-203340]:IfStatement[203591-203644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203303-203340]:Block[203607-203644]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[203317-203330]:ReturnStatement[203621-203634]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[203349-203370]:VariableDeclarationStatement[203653-203674]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[203379-203558]:ForStatement[203683-203862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203408-203558]:Block[203712-203862]"
    }, {
      "left" : "if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "right" : "if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "info" : "IfStatement[203422-203548]:IfStatement[203726-203852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203503-203548]:Block[203807-203852]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[203521-203534]:ReturnStatement[203825-203838]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[203567-203579]:ReturnStatement[203871-203883]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[204639-204645]:Modifier[204943-204949]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[204646-204652]:Modifier[204950-204956]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[204653-204660]:PrimitiveType[204957-204964]"
    }, {
      "left" : "isAsciiPrintable",
      "right" : "isAsciiPrintable",
      "info" : "SimpleName[204661-204677]:SimpleName[204965-204981]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[204678-204693]:SingleVariableDeclaration[204982-204997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204695-204977]:Block[204999-205281]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[204705-204758]:IfStatement[205009-205062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204721-204758]:Block[205025-205062]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[204735-204748]:ReturnStatement[205039-205052]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[204767-204788]:VariableDeclarationStatement[205071-205092]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[204797-204950]:ForStatement[205101-205254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204826-204950]:Block[205130-205254]"
    }, {
      "left" : "if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false)",
      "right" : "if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false)",
      "info" : "IfStatement[204840-204940]:IfStatement[205144-205244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204895-204940]:Block[205199-205244]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[204913-204926]:ReturnStatement[205217-205230]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[204959-204971]:ReturnStatement[205263-205275]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[205809-205815]:Modifier[206113-206119]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[205816-205822]:Modifier[206120-206126]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[205823-205830]:PrimitiveType[206127-206134]"
    }, {
      "left" : "isNumeric",
      "right" : "isNumeric",
      "info" : "SimpleName[205831-205840]:SimpleName[206135-206144]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[205841-205856]:SingleVariableDeclaration[206145-206160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[205858-206131]:Block[206162-206435]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[205868-205921]:IfStatement[206172-206225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[205884-205921]:Block[206188-206225]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[205898-205911]:ReturnStatement[206202-206215]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[205930-205951]:VariableDeclarationStatement[206234-206255]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[205960-206104]:ForStatement[206264-206408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[205989-206104]:Block[206293-206408]"
    }, {
      "left" : "if (Character.isDigit(cs.charAt(i)) == false)",
      "right" : "if (Character.isDigit(cs.charAt(i)) == false)",
      "info" : "IfStatement[206003-206094]:IfStatement[206307-206398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[206049-206094]:Block[206353-206398]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[206067-206080]:ReturnStatement[206371-206384]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[206113-206125]:ReturnStatement[206417-206429]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[207013-207019]:Modifier[207317-207323]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[207020-207026]:Modifier[207324-207330]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[207027-207034]:PrimitiveType[207331-207338]"
    }, {
      "left" : "isNumericSpace",
      "right" : "isNumericSpace",
      "info" : "SimpleName[207035-207049]:SimpleName[207339-207353]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[207050-207065]:SingleVariableDeclaration[207354-207369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207067-207367]:Block[207371-207671]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[207077-207130]:IfStatement[207381-207434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207093-207130]:Block[207397-207434]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[207107-207120]:ReturnStatement[207411-207424]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[207139-207160]:VariableDeclarationStatement[207443-207464]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[207169-207340]:ForStatement[207473-207644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207198-207340]:Block[207502-207644]"
    }, {
      "left" : "if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "right" : "if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "info" : "IfStatement[207212-207330]:IfStatement[207516-207634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207285-207330]:Block[207589-207634]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[207303-207316]:ReturnStatement[207607-207620]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[207349-207361]:ReturnStatement[207653-207665]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[208080-208086]:Modifier[208384-208390]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[208087-208093]:Modifier[208391-208397]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[208094-208101]:PrimitiveType[208398-208405]"
    }, {
      "left" : "isWhitespace",
      "right" : "isWhitespace",
      "info" : "SimpleName[208102-208114]:SimpleName[208406-208418]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[208115-208130]:SingleVariableDeclaration[208419-208434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208132-208412]:Block[208436-208716]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[208142-208195]:IfStatement[208446-208499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208158-208195]:Block[208462-208499]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[208172-208185]:ReturnStatement[208476-208489]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[208204-208225]:VariableDeclarationStatement[208508-208529]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[208234-208385]:ForStatement[208538-208689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208263-208385]:Block[208567-208689]"
    }, {
      "left" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
      "right" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
      "info" : "IfStatement[208277-208375]:IfStatement[208581-208679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208330-208375]:Block[208634-208679]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[208348-208361]:ReturnStatement[208652-208665]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[208394-208406]:ReturnStatement[208698-208710]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[209108-209114]:Modifier[209412-209418]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[209115-209121]:Modifier[209419-209425]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[209122-209129]:PrimitiveType[209426-209433]"
    }, {
      "left" : "isAllLowerCase",
      "right" : "isAllLowerCase",
      "info" : "SimpleName[209130-209144]:SimpleName[209434-209448]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[209145-209160]:SingleVariableDeclaration[209449-209464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209162-209454]:Block[209466-209758]"
    }, {
      "left" : "if (cs == null || isEmpty(cs))",
      "right" : "if (cs == null || isEmpty(cs))",
      "info" : "IfStatement[209172-209240]:IfStatement[209476-209544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209203-209240]:Block[209507-209544]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[209217-209230]:ReturnStatement[209521-209534]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[209249-209270]:VariableDeclarationStatement[209553-209574]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[209279-209427]:ForStatement[209583-209731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209308-209427]:Block[209612-209731]"
    }, {
      "left" : "if (Character.isLowerCase(cs.charAt(i)) == false)",
      "right" : "if (Character.isLowerCase(cs.charAt(i)) == false)",
      "info" : "IfStatement[209322-209417]:IfStatement[209626-209721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209372-209417]:Block[209676-209721]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[209390-209403]:ReturnStatement[209694-209707]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[209436-209448]:ReturnStatement[209740-209752]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[210143-210149]:Modifier[210447-210453]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[210150-210156]:Modifier[210454-210460]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[210157-210164]:PrimitiveType[210461-210468]"
    }, {
      "left" : "isAllUpperCase",
      "right" : "isAllUpperCase",
      "info" : "SimpleName[210165-210179]:SimpleName[210469-210483]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[210180-210195]:SingleVariableDeclaration[210484-210499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210197-210489]:Block[210501-210793]"
    }, {
      "left" : "if (cs == null || isEmpty(cs))",
      "right" : "if (cs == null || isEmpty(cs))",
      "info" : "IfStatement[210207-210275]:IfStatement[210511-210579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210238-210275]:Block[210542-210579]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[210252-210265]:ReturnStatement[210556-210569]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[210284-210305]:VariableDeclarationStatement[210588-210609]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[210314-210462]:ForStatement[210618-210766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210343-210462]:Block[210647-210766]"
    }, {
      "left" : "if (Character.isUpperCase(cs.charAt(i)) == false)",
      "right" : "if (Character.isUpperCase(cs.charAt(i)) == false)",
      "info" : "IfStatement[210357-210452]:IfStatement[210661-210756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210407-210452]:Block[210711-210756]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[210425-210438]:ReturnStatement[210729-210742]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[210471-210483]:ReturnStatement[210775-210787]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[211124-211130]:Modifier[211428-211434]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[211131-211137]:Modifier[211435-211441]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[211138-211144]:SimpleType[211442-211448]"
    }, {
      "left" : "defaultString",
      "right" : "defaultString",
      "info" : "SimpleName[211145-211158]:SimpleName[211449-211462]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[211159-211169]:SingleVariableDeclaration[211463-211473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[211171-211220]:Block[211475-211524]"
    }, {
      "left" : "return str == null ? EMPTY : str;",
      "right" : "return str == null ? EMPTY : str;",
      "info" : "ReturnStatement[211181-211214]:ReturnStatement[211485-211518]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[211909-211915]:Modifier[212213-212219]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[211916-211922]:Modifier[212220-212226]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[211923-211929]:SimpleType[212227-212233]"
    }, {
      "left" : "defaultString",
      "right" : "defaultString",
      "info" : "SimpleName[211930-211943]:SimpleName[212234-212247]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[211944-211954]:SingleVariableDeclaration[212248-212258]"
    }, {
      "left" : "String defaultStr",
      "right" : "String defaultStr",
      "info" : "SingleVariableDeclaration[211956-211973]:SingleVariableDeclaration[212260-212277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[211975-212029]:Block[212279-212333]"
    }, {
      "left" : "return str == null ? defaultStr : str;",
      "right" : "return str == null ? defaultStr : str;",
      "info" : "ReturnStatement[211985-212023]:ReturnStatement[212289-212327]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[212777-212783]:Modifier[213081-213087]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[212784-212790]:Modifier[213088-213094]"
    }, {
      "left" : "CharSequence",
      "right" : "CharSequence",
      "info" : "SimpleType[212791-212803]:SimpleType[213095-213107]"
    }, {
      "left" : "defaultIfEmpty",
      "right" : "defaultIfEmpty",
      "info" : "SimpleName[212804-212818]:SimpleName[213108-213122]"
    }, {
      "left" : "CharSequence str",
      "right" : "CharSequence str",
      "info" : "SingleVariableDeclaration[212819-212835]:SingleVariableDeclaration[213123-213139]"
    }, {
      "left" : "CharSequence defaultStr",
      "right" : "CharSequence defaultStr",
      "info" : "SingleVariableDeclaration[212837-212860]:SingleVariableDeclaration[213141-213164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[212862-212929]:Block[213166-213233]"
    }, {
      "left" : "return StringUtils.isEmpty(str) ? defaultStr : str;",
      "right" : "return StringUtils.isEmpty(str) ? defaultStr : str;",
      "info" : "ReturnStatement[212872-212923]:ReturnStatement[213176-213227]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[213485-213491]:Modifier[213789-213795]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[213492-213498]:Modifier[213796-213802]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[213499-213505]:SimpleType[213803-213809]"
    }, {
      "left" : "reverse",
      "right" : "reverse",
      "info" : "SimpleName[213506-213513]:SimpleName[213810-213817]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[213514-213524]:SingleVariableDeclaration[213818-213828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213526-213653]:Block[213830-213957]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[213536-213589]:IfStatement[213840-213893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213553-213589]:Block[213857-213893]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[213567-213579]:ReturnStatement[213871-213883]"
    }, {
      "left" : "return CharSequenceUtils.reverse(str).toString();",
      "right" : "return CharSequenceUtils.reverse(str).toString();",
      "info" : "ReturnStatement[213598-213647]:ReturnStatement[213902-213951]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[214405-214411]:Modifier[214709-214715]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[214412-214418]:Modifier[214716-214722]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[214419-214425]:SimpleType[214723-214729]"
    }, {
      "left" : "reverseDelimited",
      "right" : "reverseDelimited",
      "info" : "SimpleName[214426-214442]:SimpleName[214730-214746]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[214443-214453]:SingleVariableDeclaration[214747-214757]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[214455-214473]:SingleVariableDeclaration[214759-214777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[214475-214779]:Block[214779-215083]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[214485-214538]:IfStatement[214789-214842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[214502-214538]:Block[214806-214842]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[214516-214528]:ReturnStatement[214820-214832]"
    }, {
      "left" : "String[] strs = split(str, separatorChar);",
      "right" : "String[] strs = split(str, separatorChar);",
      "info" : "VariableDeclarationStatement[214655-214697]:VariableDeclarationStatement[214959-215001]"
    }, {
      "left" : "ArrayUtils.reverse(strs);",
      "right" : "ArrayUtils.reverse(strs);",
      "info" : "ExpressionStatement[214706-214731]:ExpressionStatement[215010-215035]"
    }, {
      "left" : "return join(strs, separatorChar);",
      "right" : "return join(strs, separatorChar);",
      "info" : "ReturnStatement[214740-214773]:ReturnStatement[215044-215077]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[216271-216277]:Modifier[216575-216581]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[216278-216284]:Modifier[216582-216588]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[216285-216291]:SimpleType[216589-216595]"
    }, {
      "left" : "abbreviate",
      "right" : "abbreviate",
      "info" : "SimpleName[216292-216302]:SimpleName[216596-216606]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[216303-216313]:SingleVariableDeclaration[216607-216617]"
    }, {
      "left" : "int maxWidth",
      "right" : "int maxWidth",
      "info" : "SingleVariableDeclaration[216315-216327]:SingleVariableDeclaration[216619-216631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[216329-216381]:Block[216633-216685]"
    }, {
      "left" : "return abbreviate(str, 0, maxWidth);",
      "right" : "return abbreviate(str, 0, maxWidth);",
      "info" : "ReturnStatement[216339-216375]:ReturnStatement[216643-216679]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[218288-218294]:Modifier[218592-218598]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[218295-218301]:Modifier[218599-218605]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[218302-218308]:SimpleType[218606-218612]"
    }, {
      "left" : "abbreviate",
      "right" : "abbreviate",
      "info" : "SimpleName[218309-218319]:SimpleName[218613-218623]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[218320-218330]:SingleVariableDeclaration[218624-218634]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[218332-218342]:SingleVariableDeclaration[218636-218646]"
    }, {
      "left" : "int maxWidth",
      "right" : "int maxWidth",
      "info" : "SingleVariableDeclaration[218344-218356]:SingleVariableDeclaration[218648-218660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218358-219316]:Block[218662-219620]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[218368-218421]:IfStatement[218672-218725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218385-218421]:Block[218689-218725]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[218399-218411]:ReturnStatement[218703-218715]"
    }, {
      "left" : "if (maxWidth < 4)",
      "right" : "if (maxWidth < 4)",
      "info" : "IfStatement[218430-218542]:IfStatement[218734-218846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218448-218542]:Block[218752-218846]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Minimum abbreviation width is 4\");",
      "right" : "throw new IllegalArgumentException(\"Minimum abbreviation width is 4\");",
      "info" : "ThrowStatement[218462-218532]:ThrowStatement[218766-218836]"
    }, {
      "left" : "if (str.length() <= maxWidth)",
      "right" : "if (str.length() <= maxWidth)",
      "info" : "IfStatement[218551-218616]:IfStatement[218855-218920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218581-218616]:Block[218885-218920]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[218595-218606]:ReturnStatement[218899-218910]"
    }, {
      "left" : "if (offset > str.length())",
      "right" : "if (offset > str.length())",
      "info" : "IfStatement[218625-218698]:IfStatement[218929-219002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218652-218698]:Block[218956-219002]"
    }, {
      "left" : "offset = str.length();",
      "right" : "offset = str.length();",
      "info" : "ExpressionStatement[218666-218688]:ExpressionStatement[218970-218992]"
    }, {
      "left" : "if ((str.length() - offset) < (maxWidth - 3))",
      "right" : "if ((str.length() - offset) < (maxWidth - 3))",
      "info" : "IfStatement[218707-218816]:IfStatement[219011-219120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218753-218816]:Block[219057-219120]"
    }, {
      "left" : "offset = str.length() - (maxWidth - 3);",
      "right" : "offset = str.length() - (maxWidth - 3);",
      "info" : "ExpressionStatement[218767-218806]:ExpressionStatement[219071-219110]"
    }, {
      "left" : "final String abrevMarker = \"...\";",
      "right" : "final String abrevMarker = \"...\";",
      "info" : "VariableDeclarationStatement[218825-218858]:VariableDeclarationStatement[219129-219162]"
    }, {
      "left" : "if (offset <= 4)",
      "right" : "if (offset <= 4)",
      "info" : "IfStatement[218861-218954]:IfStatement[219165-219258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218878-218954]:Block[219182-219258]"
    }, {
      "left" : "return str.substring(0, maxWidth - 3) + abrevMarker;",
      "right" : "return str.substring(0, maxWidth - 3) + abrevMarker;",
      "info" : "ReturnStatement[218892-218944]:ReturnStatement[219196-219248]"
    }, {
      "left" : "if (maxWidth < 7)",
      "right" : "if (maxWidth < 7)",
      "info" : "IfStatement[218963-219087]:IfStatement[219267-219391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218981-219087]:Block[219285-219391]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Minimum abbreviation width with offset is 7\");",
      "right" : "throw new IllegalArgumentException(\"Minimum abbreviation width with offset is 7\");",
      "info" : "ThrowStatement[218995-219077]:ThrowStatement[219299-219381]"
    }, {
      "left" : "if ((offset + (maxWidth - 3)) < str.length())",
      "right" : "if ((offset + (maxWidth - 3)) < str.length())",
      "info" : "IfStatement[219096-219235]:IfStatement[219400-219539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[219142-219235]:Block[219446-219539]"
    }, {
      "left" : "return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",
      "right" : "return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",
      "info" : "ReturnStatement[219156-219225]:ReturnStatement[219460-219529]"
    }, {
      "left" : "return abrevMarker + str.substring(str.length() - (maxWidth - 3));",
      "right" : "return abrevMarker + str.substring(str.length() - (maxWidth - 3));",
      "info" : "ReturnStatement[219244-219310]:ReturnStatement[219548-219614]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[220829-220835]:Modifier[221133-221139]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[220836-220842]:Modifier[221140-221146]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[220843-220849]:SimpleType[221147-221153]"
    }, {
      "left" : "abbreviateMiddle",
      "right" : "abbreviateMiddle",
      "info" : "SimpleName[220850-220866]:SimpleName[221154-221170]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[220867-220877]:SingleVariableDeclaration[221171-221181]"
    }, {
      "left" : "String middle",
      "right" : "String middle",
      "info" : "SingleVariableDeclaration[220879-220892]:SingleVariableDeclaration[221183-221196]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[220894-220904]:SingleVariableDeclaration[221198-221208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[220906-221511]:Block[221210-221815]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(middle))",
      "right" : "if (isEmpty(str) || isEmpty(middle))",
      "info" : "IfStatement[220916-220988]:IfStatement[221220-221292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[220953-220988]:Block[221257-221292]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[220967-220978]:ReturnStatement[221271-221282]"
    }, {
      "left" : "if (length >= str.length() || length < (middle.length()+2))",
      "right" : "if (length >= str.length() || length < (middle.length()+2))",
      "info" : "IfStatement[221004-221099]:IfStatement[221308-221403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221064-221099]:Block[221368-221403]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[221078-221089]:ReturnStatement[221382-221393]"
    }, {
      "left" : "int targetSting = length-middle.length();",
      "right" : "int targetSting = length-middle.length();",
      "info" : "VariableDeclarationStatement[221109-221150]:VariableDeclarationStatement[221413-221454]"
    }, {
      "left" : "int startOffset = targetSting/2+targetSting%2;",
      "right" : "int startOffset = targetSting/2+targetSting%2;",
      "info" : "VariableDeclarationStatement[221159-221205]:VariableDeclarationStatement[221463-221509]"
    }, {
      "left" : "int endOffset = str.length()-targetSting/2;",
      "right" : "int endOffset = str.length()-targetSting/2;",
      "info" : "VariableDeclarationStatement[221214-221257]:VariableDeclarationStatement[221518-221561]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder(length);",
      "right" : "StringBuilder builder = new StringBuilder(length);",
      "info" : "VariableDeclarationStatement[221275-221325]:VariableDeclarationStatement[221579-221629]"
    }, {
      "left" : "builder.append(str.substring(0,startOffset));",
      "right" : "builder.append(str.substring(0,startOffset));",
      "info" : "ExpressionStatement[221334-221379]:ExpressionStatement[221638-221683]"
    }, {
      "left" : "builder.append(middle);",
      "right" : "builder.append(middle);",
      "info" : "ExpressionStatement[221388-221411]:ExpressionStatement[221692-221715]"
    }, {
      "left" : "builder.append(str.substring(endOffset));",
      "right" : "builder.append(str.substring(endOffset));",
      "info" : "ExpressionStatement[221420-221461]:ExpressionStatement[221724-221765]"
    }, {
      "left" : "return builder.toString();",
      "right" : "return builder.toString();",
      "info" : "ReturnStatement[221479-221505]:ReturnStatement[221783-221809]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[222617-222623]:Modifier[222921-222927]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[222624-222630]:Modifier[222928-222934]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[222631-222637]:SimpleType[222935-222941]"
    }, {
      "left" : "difference",
      "right" : "difference",
      "info" : "SimpleName[222638-222648]:SimpleName[222942-222952]"
    }, {
      "left" : "String str1",
      "right" : "String str1",
      "info" : "SingleVariableDeclaration[222649-222660]:SingleVariableDeclaration[222953-222964]"
    }, {
      "left" : "String str2",
      "right" : "String str2",
      "info" : "SingleVariableDeclaration[222662-222673]:SingleVariableDeclaration[222966-222977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222675-222964]:Block[222979-223268]"
    }, {
      "left" : "if (str1 == null)",
      "right" : "if (str1 == null)",
      "info" : "IfStatement[222685-222739]:IfStatement[222989-223043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222703-222739]:Block[223007-223043]"
    }, {
      "left" : "return str2;",
      "right" : "return str2;",
      "info" : "ReturnStatement[222717-222729]:ReturnStatement[223021-223033]"
    }, {
      "left" : "if (str2 == null)",
      "right" : "if (str2 == null)",
      "info" : "IfStatement[222748-222802]:IfStatement[223052-223106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222766-222802]:Block[223070-223106]"
    }, {
      "left" : "return str1;",
      "right" : "return str1;",
      "info" : "ReturnStatement[222780-222792]:ReturnStatement[223084-223096]"
    }, {
      "left" : "int at = indexOfDifference(str1, str2);",
      "right" : "int at = indexOfDifference(str1, str2);",
      "info" : "VariableDeclarationStatement[222811-222850]:VariableDeclarationStatement[223115-223154]"
    }, {
      "left" : "if (at == INDEX_NOT_FOUND)",
      "right" : "if (at == INDEX_NOT_FOUND)",
      "info" : "IfStatement[222859-222923]:IfStatement[223163-223227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222886-222923]:Block[223190-223227]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[222900-222913]:ReturnStatement[223204-223217]"
    }, {
      "left" : "return str2.substring(at);",
      "right" : "return str2.substring(at);",
      "info" : "ReturnStatement[222932-222958]:ReturnStatement[223236-223262]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[223899-223905]:Modifier[224203-224209]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[223906-223912]:Modifier[224210-224216]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[223913-223916]:PrimitiveType[224217-224220]"
    }, {
      "left" : "indexOfDifference",
      "right" : "indexOfDifference",
      "info" : "SimpleName[223917-223934]:SimpleName[224221-224238]"
    }, {
      "left" : "CharSequence cs1",
      "right" : "CharSequence cs1",
      "info" : "SingleVariableDeclaration[223935-223951]:SingleVariableDeclaration[224239-224255]"
    }, {
      "left" : "CharSequence cs2",
      "right" : "CharSequence cs2",
      "info" : "SingleVariableDeclaration[223953-223969]:SingleVariableDeclaration[224257-224273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223971-224417]:Block[224275-224721]"
    }, {
      "left" : "if (cs1 == cs2)",
      "right" : "if (cs1 == cs2)",
      "info" : "IfStatement[223981-224044]:IfStatement[224285-224348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223997-224044]:Block[224301-224348]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[224011-224034]:ReturnStatement[224315-224338]"
    }, {
      "left" : "if (cs1 == null || cs2 == null)",
      "right" : "if (cs1 == null || cs2 == null)",
      "info" : "IfStatement[224053-224118]:IfStatement[224357-224422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[224085-224118]:Block[224389-224422]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[224099-224108]:ReturnStatement[224403-224412]"
    }, {
      "left" : "int i;",
      "right" : "int i;",
      "info" : "VariableDeclarationStatement[224127-224133]:VariableDeclarationStatement[224431-224437]"
    }, {
      "left" : "for (i = 0; i < cs1.length() && i < cs2.length(); ++i)",
      "right" : "for (i = 0; i < cs1.length() && i < cs2.length(); ++i)",
      "info" : "ForStatement[224142-224295]:ForStatement[224446-224599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[224197-224295]:Block[224501-224599]"
    }, {
      "left" : "if (cs1.charAt(i) != cs2.charAt(i))",
      "right" : "if (cs1.charAt(i) != cs2.charAt(i))",
      "info" : "IfStatement[224211-224285]:IfStatement[224515-224589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[224247-224285]:Block[224551-224589]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[224265-224271]:BreakStatement[224569-224575]"
    }, {
      "left" : "if (i < cs2.length() || i < cs1.length())",
      "right" : "if (i < cs2.length() || i < cs1.length())",
      "info" : "IfStatement[224304-224379]:IfStatement[224608-224683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[224346-224379]:Block[224650-224683]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[224360-224369]:ReturnStatement[224664-224673]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[224388-224411]:ReturnStatement[224692-224715]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[226071-226077]:Modifier[226375-226381]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[226078-226084]:Modifier[226382-226388]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[226085-226088]:PrimitiveType[226389-226392]"
    }, {
      "left" : "indexOfDifference",
      "right" : "indexOfDifference",
      "info" : "SimpleName[226089-226106]:SimpleName[226393-226410]"
    }, {
      "left" : "CharSequence[] css",
      "right" : "CharSequence[] css",
      "info" : "SingleVariableDeclaration[226107-226125]:SingleVariableDeclaration[226411-226429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226127-228234]:Block[226431-228538]"
    }, {
      "left" : "if (css == null || css.length <= 1)",
      "right" : "if (css == null || css.length <= 1)",
      "info" : "IfStatement[226137-226220]:IfStatement[226441-226524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226173-226220]:Block[226477-226524]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[226187-226210]:ReturnStatement[226491-226514]"
    }, {
      "left" : "boolean anyStringNull = false;",
      "right" : "boolean anyStringNull = false;",
      "info" : "VariableDeclarationStatement[226229-226259]:VariableDeclarationStatement[226533-226563]"
    }, {
      "left" : "boolean allStringsNull = true;",
      "right" : "boolean allStringsNull = true;",
      "info" : "VariableDeclarationStatement[226268-226298]:VariableDeclarationStatement[226572-226602]"
    }, {
      "left" : "int arrayLen = css.length;",
      "right" : "int arrayLen = css.length;",
      "info" : "VariableDeclarationStatement[226307-226333]:VariableDeclarationStatement[226611-226637]"
    }, {
      "left" : "int shortestStrLen = Integer.MAX_VALUE;",
      "right" : "int shortestStrLen = Integer.MAX_VALUE;",
      "info" : "VariableDeclarationStatement[226342-226381]:VariableDeclarationStatement[226646-226685]"
    }, {
      "left" : "int longestStrLen = 0;",
      "right" : "int longestStrLen = 0;",
      "info" : "VariableDeclarationStatement[226390-226412]:VariableDeclarationStatement[226694-226716]"
    }, {
      "left" : "for (int i = 0; i < arrayLen; i++)",
      "right" : "for (int i = 0; i < arrayLen; i++)",
      "info" : "ForStatement[226607-226986]:ForStatement[226911-227290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226642-226986]:Block[226946-227290]"
    }, {
      "left" : "if (css[i] == null)",
      "right" : "if (css[i] == null)",
      "info" : "IfStatement[226656-226976]:IfStatement[226960-227280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226676-226765]:Block[226980-227069]"
    }, {
      "left" : "anyStringNull = true;",
      "right" : "anyStringNull = true;",
      "info" : "ExpressionStatement[226694-226715]:ExpressionStatement[226998-227019]"
    }, {
      "left" : "shortestStrLen = 0;",
      "right" : "shortestStrLen = 0;",
      "info" : "ExpressionStatement[226732-226751]:ExpressionStatement[227036-227055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226771-226976]:Block[227075-227280]"
    }, {
      "left" : "allStringsNull = false;",
      "right" : "allStringsNull = false;",
      "info" : "ExpressionStatement[226789-226812]:ExpressionStatement[227093-227116]"
    }, {
      "left" : "shortestStrLen = Math.min(css[i].length(), shortestStrLen);",
      "right" : "shortestStrLen = Math.min(css[i].length(), shortestStrLen);",
      "info" : "ExpressionStatement[226829-226888]:ExpressionStatement[227133-227192]"
    }, {
      "left" : "longestStrLen = Math.max(css[i].length(), longestStrLen);",
      "right" : "longestStrLen = Math.max(css[i].length(), longestStrLen);",
      "info" : "ExpressionStatement[226905-226962]:ExpressionStatement[227209-227266]"
    }, {
      "left" : "if (allStringsNull || (longestStrLen == 0 && !anyStringNull))",
      "right" : "if (allStringsNull || (longestStrLen == 0 && !anyStringNull))",
      "info" : "IfStatement[227062-227171]:IfStatement[227366-227475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227124-227171]:Block[227428-227475]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[227138-227161]:ReturnStatement[227442-227465]"
    }, {
      "left" : "if (shortestStrLen == 0)",
      "right" : "if (shortestStrLen == 0)",
      "info" : "IfStatement[227249-227307]:IfStatement[227553-227611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227274-227307]:Block[227578-227611]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[227288-227297]:ReturnStatement[227592-227601]"
    }, {
      "left" : "int firstDiff = -1;",
      "right" : "int firstDiff = -1;",
      "info" : "VariableDeclarationStatement[227391-227410]:VariableDeclarationStatement[227695-227714]"
    }, {
      "left" : "for (int stringPos = 0; stringPos < shortestStrLen; stringPos++)",
      "right" : "for (int stringPos = 0; stringPos < shortestStrLen; stringPos++)",
      "info" : "ForStatement[227419-227872]:ForStatement[227723-228176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227484-227872]:Block[227788-228176]"
    }, {
      "left" : "char comparisonChar = css[0].charAt(stringPos);",
      "right" : "char comparisonChar = css[0].charAt(stringPos);",
      "info" : "VariableDeclarationStatement[227498-227545]:VariableDeclarationStatement[227802-227849]"
    }, {
      "left" : "for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++)",
      "right" : "for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++)",
      "info" : "ForStatement[227558-227790]:ForStatement[227862-228094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227614-227790]:Block[227918-228094]"
    }, {
      "left" : "if (css[arrayPos].charAt(stringPos) != comparisonChar)",
      "right" : "if (css[arrayPos].charAt(stringPos) != comparisonChar)",
      "info" : "IfStatement[227632-227776]:IfStatement[227936-228080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227687-227776]:Block[227991-228080]"
    }, {
      "left" : "firstDiff = stringPos;",
      "right" : "firstDiff = stringPos;",
      "info" : "ExpressionStatement[227709-227731]:ExpressionStatement[228013-228035]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[227752-227758]:BreakStatement[228056-228062]"
    }, {
      "left" : "if (firstDiff != -1)",
      "right" : "if (firstDiff != -1)",
      "info" : "IfStatement[227803-227862]:IfStatement[228107-228166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227824-227862]:Block[228128-228166]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[227842-227848]:BreakStatement[228146-228152]"
    }, {
      "left" : "if (firstDiff == -1 && shortestStrLen != longestStrLen)",
      "right" : "if (firstDiff == -1 && shortestStrLen != longestStrLen)",
      "info" : "IfStatement[227882-228202]:IfStatement[228186-228506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227938-228202]:Block[228242-228506]"
    }, {
      "left" : "return shortestStrLen;",
      "right" : "return shortestStrLen;",
      "info" : "ReturnStatement[228170-228192]:ReturnStatement[228474-228496]"
    }, {
      "left" : "return firstDiff;",
      "right" : "return firstDiff;",
      "info" : "ReturnStatement[228211-228228]:ReturnStatement[228515-228532]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[230022-230028]:Modifier[230326-230332]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[230029-230035]:Modifier[230333-230339]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[230036-230042]:SimpleType[230340-230346]"
    }, {
      "left" : "getCommonPrefix",
      "right" : "getCommonPrefix",
      "info" : "SimpleName[230043-230058]:SimpleName[230347-230362]"
    }, {
      "left" : "String[] strs",
      "right" : "String[] strs",
      "info" : "SingleVariableDeclaration[230059-230072]:SingleVariableDeclaration[230363-230376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[230074-230704]:Block[230378-231008]"
    }, {
      "left" : "if (strs == null || strs.length == 0)",
      "right" : "if (strs == null || strs.length == 0)",
      "info" : "IfStatement[230084-230159]:IfStatement[230388-230463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[230122-230159]:Block[230426-230463]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[230136-230149]:ReturnStatement[230440-230453]"
    }, {
      "left" : "int smallestIndexOfDiff = indexOfDifference(strs);",
      "right" : "int smallestIndexOfDiff = indexOfDifference(strs);",
      "info" : "VariableDeclarationStatement[230168-230218]:VariableDeclarationStatement[230472-230522]"
    }, {
      "left" : "if (smallestIndexOfDiff == INDEX_NOT_FOUND)",
      "right" : "if (smallestIndexOfDiff == INDEX_NOT_FOUND)",
      "info" : "IfStatement[230227-230698]:IfStatement[230531-231002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[230271-230431]:Block[230575-230735]"
    }, {
      "left" : "if (strs[0] == null)",
      "right" : "if (strs[0] == null)",
      "info" : "IfStatement[230327-230393]:IfStatement[230631-230697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[230348-230393]:Block[230652-230697]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[230366-230379]:ReturnStatement[230670-230683]"
    }, {
      "left" : "return strs[0];",
      "right" : "return strs[0];",
      "info" : "ReturnStatement[230406-230421]:ReturnStatement[230710-230725]"
    }, {
      "left" : "if (smallestIndexOfDiff == 0)",
      "right" : "if (smallestIndexOfDiff == 0)",
      "info" : "IfStatement[230437-230698]:IfStatement[230741-231002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[230467-230559]:Block[230771-230863]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[230536-230549]:ReturnStatement[230840-230853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[230565-230698]:Block[230869-231002]"
    }, {
      "left" : "return strs[0].substring(0, smallestIndexOfDiff);",
      "right" : "return strs[0].substring(0, smallestIndexOfDiff);",
      "info" : "ReturnStatement[230639-230688]:ReturnStatement[230943-230992]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[232676-232682]:Modifier[232980-232986]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[232683-232689]:Modifier[232987-232993]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[232690-232693]:PrimitiveType[232994-232997]"
    }, {
      "left" : "getLevenshteinDistance",
      "right" : "getLevenshteinDistance",
      "info" : "SimpleName[232694-232716]:SimpleName[232998-233020]"
    }, {
      "left" : "CharSequence s",
      "right" : "CharSequence s",
      "info" : "SingleVariableDeclaration[232717-232731]:SingleVariableDeclaration[233021-233035]"
    }, {
      "left" : "CharSequence t",
      "right" : "CharSequence t",
      "info" : "SingleVariableDeclaration[232733-232747]:SingleVariableDeclaration[233037-233051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[232749-235592]:Block[233053-235896]"
    }, {
      "left" : "if (s == null || t == null)",
      "right" : "if (s == null || t == null)",
      "info" : "IfStatement[232759-232874]:IfStatement[233063-233178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[232787-232874]:Block[233091-233178]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Strings must not be null\");",
      "right" : "throw new IllegalArgumentException(\"Strings must not be null\");",
      "info" : "ThrowStatement[232801-232864]:ThrowStatement[233105-233168]"
    }, {
      "left" : "int n = s.length();",
      "right" : "int n = s.length();",
      "info" : "VariableDeclarationStatement[234092-234111]:VariableDeclarationStatement[234396-234415]"
    }, {
      "left" : "int m = t.length();",
      "right" : "int m = t.length();",
      "info" : "VariableDeclarationStatement[234135-234154]:VariableDeclarationStatement[234439-234458]"
    }, {
      "left" : "if (n == 0)",
      "right" : "if (n == 0)",
      "info" : "IfStatement[234179-234275]:IfStatement[234483-234579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[234191-234224]:Block[234495-234528]"
    }, {
      "left" : "return m;",
      "right" : "return m;",
      "info" : "ReturnStatement[234205-234214]:ReturnStatement[234509-234518]"
    }, {
      "left" : "if (m == 0)",
      "right" : "if (m == 0)",
      "info" : "IfStatement[234230-234275]:IfStatement[234534-234579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[234242-234275]:Block[234546-234579]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[234256-234265]:ReturnStatement[234560-234569]"
    }, {
      "left" : "if (n > m)",
      "right" : "if (n > m)",
      "info" : "IfStatement[234285-234486]:IfStatement[234589-234790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[234296-234486]:Block[234600-234790]"
    }, {
      "left" : "CharSequence tmp = s;",
      "right" : "CharSequence tmp = s;",
      "info" : "VariableDeclarationStatement[234368-234389]:VariableDeclarationStatement[234672-234693]"
    }, {
      "left" : "s = t;",
      "right" : "s = t;",
      "info" : "ExpressionStatement[234402-234408]:ExpressionStatement[234706-234712]"
    }, {
      "left" : "t = tmp;",
      "right" : "t = tmp;",
      "info" : "ExpressionStatement[234421-234429]:ExpressionStatement[234725-234733]"
    }, {
      "left" : "n = m;",
      "right" : "n = m;",
      "info" : "ExpressionStatement[234442-234448]:ExpressionStatement[234746-234752]"
    }, {
      "left" : "m = t.length();",
      "right" : "m = t.length();",
      "info" : "ExpressionStatement[234461-234476]:ExpressionStatement[234765-234780]"
    }, {
      "left" : "int p[] = new int[n+1];",
      "right" : "int p[] = new int[n+1];",
      "info" : "VariableDeclarationStatement[234496-234519]:VariableDeclarationStatement[234800-234823]"
    }, {
      "left" : "int d[] = new int[n+1];",
      "right" : "int d[] = new int[n+1];",
      "info" : "VariableDeclarationStatement[234566-234589]:VariableDeclarationStatement[234870-234893]"
    }, {
      "left" : "int _d[];",
      "right" : "int _d[];",
      "info" : "VariableDeclarationStatement[234626-234635]:VariableDeclarationStatement[234930-234939]"
    }, {
      "left" : "int i;",
      "right" : "int i;",
      "info" : "VariableDeclarationStatement[234729-234735]:VariableDeclarationStatement[235033-235039]"
    }, {
      "left" : "int j;",
      "right" : "int j;",
      "info" : "VariableDeclarationStatement[234766-234772]:VariableDeclarationStatement[235070-235076]"
    }, {
      "left" : "char t_j;",
      "right" : "char t_j;",
      "info" : "VariableDeclarationStatement[234804-234813]:VariableDeclarationStatement[235108-235117]"
    }, {
      "left" : "int cost;",
      "right" : "int cost;",
      "info" : "VariableDeclarationStatement[234845-234854]:VariableDeclarationStatement[235149-235158]"
    }, {
      "left" : "for (i = 0; i<=n; i++)",
      "right" : "for (i = 0; i<=n; i++)",
      "info" : "ForStatement[234872-234928]:ForStatement[235176-235232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[234895-234928]:Block[235199-235232]"
    }, {
      "left" : "p[i] = i;",
      "right" : "p[i] = i;",
      "info" : "ExpressionStatement[234909-234918]:ExpressionStatement[235213-235222]"
    }, {
      "left" : "for (j = 1; j<=m; j++)",
      "right" : "for (j = 1; j<=m; j++)",
      "info" : "ForStatement[234938-235434]:ForStatement[235242-235738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[234961-235434]:Block[235265-235738]"
    }, {
      "left" : "t_j = t.charAt(j-1);",
      "right" : "t_j = t.charAt(j-1);",
      "info" : "ExpressionStatement[234975-234995]:ExpressionStatement[235279-235299]"
    }, {
      "left" : "d[0] = j;",
      "right" : "d[0] = j;",
      "info" : "ExpressionStatement[235008-235017]:ExpressionStatement[235312-235321]"
    }, {
      "left" : "for (i=1; i<=n; i++)",
      "right" : "for (i=1; i<=n; i++)",
      "info" : "ForStatement[235031-235286]:ForStatement[235335-235590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[235052-235286]:Block[235356-235590]"
    }, {
      "left" : "cost = s.charAt(i-1)==t_j ? 0 : 1;",
      "right" : "cost = s.charAt(i-1)==t_j ? 0 : 1;",
      "info" : "ExpressionStatement[235070-235104]:ExpressionStatement[235374-235408]"
    }, {
      "left" : "d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",
      "right" : "d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",
      "info" : "ExpressionStatement[235214-235272]:ExpressionStatement[235518-235576]"
    }, {
      "left" : "_d = p;",
      "right" : "_d = p;",
      "info" : "ExpressionStatement[235378-235385]:ExpressionStatement[235682-235689]"
    }, {
      "left" : "p = d;",
      "right" : "p = d;",
      "info" : "ExpressionStatement[235398-235404]:ExpressionStatement[235702-235708]"
    }, {
      "left" : "d = _d;",
      "right" : "d = _d;",
      "info" : "ExpressionStatement[235417-235424]:ExpressionStatement[235721-235728]"
    }, {
      "left" : "return p[n];",
      "right" : "return p[n];",
      "info" : "ReturnStatement[235574-235586]:ReturnStatement[235878-235890]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[237018-237024]:Modifier[237322-237328]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[237025-237031]:Modifier[237329-237335]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[237032-237039]:PrimitiveType[237336-237343]"
    }, {
      "left" : "startsWith",
      "right" : "startsWith",
      "info" : "SimpleName[237040-237050]:SimpleName[237344-237354]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[237051-237061]:SingleVariableDeclaration[237355-237365]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[237063-237076]:SingleVariableDeclaration[237367-237380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[237078-237132]:Block[237382-237436]"
    }, {
      "left" : "return startsWith(str, prefix, false);",
      "right" : "return startsWith(str, prefix, false);",
      "info" : "ReturnStatement[237088-237126]:ReturnStatement[237392-237430]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[238068-238074]:Modifier[238372-238378]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[238075-238081]:Modifier[238379-238385]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[238082-238089]:PrimitiveType[238386-238393]"
    }, {
      "left" : "startsWithIgnoreCase",
      "right" : "startsWithIgnoreCase",
      "info" : "SimpleName[238090-238110]:SimpleName[238394-238414]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[238111-238121]:SingleVariableDeclaration[238415-238425]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[238123-238136]:SingleVariableDeclaration[238427-238440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[238138-238191]:Block[238442-238495]"
    }, {
      "left" : "return startsWith(str, prefix, true);",
      "right" : "return startsWith(str, prefix, true);",
      "info" : "ReturnStatement[238148-238185]:ReturnStatement[238452-238489]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[238681-238688]:Modifier[238985-238992]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[238689-238695]:Modifier[238993-238999]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[238696-238703]:PrimitiveType[239000-239007]"
    }, {
      "left" : "startsWith",
      "right" : "startsWith",
      "info" : "SimpleName[238704-238714]:SimpleName[239008-239018]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[238715-238725]:SingleVariableDeclaration[239019-239029]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[238727-238740]:SingleVariableDeclaration[239031-239044]"
    }, {
      "left" : "boolean ignoreCase",
      "right" : "boolean ignoreCase",
      "info" : "SingleVariableDeclaration[238742-238760]:SingleVariableDeclaration[239046-239064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[238762-239035]:Block[239066-239339]"
    }, {
      "left" : "if (str == null || prefix == null)",
      "right" : "if (str == null || prefix == null)",
      "info" : "IfStatement[238772-238870]:IfStatement[239076-239174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[238807-238870]:Block[239111-239174]"
    }, {
      "left" : "return (str == null && prefix == null);",
      "right" : "return (str == null && prefix == null);",
      "info" : "ReturnStatement[238821-238860]:ReturnStatement[239125-239164]"
    }, {
      "left" : "if (prefix.length() > str.length())",
      "right" : "if (prefix.length() > str.length())",
      "info" : "IfStatement[238879-238952]:IfStatement[239183-239256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[238915-238952]:Block[239219-239256]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[238929-238942]:ReturnStatement[239233-239246]"
    }, {
      "left" : "return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",
      "right" : "return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",
      "info" : "ReturnStatement[238961-239029]:ReturnStatement[239265-239333]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[239880-239886]:Modifier[240184-240190]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[239887-239893]:Modifier[240191-240197]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[239894-239901]:PrimitiveType[240198-240205]"
    }, {
      "left" : "startsWithAny",
      "right" : "startsWithAny",
      "info" : "SimpleName[239902-239915]:SimpleName[240206-240219]"
    }, {
      "left" : "String string",
      "right" : "String string",
      "info" : "SingleVariableDeclaration[239916-239929]:SingleVariableDeclaration[240220-240233]"
    }, {
      "left" : "String[] searchStrings",
      "right" : "String[] searchStrings",
      "info" : "SingleVariableDeclaration[239931-239953]:SingleVariableDeclaration[240235-240257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[239955-240314]:Block[240259-240618]"
    }, {
      "left" : "if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings))",
      "right" : "if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings))",
      "info" : "IfStatement[239965-240060]:IfStatement[240269-240364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[240023-240060]:Block[240327-240364]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[240037-240050]:ReturnStatement[240341-240354]"
    }, {
      "left" : "for (int i = 0; i < searchStrings.length; i++)",
      "right" : "for (int i = 0; i < searchStrings.length; i++)",
      "info" : "ForStatement[240069-240286]:ForStatement[240373-240590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[240116-240286]:Block[240420-240590]"
    }, {
      "left" : "String searchString = searchStrings[i];",
      "right" : "String searchString = searchStrings[i];",
      "info" : "VariableDeclarationStatement[240130-240169]:VariableDeclarationStatement[240434-240473]"
    }, {
      "left" : "if (StringUtils.startsWith(string, searchString))",
      "right" : "if (StringUtils.startsWith(string, searchString))",
      "info" : "IfStatement[240182-240276]:IfStatement[240486-240580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[240232-240276]:Block[240536-240580]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[240250-240262]:ReturnStatement[240554-240566]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[240295-240308]:ReturnStatement[240599-240612]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[241312-241318]:Modifier[241616-241622]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[241319-241325]:Modifier[241623-241629]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[241326-241333]:PrimitiveType[241630-241637]"
    }, {
      "left" : "endsWith",
      "right" : "endsWith",
      "info" : "SimpleName[241334-241342]:SimpleName[241638-241646]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[241343-241353]:SingleVariableDeclaration[241647-241657]"
    }, {
      "left" : "String suffix",
      "right" : "String suffix",
      "info" : "SingleVariableDeclaration[241355-241368]:SingleVariableDeclaration[241659-241672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[241370-241422]:Block[241674-241726]"
    }, {
      "left" : "return endsWith(str, suffix, false);",
      "right" : "return endsWith(str, suffix, false);",
      "info" : "ReturnStatement[241380-241416]:ReturnStatement[241684-241720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[242405-242411]:Modifier[242709-242715]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[242412-242418]:Modifier[242716-242722]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[242419-242426]:PrimitiveType[242723-242730]"
    }, {
      "left" : "endsWithIgnoreCase",
      "right" : "endsWithIgnoreCase",
      "info" : "SimpleName[242427-242445]:SimpleName[242731-242749]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[242446-242456]:SingleVariableDeclaration[242750-242760]"
    }, {
      "left" : "String suffix",
      "right" : "String suffix",
      "info" : "SingleVariableDeclaration[242458-242471]:SingleVariableDeclaration[242762-242775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[242473-242524]:Block[242777-242828]"
    }, {
      "left" : "return endsWith(str, suffix, true);",
      "right" : "return endsWith(str, suffix, true);",
      "info" : "ReturnStatement[242483-242518]:ReturnStatement[242787-242822]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[243010-243017]:Modifier[243314-243321]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[243018-243024]:Modifier[243322-243328]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[243025-243032]:PrimitiveType[243329-243336]"
    }, {
      "left" : "endsWith",
      "right" : "endsWith",
      "info" : "SimpleName[243033-243041]:SimpleName[243337-243345]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[243042-243052]:SingleVariableDeclaration[243346-243356]"
    }, {
      "left" : "String suffix",
      "right" : "String suffix",
      "info" : "SingleVariableDeclaration[243054-243067]:SingleVariableDeclaration[243358-243371]"
    }, {
      "left" : "boolean ignoreCase",
      "right" : "boolean ignoreCase",
      "info" : "SingleVariableDeclaration[243069-243087]:SingleVariableDeclaration[243373-243391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[243089-243424]:Block[243393-243728]"
    }, {
      "left" : "if (str == null || suffix == null)",
      "right" : "if (str == null || suffix == null)",
      "info" : "IfStatement[243099-243195]:IfStatement[243403-243499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[243134-243195]:Block[243438-243499]"
    }, {
      "left" : "return str == null && suffix == null;",
      "right" : "return str == null && suffix == null;",
      "info" : "ReturnStatement[243148-243185]:ReturnStatement[243452-243489]"
    }, {
      "left" : "if (suffix.length() > str.length())",
      "right" : "if (suffix.length() > str.length())",
      "info" : "IfStatement[243204-243277]:IfStatement[243508-243581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[243240-243277]:Block[243544-243581]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[243254-243267]:ReturnStatement[243558-243571]"
    }, {
      "left" : "int strOffset = str.length() - suffix.length();",
      "right" : "int strOffset = str.length() - suffix.length();",
      "info" : "VariableDeclarationStatement[243286-243333]:VariableDeclarationStatement[243590-243637]"
    }, {
      "left" : "return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",
      "right" : "return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",
      "info" : "ReturnStatement[243342-243418]:ReturnStatement[243646-243722]"
    } ]
  },
  "interFileMappings" : { }
}