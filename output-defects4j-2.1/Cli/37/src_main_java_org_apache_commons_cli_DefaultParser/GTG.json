{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DefaultParser",
      "right" : "DefaultParser",
      "info" : "TypeDeclaration[948-20367]:TypeDeclaration[948-20531]"
    }, {
      "left" : "protected CommandLine cmd;",
      "right" : "protected CommandLine cmd;",
      "info" : "FieldDeclaration[1072-1136]:FieldDeclaration[1072-1136]"
    }, {
      "left" : "protected Options options;",
      "right" : "protected Options options;",
      "info" : "FieldDeclaration[1146-1204]:FieldDeclaration[1146-1204]"
    }, {
      "left" : "protected boolean stopAtNonOption;",
      "right" : "protected boolean stopAtNonOption;",
      "info" : "FieldDeclaration[1210-1454]:FieldDeclaration[1210-1454]"
    }, {
      "left" : "protected String currentToken;",
      "right" : "protected String currentToken;",
      "info" : "FieldDeclaration[1460-1532]:FieldDeclaration[1460-1532]"
    }, {
      "left" : "protected Option currentOption;",
      "right" : "protected Option currentOption;",
      "info" : "FieldDeclaration[1539-1605]:FieldDeclaration[1539-1605]"
    }, {
      "left" : "protected boolean skipParsing;",
      "right" : "protected boolean skipParsing;",
      "info" : "FieldDeclaration[1612-1759]:FieldDeclaration[1612-1759]"
    }, {
      "left" : "protected List expectedOpts;",
      "right" : "protected List expectedOpts;",
      "info" : "FieldDeclaration[1766-1889]:FieldDeclaration[1766-1889]"
    }, {
      "left" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
      "right" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
      "info" : "MethodDeclaration[1896-2039]:MethodDeclaration[1896-2039]"
    }, {
      "left" : "public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",
      "right" : "public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",
      "info" : "MethodDeclaration[2045-2665]:MethodDeclaration[2045-2665]"
    }, {
      "left" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
      "right" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
      "info" : "MethodDeclaration[2671-2856]:MethodDeclaration[2671-2856]"
    }, {
      "left" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)\n            throws ParseException",
      "right" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)\n            throws ParseException",
      "info" : "MethodDeclaration[2862-4518]:MethodDeclaration[2862-4518]"
    }, {
      "left" : "private void handleProperties(Properties properties) throws ParseException",
      "right" : "private void handleProperties(Properties properties) throws ParseException",
      "info" : "MethodDeclaration[4524-6321]:MethodDeclaration[4524-6321]"
    }, {
      "left" : "private void checkRequiredOptions() throws MissingOptionException",
      "right" : "private void checkRequiredOptions() throws MissingOptionException",
      "info" : "MethodDeclaration[6327-6809]:MethodDeclaration[6327-6809]"
    }, {
      "left" : "private void checkRequiredArgs() throws ParseException",
      "right" : "private void checkRequiredArgs() throws ParseException",
      "info" : "MethodDeclaration[6815-7172]:MethodDeclaration[6815-7172]"
    }, {
      "left" : "private void handleToken(String token) throws ParseException",
      "right" : "private void handleToken(String token) throws ParseException",
      "info" : "MethodDeclaration[7178-8211]:MethodDeclaration[7178-8211]"
    }, {
      "left" : "private boolean isArgument(String token)",
      "right" : "private boolean isArgument(String token)",
      "info" : "MethodDeclaration[8217-8426]:MethodDeclaration[8217-8426]"
    }, {
      "left" : "private boolean isNegativeNumber(String token)",
      "right" : "private boolean isNegativeNumber(String token)",
      "info" : "MethodDeclaration[8432-8763]:MethodDeclaration[8432-8763]"
    }, {
      "left" : "private boolean isOption(String token)",
      "right" : "private boolean isOption(String token)",
      "info" : "MethodDeclaration[8769-8970]:MethodDeclaration[8769-8970]"
    }, {
      "left" : "private boolean isLongOption(String token)",
      "right" : "private boolean isLongOption(String token)",
      "info" : "MethodDeclaration[9345-10042]:MethodDeclaration[9509-10206]"
    }, {
      "left" : "private void handleUnknownToken(String token) throws ParseException",
      "right" : "private void handleUnknownToken(String token) throws ParseException",
      "info" : "MethodDeclaration[10048-10844]:MethodDeclaration[10212-11008]"
    }, {
      "left" : "private void handleLongOption(String token) throws ParseException",
      "right" : "private void handleLongOption(String token) throws ParseException",
      "info" : "MethodDeclaration[10850-11281]:MethodDeclaration[11014-11445]"
    }, {
      "left" : "private void handleLongOptionWithoutEqual(String token) throws ParseException",
      "right" : "private void handleLongOptionWithoutEqual(String token) throws ParseException",
      "info" : "MethodDeclaration[11287-11942]:MethodDeclaration[11451-12106]"
    }, {
      "left" : "private void handleLongOptionWithEqual(String token) throws ParseException",
      "right" : "private void handleLongOptionWithEqual(String token) throws ParseException",
      "info" : "MethodDeclaration[11948-13038]:MethodDeclaration[12112-13202]"
    }, {
      "left" : "private void handleShortAndLongOption(String token) throws ParseException",
      "right" : "private void handleShortAndLongOption(String token) throws ParseException",
      "info" : "MethodDeclaration[13044-16183]:MethodDeclaration[13208-16347]"
    }, {
      "left" : "private String getLongPrefix(String token)",
      "right" : "private String getLongPrefix(String token)",
      "info" : "MethodDeclaration[16189-16723]:MethodDeclaration[16353-16887]"
    }, {
      "left" : "private boolean isJavaProperty(String token)",
      "right" : "private boolean isJavaProperty(String token)",
      "info" : "MethodDeclaration[16729-17074]:MethodDeclaration[16893-17238]"
    }, {
      "left" : "private void handleOption(Option option) throws ParseException",
      "right" : "private void handleOption(Option option) throws ParseException",
      "info" : "MethodDeclaration[17080-17517]:MethodDeclaration[17244-17681]"
    }, {
      "left" : "private void updateRequiredOptions(Option option) throws AlreadySelectedException",
      "right" : "private void updateRequiredOptions(Option option) throws AlreadySelectedException",
      "info" : "MethodDeclaration[17523-18220]:MethodDeclaration[17687-18384]"
    }, {
      "left" : "protected void handleConcatenatedOptions(String token) throws ParseException",
      "right" : "protected void handleConcatenatedOptions(String token) throws ParseException",
      "info" : "MethodDeclaration[18226-20365]:MethodDeclaration[18390-20529]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1984-2039]:Block[1984-2039]"
    }, {
      "left" : "return parse(options, arguments, null);",
      "right" : "return parse(options, arguments, null);",
      "info" : "ReturnStatement[1994-2033]:ReturnStatement[1994-2033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2597-2665]:Block[2597-2665]"
    }, {
      "left" : "return parse(options, arguments, properties, false);",
      "right" : "return parse(options, arguments, properties, false);",
      "info" : "ReturnStatement[2607-2659]:ReturnStatement[2607-2659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2784-2856]:Block[2784-2856]"
    }, {
      "left" : "return parse(options, arguments, null, stopAtNonOption);",
      "right" : "return parse(options, arguments, null, stopAtNonOption);",
      "info" : "ReturnStatement[2794-2850]:ReturnStatement[2794-2850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3737-4518]:Block[3737-4518]"
    }, {
      "left" : "this.options = options;",
      "right" : "this.options = options;",
      "info" : "ExpressionStatement[3747-3770]:ExpressionStatement[3747-3770]"
    }, {
      "left" : "this.stopAtNonOption = stopAtNonOption;",
      "right" : "this.stopAtNonOption = stopAtNonOption;",
      "info" : "ExpressionStatement[3779-3818]:ExpressionStatement[3779-3818]"
    }, {
      "left" : "skipParsing = false;",
      "right" : "skipParsing = false;",
      "info" : "ExpressionStatement[3827-3847]:ExpressionStatement[3827-3847]"
    }, {
      "left" : "currentOption = null;",
      "right" : "currentOption = null;",
      "info" : "ExpressionStatement[3856-3877]:ExpressionStatement[3856-3877]"
    }, {
      "left" : "expectedOpts = new ArrayList(options.getRequiredOptions());",
      "right" : "expectedOpts = new ArrayList(options.getRequiredOptions());",
      "info" : "ExpressionStatement[3886-3945]:ExpressionStatement[3886-3945]"
    }, {
      "left" : "for (OptionGroup group : options.getOptionGroups())",
      "right" : "for (OptionGroup group : options.getOptionGroups())",
      "info" : "EnhancedForStatement[3997-4105]:EnhancedForStatement[3997-4105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4057-4105]:Block[4057-4105]"
    }, {
      "left" : "group.setSelected(null);",
      "right" : "group.setSelected(null);",
      "info" : "ExpressionStatement[4071-4095]:ExpressionStatement[4071-4095]"
    }, {
      "left" : "cmd = new CommandLine();",
      "right" : "cmd = new CommandLine();",
      "info" : "ExpressionStatement[4115-4139]:ExpressionStatement[4115-4139]"
    }, {
      "left" : "if (arguments != null)",
      "right" : "if (arguments != null)",
      "info" : "IfStatement[4149-4304]:IfStatement[4149-4304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4180-4304]:Block[4180-4304]"
    }, {
      "left" : "for (String argument : arguments)",
      "right" : "for (String argument : arguments)",
      "info" : "EnhancedForStatement[4194-4294]:EnhancedForStatement[4194-4294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4240-4294]:Block[4240-4294]"
    }, {
      "left" : "handleToken(argument);",
      "right" : "handleToken(argument);",
      "info" : "ExpressionStatement[4258-4280]:ExpressionStatement[4258-4280]"
    }, {
      "left" : "checkRequiredArgs();",
      "right" : "checkRequiredArgs();",
      "info" : "ExpressionStatement[4364-4384]:ExpressionStatement[4364-4384]"
    }, {
      "left" : "handleProperties(properties);",
      "right" : "handleProperties(properties);",
      "info" : "ExpressionStatement[4429-4458]:ExpressionStatement[4429-4458]"
    }, {
      "left" : "checkRequiredOptions();",
      "right" : "checkRequiredOptions();",
      "info" : "ExpressionStatement[4468-4491]:ExpressionStatement[4468-4491]"
    }, {
      "left" : "return cmd;",
      "right" : "return cmd;",
      "info" : "ReturnStatement[4501-4512]:ReturnStatement[4501-4512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4768-6321]:Block[4768-6321]"
    }, {
      "left" : "if (properties == null)",
      "right" : "if (properties == null)",
      "info" : "IfStatement[4778-4841]:IfStatement[4778-4841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4810-4841]:Block[4810-4841]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4824-4831]:ReturnStatement[4824-4831]"
    }, {
      "left" : "for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements())",
      "right" : "for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements())",
      "info" : "ForStatement[4851-6315]:ForStatement[4851-6315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4933-6315]:Block[4933-6315]"
    }, {
      "left" : "String option = e.nextElement().toString();",
      "right" : "String option = e.nextElement().toString();",
      "info" : "VariableDeclarationStatement[4947-4990]:VariableDeclarationStatement[4947-4990]"
    }, {
      "left" : "Option opt = options.getOption(option);",
      "right" : "Option opt = options.getOption(option);",
      "info" : "VariableDeclarationStatement[5004-5043]:VariableDeclarationStatement[5004-5043]"
    }, {
      "left" : "if (opt == null)",
      "right" : "if (opt == null)",
      "info" : "IfStatement[5056-5196]:IfStatement[5056-5196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5085-5196]:Block[5085-5196]"
    }, {
      "left" : "throw new UnrecognizedOptionException(\"Default option wasn't defined\", option);",
      "right" : "throw new UnrecognizedOptionException(\"Default option wasn't defined\", option);",
      "info" : "ThrowStatement[5103-5182]:ThrowStatement[5103-5182]"
    }, {
      "left" : "OptionGroup group = options.getOptionGroup(opt);",
      "right" : "OptionGroup group = options.getOptionGroup(opt);",
      "info" : "VariableDeclarationStatement[5314-5362]:VariableDeclarationStatement[5314-5362]"
    }, {
      "left" : "boolean selected = group != null && group.getSelected() != null;",
      "right" : "boolean selected = group != null && group.getSelected() != null;",
      "info" : "VariableDeclarationStatement[5375-5439]:VariableDeclarationStatement[5375-5439]"
    }, {
      "left" : "if (!cmd.hasOption(option) && !selected)",
      "right" : "if (!cmd.hasOption(option) && !selected)",
      "info" : "IfStatement[5453-6305]:IfStatement[5453-6305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5506-6305]:Block[5506-6305]"
    }, {
      "left" : "String value = properties.getProperty(option);",
      "right" : "String value = properties.getProperty(option);",
      "info" : "VariableDeclarationStatement[5577-5623]:VariableDeclarationStatement[5577-5623]"
    }, {
      "left" : "if (opt.hasArg())",
      "right" : "if (opt.hasArg())",
      "info" : "IfStatement[5641-6217]:IfStatement[5641-6217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5675-5876]:Block[5675-5876]"
    }, {
      "left" : "if (opt.getValues() == null || opt.getValues().length == 0)",
      "right" : "if (opt.getValues() == null || opt.getValues().length == 0)",
      "info" : "IfStatement[5697-5858]:IfStatement[5697-5858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5777-5858]:Block[5777-5858]"
    }, {
      "left" : "opt.addValueForProcessing(value);",
      "right" : "opt.addValueForProcessing(value);",
      "info" : "ExpressionStatement[5803-5836]:ExpressionStatement[5803-5836]"
    }, {
      "left" : "if (!(\"yes\".equalsIgnoreCase(value)\n                        || \"true\".equalsIgnoreCase(value)\n                        || \"1\".equalsIgnoreCase(value)))",
      "right" : "if (!(\"yes\".equalsIgnoreCase(value)\n                        || \"true\".equalsIgnoreCase(value)\n                        || \"1\".equalsIgnoreCase(value)))",
      "info" : "IfStatement[5898-6217]:IfStatement[5898-6217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6065-6217]:Block[6065-6217]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[6190-6199]:ContinueStatement[6190-6199]"
    }, {
      "left" : "handleOption(opt);",
      "right" : "handleOption(opt);",
      "info" : "ExpressionStatement[6235-6253]:ExpressionStatement[6235-6253]"
    }, {
      "left" : "currentOption = null;",
      "right" : "currentOption = null;",
      "info" : "ExpressionStatement[6270-6291]:ExpressionStatement[6270-6291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6615-6809]:Block[6615-6809]"
    }, {
      "left" : "if (!expectedOpts.isEmpty())",
      "right" : "if (!expectedOpts.isEmpty())",
      "info" : "IfStatement[6695-6803]:IfStatement[6695-6803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6732-6803]:Block[6732-6803]"
    }, {
      "left" : "throw new MissingOptionException(expectedOpts);",
      "right" : "throw new MissingOptionException(expectedOpts);",
      "info" : "ThrowStatement[6746-6793]:ThrowStatement[6746-6793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7016-7172]:Block[7016-7172]"
    }, {
      "left" : "if (currentOption != null && currentOption.requiresArg())",
      "right" : "if (currentOption != null && currentOption.requiresArg())",
      "info" : "IfStatement[7026-7166]:IfStatement[7026-7166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7092-7166]:Block[7092-7166]"
    }, {
      "left" : "throw new MissingArgumentException(currentOption);",
      "right" : "throw new MissingArgumentException(currentOption);",
      "info" : "ThrowStatement[7106-7156]:ThrowStatement[7106-7156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7387-8211]:Block[7387-8211]"
    }, {
      "left" : "currentToken = token;",
      "right" : "currentToken = token;",
      "info" : "ExpressionStatement[7397-7418]:ExpressionStatement[7397-7418]"
    }, {
      "left" : "if (skipParsing)",
      "right" : "if (skipParsing)",
      "info" : "IfStatement[7428-8084]:IfStatement[7428-8084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7453-7495]:Block[7453-7495]"
    }, {
      "left" : "cmd.addArg(token);",
      "right" : "cmd.addArg(token);",
      "info" : "ExpressionStatement[7467-7485]:ExpressionStatement[7467-7485]"
    }, {
      "left" : "if (\"--\".equals(token))",
      "right" : "if (\"--\".equals(token))",
      "info" : "IfStatement[7509-8084]:IfStatement[7509-8084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7541-7584]:Block[7541-7584]"
    }, {
      "left" : "skipParsing = true;",
      "right" : "skipParsing = true;",
      "info" : "ExpressionStatement[7555-7574]:ExpressionStatement[7555-7574]"
    }, {
      "left" : "if (currentOption != null && currentOption.acceptsArg() && isArgument(token))",
      "right" : "if (currentOption != null && currentOption.acceptsArg() && isArgument(token))",
      "info" : "IfStatement[7598-8084]:IfStatement[7598-8084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7684-7787]:Block[7684-7787]"
    }, {
      "left" : "currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));",
      "right" : "currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));",
      "info" : "ExpressionStatement[7698-7777]:ExpressionStatement[7698-7777]"
    }, {
      "left" : "if (token.startsWith(\"--\"))",
      "right" : "if (token.startsWith(\"--\"))",
      "info" : "IfStatement[7801-8084]:IfStatement[7801-8084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7837-7885]:Block[7837-7885]"
    }, {
      "left" : "handleLongOption(token);",
      "right" : "handleLongOption(token);",
      "info" : "ExpressionStatement[7851-7875]:ExpressionStatement[7851-7875]"
    }, {
      "left" : "if (token.startsWith(\"-\") && !\"-\".equals(token))",
      "right" : "if (token.startsWith(\"-\") && !\"-\".equals(token))",
      "info" : "IfStatement[7899-8084]:IfStatement[7899-8084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7956-8012]:Block[7956-8012]"
    }, {
      "left" : "handleShortAndLongOption(token);",
      "right" : "handleShortAndLongOption(token);",
      "info" : "ExpressionStatement[7970-8002]:ExpressionStatement[7970-8002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8034-8084]:Block[8034-8084]"
    }, {
      "left" : "handleUnknownToken(token);",
      "right" : "handleUnknownToken(token);",
      "info" : "ExpressionStatement[8048-8074]:ExpressionStatement[8048-8074]"
    }, {
      "left" : "if (currentOption != null && !currentOption.acceptsArg())",
      "right" : "if (currentOption != null && !currentOption.acceptsArg())",
      "info" : "IfStatement[8094-8205]:IfStatement[8094-8205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8160-8205]:Block[8160-8205]"
    }, {
      "left" : "currentOption = null;",
      "right" : "currentOption = null;",
      "info" : "ExpressionStatement[8174-8195]:ExpressionStatement[8174-8195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8359-8426]:Block[8359-8426]"
    }, {
      "left" : "return !isOption(token) || isNegativeNumber(token);",
      "right" : "return !isOption(token) || isNegativeNumber(token);",
      "info" : "ReturnStatement[8369-8420]:ReturnStatement[8369-8420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8574-8763]:Block[8574-8763]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8584-8757]:TryStatement[8584-8757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8596-8671]:Block[8596-8671]"
    }, {
      "left" : "Double.parseDouble(token);",
      "right" : "Double.parseDouble(token);",
      "info" : "ExpressionStatement[8610-8636]:ExpressionStatement[8610-8636]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8649-8661]:ReturnStatement[8649-8661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8720-8757]:Block[8720-8757]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8734-8747]:ReturnStatement[8734-8747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8903-8970]:Block[8903-8970]"
    }, {
      "left" : "return isLongOption(token) || isShortOption(token);",
      "right" : "return isLongOption(token) || isShortOption(token);",
      "info" : "ReturnStatement[8913-8964]:ReturnStatement[8913-8964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9487-10042]:Block[9651-10206]"
    }, {
      "left" : "if (!token.startsWith(\"-\") || token.length() == 1)",
      "right" : "if (!token.startsWith(\"-\") || token.length() == 1)",
      "info" : "IfStatement[9497-9593]:IfStatement[9661-9757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9556-9593]:Block[9720-9757]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9570-9583]:ReturnStatement[9734-9747]"
    }, {
      "left" : "int pos = token.indexOf(\"=\");",
      "right" : "int pos = token.indexOf(\"=\");",
      "info" : "VariableDeclarationStatement[9603-9632]:VariableDeclarationStatement[9767-9796]"
    }, {
      "left" : "String t = pos == -1 ? token : token.substring(0, pos);",
      "right" : "String t = pos == -1 ? token : token.substring(0, pos);",
      "info" : "VariableDeclarationStatement[9641-9696]:VariableDeclarationStatement[9805-9860]"
    }, {
      "left" : "if (!options.getMatchingOptions(t).isEmpty())",
      "right" : "if (!options.getMatchingOptions(t).isEmpty())",
      "info" : "IfStatement[9706-10013]:IfStatement[9870-10177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9760-9875]:Block[9924-10039]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9853-9865]:ReturnStatement[10017-10029]"
    }, {
      "left" : "if (getLongPrefix(token) != null && !token.startsWith(\"--\"))",
      "right" : "if (getLongPrefix(token) != null && !token.startsWith(\"--\"))",
      "info" : "IfStatement[9889-10013]:IfStatement[10053-10177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9958-10013]:Block[10122-10177]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9991-10003]:ReturnStatement[10155-10167]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10023-10036]:ReturnStatement[10187-10200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10540-10844]:Block[10704-11008]"
    }, {
      "left" : "if (token.startsWith(\"-\") && token.length() > 1 && !stopAtNonOption)",
      "right" : "if (token.startsWith(\"-\") && token.length() > 1 && !stopAtNonOption)",
      "info" : "IfStatement[10550-10729]:IfStatement[10714-10893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10627-10729]:Block[10791-10893]"
    }, {
      "left" : "throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);",
      "right" : "throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);",
      "info" : "ThrowStatement[10641-10719]:ThrowStatement[10805-10883]"
    }, {
      "left" : "cmd.addArg(token);",
      "right" : "cmd.addArg(token);",
      "info" : "ExpressionStatement[10739-10757]:ExpressionStatement[10903-10921]"
    }, {
      "left" : "if (stopAtNonOption)",
      "right" : "if (stopAtNonOption)",
      "info" : "IfStatement[10766-10838]:IfStatement[10930-11002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10795-10838]:Block[10959-11002]"
    }, {
      "left" : "skipParsing = true;",
      "right" : "skipParsing = true;",
      "info" : "ExpressionStatement[10809-10828]:ExpressionStatement[10973-10992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11088-11281]:Block[11252-11445]"
    }, {
      "left" : "if (token.indexOf('=') == -1)",
      "right" : "if (token.indexOf('=') == -1)",
      "info" : "IfStatement[11098-11275]:IfStatement[11262-11439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11136-11196]:Block[11300-11360]"
    }, {
      "left" : "handleLongOptionWithoutEqual(token);",
      "right" : "handleLongOptionWithoutEqual(token);",
      "info" : "ExpressionStatement[11150-11186]:ExpressionStatement[11314-11350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11218-11275]:Block[11382-11439]"
    }, {
      "left" : "handleLongOptionWithEqual(token);",
      "right" : "handleLongOptionWithEqual(token);",
      "info" : "ExpressionStatement[11232-11265]:ExpressionStatement[11396-11429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11532-11942]:Block[11696-12106]"
    }, {
      "left" : "List<String> matchingOpts = options.getMatchingOptions(token);",
      "right" : "List<String> matchingOpts = options.getMatchingOptions(token);",
      "info" : "VariableDeclarationStatement[11542-11604]:VariableDeclarationStatement[11706-11768]"
    }, {
      "left" : "if (matchingOpts.isEmpty())",
      "right" : "if (matchingOpts.isEmpty())",
      "info" : "IfStatement[11613-11936]:IfStatement[11777-12100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11649-11706]:Block[11813-11870]"
    }, {
      "left" : "handleUnknownToken(currentToken);",
      "right" : "handleUnknownToken(currentToken);",
      "info" : "ExpressionStatement[11663-11696]:ExpressionStatement[11827-11860]"
    }, {
      "left" : "if (matchingOpts.size() > 1)",
      "right" : "if (matchingOpts.size() > 1)",
      "info" : "IfStatement[11720-11936]:IfStatement[11884-12100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11757-11837]:Block[11921-12001]"
    }, {
      "left" : "throw new AmbiguousOptionException(token, matchingOpts);",
      "right" : "throw new AmbiguousOptionException(token, matchingOpts);",
      "info" : "ThrowStatement[11771-11827]:ThrowStatement[11935-11991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11859-11936]:Block[12023-12100]"
    }, {
      "left" : "handleOption(options.getOption(matchingOpts.get(0)));",
      "right" : "handleOption(options.getOption(matchingOpts.get(0)));",
      "info" : "ExpressionStatement[11873-11926]:ExpressionStatement[12037-12090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12197-13038]:Block[12361-13202]"
    }, {
      "left" : "int pos = token.indexOf('=');",
      "right" : "int pos = token.indexOf('=');",
      "info" : "VariableDeclarationStatement[12207-12236]:VariableDeclarationStatement[12371-12400]"
    }, {
      "left" : "String value = token.substring(pos + 1);",
      "right" : "String value = token.substring(pos + 1);",
      "info" : "VariableDeclarationStatement[12246-12286]:VariableDeclarationStatement[12410-12450]"
    }, {
      "left" : "String opt = token.substring(0, pos);",
      "right" : "String opt = token.substring(0, pos);",
      "info" : "VariableDeclarationStatement[12296-12333]:VariableDeclarationStatement[12460-12497]"
    }, {
      "left" : "List<String> matchingOpts = options.getMatchingOptions(opt);",
      "right" : "List<String> matchingOpts = options.getMatchingOptions(opt);",
      "info" : "VariableDeclarationStatement[12343-12403]:VariableDeclarationStatement[12507-12567]"
    }, {
      "left" : "if (matchingOpts.isEmpty())",
      "right" : "if (matchingOpts.isEmpty())",
      "info" : "IfStatement[12412-13032]:IfStatement[12576-13196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12448-12505]:Block[12612-12669]"
    }, {
      "left" : "handleUnknownToken(currentToken);",
      "right" : "handleUnknownToken(currentToken);",
      "info" : "ExpressionStatement[12462-12495]:ExpressionStatement[12626-12659]"
    }, {
      "left" : "if (matchingOpts.size() > 1)",
      "right" : "if (matchingOpts.size() > 1)",
      "info" : "IfStatement[12519-13032]:IfStatement[12683-13196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12556-12634]:Block[12720-12798]"
    }, {
      "left" : "throw new AmbiguousOptionException(opt, matchingOpts);",
      "right" : "throw new AmbiguousOptionException(opt, matchingOpts);",
      "info" : "ThrowStatement[12570-12624]:ThrowStatement[12734-12788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12656-13032]:Block[12820-13196]"
    }, {
      "left" : "Option option = options.getOption(matchingOpts.get(0));",
      "right" : "Option option = options.getOption(matchingOpts.get(0));",
      "info" : "VariableDeclarationStatement[12670-12725]:VariableDeclarationStatement[12834-12889]"
    }, {
      "left" : "if (option.acceptsArg())",
      "right" : "if (option.acceptsArg())",
      "info" : "IfStatement[12739-13022]:IfStatement[12903-13186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12776-12927]:Block[12940-13091]"
    }, {
      "left" : "handleOption(option);",
      "right" : "handleOption(option);",
      "info" : "ExpressionStatement[12794-12815]:ExpressionStatement[12958-12979]"
    }, {
      "left" : "currentOption.addValueForProcessing(value);",
      "right" : "currentOption.addValueForProcessing(value);",
      "info" : "ExpressionStatement[12832-12875]:ExpressionStatement[12996-13039]"
    }, {
      "left" : "currentOption = null;",
      "right" : "currentOption = null;",
      "info" : "ExpressionStatement[12892-12913]:ExpressionStatement[13056-13077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12957-13022]:Block[13121-13186]"
    }, {
      "left" : "handleUnknownToken(currentToken);",
      "right" : "handleUnknownToken(currentToken);",
      "info" : "ExpressionStatement[12975-13008]:ExpressionStatement[13139-13172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13392-16183]:Block[13556-16347]"
    }, {
      "left" : "String t = Util.stripLeadingHyphens(token);",
      "right" : "String t = Util.stripLeadingHyphens(token);",
      "info" : "VariableDeclarationStatement[13402-13445]:VariableDeclarationStatement[13566-13609]"
    }, {
      "left" : "int pos = t.indexOf('=');",
      "right" : "int pos = t.indexOf('=');",
      "info" : "VariableDeclarationStatement[13455-13480]:VariableDeclarationStatement[13619-13644]"
    }, {
      "left" : "if (t.length() == 1)",
      "right" : "if (t.length() == 1)",
      "info" : "IfStatement[13490-16177]:IfStatement[13654-16341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13519-13759]:Block[13683-13923]"
    }, {
      "left" : "if (options.hasShortOption(t))",
      "right" : "if (options.hasShortOption(t))",
      "info" : "IfStatement[13551-13749]:IfStatement[13715-13913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13594-13661]:Block[13758-13825]"
    }, {
      "left" : "handleOption(options.getOption(t));",
      "right" : "handleOption(options.getOption(t));",
      "info" : "ExpressionStatement[13612-13647]:ExpressionStatement[13776-13811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13691-13749]:Block[13855-13913]"
    }, {
      "left" : "handleUnknownToken(token);",
      "right" : "handleUnknownToken(token);",
      "info" : "ExpressionStatement[13709-13735]:ExpressionStatement[13873-13899]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[13773-16177]:IfStatement[13937-16341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13796-15038]:Block[13960-15202]"
    }, {
      "left" : "if (options.hasShortOption(t))",
      "right" : "if (options.hasShortOption(t))",
      "info" : "IfStatement[13852-15028]:IfStatement[14016-15192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13895-13962]:Block[14059-14126]"
    }, {
      "left" : "handleOption(options.getOption(t));",
      "right" : "handleOption(options.getOption(t));",
      "info" : "ExpressionStatement[13913-13948]:ExpressionStatement[14077-14112]"
    }, {
      "left" : "if (!options.getMatchingOptions(t).isEmpty())",
      "right" : "if (!options.getMatchingOptions(t).isEmpty())",
      "info" : "IfStatement[13980-15028]:IfStatement[14144-15192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14038-14134]:Block[14202-14298]"
    }, {
      "left" : "handleLongOptionWithoutEqual(token);",
      "right" : "handleLongOptionWithoutEqual(token);",
      "info" : "ExpressionStatement[14084-14120]:ExpressionStatement[14248-14284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14164-15028]:Block[14328-15192]"
    }, {
      "left" : "String opt = getLongPrefix(t);",
      "right" : "String opt = getLongPrefix(t);",
      "info" : "VariableDeclarationStatement[14235-14265]:VariableDeclarationStatement[14399-14429]"
    }, {
      "left" : "if (opt != null && options.getOption(opt).acceptsArg())",
      "right" : "if (opt != null && options.getOption(opt).acceptsArg())",
      "info" : "IfStatement[14283-15014]:IfStatement[14447-15178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14355-14558]:Block[14519-14722]"
    }, {
      "left" : "handleOption(options.getOption(opt));",
      "right" : "handleOption(options.getOption(opt));",
      "info" : "ExpressionStatement[14377-14414]:ExpressionStatement[14541-14578]"
    }, {
      "left" : "currentOption.addValueForProcessing(t.substring(opt.length()));",
      "right" : "currentOption.addValueForProcessing(t.substring(opt.length()));",
      "info" : "ExpressionStatement[14435-14498]:ExpressionStatement[14599-14662]"
    }, {
      "left" : "currentOption = null;",
      "right" : "currentOption = null;",
      "info" : "ExpressionStatement[14519-14540]:ExpressionStatement[14683-14704]"
    }, {
      "left" : "if (isJavaProperty(t))",
      "right" : "if (isJavaProperty(t))",
      "info" : "IfStatement[14580-15014]:IfStatement[14744-15178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14619-14862]:Block[14783-15026]"
    }, {
      "left" : "handleOption(options.getOption(t.substring(0, 1)));",
      "right" : "handleOption(options.getOption(t.substring(0, 1)));",
      "info" : "ExpressionStatement[14678-14729]:ExpressionStatement[14842-14893]"
    }, {
      "left" : "currentOption.addValueForProcessing(t.substring(1));",
      "right" : "currentOption.addValueForProcessing(t.substring(1));",
      "info" : "ExpressionStatement[14750-14802]:ExpressionStatement[14914-14966]"
    }, {
      "left" : "currentOption = null;",
      "right" : "currentOption = null;",
      "info" : "ExpressionStatement[14823-14844]:ExpressionStatement[14987-15008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14900-15014]:Block[15064-15178]"
    }, {
      "left" : "handleConcatenatedOptions(token);",
      "right" : "handleConcatenatedOptions(token);",
      "info" : "ExpressionStatement[14963-14996]:ExpressionStatement[15127-15160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15060-16177]:Block[15224-16341]"
    }, {
      "left" : "String opt = t.substring(0, pos);",
      "right" : "String opt = t.substring(0, pos);",
      "info" : "VariableDeclarationStatement[15117-15150]:VariableDeclarationStatement[15281-15314]"
    }, {
      "left" : "String value = t.substring(pos + 1);",
      "right" : "String value = t.substring(pos + 1);",
      "info" : "VariableDeclarationStatement[15163-15199]:VariableDeclarationStatement[15327-15363]"
    }, {
      "left" : "if (opt.length() == 1)",
      "right" : "if (opt.length() == 1)",
      "info" : "IfStatement[15213-16167]:IfStatement[15377-16331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15248-15690]:Block[15412-15854]"
    }, {
      "left" : "Option option = options.getOption(opt);",
      "right" : "Option option = options.getOption(opt);",
      "info" : "VariableDeclarationStatement[15290-15329]:VariableDeclarationStatement[15454-15493]"
    }, {
      "left" : "if (option != null && option.acceptsArg())",
      "right" : "if (option != null && option.acceptsArg())",
      "info" : "IfStatement[15346-15676]:IfStatement[15510-15840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15405-15572]:Block[15569-15736]"
    }, {
      "left" : "handleOption(option);",
      "right" : "handleOption(option);",
      "info" : "ExpressionStatement[15427-15448]:ExpressionStatement[15591-15612]"
    }, {
      "left" : "currentOption.addValueForProcessing(value);",
      "right" : "currentOption.addValueForProcessing(value);",
      "info" : "ExpressionStatement[15469-15512]:ExpressionStatement[15633-15676]"
    }, {
      "left" : "currentOption = null;",
      "right" : "currentOption = null;",
      "info" : "ExpressionStatement[15533-15554]:ExpressionStatement[15697-15718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15610-15676]:Block[15774-15840]"
    }, {
      "left" : "handleUnknownToken(token);",
      "right" : "handleUnknownToken(token);",
      "info" : "ExpressionStatement[15632-15658]:ExpressionStatement[15796-15822]"
    }, {
      "left" : "if (isJavaProperty(opt))",
      "right" : "if (isJavaProperty(opt))",
      "info" : "IfStatement[15708-16167]:IfStatement[15872-16331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15745-16040]:Block[15909-16204]"
    }, {
      "left" : "handleOption(options.getOption(opt.substring(0, 1)));",
      "right" : "handleOption(options.getOption(opt.substring(0, 1)));",
      "info" : "ExpressionStatement[15804-15857]:ExpressionStatement[15968-16021]"
    }, {
      "left" : "currentOption.addValueForProcessing(opt.substring(1));",
      "right" : "currentOption.addValueForProcessing(opt.substring(1));",
      "info" : "ExpressionStatement[15874-15928]:ExpressionStatement[16038-16092]"
    }, {
      "left" : "currentOption.addValueForProcessing(value);",
      "right" : "currentOption.addValueForProcessing(value);",
      "info" : "ExpressionStatement[15945-15988]:ExpressionStatement[16109-16152]"
    }, {
      "left" : "currentOption = null;",
      "right" : "currentOption = null;",
      "info" : "ExpressionStatement[16005-16026]:ExpressionStatement[16169-16190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16070-16167]:Block[16234-16331]"
    }, {
      "left" : "handleLongOptionWithEqual(token);",
      "right" : "handleLongOptionWithEqual(token);",
      "info" : "ExpressionStatement[16120-16153]:ExpressionStatement[16284-16317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16352-16723]:Block[16516-16887]"
    }, {
      "left" : "String t = Util.stripLeadingHyphens(token);",
      "right" : "String t = Util.stripLeadingHyphens(token);",
      "info" : "VariableDeclarationStatement[16362-16405]:VariableDeclarationStatement[16526-16569]"
    }, {
      "left" : "int i;",
      "right" : "int i;",
      "info" : "VariableDeclarationStatement[16415-16421]:VariableDeclarationStatement[16579-16585]"
    }, {
      "left" : "String opt = null;",
      "right" : "String opt = null;",
      "info" : "VariableDeclarationStatement[16430-16448]:VariableDeclarationStatement[16594-16612]"
    }, {
      "left" : "for (i = t.length() - 2; i > 1; i--)",
      "right" : "for (i = t.length() - 2; i > 1; i--)",
      "info" : "ForStatement[16457-16688]:ForStatement[16621-16852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16502-16688]:Block[16666-16852]"
    }, {
      "left" : "String prefix = t.substring(0, i);",
      "right" : "String prefix = t.substring(0, i);",
      "info" : "VariableDeclarationStatement[16516-16550]:VariableDeclarationStatement[16680-16714]"
    }, {
      "left" : "if (options.hasLongOption(prefix))",
      "right" : "if (options.hasLongOption(prefix))",
      "info" : "IfStatement[16563-16678]:IfStatement[16727-16842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16610-16678]:Block[16774-16842]"
    }, {
      "left" : "opt = prefix;",
      "right" : "opt = prefix;",
      "info" : "ExpressionStatement[16628-16641]:ExpressionStatement[16792-16805]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[16658-16664]:BreakStatement[16822-16828]"
    }, {
      "left" : "return opt;",
      "right" : "return opt;",
      "info" : "ReturnStatement[16706-16717]:ReturnStatement[16870-16881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16869-17074]:Block[17033-17238]"
    }, {
      "left" : "String opt = token.substring(0, 1);",
      "right" : "String opt = token.substring(0, 1);",
      "info" : "VariableDeclarationStatement[16879-16914]:VariableDeclarationStatement[17043-17078]"
    }, {
      "left" : "Option option = options.getOption(opt);",
      "right" : "Option option = options.getOption(opt);",
      "info" : "VariableDeclarationStatement[16923-16962]:VariableDeclarationStatement[17087-17126]"
    }, {
      "left" : "return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);",
      "right" : "return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);",
      "info" : "ReturnStatement[16972-17068]:ReturnStatement[17136-17232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17147-17517]:Block[17311-17681]"
    }, {
      "left" : "checkRequiredArgs();",
      "right" : "checkRequiredArgs();",
      "info" : "ExpressionStatement[17223-17243]:ExpressionStatement[17387-17407]"
    }, {
      "left" : "option = (Option) option.clone();",
      "right" : "option = (Option) option.clone();",
      "info" : "ExpressionStatement[17253-17286]:ExpressionStatement[17417-17450]"
    }, {
      "left" : "updateRequiredOptions(option);",
      "right" : "updateRequiredOptions(option);",
      "info" : "ExpressionStatement[17296-17326]:ExpressionStatement[17460-17490]"
    }, {
      "left" : "cmd.addOption(option);",
      "right" : "cmd.addOption(option);",
      "info" : "ExpressionStatement[17336-17358]:ExpressionStatement[17500-17522]"
    }, {
      "left" : "if (option.hasArg())",
      "right" : "if (option.hasArg())",
      "info" : "IfStatement[17368-17511]:IfStatement[17532-17675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17397-17444]:Block[17561-17608]"
    }, {
      "left" : "currentOption = option;",
      "right" : "currentOption = option;",
      "info" : "ExpressionStatement[17411-17434]:ExpressionStatement[17575-17598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17466-17511]:Block[17630-17675]"
    }, {
      "left" : "currentOption = null;",
      "right" : "currentOption = null;",
      "info" : "ExpressionStatement[17480-17501]:ExpressionStatement[17644-17665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17728-18220]:Block[17892-18384]"
    }, {
      "left" : "if (option.isRequired())",
      "right" : "if (option.isRequired())",
      "info" : "IfStatement[17738-17832]:IfStatement[17902-17996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17771-17832]:Block[17935-17996]"
    }, {
      "left" : "expectedOpts.remove(option.getKey());",
      "right" : "expectedOpts.remove(option.getKey());",
      "info" : "ExpressionStatement[17785-17822]:ExpressionStatement[17949-17986]"
    }, {
      "left" : "if (options.getOptionGroup(option) != null)",
      "right" : "if (options.getOptionGroup(option) != null)",
      "info" : "IfStatement[17938-18214]:IfStatement[18102-18378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17990-18214]:Block[18154-18378]"
    }, {
      "left" : "OptionGroup group = options.getOptionGroup(option);",
      "right" : "OptionGroup group = options.getOptionGroup(option);",
      "info" : "VariableDeclarationStatement[18004-18055]:VariableDeclarationStatement[18168-18219]"
    }, {
      "left" : "if (group.isRequired())",
      "right" : "if (group.isRequired())",
      "info" : "IfStatement[18069-18164]:IfStatement[18233-18328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18105-18164]:Block[18269-18328]"
    }, {
      "left" : "expectedOpts.remove(group);",
      "right" : "expectedOpts.remove(group);",
      "info" : "ExpressionStatement[18123-18150]:ExpressionStatement[18287-18314]"
    }, {
      "left" : "group.setSelected(option);",
      "right" : "group.setSelected(option);",
      "info" : "ExpressionStatement[18178-18204]:ExpressionStatement[18342-18368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19671-20365]:Block[19835-20529]"
    }, {
      "left" : "for (int i = 1; i < token.length(); i++)",
      "right" : "for (int i = 1; i < token.length(); i++)",
      "info" : "ForStatement[19681-20359]:ForStatement[19845-20523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19730-20359]:Block[19894-20523]"
    }, {
      "left" : "String ch = String.valueOf(token.charAt(i));",
      "right" : "String ch = String.valueOf(token.charAt(i));",
      "info" : "VariableDeclarationStatement[19744-19788]:VariableDeclarationStatement[19908-19952]"
    }, {
      "left" : "if (options.hasOption(ch))",
      "right" : "if (options.hasOption(ch))",
      "info" : "IfStatement[19802-20349]:IfStatement[19966-20513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19841-20190]:Block[20005-20354]"
    }, {
      "left" : "handleOption(options.getOption(ch));",
      "right" : "handleOption(options.getOption(ch));",
      "info" : "ExpressionStatement[19859-19895]:ExpressionStatement[20023-20059]"
    }, {
      "left" : "if (currentOption != null && token.length() != i + 1)",
      "right" : "if (currentOption != null && token.length() != i + 1)",
      "info" : "IfStatement[19913-20176]:IfStatement[20077-20340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19983-20176]:Block[20147-20340]"
    }, {
      "left" : "currentOption.addValueForProcessing(token.substring(i + 1));",
      "right" : "currentOption.addValueForProcessing(token.substring(i + 1));",
      "info" : "ExpressionStatement[20071-20131]:ExpressionStatement[20235-20295]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20152-20158]:BreakStatement[20316-20322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20220-20349]:Block[20384-20513]"
    }, {
      "left" : "handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);",
      "right" : "handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);",
      "info" : "ExpressionStatement[20238-20312]:ExpressionStatement[20402-20476]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20329-20335]:BreakStatement[20493-20499]"
    } ]
  },
  "interFileMappings" : { }
}