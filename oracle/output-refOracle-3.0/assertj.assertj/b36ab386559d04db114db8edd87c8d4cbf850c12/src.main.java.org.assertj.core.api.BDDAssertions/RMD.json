{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BDDAssertions",
      "right" : "BDDAssertions",
      "info" : "TypeDeclaration[1221-18522]:TypeDeclaration[1221-18609]"
    }, {
      "left" : "public static <T> OptionalAssert<T> then(Optional<T> optional)",
      "right" : "public static <T> OptionalAssert<T> then(Optional<T> optional)",
      "info" : "MethodDeclaration[2294-2633]:MethodDeclaration[2294-2636]"
    }, {
      "left" : "public static OptionalIntAssert then(OptionalInt optional)",
      "right" : "public static OptionalIntAssert then(OptionalInt optional)",
      "info" : "MethodDeclaration[2637-2897]:MethodDeclaration[2640-2898]"
    }, {
      "left" : "public static OptionalLongAssert then(OptionalLong optional)",
      "right" : "public static OptionalLongAssert then(OptionalLong optional)",
      "info" : "MethodDeclaration[2901-3166]:MethodDeclaration[2902-3163]"
    }, {
      "left" : "public static OptionalDoubleAssert then(OptionalDouble optional)",
      "right" : "public static OptionalDoubleAssert then(OptionalDouble optional)",
      "info" : "MethodDeclaration[3170-3439]:MethodDeclaration[3167-3434]"
    }, {
      "left" : "public static AbstractBigDecimalAssert<?> then(BigDecimal actual)",
      "right" : "public static AbstractBigDecimalAssert<?> then(BigDecimal actual)",
      "info" : "MethodDeclaration[3443-3730]:MethodDeclaration[3438-3728]"
    }, {
      "left" : "public static AbstractBooleanAssert<?> then(boolean actual)",
      "right" : "public static AbstractBooleanAssert<?> then(boolean actual)",
      "info" : "MethodDeclaration[3734-4012]:MethodDeclaration[3732-4013]"
    }, {
      "left" : "public static AbstractBooleanAssert<?> then(Boolean actual)",
      "right" : "public static AbstractBooleanAssert<?> then(Boolean actual)",
      "info" : "MethodDeclaration[4016-4294]:MethodDeclaration[4017-4298]"
    }, {
      "left" : "public static AbstractBooleanArrayAssert<?> then(boolean[] actual)",
      "right" : "public static AbstractBooleanArrayAssert<?> then(boolean[] actual)",
      "info" : "MethodDeclaration[4298-4588]:MethodDeclaration[4302-4595]"
    }, {
      "left" : "public static AbstractByteAssert<?> then(byte actual)",
      "right" : "public static AbstractByteAssert<?> then(byte actual)",
      "info" : "MethodDeclaration[4592-4861]:MethodDeclaration[4599-4871]"
    }, {
      "left" : "public static AbstractByteAssert<?> then(Byte actual)",
      "right" : "public static AbstractByteAssert<?> then(Byte actual)",
      "info" : "MethodDeclaration[4865-5134]:MethodDeclaration[4875-5147]"
    }, {
      "left" : "public static AbstractByteArrayAssert<?> then(byte[] actual)",
      "right" : "public static AbstractByteArrayAssert<?> then(byte[] actual)",
      "info" : "MethodDeclaration[5138-5419]:MethodDeclaration[5151-5435]"
    }, {
      "left" : "public static AbstractCharacterAssert<?> then(char actual)",
      "right" : "public static AbstractCharacterAssert<?> then(char actual)",
      "info" : "MethodDeclaration[5423-5702]:MethodDeclaration[5439-5721]"
    }, {
      "left" : "public static AbstractCharArrayAssert<?> then(char[] actual)",
      "right" : "public static AbstractCharArrayAssert<?> then(char[] actual)",
      "info" : "MethodDeclaration[5706-5987]:MethodDeclaration[5725-6009]"
    }, {
      "left" : "public static AbstractCharacterAssert<?> then(Character actual)",
      "right" : "public static AbstractCharacterAssert<?> then(Character actual)",
      "info" : "MethodDeclaration[5991-6275]:MethodDeclaration[6013-6300]"
    }, {
      "left" : "public static AbstractClassAssert<?> then(Class<?> actual)",
      "right" : "public static AbstractClassAssert<?> then(Class<?> actual)",
      "info" : "MethodDeclaration[6279-6553]:MethodDeclaration[6304-6581]"
    }, {
      "left" : "public static <T extends Comparable<? super T>> AbstractComparableAssert<?, T> then(T actual)",
      "right" : "public static <T extends Comparable<? super T>> AbstractComparableAssert<?, T> then(T actual)",
      "info" : "MethodDeclaration[6557-6922]:MethodDeclaration[6585-6950]"
    }, {
      "left" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> then(Iterable<? extends T> actual)",
      "right" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> then(Iterable<? extends T> actual)",
      "info" : "MethodDeclaration[6926-7273]:MethodDeclaration[6954-7301]"
    }, {
      "left" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> then(Iterator<? extends T> actual)",
      "right" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> then(Iterator<? extends T> actual)",
      "info" : "MethodDeclaration[7277-7740]:MethodDeclaration[7305-7768]"
    }, {
      "left" : "public static AbstractDoubleAssert<?> then(double actual)",
      "right" : "public static AbstractDoubleAssert<?> then(double actual)",
      "info" : "MethodDeclaration[7744-8019]:MethodDeclaration[7772-8050]"
    }, {
      "left" : "public static AbstractDoubleAssert<?> then(Double actual)",
      "right" : "public static AbstractDoubleAssert<?> then(Double actual)",
      "info" : "MethodDeclaration[8023-8298]:MethodDeclaration[8054-8332]"
    }, {
      "left" : "public static AbstractDoubleArrayAssert<?> then(double[] actual)",
      "right" : "public static AbstractDoubleArrayAssert<?> then(double[] actual)",
      "info" : "MethodDeclaration[8302-8589]:MethodDeclaration[8336-8626]"
    }, {
      "left" : "public static AbstractFileAssert<?> then(File actual)",
      "right" : "public static AbstractFileAssert<?> then(File actual)",
      "info" : "MethodDeclaration[8593-8862]:MethodDeclaration[8630-8902]"
    }, {
      "left" : "public static AbstractInputStreamAssert<?, ? extends InputStream> then(InputStream actual)",
      "right" : "public static AbstractInputStreamAssert<?, ? extends InputStream> then(InputStream actual)",
      "info" : "MethodDeclaration[8866-9179]:MethodDeclaration[8906-9222]"
    }, {
      "left" : "public static AbstractFloatAssert<?> then(float actual)",
      "right" : "public static AbstractFloatAssert<?> then(float actual)",
      "info" : "MethodDeclaration[9183-9455]:MethodDeclaration[9226-9501]"
    }, {
      "left" : "public static AbstractFloatAssert<?> then(Float actual)",
      "right" : "public static AbstractFloatAssert<?> then(Float actual)",
      "info" : "MethodDeclaration[9459-9731]:MethodDeclaration[9505-9780]"
    }, {
      "left" : "public static AbstractFloatArrayAssert<?> then(float[] actual)",
      "right" : "public static AbstractFloatArrayAssert<?> then(float[] actual)",
      "info" : "MethodDeclaration[9735-10019]:MethodDeclaration[9784-10071]"
    }, {
      "left" : "public static AbstractIntegerAssert<?> then(int actual)",
      "right" : "public static AbstractIntegerAssert<?> then(int actual)",
      "info" : "MethodDeclaration[10023-10297]:MethodDeclaration[10075-10352]"
    }, {
      "left" : "public static AbstractIntArrayAssert<?> then(int[] actual)",
      "right" : "public static AbstractIntArrayAssert<?> then(int[] actual)",
      "info" : "MethodDeclaration[10301-10579]:MethodDeclaration[10356-10637]"
    }, {
      "left" : "public static AbstractIntegerAssert<?> then(Integer actual)",
      "right" : "public static AbstractIntegerAssert<?> then(Integer actual)",
      "info" : "MethodDeclaration[10583-10861]:MethodDeclaration[10641-10922]"
    }, {
      "left" : "public static <T> AbstractListAssert<?, ? extends List<? extends T>, T> then(List<? extends T> actual)",
      "right" : "public static <T> AbstractListAssert<?, ? extends List<? extends T>, T> then(List<? extends T> actual)",
      "info" : "MethodDeclaration[10865-11192]:MethodDeclaration[10926-11253]"
    }, {
      "left" : "public static AbstractLongAssert<?> then(long actual)",
      "right" : "public static AbstractLongAssert<?> then(long actual)",
      "info" : "MethodDeclaration[11196-11465]:MethodDeclaration[11257-11529]"
    }, {
      "left" : "public static AbstractLongAssert<?> then(Long actual)",
      "right" : "public static AbstractLongAssert<?> then(Long actual)",
      "info" : "MethodDeclaration[11469-11738]:MethodDeclaration[11533-11805]"
    }, {
      "left" : "public static AbstractLongArrayAssert<?> then(long[] actual)",
      "right" : "public static AbstractLongArrayAssert<?> then(long[] actual)",
      "info" : "MethodDeclaration[11742-12023]:MethodDeclaration[11809-12093]"
    }, {
      "left" : "public static <T> AbstractObjectAssert<?, T> then(T actual)",
      "right" : "public static <T> AbstractObjectAssert<?, T> then(T actual)",
      "info" : "MethodDeclaration[12027-12304]:MethodDeclaration[12097-12377]"
    }, {
      "left" : "public static <T> AbstractObjectArrayAssert<?, T> then(T[] actual)",
      "right" : "public static <T> AbstractObjectArrayAssert<?, T> then(T[] actual)",
      "info" : "MethodDeclaration[12308-12597]:MethodDeclaration[12381-12673]"
    }, {
      "left" : "public static <K, V> AbstractMapAssert<?, ? extends Map<K, V>, K, V> then(Map<K, V> actual)",
      "right" : "public static <K, V> AbstractMapAssert<?, ? extends Map<K, V>, K, V> then(Map<K, V> actual)",
      "info" : "MethodDeclaration[12601-12907]:MethodDeclaration[12677-12986]"
    }, {
      "left" : "public static AbstractShortAssert<?> then(short actual)",
      "right" : "public static AbstractShortAssert<?> then(short actual)",
      "info" : "MethodDeclaration[12911-13183]:MethodDeclaration[12990-13265]"
    }, {
      "left" : "public static AbstractShortAssert<?> then(Short actual)",
      "right" : "public static AbstractShortAssert<?> then(Short actual)",
      "info" : "MethodDeclaration[13187-13459]:MethodDeclaration[13269-13544]"
    }, {
      "left" : "public static AbstractShortArrayAssert<?> then(short[] actual)",
      "right" : "public static AbstractShortArrayAssert<?> then(short[] actual)",
      "info" : "MethodDeclaration[13463-13747]:MethodDeclaration[13548-13835]"
    }, {
      "left" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> then(CharSequence actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> then(CharSequence actual)",
      "info" : "MethodDeclaration[13751-14068]:MethodDeclaration[13839-14159]"
    }, {
      "left" : "public static AbstractCharSequenceAssert<?, String> then(String actual)",
      "right" : "public static AbstractCharSequenceAssert<?, String> then(String actual)",
      "info" : "MethodDeclaration[14072-14361]:MethodDeclaration[14163-14455]"
    }, {
      "left" : "public static AbstractDateAssert<?> then(Date actual)",
      "right" : "public static AbstractDateAssert<?> then(Date actual)",
      "info" : "MethodDeclaration[14365-14634]:MethodDeclaration[14459-14731]"
    }, {
      "left" : "public static AbstractThrowableAssert<?, ? extends Throwable> then(Throwable actual)",
      "right" : "public static AbstractThrowableAssert<?, ? extends Throwable> then(Throwable actual)",
      "info" : "MethodDeclaration[14638-14946]:MethodDeclaration[14735-15046]"
    }, {
      "left" : "public static AbstractThrowableAssert<?, ? extends Throwable> thenThrownBy(ThrowingCallable shouldRaiseThrowable)",
      "right" : "public static AbstractThrowableAssert<?, ? extends Throwable> thenThrownBy(ThrowingCallable shouldRaiseThrowable)",
      "info" : "MethodDeclaration[14952-16163]:MethodDeclaration[15050-16261]"
    }, {
      "left" : "public static AbstractLocalDateAssert<?> then(LocalDate actual)",
      "right" : "public static AbstractLocalDateAssert<?> then(LocalDate actual)",
      "info" : "MethodDeclaration[16167-16451]:MethodDeclaration[16265-16552]"
    }, {
      "left" : "public static AbstractLocalDateTimeAssert<?> then(LocalDateTime actual)",
      "right" : "public static AbstractLocalDateTimeAssert<?> then(LocalDateTime actual)",
      "info" : "MethodDeclaration[16455-16751]:MethodDeclaration[16556-16855]"
    }, {
      "left" : "public static AbstractZonedDateTimeAssert<?> then(ZonedDateTime actual)",
      "right" : "public static AbstractZonedDateTimeAssert<?> then(ZonedDateTime actual)",
      "info" : "MethodDeclaration[16755-17051]:MethodDeclaration[16859-17158]"
    }, {
      "left" : "public static AbstractLocalTimeAssert<?> then(LocalTime actual)",
      "right" : "public static AbstractLocalTimeAssert<?> then(LocalTime actual)",
      "info" : "MethodDeclaration[17055-17318]:MethodDeclaration[17162-17428]"
    }, {
      "left" : "public static AbstractOffsetTimeAssert<?> then(OffsetTime actual)",
      "right" : "public static AbstractOffsetTimeAssert<?> then(OffsetTime actual)",
      "info" : "MethodDeclaration[17322-17597]:MethodDeclaration[17432-17701]"
    }, {
      "left" : "public static AbstractUriAssert<?> then(URI actual)",
      "right" : "public static AbstractUriAssert<?> then(URI actual)",
      "info" : "MethodDeclaration[17607-17855]:MethodDeclaration[17705-17953]"
    }, {
      "left" : "public static AbstractUrlAssert<?> then(URL actual)",
      "right" : "public static AbstractUrlAssert<?> then(URL actual)",
      "info" : "MethodDeclaration[17859-18107]:MethodDeclaration[17957-18205]"
    }, {
      "left" : "public static AbstractOffsetDateTimeAssert<?> then(OffsetDateTime actual)",
      "right" : "public static AbstractOffsetDateTimeAssert<?> then(OffsetDateTime actual)",
      "info" : "MethodDeclaration[18111-18394]:MethodDeclaration[18209-18486]"
    }, {
      "left" : "protected BDDAssertions()",
      "right" : "protected BDDAssertions()",
      "info" : "MethodDeclaration[18400-18520]:MethodDeclaration[18490-18607]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2243-2249]:Modifier[2243-2249]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2250-2255]:TYPE_DECLARATION_KIND[2250-2255]"
    }, {
      "left" : "BDDAssertions",
      "right" : "BDDAssertions",
      "info" : "SimpleName[2256-2269]:SimpleName[2256-2269]"
    }, {
      "left" : "Assertions",
      "right" : "Assertions",
      "info" : "SimpleType[2278-2288]:SimpleType[2278-2288]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2535-2541]:Modifier[2535-2541]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2542-2548]:Modifier[2542-2548]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[2550-2551]:TypeParameter[2550-2551]"
    }, {
      "left" : "OptionalAssert<T>",
      "right" : "OptionalAssert<T>",
      "info" : "ParameterizedType[2553-2570]:ParameterizedType[2553-2570]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[2571-2575]:SimpleName[2571-2575]"
    }, {
      "left" : "Optional<T> optional",
      "right" : "Optional<T> optional",
      "info" : "SingleVariableDeclaration[2576-2596]:SingleVariableDeclaration[2576-2596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2598-2633]:Block[2598-2636]"
    }, {
      "left" : "return assertThat(optional);",
      "right" : "return assertThat(optional);",
      "info" : "ReturnStatement[2601-2629]:ReturnStatement[2604-2632]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2798-2804]:Modifier[2801-2807]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2805-2811]:Modifier[2808-2814]"
    }, {
      "left" : "OptionalIntAssert",
      "right" : "OptionalIntAssert",
      "info" : "SimpleType[2812-2829]:SimpleType[2815-2832]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[2830-2834]:SimpleName[2833-2837]"
    }, {
      "left" : "OptionalInt optional",
      "right" : "OptionalInt optional",
      "info" : "SingleVariableDeclaration[2835-2855]:SingleVariableDeclaration[2838-2858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2857-2897]:Block[2860-2898]"
    }, {
      "left" : "return assertThat(optional);",
      "right" : "return assertThat(optional);",
      "info" : "ReturnStatement[2865-2893]:ReturnStatement[2866-2894]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3064-3070]:Modifier[3064-3070]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3071-3077]:Modifier[3071-3077]"
    }, {
      "left" : "OptionalLongAssert",
      "right" : "OptionalLongAssert",
      "info" : "SimpleType[3078-3096]:SimpleType[3078-3096]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[3097-3101]:SimpleName[3097-3101]"
    }, {
      "left" : "OptionalLong optional",
      "right" : "OptionalLong optional",
      "info" : "SingleVariableDeclaration[3102-3123]:SingleVariableDeclaration[3102-3123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3125-3166]:Block[3125-3163]"
    }, {
      "left" : "return assertThat(optional);",
      "right" : "return assertThat(optional);",
      "info" : "ReturnStatement[3133-3161]:ReturnStatement[3131-3159]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3334-3340]:Modifier[3331-3337]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3341-3347]:Modifier[3338-3344]"
    }, {
      "left" : "OptionalDoubleAssert",
      "right" : "OptionalDoubleAssert",
      "info" : "SimpleType[3348-3368]:SimpleType[3345-3365]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[3369-3373]:SimpleName[3366-3370]"
    }, {
      "left" : "OptionalDouble optional",
      "right" : "OptionalDouble optional",
      "info" : "SingleVariableDeclaration[3374-3397]:SingleVariableDeclaration[3371-3394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3399-3439]:Block[3396-3434]"
    }, {
      "left" : "return assertThat(optional);",
      "right" : "return assertThat(optional);",
      "info" : "ReturnStatement[3407-3435]:ReturnStatement[3402-3430]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3631-3637]:Modifier[3626-3632]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3638-3644]:Modifier[3633-3639]"
    }, {
      "left" : "AbstractBigDecimalAssert<?>",
      "right" : "AbstractBigDecimalAssert<?>",
      "info" : "ParameterizedType[3645-3672]:ParameterizedType[3640-3667]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[3673-3677]:SimpleName[3668-3672]"
    }, {
      "left" : "BigDecimal actual",
      "right" : "BigDecimal actual",
      "info" : "SingleVariableDeclaration[3678-3695]:SingleVariableDeclaration[3673-3690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3697-3730]:Block[3692-3728]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[3700-3726]:ReturnStatement[3698-3724]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3919-3925]:Modifier[3917-3923]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3926-3932]:Modifier[3924-3930]"
    }, {
      "left" : "AbstractBooleanAssert<?>",
      "right" : "AbstractBooleanAssert<?>",
      "info" : "ParameterizedType[3933-3957]:ParameterizedType[3931-3955]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[3958-3962]:SimpleName[3956-3960]"
    }, {
      "left" : "boolean actual",
      "right" : "boolean actual",
      "info" : "SingleVariableDeclaration[3963-3977]:SingleVariableDeclaration[3961-3975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3979-4012]:Block[3977-4013]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[3982-4008]:ReturnStatement[3983-4009]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4201-4207]:Modifier[4202-4208]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4208-4214]:Modifier[4209-4215]"
    }, {
      "left" : "AbstractBooleanAssert<?>",
      "right" : "AbstractBooleanAssert<?>",
      "info" : "ParameterizedType[4215-4239]:ParameterizedType[4216-4240]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[4240-4244]:SimpleName[4241-4245]"
    }, {
      "left" : "Boolean actual",
      "right" : "Boolean actual",
      "info" : "SingleVariableDeclaration[4245-4259]:SingleVariableDeclaration[4246-4260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4261-4294]:Block[4262-4298]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[4264-4290]:ReturnStatement[4268-4294]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4488-4494]:Modifier[4492-4498]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4495-4501]:Modifier[4499-4505]"
    }, {
      "left" : "AbstractBooleanArrayAssert<?>",
      "right" : "AbstractBooleanArrayAssert<?>",
      "info" : "ParameterizedType[4502-4531]:ParameterizedType[4506-4535]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[4532-4536]:SimpleName[4536-4540]"
    }, {
      "left" : "boolean[] actual",
      "right" : "boolean[] actual",
      "info" : "SingleVariableDeclaration[4537-4553]:SingleVariableDeclaration[4541-4557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4555-4588]:Block[4559-4595]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[4558-4584]:ReturnStatement[4565-4591]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4774-4780]:Modifier[4781-4787]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4781-4787]:Modifier[4788-4794]"
    }, {
      "left" : "AbstractByteAssert<?>",
      "right" : "AbstractByteAssert<?>",
      "info" : "ParameterizedType[4788-4809]:ParameterizedType[4795-4816]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[4810-4814]:SimpleName[4817-4821]"
    }, {
      "left" : "byte actual",
      "right" : "byte actual",
      "info" : "SingleVariableDeclaration[4815-4826]:SingleVariableDeclaration[4822-4833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4828-4861]:Block[4835-4871]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[4831-4857]:ReturnStatement[4841-4867]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5047-5053]:Modifier[5057-5063]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5054-5060]:Modifier[5064-5070]"
    }, {
      "left" : "AbstractByteAssert<?>",
      "right" : "AbstractByteAssert<?>",
      "info" : "ParameterizedType[5061-5082]:ParameterizedType[5071-5092]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[5083-5087]:SimpleName[5093-5097]"
    }, {
      "left" : "Byte actual",
      "right" : "Byte actual",
      "info" : "SingleVariableDeclaration[5088-5099]:SingleVariableDeclaration[5098-5109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5101-5134]:Block[5111-5147]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[5104-5130]:ReturnStatement[5117-5143]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5325-5331]:Modifier[5338-5344]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5332-5338]:Modifier[5345-5351]"
    }, {
      "left" : "AbstractByteArrayAssert<?>",
      "right" : "AbstractByteArrayAssert<?>",
      "info" : "ParameterizedType[5339-5365]:ParameterizedType[5352-5378]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[5366-5370]:SimpleName[5379-5383]"
    }, {
      "left" : "byte[] actual",
      "right" : "byte[] actual",
      "info" : "SingleVariableDeclaration[5371-5384]:SingleVariableDeclaration[5384-5397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5386-5419]:Block[5399-5435]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[5389-5415]:ReturnStatement[5405-5431]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5610-5616]:Modifier[5626-5632]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5617-5623]:Modifier[5633-5639]"
    }, {
      "left" : "AbstractCharacterAssert<?>",
      "right" : "AbstractCharacterAssert<?>",
      "info" : "ParameterizedType[5624-5650]:ParameterizedType[5640-5666]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[5651-5655]:SimpleName[5667-5671]"
    }, {
      "left" : "char actual",
      "right" : "char actual",
      "info" : "SingleVariableDeclaration[5656-5667]:SingleVariableDeclaration[5672-5683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5669-5702]:Block[5685-5721]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[5672-5698]:ReturnStatement[5691-5717]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5893-5899]:Modifier[5912-5918]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5900-5906]:Modifier[5919-5925]"
    }, {
      "left" : "AbstractCharArrayAssert<?>",
      "right" : "AbstractCharArrayAssert<?>",
      "info" : "ParameterizedType[5907-5933]:ParameterizedType[5926-5952]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[5934-5938]:SimpleName[5953-5957]"
    }, {
      "left" : "char[] actual",
      "right" : "char[] actual",
      "info" : "SingleVariableDeclaration[5939-5952]:SingleVariableDeclaration[5958-5971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5954-5987]:Block[5973-6009]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[5957-5983]:ReturnStatement[5979-6005]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6178-6184]:Modifier[6200-6206]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6185-6191]:Modifier[6207-6213]"
    }, {
      "left" : "AbstractCharacterAssert<?>",
      "right" : "AbstractCharacterAssert<?>",
      "info" : "ParameterizedType[6192-6218]:ParameterizedType[6214-6240]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[6219-6223]:SimpleName[6241-6245]"
    }, {
      "left" : "Character actual",
      "right" : "Character actual",
      "info" : "SingleVariableDeclaration[6224-6240]:SingleVariableDeclaration[6246-6262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6242-6275]:Block[6264-6300]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[6245-6271]:ReturnStatement[6270-6296]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6461-6467]:Modifier[6486-6492]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6468-6474]:Modifier[6493-6499]"
    }, {
      "left" : "AbstractClassAssert<?>",
      "right" : "AbstractClassAssert<?>",
      "info" : "ParameterizedType[6475-6497]:ParameterizedType[6500-6522]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[6498-6502]:SimpleName[6523-6527]"
    }, {
      "left" : "Class<?> actual",
      "right" : "Class<?> actual",
      "info" : "SingleVariableDeclaration[6503-6518]:SingleVariableDeclaration[6528-6543]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6520-6553]:Block[6545-6581]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[6523-6549]:ReturnStatement[6551-6577]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6792-6798]:Modifier[6820-6826]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6799-6805]:Modifier[6827-6833]"
    }, {
      "left" : "T extends Comparable<? super T>",
      "right" : "T extends Comparable<? super T>",
      "info" : "TypeParameter[6807-6838]:TypeParameter[6835-6866]"
    }, {
      "left" : "AbstractComparableAssert<?, T>",
      "right" : "AbstractComparableAssert<?, T>",
      "info" : "ParameterizedType[6840-6870]:ParameterizedType[6868-6898]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[6871-6875]:SimpleName[6899-6903]"
    }, {
      "left" : "T actual",
      "right" : "T actual",
      "info" : "SingleVariableDeclaration[6876-6884]:SingleVariableDeclaration[6904-6912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6886-6922]:Block[6914-6950]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[6892-6918]:ReturnStatement[6920-6946]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7112-7118]:Modifier[7140-7146]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7119-7125]:Modifier[7147-7153]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[7127-7128]:TypeParameter[7155-7156]"
    }, {
      "left" : "AbstractIterableAssert<?, ? extends Iterable<? extends T>, T>",
      "right" : "AbstractIterableAssert<?, ? extends Iterable<? extends T>, T>",
      "info" : "ParameterizedType[7130-7191]:ParameterizedType[7158-7219]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[7192-7196]:SimpleName[7220-7224]"
    }, {
      "left" : "Iterable<? extends T> actual",
      "right" : "Iterable<? extends T> actual",
      "info" : "SingleVariableDeclaration[7197-7225]:SingleVariableDeclaration[7225-7253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7227-7273]:Block[7255-7301]"
    }, {
      "left" : "return new IterableAssert<>(actual);",
      "right" : "return new IterableAssert<>(actual);",
      "info" : "ReturnStatement[7233-7269]:ReturnStatement[7261-7297]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7579-7585]:Modifier[7607-7613]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7586-7592]:Modifier[7614-7620]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[7594-7595]:TypeParameter[7622-7623]"
    }, {
      "left" : "AbstractIterableAssert<?, ? extends Iterable<? extends T>, T>",
      "right" : "AbstractIterableAssert<?, ? extends Iterable<? extends T>, T>",
      "info" : "ParameterizedType[7597-7658]:ParameterizedType[7625-7686]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[7659-7663]:SimpleName[7687-7691]"
    }, {
      "left" : "Iterator<? extends T> actual",
      "right" : "Iterator<? extends T> actual",
      "info" : "SingleVariableDeclaration[7664-7692]:SingleVariableDeclaration[7692-7720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7694-7740]:Block[7722-7768]"
    }, {
      "left" : "return new IterableAssert<>(actual);",
      "right" : "return new IterableAssert<>(actual);",
      "info" : "ReturnStatement[7700-7736]:ReturnStatement[7728-7764]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7928-7934]:Modifier[7956-7962]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7935-7941]:Modifier[7963-7969]"
    }, {
      "left" : "AbstractDoubleAssert<?>",
      "right" : "AbstractDoubleAssert<?>",
      "info" : "ParameterizedType[7942-7965]:ParameterizedType[7970-7993]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[7966-7970]:SimpleName[7994-7998]"
    }, {
      "left" : "double actual",
      "right" : "double actual",
      "info" : "SingleVariableDeclaration[7971-7984]:SingleVariableDeclaration[7999-8012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7986-8019]:Block[8014-8050]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[7989-8015]:ReturnStatement[8020-8046]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8207-8213]:Modifier[8238-8244]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8214-8220]:Modifier[8245-8251]"
    }, {
      "left" : "AbstractDoubleAssert<?>",
      "right" : "AbstractDoubleAssert<?>",
      "info" : "ParameterizedType[8221-8244]:ParameterizedType[8252-8275]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[8245-8249]:SimpleName[8276-8280]"
    }, {
      "left" : "Double actual",
      "right" : "Double actual",
      "info" : "SingleVariableDeclaration[8250-8263]:SingleVariableDeclaration[8281-8294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8265-8298]:Block[8296-8332]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[8268-8294]:ReturnStatement[8302-8328]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8491-8497]:Modifier[8525-8531]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8498-8504]:Modifier[8532-8538]"
    }, {
      "left" : "AbstractDoubleArrayAssert<?>",
      "right" : "AbstractDoubleArrayAssert<?>",
      "info" : "ParameterizedType[8505-8533]:ParameterizedType[8539-8567]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[8534-8538]:SimpleName[8568-8572]"
    }, {
      "left" : "double[] actual",
      "right" : "double[] actual",
      "info" : "SingleVariableDeclaration[8539-8554]:SingleVariableDeclaration[8573-8588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8556-8589]:Block[8590-8626]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[8559-8585]:ReturnStatement[8596-8622]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8775-8781]:Modifier[8812-8818]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8782-8788]:Modifier[8819-8825]"
    }, {
      "left" : "AbstractFileAssert<?>",
      "right" : "AbstractFileAssert<?>",
      "info" : "ParameterizedType[8789-8810]:ParameterizedType[8826-8847]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[8811-8815]:SimpleName[8848-8852]"
    }, {
      "left" : "File actual",
      "right" : "File actual",
      "info" : "SingleVariableDeclaration[8816-8827]:SingleVariableDeclaration[8853-8864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8829-8862]:Block[8866-8902]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[8832-8858]:ReturnStatement[8872-8898]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9055-9061]:Modifier[9095-9101]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9062-9068]:Modifier[9102-9108]"
    }, {
      "left" : "AbstractInputStreamAssert<?, ? extends InputStream>",
      "right" : "AbstractInputStreamAssert<?, ? extends InputStream>",
      "info" : "ParameterizedType[9069-9120]:ParameterizedType[9109-9160]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[9121-9125]:SimpleName[9161-9165]"
    }, {
      "left" : "InputStream actual",
      "right" : "InputStream actual",
      "info" : "SingleVariableDeclaration[9126-9144]:SingleVariableDeclaration[9166-9184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9146-9179]:Block[9186-9222]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[9149-9175]:ReturnStatement[9192-9218]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9366-9372]:Modifier[9409-9415]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9373-9379]:Modifier[9416-9422]"
    }, {
      "left" : "AbstractFloatAssert<?>",
      "right" : "AbstractFloatAssert<?>",
      "info" : "ParameterizedType[9380-9402]:ParameterizedType[9423-9445]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[9403-9407]:SimpleName[9446-9450]"
    }, {
      "left" : "float actual",
      "right" : "float actual",
      "info" : "SingleVariableDeclaration[9408-9420]:SingleVariableDeclaration[9451-9463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9422-9455]:Block[9465-9501]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[9425-9451]:ReturnStatement[9471-9497]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9642-9648]:Modifier[9688-9694]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9649-9655]:Modifier[9695-9701]"
    }, {
      "left" : "AbstractFloatAssert<?>",
      "right" : "AbstractFloatAssert<?>",
      "info" : "ParameterizedType[9656-9678]:ParameterizedType[9702-9724]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[9679-9683]:SimpleName[9725-9729]"
    }, {
      "left" : "Float actual",
      "right" : "Float actual",
      "info" : "SingleVariableDeclaration[9684-9696]:SingleVariableDeclaration[9730-9742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9698-9731]:Block[9744-9780]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[9701-9727]:ReturnStatement[9750-9776]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9923-9929]:Modifier[9972-9978]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9930-9936]:Modifier[9979-9985]"
    }, {
      "left" : "AbstractFloatArrayAssert<?>",
      "right" : "AbstractFloatArrayAssert<?>",
      "info" : "ParameterizedType[9937-9964]:ParameterizedType[9986-10013]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[9965-9969]:SimpleName[10014-10018]"
    }, {
      "left" : "float[] actual",
      "right" : "float[] actual",
      "info" : "SingleVariableDeclaration[9970-9984]:SingleVariableDeclaration[10019-10033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9986-10019]:Block[10035-10071]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[9989-10015]:ReturnStatement[10041-10067]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10208-10214]:Modifier[10260-10266]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10215-10221]:Modifier[10267-10273]"
    }, {
      "left" : "AbstractIntegerAssert<?>",
      "right" : "AbstractIntegerAssert<?>",
      "info" : "ParameterizedType[10222-10246]:ParameterizedType[10274-10298]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[10247-10251]:SimpleName[10299-10303]"
    }, {
      "left" : "int actual",
      "right" : "int actual",
      "info" : "SingleVariableDeclaration[10252-10262]:SingleVariableDeclaration[10304-10314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10264-10297]:Block[10316-10352]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[10267-10293]:ReturnStatement[10322-10348]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10487-10493]:Modifier[10542-10548]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10494-10500]:Modifier[10549-10555]"
    }, {
      "left" : "AbstractIntArrayAssert<?>",
      "right" : "AbstractIntArrayAssert<?>",
      "info" : "ParameterizedType[10501-10526]:ParameterizedType[10556-10581]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[10527-10531]:SimpleName[10582-10586]"
    }, {
      "left" : "int[] actual",
      "right" : "int[] actual",
      "info" : "SingleVariableDeclaration[10532-10544]:SingleVariableDeclaration[10587-10599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10546-10579]:Block[10601-10637]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[10549-10575]:ReturnStatement[10607-10633]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10768-10774]:Modifier[10826-10832]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10775-10781]:Modifier[10833-10839]"
    }, {
      "left" : "AbstractIntegerAssert<?>",
      "right" : "AbstractIntegerAssert<?>",
      "info" : "ParameterizedType[10782-10806]:ParameterizedType[10840-10864]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[10807-10811]:SimpleName[10865-10869]"
    }, {
      "left" : "Integer actual",
      "right" : "Integer actual",
      "info" : "SingleVariableDeclaration[10812-10826]:SingleVariableDeclaration[10870-10884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10828-10861]:Block[10886-10922]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[10831-10857]:ReturnStatement[10892-10918]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11047-11053]:Modifier[11108-11114]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11054-11060]:Modifier[11115-11121]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[11062-11063]:TypeParameter[11123-11124]"
    }, {
      "left" : "AbstractListAssert<?, ? extends List<? extends T>, T>",
      "right" : "AbstractListAssert<?, ? extends List<? extends T>, T>",
      "info" : "ParameterizedType[11065-11118]:ParameterizedType[11126-11179]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[11119-11123]:SimpleName[11180-11184]"
    }, {
      "left" : "List<? extends T> actual",
      "right" : "List<? extends T> actual",
      "info" : "SingleVariableDeclaration[11124-11148]:SingleVariableDeclaration[11185-11209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11150-11192]:Block[11211-11253]"
    }, {
      "left" : "return new ListAssert<>(actual);",
      "right" : "return new ListAssert<>(actual);",
      "info" : "ReturnStatement[11156-11188]:ReturnStatement[11217-11249]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11378-11384]:Modifier[11439-11445]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11385-11391]:Modifier[11446-11452]"
    }, {
      "left" : "AbstractLongAssert<?>",
      "right" : "AbstractLongAssert<?>",
      "info" : "ParameterizedType[11392-11413]:ParameterizedType[11453-11474]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[11414-11418]:SimpleName[11475-11479]"
    }, {
      "left" : "long actual",
      "right" : "long actual",
      "info" : "SingleVariableDeclaration[11419-11430]:SingleVariableDeclaration[11480-11491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11432-11465]:Block[11493-11529]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[11435-11461]:ReturnStatement[11499-11525]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11651-11657]:Modifier[11715-11721]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11658-11664]:Modifier[11722-11728]"
    }, {
      "left" : "AbstractLongAssert<?>",
      "right" : "AbstractLongAssert<?>",
      "info" : "ParameterizedType[11665-11686]:ParameterizedType[11729-11750]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[11687-11691]:SimpleName[11751-11755]"
    }, {
      "left" : "Long actual",
      "right" : "Long actual",
      "info" : "SingleVariableDeclaration[11692-11703]:SingleVariableDeclaration[11756-11767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11705-11738]:Block[11769-11805]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[11708-11734]:ReturnStatement[11775-11801]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11929-11935]:Modifier[11996-12002]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11936-11942]:Modifier[12003-12009]"
    }, {
      "left" : "AbstractLongArrayAssert<?>",
      "right" : "AbstractLongArrayAssert<?>",
      "info" : "ParameterizedType[11943-11969]:ParameterizedType[12010-12036]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[11970-11974]:SimpleName[12037-12041]"
    }, {
      "left" : "long[] actual",
      "right" : "long[] actual",
      "info" : "SingleVariableDeclaration[11975-11988]:SingleVariableDeclaration[12042-12055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11990-12023]:Block[12057-12093]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[11993-12019]:ReturnStatement[12063-12089]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12211-12217]:Modifier[12281-12287]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12218-12224]:Modifier[12288-12294]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[12226-12227]:TypeParameter[12296-12297]"
    }, {
      "left" : "AbstractObjectAssert<?, T>",
      "right" : "AbstractObjectAssert<?, T>",
      "info" : "ParameterizedType[12229-12255]:ParameterizedType[12299-12325]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[12256-12260]:SimpleName[12326-12330]"
    }, {
      "left" : "T actual",
      "right" : "T actual",
      "info" : "SingleVariableDeclaration[12261-12269]:SingleVariableDeclaration[12331-12339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12271-12304]:Block[12341-12377]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[12274-12300]:ReturnStatement[12347-12373]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12497-12503]:Modifier[12570-12576]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12504-12510]:Modifier[12577-12583]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[12512-12513]:TypeParameter[12585-12586]"
    }, {
      "left" : "AbstractObjectArrayAssert<?, T>",
      "right" : "AbstractObjectArrayAssert<?, T>",
      "info" : "ParameterizedType[12515-12546]:ParameterizedType[12588-12619]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[12547-12551]:SimpleName[12620-12624]"
    }, {
      "left" : "T[] actual",
      "right" : "T[] actual",
      "info" : "SingleVariableDeclaration[12552-12562]:SingleVariableDeclaration[12625-12635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12564-12597]:Block[12637-12673]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[12567-12593]:ReturnStatement[12643-12669]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12782-12788]:Modifier[12858-12864]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12789-12795]:Modifier[12865-12871]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[12797-12798]:TypeParameter[12873-12874]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "TypeParameter[12800-12801]:TypeParameter[12876-12877]"
    }, {
      "left" : "AbstractMapAssert<?, ? extends Map<K, V>, K, V>",
      "right" : "AbstractMapAssert<?, ? extends Map<K, V>, K, V>",
      "info" : "ParameterizedType[12803-12850]:ParameterizedType[12879-12926]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[12851-12855]:SimpleName[12927-12931]"
    }, {
      "left" : "Map<K, V> actual",
      "right" : "Map<K, V> actual",
      "info" : "SingleVariableDeclaration[12856-12872]:SingleVariableDeclaration[12932-12948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12874-12907]:Block[12950-12986]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[12877-12903]:ReturnStatement[12956-12982]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13094-13100]:Modifier[13173-13179]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13101-13107]:Modifier[13180-13186]"
    }, {
      "left" : "AbstractShortAssert<?>",
      "right" : "AbstractShortAssert<?>",
      "info" : "ParameterizedType[13108-13130]:ParameterizedType[13187-13209]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[13131-13135]:SimpleName[13210-13214]"
    }, {
      "left" : "short actual",
      "right" : "short actual",
      "info" : "SingleVariableDeclaration[13136-13148]:SingleVariableDeclaration[13215-13227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13150-13183]:Block[13229-13265]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[13153-13179]:ReturnStatement[13235-13261]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13370-13376]:Modifier[13452-13458]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13377-13383]:Modifier[13459-13465]"
    }, {
      "left" : "AbstractShortAssert<?>",
      "right" : "AbstractShortAssert<?>",
      "info" : "ParameterizedType[13384-13406]:ParameterizedType[13466-13488]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[13407-13411]:SimpleName[13489-13493]"
    }, {
      "left" : "Short actual",
      "right" : "Short actual",
      "info" : "SingleVariableDeclaration[13412-13424]:SingleVariableDeclaration[13494-13506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13426-13459]:Block[13508-13544]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[13429-13455]:ReturnStatement[13514-13540]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13651-13657]:Modifier[13736-13742]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13658-13664]:Modifier[13743-13749]"
    }, {
      "left" : "AbstractShortArrayAssert<?>",
      "right" : "AbstractShortArrayAssert<?>",
      "info" : "ParameterizedType[13665-13692]:ParameterizedType[13750-13777]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[13693-13697]:SimpleName[13778-13782]"
    }, {
      "left" : "short[] actual",
      "right" : "short[] actual",
      "info" : "SingleVariableDeclaration[13698-13712]:SingleVariableDeclaration[13783-13797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13714-13747]:Block[13799-13835]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[13717-13743]:ReturnStatement[13805-13831]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13941-13947]:Modifier[14029-14035]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13948-13954]:Modifier[14036-14042]"
    }, {
      "left" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[13955-14008]:ParameterizedType[14043-14096]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[14009-14013]:SimpleName[14097-14101]"
    }, {
      "left" : "CharSequence actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[14014-14033]:SingleVariableDeclaration[14102-14121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14035-14068]:Block[14123-14159]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[14038-14064]:ReturnStatement[14129-14155]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14256-14262]:Modifier[14347-14353]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14263-14269]:Modifier[14354-14360]"
    }, {
      "left" : "AbstractCharSequenceAssert<?, String>",
      "right" : "AbstractCharSequenceAssert<?, String>",
      "info" : "ParameterizedType[14270-14307]:ParameterizedType[14361-14398]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[14308-14312]:SimpleName[14399-14403]"
    }, {
      "left" : "String actual",
      "right" : "String actual",
      "info" : "SingleVariableDeclaration[14313-14326]:SingleVariableDeclaration[14404-14417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14328-14361]:Block[14419-14455]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[14331-14357]:ReturnStatement[14425-14451]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14547-14553]:Modifier[14641-14647]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14554-14560]:Modifier[14648-14654]"
    }, {
      "left" : "AbstractDateAssert<?>",
      "right" : "AbstractDateAssert<?>",
      "info" : "ParameterizedType[14561-14582]:ParameterizedType[14655-14676]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[14583-14587]:SimpleName[14677-14681]"
    }, {
      "left" : "Date actual",
      "right" : "Date actual",
      "info" : "SingleVariableDeclaration[14588-14599]:SingleVariableDeclaration[14682-14693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14601-14634]:Block[14695-14731]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[14604-14630]:ReturnStatement[14701-14727]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14828-14834]:Modifier[14925-14931]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14835-14841]:Modifier[14932-14938]"
    }, {
      "left" : "AbstractThrowableAssert<?, ? extends Throwable>",
      "right" : "AbstractThrowableAssert<?, ? extends Throwable>",
      "info" : "ParameterizedType[14842-14889]:ParameterizedType[14939-14986]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[14890-14894]:SimpleName[14987-14991]"
    }, {
      "left" : "Throwable actual",
      "right" : "Throwable actual",
      "info" : "SingleVariableDeclaration[14895-14911]:SingleVariableDeclaration[14992-15008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14913-14946]:Block[15010-15046]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[14916-14942]:ReturnStatement[15016-15042]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15991-15997]:Modifier[16089-16095]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15998-16004]:Modifier[16096-16102]"
    }, {
      "left" : "AbstractThrowableAssert<?, ? extends Throwable>",
      "right" : "AbstractThrowableAssert<?, ? extends Throwable>",
      "info" : "ParameterizedType[16005-16052]:ParameterizedType[16103-16150]"
    }, {
      "left" : "thenThrownBy",
      "right" : "thenThrownBy",
      "info" : "SimpleName[16053-16065]:SimpleName[16151-16163]"
    }, {
      "left" : "ThrowingCallable shouldRaiseThrowable",
      "right" : "ThrowingCallable shouldRaiseThrowable",
      "info" : "SingleVariableDeclaration[16066-16103]:SingleVariableDeclaration[16164-16201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16105-16163]:Block[16203-16261]"
    }, {
      "left" : "return assertThatThrownBy(shouldRaiseThrowable);",
      "right" : "return assertThatThrownBy(shouldRaiseThrowable);",
      "info" : "ReturnStatement[16111-16159]:ReturnStatement[16209-16257]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16354-16360]:Modifier[16452-16458]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16361-16367]:Modifier[16459-16465]"
    }, {
      "left" : "AbstractLocalDateAssert<?>",
      "right" : "AbstractLocalDateAssert<?>",
      "info" : "ParameterizedType[16368-16394]:ParameterizedType[16466-16492]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[16395-16399]:SimpleName[16493-16497]"
    }, {
      "left" : "LocalDate actual",
      "right" : "LocalDate actual",
      "info" : "SingleVariableDeclaration[16400-16416]:SingleVariableDeclaration[16498-16514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16418-16451]:Block[16516-16552]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[16421-16447]:ReturnStatement[16522-16548]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16646-16652]:Modifier[16747-16753]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16653-16659]:Modifier[16754-16760]"
    }, {
      "left" : "AbstractLocalDateTimeAssert<?>",
      "right" : "AbstractLocalDateTimeAssert<?>",
      "info" : "ParameterizedType[16660-16690]:ParameterizedType[16761-16791]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[16691-16695]:SimpleName[16792-16796]"
    }, {
      "left" : "LocalDateTime actual",
      "right" : "LocalDateTime actual",
      "info" : "SingleVariableDeclaration[16696-16716]:SingleVariableDeclaration[16797-16817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16718-16751]:Block[16819-16855]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[16721-16747]:ReturnStatement[16825-16851]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16946-16952]:Modifier[17050-17056]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16953-16959]:Modifier[17057-17063]"
    }, {
      "left" : "AbstractZonedDateTimeAssert<?>",
      "right" : "AbstractZonedDateTimeAssert<?>",
      "info" : "ParameterizedType[16960-16990]:ParameterizedType[17064-17094]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[16991-16995]:SimpleName[17095-17099]"
    }, {
      "left" : "ZonedDateTime actual",
      "right" : "ZonedDateTime actual",
      "info" : "SingleVariableDeclaration[16996-17016]:SingleVariableDeclaration[17100-17120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17018-17051]:Block[17122-17158]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[17021-17047]:ReturnStatement[17128-17154]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17221-17227]:Modifier[17328-17334]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17228-17234]:Modifier[17335-17341]"
    }, {
      "left" : "AbstractLocalTimeAssert<?>",
      "right" : "AbstractLocalTimeAssert<?>",
      "info" : "ParameterizedType[17235-17261]:ParameterizedType[17342-17368]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[17262-17266]:SimpleName[17369-17373]"
    }, {
      "left" : "LocalTime actual",
      "right" : "LocalTime actual",
      "info" : "SingleVariableDeclaration[17267-17283]:SingleVariableDeclaration[17374-17390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17285-17318]:Block[17392-17428]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[17288-17314]:ReturnStatement[17398-17424]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17489-17495]:Modifier[17599-17605]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17496-17502]:Modifier[17606-17612]"
    }, {
      "left" : "AbstractOffsetTimeAssert<?>",
      "right" : "AbstractOffsetTimeAssert<?>",
      "info" : "ParameterizedType[17503-17530]:ParameterizedType[17613-17640]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[17531-17535]:SimpleName[17641-17645]"
    }, {
      "left" : "OffsetTime actual",
      "right" : "OffsetTime actual",
      "info" : "SingleVariableDeclaration[17536-17553]:SingleVariableDeclaration[17646-17663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17555-17597]:Block[17665-17701]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[17565-17591]:ReturnStatement[17671-17697]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17767-17773]:Modifier[17865-17871]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17774-17780]:Modifier[17872-17878]"
    }, {
      "left" : "AbstractUriAssert<?>",
      "right" : "AbstractUriAssert<?>",
      "info" : "ParameterizedType[17781-17801]:ParameterizedType[17879-17899]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[17802-17806]:SimpleName[17900-17904]"
    }, {
      "left" : "URI actual",
      "right" : "URI actual",
      "info" : "SingleVariableDeclaration[17807-17817]:SingleVariableDeclaration[17905-17915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17819-17855]:Block[17917-17953]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[17825-17851]:ReturnStatement[17923-17949]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18019-18025]:Modifier[18117-18123]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18026-18032]:Modifier[18124-18130]"
    }, {
      "left" : "AbstractUrlAssert<?>",
      "right" : "AbstractUrlAssert<?>",
      "info" : "ParameterizedType[18033-18053]:ParameterizedType[18131-18151]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[18054-18058]:SimpleName[18152-18156]"
    }, {
      "left" : "URL actual",
      "right" : "URL actual",
      "info" : "SingleVariableDeclaration[18059-18069]:SingleVariableDeclaration[18157-18167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18071-18107]:Block[18169-18205]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[18077-18103]:ReturnStatement[18175-18201]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18278-18284]:Modifier[18376-18382]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18285-18291]:Modifier[18383-18389]"
    }, {
      "left" : "AbstractOffsetDateTimeAssert<?>",
      "right" : "AbstractOffsetDateTimeAssert<?>",
      "info" : "ParameterizedType[18292-18323]:ParameterizedType[18390-18421]"
    }, {
      "left" : "then",
      "right" : "then",
      "info" : "SimpleName[18324-18328]:SimpleName[18422-18426]"
    }, {
      "left" : "OffsetDateTime actual",
      "right" : "OffsetDateTime actual",
      "info" : "SingleVariableDeclaration[18329-18350]:SingleVariableDeclaration[18427-18448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18352-18394]:Block[18450-18486]"
    }, {
      "left" : "return assertThat(actual);",
      "right" : "return assertThat(actual);",
      "info" : "ReturnStatement[18362-18388]:ReturnStatement[18456-18482]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18489-18498]:Modifier[18579-18588]"
    }, {
      "left" : "BDDAssertions",
      "right" : "BDDAssertions",
      "info" : "SimpleName[18499-18512]:SimpleName[18589-18602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18515-18520]:Block[18605-18607]"
    } ]
  },
  "interFileMappings" : { }
}