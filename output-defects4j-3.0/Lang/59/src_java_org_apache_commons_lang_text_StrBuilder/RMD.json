{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "TypeDeclaration[1058-80810]:TypeDeclaration[1058-80809]"
    }, {
      "left" : "static final int CAPACITY = 32;",
      "right" : "static final int CAPACITY = 32;",
      "info" : "FieldDeclaration[2875-2966]:FieldDeclaration[2875-2966]"
    }, {
      "left" : "private static final long serialVersionUID = 7628716375283629643L;",
      "right" : "private static final long serialVersionUID = 7628716375283629643L;",
      "info" : "FieldDeclaration[2972-3138]:FieldDeclaration[2972-3138]"
    }, {
      "left" : "protected char[] buffer;",
      "right" : "protected char[] buffer;",
      "info" : "FieldDeclaration[3144-3202]:FieldDeclaration[3144-3202]"
    }, {
      "left" : "protected int size;",
      "right" : "protected int size;",
      "info" : "FieldDeclaration[3207-3265]:FieldDeclaration[3207-3265]"
    }, {
      "left" : "private String newLine;",
      "right" : "private String newLine;",
      "info" : "FieldDeclaration[3270-3318]:FieldDeclaration[3270-3318]"
    }, {
      "left" : "private String nullText;",
      "right" : "private String nullText;",
      "info" : "FieldDeclaration[3323-3373]:FieldDeclaration[3323-3373]"
    }, {
      "left" : "public StrBuilder()",
      "right" : "public StrBuilder()",
      "info" : "MethodDeclaration[3457-3605]:MethodDeclaration[3457-3605]"
    }, {
      "left" : "public StrBuilder(int initialCapacity)",
      "right" : "public StrBuilder(int initialCapacity)",
      "info" : "MethodDeclaration[3611-3998]:MethodDeclaration[3611-3998]"
    }, {
      "left" : "public StrBuilder(String str)",
      "right" : "public StrBuilder(String str)",
      "info" : "MethodDeclaration[4004-4434]:MethodDeclaration[4004-4434]"
    }, {
      "left" : "public String getNewLineText()",
      "right" : "public String getNewLineText()",
      "info" : "MethodDeclaration[4518-4729]:MethodDeclaration[4518-4729]"
    }, {
      "left" : "public StrBuilder setNewLineText(String newLine)",
      "right" : "public StrBuilder setNewLineText(String newLine)",
      "info" : "MethodDeclaration[4735-5041]:MethodDeclaration[4735-5041]"
    }, {
      "left" : "public String getNullText()",
      "right" : "public String getNullText()",
      "info" : "MethodDeclaration[5125-5315]:MethodDeclaration[5125-5315]"
    }, {
      "left" : "public StrBuilder setNullText(String nullText)",
      "right" : "public StrBuilder setNullText(String nullText)",
      "info" : "MethodDeclaration[5321-5706]:MethodDeclaration[5321-5706]"
    }, {
      "left" : "public int length()",
      "right" : "public int length()",
      "info" : "MethodDeclaration[5790-5933]:MethodDeclaration[5790-5933]"
    }, {
      "left" : "public StrBuilder setLength(int length)",
      "right" : "public StrBuilder setLength(int length)",
      "info" : "MethodDeclaration[5939-6755]:MethodDeclaration[5939-6755]"
    }, {
      "left" : "public int capacity()",
      "right" : "public int capacity()",
      "info" : "MethodDeclaration[6839-7018]:MethodDeclaration[6839-7018]"
    }, {
      "left" : "public StrBuilder ensureCapacity(int capacity)",
      "right" : "public StrBuilder ensureCapacity(int capacity)",
      "info" : "MethodDeclaration[7024-7467]:MethodDeclaration[7024-7467]"
    }, {
      "left" : "public StrBuilder minimizeCapacity()",
      "right" : "public StrBuilder minimizeCapacity()",
      "info" : "MethodDeclaration[7473-7846]:MethodDeclaration[7473-7846]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[7930-8190]:MethodDeclaration[7930-8190]"
    }, {
      "left" : "public boolean isEmpty()",
      "right" : "public boolean isEmpty()",
      "info" : "MethodDeclaration[8196-8558]:MethodDeclaration[8196-8558]"
    }, {
      "left" : "public StrBuilder clear()",
      "right" : "public StrBuilder clear()",
      "info" : "MethodDeclaration[8564-9093]:MethodDeclaration[8564-9093]"
    }, {
      "left" : "public char charAt(int index)",
      "right" : "public char charAt(int index)",
      "info" : "MethodDeclaration[9177-9665]:MethodDeclaration[9177-9665]"
    }, {
      "left" : "public StrBuilder setCharAt(int index, char ch)",
      "right" : "public StrBuilder setCharAt(int index, char ch)",
      "info" : "MethodDeclaration[9671-10201]:MethodDeclaration[9671-10201]"
    }, {
      "left" : "public StrBuilder deleteCharAt(int index)",
      "right" : "public StrBuilder deleteCharAt(int index)",
      "info" : "MethodDeclaration[10207-10713]:MethodDeclaration[10207-10713]"
    }, {
      "left" : "public char[] toCharArray()",
      "right" : "public char[] toCharArray()",
      "info" : "MethodDeclaration[10797-11196]:MethodDeclaration[10797-11196]"
    }, {
      "left" : "public char[] toCharArray(int startIndex, int endIndex)",
      "right" : "public char[] toCharArray(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[11202-12082]:MethodDeclaration[11202-12082]"
    }, {
      "left" : "public char[] getChars(char[] destination)",
      "right" : "public char[] getChars(char[] destination)",
      "info" : "MethodDeclaration[12088-12605]:MethodDeclaration[12088-12605]"
    }, {
      "left" : "public void getChars(int startIndex, int endIndex, char destination[], int destinationIndex)",
      "right" : "public void getChars(int startIndex, int endIndex, char destination[], int destinationIndex)",
      "info" : "MethodDeclaration[12611-13653]:MethodDeclaration[12611-13653]"
    }, {
      "left" : "public StrBuilder appendNewLine()",
      "right" : "public StrBuilder appendNewLine()",
      "info" : "MethodDeclaration[13737-14246]:MethodDeclaration[13737-14246]"
    }, {
      "left" : "public StrBuilder appendNull()",
      "right" : "public StrBuilder appendNull()",
      "info" : "MethodDeclaration[14252-14533]:MethodDeclaration[14252-14533]"
    }, {
      "left" : "public StrBuilder append(Object obj)",
      "right" : "public StrBuilder append(Object obj)",
      "info" : "MethodDeclaration[14539-14908]:MethodDeclaration[14539-14908]"
    }, {
      "left" : "public StrBuilder append(String str)",
      "right" : "public StrBuilder append(String str)",
      "info" : "MethodDeclaration[14914-15478]:MethodDeclaration[14914-15478]"
    }, {
      "left" : "public StrBuilder append(String str, int startIndex, int length)",
      "right" : "public StrBuilder append(String str, int startIndex, int length)",
      "info" : "MethodDeclaration[15484-16504]:MethodDeclaration[15484-16504]"
    }, {
      "left" : "public StrBuilder append(StringBuffer str)",
      "right" : "public StrBuilder append(StringBuffer str)",
      "info" : "MethodDeclaration[16510-17094]:MethodDeclaration[16510-17094]"
    }, {
      "left" : "public StrBuilder append(StringBuffer str, int startIndex, int length)",
      "right" : "public StrBuilder append(StringBuffer str, int startIndex, int length)",
      "info" : "MethodDeclaration[17100-18133]:MethodDeclaration[17100-18133]"
    }, {
      "left" : "public StrBuilder append(StrBuilder str)",
      "right" : "public StrBuilder append(StrBuilder str)",
      "info" : "MethodDeclaration[18139-18745]:MethodDeclaration[18139-18745]"
    }, {
      "left" : "public StrBuilder append(StrBuilder str, int startIndex, int length)",
      "right" : "public StrBuilder append(StrBuilder str, int startIndex, int length)",
      "info" : "MethodDeclaration[18751-19783]:MethodDeclaration[18751-19783]"
    }, {
      "left" : "public StrBuilder append(char[] chars)",
      "right" : "public StrBuilder append(char[] chars)",
      "info" : "MethodDeclaration[19789-20377]:MethodDeclaration[19789-20377]"
    }, {
      "left" : "public StrBuilder append(char[] chars, int startIndex, int length)",
      "right" : "public StrBuilder append(char[] chars, int startIndex, int length)",
      "info" : "MethodDeclaration[20383-21416]:MethodDeclaration[20383-21416]"
    }, {
      "left" : "public StrBuilder append(boolean value)",
      "right" : "public StrBuilder append(boolean value)",
      "info" : "MethodDeclaration[21422-22078]:MethodDeclaration[21422-22078]"
    }, {
      "left" : "public StrBuilder append(char ch)",
      "right" : "public StrBuilder append(char ch)",
      "info" : "MethodDeclaration[22084-22388]:MethodDeclaration[22084-22388]"
    }, {
      "left" : "public StrBuilder append(int value)",
      "right" : "public StrBuilder append(int value)",
      "info" : "MethodDeclaration[22394-22672]:MethodDeclaration[22394-22672]"
    }, {
      "left" : "public StrBuilder append(long value)",
      "right" : "public StrBuilder append(long value)",
      "info" : "MethodDeclaration[22678-22957]:MethodDeclaration[22678-22957]"
    }, {
      "left" : "public StrBuilder append(float value)",
      "right" : "public StrBuilder append(float value)",
      "info" : "MethodDeclaration[22963-23244]:MethodDeclaration[22963-23244]"
    }, {
      "left" : "public StrBuilder append(double value)",
      "right" : "public StrBuilder append(double value)",
      "info" : "MethodDeclaration[23250-23533]:MethodDeclaration[23250-23533]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Object[] array, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Object[] array, String separator)",
      "info" : "MethodDeclaration[23617-24407]:MethodDeclaration[23617-24407]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Collection coll, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Collection coll, String separator)",
      "info" : "MethodDeclaration[24413-25269]:MethodDeclaration[24413-25269]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Iterator it, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Iterator it, String separator)",
      "info" : "MethodDeclaration[25275-26056]:MethodDeclaration[25275-26056]"
    }, {
      "left" : "public StrBuilder appendPadding(int length, char padChar)",
      "right" : "public StrBuilder appendPadding(int length, char padChar)",
      "info" : "MethodDeclaration[26140-26668]:MethodDeclaration[26140-26668]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadLeft(Object obj, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadLeft(Object obj, int width, char padChar)",
      "info" : "MethodDeclaration[26752-27956]:MethodDeclaration[26752-27956]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadLeft(int value, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadLeft(int value, int width, char padChar)",
      "info" : "MethodDeclaration[27962-28595]:MethodDeclaration[27962-28595]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar)",
      "info" : "MethodDeclaration[28601-29792]:MethodDeclaration[28601-29791]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadRight(int value, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadRight(int value, int width, char padChar)",
      "info" : "MethodDeclaration[29798-30427]:MethodDeclaration[29797-30426]"
    }, {
      "left" : "public StrBuilder insert(int index, Object obj)",
      "right" : "public StrBuilder insert(int index, Object obj)",
      "info" : "MethodDeclaration[30511-31049]:MethodDeclaration[30510-31048]"
    }, {
      "left" : "public StrBuilder insert(int index, String str)",
      "right" : "public StrBuilder insert(int index, String str)",
      "info" : "MethodDeclaration[31055-31886]:MethodDeclaration[31054-31885]"
    }, {
      "left" : "public StrBuilder insert(int index, char chars[])",
      "right" : "public StrBuilder insert(int index, char chars[])",
      "info" : "MethodDeclaration[31892-32696]:MethodDeclaration[31891-32695]"
    }, {
      "left" : "public StrBuilder insert(int index, char chars[], int offset, int length)",
      "right" : "public StrBuilder insert(int index, char chars[], int offset, int length)",
      "info" : "MethodDeclaration[32702-33997]:MethodDeclaration[32701-33996]"
    }, {
      "left" : "public StrBuilder insert(int index, boolean value)",
      "right" : "public StrBuilder insert(int index, boolean value)",
      "info" : "MethodDeclaration[34003-35018]:MethodDeclaration[34002-35017]"
    }, {
      "left" : "public StrBuilder insert(int index, char value)",
      "right" : "public StrBuilder insert(int index, char value)",
      "info" : "MethodDeclaration[35024-35554]:MethodDeclaration[35023-35553]"
    }, {
      "left" : "public StrBuilder insert(int index, int value)",
      "right" : "public StrBuilder insert(int index, int value)",
      "info" : "MethodDeclaration[35560-35936]:MethodDeclaration[35559-35935]"
    }, {
      "left" : "public StrBuilder insert(int index, long value)",
      "right" : "public StrBuilder insert(int index, long value)",
      "info" : "MethodDeclaration[35942-36319]:MethodDeclaration[35941-36318]"
    }, {
      "left" : "public StrBuilder insert(int index, float value)",
      "right" : "public StrBuilder insert(int index, float value)",
      "info" : "MethodDeclaration[36325-36703]:MethodDeclaration[36324-36702]"
    }, {
      "left" : "public StrBuilder insert(int index, double value)",
      "right" : "public StrBuilder insert(int index, double value)",
      "info" : "MethodDeclaration[36709-37088]:MethodDeclaration[36708-37087]"
    }, {
      "left" : "private void deleteImpl(int startIndex, int endIndex, int len)",
      "right" : "private void deleteImpl(int startIndex, int endIndex, int len)",
      "info" : "MethodDeclaration[37172-37660]:MethodDeclaration[37171-37659]"
    }, {
      "left" : "public StrBuilder delete(int startIndex, int endIndex)",
      "right" : "public StrBuilder delete(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[37666-38319]:MethodDeclaration[37665-38318]"
    }, {
      "left" : "public StrBuilder deleteAll(char ch)",
      "right" : "public StrBuilder deleteAll(char ch)",
      "info" : "MethodDeclaration[38403-39025]:MethodDeclaration[38402-39024]"
    }, {
      "left" : "public StrBuilder deleteFirst(char ch)",
      "right" : "public StrBuilder deleteFirst(char ch)",
      "info" : "MethodDeclaration[39031-39431]:MethodDeclaration[39030-39430]"
    }, {
      "left" : "public StrBuilder deleteAll(String str)",
      "right" : "public StrBuilder deleteAll(String str)",
      "info" : "MethodDeclaration[39515-40041]:MethodDeclaration[39514-40040]"
    }, {
      "left" : "public StrBuilder deleteFirst(String str)",
      "right" : "public StrBuilder deleteFirst(String str)",
      "info" : "MethodDeclaration[40047-40527]:MethodDeclaration[40046-40526]"
    }, {
      "left" : "public StrBuilder deleteAll(StrMatcher matcher)",
      "right" : "public StrBuilder deleteAll(StrMatcher matcher)",
      "info" : "MethodDeclaration[40611-41138]:MethodDeclaration[40610-41137]"
    }, {
      "left" : "public StrBuilder deleteFirst(StrMatcher matcher)",
      "right" : "public StrBuilder deleteFirst(StrMatcher matcher)",
      "info" : "MethodDeclaration[41144-41670]:MethodDeclaration[41143-41669]"
    }, {
      "left" : "private void replaceImpl(int startIndex, int endIndex, int removeLen, String insertStr, int insertLen)",
      "right" : "private void replaceImpl(int startIndex, int endIndex, int removeLen, String insertStr, int insertLen)",
      "info" : "MethodDeclaration[41754-42736]:MethodDeclaration[41753-42735]"
    }, {
      "left" : "public StrBuilder replace(int startIndex, int endIndex, String replaceStr)",
      "right" : "public StrBuilder replace(int startIndex, int endIndex, String replaceStr)",
      "info" : "MethodDeclaration[42742-43617]:MethodDeclaration[42741-43616]"
    }, {
      "left" : "public StrBuilder replaceAll(char search, char replace)",
      "right" : "public StrBuilder replaceAll(char search, char replace)",
      "info" : "MethodDeclaration[43701-44235]:MethodDeclaration[43700-44234]"
    }, {
      "left" : "public StrBuilder replaceFirst(char search, char replace)",
      "right" : "public StrBuilder replaceFirst(char search, char replace)",
      "info" : "MethodDeclaration[44241-44818]:MethodDeclaration[44240-44817]"
    }, {
      "left" : "public StrBuilder replaceAll(String searchStr, String replaceStr)",
      "right" : "public StrBuilder replaceAll(String searchStr, String replaceStr)",
      "info" : "MethodDeclaration[44902-45734]:MethodDeclaration[44901-45733]"
    }, {
      "left" : "public StrBuilder replaceFirst(String searchStr, String replaceStr)",
      "right" : "public StrBuilder replaceFirst(String searchStr, String replaceStr)",
      "info" : "MethodDeclaration[45740-46510]:MethodDeclaration[45739-46509]"
    }, {
      "left" : "public StrBuilder replaceAll(StrMatcher matcher, String replaceStr)",
      "right" : "public StrBuilder replaceAll(StrMatcher matcher, String replaceStr)",
      "info" : "MethodDeclaration[46594-47237]:MethodDeclaration[46593-47236]"
    }, {
      "left" : "public StrBuilder replaceFirst(StrMatcher matcher, String replaceStr)",
      "right" : "public StrBuilder replaceFirst(StrMatcher matcher, String replaceStr)",
      "info" : "MethodDeclaration[47243-47876]:MethodDeclaration[47242-47875]"
    }, {
      "left" : "public StrBuilder replace(\n            StrMatcher matcher, String replaceStr,\n            int startIndex, int endIndex, int replaceCount)",
      "right" : "public StrBuilder replace(\n            StrMatcher matcher, String replaceStr,\n            int startIndex, int endIndex, int replaceCount)",
      "info" : "MethodDeclaration[47961-49087]:MethodDeclaration[47960-49086]"
    }, {
      "left" : "private StrBuilder replaceImpl(\n            StrMatcher matcher, String replaceStr,\n            int from, int to, int replaceCount)",
      "right" : "private StrBuilder replaceImpl(\n            StrMatcher matcher, String replaceStr,\n            int from, int to, int replaceCount)",
      "info" : "MethodDeclaration[49093-50614]:MethodDeclaration[49092-50613]"
    }, {
      "left" : "public StrBuilder reverse()",
      "right" : "public StrBuilder reverse()",
      "info" : "MethodDeclaration[50698-51241]:MethodDeclaration[50697-51240]"
    }, {
      "left" : "public StrBuilder trim()",
      "right" : "public StrBuilder trim()",
      "info" : "MethodDeclaration[51325-51972]:MethodDeclaration[51324-51971]"
    }, {
      "left" : "public boolean startsWith(String str)",
      "right" : "public boolean startsWith(String str)",
      "info" : "MethodDeclaration[52056-52776]:MethodDeclaration[52055-52775]"
    }, {
      "left" : "public boolean endsWith(String str)",
      "right" : "public boolean endsWith(String str)",
      "info" : "MethodDeclaration[52782-53534]:MethodDeclaration[52781-53533]"
    }, {
      "left" : "public String substring(int start)",
      "right" : "public String substring(int start)",
      "info" : "MethodDeclaration[53618-53943]:MethodDeclaration[53617-53942]"
    }, {
      "left" : "public String substring(int startIndex, int endIndex)",
      "right" : "public String substring(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[53949-54720]:MethodDeclaration[53948-54719]"
    }, {
      "left" : "public String leftString(int length)",
      "right" : "public String leftString(int length)",
      "info" : "MethodDeclaration[54726-55486]:MethodDeclaration[54725-55485]"
    }, {
      "left" : "public String rightString(int length)",
      "right" : "public String rightString(int length)",
      "info" : "MethodDeclaration[55492-56267]:MethodDeclaration[55491-56266]"
    }, {
      "left" : "public String midString(int index, int length)",
      "right" : "public String midString(int index, int length)",
      "info" : "MethodDeclaration[56273-57453]:MethodDeclaration[56272-57452]"
    }, {
      "left" : "public boolean contains(char ch)",
      "right" : "public boolean contains(char ch)",
      "info" : "MethodDeclaration[57537-57953]:MethodDeclaration[57536-57952]"
    }, {
      "left" : "public boolean contains(String str)",
      "right" : "public boolean contains(String str)",
      "info" : "MethodDeclaration[57959-58222]:MethodDeclaration[57958-58221]"
    }, {
      "left" : "public boolean contains(StrMatcher matcher)",
      "right" : "public boolean contains(StrMatcher matcher)",
      "info" : "MethodDeclaration[58228-58750]:MethodDeclaration[58227-58749]"
    }, {
      "left" : "public int indexOf(char ch)",
      "right" : "public int indexOf(char ch)",
      "info" : "MethodDeclaration[58834-59118]:MethodDeclaration[58833-59117]"
    }, {
      "left" : "public int indexOf(char ch, int startIndex)",
      "right" : "public int indexOf(char ch, int startIndex)",
      "info" : "MethodDeclaration[59124-59783]:MethodDeclaration[59123-59782]"
    }, {
      "left" : "public int indexOf(String str)",
      "right" : "public int indexOf(String str)",
      "info" : "MethodDeclaration[59789-60192]:MethodDeclaration[59788-60191]"
    }, {
      "left" : "public int indexOf(String str, int startIndex)",
      "right" : "public int indexOf(String str, int startIndex)",
      "info" : "MethodDeclaration[60198-61461]:MethodDeclaration[60197-61460]"
    }, {
      "left" : "public int indexOf(StrMatcher matcher)",
      "right" : "public int indexOf(StrMatcher matcher)",
      "info" : "MethodDeclaration[61467-61948]:MethodDeclaration[61466-61947]"
    }, {
      "left" : "public int indexOf(StrMatcher matcher, int startIndex)",
      "right" : "public int indexOf(StrMatcher matcher, int startIndex)",
      "info" : "MethodDeclaration[61954-62909]:MethodDeclaration[61953-62908]"
    }, {
      "left" : "public int lastIndexOf(char ch)",
      "right" : "public int lastIndexOf(char ch)",
      "info" : "MethodDeclaration[62993-63290]:MethodDeclaration[62992-63289]"
    }, {
      "left" : "public int lastIndexOf(char ch, int startIndex)",
      "right" : "public int lastIndexOf(char ch, int startIndex)",
      "info" : "MethodDeclaration[63296-63928]:MethodDeclaration[63295-63927]"
    }, {
      "left" : "public int lastIndexOf(String str)",
      "right" : "public int lastIndexOf(String str)",
      "info" : "MethodDeclaration[63934-64350]:MethodDeclaration[63933-64349]"
    }, {
      "left" : "public int lastIndexOf(String str, int startIndex)",
      "right" : "public int lastIndexOf(String str, int startIndex)",
      "info" : "MethodDeclaration[64356-65624]:MethodDeclaration[64355-65623]"
    }, {
      "left" : "public int lastIndexOf(StrMatcher matcher)",
      "right" : "public int lastIndexOf(StrMatcher matcher)",
      "info" : "MethodDeclaration[65630-66120]:MethodDeclaration[65629-66119]"
    }, {
      "left" : "public int lastIndexOf(StrMatcher matcher, int startIndex)",
      "right" : "public int lastIndexOf(StrMatcher matcher, int startIndex)",
      "info" : "MethodDeclaration[66126-67100]:MethodDeclaration[66125-67099]"
    }, {
      "left" : "public StrTokenizer asTokenizer()",
      "right" : "public StrTokenizer asTokenizer()",
      "info" : "MethodDeclaration[67184-68908]:MethodDeclaration[67183-68907]"
    }, {
      "left" : "public Reader asReader()",
      "right" : "public Reader asReader()",
      "info" : "MethodDeclaration[68992-69908]:MethodDeclaration[68991-69907]"
    }, {
      "left" : "public Writer asWriter()",
      "right" : "public Writer asWriter()",
      "info" : "MethodDeclaration[69992-70999]:MethodDeclaration[69991-70998]"
    }, {
      "left" : "public boolean equalsIgnoreCase(StrBuilder other)",
      "right" : "public boolean equalsIgnoreCase(StrBuilder other)",
      "info" : "MethodDeclaration[72341-73188]:MethodDeclaration[72340-73187]"
    }, {
      "left" : "public boolean equals(StrBuilder other)",
      "right" : "public boolean equals(StrBuilder other)",
      "info" : "MethodDeclaration[73194-73907]:MethodDeclaration[73193-73906]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[73913-74353]:MethodDeclaration[73912-74352]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[74359-74656]:MethodDeclaration[74358-74655]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[74740-75115]:MethodDeclaration[74739-75114]"
    }, {
      "left" : "public StringBuffer toStringBuffer()",
      "right" : "public StringBuffer toStringBuffer()",
      "info" : "MethodDeclaration[75121-75417]:MethodDeclaration[75120-75416]"
    }, {
      "left" : "protected int validateRange(int startIndex, int endIndex)",
      "right" : "protected int validateRange(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[75501-76261]:MethodDeclaration[75500-76260]"
    }, {
      "left" : "protected void validateIndex(int index)",
      "right" : "protected void validateIndex(int index)",
      "info" : "MethodDeclaration[76267-76630]:MethodDeclaration[76266-76629]"
    }, {
      "left" : "StrBuilderTokenizer",
      "right" : "StrBuilderTokenizer",
      "info" : "TypeDeclaration[76714-77540]:TypeDeclaration[76713-77539]"
    }, {
      "left" : "StrBuilderTokenizer()",
      "right" : "StrBuilderTokenizer()",
      "info" : "MethodDeclaration[76854-76937]:MethodDeclaration[76853-76936]"
    }, {
      "left" : "protected List tokenize(char[] chars, int offset, int count)",
      "right" : "protected List tokenize(char[] chars, int offset, int count)",
      "info" : "MethodDeclaration[76947-77267]:MethodDeclaration[76946-77266]"
    }, {
      "left" : "public String getContent()",
      "right" : "public String getContent()",
      "info" : "MethodDeclaration[77277-77534]:MethodDeclaration[77276-77533]"
    }, {
      "left" : "StrBuilderReader",
      "right" : "StrBuilderReader",
      "info" : "TypeDeclaration[77624-79652]:TypeDeclaration[77623-79651]"
    }, {
      "left" : "private int pos;",
      "right" : "private int pos;",
      "info" : "FieldDeclaration[77751-77811]:FieldDeclaration[77750-77810]"
    }, {
      "left" : "private int mark;",
      "right" : "private int mark;",
      "info" : "FieldDeclaration[77820-77876]:FieldDeclaration[77819-77875]"
    }, {
      "left" : "StrBuilderReader()",
      "right" : "StrBuilderReader()",
      "info" : "MethodDeclaration[77886-77966]:MethodDeclaration[77885-77965]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[77976-78062]:MethodDeclaration[77975-78061]"
    }, {
      "left" : "public int read()",
      "right" : "public int read()",
      "info" : "MethodDeclaration[78072-78257]:MethodDeclaration[78071-78256]"
    }, {
      "left" : "public int read(char b[], int off, int len)",
      "right" : "public int read(char b[], int off, int len)",
      "info" : "MethodDeclaration[78267-78913]:MethodDeclaration[78266-78912]"
    }, {
      "left" : "public long skip(long n)",
      "right" : "public long skip(long n)",
      "info" : "MethodDeclaration[78923-79213]:MethodDeclaration[78922-79212]"
    }, {
      "left" : "public boolean ready()",
      "right" : "public boolean ready()",
      "info" : "MethodDeclaration[79223-79335]:MethodDeclaration[79222-79334]"
    }, {
      "left" : "public boolean markSupported()",
      "right" : "public boolean markSupported()",
      "info" : "MethodDeclaration[79345-79441]:MethodDeclaration[79344-79440]"
    }, {
      "left" : "public void mark(int readAheadLimit)",
      "right" : "public void mark(int readAheadLimit)",
      "info" : "MethodDeclaration[79451-79552]:MethodDeclaration[79450-79551]"
    }, {
      "left" : "public void reset()",
      "right" : "public void reset()",
      "info" : "MethodDeclaration[79562-79646]:MethodDeclaration[79561-79645]"
    }, {
      "left" : "StrBuilderWriter",
      "right" : "StrBuilderWriter",
      "info" : "TypeDeclaration[79736-80807]:TypeDeclaration[79735-80806]"
    }, {
      "left" : "StrBuilderWriter()",
      "right" : "StrBuilderWriter()",
      "info" : "MethodDeclaration[79864-79944]:MethodDeclaration[79863-79943]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[79954-80040]:MethodDeclaration[79953-80039]"
    }, {
      "left" : "public void flush()",
      "right" : "public void flush()",
      "info" : "MethodDeclaration[80050-80136]:MethodDeclaration[80049-80135]"
    }, {
      "left" : "public void write(int c)",
      "right" : "public void write(int c)",
      "info" : "MethodDeclaration[80146-80257]:MethodDeclaration[80145-80256]"
    }, {
      "left" : "public void write(char[] cbuf)",
      "right" : "public void write(char[] cbuf)",
      "info" : "MethodDeclaration[80267-80380]:MethodDeclaration[80266-80379]"
    }, {
      "left" : "public void write(char[] cbuf, int off, int len)",
      "right" : "public void write(char[] cbuf, int off, int len)",
      "info" : "MethodDeclaration[80390-80531]:MethodDeclaration[80389-80530]"
    }, {
      "left" : "public void write(String str)",
      "right" : "public void write(String str)",
      "info" : "MethodDeclaration[80541-80652]:MethodDeclaration[80540-80651]"
    }, {
      "left" : "public void write(String str, int off, int len)",
      "right" : "public void write(String str, int off, int len)",
      "info" : "MethodDeclaration[80662-80801]:MethodDeclaration[80661-80800]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2823-2829]:Modifier[2823-2829]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2830-2835]:TYPE_DECLARATION_KIND[2830-2835]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleName[2836-2846]:SimpleName[2836-2846]"
    }, {
      "left" : "Cloneable",
      "right" : "Cloneable",
      "info" : "SimpleType[2858-2867]:SimpleType[2858-2867]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3554-3560]:Modifier[3554-3560]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleName[3561-3571]:SimpleName[3561-3571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3574-3605]:Block[3574-3605]"
    }, {
      "left" : "this(CAPACITY);",
      "right" : "this(CAPACITY);",
      "info" : "ConstructorInvocation[3584-3599]:ConstructorInvocation[3584-3599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3805-3811]:Modifier[3805-3811]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleName[3812-3822]:SimpleName[3812-3822]"
    }, {
      "left" : "int initialCapacity",
      "right" : "int initialCapacity",
      "info" : "SingleVariableDeclaration[3823-3842]:SingleVariableDeclaration[3823-3842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3844-3998]:Block[3844-3998]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[3854-3862]:SuperConstructorInvocation[3854-3862]"
    }, {
      "left" : "if (initialCapacity <= 0)",
      "right" : "if (initialCapacity <= 0)",
      "info" : "IfStatement[3871-3948]:IfStatement[3871-3948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3897-3948]:Block[3897-3948]"
    }, {
      "left" : "initialCapacity = CAPACITY;",
      "right" : "initialCapacity = CAPACITY;",
      "info" : "ExpressionStatement[3911-3938]:ExpressionStatement[3911-3938]"
    }, {
      "left" : "buffer = new char[initialCapacity];",
      "right" : "buffer = new char[initialCapacity];",
      "info" : "ExpressionStatement[3957-3992]:ExpressionStatement[3957-3992]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4204-4210]:Modifier[4204-4210]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleName[4211-4221]:SimpleName[4211-4221]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[4222-4232]:SingleVariableDeclaration[4222-4232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4234-4434]:Block[4234-4434]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[4244-4252]:SuperConstructorInvocation[4244-4252]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[4261-4428]:IfStatement[4261-4428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4278-4330]:Block[4278-4330]"
    }, {
      "left" : "buffer = new char[CAPACITY];",
      "right" : "buffer = new char[CAPACITY];",
      "info" : "ExpressionStatement[4292-4320]:ExpressionStatement[4292-4320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4336-4428]:Block[4336-4428]"
    }, {
      "left" : "buffer = new char[str.length() + CAPACITY];",
      "right" : "buffer = new char[str.length() + CAPACITY];",
      "info" : "ExpressionStatement[4350-4393]:ExpressionStatement[4350-4393]"
    }, {
      "left" : "append(str);",
      "right" : "append(str);",
      "info" : "ExpressionStatement[4406-4418]:ExpressionStatement[4406-4418]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4667-4673]:Modifier[4667-4673]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4674-4680]:SimpleType[4674-4680]"
    }, {
      "left" : "getNewLineText",
      "right" : "getNewLineText",
      "info" : "SimpleName[4681-4695]:SimpleName[4681-4695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4698-4729]:Block[4698-4729]"
    }, {
      "left" : "return newLine;",
      "right" : "return newLine;",
      "info" : "ReturnStatement[4708-4723]:ReturnStatement[4708-4723]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4932-4938]:Modifier[4932-4938]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[4939-4949]:SimpleType[4939-4949]"
    }, {
      "left" : "setNewLineText",
      "right" : "setNewLineText",
      "info" : "SimpleName[4950-4964]:SimpleName[4950-4964]"
    }, {
      "left" : "String newLine",
      "right" : "String newLine",
      "info" : "SingleVariableDeclaration[4965-4979]:SingleVariableDeclaration[4965-4979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4981-5041]:Block[4981-5041]"
    }, {
      "left" : "this.newLine = newLine;",
      "right" : "this.newLine = newLine;",
      "info" : "ExpressionStatement[4991-5014]:ExpressionStatement[4991-5014]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5023-5035]:ReturnStatement[5023-5035]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5255-5261]:Modifier[5255-5261]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5262-5268]:SimpleType[5262-5268]"
    }, {
      "left" : "getNullText",
      "right" : "getNullText",
      "info" : "SimpleName[5269-5280]:SimpleName[5269-5280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5283-5315]:Block[5283-5315]"
    }, {
      "left" : "return nullText;",
      "right" : "return nullText;",
      "info" : "ReturnStatement[5293-5309]:ReturnStatement[5293-5309]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5500-5506]:Modifier[5500-5506]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[5507-5517]:SimpleType[5507-5517]"
    }, {
      "left" : "setNullText",
      "right" : "setNullText",
      "info" : "SimpleName[5518-5529]:SimpleName[5518-5529]"
    }, {
      "left" : "String nullText",
      "right" : "String nullText",
      "info" : "SingleVariableDeclaration[5530-5545]:SingleVariableDeclaration[5530-5545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5547-5706]:Block[5547-5706]"
    }, {
      "left" : "if (nullText != null && nullText.length() == 0)",
      "right" : "if (nullText != null && nullText.length() == 0)",
      "info" : "IfStatement[5557-5645]:IfStatement[5557-5645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5605-5645]:Block[5605-5645]"
    }, {
      "left" : "nullText = null;",
      "right" : "nullText = null;",
      "info" : "ExpressionStatement[5619-5635]:ExpressionStatement[5619-5635]"
    }, {
      "left" : "this.nullText = nullText;",
      "right" : "this.nullText = nullText;",
      "info" : "ExpressionStatement[5654-5679]:ExpressionStatement[5654-5679]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5688-5700]:ReturnStatement[5688-5700]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5885-5891]:Modifier[5885-5891]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5892-5895]:PrimitiveType[5892-5895]"
    }, {
      "left" : "length",
      "right" : "length",
      "info" : "SimpleName[5896-5902]:SimpleName[5896-5902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5905-5933]:Block[5905-5933]"
    }, {
      "left" : "return size;",
      "right" : "return size;",
      "info" : "ReturnStatement[5915-5927]:ReturnStatement[5915-5927]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6259-6265]:Modifier[6259-6265]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[6266-6276]:SimpleType[6266-6276]"
    }, {
      "left" : "setLength",
      "right" : "setLength",
      "info" : "SimpleName[6277-6286]:SimpleName[6277-6286]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[6287-6297]:SingleVariableDeclaration[6287-6297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6299-6755]:Block[6299-6755]"
    }, {
      "left" : "if (length < 0)",
      "right" : "if (length < 0)",
      "info" : "IfStatement[6309-6399]:IfStatement[6309-6399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6325-6399]:Block[6325-6399]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(length);",
      "right" : "throw new StringIndexOutOfBoundsException(length);",
      "info" : "ThrowStatement[6339-6389]:ThrowStatement[6339-6389]"
    }, {
      "left" : "if (length < size)",
      "right" : "if (length < size)",
      "info" : "IfStatement[6408-6728]:IfStatement[6408-6728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6427-6465]:Block[6427-6465]"
    }, {
      "left" : "size = length;",
      "right" : "size = length;",
      "info" : "ExpressionStatement[6441-6455]:ExpressionStatement[6441-6455]"
    }, {
      "left" : "if (length > size)",
      "right" : "if (length > size)",
      "info" : "IfStatement[6471-6728]:IfStatement[6471-6728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6490-6728]:Block[6490-6728]"
    }, {
      "left" : "ensureCapacity(length);",
      "right" : "ensureCapacity(length);",
      "info" : "ExpressionStatement[6504-6527]:ExpressionStatement[6504-6527]"
    }, {
      "left" : "int oldEnd = size;",
      "right" : "int oldEnd = size;",
      "info" : "VariableDeclarationStatement[6540-6558]:VariableDeclarationStatement[6540-6558]"
    }, {
      "left" : "int newEnd = length;",
      "right" : "int newEnd = length;",
      "info" : "VariableDeclarationStatement[6571-6591]:VariableDeclarationStatement[6571-6591]"
    }, {
      "left" : "size = length;",
      "right" : "size = length;",
      "info" : "ExpressionStatement[6604-6618]:ExpressionStatement[6604-6618]"
    }, {
      "left" : "for (int i = oldEnd; i < newEnd; i++)",
      "right" : "for (int i = oldEnd; i < newEnd; i++)",
      "info" : "ForStatement[6631-6718]:ForStatement[6631-6718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6669-6718]:Block[6669-6718]"
    }, {
      "left" : "buffer[i] = '\\0';",
      "right" : "buffer[i] = '\\0';",
      "info" : "ExpressionStatement[6687-6704]:ExpressionStatement[6687-6704]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6737-6749]:ReturnStatement[6737-6749]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6959-6965]:Modifier[6959-6965]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6966-6969]:PrimitiveType[6966-6969]"
    }, {
      "left" : "capacity",
      "right" : "capacity",
      "info" : "SimpleName[6970-6978]:SimpleName[6970-6978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6981-7018]:Block[6981-7018]"
    }, {
      "left" : "return buffer.length;",
      "right" : "return buffer.length;",
      "info" : "ReturnStatement[6991-7012]:ReturnStatement[6991-7012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7213-7219]:Modifier[7213-7219]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[7220-7230]:SimpleType[7220-7230]"
    }, {
      "left" : "ensureCapacity",
      "right" : "ensureCapacity",
      "info" : "SimpleName[7231-7245]:SimpleName[7231-7245]"
    }, {
      "left" : "int capacity",
      "right" : "int capacity",
      "info" : "SingleVariableDeclaration[7246-7258]:SingleVariableDeclaration[7246-7258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7260-7467]:Block[7260-7467]"
    }, {
      "left" : "if (capacity > buffer.length)",
      "right" : "if (capacity > buffer.length)",
      "info" : "IfStatement[7270-7440]:IfStatement[7270-7440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7300-7440]:Block[7300-7440]"
    }, {
      "left" : "char[] old = buffer;",
      "right" : "char[] old = buffer;",
      "info" : "VariableDeclarationStatement[7314-7334]:VariableDeclarationStatement[7314-7334]"
    }, {
      "left" : "buffer = new char[capacity];",
      "right" : "buffer = new char[capacity];",
      "info" : "ExpressionStatement[7347-7375]:ExpressionStatement[7347-7375]"
    }, {
      "left" : "System.arraycopy(old, 0, buffer, 0, size);",
      "right" : "System.arraycopy(old, 0, buffer, 0, size);",
      "info" : "ExpressionStatement[7388-7430]:ExpressionStatement[7388-7430]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[7449-7461]:ReturnStatement[7449-7461]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7602-7608]:Modifier[7602-7608]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[7609-7619]:SimpleType[7609-7619]"
    }, {
      "left" : "minimizeCapacity",
      "right" : "minimizeCapacity",
      "info" : "SimpleName[7620-7636]:SimpleName[7620-7636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7639-7846]:Block[7639-7846]"
    }, {
      "left" : "if (buffer.length > length())",
      "right" : "if (buffer.length > length())",
      "info" : "IfStatement[7649-7819]:IfStatement[7649-7819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7679-7819]:Block[7679-7819]"
    }, {
      "left" : "char[] old = buffer;",
      "right" : "char[] old = buffer;",
      "info" : "VariableDeclarationStatement[7693-7713]:VariableDeclarationStatement[7693-7713]"
    }, {
      "left" : "buffer = new char[length()];",
      "right" : "buffer = new char[length()];",
      "info" : "ExpressionStatement[7726-7754]:ExpressionStatement[7726-7754]"
    }, {
      "left" : "System.arraycopy(old, 0, buffer, 0, size);",
      "right" : "System.arraycopy(old, 0, buffer, 0, size);",
      "info" : "ExpressionStatement[7767-7809]:ExpressionStatement[7767-7809]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[7828-7840]:ReturnStatement[7828-7840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8144-8150]:Modifier[8144-8150]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[8151-8154]:PrimitiveType[8151-8154]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[8155-8159]:SimpleName[8155-8159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8162-8190]:Block[8162-8190]"
    }, {
      "left" : "return size;",
      "right" : "return size;",
      "info" : "ReturnStatement[8172-8184]:ReturnStatement[8172-8184]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8500-8506]:Modifier[8500-8506]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8507-8514]:PrimitiveType[8507-8514]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[8515-8522]:SimpleName[8515-8522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8525-8558]:Block[8525-8558]"
    }, {
      "left" : "return size == 0;",
      "right" : "return size == 0;",
      "info" : "ReturnStatement[8535-8552]:ReturnStatement[8535-8552]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9021-9027]:Modifier[9021-9027]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[9028-9038]:SimpleType[9028-9038]"
    }, {
      "left" : "clear",
      "right" : "clear",
      "info" : "SimpleName[9039-9044]:SimpleName[9039-9044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9047-9093]:Block[9047-9093]"
    }, {
      "left" : "size = 0;",
      "right" : "size = 0;",
      "info" : "ExpressionStatement[9057-9066]:ExpressionStatement[9057-9066]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9075-9087]:ReturnStatement[9075-9087]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9480-9486]:Modifier[9480-9486]"
    }, {
      "left" : "char",
      "right" : "char",
      "info" : "PrimitiveType[9487-9491]:PrimitiveType[9487-9491]"
    }, {
      "left" : "charAt",
      "right" : "charAt",
      "info" : "SimpleName[9492-9498]:SimpleName[9492-9498]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[9499-9508]:SingleVariableDeclaration[9499-9508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9510-9665]:Block[9510-9665]"
    }, {
      "left" : "if (index < 0 || index >= length())",
      "right" : "if (index < 0 || index >= length())",
      "info" : "IfStatement[9520-9629]:IfStatement[9520-9629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9556-9629]:Block[9556-9629]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[9570-9619]:ThrowStatement[9570-9619]"
    }, {
      "left" : "return buffer[index];",
      "right" : "return buffer[index];",
      "info" : "ReturnStatement[9638-9659]:ReturnStatement[9638-9659]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9979-9985]:Modifier[9979-9985]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[9986-9996]:SimpleType[9986-9996]"
    }, {
      "left" : "setCharAt",
      "right" : "setCharAt",
      "info" : "SimpleName[9997-10006]:SimpleName[9997-10006]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[10007-10016]:SingleVariableDeclaration[10007-10016]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[10018-10025]:SingleVariableDeclaration[10018-10025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10027-10201]:Block[10027-10201]"
    }, {
      "left" : "if (index < 0 || index >= length())",
      "right" : "if (index < 0 || index >= length())",
      "info" : "IfStatement[10037-10146]:IfStatement[10037-10146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10073-10146]:Block[10073-10146]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[10087-10136]:ThrowStatement[10087-10136]"
    }, {
      "left" : "buffer[index] = ch;",
      "right" : "buffer[index] = ch;",
      "info" : "ExpressionStatement[10155-10174]:ExpressionStatement[10155-10174]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10183-10195]:ReturnStatement[10183-10195]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10488-10494]:Modifier[10488-10494]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[10495-10505]:SimpleType[10495-10505]"
    }, {
      "left" : "deleteCharAt",
      "right" : "deleteCharAt",
      "info" : "SimpleName[10506-10518]:SimpleName[10506-10518]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[10519-10528]:SingleVariableDeclaration[10519-10528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10530-10713]:Block[10530-10713]"
    }, {
      "left" : "if (index < 0 || index >= size)",
      "right" : "if (index < 0 || index >= size)",
      "info" : "IfStatement[10540-10645]:IfStatement[10540-10645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10572-10645]:Block[10572-10645]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[10586-10635]:ThrowStatement[10586-10635]"
    }, {
      "left" : "deleteImpl(index, index + 1, 1);",
      "right" : "deleteImpl(index, index + 1, 1);",
      "info" : "ExpressionStatement[10654-10686]:ExpressionStatement[10654-10686]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10695-10707]:ReturnStatement[10695-10707]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10964-10970]:Modifier[10964-10970]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[10971-10977]:ArrayType[10971-10977]"
    }, {
      "left" : "toCharArray",
      "right" : "toCharArray",
      "info" : "SimpleName[10978-10989]:SimpleName[10978-10989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10992-11196]:Block[10992-11196]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[11002-11076]:IfStatement[11002-11076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11017-11076]:Block[11017-11076]"
    }, {
      "left" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "info" : "ReturnStatement[11031-11066]:ReturnStatement[11031-11066]"
    }, {
      "left" : "char chars[] = new char[size];",
      "right" : "char chars[] = new char[size];",
      "info" : "VariableDeclarationStatement[11085-11115]:VariableDeclarationStatement[11085-11115]"
    }, {
      "left" : "System.arraycopy(buffer, 0, chars, 0, size);",
      "right" : "System.arraycopy(buffer, 0, chars, 0, size);",
      "info" : "ExpressionStatement[11124-11168]:ExpressionStatement[11124-11168]"
    }, {
      "left" : "return chars;",
      "right" : "return chars;",
      "info" : "ReturnStatement[11177-11190]:ReturnStatement[11177-11190]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11719-11725]:Modifier[11719-11725]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[11726-11732]:ArrayType[11726-11732]"
    }, {
      "left" : "toCharArray",
      "right" : "toCharArray",
      "info" : "SimpleName[11733-11744]:SimpleName[11733-11744]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[11745-11759]:SingleVariableDeclaration[11745-11759]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[11761-11773]:SingleVariableDeclaration[11761-11773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11775-12082]:Block[11775-12082]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[11785-11832]:ExpressionStatement[11785-11832]"
    }, {
      "left" : "int len = endIndex - startIndex;",
      "right" : "int len = endIndex - startIndex;",
      "info" : "VariableDeclarationStatement[11841-11873]:VariableDeclarationStatement[11841-11873]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[11882-11955]:IfStatement[11882-11955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11896-11955]:Block[11896-11955]"
    }, {
      "left" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "info" : "ReturnStatement[11910-11945]:ReturnStatement[11910-11945]"
    }, {
      "left" : "char chars[] = new char[len];",
      "right" : "char chars[] = new char[len];",
      "info" : "VariableDeclarationStatement[11964-11993]:VariableDeclarationStatement[11964-11993]"
    }, {
      "left" : "System.arraycopy(buffer, startIndex, chars, 0, len);",
      "right" : "System.arraycopy(buffer, startIndex, chars, 0, len);",
      "info" : "ExpressionStatement[12002-12054]:ExpressionStatement[12002-12054]"
    }, {
      "left" : "return chars;",
      "right" : "return chars;",
      "info" : "ReturnStatement[12063-12076]:ReturnStatement[12063-12076]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12327-12333]:Modifier[12327-12333]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[12334-12340]:ArrayType[12334-12340]"
    }, {
      "left" : "getChars",
      "right" : "getChars",
      "info" : "SimpleName[12341-12349]:SimpleName[12341-12349]"
    }, {
      "left" : "char[] destination",
      "right" : "char[] destination",
      "info" : "SingleVariableDeclaration[12350-12368]:SingleVariableDeclaration[12350-12368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12370-12605]:Block[12370-12605]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[12380-12399]:VariableDeclarationStatement[12380-12399]"
    }, {
      "left" : "if (destination == null || destination.length < len)",
      "right" : "if (destination == null || destination.length < len)",
      "info" : "IfStatement[12408-12513]:IfStatement[12408-12513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12461-12513]:Block[12461-12513]"
    }, {
      "left" : "destination = new char[len];",
      "right" : "destination = new char[len];",
      "info" : "ExpressionStatement[12475-12503]:ExpressionStatement[12475-12503]"
    }, {
      "left" : "System.arraycopy(buffer, 0, destination, 0, len);",
      "right" : "System.arraycopy(buffer, 0, destination, 0, len);",
      "info" : "ExpressionStatement[12522-12571]:ExpressionStatement[12522-12571]"
    }, {
      "left" : "return destination;",
      "right" : "return destination;",
      "info" : "ReturnStatement[12580-12599]:ReturnStatement[12580-12599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13103-13109]:Modifier[13103-13109]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13110-13114]:PrimitiveType[13110-13114]"
    }, {
      "left" : "getChars",
      "right" : "getChars",
      "info" : "SimpleName[13115-13123]:SimpleName[13115-13123]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[13124-13138]:SingleVariableDeclaration[13124-13138]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[13140-13152]:SingleVariableDeclaration[13140-13152]"
    }, {
      "left" : "char destination[]",
      "right" : "char destination[]",
      "info" : "SingleVariableDeclaration[13154-13172]:SingleVariableDeclaration[13154-13172]"
    }, {
      "left" : "int destinationIndex",
      "right" : "int destinationIndex",
      "info" : "SingleVariableDeclaration[13174-13194]:SingleVariableDeclaration[13174-13194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13196-13653]:Block[13196-13653]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[13206-13304]:IfStatement[13206-13304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13226-13304]:Block[13226-13304]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "info" : "ThrowStatement[13240-13294]:ThrowStatement[13240-13294]"
    }, {
      "left" : "if (endIndex < 0 || endIndex > length())",
      "right" : "if (endIndex < 0 || endIndex > length())",
      "info" : "IfStatement[13313-13430]:IfStatement[13313-13430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13354-13430]:Block[13354-13430]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(endIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(endIndex);",
      "info" : "ThrowStatement[13368-13420]:ThrowStatement[13368-13420]"
    }, {
      "left" : "if (startIndex > endIndex)",
      "right" : "if (startIndex > endIndex)",
      "info" : "IfStatement[13439-13547]:IfStatement[13439-13547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13466-13547]:Block[13466-13547]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "info" : "ThrowStatement[13480-13537]:ThrowStatement[13480-13537]"
    }, {
      "left" : "System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);",
      "right" : "System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);",
      "info" : "ExpressionStatement[13556-13647]:ExpressionStatement[13556-13647]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14058-14064]:Modifier[14058-14064]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[14065-14075]:SimpleType[14065-14075]"
    }, {
      "left" : "appendNewLine",
      "right" : "appendNewLine",
      "info" : "SimpleName[14076-14089]:SimpleName[14076-14089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14092-14246]:Block[14092-14246]"
    }, {
      "left" : "if (newLine == null)",
      "right" : "if (newLine == null)",
      "info" : "IfStatement[14102-14208]:IfStatement[14102-14208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14124-14208]:Block[14124-14208]"
    }, {
      "left" : "append(SystemUtils.LINE_SEPARATOR);",
      "right" : "append(SystemUtils.LINE_SEPARATOR);",
      "info" : "ExpressionStatement[14138-14173]:ExpressionStatement[14138-14173]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14186-14198]:ReturnStatement[14186-14198]"
    }, {
      "left" : "return append(newLine);",
      "right" : "return append(newLine);",
      "info" : "ReturnStatement[14217-14240]:ReturnStatement[14217-14240]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14394-14400]:Modifier[14394-14400]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[14401-14411]:SimpleType[14401-14411]"
    }, {
      "left" : "appendNull",
      "right" : "appendNull",
      "info" : "SimpleName[14412-14422]:SimpleName[14412-14422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14425-14533]:Block[14425-14533]"
    }, {
      "left" : "if (nullText == null)",
      "right" : "if (nullText == null)",
      "info" : "IfStatement[14435-14494]:IfStatement[14435-14494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14458-14494]:Block[14458-14494]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14472-14484]:ReturnStatement[14472-14484]"
    }, {
      "left" : "return append(nullText);",
      "right" : "return append(nullText);",
      "info" : "ReturnStatement[14503-14527]:ReturnStatement[14503-14527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14746-14752]:Modifier[14746-14752]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[14753-14763]:SimpleType[14753-14763]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[14764-14770]:SimpleName[14764-14770]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[14771-14781]:SingleVariableDeclaration[14771-14781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14783-14908]:Block[14783-14908]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[14793-14854]:IfStatement[14793-14854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14810-14854]:Block[14810-14854]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[14824-14844]:ReturnStatement[14824-14844]"
    }, {
      "left" : "return append(obj.toString());",
      "right" : "return append(obj.toString());",
      "info" : "ReturnStatement[14864-14894]:ReturnStatement[14864-14894]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15120-15126]:Modifier[15120-15126]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[15127-15137]:SimpleType[15127-15137]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[15138-15144]:SimpleName[15138-15144]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[15145-15155]:SingleVariableDeclaration[15145-15155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15157-15478]:Block[15157-15478]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[15167-15228]:IfStatement[15167-15228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15184-15228]:Block[15184-15228]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[15198-15218]:ReturnStatement[15198-15218]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[15237-15263]:VariableDeclarationStatement[15237-15263]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[15272-15451]:IfStatement[15272-15451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15288-15451]:Block[15288-15451]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[15302-15321]:VariableDeclarationStatement[15302-15321]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[15334-15363]:ExpressionStatement[15334-15363]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, len);",
      "right" : "str.getChars(0, strLen, buffer, len);",
      "info" : "ExpressionStatement[15376-15413]:ExpressionStatement[15376-15413]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[15426-15441]:ExpressionStatement[15426-15441]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15460-15472]:ReturnStatement[15460-15472]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15824-15830]:Modifier[15824-15830]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[15831-15841]:SimpleType[15831-15841]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[15842-15848]:SimpleName[15842-15848]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[15849-15859]:SingleVariableDeclaration[15849-15859]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[15861-15875]:SingleVariableDeclaration[15861-15875]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[15877-15887]:SingleVariableDeclaration[15877-15887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15889-16504]:Block[15889-16504]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[15899-15960]:IfStatement[15899-15960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15916-15960]:Block[15916-15960]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[15930-15950]:ReturnStatement[15930-15950]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[15969-16112]:IfStatement[15969-16112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16018-16112]:Block[16018-16112]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[16032-16102]:ThrowStatement[16032-16102]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[16121-16267]:IfStatement[16121-16267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16177-16267]:Block[16177-16267]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[16191-16257]:ThrowStatement[16191-16257]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[16276-16477]:IfStatement[16276-16477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16292-16477]:Block[16292-16477]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[16306-16325]:VariableDeclarationStatement[16306-16325]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[16338-16367]:ExpressionStatement[16338-16367]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[16380-16439]:ExpressionStatement[16380-16439]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[16452-16467]:ExpressionStatement[16452-16467]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16486-16498]:ReturnStatement[16486-16498]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16730-16736]:Modifier[16730-16736]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[16737-16747]:SimpleType[16737-16747]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[16748-16754]:SimpleName[16748-16754]"
    }, {
      "left" : "StringBuffer str",
      "right" : "StringBuffer str",
      "info" : "SingleVariableDeclaration[16755-16771]:SingleVariableDeclaration[16755-16771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16773-17094]:Block[16773-17094]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[16783-16844]:IfStatement[16783-16844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16800-16844]:Block[16800-16844]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[16814-16834]:ReturnStatement[16814-16834]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[16853-16879]:VariableDeclarationStatement[16853-16879]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[16888-17067]:IfStatement[16888-17067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16904-17067]:Block[16904-17067]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[16918-16937]:VariableDeclarationStatement[16918-16937]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[16950-16979]:ExpressionStatement[16950-16979]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, len);",
      "right" : "str.getChars(0, strLen, buffer, len);",
      "info" : "ExpressionStatement[16992-17029]:ExpressionStatement[16992-17029]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[17042-17057]:ExpressionStatement[17042-17057]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17076-17088]:ReturnStatement[17076-17088]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17447-17453]:Modifier[17447-17453]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[17454-17464]:SimpleType[17454-17464]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[17465-17471]:SimpleName[17465-17471]"
    }, {
      "left" : "StringBuffer str",
      "right" : "StringBuffer str",
      "info" : "SingleVariableDeclaration[17472-17488]:SingleVariableDeclaration[17472-17488]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[17490-17504]:SingleVariableDeclaration[17490-17504]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[17506-17516]:SingleVariableDeclaration[17506-17516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17518-18133]:Block[17518-18133]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[17528-17589]:IfStatement[17528-17589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17545-17589]:Block[17545-17589]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[17559-17579]:ReturnStatement[17559-17579]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[17598-17741]:IfStatement[17598-17741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17647-17741]:Block[17647-17741]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[17661-17731]:ThrowStatement[17661-17731]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[17750-17896]:IfStatement[17750-17896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17806-17896]:Block[17806-17896]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[17820-17886]:ThrowStatement[17820-17886]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[17905-18106]:IfStatement[17905-18106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17921-18106]:Block[17921-18106]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[17935-17954]:VariableDeclarationStatement[17935-17954]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[17967-17996]:ExpressionStatement[17967-17996]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[18009-18068]:ExpressionStatement[18009-18068]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[18081-18096]:ExpressionStatement[18081-18096]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18115-18127]:ReturnStatement[18115-18127]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18367-18373]:Modifier[18367-18373]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[18374-18384]:SimpleType[18374-18384]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[18385-18391]:SimpleName[18385-18391]"
    }, {
      "left" : "StrBuilder str",
      "right" : "StrBuilder str",
      "info" : "SingleVariableDeclaration[18392-18406]:SingleVariableDeclaration[18392-18406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18408-18745]:Block[18408-18745]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[18418-18479]:IfStatement[18418-18479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18435-18479]:Block[18435-18479]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[18449-18469]:ReturnStatement[18449-18469]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[18488-18514]:VariableDeclarationStatement[18488-18514]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[18523-18718]:IfStatement[18523-18718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18539-18718]:Block[18539-18718]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[18553-18572]:VariableDeclarationStatement[18553-18572]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[18585-18614]:ExpressionStatement[18585-18614]"
    }, {
      "left" : "System.arraycopy(str.buffer, 0, buffer, len, strLen);",
      "right" : "System.arraycopy(str.buffer, 0, buffer, len, strLen);",
      "info" : "ExpressionStatement[18627-18680]:ExpressionStatement[18627-18680]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[18693-18708]:ExpressionStatement[18693-18708]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18727-18739]:ReturnStatement[18727-18739]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19099-19105]:Modifier[19099-19105]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[19106-19116]:SimpleType[19106-19116]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[19117-19123]:SimpleName[19117-19123]"
    }, {
      "left" : "StrBuilder str",
      "right" : "StrBuilder str",
      "info" : "SingleVariableDeclaration[19124-19138]:SingleVariableDeclaration[19124-19138]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[19140-19154]:SingleVariableDeclaration[19140-19154]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[19156-19166]:SingleVariableDeclaration[19156-19166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19168-19783]:Block[19168-19783]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[19178-19239]:IfStatement[19178-19239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19195-19239]:Block[19195-19239]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[19209-19229]:ReturnStatement[19209-19229]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[19248-19391]:IfStatement[19248-19391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19297-19391]:Block[19297-19391]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[19311-19381]:ThrowStatement[19311-19381]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[19400-19546]:IfStatement[19400-19546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19456-19546]:Block[19456-19546]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[19470-19536]:ThrowStatement[19470-19536]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[19555-19756]:IfStatement[19555-19756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19571-19756]:Block[19571-19756]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[19585-19604]:VariableDeclarationStatement[19585-19604]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[19617-19646]:ExpressionStatement[19617-19646]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[19659-19718]:ExpressionStatement[19659-19718]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[19731-19746]:ExpressionStatement[19731-19746]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[19765-19777]:ReturnStatement[19765-19777]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20004-20010]:Modifier[20004-20010]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[20011-20021]:SimpleType[20011-20021]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[20022-20028]:SimpleName[20022-20028]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[20029-20041]:SingleVariableDeclaration[20029-20041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20043-20377]:Block[20043-20377]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[20053-20116]:IfStatement[20053-20116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20072-20116]:Block[20072-20116]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[20086-20106]:ReturnStatement[20086-20106]"
    }, {
      "left" : "int strLen = chars.length;",
      "right" : "int strLen = chars.length;",
      "info" : "VariableDeclarationStatement[20125-20151]:VariableDeclarationStatement[20125-20151]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[20160-20350]:IfStatement[20160-20350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20176-20350]:Block[20176-20350]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[20190-20209]:VariableDeclarationStatement[20190-20209]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[20222-20251]:ExpressionStatement[20222-20251]"
    }, {
      "left" : "System.arraycopy(chars, 0, buffer, len, strLen);",
      "right" : "System.arraycopy(chars, 0, buffer, len, strLen);",
      "info" : "ExpressionStatement[20264-20312]:ExpressionStatement[20264-20312]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[20325-20340]:ExpressionStatement[20325-20340]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[20359-20371]:ReturnStatement[20359-20371]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20724-20730]:Modifier[20724-20730]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[20731-20741]:SimpleType[20731-20741]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[20742-20748]:SimpleName[20742-20748]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[20749-20761]:SingleVariableDeclaration[20749-20761]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[20763-20777]:SingleVariableDeclaration[20763-20777]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[20779-20789]:SingleVariableDeclaration[20779-20789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20791-21416]:Block[20791-21416]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[20801-20864]:IfStatement[20801-20864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20820-20864]:Block[20820-20864]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[20834-20854]:ReturnStatement[20834-20854]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > chars.length)",
      "right" : "if (startIndex < 0 || startIndex > chars.length)",
      "info" : "IfStatement[20873-21021]:IfStatement[20873-21021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20922-21021]:Block[20922-21021]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid startIndex: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid startIndex: \" + length);",
      "info" : "ThrowStatement[20936-21011]:ThrowStatement[20936-21011]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > chars.length)",
      "right" : "if (length < 0 || (startIndex + length) > chars.length)",
      "info" : "IfStatement[21030-21181]:IfStatement[21030-21181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21086-21181]:Block[21086-21181]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "info" : "ThrowStatement[21100-21171]:ThrowStatement[21100-21171]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[21190-21389]:IfStatement[21190-21389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21206-21389]:Block[21206-21389]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[21220-21239]:VariableDeclarationStatement[21220-21239]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[21252-21281]:ExpressionStatement[21252-21281]"
    }, {
      "left" : "System.arraycopy(chars, startIndex, buffer, len, length);",
      "right" : "System.arraycopy(chars, startIndex, buffer, len, length);",
      "info" : "ExpressionStatement[21294-21351]:ExpressionStatement[21294-21351]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[21364-21379]:ExpressionStatement[21364-21379]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[21398-21410]:ReturnStatement[21398-21410]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21580-21586]:Modifier[21580-21586]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[21587-21597]:SimpleType[21587-21597]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[21598-21604]:SimpleName[21598-21604]"
    }, {
      "left" : "boolean value",
      "right" : "boolean value",
      "info" : "SingleVariableDeclaration[21605-21618]:SingleVariableDeclaration[21605-21618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21620-22078]:Block[21620-22078]"
    }, {
      "left" : "if (value)",
      "right" : "if (value)",
      "info" : "IfStatement[21630-22051]:IfStatement[21630-22051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21641-21826]:Block[21641-21826]"
    }, {
      "left" : "ensureCapacity(size + 4);",
      "right" : "ensureCapacity(size + 4);",
      "info" : "ExpressionStatement[21655-21680]:ExpressionStatement[21655-21680]"
    }, {
      "left" : "buffer[size++] = 't';",
      "right" : "buffer[size++] = 't';",
      "info" : "ExpressionStatement[21693-21714]:ExpressionStatement[21693-21714]"
    }, {
      "left" : "buffer[size++] = 'r';",
      "right" : "buffer[size++] = 'r';",
      "info" : "ExpressionStatement[21727-21748]:ExpressionStatement[21727-21748]"
    }, {
      "left" : "buffer[size++] = 'u';",
      "right" : "buffer[size++] = 'u';",
      "info" : "ExpressionStatement[21761-21782]:ExpressionStatement[21761-21782]"
    }, {
      "left" : "buffer[size++] = 'e';",
      "right" : "buffer[size++] = 'e';",
      "info" : "ExpressionStatement[21795-21816]:ExpressionStatement[21795-21816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21832-22051]:Block[21832-22051]"
    }, {
      "left" : "ensureCapacity(size + 5);",
      "right" : "ensureCapacity(size + 5);",
      "info" : "ExpressionStatement[21846-21871]:ExpressionStatement[21846-21871]"
    }, {
      "left" : "buffer[size++] = 'f';",
      "right" : "buffer[size++] = 'f';",
      "info" : "ExpressionStatement[21884-21905]:ExpressionStatement[21884-21905]"
    }, {
      "left" : "buffer[size++] = 'a';",
      "right" : "buffer[size++] = 'a';",
      "info" : "ExpressionStatement[21918-21939]:ExpressionStatement[21918-21939]"
    }, {
      "left" : "buffer[size++] = 'l';",
      "right" : "buffer[size++] = 'l';",
      "info" : "ExpressionStatement[21952-21973]:ExpressionStatement[21952-21973]"
    }, {
      "left" : "buffer[size++] = 's';",
      "right" : "buffer[size++] = 's';",
      "info" : "ExpressionStatement[21986-22007]:ExpressionStatement[21986-22007]"
    }, {
      "left" : "buffer[size++] = 'e';",
      "right" : "buffer[size++] = 'e';",
      "info" : "ExpressionStatement[22020-22041]:ExpressionStatement[22020-22041]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[22060-22072]:ReturnStatement[22060-22072]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22236-22242]:Modifier[22236-22242]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[22243-22253]:SimpleType[22243-22253]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[22254-22260]:SimpleName[22254-22260]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[22261-22268]:SingleVariableDeclaration[22261-22268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22270-22388]:Block[22270-22388]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[22280-22299]:VariableDeclarationStatement[22280-22299]"
    }, {
      "left" : "ensureCapacity(len + 1);",
      "right" : "ensureCapacity(len + 1);",
      "info" : "ExpressionStatement[22308-22332]:ExpressionStatement[22308-22332]"
    }, {
      "left" : "buffer[size++] = ch;",
      "right" : "buffer[size++] = ch;",
      "info" : "ExpressionStatement[22341-22361]:ExpressionStatement[22341-22361]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[22370-22382]:ReturnStatement[22370-22382]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22583-22589]:Modifier[22583-22589]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[22590-22600]:SimpleType[22590-22600]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[22601-22607]:SimpleName[22601-22607]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[22608-22617]:SingleVariableDeclaration[22608-22617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22619-22672]:Block[22619-22672]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[22629-22666]:ReturnStatement[22629-22666]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22867-22873]:Modifier[22867-22873]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[22874-22884]:SimpleType[22874-22884]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[22885-22891]:SimpleName[22885-22891]"
    }, {
      "left" : "long value",
      "right" : "long value",
      "info" : "SingleVariableDeclaration[22892-22902]:SingleVariableDeclaration[22892-22902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22904-22957]:Block[22904-22957]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[22914-22951]:ReturnStatement[22914-22951]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23153-23159]:Modifier[23153-23159]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[23160-23170]:SimpleType[23160-23170]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[23171-23177]:SimpleName[23171-23177]"
    }, {
      "left" : "float value",
      "right" : "float value",
      "info" : "SingleVariableDeclaration[23178-23189]:SingleVariableDeclaration[23178-23189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23191-23244]:Block[23191-23244]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[23201-23238]:ReturnStatement[23201-23238]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23441-23447]:Modifier[23441-23447]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[23448-23458]:SimpleType[23448-23458]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[23459-23465]:SimpleName[23459-23465]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[23466-23478]:SingleVariableDeclaration[23466-23478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23480-23533]:Block[23480-23533]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[23490-23527]:ReturnStatement[23490-23527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24019-24025]:Modifier[24019-24025]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[24026-24036]:SimpleType[24026-24036]"
    }, {
      "left" : "appendWithSeparators",
      "right" : "appendWithSeparators",
      "info" : "SimpleName[24037-24057]:SimpleName[24037-24057]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[24058-24072]:SingleVariableDeclaration[24058-24072]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[24074-24090]:SingleVariableDeclaration[24074-24090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24092-24407]:Block[24092-24407]"
    }, {
      "left" : "if (array != null && array.length > 0)",
      "right" : "if (array != null && array.length > 0)",
      "info" : "IfStatement[24102-24380]:IfStatement[24102-24380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24141-24380]:Block[24141-24380]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[24155-24204]:ExpressionStatement[24155-24204]"
    }, {
      "left" : "append(array[0]);",
      "right" : "append(array[0]);",
      "info" : "ExpressionStatement[24217-24234]:ExpressionStatement[24217-24234]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[24247-24370]:ForStatement[24247-24370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24286-24370]:Block[24286-24370]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[24304-24322]:ExpressionStatement[24304-24322]"
    }, {
      "left" : "append(array[i]);",
      "right" : "append(array[i]);",
      "info" : "ExpressionStatement[24339-24356]:ExpressionStatement[24339-24356]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[24389-24401]:ReturnStatement[24389-24401]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24828-24834]:Modifier[24828-24834]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[24835-24845]:SimpleType[24835-24845]"
    }, {
      "left" : "appendWithSeparators",
      "right" : "appendWithSeparators",
      "info" : "SimpleName[24846-24866]:SimpleName[24846-24866]"
    }, {
      "left" : "Collection coll",
      "right" : "Collection coll",
      "info" : "SingleVariableDeclaration[24867-24882]:SingleVariableDeclaration[24867-24882]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[24884-24900]:SingleVariableDeclaration[24884-24900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24902-25269]:Block[24902-25269]"
    }, {
      "left" : "if (coll != null && coll.size() > 0)",
      "right" : "if (coll != null && coll.size() > 0)",
      "info" : "IfStatement[24912-25242]:IfStatement[24912-25242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24949-25242]:Block[24949-25242]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[24963-25012]:ExpressionStatement[24963-25012]"
    }, {
      "left" : "Iterator it = coll.iterator();",
      "right" : "Iterator it = coll.iterator();",
      "info" : "VariableDeclarationStatement[25025-25055]:VariableDeclarationStatement[25025-25055]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[25068-25232]:WhileStatement[25068-25232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25089-25232]:Block[25089-25232]"
    }, {
      "left" : "append(it.next());",
      "right" : "append(it.next());",
      "info" : "ExpressionStatement[25107-25125]:ExpressionStatement[25107-25125]"
    }, {
      "left" : "if (it.hasNext())",
      "right" : "if (it.hasNext())",
      "info" : "IfStatement[25142-25218]:IfStatement[25142-25218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25160-25218]:Block[25160-25218]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[25182-25200]:ExpressionStatement[25182-25200]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[25251-25263]:ReturnStatement[25251-25263]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25683-25689]:Modifier[25683-25689]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[25690-25700]:SimpleType[25690-25700]"
    }, {
      "left" : "appendWithSeparators",
      "right" : "appendWithSeparators",
      "info" : "SimpleName[25701-25721]:SimpleName[25701-25721]"
    }, {
      "left" : "Iterator it",
      "right" : "Iterator it",
      "info" : "SingleVariableDeclaration[25722-25733]:SingleVariableDeclaration[25722-25733]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[25735-25751]:SingleVariableDeclaration[25735-25751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25753-26056]:Block[25753-26056]"
    }, {
      "left" : "if (it != null)",
      "right" : "if (it != null)",
      "info" : "IfStatement[25763-26029]:IfStatement[25763-26029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25779-26029]:Block[25779-26029]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[25793-25842]:ExpressionStatement[25793-25842]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[25855-26019]:WhileStatement[25855-26019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25876-26019]:Block[25876-26019]"
    }, {
      "left" : "append(it.next());",
      "right" : "append(it.next());",
      "info" : "ExpressionStatement[25894-25912]:ExpressionStatement[25894-25912]"
    }, {
      "left" : "if (it.hasNext())",
      "right" : "if (it.hasNext())",
      "info" : "IfStatement[25929-26005]:IfStatement[25929-26005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25947-26005]:Block[25947-26005]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[25969-25987]:ExpressionStatement[25969-25987]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[26038-26050]:ReturnStatement[26038-26050]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26399-26405]:Modifier[26399-26405]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[26406-26416]:SimpleType[26406-26416]"
    }, {
      "left" : "appendPadding",
      "right" : "appendPadding",
      "info" : "SimpleName[26417-26430]:SimpleName[26417-26430]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[26431-26441]:SingleVariableDeclaration[26431-26441]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[26443-26455]:SingleVariableDeclaration[26443-26455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26457-26668]:Block[26457-26668]"
    }, {
      "left" : "if (length >= 0)",
      "right" : "if (length >= 0)",
      "info" : "IfStatement[26467-26641]:IfStatement[26467-26641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26484-26641]:Block[26484-26641]"
    }, {
      "left" : "ensureCapacity(size + length);",
      "right" : "ensureCapacity(size + length);",
      "info" : "ExpressionStatement[26498-26528]:ExpressionStatement[26498-26528]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[26541-26631]:ForStatement[26541-26631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26574-26631]:Block[26574-26631]"
    }, {
      "left" : "buffer[size++] = padChar;",
      "right" : "buffer[size++] = padChar;",
      "info" : "ExpressionStatement[26592-26617]:ExpressionStatement[26592-26617]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[26650-26662]:ReturnStatement[26650-26662]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27269-27275]:Modifier[27269-27275]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[27276-27286]:SimpleType[27276-27286]"
    }, {
      "left" : "appendFixedWidthPadLeft",
      "right" : "appendFixedWidthPadLeft",
      "info" : "SimpleName[27287-27310]:SimpleName[27287-27310]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[27311-27321]:SingleVariableDeclaration[27311-27321]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[27323-27332]:SingleVariableDeclaration[27323-27332]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[27334-27346]:SingleVariableDeclaration[27334-27346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27348-27956]:Block[27348-27956]"
    }, {
      "left" : "if (width > 0)",
      "right" : "if (width > 0)",
      "info" : "IfStatement[27358-27929]:IfStatement[27358-27929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27373-27929]:Block[27373-27929]"
    }, {
      "left" : "ensureCapacity(size + width);",
      "right" : "ensureCapacity(size + width);",
      "info" : "ExpressionStatement[27387-27416]:ExpressionStatement[27387-27416]"
    }, {
      "left" : "String str = (obj == null ? getNullText() : obj.toString());",
      "right" : "String str = (obj == null ? getNullText() : obj.toString());",
      "info" : "VariableDeclarationStatement[27429-27489]:VariableDeclarationStatement[27429-27489]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[27502-27528]:VariableDeclarationStatement[27502-27528]"
    }, {
      "left" : "if (strLen >= width)",
      "right" : "if (strLen >= width)",
      "info" : "IfStatement[27541-27892]:IfStatement[27541-27892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27562-27645]:Block[27562-27645]"
    }, {
      "left" : "str.getChars(strLen - width, strLen, buffer, size);",
      "right" : "str.getChars(strLen - width, strLen, buffer, size);",
      "info" : "ExpressionStatement[27580-27631]:ExpressionStatement[27580-27631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27651-27892]:Block[27651-27892]"
    }, {
      "left" : "int padLen = width - strLen;",
      "right" : "int padLen = width - strLen;",
      "info" : "VariableDeclarationStatement[27669-27697]:VariableDeclarationStatement[27669-27697]"
    }, {
      "left" : "for (int i = 0; i < padLen; i++)",
      "right" : "for (int i = 0; i < padLen; i++)",
      "info" : "ForStatement[27714-27814]:ForStatement[27714-27814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27747-27814]:Block[27747-27814]"
    }, {
      "left" : "buffer[size + i] = padChar;",
      "right" : "buffer[size + i] = padChar;",
      "info" : "ExpressionStatement[27769-27796]:ExpressionStatement[27769-27796]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, size + padLen);",
      "right" : "str.getChars(0, strLen, buffer, size + padLen);",
      "info" : "ExpressionStatement[27831-27878]:ExpressionStatement[27831-27878]"
    }, {
      "left" : "size += width;",
      "right" : "size += width;",
      "info" : "ExpressionStatement[27905-27919]:ExpressionStatement[27905-27919]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[27938-27950]:ReturnStatement[27938-27950]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28431-28437]:Modifier[28431-28437]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[28438-28448]:SimpleType[28438-28448]"
    }, {
      "left" : "appendFixedWidthPadLeft",
      "right" : "appendFixedWidthPadLeft",
      "info" : "SimpleName[28449-28472]:SimpleName[28449-28472]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[28473-28482]:SingleVariableDeclaration[28473-28482]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[28484-28493]:SingleVariableDeclaration[28484-28493]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[28495-28507]:SingleVariableDeclaration[28495-28507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28509-28595]:Block[28509-28595]"
    }, {
      "left" : "return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",
      "right" : "return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",
      "info" : "ReturnStatement[28519-28589]:ReturnStatement[28519-28589]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29117-29123]:Modifier[29117-29123]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[29124-29134]:SimpleType[29124-29134]"
    }, {
      "left" : "appendFixedWidthPadRight",
      "right" : "appendFixedWidthPadRight",
      "info" : "SimpleName[29135-29159]:SimpleName[29135-29159]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[29160-29170]:SingleVariableDeclaration[29160-29170]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[29172-29181]:SingleVariableDeclaration[29172-29181]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[29183-29195]:SingleVariableDeclaration[29183-29195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29197-29792]:Block[29197-29791]"
    }, {
      "left" : "if (width > 0)",
      "right" : "if (width > 0)",
      "info" : "IfStatement[29207-29765]:IfStatement[29207-29764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29222-29765]:Block[29222-29764]"
    }, {
      "left" : "ensureCapacity(size + width);",
      "right" : "ensureCapacity(size + width);",
      "info" : "ExpressionStatement[29236-29265]:ExpressionStatement[29236-29265]"
    }, {
      "left" : "String str = (obj == null ? getNullText() : obj.toString());",
      "right" : "String str = (obj == null ? getNullText() : obj.toString());",
      "info" : "VariableDeclarationStatement[29278-29338]:VariableDeclarationStatement[29278-29338]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[29351-29377]:VariableDeclarationStatement[29351-29377]"
    }, {
      "left" : "if (strLen >= width)",
      "right" : "if (strLen >= width)",
      "info" : "IfStatement[29390-29728]:IfStatement[29390-29727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29411-29481]:Block[29411-29480]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, size);",
      "right" : "str.getChars(0, strLen, buffer, size);",
      "info" : "ExpressionStatement[29429-29467]:ExpressionStatement[29549-29587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29487-29728]:Block[29486-29727]"
    }, {
      "left" : "int padLen = width - strLen;",
      "right" : "int padLen = width - strLen;",
      "info" : "VariableDeclarationStatement[29505-29533]:VariableDeclarationStatement[29504-29532]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, size);",
      "right" : "str.getChars(0, width, buffer, size);",
      "info" : "ExpressionStatement[29550-29588]:ExpressionStatement[29429-29466]"
    }, {
      "left" : "strLen",
      "right" : "width",
      "info" : "SimpleName[29566-29572]:SimpleName[29445-29450]"
    }, {
      "left" : "for (int i = 0; i < padLen; i++)",
      "right" : "for (int i = 0; i < padLen; i++)",
      "info" : "ForStatement[29605-29714]:ForStatement[29604-29713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29638-29714]:Block[29637-29713]"
    }, {
      "left" : "buffer[size + strLen + i] = padChar;",
      "right" : "buffer[size + strLen + i] = padChar;",
      "info" : "ExpressionStatement[29660-29696]:ExpressionStatement[29659-29695]"
    }, {
      "left" : "size += width;",
      "right" : "size += width;",
      "info" : "ExpressionStatement[29741-29755]:ExpressionStatement[29740-29754]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[29774-29786]:ReturnStatement[29773-29785]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30261-30267]:Modifier[30260-30266]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[30268-30278]:SimpleType[30267-30277]"
    }, {
      "left" : "appendFixedWidthPadRight",
      "right" : "appendFixedWidthPadRight",
      "info" : "SimpleName[30279-30303]:SimpleName[30278-30302]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[30304-30313]:SingleVariableDeclaration[30303-30312]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[30315-30324]:SingleVariableDeclaration[30314-30323]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[30326-30338]:SingleVariableDeclaration[30325-30337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30340-30427]:Block[30339-30426]"
    }, {
      "left" : "return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",
      "right" : "return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",
      "info" : "ReturnStatement[30350-30421]:ReturnStatement[30349-30420]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30867-30873]:Modifier[30866-30872]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[30874-30884]:SimpleType[30873-30883]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[30885-30891]:SimpleName[30884-30890]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[30892-30901]:SingleVariableDeclaration[30891-30900]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[30903-30913]:SingleVariableDeclaration[30902-30912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30915-31049]:Block[30914-31048]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[30925-30997]:IfStatement[30924-30996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30942-30997]:Block[30941-30996]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[30956-30987]:ReturnStatement[30955-30986]"
    }, {
      "left" : "return insert(index, obj.toString());",
      "right" : "return insert(index, obj.toString());",
      "info" : "ReturnStatement[31006-31043]:ReturnStatement[31005-31042]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31383-31389]:Modifier[31382-31388]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[31390-31400]:SimpleType[31389-31399]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[31401-31407]:SimpleName[31400-31406]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[31408-31417]:SingleVariableDeclaration[31407-31416]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[31419-31429]:SingleVariableDeclaration[31418-31428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31431-31886]:Block[31430-31885]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[31441-31462]:ExpressionStatement[31440-31461]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[31471-31527]:IfStatement[31470-31526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31488-31527]:Block[31487-31526]"
    }, {
      "left" : "str = nullText;",
      "right" : "str = nullText;",
      "info" : "ExpressionStatement[31502-31517]:ExpressionStatement[31501-31516]"
    }, {
      "left" : "int strLen = (str == null ? 0 : str.length());",
      "right" : "int strLen = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[31536-31582]:VariableDeclarationStatement[31535-31581]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[31591-31859]:IfStatement[31590-31858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31607-31859]:Block[31606-31858]"
    }, {
      "left" : "int newSize = size + strLen;",
      "right" : "int newSize = size + strLen;",
      "info" : "VariableDeclarationStatement[31621-31649]:VariableDeclarationStatement[31620-31648]"
    }, {
      "left" : "ensureCapacity(newSize);",
      "right" : "ensureCapacity(newSize);",
      "info" : "ExpressionStatement[31662-31686]:ExpressionStatement[31661-31685]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + strLen, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + strLen, size - index);",
      "info" : "ExpressionStatement[31699-31769]:ExpressionStatement[31698-31768]"
    }, {
      "left" : "size = newSize;",
      "right" : "size = newSize;",
      "info" : "ExpressionStatement[31782-31797]:ExpressionStatement[31781-31796]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, index);",
      "right" : "str.getChars(0, strLen, buffer, index);",
      "info" : "ExpressionStatement[31810-31849]:ExpressionStatement[31809-31848]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[31868-31880]:ReturnStatement[31867-31879]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32235-32241]:Modifier[32234-32240]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[32242-32252]:SimpleType[32241-32251]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[32253-32259]:SimpleName[32252-32258]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[32260-32269]:SingleVariableDeclaration[32259-32268]"
    }, {
      "left" : "char chars[]",
      "right" : "char chars[]",
      "info" : "SingleVariableDeclaration[32271-32283]:SingleVariableDeclaration[32270-32282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32285-32696]:Block[32284-32695]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[32295-32316]:ExpressionStatement[32294-32315]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[32325-32399]:IfStatement[32324-32398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32344-32399]:Block[32343-32398]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[32358-32389]:ReturnStatement[32357-32388]"
    }, {
      "left" : "int len = chars.length;",
      "right" : "int len = chars.length;",
      "info" : "VariableDeclarationStatement[32408-32431]:VariableDeclarationStatement[32407-32430]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[32440-32669]:IfStatement[32439-32668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32453-32669]:Block[32452-32668]"
    }, {
      "left" : "ensureCapacity(size + len);",
      "right" : "ensureCapacity(size + len);",
      "info" : "ExpressionStatement[32467-32494]:ExpressionStatement[32466-32493]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + len, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + len, size - index);",
      "info" : "ExpressionStatement[32507-32574]:ExpressionStatement[32506-32573]"
    }, {
      "left" : "System.arraycopy(chars, 0, buffer, index, len);",
      "right" : "System.arraycopy(chars, 0, buffer, index, len);",
      "info" : "ExpressionStatement[32587-32634]:ExpressionStatement[32586-32633]"
    }, {
      "left" : "size += len;",
      "right" : "size += len;",
      "info" : "ExpressionStatement[32647-32659]:ExpressionStatement[32646-32658]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[32678-32690]:ReturnStatement[32677-32689]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33225-33231]:Modifier[33224-33230]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[33232-33242]:SimpleType[33231-33241]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[33243-33249]:SimpleName[33242-33248]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[33250-33259]:SingleVariableDeclaration[33249-33258]"
    }, {
      "left" : "char chars[]",
      "right" : "char chars[]",
      "info" : "SingleVariableDeclaration[33261-33273]:SingleVariableDeclaration[33260-33272]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[33275-33285]:SingleVariableDeclaration[33274-33284]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[33287-33297]:SingleVariableDeclaration[33286-33296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33299-33997]:Block[33298-33996]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[33309-33330]:ExpressionStatement[33308-33329]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[33339-33413]:IfStatement[33338-33412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33358-33413]:Block[33357-33412]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[33372-33403]:ReturnStatement[33371-33402]"
    }, {
      "left" : "if (offset < 0 || offset > chars.length)",
      "right" : "if (offset < 0 || offset > chars.length)",
      "info" : "IfStatement[33422-33558]:IfStatement[33421-33557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33463-33558]:Block[33462-33557]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid offset: \" + offset);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid offset: \" + offset);",
      "info" : "ThrowStatement[33477-33548]:ThrowStatement[33476-33547]"
    }, {
      "left" : "if (length < 0 || offset + length > chars.length)",
      "right" : "if (length < 0 || offset + length > chars.length)",
      "info" : "IfStatement[33567-33712]:IfStatement[33566-33711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33617-33712]:Block[33616-33711]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "info" : "ThrowStatement[33631-33702]:ThrowStatement[33630-33701]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[33721-33970]:IfStatement[33720-33969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33737-33970]:Block[33736-33969]"
    }, {
      "left" : "ensureCapacity(size + length);",
      "right" : "ensureCapacity(size + length);",
      "info" : "ExpressionStatement[33751-33781]:ExpressionStatement[33750-33780]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + length, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + length, size - index);",
      "info" : "ExpressionStatement[33794-33864]:ExpressionStatement[33793-33863]"
    }, {
      "left" : "System.arraycopy(chars, offset, buffer, index, length);",
      "right" : "System.arraycopy(chars, offset, buffer, index, length);",
      "info" : "ExpressionStatement[33877-33932]:ExpressionStatement[33876-33931]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[33945-33960]:ExpressionStatement[33944-33959]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[33979-33991]:ReturnStatement[33978-33990]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34272-34278]:Modifier[34271-34277]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[34279-34289]:SimpleType[34278-34288]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[34290-34296]:SimpleName[34289-34295]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[34297-34306]:SingleVariableDeclaration[34296-34305]"
    }, {
      "left" : "boolean value",
      "right" : "boolean value",
      "info" : "SingleVariableDeclaration[34308-34321]:SingleVariableDeclaration[34307-34320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34323-35018]:Block[34322-35017]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[34333-34354]:ExpressionStatement[34332-34353]"
    }, {
      "left" : "if (value)",
      "right" : "if (value)",
      "info" : "IfStatement[34363-34991]:IfStatement[34362-34990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34374-34662]:Block[34373-34661]"
    }, {
      "left" : "ensureCapacity(size + 4);",
      "right" : "ensureCapacity(size + 4);",
      "info" : "ExpressionStatement[34388-34413]:ExpressionStatement[34387-34412]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 4, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 4, size - index);",
      "info" : "ExpressionStatement[34426-34491]:ExpressionStatement[34425-34490]"
    }, {
      "left" : "buffer[index++] = 't';",
      "right" : "buffer[index++] = 't';",
      "info" : "ExpressionStatement[34504-34526]:ExpressionStatement[34503-34525]"
    }, {
      "left" : "buffer[index++] = 'r';",
      "right" : "buffer[index++] = 'r';",
      "info" : "ExpressionStatement[34539-34561]:ExpressionStatement[34538-34560]"
    }, {
      "left" : "buffer[index++] = 'u';",
      "right" : "buffer[index++] = 'u';",
      "info" : "ExpressionStatement[34574-34596]:ExpressionStatement[34573-34595]"
    }, {
      "left" : "buffer[index] = 'e';",
      "right" : "buffer[index] = 'e';",
      "info" : "ExpressionStatement[34609-34629]:ExpressionStatement[34608-34628]"
    }, {
      "left" : "size += 4;",
      "right" : "size += 4;",
      "info" : "ExpressionStatement[34642-34652]:ExpressionStatement[34641-34651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34668-34991]:Block[34667-34990]"
    }, {
      "left" : "ensureCapacity(size + 5);",
      "right" : "ensureCapacity(size + 5);",
      "info" : "ExpressionStatement[34682-34707]:ExpressionStatement[34681-34706]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 5, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 5, size - index);",
      "info" : "ExpressionStatement[34720-34785]:ExpressionStatement[34719-34784]"
    }, {
      "left" : "buffer[index++] = 'f';",
      "right" : "buffer[index++] = 'f';",
      "info" : "ExpressionStatement[34798-34820]:ExpressionStatement[34797-34819]"
    }, {
      "left" : "buffer[index++] = 'a';",
      "right" : "buffer[index++] = 'a';",
      "info" : "ExpressionStatement[34833-34855]:ExpressionStatement[34832-34854]"
    }, {
      "left" : "buffer[index++] = 'l';",
      "right" : "buffer[index++] = 'l';",
      "info" : "ExpressionStatement[34868-34890]:ExpressionStatement[34867-34889]"
    }, {
      "left" : "buffer[index++] = 's';",
      "right" : "buffer[index++] = 's';",
      "info" : "ExpressionStatement[34903-34925]:ExpressionStatement[34902-34924]"
    }, {
      "left" : "buffer[index] = 'e';",
      "right" : "buffer[index] = 'e';",
      "info" : "ExpressionStatement[34938-34958]:ExpressionStatement[34937-34957]"
    }, {
      "left" : "size += 5;",
      "right" : "size += 5;",
      "info" : "ExpressionStatement[34971-34981]:ExpressionStatement[34970-34980]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[35000-35012]:ReturnStatement[34999-35011]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35293-35299]:Modifier[35292-35298]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[35300-35310]:SimpleType[35299-35309]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[35311-35317]:SimpleName[35310-35316]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[35318-35327]:SingleVariableDeclaration[35317-35326]"
    }, {
      "left" : "char value",
      "right" : "char value",
      "info" : "SingleVariableDeclaration[35329-35339]:SingleVariableDeclaration[35328-35338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35341-35554]:Block[35340-35553]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[35351-35372]:ExpressionStatement[35350-35371]"
    }, {
      "left" : "ensureCapacity(size + 1);",
      "right" : "ensureCapacity(size + 1);",
      "info" : "ExpressionStatement[35381-35406]:ExpressionStatement[35380-35405]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 1, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 1, size - index);",
      "info" : "ExpressionStatement[35415-35480]:ExpressionStatement[35414-35479]"
    }, {
      "left" : "buffer[index] = value;",
      "right" : "buffer[index] = value;",
      "info" : "ExpressionStatement[35489-35511]:ExpressionStatement[35488-35510]"
    }, {
      "left" : "size++;",
      "right" : "size++;",
      "info" : "ExpressionStatement[35520-35527]:ExpressionStatement[35519-35526]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[35536-35548]:ReturnStatement[35535-35547]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35829-35835]:Modifier[35828-35834]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[35836-35846]:SimpleType[35835-35845]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[35847-35853]:SimpleName[35846-35852]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[35854-35863]:SingleVariableDeclaration[35853-35862]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[35865-35874]:SingleVariableDeclaration[35864-35873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35876-35936]:Block[35875-35935]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[35886-35930]:ReturnStatement[35885-35929]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36211-36217]:Modifier[36210-36216]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[36218-36228]:SimpleType[36217-36227]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[36229-36235]:SimpleName[36228-36234]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[36236-36245]:SingleVariableDeclaration[36235-36244]"
    }, {
      "left" : "long value",
      "right" : "long value",
      "info" : "SingleVariableDeclaration[36247-36257]:SingleVariableDeclaration[36246-36256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36259-36319]:Block[36258-36318]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[36269-36313]:ReturnStatement[36268-36312]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36594-36600]:Modifier[36593-36599]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[36601-36611]:SimpleType[36600-36610]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[36612-36618]:SimpleName[36611-36617]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[36619-36628]:SingleVariableDeclaration[36618-36627]"
    }, {
      "left" : "float value",
      "right" : "float value",
      "info" : "SingleVariableDeclaration[36630-36641]:SingleVariableDeclaration[36629-36640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36643-36703]:Block[36642-36702]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[36653-36697]:ReturnStatement[36652-36696]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36978-36984]:Modifier[36977-36983]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[36985-36995]:SimpleType[36984-36994]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[36996-37002]:SimpleName[36995-37001]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[37003-37012]:SingleVariableDeclaration[37002-37011]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[37014-37026]:SingleVariableDeclaration[37013-37025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37028-37088]:Block[37027-37087]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[37038-37082]:ReturnStatement[37037-37081]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37488-37495]:Modifier[37487-37494]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37496-37500]:PrimitiveType[37495-37499]"
    }, {
      "left" : "deleteImpl",
      "right" : "deleteImpl",
      "info" : "SimpleName[37501-37511]:SimpleName[37500-37510]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[37512-37526]:SingleVariableDeclaration[37511-37525]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[37528-37540]:SingleVariableDeclaration[37527-37539]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[37542-37549]:SingleVariableDeclaration[37541-37548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37551-37660]:Block[37550-37659]"
    }, {
      "left" : "System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",
      "right" : "System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",
      "info" : "ExpressionStatement[37561-37633]:ExpressionStatement[37560-37632]"
    }, {
      "left" : "size -= len;",
      "right" : "size -= len;",
      "info" : "ExpressionStatement[37642-37654]:ExpressionStatement[37641-37653]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38055-38061]:Modifier[38054-38060]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[38062-38072]:SimpleType[38061-38071]"
    }, {
      "left" : "delete",
      "right" : "delete",
      "info" : "SimpleName[38073-38079]:SimpleName[38072-38078]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[38080-38094]:SingleVariableDeclaration[38079-38093]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[38096-38108]:SingleVariableDeclaration[38095-38107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38110-38319]:Block[38109-38318]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[38120-38167]:ExpressionStatement[38119-38166]"
    }, {
      "left" : "int len = endIndex - startIndex;",
      "right" : "int len = endIndex - startIndex;",
      "info" : "VariableDeclarationStatement[38176-38208]:VariableDeclarationStatement[38175-38207]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[38217-38292]:IfStatement[38216-38291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38230-38292]:Block[38229-38291]"
    }, {
      "left" : "deleteImpl(startIndex, endIndex, len);",
      "right" : "deleteImpl(startIndex, endIndex, len);",
      "info" : "ExpressionStatement[38244-38282]:ExpressionStatement[38243-38281]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[38301-38313]:ReturnStatement[38300-38312]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38572-38578]:Modifier[38571-38577]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[38579-38589]:SimpleType[38578-38588]"
    }, {
      "left" : "deleteAll",
      "right" : "deleteAll",
      "info" : "SimpleName[38590-38599]:SimpleName[38589-38598]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[38600-38607]:SingleVariableDeclaration[38599-38606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38609-39025]:Block[38608-39024]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[38619-38998]:ForStatement[38618-38997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38650-38998]:Block[38649-38997]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[38664-38988]:IfStatement[38663-38987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38685-38988]:Block[38684-38987]"
    }, {
      "left" : "int start = i;",
      "right" : "int start = i;",
      "info" : "VariableDeclarationStatement[38703-38717]:VariableDeclarationStatement[38702-38716]"
    }, {
      "left" : "while (++i < size)",
      "right" : "while (++i < size)",
      "info" : "WhileStatement[38734-38868]:WhileStatement[38733-38867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38753-38868]:Block[38752-38867]"
    }, {
      "left" : "if (buffer[i] != ch)",
      "right" : "if (buffer[i] != ch)",
      "info" : "IfStatement[38775-38850]:IfStatement[38774-38849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38796-38850]:Block[38795-38849]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[38822-38828]:BreakStatement[38821-38827]"
    }, {
      "left" : "int len = i - start;",
      "right" : "int len = i - start;",
      "info" : "VariableDeclarationStatement[38885-38905]:VariableDeclarationStatement[38884-38904]"
    }, {
      "left" : "deleteImpl(start, i, len);",
      "right" : "deleteImpl(start, i, len);",
      "info" : "ExpressionStatement[38922-38948]:ExpressionStatement[38921-38947]"
    }, {
      "left" : "i -= len;",
      "right" : "i -= len;",
      "info" : "ExpressionStatement[38965-38974]:ExpressionStatement[38964-38973]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39007-39019]:ReturnStatement[39006-39018]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39200-39206]:Modifier[39199-39205]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[39207-39217]:SimpleType[39206-39216]"
    }, {
      "left" : "deleteFirst",
      "right" : "deleteFirst",
      "info" : "SimpleName[39218-39229]:SimpleName[39217-39228]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[39230-39237]:SingleVariableDeclaration[39229-39236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39239-39431]:Block[39238-39430]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[39249-39404]:ForStatement[39248-39403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39280-39404]:Block[39279-39403]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[39294-39394]:IfStatement[39293-39393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39315-39394]:Block[39314-39393]"
    }, {
      "left" : "deleteImpl(i, i + 1, 1);",
      "right" : "deleteImpl(i, i + 1, 1);",
      "info" : "ExpressionStatement[39333-39357]:ExpressionStatement[39332-39356]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[39374-39380]:BreakStatement[39373-39379]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39413-39425]:ReturnStatement[39412-39424]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39702-39708]:Modifier[39701-39707]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[39709-39719]:SimpleType[39708-39718]"
    }, {
      "left" : "deleteAll",
      "right" : "deleteAll",
      "info" : "SimpleName[39720-39729]:SimpleName[39719-39728]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[39730-39740]:SingleVariableDeclaration[39729-39739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39742-40041]:Block[39741-40040]"
    }, {
      "left" : "int len = (str == null ? 0 : str.length());",
      "right" : "int len = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[39752-39795]:VariableDeclarationStatement[39751-39794]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[39804-40014]:IfStatement[39803-40013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39817-40014]:Block[39816-40013]"
    }, {
      "left" : "int index = indexOf(str, 0);",
      "right" : "int index = indexOf(str, 0);",
      "info" : "VariableDeclarationStatement[39831-39859]:VariableDeclarationStatement[39830-39858]"
    }, {
      "left" : "while (index >= 0)",
      "right" : "while (index >= 0)",
      "info" : "WhileStatement[39872-40004]:WhileStatement[39871-40003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39891-40004]:Block[39890-40003]"
    }, {
      "left" : "deleteImpl(index, index + len, len);",
      "right" : "deleteImpl(index, index + len, len);",
      "info" : "ExpressionStatement[39909-39945]:ExpressionStatement[39908-39944]"
    }, {
      "left" : "index = indexOf(str, index);",
      "right" : "index = indexOf(str, index);",
      "info" : "ExpressionStatement[39962-39990]:ExpressionStatement[39961-39989]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[40023-40035]:ReturnStatement[40022-40034]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40234-40240]:Modifier[40233-40239]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[40241-40251]:SimpleType[40240-40250]"
    }, {
      "left" : "deleteFirst",
      "right" : "deleteFirst",
      "info" : "SimpleName[40252-40263]:SimpleName[40251-40262]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[40264-40274]:SingleVariableDeclaration[40263-40273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40276-40527]:Block[40275-40526]"
    }, {
      "left" : "int len = (str == null ? 0 : str.length());",
      "right" : "int len = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[40286-40329]:VariableDeclarationStatement[40285-40328]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[40338-40500]:IfStatement[40337-40499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40351-40500]:Block[40350-40499]"
    }, {
      "left" : "int index = indexOf(str, 0);",
      "right" : "int index = indexOf(str, 0);",
      "info" : "VariableDeclarationStatement[40365-40393]:VariableDeclarationStatement[40364-40392]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[40406-40490]:IfStatement[40405-40489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40422-40490]:Block[40421-40489]"
    }, {
      "left" : "deleteImpl(index, index + len, len);",
      "right" : "deleteImpl(index, index + len, len);",
      "info" : "ExpressionStatement[40440-40476]:ExpressionStatement[40439-40475]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[40509-40521]:ReturnStatement[40508-40520]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41031-41037]:Modifier[41030-41036]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[41038-41048]:SimpleType[41037-41047]"
    }, {
      "left" : "deleteAll",
      "right" : "deleteAll",
      "info" : "SimpleName[41049-41058]:SimpleName[41048-41057]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[41059-41077]:SingleVariableDeclaration[41058-41076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41079-41138]:Block[41078-41137]"
    }, {
      "left" : "return replace(matcher, null, 0, size, -1);",
      "right" : "return replace(matcher, null, 0, size, -1);",
      "info" : "ReturnStatement[41089-41132]:ReturnStatement[41088-41131]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41562-41568]:Modifier[41561-41567]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[41569-41579]:SimpleType[41568-41578]"
    }, {
      "left" : "deleteFirst",
      "right" : "deleteFirst",
      "info" : "SimpleName[41580-41591]:SimpleName[41579-41590]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[41592-41610]:SingleVariableDeclaration[41591-41609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41612-41670]:Block[41611-41669]"
    }, {
      "left" : "return replace(matcher, null, 0, size, 1);",
      "right" : "return replace(matcher, null, 0, size, 1);",
      "info" : "ReturnStatement[41622-41664]:ReturnStatement[41621-41663]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[42259-42266]:Modifier[42258-42265]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[42267-42271]:PrimitiveType[42266-42270]"
    }, {
      "left" : "replaceImpl",
      "right" : "replaceImpl",
      "info" : "SimpleName[42272-42283]:SimpleName[42271-42282]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[42284-42298]:SingleVariableDeclaration[42283-42297]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[42300-42312]:SingleVariableDeclaration[42299-42311]"
    }, {
      "left" : "int removeLen",
      "right" : "int removeLen",
      "info" : "SingleVariableDeclaration[42314-42327]:SingleVariableDeclaration[42313-42326]"
    }, {
      "left" : "String insertStr",
      "right" : "String insertStr",
      "info" : "SingleVariableDeclaration[42329-42345]:SingleVariableDeclaration[42328-42344]"
    }, {
      "left" : "int insertLen",
      "right" : "int insertLen",
      "info" : "SingleVariableDeclaration[42347-42360]:SingleVariableDeclaration[42346-42359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42362-42736]:Block[42361-42735]"
    }, {
      "left" : "int newSize = size - removeLen + insertLen;",
      "right" : "int newSize = size - removeLen + insertLen;",
      "info" : "VariableDeclarationStatement[42372-42415]:VariableDeclarationStatement[42371-42414]"
    }, {
      "left" : "if (insertLen != removeLen)",
      "right" : "if (insertLen != removeLen)",
      "info" : "IfStatement[42424-42625]:IfStatement[42423-42624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42452-42625]:Block[42451-42624]"
    }, {
      "left" : "ensureCapacity(newSize);",
      "right" : "ensureCapacity(newSize);",
      "info" : "ExpressionStatement[42466-42490]:ExpressionStatement[42465-42489]"
    }, {
      "left" : "System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",
      "right" : "System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",
      "info" : "ExpressionStatement[42503-42587]:ExpressionStatement[42502-42586]"
    }, {
      "left" : "size = newSize;",
      "right" : "size = newSize;",
      "info" : "ExpressionStatement[42600-42615]:ExpressionStatement[42599-42614]"
    }, {
      "left" : "if (insertLen > 0)",
      "right" : "if (insertLen > 0)",
      "info" : "IfStatement[42634-42730]:IfStatement[42633-42729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42653-42730]:Block[42652-42729]"
    }, {
      "left" : "insertStr.getChars(0, insertLen, buffer, startIndex);",
      "right" : "insertStr.getChars(0, insertLen, buffer, startIndex);",
      "info" : "ExpressionStatement[42667-42720]:ExpressionStatement[42666-42719]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43297-43303]:Modifier[43296-43302]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[43304-43314]:SimpleType[43303-43313]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[43315-43322]:SimpleName[43314-43321]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[43323-43337]:SingleVariableDeclaration[43322-43336]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[43339-43351]:SingleVariableDeclaration[43338-43350]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[43353-43370]:SingleVariableDeclaration[43352-43369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43372-43617]:Block[43371-43616]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[43382-43429]:ExpressionStatement[43381-43428]"
    }, {
      "left" : "int insertLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int insertLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[43438-43501]:VariableDeclarationStatement[43437-43500]"
    }, {
      "left" : "replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",
      "right" : "replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",
      "info" : "ExpressionStatement[43510-43590]:ExpressionStatement[43509-43589]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[43599-43611]:ReturnStatement[43598-43610]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43947-43953]:Modifier[43946-43952]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[43954-43964]:SimpleType[43953-43963]"
    }, {
      "left" : "replaceAll",
      "right" : "replaceAll",
      "info" : "SimpleName[43965-43975]:SimpleName[43964-43974]"
    }, {
      "left" : "char search",
      "right" : "char search",
      "info" : "SingleVariableDeclaration[43976-43987]:SingleVariableDeclaration[43975-43986]"
    }, {
      "left" : "char replace",
      "right" : "char replace",
      "info" : "SingleVariableDeclaration[43989-44001]:SingleVariableDeclaration[43988-44000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44003-44235]:Block[44002-44234]"
    }, {
      "left" : "if (search != replace)",
      "right" : "if (search != replace)",
      "info" : "IfStatement[44013-44208]:IfStatement[44012-44207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44036-44208]:Block[44035-44207]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[44050-44198]:ForStatement[44049-44197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44081-44198]:Block[44080-44197]"
    }, {
      "left" : "if (buffer[i] == search)",
      "right" : "if (buffer[i] == search)",
      "info" : "IfStatement[44099-44184]:IfStatement[44098-44183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44124-44184]:Block[44123-44183]"
    }, {
      "left" : "buffer[i] = replace;",
      "right" : "buffer[i] = replace;",
      "info" : "ExpressionStatement[44146-44166]:ExpressionStatement[44145-44165]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[44217-44229]:ReturnStatement[44216-44228]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44501-44507]:Modifier[44500-44506]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[44508-44518]:SimpleType[44507-44517]"
    }, {
      "left" : "replaceFirst",
      "right" : "replaceFirst",
      "info" : "SimpleName[44519-44531]:SimpleName[44518-44530]"
    }, {
      "left" : "char search",
      "right" : "char search",
      "info" : "SingleVariableDeclaration[44532-44543]:SingleVariableDeclaration[44531-44542]"
    }, {
      "left" : "char replace",
      "right" : "char replace",
      "info" : "SingleVariableDeclaration[44545-44557]:SingleVariableDeclaration[44544-44556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44559-44818]:Block[44558-44817]"
    }, {
      "left" : "if (search != replace)",
      "right" : "if (search != replace)",
      "info" : "IfStatement[44569-44791]:IfStatement[44568-44790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44592-44791]:Block[44591-44790]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[44606-44781]:ForStatement[44605-44780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44637-44781]:Block[44636-44780]"
    }, {
      "left" : "if (buffer[i] == search)",
      "right" : "if (buffer[i] == search)",
      "info" : "IfStatement[44655-44767]:IfStatement[44654-44766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44680-44767]:Block[44679-44766]"
    }, {
      "left" : "buffer[i] = replace;",
      "right" : "buffer[i] = replace;",
      "info" : "ExpressionStatement[44702-44722]:ExpressionStatement[44701-44721]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[44743-44749]:BreakStatement[44742-44748]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[44800-44812]:ReturnStatement[44799-44811]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45206-45212]:Modifier[45205-45211]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[45213-45223]:SimpleType[45212-45222]"
    }, {
      "left" : "replaceAll",
      "right" : "replaceAll",
      "info" : "SimpleName[45224-45234]:SimpleName[45223-45233]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[45235-45251]:SingleVariableDeclaration[45234-45250]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[45253-45270]:SingleVariableDeclaration[45252-45269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45272-45734]:Block[45271-45733]"
    }, {
      "left" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "right" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "info" : "VariableDeclarationStatement[45282-45343]:VariableDeclarationStatement[45281-45342]"
    }, {
      "left" : "if (searchLen > 0)",
      "right" : "if (searchLen > 0)",
      "info" : "IfStatement[45352-45707]:IfStatement[45351-45706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45371-45707]:Block[45370-45706]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[45385-45449]:VariableDeclarationStatement[45384-45448]"
    }, {
      "left" : "int index = indexOf(searchStr, 0);",
      "right" : "int index = indexOf(searchStr, 0);",
      "info" : "VariableDeclarationStatement[45462-45496]:VariableDeclarationStatement[45461-45495]"
    }, {
      "left" : "while (index >= 0)",
      "right" : "while (index >= 0)",
      "info" : "WhileStatement[45509-45697]:WhileStatement[45508-45696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45528-45697]:Block[45527-45696]"
    }, {
      "left" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[45546-45619]:ExpressionStatement[45545-45618]"
    }, {
      "left" : "index = indexOf(searchStr, index + replaceLen);",
      "right" : "index = indexOf(searchStr, index + replaceLen);",
      "info" : "ExpressionStatement[45636-45683]:ExpressionStatement[45635-45682]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[45716-45728]:ReturnStatement[45715-45727]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46043-46049]:Modifier[46042-46048]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[46050-46060]:SimpleType[46049-46059]"
    }, {
      "left" : "replaceFirst",
      "right" : "replaceFirst",
      "info" : "SimpleName[46061-46073]:SimpleName[46060-46072]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[46074-46090]:SingleVariableDeclaration[46073-46089]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[46092-46109]:SingleVariableDeclaration[46091-46108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46111-46510]:Block[46110-46509]"
    }, {
      "left" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "right" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "info" : "VariableDeclarationStatement[46121-46182]:VariableDeclarationStatement[46120-46181]"
    }, {
      "left" : "if (searchLen > 0)",
      "right" : "if (searchLen > 0)",
      "info" : "IfStatement[46191-46483]:IfStatement[46190-46482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46210-46483]:Block[46209-46482]"
    }, {
      "left" : "int index = indexOf(searchStr, 0);",
      "right" : "int index = indexOf(searchStr, 0);",
      "info" : "VariableDeclarationStatement[46224-46258]:VariableDeclarationStatement[46223-46257]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[46271-46473]:IfStatement[46270-46472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46287-46473]:Block[46286-46472]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[46305-46369]:VariableDeclarationStatement[46304-46368]"
    }, {
      "left" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[46386-46459]:ExpressionStatement[46385-46458]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[46492-46504]:ReturnStatement[46491-46503]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47104-47110]:Modifier[47103-47109]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[47111-47121]:SimpleType[47110-47120]"
    }, {
      "left" : "replaceAll",
      "right" : "replaceAll",
      "info" : "SimpleName[47122-47132]:SimpleName[47121-47131]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[47133-47151]:SingleVariableDeclaration[47132-47150]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[47153-47170]:SingleVariableDeclaration[47152-47169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47172-47237]:Block[47171-47236]"
    }, {
      "left" : "return replace(matcher, replaceStr, 0, size, -1);",
      "right" : "return replace(matcher, replaceStr, 0, size, -1);",
      "info" : "ReturnStatement[47182-47231]:ReturnStatement[47181-47230]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47742-47748]:Modifier[47741-47747]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[47749-47759]:SimpleType[47748-47758]"
    }, {
      "left" : "replaceFirst",
      "right" : "replaceFirst",
      "info" : "SimpleName[47760-47772]:SimpleName[47759-47771]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[47773-47791]:SingleVariableDeclaration[47772-47790]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[47793-47810]:SingleVariableDeclaration[47792-47809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47812-47876]:Block[47811-47875]"
    }, {
      "left" : "return replace(matcher, replaceStr, 0, size, 1);",
      "right" : "return replace(matcher, replaceStr, 0, size, 1);",
      "info" : "ReturnStatement[47822-47870]:ReturnStatement[47821-47869]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48801-48807]:Modifier[48800-48806]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[48808-48818]:SimpleType[48807-48817]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[48819-48826]:SimpleName[48818-48825]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[48840-48858]:SingleVariableDeclaration[48839-48857]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[48860-48877]:SingleVariableDeclaration[48859-48876]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[48891-48905]:SingleVariableDeclaration[48890-48904]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[48907-48919]:SingleVariableDeclaration[48906-48918]"
    }, {
      "left" : "int replaceCount",
      "right" : "int replaceCount",
      "info" : "SingleVariableDeclaration[48921-48937]:SingleVariableDeclaration[48920-48936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48939-49087]:Block[48938-49086]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[48949-48996]:ExpressionStatement[48948-48995]"
    }, {
      "left" : "return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",
      "right" : "return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",
      "info" : "ReturnStatement[49005-49081]:ReturnStatement[49004-49080]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[49825-49832]:Modifier[49824-49831]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[49833-49843]:SimpleType[49832-49842]"
    }, {
      "left" : "replaceImpl",
      "right" : "replaceImpl",
      "info" : "SimpleName[49844-49855]:SimpleName[49843-49854]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[49869-49887]:SingleVariableDeclaration[49868-49886]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[49889-49906]:SingleVariableDeclaration[49888-49905]"
    }, {
      "left" : "int from",
      "right" : "int from",
      "info" : "SingleVariableDeclaration[49920-49928]:SingleVariableDeclaration[49919-49927]"
    }, {
      "left" : "int to",
      "right" : "int to",
      "info" : "SingleVariableDeclaration[49930-49936]:SingleVariableDeclaration[49929-49935]"
    }, {
      "left" : "int replaceCount",
      "right" : "int replaceCount",
      "info" : "SingleVariableDeclaration[49938-49954]:SingleVariableDeclaration[49937-49953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49956-50614]:Block[49955-50613]"
    }, {
      "left" : "if (matcher == null || size == 0)",
      "right" : "if (matcher == null || size == 0)",
      "info" : "IfStatement[49966-50036]:IfStatement[49965-50035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50000-50036]:Block[49999-50035]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50014-50026]:ReturnStatement[50013-50025]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[50045-50109]:VariableDeclarationStatement[50044-50108]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[50118-50138]:VariableDeclarationStatement[50117-50137]"
    }, {
      "left" : "for (int i = from; i < to && replaceCount != 0; i++)",
      "right" : "for (int i = from; i < to && replaceCount != 0; i++)",
      "info" : "ForStatement[50147-50587]:ForStatement[50146-50586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50200-50587]:Block[50199-50586]"
    }, {
      "left" : "int removeLen = matcher.isMatch(buf, i, from, to);",
      "right" : "int removeLen = matcher.isMatch(buf, i, from, to);",
      "info" : "VariableDeclarationStatement[50214-50264]:VariableDeclarationStatement[50213-50263]"
    }, {
      "left" : "if (removeLen > 0)",
      "right" : "if (removeLen > 0)",
      "info" : "IfStatement[50277-50577]:IfStatement[50276-50576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50296-50577]:Block[50295-50576]"
    }, {
      "left" : "replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[50314-50379]:ExpressionStatement[50313-50378]"
    }, {
      "left" : "to = to - removeLen + replaceLen;",
      "right" : "to = to - removeLen + replaceLen;",
      "info" : "ExpressionStatement[50396-50429]:ExpressionStatement[50395-50428]"
    }, {
      "left" : "i = i + replaceLen - 1;",
      "right" : "i = i + replaceLen - 1;",
      "info" : "ExpressionStatement[50446-50469]:ExpressionStatement[50445-50468]"
    }, {
      "left" : "if (replaceCount > 0)",
      "right" : "if (replaceCount > 0)",
      "info" : "IfStatement[50486-50563]:IfStatement[50485-50562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50508-50563]:Block[50507-50562]"
    }, {
      "left" : "replaceCount--;",
      "right" : "replaceCount--;",
      "info" : "ExpressionStatement[50530-50545]:ExpressionStatement[50529-50544]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50596-50608]:ReturnStatement[50595-50607]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50843-50849]:Modifier[50842-50848]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[50850-50860]:SimpleType[50849-50859]"
    }, {
      "left" : "reverse",
      "right" : "reverse",
      "info" : "SimpleName[50861-50868]:SimpleName[50860-50867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50871-51241]:Block[50870-51240]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[50881-50932]:IfStatement[50880-50931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50896-50932]:Block[50895-50931]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50910-50922]:ReturnStatement[50909-50921]"
    }, {
      "left" : "int half = size / 2;",
      "right" : "int half = size / 2;",
      "info" : "VariableDeclarationStatement[50950-50970]:VariableDeclarationStatement[50949-50969]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[50979-50999]:VariableDeclarationStatement[50978-50998]"
    }, {
      "left" : "for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--)",
      "right" : "for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--)",
      "info" : "ForStatement[51008-51214]:ForStatement[51007-51213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51089-51214]:Block[51088-51213]"
    }, {
      "left" : "char swap = buf[leftIdx];",
      "right" : "char swap = buf[leftIdx];",
      "info" : "VariableDeclarationStatement[51103-51128]:VariableDeclarationStatement[51102-51127]"
    }, {
      "left" : "buf[leftIdx] = buf[rightIdx];",
      "right" : "buf[leftIdx] = buf[rightIdx];",
      "info" : "ExpressionStatement[51141-51170]:ExpressionStatement[51140-51169]"
    }, {
      "left" : "buf[rightIdx] = swap;",
      "right" : "buf[rightIdx] = swap;",
      "info" : "ExpressionStatement[51183-51204]:ExpressionStatement[51182-51203]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51223-51235]:ReturnStatement[51222-51234]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51501-51507]:Modifier[51500-51506]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[51508-51518]:SimpleType[51507-51517]"
    }, {
      "left" : "trim",
      "right" : "trim",
      "info" : "SimpleName[51519-51523]:SimpleName[51518-51522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51526-51972]:Block[51525-51971]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[51536-51587]:IfStatement[51535-51586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51551-51587]:Block[51550-51586]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51565-51577]:ReturnStatement[51564-51576]"
    }, {
      "left" : "int len = size;",
      "right" : "int len = size;",
      "info" : "VariableDeclarationStatement[51596-51611]:VariableDeclarationStatement[51595-51610]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[51620-51640]:VariableDeclarationStatement[51619-51639]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[51649-51661]:VariableDeclarationStatement[51648-51660]"
    }, {
      "left" : "while (pos < len && buf[pos] <= ' ')",
      "right" : "while (pos < len && buf[pos] <= ' ')",
      "info" : "WhileStatement[51670-51737]:WhileStatement[51669-51736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51707-51737]:Block[51706-51736]"
    }, {
      "left" : "pos++;",
      "right" : "pos++;",
      "info" : "ExpressionStatement[51721-51727]:ExpressionStatement[51720-51726]"
    }, {
      "left" : "while (pos < len && buf[len - 1] <= ' ')",
      "right" : "while (pos < len && buf[len - 1] <= ' ')",
      "info" : "WhileStatement[51746-51817]:WhileStatement[51745-51816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51787-51817]:Block[51786-51816]"
    }, {
      "left" : "len--;",
      "right" : "len--;",
      "info" : "ExpressionStatement[51801-51807]:ExpressionStatement[51800-51806]"
    }, {
      "left" : "if (len < size)",
      "right" : "if (len < size)",
      "info" : "IfStatement[51826-51884]:IfStatement[51825-51883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51842-51884]:Block[51841-51883]"
    }, {
      "left" : "delete(len, size);",
      "right" : "delete(len, size);",
      "info" : "ExpressionStatement[51856-51874]:ExpressionStatement[51855-51873]"
    }, {
      "left" : "if (pos > 0)",
      "right" : "if (pos > 0)",
      "info" : "IfStatement[51893-51945]:IfStatement[51892-51944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51906-51945]:Block[51905-51944]"
    }, {
      "left" : "delete(0, pos);",
      "right" : "delete(0, pos);",
      "info" : "ExpressionStatement[51920-51935]:ExpressionStatement[51919-51934]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51954-51966]:ReturnStatement[51953-51965]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52354-52360]:Modifier[52353-52359]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[52361-52368]:PrimitiveType[52360-52367]"
    }, {
      "left" : "startsWith",
      "right" : "startsWith",
      "info" : "SimpleName[52369-52379]:SimpleName[52368-52378]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[52380-52390]:SingleVariableDeclaration[52379-52389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52392-52776]:Block[52391-52775]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[52402-52456]:IfStatement[52401-52455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52419-52456]:Block[52418-52455]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52433-52446]:ReturnStatement[52432-52445]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[52465-52488]:VariableDeclarationStatement[52464-52487]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[52497-52547]:IfStatement[52496-52546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52511-52547]:Block[52510-52546]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52525-52537]:ReturnStatement[52524-52536]"
    }, {
      "left" : "if (len > size)",
      "right" : "if (len > size)",
      "info" : "IfStatement[52556-52609]:IfStatement[52555-52608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52572-52609]:Block[52571-52608]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52586-52599]:ReturnStatement[52585-52598]"
    }, {
      "left" : "for (int i = 0; i < len; i++)",
      "right" : "for (int i = 0; i < len; i++)",
      "info" : "ForStatement[52618-52749]:ForStatement[52617-52748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52648-52749]:Block[52647-52748]"
    }, {
      "left" : "if (buffer[i] != str.charAt(i))",
      "right" : "if (buffer[i] != str.charAt(i))",
      "info" : "IfStatement[52662-52739]:IfStatement[52661-52738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52694-52739]:Block[52693-52738]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52712-52725]:ReturnStatement[52711-52724]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52758-52770]:ReturnStatement[52757-52769]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53076-53082]:Modifier[53075-53081]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[53083-53090]:PrimitiveType[53082-53089]"
    }, {
      "left" : "endsWith",
      "right" : "endsWith",
      "info" : "SimpleName[53091-53099]:SimpleName[53090-53098]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[53100-53110]:SingleVariableDeclaration[53099-53109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53112-53534]:Block[53111-53533]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[53122-53176]:IfStatement[53121-53175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53139-53176]:Block[53138-53175]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53153-53166]:ReturnStatement[53152-53165]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[53185-53208]:VariableDeclarationStatement[53184-53207]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[53217-53267]:IfStatement[53216-53266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53231-53267]:Block[53230-53266]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[53245-53257]:ReturnStatement[53244-53256]"
    }, {
      "left" : "if (len > size)",
      "right" : "if (len > size)",
      "info" : "IfStatement[53276-53329]:IfStatement[53275-53328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53292-53329]:Block[53291-53328]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53306-53319]:ReturnStatement[53305-53318]"
    }, {
      "left" : "int pos = size - len;",
      "right" : "int pos = size - len;",
      "info" : "VariableDeclarationStatement[53338-53359]:VariableDeclarationStatement[53337-53358]"
    }, {
      "left" : "for (int i = 0; i < len; i++,pos++)",
      "right" : "for (int i = 0; i < len; i++,pos++)",
      "info" : "ForStatement[53368-53507]:ForStatement[53367-53506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53404-53507]:Block[53403-53506]"
    }, {
      "left" : "if (buffer[pos] != str.charAt(i))",
      "right" : "if (buffer[pos] != str.charAt(i))",
      "info" : "IfStatement[53418-53497]:IfStatement[53417-53496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53452-53497]:Block[53451-53496]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53470-53483]:ReturnStatement[53469-53482]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[53516-53528]:ReturnStatement[53515-53527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53862-53868]:Modifier[53861-53867]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[53869-53875]:SimpleType[53868-53874]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[53876-53885]:SimpleName[53875-53884]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[53886-53895]:SingleVariableDeclaration[53885-53894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53897-53943]:Block[53896-53942]"
    }, {
      "left" : "return substring(start, size);",
      "right" : "return substring(start, size);",
      "info" : "ReturnStatement[53907-53937]:ReturnStatement[53906-53936]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54533-54539]:Modifier[54532-54538]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[54540-54546]:SimpleType[54539-54545]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[54547-54556]:SimpleName[54546-54555]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[54557-54571]:SingleVariableDeclaration[54556-54570]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[54573-54585]:SingleVariableDeclaration[54572-54584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54587-54720]:Block[54586-54719]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[54597-54644]:ExpressionStatement[54596-54643]"
    }, {
      "left" : "return new String(buffer, startIndex, endIndex - startIndex);",
      "right" : "return new String(buffer, startIndex, endIndex - startIndex);",
      "info" : "ReturnStatement[54653-54714]:ReturnStatement[54652-54713]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55230-55236]:Modifier[55229-55235]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[55237-55243]:SimpleType[55236-55242]"
    }, {
      "left" : "leftString",
      "right" : "leftString",
      "info" : "SimpleName[55244-55254]:SimpleName[55243-55253]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[55255-55265]:SingleVariableDeclaration[55254-55264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55267-55486]:Block[55266-55485]"
    }, {
      "left" : "if (length <= 0)",
      "right" : "if (length <= 0)",
      "info" : "IfStatement[55277-55480]:IfStatement[55276-55479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55294-55328]:Block[55293-55327]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[55308-55318]:ReturnStatement[55307-55317]"
    }, {
      "left" : "if (length >= size)",
      "right" : "if (length >= size)",
      "info" : "IfStatement[55334-55480]:IfStatement[55333-55479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55354-55413]:Block[55353-55412]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[55368-55403]:ReturnStatement[55367-55402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55419-55480]:Block[55418-55479]"
    }, {
      "left" : "return new String(buffer, 0, length);",
      "right" : "return new String(buffer, 0, length);",
      "info" : "ReturnStatement[55433-55470]:ReturnStatement[55432-55469]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55998-56004]:Modifier[55997-56003]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[56005-56011]:SimpleType[56004-56010]"
    }, {
      "left" : "rightString",
      "right" : "rightString",
      "info" : "SimpleName[56012-56023]:SimpleName[56011-56022]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[56024-56034]:SingleVariableDeclaration[56023-56033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56036-56267]:Block[56035-56266]"
    }, {
      "left" : "if (length <= 0)",
      "right" : "if (length <= 0)",
      "info" : "IfStatement[56046-56261]:IfStatement[56045-56260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56063-56097]:Block[56062-56096]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[56077-56087]:ReturnStatement[56076-56086]"
    }, {
      "left" : "if (length >= size)",
      "right" : "if (length >= size)",
      "info" : "IfStatement[56103-56261]:IfStatement[56102-56260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56123-56182]:Block[56122-56181]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[56137-56172]:ReturnStatement[56136-56171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56188-56261]:Block[56187-56260]"
    }, {
      "left" : "return new String(buffer, size - length, length);",
      "right" : "return new String(buffer, size - length, length);",
      "info" : "ReturnStatement[56202-56251]:ReturnStatement[56201-56250]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57085-57091]:Modifier[57084-57090]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[57092-57098]:SimpleType[57091-57097]"
    }, {
      "left" : "midString",
      "right" : "midString",
      "info" : "SimpleName[57099-57108]:SimpleName[57098-57107]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[57109-57118]:SingleVariableDeclaration[57108-57117]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[57120-57130]:SingleVariableDeclaration[57119-57129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57132-57453]:Block[57131-57452]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[57142-57191]:IfStatement[57141-57190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57157-57191]:Block[57156-57190]"
    }, {
      "left" : "index = 0;",
      "right" : "index = 0;",
      "info" : "ExpressionStatement[57171-57181]:ExpressionStatement[57170-57180]"
    }, {
      "left" : "if (length <= 0 || index >= size)",
      "right" : "if (length <= 0 || index >= size)",
      "info" : "IfStatement[57200-57268]:IfStatement[57199-57267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57234-57268]:Block[57233-57267]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[57248-57258]:ReturnStatement[57247-57257]"
    }, {
      "left" : "if (size <= index + length)",
      "right" : "if (size <= index + length)",
      "info" : "IfStatement[57277-57447]:IfStatement[57276-57446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57305-57376]:Block[57304-57375]"
    }, {
      "left" : "return new String(buffer, index, size - index);",
      "right" : "return new String(buffer, index, size - index);",
      "info" : "ReturnStatement[57319-57366]:ReturnStatement[57318-57365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57382-57447]:Block[57381-57446]"
    }, {
      "left" : "return new String(buffer, index, length);",
      "right" : "return new String(buffer, index, length);",
      "info" : "ReturnStatement[57396-57437]:ReturnStatement[57395-57436]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57723-57729]:Modifier[57722-57728]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[57730-57737]:PrimitiveType[57729-57736]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[57738-57746]:SimpleName[57737-57745]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[57747-57754]:SingleVariableDeclaration[57746-57753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57756-57953]:Block[57755-57952]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[57766-57790]:VariableDeclarationStatement[57765-57789]"
    }, {
      "left" : "for (int i = 0; i < this.size; i++)",
      "right" : "for (int i = 0; i < this.size; i++)",
      "info" : "ForStatement[57799-57925]:ForStatement[57798-57924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57835-57925]:Block[57834-57924]"
    }, {
      "left" : "if (thisBuf[i] == ch)",
      "right" : "if (thisBuf[i] == ch)",
      "info" : "IfStatement[57849-57915]:IfStatement[57848-57914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57871-57915]:Block[57870-57914]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[57889-57901]:ReturnStatement[57888-57900]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[57934-57947]:ReturnStatement[57933-57946]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58142-58148]:Modifier[58141-58147]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[58149-58156]:PrimitiveType[58148-58155]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[58157-58165]:SimpleName[58156-58164]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[58166-58176]:SingleVariableDeclaration[58165-58175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58178-58222]:Block[58177-58221]"
    }, {
      "left" : "return indexOf(str, 0) >= 0;",
      "right" : "return indexOf(str, 0) >= 0;",
      "info" : "ReturnStatement[58188-58216]:ReturnStatement[58187-58215]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58658-58664]:Modifier[58657-58663]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[58665-58672]:PrimitiveType[58664-58671]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[58673-58681]:SimpleName[58672-58680]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[58682-58700]:SingleVariableDeclaration[58681-58699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58702-58750]:Block[58701-58749]"
    }, {
      "left" : "return indexOf(matcher, 0) >= 0;",
      "right" : "return indexOf(matcher, 0) >= 0;",
      "info" : "ReturnStatement[58712-58744]:ReturnStatement[58711-58743]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59052-59058]:Modifier[59051-59057]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[59059-59062]:PrimitiveType[59058-59061]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[59063-59070]:SimpleName[59062-59069]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[59071-59078]:SingleVariableDeclaration[59070-59077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59080-59118]:Block[59079-59117]"
    }, {
      "left" : "return indexOf(ch, 0);",
      "right" : "return indexOf(ch, 0);",
      "info" : "ReturnStatement[59090-59112]:ReturnStatement[59089-59111]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59421-59427]:Modifier[59420-59426]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[59428-59431]:PrimitiveType[59427-59430]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[59432-59439]:SimpleName[59431-59438]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[59440-59447]:SingleVariableDeclaration[59439-59446]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[59449-59463]:SingleVariableDeclaration[59448-59462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59465-59783]:Block[59464-59782]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[59475-59522]:ExpressionStatement[59474-59521]"
    }, {
      "left" : "if (startIndex >= size)",
      "right" : "if (startIndex >= size)",
      "info" : "IfStatement[59531-59589]:IfStatement[59530-59588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59555-59589]:Block[59554-59588]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[59569-59579]:ReturnStatement[59568-59578]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[59598-59622]:VariableDeclarationStatement[59597-59621]"
    }, {
      "left" : "for (int i = startIndex; i < size; i++)",
      "right" : "for (int i = startIndex; i < size; i++)",
      "info" : "ForStatement[59631-59758]:ForStatement[59630-59757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59671-59758]:Block[59670-59757]"
    }, {
      "left" : "if (thisBuf[i] == ch)",
      "right" : "if (thisBuf[i] == ch)",
      "info" : "IfStatement[59685-59748]:IfStatement[59684-59747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59707-59748]:Block[59706-59747]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[59725-59734]:ReturnStatement[59724-59733]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[59767-59777]:ReturnStatement[59766-59776]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60122-60128]:Modifier[60121-60127]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[60129-60132]:PrimitiveType[60128-60131]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[60133-60140]:SimpleName[60132-60139]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[60141-60151]:SingleVariableDeclaration[60140-60150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60153-60192]:Block[60152-60191]"
    }, {
      "left" : "return indexOf(str, 0);",
      "right" : "return indexOf(str, 0);",
      "info" : "ReturnStatement[60163-60186]:ReturnStatement[60162-60185]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60657-60663]:Modifier[60656-60662]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[60664-60667]:PrimitiveType[60663-60666]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[60668-60675]:SimpleName[60667-60674]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[60676-60686]:SingleVariableDeclaration[60675-60685]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[60688-60702]:SingleVariableDeclaration[60687-60701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60704-61461]:Block[60703-61460]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[60714-60761]:ExpressionStatement[60713-60760]"
    }, {
      "left" : "if (str == null || startIndex >= size)",
      "right" : "if (str == null || startIndex >= size)",
      "info" : "IfStatement[60770-60843]:IfStatement[60769-60842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60809-60843]:Block[60808-60842]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[60823-60833]:ReturnStatement[60822-60832]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[60852-60878]:VariableDeclarationStatement[60851-60877]"
    }, {
      "left" : "if (strLen == 1)",
      "right" : "if (strLen == 1)",
      "info" : "IfStatement[60887-60970]:IfStatement[60886-60969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60904-60970]:Block[60903-60969]"
    }, {
      "left" : "return indexOf(str.charAt(0), startIndex);",
      "right" : "return indexOf(str.charAt(0), startIndex);",
      "info" : "ReturnStatement[60918-60960]:ReturnStatement[60917-60959]"
    }, {
      "left" : "if (strLen == 0)",
      "right" : "if (strLen == 0)",
      "info" : "IfStatement[60979-61038]:IfStatement[60978-61037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60996-61038]:Block[60995-61037]"
    }, {
      "left" : "return startIndex;",
      "right" : "return startIndex;",
      "info" : "ReturnStatement[61010-61028]:ReturnStatement[61009-61027]"
    }, {
      "left" : "if (strLen > size)",
      "right" : "if (strLen > size)",
      "info" : "IfStatement[61047-61100]:IfStatement[61046-61099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61066-61100]:Block[61065-61099]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[61080-61090]:ReturnStatement[61079-61089]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[61109-61133]:VariableDeclarationStatement[61108-61132]"
    }, {
      "left" : "int len = size - strLen + 1;",
      "right" : "int len = size - strLen + 1;",
      "info" : "VariableDeclarationStatement[61142-61170]:VariableDeclarationStatement[61141-61169]"
    }, {
      "left" : "outer:\n        for (int i = startIndex; i < len; i++) {\n            for (int j = 0; j < strLen; j++) {\n                if (str.charAt(j) != thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "right" : "outer:\n        for (int i = startIndex; i < len; i++) {\n            for (int j = 0; j < strLen; j++) {\n                if (str.charAt(j) != thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "info" : "LabeledStatement[61179-61436]:LabeledStatement[61178-61435]"
    }, {
      "left" : "for (int i = startIndex; i < len; i++)",
      "right" : "for (int i = startIndex; i < len; i++)",
      "info" : "ForStatement[61194-61436]:ForStatement[61193-61435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61233-61436]:Block[61232-61435]"
    }, {
      "left" : "for (int j = 0; j < strLen; j++)",
      "right" : "for (int j = 0; j < strLen; j++)",
      "info" : "ForStatement[61247-61404]:ForStatement[61246-61403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61280-61404]:Block[61279-61403]"
    }, {
      "left" : "if (str.charAt(j) != thisBuf[i + j])",
      "right" : "if (str.charAt(j) != thisBuf[i + j])",
      "info" : "IfStatement[61298-61390]:IfStatement[61297-61389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61335-61390]:Block[61334-61389]"
    }, {
      "left" : "continue outer;",
      "right" : "continue outer;",
      "info" : "ContinueStatement[61357-61372]:ContinueStatement[61356-61371]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[61417-61426]:ReturnStatement[61416-61425]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[61445-61455]:ReturnStatement[61444-61454]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61866-61872]:Modifier[61865-61871]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[61873-61876]:PrimitiveType[61872-61875]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[61877-61884]:SimpleName[61876-61883]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[61885-61903]:SingleVariableDeclaration[61884-61902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61905-61948]:Block[61904-61947]"
    }, {
      "left" : "return indexOf(matcher, 0);",
      "right" : "return indexOf(matcher, 0);",
      "info" : "ReturnStatement[61915-61942]:ReturnStatement[61914-61941]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62470-62476]:Modifier[62469-62475]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[62477-62480]:PrimitiveType[62476-62479]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[62481-62488]:SimpleName[62480-62487]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[62489-62507]:SingleVariableDeclaration[62488-62506]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[62509-62523]:SingleVariableDeclaration[62508-62522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62525-62909]:Block[62524-62908]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[62535-62582]:ExpressionStatement[62534-62581]"
    }, {
      "left" : "if (matcher == null || startIndex >= size)",
      "right" : "if (matcher == null || startIndex >= size)",
      "info" : "IfStatement[62591-62668]:IfStatement[62590-62667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62634-62668]:Block[62633-62667]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[62648-62658]:ReturnStatement[62647-62657]"
    }, {
      "left" : "int len = size;",
      "right" : "int len = size;",
      "info" : "VariableDeclarationStatement[62677-62692]:VariableDeclarationStatement[62676-62691]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[62701-62721]:VariableDeclarationStatement[62700-62720]"
    }, {
      "left" : "for (int i = startIndex; i < len; i++)",
      "right" : "for (int i = startIndex; i < len; i++)",
      "info" : "ForStatement[62730-62884]:ForStatement[62729-62883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62769-62884]:Block[62768-62883]"
    }, {
      "left" : "if (matcher.isMatch(buf, i, startIndex, len) > 0)",
      "right" : "if (matcher.isMatch(buf, i, startIndex, len) > 0)",
      "info" : "IfStatement[62783-62874]:IfStatement[62782-62873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62833-62874]:Block[62832-62873]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[62851-62860]:ReturnStatement[62850-62859]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[62893-62903]:ReturnStatement[62892-62902]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63209-63215]:Modifier[63208-63214]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[63216-63219]:PrimitiveType[63215-63218]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[63220-63231]:SimpleName[63219-63230]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[63232-63239]:SingleVariableDeclaration[63231-63238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63241-63290]:Block[63240-63289]"
    }, {
      "left" : "return lastIndexOf(ch, size - 1);",
      "right" : "return lastIndexOf(ch, size - 1);",
      "info" : "ReturnStatement[63251-63284]:ReturnStatement[63250-63283]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63591-63597]:Modifier[63590-63596]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[63598-63601]:PrimitiveType[63597-63600]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[63602-63613]:SimpleName[63601-63612]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[63614-63621]:SingleVariableDeclaration[63613-63620]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[63623-63637]:SingleVariableDeclaration[63622-63636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63639-63928]:Block[63638-63927]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[63649-63707]:ExpressionStatement[63648-63706]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[63716-63770]:IfStatement[63715-63769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63736-63770]:Block[63735-63769]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[63750-63760]:ReturnStatement[63749-63759]"
    }, {
      "left" : "for (int i = startIndex; i >= 0; i--)",
      "right" : "for (int i = startIndex; i >= 0; i--)",
      "info" : "ForStatement[63779-63903]:ForStatement[63778-63902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63817-63903]:Block[63816-63902]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[63831-63893]:IfStatement[63830-63892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63852-63893]:Block[63851-63892]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[63870-63879]:ReturnStatement[63869-63878]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[63912-63922]:ReturnStatement[63911-63921]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64265-64271]:Modifier[64264-64270]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[64272-64275]:PrimitiveType[64271-64274]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[64276-64287]:SimpleName[64275-64286]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[64288-64298]:SingleVariableDeclaration[64287-64297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64300-64350]:Block[64299-64349]"
    }, {
      "left" : "return lastIndexOf(str, size - 1);",
      "right" : "return lastIndexOf(str, size - 1);",
      "info" : "ReturnStatement[64310-64344]:ReturnStatement[64309-64343]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64813-64819]:Modifier[64812-64818]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[64820-64823]:PrimitiveType[64819-64822]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[64824-64835]:SimpleName[64823-64834]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[64836-64846]:SingleVariableDeclaration[64835-64845]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[64848-64862]:SingleVariableDeclaration[64847-64861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64864-65624]:Block[64863-65623]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[64874-64932]:ExpressionStatement[64873-64931]"
    }, {
      "left" : "if (str == null || startIndex < 0)",
      "right" : "if (str == null || startIndex < 0)",
      "info" : "IfStatement[64941-65010]:IfStatement[64940-65009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64976-65010]:Block[64975-65009]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[64990-65000]:ReturnStatement[64989-64999]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[65019-65045]:VariableDeclarationStatement[65018-65044]"
    }, {
      "left" : "if (strLen > 0 && strLen <= size)",
      "right" : "if (strLen > 0 && strLen <= size)",
      "info" : "IfStatement[65054-65599]:IfStatement[65053-65598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65088-65534]:Block[65087-65533]"
    }, {
      "left" : "if (strLen == 1)",
      "right" : "if (strLen == 1)",
      "info" : "IfStatement[65102-65197]:IfStatement[65101-65196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65119-65197]:Block[65118-65196]"
    }, {
      "left" : "return lastIndexOf(str.charAt(0), startIndex);",
      "right" : "return lastIndexOf(str.charAt(0), startIndex);",
      "info" : "ReturnStatement[65137-65183]:ReturnStatement[65136-65182]"
    }, {
      "left" : "outer:\n            for (int i = startIndex - strLen + 1; i >= 0; i--) {\n                for (int j = 0; j < strLen; j++) {\n                    if (str.charAt(j) != buffer[i + j]) {\n                        continue outer;\n                    }\n                }\n                return i;\n            }",
      "right" : "outer:\n            for (int i = startIndex - strLen + 1; i >= 0; i--) {\n                for (int j = 0; j < strLen; j++) {\n                    if (str.charAt(j) != buffer[i + j]) {\n                        continue outer;\n                    }\n                }\n                return i;\n            }",
      "info" : "LabeledStatement[65211-65511]:LabeledStatement[65210-65510]"
    }, {
      "left" : "for (int i = startIndex - strLen + 1; i >= 0; i--)",
      "right" : "for (int i = startIndex - strLen + 1; i >= 0; i--)",
      "info" : "ForStatement[65230-65511]:ForStatement[65229-65510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65281-65511]:Block[65280-65510]"
    }, {
      "left" : "for (int j = 0; j < strLen; j++)",
      "right" : "for (int j = 0; j < strLen; j++)",
      "info" : "ForStatement[65299-65471]:ForStatement[65298-65470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65332-65471]:Block[65331-65470]"
    }, {
      "left" : "if (str.charAt(j) != buffer[i + j])",
      "right" : "if (str.charAt(j) != buffer[i + j])",
      "info" : "IfStatement[65354-65453]:IfStatement[65353-65452]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65390-65453]:Block[65389-65452]"
    }, {
      "left" : "continue outer;",
      "right" : "continue outer;",
      "info" : "ContinueStatement[65416-65431]:ContinueStatement[65415-65430]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[65488-65497]:ReturnStatement[65487-65496]"
    }, {
      "left" : "if (strLen == 0)",
      "right" : "if (strLen == 0)",
      "info" : "IfStatement[65540-65599]:IfStatement[65539-65598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65557-65599]:Block[65556-65598]"
    }, {
      "left" : "return startIndex;",
      "right" : "return startIndex;",
      "info" : "ReturnStatement[65571-65589]:ReturnStatement[65570-65588]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[65608-65618]:ReturnStatement[65607-65617]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66027-66033]:Modifier[66026-66032]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[66034-66037]:PrimitiveType[66033-66036]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[66038-66049]:SimpleName[66037-66048]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[66050-66068]:SingleVariableDeclaration[66049-66067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66070-66120]:Block[66069-66119]"
    }, {
      "left" : "return lastIndexOf(matcher, size);",
      "right" : "return lastIndexOf(matcher, size);",
      "info" : "ReturnStatement[66080-66114]:ReturnStatement[66079-66113]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66640-66646]:Modifier[66639-66645]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[66647-66650]:PrimitiveType[66646-66649]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[66651-66662]:SimpleName[66650-66661]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[66663-66681]:SingleVariableDeclaration[66662-66680]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[66683-66697]:SingleVariableDeclaration[66682-66696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66699-67100]:Block[66698-67099]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[66709-66767]:ExpressionStatement[66708-66766]"
    }, {
      "left" : "if (matcher == null || startIndex < 0)",
      "right" : "if (matcher == null || startIndex < 0)",
      "info" : "IfStatement[66776-66849]:IfStatement[66775-66848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66815-66849]:Block[66814-66848]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[66829-66839]:ReturnStatement[66828-66838]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[66858-66878]:VariableDeclarationStatement[66857-66877]"
    }, {
      "left" : "int endIndex = startIndex + 1;",
      "right" : "int endIndex = startIndex + 1;",
      "info" : "VariableDeclarationStatement[66887-66917]:VariableDeclarationStatement[66886-66916]"
    }, {
      "left" : "for (int i = startIndex; i >= 0; i--)",
      "right" : "for (int i = startIndex; i >= 0; i--)",
      "info" : "ForStatement[66926-67075]:ForStatement[66925-67074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66964-67075]:Block[66963-67074]"
    }, {
      "left" : "if (matcher.isMatch(buf, i, 0, endIndex) > 0)",
      "right" : "if (matcher.isMatch(buf, i, 0, endIndex) > 0)",
      "info" : "IfStatement[66978-67065]:IfStatement[66977-67064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67024-67065]:Block[67023-67064]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[67042-67051]:ReturnStatement[67041-67050]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[67084-67094]:ReturnStatement[67083-67093]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68825-68831]:Modifier[68824-68830]"
    }, {
      "left" : "StrTokenizer",
      "right" : "StrTokenizer",
      "info" : "SimpleType[68832-68844]:SimpleType[68831-68843]"
    }, {
      "left" : "asTokenizer",
      "right" : "asTokenizer",
      "info" : "SimpleName[68845-68856]:SimpleName[68844-68855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68859-68908]:Block[68858-68907]"
    }, {
      "left" : "return new StrBuilderTokenizer();",
      "right" : "return new StrBuilderTokenizer();",
      "info" : "ReturnStatement[68869-68902]:ReturnStatement[68868-68901]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69837-69843]:Modifier[69836-69842]"
    }, {
      "left" : "Reader",
      "right" : "Reader",
      "info" : "SimpleType[69844-69850]:SimpleType[69843-69849]"
    }, {
      "left" : "asReader",
      "right" : "asReader",
      "info" : "SimpleName[69851-69859]:SimpleName[69850-69858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69862-69908]:Block[69861-69907]"
    }, {
      "left" : "return new StrBuilderReader();",
      "right" : "return new StrBuilderReader();",
      "info" : "ReturnStatement[69872-69902]:ReturnStatement[69871-69901]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70928-70934]:Modifier[70927-70933]"
    }, {
      "left" : "Writer",
      "right" : "Writer",
      "info" : "SimpleType[70935-70941]:SimpleType[70934-70940]"
    }, {
      "left" : "asWriter",
      "right" : "asWriter",
      "info" : "SimpleName[70942-70950]:SimpleName[70941-70949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70953-70999]:Block[70952-70998]"
    }, {
      "left" : "return new StrBuilderWriter();",
      "right" : "return new StrBuilderWriter();",
      "info" : "ReturnStatement[70963-70993]:ReturnStatement[70962-70992]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[72638-72644]:Modifier[72637-72643]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[72645-72652]:PrimitiveType[72644-72651]"
    }, {
      "left" : "equalsIgnoreCase",
      "right" : "equalsIgnoreCase",
      "info" : "SimpleName[72653-72669]:SimpleName[72652-72668]"
    }, {
      "left" : "StrBuilder other",
      "right" : "StrBuilder other",
      "info" : "SingleVariableDeclaration[72670-72686]:SingleVariableDeclaration[72669-72685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72688-73188]:Block[72687-73187]"
    }, {
      "left" : "if (this == other)",
      "right" : "if (this == other)",
      "info" : "IfStatement[72698-72753]:IfStatement[72697-72752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72717-72753]:Block[72716-72752]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[72731-72743]:ReturnStatement[72730-72742]"
    }, {
      "left" : "if (this.size != other.size)",
      "right" : "if (this.size != other.size)",
      "info" : "IfStatement[72762-72828]:IfStatement[72761-72827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72791-72828]:Block[72790-72827]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[72805-72818]:ReturnStatement[72804-72817]"
    }, {
      "left" : "char thisBuf[] = this.buffer;",
      "right" : "char thisBuf[] = this.buffer;",
      "info" : "VariableDeclarationStatement[72837-72866]:VariableDeclarationStatement[72836-72865]"
    }, {
      "left" : "char otherBuf[] = other.buffer;",
      "right" : "char otherBuf[] = other.buffer;",
      "info" : "VariableDeclarationStatement[72875-72906]:VariableDeclarationStatement[72874-72905]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[72915-73161]:ForStatement[72914-73160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72951-73161]:Block[72950-73160]"
    }, {
      "left" : "char c1 = thisBuf[i];",
      "right" : "char c1 = thisBuf[i];",
      "info" : "VariableDeclarationStatement[72965-72986]:VariableDeclarationStatement[72964-72985]"
    }, {
      "left" : "char c2 = otherBuf[i];",
      "right" : "char c2 = otherBuf[i];",
      "info" : "VariableDeclarationStatement[72999-73021]:VariableDeclarationStatement[72998-73020]"
    }, {
      "left" : "if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2))",
      "right" : "if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2))",
      "info" : "IfStatement[73034-73151]:IfStatement[73033-73150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73106-73151]:Block[73105-73150]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[73124-73137]:ReturnStatement[73123-73136]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[73170-73182]:ReturnStatement[73169-73181]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73477-73483]:Modifier[73476-73482]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[73484-73491]:PrimitiveType[73483-73490]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[73492-73498]:SimpleName[73491-73497]"
    }, {
      "left" : "StrBuilder other",
      "right" : "StrBuilder other",
      "info" : "SingleVariableDeclaration[73499-73515]:SingleVariableDeclaration[73498-73514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73517-73907]:Block[73516-73906]"
    }, {
      "left" : "if (this == other)",
      "right" : "if (this == other)",
      "info" : "IfStatement[73527-73582]:IfStatement[73526-73581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73546-73582]:Block[73545-73581]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[73560-73572]:ReturnStatement[73559-73571]"
    }, {
      "left" : "if (this.size != other.size)",
      "right" : "if (this.size != other.size)",
      "info" : "IfStatement[73591-73657]:IfStatement[73590-73656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73620-73657]:Block[73619-73656]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[73634-73647]:ReturnStatement[73633-73646]"
    }, {
      "left" : "char thisBuf[] = this.buffer;",
      "right" : "char thisBuf[] = this.buffer;",
      "info" : "VariableDeclarationStatement[73666-73695]:VariableDeclarationStatement[73665-73694]"
    }, {
      "left" : "char otherBuf[] = other.buffer;",
      "right" : "char otherBuf[] = other.buffer;",
      "info" : "VariableDeclarationStatement[73704-73735]:VariableDeclarationStatement[73703-73734]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[73744-73880]:ForStatement[73743-73879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73780-73880]:Block[73779-73879]"
    }, {
      "left" : "if (thisBuf[i] != otherBuf[i])",
      "right" : "if (thisBuf[i] != otherBuf[i])",
      "info" : "IfStatement[73794-73870]:IfStatement[73793-73869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73825-73870]:Block[73824-73869]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[73843-73856]:ReturnStatement[73842-73855]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[73889-73901]:ReturnStatement[73888-73900]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74194-74200]:Modifier[74193-74199]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[74201-74208]:PrimitiveType[74200-74207]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[74209-74215]:SimpleName[74208-74214]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[74216-74226]:SingleVariableDeclaration[74215-74225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74228-74353]:Block[74227-74352]"
    }, {
      "left" : "if (obj instanceof StrBuilder)",
      "right" : "if (obj instanceof StrBuilder)",
      "info" : "IfStatement[74238-74325]:IfStatement[74237-74324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74269-74325]:Block[74268-74324]"
    }, {
      "left" : "return equals((StrBuilder) obj);",
      "right" : "return equals((StrBuilder) obj);",
      "info" : "ReturnStatement[74283-74315]:ReturnStatement[74282-74314]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[74334-74347]:ReturnStatement[74333-74346]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74460-74466]:Modifier[74459-74465]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[74467-74470]:PrimitiveType[74466-74469]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[74471-74479]:SimpleName[74470-74478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74482-74656]:Block[74481-74655]"
    }, {
      "left" : "char buf[] = buffer;",
      "right" : "char buf[] = buffer;",
      "info" : "VariableDeclarationStatement[74492-74512]:VariableDeclarationStatement[74491-74511]"
    }, {
      "left" : "int hash = 0;",
      "right" : "int hash = 0;",
      "info" : "VariableDeclarationStatement[74521-74534]:VariableDeclarationStatement[74520-74533]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[74543-74629]:ForStatement[74542-74628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74579-74629]:Block[74578-74628]"
    }, {
      "left" : "hash = 31 * hash + buf[i];",
      "right" : "hash = 31 * hash + buf[i];",
      "info" : "ExpressionStatement[74593-74619]:ExpressionStatement[74592-74618]"
    }, {
      "left" : "return hash;",
      "right" : "return hash;",
      "info" : "ReturnStatement[74638-74650]:ReturnStatement[74637-74649]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75039-75045]:Modifier[75038-75044]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[75046-75052]:SimpleType[75045-75051]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[75053-75061]:SimpleName[75052-75060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75064-75115]:Block[75063-75114]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[75074-75109]:ReturnStatement[75073-75108]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75310-75316]:Modifier[75309-75315]"
    }, {
      "left" : "StringBuffer",
      "right" : "StringBuffer",
      "info" : "SimpleType[75317-75329]:SimpleType[75316-75328]"
    }, {
      "left" : "toStringBuffer",
      "right" : "toStringBuffer",
      "info" : "SimpleName[75330-75344]:SimpleName[75329-75343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75347-75417]:Block[75346-75416]"
    }, {
      "left" : "return new StringBuffer(size).append(buffer, 0, size);",
      "right" : "return new StringBuffer(size).append(buffer, 0, size);",
      "info" : "ReturnStatement[75357-75411]:ReturnStatement[75356-75410]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[75877-75886]:Modifier[75876-75885]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[75887-75890]:PrimitiveType[75886-75889]"
    }, {
      "left" : "validateRange",
      "right" : "validateRange",
      "info" : "SimpleName[75891-75904]:SimpleName[75890-75903]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[75905-75919]:SingleVariableDeclaration[75904-75918]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[75921-75933]:SingleVariableDeclaration[75920-75932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75935-76261]:Block[75934-76260]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[75945-76043]:IfStatement[75944-76042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75965-76043]:Block[75964-76042]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "info" : "ThrowStatement[75979-76033]:ThrowStatement[75978-76032]"
    }, {
      "left" : "if (endIndex > size)",
      "right" : "if (endIndex > size)",
      "info" : "IfStatement[76052-76113]:IfStatement[76051-76112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76073-76113]:Block[76072-76112]"
    }, {
      "left" : "endIndex = size;",
      "right" : "endIndex = size;",
      "info" : "ExpressionStatement[76087-76103]:ExpressionStatement[76086-76102]"
    }, {
      "left" : "if (startIndex > endIndex)",
      "right" : "if (startIndex > endIndex)",
      "info" : "IfStatement[76122-76230]:IfStatement[76121-76229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76149-76230]:Block[76148-76229]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "info" : "ThrowStatement[76163-76220]:ThrowStatement[76162-76219]"
    }, {
      "left" : "return endIndex;",
      "right" : "return endIndex;",
      "info" : "ReturnStatement[76239-76255]:ReturnStatement[76238-76254]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[76470-76479]:Modifier[76469-76478]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[76480-76484]:PrimitiveType[76479-76483]"
    }, {
      "left" : "validateIndex",
      "right" : "validateIndex",
      "info" : "SimpleName[76485-76498]:SimpleName[76484-76497]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[76499-76508]:SingleVariableDeclaration[76498-76507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76510-76630]:Block[76509-76629]"
    }, {
      "left" : "if (index < 0 || index > size)",
      "right" : "if (index < 0 || index > size)",
      "info" : "IfStatement[76520-76624]:IfStatement[76519-76623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76551-76624]:Block[76550-76623]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[76565-76614]:ThrowStatement[76564-76613]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[76796-76801]:TYPE_DECLARATION_KIND[76795-76800]"
    }, {
      "left" : "StrBuilderTokenizer",
      "right" : "StrBuilderTokenizer",
      "info" : "SimpleName[76802-76821]:SimpleName[76801-76820]"
    }, {
      "left" : "StrTokenizer",
      "right" : "StrTokenizer",
      "info" : "SimpleType[76830-76842]:SimpleType[76829-76841]"
    }, {
      "left" : "StrBuilderTokenizer",
      "right" : "StrBuilderTokenizer",
      "info" : "SimpleName[76883-76902]:SimpleName[76882-76901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76905-76937]:Block[76904-76936]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[76919-76927]:SuperConstructorInvocation[76918-76926]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[76976-76985]:Modifier[76975-76984]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[76986-76990]:SimpleType[76985-76989]"
    }, {
      "left" : "tokenize",
      "right" : "tokenize",
      "info" : "SimpleName[76991-76999]:SimpleName[76990-76998]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[77000-77012]:SingleVariableDeclaration[76999-77011]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[77014-77024]:SingleVariableDeclaration[77013-77023]"
    }, {
      "left" : "int count",
      "right" : "int count",
      "info" : "SingleVariableDeclaration[77026-77035]:SingleVariableDeclaration[77025-77034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77037-77267]:Block[77036-77266]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[77051-77257]:IfStatement[77050-77256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77070-77175]:Block[77069-77174]"
    }, {
      "left" : "return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",
      "right" : "return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",
      "info" : "ReturnStatement[77088-77161]:ReturnStatement[77087-77160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77181-77257]:Block[77180-77256]"
    }, {
      "left" : "return super.tokenize(chars, offset, count);",
      "right" : "return super.tokenize(chars, offset, count);",
      "info" : "ReturnStatement[77199-77243]:ReturnStatement[77198-77242]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[77306-77312]:Modifier[77305-77311]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[77313-77319]:SimpleType[77312-77318]"
    }, {
      "left" : "getContent",
      "right" : "getContent",
      "info" : "SimpleName[77320-77330]:SimpleName[77319-77329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77333-77534]:Block[77332-77533]"
    }, {
      "left" : "String str = super.getContent();",
      "right" : "String str = super.getContent();",
      "info" : "VariableDeclarationStatement[77347-77379]:VariableDeclarationStatement[77346-77378]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[77392-77524]:IfStatement[77391-77523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77409-77475]:Block[77408-77474]"
    }, {
      "left" : "return StrBuilder.this.toString();",
      "right" : "return StrBuilder.this.toString();",
      "info" : "ReturnStatement[77427-77461]:ReturnStatement[77426-77460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77481-77524]:Block[77480-77523]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[77499-77510]:ReturnStatement[77498-77509]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[77703-77708]:TYPE_DECLARATION_KIND[77702-77707]"
    }, {
      "left" : "StrBuilderReader",
      "right" : "StrBuilderReader",
      "info" : "SimpleName[77709-77725]:SimpleName[77708-77724]"
    }, {
      "left" : "Reader",
      "right" : "Reader",
      "info" : "SimpleType[77734-77740]:SimpleType[77733-77739]"
    }, {
      "left" : "StrBuilderReader",
      "right" : "StrBuilderReader",
      "info" : "SimpleName[77915-77931]:SimpleName[77914-77930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77934-77966]:Block[77933-77965]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[77948-77956]:SuperConstructorInvocation[77947-77955]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78005-78011]:Modifier[78004-78010]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[78012-78016]:PrimitiveType[78011-78015]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[78017-78022]:SimpleName[78016-78021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78025-78062]:Block[78024-78061]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78101-78107]:Modifier[78100-78106]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[78108-78111]:PrimitiveType[78107-78110]"
    }, {
      "left" : "read",
      "right" : "read",
      "info" : "SimpleName[78112-78116]:SimpleName[78111-78115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78119-78257]:Block[78118-78256]"
    }, {
      "left" : "if (ready() == false)",
      "right" : "if (ready() == false)",
      "info" : "IfStatement[78133-78197]:IfStatement[78132-78196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78155-78197]:Block[78154-78196]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[78173-78183]:ReturnStatement[78172-78182]"
    }, {
      "left" : "return StrBuilder.this.charAt(pos++);",
      "right" : "return StrBuilder.this.charAt(pos++);",
      "info" : "ReturnStatement[78210-78247]:ReturnStatement[78209-78246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78296-78302]:Modifier[78295-78301]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[78303-78306]:PrimitiveType[78302-78305]"
    }, {
      "left" : "read",
      "right" : "read",
      "info" : "SimpleName[78307-78311]:SimpleName[78306-78310]"
    }, {
      "left" : "char b[]",
      "right" : "char b[]",
      "info" : "SingleVariableDeclaration[78312-78320]:SingleVariableDeclaration[78311-78319]"
    }, {
      "left" : "int off",
      "right" : "int off",
      "info" : "SingleVariableDeclaration[78322-78329]:SingleVariableDeclaration[78321-78328]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[78331-78338]:SingleVariableDeclaration[78330-78337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78340-78913]:Block[78339-78912]"
    }, {
      "left" : "if (off < 0 || len < 0 || off > b.length ||\n                    (off + len) > b.length || (off + len) < 0)",
      "right" : "if (off < 0 || len < 0 || off > b.length ||\n                    (off + len) > b.length || (off + len) < 0)",
      "info" : "IfStatement[78354-78531]:IfStatement[78353-78530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78461-78531]:Block[78460-78530]"
    }, {
      "left" : "throw new IndexOutOfBoundsException();",
      "right" : "throw new IndexOutOfBoundsException();",
      "info" : "ThrowStatement[78479-78517]:ThrowStatement[78478-78516]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[78544-78599]:IfStatement[78543-78598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78558-78599]:Block[78557-78598]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[78576-78585]:ReturnStatement[78575-78584]"
    }, {
      "left" : "if (pos >= StrBuilder.this.size())",
      "right" : "if (pos >= StrBuilder.this.size())",
      "info" : "IfStatement[78612-78689]:IfStatement[78611-78688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78647-78689]:Block[78646-78688]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[78665-78675]:ReturnStatement[78664-78674]"
    }, {
      "left" : "if (pos + len > size())",
      "right" : "if (pos + len > size())",
      "info" : "IfStatement[78702-78793]:IfStatement[78701-78792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78726-78793]:Block[78725-78792]"
    }, {
      "left" : "len = StrBuilder.this.size() - pos;",
      "right" : "len = StrBuilder.this.size() - pos;",
      "info" : "ExpressionStatement[78744-78779]:ExpressionStatement[78743-78778]"
    }, {
      "left" : "StrBuilder.this.getChars(pos, pos + len, b, off);",
      "right" : "StrBuilder.this.getChars(pos, pos + len, b, off);",
      "info" : "ExpressionStatement[78806-78855]:ExpressionStatement[78805-78854]"
    }, {
      "left" : "pos += len;",
      "right" : "pos += len;",
      "info" : "ExpressionStatement[78868-78879]:ExpressionStatement[78867-78878]"
    }, {
      "left" : "return len;",
      "right" : "return len;",
      "info" : "ReturnStatement[78892-78903]:ReturnStatement[78891-78902]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78952-78958]:Modifier[78951-78957]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[78959-78963]:PrimitiveType[78958-78962]"
    }, {
      "left" : "skip",
      "right" : "skip",
      "info" : "SimpleName[78964-78968]:SimpleName[78963-78967]"
    }, {
      "left" : "long n",
      "right" : "long n",
      "info" : "SingleVariableDeclaration[78969-78975]:SingleVariableDeclaration[78968-78974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78977-79213]:Block[78976-79212]"
    }, {
      "left" : "if (pos + n > StrBuilder.this.size())",
      "right" : "if (pos + n > StrBuilder.this.size())",
      "info" : "IfStatement[78991-79094]:IfStatement[78990-79093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79029-79094]:Block[79028-79093]"
    }, {
      "left" : "n = StrBuilder.this.size() - pos;",
      "right" : "n = StrBuilder.this.size() - pos;",
      "info" : "ExpressionStatement[79047-79080]:ExpressionStatement[79046-79079]"
    }, {
      "left" : "if (n < 0)",
      "right" : "if (n < 0)",
      "info" : "IfStatement[79107-79159]:IfStatement[79106-79158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79118-79159]:Block[79117-79158]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[79136-79145]:ReturnStatement[79135-79144]"
    }, {
      "left" : "pos += n;",
      "right" : "pos += n;",
      "info" : "ExpressionStatement[79172-79181]:ExpressionStatement[79171-79180]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[79194-79203]:ReturnStatement[79193-79202]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79252-79258]:Modifier[79251-79257]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[79259-79266]:PrimitiveType[79258-79265]"
    }, {
      "left" : "ready",
      "right" : "ready",
      "info" : "SimpleName[79267-79272]:SimpleName[79266-79271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79275-79335]:Block[79274-79334]"
    }, {
      "left" : "return pos < StrBuilder.this.size();",
      "right" : "return pos < StrBuilder.this.size();",
      "info" : "ReturnStatement[79289-79325]:ReturnStatement[79288-79324]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79374-79380]:Modifier[79373-79379]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[79381-79388]:PrimitiveType[79380-79387]"
    }, {
      "left" : "markSupported",
      "right" : "markSupported",
      "info" : "SimpleName[79389-79402]:SimpleName[79388-79401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79405-79441]:Block[79404-79440]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[79419-79431]:ReturnStatement[79418-79430]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79480-79486]:Modifier[79479-79485]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[79487-79491]:PrimitiveType[79486-79490]"
    }, {
      "left" : "mark",
      "right" : "mark",
      "info" : "SimpleName[79492-79496]:SimpleName[79491-79495]"
    }, {
      "left" : "int readAheadLimit",
      "right" : "int readAheadLimit",
      "info" : "SingleVariableDeclaration[79497-79515]:SingleVariableDeclaration[79496-79514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79517-79552]:Block[79516-79551]"
    }, {
      "left" : "mark = pos;",
      "right" : "mark = pos;",
      "info" : "ExpressionStatement[79531-79542]:ExpressionStatement[79530-79541]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79591-79597]:Modifier[79590-79596]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[79598-79602]:PrimitiveType[79597-79601]"
    }, {
      "left" : "reset",
      "right" : "reset",
      "info" : "SimpleName[79603-79608]:SimpleName[79602-79607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79611-79646]:Block[79610-79645]"
    }, {
      "left" : "pos = mark;",
      "right" : "pos = mark;",
      "info" : "ExpressionStatement[79625-79636]:ExpressionStatement[79624-79635]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[79815-79820]:TYPE_DECLARATION_KIND[79814-79819]"
    }, {
      "left" : "StrBuilderWriter",
      "right" : "StrBuilderWriter",
      "info" : "SimpleName[79821-79837]:SimpleName[79820-79836]"
    }, {
      "left" : "Writer",
      "right" : "Writer",
      "info" : "SimpleType[79846-79852]:SimpleType[79845-79851]"
    }, {
      "left" : "StrBuilderWriter",
      "right" : "StrBuilderWriter",
      "info" : "SimpleName[79893-79909]:SimpleName[79892-79908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79912-79944]:Block[79911-79943]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[79926-79934]:SuperConstructorInvocation[79925-79933]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79983-79989]:Modifier[79982-79988]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[79990-79994]:PrimitiveType[79989-79993]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[79995-80000]:SimpleName[79994-79999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80003-80040]:Block[80002-80039]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80079-80085]:Modifier[80078-80084]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80086-80090]:PrimitiveType[80085-80089]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[80091-80096]:SimpleName[80090-80095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80099-80136]:Block[80098-80135]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80175-80181]:Modifier[80174-80180]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80182-80186]:PrimitiveType[80181-80185]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[80187-80192]:SimpleName[80186-80191]"
    }, {
      "left" : "int c",
      "right" : "int c",
      "info" : "SingleVariableDeclaration[80193-80198]:SingleVariableDeclaration[80192-80197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80200-80257]:Block[80199-80256]"
    }, {
      "left" : "StrBuilder.this.append((char) c);",
      "right" : "StrBuilder.this.append((char) c);",
      "info" : "ExpressionStatement[80214-80247]:ExpressionStatement[80213-80246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80296-80302]:Modifier[80295-80301]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80303-80307]:PrimitiveType[80302-80306]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[80308-80313]:SimpleName[80307-80312]"
    }, {
      "left" : "char[] cbuf",
      "right" : "char[] cbuf",
      "info" : "SingleVariableDeclaration[80314-80325]:SingleVariableDeclaration[80313-80324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80327-80380]:Block[80326-80379]"
    }, {
      "left" : "StrBuilder.this.append(cbuf);",
      "right" : "StrBuilder.this.append(cbuf);",
      "info" : "ExpressionStatement[80341-80370]:ExpressionStatement[80340-80369]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80419-80425]:Modifier[80418-80424]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80426-80430]:PrimitiveType[80425-80429]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[80431-80436]:SimpleName[80430-80435]"
    }, {
      "left" : "char[] cbuf",
      "right" : "char[] cbuf",
      "info" : "SingleVariableDeclaration[80437-80448]:SingleVariableDeclaration[80436-80447]"
    }, {
      "left" : "int off",
      "right" : "int off",
      "info" : "SingleVariableDeclaration[80450-80457]:SingleVariableDeclaration[80449-80456]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[80459-80466]:SingleVariableDeclaration[80458-80465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80468-80531]:Block[80467-80530]"
    }, {
      "left" : "StrBuilder.this.append(cbuf, off, len);",
      "right" : "StrBuilder.this.append(cbuf, off, len);",
      "info" : "ExpressionStatement[80482-80521]:ExpressionStatement[80481-80520]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80570-80576]:Modifier[80569-80575]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80577-80581]:PrimitiveType[80576-80580]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[80582-80587]:SimpleName[80581-80586]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[80588-80598]:SingleVariableDeclaration[80587-80597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80600-80652]:Block[80599-80651]"
    }, {
      "left" : "StrBuilder.this.append(str);",
      "right" : "StrBuilder.this.append(str);",
      "info" : "ExpressionStatement[80614-80642]:ExpressionStatement[80613-80641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80691-80697]:Modifier[80690-80696]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80698-80702]:PrimitiveType[80697-80701]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[80703-80708]:SimpleName[80702-80707]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[80709-80719]:SingleVariableDeclaration[80708-80718]"
    }, {
      "left" : "int off",
      "right" : "int off",
      "info" : "SingleVariableDeclaration[80721-80728]:SingleVariableDeclaration[80720-80727]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[80730-80737]:SingleVariableDeclaration[80729-80736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80739-80801]:Block[80738-80800]"
    }, {
      "left" : "StrBuilder.this.append(str, off, len);",
      "right" : "StrBuilder.this.append(str, off, len);",
      "info" : "ExpressionStatement[80753-80791]:ExpressionStatement[80752-80790]"
    } ]
  },
  "interFileMappings" : { }
}