{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final List<Node> EMPTY_NODES = Collections.emptyList();",
      "right" : "private static final List<Node> EMPTY_NODES = Collections.emptyList();",
      "info" : "FieldDeclaration[574-644]:FieldDeclaration[574-644]"
    }, {
      "left" : "Node parentNode;",
      "right" : "Node parentNode;",
      "info" : "FieldDeclaration[649-665]:FieldDeclaration[649-665]"
    }, {
      "left" : "List<Node> childNodes;",
      "right" : "List<Node> childNodes;",
      "info" : "FieldDeclaration[670-692]:FieldDeclaration[670-692]"
    }, {
      "left" : "Attributes attributes;",
      "right" : "Attributes attributes;",
      "info" : "FieldDeclaration[697-719]:FieldDeclaration[697-719]"
    }, {
      "left" : "String baseUri;",
      "right" : "String baseUri;",
      "info" : "FieldDeclaration[724-739]:FieldDeclaration[724-739]"
    }, {
      "left" : "int siblingIndex;",
      "right" : "int siblingIndex;",
      "info" : "FieldDeclaration[744-761]:FieldDeclaration[744-761]"
    }, {
      "left" : "protected Node(String baseUri, Attributes attributes)",
      "right" : "protected Node(String baseUri, Attributes attributes)",
      "info" : "MethodDeclaration[767-1153]:MethodDeclaration[767-1153]"
    }, {
      "left" : "protected Node(String baseUri)",
      "right" : "protected Node(String baseUri)",
      "info" : "MethodDeclaration[1159-1238]:MethodDeclaration[1159-1238]"
    }, {
      "left" : "protected Node()",
      "right" : "protected Node()",
      "info" : "MethodDeclaration[1244-1440]:MethodDeclaration[1244-1440]"
    }, {
      "left" : "public abstract String nodeName();",
      "right" : "public abstract String nodeName();",
      "info" : "MethodDeclaration[1446-1635]:MethodDeclaration[1446-1635]"
    }, {
      "left" : "public String attr(String attributeKey)",
      "right" : "public String attr(String attributeKey)",
      "info" : "MethodDeclaration[1641-2548]:MethodDeclaration[1641-2548]"
    }, {
      "left" : "public Attributes attributes()",
      "right" : "public Attributes attributes()",
      "info" : "MethodDeclaration[2554-2779]:MethodDeclaration[2554-2779]"
    }, {
      "left" : "public Node attr(String attributeKey, String attributeValue)",
      "right" : "public Node attr(String attributeKey, String attributeValue)",
      "info" : "MethodDeclaration[2785-3161]:MethodDeclaration[2785-3161]"
    }, {
      "left" : "public boolean hasAttr(String attributeKey)",
      "right" : "public boolean hasAttr(String attributeKey)",
      "info" : "MethodDeclaration[3167-3702]:MethodDeclaration[3167-3702]"
    }, {
      "left" : "public Node removeAttr(String attributeKey)",
      "right" : "public Node removeAttr(String attributeKey)",
      "info" : "MethodDeclaration[3708-4010]:MethodDeclaration[3708-4010]"
    }, {
      "left" : "public String baseUri()",
      "right" : "public String baseUri()",
      "info" : "MethodDeclaration[4016-4145]:MethodDeclaration[4016-4145]"
    }, {
      "left" : "public void setBaseUri(final String baseUri)",
      "right" : "public void setBaseUri(final String baseUri)",
      "info" : "MethodDeclaration[4151-4581]:MethodDeclaration[4151-4581]"
    }, {
      "left" : "public void head(Node node, int depth)",
      "right" : "public void head(Node node, int depth)",
      "info" : "MethodDeclaration[4401-4495]:MethodDeclaration[4401-4495]"
    }, {
      "left" : "public void tail(Node node, int depth)",
      "right" : "public void tail(Node node, int depth)",
      "info" : "MethodDeclaration[4509-4563]:MethodDeclaration[4509-4563]"
    }, {
      "left" : "public String absUrl(String attributeKey)",
      "right" : "public String absUrl(String attributeKey)",
      "info" : "MethodDeclaration[4587-5956]:MethodDeclaration[4587-5956]"
    }, {
      "left" : "public Node childNode(int index)",
      "right" : "public Node childNode(int index)",
      "info" : "MethodDeclaration[5962-6255]:MethodDeclaration[5962-6255]"
    }, {
      "left" : "public List<Node> childNodes()",
      "right" : "public List<Node> childNodes()",
      "info" : "MethodDeclaration[6261-6595]:MethodDeclaration[6261-6595]"
    }, {
      "left" : "public List<Node> childNodesCopy()",
      "right" : "public List<Node> childNodesCopy()",
      "info" : "MethodDeclaration[6601-7025]:MethodDeclaration[6601-7025]"
    }, {
      "left" : "public final int childNodeSize()",
      "right" : "public final int childNodeSize()",
      "info" : "MethodDeclaration[7031-7243]:MethodDeclaration[7031-7243]"
    }, {
      "left" : "protected Node[] childNodesAsArray()",
      "right" : "protected Node[] childNodesAsArray()",
      "info" : "MethodDeclaration[7253-7359]:MethodDeclaration[7253-7359]"
    }, {
      "left" : "public Node parent()",
      "right" : "public Node parent()",
      "info" : "MethodDeclaration[7365-7519]:MethodDeclaration[7365-7519]"
    }, {
      "left" : "public final Node parentNode()",
      "right" : "public final Node parentNode()",
      "info" : "MethodDeclaration[7525-7777]:MethodDeclaration[7525-7777]"
    }, {
      "left" : "public Document ownerDocument()",
      "right" : "public Document ownerDocument()",
      "info" : "MethodDeclaration[7787-8184]:MethodDeclaration[7787-8184]"
    }, {
      "left" : "public void remove()",
      "right" : "public void remove()",
      "info" : "MethodDeclaration[8194-8416]:MethodDeclaration[8194-8416]"
    }, {
      "left" : "public Node before(String html)",
      "right" : "public Node before(String html)",
      "info" : "MethodDeclaration[8422-8750]:MethodDeclaration[8422-8750]"
    }, {
      "left" : "public Node before(Node node)",
      "right" : "public Node before(Node node)",
      "info" : "MethodDeclaration[8756-9154]:MethodDeclaration[8756-9154]"
    }, {
      "left" : "public Node after(String html)",
      "right" : "public Node after(String html)",
      "info" : "MethodDeclaration[9160-9490]:MethodDeclaration[9160-9490]"
    }, {
      "left" : "public Node after(Node node)",
      "right" : "public Node after(Node node)",
      "info" : "MethodDeclaration[9496-9896]:MethodDeclaration[9496-9896]"
    }, {
      "left" : "private void addSiblingHtml(int index, String html)",
      "right" : "private void addSiblingHtml(int index, String html)",
      "info" : "MethodDeclaration[9902-10276]:MethodDeclaration[9902-10276]"
    }, {
      "left" : "public Node wrap(String html)",
      "right" : "public Node wrap(String html)",
      "info" : "MethodDeclaration[10282-11459]:MethodDeclaration[10282-11459]"
    }, {
      "left" : "public Node unwrap()",
      "right" : "public Node unwrap()",
      "info" : "MethodDeclaration[11465-12421]:MethodDeclaration[11465-12421]"
    }, {
      "left" : "private Element getDeepChild(Element el)",
      "right" : "private Element getDeepChild(Element el)",
      "info" : "MethodDeclaration[12427-12642]:MethodDeclaration[12427-12642]"
    }, {
      "left" : "public void replaceWith(Node in)",
      "right" : "public void replaceWith(Node in)",
      "info" : "MethodDeclaration[12652-12947]:MethodDeclaration[12652-12947]"
    }, {
      "left" : "protected void setParentNode(Node parentNode)",
      "right" : "protected void setParentNode(Node parentNode)",
      "info" : "MethodDeclaration[12953-13128]:MethodDeclaration[12953-13128]"
    }, {
      "left" : "protected void replaceChild(Node out, Node in)",
      "right" : "protected void replaceChild(Node out, Node in)",
      "info" : "MethodDeclaration[13134-13529]:MethodDeclaration[13134-13529]"
    }, {
      "left" : "protected void removeChild(Node out)",
      "right" : "protected void removeChild(Node out)",
      "info" : "MethodDeclaration[13535-13769]:MethodDeclaration[13535-13769]"
    }, {
      "left" : "protected void addChildren(Node... children)",
      "right" : "protected void addChildren(Node... children)",
      "info" : "MethodDeclaration[13775-14127]:MethodDeclaration[13775-14127]"
    }, {
      "left" : "protected void ensureChildNodes()",
      "right" : "protected void ensureChildNodes()",
      "info" : "MethodDeclaration[14477-14618]:MethodDeclaration[14481-14622]"
    }, {
      "left" : "protected void reparentChild(Node child)",
      "right" : "protected void reparentChild(Node child)",
      "info" : "MethodDeclaration[14624-14794]:MethodDeclaration[14628-14798]"
    }, {
      "left" : "private void reindexChildren(int start)",
      "right" : "private void reindexChildren(int start)",
      "info" : "MethodDeclaration[14804-14969]:MethodDeclaration[14808-14973]"
    }, {
      "left" : "public List<Node> siblingNodes()",
      "right" : "public List<Node> siblingNodes()",
      "info" : "MethodDeclaration[14979-15606]:MethodDeclaration[14983-15610]"
    }, {
      "left" : "public Node nextSibling()",
      "right" : "public Node nextSibling()",
      "info" : "MethodDeclaration[15612-16049]:MethodDeclaration[15616-16053]"
    }, {
      "left" : "public Node previousSibling()",
      "right" : "public Node previousSibling()",
      "info" : "MethodDeclaration[16055-16415]:MethodDeclaration[16059-16419]"
    }, {
      "left" : "public int siblingIndex()",
      "right" : "public int siblingIndex()",
      "info" : "MethodDeclaration[16421-16725]:MethodDeclaration[16425-16729]"
    }, {
      "left" : "protected void setSiblingIndex(int siblingIndex)",
      "right" : "protected void setSiblingIndex(int siblingIndex)",
      "info" : "MethodDeclaration[16735-16833]:MethodDeclaration[16739-16837]"
    }, {
      "left" : "public Node traverse(NodeVisitor nodeVisitor)",
      "right" : "public Node traverse(NodeVisitor nodeVisitor)",
      "info" : "MethodDeclaration[16839-17257]:MethodDeclaration[16843-17261]"
    }, {
      "left" : "public String outerHtml()",
      "right" : "public String outerHtml()",
      "info" : "MethodDeclaration[17263-17481]:MethodDeclaration[17267-17485]"
    }, {
      "left" : "protected void outerHtml(StringBuilder accum)",
      "right" : "protected void outerHtml(StringBuilder accum)",
      "info" : "MethodDeclaration[17487-17632]:MethodDeclaration[17491-17636]"
    }, {
      "left" : "Document.OutputSettings getOutputSettings()",
      "right" : "Document.OutputSettings getOutputSettings()",
      "info" : "MethodDeclaration[17724-17888]:MethodDeclaration[17728-17892]"
    }, {
      "left" : "abstract void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out);",
      "right" : "abstract void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out);",
      "info" : "MethodDeclaration[17894-18086]:MethodDeclaration[17898-18090]"
    }, {
      "left" : "abstract void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out);",
      "right" : "abstract void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out);",
      "info" : "MethodDeclaration[18092-18181]:MethodDeclaration[18096-18185]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[18187-18261]:MethodDeclaration[18191-18265]"
    }, {
      "left" : "protected void indent(StringBuilder accum, int depth, Document.OutputSettings out)",
      "right" : "protected void indent(StringBuilder accum, int depth, Document.OutputSettings out)",
      "info" : "MethodDeclaration[18267-18440]:MethodDeclaration[18271-18444]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[18446-19187]:MethodDeclaration[18450-19191]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[19193-19856]:MethodDeclaration[19197-19860]"
    }, {
      "left" : "public Node clone()",
      "right" : "public Node clone()",
      "info" : "MethodDeclaration[19862-20990]:MethodDeclaration[19866-20994]"
    }, {
      "left" : "protected Node doClone(Node parent)",
      "right" : "protected Node doClone(Node parent)",
      "info" : "MethodDeclaration[21125-21766]:MethodDeclaration[21129-21770]"
    }, {
      "left" : "OuterHtmlVisitor",
      "right" : "OuterHtmlVisitor",
      "info" : "TypeDeclaration[21772-22367]:TypeDeclaration[21776-22371]"
    }, {
      "left" : "private StringBuilder accum;",
      "right" : "private StringBuilder accum;",
      "info" : "FieldDeclaration[21843-21871]:FieldDeclaration[21847-21875]"
    }, {
      "left" : "private Document.OutputSettings out;",
      "right" : "private Document.OutputSettings out;",
      "info" : "FieldDeclaration[21880-21916]:FieldDeclaration[21884-21920]"
    }, {
      "left" : "OuterHtmlVisitor(StringBuilder accum, Document.OutputSettings out)",
      "right" : "OuterHtmlVisitor(StringBuilder accum, Document.OutputSettings out)",
      "info" : "MethodDeclaration[21926-22064]:MethodDeclaration[21930-22068]"
    }, {
      "left" : "public void head(Node node, int depth)",
      "right" : "public void head(Node node, int depth)",
      "info" : "MethodDeclaration[22074-22175]:MethodDeclaration[22078-22179]"
    }, {
      "left" : "public void tail(Node node, int depth)",
      "right" : "public void tail(Node node, int depth)",
      "info" : "MethodDeclaration[22185-22361]:MethodDeclaration[22189-22365]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[953-1153]:Block[953-1153]"
    }, {
      "left" : "Validate.notNull(baseUri);",
      "right" : "Validate.notNull(baseUri);",
      "info" : "ExpressionStatement[963-989]:ExpressionStatement[963-989]"
    }, {
      "left" : "Validate.notNull(attributes);",
      "right" : "Validate.notNull(attributes);",
      "info" : "ExpressionStatement[998-1027]:ExpressionStatement[998-1027]"
    }, {
      "left" : "childNodes = EMPTY_NODES;",
      "right" : "childNodes = EMPTY_NODES;",
      "info" : "ExpressionStatement[1045-1070]:ExpressionStatement[1045-1070]"
    }, {
      "left" : "this.baseUri = baseUri.trim();",
      "right" : "this.baseUri = baseUri.trim();",
      "info" : "ExpressionStatement[1079-1109]:ExpressionStatement[1079-1109]"
    }, {
      "left" : "this.attributes = attributes;",
      "right" : "this.attributes = attributes;",
      "info" : "ExpressionStatement[1118-1147]:ExpressionStatement[1118-1147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1190-1238]:Block[1190-1238]"
    }, {
      "left" : "this(baseUri, new Attributes());",
      "right" : "this(baseUri, new Attributes());",
      "info" : "ConstructorInvocation[1200-1232]:ConstructorInvocation[1200-1232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1372-1440]:Block[1372-1440]"
    }, {
      "left" : "childNodes = EMPTY_NODES;",
      "right" : "childNodes = EMPTY_NODES;",
      "info" : "ExpressionStatement[1382-1407]:ExpressionStatement[1382-1407]"
    }, {
      "left" : "attributes = null;",
      "right" : "attributes = null;",
      "info" : "ExpressionStatement[1416-1434]:ExpressionStatement[1416-1434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2250-2548]:Block[2250-2548]"
    }, {
      "left" : "Validate.notNull(attributeKey);",
      "right" : "Validate.notNull(attributeKey);",
      "info" : "ExpressionStatement[2260-2291]:ExpressionStatement[2260-2291]"
    }, {
      "left" : "if (attributes.hasKey(attributeKey))",
      "right" : "if (attributes.hasKey(attributeKey))",
      "info" : "IfStatement[2301-2542]:IfStatement[2301-2542]"
    }, {
      "left" : "return attributes.get(attributeKey);",
      "right" : "return attributes.get(attributeKey);",
      "info" : "ReturnStatement[2350-2386]:ReturnStatement[2350-2386]"
    }, {
      "left" : "if (attributeKey.toLowerCase().startsWith(\"abs:\"))",
      "right" : "if (attributeKey.toLowerCase().startsWith(\"abs:\"))",
      "info" : "IfStatement[2400-2542]:IfStatement[2400-2542]"
    }, {
      "left" : "return absUrl(attributeKey.substring(\"abs:\".length()));",
      "right" : "return absUrl(attributeKey.substring(\"abs:\".length()));",
      "info" : "ReturnStatement[2463-2518]:ReturnStatement[2463-2518]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[2532-2542]:ReturnStatement[2532-2542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2745-2779]:Block[2745-2779]"
    }, {
      "left" : "return attributes;",
      "right" : "return attributes;",
      "info" : "ReturnStatement[2755-2773]:ReturnStatement[2755-2773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3079-3161]:Block[3079-3161]"
    }, {
      "left" : "attributes.put(attributeKey, attributeValue);",
      "right" : "attributes.put(attributeKey, attributeValue);",
      "info" : "ExpressionStatement[3089-3134]:ExpressionStatement[3089-3134]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3143-3155]:ReturnStatement[3143-3155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3387-3702]:Block[3387-3702]"
    }, {
      "left" : "Validate.notNull(attributeKey);",
      "right" : "Validate.notNull(attributeKey);",
      "info" : "ExpressionStatement[3397-3428]:ExpressionStatement[3397-3428]"
    }, {
      "left" : "if (attributeKey.startsWith(\"abs:\"))",
      "right" : "if (attributeKey.startsWith(\"abs:\"))",
      "info" : "IfStatement[3438-3648]:IfStatement[3438-3648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3475-3648]:Block[3475-3648]"
    }, {
      "left" : "String key = attributeKey.substring(\"abs:\".length());",
      "right" : "String key = attributeKey.substring(\"abs:\".length());",
      "info" : "VariableDeclarationStatement[3489-3542]:VariableDeclarationStatement[3489-3542]"
    }, {
      "left" : "if (attributes.hasKey(key) && !absUrl(key).equals(\"\"))",
      "right" : "if (attributes.hasKey(key) && !absUrl(key).equals(\"\"))",
      "info" : "IfStatement[3555-3638]:IfStatement[3555-3638]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3626-3638]:ReturnStatement[3626-3638]"
    }, {
      "left" : "return attributes.hasKey(attributeKey);",
      "right" : "return attributes.hasKey(attributeKey);",
      "info" : "ReturnStatement[3657-3696]:ReturnStatement[3657-3696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3901-4010]:Block[3901-4010]"
    }, {
      "left" : "Validate.notNull(attributeKey);",
      "right" : "Validate.notNull(attributeKey);",
      "info" : "ExpressionStatement[3911-3942]:ExpressionStatement[3911-3942]"
    }, {
      "left" : "attributes.remove(attributeKey);",
      "right" : "attributes.remove(attributeKey);",
      "info" : "ExpressionStatement[3951-3983]:ExpressionStatement[3951-3983]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3992-4004]:ReturnStatement[3992-4004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4114-4145]:Block[4114-4145]"
    }, {
      "left" : "return baseUri;",
      "right" : "return baseUri;",
      "info" : "ReturnStatement[4124-4139]:ReturnStatement[4124-4139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4314-4581]:Block[4314-4581]"
    }, {
      "left" : "Validate.notNull(baseUri);",
      "right" : "Validate.notNull(baseUri);",
      "info" : "ExpressionStatement[4324-4350]:ExpressionStatement[4324-4350]"
    }, {
      "left" : "traverse(new NodeVisitor() {\n            public void head(Node node, int depth) {\n                node.baseUri = baseUri;\n            }\n\n            public void tail(Node node, int depth) {\n            }\n        });",
      "right" : "traverse(new NodeVisitor() {\n            public void head(Node node, int depth) {\n                node.baseUri = baseUri;\n            }\n\n            public void tail(Node node, int depth) {\n            }\n        });",
      "info" : "ExpressionStatement[4360-4575]:ExpressionStatement[4360-4575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4440-4495]:Block[4440-4495]"
    }, {
      "left" : "node.baseUri = baseUri;",
      "right" : "node.baseUri = baseUri;",
      "info" : "ExpressionStatement[4458-4481]:ExpressionStatement[4458-4481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4548-4563]:Block[4548-4563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5718-5956]:Block[5718-5956]"
    }, {
      "left" : "Validate.notEmpty(attributeKey);",
      "right" : "Validate.notEmpty(attributeKey);",
      "info" : "ExpressionStatement[5728-5760]:ExpressionStatement[5728-5760]"
    }, {
      "left" : "if (!hasAttr(attributeKey))",
      "right" : "if (!hasAttr(attributeKey))",
      "info" : "IfStatement[5770-5950]:IfStatement[5770-5950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5798-5865]:Block[5798-5865]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[5812-5822]:ReturnStatement[5812-5822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5871-5950]:Block[5871-5950]"
    }, {
      "left" : "return StringUtil.resolve(baseUri, attr(attributeKey));",
      "right" : "return StringUtil.resolve(baseUri, attr(attributeKey));",
      "info" : "ReturnStatement[5885-5940]:ReturnStatement[5885-5940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6210-6255]:Block[6210-6255]"
    }, {
      "left" : "return childNodes.get(index);",
      "right" : "return childNodes.get(index);",
      "info" : "ReturnStatement[6220-6249]:ReturnStatement[6220-6249]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6531-6595]:Block[6531-6595]"
    }, {
      "left" : "return Collections.unmodifiableList(childNodes);",
      "right" : "return Collections.unmodifiableList(childNodes);",
      "info" : "ReturnStatement[6541-6589]:ReturnStatement[6541-6589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6834-7025]:Block[6834-7025]"
    }, {
      "left" : "List<Node> children = new ArrayList<Node>(childNodes.size());",
      "right" : "List<Node> children = new ArrayList<Node>(childNodes.size());",
      "info" : "VariableDeclarationStatement[6844-6905]:VariableDeclarationStatement[6844-6905]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[6914-6994]:EnhancedForStatement[6914-6994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6943-6994]:Block[6943-6994]"
    }, {
      "left" : "children.add(node.clone());",
      "right" : "children.add(node.clone());",
      "info" : "ExpressionStatement[6957-6984]:ExpressionStatement[6957-6984]"
    }, {
      "left" : "return children;",
      "right" : "return children;",
      "info" : "ReturnStatement[7003-7019]:ReturnStatement[7003-7019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7202-7243]:Block[7202-7243]"
    }, {
      "left" : "return childNodes.size();",
      "right" : "return childNodes.size();",
      "info" : "ReturnStatement[7212-7237]:ReturnStatement[7212-7237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7290-7359]:Block[7290-7359]"
    }, {
      "left" : "return childNodes.toArray(new Node[childNodeSize()]);",
      "right" : "return childNodes.toArray(new Node[childNodeSize()]);",
      "info" : "ReturnStatement[7300-7353]:ReturnStatement[7300-7353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7485-7519]:Block[7485-7519]"
    }, {
      "left" : "return parentNode;",
      "right" : "return parentNode;",
      "info" : "ReturnStatement[7495-7513]:ReturnStatement[7495-7513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7743-7777]:Block[7743-7777]"
    }, {
      "left" : "return parentNode;",
      "right" : "return parentNode;",
      "info" : "ReturnStatement[7753-7771]:ReturnStatement[7753-7771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7981-8184]:Block[7981-8184]"
    }, {
      "left" : "if (this instanceof Document)",
      "right" : "if (this instanceof Document)",
      "info" : "IfStatement[7991-8178]:IfStatement[7991-8178]"
    }, {
      "left" : "return (Document) this;",
      "right" : "return (Document) this;",
      "info" : "ReturnStatement[8033-8056]:ReturnStatement[8033-8056]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[8070-8178]:IfStatement[8070-8178]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8106-8118]:ReturnStatement[8106-8118]"
    }, {
      "left" : "return parentNode.ownerDocument();",
      "right" : "return parentNode.ownerDocument();",
      "info" : "ReturnStatement[8144-8178]:ReturnStatement[8144-8178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8333-8416]:Block[8333-8416]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[8343-8372]:ExpressionStatement[8343-8372]"
    }, {
      "left" : "parentNode.removeChild(this);",
      "right" : "parentNode.removeChild(this);",
      "info" : "ExpressionStatement[8381-8410]:ExpressionStatement[8381-8410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8678-8750]:Block[8678-8750]"
    }, {
      "left" : "addSiblingHtml(siblingIndex, html);",
      "right" : "addSiblingHtml(siblingIndex, html);",
      "info" : "ExpressionStatement[8688-8723]:ExpressionStatement[8688-8723]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[8732-8744]:ReturnStatement[8732-8744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9003-9154]:Block[9003-9154]"
    }, {
      "left" : "Validate.notNull(node);",
      "right" : "Validate.notNull(node);",
      "info" : "ExpressionStatement[9013-9036]:ExpressionStatement[9013-9036]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[9045-9074]:ExpressionStatement[9045-9074]"
    }, {
      "left" : "parentNode.addChildren(siblingIndex, node);",
      "right" : "parentNode.addChildren(siblingIndex, node);",
      "info" : "ExpressionStatement[9084-9127]:ExpressionStatement[9084-9127]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9136-9148]:ReturnStatement[9136-9148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9414-9490]:Block[9414-9490]"
    }, {
      "left" : "addSiblingHtml(siblingIndex + 1, html);",
      "right" : "addSiblingHtml(siblingIndex + 1, html);",
      "info" : "ExpressionStatement[9424-9463]:ExpressionStatement[9424-9463]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9472-9484]:ReturnStatement[9472-9484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9741-9896]:Block[9741-9896]"
    }, {
      "left" : "Validate.notNull(node);",
      "right" : "Validate.notNull(node);",
      "info" : "ExpressionStatement[9751-9774]:ExpressionStatement[9751-9774]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[9783-9812]:ExpressionStatement[9783-9812]"
    }, {
      "left" : "parentNode.addChildren(siblingIndex + 1, node);",
      "right" : "parentNode.addChildren(siblingIndex + 1, node);",
      "info" : "ExpressionStatement[9822-9869]:ExpressionStatement[9822-9869]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9878-9890]:ReturnStatement[9878-9890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9954-10276]:Block[9954-10276]"
    }, {
      "left" : "Validate.notNull(html);",
      "right" : "Validate.notNull(html);",
      "info" : "ExpressionStatement[9964-9987]:ExpressionStatement[9964-9987]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[9996-10025]:ExpressionStatement[9996-10025]"
    }, {
      "left" : "Element context = parent() instanceof Element ? (Element) parent() : null;",
      "right" : "Element context = parent() instanceof Element ? (Element) parent() : null;",
      "info" : "VariableDeclarationStatement[10035-10109]:VariableDeclarationStatement[10035-10109]"
    }, {
      "left" : "List<Node> nodes = Parser.parseFragment(html, context, baseUri());",
      "right" : "List<Node> nodes = Parser.parseFragment(html, context, baseUri());",
      "info" : "VariableDeclarationStatement[10126-10192]:VariableDeclarationStatement[10126-10192]"
    }, {
      "left" : "parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));",
      "right" : "parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));",
      "info" : "ExpressionStatement[10201-10270]:ExpressionStatement[10201-10270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10527-11459]:Block[10527-11459]"
    }, {
      "left" : "Validate.notEmpty(html);",
      "right" : "Validate.notEmpty(html);",
      "info" : "ExpressionStatement[10537-10561]:ExpressionStatement[10537-10561]"
    }, {
      "left" : "Element context = parent() instanceof Element ? (Element) parent() : null;",
      "right" : "Element context = parent() instanceof Element ? (Element) parent() : null;",
      "info" : "VariableDeclarationStatement[10571-10645]:VariableDeclarationStatement[10571-10645]"
    }, {
      "left" : "List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());",
      "right" : "List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());",
      "info" : "VariableDeclarationStatement[10654-10727]:VariableDeclarationStatement[10654-10727]"
    }, {
      "left" : "Node wrapNode = wrapChildren.get(0);",
      "right" : "Node wrapNode = wrapChildren.get(0);",
      "info" : "VariableDeclarationStatement[10736-10772]:VariableDeclarationStatement[10736-10772]"
    }, {
      "left" : "if (wrapNode == null || !(wrapNode instanceof Element))",
      "right" : "if (wrapNode == null || !(wrapNode instanceof Element))",
      "info" : "IfStatement[10781-10891]:IfStatement[10781-10891]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10879-10891]:ReturnStatement[10879-10891]"
    }, {
      "left" : "Element wrap = (Element) wrapNode;",
      "right" : "Element wrap = (Element) wrapNode;",
      "info" : "VariableDeclarationStatement[10901-10935]:VariableDeclarationStatement[10901-10935]"
    }, {
      "left" : "Element deepest = getDeepChild(wrap);",
      "right" : "Element deepest = getDeepChild(wrap);",
      "info" : "VariableDeclarationStatement[10944-10981]:VariableDeclarationStatement[10944-10981]"
    }, {
      "left" : "parentNode.replaceChild(this, wrap);",
      "right" : "parentNode.replaceChild(this, wrap);",
      "info" : "ExpressionStatement[10990-11026]:ExpressionStatement[10990-11026]"
    }, {
      "left" : "deepest.addChildren(this);",
      "right" : "deepest.addChildren(this);",
      "info" : "ExpressionStatement[11035-11061]:ExpressionStatement[11035-11061]"
    }, {
      "left" : "if (wrapChildren.size() > 0)",
      "right" : "if (wrapChildren.size() > 0)",
      "info" : "IfStatement[11158-11432]:IfStatement[11158-11432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11187-11432]:Block[11187-11432]"
    }, {
      "left" : "for (int i = 0; i < wrapChildren.size(); i++)",
      "right" : "for (int i = 0; i < wrapChildren.size(); i++)",
      "info" : "ForStatement[11201-11422]:ForStatement[11201-11422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11247-11422]:Block[11247-11422]"
    }, {
      "left" : "Node remainder = wrapChildren.get(i);",
      "right" : "Node remainder = wrapChildren.get(i);",
      "info" : "VariableDeclarationStatement[11265-11302]:VariableDeclarationStatement[11265-11302]"
    }, {
      "left" : "remainder.parentNode.removeChild(remainder);",
      "right" : "remainder.parentNode.removeChild(remainder);",
      "info" : "ExpressionStatement[11319-11363]:ExpressionStatement[11319-11363]"
    }, {
      "left" : "wrap.appendChild(remainder);",
      "right" : "wrap.appendChild(remainder);",
      "info" : "ExpressionStatement[11380-11408]:ExpressionStatement[11380-11408]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[11441-11453]:ReturnStatement[11441-11453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12176-12421]:Block[12176-12421]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[12186-12215]:ExpressionStatement[12186-12215]"
    }, {
      "left" : "Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;",
      "right" : "Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;",
      "info" : "VariableDeclarationStatement[12225-12292]:VariableDeclarationStatement[12225-12292]"
    }, {
      "left" : "parentNode.addChildren(siblingIndex, this.childNodesAsArray());",
      "right" : "parentNode.addChildren(siblingIndex, this.childNodesAsArray());",
      "info" : "ExpressionStatement[12301-12364]:ExpressionStatement[12301-12364]"
    }, {
      "left" : "this.remove();",
      "right" : "this.remove();",
      "info" : "ExpressionStatement[12373-12387]:ExpressionStatement[12373-12387]"
    }, {
      "left" : "return firstChild;",
      "right" : "return firstChild;",
      "info" : "ReturnStatement[12397-12415]:ReturnStatement[12397-12415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12468-12642]:Block[12468-12642]"
    }, {
      "left" : "List<Element> children = el.children();",
      "right" : "List<Element> children = el.children();",
      "info" : "VariableDeclarationStatement[12478-12517]:VariableDeclarationStatement[12478-12517]"
    }, {
      "left" : "if (children.size() > 0)",
      "right" : "if (children.size() > 0)",
      "info" : "IfStatement[12526-12636]:IfStatement[12526-12636]"
    }, {
      "left" : "return getDeepChild(children.get(0));",
      "right" : "return getDeepChild(children.get(0));",
      "info" : "ReturnStatement[12563-12600]:ReturnStatement[12563-12600]"
    }, {
      "left" : "return el;",
      "right" : "return el;",
      "info" : "ReturnStatement[12626-12636]:ReturnStatement[12626-12636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12829-12947]:Block[12829-12947]"
    }, {
      "left" : "Validate.notNull(in);",
      "right" : "Validate.notNull(in);",
      "info" : "ExpressionStatement[12839-12860]:ExpressionStatement[12839-12860]"
    }, {
      "left" : "Validate.notNull(parentNode);",
      "right" : "Validate.notNull(parentNode);",
      "info" : "ExpressionStatement[12869-12898]:ExpressionStatement[12869-12898]"
    }, {
      "left" : "parentNode.replaceChild(this, in);",
      "right" : "parentNode.replaceChild(this, in);",
      "info" : "ExpressionStatement[12907-12941]:ExpressionStatement[12907-12941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12999-13128]:Block[12999-13128]"
    }, {
      "left" : "if (this.parentNode != null)",
      "right" : "if (this.parentNode != null)",
      "info" : "IfStatement[13009-13084]:IfStatement[13009-13084]"
    }, {
      "left" : "this.parentNode.removeChild(this);",
      "right" : "this.parentNode.removeChild(this);",
      "info" : "ExpressionStatement[13050-13084]:ExpressionStatement[13050-13084]"
    }, {
      "left" : "this.parentNode = parentNode;",
      "right" : "this.parentNode = parentNode;",
      "info" : "ExpressionStatement[13093-13122]:ExpressionStatement[13093-13122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13181-13529]:Block[13181-13529]"
    }, {
      "left" : "Validate.isTrue(out.parentNode == this);",
      "right" : "Validate.isTrue(out.parentNode == this);",
      "info" : "ExpressionStatement[13191-13231]:ExpressionStatement[13191-13231]"
    }, {
      "left" : "Validate.notNull(in);",
      "right" : "Validate.notNull(in);",
      "info" : "ExpressionStatement[13240-13261]:ExpressionStatement[13240-13261]"
    }, {
      "left" : "if (in.parentNode != null)",
      "right" : "if (in.parentNode != null)",
      "info" : "IfStatement[13270-13339]:IfStatement[13270-13339]"
    }, {
      "left" : "in.parentNode.removeChild(in);",
      "right" : "in.parentNode.removeChild(in);",
      "info" : "ExpressionStatement[13309-13339]:ExpressionStatement[13309-13339]"
    }, {
      "left" : "final int index = out.siblingIndex;",
      "right" : "final int index = out.siblingIndex;",
      "info" : "VariableDeclarationStatement[13357-13392]:VariableDeclarationStatement[13357-13392]"
    }, {
      "left" : "childNodes.set(index, in);",
      "right" : "childNodes.set(index, in);",
      "info" : "ExpressionStatement[13401-13427]:ExpressionStatement[13401-13427]"
    }, {
      "left" : "in.parentNode = this;",
      "right" : "in.parentNode = this;",
      "info" : "ExpressionStatement[13436-13457]:ExpressionStatement[13436-13457]"
    }, {
      "left" : "in.setSiblingIndex(index);",
      "right" : "in.setSiblingIndex(index);",
      "info" : "ExpressionStatement[13466-13492]:ExpressionStatement[13466-13492]"
    }, {
      "left" : "out.parentNode = null;",
      "right" : "out.parentNode = null;",
      "info" : "ExpressionStatement[13501-13523]:ExpressionStatement[13501-13523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13572-13769]:Block[13572-13769]"
    }, {
      "left" : "Validate.isTrue(out.parentNode == this);",
      "right" : "Validate.isTrue(out.parentNode == this);",
      "info" : "ExpressionStatement[13582-13622]:ExpressionStatement[13582-13622]"
    }, {
      "left" : "final int index = out.siblingIndex;",
      "right" : "final int index = out.siblingIndex;",
      "info" : "VariableDeclarationStatement[13631-13666]:VariableDeclarationStatement[13631-13666]"
    }, {
      "left" : "childNodes.remove(index);",
      "right" : "childNodes.remove(index);",
      "info" : "ExpressionStatement[13675-13700]:ExpressionStatement[13675-13700]"
    }, {
      "left" : "reindexChildren(index);",
      "right" : "reindexChildren(index);",
      "info" : "ExpressionStatement[13709-13732]:ExpressionStatement[13709-13732]"
    }, {
      "left" : "out.parentNode = null;",
      "right" : "out.parentNode = null;",
      "info" : "ExpressionStatement[13741-13763]:ExpressionStatement[13741-13763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13820-14127]:Block[13820-14127]"
    }, {
      "left" : "for (Node child: children)",
      "right" : "for (Node child: children)",
      "info" : "EnhancedForStatement[13926-14121]:EnhancedForStatement[13926-14121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13953-14121]:Block[13953-14121]"
    }, {
      "left" : "reparentChild(child);",
      "right" : "reparentChild(child);",
      "info" : "ExpressionStatement[13967-13988]:ExpressionStatement[13967-13988]"
    }, {
      "left" : "ensureChildNodes();",
      "right" : "ensureChildNodes();",
      "info" : "ExpressionStatement[14001-14020]:ExpressionStatement[14001-14020]"
    }, {
      "left" : "childNodes.add(child);",
      "right" : "childNodes.add(child);",
      "info" : "ExpressionStatement[14033-14055]:ExpressionStatement[14033-14055]"
    }, {
      "left" : "child.setSiblingIndex(childNodes.size()-1);",
      "right" : "child.setSiblingIndex(childNodes.size()-1);",
      "info" : "ExpressionStatement[14068-14111]:ExpressionStatement[14068-14111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14511-14618]:Block[14515-14622]"
    }, {
      "left" : "if (childNodes == EMPTY_NODES)",
      "right" : "if (childNodes == EMPTY_NODES)",
      "info" : "IfStatement[14521-14612]:IfStatement[14525-14616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14552-14612]:Block[14556-14616]"
    }, {
      "left" : "childNodes = new ArrayList<Node>(4);",
      "right" : "childNodes = new ArrayList<Node>(4);",
      "info" : "ExpressionStatement[14566-14602]:ExpressionStatement[14570-14606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14665-14794]:Block[14669-14798]"
    }, {
      "left" : "if (child.parentNode != null)",
      "right" : "if (child.parentNode != null)",
      "info" : "IfStatement[14675-14753]:IfStatement[14679-14757]"
    }, {
      "left" : "child.parentNode.removeChild(child);",
      "right" : "child.parentNode.removeChild(child);",
      "info" : "ExpressionStatement[14717-14753]:ExpressionStatement[14721-14757]"
    }, {
      "left" : "child.setParentNode(this);",
      "right" : "child.setParentNode(this);",
      "info" : "ExpressionStatement[14762-14788]:ExpressionStatement[14766-14792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14844-14969]:Block[14848-14973]"
    }, {
      "left" : "for (int i = start; i < childNodes.size(); i++)",
      "right" : "for (int i = start; i < childNodes.size(); i++)",
      "info" : "ForStatement[14854-14963]:ForStatement[14858-14967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14902-14963]:Block[14906-14967]"
    }, {
      "left" : "childNodes.get(i).setSiblingIndex(i);",
      "right" : "childNodes.get(i).setSiblingIndex(i);",
      "info" : "ExpressionStatement[14916-14953]:ExpressionStatement[14920-14957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15281-15606]:Block[15285-15610]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[15291-15358]:IfStatement[15295-15362]"
    }, {
      "left" : "return Collections.emptyList();",
      "right" : "return Collections.emptyList();",
      "info" : "ReturnStatement[15327-15358]:ReturnStatement[15331-15362]"
    }, {
      "left" : "List<Node> nodes = parentNode.childNodes;",
      "right" : "List<Node> nodes = parentNode.childNodes;",
      "info" : "VariableDeclarationStatement[15368-15409]:VariableDeclarationStatement[15372-15413]"
    }, {
      "left" : "List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);",
      "right" : "List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);",
      "info" : "VariableDeclarationStatement[15418-15478]:VariableDeclarationStatement[15422-15482]"
    }, {
      "left" : "for (Node node: nodes)\n            if (node != this)\n                siblings.add(node);",
      "right" : "for (Node node: nodes)\n            if (node != this)\n                siblings.add(node);",
      "info" : "EnhancedForStatement[15487-15575]:EnhancedForStatement[15491-15579]"
    }, {
      "left" : "if (node != this)",
      "right" : "if (node != this)",
      "info" : "IfStatement[15522-15575]:IfStatement[15526-15579]"
    }, {
      "left" : "siblings.add(node);",
      "right" : "siblings.add(node);",
      "info" : "ExpressionStatement[15556-15575]:ExpressionStatement[15560-15579]"
    }, {
      "left" : "return siblings;",
      "right" : "return siblings;",
      "info" : "ReturnStatement[15584-15600]:ReturnStatement[15588-15604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15752-16049]:Block[15756-16053]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[15762-15810]:IfStatement[15766-15814]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[15798-15810]:ReturnStatement[15802-15814]"
    }, {
      "left" : "final List<Node> siblings = parentNode.childNodes;",
      "right" : "final List<Node> siblings = parentNode.childNodes;",
      "info" : "VariableDeclarationStatement[15836-15886]:VariableDeclarationStatement[15840-15890]"
    }, {
      "left" : "final int index = siblingIndex+1;",
      "right" : "final int index = siblingIndex+1;",
      "info" : "VariableDeclarationStatement[15895-15928]:VariableDeclarationStatement[15899-15932]"
    }, {
      "left" : "if (siblings.size() > index)",
      "right" : "if (siblings.size() > index)",
      "info" : "IfStatement[15937-16043]:IfStatement[15941-16047]"
    }, {
      "left" : "return siblings.get(index);",
      "right" : "return siblings.get(index);",
      "info" : "ReturnStatement[15978-16005]:ReturnStatement[15982-16009]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16031-16043]:ReturnStatement[16035-16047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16212-16415]:Block[16216-16419]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[16222-16270]:IfStatement[16226-16274]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16258-16270]:ReturnStatement[16262-16274]"
    }, {
      "left" : "if (siblingIndex > 0)",
      "right" : "if (siblingIndex > 0)",
      "info" : "IfStatement[16288-16409]:IfStatement[16292-16413]"
    }, {
      "left" : "return parentNode.childNodes.get(siblingIndex-1);",
      "right" : "return parentNode.childNodes.get(siblingIndex-1);",
      "info" : "ReturnStatement[16322-16371]:ReturnStatement[16326-16375]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16397-16409]:ReturnStatement[16401-16413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16689-16725]:Block[16693-16729]"
    }, {
      "left" : "return siblingIndex;",
      "right" : "return siblingIndex;",
      "info" : "ReturnStatement[16699-16719]:ReturnStatement[16703-16723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16784-16833]:Block[16788-16837]"
    }, {
      "left" : "this.siblingIndex = siblingIndex;",
      "right" : "this.siblingIndex = siblingIndex;",
      "info" : "ExpressionStatement[16794-16827]:ExpressionStatement[16798-16831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17090-17257]:Block[17094-17261]"
    }, {
      "left" : "Validate.notNull(nodeVisitor);",
      "right" : "Validate.notNull(nodeVisitor);",
      "info" : "ExpressionStatement[17100-17130]:ExpressionStatement[17104-17134]"
    }, {
      "left" : "NodeTraversor traversor = new NodeTraversor(nodeVisitor);",
      "right" : "NodeTraversor traversor = new NodeTraversor(nodeVisitor);",
      "info" : "VariableDeclarationStatement[17139-17196]:VariableDeclarationStatement[17143-17200]"
    }, {
      "left" : "traversor.traverse(this);",
      "right" : "traversor.traverse(this);",
      "info" : "ExpressionStatement[17205-17230]:ExpressionStatement[17209-17234]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17239-17251]:ReturnStatement[17243-17255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17361-17481]:Block[17365-17485]"
    }, {
      "left" : "StringBuilder accum = new StringBuilder(128);",
      "right" : "StringBuilder accum = new StringBuilder(128);",
      "info" : "VariableDeclarationStatement[17371-17416]:VariableDeclarationStatement[17375-17420]"
    }, {
      "left" : "outerHtml(accum);",
      "right" : "outerHtml(accum);",
      "info" : "ExpressionStatement[17425-17442]:ExpressionStatement[17429-17446]"
    }, {
      "left" : "return accum.toString();",
      "right" : "return accum.toString();",
      "info" : "ReturnStatement[17451-17475]:ReturnStatement[17455-17479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17533-17632]:Block[17537-17636]"
    }, {
      "left" : "new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(this);",
      "right" : "new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(this);",
      "info" : "ExpressionStatement[17543-17626]:ExpressionStatement[17547-17630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17768-17888]:Block[17772-17892]"
    }, {
      "left" : "return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(\"\")).outputSettings();",
      "right" : "return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(\"\")).outputSettings();",
      "info" : "ReturnStatement[17778-17882]:ReturnStatement[17782-17886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18226-18261]:Block[18230-18265]"
    }, {
      "left" : "return outerHtml();",
      "right" : "return outerHtml();",
      "info" : "ReturnStatement[18236-18255]:ReturnStatement[18240-18259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18350-18440]:Block[18354-18444]"
    }, {
      "left" : "accum.append(\"\\n\").append(StringUtil.padding(depth * out.indentAmount()));",
      "right" : "accum.append(\"\\n\").append(StringUtil.padding(depth * out.indentAmount()));",
      "info" : "ExpressionStatement[18360-18434]:ExpressionStatement[18364-18438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18833-19187]:Block[18837-19191]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[18843-18870]:IfStatement[18847-18874]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[18858-18870]:ReturnStatement[18862-18874]"
    }, {
      "left" : "if (o == null || getClass() != o.getClass())",
      "right" : "if (o == null || getClass() != o.getClass())",
      "info" : "IfStatement[18879-18937]:IfStatement[18883-18941]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[18924-18937]:ReturnStatement[18928-18941]"
    }, {
      "left" : "Node node = (Node) o;",
      "right" : "Node node = (Node) o;",
      "info" : "VariableDeclarationStatement[18947-18968]:VariableDeclarationStatement[18951-18972]"
    }, {
      "left" : "if (childNodes != null ? !childNodes.equals(node.childNodes) : node.childNodes != null)",
      "right" : "if (childNodes != null ? !childNodes.equals(node.childNodes) : node.childNodes != null)",
      "info" : "IfStatement[18978-19079]:IfStatement[18982-19083]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[19066-19079]:ReturnStatement[19070-19083]"
    }, {
      "left" : "return !(attributes != null ? !attributes.equals(node.attributes) : node.attributes != null);",
      "right" : "return !(attributes != null ? !attributes.equals(node.attributes) : node.attributes != null);",
      "info" : "ReturnStatement[19088-19181]:ReturnStatement[19092-19185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19676-19856]:Block[19680-19860]"
    }, {
      "left" : "int result = childNodes != null ? childNodes.hashCode() : 0;",
      "right" : "int result = childNodes != null ? childNodes.hashCode() : 0;",
      "info" : "VariableDeclarationStatement[19686-19746]:VariableDeclarationStatement[19690-19750]"
    }, {
      "left" : "result = 31 * result + (attributes != null ? attributes.hashCode() : 0);",
      "right" : "result = 31 * result + (attributes != null ? attributes.hashCode() : 0);",
      "info" : "ExpressionStatement[19755-19827]:ExpressionStatement[19759-19831]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[19836-19850]:ReturnStatement[19840-19854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20340-20990]:Block[20344-20994]"
    }, {
      "left" : "Node thisClone = doClone(null);",
      "right" : "Node thisClone = doClone(null);",
      "info" : "VariableDeclarationStatement[20350-20381]:VariableDeclarationStatement[20354-20385]"
    }, {
      "left" : "LinkedList<Node> nodesToProcess = new LinkedList<Node>();",
      "right" : "LinkedList<Node> nodesToProcess = new LinkedList<Node>();",
      "info" : "VariableDeclarationStatement[20477-20534]:VariableDeclarationStatement[20481-20538]"
    }, {
      "left" : "nodesToProcess.add(thisClone);",
      "right" : "nodesToProcess.add(thisClone);",
      "info" : "ExpressionStatement[20543-20573]:ExpressionStatement[20547-20577]"
    }, {
      "left" : "while (!nodesToProcess.isEmpty())",
      "right" : "while (!nodesToProcess.isEmpty())",
      "info" : "WhileStatement[20583-20957]:WhileStatement[20587-20961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20617-20957]:Block[20621-20961]"
    }, {
      "left" : "Node currParent = nodesToProcess.remove();",
      "right" : "Node currParent = nodesToProcess.remove();",
      "info" : "VariableDeclarationStatement[20631-20673]:VariableDeclarationStatement[20635-20677]"
    }, {
      "left" : "for (int i = 0; i < currParent.childNodes.size(); i++)",
      "right" : "for (int i = 0; i < currParent.childNodes.size(); i++)",
      "info" : "ForStatement[20687-20947]:ForStatement[20691-20951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20742-20947]:Block[20746-20951]"
    }, {
      "left" : "Node childClone = currParent.childNodes.get(i).doClone(currParent);",
      "right" : "Node childClone = currParent.childNodes.get(i).doClone(currParent);",
      "info" : "VariableDeclarationStatement[20760-20827]:VariableDeclarationStatement[20764-20831]"
    }, {
      "left" : "currParent.childNodes.set(i, childClone);",
      "right" : "currParent.childNodes.set(i, childClone);",
      "info" : "ExpressionStatement[20844-20885]:ExpressionStatement[20848-20889]"
    }, {
      "left" : "nodesToProcess.add(childClone);",
      "right" : "nodesToProcess.add(childClone);",
      "info" : "ExpressionStatement[20902-20933]:ExpressionStatement[20906-20937]"
    }, {
      "left" : "return thisClone;",
      "right" : "return thisClone;",
      "info" : "ReturnStatement[20967-20984]:ReturnStatement[20971-20988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21161-21766]:Block[21165-21770]"
    }, {
      "left" : "Node clone;",
      "right" : "Node clone;",
      "info" : "VariableDeclarationStatement[21171-21182]:VariableDeclarationStatement[21175-21186]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[21192-21341]:TryStatement[21196-21345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21196-21249]:Block[21200-21253]"
    }, {
      "left" : "clone = (Node) super.clone();",
      "right" : "clone = (Node) super.clone();",
      "info" : "ExpressionStatement[21210-21239]:ExpressionStatement[21214-21243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21287-21341]:Block[21291-21345]"
    }, {
      "left" : "throw new RuntimeException(e);",
      "right" : "throw new RuntimeException(e);",
      "info" : "ThrowStatement[21301-21331]:ThrowStatement[21305-21335]"
    }, {
      "left" : "clone.parentNode = parent;",
      "right" : "clone.parentNode = parent;",
      "info" : "ExpressionStatement[21351-21377]:ExpressionStatement[21355-21381]"
    }, {
      "left" : "clone.siblingIndex = parent == null ? 0 : siblingIndex;",
      "right" : "clone.siblingIndex = parent == null ? 0 : siblingIndex;",
      "info" : "ExpressionStatement[21428-21483]:ExpressionStatement[21432-21487]"
    }, {
      "left" : "clone.attributes = attributes != null ? attributes.clone() : null;",
      "right" : "clone.attributes = attributes != null ? attributes.clone() : null;",
      "info" : "ExpressionStatement[21492-21558]:ExpressionStatement[21496-21562]"
    }, {
      "left" : "clone.baseUri = baseUri;",
      "right" : "clone.baseUri = baseUri;",
      "info" : "ExpressionStatement[21567-21591]:ExpressionStatement[21571-21595]"
    }, {
      "left" : "clone.childNodes = new ArrayList<Node>(childNodes.size());",
      "right" : "clone.childNodes = new ArrayList<Node>(childNodes.size());",
      "info" : "ExpressionStatement[21600-21658]:ExpressionStatement[21604-21662]"
    }, {
      "left" : "for (Node child: childNodes)\n            clone.childNodes.add(child);",
      "right" : "for (Node child: childNodes)\n            clone.childNodes.add(child);",
      "info" : "EnhancedForStatement[21668-21737]:EnhancedForStatement[21672-21741]"
    }, {
      "left" : "clone.childNodes.add(child);",
      "right" : "clone.childNodes.add(child);",
      "info" : "ExpressionStatement[21709-21737]:ExpressionStatement[21713-21741]"
    }, {
      "left" : "return clone;",
      "right" : "return clone;",
      "info" : "ReturnStatement[21747-21760]:ReturnStatement[21751-21764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21993-22064]:Block[21997-22068]"
    }, {
      "left" : "this.accum = accum;",
      "right" : "this.accum = accum;",
      "info" : "ExpressionStatement[22007-22026]:ExpressionStatement[22011-22030]"
    }, {
      "left" : "this.out = out;",
      "right" : "this.out = out;",
      "info" : "ExpressionStatement[22039-22054]:ExpressionStatement[22043-22058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22113-22175]:Block[22117-22179]"
    }, {
      "left" : "node.outerHtmlHead(accum, depth, out);",
      "right" : "node.outerHtmlHead(accum, depth, out);",
      "info" : "ExpressionStatement[22127-22165]:ExpressionStatement[22131-22169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22224-22361]:Block[22228-22365]"
    }, {
      "left" : "if (!node.nodeName().equals(\"#text\"))",
      "right" : "if (!node.nodeName().equals(\"#text\"))",
      "info" : "IfStatement[22238-22351]:IfStatement[22242-22355]"
    }, {
      "left" : "node.outerHtmlTail(accum, depth, out);",
      "right" : "node.outerHtmlTail(accum, depth, out);",
      "info" : "ExpressionStatement[22313-22351]:ExpressionStatement[22317-22355]"
    } ]
  },
  "interFileMappings" : { }
}