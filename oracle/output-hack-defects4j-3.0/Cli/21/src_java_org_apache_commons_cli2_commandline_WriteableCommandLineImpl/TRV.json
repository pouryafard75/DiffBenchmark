{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final Map optionToProperties = new HashMap();",
      "right" : "private final Map optionToProperties = new HashMap();",
      "info" : "FieldDeclaration[1587-1640]:FieldDeclaration[1587-1640]"
    }, {
      "left" : "private final List options = new ArrayList();",
      "right" : "private final List options = new ArrayList();",
      "info" : "FieldDeclaration[1707-1752]:FieldDeclaration[1707-1752]"
    }, {
      "left" : "private final Map nameToOption = new HashMap();",
      "right" : "private final Map nameToOption = new HashMap();",
      "info" : "FieldDeclaration[1757-1804]:FieldDeclaration[1757-1804]"
    }, {
      "left" : "private final Map values = new HashMap();",
      "right" : "private final Map values = new HashMap();",
      "info" : "FieldDeclaration[1809-1850]:FieldDeclaration[1809-1850]"
    }, {
      "left" : "private final Map switches = new HashMap();",
      "right" : "private final Map switches = new HashMap();",
      "info" : "FieldDeclaration[1855-1898]:FieldDeclaration[1855-1898]"
    }, {
      "left" : "private final Map defaultValues = new HashMap();",
      "right" : "private final Map defaultValues = new HashMap();",
      "info" : "FieldDeclaration[1903-1951]:FieldDeclaration[1903-1951]"
    }, {
      "left" : "private final Map defaultSwitches = new HashMap();",
      "right" : "private final Map defaultSwitches = new HashMap();",
      "info" : "FieldDeclaration[1956-2006]:FieldDeclaration[1956-2006]"
    }, {
      "left" : "private final List normalised;",
      "right" : "private final List normalised;",
      "info" : "FieldDeclaration[2011-2041]:FieldDeclaration[2011-2041]"
    }, {
      "left" : "private final Set prefixes;",
      "right" : "private final Set prefixes;",
      "info" : "FieldDeclaration[2046-2073]:FieldDeclaration[2046-2073]"
    }, {
      "left" : "public void addOption(Option option)",
      "right" : "public void addOption(Option option)",
      "info" : "MethodDeclaration[2555-3071]:MethodDeclaration[2844-3360]"
    }, {
      "left" : "public void addValue(final Option option,\n                         final Object value)",
      "right" : "public void addValue(final Option option,\n                         final Object value)",
      "info" : "MethodDeclaration[3077-3466]:MethodDeclaration[3366-3755]"
    }, {
      "left" : "public void addSwitch(final Option option,\n                          final boolean value)",
      "right" : "public void addSwitch(final Option option,\n                          final boolean value)",
      "info" : "MethodDeclaration[3472-3870]:MethodDeclaration[3761-4159]"
    }, {
      "left" : "public boolean hasOption(final Option option)",
      "right" : "public boolean hasOption(final Option option)",
      "info" : "MethodDeclaration[3876-4012]:MethodDeclaration[4165-4301]"
    }, {
      "left" : "public Option getOption(final String trigger)",
      "right" : "public Option getOption(final String trigger)",
      "info" : "MethodDeclaration[4018-4122]:MethodDeclaration[4307-4411]"
    }, {
      "left" : "public List getValues(final Option option,\n                          List defaultValues)",
      "right" : "public List getValues(final Option option,\n                          List defaultValues)",
      "info" : "MethodDeclaration[4128-5289]:MethodDeclaration[4417-5578]"
    }, {
      "left" : "public List getUndefaultedValues(Option option)",
      "right" : "public List getUndefaultedValues(Option option)",
      "info" : "MethodDeclaration[5295-5588]:MethodDeclaration[5584-5877]"
    }, {
      "left" : "public Boolean getSwitch(final Option option,\n                             final Boolean defaultValue)",
      "right" : "public Boolean getSwitch(final Option option,\n                             final Boolean defaultValue)",
      "info" : "MethodDeclaration[5594-6112]:MethodDeclaration[5883-6401]"
    }, {
      "left" : "public String getProperty(final String property)",
      "right" : "public String getProperty(final String property)",
      "info" : "MethodDeclaration[6118-6234]:MethodDeclaration[6407-6523]"
    }, {
      "left" : "public void addProperty(final Option option,\n                            final String property,\n                            final String value)",
      "right" : "public void addProperty(final Option option,\n                            final String property,\n                            final String value)",
      "info" : "MethodDeclaration[6240-6660]:MethodDeclaration[6529-6949]"
    }, {
      "left" : "public void addProperty(final String property, final String value)",
      "right" : "public void addProperty(final String property, final String value)",
      "info" : "MethodDeclaration[6666-6800]:MethodDeclaration[6955-7089]"
    }, {
      "left" : "public String getProperty(final Option option,\n                              final String property,\n                              final String defaultValue)",
      "right" : "public String getProperty(final Option option,\n                              final String property,\n                              final String defaultValue)",
      "info" : "MethodDeclaration[6806-7187]:MethodDeclaration[7095-7476]"
    }, {
      "left" : "public Set getProperties(final Option option)",
      "right" : "public Set getProperties(final Option option)",
      "info" : "MethodDeclaration[7193-7474]:MethodDeclaration[7482-7763]"
    }, {
      "left" : "public Set getProperties()",
      "right" : "public Set getProperties()",
      "info" : "MethodDeclaration[7480-7566]:MethodDeclaration[7769-7855]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[8536-9084]:MethodDeclaration[9263-9811]"
    }, {
      "left" : "public List getOptions()",
      "right" : "public List getOptions()",
      "info" : "MethodDeclaration[9090-9176]:MethodDeclaration[9817-9903]"
    }, {
      "left" : "public Set getOptionTriggers()",
      "right" : "public Set getOptionTriggers()",
      "info" : "MethodDeclaration[9182-9287]:MethodDeclaration[9909-10014]"
    }, {
      "left" : "public void setDefaultValues(final Option option,\n                                 final List defaults)",
      "right" : "public void setDefaultValues(final Option option,\n                                 final List defaults)",
      "info" : "MethodDeclaration[9293-9554]:MethodDeclaration[10020-10281]"
    }, {
      "left" : "public void setDefaultSwitch(final Option option,\n                                 final Boolean defaultSwitch)",
      "right" : "public void setDefaultSwitch(final Option option,\n                                 final Boolean defaultSwitch)",
      "info" : "MethodDeclaration[9560-9843]:MethodDeclaration[10287-10570]"
    }, {
      "left" : "public List getNormalised()",
      "right" : "public List getNormalised()",
      "info" : "MethodDeclaration[9849-9941]:MethodDeclaration[10576-10668]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2555-2561]:Modifier[2844-2850]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2562-2566]:PrimitiveType[2851-2855]"
    }, {
      "left" : "addOption",
      "right" : "addOption",
      "info" : "SimpleName[2567-2576]:SimpleName[2856-2865]"
    }, {
      "left" : "Option option",
      "right" : "Option option",
      "info" : "SingleVariableDeclaration[2577-2590]:SingleVariableDeclaration[2866-2879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2592-3071]:Block[2881-3360]"
    }, {
      "left" : "options.add(option);",
      "right" : "options.add(option);",
      "info" : "ExpressionStatement[2602-2622]:ExpressionStatement[2891-2911]"
    }, {
      "left" : "nameToOption.put(option.getPreferredName(), option);",
      "right" : "nameToOption.put(option.getPreferredName(), option);",
      "info" : "ExpressionStatement[2631-2683]:ExpressionStatement[2920-2972]"
    }, {
      "left" : "for (Iterator i = option.getTriggers().iterator(); i.hasNext())",
      "right" : "for (Iterator i = option.getTriggers().iterator(); i.hasNext())",
      "info" : "ForStatement[2693-2817]:ForStatement[2982-3106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2758-2817]:Block[3047-3106]"
    }, {
      "left" : "nameToOption.put(i.next(), option);",
      "right" : "nameToOption.put(i.next(), option);",
      "info" : "ExpressionStatement[2772-2807]:ExpressionStatement[3061-3096]"
    }, {
      "left" : "Option parent = option.getParent();",
      "right" : "Option parent = option.getParent();",
      "info" : "VariableDeclarationStatement[2884-2919]:VariableDeclarationStatement[3173-3208]"
    }, {
      "left" : "while (parent != null && !options.contains(parent))",
      "right" : "while (parent != null && !options.contains(parent))",
      "info" : "WhileStatement[2928-3065]:WhileStatement[3217-3354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2980-3065]:Block[3269-3354]"
    }, {
      "left" : "options.add(parent);",
      "right" : "options.add(parent);",
      "info" : "ExpressionStatement[2994-3014]:ExpressionStatement[3283-3303]"
    }, {
      "left" : "parent = parent.getParent();",
      "right" : "parent = parent.getParent();",
      "info" : "ExpressionStatement[3027-3055]:ExpressionStatement[3316-3344]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3077-3083]:Modifier[3366-3372]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3084-3088]:PrimitiveType[3373-3377]"
    }, {
      "left" : "addValue",
      "right" : "addValue",
      "info" : "SimpleName[3089-3097]:SimpleName[3378-3386]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[3098-3117]:SingleVariableDeclaration[3387-3406]"
    }, {
      "left" : "final Object value",
      "right" : "final Object value",
      "info" : "SingleVariableDeclaration[3144-3162]:SingleVariableDeclaration[3433-3451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3164-3466]:Block[3453-3755]"
    }, {
      "left" : "if (option instanceof Argument)",
      "right" : "if (option instanceof Argument)",
      "info" : "IfStatement[3174-3248]:IfStatement[3463-3537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3206-3248]:Block[3495-3537]"
    }, {
      "left" : "addOption(option);",
      "right" : "addOption(option);",
      "info" : "ExpressionStatement[3220-3238]:ExpressionStatement[3509-3527]"
    }, {
      "left" : "List valueList = (List) values.get(option);",
      "right" : "List valueList = (List) values.get(option);",
      "info" : "VariableDeclarationStatement[3258-3301]:VariableDeclarationStatement[3547-3590]"
    }, {
      "left" : "if (valueList == null)",
      "right" : "if (valueList == null)",
      "info" : "IfStatement[3311-3429]:IfStatement[3600-3718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3334-3429]:Block[3623-3718]"
    }, {
      "left" : "valueList = new ArrayList();",
      "right" : "valueList = new ArrayList();",
      "info" : "ExpressionStatement[3348-3376]:ExpressionStatement[3637-3665]"
    }, {
      "left" : "values.put(option, valueList);",
      "right" : "values.put(option, valueList);",
      "info" : "ExpressionStatement[3389-3419]:ExpressionStatement[3678-3708]"
    }, {
      "left" : "valueList.add(value);",
      "right" : "valueList.add(value);",
      "info" : "ExpressionStatement[3439-3460]:ExpressionStatement[3728-3749]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3472-3478]:Modifier[3761-3767]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3479-3483]:PrimitiveType[3768-3772]"
    }, {
      "left" : "addSwitch",
      "right" : "addSwitch",
      "info" : "SimpleName[3484-3493]:SimpleName[3773-3782]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[3494-3513]:SingleVariableDeclaration[3783-3802]"
    }, {
      "left" : "final boolean value",
      "right" : "final boolean value",
      "info" : "SingleVariableDeclaration[3541-3560]:SingleVariableDeclaration[3830-3849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3562-3870]:Block[3851-4159]"
    }, {
      "left" : "addOption(option);",
      "right" : "addOption(option);",
      "info" : "ExpressionStatement[3572-3590]:ExpressionStatement[3861-3879]"
    }, {
      "left" : "if (switches.containsKey(option))",
      "right" : "if (switches.containsKey(option))",
      "info" : "IfStatement[3600-3864]:IfStatement[3889-4153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3634-3775]:Block[3923-4064]"
    }, {
      "left" : "throw new IllegalStateException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_ALREADY_SET));",
      "right" : "throw new IllegalStateException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_ALREADY_SET));",
      "info" : "ThrowStatement[3648-3765]:ThrowStatement[3937-4054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3781-3864]:Block[4070-4153]"
    }, {
      "left" : "switches.put(option, value ? Boolean.TRUE : Boolean.FALSE);",
      "right" : "switches.put(option, value ? Boolean.TRUE : Boolean.FALSE);",
      "info" : "ExpressionStatement[3795-3854]:ExpressionStatement[4084-4143]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3876-3882]:Modifier[4165-4171]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3883-3890]:PrimitiveType[4172-4179]"
    }, {
      "left" : "hasOption",
      "right" : "hasOption",
      "info" : "SimpleName[3891-3900]:SimpleName[4180-4189]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[3901-3920]:SingleVariableDeclaration[4190-4209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3922-4012]:Block[4211-4301]"
    }, {
      "left" : "final boolean present = options.contains(option);",
      "right" : "final boolean present = options.contains(option);",
      "info" : "VariableDeclarationStatement[3932-3981]:VariableDeclarationStatement[4221-4270]"
    }, {
      "left" : "return present;",
      "right" : "return present;",
      "info" : "ReturnStatement[3991-4006]:ReturnStatement[4280-4295]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4018-4024]:Modifier[4307-4313]"
    }, {
      "left" : "Option",
      "right" : "Option",
      "info" : "SimpleType[4025-4031]:SimpleType[4314-4320]"
    }, {
      "left" : "getOption",
      "right" : "getOption",
      "info" : "SimpleName[4032-4041]:SimpleName[4321-4330]"
    }, {
      "left" : "final String trigger",
      "right" : "final String trigger",
      "info" : "SingleVariableDeclaration[4042-4062]:SingleVariableDeclaration[4331-4351]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4064-4122]:Block[4353-4411]"
    }, {
      "left" : "return (Option) nameToOption.get(trigger);",
      "right" : "return (Option) nameToOption.get(trigger);",
      "info" : "ReturnStatement[4074-4116]:ReturnStatement[4363-4405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4128-4134]:Modifier[4417-4423]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[4135-4139]:SimpleType[4424-4428]"
    }, {
      "left" : "getValues",
      "right" : "getValues",
      "info" : "SimpleName[4140-4149]:SimpleName[4429-4438]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[4150-4169]:SingleVariableDeclaration[4439-4458]"
    }, {
      "left" : "List defaultValues",
      "right" : "List defaultValues",
      "info" : "SingleVariableDeclaration[4197-4215]:SingleVariableDeclaration[4486-4504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4217-5289]:Block[4506-5578]"
    }, {
      "left" : "List valueList = (List) values.get(option);",
      "right" : "List valueList = (List) values.get(option);",
      "info" : "VariableDeclarationStatement[4265-4308]:VariableDeclarationStatement[4554-4597]"
    }, {
      "left" : "if (defaultValues == null || defaultValues.isEmpty())",
      "right" : "if (defaultValues == null || defaultValues.isEmpty())",
      "info" : "IfStatement[4361-4493]:IfStatement[4650-4782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4415-4493]:Block[4704-4782]"
    }, {
      "left" : "defaultValues = (List) this.defaultValues.get(option);",
      "right" : "defaultValues = (List) this.defaultValues.get(option);",
      "info" : "ExpressionStatement[4429-4483]:ExpressionStatement[4718-4772]"
    }, {
      "left" : "if (defaultValues != null && !defaultValues.isEmpty())",
      "right" : "if (defaultValues != null && !defaultValues.isEmpty())",
      "info" : "IfStatement[4555-5211]:IfStatement[4844-5500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4610-5211]:Block[4899-5500]"
    }, {
      "left" : "if (valueList == null || valueList.isEmpty())",
      "right" : "if (valueList == null || valueList.isEmpty())",
      "info" : "IfStatement[4624-5201]:IfStatement[4913-5490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4670-4728]:Block[4959-5017]"
    }, {
      "left" : "valueList = defaultValues;",
      "right" : "valueList = defaultValues;",
      "info" : "ExpressionStatement[4688-4714]:ExpressionStatement[4977-5003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4734-5201]:Block[5023-5490]"
    }, {
      "left" : "if (defaultValues.size() > valueList.size())",
      "right" : "if (defaultValues.size() > valueList.size())",
      "info" : "IfStatement[4859-5187]:IfStatement[5148-5476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4904-5187]:Block[5193-5476]"
    }, {
      "left" : "valueList = new ArrayList(valueList);",
      "right" : "valueList = new ArrayList(valueList);",
      "info" : "ExpressionStatement[4969-5006]:ExpressionStatement[5258-5295]"
    }, {
      "left" : "for (int i=valueList.size(); i<defaultValues.size(); i++)",
      "right" : "for (int i=valueList.size(); i<defaultValues.size(); i++)",
      "info" : "ForStatement[5027-5169]:ForStatement[5316-5458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5085-5169]:Block[5374-5458]"
    }, {
      "left" : "valueList.add(defaultValues.get(i));",
      "right" : "valueList.add(defaultValues.get(i));",
      "info" : "ExpressionStatement[5111-5147]:ExpressionStatement[5400-5436]"
    }, {
      "left" : "return valueList == null ? Collections.EMPTY_LIST : valueList;",
      "right" : "return valueList == null ? Collections.EMPTY_LIST : valueList;",
      "info" : "ReturnStatement[5221-5283]:ReturnStatement[5510-5572]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5295-5301]:Modifier[5584-5590]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[5302-5306]:SimpleType[5591-5595]"
    }, {
      "left" : "getUndefaultedValues",
      "right" : "getUndefaultedValues",
      "info" : "SimpleName[5307-5327]:SimpleName[5596-5616]"
    }, {
      "left" : "Option option",
      "right" : "Option option",
      "info" : "SingleVariableDeclaration[5328-5341]:SingleVariableDeclaration[5617-5630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5343-5588]:Block[5632-5877]"
    }, {
      "left" : "List valueList = (List) values.get(option);",
      "right" : "List valueList = (List) values.get(option);",
      "info" : "VariableDeclarationStatement[5395-5438]:VariableDeclarationStatement[5684-5727]"
    }, {
      "left" : "if (valueList == null)",
      "right" : "if (valueList == null)",
      "info" : "IfStatement[5481-5557]:IfStatement[5770-5846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5504-5557]:Block[5793-5846]"
    }, {
      "left" : "valueList = Collections.EMPTY_LIST;",
      "right" : "valueList = Collections.EMPTY_LIST;",
      "info" : "ExpressionStatement[5514-5549]:ExpressionStatement[5803-5838]"
    }, {
      "left" : "return valueList;",
      "right" : "return valueList;",
      "info" : "ReturnStatement[5565-5582]:ReturnStatement[5854-5871]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5594-5600]:Modifier[5883-5889]"
    }, {
      "left" : "Boolean",
      "right" : "Boolean",
      "info" : "SimpleType[5601-5608]:SimpleType[5890-5897]"
    }, {
      "left" : "getSwitch",
      "right" : "getSwitch",
      "info" : "SimpleName[5609-5618]:SimpleName[5898-5907]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[5619-5638]:SingleVariableDeclaration[5908-5927]"
    }, {
      "left" : "final Boolean defaultValue",
      "right" : "final Boolean defaultValue",
      "info" : "SingleVariableDeclaration[5669-5695]:SingleVariableDeclaration[5958-5984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5697-6112]:Block[5986-6401]"
    }, {
      "left" : "Boolean bool = (Boolean) switches.get(option);",
      "right" : "Boolean bool = (Boolean) switches.get(option);",
      "info" : "VariableDeclarationStatement[5753-5799]:VariableDeclarationStatement[6042-6088]"
    }, {
      "left" : "if (bool == null)",
      "right" : "if (bool == null)",
      "info" : "IfStatement[5869-5931]:IfStatement[6158-6220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5887-5931]:Block[6176-6220]"
    }, {
      "left" : "bool = defaultValue;",
      "right" : "bool = defaultValue;",
      "info" : "ExpressionStatement[5901-5921]:ExpressionStatement[6190-6210]"
    }, {
      "left" : "if (bool == null)",
      "right" : "if (bool == null)",
      "info" : "IfStatement[5992-6084]:IfStatement[6281-6373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6010-6084]:Block[6299-6373]"
    }, {
      "left" : "bool = (Boolean) this.defaultSwitches.get(option);",
      "right" : "bool = (Boolean) this.defaultSwitches.get(option);",
      "info" : "ExpressionStatement[6024-6074]:ExpressionStatement[6313-6363]"
    }, {
      "left" : "return bool;",
      "right" : "return bool;",
      "info" : "ReturnStatement[6094-6106]:ReturnStatement[6383-6395]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6118-6124]:Modifier[6407-6413]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6125-6131]:SimpleType[6414-6420]"
    }, {
      "left" : "getProperty",
      "right" : "getProperty",
      "info" : "SimpleName[6132-6143]:SimpleName[6421-6432]"
    }, {
      "left" : "final String property",
      "right" : "final String property",
      "info" : "SingleVariableDeclaration[6144-6165]:SingleVariableDeclaration[6433-6454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6167-6234]:Block[6456-6523]"
    }, {
      "left" : "return getProperty(new PropertyOption(), property);",
      "right" : "return getProperty(new PropertyOption(), property);",
      "info" : "ReturnStatement[6177-6228]:ReturnStatement[6466-6517]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6240-6246]:Modifier[6529-6535]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6247-6251]:PrimitiveType[6536-6540]"
    }, {
      "left" : "addProperty",
      "right" : "addProperty",
      "info" : "SimpleName[6252-6263]:SimpleName[6541-6552]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[6264-6283]:SingleVariableDeclaration[6553-6572]"
    }, {
      "left" : "final String property",
      "right" : "final String property",
      "info" : "SingleVariableDeclaration[6313-6334]:SingleVariableDeclaration[6602-6623]"
    }, {
      "left" : "final String value",
      "right" : "final String value",
      "info" : "SingleVariableDeclaration[6364-6382]:SingleVariableDeclaration[6653-6671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6384-6660]:Block[6673-6949]"
    }, {
      "left" : "Properties properties = (Properties) optionToProperties.get(option);",
      "right" : "Properties properties = (Properties) optionToProperties.get(option);",
      "info" : "VariableDeclarationStatement[6394-6462]:VariableDeclarationStatement[6683-6751]"
    }, {
      "left" : "if (properties == null)",
      "right" : "if (properties == null)",
      "info" : "IfStatement[6471-6605]:IfStatement[6760-6894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6495-6605]:Block[6784-6894]"
    }, {
      "left" : "properties = new Properties();",
      "right" : "properties = new Properties();",
      "info" : "ExpressionStatement[6509-6539]:ExpressionStatement[6798-6828]"
    }, {
      "left" : "optionToProperties.put(option, properties);",
      "right" : "optionToProperties.put(option, properties);",
      "info" : "ExpressionStatement[6552-6595]:ExpressionStatement[6841-6884]"
    }, {
      "left" : "properties.setProperty(property, value);",
      "right" : "properties.setProperty(property, value);",
      "info" : "ExpressionStatement[6614-6654]:ExpressionStatement[6903-6943]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6666-6672]:Modifier[6955-6961]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6673-6677]:PrimitiveType[6962-6966]"
    }, {
      "left" : "addProperty",
      "right" : "addProperty",
      "info" : "SimpleName[6678-6689]:SimpleName[6967-6978]"
    }, {
      "left" : "final String property",
      "right" : "final String property",
      "info" : "SingleVariableDeclaration[6690-6711]:SingleVariableDeclaration[6979-7000]"
    }, {
      "left" : "final String value",
      "right" : "final String value",
      "info" : "SingleVariableDeclaration[6713-6731]:SingleVariableDeclaration[7002-7020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6733-6800]:Block[7022-7089]"
    }, {
      "left" : "addProperty(new PropertyOption(), property, value);",
      "right" : "addProperty(new PropertyOption(), property, value);",
      "info" : "ExpressionStatement[6743-6794]:ExpressionStatement[7032-7083]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6806-6812]:Modifier[7095-7101]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6813-6819]:SimpleType[7102-7108]"
    }, {
      "left" : "getProperty",
      "right" : "getProperty",
      "info" : "SimpleName[6820-6831]:SimpleName[7109-7120]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[6832-6851]:SingleVariableDeclaration[7121-7140]"
    }, {
      "left" : "final String property",
      "right" : "final String property",
      "info" : "SingleVariableDeclaration[6883-6904]:SingleVariableDeclaration[7172-7193]"
    }, {
      "left" : "final String defaultValue",
      "right" : "final String defaultValue",
      "info" : "SingleVariableDeclaration[6936-6961]:SingleVariableDeclaration[7225-7250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6963-7187]:Block[7252-7476]"
    }, {
      "left" : "Properties properties = (Properties) optionToProperties.get(option);",
      "right" : "Properties properties = (Properties) optionToProperties.get(option);",
      "info" : "VariableDeclarationStatement[6973-7041]:VariableDeclarationStatement[7262-7330]"
    }, {
      "left" : "if (properties == null)",
      "right" : "if (properties == null)",
      "info" : "IfStatement[7050-7118]:IfStatement[7339-7407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7074-7118]:Block[7363-7407]"
    }, {
      "left" : "return defaultValue;",
      "right" : "return defaultValue;",
      "info" : "ReturnStatement[7088-7108]:ReturnStatement[7377-7397]"
    }, {
      "left" : "return properties.getProperty(property, defaultValue);",
      "right" : "return properties.getProperty(property, defaultValue);",
      "info" : "ReturnStatement[7127-7181]:ReturnStatement[7416-7470]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7193-7199]:Modifier[7482-7488]"
    }, {
      "left" : "Set",
      "right" : "Set",
      "info" : "SimpleType[7200-7203]:SimpleType[7489-7492]"
    }, {
      "left" : "getProperties",
      "right" : "getProperties",
      "info" : "SimpleName[7204-7217]:SimpleName[7493-7506]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[7218-7237]:SingleVariableDeclaration[7507-7526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7239-7474]:Block[7528-7763]"
    }, {
      "left" : "Properties properties = (Properties) optionToProperties.get(option);",
      "right" : "Properties properties = (Properties) optionToProperties.get(option);",
      "info" : "VariableDeclarationStatement[7249-7317]:VariableDeclarationStatement[7538-7606]"
    }, {
      "left" : "if (properties == null)",
      "right" : "if (properties == null)",
      "info" : "IfStatement[7326-7403]:IfStatement[7615-7692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7350-7403]:Block[7639-7692]"
    }, {
      "left" : "return Collections.EMPTY_SET;",
      "right" : "return Collections.EMPTY_SET;",
      "info" : "ReturnStatement[7364-7393]:ReturnStatement[7653-7682]"
    }, {
      "left" : "return Collections.unmodifiableSet(properties.keySet());",
      "right" : "return Collections.unmodifiableSet(properties.keySet());",
      "info" : "ReturnStatement[7412-7468]:ReturnStatement[7701-7757]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7480-7486]:Modifier[7769-7775]"
    }, {
      "left" : "Set",
      "right" : "Set",
      "info" : "SimpleType[7487-7490]:SimpleType[7776-7779]"
    }, {
      "left" : "getProperties",
      "right" : "getProperties",
      "info" : "SimpleName[7491-7504]:SimpleName[7780-7793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7507-7566]:Block[7796-7855]"
    }, {
      "left" : "return getProperties(new PropertyOption());",
      "right" : "return getProperties(new PropertyOption());",
      "info" : "ReturnStatement[7517-7560]:ReturnStatement[7806-7849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8536-8542]:Modifier[9263-9269]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8543-8549]:SimpleType[9270-9276]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[8550-8558]:SimpleName[9277-9285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8561-9084]:Block[9288-9811]"
    }, {
      "left" : "final StringBuffer buffer = new StringBuffer();",
      "right" : "final StringBuffer buffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[8571-8618]:VariableDeclarationStatement[9298-9345]"
    }, {
      "left" : "for (final Iterator i = normalised.iterator(); i.hasNext())",
      "right" : "for (final Iterator i = normalised.iterator(); i.hasNext())",
      "info" : "ForStatement[8664-9043]:ForStatement[9391-9770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8725-9043]:Block[9452-9770]"
    }, {
      "left" : "final String arg = (String) i.next();",
      "right" : "final String arg = (String) i.next();",
      "info" : "VariableDeclarationStatement[8739-8776]:VariableDeclarationStatement[9466-9503]"
    }, {
      "left" : "if (arg.indexOf(' ') >= 0)",
      "right" : "if (arg.indexOf(' ') >= 0)",
      "info" : "IfStatement[8790-8951]:IfStatement[9517-9678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8817-8894]:Block[9544-9621]"
    }, {
      "left" : "buffer.append(\"\\\"\").append(arg).append(\"\\\"\");",
      "right" : "buffer.append(\"\\\"\").append(arg).append(\"\\\"\");",
      "info" : "ExpressionStatement[8835-8880]:ExpressionStatement[9562-9607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8900-8951]:Block[9627-9678]"
    }, {
      "left" : "buffer.append(arg);",
      "right" : "buffer.append(arg);",
      "info" : "ExpressionStatement[8918-8937]:ExpressionStatement[9645-9664]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[8965-9033]:IfStatement[9692-9760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8982-9033]:Block[9709-9760]"
    }, {
      "left" : "buffer.append(' ');",
      "right" : "buffer.append(' ');",
      "info" : "ExpressionStatement[9000-9019]:ExpressionStatement[9727-9746]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[9053-9078]:ReturnStatement[9780-9805]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9090-9096]:Modifier[9817-9823]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[9097-9101]:SimpleType[9824-9828]"
    }, {
      "left" : "getOptions",
      "right" : "getOptions",
      "info" : "SimpleName[9102-9112]:SimpleName[9829-9839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9115-9176]:Block[9842-9903]"
    }, {
      "left" : "return Collections.unmodifiableList(options);",
      "right" : "return Collections.unmodifiableList(options);",
      "info" : "ReturnStatement[9125-9170]:ReturnStatement[9852-9897]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9182-9188]:Modifier[9909-9915]"
    }, {
      "left" : "Set",
      "right" : "Set",
      "info" : "SimpleType[9189-9192]:SimpleType[9916-9919]"
    }, {
      "left" : "getOptionTriggers",
      "right" : "getOptionTriggers",
      "info" : "SimpleName[9193-9210]:SimpleName[9920-9937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9213-9287]:Block[9940-10014]"
    }, {
      "left" : "return Collections.unmodifiableSet(nameToOption.keySet());",
      "right" : "return Collections.unmodifiableSet(nameToOption.keySet());",
      "info" : "ReturnStatement[9223-9281]:ReturnStatement[9950-10008]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9293-9299]:Modifier[10020-10026]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9300-9304]:PrimitiveType[10027-10031]"
    }, {
      "left" : "setDefaultValues",
      "right" : "setDefaultValues",
      "info" : "SimpleName[9305-9321]:SimpleName[10032-10048]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[9322-9341]:SingleVariableDeclaration[10049-10068]"
    }, {
      "left" : "final List defaults",
      "right" : "final List defaults",
      "info" : "SingleVariableDeclaration[9376-9395]:SingleVariableDeclaration[10103-10122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9397-9554]:Block[10124-10281]"
    }, {
      "left" : "if (defaults == null)",
      "right" : "if (defaults == null)",
      "info" : "IfStatement[9407-9548]:IfStatement[10134-10275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9429-9482]:Block[10156-10209]"
    }, {
      "left" : "defaultValues.remove(option);",
      "right" : "defaultValues.remove(option);",
      "info" : "ExpressionStatement[9443-9472]:ExpressionStatement[10170-10199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9488-9548]:Block[10215-10275]"
    }, {
      "left" : "defaultValues.put(option, defaults);",
      "right" : "defaultValues.put(option, defaults);",
      "info" : "ExpressionStatement[9502-9538]:ExpressionStatement[10229-10265]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9560-9566]:Modifier[10287-10293]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9567-9571]:PrimitiveType[10294-10298]"
    }, {
      "left" : "setDefaultSwitch",
      "right" : "setDefaultSwitch",
      "info" : "SimpleName[9572-9588]:SimpleName[10299-10315]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[9589-9608]:SingleVariableDeclaration[10316-10335]"
    }, {
      "left" : "final Boolean defaultSwitch",
      "right" : "final Boolean defaultSwitch",
      "info" : "SingleVariableDeclaration[9643-9670]:SingleVariableDeclaration[10370-10397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9672-9843]:Block[10399-10570]"
    }, {
      "left" : "if (defaultSwitch == null)",
      "right" : "if (defaultSwitch == null)",
      "info" : "IfStatement[9682-9837]:IfStatement[10409-10564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9709-9764]:Block[10436-10491]"
    }, {
      "left" : "defaultSwitches.remove(option);",
      "right" : "defaultSwitches.remove(option);",
      "info" : "ExpressionStatement[9723-9754]:ExpressionStatement[10450-10481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9770-9837]:Block[10497-10564]"
    }, {
      "left" : "defaultSwitches.put(option, defaultSwitch);",
      "right" : "defaultSwitches.put(option, defaultSwitch);",
      "info" : "ExpressionStatement[9784-9827]:ExpressionStatement[10511-10554]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9849-9855]:Modifier[10576-10582]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[9856-9860]:SimpleType[10583-10587]"
    }, {
      "left" : "getNormalised",
      "right" : "getNormalised",
      "info" : "SimpleName[9861-9874]:SimpleName[10588-10601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9877-9941]:Block[10604-10668]"
    }, {
      "left" : "return Collections.unmodifiableList(normalised);",
      "right" : "return Collections.unmodifiableList(normalised);",
      "info" : "ReturnStatement[9887-9935]:ReturnStatement[10614-10662]"
    } ]
  },
  "interFileMappings" : { }
}