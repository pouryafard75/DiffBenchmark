{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 2935615937671064911L;",
      "right" : "private static final long serialVersionUID = 2935615937671064911L;",
      "info" : "FieldDeclaration[4239-4336]:FieldDeclaration[4239-4336]"
    }, {
      "left" : "private boolean plotLines = false;",
      "right" : "private boolean plotLines = false;",
      "info" : "FieldDeclaration[4348-4462]:FieldDeclaration[4348-4462]"
    }, {
      "left" : "private transient Paint groupPaint = Color.black;",
      "right" : "private transient Paint groupPaint = Color.black;",
      "info" : "FieldDeclaration[4470-4617]:FieldDeclaration[4470-4617]"
    }, {
      "left" : "private transient Stroke groupStroke = new BasicStroke(1.0f);",
      "right" : "private transient Stroke groupStroke = new BasicStroke(1.0f);",
      "info" : "FieldDeclaration[4625-4785]:FieldDeclaration[4625-4785]"
    }, {
      "left" : "private transient Icon minIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0,\r\n            360, Arc2D.OPEN), null, Color.black);",
      "right" : "private transient Icon minIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0,\r\n            360, Arc2D.OPEN), null, Color.black);",
      "info" : "FieldDeclaration[4793-4974]:FieldDeclaration[4793-4974]"
    }, {
      "left" : "private transient Icon maxIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0,\r\n            360, Arc2D.OPEN), null, Color.black);",
      "right" : "private transient Icon maxIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0,\r\n            360, Arc2D.OPEN), null, Color.black);",
      "info" : "FieldDeclaration[4982-5163]:FieldDeclaration[4982-5163]"
    }, {
      "left" : "private transient Icon objectIcon = getIcon(new Line2D.Double(-4, 0, 4, 0),\r\n            false, true);",
      "right" : "private transient Icon objectIcon = getIcon(new Line2D.Double(-4, 0, 4, 0),\r\n            false, true);",
      "info" : "FieldDeclaration[5171-5322]:FieldDeclaration[5171-5322]"
    }, {
      "left" : "private int lastCategory = -1;",
      "right" : "private int lastCategory = -1;",
      "info" : "FieldDeclaration[5330-5391]:FieldDeclaration[5330-5391]"
    }, {
      "left" : "private double min;",
      "right" : "private double min;",
      "info" : "FieldDeclaration[5399-5443]:FieldDeclaration[5399-5443]"
    }, {
      "left" : "private double max;",
      "right" : "private double max;",
      "info" : "FieldDeclaration[5451-5495]:FieldDeclaration[5451-5495]"
    }, {
      "left" : "public MinMaxCategoryRenderer()",
      "right" : "public MinMaxCategoryRenderer()",
      "info" : "MethodDeclaration[5503-5608]:MethodDeclaration[5503-5608]"
    }, {
      "left" : "public boolean isDrawLines()",
      "right" : "public boolean isDrawLines()",
      "info" : "MethodDeclaration[5616-5947]:MethodDeclaration[5616-5947]"
    }, {
      "left" : "public void setDrawLines(boolean draw)",
      "right" : "public void setDrawLines(boolean draw)",
      "info" : "MethodDeclaration[5955-6465]:MethodDeclaration[5955-6465]"
    }, {
      "left" : "public Paint getGroupPaint()",
      "right" : "public Paint getGroupPaint()",
      "info" : "MethodDeclaration[6473-6784]:MethodDeclaration[6473-6784]"
    }, {
      "left" : "public void setGroupPaint(Paint paint)",
      "right" : "public void setGroupPaint(Paint paint)",
      "info" : "MethodDeclaration[6792-7369]:MethodDeclaration[6792-7369]"
    }, {
      "left" : "public Stroke getGroupStroke()",
      "right" : "public Stroke getGroupStroke()",
      "info" : "MethodDeclaration[7377-7695]:MethodDeclaration[7377-7695]"
    }, {
      "left" : "public void setGroupStroke(Stroke stroke)",
      "right" : "public void setGroupStroke(Stroke stroke)",
      "info" : "MethodDeclaration[7703-8241]:MethodDeclaration[7703-8241]"
    }, {
      "left" : "public Icon getObjectIcon()",
      "right" : "public Icon getObjectIcon()",
      "info" : "MethodDeclaration[8249-8490]:MethodDeclaration[8249-8490]"
    }, {
      "left" : "public void setObjectIcon(Icon icon)",
      "right" : "public void setObjectIcon(Icon icon)",
      "info" : "MethodDeclaration[8498-8891]:MethodDeclaration[8498-8891]"
    }, {
      "left" : "public Icon getMaxIcon()",
      "right" : "public Icon getMaxIcon()",
      "info" : "MethodDeclaration[8899-9177]:MethodDeclaration[8899-9177]"
    }, {
      "left" : "public void setMaxIcon(Icon icon)",
      "right" : "public void setMaxIcon(Icon icon)",
      "info" : "MethodDeclaration[9185-9725]:MethodDeclaration[9185-9725]"
    }, {
      "left" : "public Icon getMinIcon()",
      "right" : "public Icon getMinIcon()",
      "info" : "MethodDeclaration[9733-10011]:MethodDeclaration[9733-10011]"
    }, {
      "left" : "public void setMinIcon(Icon icon)",
      "right" : "public void setMinIcon(Icon icon)",
      "info" : "MethodDeclaration[10019-10559]:MethodDeclaration[10019-10559]"
    }, {
      "left" : "public void drawItem(Graphics2D g2, CategoryItemRendererState state,\r\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\r\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\r\n            int pass)",
      "right" : "public void drawItem(Graphics2D g2, CategoryItemRendererState state,\r\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\r\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\r\n            int pass)",
      "info" : "MethodDeclaration[10567-15664]:MethodDeclaration[10567-15664]"
    }, {
      "left" : "private Icon getIcon(Shape shape, final Paint fillPaint, \r\n                        final Paint outlinePaint)",
      "right" : "private Icon getIcon(Shape shape, final Paint fillPaint, \r\n                        final Paint outlinePaint)",
      "info" : "MethodDeclaration[15995-17233]:MethodDeclaration[16601-17839]"
    }, {
      "left" : "public void paintIcon(Component c, Graphics g, int x, int y)",
      "right" : "public void paintIcon(Component c, Graphics g, int x, int y)",
      "info" : "MethodDeclaration[16512-17058]:MethodDeclaration[17118-17664]"
    }, {
      "left" : "public int getIconWidth()",
      "right" : "public int getIconWidth()",
      "info" : "MethodDeclaration[17070-17135]:MethodDeclaration[17676-17741]"
    }, {
      "left" : "public int getIconHeight()",
      "right" : "public int getIconHeight()",
      "info" : "MethodDeclaration[17147-17214]:MethodDeclaration[17753-17820]"
    }, {
      "left" : "private Icon getIcon(Shape shape, final boolean fill, \r\n            final boolean outline)",
      "right" : "private Icon getIcon(Shape shape, final boolean fill, \r\n            final boolean outline)",
      "info" : "MethodDeclaration[17241-18401]:MethodDeclaration[17847-19007]"
    }, {
      "left" : "public void paintIcon(Component c, Graphics g, int x, int y)",
      "right" : "public void paintIcon(Component c, Graphics g, int x, int y)",
      "info" : "MethodDeclaration[17749-18202]:MethodDeclaration[18355-18808]"
    }, {
      "left" : "public int getIconWidth()",
      "right" : "public int getIconWidth()",
      "info" : "MethodDeclaration[18218-18291]:MethodDeclaration[18824-18897]"
    }, {
      "left" : "public int getIconHeight()",
      "right" : "public int getIconHeight()",
      "info" : "MethodDeclaration[18307-18382]:MethodDeclaration[18913-18988]"
    }, {
      "left" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "right" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "info" : "MethodDeclaration[18413-18827]:MethodDeclaration[19019-19433]"
    }, {
      "left" : "private void readObject(ObjectInputStream stream) \r\n        throws IOException, ClassNotFoundException",
      "right" : "private void readObject(ObjectInputStream stream) \r\n        throws IOException, ClassNotFoundException",
      "info" : "MethodDeclaration[18839-19693]:MethodDeclaration[19445-20299]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5550-5556]:Modifier[5550-5556]"
    }, {
      "left" : "MinMaxCategoryRenderer",
      "right" : "MinMaxCategoryRenderer",
      "info" : "SimpleName[5557-5579]:SimpleName[5557-5579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5582-5608]:Block[5582-5608]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[5593-5601]:SuperConstructorInvocation[5593-5601]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5878-5884]:Modifier[5878-5884]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5885-5892]:PrimitiveType[5885-5892]"
    }, {
      "left" : "isDrawLines",
      "right" : "isDrawLines",
      "info" : "SimpleName[5893-5904]:SimpleName[5893-5904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5907-5947]:Block[5907-5947]"
    }, {
      "left" : "return this.plotLines;",
      "right" : "return this.plotLines;",
      "info" : "ReturnStatement[5918-5940]:ReturnStatement[5918-5940]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6256-6262]:Modifier[6256-6262]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6263-6267]:PrimitiveType[6263-6267]"
    }, {
      "left" : "setDrawLines",
      "right" : "setDrawLines",
      "info" : "SimpleName[6268-6280]:SimpleName[6268-6280]"
    }, {
      "left" : "boolean draw",
      "right" : "boolean draw",
      "info" : "SingleVariableDeclaration[6281-6293]:SingleVariableDeclaration[6281-6293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6295-6465]:Block[6295-6465]"
    }, {
      "left" : "if (this.plotLines != draw)",
      "right" : "if (this.plotLines != draw)",
      "info" : "IfStatement[6306-6448]:IfStatement[6306-6448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6334-6448]:Block[6334-6448]"
    }, {
      "left" : "this.plotLines = draw;",
      "right" : "this.plotLines = draw;",
      "info" : "ExpressionStatement[6349-6371]:ExpressionStatement[6349-6371]"
    }, {
      "left" : "this.notifyListeners(new RendererChangeEvent(this));",
      "right" : "this.notifyListeners(new RendererChangeEvent(this));",
      "info" : "ExpressionStatement[6385-6437]:ExpressionStatement[6385-6437]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6714-6720]:Modifier[6714-6720]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[6721-6726]:SimpleType[6721-6726]"
    }, {
      "left" : "getGroupPaint",
      "right" : "getGroupPaint",
      "info" : "SimpleName[6727-6740]:SimpleName[6727-6740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6743-6784]:Block[6743-6784]"
    }, {
      "left" : "return this.groupPaint;",
      "right" : "return this.groupPaint;",
      "info" : "ReturnStatement[6754-6777]:ReturnStatement[6754-6777]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7115-7121]:Modifier[7115-7121]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7122-7126]:PrimitiveType[7122-7126]"
    }, {
      "left" : "setGroupPaint",
      "right" : "setGroupPaint",
      "info" : "SimpleName[7127-7140]:SimpleName[7127-7140]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[7141-7152]:SingleVariableDeclaration[7141-7152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7154-7369]:Block[7154-7369]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[7165-7271]:IfStatement[7165-7271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7184-7271]:Block[7184-7271]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[7199-7260]:ThrowStatement[7199-7260]"
    }, {
      "left" : "this.groupPaint = paint;",
      "right" : "this.groupPaint = paint;",
      "info" : "ExpressionStatement[7281-7305]:ExpressionStatement[7281-7305]"
    }, {
      "left" : "notifyListeners(new RendererChangeEvent(this));",
      "right" : "notifyListeners(new RendererChangeEvent(this));",
      "info" : "ExpressionStatement[7315-7362]:ExpressionStatement[7315-7362]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7622-7628]:Modifier[7622-7628]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[7629-7635]:SimpleType[7629-7635]"
    }, {
      "left" : "getGroupStroke",
      "right" : "getGroupStroke",
      "info" : "SimpleName[7636-7650]:SimpleName[7636-7650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7653-7695]:Block[7653-7695]"
    }, {
      "left" : "return this.groupStroke;",
      "right" : "return this.groupStroke;",
      "info" : "ReturnStatement[7664-7688]:ReturnStatement[7664-7688]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7972-7978]:Modifier[7972-7978]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7979-7983]:PrimitiveType[7979-7983]"
    }, {
      "left" : "setGroupStroke",
      "right" : "setGroupStroke",
      "info" : "SimpleName[7984-7998]:SimpleName[7984-7998]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[7999-8012]:SingleVariableDeclaration[7999-8012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8014-8241]:Block[8014-8241]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[8025-8133]:IfStatement[8025-8133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8045-8133]:Block[8045-8133]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[8060-8122]:ThrowStatement[8060-8122]"
    }, {
      "left" : "this.groupStroke = stroke;",
      "right" : "this.groupStroke = stroke;",
      "info" : "ExpressionStatement[8143-8169]:ExpressionStatement[8143-8169]"
    }, {
      "left" : "notifyListeners(new RendererChangeEvent(this));",
      "right" : "notifyListeners(new RendererChangeEvent(this));",
      "info" : "ExpressionStatement[8179-8226]:ExpressionStatement[8179-8226]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8421-8427]:Modifier[8421-8427]"
    }, {
      "left" : "Icon",
      "right" : "Icon",
      "info" : "SimpleType[8428-8432]:SimpleType[8428-8432]"
    }, {
      "left" : "getObjectIcon",
      "right" : "getObjectIcon",
      "info" : "SimpleName[8433-8446]:SimpleName[8433-8446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8449-8490]:Block[8449-8490]"
    }, {
      "left" : "return this.objectIcon;",
      "right" : "return this.objectIcon;",
      "info" : "ReturnStatement[8460-8483]:ReturnStatement[8460-8483]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8642-8648]:Modifier[8642-8648]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8649-8653]:PrimitiveType[8649-8653]"
    }, {
      "left" : "setObjectIcon",
      "right" : "setObjectIcon",
      "info" : "SimpleName[8654-8667]:SimpleName[8654-8667]"
    }, {
      "left" : "Icon icon",
      "right" : "Icon icon",
      "info" : "SingleVariableDeclaration[8668-8677]:SingleVariableDeclaration[8668-8677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8679-8891]:Block[8679-8891]"
    }, {
      "left" : "if (icon == null)",
      "right" : "if (icon == null)",
      "info" : "IfStatement[8690-8794]:IfStatement[8690-8794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8708-8794]:Block[8708-8794]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'icon' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'icon' argument.\");",
      "info" : "ThrowStatement[8723-8783]:ThrowStatement[8723-8783]"
    }, {
      "left" : "this.objectIcon = icon;",
      "right" : "this.objectIcon = icon;",
      "info" : "ExpressionStatement[8804-8827]:ExpressionStatement[8804-8827]"
    }, {
      "left" : "notifyListeners(new RendererChangeEvent(this));",
      "right" : "notifyListeners(new RendererChangeEvent(this));",
      "info" : "ExpressionStatement[8837-8884]:ExpressionStatement[8837-8884]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9114-9120]:Modifier[9114-9120]"
    }, {
      "left" : "Icon",
      "right" : "Icon",
      "info" : "SimpleType[9121-9125]:SimpleType[9121-9125]"
    }, {
      "left" : "getMaxIcon",
      "right" : "getMaxIcon",
      "info" : "SimpleName[9126-9136]:SimpleName[9126-9136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9139-9177]:Block[9139-9177]"
    }, {
      "left" : "return this.maxIcon;",
      "right" : "return this.maxIcon;",
      "info" : "ReturnStatement[9150-9170]:ReturnStatement[9150-9170]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9482-9488]:Modifier[9482-9488]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9489-9493]:PrimitiveType[9489-9493]"
    }, {
      "left" : "setMaxIcon",
      "right" : "setMaxIcon",
      "info" : "SimpleName[9494-9504]:SimpleName[9494-9504]"
    }, {
      "left" : "Icon icon",
      "right" : "Icon icon",
      "info" : "SingleVariableDeclaration[9505-9514]:SingleVariableDeclaration[9505-9514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9516-9725]:Block[9516-9725]"
    }, {
      "left" : "if (icon == null)",
      "right" : "if (icon == null)",
      "info" : "IfStatement[9527-9631]:IfStatement[9527-9631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9545-9631]:Block[9545-9631]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'icon' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'icon' argument.\");",
      "info" : "ThrowStatement[9560-9620]:ThrowStatement[9560-9620]"
    }, {
      "left" : "this.maxIcon = icon;",
      "right" : "this.maxIcon = icon;",
      "info" : "ExpressionStatement[9641-9661]:ExpressionStatement[9641-9661]"
    }, {
      "left" : "notifyListeners(new RendererChangeEvent(this));",
      "right" : "notifyListeners(new RendererChangeEvent(this));",
      "info" : "ExpressionStatement[9671-9718]:ExpressionStatement[9671-9718]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9948-9954]:Modifier[9948-9954]"
    }, {
      "left" : "Icon",
      "right" : "Icon",
      "info" : "SimpleType[9955-9959]:SimpleType[9955-9959]"
    }, {
      "left" : "getMinIcon",
      "right" : "getMinIcon",
      "info" : "SimpleName[9960-9970]:SimpleName[9960-9970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9973-10011]:Block[9973-10011]"
    }, {
      "left" : "return this.minIcon;",
      "right" : "return this.minIcon;",
      "info" : "ReturnStatement[9984-10004]:ReturnStatement[9984-10004]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10316-10322]:Modifier[10316-10322]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10323-10327]:PrimitiveType[10323-10327]"
    }, {
      "left" : "setMinIcon",
      "right" : "setMinIcon",
      "info" : "SimpleName[10328-10338]:SimpleName[10328-10338]"
    }, {
      "left" : "Icon icon",
      "right" : "Icon icon",
      "info" : "SingleVariableDeclaration[10339-10348]:SingleVariableDeclaration[10339-10348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10350-10559]:Block[10350-10559]"
    }, {
      "left" : "if (icon == null)",
      "right" : "if (icon == null)",
      "info" : "IfStatement[10361-10465]:IfStatement[10361-10465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10379-10465]:Block[10379-10465]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'icon' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'icon' argument.\");",
      "info" : "ThrowStatement[10394-10454]:ThrowStatement[10394-10454]"
    }, {
      "left" : "this.minIcon = icon;",
      "right" : "this.minIcon = icon;",
      "info" : "ExpressionStatement[10475-10495]:ExpressionStatement[10475-10495]"
    }, {
      "left" : "notifyListeners(new RendererChangeEvent(this));",
      "right" : "notifyListeners(new RendererChangeEvent(this));",
      "info" : "ExpressionStatement[10505-10552]:ExpressionStatement[10505-10552]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11063-11069]:Modifier[11063-11069]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11070-11074]:PrimitiveType[11070-11074]"
    }, {
      "left" : "drawItem",
      "right" : "drawItem",
      "info" : "SimpleName[11075-11083]:SimpleName[11075-11083]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[11084-11097]:SingleVariableDeclaration[11084-11097]"
    }, {
      "left" : "CategoryItemRendererState state",
      "right" : "CategoryItemRendererState state",
      "info" : "SingleVariableDeclaration[11099-11130]:SingleVariableDeclaration[11099-11130]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[11145-11165]:SingleVariableDeclaration[11145-11165]"
    }, {
      "left" : "CategoryPlot plot",
      "right" : "CategoryPlot plot",
      "info" : "SingleVariableDeclaration[11167-11184]:SingleVariableDeclaration[11167-11184]"
    }, {
      "left" : "CategoryAxis domainAxis",
      "right" : "CategoryAxis domainAxis",
      "info" : "SingleVariableDeclaration[11186-11209]:SingleVariableDeclaration[11186-11209]"
    }, {
      "left" : "ValueAxis rangeAxis",
      "right" : "ValueAxis rangeAxis",
      "info" : "SingleVariableDeclaration[11224-11243]:SingleVariableDeclaration[11224-11243]"
    }, {
      "left" : "CategoryDataset dataset",
      "right" : "CategoryDataset dataset",
      "info" : "SingleVariableDeclaration[11245-11268]:SingleVariableDeclaration[11245-11268]"
    }, {
      "left" : "int row",
      "right" : "int row",
      "info" : "SingleVariableDeclaration[11270-11277]:SingleVariableDeclaration[11270-11277]"
    }, {
      "left" : "int column",
      "right" : "int column",
      "info" : "SingleVariableDeclaration[11279-11289]:SingleVariableDeclaration[11279-11289]"
    }, {
      "left" : "int pass",
      "right" : "int pass",
      "info" : "SingleVariableDeclaration[11304-11312]:SingleVariableDeclaration[11304-11312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11314-15664]:Block[11314-15664]"
    }, {
      "left" : "Number value = dataset.getValue(row, column);",
      "right" : "Number value = dataset.getValue(row, column);",
      "info" : "VariableDeclarationStatement[11381-11426]:VariableDeclarationStatement[11381-11426]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[11436-15657]:IfStatement[11436-15657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11455-15657]:Block[11455-15657]"
    }, {
      "left" : "double x1 = domainAxis.getCategoryMiddle(column, getColumnCount(), \r\n                    dataArea, plot.getDomainAxisEdge());",
      "right" : "double x1 = domainAxis.getCategoryMiddle(column, getColumnCount(), \r\n                    dataArea, plot.getDomainAxisEdge());",
      "info" : "VariableDeclarationStatement[11508-11633]:VariableDeclarationStatement[11508-11633]"
    }, {
      "left" : "double y1 = rangeAxis.valueToJava2D(value.doubleValue(), dataArea, \r\n                    plot.getRangeAxisEdge());",
      "right" : "double y1 = rangeAxis.valueToJava2D(value.doubleValue(), dataArea, \r\n                    plot.getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[11647-11761]:VariableDeclarationStatement[11647-11761]"
    }, {
      "left" : "g2.setPaint(getItemPaint(row, column));",
      "right" : "g2.setPaint(getItemPaint(row, column));",
      "info" : "ExpressionStatement[11775-11814]:ExpressionStatement[11775-11814]"
    }, {
      "left" : "g2.setStroke(getItemStroke(row, column));",
      "right" : "g2.setStroke(getItemStroke(row, column));",
      "info" : "ExpressionStatement[11828-11869]:ExpressionStatement[11828-11869]"
    }, {
      "left" : "Shape shape = null;",
      "right" : "Shape shape = null;",
      "info" : "VariableDeclarationStatement[11883-11902]:VariableDeclarationStatement[11883-11902]"
    }, {
      "left" : "shape = new Rectangle2D.Double(x1 - 4, y1 - 4, 8.0, 8.0);",
      "right" : "shape = new Rectangle2D.Double(x1 - 4, y1 - 4, 8.0, 8.0);",
      "info" : "ExpressionStatement[11916-11973]:ExpressionStatement[11916-11973]"
    }, {
      "left" : "PlotOrientation orient = plot.getOrientation();",
      "right" : "PlotOrientation orient = plot.getOrientation();",
      "info" : "VariableDeclarationStatement[12001-12048]:VariableDeclarationStatement[12001-12048]"
    }, {
      "left" : "if (orient == PlotOrientation.VERTICAL)",
      "right" : "if (orient == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[12062-12317]:IfStatement[12062-12317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12102-12192]:Block[12102-12192]"
    }, {
      "left" : "this.objectIcon.paintIcon(null, g2, (int) x1, (int) y1);",
      "right" : "this.objectIcon.paintIcon(null, g2, (int) x1, (int) y1);",
      "info" : "ExpressionStatement[12121-12177]:ExpressionStatement[12121-12177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12211-12317]:Block[12211-12317]"
    }, {
      "left" : "this.objectIcon.paintIcon(null, g2, (int) y1, (int) x1);",
      "right" : "this.objectIcon.paintIcon(null, g2, (int) y1, (int) x1);",
      "info" : "ExpressionStatement[12230-12286]:ExpressionStatement[12230-12286]"
    }, {
      "left" : "if (this.lastCategory == column)",
      "right" : "if (this.lastCategory == column)",
      "info" : "IfStatement[12345-14046]:IfStatement[12345-14046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12378-13842]:Block[12378-13842]"
    }, {
      "left" : "if (this.min > value.doubleValue())",
      "right" : "if (this.min > value.doubleValue())",
      "info" : "IfStatement[12397-12506]:IfStatement[12397-12506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12433-12506]:Block[12433-12506]"
    }, {
      "left" : "this.min = value.doubleValue();",
      "right" : "this.min = value.doubleValue();",
      "info" : "ExpressionStatement[12456-12487]:ExpressionStatement[12456-12487]"
    }, {
      "left" : "if (this.max < value.doubleValue())",
      "right" : "if (this.max < value.doubleValue())",
      "info" : "IfStatement[12524-12633]:IfStatement[12524-12633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12560-12633]:Block[12560-12633]"
    }, {
      "left" : "this.max = value.doubleValue();",
      "right" : "this.max = value.doubleValue();",
      "info" : "ExpressionStatement[12583-12614]:ExpressionStatement[12583-12614]"
    }, {
      "left" : "if (dataset.getRowCount() - 1 == row)",
      "right" : "if (dataset.getRowCount() - 1 == row)",
      "info" : "IfStatement[12742-13827]:IfStatement[12742-13827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12780-13827]:Block[12780-13827]"
    }, {
      "left" : "g2.setPaint(this.groupPaint);",
      "right" : "g2.setPaint(this.groupPaint);",
      "info" : "ExpressionStatement[12803-12832]:ExpressionStatement[12803-12832]"
    }, {
      "left" : "g2.setStroke(this.groupStroke);",
      "right" : "g2.setStroke(this.groupStroke);",
      "info" : "ExpressionStatement[12854-12885]:ExpressionStatement[12854-12885]"
    }, {
      "left" : "double minY = rangeAxis.valueToJava2D(this.min, dataArea, \r\n                            plot.getRangeAxisEdge());",
      "right" : "double minY = rangeAxis.valueToJava2D(this.min, dataArea, \r\n                            plot.getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[12907-13020]:VariableDeclarationStatement[12907-13020]"
    }, {
      "left" : "double maxY = rangeAxis.valueToJava2D(this.max, dataArea, \r\n                            plot.getRangeAxisEdge());",
      "right" : "double maxY = rangeAxis.valueToJava2D(this.max, dataArea, \r\n                            plot.getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[13042-13155]:VariableDeclarationStatement[13042-13155]"
    }, {
      "left" : "if (orient == PlotOrientation.VERTICAL)",
      "right" : "if (orient == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[13199-13808]:IfStatement[13199-13808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13239-13498]:Block[13239-13498]"
    }, {
      "left" : "g2.draw(new Line2D.Double(x1, minY, x1, maxY));",
      "right" : "g2.draw(new Line2D.Double(x1, minY, x1, maxY));",
      "info" : "ExpressionStatement[13266-13313]:ExpressionStatement[13266-13313]"
    }, {
      "left" : "this.minIcon.paintIcon(null, g2, (int) x1, (int) minY);",
      "right" : "this.minIcon.paintIcon(null, g2, (int) x1, (int) minY);",
      "info" : "ExpressionStatement[13339-13394]:ExpressionStatement[13339-13394]"
    }, {
      "left" : "this.maxIcon.paintIcon(null, g2, (int) x1, (int) maxY);",
      "right" : "this.maxIcon.paintIcon(null, g2, (int) x1, (int) maxY);",
      "info" : "ExpressionStatement[13420-13475]:ExpressionStatement[13420-13475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13525-13808]:Block[13525-13808]"
    }, {
      "left" : "g2.draw(new Line2D.Double(minY, x1, maxY, x1));",
      "right" : "g2.draw(new Line2D.Double(minY, x1, maxY, x1));",
      "info" : "ExpressionStatement[13552-13599]:ExpressionStatement[13552-13599]"
    }, {
      "left" : "this.minIcon.paintIcon(null, g2, (int) minY, (int) x1);",
      "right" : "this.minIcon.paintIcon(null, g2, (int) minY, (int) x1);",
      "info" : "ExpressionStatement[13625-13680]:ExpressionStatement[13625-13680]"
    }, {
      "left" : "this.maxIcon.paintIcon(null, g2, (int) maxY, (int) x1);",
      "right" : "this.maxIcon.paintIcon(null, g2, (int) maxY, (int) x1);",
      "info" : "ExpressionStatement[13706-13761]:ExpressionStatement[13706-13761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13861-14046]:Block[13861-14046]"
    }, {
      "left" : "this.lastCategory = column;",
      "right" : "this.lastCategory = column;",
      "info" : "ExpressionStatement[13906-13933]:ExpressionStatement[13906-13933]"
    }, {
      "left" : "this.min = value.doubleValue();",
      "right" : "this.min = value.doubleValue();",
      "info" : "ExpressionStatement[13951-13982]:ExpressionStatement[13951-13982]"
    }, {
      "left" : "this.max = value.doubleValue();",
      "right" : "this.max = value.doubleValue();",
      "info" : "ExpressionStatement[14000-14031]:ExpressionStatement[14000-14031]"
    }, {
      "left" : "if (this.plotLines)",
      "right" : "if (this.plotLines)",
      "info" : "IfStatement[14120-15359]:IfStatement[14120-15359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14140-15359]:Block[14140-15359]"
    }, {
      "left" : "if (column != 0)",
      "right" : "if (column != 0)",
      "info" : "IfStatement[14159-15344]:IfStatement[14159-15344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14176-15344]:Block[14176-15344]"
    }, {
      "left" : "Number previousValue = dataset.getValue(row, column - 1);",
      "right" : "Number previousValue = dataset.getValue(row, column - 1);",
      "info" : "VariableDeclarationStatement[14199-14256]:VariableDeclarationStatement[14199-14256]"
    }, {
      "left" : "if (previousValue != null)",
      "right" : "if (previousValue != null)",
      "info" : "IfStatement[14278-15325]:IfStatement[14278-15325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14305-15325]:Block[14305-15325]"
    }, {
      "left" : "double previous = previousValue.doubleValue();",
      "right" : "double previous = previousValue.doubleValue();",
      "info" : "VariableDeclarationStatement[14383-14429]:VariableDeclarationStatement[14383-14429]"
    }, {
      "left" : "double x0 = domainAxis.getCategoryMiddle(column - 1, \r\n                                getColumnCount(), dataArea,\r\n                                plot.getDomainAxisEdge());",
      "right" : "double x0 = domainAxis.getCategoryMiddle(column - 1, \r\n                                getColumnCount(), dataArea,\r\n                                plot.getDomainAxisEdge());",
      "info" : "VariableDeclarationStatement[14455-14629]:VariableDeclarationStatement[14455-14629]"
    }, {
      "left" : "double y0 = rangeAxis.valueToJava2D(previous, dataArea,\r\n                                plot.getRangeAxisEdge());",
      "right" : "double y0 = rangeAxis.valueToJava2D(previous, dataArea,\r\n                                plot.getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[14655-14769]:VariableDeclarationStatement[14655-14769]"
    }, {
      "left" : "g2.setPaint(getItemPaint(row, column));",
      "right" : "g2.setPaint(getItemPaint(row, column));",
      "info" : "ExpressionStatement[14795-14834]:ExpressionStatement[14795-14834]"
    }, {
      "left" : "g2.setStroke(getItemStroke(row, column));",
      "right" : "g2.setStroke(getItemStroke(row, column));",
      "info" : "ExpressionStatement[14860-14901]:ExpressionStatement[14860-14901]"
    }, {
      "left" : "Line2D line;",
      "right" : "Line2D line;",
      "info" : "VariableDeclarationStatement[14927-14939]:VariableDeclarationStatement[14927-14939]"
    }, {
      "left" : "if (orient == PlotOrientation.VERTICAL)",
      "right" : "if (orient == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[14965-15262]:IfStatement[14965-15262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15005-15104]:Block[15005-15104]"
    }, {
      "left" : "line = new Line2D.Double(x0, y0, x1, y1);",
      "right" : "line = new Line2D.Double(x0, y0, x1, y1);",
      "info" : "ExpressionStatement[15036-15077]:ExpressionStatement[15036-15077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15135-15262]:Block[15135-15262]"
    }, {
      "left" : "line = new Line2D.Double(y0, x0, y1, x1);",
      "right" : "line = new Line2D.Double(y0, x0, y1, x1);",
      "info" : "ExpressionStatement[15166-15207]:ExpressionStatement[15166-15207]"
    }, {
      "left" : "g2.draw(line);",
      "right" : "g2.draw(line);",
      "info" : "ExpressionStatement[15288-15302]:ExpressionStatement[15288-15302]"
    }, {
      "left" : "EntityCollection entities = state.getEntityCollection();",
      "right" : "EntityCollection entities = state.getEntityCollection();",
      "info" : "VariableDeclarationStatement[15450-15506]:VariableDeclarationStatement[15450-15506]"
    }, {
      "left" : "if (entities != null && shape != null)",
      "right" : "if (entities != null && shape != null)",
      "info" : "IfStatement[15520-15646]:IfStatement[15520-15646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15559-15646]:Block[15559-15646]"
    }, {
      "left" : "addItemEntity(entities, dataset, row, column, shape);",
      "right" : "addItemEntity(entities, dataset, row, column, shape);",
      "info" : "ExpressionStatement[15578-15631]:ExpressionStatement[15578-15631]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[16203-16210]:Modifier[16809-16816]"
    }, {
      "left" : "Icon",
      "right" : "Icon",
      "info" : "SimpleType[16211-16215]:SimpleType[16817-16821]"
    }, {
      "left" : "getIcon",
      "right" : "getIcon",
      "info" : "SimpleName[16216-16223]:SimpleName[16822-16829]"
    }, {
      "left" : "Shape shape",
      "right" : "Shape shape",
      "info" : "SingleVariableDeclaration[16224-16235]:SingleVariableDeclaration[16830-16841]"
    }, {
      "left" : "final Paint fillPaint",
      "right" : "final Paint fillPaint",
      "info" : "SingleVariableDeclaration[16237-16258]:SingleVariableDeclaration[16843-16864]"
    }, {
      "left" : "final Paint outlinePaint",
      "right" : "final Paint outlinePaint",
      "info" : "SingleVariableDeclaration[16286-16310]:SingleVariableDeclaration[16892-16916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16312-17233]:Block[16918-17839]"
    }, {
      "left" : "final int width = shape.getBounds().width;",
      "right" : "final int width = shape.getBounds().width;",
      "info" : "VariableDeclarationStatement[16323-16365]:VariableDeclarationStatement[16929-16971]"
    }, {
      "left" : "final int height = shape.getBounds().height;",
      "right" : "final int height = shape.getBounds().height;",
      "info" : "VariableDeclarationStatement[16373-16417]:VariableDeclarationStatement[16979-17023]"
    }, {
      "left" : "final GeneralPath path = new GeneralPath(shape);",
      "right" : "final GeneralPath path = new GeneralPath(shape);",
      "info" : "VariableDeclarationStatement[16425-16473]:VariableDeclarationStatement[17031-17079]"
    }, {
      "left" : "return new Icon() {\r\n          public void paintIcon(Component c, Graphics g, int x, int y) {\r\n              Graphics2D g2 = (Graphics2D) g;\r\n              path.transform(AffineTransform.getTranslateInstance(x, y));\r\n              if (fillPaint != null) {\r\n                  g2.setPaint(fillPaint);\r\n                  g2.fill(path);\r\n              }\r\n              if (outlinePaint != null) {\r\n                  g2.setPaint(outlinePaint);\r\n                  g2.draw(path);\r\n              }\r\n              path.transform(AffineTransform.getTranslateInstance(-x, -y));\r\n        }\r\n\r\n        public int getIconWidth() {\r\n            return width;\r\n        }\r\n\r\n        public int getIconHeight() {\r\n            return height;\r\n        }\r\n\r\n      };",
      "right" : "return new Icon() {\r\n          public void paintIcon(Component c, Graphics g, int x, int y) {\r\n              Graphics2D g2 = (Graphics2D) g;\r\n              path.transform(AffineTransform.getTranslateInstance(x, y));\r\n              if (fillPaint != null) {\r\n                  g2.setPaint(fillPaint);\r\n                  g2.fill(path);\r\n              }\r\n              if (outlinePaint != null) {\r\n                  g2.setPaint(outlinePaint);\r\n                  g2.draw(path);\r\n              }\r\n              path.transform(AffineTransform.getTranslateInstance(-x, -y));\r\n        }\r\n\r\n        public int getIconWidth() {\r\n            return width;\r\n        }\r\n\r\n        public int getIconHeight() {\r\n            return height;\r\n        }\r\n\r\n      };",
      "info" : "ReturnStatement[16481-17226]:ReturnStatement[17087-17832]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16512-16518]:Modifier[17118-17124]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16519-16523]:PrimitiveType[17125-17129]"
    }, {
      "left" : "paintIcon",
      "right" : "paintIcon",
      "info" : "SimpleName[16524-16533]:SimpleName[17130-17139]"
    }, {
      "left" : "Component c",
      "right" : "Component c",
      "info" : "SingleVariableDeclaration[16534-16545]:SingleVariableDeclaration[17140-17151]"
    }, {
      "left" : "Graphics g",
      "right" : "Graphics g",
      "info" : "SingleVariableDeclaration[16547-16557]:SingleVariableDeclaration[17153-17163]"
    }, {
      "left" : "int x",
      "right" : "int x",
      "info" : "SingleVariableDeclaration[16559-16564]:SingleVariableDeclaration[17165-17170]"
    }, {
      "left" : "int y",
      "right" : "int y",
      "info" : "SingleVariableDeclaration[16566-16571]:SingleVariableDeclaration[17172-17177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16573-17058]:Block[17179-17664]"
    }, {
      "left" : "Graphics2D g2 = (Graphics2D) g;",
      "right" : "Graphics2D g2 = (Graphics2D) g;",
      "info" : "VariableDeclarationStatement[16590-16621]:VariableDeclarationStatement[17196-17227]"
    }, {
      "left" : "path.transform(AffineTransform.getTranslateInstance(x, y));",
      "right" : "path.transform(AffineTransform.getTranslateInstance(x, y));",
      "info" : "ExpressionStatement[16637-16696]:ExpressionStatement[17243-17302]"
    }, {
      "left" : "if (fillPaint != null)",
      "right" : "if (fillPaint != null)",
      "info" : "IfStatement[16712-16830]:IfStatement[17318-17436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16735-16830]:Block[17341-17436]"
    }, {
      "left" : "g2.setPaint(fillPaint);",
      "right" : "g2.setPaint(fillPaint);",
      "info" : "ExpressionStatement[16756-16779]:ExpressionStatement[17362-17385]"
    }, {
      "left" : "g2.fill(path);",
      "right" : "g2.fill(path);",
      "info" : "ExpressionStatement[16799-16813]:ExpressionStatement[17405-17419]"
    }, {
      "left" : "if (outlinePaint != null)",
      "right" : "if (outlinePaint != null)",
      "info" : "IfStatement[16846-16970]:IfStatement[17452-17576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16872-16970]:Block[17478-17576]"
    }, {
      "left" : "g2.setPaint(outlinePaint);",
      "right" : "g2.setPaint(outlinePaint);",
      "info" : "ExpressionStatement[16893-16919]:ExpressionStatement[17499-17525]"
    }, {
      "left" : "g2.draw(path);",
      "right" : "g2.draw(path);",
      "info" : "ExpressionStatement[16939-16953]:ExpressionStatement[17545-17559]"
    }, {
      "left" : "path.transform(AffineTransform.getTranslateInstance(-x, -y));",
      "right" : "path.transform(AffineTransform.getTranslateInstance(-x, -y));",
      "info" : "ExpressionStatement[16986-17047]:ExpressionStatement[17592-17653]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17070-17076]:Modifier[17676-17682]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[17077-17080]:PrimitiveType[17683-17686]"
    }, {
      "left" : "getIconWidth",
      "right" : "getIconWidth",
      "info" : "SimpleName[17081-17093]:SimpleName[17687-17699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17096-17135]:Block[17702-17741]"
    }, {
      "left" : "return width;",
      "right" : "return width;",
      "info" : "ReturnStatement[17111-17124]:ReturnStatement[17717-17730]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17147-17153]:Modifier[17753-17759]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[17154-17157]:PrimitiveType[17760-17763]"
    }, {
      "left" : "getIconHeight",
      "right" : "getIconHeight",
      "info" : "SimpleName[17158-17171]:SimpleName[17764-17777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17174-17214]:Block[17780-17820]"
    }, {
      "left" : "return height;",
      "right" : "return height;",
      "info" : "ReturnStatement[17189-17203]:ReturnStatement[17795-17809]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17450-17457]:Modifier[18056-18063]"
    }, {
      "left" : "Icon",
      "right" : "Icon",
      "info" : "SimpleType[17458-17462]:SimpleType[18064-18068]"
    }, {
      "left" : "getIcon",
      "right" : "getIcon",
      "info" : "SimpleName[17463-17470]:SimpleName[18069-18076]"
    }, {
      "left" : "Shape shape",
      "right" : "Shape shape",
      "info" : "SingleVariableDeclaration[17471-17482]:SingleVariableDeclaration[18077-18088]"
    }, {
      "left" : "final boolean fill",
      "right" : "final boolean fill",
      "info" : "SingleVariableDeclaration[17484-17502]:SingleVariableDeclaration[18090-18108]"
    }, {
      "left" : "final boolean outline",
      "right" : "final boolean outline",
      "info" : "SingleVariableDeclaration[17518-17539]:SingleVariableDeclaration[18124-18145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17541-18401]:Block[18147-19007]"
    }, {
      "left" : "final int width = shape.getBounds().width;",
      "right" : "final int width = shape.getBounds().width;",
      "info" : "VariableDeclarationStatement[17552-17594]:VariableDeclarationStatement[18158-18200]"
    }, {
      "left" : "final int height = shape.getBounds().height;",
      "right" : "final int height = shape.getBounds().height;",
      "info" : "VariableDeclarationStatement[17604-17648]:VariableDeclarationStatement[18210-18254]"
    }, {
      "left" : "final GeneralPath path = new GeneralPath(shape);",
      "right" : "final GeneralPath path = new GeneralPath(shape);",
      "info" : "VariableDeclarationStatement[17658-17706]:VariableDeclarationStatement[18264-18312]"
    }, {
      "left" : "return new Icon() {\r\n            public void paintIcon(Component c, Graphics g, int x, int y) {\r\n                Graphics2D g2 = (Graphics2D) g;\r\n                path.transform(AffineTransform.getTranslateInstance(x, y));\r\n                if (fill) {\r\n                    g2.fill(path);\r\n                }\r\n                if (outline) {\r\n                    g2.draw(path);\r\n                }\r\n                path.transform(AffineTransform.getTranslateInstance(-x, -y));\r\n            }\r\n\r\n            public int getIconWidth() {\r\n                return width;\r\n            }\r\n\r\n            public int getIconHeight() {\r\n                return height;\r\n            }\r\n        };",
      "right" : "return new Icon() {\r\n            public void paintIcon(Component c, Graphics g, int x, int y) {\r\n                Graphics2D g2 = (Graphics2D) g;\r\n                path.transform(AffineTransform.getTranslateInstance(x, y));\r\n                if (fill) {\r\n                    g2.fill(path);\r\n                }\r\n                if (outline) {\r\n                    g2.draw(path);\r\n                }\r\n                path.transform(AffineTransform.getTranslateInstance(-x, -y));\r\n            }\r\n\r\n            public int getIconWidth() {\r\n                return width;\r\n            }\r\n\r\n            public int getIconHeight() {\r\n                return height;\r\n            }\r\n        };",
      "info" : "ReturnStatement[17716-18394]:ReturnStatement[18322-19000]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17749-17755]:Modifier[18355-18361]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17756-17760]:PrimitiveType[18362-18366]"
    }, {
      "left" : "paintIcon",
      "right" : "paintIcon",
      "info" : "SimpleName[17761-17770]:SimpleName[18367-18376]"
    }, {
      "left" : "Component c",
      "right" : "Component c",
      "info" : "SingleVariableDeclaration[17771-17782]:SingleVariableDeclaration[18377-18388]"
    }, {
      "left" : "Graphics g",
      "right" : "Graphics g",
      "info" : "SingleVariableDeclaration[17784-17794]:SingleVariableDeclaration[18390-18400]"
    }, {
      "left" : "int x",
      "right" : "int x",
      "info" : "SingleVariableDeclaration[17796-17801]:SingleVariableDeclaration[18402-18407]"
    }, {
      "left" : "int y",
      "right" : "int y",
      "info" : "SingleVariableDeclaration[17803-17808]:SingleVariableDeclaration[18409-18414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17810-18202]:Block[18416-18808]"
    }, {
      "left" : "Graphics2D g2 = (Graphics2D) g;",
      "right" : "Graphics2D g2 = (Graphics2D) g;",
      "info" : "VariableDeclarationStatement[17829-17860]:VariableDeclarationStatement[18435-18466]"
    }, {
      "left" : "path.transform(AffineTransform.getTranslateInstance(x, y));",
      "right" : "path.transform(AffineTransform.getTranslateInstance(x, y));",
      "info" : "ExpressionStatement[17878-17937]:ExpressionStatement[18484-18543]"
    }, {
      "left" : "if (fill)",
      "right" : "if (fill)",
      "info" : "IfStatement[17955-18021]:IfStatement[18561-18627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17965-18021]:Block[18571-18627]"
    }, {
      "left" : "g2.fill(path);",
      "right" : "g2.fill(path);",
      "info" : "ExpressionStatement[17988-18002]:ExpressionStatement[18594-18608]"
    }, {
      "left" : "if (outline)",
      "right" : "if (outline)",
      "info" : "IfStatement[18039-18108]:IfStatement[18645-18714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18052-18108]:Block[18658-18714]"
    }, {
      "left" : "g2.draw(path);",
      "right" : "g2.draw(path);",
      "info" : "ExpressionStatement[18075-18089]:ExpressionStatement[18681-18695]"
    }, {
      "left" : "path.transform(AffineTransform.getTranslateInstance(-x, -y));",
      "right" : "path.transform(AffineTransform.getTranslateInstance(-x, -y));",
      "info" : "ExpressionStatement[18126-18187]:ExpressionStatement[18732-18793]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18218-18224]:Modifier[18824-18830]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[18225-18228]:PrimitiveType[18831-18834]"
    }, {
      "left" : "getIconWidth",
      "right" : "getIconWidth",
      "info" : "SimpleName[18229-18241]:SimpleName[18835-18847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18244-18291]:Block[18850-18897]"
    }, {
      "left" : "return width;",
      "right" : "return width;",
      "info" : "ReturnStatement[18263-18276]:ReturnStatement[18869-18882]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18307-18313]:Modifier[18913-18919]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[18314-18317]:PrimitiveType[18920-18923]"
    }, {
      "left" : "getIconHeight",
      "right" : "getIconHeight",
      "info" : "SimpleName[18318-18331]:SimpleName[18924-18937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18334-18382]:Block[18940-18988]"
    }, {
      "left" : "return height;",
      "right" : "return height;",
      "info" : "ReturnStatement[18353-18367]:ReturnStatement[18959-18973]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18584-18591]:Modifier[19190-19197]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18592-18596]:PrimitiveType[19198-19202]"
    }, {
      "left" : "writeObject",
      "right" : "writeObject",
      "info" : "SimpleName[18597-18608]:SimpleName[19203-19214]"
    }, {
      "left" : "ObjectOutputStream stream",
      "right" : "ObjectOutputStream stream",
      "info" : "SingleVariableDeclaration[18609-18634]:SingleVariableDeclaration[19215-19240]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18643-18654]:SimpleType[19249-19260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18655-18827]:Block[19261-19433]"
    }, {
      "left" : "stream.defaultWriteObject();",
      "right" : "stream.defaultWriteObject();",
      "info" : "ExpressionStatement[18666-18694]:ExpressionStatement[19272-19300]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.groupStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.groupStroke, stream);",
      "info" : "ExpressionStatement[18704-18758]:ExpressionStatement[19310-19364]"
    }, {
      "left" : "SerialUtilities.writePaint(this.groupPaint, stream);",
      "right" : "SerialUtilities.writePaint(this.groupPaint, stream);",
      "info" : "ExpressionStatement[18768-18820]:ExpressionStatement[19374-19426]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19082-19089]:Modifier[19688-19695]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19090-19094]:PrimitiveType[19696-19700]"
    }, {
      "left" : "readObject",
      "right" : "readObject",
      "info" : "SimpleName[19095-19105]:SimpleName[19701-19711]"
    }, {
      "left" : "ObjectInputStream stream",
      "right" : "ObjectInputStream stream",
      "info" : "SingleVariableDeclaration[19106-19130]:SingleVariableDeclaration[19712-19736]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[19149-19160]:SimpleType[19755-19766]"
    }, {
      "left" : "ClassNotFoundException",
      "right" : "ClassNotFoundException",
      "info" : "SimpleType[19162-19184]:SimpleType[19768-19790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19185-19693]:Block[19791-20299]"
    }, {
      "left" : "stream.defaultReadObject();",
      "right" : "stream.defaultReadObject();",
      "info" : "ExpressionStatement[19196-19223]:ExpressionStatement[19802-19829]"
    }, {
      "left" : "this.groupStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.groupStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[19233-19287]:ExpressionStatement[19839-19893]"
    }, {
      "left" : "this.groupPaint = SerialUtilities.readPaint(stream);",
      "right" : "this.groupPaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[19297-19349]:ExpressionStatement[19903-19955]"
    }, {
      "left" : "this.minIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0, 360, \r\n                Arc2D.OPEN), null, Color.black);",
      "right" : "this.minIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0, 360, \r\n                Arc2D.OPEN), null, Color.black);",
      "info" : "ExpressionStatement[19371-19483]:ExpressionStatement[19977-20089]"
    }, {
      "left" : "this.maxIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0, 360, \r\n                Arc2D.OPEN), null, Color.black);",
      "right" : "this.maxIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0, 360, \r\n                Arc2D.OPEN), null, Color.black);",
      "info" : "ExpressionStatement[19493-19605]:ExpressionStatement[20099-20211]"
    }, {
      "left" : "this.objectIcon = getIcon(new Line2D.Double(-4, 0, 4, 0), false, true);",
      "right" : "this.objectIcon = getIcon(new Line2D.Double(-4, 0, 4, 0), false, true);",
      "info" : "ExpressionStatement[19615-19686]:ExpressionStatement[20221-20292]"
    } ]
  },
  "interFileMappings" : { }
}