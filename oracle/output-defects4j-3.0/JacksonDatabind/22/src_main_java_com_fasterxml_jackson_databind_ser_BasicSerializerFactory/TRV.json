{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "protected final static HashMap<String, JsonSerializer<?>> _concrete =\n        new HashMap<String, JsonSerializer<?>>();",
      "right" : "protected final static HashMap<String, JsonSerializer<?>> _concrete =\n        new HashMap<String, JsonSerializer<?>>();",
      "info" : "FieldDeclaration[1814-2145]:FieldDeclaration[1814-2145]"
    }, {
      "left" : "protected final static HashMap<String, Class<? extends JsonSerializer<?>>> _concreteLazy =\n        new HashMap<String, Class<? extends JsonSerializer<?>>>();",
      "right" : "protected final static HashMap<String, Class<? extends JsonSerializer<?>>> _concreteLazy =\n        new HashMap<String, Class<? extends JsonSerializer<?>>>();",
      "info" : "FieldDeclaration[2155-2496]:FieldDeclaration[2155-2496]"
    }, {
      "left" : "protected final SerializerFactoryConfig _factoryConfig;",
      "right" : "protected final SerializerFactoryConfig _factoryConfig;",
      "info" : "FieldDeclaration[5358-5585]:FieldDeclaration[5358-5585]"
    }, {
      "left" : "protected BasicSerializerFactory(SerializerFactoryConfig config)",
      "right" : "protected BasicSerializerFactory(SerializerFactoryConfig config)",
      "info" : "MethodDeclaration[5753-6097]:MethodDeclaration[5753-6097]"
    }, {
      "left" : "public SerializerFactoryConfig getFactoryConfig()",
      "right" : "public SerializerFactoryConfig getFactoryConfig()",
      "info" : "MethodDeclaration[6107-6480]:MethodDeclaration[6107-6480]"
    }, {
      "left" : "public abstract SerializerFactory withConfig(SerializerFactoryConfig config);",
      "right" : "public abstract SerializerFactory withConfig(SerializerFactoryConfig config);",
      "info" : "MethodDeclaration[6486-7109]:MethodDeclaration[6486-7109]"
    }, {
      "left" : "public final SerializerFactory withAdditionalSerializers(Serializers additional)",
      "right" : "public final SerializerFactory withAdditionalSerializers(Serializers additional)",
      "info" : "MethodDeclaration[7115-7423]:MethodDeclaration[7115-7423]"
    }, {
      "left" : "public final SerializerFactory withAdditionalKeySerializers(Serializers additional)",
      "right" : "public final SerializerFactory withAdditionalKeySerializers(Serializers additional)",
      "info" : "MethodDeclaration[7429-7747]:MethodDeclaration[7429-7747]"
    }, {
      "left" : "public final SerializerFactory withSerializerModifier(BeanSerializerModifier modifier)",
      "right" : "public final SerializerFactory withSerializerModifier(BeanSerializerModifier modifier)",
      "info" : "MethodDeclaration[7757-8068]:MethodDeclaration[7757-8068]"
    }, {
      "left" : "public abstract JsonSerializer<Object> createSerializer(SerializerProvider prov,\n            JavaType type)\n        throws JsonMappingException;",
      "right" : "public abstract JsonSerializer<Object> createSerializer(SerializerProvider prov,\n            JavaType type)\n        throws JsonMappingException;",
      "info" : "MethodDeclaration[8286-8444]:MethodDeclaration[8286-8444]"
    }, {
      "left" : "public JsonSerializer<Object> createKeySerializer(SerializationConfig config,\n            JavaType keyType, JsonSerializer<Object> defaultImpl)",
      "right" : "public JsonSerializer<Object> createKeySerializer(SerializationConfig config,\n            JavaType keyType, JsonSerializer<Object> defaultImpl)",
      "info" : "MethodDeclaration[8450-10848]:MethodDeclaration[8450-10848]"
    }, {
      "left" : "public TypeSerializer createTypeSerializer(SerializationConfig config,\n            JavaType baseType)",
      "right" : "public TypeSerializer createTypeSerializer(SerializationConfig config,\n            JavaType baseType)",
      "info" : "MethodDeclaration[10854-12115]:MethodDeclaration[10854-12115]"
    }, {
      "left" : "protected abstract Iterable<Serializers> customSerializers();",
      "right" : "protected abstract Iterable<Serializers> customSerializers();",
      "info" : "MethodDeclaration[12310-12371]:MethodDeclaration[12310-12371]"
    }, {
      "left" : "protected final JsonSerializer<?> findSerializerByLookup(JavaType type,\n            SerializationConfig config, BeanDescription beanDesc,\n            boolean staticTyping)",
      "right" : "protected final JsonSerializer<?> findSerializerByLookup(JavaType type,\n            SerializationConfig config, BeanDescription beanDesc,\n            boolean staticTyping)",
      "info" : "MethodDeclaration[12578-13756]:MethodDeclaration[12578-13756]"
    }, {
      "left" : "protected final JsonSerializer<?> findSerializerByAnnotations(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected final JsonSerializer<?> findSerializerByAnnotations(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[13762-15211]:MethodDeclaration[13762-15211]"
    }, {
      "left" : "protected final JsonSerializer<?> findSerializerByPrimaryType(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc,\n            boolean staticTyping)\n        throws JsonMappingException",
      "right" : "protected final JsonSerializer<?> findSerializerByPrimaryType(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc,\n            boolean staticTyping)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[15221-18234]:MethodDeclaration[15221-18234]"
    }, {
      "left" : "protected JsonSerializer<?> findOptionalStdSerializer(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc, boolean staticTyping)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> findOptionalStdSerializer(SerializerProvider prov, \n            JavaType type, BeanDescription beanDesc, boolean staticTyping)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[18240-18646]:MethodDeclaration[18240-18646]"
    }, {
      "left" : "protected final JsonSerializer<?> findSerializerByAddonType(SerializationConfig config,\n            JavaType javaType, BeanDescription beanDesc, boolean staticTyping) throws JsonMappingException",
      "right" : "protected final JsonSerializer<?> findSerializerByAddonType(SerializationConfig config,\n            JavaType javaType, BeanDescription beanDesc, boolean staticTyping) throws JsonMappingException",
      "info" : "MethodDeclaration[18660-20185]:MethodDeclaration[18660-20185]"
    }, {
      "left" : "protected JsonSerializer<Object> findSerializerFromAnnotation(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<Object> findSerializerFromAnnotation(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[20195-21033]:MethodDeclaration[20195-21033]"
    }, {
      "left" : "protected JsonSerializer<?> findConvertingSerializer(SerializerProvider prov,\n            Annotated a, JsonSerializer<?> ser)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> findConvertingSerializer(SerializerProvider prov,\n            Annotated a, JsonSerializer<?> ser)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[21039-21804]:MethodDeclaration[21039-21804]"
    }, {
      "left" : "protected Converter<Object,Object> findConverter(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "right" : "protected Converter<Object,Object> findConverter(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[21810-22162]:MethodDeclaration[21810-22162]"
    }, {
      "left" : "protected boolean isIndexedList(Class<?> cls)",
      "right" : "protected boolean isIndexedList(Class<?> cls)",
      "info" : "MethodDeclaration[30556-30670]:MethodDeclaration[31111-31225]"
    }, {
      "left" : "public  ContainerSerializer<?> buildIndexedListSerializer(JavaType elemType,\n            boolean staticTyping, TypeSerializer vts, JsonSerializer<Object> valueSerializer)",
      "right" : "public  ContainerSerializer<?> buildIndexedListSerializer(JavaType elemType,\n            boolean staticTyping, TypeSerializer vts, JsonSerializer<Object> valueSerializer)",
      "info" : "MethodDeclaration[30676-30942]:MethodDeclaration[31231-31497]"
    }, {
      "left" : "public ContainerSerializer<?> buildCollectionSerializer(JavaType elemType,\n            boolean staticTyping, TypeSerializer vts, JsonSerializer<Object> valueSerializer)",
      "right" : "public ContainerSerializer<?> buildCollectionSerializer(JavaType elemType,\n            boolean staticTyping, TypeSerializer vts, JsonSerializer<Object> valueSerializer)",
      "info" : "MethodDeclaration[30947-31210]:MethodDeclaration[31502-31765]"
    }, {
      "left" : "public JsonSerializer<?> buildEnumSetSerializer(JavaType enumType)",
      "right" : "public JsonSerializer<?> buildEnumSetSerializer(JavaType enumType)",
      "info" : "MethodDeclaration[31216-31338]:MethodDeclaration[31771-31893]"
    }, {
      "left" : "protected Object findSuppressableContentValue(SerializationConfig config,\n            JavaType contentType, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected Object findSuppressableContentValue(SerializationConfig config,\n            JavaType contentType, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[34566-35493]:MethodDeclaration[35308-36235]"
    }, {
      "left" : "protected JsonSerializer<?> buildIteratorSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType valueType)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildIteratorSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType valueType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[38142-38515]:MethodDeclaration[38936-39309]"
    }, {
      "left" : "// since 2.5\n    protected JsonSerializer<?> buildIteratorSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping) throws JsonMappingException",
      "right" : "// since 2.5\n    protected JsonSerializer<?> buildIteratorSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping) throws JsonMappingException",
      "info" : "MethodDeclaration[38521-39039]:MethodDeclaration[39315-39833]"
    }, {
      "left" : "protected JsonSerializer<?> buildIterableSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType valueType)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildIterableSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType valueType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[39045-39418]:MethodDeclaration[39839-40212]"
    }, {
      "left" : "// since 2.5\n    protected JsonSerializer<?> buildIterableSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc,\n            boolean staticTyping)\n        throws JsonMappingException",
      "right" : "// since 2.5\n    protected JsonSerializer<?> buildIterableSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc,\n            boolean staticTyping)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[39424-39962]:MethodDeclaration[40218-40756]"
    }, {
      "left" : "protected JsonSerializer<?> buildMapEntrySerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType keyType, JavaType valueType)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildMapEntrySerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping,\n            JavaType keyType, JavaType valueType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[39972-40405]:MethodDeclaration[40766-41199]"
    }, {
      "left" : "protected JsonSerializer<?> buildEnumSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> buildEnumSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[40411-41850]:MethodDeclaration[41205-42644]"
    }, {
      "left" : "protected <T extends JavaType> T modifyTypeByAnnotation(SerializationConfig config,\n            Annotated a, T type)",
      "right" : "protected <T extends JavaType> T modifyTypeByAnnotation(SerializationConfig config,\n            Annotated a, T type)",
      "info" : "MethodDeclaration[42032-42887]:MethodDeclaration[42826-43681]"
    }, {
      "left" : "protected static <T extends JavaType> T modifySecondaryTypesByAnnotation(SerializationConfig config,\n            Annotated a, T type)",
      "right" : "protected static <T extends JavaType> T modifySecondaryTypesByAnnotation(SerializationConfig config,\n            Annotated a, T type)",
      "info" : "MethodDeclaration[42893-44480]:MethodDeclaration[43687-45274]"
    }, {
      "left" : "protected JsonSerializer<Object> _findKeySerializer(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<Object> _findKeySerializer(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[44486-45114]:MethodDeclaration[45280-45908]"
    }, {
      "left" : "protected JsonSerializer<Object> _findContentSerializer(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<Object> _findContentSerializer(SerializerProvider prov,\n            Annotated a)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[45120-45770]:MethodDeclaration[45914-46564]"
    }, {
      "left" : "protected Object findFilterId(SerializationConfig config, BeanDescription beanDesc)",
      "right" : "protected Object findFilterId(SerializationConfig config, BeanDescription beanDesc)",
      "info" : "MethodDeclaration[45776-46098]:MethodDeclaration[46570-46892]"
    }, {
      "left" : "protected boolean usesStaticTyping(SerializationConfig config,\n            BeanDescription beanDesc, TypeSerializer typeSer)",
      "right" : "protected boolean usesStaticTyping(SerializationConfig config,\n            BeanDescription beanDesc, TypeSerializer typeSer)",
      "info" : "MethodDeclaration[46104-47187]:MethodDeclaration[46898-47981]"
    }, {
      "left" : "protected Class<?> _verifyAsClass(Object src, String methodName, Class<?> noneClass)",
      "right" : "protected Class<?> _verifyAsClass(Object src, String methodName, Class<?> noneClass)",
      "info" : "MethodDeclaration[47193-47760]:MethodDeclaration[47987-48554]"
    } ],
    "mappings" : [
 {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5941-5950]:Modifier[5941-5950]"
    }, {
      "left" : "BasicSerializerFactory",
      "right" : "BasicSerializerFactory",
      "info" : "SimpleName[5951-5973]:SimpleName[5951-5973]"
    }, {
      "left" : "SerializerFactoryConfig config",
      "right" : "SerializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[5974-6004]:SingleVariableDeclaration[5974-6004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6006-6097]:Block[6006-6097]"
    }, {
      "left" : "_factoryConfig = (config == null) ? new SerializerFactoryConfig() : config;",
      "right" : "_factoryConfig = (config == null) ? new SerializerFactoryConfig() : config;",
      "info" : "ExpressionStatement[6016-6091]:ExpressionStatement[6016-6091]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6392-6398]:Modifier[6392-6398]"
    }, {
      "left" : "SerializerFactoryConfig",
      "right" : "SerializerFactoryConfig",
      "info" : "SimpleType[6399-6422]:SimpleType[6399-6422]"
    }, {
      "left" : "getFactoryConfig",
      "right" : "getFactoryConfig",
      "info" : "SimpleName[6423-6439]:SimpleName[6423-6439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6442-6480]:Block[6442-6480]"
    }, {
      "left" : "return _factoryConfig;",
      "right" : "return _factoryConfig;",
      "info" : "ReturnStatement[6452-6474]:ReturnStatement[6452-6474]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7032-7038]:Modifier[7032-7038]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[7039-7047]:Modifier[7039-7047]"
    }, {
      "left" : "SerializerFactory",
      "right" : "SerializerFactory",
      "info" : "SimpleType[7048-7065]:SimpleType[7048-7065]"
    }, {
      "left" : "withConfig",
      "right" : "withConfig",
      "info" : "SimpleName[7066-7076]:SimpleName[7066-7076]"
    }, {
      "left" : "SerializerFactoryConfig config",
      "right" : "SerializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[7077-7107]:SingleVariableDeclaration[7077-7107]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7240-7249]:MarkerAnnotation[7240-7249]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7254-7260]:Modifier[7254-7260]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[7261-7266]:Modifier[7261-7266]"
    }, {
      "left" : "SerializerFactory",
      "right" : "SerializerFactory",
      "info" : "SimpleType[7267-7284]:SimpleType[7267-7284]"
    }, {
      "left" : "withAdditionalSerializers",
      "right" : "withAdditionalSerializers",
      "info" : "SimpleName[7285-7310]:SimpleName[7285-7310]"
    }, {
      "left" : "Serializers additional",
      "right" : "Serializers additional",
      "info" : "SingleVariableDeclaration[7311-7333]:SingleVariableDeclaration[7311-7333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7335-7423]:Block[7335-7423]"
    }, {
      "left" : "return withConfig(_factoryConfig.withAdditionalSerializers(additional));",
      "right" : "return withConfig(_factoryConfig.withAdditionalSerializers(additional));",
      "info" : "ReturnStatement[7345-7417]:ReturnStatement[7345-7417]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7558-7567]:MarkerAnnotation[7558-7567]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7572-7578]:Modifier[7572-7578]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[7579-7584]:Modifier[7579-7584]"
    }, {
      "left" : "SerializerFactory",
      "right" : "SerializerFactory",
      "info" : "SimpleType[7585-7602]:SimpleType[7585-7602]"
    }, {
      "left" : "withAdditionalKeySerializers",
      "right" : "withAdditionalKeySerializers",
      "info" : "SimpleName[7603-7631]:SimpleName[7603-7631]"
    }, {
      "left" : "Serializers additional",
      "right" : "Serializers additional",
      "info" : "SingleVariableDeclaration[7632-7654]:SingleVariableDeclaration[7632-7654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7656-7747]:Block[7656-7747]"
    }, {
      "left" : "return withConfig(_factoryConfig.withAdditionalKeySerializers(additional));",
      "right" : "return withConfig(_factoryConfig.withAdditionalKeySerializers(additional));",
      "info" : "ReturnStatement[7666-7741]:ReturnStatement[7666-7741]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7884-7893]:MarkerAnnotation[7884-7893]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7898-7904]:Modifier[7898-7904]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[7905-7910]:Modifier[7905-7910]"
    }, {
      "left" : "SerializerFactory",
      "right" : "SerializerFactory",
      "info" : "SimpleType[7911-7928]:SimpleType[7911-7928]"
    }, {
      "left" : "withSerializerModifier",
      "right" : "withSerializerModifier",
      "info" : "SimpleName[7929-7951]:SimpleName[7929-7951]"
    }, {
      "left" : "BeanSerializerModifier modifier",
      "right" : "BeanSerializerModifier modifier",
      "info" : "SingleVariableDeclaration[7952-7983]:SingleVariableDeclaration[7952-7983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7985-8068]:Block[7985-8068]"
    }, {
      "left" : "return withConfig(_factoryConfig.withSerializerModifier(modifier));",
      "right" : "return withConfig(_factoryConfig.withSerializerModifier(modifier));",
      "info" : "ReturnStatement[7995-8062]:ReturnStatement[7995-8062]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8286-8295]:MarkerAnnotation[8286-8295]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8300-8306]:Modifier[8300-8306]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[8307-8315]:Modifier[8307-8315]"
    }, {
      "left" : "JsonSerializer<Object>",
      "right" : "JsonSerializer<Object>",
      "info" : "ParameterizedType[8316-8338]:ParameterizedType[8316-8338]"
    }, {
      "left" : "createSerializer",
      "right" : "createSerializer",
      "info" : "SimpleName[8339-8355]:SimpleName[8339-8355]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[8356-8379]:SingleVariableDeclaration[8356-8379]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[8393-8406]:SingleVariableDeclaration[8393-8406]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[8423-8443]:SimpleType[8423-8443]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8450-8459]:MarkerAnnotation[8450-8459]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[8464-8494]:SingleMemberAnnotation[8464-8494]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8499-8505]:Modifier[8499-8505]"
    }, {
      "left" : "JsonSerializer<Object>",
      "right" : "JsonSerializer<Object>",
      "info" : "ParameterizedType[8506-8528]:ParameterizedType[8506-8528]"
    }, {
      "left" : "createKeySerializer",
      "right" : "createKeySerializer",
      "info" : "SimpleName[8529-8548]:SimpleName[8529-8548]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[8549-8575]:SingleVariableDeclaration[8549-8575]"
    }, {
      "left" : "JavaType keyType",
      "right" : "JavaType keyType",
      "info" : "SingleVariableDeclaration[8589-8605]:SingleVariableDeclaration[8589-8605]"
    }, {
      "left" : "JsonSerializer<Object> defaultImpl",
      "right" : "JsonSerializer<Object> defaultImpl",
      "info" : "SingleVariableDeclaration[8607-8641]:SingleVariableDeclaration[8607-8641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8647-10848]:Block[8647-10848]"
    }, {
      "left" : "BeanDescription beanDesc = config.introspectClassAnnotations(keyType.getRawClass());",
      "right" : "BeanDescription beanDesc = config.introspectClassAnnotations(keyType.getRawClass());",
      "info" : "VariableDeclarationStatement[8785-8869]:VariableDeclarationStatement[8785-8869]"
    }, {
      "left" : "JsonSerializer<?> ser = null;",
      "right" : "JsonSerializer<?> ser = null;",
      "info" : "VariableDeclarationStatement[8878-8907]:VariableDeclarationStatement[8878-8907]"
    }, {
      "left" : "if (_factoryConfig.hasKeySerializers())",
      "right" : "if (_factoryConfig.hasKeySerializers())",
      "info" : "IfStatement[9007-9383]:IfStatement[9007-9383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9047-9383]:Block[9047-9383]"
    }, {
      "left" : "for (Serializers serializers : _factoryConfig.keySerializers())",
      "right" : "for (Serializers serializers : _factoryConfig.keySerializers())",
      "info" : "EnhancedForStatement[9137-9373]:EnhancedForStatement[9137-9373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9201-9373]:Block[9201-9373]"
    }, {
      "left" : "ser = serializers.findSerializer(config, keyType, beanDesc);",
      "right" : "ser = serializers.findSerializer(config, keyType, beanDesc);",
      "info" : "ExpressionStatement[9219-9279]:ExpressionStatement[9219-9279]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[9296-9359]:IfStatement[9296-9359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9313-9359]:Block[9313-9359]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9335-9341]:BreakStatement[9335-9341]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[9392-10498]:IfStatement[9392-10498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9409-10498]:Block[9409-10498]"
    }, {
      "left" : "ser = defaultImpl;",
      "right" : "ser = defaultImpl;",
      "info" : "ExpressionStatement[9423-9441]:ExpressionStatement[9423-9441]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[9454-10488]:IfStatement[9454-10488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9471-10488]:Block[9471-10488]"
    }, {
      "left" : "ser = StdKeySerializers.getStdKeySerializer(config, keyType.getRawClass(), false);",
      "right" : "ser = StdKeySerializers.getStdKeySerializer(config, keyType.getRawClass(), false);",
      "info" : "ExpressionStatement[9489-9571]:ExpressionStatement[9489-9571]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[9661-10474]:IfStatement[9661-10474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9678-10474]:Block[9678-10474]"
    }, {
      "left" : "beanDesc = config.introspect(keyType);",
      "right" : "beanDesc = config.introspect(keyType);",
      "info" : "ExpressionStatement[9700-9738]:ExpressionStatement[9700-9738]"
    }, {
      "left" : "AnnotatedMethod am = beanDesc.findJsonValueMethod();",
      "right" : "AnnotatedMethod am = beanDesc.findJsonValueMethod();",
      "info" : "VariableDeclarationStatement[9759-9811]:VariableDeclarationStatement[9759-9811]"
    }, {
      "left" : "if (am != null)",
      "right" : "if (am != null)",
      "info" : "IfStatement[9832-10456]:IfStatement[9832-10456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9848-10365]:Block[9848-10365]"
    }, {
      "left" : "final Class<?> rawType = am.getRawReturnType();",
      "right" : "final Class<?> rawType = am.getRawReturnType();",
      "info" : "VariableDeclarationStatement[9874-9921]:VariableDeclarationStatement[9874-9921]"
    }, {
      "left" : "JsonSerializer<?> delegate = StdKeySerializers.getStdKeySerializer(config,\n                                rawType, true);",
      "right" : "JsonSerializer<?> delegate = StdKeySerializers.getStdKeySerializer(config,\n                                rawType, true);",
      "info" : "VariableDeclarationStatement[9946-10068]:VariableDeclarationStatement[9946-10068]"
    }, {
      "left" : "Method m = am.getAnnotated();",
      "right" : "Method m = am.getAnnotated();",
      "info" : "VariableDeclarationStatement[10093-10122]:VariableDeclarationStatement[10093-10122]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[10147-10275]:IfStatement[10147-10275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10188-10275]:Block[10188-10275]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess(m);",
      "right" : "ClassUtil.checkAndFixAccess(m);",
      "info" : "ExpressionStatement[10218-10249]:ExpressionStatement[10218-10249]"
    }, {
      "left" : "ser = new JsonValueSerializer(m, delegate);",
      "right" : "ser = new JsonValueSerializer(m, delegate);",
      "info" : "ExpressionStatement[10300-10343]:ExpressionStatement[10300-10343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10371-10456]:Block[10371-10456]"
    }, {
      "left" : "ser = StdKeySerializers.getDefault();",
      "right" : "ser = StdKeySerializers.getDefault();",
      "info" : "ExpressionStatement[10397-10434]:ExpressionStatement[10397-10434]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[10562-10797]:IfStatement[10562-10797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10607-10797]:Block[10607-10797]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[10621-10787]:EnhancedForStatement[10621-10787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10693-10787]:Block[10693-10787]"
    }, {
      "left" : "ser = mod.modifyKeySerializer(config, keyType, beanDesc, ser);",
      "right" : "ser = mod.modifyKeySerializer(config, keyType, beanDesc, ser);",
      "info" : "ExpressionStatement[10711-10773]:ExpressionStatement[10711-10773]"
    }, {
      "left" : "return (JsonSerializer<Object>) ser;",
      "right" : "return (JsonSerializer<Object>) ser;",
      "info" : "ReturnStatement[10806-10842]:ReturnStatement[10806-10842]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11045-11054]:MarkerAnnotation[11045-11054]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11059-11065]:Modifier[11059-11065]"
    }, {
      "left" : "TypeSerializer",
      "right" : "TypeSerializer",
      "info" : "SimpleType[11066-11080]:SimpleType[11066-11080]"
    }, {
      "left" : "createTypeSerializer",
      "right" : "createTypeSerializer",
      "info" : "SimpleName[11081-11101]:SimpleName[11081-11101]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[11102-11128]:SingleVariableDeclaration[11102-11128]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[11142-11159]:SingleVariableDeclaration[11142-11159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11165-12115]:Block[11165-12115]"
    }, {
      "left" : "BeanDescription bean = config.introspectClassAnnotations(baseType.getRawClass());",
      "right" : "BeanDescription bean = config.introspectClassAnnotations(baseType.getRawClass());",
      "info" : "VariableDeclarationStatement[11175-11256]:VariableDeclarationStatement[11175-11256]"
    }, {
      "left" : "AnnotatedClass ac = bean.getClassInfo();",
      "right" : "AnnotatedClass ac = bean.getClassInfo();",
      "info" : "VariableDeclarationStatement[11265-11305]:VariableDeclarationStatement[11265-11305]"
    }, {
      "left" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[11314-11377]:VariableDeclarationStatement[11314-11377]"
    }, {
      "left" : "TypeResolverBuilder<?> b = ai.findTypeResolver(config, ac, baseType);",
      "right" : "TypeResolverBuilder<?> b = ai.findTypeResolver(config, ac, baseType);",
      "info" : "VariableDeclarationStatement[11386-11455]:VariableDeclarationStatement[11386-11455]"
    }, {
      "left" : "Collection<NamedType> subtypes = null;",
      "right" : "Collection<NamedType> subtypes = null;",
      "info" : "VariableDeclarationStatement[11615-11653]:VariableDeclarationStatement[11615-11653]"
    }, {
      "left" : "if (b == null)",
      "right" : "if (b == null)",
      "info" : "IfStatement[11662-11852]:IfStatement[11662-11852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11677-11738]:Block[11677-11738]"
    }, {
      "left" : "b = config.getDefaultTyper(baseType);",
      "right" : "b = config.getDefaultTyper(baseType);",
      "info" : "ExpressionStatement[11691-11728]:ExpressionStatement[11691-11728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11744-11852]:Block[11744-11852]"
    }, {
      "left" : "subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByClass(config, ac);",
      "right" : "subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByClass(config, ac);",
      "info" : "ExpressionStatement[11758-11842]:ExpressionStatement[11758-11842]"
    }, {
      "left" : "if (b == null)",
      "right" : "if (b == null)",
      "info" : "IfStatement[11861-11912]:IfStatement[11861-11912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11876-11912]:Block[11876-11912]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11890-11902]:ReturnStatement[11890-11902]"
    }, {
      "left" : "return b.buildTypeSerializer(config, baseType, subtypes);",
      "right" : "return b.buildTypeSerializer(config, baseType, subtypes);",
      "info" : "ReturnStatement[12052-12109]:ReturnStatement[12052-12109]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[12310-12319]:Modifier[12310-12319]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[12320-12328]:Modifier[12320-12328]"
    }, {
      "left" : "Iterable<Serializers>",
      "right" : "Iterable<Serializers>",
      "info" : "ParameterizedType[12329-12350]:ParameterizedType[12329-12350]"
    }, {
      "left" : "customSerializers",
      "right" : "customSerializers",
      "info" : "SimpleName[12351-12368]:SimpleName[12351-12368]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[12727-12736]:Modifier[12727-12736]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[12737-12742]:Modifier[12737-12742]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[12743-12760]:ParameterizedType[12743-12760]"
    }, {
      "left" : "findSerializerByLookup",
      "right" : "findSerializerByLookup",
      "info" : "SimpleName[12761-12783]:SimpleName[12761-12783]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[12784-12797]:SingleVariableDeclaration[12784-12797]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[12811-12837]:SingleVariableDeclaration[12811-12837]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[12839-12863]:SingleVariableDeclaration[12839-12863]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[12877-12897]:SingleVariableDeclaration[12877-12897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12903-13756]:Block[12903-13756]"
    }, {
      "left" : "Class<?> raw = type.getRawClass();",
      "right" : "Class<?> raw = type.getRawClass();",
      "info" : "VariableDeclarationStatement[12913-12947]:VariableDeclarationStatement[12913-12947]"
    }, {
      "left" : "String clsName = raw.getName();",
      "right" : "String clsName = raw.getName();",
      "info" : "VariableDeclarationStatement[12956-12987]:VariableDeclarationStatement[12956-12987]"
    }, {
      "left" : "if (type.isReferenceType())",
      "right" : "if (type.isReferenceType())",
      "info" : "IfStatement[12996-13190]:IfStatement[12996-13190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13024-13190]:Block[13024-13190]"
    }, {
      "left" : "if (type.isTypeOrSubTypeOf(AtomicReference.class))",
      "right" : "if (type.isTypeOrSubTypeOf(AtomicReference.class))",
      "info" : "IfStatement[13038-13180]:IfStatement[13038-13180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13089-13180]:Block[13089-13180]"
    }, {
      "left" : "return new AtomicReferenceSerializer((ReferenceType) type);",
      "right" : "return new AtomicReferenceSerializer((ReferenceType) type);",
      "info" : "ReturnStatement[13107-13166]:ReturnStatement[13107-13166]"
    }, {
      "left" : "JsonSerializer<?> ser = _concrete.get(clsName);",
      "right" : "JsonSerializer<?> ser = _concrete.get(clsName);",
      "info" : "VariableDeclarationStatement[13199-13246]:VariableDeclarationStatement[13199-13246]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[13255-13730]:IfStatement[13255-13730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13272-13730]:Block[13272-13730]"
    }, {
      "left" : "Class<? extends JsonSerializer<?>> serClass = _concreteLazy.get(clsName);",
      "right" : "Class<? extends JsonSerializer<?>> serClass = _concreteLazy.get(clsName);",
      "info" : "VariableDeclarationStatement[13286-13359]:VariableDeclarationStatement[13286-13359]"
    }, {
      "left" : "if (serClass != null)",
      "right" : "if (serClass != null)",
      "info" : "IfStatement[13372-13720]:IfStatement[13372-13720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13394-13720]:Block[13394-13720]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[13412-13706]:TryStatement[13412-13706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13416-13486]:Block[13416-13486]"
    }, {
      "left" : "return serClass.newInstance();",
      "right" : "return serClass.newInstance();",
      "info" : "ReturnStatement[13438-13468]:ReturnStatement[13438-13468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13507-13706]:Block[13507-13706]"
    }, {
      "left" : "throw new IllegalStateException(\"Failed to instantiate standard serializer (of type \"+serClass.getName()+\"): \"\n                            +e.getMessage(), e);",
      "right" : "throw new IllegalStateException(\"Failed to instantiate standard serializer (of type \"+serClass.getName()+\"): \"\n                            +e.getMessage(), e);",
      "info" : "ThrowStatement[13529-13688]:ThrowStatement[13529-13688]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[13739-13750]:ReturnStatement[13739-13750]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14295-14304]:Modifier[14295-14304]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[14305-14310]:Modifier[14305-14310]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[14311-14328]:ParameterizedType[14311-14328]"
    }, {
      "left" : "findSerializerByAnnotations",
      "right" : "findSerializerByAnnotations",
      "info" : "SimpleName[14329-14356]:SimpleName[14329-14356]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[14357-14380]:SingleVariableDeclaration[14357-14380]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[14395-14408]:SingleVariableDeclaration[14395-14408]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[14410-14434]:SingleVariableDeclaration[14410-14434]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[14451-14471]:SimpleType[14451-14471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14476-15211]:Block[14476-15211]"
    }, {
      "left" : "Class<?> raw = type.getRawClass();",
      "right" : "Class<?> raw = type.getRawClass();",
      "info" : "VariableDeclarationStatement[14486-14520]:VariableDeclarationStatement[14486-14520]"
    }, {
      "left" : "if (JsonSerializable.class.isAssignableFrom(raw))",
      "right" : "if (JsonSerializable.class.isAssignableFrom(raw))",
      "info" : "IfStatement[14565-14678]:IfStatement[14565-14678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14615-14678]:Block[14615-14678]"
    }, {
      "left" : "return SerializableSerializer.instance;",
      "right" : "return SerializableSerializer.instance;",
      "info" : "ReturnStatement[14629-14668]:ReturnStatement[14629-14668]"
    }, {
      "left" : "AnnotatedMethod valueMethod = beanDesc.findJsonValueMethod();",
      "right" : "AnnotatedMethod valueMethod = beanDesc.findJsonValueMethod();",
      "info" : "VariableDeclarationStatement[14730-14791]:VariableDeclarationStatement[14730-14791]"
    }, {
      "left" : "if (valueMethod != null)",
      "right" : "if (valueMethod != null)",
      "info" : "IfStatement[14800-15144]:IfStatement[14800-15144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14825-15144]:Block[14825-15144]"
    }, {
      "left" : "Method m = valueMethod.getAnnotated();",
      "right" : "Method m = valueMethod.getAnnotated();",
      "info" : "VariableDeclarationStatement[14839-14877]:VariableDeclarationStatement[14839-14877]"
    }, {
      "left" : "if (prov.canOverrideAccessModifiers())",
      "right" : "if (prov.canOverrideAccessModifiers())",
      "info" : "IfStatement[14890-14992]:IfStatement[14890-14992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14929-14992]:Block[14929-14992]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess(m);",
      "right" : "ClassUtil.checkAndFixAccess(m);",
      "info" : "ExpressionStatement[14947-14978]:ExpressionStatement[14947-14978]"
    }, {
      "left" : "JsonSerializer<Object> ser = findSerializerFromAnnotation(prov, valueMethod);",
      "right" : "JsonSerializer<Object> ser = findSerializerFromAnnotation(prov, valueMethod);",
      "info" : "VariableDeclarationStatement[15005-15082]:VariableDeclarationStatement[15005-15082]"
    }, {
      "left" : "return new JsonValueSerializer(m, ser);",
      "right" : "return new JsonValueSerializer(m, ser);",
      "info" : "ReturnStatement[15095-15134]:ReturnStatement[15095-15134]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[15193-15205]:ReturnStatement[15193-15205]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[15583-15592]:Modifier[15583-15592]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[15593-15598]:Modifier[15593-15598]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[15599-15616]:ParameterizedType[15599-15616]"
    }, {
      "left" : "findSerializerByPrimaryType",
      "right" : "findSerializerByPrimaryType",
      "info" : "SimpleName[15617-15644]:SimpleName[15617-15644]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[15645-15668]:SingleVariableDeclaration[15645-15668]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[15683-15696]:SingleVariableDeclaration[15683-15696]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[15698-15722]:SingleVariableDeclaration[15698-15722]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[15736-15756]:SingleVariableDeclaration[15736-15756]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[15773-15793]:SimpleType[15773-15793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15798-18234]:Block[15798-18234]"
    }, {
      "left" : "Class<?> raw = type.getRawClass();",
      "right" : "Class<?> raw = type.getRawClass();",
      "info" : "VariableDeclarationStatement[15808-15842]:VariableDeclarationStatement[15808-15842]"
    }, {
      "left" : "JsonSerializer<?> ser = findOptionalStdSerializer(prov, type, beanDesc, staticTyping);",
      "right" : "JsonSerializer<?> ser = findOptionalStdSerializer(prov, type, beanDesc, staticTyping);",
      "info" : "VariableDeclarationStatement[15930-16016]:VariableDeclarationStatement[15930-16016]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[16025-16077]:IfStatement[16025-16077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16042-16077]:Block[16042-16077]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[16056-16067]:ReturnStatement[16056-16067]"
    }, {
      "left" : "if (Calendar.class.isAssignableFrom(raw))",
      "right" : "if (Calendar.class.isAssignableFrom(raw))",
      "info" : "IfStatement[16095-16196]:IfStatement[16095-16196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16137-16196]:Block[16137-16196]"
    }, {
      "left" : "return CalendarSerializer.instance;",
      "right" : "return CalendarSerializer.instance;",
      "info" : "ReturnStatement[16151-16186]:ReturnStatement[16151-16186]"
    }, {
      "left" : "if (java.util.Date.class.isAssignableFrom(raw))",
      "right" : "if (java.util.Date.class.isAssignableFrom(raw))",
      "info" : "IfStatement[16205-16308]:IfStatement[16205-16308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16253-16308]:Block[16253-16308]"
    }, {
      "left" : "return DateSerializer.instance;",
      "right" : "return DateSerializer.instance;",
      "info" : "ReturnStatement[16267-16298]:ReturnStatement[16267-16298]"
    }, {
      "left" : "if (Map.Entry.class.isAssignableFrom(raw))",
      "right" : "if (Map.Entry.class.isAssignableFrom(raw))",
      "info" : "IfStatement[16317-16829]:IfStatement[16317-16829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16360-16829]:Block[16360-16829]"
    }, {
      "left" : "JavaType kt = type.containedType(0);",
      "right" : "JavaType kt = type.containedType(0);",
      "info" : "VariableDeclarationStatement[16450-16486]:VariableDeclarationStatement[16450-16486]"
    }, {
      "left" : "if (kt == null)",
      "right" : "if (kt == null)",
      "info" : "IfStatement[16499-16578]:IfStatement[16499-16578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16515-16578]:Block[16515-16578]"
    }, {
      "left" : "kt = TypeFactory.unknownType();",
      "right" : "kt = TypeFactory.unknownType();",
      "info" : "ExpressionStatement[16533-16564]:ExpressionStatement[16533-16564]"
    }, {
      "left" : "JavaType vt = type.containedType(1);",
      "right" : "JavaType vt = type.containedType(1);",
      "info" : "VariableDeclarationStatement[16591-16627]:VariableDeclarationStatement[16591-16627]"
    }, {
      "left" : "if (vt == null)",
      "right" : "if (vt == null)",
      "info" : "IfStatement[16640-16719]:IfStatement[16640-16719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16656-16719]:Block[16656-16719]"
    }, {
      "left" : "vt = TypeFactory.unknownType();",
      "right" : "vt = TypeFactory.unknownType();",
      "info" : "ExpressionStatement[16674-16705]:ExpressionStatement[16674-16705]"
    }, {
      "left" : "return buildMapEntrySerializer(prov.getConfig(), type, beanDesc, staticTyping, kt, vt);",
      "right" : "return buildMapEntrySerializer(prov.getConfig(), type, beanDesc, staticTyping, kt, vt);",
      "info" : "ReturnStatement[16732-16819]:ReturnStatement[16732-16819]"
    }, {
      "left" : "if (ByteBuffer.class.isAssignableFrom(raw))",
      "right" : "if (ByteBuffer.class.isAssignableFrom(raw))",
      "info" : "IfStatement[16838-16940]:IfStatement[16838-16940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16882-16940]:Block[16882-16940]"
    }, {
      "left" : "return new ByteBufferSerializer();",
      "right" : "return new ByteBufferSerializer();",
      "info" : "ReturnStatement[16896-16930]:ReturnStatement[16896-16930]"
    }, {
      "left" : "if (InetAddress.class.isAssignableFrom(raw))",
      "right" : "if (InetAddress.class.isAssignableFrom(raw))",
      "info" : "IfStatement[16949-17053]:IfStatement[16949-17053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16994-17053]:Block[16994-17053]"
    }, {
      "left" : "return new InetAddressSerializer();",
      "right" : "return new InetAddressSerializer();",
      "info" : "ReturnStatement[17008-17043]:ReturnStatement[17008-17043]"
    }, {
      "left" : "if (InetSocketAddress.class.isAssignableFrom(raw))",
      "right" : "if (InetSocketAddress.class.isAssignableFrom(raw))",
      "info" : "IfStatement[17062-17178]:IfStatement[17062-17178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17113-17178]:Block[17113-17178]"
    }, {
      "left" : "return new InetSocketAddressSerializer();",
      "right" : "return new InetSocketAddressSerializer();",
      "info" : "ReturnStatement[17127-17168]:ReturnStatement[17127-17168]"
    }, {
      "left" : "if (TimeZone.class.isAssignableFrom(raw))",
      "right" : "if (TimeZone.class.isAssignableFrom(raw))",
      "info" : "IfStatement[17187-17285]:IfStatement[17187-17285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17229-17285]:Block[17229-17285]"
    }, {
      "left" : "return new TimeZoneSerializer();",
      "right" : "return new TimeZoneSerializer();",
      "info" : "ReturnStatement[17243-17275]:ReturnStatement[17243-17275]"
    }, {
      "left" : "if (java.nio.charset.Charset.class.isAssignableFrom(raw))",
      "right" : "if (java.nio.charset.Charset.class.isAssignableFrom(raw))",
      "info" : "IfStatement[17294-17411]:IfStatement[17294-17411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17352-17411]:Block[17352-17411]"
    }, {
      "left" : "return ToStringSerializer.instance;",
      "right" : "return ToStringSerializer.instance;",
      "info" : "ReturnStatement[17366-17401]:ReturnStatement[17366-17401]"
    }, {
      "left" : "if (Number.class.isAssignableFrom(raw))",
      "right" : "if (Number.class.isAssignableFrom(raw))",
      "info" : "IfStatement[17420-18075]:IfStatement[17420-18075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17460-18075]:Block[17460-18075]"
    }, {
      "left" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "right" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "info" : "VariableDeclarationStatement[17540-17600]:VariableDeclarationStatement[17540-17600]"
    }, {
      "left" : "if (format != null)",
      "right" : "if (format != null)",
      "info" : "IfStatement[17613-18019]:IfStatement[17613-18019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17633-18019]:Block[17633-18019]"
    }, {
      "left" : "switch (format.getShape()) {\n                case STRING:\n                    return ToStringSerializer.instance;\n                case OBJECT: // need to bail out to let it be serialized as POJO\n                case ARRAY: // or, I guess ARRAY; otherwise no point in speculating\n                    return null;\n                default:\n                }",
      "right" : "switch (format.getShape()) {\n                case STRING:\n                    return ToStringSerializer.instance;\n                case OBJECT: // need to bail out to let it be serialized as POJO\n                case ARRAY: // or, I guess ARRAY; otherwise no point in speculating\n                    return null;\n                default:\n                }",
      "info" : "SwitchStatement[17651-18005]:SwitchStatement[17651-18005]"
    }, {
      "left" : "case STRING:",
      "right" : "case STRING:",
      "info" : "SwitchCase[17696-17708]:SwitchCase[17696-17708]"
    }, {
      "left" : "return ToStringSerializer.instance;",
      "right" : "return ToStringSerializer.instance;",
      "info" : "ReturnStatement[17729-17764]:ReturnStatement[17729-17764]"
    }, {
      "left" : "case OBJECT:",
      "right" : "case OBJECT:",
      "info" : "SwitchCase[17781-17793]:SwitchCase[17781-17793]"
    }, {
      "left" : "case ARRAY:",
      "right" : "case ARRAY:",
      "info" : "SwitchCase[17862-17873]:SwitchCase[17862-17873]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17950-17962]:ReturnStatement[17950-17962]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[17979-17987]:SwitchCase[17979-17987]"
    }, {
      "left" : "return NumberSerializer.instance;",
      "right" : "return NumberSerializer.instance;",
      "info" : "ReturnStatement[18032-18065]:ReturnStatement[18032-18065]"
    }, {
      "left" : "if (Enum.class.isAssignableFrom(raw))",
      "right" : "if (Enum.class.isAssignableFrom(raw))",
      "info" : "IfStatement[18084-18207]:IfStatement[18084-18207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18122-18207]:Block[18122-18207]"
    }, {
      "left" : "return buildEnumSerializer(prov.getConfig(), type, beanDesc);",
      "right" : "return buildEnumSerializer(prov.getConfig(), type, beanDesc);",
      "info" : "ReturnStatement[18136-18197]:ReturnStatement[18136-18197]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[18216-18228]:ReturnStatement[18216-18228]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18347-18356]:Modifier[18347-18356]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[18357-18374]:ParameterizedType[18357-18374]"
    }, {
      "left" : "findOptionalStdSerializer",
      "right" : "findOptionalStdSerializer",
      "info" : "SimpleName[18375-18400]:SimpleName[18375-18400]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[18401-18424]:SingleVariableDeclaration[18401-18424]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[18439-18452]:SingleVariableDeclaration[18439-18452]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[18454-18478]:SingleVariableDeclaration[18454-18478]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[18480-18500]:SingleVariableDeclaration[18480-18500]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[18517-18537]:SimpleType[18517-18537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18542-18646]:Block[18542-18646]"
    }, {
      "left" : "return OptionalHandlerFactory.instance.findSerializer(prov.getConfig(), type, beanDesc);",
      "right" : "return OptionalHandlerFactory.instance.findSerializer(prov.getConfig(), type, beanDesc);",
      "info" : "ReturnStatement[18552-18640]:ReturnStatement[18552-18640]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[19031-19040]:Modifier[19031-19040]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[19041-19046]:Modifier[19041-19046]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[19047-19064]:ParameterizedType[19047-19064]"
    }, {
      "left" : "findSerializerByAddonType",
      "right" : "findSerializerByAddonType",
      "info" : "SimpleName[19065-19090]:SimpleName[19065-19090]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[19091-19117]:SingleVariableDeclaration[19091-19117]"
    }, {
      "left" : "JavaType javaType",
      "right" : "JavaType javaType",
      "info" : "SingleVariableDeclaration[19131-19148]:SingleVariableDeclaration[19131-19148]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[19150-19174]:SingleVariableDeclaration[19150-19174]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[19176-19196]:SingleVariableDeclaration[19176-19196]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[19205-19225]:SimpleType[19205-19225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19230-20185]:Block[19230-20185]"
    }, {
      "left" : "Class<?> type = javaType.getRawClass();",
      "right" : "Class<?> type = javaType.getRawClass();",
      "info" : "VariableDeclarationStatement[19240-19279]:VariableDeclarationStatement[19240-19279]"
    }, {
      "left" : "if (Iterator.class.isAssignableFrom(type))",
      "right" : "if (Iterator.class.isAssignableFrom(type))",
      "info" : "IfStatement[19289-19661]:IfStatement[19289-19661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19332-19661]:Block[19332-19661]"
    }, {
      "left" : "JavaType[] params = config.getTypeFactory().findTypeParameters(javaType, Iterator.class);",
      "right" : "JavaType[] params = config.getTypeFactory().findTypeParameters(javaType, Iterator.class);",
      "info" : "VariableDeclarationStatement[19346-19435]:VariableDeclarationStatement[19346-19435]"
    }, {
      "left" : "JavaType vt = (params == null || params.length != 1) ?\n                    TypeFactory.unknownType() : params[0];",
      "right" : "JavaType vt = (params == null || params.length != 1) ?\n                    TypeFactory.unknownType() : params[0];",
      "info" : "VariableDeclarationStatement[19448-19561]:VariableDeclarationStatement[19448-19561]"
    }, {
      "left" : "return buildIteratorSerializer(config, javaType, beanDesc, staticTyping, vt);",
      "right" : "return buildIteratorSerializer(config, javaType, beanDesc, staticTyping, vt);",
      "info" : "ReturnStatement[19574-19651]:ReturnStatement[19574-19651]"
    }, {
      "left" : "if (Iterable.class.isAssignableFrom(type))",
      "right" : "if (Iterable.class.isAssignableFrom(type))",
      "info" : "IfStatement[19670-20043]:IfStatement[19670-20043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19713-20043]:Block[19713-20043]"
    }, {
      "left" : "JavaType[] params = config.getTypeFactory().findTypeParameters(javaType, Iterable.class);",
      "right" : "JavaType[] params = config.getTypeFactory().findTypeParameters(javaType, Iterable.class);",
      "info" : "VariableDeclarationStatement[19727-19816]:VariableDeclarationStatement[19727-19816]"
    }, {
      "left" : "JavaType vt = (params == null || params.length != 1) ?\n                    TypeFactory.unknownType() : params[0];",
      "right" : "JavaType vt = (params == null || params.length != 1) ?\n                    TypeFactory.unknownType() : params[0];",
      "info" : "VariableDeclarationStatement[19829-19942]:VariableDeclarationStatement[19829-19942]"
    }, {
      "left" : "return buildIterableSerializer(config, javaType, beanDesc,  staticTyping, vt);",
      "right" : "return buildIterableSerializer(config, javaType, beanDesc,  staticTyping, vt);",
      "info" : "ReturnStatement[19955-20033]:ReturnStatement[19955-20033]"
    }, {
      "left" : "if (CharSequence.class.isAssignableFrom(type))",
      "right" : "if (CharSequence.class.isAssignableFrom(type))",
      "info" : "IfStatement[20052-20158]:IfStatement[20052-20158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20099-20158]:Block[20099-20158]"
    }, {
      "left" : "return ToStringSerializer.instance;",
      "right" : "return ToStringSerializer.instance;",
      "info" : "ReturnStatement[20113-20148]:ReturnStatement[20113-20148]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20167-20179]:ReturnStatement[20167-20179]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[20474-20504]:SingleMemberAnnotation[20474-20504]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[20509-20518]:Modifier[20509-20518]"
    }, {
      "left" : "JsonSerializer<Object>",
      "right" : "JsonSerializer<Object>",
      "info" : "ParameterizedType[20519-20541]:ParameterizedType[20519-20541]"
    }, {
      "left" : "findSerializerFromAnnotation",
      "right" : "findSerializerFromAnnotation",
      "info" : "SimpleName[20542-20570]:SimpleName[20542-20570]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[20571-20594]:SingleVariableDeclaration[20571-20594]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[20608-20619]:SingleVariableDeclaration[20608-20619]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[20636-20656]:SimpleType[20636-20656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20661-21033]:Block[20661-21033]"
    }, {
      "left" : "Object serDef = prov.getAnnotationIntrospector().findSerializer(a);",
      "right" : "Object serDef = prov.getAnnotationIntrospector().findSerializer(a);",
      "info" : "VariableDeclarationStatement[20671-20738]:VariableDeclarationStatement[20671-20738]"
    }, {
      "left" : "if (serDef == null)",
      "right" : "if (serDef == null)",
      "info" : "IfStatement[20747-20803]:IfStatement[20747-20803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20767-20803]:Block[20767-20803]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20781-20793]:ReturnStatement[20781-20793]"
    }, {
      "left" : "JsonSerializer<Object> ser = prov.serializerInstance(a, serDef);",
      "right" : "JsonSerializer<Object> ser = prov.serializerInstance(a, serDef);",
      "info" : "VariableDeclarationStatement[20812-20876]:VariableDeclarationStatement[20812-20876]"
    }, {
      "left" : "return (JsonSerializer<Object>) findConvertingSerializer(prov, a, ser);",
      "right" : "return (JsonSerializer<Object>) findConvertingSerializer(prov, a, ser);",
      "info" : "ReturnStatement[20956-21027]:ReturnStatement[20956-21027]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[21361-21370]:Modifier[21361-21370]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[21371-21388]:ParameterizedType[21371-21388]"
    }, {
      "left" : "findConvertingSerializer",
      "right" : "findConvertingSerializer",
      "info" : "SimpleName[21389-21413]:SimpleName[21389-21413]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[21414-21437]:SingleVariableDeclaration[21414-21437]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[21451-21462]:SingleVariableDeclaration[21451-21462]"
    }, {
      "left" : "JsonSerializer<?> ser",
      "right" : "JsonSerializer<?> ser",
      "info" : "SingleVariableDeclaration[21464-21485]:SingleVariableDeclaration[21464-21485]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[21502-21522]:SimpleType[21502-21522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21527-21804]:Block[21527-21804]"
    }, {
      "left" : "Converter<Object,Object> conv = findConverter(prov, a);",
      "right" : "Converter<Object,Object> conv = findConverter(prov, a);",
      "info" : "VariableDeclarationStatement[21537-21592]:VariableDeclarationStatement[21537-21592]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[21601-21654]:IfStatement[21601-21654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21619-21654]:Block[21619-21654]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[21633-21644]:ReturnStatement[21633-21644]"
    }, {
      "left" : "JavaType delegateType = conv.getOutputType(prov.getTypeFactory());",
      "right" : "JavaType delegateType = conv.getOutputType(prov.getTypeFactory());",
      "info" : "VariableDeclarationStatement[21663-21729]:VariableDeclarationStatement[21663-21729]"
    }, {
      "left" : "return new StdDelegatingSerializer(conv, delegateType, ser);",
      "right" : "return new StdDelegatingSerializer(conv, delegateType, ser);",
      "info" : "ReturnStatement[21738-21798]:ReturnStatement[21738-21798]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[21810-21819]:Modifier[21810-21819]"
    }, {
      "left" : "Converter<Object,Object>",
      "right" : "Converter<Object,Object>",
      "info" : "ParameterizedType[21820-21844]:ParameterizedType[21820-21844]"
    }, {
      "left" : "findConverter",
      "right" : "findConverter",
      "info" : "SimpleName[21845-21858]:SimpleName[21845-21858]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[21859-21882]:SingleVariableDeclaration[21859-21882]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[21896-21907]:SingleVariableDeclaration[21896-21907]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[21924-21944]:SimpleType[21924-21944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21949-22162]:Block[21949-22162]"
    }, {
      "left" : "Object convDef = prov.getAnnotationIntrospector().findSerializationConverter(a);",
      "right" : "Object convDef = prov.getAnnotationIntrospector().findSerializationConverter(a);",
      "info" : "VariableDeclarationStatement[21959-22039]:VariableDeclarationStatement[21959-22039]"
    }, {
      "left" : "if (convDef == null)",
      "right" : "if (convDef == null)",
      "info" : "IfStatement[22048-22105]:IfStatement[22048-22105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22069-22105]:Block[22069-22105]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22083-22095]:ReturnStatement[22083-22095]"
    }, {
      "left" : "return prov.converterInstance(a, convDef);",
      "right" : "return prov.converterInstance(a, convDef);",
      "info" : "ReturnStatement[22114-22156]:ReturnStatement[22114-22156]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[30556-30565]:Modifier[31111-31120]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[30566-30573]:PrimitiveType[31121-31128]"
    }, {
      "left" : "isIndexedList",
      "right" : "isIndexedList",
      "info" : "SimpleName[30574-30587]:SimpleName[31129-31142]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[30588-30600]:SingleVariableDeclaration[31143-31155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30606-30670]:Block[31161-31225]"
    }, {
      "left" : "return RandomAccess.class.isAssignableFrom(cls);",
      "right" : "return RandomAccess.class.isAssignableFrom(cls);",
      "info" : "ReturnStatement[30616-30664]:ReturnStatement[31171-31219]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30676-30682]:Modifier[31231-31237]"
    }, {
      "left" : "ContainerSerializer<?>",
      "right" : "ContainerSerializer<?>",
      "info" : "ParameterizedType[30684-30706]:ParameterizedType[31239-31261]"
    }, {
      "left" : "buildIndexedListSerializer",
      "right" : "buildIndexedListSerializer",
      "info" : "SimpleName[30707-30733]:SimpleName[31262-31288]"
    }, {
      "left" : "JavaType elemType",
      "right" : "JavaType elemType",
      "info" : "SingleVariableDeclaration[30734-30751]:SingleVariableDeclaration[31289-31306]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[30765-30785]:SingleVariableDeclaration[31320-31340]"
    }, {
      "left" : "TypeSerializer vts",
      "right" : "TypeSerializer vts",
      "info" : "SingleVariableDeclaration[30787-30805]:SingleVariableDeclaration[31342-31360]"
    }, {
      "left" : "JsonSerializer<Object> valueSerializer",
      "right" : "JsonSerializer<Object> valueSerializer",
      "info" : "SingleVariableDeclaration[30807-30845]:SingleVariableDeclaration[31362-31400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30847-30942]:Block[31402-31497]"
    }, {
      "left" : "return new IndexedListSerializer(elemType, staticTyping, vts, valueSerializer);",
      "right" : "return new IndexedListSerializer(elemType, staticTyping, vts, valueSerializer);",
      "info" : "ReturnStatement[30857-30936]:ReturnStatement[31412-31491]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30947-30953]:Modifier[31502-31508]"
    }, {
      "left" : "ContainerSerializer<?>",
      "right" : "ContainerSerializer<?>",
      "info" : "ParameterizedType[30954-30976]:ParameterizedType[31509-31531]"
    }, {
      "left" : "buildCollectionSerializer",
      "right" : "buildCollectionSerializer",
      "info" : "SimpleName[30977-31002]:SimpleName[31532-31557]"
    }, {
      "left" : "JavaType elemType",
      "right" : "JavaType elemType",
      "info" : "SingleVariableDeclaration[31003-31020]:SingleVariableDeclaration[31558-31575]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[31034-31054]:SingleVariableDeclaration[31589-31609]"
    }, {
      "left" : "TypeSerializer vts",
      "right" : "TypeSerializer vts",
      "info" : "SingleVariableDeclaration[31056-31074]:SingleVariableDeclaration[31611-31629]"
    }, {
      "left" : "JsonSerializer<Object> valueSerializer",
      "right" : "JsonSerializer<Object> valueSerializer",
      "info" : "SingleVariableDeclaration[31076-31114]:SingleVariableDeclaration[31631-31669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31116-31210]:Block[31671-31765]"
    }, {
      "left" : "return new CollectionSerializer(elemType, staticTyping, vts, valueSerializer);",
      "right" : "return new CollectionSerializer(elemType, staticTyping, vts, valueSerializer);",
      "info" : "ReturnStatement[31126-31204]:ReturnStatement[31681-31759]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31216-31222]:Modifier[31771-31777]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[31223-31240]:ParameterizedType[31778-31795]"
    }, {
      "left" : "buildEnumSetSerializer",
      "right" : "buildEnumSetSerializer",
      "info" : "SimpleName[31241-31263]:SimpleName[31796-31818]"
    }, {
      "left" : "JavaType enumType",
      "right" : "JavaType enumType",
      "info" : "SingleVariableDeclaration[31264-31281]:SingleVariableDeclaration[31819-31836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31283-31338]:Block[31838-31893]"
    }, {
      "left" : "return new EnumSetSerializer(enumType);",
      "right" : "return new EnumSetSerializer(enumType);",
      "info" : "ReturnStatement[31293-31332]:ReturnStatement[31848-31887]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34761-34770]:Modifier[35503-35512]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[34771-34777]:SimpleType[35513-35519]"
    }, {
      "left" : "findSuppressableContentValue",
      "right" : "findSuppressableContentValue",
      "info" : "SimpleName[34778-34806]:SimpleName[35520-35548]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[34807-34833]:SingleVariableDeclaration[35549-35575]"
    }, {
      "left" : "JavaType contentType",
      "right" : "JavaType contentType",
      "info" : "SingleVariableDeclaration[34847-34867]:SingleVariableDeclaration[35589-35609]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[34869-34893]:SingleVariableDeclaration[35611-35635]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[34910-34930]:SimpleType[35652-35672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34935-35493]:Block[35677-36235]"
    }, {
      "left" : "JsonInclude.Include incl = beanDesc.findSerializationInclusionForContent(null);",
      "right" : "JsonInclude.Include incl = beanDesc.findSerializationInclusionForContent(null);",
      "info" : "VariableDeclarationStatement[34945-35024]:VariableDeclarationStatement[35687-35766]"
    }, {
      "left" : "if (incl != null)",
      "right" : "if (incl != null)",
      "info" : "IfStatement[35034-35466]:IfStatement[35776-36208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35052-35466]:Block[35794-36208]"
    }, {
      "left" : "switch (incl) {\n            case NON_DEFAULT:\n                // 19-Oct-2014, tatu: Not sure what this'd mean; so take it to mean \"NON_EMPTY\"...\n                incl = JsonInclude.Include.NON_EMPTY;\n                break;\n            default:\n                // all other modes actually good as is, unless we'll find better ways\n                break;\n            }",
      "right" : "switch (incl) {\n            case NON_DEFAULT:\n                // 19-Oct-2014, tatu: Not sure what this'd mean; so take it to mean \"NON_EMPTY\"...\n                incl = JsonInclude.Include.NON_EMPTY;\n                break;\n            default:\n                // all other modes actually good as is, unless we'll find better ways\n                break;\n            }",
      "info" : "SwitchStatement[35066-35431]:SwitchStatement[35808-36173]"
    }, {
      "left" : "case NON_DEFAULT:",
      "right" : "case NON_DEFAULT:",
      "info" : "SwitchCase[35094-35111]:SwitchCase[35836-35853]"
    }, {
      "left" : "incl = JsonInclude.Include.NON_EMPTY;",
      "right" : "incl = JsonInclude.Include.NON_EMPTY;",
      "info" : "ExpressionStatement[35227-35264]:ExpressionStatement[35969-36006]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[35281-35287]:BreakStatement[36023-36029]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[35300-35308]:SwitchCase[36042-36050]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[35411-35417]:BreakStatement[36153-36159]"
    }, {
      "left" : "return incl;",
      "right" : "return incl;",
      "info" : "ReturnStatement[35444-35456]:ReturnStatement[36186-36198]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[35475-35487]:ReturnStatement[36217-36229]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[38176-38185]:Modifier[38970-38979]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[38186-38203]:ParameterizedType[38980-38997]"
    }, {
      "left" : "buildIteratorSerializer",
      "right" : "buildIteratorSerializer",
      "info" : "SimpleName[38204-38227]:SimpleName[38998-39021]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[38228-38254]:SingleVariableDeclaration[39022-39048]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[38268-38281]:SingleVariableDeclaration[39062-39075]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[38283-38307]:SingleVariableDeclaration[39077-39101]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[38309-38329]:SingleVariableDeclaration[39103-39123]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[38343-38361]:SingleVariableDeclaration[39137-39155]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[38378-38398]:SimpleType[39172-39192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38403-38515]:Block[39197-39309]"
    }, {
      "left" : "return new IteratorSerializer(valueType, staticTyping, createTypeSerializer(config, valueType));",
      "right" : "return new IteratorSerializer(valueType, staticTyping, createTypeSerializer(config, valueType));",
      "info" : "ReturnStatement[38413-38509]:ReturnStatement[39207-39303]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[38521-38532]:MarkerAnnotation[39315-39326]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[38550-38559]:Modifier[39344-39353]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[38560-38577]:ParameterizedType[39354-39371]"
    }, {
      "left" : "buildIteratorSerializer",
      "right" : "buildIteratorSerializer",
      "info" : "SimpleName[38578-38601]:SimpleName[39372-39395]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[38602-38628]:SingleVariableDeclaration[39396-39422]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[38642-38655]:SingleVariableDeclaration[39436-39449]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[38657-38681]:SingleVariableDeclaration[39451-39475]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[38683-38703]:SingleVariableDeclaration[39477-39497]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[38712-38732]:SimpleType[39506-39526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38737-39039]:Block[39531-39833]"
    }, {
      "left" : "JavaType[] params = config.getTypeFactory().findTypeParameters(type, Iterator.class);",
      "right" : "JavaType[] params = config.getTypeFactory().findTypeParameters(type, Iterator.class);",
      "info" : "VariableDeclarationStatement[38747-38832]:VariableDeclarationStatement[39541-39626]"
    }, {
      "left" : "JavaType vt = (params == null || params.length != 1) ?\n                TypeFactory.unknownType() : params[0];",
      "right" : "JavaType vt = (params == null || params.length != 1) ?\n                TypeFactory.unknownType() : params[0];",
      "info" : "VariableDeclarationStatement[38841-38950]:VariableDeclarationStatement[39635-39744]"
    }, {
      "left" : "return buildIteratorSerializer(config, type, beanDesc, staticTyping, vt);",
      "right" : "return buildIteratorSerializer(config, type, beanDesc, staticTyping, vt);",
      "info" : "ReturnStatement[38959-39032]:ReturnStatement[39753-39826]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[39079-39088]:Modifier[39873-39882]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[39089-39106]:ParameterizedType[39883-39900]"
    }, {
      "left" : "buildIterableSerializer",
      "right" : "buildIterableSerializer",
      "info" : "SimpleName[39107-39130]:SimpleName[39901-39924]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[39131-39157]:SingleVariableDeclaration[39925-39951]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[39171-39184]:SingleVariableDeclaration[39965-39978]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[39186-39210]:SingleVariableDeclaration[39980-40004]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[39212-39232]:SingleVariableDeclaration[40006-40026]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[39246-39264]:SingleVariableDeclaration[40040-40058]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[39281-39301]:SimpleType[40075-40095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39306-39418]:Block[40100-40212]"
    }, {
      "left" : "return new IterableSerializer(valueType, staticTyping, createTypeSerializer(config, valueType));",
      "right" : "return new IterableSerializer(valueType, staticTyping, createTypeSerializer(config, valueType));",
      "info" : "ReturnStatement[39316-39412]:ReturnStatement[40110-40206]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[39424-39435]:MarkerAnnotation[40218-40229]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[39453-39462]:Modifier[40247-40256]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[39463-39480]:ParameterizedType[40257-40274]"
    }, {
      "left" : "buildIterableSerializer",
      "right" : "buildIterableSerializer",
      "info" : "SimpleName[39481-39504]:SimpleName[40275-40298]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[39505-39531]:SingleVariableDeclaration[40299-40325]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[39545-39558]:SingleVariableDeclaration[40339-40352]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[39560-39584]:SingleVariableDeclaration[40354-40378]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[39598-39618]:SingleVariableDeclaration[40392-40412]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[39635-39655]:SimpleType[40429-40449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39660-39962]:Block[40454-40756]"
    }, {
      "left" : "JavaType[] params = config.getTypeFactory().findTypeParameters(type, Iterable.class);",
      "right" : "JavaType[] params = config.getTypeFactory().findTypeParameters(type, Iterable.class);",
      "info" : "VariableDeclarationStatement[39670-39755]:VariableDeclarationStatement[40464-40549]"
    }, {
      "left" : "JavaType vt = (params == null || params.length != 1) ?\n                TypeFactory.unknownType() : params[0];",
      "right" : "JavaType vt = (params == null || params.length != 1) ?\n                TypeFactory.unknownType() : params[0];",
      "info" : "VariableDeclarationStatement[39764-39873]:VariableDeclarationStatement[40558-40667]"
    }, {
      "left" : "return buildIterableSerializer(config, type, beanDesc, staticTyping, vt);",
      "right" : "return buildIterableSerializer(config, type, beanDesc, staticTyping, vt);",
      "info" : "ReturnStatement[39882-39955]:ReturnStatement[40676-40749]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[40006-40015]:Modifier[40800-40809]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[40016-40033]:ParameterizedType[40810-40827]"
    }, {
      "left" : "buildMapEntrySerializer",
      "right" : "buildMapEntrySerializer",
      "info" : "SimpleName[40034-40057]:SimpleName[40828-40851]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[40058-40084]:SingleVariableDeclaration[40852-40878]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[40098-40111]:SingleVariableDeclaration[40892-40905]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[40113-40137]:SingleVariableDeclaration[40907-40931]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[40139-40159]:SingleVariableDeclaration[40933-40953]"
    }, {
      "left" : "JavaType keyType",
      "right" : "JavaType keyType",
      "info" : "SingleVariableDeclaration[40173-40189]:SingleVariableDeclaration[40967-40983]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[40191-40209]:SingleVariableDeclaration[40985-41003]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[40226-40246]:SimpleType[41020-41040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40251-40405]:Block[41045-41199]"
    }, {
      "left" : "return new MapEntrySerializer(valueType, keyType, valueType,\n                staticTyping, createTypeSerializer(config, valueType), null);",
      "right" : "return new MapEntrySerializer(valueType, keyType, valueType,\n                staticTyping, createTypeSerializer(config, valueType), null);",
      "info" : "ReturnStatement[40261-40399]:ReturnStatement[41055-41193]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[40411-40420]:Modifier[41205-41214]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[40421-40438]:ParameterizedType[41215-41232]"
    }, {
      "left" : "buildEnumSerializer",
      "right" : "buildEnumSerializer",
      "info" : "SimpleName[40439-40458]:SimpleName[41233-41252]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[40459-40485]:SingleVariableDeclaration[41253-41279]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[40499-40512]:SingleVariableDeclaration[41293-41306]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[40514-40538]:SingleVariableDeclaration[41308-41332]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[40555-40575]:SimpleType[41349-41369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40580-41850]:Block[41374-42644]"
    }, {
      "left" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "right" : "JsonFormat.Value format = beanDesc.findExpectedFormat(null);",
      "info" : "VariableDeclarationStatement[40905-40965]:VariableDeclarationStatement[41699-41759]"
    }, {
      "left" : "if (format != null && format.getShape() == JsonFormat.Shape.OBJECT)",
      "right" : "if (format != null && format.getShape() == JsonFormat.Shape.OBJECT)",
      "info" : "IfStatement[40974-41330]:IfStatement[41768-42124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41042-41330]:Block[41836-42124]"
    }, {
      "left" : "((BasicBeanDescription) beanDesc).removeProperty(\"declaringClass\");",
      "right" : "((BasicBeanDescription) beanDesc).removeProperty(\"declaringClass\");",
      "info" : "ExpressionStatement[41140-41207]:ExpressionStatement[41934-42001]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[41308-41320]:ReturnStatement[42102-42114]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")\n        Class<Enum<?>> enumClass = (Class<Enum<?>>) type.getRawClass();",
      "right" : "@SuppressWarnings(\"unchecked\")\n        Class<Enum<?>> enumClass = (Class<Enum<?>>) type.getRawClass();",
      "info" : "VariableDeclarationStatement[41339-41441]:VariableDeclarationStatement[42133-42235]"
    }, {
      "left" : "JsonSerializer<?> ser = EnumSerializer.construct(enumClass, config, beanDesc, format);",
      "right" : "JsonSerializer<?> ser = EnumSerializer.construct(enumClass, config, beanDesc, format);",
      "info" : "VariableDeclarationStatement[41450-41536]:VariableDeclarationStatement[42244-42330]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[41591-41824]:IfStatement[42385-42618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41636-41824]:Block[42430-42618]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[41650-41814]:EnhancedForStatement[42444-42608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41722-41814]:Block[42516-42608]"
    }, {
      "left" : "ser = mod.modifyEnumSerializer(config, type, beanDesc, ser);",
      "right" : "ser = mod.modifyEnumSerializer(config, type, beanDesc, ser);",
      "info" : "ExpressionStatement[41740-41800]:ExpressionStatement[42534-42594]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[41833-41844]:ReturnStatement[42627-42638]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[42131-42161]:SingleMemberAnnotation[42925-42955]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[42166-42175]:Modifier[42960-42969]"
    }, {
      "left" : "T extends JavaType",
      "right" : "T extends JavaType",
      "info" : "TypeParameter[42177-42195]:TypeParameter[42971-42989]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[42197-42198]:SimpleType[42991-42992]"
    }, {
      "left" : "modifyTypeByAnnotation",
      "right" : "modifyTypeByAnnotation",
      "info" : "SimpleName[42199-42221]:SimpleName[42993-43015]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[42222-42248]:SingleVariableDeclaration[43016-43042]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[42262-42273]:SingleVariableDeclaration[43056-43067]"
    }, {
      "left" : "T type",
      "right" : "T type",
      "info" : "SingleVariableDeclaration[42275-42281]:SingleVariableDeclaration[43069-43075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42287-42887]:Block[43081-43681]"
    }, {
      "left" : "Class<?> superclass = config.getAnnotationIntrospector().findSerializationType(a);",
      "right" : "Class<?> superclass = config.getAnnotationIntrospector().findSerializationType(a);",
      "info" : "VariableDeclarationStatement[42358-42440]:VariableDeclarationStatement[43152-43234]"
    }, {
      "left" : "if (superclass != null)",
      "right" : "if (superclass != null)",
      "info" : "IfStatement[42449-42815]:IfStatement[43243-43609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42473-42815]:Block[43267-43609]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[42487-42805]:TryStatement[43281-43599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42491-42559]:Block[43285-43353]"
    }, {
      "left" : "type = (T) type.widenBy(superclass);",
      "right" : "type = (T) type.widenBy(superclass);",
      "info" : "ExpressionStatement[42509-42545]:ExpressionStatement[43303-43339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42597-42805]:Block[43391-43599]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Failed to widen type \"+type+\" with concrete-type annotation (value \"+superclass.getName()+\"), method '\"+a.getName()+\"': \"+iae.getMessage());",
      "right" : "throw new IllegalArgumentException(\"Failed to widen type \"+type+\" with concrete-type annotation (value \"+superclass.getName()+\"), method '\"+a.getName()+\"': \"+iae.getMessage());",
      "info" : "ThrowStatement[42615-42791]:ThrowStatement[43409-43585]"
    }, {
      "left" : "return modifySecondaryTypesByAnnotation(config, a, type);",
      "right" : "return modifySecondaryTypesByAnnotation(config, a, type);",
      "info" : "ReturnStatement[42824-42881]:ReturnStatement[43618-43675]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[42893-42923]:SingleMemberAnnotation[43687-43717]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[42928-42937]:Modifier[43722-43731]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[42938-42944]:Modifier[43732-43738]"
    }, {
      "left" : "T extends JavaType",
      "right" : "T extends JavaType",
      "info" : "TypeParameter[42946-42964]:TypeParameter[43740-43758]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[42966-42967]:SimpleType[43760-43761]"
    }, {
      "left" : "modifySecondaryTypesByAnnotation",
      "right" : "modifySecondaryTypesByAnnotation",
      "info" : "SimpleName[42968-43000]:SimpleName[43762-43794]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[43001-43027]:SingleVariableDeclaration[43795-43821]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[43041-43052]:SingleVariableDeclaration[43835-43846]"
    }, {
      "left" : "T type",
      "right" : "T type",
      "info" : "SingleVariableDeclaration[43054-43060]:SingleVariableDeclaration[43848-43854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43066-44480]:Block[43860-45274]"
    }, {
      "left" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[43076-43141]:VariableDeclarationStatement[43870-43935]"
    }, {
      "left" : "if (type.isContainerType())",
      "right" : "if (type.isContainerType())",
      "info" : "IfStatement[43176-44453]:IfStatement[43970-45247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43204-44453]:Block[43998-45247]"
    }, {
      "left" : "Class<?> keyClass = intr.findSerializationKeyType(a, type.getKeyType());",
      "right" : "Class<?> keyClass = intr.findSerializationKeyType(a, type.getKeyType());",
      "info" : "VariableDeclarationStatement[43218-43290]:VariableDeclarationStatement[44012-44084]"
    }, {
      "left" : "if (keyClass != null)",
      "right" : "if (keyClass != null)",
      "info" : "IfStatement[43303-43902]:IfStatement[44097-44696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43325-43902]:Block[44119-44696]"
    }, {
      "left" : "if (!(type instanceof MapType))",
      "right" : "if (!(type instanceof MapType))",
      "info" : "IfStatement[43389-43560]:IfStatement[44183-44354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43421-43560]:Block[44215-44354]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Illegal key-type annotation: type \"+type+\" is not a Map type\");",
      "right" : "throw new IllegalArgumentException(\"Illegal key-type annotation: type \"+type+\" is not a Map type\");",
      "info" : "ThrowStatement[43443-43542]:ThrowStatement[44237-44336]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[43577-43888]:TryStatement[44371-44682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43581-43668]:Block[44375-44462]"
    }, {
      "left" : "type = (T) ((MapType) type).widenKey(keyClass);",
      "right" : "type = (T) ((MapType) type).widenKey(keyClass);",
      "info" : "ExpressionStatement[43603-43650]:ExpressionStatement[44397-44444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43706-43888]:Block[44500-44682]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Failed to narrow key type \"+type+\" with key-type annotation (\"+keyClass.getName()+\"): \"+iae.getMessage());",
      "right" : "throw new IllegalArgumentException(\"Failed to narrow key type \"+type+\" with key-type annotation (\"+keyClass.getName()+\"): \"+iae.getMessage());",
      "info" : "ThrowStatement[43728-43870]:ThrowStatement[44522-44664]"
    }, {
      "left" : "Class<?> cc = intr.findSerializationContentType(a, type.getContentType());",
      "right" : "Class<?> cc = intr.findSerializationContentType(a, type.getContentType());",
      "info" : "VariableDeclarationStatement[44006-44080]:VariableDeclarationStatement[44800-44874]"
    }, {
      "left" : "if (cc != null)",
      "right" : "if (cc != null)",
      "info" : "IfStatement[44093-44443]:IfStatement[44887-45237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44109-44443]:Block[44903-45237]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[44127-44429]:TryStatement[44921-45223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44131-44207]:Block[44925-45001]"
    }, {
      "left" : "type = (T) type.widenContentsBy(cc);",
      "right" : "type = (T) type.widenContentsBy(cc);",
      "info" : "ExpressionStatement[44153-44189]:ExpressionStatement[44947-44983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44245-44429]:Block[45039-45223]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Failed to narrow content type \"+type+\" with content-type annotation (\"+cc.getName()+\"): \"+iae.getMessage());",
      "right" : "throw new IllegalArgumentException(\"Failed to narrow content type \"+type+\" with content-type annotation (\"+cc.getName()+\"): \"+iae.getMessage());",
      "info" : "ThrowStatement[44267-44411]:ThrowStatement[45061-45205]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[44462-44474]:ReturnStatement[45256-45268]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[44726-44735]:Modifier[45520-45529]"
    }, {
      "left" : "JsonSerializer<Object>",
      "right" : "JsonSerializer<Object>",
      "info" : "ParameterizedType[44736-44758]:ParameterizedType[45530-45552]"
    }, {
      "left" : "_findKeySerializer",
      "right" : "_findKeySerializer",
      "info" : "SimpleName[44759-44777]:SimpleName[45553-45571]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[44778-44801]:SingleVariableDeclaration[45572-45595]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[44815-44826]:SingleVariableDeclaration[45609-45620]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[44843-44863]:SimpleType[45637-45657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44868-45114]:Block[45662-45908]"
    }, {
      "left" : "AnnotationIntrospector intr = prov.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = prov.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[44878-44941]:VariableDeclarationStatement[45672-45735]"
    }, {
      "left" : "Object serDef = intr.findKeySerializer(a);",
      "right" : "Object serDef = intr.findKeySerializer(a);",
      "info" : "VariableDeclarationStatement[44950-44992]:VariableDeclarationStatement[45744-45786]"
    }, {
      "left" : "if (serDef != null)",
      "right" : "if (serDef != null)",
      "info" : "IfStatement[45001-45087]:IfStatement[45795-45881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45021-45087]:Block[45815-45881]"
    }, {
      "left" : "return prov.serializerInstance(a, serDef);",
      "right" : "return prov.serializerInstance(a, serDef);",
      "info" : "ReturnStatement[45035-45077]:ReturnStatement[45829-45871]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45096-45108]:ReturnStatement[45890-45902]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[45374-45383]:Modifier[46168-46177]"
    }, {
      "left" : "JsonSerializer<Object>",
      "right" : "JsonSerializer<Object>",
      "info" : "ParameterizedType[45384-45406]:ParameterizedType[46178-46200]"
    }, {
      "left" : "_findContentSerializer",
      "right" : "_findContentSerializer",
      "info" : "SimpleName[45407-45429]:SimpleName[46201-46223]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[45430-45453]:SingleVariableDeclaration[46224-46247]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[45467-45478]:SingleVariableDeclaration[46261-46272]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[45495-45515]:SimpleType[46289-46309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45520-45770]:Block[46314-46564]"
    }, {
      "left" : "AnnotationIntrospector intr = prov.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = prov.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[45530-45593]:VariableDeclarationStatement[46324-46387]"
    }, {
      "left" : "Object serDef = intr.findContentSerializer(a);",
      "right" : "Object serDef = intr.findContentSerializer(a);",
      "info" : "VariableDeclarationStatement[45602-45648]:VariableDeclarationStatement[46396-46442]"
    }, {
      "left" : "if (serDef != null)",
      "right" : "if (serDef != null)",
      "info" : "IfStatement[45657-45743]:IfStatement[46451-46537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45677-45743]:Block[46471-46537]"
    }, {
      "left" : "return prov.serializerInstance(a, serDef);",
      "right" : "return prov.serializerInstance(a, serDef);",
      "info" : "ReturnStatement[45691-45733]:ReturnStatement[46485-46527]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45752-45764]:ReturnStatement[46546-46558]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[45907-45916]:Modifier[46701-46710]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[45917-45923]:SimpleType[46711-46717]"
    }, {
      "left" : "findFilterId",
      "right" : "findFilterId",
      "info" : "SimpleName[45924-45936]:SimpleName[46718-46730]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[45937-45963]:SingleVariableDeclaration[46731-46757]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[45965-45989]:SingleVariableDeclaration[46759-46783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45991-46098]:Block[46785-46892]"
    }, {
      "left" : "return config.getAnnotationIntrospector().findFilterId((Annotated)beanDesc.getClassInfo());",
      "right" : "return config.getAnnotationIntrospector().findFilterId((Annotated)beanDesc.getClassInfo());",
      "info" : "ReturnStatement[46001-46092]:ReturnStatement[46795-46886]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[46437-46446]:Modifier[47231-47240]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[46447-46454]:PrimitiveType[47241-47248]"
    }, {
      "left" : "usesStaticTyping",
      "right" : "usesStaticTyping",
      "info" : "SimpleName[46455-46471]:SimpleName[47249-47265]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[46472-46498]:SingleVariableDeclaration[47266-47292]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[46512-46536]:SingleVariableDeclaration[47306-47330]"
    }, {
      "left" : "TypeSerializer typeSer",
      "right" : "TypeSerializer typeSer",
      "info" : "SingleVariableDeclaration[46538-46560]:SingleVariableDeclaration[47332-47354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46566-47187]:Block[47360-47981]"
    }, {
      "left" : "if (typeSer != null)",
      "right" : "if (typeSer != null)",
      "info" : "IfStatement[46761-46819]:IfStatement[47555-47613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46782-46819]:Block[47576-47613]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46796-46809]:ReturnStatement[47590-47603]"
    }, {
      "left" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[46828-46893]:VariableDeclarationStatement[47622-47687]"
    }, {
      "left" : "JsonSerialize.Typing t = intr.findSerializationTyping(beanDesc.getClassInfo());",
      "right" : "JsonSerialize.Typing t = intr.findSerializationTyping(beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[46902-46981]:VariableDeclarationStatement[47696-47775]"
    }, {
      "left" : "if (t != null && t != JsonSerialize.Typing.DEFAULT_TYPING)",
      "right" : "if (t != null && t != JsonSerialize.Typing.DEFAULT_TYPING)",
      "info" : "IfStatement[46990-47115]:IfStatement[47784-47909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47049-47115]:Block[47843-47909]"
    }, {
      "left" : "return (t == JsonSerialize.Typing.STATIC);",
      "right" : "return (t == JsonSerialize.Typing.STATIC);",
      "info" : "ReturnStatement[47063-47105]:ReturnStatement[47857-47899]"
    }, {
      "left" : "return config.isEnabled(MapperFeature.USE_STATIC_TYPING);",
      "right" : "return config.isEnabled(MapperFeature.USE_STATIC_TYPING);",
      "info" : "ReturnStatement[47124-47181]:ReturnStatement[47918-47975]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[47193-47202]:Modifier[47987-47996]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[47203-47211]:ParameterizedType[47997-48005]"
    }, {
      "left" : "_verifyAsClass",
      "right" : "_verifyAsClass",
      "info" : "SimpleName[47212-47226]:SimpleName[48006-48020]"
    }, {
      "left" : "Object src",
      "right" : "Object src",
      "info" : "SingleVariableDeclaration[47227-47237]:SingleVariableDeclaration[48021-48031]"
    }, {
      "left" : "String methodName",
      "right" : "String methodName",
      "info" : "SingleVariableDeclaration[47239-47256]:SingleVariableDeclaration[48033-48050]"
    }, {
      "left" : "Class<?> noneClass",
      "right" : "Class<?> noneClass",
      "info" : "SingleVariableDeclaration[47258-47276]:SingleVariableDeclaration[48052-48070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47282-47760]:Block[48076-48554]"
    }, {
      "left" : "if (src == null)",
      "right" : "if (src == null)",
      "info" : "IfStatement[47292-47345]:IfStatement[48086-48139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47309-47345]:Block[48103-48139]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[47323-47335]:ReturnStatement[48117-48129]"
    }, {
      "left" : "if (!(src instanceof Class))",
      "right" : "if (!(src instanceof Class))",
      "info" : "IfStatement[47354-47597]:IfStatement[48148-48391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47383-47597]:Block[48177-48391]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector.\"+methodName+\"() returned value of type \"+src.getClass().getName()+\": expected type JsonSerializer or Class<JsonSerializer> instead\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector.\"+methodName+\"() returned value of type \"+src.getClass().getName()+\": expected type JsonSerializer or Class<JsonSerializer> instead\");",
      "info" : "ThrowStatement[47397-47587]:ThrowStatement[48191-48381]"
    }, {
      "left" : "Class<?> cls = (Class<?>) src;",
      "right" : "Class<?> cls = (Class<?>) src;",
      "info" : "VariableDeclarationStatement[47606-47636]:VariableDeclarationStatement[48400-48430]"
    }, {
      "left" : "if (cls == noneClass || ClassUtil.isBogusClass(cls))",
      "right" : "if (cls == noneClass || ClassUtil.isBogusClass(cls))",
      "info" : "IfStatement[47645-47734]:IfStatement[48439-48528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47698-47734]:Block[48492-48528]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[47712-47724]:ReturnStatement[48506-48518]"
    }, {
      "left" : "return cls;",
      "right" : "return cls;",
      "info" : "ReturnStatement[47743-47754]:ReturnStatement[48537-48548]"
    } ]
  },
  "interFileMappings" : { }
}