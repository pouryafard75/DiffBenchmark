{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = -6346532297491082651L;",
      "right" : "private static final long serialVersionUID = -6346532297491082651L;",
      "info" : "FieldDeclaration[2042-2109]:FieldDeclaration[2042-2109]"
    }, {
      "left" : "private Object node;",
      "right" : "private Object node;",
      "info" : "FieldDeclaration[2115-2135]:FieldDeclaration[2115-2135]"
    }, {
      "left" : "private String id;",
      "right" : "private String id;",
      "info" : "FieldDeclaration[2140-2158]:FieldDeclaration[2140-2158]"
    }, {
      "left" : "private NamespaceResolver localNamespaceResolver;",
      "right" : "private NamespaceResolver localNamespaceResolver;",
      "info" : "FieldDeclaration[2163-2212]:FieldDeclaration[2163-2212]"
    }, {
      "left" : "public static final String XML_NAMESPACE_URI =\n            \"http://www.w3.org/XML/1998/namespace\";",
      "right" : "public static final String XML_NAMESPACE_URI =\n            \"http://www.w3.org/XML/1998/namespace\";",
      "info" : "FieldDeclaration[2218-2316]:FieldDeclaration[2218-2316]"
    }, {
      "left" : "public static final String XMLNS_NAMESPACE_URI =\n            \"http://www.w3.org/2000/xmlns/\";",
      "right" : "public static final String XMLNS_NAMESPACE_URI =\n            \"http://www.w3.org/2000/xmlns/\";",
      "info" : "FieldDeclaration[2321-2414]:FieldDeclaration[2321-2414]"
    }, {
      "left" : "public JDOMNodePointer(Object node, Locale locale)",
      "right" : "public JDOMNodePointer(Object node, Locale locale)",
      "info" : "MethodDeclaration[2420-2533]:MethodDeclaration[2420-2533]"
    }, {
      "left" : "public JDOMNodePointer(Object node, Locale locale, String id)",
      "right" : "public JDOMNodePointer(Object node, Locale locale, String id)",
      "info" : "MethodDeclaration[2539-2685]:MethodDeclaration[2539-2685]"
    }, {
      "left" : "public JDOMNodePointer(NodePointer parent, Object node)",
      "right" : "public JDOMNodePointer(NodePointer parent, Object node)",
      "info" : "MethodDeclaration[2691-2803]:MethodDeclaration[2691-2803]"
    }, {
      "left" : "public NodeIterator childIterator(\n        NodeTest test,\n        boolean reverse,\n        NodePointer startWith)",
      "right" : "public NodeIterator childIterator(\n        NodeTest test,\n        boolean reverse,\n        NodePointer startWith)",
      "info" : "MethodDeclaration[2809-3003]:MethodDeclaration[2809-3003]"
    }, {
      "left" : "public NodeIterator attributeIterator(QName name)",
      "right" : "public NodeIterator attributeIterator(QName name)",
      "info" : "MethodDeclaration[3009-3120]:MethodDeclaration[3009-3120]"
    }, {
      "left" : "public NodeIterator namespaceIterator()",
      "right" : "public NodeIterator namespaceIterator()",
      "info" : "MethodDeclaration[3126-3221]:MethodDeclaration[3126-3221]"
    }, {
      "left" : "public NodePointer namespacePointer(String prefix)",
      "right" : "public NodePointer namespacePointer(String prefix)",
      "info" : "MethodDeclaration[3227-3340]:MethodDeclaration[3227-3340]"
    }, {
      "left" : "public String getNamespaceURI()",
      "right" : "public String getNamespaceURI()",
      "info" : "MethodDeclaration[3346-3423]:MethodDeclaration[3346-3423]"
    }, {
      "left" : "private static String getNamespaceURI(Object node)",
      "right" : "private static String getNamespaceURI(Object node)",
      "info" : "MethodDeclaration[3429-3765]:MethodDeclaration[3429-3765]"
    }, {
      "left" : "public synchronized NamespaceResolver getNamespaceResolver()",
      "right" : "public synchronized NamespaceResolver getNamespaceResolver()",
      "info" : "MethodDeclaration[3882-4204]:MethodDeclaration[3882-4204]"
    }, {
      "left" : "public String getNamespaceURI(String prefix)",
      "right" : "public String getNamespaceURI(String prefix)",
      "info" : "MethodDeclaration[4210-4755]:MethodDeclaration[4210-4755]"
    }, {
      "left" : "public int compareChildNodePointers(\n        NodePointer pointer1,\n        NodePointer pointer2)",
      "right" : "public int compareChildNodePointers(\n        NodePointer pointer1,\n        NodePointer pointer2)",
      "info" : "MethodDeclaration[4761-6339]:MethodDeclaration[4761-6339]"
    }, {
      "left" : "public Object getBaseValue()",
      "right" : "public Object getBaseValue()",
      "info" : "MethodDeclaration[6346-6493]:MethodDeclaration[6346-6493]"
    }, {
      "left" : "public boolean isCollection()",
      "right" : "public boolean isCollection()",
      "info" : "MethodDeclaration[6499-6558]:MethodDeclaration[6499-6558]"
    }, {
      "left" : "public int getLength()",
      "right" : "public int getLength()",
      "info" : "MethodDeclaration[6564-6612]:MethodDeclaration[6564-6612]"
    }, {
      "left" : "public boolean isLeaf()",
      "right" : "public boolean isLeaf()",
      "info" : "MethodDeclaration[6618-6894]:MethodDeclaration[6618-6894]"
    }, {
      "left" : "public QName getName()",
      "right" : "public QName getName()",
      "info" : "MethodDeclaration[6900-7468]:MethodDeclaration[6900-7468]"
    }, {
      "left" : "public Object getImmediateNode()",
      "right" : "public Object getImmediateNode()",
      "info" : "MethodDeclaration[7474-7620]:MethodDeclaration[7474-7620]"
    }, {
      "left" : "public Object getValue()",
      "right" : "public Object getValue()",
      "info" : "MethodDeclaration[7626-8798]:MethodDeclaration[7626-8798]"
    }, {
      "left" : "public void setValue(Object value)",
      "right" : "public void setValue(Object value)",
      "info" : "MethodDeclaration[8804-10539]:MethodDeclaration[8804-10539]"
    }, {
      "left" : "private void addContent(List content)",
      "right" : "private void addContent(List content)",
      "info" : "MethodDeclaration[10545-11618]:MethodDeclaration[10545-11618]"
    }, {
      "left" : "public boolean testNode(NodeTest test)",
      "right" : "public boolean testNode(NodeTest test)",
      "info" : "MethodDeclaration[11624-11713]:MethodDeclaration[11624-11713]"
    }, {
      "left" : "private static boolean equalStrings(String s1, String s2)",
      "right" : "private static boolean equalStrings(String s1, String s2)",
      "info" : "MethodDeclaration[13771-14009]:MethodDeclaration[13720-13958]"
    }, {
      "left" : "public static String getPrefix(Object node)",
      "right" : "public static String getPrefix(Object node)",
      "info" : "MethodDeclaration[14015-14471]:MethodDeclaration[13964-14420]"
    }, {
      "left" : "public static String getLocalName(Object node)",
      "right" : "public static String getLocalName(Object node)",
      "info" : "MethodDeclaration[14477-14748]:MethodDeclaration[14426-14697]"
    }, {
      "left" : "public boolean isLanguage(String lang)",
      "right" : "public boolean isLanguage(String lang)",
      "info" : "MethodDeclaration[14754-15172]:MethodDeclaration[14703-15121]"
    }, {
      "left" : "protected String getLanguage()",
      "right" : "protected String getLanguage()",
      "info" : "MethodDeclaration[15178-15294]:MethodDeclaration[15127-15243]"
    }, {
      "left" : "protected static String findEnclosingAttribute(Object n, String attrName, Namespace ns)",
      "right" : "protected static String findEnclosingAttribute(Object n, String attrName, Namespace ns)",
      "info" : "MethodDeclaration[15300-15752]:MethodDeclaration[15249-15701]"
    }, {
      "left" : "private static Element nodeParent(Object node)",
      "right" : "private static Element nodeParent(Object node)",
      "info" : "MethodDeclaration[15758-16462]:MethodDeclaration[15707-16411]"
    }, {
      "left" : "public NodePointer createChild(\n        JXPathContext context,\n        QName name,\n        int index)",
      "right" : "public NodePointer createChild(\n        JXPathContext context,\n        QName name,\n        int index)",
      "info" : "MethodDeclaration[16468-17535]:MethodDeclaration[16417-17484]"
    }, {
      "left" : "public NodePointer createChild(\n            JXPathContext context, QName name, int index, Object value)",
      "right" : "public NodePointer createChild(\n            JXPathContext context, QName name, int index, Object value)",
      "info" : "MethodDeclaration[17541-17766]:MethodDeclaration[17490-17715]"
    }, {
      "left" : "public NodePointer createAttribute(JXPathContext context, QName name)",
      "right" : "public NodePointer createAttribute(JXPathContext context, QName name)",
      "info" : "MethodDeclaration[17772-18884]:MethodDeclaration[17721-18833]"
    }, {
      "left" : "public void remove()",
      "right" : "public void remove()",
      "info" : "MethodDeclaration[18890-19114]:MethodDeclaration[18839-19063]"
    }, {
      "left" : "public String asPath()",
      "right" : "public String asPath()",
      "info" : "MethodDeclaration[19120-21467]:MethodDeclaration[19069-21416]"
    }, {
      "left" : "private String escape(String string)",
      "right" : "private String escape(String string)",
      "info" : "MethodDeclaration[21473-22076]:MethodDeclaration[21422-22025]"
    }, {
      "left" : "private int getRelativePositionByName()",
      "right" : "private int getRelativePositionByName()",
      "info" : "MethodDeclaration[22082-22889]:MethodDeclaration[22031-22838]"
    }, {
      "left" : "private int getRelativePositionOfElement()",
      "right" : "private int getRelativePositionOfElement()",
      "info" : "MethodDeclaration[22895-23577]:MethodDeclaration[22844-23526]"
    }, {
      "left" : "private int getRelativePositionOfTextNode()",
      "right" : "private int getRelativePositionOfTextNode()",
      "info" : "MethodDeclaration[23583-24280]:MethodDeclaration[23532-24229]"
    }, {
      "left" : "private int getRelativePositionOfPI(String target)",
      "right" : "private int getRelativePositionOfPI(String target)",
      "info" : "MethodDeclaration[24286-24991]:MethodDeclaration[24235-24940]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[24997-25072]:MethodDeclaration[24946-25021]"
    }, {
      "left" : "public boolean equals(Object object)",
      "right" : "public boolean equals(Object object)",
      "info" : "MethodDeclaration[25078-25370]:MethodDeclaration[25027-25319]"
    }, {
      "left" : "private AbstractFactory getAbstractFactory(JXPathContext context)",
      "right" : "private AbstractFactory getAbstractFactory(JXPathContext context)",
      "info" : "MethodDeclaration[25376-25723]:MethodDeclaration[25325-25672]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2420-2426]:Modifier[2420-2426]"
    }, {
      "left" : "JDOMNodePointer",
      "right" : "JDOMNodePointer",
      "info" : "SimpleName[2427-2442]:SimpleName[2427-2442]"
    }, {
      "left" : "Object node",
      "right" : "Object node",
      "info" : "SingleVariableDeclaration[2443-2454]:SingleVariableDeclaration[2443-2454]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[2456-2469]:SingleVariableDeclaration[2456-2469]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2471-2533]:Block[2471-2533]"
    }, {
      "left" : "super(null, locale);",
      "right" : "super(null, locale);",
      "info" : "SuperConstructorInvocation[2481-2501]:SuperConstructorInvocation[2481-2501]"
    }, {
      "left" : "this.node = node;",
      "right" : "this.node = node;",
      "info" : "ExpressionStatement[2510-2527]:ExpressionStatement[2510-2527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2539-2545]:Modifier[2539-2545]"
    }, {
      "left" : "JDOMNodePointer",
      "right" : "JDOMNodePointer",
      "info" : "SimpleName[2546-2561]:SimpleName[2546-2561]"
    }, {
      "left" : "Object node",
      "right" : "Object node",
      "info" : "SingleVariableDeclaration[2562-2573]:SingleVariableDeclaration[2562-2573]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[2575-2588]:SingleVariableDeclaration[2575-2588]"
    }, {
      "left" : "String id",
      "right" : "String id",
      "info" : "SingleVariableDeclaration[2590-2599]:SingleVariableDeclaration[2590-2599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2601-2685]:Block[2601-2685]"
    }, {
      "left" : "super(null, locale);",
      "right" : "super(null, locale);",
      "info" : "SuperConstructorInvocation[2611-2631]:SuperConstructorInvocation[2611-2631]"
    }, {
      "left" : "this.node = node;",
      "right" : "this.node = node;",
      "info" : "ExpressionStatement[2640-2657]:ExpressionStatement[2640-2657]"
    }, {
      "left" : "this.id = id;",
      "right" : "this.id = id;",
      "info" : "ExpressionStatement[2666-2679]:ExpressionStatement[2666-2679]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2691-2697]:Modifier[2691-2697]"
    }, {
      "left" : "JDOMNodePointer",
      "right" : "JDOMNodePointer",
      "info" : "SimpleName[2698-2713]:SimpleName[2698-2713]"
    }, {
      "left" : "NodePointer parent",
      "right" : "NodePointer parent",
      "info" : "SingleVariableDeclaration[2714-2732]:SingleVariableDeclaration[2714-2732]"
    }, {
      "left" : "Object node",
      "right" : "Object node",
      "info" : "SingleVariableDeclaration[2734-2745]:SingleVariableDeclaration[2734-2745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2747-2803]:Block[2747-2803]"
    }, {
      "left" : "super(parent);",
      "right" : "super(parent);",
      "info" : "SuperConstructorInvocation[2757-2771]:SuperConstructorInvocation[2757-2771]"
    }, {
      "left" : "this.node = node;",
      "right" : "this.node = node;",
      "info" : "ExpressionStatement[2780-2797]:ExpressionStatement[2780-2797]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2809-2815]:Modifier[2809-2815]"
    }, {
      "left" : "NodeIterator",
      "right" : "NodeIterator",
      "info" : "SimpleType[2816-2828]:SimpleType[2816-2828]"
    }, {
      "left" : "childIterator",
      "right" : "childIterator",
      "info" : "SimpleName[2829-2842]:SimpleName[2829-2842]"
    }, {
      "left" : "NodeTest test",
      "right" : "NodeTest test",
      "info" : "SingleVariableDeclaration[2852-2865]:SingleVariableDeclaration[2852-2865]"
    }, {
      "left" : "boolean reverse",
      "right" : "boolean reverse",
      "info" : "SingleVariableDeclaration[2875-2890]:SingleVariableDeclaration[2875-2890]"
    }, {
      "left" : "NodePointer startWith",
      "right" : "NodePointer startWith",
      "info" : "SingleVariableDeclaration[2900-2921]:SingleVariableDeclaration[2900-2921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2927-3003]:Block[2927-3003]"
    }, {
      "left" : "return new JDOMNodeIterator(this, test, reverse, startWith);",
      "right" : "return new JDOMNodeIterator(this, test, reverse, startWith);",
      "info" : "ReturnStatement[2937-2997]:ReturnStatement[2937-2997]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3009-3015]:Modifier[3009-3015]"
    }, {
      "left" : "NodeIterator",
      "right" : "NodeIterator",
      "info" : "SimpleType[3016-3028]:SimpleType[3016-3028]"
    }, {
      "left" : "attributeIterator",
      "right" : "attributeIterator",
      "info" : "SimpleName[3029-3046]:SimpleName[3029-3046]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[3047-3057]:SingleVariableDeclaration[3047-3057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3059-3120]:Block[3059-3120]"
    }, {
      "left" : "return new JDOMAttributeIterator(this, name);",
      "right" : "return new JDOMAttributeIterator(this, name);",
      "info" : "ReturnStatement[3069-3114]:ReturnStatement[3069-3114]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3126-3132]:Modifier[3126-3132]"
    }, {
      "left" : "NodeIterator",
      "right" : "NodeIterator",
      "info" : "SimpleType[3133-3145]:SimpleType[3133-3145]"
    }, {
      "left" : "namespaceIterator",
      "right" : "namespaceIterator",
      "info" : "SimpleName[3146-3163]:SimpleName[3146-3163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3166-3221]:Block[3166-3221]"
    }, {
      "left" : "return new JDOMNamespaceIterator(this);",
      "right" : "return new JDOMNamespaceIterator(this);",
      "info" : "ReturnStatement[3176-3215]:ReturnStatement[3176-3215]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3227-3233]:Modifier[3227-3233]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[3234-3245]:SimpleType[3234-3245]"
    }, {
      "left" : "namespacePointer",
      "right" : "namespacePointer",
      "info" : "SimpleName[3246-3262]:SimpleName[3246-3262]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[3263-3276]:SingleVariableDeclaration[3263-3276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3278-3340]:Block[3278-3340]"
    }, {
      "left" : "return new JDOMNamespacePointer(this, prefix);",
      "right" : "return new JDOMNamespacePointer(this, prefix);",
      "info" : "ReturnStatement[3288-3334]:ReturnStatement[3288-3334]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3346-3352]:Modifier[3346-3352]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3353-3359]:SimpleType[3353-3359]"
    }, {
      "left" : "getNamespaceURI",
      "right" : "getNamespaceURI",
      "info" : "SimpleName[3360-3375]:SimpleName[3360-3375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3378-3423]:Block[3378-3423]"
    }, {
      "left" : "return getNamespaceURI(node);",
      "right" : "return getNamespaceURI(node);",
      "info" : "ReturnStatement[3388-3417]:ReturnStatement[3388-3417]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3429-3436]:Modifier[3429-3436]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3437-3443]:Modifier[3437-3443]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3444-3450]:SimpleType[3444-3450]"
    }, {
      "left" : "getNamespaceURI",
      "right" : "getNamespaceURI",
      "info" : "SimpleName[3451-3466]:SimpleName[3451-3466]"
    }, {
      "left" : "Object node",
      "right" : "Object node",
      "info" : "SingleVariableDeclaration[3467-3478]:SingleVariableDeclaration[3467-3478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3480-3765]:Block[3480-3765]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[3490-3738]:IfStatement[3490-3738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3519-3738]:Block[3519-3738]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[3533-3566]:VariableDeclarationStatement[3533-3566]"
    }, {
      "left" : "String ns = element.getNamespaceURI();",
      "right" : "String ns = element.getNamespaceURI();",
      "info" : "VariableDeclarationStatement[3579-3617]:VariableDeclarationStatement[3579-3617]"
    }, {
      "left" : "if (ns != null && ns.equals(\"\"))",
      "right" : "if (ns != null && ns.equals(\"\"))",
      "info" : "IfStatement[3630-3705]:IfStatement[3630-3705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3663-3705]:Block[3663-3705]"
    }, {
      "left" : "ns = null;",
      "right" : "ns = null;",
      "info" : "ExpressionStatement[3681-3691]:ExpressionStatement[3681-3691]"
    }, {
      "left" : "return ns;",
      "right" : "return ns;",
      "info" : "ReturnStatement[3718-3728]:ReturnStatement[3718-3728]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3747-3759]:ReturnStatement[3747-3759]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3882-3888]:Modifier[3882-3888]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[3889-3901]:Modifier[3889-3901]"
    }, {
      "left" : "NamespaceResolver",
      "right" : "NamespaceResolver",
      "info" : "SimpleType[3902-3919]:SimpleType[3902-3919]"
    }, {
      "left" : "getNamespaceResolver",
      "right" : "getNamespaceResolver",
      "info" : "SimpleName[3920-3940]:SimpleName[3920-3940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3943-4204]:Block[3943-4204]"
    }, {
      "left" : "if (localNamespaceResolver == null)",
      "right" : "if (localNamespaceResolver == null)",
      "info" : "IfStatement[3953-4159]:IfStatement[3953-4159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3989-4159]:Block[3989-4159]"
    }, {
      "left" : "localNamespaceResolver = new NamespaceResolver(super.getNamespaceResolver());",
      "right" : "localNamespaceResolver = new NamespaceResolver(super.getNamespaceResolver());",
      "info" : "ExpressionStatement[4003-4080]:ExpressionStatement[4003-4080]"
    }, {
      "left" : "localNamespaceResolver.setNamespaceContextPointer(this);",
      "right" : "localNamespaceResolver.setNamespaceContextPointer(this);",
      "info" : "ExpressionStatement[4093-4149]:ExpressionStatement[4093-4149]"
    }, {
      "left" : "return localNamespaceResolver;",
      "right" : "return localNamespaceResolver;",
      "info" : "ReturnStatement[4168-4198]:ReturnStatement[4168-4198]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4210-4216]:Modifier[4210-4216]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4217-4223]:SimpleType[4217-4223]"
    }, {
      "left" : "getNamespaceURI",
      "right" : "getNamespaceURI",
      "info" : "SimpleName[4224-4239]:SimpleName[4224-4239]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[4240-4253]:SingleVariableDeclaration[4240-4253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4255-4755]:Block[4255-4755]"
    }, {
      "left" : "if (prefix.equals(\"xml\"))",
      "right" : "if (prefix.equals(\"xml\"))",
      "info" : "IfStatement[4265-4355]:IfStatement[4265-4355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4291-4355]:Block[4291-4355]"
    }, {
      "left" : "return Namespace.XML_NAMESPACE.getURI();",
      "right" : "return Namespace.XML_NAMESPACE.getURI();",
      "info" : "ReturnStatement[4305-4345]:ReturnStatement[4305-4345]"
    }, {
      "left" : "Element element = null;",
      "right" : "Element element = null;",
      "info" : "VariableDeclarationStatement[4364-4387]:VariableDeclarationStatement[4364-4387]"
    }, {
      "left" : "if (node instanceof Document)",
      "right" : "if (node instanceof Document)",
      "info" : "IfStatement[4396-4495]:IfStatement[4396-4495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4426-4495]:Block[4426-4495]"
    }, {
      "left" : "element = ((Document) node).getRootElement();",
      "right" : "element = ((Document) node).getRootElement();",
      "info" : "ExpressionStatement[4440-4485]:ExpressionStatement[4440-4485]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[4504-4582]:IfStatement[4504-4582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4533-4582]:Block[4533-4582]"
    }, {
      "left" : "element = (Element) node;",
      "right" : "element = (Element) node;",
      "info" : "ExpressionStatement[4547-4572]:ExpressionStatement[4547-4572]"
    }, {
      "left" : "if (element == null)",
      "right" : "if (element == null)",
      "info" : "IfStatement[4591-4648]:IfStatement[4591-4648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4612-4648]:Block[4612-4648]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4626-4638]:ReturnStatement[4626-4638]"
    }, {
      "left" : "Namespace ns = element.getNamespace(prefix);",
      "right" : "Namespace ns = element.getNamespace(prefix);",
      "info" : "VariableDeclarationStatement[4657-4701]:VariableDeclarationStatement[4657-4701]"
    }, {
      "left" : "return ns == null ? null : ns.getURI();",
      "right" : "return ns == null ? null : ns.getURI();",
      "info" : "ReturnStatement[4710-4749]:ReturnStatement[4710-4749]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4761-4767]:Modifier[4761-4767]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[4768-4771]:PrimitiveType[4768-4771]"
    }, {
      "left" : "compareChildNodePointers",
      "right" : "compareChildNodePointers",
      "info" : "SimpleName[4772-4796]:SimpleName[4772-4796]"
    }, {
      "left" : "NodePointer pointer1",
      "right" : "NodePointer pointer1",
      "info" : "SingleVariableDeclaration[4806-4826]:SingleVariableDeclaration[4806-4826]"
    }, {
      "left" : "NodePointer pointer2",
      "right" : "NodePointer pointer2",
      "info" : "SingleVariableDeclaration[4836-4856]:SingleVariableDeclaration[4836-4856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4862-6339]:Block[4862-6339]"
    }, {
      "left" : "Object node1 = pointer1.getBaseValue();",
      "right" : "Object node1 = pointer1.getBaseValue();",
      "info" : "VariableDeclarationStatement[4872-4911]:VariableDeclarationStatement[4872-4911]"
    }, {
      "left" : "Object node2 = pointer2.getBaseValue();",
      "right" : "Object node2 = pointer2.getBaseValue();",
      "info" : "VariableDeclarationStatement[4920-4959]:VariableDeclarationStatement[4920-4959]"
    }, {
      "left" : "if (node1 == node2)",
      "right" : "if (node1 == node2)",
      "info" : "IfStatement[4968-5021]:IfStatement[4968-5021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4988-5021]:Block[4988-5021]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[5002-5011]:ReturnStatement[5002-5011]"
    }, {
      "left" : "if ((node1 instanceof Attribute) && !(node2 instanceof Attribute))",
      "right" : "if ((node1 instanceof Attribute) && !(node2 instanceof Attribute))",
      "info" : "IfStatement[5031-5132]:IfStatement[5031-5132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5098-5132]:Block[5098-5132]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[5112-5122]:ReturnStatement[5112-5122]"
    }, {
      "left" : "if (\n            !(node1 instanceof Attribute) && (node2 instanceof Attribute))",
      "right" : "if (\n            !(node1 instanceof Attribute) && (node2 instanceof Attribute))",
      "info" : "IfStatement[5141-5254]:IfStatement[5141-5254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5221-5254]:Block[5221-5254]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[5235-5244]:ReturnStatement[5235-5244]"
    }, {
      "left" : "if (\n            (node1 instanceof Attribute) && (node2 instanceof Attribute))",
      "right" : "if (\n            (node1 instanceof Attribute) && (node2 instanceof Attribute))",
      "info" : "IfStatement[5263-5768]:IfStatement[5263-5768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5342-5768]:Block[5342-5768]"
    }, {
      "left" : "List list = ((Element) getNode()).getAttributes();",
      "right" : "List list = ((Element) getNode()).getAttributes();",
      "info" : "VariableDeclarationStatement[5356-5406]:VariableDeclarationStatement[5356-5406]"
    }, {
      "left" : "int length = list.size();",
      "right" : "int length = list.size();",
      "info" : "VariableDeclarationStatement[5419-5444]:VariableDeclarationStatement[5419-5444]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[5457-5715]:ForStatement[5457-5715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5490-5715]:Block[5490-5715]"
    }, {
      "left" : "Object n = list.get(i);",
      "right" : "Object n = list.get(i);",
      "info" : "VariableDeclarationStatement[5508-5531]:VariableDeclarationStatement[5508-5531]"
    }, {
      "left" : "if (n == node1)",
      "right" : "if (n == node1)",
      "info" : "IfStatement[5548-5701]:IfStatement[5548-5701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5564-5614]:Block[5564-5614]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[5586-5596]:ReturnStatement[5586-5596]"
    }, {
      "left" : "if (n == node2)",
      "right" : "if (n == node2)",
      "info" : "IfStatement[5636-5701]:IfStatement[5636-5701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5652-5701]:Block[5652-5701]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[5674-5683]:ReturnStatement[5674-5683]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[5728-5737]:ReturnStatement[5728-5737]"
    }, {
      "left" : "if (!(node instanceof Element))",
      "right" : "if (!(node instanceof Element))",
      "info" : "IfStatement[5778-5986]:IfStatement[5778-5986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5810-5986]:Block[5810-5986]"
    }, {
      "left" : "throw new RuntimeException(\n                \"JXPath internal error: \"\n                    + \"compareChildNodes called for \"\n                    + node);",
      "right" : "throw new RuntimeException(\n                \"JXPath internal error: \"\n                    + \"compareChildNodes called for \"\n                    + node);",
      "info" : "ThrowStatement[5824-5976]:ThrowStatement[5824-5976]"
    }, {
      "left" : "List children = ((Element) node).getContent();",
      "right" : "List children = ((Element) node).getContent();",
      "info" : "VariableDeclarationStatement[5996-6042]:VariableDeclarationStatement[5996-6042]"
    }, {
      "left" : "int length = children.size();",
      "right" : "int length = children.size();",
      "info" : "VariableDeclarationStatement[6051-6080]:VariableDeclarationStatement[6051-6080]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[6089-6314]:ForStatement[6089-6314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6122-6314]:Block[6122-6314]"
    }, {
      "left" : "Object n = children.get(i);",
      "right" : "Object n = children.get(i);",
      "info" : "VariableDeclarationStatement[6136-6163]:VariableDeclarationStatement[6136-6163]"
    }, {
      "left" : "if (n == node1)",
      "right" : "if (n == node1)",
      "info" : "IfStatement[6176-6234]:IfStatement[6176-6234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6192-6234]:Block[6192-6234]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[6210-6220]:ReturnStatement[6210-6220]"
    }, {
      "left" : "if (n == node2)",
      "right" : "if (n == node2)",
      "info" : "IfStatement[6247-6304]:IfStatement[6247-6304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6263-6304]:Block[6263-6304]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[6281-6290]:ReturnStatement[6281-6290]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[6324-6333]:ReturnStatement[6324-6333]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6436-6442]:Modifier[6436-6442]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[6443-6449]:SimpleType[6443-6449]"
    }, {
      "left" : "getBaseValue",
      "right" : "getBaseValue",
      "info" : "SimpleName[6450-6462]:SimpleName[6450-6462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6465-6493]:Block[6465-6493]"
    }, {
      "left" : "return node;",
      "right" : "return node;",
      "info" : "ReturnStatement[6475-6487]:ReturnStatement[6475-6487]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6499-6505]:Modifier[6499-6505]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6506-6513]:PrimitiveType[6506-6513]"
    }, {
      "left" : "isCollection",
      "right" : "isCollection",
      "info" : "SimpleName[6514-6526]:SimpleName[6514-6526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6529-6558]:Block[6529-6558]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6539-6552]:ReturnStatement[6539-6552]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6564-6570]:Modifier[6564-6570]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6571-6574]:PrimitiveType[6571-6574]"
    }, {
      "left" : "getLength",
      "right" : "getLength",
      "info" : "SimpleName[6575-6584]:SimpleName[6575-6584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6587-6612]:Block[6587-6612]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[6597-6606]:ReturnStatement[6597-6606]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6618-6624]:Modifier[6618-6624]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6625-6632]:PrimitiveType[6625-6632]"
    }, {
      "left" : "isLeaf",
      "right" : "isLeaf",
      "info" : "SimpleName[6633-6639]:SimpleName[6633-6639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6642-6894]:Block[6642-6894]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[6652-6754]:IfStatement[6652-6754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6681-6754]:Block[6681-6754]"
    }, {
      "left" : "return ((Element) node).getContent().size() == 0;",
      "right" : "return ((Element) node).getContent().size() == 0;",
      "info" : "ReturnStatement[6695-6744]:ReturnStatement[6695-6744]"
    }, {
      "left" : "if (node instanceof Document)",
      "right" : "if (node instanceof Document)",
      "info" : "IfStatement[6763-6867]:IfStatement[6763-6867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6793-6867]:Block[6793-6867]"
    }, {
      "left" : "return ((Document) node).getContent().size() == 0;",
      "right" : "return ((Document) node).getContent().size() == 0;",
      "info" : "ReturnStatement[6807-6857]:ReturnStatement[6807-6857]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[6876-6888]:ReturnStatement[6876-6888]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6985-6991]:Modifier[6985-6991]"
    }, {
      "left" : "QName",
      "right" : "QName",
      "info" : "SimpleType[6992-6997]:SimpleType[6992-6997]"
    }, {
      "left" : "getName",
      "right" : "getName",
      "info" : "SimpleName[6998-7005]:SimpleName[6998-7005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7008-7468]:Block[7008-7468]"
    }, {
      "left" : "String ns = null;",
      "right" : "String ns = null;",
      "info" : "VariableDeclarationStatement[7018-7035]:VariableDeclarationStatement[7018-7035]"
    }, {
      "left" : "String ln = null;",
      "right" : "String ln = null;",
      "info" : "VariableDeclarationStatement[7044-7061]:VariableDeclarationStatement[7044-7061]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[7070-7428]:IfStatement[7070-7428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7099-7299]:Block[7099-7299]"
    }, {
      "left" : "ns = ((Element) node).getNamespacePrefix();",
      "right" : "ns = ((Element) node).getNamespacePrefix();",
      "info" : "ExpressionStatement[7113-7156]:ExpressionStatement[7113-7156]"
    }, {
      "left" : "if (ns != null && ns.equals(\"\"))",
      "right" : "if (ns != null && ns.equals(\"\"))",
      "info" : "IfStatement[7169-7244]:IfStatement[7169-7244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7202-7244]:Block[7202-7244]"
    }, {
      "left" : "ns = null;",
      "right" : "ns = null;",
      "info" : "ExpressionStatement[7220-7230]:ExpressionStatement[7220-7230]"
    }, {
      "left" : "ln = ((Element) node).getName();",
      "right" : "ln = ((Element) node).getName();",
      "info" : "ExpressionStatement[7257-7289]:ExpressionStatement[7257-7289]"
    }, {
      "left" : "if (node instanceof ProcessingInstruction)",
      "right" : "if (node instanceof ProcessingInstruction)",
      "info" : "IfStatement[7313-7428]:IfStatement[7313-7428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7356-7428]:Block[7356-7428]"
    }, {
      "left" : "ln = ((ProcessingInstruction) node).getTarget();",
      "right" : "ln = ((ProcessingInstruction) node).getTarget();",
      "info" : "ExpressionStatement[7370-7418]:ExpressionStatement[7370-7418]"
    }, {
      "left" : "return new QName(ns, ln);",
      "right" : "return new QName(ns, ln);",
      "info" : "ReturnStatement[7437-7462]:ReturnStatement[7437-7462]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7559-7565]:Modifier[7559-7565]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[7566-7572]:SimpleType[7566-7572]"
    }, {
      "left" : "getImmediateNode",
      "right" : "getImmediateNode",
      "info" : "SimpleName[7573-7589]:SimpleName[7573-7589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7592-7620]:Block[7592-7620]"
    }, {
      "left" : "return node;",
      "right" : "return node;",
      "info" : "ReturnStatement[7602-7614]:ReturnStatement[7602-7614]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7626-7632]:Modifier[7626-7632]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[7633-7639]:SimpleType[7633-7639]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[7640-7648]:SimpleName[7640-7648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7651-8798]:Block[7651-8798]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[7661-8163]:IfStatement[7661-8163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7690-8163]:Block[7690-8163]"
    }, {
      "left" : "StringBuffer buf = new StringBuffer();",
      "right" : "StringBuffer buf = new StringBuffer();",
      "info" : "VariableDeclarationStatement[7704-7742]:VariableDeclarationStatement[7704-7742]"
    }, {
      "left" : "for (NodeIterator children = childIterator(null, false, null); children.setPosition(children.getPosition() + 1))",
      "right" : "for (NodeIterator children = childIterator(null, false, null); children.setPosition(children.getPosition() + 1))",
      "info" : "ForStatement[7755-8118]:ForStatement[7755-8118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7869-8118]:Block[7869-8118]"
    }, {
      "left" : "NodePointer ptr = children.getNodePointer();",
      "right" : "NodePointer ptr = children.getNodePointer();",
      "info" : "VariableDeclarationStatement[7887-7931]:VariableDeclarationStatement[7887-7931]"
    }, {
      "left" : "if (ptr.getImmediateNode() instanceof Element || ptr.getImmediateNode() instanceof Text)",
      "right" : "if (ptr.getImmediateNode() instanceof Element || ptr.getImmediateNode() instanceof Text)",
      "info" : "IfStatement[7948-8104]:IfStatement[7948-8104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8037-8104]:Block[8037-8104]"
    }, {
      "left" : "buf.append(ptr.getValue());",
      "right" : "buf.append(ptr.getValue());",
      "info" : "ExpressionStatement[8059-8086]:ExpressionStatement[8059-8086]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[8131-8153]:ReturnStatement[8131-8153]"
    }, {
      "left" : "if (node instanceof Comment)",
      "right" : "if (node instanceof Comment)",
      "info" : "IfStatement[8172-8373]:IfStatement[8172-8373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8201-8373]:Block[8201-8373]"
    }, {
      "left" : "String text = ((Comment) node).getText();",
      "right" : "String text = ((Comment) node).getText();",
      "info" : "VariableDeclarationStatement[8215-8256]:VariableDeclarationStatement[8215-8256]"
    }, {
      "left" : "if (text != null)",
      "right" : "if (text != null)",
      "info" : "IfStatement[8269-8338]:IfStatement[8269-8338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8287-8338]:Block[8287-8338]"
    }, {
      "left" : "text = text.trim();",
      "right" : "text = text.trim();",
      "info" : "ExpressionStatement[8305-8324]:ExpressionStatement[8305-8324]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[8351-8363]:ReturnStatement[8351-8363]"
    }, {
      "left" : "String result = null;",
      "right" : "String result = null;",
      "info" : "VariableDeclarationStatement[8382-8403]:VariableDeclarationStatement[8382-8403]"
    }, {
      "left" : "if (node instanceof Text)",
      "right" : "if (node instanceof Text)",
      "info" : "IfStatement[8412-8495]:IfStatement[8412-8495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8438-8495]:Block[8438-8495]"
    }, {
      "left" : "result = ((Text) node).getText();",
      "right" : "result = ((Text) node).getText();",
      "info" : "ExpressionStatement[8452-8485]:ExpressionStatement[8452-8485]"
    }, {
      "left" : "if (node instanceof ProcessingInstruction)",
      "right" : "if (node instanceof ProcessingInstruction)",
      "info" : "IfStatement[8504-8621]:IfStatement[8504-8621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8547-8621]:Block[8547-8621]"
    }, {
      "left" : "result = ((ProcessingInstruction) node).getData();",
      "right" : "result = ((ProcessingInstruction) node).getData();",
      "info" : "ExpressionStatement[8561-8611]:ExpressionStatement[8561-8611]"
    }, {
      "left" : "boolean trim = !\"preserve\".equals(findEnclosingAttribute(node, \"space\", Namespace.XML_NAMESPACE));",
      "right" : "boolean trim = !\"preserve\".equals(findEnclosingAttribute(node, \"space\", Namespace.XML_NAMESPACE));",
      "info" : "VariableDeclarationStatement[8630-8728]:VariableDeclarationStatement[8630-8728]"
    }, {
      "left" : "return result != null && trim ? result.trim() : result;",
      "right" : "return result != null && trim ? result.trim() : result;",
      "info" : "ReturnStatement[8737-8792]:ReturnStatement[8737-8792]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8804-8810]:Modifier[8804-8810]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8811-8815]:PrimitiveType[8811-8815]"
    }, {
      "left" : "setValue",
      "right" : "setValue",
      "info" : "SimpleName[8816-8824]:SimpleName[8816-8824]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[8825-8837]:SingleVariableDeclaration[8825-8837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8839-10539]:Block[8839-10539]"
    }, {
      "left" : "if (node instanceof Text)",
      "right" : "if (node instanceof Text)",
      "info" : "IfStatement[8849-10533]:IfStatement[8849-10533]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8875-9174]:Block[8875-9174]"
    }, {
      "left" : "String string = (String) TypeUtils.convert(value, String.class);",
      "right" : "String string = (String) TypeUtils.convert(value, String.class);",
      "info" : "VariableDeclarationStatement[8889-8953]:VariableDeclarationStatement[8889-8953]"
    }, {
      "left" : "if (string != null && !string.equals(\"\"))",
      "right" : "if (string != null && !string.equals(\"\"))",
      "info" : "IfStatement[8966-9164]:IfStatement[8966-9164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9008-9070]:Block[9008-9070]"
    }, {
      "left" : "((Text) node).setText(string);",
      "right" : "((Text) node).setText(string);",
      "info" : "ExpressionStatement[9026-9056]:ExpressionStatement[9026-9056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9088-9164]:Block[9088-9164]"
    }, {
      "left" : "nodeParent(node).removeContent((Text) node);",
      "right" : "nodeParent(node).removeContent((Text) node);",
      "info" : "ExpressionStatement[9106-9150]:ExpressionStatement[9106-9150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9188-10533]:Block[9188-10533]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[9202-9235]:VariableDeclarationStatement[9202-9235]"
    }, {
      "left" : "element.getContent().clear();",
      "right" : "element.getContent().clear();",
      "info" : "ExpressionStatement[9248-9277]:ExpressionStatement[9248-9277]"
    }, {
      "left" : "if (value instanceof Element)",
      "right" : "if (value instanceof Element)",
      "info" : "IfStatement[9291-10523]:IfStatement[9291-10523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9321-9447]:Block[9321-9447]"
    }, {
      "left" : "Element valueElement = (Element) value;",
      "right" : "Element valueElement = (Element) value;",
      "info" : "VariableDeclarationStatement[9339-9378]:VariableDeclarationStatement[9339-9378]"
    }, {
      "left" : "addContent(valueElement.getContent());",
      "right" : "addContent(valueElement.getContent());",
      "info" : "ExpressionStatement[9395-9433]:ExpressionStatement[9395-9433]"
    }, {
      "left" : "if (value instanceof Document)",
      "right" : "if (value instanceof Document)",
      "info" : "IfStatement[9465-10523]:IfStatement[9465-10523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9496-9626]:Block[9496-9626]"
    }, {
      "left" : "Document valueDocument = (Document) value;",
      "right" : "Document valueDocument = (Document) value;",
      "info" : "VariableDeclarationStatement[9514-9556]:VariableDeclarationStatement[9514-9556]"
    }, {
      "left" : "addContent(valueDocument.getContent());",
      "right" : "addContent(valueDocument.getContent());",
      "info" : "ExpressionStatement[9573-9612]:ExpressionStatement[9573-9612]"
    }, {
      "left" : "if (value instanceof Text || value instanceof CDATA)",
      "right" : "if (value instanceof Text || value instanceof CDATA)",
      "info" : "IfStatement[9644-10523]:IfStatement[9644-10523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9697-9824]:Block[9697-9824]"
    }, {
      "left" : "String string = ((Text) value).getText();",
      "right" : "String string = ((Text) value).getText();",
      "info" : "VariableDeclarationStatement[9715-9756]:VariableDeclarationStatement[9715-9756]"
    }, {
      "left" : "element.addContent(new Text(string));",
      "right" : "element.addContent(new Text(string));",
      "info" : "ExpressionStatement[9773-9810]:ExpressionStatement[9773-9810]"
    }, {
      "left" : "if (value instanceof ProcessingInstruction)",
      "right" : "if (value instanceof ProcessingInstruction)",
      "info" : "IfStatement[9842-10523]:IfStatement[9842-10523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9886-10094]:Block[9886-10094]"
    }, {
      "left" : "ProcessingInstruction pi =\n                    (ProcessingInstruction) ((ProcessingInstruction) value)\n                        .clone();",
      "right" : "ProcessingInstruction pi =\n                    (ProcessingInstruction) ((ProcessingInstruction) value)\n                        .clone();",
      "info" : "VariableDeclarationStatement[9904-10040]:VariableDeclarationStatement[9904-10040]"
    }, {
      "left" : "element.addContent(pi);",
      "right" : "element.addContent(pi);",
      "info" : "ExpressionStatement[10057-10080]:ExpressionStatement[10057-10080]"
    }, {
      "left" : "if (value instanceof Comment)",
      "right" : "if (value instanceof Comment)",
      "info" : "IfStatement[10112-10523]:IfStatement[10112-10523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10142-10273]:Block[10142-10273]"
    }, {
      "left" : "Comment comment = (Comment) ((Comment) value).clone();",
      "right" : "Comment comment = (Comment) ((Comment) value).clone();",
      "info" : "VariableDeclarationStatement[10160-10214]:VariableDeclarationStatement[10160-10214]"
    }, {
      "left" : "element.addContent(comment);",
      "right" : "element.addContent(comment);",
      "info" : "ExpressionStatement[10231-10259]:ExpressionStatement[10231-10259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10291-10523]:Block[10291-10523]"
    }, {
      "left" : "String string = (String) TypeUtils.convert(value, String.class);",
      "right" : "String string = (String) TypeUtils.convert(value, String.class);",
      "info" : "VariableDeclarationStatement[10309-10373]:VariableDeclarationStatement[10309-10373]"
    }, {
      "left" : "if (string != null && !string.equals(\"\"))",
      "right" : "if (string != null && !string.equals(\"\"))",
      "info" : "IfStatement[10390-10509]:IfStatement[10390-10509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10432-10509]:Block[10432-10509]"
    }, {
      "left" : "element.addContent(new Text(string));",
      "right" : "element.addContent(new Text(string));",
      "info" : "ExpressionStatement[10454-10491]:ExpressionStatement[10454-10491]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10545-10552]:Modifier[10545-10552]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10553-10557]:PrimitiveType[10553-10557]"
    }, {
      "left" : "addContent",
      "right" : "addContent",
      "info" : "SimpleName[10558-10568]:SimpleName[10558-10568]"
    }, {
      "left" : "List content",
      "right" : "List content",
      "info" : "SingleVariableDeclaration[10569-10581]:SingleVariableDeclaration[10569-10581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10583-11618]:Block[10583-11618]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[10593-10626]:VariableDeclarationStatement[10593-10626]"
    }, {
      "left" : "int count = content.size();",
      "right" : "int count = content.size();",
      "info" : "VariableDeclarationStatement[10635-10662]:VariableDeclarationStatement[10635-10662]"
    }, {
      "left" : "for (int i = 0; i < count; i++)",
      "right" : "for (int i = 0; i < count; i++)",
      "info" : "ForStatement[10672-11612]:ForStatement[10672-11612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10704-11612]:Block[10704-11612]"
    }, {
      "left" : "Object child = content.get(i);",
      "right" : "Object child = content.get(i);",
      "info" : "VariableDeclarationStatement[10718-10748]:VariableDeclarationStatement[10718-10748]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[10761-11602]:IfStatement[10761-11602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10791-10910]:Block[10791-10910]"
    }, {
      "left" : "child = ((Element) child).clone();",
      "right" : "child = ((Element) child).clone();",
      "info" : "ExpressionStatement[10809-10843]:ExpressionStatement[10809-10843]"
    }, {
      "left" : "element.addContent((Element) child);",
      "right" : "element.addContent((Element) child);",
      "info" : "ExpressionStatement[10860-10896]:ExpressionStatement[10860-10896]"
    }, {
      "left" : "if (child instanceof Text)",
      "right" : "if (child instanceof Text)",
      "info" : "IfStatement[10928-11602]:IfStatement[10928-11602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10955-11068]:Block[10955-11068]"
    }, {
      "left" : "child = ((Text) child).clone();",
      "right" : "child = ((Text) child).clone();",
      "info" : "ExpressionStatement[10973-11004]:ExpressionStatement[10973-11004]"
    }, {
      "left" : "element.addContent((Text) child);",
      "right" : "element.addContent((Text) child);",
      "info" : "ExpressionStatement[11021-11054]:ExpressionStatement[11021-11054]"
    }, {
      "left" : "if (node instanceof CDATA)",
      "right" : "if (node instanceof CDATA)",
      "info" : "IfStatement[11086-11602]:IfStatement[11086-11602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11113-11228]:Block[11113-11228]"
    }, {
      "left" : "child = ((CDATA) child).clone();",
      "right" : "child = ((CDATA) child).clone();",
      "info" : "ExpressionStatement[11131-11163]:ExpressionStatement[11131-11163]"
    }, {
      "left" : "element.addContent((CDATA) child);",
      "right" : "element.addContent((CDATA) child);",
      "info" : "ExpressionStatement[11180-11214]:ExpressionStatement[11180-11214]"
    }, {
      "left" : "if (node instanceof ProcessingInstruction)",
      "right" : "if (node instanceof ProcessingInstruction)",
      "info" : "IfStatement[11246-11602]:IfStatement[11246-11602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11289-11436]:Block[11289-11436]"
    }, {
      "left" : "child = ((ProcessingInstruction) child).clone();",
      "right" : "child = ((ProcessingInstruction) child).clone();",
      "info" : "ExpressionStatement[11307-11355]:ExpressionStatement[11307-11355]"
    }, {
      "left" : "element.addContent((ProcessingInstruction) child);",
      "right" : "element.addContent((ProcessingInstruction) child);",
      "info" : "ExpressionStatement[11372-11422]:ExpressionStatement[11372-11422]"
    }, {
      "left" : "if (node instanceof Comment)",
      "right" : "if (node instanceof Comment)",
      "info" : "IfStatement[11454-11602]:IfStatement[11454-11602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11483-11602]:Block[11483-11602]"
    }, {
      "left" : "child = ((Comment) child).clone();",
      "right" : "child = ((Comment) child).clone();",
      "info" : "ExpressionStatement[11501-11535]:ExpressionStatement[11501-11535]"
    }, {
      "left" : "element.addContent((Comment) child);",
      "right" : "element.addContent((Comment) child);",
      "info" : "ExpressionStatement[11552-11588]:ExpressionStatement[11552-11588]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11624-11630]:Modifier[11624-11630]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11631-11638]:PrimitiveType[11631-11638]"
    }, {
      "left" : "testNode",
      "right" : "testNode",
      "info" : "SimpleName[11639-11647]:SimpleName[11639-11647]"
    }, {
      "left" : "NodeTest test",
      "right" : "NodeTest test",
      "info" : "SingleVariableDeclaration[11648-11661]:SingleVariableDeclaration[11648-11661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11663-11713]:Block[11663-11713]"
    }, {
      "left" : "return testNode(this, node, test);",
      "right" : "return testNode(this, node, test);",
      "info" : "ReturnStatement[11673-11707]:ReturnStatement[11673-11707]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[13771-13778]:Modifier[13720-13727]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13779-13785]:Modifier[13728-13734]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[13786-13793]:PrimitiveType[13735-13742]"
    }, {
      "left" : "equalStrings",
      "right" : "equalStrings",
      "info" : "SimpleName[13794-13806]:SimpleName[13743-13755]"
    }, {
      "left" : "String s1",
      "right" : "String s1",
      "info" : "SingleVariableDeclaration[13807-13816]:SingleVariableDeclaration[13756-13765]"
    }, {
      "left" : "String s2",
      "right" : "String s2",
      "info" : "SingleVariableDeclaration[13818-13827]:SingleVariableDeclaration[13767-13776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13829-14009]:Block[13778-13958]"
    }, {
      "left" : "if (s1 == s2)",
      "right" : "if (s1 == s2)",
      "info" : "IfStatement[13839-13889]:IfStatement[13788-13838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13853-13889]:Block[13802-13838]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[13867-13879]:ReturnStatement[13816-13828]"
    }, {
      "left" : "s1 = s1 == null ? \"\" : s1.trim();",
      "right" : "s1 = s1 == null ? \"\" : s1.trim();",
      "info" : "ExpressionStatement[13898-13931]:ExpressionStatement[13847-13880]"
    }, {
      "left" : "s2 = s2 == null ? \"\" : s2.trim();",
      "right" : "s2 = s2 == null ? \"\" : s2.trim();",
      "info" : "ExpressionStatement[13940-13973]:ExpressionStatement[13889-13922]"
    }, {
      "left" : "return s1.equals(s2);",
      "right" : "return s1.equals(s2);",
      "info" : "ReturnStatement[13982-14003]:ReturnStatement[13931-13952]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14015-14021]:Modifier[13964-13970]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14022-14028]:Modifier[13971-13977]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[14029-14035]:SimpleType[13978-13984]"
    }, {
      "left" : "getPrefix",
      "right" : "getPrefix",
      "info" : "SimpleName[14036-14045]:SimpleName[13985-13994]"
    }, {
      "left" : "Object node",
      "right" : "Object node",
      "info" : "SingleVariableDeclaration[14046-14057]:SingleVariableDeclaration[13995-14006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14059-14471]:Block[14008-14420]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[14069-14250]:IfStatement[14018-14199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14098-14250]:Block[14047-14199]"
    }, {
      "left" : "String prefix = ((Element) node).getNamespacePrefix();",
      "right" : "String prefix = ((Element) node).getNamespacePrefix();",
      "info" : "VariableDeclarationStatement[14112-14166]:VariableDeclarationStatement[14061-14115]"
    }, {
      "left" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
      "right" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
      "info" : "ReturnStatement[14179-14240]:ReturnStatement[14128-14189]"
    }, {
      "left" : "if (node instanceof Attribute)",
      "right" : "if (node instanceof Attribute)",
      "info" : "IfStatement[14259-14444]:IfStatement[14208-14393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14290-14444]:Block[14239-14393]"
    }, {
      "left" : "String prefix = ((Attribute) node).getNamespacePrefix();",
      "right" : "String prefix = ((Attribute) node).getNamespacePrefix();",
      "info" : "VariableDeclarationStatement[14304-14360]:VariableDeclarationStatement[14253-14309]"
    }, {
      "left" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
      "right" : "return (prefix == null || prefix.equals(\"\")) ? null : prefix;",
      "info" : "ReturnStatement[14373-14434]:ReturnStatement[14322-14383]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14453-14465]:ReturnStatement[14402-14414]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14477-14483]:Modifier[14426-14432]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14484-14490]:Modifier[14433-14439]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[14491-14497]:SimpleType[14440-14446]"
    }, {
      "left" : "getLocalName",
      "right" : "getLocalName",
      "info" : "SimpleName[14498-14510]:SimpleName[14447-14459]"
    }, {
      "left" : "Object node",
      "right" : "Object node",
      "info" : "SingleVariableDeclaration[14511-14522]:SingleVariableDeclaration[14460-14471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14524-14748]:Block[14473-14697]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[14534-14621]:IfStatement[14483-14570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14563-14621]:Block[14512-14570]"
    }, {
      "left" : "return ((Element) node).getName();",
      "right" : "return ((Element) node).getName();",
      "info" : "ReturnStatement[14577-14611]:ReturnStatement[14526-14560]"
    }, {
      "left" : "if (node instanceof Attribute)",
      "right" : "if (node instanceof Attribute)",
      "info" : "IfStatement[14630-14721]:IfStatement[14579-14670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14661-14721]:Block[14610-14670]"
    }, {
      "left" : "return ((Attribute) node).getName();",
      "right" : "return ((Attribute) node).getName();",
      "info" : "ReturnStatement[14675-14711]:ReturnStatement[14624-14660]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14730-14742]:ReturnStatement[14679-14691]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14974-14980]:Modifier[14923-14929]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[14981-14988]:PrimitiveType[14930-14937]"
    }, {
      "left" : "isLanguage",
      "right" : "isLanguage",
      "info" : "SimpleName[14989-14999]:SimpleName[14938-14948]"
    }, {
      "left" : "String lang",
      "right" : "String lang",
      "info" : "SingleVariableDeclaration[15000-15011]:SingleVariableDeclaration[14949-14960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15013-15172]:Block[14962-15121]"
    }, {
      "left" : "String current = getLanguage();",
      "right" : "String current = getLanguage();",
      "info" : "VariableDeclarationStatement[15023-15054]:VariableDeclarationStatement[14972-15003]"
    }, {
      "left" : "return current == null ? super.isLanguage(lang) : current.toUpperCase().startsWith(lang.toUpperCase());",
      "right" : "return current == null ? super.isLanguage(lang) : current.toUpperCase().startsWith(lang.toUpperCase());",
      "info" : "ReturnStatement[15063-15166]:ReturnStatement[15012-15115]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[15178-15187]:Modifier[15127-15136]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[15188-15194]:SimpleType[15137-15143]"
    }, {
      "left" : "getLanguage",
      "right" : "getLanguage",
      "info" : "SimpleName[15195-15206]:SimpleName[15144-15155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15209-15294]:Block[15158-15243]"
    }, {
      "left" : "return findEnclosingAttribute(node, \"lang\", Namespace.XML_NAMESPACE);",
      "right" : "return findEnclosingAttribute(node, \"lang\", Namespace.XML_NAMESPACE);",
      "info" : "ReturnStatement[15219-15288]:ReturnStatement[15168-15237]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[15300-15309]:Modifier[15249-15258]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15310-15316]:Modifier[15259-15265]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[15317-15323]:SimpleType[15266-15272]"
    }, {
      "left" : "findEnclosingAttribute",
      "right" : "findEnclosingAttribute",
      "info" : "SimpleName[15324-15346]:SimpleName[15273-15295]"
    }, {
      "left" : "Object n",
      "right" : "Object n",
      "info" : "SingleVariableDeclaration[15347-15355]:SingleVariableDeclaration[15296-15304]"
    }, {
      "left" : "String attrName",
      "right" : "String attrName",
      "info" : "SingleVariableDeclaration[15357-15372]:SingleVariableDeclaration[15306-15321]"
    }, {
      "left" : "Namespace ns",
      "right" : "Namespace ns",
      "info" : "SingleVariableDeclaration[15374-15386]:SingleVariableDeclaration[15323-15335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15388-15752]:Block[15337-15701]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[15398-15725]:WhileStatement[15347-15674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15416-15725]:Block[15365-15674]"
    }, {
      "left" : "if (n instanceof Element)",
      "right" : "if (n instanceof Element)",
      "info" : "IfStatement[15430-15684]:IfStatement[15379-15633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15456-15684]:Block[15405-15633]"
    }, {
      "left" : "Element e = (Element) n;",
      "right" : "Element e = (Element) n;",
      "info" : "VariableDeclarationStatement[15474-15498]:VariableDeclarationStatement[15423-15447]"
    }, {
      "left" : "String attr = e.getAttributeValue(attrName, ns);",
      "right" : "String attr = e.getAttributeValue(attrName, ns);",
      "info" : "VariableDeclarationStatement[15515-15563]:VariableDeclarationStatement[15464-15512]"
    }, {
      "left" : "if (attr != null && !attr.equals(\"\"))",
      "right" : "if (attr != null && !attr.equals(\"\"))",
      "info" : "IfStatement[15580-15670]:IfStatement[15529-15619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15618-15670]:Block[15567-15619]"
    }, {
      "left" : "return attr;",
      "right" : "return attr;",
      "info" : "ReturnStatement[15640-15652]:ReturnStatement[15589-15601]"
    }, {
      "left" : "n = nodeParent(n);",
      "right" : "n = nodeParent(n);",
      "info" : "ExpressionStatement[15697-15715]:ExpressionStatement[15646-15664]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[15734-15746]:ReturnStatement[15683-15695]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[15758-15765]:Modifier[15707-15714]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15766-15772]:Modifier[15715-15721]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[15773-15780]:SimpleType[15722-15729]"
    }, {
      "left" : "nodeParent",
      "right" : "nodeParent",
      "info" : "SimpleName[15781-15791]:SimpleName[15730-15740]"
    }, {
      "left" : "Object node",
      "right" : "Object node",
      "info" : "SingleVariableDeclaration[15792-15803]:SingleVariableDeclaration[15741-15752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15805-16462]:Block[15754-16411]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[15815-15985]:IfStatement[15764-15934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15844-15985]:Block[15793-15934]"
    }, {
      "left" : "Object parent = ((Element) node).getParent();",
      "right" : "Object parent = ((Element) node).getParent();",
      "info" : "VariableDeclarationStatement[15858-15903]:VariableDeclarationStatement[15807-15852]"
    }, {
      "left" : "return parent instanceof Element ? (Element) parent : null;",
      "right" : "return parent instanceof Element ? (Element) parent : null;",
      "info" : "ReturnStatement[15916-15975]:ReturnStatement[15865-15924]"
    }, {
      "left" : "if (node instanceof Text)",
      "right" : "if (node instanceof Text)",
      "info" : "IfStatement[15994-16087]:IfStatement[15943-16036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16020-16087]:Block[15969-16036]"
    }, {
      "left" : "return (Element) ((Text) node).getParent();",
      "right" : "return (Element) ((Text) node).getParent();",
      "info" : "ReturnStatement[16034-16077]:ReturnStatement[15983-16026]"
    }, {
      "left" : "if (node instanceof CDATA)",
      "right" : "if (node instanceof CDATA)",
      "info" : "IfStatement[16096-16191]:IfStatement[16045-16140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16123-16191]:Block[16072-16140]"
    }, {
      "left" : "return (Element) ((CDATA) node).getParent();",
      "right" : "return (Element) ((CDATA) node).getParent();",
      "info" : "ReturnStatement[16137-16181]:ReturnStatement[16086-16130]"
    }, {
      "left" : "if (node instanceof ProcessingInstruction)",
      "right" : "if (node instanceof ProcessingInstruction)",
      "info" : "IfStatement[16200-16327]:IfStatement[16149-16276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16243-16327]:Block[16192-16276]"
    }, {
      "left" : "return (Element) ((ProcessingInstruction) node).getParent();",
      "right" : "return (Element) ((ProcessingInstruction) node).getParent();",
      "info" : "ReturnStatement[16257-16317]:ReturnStatement[16206-16266]"
    }, {
      "left" : "if (node instanceof Comment)",
      "right" : "if (node instanceof Comment)",
      "info" : "IfStatement[16336-16435]:IfStatement[16285-16384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16365-16435]:Block[16314-16384]"
    }, {
      "left" : "return (Element) ((Comment) node).getParent();",
      "right" : "return (Element) ((Comment) node).getParent();",
      "info" : "ReturnStatement[16379-16425]:ReturnStatement[16328-16374]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16444-16456]:ReturnStatement[16393-16405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16468-16474]:Modifier[16417-16423]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[16475-16486]:SimpleType[16424-16435]"
    }, {
      "left" : "createChild",
      "right" : "createChild",
      "info" : "SimpleName[16487-16498]:SimpleName[16436-16447]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[16508-16529]:SingleVariableDeclaration[16457-16478]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[16539-16549]:SingleVariableDeclaration[16488-16498]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[16559-16568]:SingleVariableDeclaration[16508-16517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16574-17535]:Block[16523-17484]"
    }, {
      "left" : "if (index == WHOLE_COLLECTION)",
      "right" : "if (index == WHOLE_COLLECTION)",
      "info" : "IfStatement[16584-16649]:IfStatement[16533-16598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16615-16649]:Block[16564-16598]"
    }, {
      "left" : "index = 0;",
      "right" : "index = 0;",
      "info" : "ExpressionStatement[16629-16639]:ExpressionStatement[16578-16588]"
    }, {
      "left" : "boolean success =\n            getAbstractFactory(context).createObject(\n                context,\n                this,\n                node,\n                name.toString(),\n                index);",
      "right" : "boolean success =\n            getAbstractFactory(context).createObject(\n                context,\n                this,\n                node,\n                name.toString(),\n                index);",
      "info" : "VariableDeclarationStatement[16658-16855]:VariableDeclarationStatement[16607-16804]"
    }, {
      "left" : "if (success)",
      "right" : "if (success)",
      "info" : "IfStatement[16864-17340]:IfStatement[16813-17289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16877-17340]:Block[16826-17289]"
    }, {
      "left" : "NodeTest nodeTest;",
      "right" : "NodeTest nodeTest;",
      "info" : "VariableDeclarationStatement[16891-16909]:VariableDeclarationStatement[16840-16858]"
    }, {
      "left" : "String prefix = name.getPrefix();",
      "right" : "String prefix = name.getPrefix();",
      "info" : "VariableDeclarationStatement[16922-16955]:VariableDeclarationStatement[16871-16904]"
    }, {
      "left" : "String namespaceURI = prefix == null ? null : context\n                    .getNamespaceURI(prefix);",
      "right" : "String namespaceURI = prefix == null ? null : context\n                    .getNamespaceURI(prefix);",
      "info" : "VariableDeclarationStatement[16968-17067]:VariableDeclarationStatement[16917-17016]"
    }, {
      "left" : "nodeTest = new NodeNameTest(name, namespaceURI);",
      "right" : "nodeTest = new NodeNameTest(name, namespaceURI);",
      "info" : "ExpressionStatement[17080-17128]:ExpressionStatement[17029-17077]"
    }, {
      "left" : "NodeIterator it =\n                childIterator(nodeTest, false, null);",
      "right" : "NodeIterator it =\n                childIterator(nodeTest, false, null);",
      "info" : "VariableDeclarationStatement[17142-17213]:VariableDeclarationStatement[17091-17162]"
    }, {
      "left" : "if (it != null && it.setPosition(index + 1))",
      "right" : "if (it != null && it.setPosition(index + 1))",
      "info" : "IfStatement[17226-17330]:IfStatement[17175-17279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17271-17330]:Block[17220-17279]"
    }, {
      "left" : "return it.getNodePointer();",
      "right" : "return it.getNodePointer();",
      "info" : "ReturnStatement[17289-17316]:ReturnStatement[17238-17265]"
    }, {
      "left" : "throw new JXPathAbstractFactoryException(\"Factory could not create \"\n                + \"a child node for path: \" + asPath() + \"/\" + name + \"[\"\n                + (index + 1) + \"]\");",
      "right" : "throw new JXPathAbstractFactoryException(\"Factory could not create \"\n                + \"a child node for path: \" + asPath() + \"/\" + name + \"[\"\n                + (index + 1) + \"]\");",
      "info" : "ThrowStatement[17349-17529]:ThrowStatement[17298-17478]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17541-17547]:Modifier[17490-17496]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[17548-17559]:SimpleType[17497-17508]"
    }, {
      "left" : "createChild",
      "right" : "createChild",
      "info" : "SimpleName[17560-17571]:SimpleName[17509-17520]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[17585-17606]:SingleVariableDeclaration[17534-17555]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[17608-17618]:SingleVariableDeclaration[17557-17567]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[17620-17629]:SingleVariableDeclaration[17569-17578]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[17631-17643]:SingleVariableDeclaration[17580-17592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17649-17766]:Block[17598-17715]"
    }, {
      "left" : "NodePointer ptr = createChild(context, name, index);",
      "right" : "NodePointer ptr = createChild(context, name, index);",
      "info" : "VariableDeclarationStatement[17659-17711]:VariableDeclarationStatement[17608-17660]"
    }, {
      "left" : "ptr.setValue(value);",
      "right" : "ptr.setValue(value);",
      "info" : "ExpressionStatement[17720-17740]:ExpressionStatement[17669-17689]"
    }, {
      "left" : "return ptr;",
      "right" : "return ptr;",
      "info" : "ReturnStatement[17749-17760]:ReturnStatement[17698-17709]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17772-17778]:Modifier[17721-17727]"
    }, {
      "left" : "NodePointer",
      "right" : "NodePointer",
      "info" : "SimpleType[17779-17790]:SimpleType[17728-17739]"
    }, {
      "left" : "createAttribute",
      "right" : "createAttribute",
      "info" : "SimpleName[17791-17806]:SimpleName[17740-17755]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[17807-17828]:SingleVariableDeclaration[17756-17777]"
    }, {
      "left" : "QName name",
      "right" : "QName name",
      "info" : "SingleVariableDeclaration[17830-17840]:SingleVariableDeclaration[17779-17789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17842-18884]:Block[17791-18833]"
    }, {
      "left" : "if (!(node instanceof Element))",
      "right" : "if (!(node instanceof Element))",
      "info" : "IfStatement[17852-17952]:IfStatement[17801-17901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17884-17952]:Block[17833-17901]"
    }, {
      "left" : "return super.createAttribute(context, name);",
      "right" : "return super.createAttribute(context, name);",
      "info" : "ReturnStatement[17898-17942]:ReturnStatement[17847-17891]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[17962-17995]:VariableDeclarationStatement[17911-17944]"
    }, {
      "left" : "String prefix = name.getPrefix();",
      "right" : "String prefix = name.getPrefix();",
      "info" : "VariableDeclarationStatement[18004-18037]:VariableDeclarationStatement[17953-17986]"
    }, {
      "left" : "if (prefix != null)",
      "right" : "if (prefix != null)",
      "info" : "IfStatement[18046-18764]:IfStatement[17995-18713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18066-18568]:Block[18015-18517]"
    }, {
      "left" : "String namespaceUri = getNamespaceResolver().getNamespaceURI(prefix);",
      "right" : "String namespaceUri = getNamespaceResolver().getNamespaceURI(prefix);",
      "info" : "VariableDeclarationStatement[18080-18149]:VariableDeclarationStatement[18029-18098]"
    }, {
      "left" : "if (namespaceUri == null)",
      "right" : "if (namespaceUri == null)",
      "info" : "IfStatement[18162-18306]:IfStatement[18111-18255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18188-18306]:Block[18137-18255]"
    }, {
      "left" : "throw new JXPathException(\n                    \"Unknown namespace prefix: \" + prefix);",
      "right" : "throw new JXPathException(\n                    \"Unknown namespace prefix: \" + prefix);",
      "info" : "ThrowStatement[18206-18292]:ThrowStatement[18155-18241]"
    }, {
      "left" : "Namespace ns = Namespace.getNamespace(prefix, namespaceUri);",
      "right" : "Namespace ns = Namespace.getNamespace(prefix, namespaceUri);",
      "info" : "VariableDeclarationStatement[18319-18379]:VariableDeclarationStatement[18268-18328]"
    }, {
      "left" : "Attribute attr = element.getAttribute(name.getName(), ns);",
      "right" : "Attribute attr = element.getAttribute(name.getName(), ns);",
      "info" : "VariableDeclarationStatement[18392-18450]:VariableDeclarationStatement[18341-18399]"
    }, {
      "left" : "if (attr == null)",
      "right" : "if (attr == null)",
      "info" : "IfStatement[18463-18558]:IfStatement[18412-18507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18481-18558]:Block[18430-18507]"
    }, {
      "left" : "element.setAttribute(name.getName(), \"\", ns);",
      "right" : "element.setAttribute(name.getName(), \"\", ns);",
      "info" : "ExpressionStatement[18499-18544]:ExpressionStatement[18448-18493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18582-18764]:Block[18531-18713]"
    }, {
      "left" : "Attribute attr = element.getAttribute(name.getName());",
      "right" : "Attribute attr = element.getAttribute(name.getName());",
      "info" : "VariableDeclarationStatement[18596-18650]:VariableDeclarationStatement[18545-18599]"
    }, {
      "left" : "if (attr == null)",
      "right" : "if (attr == null)",
      "info" : "IfStatement[18663-18754]:IfStatement[18612-18703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18681-18754]:Block[18630-18703]"
    }, {
      "left" : "element.setAttribute(name.getName(), \"\");",
      "right" : "element.setAttribute(name.getName(), \"\");",
      "info" : "ExpressionStatement[18699-18740]:ExpressionStatement[18648-18689]"
    }, {
      "left" : "NodeIterator it = attributeIterator(name);",
      "right" : "NodeIterator it = attributeIterator(name);",
      "info" : "VariableDeclarationStatement[18773-18815]:VariableDeclarationStatement[18722-18764]"
    }, {
      "left" : "it.setPosition(1);",
      "right" : "it.setPosition(1);",
      "info" : "ExpressionStatement[18824-18842]:ExpressionStatement[18773-18791]"
    }, {
      "left" : "return it.getNodePointer();",
      "right" : "return it.getNodePointer();",
      "info" : "ReturnStatement[18851-18878]:ReturnStatement[18800-18827]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18890-18896]:Modifier[18839-18845]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18897-18901]:PrimitiveType[18846-18850]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[18902-18908]:SimpleName[18851-18857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18911-19114]:Block[18860-19063]"
    }, {
      "left" : "Element parent = nodeParent(node);",
      "right" : "Element parent = nodeParent(node);",
      "info" : "VariableDeclarationStatement[18921-18955]:VariableDeclarationStatement[18870-18904]"
    }, {
      "left" : "if (parent == null)",
      "right" : "if (parent == null)",
      "info" : "IfStatement[18964-19066]:IfStatement[18913-19015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18984-19066]:Block[18933-19015]"
    }, {
      "left" : "throw new JXPathException(\"Cannot remove root JDOM node\");",
      "right" : "throw new JXPathException(\"Cannot remove root JDOM node\");",
      "info" : "ThrowStatement[18998-19056]:ThrowStatement[18947-19005]"
    }, {
      "left" : "parent.getContent().remove(node);",
      "right" : "parent.getContent().remove(node);",
      "info" : "ExpressionStatement[19075-19108]:ExpressionStatement[19024-19057]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19120-19126]:Modifier[19069-19075]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[19127-19133]:SimpleType[19076-19082]"
    }, {
      "left" : "asPath",
      "right" : "asPath",
      "info" : "SimpleName[19134-19140]:SimpleName[19083-19089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19143-21467]:Block[19092-21416]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[19153-19227]:IfStatement[19102-19176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19169-19227]:Block[19118-19176]"
    }, {
      "left" : "return \"id('\" + escape(id) + \"')\";",
      "right" : "return \"id('\" + escape(id) + \"')\";",
      "info" : "ReturnStatement[19183-19217]:ReturnStatement[19132-19166]"
    }, {
      "left" : "StringBuffer buffer = new StringBuffer();",
      "right" : "StringBuffer buffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[19237-19278]:VariableDeclarationStatement[19186-19227]"
    }, {
      "left" : "if (parent != null)",
      "right" : "if (parent != null)",
      "info" : "IfStatement[19287-19362]:IfStatement[19236-19311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19307-19362]:Block[19256-19311]"
    }, {
      "left" : "buffer.append(parent.asPath());",
      "right" : "buffer.append(parent.asPath());",
      "info" : "ExpressionStatement[19321-19352]:ExpressionStatement[19270-19301]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[19371-21427]:IfStatement[19320-21376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19400-20869]:Block[19349-20818]"
    }, {
      "left" : "if (parent instanceof JDOMNodePointer)",
      "right" : "if (parent instanceof JDOMNodePointer)",
      "info" : "IfStatement[19583-20859]:IfStatement[19532-20808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19622-20859]:Block[19571-20808]"
    }, {
      "left" : "if (buffer.length() == 0\n                    || buffer.charAt(buffer.length() - 1) != '/')",
      "right" : "if (buffer.length() == 0\n                    || buffer.charAt(buffer.length() - 1) != '/')",
      "info" : "IfStatement[19640-19790]:IfStatement[19589-19739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19731-19790]:Block[19680-19739]"
    }, {
      "left" : "buffer.append('/');",
      "right" : "buffer.append('/');",
      "info" : "ExpressionStatement[19753-19772]:ExpressionStatement[19702-19721]"
    }, {
      "left" : "String nsURI = getNamespaceURI();",
      "right" : "String nsURI = getNamespaceURI();",
      "info" : "VariableDeclarationStatement[19807-19840]:VariableDeclarationStatement[19756-19789]"
    }, {
      "left" : "String ln = JDOMNodePointer.getLocalName(node);",
      "right" : "String ln = JDOMNodePointer.getLocalName(node);",
      "info" : "VariableDeclarationStatement[19857-19904]:VariableDeclarationStatement[19806-19853]"
    }, {
      "left" : "if (nsURI == null)",
      "right" : "if (nsURI == null)",
      "info" : "IfStatement[19922-20844]:IfStatement[19871-20793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19941-20115]:Block[19890-20064]"
    }, {
      "left" : "buffer.append(ln);",
      "right" : "buffer.append(ln);",
      "info" : "ExpressionStatement[19963-19981]:ExpressionStatement[19912-19930]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[20002-20021]:ExpressionStatement[19951-19970]"
    }, {
      "left" : "buffer.append(getRelativePositionByName()).append(']');",
      "right" : "buffer.append(getRelativePositionByName()).append(']');",
      "info" : "ExpressionStatement[20042-20097]:ExpressionStatement[19991-20046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20137-20844]:Block[20086-20793]"
    }, {
      "left" : "String prefix = getNamespaceResolver().getPrefix(nsURI);",
      "right" : "String prefix = getNamespaceResolver().getPrefix(nsURI);",
      "info" : "VariableDeclarationStatement[20159-20215]:VariableDeclarationStatement[20108-20164]"
    }, {
      "left" : "if (prefix != null)",
      "right" : "if (prefix != null)",
      "info" : "IfStatement[20236-20826]:IfStatement[20185-20775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20256-20569]:Block[20205-20518]"
    }, {
      "left" : "buffer.append(prefix);",
      "right" : "buffer.append(prefix);",
      "info" : "ExpressionStatement[20282-20304]:ExpressionStatement[20231-20253]"
    }, {
      "left" : "buffer.append(':');",
      "right" : "buffer.append(':');",
      "info" : "ExpressionStatement[20329-20348]:ExpressionStatement[20278-20297]"
    }, {
      "left" : "buffer.append(ln);",
      "right" : "buffer.append(ln);",
      "info" : "ExpressionStatement[20373-20391]:ExpressionStatement[20322-20340]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[20416-20435]:ExpressionStatement[20365-20384]"
    }, {
      "left" : "buffer.append(getRelativePositionByName());",
      "right" : "buffer.append(getRelativePositionByName());",
      "info" : "ExpressionStatement[20460-20503]:ExpressionStatement[20409-20452]"
    }, {
      "left" : "buffer.append(']');",
      "right" : "buffer.append(']');",
      "info" : "ExpressionStatement[20528-20547]:ExpressionStatement[20477-20496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20595-20826]:Block[20544-20775]"
    }, {
      "left" : "buffer.append(\"node()\");",
      "right" : "buffer.append(\"node()\");",
      "info" : "ExpressionStatement[20621-20645]:ExpressionStatement[20570-20594]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[20670-20689]:ExpressionStatement[20619-20638]"
    }, {
      "left" : "buffer.append(getRelativePositionOfElement());",
      "right" : "buffer.append(getRelativePositionOfElement());",
      "info" : "ExpressionStatement[20714-20760]:ExpressionStatement[20663-20709]"
    }, {
      "left" : "buffer.append(']');",
      "right" : "buffer.append(']');",
      "info" : "ExpressionStatement[20785-20804]:ExpressionStatement[20734-20753]"
    }, {
      "left" : "if (node instanceof Text || node instanceof CDATA)",
      "right" : "if (node instanceof Text || node instanceof CDATA)",
      "info" : "IfStatement[20883-21427]:IfStatement[20832-21376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20934-21084]:Block[20883-21033]"
    }, {
      "left" : "buffer.append(\"/text()\");",
      "right" : "buffer.append(\"/text()\");",
      "info" : "ExpressionStatement[20948-20973]:ExpressionStatement[20897-20922]"
    }, {
      "left" : "buffer.append('[').append(getRelativePositionOfTextNode()).append(\n                ']');",
      "right" : "buffer.append('[').append(getRelativePositionOfTextNode()).append(\n                ']');",
      "info" : "ExpressionStatement[20986-21074]:ExpressionStatement[20935-21023]"
    }, {
      "left" : "if (node instanceof ProcessingInstruction)",
      "right" : "if (node instanceof ProcessingInstruction)",
      "info" : "IfStatement[21098-21427]:IfStatement[21047-21376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21141-21427]:Block[21090-21376]"
    }, {
      "left" : "String target = ((ProcessingInstruction) node).getTarget();",
      "right" : "String target = ((ProcessingInstruction) node).getTarget();",
      "info" : "VariableDeclarationStatement[21155-21214]:VariableDeclarationStatement[21104-21163]"
    }, {
      "left" : "buffer.append(\"/processing-instruction(\\'\").append(target).append(\n                \"')\");",
      "right" : "buffer.append(\"/processing-instruction(\\'\").append(target).append(\n                \"')\");",
      "info" : "ExpressionStatement[21227-21316]:ExpressionStatement[21176-21265]"
    }, {
      "left" : "buffer.append('[').append(getRelativePositionOfPI(target)).append(\n                ']');",
      "right" : "buffer.append('[').append(getRelativePositionOfPI(target)).append(\n                ']');",
      "info" : "ExpressionStatement[21329-21417]:ExpressionStatement[21278-21366]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[21436-21461]:ReturnStatement[21385-21410]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21473-21480]:Modifier[21422-21429]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[21481-21487]:SimpleType[21430-21436]"
    }, {
      "left" : "escape",
      "right" : "escape",
      "info" : "SimpleName[21488-21494]:SimpleName[21437-21443]"
    }, {
      "left" : "String string",
      "right" : "String string",
      "info" : "SingleVariableDeclaration[21495-21508]:SingleVariableDeclaration[21444-21457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21510-22076]:Block[21459-22025]"
    }, {
      "left" : "int index = string.indexOf('\\'');",
      "right" : "int index = string.indexOf('\\'');",
      "info" : "VariableDeclarationStatement[21520-21553]:VariableDeclarationStatement[21469-21502]"
    }, {
      "left" : "while (index != -1)",
      "right" : "while (index != -1)",
      "info" : "WhileStatement[21562-21781]:WhileStatement[21511-21730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21582-21781]:Block[21531-21730]"
    }, {
      "left" : "string =\n                string.substring(0, index)\n                    + \"&apos;\"\n                    + string.substring(index + 1);",
      "right" : "string =\n                string.substring(0, index)\n                    + \"&apos;\"\n                    + string.substring(index + 1);",
      "info" : "ExpressionStatement[21596-21729]:ExpressionStatement[21545-21678]"
    }, {
      "left" : "index = string.indexOf('\\'');",
      "right" : "index = string.indexOf('\\'');",
      "info" : "ExpressionStatement[21742-21771]:ExpressionStatement[21691-21720]"
    }, {
      "left" : "index = string.indexOf('\\\"');",
      "right" : "index = string.indexOf('\\\"');",
      "info" : "ExpressionStatement[21790-21819]:ExpressionStatement[21739-21768]"
    }, {
      "left" : "while (index != -1)",
      "right" : "while (index != -1)",
      "info" : "WhileStatement[21828-22047]:WhileStatement[21777-21996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21848-22047]:Block[21797-21996]"
    }, {
      "left" : "string =\n                string.substring(0, index)\n                    + \"&quot;\"\n                    + string.substring(index + 1);",
      "right" : "string =\n                string.substring(0, index)\n                    + \"&quot;\"\n                    + string.substring(index + 1);",
      "info" : "ExpressionStatement[21862-21995]:ExpressionStatement[21811-21944]"
    }, {
      "left" : "index = string.indexOf('\\\"');",
      "right" : "index = string.indexOf('\\\"');",
      "info" : "ExpressionStatement[22008-22037]:ExpressionStatement[21957-21986]"
    }, {
      "left" : "return string;",
      "right" : "return string;",
      "info" : "ReturnStatement[22056-22070]:ReturnStatement[22005-22019]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[22082-22089]:Modifier[22031-22038]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[22090-22093]:PrimitiveType[22039-22042]"
    }, {
      "left" : "getRelativePositionByName",
      "right" : "getRelativePositionByName",
      "info" : "SimpleName[22094-22119]:SimpleName[22043-22068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22122-22889]:Block[22071-22838]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[22132-22865]:IfStatement[22081-22814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22161-22865]:Block[22110-22814]"
    }, {
      "left" : "Object parent = ((Element) node).getParent();",
      "right" : "Object parent = ((Element) node).getParent();",
      "info" : "VariableDeclarationStatement[22175-22220]:VariableDeclarationStatement[22124-22169]"
    }, {
      "left" : "if (!(parent instanceof Element))",
      "right" : "if (!(parent instanceof Element))",
      "info" : "IfStatement[22233-22308]:IfStatement[22182-22257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22267-22308]:Block[22216-22257]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[22285-22294]:ReturnStatement[22234-22243]"
    }, {
      "left" : "List children = ((Element)parent).getContent();",
      "right" : "List children = ((Element)parent).getContent();",
      "info" : "VariableDeclarationStatement[22322-22369]:VariableDeclarationStatement[22271-22318]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[22382-22396]:VariableDeclarationStatement[22331-22345]"
    }, {
      "left" : "String name = ((Element) node).getQualifiedName();",
      "right" : "String name = ((Element) node).getQualifiedName();",
      "info" : "VariableDeclarationStatement[22409-22459]:VariableDeclarationStatement[22358-22408]"
    }, {
      "left" : "for (int i = 0; i < children.size(); i++)",
      "right" : "for (int i = 0; i < children.size(); i++)",
      "info" : "ForStatement[22472-22829]:ForStatement[22421-22778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22514-22829]:Block[22463-22778]"
    }, {
      "left" : "Object child = children.get(i);",
      "right" : "Object child = children.get(i);",
      "info" : "VariableDeclarationStatement[22532-22563]:VariableDeclarationStatement[22481-22512]"
    }, {
      "left" : "if ((child instanceof Element)\n                    && ((Element) child).getQualifiedName().equals(name))",
      "right" : "if ((child instanceof Element)\n                    && ((Element) child).getQualifiedName().equals(name))",
      "info" : "IfStatement[22580-22733]:IfStatement[22529-22682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22685-22733]:Block[22634-22682]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[22707-22715]:ExpressionStatement[22656-22664]"
    }, {
      "left" : "if (child == node)",
      "right" : "if (child == node)",
      "info" : "IfStatement[22750-22815]:IfStatement[22699-22764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22769-22815]:Block[22718-22764]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[22791-22797]:BreakStatement[22740-22746]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[22842-22855]:ReturnStatement[22791-22804]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[22874-22883]:ReturnStatement[22823-22832]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[22895-22902]:Modifier[22844-22851]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[22903-22906]:PrimitiveType[22852-22855]"
    }, {
      "left" : "getRelativePositionOfElement",
      "right" : "getRelativePositionOfElement",
      "info" : "SimpleName[22907-22935]:SimpleName[22856-22884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22938-23577]:Block[22887-23526]"
    }, {
      "left" : "Object parent = ((Element) node).getParent();",
      "right" : "Object parent = ((Element) node).getParent();",
      "info" : "VariableDeclarationStatement[22948-22993]:VariableDeclarationStatement[22897-22942]"
    }, {
      "left" : "if (parent == null)",
      "right" : "if (parent == null)",
      "info" : "IfStatement[23002-23055]:IfStatement[22951-23004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23022-23055]:Block[22971-23004]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[23036-23045]:ReturnStatement[22985-22994]"
    }, {
      "left" : "List children;",
      "right" : "List children;",
      "info" : "VariableDeclarationStatement[23064-23078]:VariableDeclarationStatement[23013-23027]"
    }, {
      "left" : "if (parent instanceof Element)",
      "right" : "if (parent instanceof Element)",
      "info" : "IfStatement[23087-23267]:IfStatement[23036-23216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23118-23185]:Block[23067-23134]"
    }, {
      "left" : "children = ((Element) parent).getContent();",
      "right" : "children = ((Element) parent).getContent();",
      "info" : "ExpressionStatement[23132-23175]:ExpressionStatement[23081-23124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23199-23267]:Block[23148-23216]"
    }, {
      "left" : "children = ((Document) parent).getContent();",
      "right" : "children = ((Document) parent).getContent();",
      "info" : "ExpressionStatement[23213-23257]:ExpressionStatement[23162-23206]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[23276-23290]:VariableDeclarationStatement[23225-23239]"
    }, {
      "left" : "for (int i = 0; i < children.size(); i++)",
      "right" : "for (int i = 0; i < children.size(); i++)",
      "info" : "ForStatement[23299-23549]:ForStatement[23248-23498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23341-23549]:Block[23290-23498]"
    }, {
      "left" : "Object child = children.get(i);",
      "right" : "Object child = children.get(i);",
      "info" : "VariableDeclarationStatement[23355-23386]:VariableDeclarationStatement[23304-23335]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[23399-23469]:IfStatement[23348-23418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23429-23469]:Block[23378-23418]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[23447-23455]:ExpressionStatement[23396-23404]"
    }, {
      "left" : "if (child == node)",
      "right" : "if (child == node)",
      "info" : "IfStatement[23482-23539]:IfStatement[23431-23488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23501-23539]:Block[23450-23488]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[23519-23525]:BreakStatement[23468-23474]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[23558-23571]:ReturnStatement[23507-23520]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23583-23590]:Modifier[23532-23539]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[23591-23594]:PrimitiveType[23540-23543]"
    }, {
      "left" : "getRelativePositionOfTextNode",
      "right" : "getRelativePositionOfTextNode",
      "info" : "SimpleName[23595-23624]:SimpleName[23544-23573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23627-24280]:Block[23576-24229]"
    }, {
      "left" : "Element parent;",
      "right" : "Element parent;",
      "info" : "VariableDeclarationStatement[23637-23652]:VariableDeclarationStatement[23586-23601]"
    }, {
      "left" : "if (node instanceof Text)",
      "right" : "if (node instanceof Text)",
      "info" : "IfStatement[23661-23840]:IfStatement[23610-23789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23687-23756]:Block[23636-23705]"
    }, {
      "left" : "parent = (Element) ((Text) node).getParent();",
      "right" : "parent = (Element) ((Text) node).getParent();",
      "info" : "ExpressionStatement[23701-23746]:ExpressionStatement[23650-23695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23770-23840]:Block[23719-23789]"
    }, {
      "left" : "parent = (Element) ((CDATA) node).getParent();",
      "right" : "parent = (Element) ((CDATA) node).getParent();",
      "info" : "ExpressionStatement[23784-23830]:ExpressionStatement[23733-23779]"
    }, {
      "left" : "if (parent == null)",
      "right" : "if (parent == null)",
      "info" : "IfStatement[23849-23902]:IfStatement[23798-23851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23869-23902]:Block[23818-23851]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[23883-23892]:ReturnStatement[23832-23841]"
    }, {
      "left" : "List children = parent.getContent();",
      "right" : "List children = parent.getContent();",
      "info" : "VariableDeclarationStatement[23911-23947]:VariableDeclarationStatement[23860-23896]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[23956-23970]:VariableDeclarationStatement[23905-23919]"
    }, {
      "left" : "for (int i = 0; i < children.size(); i++)",
      "right" : "for (int i = 0; i < children.size(); i++)",
      "info" : "ForStatement[23979-24252]:ForStatement[23928-24201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24021-24252]:Block[23970-24201]"
    }, {
      "left" : "Object child = children.get(i);",
      "right" : "Object child = children.get(i);",
      "info" : "VariableDeclarationStatement[24035-24066]:VariableDeclarationStatement[23984-24015]"
    }, {
      "left" : "if (child instanceof Text || child instanceof CDATA)",
      "right" : "if (child instanceof Text || child instanceof CDATA)",
      "info" : "IfStatement[24079-24172]:IfStatement[24028-24121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24132-24172]:Block[24081-24121]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[24150-24158]:ExpressionStatement[24099-24107]"
    }, {
      "left" : "if (child == node)",
      "right" : "if (child == node)",
      "info" : "IfStatement[24185-24242]:IfStatement[24134-24191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24204-24242]:Block[24153-24191]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[24222-24228]:BreakStatement[24171-24177]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[24261-24274]:ReturnStatement[24210-24223]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[24286-24293]:Modifier[24235-24242]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[24294-24297]:PrimitiveType[24243-24246]"
    }, {
      "left" : "getRelativePositionOfPI",
      "right" : "getRelativePositionOfPI",
      "info" : "SimpleName[24298-24321]:SimpleName[24247-24270]"
    }, {
      "left" : "String target",
      "right" : "String target",
      "info" : "SingleVariableDeclaration[24322-24335]:SingleVariableDeclaration[24271-24284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24337-24991]:Block[24286-24940]"
    }, {
      "left" : "Element parent = (Element) ((ProcessingInstruction) node).getParent();",
      "right" : "Element parent = (Element) ((ProcessingInstruction) node).getParent();",
      "info" : "VariableDeclarationStatement[24347-24417]:VariableDeclarationStatement[24296-24366]"
    }, {
      "left" : "if (parent == null)",
      "right" : "if (parent == null)",
      "info" : "IfStatement[24426-24479]:IfStatement[24375-24428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24446-24479]:Block[24395-24428]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[24460-24469]:ReturnStatement[24409-24418]"
    }, {
      "left" : "List children = parent.getContent();",
      "right" : "List children = parent.getContent();",
      "info" : "VariableDeclarationStatement[24488-24524]:VariableDeclarationStatement[24437-24473]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[24533-24547]:VariableDeclarationStatement[24482-24496]"
    }, {
      "left" : "for (int i = 0; i < children.size(); i++)",
      "right" : "for (int i = 0; i < children.size(); i++)",
      "info" : "ForStatement[24556-24963]:ForStatement[24505-24912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24598-24963]:Block[24547-24912]"
    }, {
      "left" : "Object child = children.get(i);",
      "right" : "Object child = children.get(i);",
      "info" : "VariableDeclarationStatement[24612-24643]:VariableDeclarationStatement[24561-24592]"
    }, {
      "left" : "if (child instanceof ProcessingInstruction\n                && (target == null\n                    || target.equals(\n                        ((ProcessingInstruction) child).getTarget())))",
      "right" : "if (child instanceof ProcessingInstruction\n                && (target == null\n                    || target.equals(\n                        ((ProcessingInstruction) child).getTarget())))",
      "info" : "IfStatement[24656-24883]:IfStatement[24605-24832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24843-24883]:Block[24792-24832]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[24861-24869]:ExpressionStatement[24810-24818]"
    }, {
      "left" : "if (child == node)",
      "right" : "if (child == node)",
      "info" : "IfStatement[24896-24953]:IfStatement[24845-24902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24915-24953]:Block[24864-24902]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[24933-24939]:BreakStatement[24882-24888]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[24972-24985]:ReturnStatement[24921-24934]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24997-25003]:Modifier[24946-24952]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[25004-25007]:PrimitiveType[24953-24956]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[25008-25016]:SimpleName[24957-24965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25019-25072]:Block[24968-25021]"
    }, {
      "left" : "return System.identityHashCode(node);",
      "right" : "return System.identityHashCode(node);",
      "info" : "ReturnStatement[25029-25066]:ReturnStatement[24978-25015]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25078-25084]:Modifier[25027-25033]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[25085-25092]:PrimitiveType[25034-25041]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[25093-25099]:SimpleName[25042-25048]"
    }, {
      "left" : "Object object",
      "right" : "Object object",
      "info" : "SingleVariableDeclaration[25100-25113]:SingleVariableDeclaration[25049-25062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25115-25370]:Block[25064-25319]"
    }, {
      "left" : "if (object == this)",
      "right" : "if (object == this)",
      "info" : "IfStatement[25125-25181]:IfStatement[25074-25130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25145-25181]:Block[25094-25130]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[25159-25171]:ReturnStatement[25108-25120]"
    }, {
      "left" : "if (!(object instanceof JDOMNodePointer))",
      "right" : "if (!(object instanceof JDOMNodePointer))",
      "info" : "IfStatement[25191-25270]:IfStatement[25140-25219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25233-25270]:Block[25182-25219]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[25247-25260]:ReturnStatement[25196-25209]"
    }, {
      "left" : "JDOMNodePointer other = (JDOMNodePointer) object;",
      "right" : "JDOMNodePointer other = (JDOMNodePointer) object;",
      "info" : "VariableDeclarationStatement[25280-25329]:VariableDeclarationStatement[25229-25278]"
    }, {
      "left" : "return node == other.node;",
      "right" : "return node == other.node;",
      "info" : "ReturnStatement[25338-25364]:ReturnStatement[25287-25313]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[25376-25383]:Modifier[25325-25332]"
    }, {
      "left" : "AbstractFactory",
      "right" : "AbstractFactory",
      "info" : "SimpleType[25384-25399]:SimpleType[25333-25348]"
    }, {
      "left" : "getAbstractFactory",
      "right" : "getAbstractFactory",
      "info" : "SimpleName[25400-25418]:SimpleName[25349-25367]"
    }, {
      "left" : "JXPathContext context",
      "right" : "JXPathContext context",
      "info" : "SingleVariableDeclaration[25419-25440]:SingleVariableDeclaration[25368-25389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25442-25723]:Block[25391-25672]"
    }, {
      "left" : "AbstractFactory factory = context.getFactory();",
      "right" : "AbstractFactory factory = context.getFactory();",
      "info" : "VariableDeclarationStatement[25452-25499]:VariableDeclarationStatement[25401-25448]"
    }, {
      "left" : "if (factory == null)",
      "right" : "if (factory == null)",
      "info" : "IfStatement[25508-25693]:IfStatement[25457-25642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25529-25693]:Block[25478-25642]"
    }, {
      "left" : "throw new JXPathException(\n                \"Factory is not set on the JXPathContext - cannot create path: \"\n                    + asPath());",
      "right" : "throw new JXPathException(\n                \"Factory is not set on the JXPathContext - cannot create path: \"\n                    + asPath());",
      "info" : "ThrowStatement[25543-25683]:ThrowStatement[25492-25632]"
    }, {
      "left" : "return factory;",
      "right" : "return factory;",
      "info" : "ReturnStatement[25702-25717]:ReturnStatement[25651-25666]"
    } ]
  },
  "interFileMappings" : { }
}