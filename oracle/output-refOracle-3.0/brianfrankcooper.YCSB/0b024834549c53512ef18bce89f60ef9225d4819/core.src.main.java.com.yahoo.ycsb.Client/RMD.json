{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "StatusThread",
      "right" : "StatusThread",
      "info" : "TypeDeclaration[3260-5220]:TypeDeclaration[3260-5220]"
    }, {
      "left" : "Vector<Thread> _threads;",
      "right" : "Vector<Thread> _threads;",
      "info" : "FieldDeclaration[3439-3463]:FieldDeclaration[3439-3463]"
    }, {
      "left" : "String _label;",
      "right" : "String _label;",
      "info" : "FieldDeclaration[3465-3479]:FieldDeclaration[3465-3479]"
    }, {
      "left" : "boolean _standardstatus;",
      "right" : "boolean _standardstatus;",
      "info" : "FieldDeclaration[3481-3505]:FieldDeclaration[3481-3505]"
    }, {
      "left" : "public static final long sleeptime=10000;",
      "right" : "public static final long sleeptime=10000;",
      "info" : "FieldDeclaration[3509-3599]:FieldDeclaration[3509-3599]"
    }, {
      "left" : "public StatusThread(Vector<Thread> threads, String label, boolean standardstatus)",
      "right" : "public StatusThread(Vector<Thread> threads, String label, boolean standardstatus)",
      "info" : "MethodDeclaration[3602-3759]:MethodDeclaration[3602-3759]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[3762-5218]:MethodDeclaration[3762-5218]"
    }, {
      "left" : "ClientThread",
      "right" : "ClientThread",
      "info" : "TypeDeclaration[5222-9249]:TypeDeclaration[5222-8857]"
    }, {
      "left" : "DB _db;",
      "right" : "DB _db;",
      "info" : "FieldDeclaration[5365-5372]:FieldDeclaration[5365-5372]"
    }, {
      "left" : "boolean _dotransactions;",
      "right" : "boolean _dotransactions;",
      "info" : "FieldDeclaration[5374-5398]:FieldDeclaration[5374-5398]"
    }, {
      "left" : "Workload _workload;",
      "right" : "Workload _workload;",
      "info" : "FieldDeclaration[5400-5419]:FieldDeclaration[5400-5419]"
    }, {
      "left" : "int _opcount;",
      "right" : "int _opcount;",
      "info" : "FieldDeclaration[5421-5434]:FieldDeclaration[5421-5434]"
    }, {
      "left" : "double _target;",
      "right" : "double _target;",
      "info" : "FieldDeclaration[5436-5451]:FieldDeclaration[5436-5451]"
    }, {
      "left" : "int _opsdone;",
      "right" : "int _opsdone;",
      "info" : "FieldDeclaration[5454-5467]:FieldDeclaration[5454-5467]"
    }, {
      "left" : "int _threadid;",
      "right" : "int _threadid;",
      "info" : "FieldDeclaration[5469-5483]:FieldDeclaration[5469-5483]"
    }, {
      "left" : "int _threadcount;",
      "right" : "int _threadcount;",
      "info" : "FieldDeclaration[5485-5502]:FieldDeclaration[5485-5502]"
    }, {
      "left" : "Object _workloadstate;",
      "right" : "Object _workloadstate;",
      "info" : "FieldDeclaration[5504-5526]:FieldDeclaration[5504-5526]"
    }, {
      "left" : "Properties _props;",
      "right" : "Properties _props;",
      "info" : "FieldDeclaration[5528-5546]:FieldDeclaration[5528-5546]"
    }, {
      "left" : "public ClientThread(DB db, boolean dotransactions, Workload workload, int threadid, int threadcount, Properties props, int opcount, double targetperthreadperms)",
      "right" : "public ClientThread(DB db, boolean dotransactions, Workload workload, int threadid, int threadcount, Properties props, int opcount, double targetperthreadperms)",
      "info" : "MethodDeclaration[5550-6507]:MethodDeclaration[5550-6507]"
    }, {
      "left" : "public int getOpsDone()",
      "right" : "public int getOpsDone()",
      "info" : "MethodDeclaration[6510-6558]:MethodDeclaration[6510-6558]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[6561-9247]:MethodDeclaration[6561-8175]"
    }, {
      "left" : "Client",
      "right" : "Client",
      "info" : "TypeDeclaration[9251-22561]:TypeDeclaration[8859-22244]"
    }, {
      "left" : "public static final String OPERATION_COUNT_PROPERTY=\"operationcount\";",
      "right" : "public static final String OPERATION_COUNT_PROPERTY=\"operationcount\";",
      "info" : "FieldDeclaration[9320-9453]:FieldDeclaration[8985-9118]"
    }, {
      "left" : "public static final String RECORD_COUNT_PROPERTY=\"recordcount\";",
      "right" : "public static final String RECORD_COUNT_PROPERTY=\"recordcount\";",
      "info" : "FieldDeclaration[9459-9601]:FieldDeclaration[9124-9266]"
    }, {
      "left" : "public static final String WORKLOAD_PROPERTY=\"workload\";",
      "right" : "public static final String WORKLOAD_PROPERTY=\"workload\";",
      "info" : "FieldDeclaration[9607-9716]:FieldDeclaration[9272-9381]"
    }, {
      "left" : "public static final String DB_PROPERTY=\"db\";",
      "right" : "public static final String DB_PROPERTY=\"db\";",
      "info" : "FieldDeclaration[9720-9818]:FieldDeclaration[9385-9483]"
    }, {
      "left" : "public static final String EXPORTER_PROPERTY=\"exporter\";",
      "right" : "public static final String EXPORTER_PROPERTY=\"exporter\";",
      "info" : "FieldDeclaration[9824-10019]:FieldDeclaration[9489-9684]"
    }, {
      "left" : "public static final String EXPORT_FILE_PROPERTY=\"exportfile\";",
      "right" : "public static final String EXPORT_FILE_PROPERTY=\"exportfile\";",
      "info" : "FieldDeclaration[10025-10205]:FieldDeclaration[9690-9870]"
    }, {
      "left" : "public static final String THREAD_COUNT_PROPERTY=\"threadcount\";",
      "right" : "public static final String THREAD_COUNT_PROPERTY=\"threadcount\";",
      "info" : "FieldDeclaration[10211-10339]:FieldDeclaration[9876-10004]"
    }, {
      "left" : "public static final String INSERT_COUNT_PROPERTY=\"insertcount\";",
      "right" : "public static final String INSERT_COUNT_PROPERTY=\"insertcount\";",
      "info" : "FieldDeclaration[10342-10687]:FieldDeclaration[10007-10352]"
    }, {
      "left" : "public static final String TARGET_PROPERTY=\"target\";",
      "right" : "public static final String TARGET_PROPERTY=\"target\";",
      "info" : "FieldDeclaration[10691-10805]:FieldDeclaration[10356-10470]"
    }, {
      "left" : "public static final String MAX_EXECUTION_TIME = \"maxexecutiontime\";",
      "right" : "public static final String MAX_EXECUTION_TIME = \"maxexecutiontime\";",
      "info" : "FieldDeclaration[10811-10972]:FieldDeclaration[10476-10637]"
    }, {
      "left" : "public static void usageMessage()",
      "right" : "public static void usageMessage()",
      "info" : "MethodDeclaration[10975-13045]:MethodDeclaration[10640-12710]"
    }, {
      "left" : "public static boolean checkRequiredProperties(Properties props)",
      "right" : "public static boolean checkRequiredProperties(Properties props)",
      "info" : "MethodDeclaration[13048-13271]:MethodDeclaration[12713-12936]"
    }, {
      "left" : "private static void exportMeasurements(Properties props, int opcount, long runtime)\n\t\t\tthrows IOException",
      "right" : "private static void exportMeasurements(Properties props, int opcount, long runtime)\n\t\t\tthrows IOException",
      "info" : "MethodDeclaration[13275-14792]:MethodDeclaration[12940-14457]"
    }, {
      "left" : "public static void main(String[] args)",
      "right" : "public static void main(String[] args)",
      "info" : "MethodDeclaration[14796-22559]:MethodDeclaration[14461-22242]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[19468-19668]:MethodDeclaration[19133-19333]"
    } ],
    "mappings" : [
 {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[3402-3407]:TYPE_DECLARATION_KIND[3402-3407]"
    }, {
      "left" : "StatusThread",
      "right" : "StatusThread",
      "info" : "SimpleName[3408-3420]:SimpleName[3408-3420]"
    }, {
      "left" : "Thread",
      "right" : "Thread",
      "info" : "SimpleType[3429-3435]:SimpleType[3429-3435]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3602-3608]:Modifier[3602-3608]"
    }, {
      "left" : "StatusThread",
      "right" : "StatusThread",
      "info" : "SimpleName[3609-3621]:SimpleName[3609-3621]"
    }, {
      "left" : "Vector<Thread> threads",
      "right" : "Vector<Thread> threads",
      "info" : "SingleVariableDeclaration[3622-3644]:SingleVariableDeclaration[3622-3644]"
    }, {
      "left" : "String label",
      "right" : "String label",
      "info" : "SingleVariableDeclaration[3646-3658]:SingleVariableDeclaration[3646-3658]"
    }, {
      "left" : "boolean standardstatus",
      "right" : "boolean standardstatus",
      "info" : "SingleVariableDeclaration[3660-3682]:SingleVariableDeclaration[3660-3682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3685-3759]:Block[3685-3759]"
    }, {
      "left" : "_threads=threads;",
      "right" : "_threads=threads;",
      "info" : "ExpressionStatement[3689-3706]:ExpressionStatement[3689-3706]"
    }, {
      "left" : "_label=label;",
      "right" : "_label=label;",
      "info" : "ExpressionStatement[3709-3722]:ExpressionStatement[3709-3722]"
    }, {
      "left" : "_standardstatus=standardstatus;",
      "right" : "_standardstatus=standardstatus;",
      "info" : "ExpressionStatement[3725-3756]:ExpressionStatement[3725-3756]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3812-3818]:Modifier[3812-3818]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3819-3823]:PrimitiveType[3819-3823]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[3824-3827]:SimpleName[3824-3827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3831-5218]:Block[3831-5218]"
    }, {
      "left" : "long st=System.currentTimeMillis();",
      "right" : "long st=System.currentTimeMillis();",
      "info" : "VariableDeclarationStatement[3835-3870]:VariableDeclarationStatement[3835-3870]"
    }, {
      "left" : "long lasten=st;",
      "right" : "long lasten=st;",
      "info" : "VariableDeclarationStatement[3874-3889]:VariableDeclarationStatement[3874-3889]"
    }, {
      "left" : "long lasttotalops=0;",
      "right" : "long lasttotalops=0;",
      "info" : "VariableDeclarationStatement[3892-3912]:VariableDeclarationStatement[3892-3912]"
    }, {
      "left" : "boolean alldone;",
      "right" : "boolean alldone;",
      "info" : "VariableDeclarationStatement[3918-3934]:VariableDeclarationStatement[3918-3934]"
    }, {
      "left" : "SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss:SSS\");",
      "right" : "SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss:SSS\");",
      "info" : "VariableDeclarationStatement[3937-4011]:VariableDeclarationStatement[3937-4011]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[4017-5215]:DoStatement[4017-5215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4023-5195]:Block[4023-5195]"
    }, {
      "left" : "alldone=true;",
      "right" : "alldone=true;",
      "info" : "ExpressionStatement[4028-4041]:ExpressionStatement[4028-4041]"
    }, {
      "left" : "int totalops=0;",
      "right" : "int totalops=0;",
      "info" : "VariableDeclarationStatement[4046-4061]:VariableDeclarationStatement[4046-4061]"
    }, {
      "left" : "for (Thread t : _threads)",
      "right" : "for (Thread t : _threads)",
      "info" : "EnhancedForStatement[4130-4313]:EnhancedForStatement[4130-4313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4159-4313]:Block[4159-4313]"
    }, {
      "left" : "if (t.getState()!=Thread.State.TERMINATED)",
      "right" : "if (t.getState()!=Thread.State.TERMINATED)",
      "info" : "IfStatement[4165-4239]:IfStatement[4165-4239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4212-4239]:Block[4212-4239]"
    }, {
      "left" : "alldone=false;",
      "right" : "alldone=false;",
      "info" : "ExpressionStatement[4219-4233]:ExpressionStatement[4219-4233]"
    }, {
      "left" : "ClientThread ct=(ClientThread)t;",
      "right" : "ClientThread ct=(ClientThread)t;",
      "info" : "VariableDeclarationStatement[4245-4277]:VariableDeclarationStatement[4245-4277]"
    }, {
      "left" : "totalops+=ct.getOpsDone();",
      "right" : "totalops+=ct.getOpsDone();",
      "info" : "ExpressionStatement[4282-4308]:ExpressionStatement[4282-4308]"
    }, {
      "left" : "long en=System.currentTimeMillis();",
      "right" : "long en=System.currentTimeMillis();",
      "info" : "VariableDeclarationStatement[4318-4353]:VariableDeclarationStatement[4318-4353]"
    }, {
      "left" : "long interval=en-st;",
      "right" : "long interval=en-st;",
      "info" : "VariableDeclarationStatement[4358-4378]:VariableDeclarationStatement[4358-4378]"
    }, {
      "left" : "double curthroughput=1000.0*(((double)(totalops-lasttotalops))/((double)(en-lasten)));",
      "right" : "double curthroughput=1000.0*(((double)(totalops-lasttotalops))/((double)(en-lasten)));",
      "info" : "VariableDeclarationStatement[4452-4538]:VariableDeclarationStatement[4452-4538]"
    }, {
      "left" : "lasttotalops=totalops;",
      "right" : "lasttotalops=totalops;",
      "info" : "ExpressionStatement[4546-4568]:ExpressionStatement[4546-4568]"
    }, {
      "left" : "lasten=en;",
      "right" : "lasten=en;",
      "info" : "ExpressionStatement[4572-4582]:ExpressionStatement[4572-4582]"
    }, {
      "left" : "DecimalFormat d = new DecimalFormat(\"#.##\");",
      "right" : "DecimalFormat d = new DecimalFormat(\"#.##\");",
      "info" : "VariableDeclarationStatement[4590-4634]:VariableDeclarationStatement[4590-4634]"
    }, {
      "left" : "String label = _label + format.format(new Date());",
      "right" : "String label = _label + format.format(new Date());",
      "info" : "VariableDeclarationStatement[4638-4688]:VariableDeclarationStatement[4638-4688]"
    }, {
      "left" : "StringBuilder msg = new StringBuilder(label).append(\" \").append(interval/1000).append(\" sec: \");",
      "right" : "StringBuilder msg = new StringBuilder(label).append(\" \").append(interval/1000).append(\" sec: \");",
      "info" : "VariableDeclarationStatement[4693-4789]:VariableDeclarationStatement[4693-4789]"
    }, {
      "left" : "msg.append(totalops).append(\" operations; \");",
      "right" : "msg.append(totalops).append(\" operations; \");",
      "info" : "ExpressionStatement[4793-4838]:ExpressionStatement[4793-4838]"
    }, {
      "left" : "if (totalops != 0)",
      "right" : "if (totalops != 0)",
      "info" : "IfStatement[4843-4938]:IfStatement[4843-4938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4862-4938]:Block[4862-4938]"
    }, {
      "left" : "msg.append(d.format(curthroughput)).append(\" current ops/sec; \");",
      "right" : "msg.append(d.format(curthroughput)).append(\" current ops/sec; \");",
      "info" : "ExpressionStatement[4868-4933]:ExpressionStatement[4868-4933]"
    }, {
      "left" : "msg.append(Measurements.getMeasurements().getSummary());",
      "right" : "msg.append(Measurements.getMeasurements().getSummary());",
      "info" : "ExpressionStatement[4943-4999]:ExpressionStatement[4943-4999]"
    }, {
      "left" : "System.err.println(msg);",
      "right" : "System.err.println(msg);",
      "info" : "ExpressionStatement[5004-5028]:ExpressionStatement[5004-5028]"
    }, {
      "left" : "if (_standardstatus)",
      "right" : "if (_standardstatus)",
      "info" : "IfStatement[5033-5089]:IfStatement[5033-5089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5054-5089]:Block[5054-5089]"
    }, {
      "left" : "System.out.println(msg);",
      "right" : "System.out.println(msg);",
      "info" : "ExpressionStatement[5060-5084]:ExpressionStatement[5060-5084]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5094-5190]:TryStatement[5094-5190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5101-5129]:Block[5101-5129]"
    }, {
      "left" : "sleep(sleeptime);",
      "right" : "sleep(sleeptime);",
      "info" : "ExpressionStatement[5107-5124]:ExpressionStatement[5107-5124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5167-5190]:Block[5167-5190]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[5328-5333]:TYPE_DECLARATION_KIND[5328-5333]"
    }, {
      "left" : "ClientThread",
      "right" : "ClientThread",
      "info" : "SimpleName[5334-5346]:SimpleName[5334-5346]"
    }, {
      "left" : "Thread",
      "right" : "Thread",
      "info" : "SimpleType[5355-5361]:SimpleType[5355-5361]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6042-6048]:Modifier[6042-6048]"
    }, {
      "left" : "ClientThread",
      "right" : "ClientThread",
      "info" : "SimpleName[6049-6061]:SimpleName[6049-6061]"
    }, {
      "left" : "DB db",
      "right" : "DB db",
      "info" : "SingleVariableDeclaration[6062-6067]:SingleVariableDeclaration[6062-6067]"
    }, {
      "left" : "boolean dotransactions",
      "right" : "boolean dotransactions",
      "info" : "SingleVariableDeclaration[6069-6091]:SingleVariableDeclaration[6069-6091]"
    }, {
      "left" : "Workload workload",
      "right" : "Workload workload",
      "info" : "SingleVariableDeclaration[6093-6110]:SingleVariableDeclaration[6093-6110]"
    }, {
      "left" : "int threadid",
      "right" : "int threadid",
      "info" : "SingleVariableDeclaration[6112-6124]:SingleVariableDeclaration[6112-6124]"
    }, {
      "left" : "int threadcount",
      "right" : "int threadcount",
      "info" : "SingleVariableDeclaration[6126-6141]:SingleVariableDeclaration[6126-6141]"
    }, {
      "left" : "Properties props",
      "right" : "Properties props",
      "info" : "SingleVariableDeclaration[6143-6159]:SingleVariableDeclaration[6143-6159]"
    }, {
      "left" : "int opcount",
      "right" : "int opcount",
      "info" : "SingleVariableDeclaration[6161-6172]:SingleVariableDeclaration[6161-6172]"
    }, {
      "left" : "double targetperthreadperms",
      "right" : "double targetperthreadperms",
      "info" : "SingleVariableDeclaration[6174-6201]:SingleVariableDeclaration[6174-6201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6204-6507]:Block[6204-6507]"
    }, {
      "left" : "_db=db;",
      "right" : "_db=db;",
      "info" : "ExpressionStatement[6261-6268]:ExpressionStatement[6261-6268]"
    }, {
      "left" : "_dotransactions=dotransactions;",
      "right" : "_dotransactions=dotransactions;",
      "info" : "ExpressionStatement[6271-6302]:ExpressionStatement[6271-6302]"
    }, {
      "left" : "_workload=workload;",
      "right" : "_workload=workload;",
      "info" : "ExpressionStatement[6305-6324]:ExpressionStatement[6305-6324]"
    }, {
      "left" : "_opcount=opcount;",
      "right" : "_opcount=opcount;",
      "info" : "ExpressionStatement[6327-6344]:ExpressionStatement[6327-6344]"
    }, {
      "left" : "_opsdone=0;",
      "right" : "_opsdone=0;",
      "info" : "ExpressionStatement[6347-6358]:ExpressionStatement[6347-6358]"
    }, {
      "left" : "_target=targetperthreadperms;",
      "right" : "_target=targetperthreadperms;",
      "info" : "ExpressionStatement[6361-6390]:ExpressionStatement[6361-6390]"
    }, {
      "left" : "_threadid=threadid;",
      "right" : "_threadid=threadid;",
      "info" : "ExpressionStatement[6393-6412]:ExpressionStatement[6393-6412]"
    }, {
      "left" : "_threadcount=threadcount;",
      "right" : "_threadcount=threadcount;",
      "info" : "ExpressionStatement[6415-6440]:ExpressionStatement[6415-6440]"
    }, {
      "left" : "_props=props;",
      "right" : "_props=props;",
      "info" : "ExpressionStatement[6443-6456]:ExpressionStatement[6443-6456]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6510-6516]:Modifier[6510-6516]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6517-6520]:PrimitiveType[6517-6520]"
    }, {
      "left" : "getOpsDone",
      "right" : "getOpsDone",
      "info" : "SimpleName[6521-6531]:SimpleName[6521-6531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6535-6558]:Block[6535-6558]"
    }, {
      "left" : "return _opsdone;",
      "right" : "return _opsdone;",
      "info" : "ReturnStatement[6539-6555]:ReturnStatement[6539-6555]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6561-6567]:Modifier[6561-6567]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6568-6572]:PrimitiveType[6568-6572]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[6573-6576]:SimpleName[6573-6576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6580-9247]:Block[6580-8175]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6584-6711]:TryStatement[6584-6711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6590-6610]:Block[6590-6610]"
    }, {
      "left" : "_db.init();",
      "right" : "_db.init();",
      "info" : "ExpressionStatement[6595-6606]:ExpressionStatement[6595-6606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6637-6711]:Block[6637-6711]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[6642-6662]:ExpressionStatement[6642-6662]"
    }, {
      "left" : "e.printStackTrace(System.out);",
      "right" : "e.printStackTrace(System.out);",
      "info" : "ExpressionStatement[6666-6696]:ExpressionStatement[6666-6696]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[6700-6707]:ReturnStatement[6700-6707]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6715-6904]:TryStatement[6715-6904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6721-6797]:Block[6721-6797]"
    }, {
      "left" : "_workloadstate=_workload.initThread(_props,_threadid,_threadcount);",
      "right" : "_workloadstate=_workload.initThread(_props,_threadid,_threadcount);",
      "info" : "ExpressionStatement[6726-6793]:ExpressionStatement[6726-6793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6830-6904]:Block[6830-6904]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[6835-6855]:ExpressionStatement[6835-6855]"
    }, {
      "left" : "e.printStackTrace(System.out);",
      "right" : "e.printStackTrace(System.out);",
      "info" : "ExpressionStatement[6859-6889]:ExpressionStatement[6859-6889]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[6893-6900]:ReturnStatement[6893-6900]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6991-7345]:TryStatement[6991-7345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6997-7285]:Block[6997-7285]"
    }, {
      "left" : "if ( (_target>0) && (_target<=1.0))",
      "right" : "if ( (_target>0) && (_target<=1.0))",
      "info" : "IfStatement[7171-7281]:IfStatement[7171-7281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7214-7281]:Block[7214-7281]"
    }, {
      "left" : "sleep(Utils.random().nextInt((int)(1.0/_target)));",
      "right" : "sleep(Utils.random().nextInt((int)(1.0/_target)));",
      "info" : "ExpressionStatement[7224-7274]:ExpressionStatement[7224-7274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7321-7345]:Block[7321-7345]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7351-9110]:TryStatement[7351-8038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7357-9003]:Block[7357-7931]"
    }, {
      "left" : "if (_dotransactions)",
      "right" : "if (_dotransactions)",
      "info" : "IfStatement[7362-8999]:IfStatement[7362-7927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7386-8189]:Block[7386-7653]"
    }, {
      "left" : "long st=System.currentTimeMillis();",
      "right" : "long st=System.currentTimeMillis();",
      "info" : "VariableDeclarationStatement[7392-7427]:VariableDeclarationStatement[7392-7427]"
    }, {
      "left" : "while (((_opcount == 0) || (_opsdone < _opcount)) && !_workload.isStopRequested())",
      "right" : "while (((_opcount == 0) || (_opsdone < _opcount)) && !_workload.isStopRequested())",
      "info" : "WhileStatement[7433-8184]:WhileStatement[7433-7648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7520-8184]:Block[7520-7648]"
    }, {
      "left" : "if (!_workload.doTransaction(_db,_workloadstate))",
      "right" : "if (!_workload.doTransaction(_db,_workloadstate))",
      "info" : "IfStatement[7528-7604]:IfStatement[7528-7604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7583-7604]:Block[7583-7604]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[7591-7597]:BreakStatement[7591-7597]"
    }, {
      "left" : "_opsdone++;",
      "right" : "_opsdone++;",
      "info" : "ExpressionStatement[7611-7622]:ExpressionStatement[7611-7622]"
    }, {
      "left" : "if (_target>0)",
      "right" : "if (_target>0)",
      "info" : "IfStatement[7660-8178]:IfStatement[8268-8849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7680-8178]:Block[8291-8849]"
    }, {
      "left" : "while (System.currentTimeMillis()-st<((double)_opsdone)/_target)",
      "right" : "while (System.currentTimeMillis()-currTimeMillis<((double)_opsdone)/_target)",
      "info" : "WhileStatement[7963-8171]:WhileStatement[8589-8839]"
    }, {
      "left" : "st",
      "right" : "currTimeMillis",
      "info" : "SimpleName[7997-7999]:SimpleName[8623-8637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8034-8171]:Block[8675-8839]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8043-8162]:TryStatement[8687-8827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8054-8082]:Block[8701-8735]"
    }, {
      "left" : "sleep(1);",
      "right" : "sleep(1);",
      "info" : "ExpressionStatement[8064-8073]:ExpressionStatement[8714-8723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8128-8162]:Block[8787-8827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8201-8999]:Block[7665-7927]"
    }, {
      "left" : "long st=System.currentTimeMillis();",
      "right" : "long st=System.currentTimeMillis();",
      "info" : "VariableDeclarationStatement[8207-8242]:VariableDeclarationStatement[7671-7706]"
    }, {
      "left" : "while (((_opcount == 0) || (_opsdone < _opcount)) && !_workload.isStopRequested())",
      "right" : "while (((_opcount == 0) || (_opsdone < _opcount)) && !_workload.isStopRequested())",
      "info" : "WhileStatement[8248-8994]:WhileStatement[7712-7922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8335-8994]:Block[7799-7922]"
    }, {
      "left" : "if (!_workload.doInsert(_db,_workloadstate))",
      "right" : "if (!_workload.doInsert(_db,_workloadstate))",
      "info" : "IfStatement[8343-8414]:IfStatement[7807-7878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8393-8414]:Block[7857-7878]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[8401-8407]:BreakStatement[7865-7871]"
    }, {
      "left" : "_opsdone++;",
      "right" : "_opsdone++;",
      "info" : "ExpressionStatement[8421-8432]:ExpressionStatement[7885-7896]"
    }, {
      "left" : "if (_target>0)",
      "right" : "if (_target>0)",
      "info" : "IfStatement[8470-8988]:IfStatement[8268-8849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8490-8988]:Block[8291-8849]"
    }, {
      "left" : "while (System.currentTimeMillis()-st<((double)_opsdone)/_target)",
      "right" : "while (System.currentTimeMillis()-currTimeMillis<((double)_opsdone)/_target)",
      "info" : "WhileStatement[8773-8981]:WhileStatement[8589-8839]"
    }, {
      "left" : "st",
      "right" : "currTimeMillis",
      "info" : "SimpleName[8807-8809]:SimpleName[8623-8637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8844-8981]:Block[8675-8839]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8853-8973]:TryStatement[8687-8827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8865-8893]:Block[8701-8735]"
    }, {
      "left" : "sleep(1);",
      "right" : "sleep(1);",
      "info" : "ExpressionStatement[8875-8884]:ExpressionStatement[8714-8723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8939-8973]:Block[8787-8827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9028-9110]:Block[7956-8038]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[9033-9053]:ExpressionStatement[7961-7981]"
    }, {
      "left" : "e.printStackTrace(System.out);",
      "right" : "e.printStackTrace(System.out);",
      "info" : "ExpressionStatement[9057-9087]:ExpressionStatement[7985-8015]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[9091-9106]:ExpressionStatement[8019-8034]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[9114-9244]:TryStatement[8042-8172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9120-9143]:Block[8048-8071]"
    }, {
      "left" : "_db.cleanup();",
      "right" : "_db.cleanup();",
      "info" : "ExpressionStatement[9125-9139]:ExpressionStatement[8053-8067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9170-9244]:Block[8098-8172]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[9175-9195]:ExpressionStatement[8103-8123]"
    }, {
      "left" : "e.printStackTrace(System.out);",
      "right" : "e.printStackTrace(System.out);",
      "info" : "ExpressionStatement[9199-9229]:ExpressionStatement[8127-8157]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[9233-9240]:ReturnStatement[8161-8168]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9293-9299]:Modifier[8901-8907]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[9300-9305]:TYPE_DECLARATION_KIND[8908-8913]"
    }, {
      "left" : "Client",
      "right" : "Client",
      "info" : "SimpleName[9306-9312]:SimpleName[8914-8920]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10975-10981]:Modifier[10640-10646]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10982-10988]:Modifier[10647-10653]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10989-10993]:PrimitiveType[10654-10658]"
    }, {
      "left" : "usageMessage",
      "right" : "usageMessage",
      "info" : "SimpleName[10994-11006]:SimpleName[10659-10671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11010-13045]:Block[10675-12710]"
    }, {
      "left" : "System.out.println(\"Usage: java com.yahoo.ycsb.Client [options]\");",
      "right" : "System.out.println(\"Usage: java com.yahoo.ycsb.Client [options]\");",
      "info" : "ExpressionStatement[11014-11080]:ExpressionStatement[10679-10745]"
    }, {
      "left" : "System.out.println(\"Options:\");",
      "right" : "System.out.println(\"Options:\");",
      "info" : "ExpressionStatement[11083-11114]:ExpressionStatement[10748-10779]"
    }, {
      "left" : "System.out.println(\"  -threads n: execute using n threads (default: 1) - can also be specified as the \\n\" +\n\t\t\t\t\"              \\\"threadcount\\\" property using -p\");",
      "right" : "System.out.println(\"  -threads n: execute using n threads (default: 1) - can also be specified as the \\n\" +\n\t\t\t\t\"              \\\"threadcount\\\" property using -p\");",
      "info" : "ExpressionStatement[11117-11280]:ExpressionStatement[10782-10945]"
    }, {
      "left" : "System.out.println(\"  -target n: attempt to do n operations per second (default: unlimited) - can also\\n\" +\n\t\t\t\t\"             be specified as the \\\"target\\\" property using -p\");",
      "right" : "System.out.println(\"  -target n: attempt to do n operations per second (default: unlimited) - can also\\n\" +\n\t\t\t\t\"             be specified as the \\\"target\\\" property using -p\");",
      "info" : "ExpressionStatement[11283-11460]:ExpressionStatement[10948-11125]"
    }, {
      "left" : "System.out.println(\"  -load:  run the loading phase of the workload\");",
      "right" : "System.out.println(\"  -load:  run the loading phase of the workload\");",
      "info" : "ExpressionStatement[11463-11533]:ExpressionStatement[11128-11198]"
    }, {
      "left" : "System.out.println(\"  -t:  run the transactions phase of the workload (default)\");",
      "right" : "System.out.println(\"  -t:  run the transactions phase of the workload (default)\");",
      "info" : "ExpressionStatement[11536-11618]:ExpressionStatement[11201-11283]"
    }, {
      "left" : "System.out.println(\"  -db dbname: specify the name of the DB to use (default: com.yahoo.ycsb.BasicDB) - \\n\" +\n\t\t\t\t\"              can also be specified as the \\\"db\\\" property using -p\");",
      "right" : "System.out.println(\"  -db dbname: specify the name of the DB to use (default: com.yahoo.ycsb.BasicDB) - \\n\" +\n\t\t\t\t\"              can also be specified as the \\\"db\\\" property using -p\");",
      "info" : "ExpressionStatement[11621-11806]:ExpressionStatement[11286-11471]"
    }, {
      "left" : "System.out.println(\"  -P propertyfile: load properties from the given file. Multiple files can\");",
      "right" : "System.out.println(\"  -P propertyfile: load properties from the given file. Multiple files can\");",
      "info" : "ExpressionStatement[11809-11906]:ExpressionStatement[11474-11571]"
    }, {
      "left" : "System.out.println(\"                   be specified, and will be processed in the order specified\");",
      "right" : "System.out.println(\"                   be specified, and will be processed in the order specified\");",
      "info" : "ExpressionStatement[11909-12009]:ExpressionStatement[11574-11674]"
    }, {
      "left" : "System.out.println(\"  -p name=value:  specify a property to be passed to the DB and workloads;\");",
      "right" : "System.out.println(\"  -p name=value:  specify a property to be passed to the DB and workloads;\");",
      "info" : "ExpressionStatement[12012-12109]:ExpressionStatement[11677-11774]"
    }, {
      "left" : "System.out.println(\"                  multiple properties can be specified, and override any\");",
      "right" : "System.out.println(\"                  multiple properties can be specified, and override any\");",
      "info" : "ExpressionStatement[12112-12207]:ExpressionStatement[11777-11872]"
    }, {
      "left" : "System.out.println(\"                  values in the propertyfile\");",
      "right" : "System.out.println(\"                  values in the propertyfile\");",
      "info" : "ExpressionStatement[12210-12277]:ExpressionStatement[11875-11942]"
    }, {
      "left" : "System.out.println(\"  -s:  show status during run (default: no status)\");",
      "right" : "System.out.println(\"  -s:  show status during run (default: no status)\");",
      "info" : "ExpressionStatement[12280-12353]:ExpressionStatement[11945-12018]"
    }, {
      "left" : "System.out.println(\"  -l label:  use label for status (e.g. to label one experiment out of a whole batch)\");",
      "right" : "System.out.println(\"  -l label:  use label for status (e.g. to label one experiment out of a whole batch)\");",
      "info" : "ExpressionStatement[12356-12464]:ExpressionStatement[12021-12129]"
    }, {
      "left" : "System.out.println(\"\");",
      "right" : "System.out.println(\"\");",
      "info" : "ExpressionStatement[12467-12490]:ExpressionStatement[12132-12155]"
    }, {
      "left" : "System.out.println(\"Required properties:\");",
      "right" : "System.out.println(\"Required properties:\");",
      "info" : "ExpressionStatement[12493-12536]:ExpressionStatement[12158-12201]"
    }, {
      "left" : "System.out.println(\"  \"+WORKLOAD_PROPERTY+\": the name of the workload class to use (e.g. com.yahoo.ycsb.workloads.CoreWorkload)\");",
      "right" : "System.out.println(\"  \"+WORKLOAD_PROPERTY+\": the name of the workload class to use (e.g. com.yahoo.ycsb.workloads.CoreWorkload)\");",
      "info" : "ExpressionStatement[12539-12669]:ExpressionStatement[12204-12334]"
    }, {
      "left" : "System.out.println(\"\");",
      "right" : "System.out.println(\"\");",
      "info" : "ExpressionStatement[12672-12695]:ExpressionStatement[12337-12360]"
    }, {
      "left" : "System.out.println(\"To run the transaction phase from multiple servers, start a separate client on each.\");",
      "right" : "System.out.println(\"To run the transaction phase from multiple servers, start a separate client on each.\");",
      "info" : "ExpressionStatement[12698-12805]:ExpressionStatement[12363-12470]"
    }, {
      "left" : "System.out.println(\"To run the load phase from multiple servers, start a separate client on each; additionally,\");",
      "right" : "System.out.println(\"To run the load phase from multiple servers, start a separate client on each; additionally,\");",
      "info" : "ExpressionStatement[12808-12922]:ExpressionStatement[12473-12587]"
    }, {
      "left" : "System.out.println(\"use the \\\"insertcount\\\" and \\\"insertstart\\\" properties to divide up the records to be inserted\");",
      "right" : "System.out.println(\"use the \\\"insertcount\\\" and \\\"insertstart\\\" properties to divide up the records to be inserted\");",
      "info" : "ExpressionStatement[12925-13042]:ExpressionStatement[12590-12707]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13048-13054]:Modifier[12713-12719]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13055-13061]:Modifier[12720-12726]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[13062-13069]:PrimitiveType[12727-12734]"
    }, {
      "left" : "checkRequiredProperties",
      "right" : "checkRequiredProperties",
      "info" : "SimpleName[13070-13093]:SimpleName[12735-12758]"
    }, {
      "left" : "Properties props",
      "right" : "Properties props",
      "info" : "SingleVariableDeclaration[13094-13110]:SingleVariableDeclaration[12759-12775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13113-13271]:Block[12778-12936]"
    }, {
      "left" : "if (props.getProperty(WORKLOAD_PROPERTY)==null)",
      "right" : "if (props.getProperty(WORKLOAD_PROPERTY)==null)",
      "info" : "IfStatement[13117-13252]:IfStatement[12782-12917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13167-13252]:Block[12832-12917]"
    }, {
      "left" : "System.out.println(\"Missing property: \"+WORKLOAD_PROPERTY);",
      "right" : "System.out.println(\"Missing property: \"+WORKLOAD_PROPERTY);",
      "info" : "ExpressionStatement[13172-13231]:ExpressionStatement[12837-12896]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[13235-13248]:ReturnStatement[12900-12913]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[13256-13268]:ReturnStatement[12921-12933]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[13469-13476]:Modifier[13134-13141]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13477-13483]:Modifier[13142-13148]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13484-13488]:PrimitiveType[13149-13153]"
    }, {
      "left" : "exportMeasurements",
      "right" : "exportMeasurements",
      "info" : "SimpleName[13489-13507]:SimpleName[13154-13172]"
    }, {
      "left" : "Properties props",
      "right" : "Properties props",
      "info" : "SingleVariableDeclaration[13508-13524]:SingleVariableDeclaration[13173-13189]"
    }, {
      "left" : "int opcount",
      "right" : "int opcount",
      "info" : "SingleVariableDeclaration[13526-13537]:SingleVariableDeclaration[13191-13202]"
    }, {
      "left" : "long runtime",
      "right" : "long runtime",
      "info" : "SingleVariableDeclaration[13539-13551]:SingleVariableDeclaration[13204-13216]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[13563-13574]:SimpleType[13228-13239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13576-14792]:Block[13241-14457]"
    }, {
      "left" : "MeasurementsExporter exporter = null;",
      "right" : "MeasurementsExporter exporter = null;",
      "info" : "VariableDeclarationStatement[13580-13617]:VariableDeclarationStatement[13245-13282]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[13620-14789]:TryStatement[13285-14454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13626-14716]:Block[13291-14381]"
    }, {
      "left" : "OutputStream out;",
      "right" : "OutputStream out;",
      "info" : "VariableDeclarationStatement[13710-13727]:VariableDeclarationStatement[13375-13392]"
    }, {
      "left" : "String exportFile = props.getProperty(EXPORT_FILE_PROPERTY);",
      "right" : "String exportFile = props.getProperty(EXPORT_FILE_PROPERTY);",
      "info" : "VariableDeclarationStatement[13731-13791]:VariableDeclarationStatement[13396-13456]"
    }, {
      "left" : "if (exportFile == null)",
      "right" : "if (exportFile == null)",
      "info" : "IfStatement[13795-13909]:IfStatement[13460-13574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13822-13850]:Block[13487-13515]"
    }, {
      "left" : "out = System.out;",
      "right" : "out = System.out;",
      "info" : "ExpressionStatement[13828-13845]:ExpressionStatement[13493-13510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13859-13909]:Block[13524-13574]"
    }, {
      "left" : "out = new FileOutputStream(exportFile);",
      "right" : "out = new FileOutputStream(exportFile);",
      "info" : "ExpressionStatement[13865-13904]:ExpressionStatement[13530-13569]"
    }, {
      "left" : "String exporterStr = props.getProperty(EXPORTER_PROPERTY, \"com.yahoo.ycsb.measurements.exporter.TextMeasurementsExporter\");",
      "right" : "String exporterStr = props.getProperty(EXPORTER_PROPERTY, \"com.yahoo.ycsb.measurements.exporter.TextMeasurementsExporter\");",
      "info" : "VariableDeclarationStatement[13981-14104]:VariableDeclarationStatement[13646-13769]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[14108-14454]:TryStatement[13773-14119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14115-14239]:Block[13780-13904]"
    }, {
      "left" : "exporter = (MeasurementsExporter) Class.forName(exporterStr).getConstructor(OutputStream.class).newInstance(out);",
      "right" : "exporter = (MeasurementsExporter) Class.forName(exporterStr).getConstructor(OutputStream.class).newInstance(out);",
      "info" : "ExpressionStatement[14121-14234]:ExpressionStatement[13786-13899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14263-14454]:Block[13928-14119]"
    }, {
      "left" : "System.err.println(\"Could not find exporter \" + exporterStr\n\t\t\t\t\t\t+ \", will use default text reporter.\");",
      "right" : "System.err.println(\"Could not find exporter \" + exporterStr\n\t\t\t\t\t\t+ \", will use default text reporter.\");",
      "info" : "ExpressionStatement[14269-14374]:ExpressionStatement[13934-14039]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[14379-14399]:ExpressionStatement[14044-14064]"
    }, {
      "left" : "exporter = new TextMeasurementsExporter(out);",
      "right" : "exporter = new TextMeasurementsExporter(out);",
      "info" : "ExpressionStatement[14404-14449]:ExpressionStatement[14069-14114]"
    }, {
      "left" : "exporter.write(\"OVERALL\", \"RunTime(ms)\", runtime);",
      "right" : "exporter.write(\"OVERALL\", \"RunTime(ms)\", runtime);",
      "info" : "ExpressionStatement[14459-14509]:ExpressionStatement[14124-14174]"
    }, {
      "left" : "double throughput = 1000.0 * ((double) opcount) / ((double) runtime);",
      "right" : "double throughput = 1000.0 * ((double) opcount) / ((double) runtime);",
      "info" : "VariableDeclarationStatement[14513-14582]:VariableDeclarationStatement[14178-14247]"
    }, {
      "left" : "exporter.write(\"OVERALL\", \"Throughput(ops/sec)\", throughput);",
      "right" : "exporter.write(\"OVERALL\", \"Throughput(ops/sec)\", throughput);",
      "info" : "ExpressionStatement[14586-14647]:ExpressionStatement[14251-14312]"
    }, {
      "left" : "Measurements.getMeasurements().exportMeasurements(exporter);",
      "right" : "Measurements.getMeasurements().exportMeasurements(exporter);",
      "info" : "ExpressionStatement[14652-14712]:ExpressionStatement[14317-14377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14727-14789]:Block[14392-14454]"
    }, {
      "left" : "if (exporter != null)",
      "right" : "if (exporter != null)",
      "info" : "IfStatement[14732-14785]:IfStatement[14397-14450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14757-14785]:Block[14422-14450]"
    }, {
      "left" : "exporter.close();",
      "right" : "exporter.close();",
      "info" : "ExpressionStatement[14763-14780]:ExpressionStatement[14428-14445]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[14796-14826]:SingleMemberAnnotation[14461-14491]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14828-14834]:Modifier[14493-14499]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14835-14841]:Modifier[14500-14506]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14842-14846]:PrimitiveType[14507-14511]"
    }, {
      "left" : "main",
      "right" : "main",
      "info" : "SimpleName[14847-14851]:SimpleName[14512-14516]"
    }, {
      "left" : "String[] args",
      "right" : "String[] args",
      "info" : "SingleVariableDeclaration[14852-14865]:SingleVariableDeclaration[14517-14530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14868-22559]:Block[14533-22242]"
    }, {
      "left" : "String dbname;",
      "right" : "String dbname;",
      "info" : "VariableDeclarationStatement[14872-14886]:VariableDeclarationStatement[14537-14551]"
    }, {
      "left" : "Properties props=new Properties();",
      "right" : "Properties props=new Properties();",
      "info" : "VariableDeclarationStatement[14889-14923]:VariableDeclarationStatement[14554-14588]"
    }, {
      "left" : "Properties fileprops=new Properties();",
      "right" : "Properties fileprops=new Properties();",
      "info" : "VariableDeclarationStatement[14926-14964]:VariableDeclarationStatement[14591-14629]"
    }, {
      "left" : "boolean dotransactions=true;",
      "right" : "boolean dotransactions=true;",
      "info" : "VariableDeclarationStatement[14967-14995]:VariableDeclarationStatement[14632-14660]"
    }, {
      "left" : "int threadcount=1;",
      "right" : "int threadcount=1;",
      "info" : "VariableDeclarationStatement[14998-15016]:VariableDeclarationStatement[14663-14681]"
    }, {
      "left" : "int target=0;",
      "right" : "int target=0;",
      "info" : "VariableDeclarationStatement[15019-15032]:VariableDeclarationStatement[14684-14697]"
    }, {
      "left" : "boolean status=false;",
      "right" : "boolean status=false;",
      "info" : "VariableDeclarationStatement[15035-15056]:VariableDeclarationStatement[14700-14721]"
    }, {
      "left" : "String label=\"\";",
      "right" : "String label=\"\";",
      "info" : "VariableDeclarationStatement[15059-15075]:VariableDeclarationStatement[14724-14740]"
    }, {
      "left" : "int argindex=0;",
      "right" : "int argindex=0;",
      "info" : "VariableDeclarationStatement[15099-15114]:VariableDeclarationStatement[14764-14779]"
    }, {
      "left" : "if (args.length==0)",
      "right" : "if (args.length==0)",
      "info" : "IfStatement[15118-15183]:IfStatement[14783-14848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15140-15183]:Block[14805-14848]"
    }, {
      "left" : "usageMessage();",
      "right" : "usageMessage();",
      "info" : "ExpressionStatement[15145-15160]:ExpressionStatement[14810-14825]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[15164-15179]:ExpressionStatement[14829-14844]"
    }, {
      "left" : "while (args[argindex].startsWith(\"-\"))",
      "right" : "while (args[argindex].startsWith(\"-\"))",
      "info" : "WhileStatement[15187-17861]:WhileStatement[14852-17526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15228-17861]:Block[14893-17526]"
    }, {
      "left" : "if (args[argindex].compareTo(\"-threads\")==0)",
      "right" : "if (args[argindex].compareTo(\"-threads\")==0)",
      "info" : "IfStatement[15233-17805]:IfStatement[14898-17470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15281-15510]:Block[14946-15175]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[15287-15298]:ExpressionStatement[14952-14963]"
    }, {
      "left" : "if (argindex>=args.length)",
      "right" : "if (argindex>=args.length)",
      "info" : "IfStatement[15303-15383]:IfStatement[14968-15048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15334-15383]:Block[14999-15048]"
    }, {
      "left" : "usageMessage();",
      "right" : "usageMessage();",
      "info" : "ExpressionStatement[15341-15356]:ExpressionStatement[15006-15021]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[15362-15377]:ExpressionStatement[15027-15042]"
    }, {
      "left" : "int tcount=Integer.parseInt(args[argindex]);",
      "right" : "int tcount=Integer.parseInt(args[argindex]);",
      "info" : "VariableDeclarationStatement[15388-15432]:VariableDeclarationStatement[15053-15097]"
    }, {
      "left" : "props.setProperty(THREAD_COUNT_PROPERTY, tcount+\"\");",
      "right" : "props.setProperty(THREAD_COUNT_PROPERTY, tcount+\"\");",
      "info" : "ExpressionStatement[15437-15489]:ExpressionStatement[15102-15154]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[15494-15505]:ExpressionStatement[15159-15170]"
    }, {
      "left" : "if (args[argindex].compareTo(\"-target\")==0)",
      "right" : "if (args[argindex].compareTo(\"-target\")==0)",
      "info" : "IfStatement[15519-17805]:IfStatement[15184-17470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15566-15791]:Block[15231-15456]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[15572-15583]:ExpressionStatement[15237-15248]"
    }, {
      "left" : "if (argindex>=args.length)",
      "right" : "if (argindex>=args.length)",
      "info" : "IfStatement[15588-15668]:IfStatement[15253-15333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15619-15668]:Block[15284-15333]"
    }, {
      "left" : "usageMessage();",
      "right" : "usageMessage();",
      "info" : "ExpressionStatement[15626-15641]:ExpressionStatement[15291-15306]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[15647-15662]:ExpressionStatement[15312-15327]"
    }, {
      "left" : "int ttarget=Integer.parseInt(args[argindex]);",
      "right" : "int ttarget=Integer.parseInt(args[argindex]);",
      "info" : "VariableDeclarationStatement[15673-15718]:VariableDeclarationStatement[15338-15383]"
    }, {
      "left" : "props.setProperty(TARGET_PROPERTY, ttarget+\"\");",
      "right" : "props.setProperty(TARGET_PROPERTY, ttarget+\"\");",
      "info" : "ExpressionStatement[15723-15770]:ExpressionStatement[15388-15435]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[15775-15786]:ExpressionStatement[15440-15451]"
    }, {
      "left" : "if (args[argindex].compareTo(\"-load\")==0)",
      "right" : "if (args[argindex].compareTo(\"-load\")==0)",
      "info" : "IfStatement[15800-17805]:IfStatement[15465-17470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15845-15893]:Block[15510-15558]"
    }, {
      "left" : "dotransactions=false;",
      "right" : "dotransactions=false;",
      "info" : "ExpressionStatement[15851-15872]:ExpressionStatement[15516-15537]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[15877-15888]:ExpressionStatement[15542-15553]"
    }, {
      "left" : "if (args[argindex].compareTo(\"-t\")==0)",
      "right" : "if (args[argindex].compareTo(\"-t\")==0)",
      "info" : "IfStatement[15902-17805]:IfStatement[15567-17470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15944-15991]:Block[15609-15656]"
    }, {
      "left" : "dotransactions=true;",
      "right" : "dotransactions=true;",
      "info" : "ExpressionStatement[15950-15970]:ExpressionStatement[15615-15635]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[15975-15986]:ExpressionStatement[15640-15651]"
    }, {
      "left" : "if (args[argindex].compareTo(\"-s\")==0)",
      "right" : "if (args[argindex].compareTo(\"-s\")==0)",
      "info" : "IfStatement[16000-17805]:IfStatement[15665-17470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16042-16081]:Block[15707-15746]"
    }, {
      "left" : "status=true;",
      "right" : "status=true;",
      "info" : "ExpressionStatement[16048-16060]:ExpressionStatement[15713-15725]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[16065-16076]:ExpressionStatement[15730-15741]"
    }, {
      "left" : "if (args[argindex].compareTo(\"-db\")==0)",
      "right" : "if (args[argindex].compareTo(\"-db\")==0)",
      "info" : "IfStatement[16090-17805]:IfStatement[15755-17470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16133-16307]:Block[15798-15972]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[16139-16150]:ExpressionStatement[15804-15815]"
    }, {
      "left" : "if (argindex>=args.length)",
      "right" : "if (argindex>=args.length)",
      "info" : "IfStatement[16155-16235]:IfStatement[15820-15900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16186-16235]:Block[15851-15900]"
    }, {
      "left" : "usageMessage();",
      "right" : "usageMessage();",
      "info" : "ExpressionStatement[16193-16208]:ExpressionStatement[15858-15873]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[16214-16229]:ExpressionStatement[15879-15894]"
    }, {
      "left" : "props.setProperty(DB_PROPERTY,args[argindex]);",
      "right" : "props.setProperty(DB_PROPERTY,args[argindex]);",
      "info" : "ExpressionStatement[16240-16286]:ExpressionStatement[15905-15951]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[16291-16302]:ExpressionStatement[15956-15967]"
    }, {
      "left" : "if (args[argindex].compareTo(\"-l\")==0)",
      "right" : "if (args[argindex].compareTo(\"-l\")==0)",
      "info" : "IfStatement[16316-17805]:IfStatement[15981-17470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16358-16507]:Block[16023-16172]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[16364-16375]:ExpressionStatement[16029-16040]"
    }, {
      "left" : "if (argindex>=args.length)",
      "right" : "if (argindex>=args.length)",
      "info" : "IfStatement[16380-16460]:IfStatement[16045-16125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16411-16460]:Block[16076-16125]"
    }, {
      "left" : "usageMessage();",
      "right" : "usageMessage();",
      "info" : "ExpressionStatement[16418-16433]:ExpressionStatement[16083-16098]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[16439-16454]:ExpressionStatement[16104-16119]"
    }, {
      "left" : "label=args[argindex];",
      "right" : "label=args[argindex];",
      "info" : "ExpressionStatement[16465-16486]:ExpressionStatement[16130-16151]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[16491-16502]:ExpressionStatement[16156-16167]"
    }, {
      "left" : "if (args[argindex].compareTo(\"-P\")==0)",
      "right" : "if (args[argindex].compareTo(\"-P\")==0)",
      "info" : "IfStatement[16516-17805]:IfStatement[16181-17470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16558-17230]:Block[16223-16895]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[16564-16575]:ExpressionStatement[16229-16240]"
    }, {
      "left" : "if (argindex>=args.length)",
      "right" : "if (argindex>=args.length)",
      "info" : "IfStatement[16580-16660]:IfStatement[16245-16325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16611-16660]:Block[16276-16325]"
    }, {
      "left" : "usageMessage();",
      "right" : "usageMessage();",
      "info" : "ExpressionStatement[16618-16633]:ExpressionStatement[16283-16298]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[16639-16654]:ExpressionStatement[16304-16319]"
    }, {
      "left" : "String propfile=args[argindex];",
      "right" : "String propfile=args[argindex];",
      "info" : "VariableDeclarationStatement[16665-16696]:VariableDeclarationStatement[16330-16361]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[16701-16712]:ExpressionStatement[16366-16377]"
    }, {
      "left" : "Properties myfileprops=new Properties();",
      "right" : "Properties myfileprops=new Properties();",
      "info" : "VariableDeclarationStatement[16718-16758]:VariableDeclarationStatement[16383-16423]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[16763-16932]:TryStatement[16428-16597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16771-16832]:Block[16436-16497]"
    }, {
      "left" : "myfileprops.load(new FileInputStream(propfile));",
      "right" : "myfileprops.load(new FileInputStream(propfile));",
      "info" : "ExpressionStatement[16778-16826]:ExpressionStatement[16443-16491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16863-16932]:Block[16528-16597]"
    }, {
      "left" : "System.out.println(e.getMessage());",
      "right" : "System.out.println(e.getMessage());",
      "info" : "ExpressionStatement[16870-16905]:ExpressionStatement[16535-16570]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[16911-16926]:ExpressionStatement[16576-16591]"
    }, {
      "left" : "for (Enumeration e=myfileprops.propertyNames(); e.hasMoreElements())",
      "right" : "for (Enumeration e=myfileprops.propertyNames(); e.hasMoreElements())",
      "info" : "ForStatement[17024-17224]:ForStatement[16689-16889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17099-17224]:Block[16764-16889]"
    }, {
      "left" : "String prop=(String)e.nextElement();",
      "right" : "String prop=(String)e.nextElement();",
      "info" : "VariableDeclarationStatement[17108-17144]:VariableDeclarationStatement[16773-16809]"
    }, {
      "left" : "fileprops.setProperty(prop,myfileprops.getProperty(prop));",
      "right" : "fileprops.setProperty(prop,myfileprops.getProperty(prop));",
      "info" : "ExpressionStatement[17160-17218]:ExpressionStatement[16825-16883]"
    }, {
      "left" : "if (args[argindex].compareTo(\"-p\")==0)",
      "right" : "if (args[argindex].compareTo(\"-p\")==0)",
      "info" : "IfStatement[17239-17805]:IfStatement[16904-17470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17281-17689]:Block[16946-17354]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[17287-17298]:ExpressionStatement[16952-16963]"
    }, {
      "left" : "if (argindex>=args.length)",
      "right" : "if (argindex>=args.length)",
      "info" : "IfStatement[17303-17383]:IfStatement[16968-17048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17334-17383]:Block[16999-17048]"
    }, {
      "left" : "usageMessage();",
      "right" : "usageMessage();",
      "info" : "ExpressionStatement[17341-17356]:ExpressionStatement[17006-17021]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[17362-17377]:ExpressionStatement[17027-17042]"
    }, {
      "left" : "int eq=args[argindex].indexOf('=');",
      "right" : "int eq=args[argindex].indexOf('=');",
      "info" : "VariableDeclarationStatement[17388-17423]:VariableDeclarationStatement[17053-17088]"
    }, {
      "left" : "if (eq<0)",
      "right" : "if (eq<0)",
      "info" : "IfStatement[17428-17491]:IfStatement[17093-17156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17442-17491]:Block[17107-17156]"
    }, {
      "left" : "usageMessage();",
      "right" : "usageMessage();",
      "info" : "ExpressionStatement[17449-17464]:ExpressionStatement[17114-17129]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[17470-17485]:ExpressionStatement[17135-17150]"
    }, {
      "left" : "String name=args[argindex].substring(0,eq);",
      "right" : "String name=args[argindex].substring(0,eq);",
      "info" : "VariableDeclarationStatement[17497-17540]:VariableDeclarationStatement[17162-17205]"
    }, {
      "left" : "String value=args[argindex].substring(eq+1);",
      "right" : "String value=args[argindex].substring(eq+1);",
      "info" : "VariableDeclarationStatement[17545-17589]:VariableDeclarationStatement[17210-17254]"
    }, {
      "left" : "props.put(name,value);",
      "right" : "props.put(name,value);",
      "info" : "ExpressionStatement[17594-17616]:ExpressionStatement[17259-17281]"
    }, {
      "left" : "argindex++;",
      "right" : "argindex++;",
      "info" : "ExpressionStatement[17673-17684]:ExpressionStatement[17338-17349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17701-17805]:Block[17366-17470]"
    }, {
      "left" : "System.out.println(\"Unknown option \"+args[argindex]);",
      "right" : "System.out.println(\"Unknown option \"+args[argindex]);",
      "info" : "ExpressionStatement[17707-17760]:ExpressionStatement[17372-17425]"
    }, {
      "left" : "usageMessage();",
      "right" : "usageMessage();",
      "info" : "ExpressionStatement[17765-17780]:ExpressionStatement[17430-17445]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[17785-17800]:ExpressionStatement[17450-17465]"
    }, {
      "left" : "if (argindex>=args.length)",
      "right" : "if (argindex>=args.length)",
      "info" : "IfStatement[17810-17857]:IfStatement[17475-17522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17840-17857]:Block[17505-17522]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[17846-17852]:BreakStatement[17511-17517]"
    }, {
      "left" : "if (argindex!=args.length)",
      "right" : "if (argindex!=args.length)",
      "info" : "IfStatement[17865-17937]:IfStatement[17530-17602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17894-17937]:Block[17559-17602]"
    }, {
      "left" : "usageMessage();",
      "right" : "usageMessage();",
      "info" : "ExpressionStatement[17899-17914]:ExpressionStatement[17564-17579]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[17918-17933]:ExpressionStatement[17583-17598]"
    }, {
      "left" : "for (Enumeration e=props.propertyNames(); e.hasMoreElements())",
      "right" : "for (Enumeration e=props.propertyNames(); e.hasMoreElements())",
      "info" : "ForStatement[18149-18327]:ForStatement[17814-17992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18216-18327]:Block[17881-17992]"
    }, {
      "left" : "String prop=(String)e.nextElement();",
      "right" : "String prop=(String)e.nextElement();",
      "info" : "VariableDeclarationStatement[18223-18259]:VariableDeclarationStatement[17888-17924]"
    }, {
      "left" : "fileprops.setProperty(prop,props.getProperty(prop));",
      "right" : "fileprops.setProperty(prop,props.getProperty(prop));",
      "info" : "ExpressionStatement[18271-18323]:ExpressionStatement[17936-17988]"
    }, {
      "left" : "props=fileprops;",
      "right" : "props=fileprops;",
      "info" : "ExpressionStatement[18331-18347]:ExpressionStatement[17996-18012]"
    }, {
      "left" : "if (!checkRequiredProperties(props))",
      "right" : "if (!checkRequiredProperties(props))",
      "info" : "IfStatement[18351-18414]:IfStatement[18016-18079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18390-18414]:Block[18055-18079]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[18395-18410]:ExpressionStatement[18060-18075]"
    }, {
      "left" : "long maxExecutionTime = Integer.parseInt(props.getProperty(MAX_EXECUTION_TIME, \"0\"));",
      "right" : "long maxExecutionTime = Integer.parseInt(props.getProperty(MAX_EXECUTION_TIME, \"0\"));",
      "info" : "VariableDeclarationStatement[18420-18505]:VariableDeclarationStatement[18085-18170]"
    }, {
      "left" : "threadcount=Integer.parseInt(props.getProperty(THREAD_COUNT_PROPERTY,\"1\"));",
      "right" : "threadcount=Integer.parseInt(props.getProperty(THREAD_COUNT_PROPERTY,\"1\"));",
      "info" : "ExpressionStatement[18550-18625]:ExpressionStatement[18215-18290]"
    }, {
      "left" : "dbname=props.getProperty(DB_PROPERTY,\"com.yahoo.ycsb.BasicDB\");",
      "right" : "dbname=props.getProperty(DB_PROPERTY,\"com.yahoo.ycsb.BasicDB\");",
      "info" : "ExpressionStatement[18628-18691]:ExpressionStatement[18293-18356]"
    }, {
      "left" : "target=Integer.parseInt(props.getProperty(TARGET_PROPERTY,\"0\"));",
      "right" : "target=Integer.parseInt(props.getProperty(TARGET_PROPERTY,\"0\"));",
      "info" : "ExpressionStatement[18694-18758]:ExpressionStatement[18359-18423]"
    }, {
      "left" : "double targetperthreadperms=-1;",
      "right" : "double targetperthreadperms=-1;",
      "info" : "VariableDeclarationStatement[18798-18829]:VariableDeclarationStatement[18463-18494]"
    }, {
      "left" : "if (target>0)",
      "right" : "if (target>0)",
      "info" : "IfStatement[18832-18967]:IfStatement[18497-18632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18848-18967]:Block[18513-18632]"
    }, {
      "left" : "double targetperthread=((double)target)/((double)threadcount);",
      "right" : "double targetperthread=((double)target)/((double)threadcount);",
      "info" : "VariableDeclarationStatement[18853-18915]:VariableDeclarationStatement[18518-18580]"
    }, {
      "left" : "targetperthreadperms=targetperthread/1000.0;",
      "right" : "targetperthreadperms=targetperthread/1000.0;",
      "info" : "ExpressionStatement[18919-18963]:ExpressionStatement[18584-18628]"
    }, {
      "left" : "System.out.println(\"YCSB Client 0.1\");",
      "right" : "System.out.println(\"YCSB Client 0.1\");",
      "info" : "ExpressionStatement[18973-19011]:ExpressionStatement[18638-18676]"
    }, {
      "left" : "System.out.print(\"Command line:\");",
      "right" : "System.out.print(\"Command line:\");",
      "info" : "ExpressionStatement[19014-19048]:ExpressionStatement[18679-18713]"
    }, {
      "left" : "for (int i=0; i<args.length; i++)",
      "right" : "for (int i=0; i<args.length; i++)",
      "info" : "ForStatement[19051-19126]:ForStatement[18716-18791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19087-19126]:Block[18752-18791]"
    }, {
      "left" : "System.out.print(\" \"+args[i]);",
      "right" : "System.out.print(\" \"+args[i]);",
      "info" : "ExpressionStatement[19092-19122]:ExpressionStatement[18757-18787]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[19129-19150]:ExpressionStatement[18794-18815]"
    }, {
      "left" : "System.err.println(\"Loading workload...\");",
      "right" : "System.err.println(\"Loading workload...\");",
      "info" : "ExpressionStatement[19153-19195]:ExpressionStatement[18818-18860]"
    }, {
      "left" : "Thread warningthread=new Thread() \n\t\t{\n\t\t\tpublic void run()\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tsleep(2000);\n\t\t\t\t}\n\t\t\t\tcatch (InterruptedException e)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tSystem.err.println(\" (might take a few minutes for large data sets)\");\n\t\t\t}\n\t\t};",
      "right" : "Thread warningthread=new Thread() \n\t\t{\n\t\t\tpublic void run()\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tsleep(2000);\n\t\t\t\t}\n\t\t\t\tcatch (InterruptedException e)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tSystem.err.println(\" (might take a few minutes for large data sets)\");\n\t\t\t}\n\t\t};",
      "info" : "VariableDeclarationStatement[19426-19673]:VariableDeclarationStatement[19091-19338]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19468-19474]:Modifier[19133-19139]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19475-19479]:PrimitiveType[19140-19144]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[19480-19483]:SimpleName[19145-19148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19489-19668]:Block[19154-19333]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[19495-19588]:TryStatement[19160-19253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19503-19528]:Block[19168-19193]"
    }, {
      "left" : "sleep(2000);",
      "right" : "sleep(2000);",
      "info" : "ExpressionStatement[19510-19522]:ExpressionStatement[19175-19187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19568-19588]:Block[19233-19253]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[19575-19582]:ReturnStatement[19240-19247]"
    }, {
      "left" : "System.err.println(\" (might take a few minutes for large data sets)\");",
      "right" : "System.err.println(\" (might take a few minutes for large data sets)\");",
      "info" : "ExpressionStatement[19593-19663]:ExpressionStatement[19258-19328]"
    }, {
      "left" : "warningthread.start();",
      "right" : "warningthread.start();",
      "info" : "ExpressionStatement[19677-19699]:ExpressionStatement[19342-19364]"
    }, {
      "left" : "Measurements.setProperties(props);",
      "right" : "Measurements.setProperties(props);",
      "info" : "ExpressionStatement[19729-19763]:ExpressionStatement[19394-19428]"
    }, {
      "left" : "ClassLoader classLoader = Client.class.getClassLoader();",
      "right" : "ClassLoader classLoader = Client.class.getClassLoader();",
      "info" : "VariableDeclarationStatement[19791-19847]:VariableDeclarationStatement[19456-19512]"
    }, {
      "left" : "Workload workload=null;",
      "right" : "Workload workload=null;",
      "info" : "VariableDeclarationStatement[19851-19874]:VariableDeclarationStatement[19516-19539]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[19878-20138]:TryStatement[19543-19803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19885-20028]:Block[19550-19693]"
    }, {
      "left" : "Class workloadclass = classLoader.loadClass(props.getProperty(WORKLOAD_PROPERTY));",
      "right" : "Class workloadclass = classLoader.loadClass(props.getProperty(WORKLOAD_PROPERTY));",
      "info" : "VariableDeclarationStatement[19890-19972]:VariableDeclarationStatement[19555-19637]"
    }, {
      "left" : "workload=(Workload)workloadclass.newInstance();",
      "right" : "workload=(Workload)workloadclass.newInstance();",
      "info" : "ExpressionStatement[19977-20024]:ExpressionStatement[19642-19689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20054-20138]:Block[19719-19803]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[20061-20081]:ExpressionStatement[19726-19746]"
    }, {
      "left" : "e.printStackTrace(System.out);",
      "right" : "e.printStackTrace(System.out);",
      "info" : "ExpressionStatement[20085-20115]:ExpressionStatement[19750-19780]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[20119-20134]:ExpressionStatement[19784-19799]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[20142-20293]:TryStatement[19807-19958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20148-20178]:Block[19813-19843]"
    }, {
      "left" : "workload.init(props);",
      "right" : "workload.init(props);",
      "info" : "ExpressionStatement[20153-20174]:ExpressionStatement[19818-19839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20211-20293]:Block[19876-19958]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[20216-20236]:ExpressionStatement[19881-19901]"
    }, {
      "left" : "e.printStackTrace(System.out);",
      "right" : "e.printStackTrace(System.out);",
      "info" : "ExpressionStatement[20240-20270]:ExpressionStatement[19905-19935]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[20274-20289]:ExpressionStatement[19939-19954]"
    }, {
      "left" : "warningthread.interrupt();",
      "right" : "warningthread.interrupt();",
      "info" : "ExpressionStatement[20299-20325]:ExpressionStatement[19964-19990]"
    }, {
      "left" : "System.err.println(\"Starting test.\");",
      "right" : "System.err.println(\"Starting test.\");",
      "info" : "ExpressionStatement[20351-20388]:ExpressionStatement[20016-20053]"
    }, {
      "left" : "int opcount;",
      "right" : "int opcount;",
      "info" : "VariableDeclarationStatement[20392-20404]:VariableDeclarationStatement[20057-20069]"
    }, {
      "left" : "if (dotransactions)",
      "right" : "if (dotransactions)",
      "info" : "IfStatement[20407-20756]:IfStatement[20072-20439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20429-20512]:Block[20094-20177]"
    }, {
      "left" : "opcount=Integer.parseInt(props.getProperty(OPERATION_COUNT_PROPERTY,\"0\"));",
      "right" : "opcount=Integer.parseInt(props.getProperty(OPERATION_COUNT_PROPERTY,\"0\"));",
      "info" : "ExpressionStatement[20434-20508]:ExpressionStatement[20099-20173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20522-20756]:Block[20187-20439]"
    }, {
      "left" : "if (props.containsKey(INSERT_COUNT_PROPERTY))",
      "right" : "if (props.containsKey(INSERT_COUNT_PROPERTY))",
      "info" : "IfStatement[20527-20752]:IfStatement[20192-20435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20576-20658]:Block[20241-20323]"
    }, {
      "left" : "opcount=Integer.parseInt(props.getProperty(INSERT_COUNT_PROPERTY,\"0\"));",
      "right" : "opcount=Integer.parseInt(props.getProperty(INSERT_COUNT_PROPERTY,\"0\"));",
      "info" : "ExpressionStatement[20582-20653]:ExpressionStatement[20247-20318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20670-20752]:Block[20335-20435]"
    }, {
      "left" : "opcount=Integer.parseInt(props.getProperty(RECORD_COUNT_PROPERTY,\"0\"));",
      "right" : "opcount=Integer.parseInt(props.getProperty(RECORD_COUNT_PROPERTY, DEFAULT_RECORD_COUNT));",
      "info" : "ExpressionStatement[20676-20747]:ExpressionStatement[20341-20430]"
    }, {
      "left" : "\"0\"",
      "right" : "\"0\"",
      "info" : "StringLiteral[20741-20744]:StringLiteral[8975-8978]"
    }, {
      "left" : "Vector<Thread> threads=new Vector<Thread>();",
      "right" : "Vector<Thread> threads=new Vector<Thread>();",
      "info" : "VariableDeclarationStatement[20760-20804]:VariableDeclarationStatement[20443-20487]"
    }, {
      "left" : "for (int threadid=0; threadid<threadcount; threadid++)",
      "right" : "for (int threadid=0; threadid<threadcount; threadid++)",
      "info" : "ForStatement[20808-21211]:ForStatement[20491-20894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20865-21211]:Block[20548-20894]"
    }, {
      "left" : "DB db=null;",
      "right" : "DB db=null;",
      "info" : "VariableDeclarationStatement[20870-20881]:VariableDeclarationStatement[20553-20564]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[20885-21044]:TryStatement[20568-20727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20892-20936]:Block[20575-20619]"
    }, {
      "left" : "db=DBFactory.newDB(dbname,props);",
      "right" : "db=DBFactory.newDB(dbname,props);",
      "info" : "ExpressionStatement[20898-20931]:ExpressionStatement[20581-20614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20972-21044]:Block[20655-20727]"
    }, {
      "left" : "System.out.println(\"Unknown DB \"+dbname);",
      "right" : "System.out.println(\"Unknown DB \"+dbname);",
      "info" : "ExpressionStatement[20978-21019]:ExpressionStatement[20661-20702]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[21024-21039]:ExpressionStatement[20707-20722]"
    }, {
      "left" : "Thread t=new ClientThread(db,dotransactions,workload,threadid,threadcount,props,opcount/threadcount,targetperthreadperms);",
      "right" : "Thread t=new ClientThread(db,dotransactions,workload,threadid,threadcount,props,opcount/threadcount,targetperthreadperms);",
      "info" : "VariableDeclarationStatement[21049-21171]:VariableDeclarationStatement[20732-20854]"
    }, {
      "left" : "threads.add(t);",
      "right" : "threads.add(t);",
      "info" : "ExpressionStatement[21176-21191]:ExpressionStatement[20859-20874]"
    }, {
      "left" : "StatusThread statusthread=null;",
      "right" : "StatusThread statusthread=null;",
      "info" : "VariableDeclarationStatement[21215-21246]:VariableDeclarationStatement[20898-20929]"
    }, {
      "left" : "if (status)",
      "right" : "if (status)",
      "info" : "IfStatement[21250-21523]:IfStatement[20933-21206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21264-21523]:Block[20947-21206]"
    }, {
      "left" : "boolean standardstatus=false;",
      "right" : "boolean standardstatus=false;",
      "info" : "VariableDeclarationStatement[21269-21298]:VariableDeclarationStatement[20952-20981]"
    }, {
      "left" : "if (props.getProperty(Measurements.MEASUREMENT_TYPE_PROPERTY,\"\").compareTo(\"timeseries\")==0)",
      "right" : "if (props.getProperty(Measurements.MEASUREMENT_TYPE_PROPERTY,\"\").compareTo(\"timeseries\")==0)",
      "info" : "IfStatement[21302-21429]:IfStatement[20985-21112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21398-21429]:Block[21081-21112]"
    }, {
      "left" : "standardstatus=true;",
      "right" : "standardstatus=true;",
      "info" : "ExpressionStatement[21404-21424]:ExpressionStatement[21087-21107]"
    }, {
      "left" : "statusthread=new StatusThread(threads,label,standardstatus);",
      "right" : "statusthread=new StatusThread(threads,label,standardstatus);",
      "info" : "ExpressionStatement[21434-21494]:ExpressionStatement[21117-21177]"
    }, {
      "left" : "statusthread.start();",
      "right" : "statusthread.start();",
      "info" : "ExpressionStatement[21498-21519]:ExpressionStatement[21181-21202]"
    }, {
      "left" : "long st=System.currentTimeMillis();",
      "right" : "long st=System.currentTimeMillis();",
      "info" : "VariableDeclarationStatement[21527-21562]:VariableDeclarationStatement[21210-21245]"
    }, {
      "left" : "for (Thread t : threads)",
      "right" : "for (Thread t : threads)",
      "info" : "EnhancedForStatement[21566-21612]:EnhancedForStatement[21249-21295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21593-21612]:Block[21276-21295]"
    }, {
      "left" : "t.start();",
      "right" : "t.start();",
      "info" : "ExpressionStatement[21598-21608]:ExpressionStatement[21281-21291]"
    }, {
      "left" : "Thread terminator = null;",
      "right" : "Thread terminator = null;",
      "info" : "VariableDeclarationStatement[21620-21645]:VariableDeclarationStatement[21303-21328]"
    }, {
      "left" : "if (maxExecutionTime > 0)",
      "right" : "if (maxExecutionTime > 0)",
      "info" : "IfStatement[21655-21792]:IfStatement[21338-21475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21681-21792]:Block[21364-21475]"
    }, {
      "left" : "terminator = new TerminatorThread(maxExecutionTime, threads, workload);",
      "right" : "terminator = new TerminatorThread(maxExecutionTime, threads, workload);",
      "info" : "ExpressionStatement[21689-21760]:ExpressionStatement[21372-21443]"
    }, {
      "left" : "terminator.start();",
      "right" : "terminator.start();",
      "info" : "ExpressionStatement[21767-21786]:ExpressionStatement[21450-21469]"
    }, {
      "left" : "int opsDone = 0;",
      "right" : "int opsDone = 0;",
      "info" : "VariableDeclarationStatement[21802-21818]:VariableDeclarationStatement[21485-21501]"
    }, {
      "left" : "for (Thread t : threads)",
      "right" : "for (Thread t : threads)",
      "info" : "EnhancedForStatement[21822-21976]:EnhancedForStatement[21505-21659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21849-21976]:Block[21532-21659]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[21854-21972]:TryStatement[21537-21655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21861-21928]:Block[21544-21611]"
    }, {
      "left" : "t.join();",
      "right" : "t.join();",
      "info" : "ExpressionStatement[21867-21876]:ExpressionStatement[21550-21559]"
    }, {
      "left" : "opsDone += ((ClientThread)t).getOpsDone();",
      "right" : "opsDone += ((ClientThread)t).getOpsDone();",
      "info" : "ExpressionStatement[21881-21923]:ExpressionStatement[21564-21606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21966-21972]:Block[21649-21655]"
    }, {
      "left" : "long en=System.currentTimeMillis();",
      "right" : "long en=System.currentTimeMillis();",
      "info" : "VariableDeclarationStatement[21980-22015]:VariableDeclarationStatement[21663-21698]"
    }, {
      "left" : "if (terminator != null && !terminator.isInterrupted())",
      "right" : "if (terminator != null && !terminator.isInterrupted())",
      "info" : "IfStatement[22021-22113]:IfStatement[21704-21796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22076-22113]:Block[21759-21796]"
    }, {
      "left" : "terminator.interrupt();",
      "right" : "terminator.interrupt();",
      "info" : "ExpressionStatement[22084-22107]:ExpressionStatement[21767-21790]"
    }, {
      "left" : "if (status)",
      "right" : "if (status)",
      "info" : "IfStatement[22117-22165]:IfStatement[21800-21848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22131-22165]:Block[21814-21848]"
    }, {
      "left" : "statusthread.interrupt();",
      "right" : "statusthread.interrupt();",
      "info" : "ExpressionStatement[22136-22161]:ExpressionStatement[21819-21844]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[22169-22318]:TryStatement[21852-22001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22175-22203]:Block[21858-21886]"
    }, {
      "left" : "workload.cleanup();",
      "right" : "workload.cleanup();",
      "info" : "ExpressionStatement[22180-22199]:ExpressionStatement[21863-21882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22236-22318]:Block[21919-22001]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[22241-22261]:ExpressionStatement[21924-21944]"
    }, {
      "left" : "e.printStackTrace(System.out);",
      "right" : "e.printStackTrace(System.out);",
      "info" : "ExpressionStatement[22265-22295]:ExpressionStatement[21948-21978]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[22299-22314]:ExpressionStatement[21982-21997]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[22322-22537]:TryStatement[22005-22220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22328-22381]:Block[22011-22064]"
    }, {
      "left" : "exportMeasurements(props, opsDone, en - st);",
      "right" : "exportMeasurements(props, opsDone, en - st);",
      "info" : "ExpressionStatement[22333-22377]:ExpressionStatement[22016-22060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22406-22537]:Block[22089-22220]"
    }, {
      "left" : "System.err.println(\"Could not export measurements, error: \" + e.getMessage());",
      "right" : "System.err.println(\"Could not export measurements, error: \" + e.getMessage());",
      "info" : "ExpressionStatement[22411-22489]:ExpressionStatement[22094-22172]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[22493-22513]:ExpressionStatement[22176-22196]"
    }, {
      "left" : "System.exit(-1);",
      "right" : "System.exit(-1);",
      "info" : "ExpressionStatement[22517-22533]:ExpressionStatement[22200-22216]"
    }, {
      "left" : "System.exit(0);",
      "right" : "System.exit(0);",
      "info" : "ExpressionStatement[22541-22556]:ExpressionStatement[22224-22239]"
    } ]
  },
  "interFileMappings" : { }
}