{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1;",
      "right" : "private static final long serialVersionUID = 1;",
      "info" : "FieldDeclaration[697-744]:FieldDeclaration[697-744]"
    }, {
      "left" : "protected final Class<?> _class;",
      "right" : "protected final Class<?> _class;",
      "info" : "FieldDeclaration[750-1086]:FieldDeclaration[750-1086]"
    }, {
      "left" : "protected final int _hash;",
      "right" : "protected final int _hash;",
      "info" : "FieldDeclaration[1092-1118]:FieldDeclaration[1092-1118]"
    }, {
      "left" : "protected final Object _valueHandler;",
      "right" : "protected final Object _valueHandler;",
      "info" : "FieldDeclaration[1124-1479]:FieldDeclaration[1124-1479]"
    }, {
      "left" : "protected final Object _typeHandler;",
      "right" : "protected final Object _typeHandler;",
      "info" : "FieldDeclaration[1485-1805]:FieldDeclaration[1485-1805]"
    }, {
      "left" : "protected final boolean _asStatic;",
      "right" : "protected final boolean _asStatic;",
      "info" : "FieldDeclaration[1811-2024]:FieldDeclaration[1811-2024]"
    }, {
      "left" : "protected JavaType(Class<?> raw, int additionalHash,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "right" : "protected JavaType(Class<?> raw, int additionalHash,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "info" : "MethodDeclaration[2192-2697]:MethodDeclaration[2192-2697]"
    }, {
      "left" : "public abstract JavaType withTypeHandler(Object h);",
      "right" : "public abstract JavaType withTypeHandler(Object h);",
      "info" : "MethodDeclaration[2707-2982]:MethodDeclaration[2707-2982]"
    }, {
      "left" : "public abstract JavaType withContentTypeHandler(Object h);",
      "right" : "public abstract JavaType withContentTypeHandler(Object h);",
      "info" : "MethodDeclaration[2988-3291]:MethodDeclaration[2988-3291]"
    }, {
      "left" : "public abstract JavaType withValueHandler(Object h);",
      "right" : "public abstract JavaType withValueHandler(Object h);",
      "info" : "MethodDeclaration[3297-3574]:MethodDeclaration[3297-3574]"
    }, {
      "left" : "public abstract JavaType withContentValueHandler(Object h);",
      "right" : "public abstract JavaType withContentValueHandler(Object h);",
      "info" : "MethodDeclaration[3580-3872]:MethodDeclaration[3580-3872]"
    }, {
      "left" : "public abstract JavaType withStaticTyping();",
      "right" : "public abstract JavaType withStaticTyping();",
      "info" : "MethodDeclaration[3878-4492]:MethodDeclaration[3878-4492]"
    }, {
      "left" : "public JavaType narrowBy(Class<?> subclass)",
      "right" : "public JavaType narrowBy(Class<?> subclass)",
      "info" : "MethodDeclaration[4694-5721]:MethodDeclaration[4694-5721]"
    }, {
      "left" : "public JavaType forcedNarrowBy(Class<?> subclass)",
      "right" : "public JavaType forcedNarrowBy(Class<?> subclass)",
      "info" : "MethodDeclaration[5727-6480]:MethodDeclaration[5727-6480]"
    }, {
      "left" : "public JavaType widenBy(Class<?> superclass)",
      "right" : "public JavaType widenBy(Class<?> superclass)",
      "info" : "MethodDeclaration[6486-7135]:MethodDeclaration[6486-7135]"
    }, {
      "left" : "protected abstract JavaType _narrow(Class<?> subclass);",
      "right" : "protected abstract JavaType _narrow(Class<?> subclass);",
      "info" : "MethodDeclaration[7141-7196]:MethodDeclaration[7141-7196]"
    }, {
      "left" : "protected JavaType _widen(Class<?> superclass)",
      "right" : "protected JavaType _widen(Class<?> superclass)",
      "info" : "MethodDeclaration[7202-7433]:MethodDeclaration[7202-7433]"
    }, {
      "left" : "public abstract JavaType narrowContentsBy(Class<?> contentClass);",
      "right" : "public abstract JavaType narrowContentsBy(Class<?> contentClass);",
      "info" : "MethodDeclaration[7439-7504]:MethodDeclaration[7439-7504]"
    }, {
      "left" : "public abstract JavaType widenContentsBy(Class<?> contentClass);",
      "right" : "public abstract JavaType widenContentsBy(Class<?> contentClass);",
      "info" : "MethodDeclaration[7510-7574]:MethodDeclaration[7510-7574]"
    }, {
      "left" : "public final Class<?> getRawClass()",
      "right" : "public final Class<?> getRawClass()",
      "info" : "MethodDeclaration[7770-7838]:MethodDeclaration[7770-7838]"
    }, {
      "left" : "public final boolean hasRawClass(Class<?> clz)",
      "right" : "public final boolean hasRawClass(Class<?> clz)",
      "info" : "MethodDeclaration[7844-8149]:MethodDeclaration[7844-8149]"
    }, {
      "left" : "public boolean isAbstract()",
      "right" : "public boolean isAbstract()",
      "info" : "MethodDeclaration[8155-8263]:MethodDeclaration[8155-8263]"
    }, {
      "left" : "public boolean isConcrete()",
      "right" : "public boolean isConcrete()",
      "info" : "MethodDeclaration[8269-8783]:MethodDeclaration[8269-8783]"
    }, {
      "left" : "public boolean isThrowable()",
      "right" : "public boolean isThrowable()",
      "info" : "MethodDeclaration[8789-8884]:MethodDeclaration[8789-8884]"
    }, {
      "left" : "public boolean isArrayType()",
      "right" : "public boolean isArrayType()",
      "info" : "MethodDeclaration[8890-8950]:MethodDeclaration[8890-8950]"
    }, {
      "left" : "public final boolean isEnumType()",
      "right" : "public final boolean isEnumType()",
      "info" : "MethodDeclaration[8956-9031]:MethodDeclaration[8956-9031]"
    }, {
      "left" : "public final boolean isInterface()",
      "right" : "public final boolean isInterface()",
      "info" : "MethodDeclaration[9037-9118]:MethodDeclaration[9037-9118]"
    }, {
      "left" : "public final boolean isPrimitive()",
      "right" : "public final boolean isPrimitive()",
      "info" : "MethodDeclaration[9124-9205]:MethodDeclaration[9124-9205]"
    }, {
      "left" : "public final boolean isFinal()",
      "right" : "public final boolean isFinal()",
      "info" : "MethodDeclaration[9211-9307]:MethodDeclaration[9211-9307]"
    }, {
      "left" : "public abstract boolean isContainerType();",
      "right" : "public abstract boolean isContainerType();",
      "info" : "MethodDeclaration[9313-9503]:MethodDeclaration[9313-9503]"
    }, {
      "left" : "public boolean isCollectionLikeType()",
      "right" : "public boolean isCollectionLikeType()",
      "info" : "MethodDeclaration[9509-9792]:MethodDeclaration[9509-9792]"
    }, {
      "left" : "public boolean isMapLikeType()",
      "right" : "public boolean isMapLikeType()",
      "info" : "MethodDeclaration[9798-10083]:MethodDeclaration[9798-10083]"
    }, {
      "left" : "public final boolean useStaticType()",
      "right" : "public final boolean useStaticType()",
      "info" : "MethodDeclaration[10309-10706]:MethodDeclaration[10388-10785]"
    }, {
      "left" : "public boolean hasGenericTypes()",
      "right" : "public boolean hasGenericTypes()",
      "info" : "MethodDeclaration[10911-10994]:MethodDeclaration[10990-11073]"
    }, {
      "left" : "public JavaType getKeyType()",
      "right" : "public JavaType getKeyType()",
      "info" : "MethodDeclaration[11000-11059]:MethodDeclaration[11079-11138]"
    }, {
      "left" : "public JavaType getContentType()",
      "right" : "public JavaType getContentType()",
      "info" : "MethodDeclaration[11065-11128]:MethodDeclaration[11144-11207]"
    }, {
      "left" : "public int containedTypeCount()",
      "right" : "public int containedTypeCount()",
      "info" : "MethodDeclaration[11134-11193]:MethodDeclaration[11213-11272]"
    }, {
      "left" : "public JavaType containedType(int index)",
      "right" : "public JavaType containedType(int index)",
      "info" : "MethodDeclaration[11199-11270]:MethodDeclaration[11278-11349]"
    }, {
      "left" : "public String containedTypeName(int index)",
      "right" : "public String containedTypeName(int index)",
      "info" : "MethodDeclaration[11283-11356]:MethodDeclaration[11362-11435]"
    }, {
      "left" : "public abstract Class<?> getParameterSource();",
      "right" : "public abstract Class<?> getParameterSource();",
      "info" : "MethodDeclaration[11362-11422]:MethodDeclaration[11441-11501]"
    }, {
      "left" : "public JavaType containedTypeOrUnknown(int index)",
      "right" : "public JavaType containedTypeOrUnknown(int index)",
      "info" : "MethodDeclaration[11662-12319]:MethodDeclaration[11741-12398]"
    }, {
      "left" : "public <T> T getValueHandler()",
      "right" : "public <T> T getValueHandler()",
      "info" : "MethodDeclaration[12516-12703]:MethodDeclaration[12595-12782]"
    }, {
      "left" : "public <T> T getTypeHandler()",
      "right" : "public <T> T getTypeHandler()",
      "info" : "MethodDeclaration[12709-12893]:MethodDeclaration[12788-12972]"
    }, {
      "left" : "public String getGenericSignature()",
      "right" : "public String getGenericSignature()",
      "info" : "MethodDeclaration[13132-13653]:MethodDeclaration[13211-13732]"
    }, {
      "left" : "public abstract StringBuilder getGenericSignature(StringBuilder sb);",
      "right" : "public abstract StringBuilder getGenericSignature(StringBuilder sb);",
      "info" : "MethodDeclaration[13659-13901]:MethodDeclaration[13738-13980]"
    }, {
      "left" : "public String getErasedSignature()",
      "right" : "public String getErasedSignature()",
      "info" : "MethodDeclaration[13911-14290]:MethodDeclaration[13990-14369]"
    }, {
      "left" : "public abstract StringBuilder getErasedSignature(StringBuilder sb);",
      "right" : "public abstract StringBuilder getErasedSignature(StringBuilder sb);",
      "info" : "MethodDeclaration[14296-14746]:MethodDeclaration[14375-14825]"
    }, {
      "left" : "protected void _assertSubclass(Class<?> subclass, Class<?> superClass)",
      "right" : "protected void _assertSubclass(Class<?> subclass, Class<?> superClass)",
      "info" : "MethodDeclaration[14922-15179]:MethodDeclaration[15001-15258]"
    }, {
      "left" : "public abstract String toString();",
      "right" : "public abstract String toString();",
      "info" : "MethodDeclaration[15397-15445]:MethodDeclaration[15476-15524]"
    }, {
      "left" : "public abstract boolean equals(Object o);",
      "right" : "public abstract boolean equals(Object o);",
      "info" : "MethodDeclaration[15451-15506]:MethodDeclaration[15530-15585]"
    }, {
      "left" : "public final int hashCode()",
      "right" : "public final int hashCode()",
      "info" : "MethodDeclaration[15512-15571]:MethodDeclaration[15591-15650]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2505-2697]:Block[2505-2697]"
    }, {
      "left" : "_class = raw;",
      "right" : "_class = raw;",
      "info" : "ExpressionStatement[2515-2528]:ExpressionStatement[2515-2528]"
    }, {
      "left" : "_hash = raw.getName().hashCode() + additionalHash;",
      "right" : "_hash = raw.getName().hashCode() + additionalHash;",
      "info" : "ExpressionStatement[2537-2587]:ExpressionStatement[2537-2587]"
    }, {
      "left" : "_valueHandler = valueHandler;",
      "right" : "_valueHandler = valueHandler;",
      "info" : "ExpressionStatement[2596-2625]:ExpressionStatement[2596-2625]"
    }, {
      "left" : "_typeHandler = typeHandler;",
      "right" : "_typeHandler = typeHandler;",
      "info" : "ExpressionStatement[2634-2661]:ExpressionStatement[2634-2661]"
    }, {
      "left" : "_asStatic = asStatic;",
      "right" : "_asStatic = asStatic;",
      "info" : "ExpressionStatement[2670-2691]:ExpressionStatement[2670-2691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5096-5721]:Block[5096-5721]"
    }, {
      "left" : "if (subclass == _class)",
      "right" : "if (subclass == _class)",
      "info" : "IfStatement[5169-5209]:IfStatement[5169-5209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5193-5209]:Block[5193-5209]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5195-5207]:ReturnStatement[5195-5207]"
    }, {
      "left" : "_assertSubclass(subclass, _class);",
      "right" : "_assertSubclass(subclass, _class);",
      "info" : "ExpressionStatement[5261-5295]:ExpressionStatement[5261-5295]"
    }, {
      "left" : "JavaType result = _narrow(subclass);",
      "right" : "JavaType result = _narrow(subclass);",
      "info" : "VariableDeclarationStatement[5304-5340]:VariableDeclarationStatement[5304-5340]"
    }, {
      "left" : "if (_valueHandler != result.<Object>getValueHandler())",
      "right" : "if (_valueHandler != result.<Object>getValueHandler())",
      "info" : "IfStatement[5433-5560]:IfStatement[5433-5560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5488-5560]:Block[5488-5560]"
    }, {
      "left" : "result = result.withValueHandler(_valueHandler);",
      "right" : "result = result.withValueHandler(_valueHandler);",
      "info" : "ExpressionStatement[5502-5550]:ExpressionStatement[5502-5550]"
    }, {
      "left" : "if (_typeHandler != result.<Object>getTypeHandler())",
      "right" : "if (_typeHandler != result.<Object>getTypeHandler())",
      "info" : "IfStatement[5569-5692]:IfStatement[5569-5692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5622-5692]:Block[5622-5692]"
    }, {
      "left" : "result = result.withTypeHandler(_typeHandler);",
      "right" : "result = result.withTypeHandler(_typeHandler);",
      "info" : "ExpressionStatement[5636-5682]:ExpressionStatement[5636-5682]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[5701-5715]:ReturnStatement[5701-5715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5947-6480]:Block[5947-6480]"
    }, {
      "left" : "if (subclass == _class)",
      "right" : "if (subclass == _class)",
      "info" : "IfStatement[5957-6055]:IfStatement[5957-6055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5981-6055]:Block[5981-6055]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6033-6045]:ReturnStatement[6033-6045]"
    }, {
      "left" : "JavaType result = _narrow(subclass);",
      "right" : "JavaType result = _narrow(subclass);",
      "info" : "VariableDeclarationStatement[6064-6100]:VariableDeclarationStatement[6064-6100]"
    }, {
      "left" : "if (_valueHandler != result.<Object>getValueHandler())",
      "right" : "if (_valueHandler != result.<Object>getValueHandler())",
      "info" : "IfStatement[6192-6319]:IfStatement[6192-6319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6247-6319]:Block[6247-6319]"
    }, {
      "left" : "result = result.withValueHandler(_valueHandler);",
      "right" : "result = result.withValueHandler(_valueHandler);",
      "info" : "ExpressionStatement[6261-6309]:ExpressionStatement[6261-6309]"
    }, {
      "left" : "if (_typeHandler != result.<Object>getTypeHandler())",
      "right" : "if (_typeHandler != result.<Object>getTypeHandler())",
      "info" : "IfStatement[6328-6451]:IfStatement[6328-6451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6381-6451]:Block[6381-6451]"
    }, {
      "left" : "result = result.withTypeHandler(_typeHandler);",
      "right" : "result = result.withTypeHandler(_typeHandler);",
      "info" : "ExpressionStatement[6395-6441]:ExpressionStatement[6395-6441]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[6460-6474]:ReturnStatement[6460-6474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6891-7135]:Block[6891-7135]"
    }, {
      "left" : "if (superclass == _class)",
      "right" : "if (superclass == _class)",
      "info" : "IfStatement[6964-7006]:IfStatement[6964-7006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6990-7006]:Block[6990-7006]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6992-7004]:ReturnStatement[6992-7004]"
    }, {
      "left" : "_assertSubclass(_class, superclass);",
      "right" : "_assertSubclass(_class, superclass);",
      "info" : "ExpressionStatement[7058-7094]:ExpressionStatement[7058-7094]"
    }, {
      "left" : "return _widen(superclass);",
      "right" : "return _widen(superclass);",
      "info" : "ReturnStatement[7103-7129]:ReturnStatement[7103-7129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7402-7433]:Block[7402-7433]"
    }, {
      "left" : "return _narrow(superclass);",
      "right" : "return _narrow(superclass);",
      "info" : "ReturnStatement[7404-7431]:ReturnStatement[7404-7431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7820-7838]:Block[7820-7838]"
    }, {
      "left" : "return _class;",
      "right" : "return _class;",
      "info" : "ReturnStatement[7822-7836]:ReturnStatement[7822-7836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8124-8149]:Block[8124-8149]"
    }, {
      "left" : "return _class == clz;",
      "right" : "return _class == clz;",
      "info" : "ReturnStatement[8126-8147]:ReturnStatement[8126-8147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8197-8263]:Block[8197-8263]"
    }, {
      "left" : "return Modifier.isAbstract(_class.getModifiers());",
      "right" : "return Modifier.isAbstract(_class.getModifiers());",
      "info" : "ReturnStatement[8207-8257]:ReturnStatement[8207-8257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8478-8783]:Block[8478-8783]"
    }, {
      "left" : "int mod = _class.getModifiers();",
      "right" : "int mod = _class.getModifiers();",
      "info" : "VariableDeclarationStatement[8488-8520]:VariableDeclarationStatement[8488-8520]"
    }, {
      "left" : "if ((mod & (Modifier.INTERFACE | Modifier.ABSTRACT)) == 0)",
      "right" : "if ((mod & (Modifier.INTERFACE | Modifier.ABSTRACT)) == 0)",
      "info" : "IfStatement[8529-8624]:IfStatement[8529-8624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8588-8624]:Block[8588-8624]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8602-8614]:ReturnStatement[8602-8614]"
    }, {
      "left" : "return _class.isPrimitive();",
      "right" : "return _class.isPrimitive();",
      "info" : "ReturnStatement[8749-8777]:ReturnStatement[8749-8777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8832-8884]:Block[8832-8884]"
    }, {
      "left" : "return Throwable.class.isAssignableFrom(_class);",
      "right" : "return Throwable.class.isAssignableFrom(_class);",
      "info" : "ReturnStatement[8834-8882]:ReturnStatement[8834-8882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8933-8950]:Block[8933-8950]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8935-8948]:ReturnStatement[8935-8948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9004-9031]:Block[9004-9031]"
    }, {
      "left" : "return _class.isEnum();",
      "right" : "return _class.isEnum();",
      "info" : "ReturnStatement[9006-9029]:ReturnStatement[9006-9029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9086-9118]:Block[9086-9118]"
    }, {
      "left" : "return _class.isInterface();",
      "right" : "return _class.isInterface();",
      "info" : "ReturnStatement[9088-9116]:ReturnStatement[9088-9116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9173-9205]:Block[9173-9205]"
    }, {
      "left" : "return _class.isPrimitive();",
      "right" : "return _class.isPrimitive();",
      "info" : "ReturnStatement[9175-9203]:ReturnStatement[9175-9203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9256-9307]:Block[9256-9307]"
    }, {
      "left" : "return Modifier.isFinal(_class.getModifiers());",
      "right" : "return Modifier.isFinal(_class.getModifiers());",
      "info" : "ReturnStatement[9258-9305]:ReturnStatement[9258-9305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9775-9792]:Block[9775-9792]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9777-9790]:ReturnStatement[9777-9790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10066-10083]:Block[10066-10083]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10068-10081]:ReturnStatement[10068-10081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10685-10706]:Block[10764-10785]"
    }, {
      "left" : "return _asStatic;",
      "right" : "return _asStatic;",
      "info" : "ReturnStatement[10687-10704]:ReturnStatement[10766-10783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10958-10994]:Block[11037-11073]"
    }, {
      "left" : "return containedTypeCount() > 0;",
      "right" : "return containedTypeCount() > 0;",
      "info" : "ReturnStatement[10960-10992]:ReturnStatement[11039-11071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11043-11059]:Block[11122-11138]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11045-11057]:ReturnStatement[11124-11136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11112-11128]:Block[11191-11207]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11114-11126]:ReturnStatement[11193-11205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11180-11193]:Block[11259-11272]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[11182-11191]:ReturnStatement[11261-11270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11254-11270]:Block[11333-11349]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11256-11268]:ReturnStatement[11335-11347]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11340-11356]:Block[11419-11435]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11342-11354]:ReturnStatement[11421-11433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12208-12319]:Block[12287-12398]"
    }, {
      "left" : "JavaType t = containedType(index);",
      "right" : "JavaType t = containedType(index);",
      "info" : "VariableDeclarationStatement[12218-12252]:VariableDeclarationStatement[12297-12331]"
    }, {
      "left" : "return (t == null)  ? TypeFactory.unknownType() : t;",
      "right" : "return (t == null)  ? TypeFactory.unknownType() : t;",
      "info" : "ReturnStatement[12261-12313]:ReturnStatement[12340-12392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12674-12703]:Block[12753-12782]"
    }, {
      "left" : "return (T) _valueHandler;",
      "right" : "return (T) _valueHandler;",
      "info" : "ReturnStatement[12676-12701]:ReturnStatement[12755-12780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12865-12893]:Block[12944-12972]"
    }, {
      "left" : "return (T) _typeHandler;",
      "right" : "return (T) _typeHandler;",
      "info" : "ReturnStatement[12867-12891]:ReturnStatement[12946-12970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13525-13653]:Block[13604-13732]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder(40);",
      "right" : "StringBuilder sb = new StringBuilder(40);",
      "info" : "VariableDeclarationStatement[13535-13576]:VariableDeclarationStatement[13614-13655]"
    }, {
      "left" : "getGenericSignature(sb);",
      "right" : "getGenericSignature(sb);",
      "info" : "ExpressionStatement[13585-13609]:ExpressionStatement[13664-13688]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[13618-13639]:ReturnStatement[13697-13718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14171-14290]:Block[14250-14369]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder(40);",
      "right" : "StringBuilder sb = new StringBuilder(40);",
      "info" : "VariableDeclarationStatement[14181-14222]:VariableDeclarationStatement[14260-14301]"
    }, {
      "left" : "getErasedSignature(sb);",
      "right" : "getErasedSignature(sb);",
      "info" : "ExpressionStatement[14231-14254]:ExpressionStatement[14310-14333]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[14263-14284]:ReturnStatement[14342-14363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14993-15179]:Block[15072-15258]"
    }, {
      "left" : "if (!_class.isAssignableFrom(subclass))",
      "right" : "if (!_class.isAssignableFrom(subclass))",
      "info" : "IfStatement[15003-15173]:IfStatement[15082-15252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15043-15173]:Block[15122-15252]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Class \"+subclass.getName()+\" is not assignable to \"+_class.getName());",
      "right" : "throw new IllegalArgumentException(\"Class \"+subclass.getName()+\" is not assignable to \"+_class.getName());",
      "info" : "ThrowStatement[15057-15163]:ThrowStatement[15136-15242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15554-15571]:Block[15633-15650]"
    }, {
      "left" : "return _hash;",
      "right" : "return _hash;",
      "info" : "ReturnStatement[15556-15569]:ReturnStatement[15635-15648]"
    } ]
  },
  "interFileMappings" : { }
}