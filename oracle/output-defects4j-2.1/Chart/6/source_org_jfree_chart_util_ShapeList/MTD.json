{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ShapeList",
      "right" : "ShapeList",
      "info" : "TypeDeclaration[1711-4614]:TypeDeclaration[1711-4848]"
    }, {
      "left" : "public ShapeList()",
      "right" : "public ShapeList()",
      "info" : "MethodDeclaration[1813-1899]:MethodDeclaration[1813-1899]"
    }, {
      "left" : "public Shape getShape(int index)",
      "right" : "public Shape getShape(int index)",
      "info" : "MethodDeclaration[1905-2134]:MethodDeclaration[1905-2134]"
    }, {
      "left" : "public void setShape(int index, Shape shape)",
      "right" : "public void setShape(int index, Shape shape)",
      "info" : "MethodDeclaration[2140-2423]:MethodDeclaration[2140-2423]"
    }, {
      "left" : "public Object clone() throws CloneNotSupportedException",
      "right" : "public Object clone() throws CloneNotSupportedException",
      "info" : "MethodDeclaration[2429-2730]:MethodDeclaration[2429-2730]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[2736-3157]:MethodDeclaration[2736-3391]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[3163-3325]:MethodDeclaration[3397-3559]"
    }, {
      "left" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "right" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "info" : "MethodDeclaration[3331-3975]:MethodDeclaration[3565-4209]"
    }, {
      "left" : "private void readObject(ObjectInputStream stream) throws IOException,\n            ClassNotFoundException",
      "right" : "private void readObject(ObjectInputStream stream) throws IOException,\n            ClassNotFoundException",
      "info" : "MethodDeclaration[3981-4611]:MethodDeclaration[4215-4845]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1875-1899]:Block[1875-1899]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[1885-1893]:SuperConstructorInvocation[1885-1893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2092-2134]:Block[2092-2134]"
    }, {
      "left" : "return (Shape) get(index);",
      "right" : "return (Shape) get(index);",
      "info" : "ReturnStatement[2102-2128]:ReturnStatement[2102-2128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2389-2423]:Block[2389-2423]"
    }, {
      "left" : "set(index, shape);",
      "right" : "set(index, shape);",
      "info" : "ExpressionStatement[2399-2417]:ExpressionStatement[2399-2417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2693-2730]:Block[2693-2730]"
    }, {
      "left" : "return super.clone();",
      "right" : "return super.clone();",
      "info" : "ReturnStatement[2703-2724]:ReturnStatement[2703-2724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2973-3157]:Block[2973-3391]"
    }, {
      "left" : "if (obj == this)",
      "right" : "if (obj == this)",
      "info" : "IfStatement[2984-3037]:IfStatement[2984-3037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3001-3037]:Block[3001-3037]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3015-3027]:ReturnStatement[3015-3027]"
    }, {
      "left" : "if (!(obj instanceof ShapeList))",
      "right" : "if (!(obj instanceof ShapeList))",
      "info" : "IfStatement[3046-3116]:IfStatement[3046-3116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3079-3116]:Block[3079-3116]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3093-3106]:ReturnStatement[3093-3106]"
    }, {
      "left" : "return super.equals(obj);",
      "right" : "return false;",
      "info" : "ReturnStatement[3125-3150]:ReturnStatement[3327-3340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3285-3325]:Block[3519-3559]"
    }, {
      "left" : "return super.hashCode();",
      "right" : "return super.hashCode();",
      "info" : "ReturnStatement[3295-3319]:ReturnStatement[3529-3553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3566-3975]:Block[3800-4209]"
    }, {
      "left" : "stream.defaultWriteObject();",
      "right" : "stream.defaultWriteObject();",
      "info" : "ExpressionStatement[3577-3605]:ExpressionStatement[3811-3839]"
    }, {
      "left" : "int count = size();",
      "right" : "int count = size();",
      "info" : "VariableDeclarationStatement[3614-3633]:VariableDeclarationStatement[3848-3867]"
    }, {
      "left" : "stream.writeInt(count);",
      "right" : "stream.writeInt(count);",
      "info" : "ExpressionStatement[3642-3665]:ExpressionStatement[3876-3899]"
    }, {
      "left" : "for (int i = 0; i < count; i++)",
      "right" : "for (int i = 0; i < count; i++)",
      "info" : "ForStatement[3674-3968]:ForStatement[3908-4202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3706-3968]:Block[3940-4202]"
    }, {
      "left" : "Shape shape = getShape(i);",
      "right" : "Shape shape = getShape(i);",
      "info" : "VariableDeclarationStatement[3720-3746]:VariableDeclarationStatement[3954-3980]"
    }, {
      "left" : "if (shape != null)",
      "right" : "if (shape != null)",
      "info" : "IfStatement[3759-3958]:IfStatement[3993-4192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3778-3888]:Block[4012-4122]"
    }, {
      "left" : "stream.writeInt(i);",
      "right" : "stream.writeInt(i);",
      "info" : "ExpressionStatement[3796-3815]:ExpressionStatement[4030-4049]"
    }, {
      "left" : "SerialUtilities.writeShape(shape, stream);",
      "right" : "SerialUtilities.writeShape(shape, stream);",
      "info" : "ExpressionStatement[3832-3874]:ExpressionStatement[4066-4108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3906-3958]:Block[4140-4192]"
    }, {
      "left" : "stream.writeInt(-1);",
      "right" : "stream.writeInt(-1);",
      "info" : "ExpressionStatement[3924-3944]:ExpressionStatement[4158-4178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4321-4611]:Block[4555-4845]"
    }, {
      "left" : "stream.defaultReadObject();",
      "right" : "stream.defaultReadObject();",
      "info" : "ExpressionStatement[4332-4359]:ExpressionStatement[4566-4593]"
    }, {
      "left" : "int count = stream.readInt();",
      "right" : "int count = stream.readInt();",
      "info" : "VariableDeclarationStatement[4368-4397]:VariableDeclarationStatement[4602-4631]"
    }, {
      "left" : "for (int i = 0; i < count; i++)",
      "right" : "for (int i = 0; i < count; i++)",
      "info" : "ForStatement[4406-4604]:ForStatement[4640-4838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4438-4604]:Block[4672-4838]"
    }, {
      "left" : "int index = stream.readInt();",
      "right" : "int index = stream.readInt();",
      "info" : "VariableDeclarationStatement[4452-4481]:VariableDeclarationStatement[4686-4715]"
    }, {
      "left" : "if (index != -1)",
      "right" : "if (index != -1)",
      "info" : "IfStatement[4494-4594]:IfStatement[4728-4828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4511-4594]:Block[4745-4828]"
    }, {
      "left" : "setShape(index, SerialUtilities.readShape(stream));",
      "right" : "setShape(index, SerialUtilities.readShape(stream));",
      "info" : "ExpressionStatement[4529-4580]:ExpressionStatement[4763-4814]"
    } ]
  },
  "interFileMappings" : { }
}