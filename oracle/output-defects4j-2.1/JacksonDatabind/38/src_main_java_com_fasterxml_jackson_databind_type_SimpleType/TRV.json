{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[460-508]:FieldDeclaration[460-508]"
    }, {
      "left" : "protected SimpleType(Class<?> cls)",
      "right" : "protected SimpleType(Class<?> cls)",
      "info" : "MethodDeclaration[676-1128]:MethodDeclaration[676-1128]"
    }, {
      "left" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts)",
      "right" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts)",
      "info" : "MethodDeclaration[1134-1325]:MethodDeclaration[1134-1325]"
    }, {
      "left" : "protected SimpleType(TypeBase base)",
      "right" : "protected SimpleType(TypeBase base)",
      "info" : "MethodDeclaration[1331-1554]:MethodDeclaration[1331-1554]"
    }, {
      "left" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "right" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "info" : "MethodDeclaration[1560-1864]:MethodDeclaration[1560-1864]"
    }, {
      "left" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts, int extraHash,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "right" : "protected SimpleType(Class<?> cls, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInts, int extraHash,\n            Object valueHandler, Object typeHandler, boolean asStatic)",
      "info" : "MethodDeclaration[1870-2303]:MethodDeclaration[1870-2303]"
    }, {
      "left" : "public static SimpleType constructUnsafe(Class<?> raw)",
      "right" : "public static SimpleType constructUnsafe(Class<?> raw)",
      "info" : "MethodDeclaration[2313-2943]:MethodDeclaration[2313-2943]"
    }, {
      "left" : "protected JavaType _narrow(Class<?> subclass)",
      "right" : "protected JavaType _narrow(Class<?> subclass)",
      "info" : "MethodDeclaration[4512-5276]:MethodDeclaration[4559-5323]"
    }, {
      "left" : "public JavaType withContentType(JavaType contentType)",
      "right" : "public JavaType withContentType(JavaType contentType)",
      "info" : "MethodDeclaration[5286-5475]:MethodDeclaration[5333-5522]"
    }, {
      "left" : "public SimpleType withTypeHandler(Object h)",
      "right" : "public SimpleType withTypeHandler(Object h)",
      "info" : "MethodDeclaration[5485-5728]:MethodDeclaration[5532-5775]"
    }, {
      "left" : "public JavaType withContentTypeHandler(Object h)",
      "right" : "public JavaType withContentTypeHandler(Object h)",
      "info" : "MethodDeclaration[5734-5956]:MethodDeclaration[5781-6003]"
    }, {
      "left" : "public SimpleType withValueHandler(Object h)",
      "right" : "public SimpleType withValueHandler(Object h)",
      "info" : "MethodDeclaration[5962-6206]:MethodDeclaration[6009-6253]"
    }, {
      "left" : "public  SimpleType withContentValueHandler(Object h)",
      "right" : "public  SimpleType withContentValueHandler(Object h)",
      "info" : "MethodDeclaration[6216-6443]:MethodDeclaration[6263-6490]"
    }, {
      "left" : "public SimpleType withStaticTyping()",
      "right" : "public SimpleType withStaticTyping()",
      "info" : "MethodDeclaration[6449-6658]:MethodDeclaration[6496-6705]"
    }, {
      "left" : "public JavaType refine(Class<?> rawType, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInterfaces)",
      "right" : "public JavaType refine(Class<?> rawType, TypeBindings bindings,\n            JavaType superClass, JavaType[] superInterfaces)",
      "info" : "MethodDeclaration[6664-6890]:MethodDeclaration[6711-6937]"
    }, {
      "left" : "protected String buildCanonicalName()",
      "right" : "protected String buildCanonicalName()",
      "info" : "MethodDeclaration[6900-7448]:MethodDeclaration[6947-7495]"
    }, {
      "left" : "public boolean isContainerType()",
      "right" : "public boolean isContainerType()",
      "info" : "MethodDeclaration[7616-7680]:MethodDeclaration[7663-7727]"
    }, {
      "left" : "public StringBuilder getErasedSignature(StringBuilder sb)",
      "right" : "public StringBuilder getErasedSignature(StringBuilder sb)",
      "info" : "MethodDeclaration[7686-7815]:MethodDeclaration[7733-7862]"
    }, {
      "left" : "public StringBuilder getGenericSignature(StringBuilder sb)",
      "right" : "public StringBuilder getGenericSignature(StringBuilder sb)",
      "info" : "MethodDeclaration[7825-8255]:MethodDeclaration[7872-8302]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[8992-9477]:MethodDeclaration[9478-9963]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1060-1128]:Block[1060-1128]"
    }, {
      "left" : "this(cls, TypeBindings.emptyBindings(), null, null);",
      "right" : "this(cls, TypeBindings.emptyBindings(), null, null);",
      "info" : "ConstructorInvocation[1070-1122]:ConstructorInvocation[1070-1122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1247-1325]:Block[1247-1325]"
    }, {
      "left" : "this(cls, bindings, superClass, superInts, null, null, false);",
      "right" : "this(cls, bindings, superClass, superInts, null, null, false);",
      "info" : "ConstructorInvocation[1257-1319]:ConstructorInvocation[1257-1319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1526-1554]:Block[1526-1554]"
    }, {
      "left" : "super(base);",
      "right" : "super(base);",
      "info" : "SuperConstructorInvocation[1536-1548]:SuperConstructorInvocation[1536-1548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1748-1864]:Block[1748-1864]"
    }, {
      "left" : "super(cls, bindings, superClass, superInts,\n                0, valueHandler, typeHandler, asStatic);",
      "right" : "super(cls, bindings, superClass, superInts,\n                0, valueHandler, typeHandler, asStatic);",
      "info" : "SuperConstructorInvocation[1758-1858]:SuperConstructorInvocation[1758-1858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2178-2303]:Block[2178-2303]"
    }, {
      "left" : "super(cls, bindings, superClass, superInts, \n                extraHash, valueHandler, typeHandler, asStatic);",
      "right" : "super(cls, bindings, superClass, superInts, \n                extraHash, valueHandler, typeHandler, asStatic);",
      "info" : "SuperConstructorInvocation[2188-2297]:SuperConstructorInvocation[2188-2297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2759-2943]:Block[2759-2943]"
    }, {
      "left" : "return new SimpleType(raw, null,\n                // 18-Oct-2015, tatu: Should be ok to omit possible super-types, right?\n                null, null, null, null, false);",
      "right" : "return new SimpleType(raw, null,\n                // 18-Oct-2015, tatu: Should be ok to omit possible super-types, right?\n                null, null, null, null, false);",
      "info" : "ReturnStatement[2769-2937]:ReturnStatement[2769-2937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4592-5276]:Block[4639-5323]"
    }, {
      "left" : "if (_class == subclass)",
      "right" : "if (_class == subclass)",
      "info" : "IfStatement[4602-4662]:IfStatement[4649-4709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4626-4662]:Block[4673-4709]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4640-4652]:ReturnStatement[4687-4699]"
    }, {
      "left" : "return new SimpleType(subclass, _bindings, this, _superInterfaces,\n                _valueHandler, _typeHandler, _asStatic);",
      "right" : "return new SimpleType(subclass, _bindings, this, _superInterfaces,\n                _valueHandler, _typeHandler, _asStatic);",
      "info" : "ReturnStatement[5147-5270]:ReturnStatement[5194-5317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5354-5475]:Block[5401-5522]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContentType()\");",
      "right" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContentType()\");",
      "info" : "ThrowStatement[5364-5469]:ThrowStatement[5411-5516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5543-5728]:Block[5590-5775]"
    }, {
      "left" : "if (_typeHandler == h)",
      "right" : "if (_typeHandler == h)",
      "info" : "IfStatement[5553-5612]:IfStatement[5600-5659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5576-5612]:Block[5623-5659]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5590-5602]:ReturnStatement[5637-5649]"
    }, {
      "left" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, _valueHandler, h, _asStatic);",
      "right" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, _valueHandler, h, _asStatic);",
      "info" : "ReturnStatement[5621-5722]:ReturnStatement[5668-5769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5797-5956]:Block[5844-6003]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenTypeHandler()\");",
      "right" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenTypeHandler()\");",
      "info" : "ThrowStatement[5839-5950]:ThrowStatement[5886-5997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6021-6206]:Block[6068-6253]"
    }, {
      "left" : "if (h == _valueHandler)",
      "right" : "if (h == _valueHandler)",
      "info" : "IfStatement[6031-6091]:IfStatement[6078-6138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6055-6091]:Block[6102-6138]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6069-6081]:ReturnStatement[6116-6128]"
    }, {
      "left" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, h, _typeHandler, _asStatic);",
      "right" : "return new SimpleType(_class, _bindings, _superClass, _superInterfaces, h, _typeHandler, _asStatic);",
      "info" : "ReturnStatement[6100-6200]:ReturnStatement[6147-6247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6283-6443]:Block[6330-6490]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenValueHandler()\");",
      "right" : "throw new IllegalArgumentException(\"Simple types have no content types; can not call withContenValueHandler()\");",
      "info" : "ThrowStatement[6325-6437]:ThrowStatement[6372-6484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6500-6658]:Block[6547-6705]"
    }, {
      "left" : "return _asStatic ? this : new SimpleType(_class, _bindings,\n                _superClass, _superInterfaces, _valueHandler, _typeHandler, true);",
      "right" : "return _asStatic ? this : new SimpleType(_class, _bindings,\n                _superClass, _superInterfaces, _valueHandler, _typeHandler, true);",
      "info" : "ReturnStatement[6510-6652]:ReturnStatement[6557-6699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6803-6890]:Block[6850-6937]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6872-6884]:ReturnStatement[6919-6931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6956-7448]:Block[7003-7495]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[6966-7005]:VariableDeclarationStatement[7013-7052]"
    }, {
      "left" : "sb.append(_class.getName());",
      "right" : "sb.append(_class.getName());",
      "info" : "ExpressionStatement[7014-7042]:ExpressionStatement[7061-7089]"
    }, {
      "left" : "final int count = _bindings.size();",
      "right" : "final int count = _bindings.size();",
      "info" : "VariableDeclarationStatement[7052-7087]:VariableDeclarationStatement[7099-7134]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[7096-7412]:IfStatement[7143-7459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7111-7412]:Block[7158-7459]"
    }, {
      "left" : "sb.append('<');",
      "right" : "sb.append('<');",
      "info" : "ExpressionStatement[7125-7140]:ExpressionStatement[7172-7187]"
    }, {
      "left" : "for (int i = 0; i < count; ++i)",
      "right" : "for (int i = 0; i < count; ++i)",
      "info" : "ForStatement[7153-7374]:ForStatement[7200-7421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7185-7374]:Block[7232-7421]"
    }, {
      "left" : "JavaType t = containedType(i);",
      "right" : "JavaType t = containedType(i);",
      "info" : "VariableDeclarationStatement[7203-7233]:VariableDeclarationStatement[7250-7280]"
    }, {
      "left" : "if (i > 0)",
      "right" : "if (i > 0)",
      "info" : "IfStatement[7250-7316]:IfStatement[7297-7363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7261-7316]:Block[7308-7363]"
    }, {
      "left" : "sb.append(',');",
      "right" : "sb.append(',');",
      "info" : "ExpressionStatement[7283-7298]:ExpressionStatement[7330-7345]"
    }, {
      "left" : "sb.append(t.toCanonical());",
      "right" : "sb.append(t.toCanonical());",
      "info" : "ExpressionStatement[7333-7360]:ExpressionStatement[7380-7407]"
    }, {
      "left" : "sb.append('>');",
      "right" : "sb.append('>');",
      "info" : "ExpressionStatement[7387-7402]:ExpressionStatement[7434-7449]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[7421-7442]:ReturnStatement[7468-7489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7663-7680]:Block[7710-7727]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7665-7678]:ReturnStatement[7712-7725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7758-7815]:Block[7805-7862]"
    }, {
      "left" : "return _classSignature(_class, sb, true);",
      "right" : "return _classSignature(_class, sb, true);",
      "info" : "ReturnStatement[7768-7809]:ReturnStatement[7815-7856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7902-8255]:Block[7949-8302]"
    }, {
      "left" : "_classSignature(_class, sb, false);",
      "right" : "_classSignature(_class, sb, false);",
      "info" : "ExpressionStatement[7912-7947]:ExpressionStatement[7959-7994]"
    }, {
      "left" : "final int count = _bindings.size();",
      "right" : "final int count = _bindings.size();",
      "info" : "VariableDeclarationStatement[7957-7992]:VariableDeclarationStatement[8004-8039]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[8001-8206]:IfStatement[8048-8253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8016-8206]:Block[8063-8253]"
    }, {
      "left" : "sb.append('<');",
      "right" : "sb.append('<');",
      "info" : "ExpressionStatement[8030-8045]:ExpressionStatement[8077-8092]"
    }, {
      "left" : "for (int i = 0; i < count; ++i)",
      "right" : "for (int i = 0; i < count; ++i)",
      "info" : "ForStatement[8058-8168]:ForStatement[8105-8215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8090-8168]:Block[8137-8215]"
    }, {
      "left" : "sb = containedType(i).getGenericSignature(sb);",
      "right" : "sb = containedType(i).getGenericSignature(sb);",
      "info" : "ExpressionStatement[8108-8154]:ExpressionStatement[8155-8201]"
    }, {
      "left" : "sb.append('>');",
      "right" : "sb.append('>');",
      "info" : "ExpressionStatement[8181-8196]:ExpressionStatement[8228-8243]"
    }, {
      "left" : "sb.append(';');",
      "right" : "sb.append(';');",
      "info" : "ExpressionStatement[8215-8230]:ExpressionStatement[8262-8277]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[8239-8249]:ReturnStatement[8286-8296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9042-9477]:Block[9528-9963]"
    }, {
      "left" : "if (o == this)",
      "right" : "if (o == this)",
      "info" : "IfStatement[9052-9079]:IfStatement[9538-9565]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9067-9079]:ReturnStatement[9553-9565]"
    }, {
      "left" : "if (o == null)",
      "right" : "if (o == null)",
      "info" : "IfStatement[9088-9116]:IfStatement[9574-9602]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9103-9116]:ReturnStatement[9589-9602]"
    }, {
      "left" : "if (o.getClass() != getClass())",
      "right" : "if (o.getClass() != getClass())",
      "info" : "IfStatement[9125-9170]:IfStatement[9611-9656]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9157-9170]:ReturnStatement[9643-9656]"
    }, {
      "left" : "SimpleType other = (SimpleType) o;",
      "right" : "SimpleType other = (SimpleType) o;",
      "info" : "VariableDeclarationStatement[9180-9214]:VariableDeclarationStatement[9666-9700]"
    }, {
      "left" : "if (other._class != this._class)",
      "right" : "if (other._class != this._class)",
      "info" : "IfStatement[9265-9311]:IfStatement[9751-9797]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9298-9311]:ReturnStatement[9784-9797]"
    }, {
      "left" : "TypeBindings b1 = _bindings;",
      "right" : "TypeBindings b1 = _bindings;",
      "info" : "VariableDeclarationStatement[9370-9398]:VariableDeclarationStatement[9856-9884]"
    }, {
      "left" : "TypeBindings b2 = other._bindings;",
      "right" : "TypeBindings b2 = other._bindings;",
      "info" : "VariableDeclarationStatement[9407-9441]:VariableDeclarationStatement[9893-9927]"
    }, {
      "left" : "return b1.equals(b2);",
      "right" : "return b1.equals(b2);",
      "info" : "ReturnStatement[9450-9471]:ReturnStatement[9936-9957]"
    } ]
  },
  "interFileMappings" : { }
}