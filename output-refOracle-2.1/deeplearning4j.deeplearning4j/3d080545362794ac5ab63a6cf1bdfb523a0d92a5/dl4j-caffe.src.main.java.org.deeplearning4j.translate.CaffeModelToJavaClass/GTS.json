{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CaffeModelToJavaClass",
      "right" : "CaffeModelToJavaClass",
      "info" : "TypeDeclaration[269-793]:TypeDeclaration[251-1335]"
    }, {
      "left" : "public static NetParameter readCaffeModel(String caffeModelPath, int sizeLimitMb) throws IOException",
      "right" : "public static NetParameter readCaffeModel(InputStream is, int sizeLimitMb) throws IOException",
      "info" : "MethodDeclaration[356-791]:MethodDeclaration[324-887]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[457-791]:Block[615-887]"
    }, {
      "left" : "InputStream is = new FileInputStream(caffeModelPath);",
      "right" : "InputStream is = new BufferedInputStream(new FileInputStream(caffeModelPath));",
      "info" : "VariableDeclarationStatement[467-520]:VariableDeclarationStatement[1202-1280]"
    }, {
      "left" : "CodedInputStream codeStream = CodedInputStream.newInstance(is);",
      "right" : "CodedInputStream codeStream = CodedInputStream.newInstance(is);",
      "info" : "VariableDeclarationStatement[529-592]:VariableDeclarationStatement[625-688]"
    }, {
      "left" : "int oldLimit = codeStream.setSizeLimit(sizeLimitMb * 1024 * 1024);",
      "right" : "int oldLimit = codeStream.setSizeLimit(sizeLimitMb * 1024 * 1024);",
      "info" : "VariableDeclarationStatement[668-734]:VariableDeclarationStatement[764-830]"
    }, {
      "left" : "return NetParameter.parseFrom(codeStream);",
      "right" : "return NetParameter.parseFrom(codeStream);",
      "info" : "ReturnStatement[743-785]:ReturnStatement[839-881]"
    } ]
  },
  "interFileMappings" : { }
}