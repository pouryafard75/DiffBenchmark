{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Axis",
      "right" : "Axis",
      "info" : "TypeDeclaration[5437-47434]:TypeDeclaration[5437-47483]"
    }, {
      "left" : "private static final long serialVersionUID = 7719289504573298271L;",
      "right" : "private static final long serialVersionUID = 7719289504573298271L;",
      "info" : "FieldDeclaration[5708-5805]:FieldDeclaration[5708-5805]"
    }, {
      "left" : "public static final boolean DEFAULT_AXIS_VISIBLE = true;",
      "right" : "public static final boolean DEFAULT_AXIS_VISIBLE = true;",
      "info" : "FieldDeclaration[5817-5914]:FieldDeclaration[5817-5914]"
    }, {
      "left" : "public static final Font DEFAULT_AXIS_LABEL_FONT = new Font(\r\n            \"SansSerif\", Font.PLAIN, 12);",
      "right" : "public static final Font DEFAULT_AXIS_LABEL_FONT = new Font(\r\n            \"SansSerif\", Font.PLAIN, 12);",
      "info" : "FieldDeclaration[5922-6066]:FieldDeclaration[5922-6066]"
    }, {
      "left" : "public static final Paint DEFAULT_AXIS_LABEL_PAINT = Color.black;",
      "right" : "public static final Paint DEFAULT_AXIS_LABEL_PAINT = Color.black;",
      "info" : "FieldDeclaration[6074-6181]:FieldDeclaration[6074-6181]"
    }, {
      "left" : "public static final RectangleInsets DEFAULT_AXIS_LABEL_INSETS \r\n            = new RectangleInsets(3.0, 3.0, 3.0, 3.0);",
      "right" : "public static final RectangleInsets DEFAULT_AXIS_LABEL_INSETS \r\n            = new RectangleInsets(3.0, 3.0, 3.0, 3.0);",
      "info" : "FieldDeclaration[6189-6350]:FieldDeclaration[6189-6350]"
    }, {
      "left" : "public static final Paint DEFAULT_AXIS_LINE_PAINT = Color.gray;",
      "right" : "public static final Paint DEFAULT_AXIS_LINE_PAINT = Color.gray;",
      "info" : "FieldDeclaration[6358-6462]:FieldDeclaration[6358-6462]"
    }, {
      "left" : "public static final Stroke DEFAULT_AXIS_LINE_STROKE = new BasicStroke(1.0f);",
      "right" : "public static final Stroke DEFAULT_AXIS_LINE_STROKE = new BasicStroke(1.0f);",
      "info" : "FieldDeclaration[6474-6592]:FieldDeclaration[6474-6592]"
    }, {
      "left" : "public static final boolean DEFAULT_TICK_LABELS_VISIBLE = true;",
      "right" : "public static final boolean DEFAULT_TICK_LABELS_VISIBLE = true;",
      "info" : "FieldDeclaration[6600-6711]:FieldDeclaration[6600-6711]"
    }, {
      "left" : "public static final Font DEFAULT_TICK_LABEL_FONT = new Font(\"SansSerif\", \r\n            Font.PLAIN, 10);",
      "right" : "public static final Font DEFAULT_TICK_LABEL_FONT = new Font(\"SansSerif\", \r\n            Font.PLAIN, 10);",
      "info" : "FieldDeclaration[6719-6863]:FieldDeclaration[6719-6863]"
    }, {
      "left" : "public static final Paint DEFAULT_TICK_LABEL_PAINT = Color.black;",
      "right" : "public static final Paint DEFAULT_TICK_LABEL_PAINT = Color.black;",
      "info" : "FieldDeclaration[6871-6978]:FieldDeclaration[6871-6978]"
    }, {
      "left" : "public static final RectangleInsets DEFAULT_TICK_LABEL_INSETS \r\n            = new RectangleInsets(2.0, 4.0, 2.0, 4.0);",
      "right" : "public static final RectangleInsets DEFAULT_TICK_LABEL_INSETS \r\n            = new RectangleInsets(2.0, 4.0, 2.0, 4.0);",
      "info" : "FieldDeclaration[6986-7147]:FieldDeclaration[6986-7147]"
    }, {
      "left" : "public static final boolean DEFAULT_TICK_MARKS_VISIBLE = true;",
      "right" : "public static final boolean DEFAULT_TICK_MARKS_VISIBLE = true;",
      "info" : "FieldDeclaration[7155-7261]:FieldDeclaration[7155-7261]"
    }, {
      "left" : "public static final Stroke DEFAULT_TICK_MARK_STROKE = new BasicStroke(1);",
      "right" : "public static final Stroke DEFAULT_TICK_MARK_STROKE = new BasicStroke(1);",
      "info" : "FieldDeclaration[7269-7379]:FieldDeclaration[7269-7379]"
    }, {
      "left" : "public static final Paint DEFAULT_TICK_MARK_PAINT = Color.gray;",
      "right" : "public static final Paint DEFAULT_TICK_MARK_PAINT = Color.gray;",
      "info" : "FieldDeclaration[7387-7486]:FieldDeclaration[7387-7486]"
    }, {
      "left" : "public static final float DEFAULT_TICK_MARK_INSIDE_LENGTH = 0.0f;",
      "right" : "public static final float DEFAULT_TICK_MARK_INSIDE_LENGTH = 0.0f;",
      "info" : "FieldDeclaration[7494-7608]:FieldDeclaration[7494-7608]"
    }, {
      "left" : "public static final float DEFAULT_TICK_MARK_OUTSIDE_LENGTH = 2.0f;",
      "right" : "public static final float DEFAULT_TICK_MARK_OUTSIDE_LENGTH = 2.0f;",
      "info" : "FieldDeclaration[7616-7732]:FieldDeclaration[7616-7732]"
    }, {
      "left" : "private boolean visible;",
      "right" : "private boolean visible;",
      "info" : "FieldDeclaration[7740-7830]:FieldDeclaration[7740-7830]"
    }, {
      "left" : "private String label;",
      "right" : "private String label;",
      "info" : "FieldDeclaration[7838-7895]:FieldDeclaration[7838-7895]"
    }, {
      "left" : "private Font labelFont;",
      "right" : "private Font labelFont;",
      "info" : "FieldDeclaration[7903-7978]:FieldDeclaration[7903-7978]"
    }, {
      "left" : "private transient Paint labelPaint;",
      "right" : "private transient Paint labelPaint;",
      "info" : "FieldDeclaration[7986-8071]:FieldDeclaration[7986-8071]"
    }, {
      "left" : "private RectangleInsets labelInsets;",
      "right" : "private RectangleInsets labelInsets;",
      "info" : "FieldDeclaration[8079-8158]:FieldDeclaration[8079-8158]"
    }, {
      "left" : "private double labelAngle;",
      "right" : "private double labelAngle;",
      "info" : "FieldDeclaration[8166-8221]:FieldDeclaration[8166-8221]"
    }, {
      "left" : "private String labelToolTip;",
      "right" : "private String labelToolTip;",
      "info" : "FieldDeclaration[8233-8383]:FieldDeclaration[8233-8383]"
    }, {
      "left" : "private String labelURL;",
      "right" : "private String labelURL;",
      "info" : "FieldDeclaration[8391-8528]:FieldDeclaration[8391-8528]"
    }, {
      "left" : "private boolean axisLineVisible;",
      "right" : "private boolean axisLineVisible;",
      "info" : "FieldDeclaration[8540-8646]:FieldDeclaration[8540-8646]"
    }, {
      "left" : "private transient Stroke axisLineStroke;",
      "right" : "private transient Stroke axisLineStroke;",
      "info" : "FieldDeclaration[8654-8741]:FieldDeclaration[8654-8741]"
    }, {
      "left" : "private transient Paint axisLinePaint;",
      "right" : "private transient Paint axisLinePaint;",
      "info" : "FieldDeclaration[8753-8837]:FieldDeclaration[8753-8837]"
    }, {
      "left" : "private boolean tickLabelsVisible;",
      "right" : "private boolean tickLabelsVisible;",
      "info" : "FieldDeclaration[8849-8995]:FieldDeclaration[8849-8995]"
    }, {
      "left" : "private Font tickLabelFont;",
      "right" : "private Font tickLabelFont;",
      "info" : "FieldDeclaration[9003-9084]:FieldDeclaration[9003-9084]"
    }, {
      "left" : "private transient Paint tickLabelPaint;",
      "right" : "private transient Paint tickLabelPaint;",
      "info" : "FieldDeclaration[9092-9186]:FieldDeclaration[9092-9186]"
    }, {
      "left" : "private RectangleInsets tickLabelInsets;",
      "right" : "private RectangleInsets tickLabelInsets;",
      "info" : "FieldDeclaration[9194-9286]:FieldDeclaration[9194-9286]"
    }, {
      "left" : "private boolean tickMarksVisible;",
      "right" : "private boolean tickMarksVisible;",
      "info" : "FieldDeclaration[9294-9438]:FieldDeclaration[9294-9438]"
    }, {
      "left" : "private float tickMarkInsideLength;",
      "right" : "private float tickMarkInsideLength;",
      "info" : "FieldDeclaration[9446-9560]:FieldDeclaration[9446-9560]"
    }, {
      "left" : "private float tickMarkOutsideLength;",
      "right" : "private float tickMarkOutsideLength;",
      "info" : "FieldDeclaration[9568-9684]:FieldDeclaration[9568-9684]"
    }, {
      "left" : "private transient Stroke tickMarkStroke;",
      "right" : "private transient Stroke tickMarkStroke;",
      "info" : "FieldDeclaration[9692-9780]:FieldDeclaration[9692-9780]"
    }, {
      "left" : "private transient Paint tickMarkPaint;",
      "right" : "private transient Paint tickMarkPaint;",
      "info" : "FieldDeclaration[9788-9873]:FieldDeclaration[9788-9873]"
    }, {
      "left" : "private double fixedDimension;",
      "right" : "private double fixedDimension;",
      "info" : "FieldDeclaration[9881-9982]:FieldDeclaration[9881-9982]"
    }, {
      "left" : "private transient Plot plot;",
      "right" : "private transient Plot plot;",
      "info" : "FieldDeclaration[9990-10141]:FieldDeclaration[9990-10141]"
    }, {
      "left" : "private transient EventListenerList listenerList;",
      "right" : "private transient EventListenerList listenerList;",
      "info" : "FieldDeclaration[10149-10244]:FieldDeclaration[10149-10244]"
    }, {
      "left" : "protected Axis(String label)",
      "right" : "protected Axis(String label)",
      "info" : "MethodDeclaration[10252-11599]:MethodDeclaration[10252-11599]"
    }, {
      "left" : "public boolean isVisible()",
      "right" : "public boolean isVisible()",
      "info" : "MethodDeclaration[11607-11869]:MethodDeclaration[11607-11869]"
    }, {
      "left" : "public void setVisible(boolean flag)",
      "right" : "public void setVisible(boolean flag)",
      "info" : "MethodDeclaration[11877-12297]:MethodDeclaration[11877-12297]"
    }, {
      "left" : "public String getLabel()",
      "right" : "public String getLabel()",
      "info" : "MethodDeclaration[12305-12600]:MethodDeclaration[12305-12600]"
    }, {
      "left" : "public void setLabel(String label)",
      "right" : "public void setLabel(String label)",
      "info" : "MethodDeclaration[12608-13383]:MethodDeclaration[12608-13383]"
    }, {
      "left" : "public Font getLabelFont()",
      "right" : "public Font getLabelFont()",
      "info" : "MethodDeclaration[13391-13623]:MethodDeclaration[13391-13623]"
    }, {
      "left" : "public void setLabelFont(Font font)",
      "right" : "public void setLabelFont(Font font)",
      "info" : "MethodDeclaration[13631-14183]:MethodDeclaration[13631-14183]"
    }, {
      "left" : "public Paint getLabelPaint()",
      "right" : "public Paint getLabelPaint()",
      "info" : "MethodDeclaration[14191-14445]:MethodDeclaration[14191-14445]"
    }, {
      "left" : "public void setLabelPaint(Paint paint)",
      "right" : "public void setLabelPaint(Paint paint)",
      "info" : "MethodDeclaration[14453-14961]:MethodDeclaration[14453-14961]"
    }, {
      "left" : "public RectangleInsets getLabelInsets()",
      "right" : "public RectangleInsets getLabelInsets()",
      "info" : "MethodDeclaration[14969-15316]:MethodDeclaration[14969-15316]"
    }, {
      "left" : "public void setLabelInsets(RectangleInsets insets)",
      "right" : "public void setLabelInsets(RectangleInsets insets)",
      "info" : "MethodDeclaration[15324-15914]:MethodDeclaration[15324-15914]"
    }, {
      "left" : "public double getLabelAngle()",
      "right" : "public double getLabelAngle()",
      "info" : "MethodDeclaration[15922-16149]:MethodDeclaration[15922-16149]"
    }, {
      "left" : "public void setLabelAngle(double angle)",
      "right" : "public void setLabelAngle(double angle)",
      "info" : "MethodDeclaration[16157-16515]:MethodDeclaration[16157-16515]"
    }, {
      "left" : "public String getLabelToolTip()",
      "right" : "public String getLabelToolTip()",
      "info" : "MethodDeclaration[16523-16820]:MethodDeclaration[16523-16820]"
    }, {
      "left" : "public void setLabelToolTip(String text)",
      "right" : "public void setLabelToolTip(String text)",
      "info" : "MethodDeclaration[16832-17262]:MethodDeclaration[16832-17262]"
    }, {
      "left" : "public String getLabelURL()",
      "right" : "public String getLabelURL()",
      "info" : "MethodDeclaration[17274-17544]:MethodDeclaration[17274-17544]"
    }, {
      "left" : "public void setLabelURL(String url)",
      "right" : "public void setLabelURL(String url)",
      "info" : "MethodDeclaration[17556-17958]:MethodDeclaration[17556-17958]"
    }, {
      "left" : "public boolean isAxisLineVisible()",
      "right" : "public boolean isAxisLineVisible()",
      "info" : "MethodDeclaration[17970-18291]:MethodDeclaration[17970-18291]"
    }, {
      "left" : "public void setAxisLineVisible(boolean visible)",
      "right" : "public void setAxisLineVisible(boolean visible)",
      "info" : "MethodDeclaration[18303-18784]:MethodDeclaration[18303-18784]"
    }, {
      "left" : "public Paint getAxisLinePaint()",
      "right" : "public Paint getAxisLinePaint()",
      "info" : "MethodDeclaration[18796-19053]:MethodDeclaration[18796-19053]"
    }, {
      "left" : "public void setAxisLinePaint(Paint paint)",
      "right" : "public void setAxisLinePaint(Paint paint)",
      "info" : "MethodDeclaration[19065-19585]:MethodDeclaration[19065-19585]"
    }, {
      "left" : "public Stroke getAxisLineStroke()",
      "right" : "public Stroke getAxisLineStroke()",
      "info" : "MethodDeclaration[19597-19861]:MethodDeclaration[19597-19861]"
    }, {
      "left" : "public void setAxisLineStroke(Stroke stroke)",
      "right" : "public void setAxisLineStroke(Stroke stroke)",
      "info" : "MethodDeclaration[19873-20404]:MethodDeclaration[19873-20404]"
    }, {
      "left" : "public boolean isTickLabelsVisible()",
      "right" : "public boolean isTickLabelsVisible()",
      "info" : "MethodDeclaration[20416-20751]:MethodDeclaration[20416-20751]"
    }, {
      "left" : "public void setTickLabelsVisible(boolean flag)",
      "right" : "public void setTickLabelsVisible(boolean flag)",
      "info" : "MethodDeclaration[20759-21320]:MethodDeclaration[20759-21320]"
    }, {
      "left" : "public Font getTickLabelFont()",
      "right" : "public Font getTickLabelFont()",
      "info" : "MethodDeclaration[21328-21591]:MethodDeclaration[21328-21591]"
    }, {
      "left" : "public void setTickLabelFont(Font font)",
      "right" : "public void setTickLabelFont(Font font)",
      "info" : "MethodDeclaration[21599-22172]:MethodDeclaration[21599-22172]"
    }, {
      "left" : "public Paint getTickLabelPaint()",
      "right" : "public Paint getTickLabelPaint()",
      "info" : "MethodDeclaration[22180-22442]:MethodDeclaration[22180-22442]"
    }, {
      "left" : "public void setTickLabelPaint(Paint paint)",
      "right" : "public void setTickLabelPaint(Paint paint)",
      "info" : "MethodDeclaration[22450-22989]:MethodDeclaration[22450-22989]"
    }, {
      "left" : "public RectangleInsets getTickLabelInsets()",
      "right" : "public RectangleInsets getTickLabelInsets()",
      "info" : "MethodDeclaration[22997-23274]:MethodDeclaration[22997-23274]"
    }, {
      "left" : "public void setTickLabelInsets(RectangleInsets insets)",
      "right" : "public void setTickLabelInsets(RectangleInsets insets)",
      "info" : "MethodDeclaration[23282-23885]:MethodDeclaration[23282-23885]"
    }, {
      "left" : "public boolean isTickMarksVisible()",
      "right" : "public boolean isTickMarksVisible()",
      "info" : "MethodDeclaration[23893-24253]:MethodDeclaration[23893-24253]"
    }, {
      "left" : "public void setTickMarksVisible(boolean flag)",
      "right" : "public void setTickMarksVisible(boolean flag)",
      "info" : "MethodDeclaration[24261-24726]:MethodDeclaration[24261-24726]"
    }, {
      "left" : "public float getTickMarkInsideLength()",
      "right" : "public float getTickMarkInsideLength()",
      "info" : "MethodDeclaration[24734-25026]:MethodDeclaration[24734-25026]"
    }, {
      "left" : "public void setTickMarkInsideLength(float length)",
      "right" : "public void setTickMarkInsideLength(float length)",
      "info" : "MethodDeclaration[25034-25427]:MethodDeclaration[25034-25427]"
    }, {
      "left" : "public float getTickMarkOutsideLength()",
      "right" : "public float getTickMarkOutsideLength()",
      "info" : "MethodDeclaration[25435-25730]:MethodDeclaration[25435-25730]"
    }, {
      "left" : "public void setTickMarkOutsideLength(float length)",
      "right" : "public void setTickMarkOutsideLength(float length)",
      "info" : "MethodDeclaration[25738-26134]:MethodDeclaration[25738-26134]"
    }, {
      "left" : "public Stroke getTickMarkStroke()",
      "right" : "public Stroke getTickMarkStroke()",
      "info" : "MethodDeclaration[26142-26402]:MethodDeclaration[26142-26402]"
    }, {
      "left" : "public void setTickMarkStroke(Stroke stroke)",
      "right" : "public void setTickMarkStroke(Stroke stroke)",
      "info" : "MethodDeclaration[26410-27004]:MethodDeclaration[26410-27004]"
    }, {
      "left" : "public Paint getTickMarkPaint()",
      "right" : "public Paint getTickMarkPaint()",
      "info" : "MethodDeclaration[27012-27287]:MethodDeclaration[27012-27287]"
    }, {
      "left" : "public void setTickMarkPaint(Paint paint)",
      "right" : "public void setTickMarkPaint(Paint paint)",
      "info" : "MethodDeclaration[27295-27808]:MethodDeclaration[27295-27808]"
    }, {
      "left" : "public Plot getPlot()",
      "right" : "public Plot getPlot()",
      "info" : "MethodDeclaration[27816-28201]:MethodDeclaration[27816-28201]"
    }, {
      "left" : "public void setPlot(Plot plot)",
      "right" : "public void setPlot(Plot plot)",
      "info" : "MethodDeclaration[28209-28546]:MethodDeclaration[28209-28546]"
    }, {
      "left" : "public double getFixedDimension()",
      "right" : "public double getFixedDimension()",
      "info" : "MethodDeclaration[28554-28795]:MethodDeclaration[28554-28795]"
    }, {
      "left" : "public void setFixedDimension(double dimension)",
      "right" : "public void setFixedDimension(double dimension)",
      "info" : "MethodDeclaration[28803-29412]:MethodDeclaration[28803-29412]"
    }, {
      "left" : "public abstract void configure();",
      "right" : "public abstract void configure();",
      "info" : "MethodDeclaration[29420-29620]:MethodDeclaration[29420-29620]"
    }, {
      "left" : "public abstract AxisSpace reserveSpace(Graphics2D g2, Plot plot, \r\n                                           Rectangle2D plotArea, \r\n                                           RectangleEdge edge, \r\n                                           AxisSpace space);",
      "right" : "public abstract AxisSpace reserveSpace(Graphics2D g2, Plot plot, \r\n                                           Rectangle2D plotArea, \r\n                                           RectangleEdge edge, \r\n                                           AxisSpace space);",
      "info" : "MethodDeclaration[29628-30393]:MethodDeclaration[29628-30393]"
    }, {
      "left" : "public abstract AxisState draw(Graphics2D g2, \r\n                                   double cursor,\r\n                                   Rectangle2D plotArea, \r\n                                   Rectangle2D dataArea,\r\n                                   RectangleEdge edge,\r\n                                   PlotRenderingInfo plotState);",
      "right" : "public abstract AxisState draw(Graphics2D g2, \r\n                                   double cursor,\r\n                                   Rectangle2D plotArea, \r\n                                   Rectangle2D dataArea,\r\n                                   RectangleEdge edge,\r\n                                   PlotRenderingInfo plotState);",
      "info" : "MethodDeclaration[30401-31429]:MethodDeclaration[30401-31429]"
    }, {
      "left" : "public abstract List refreshTicks(Graphics2D g2, \r\n                                      AxisState state,\r\n                                      Rectangle2D dataArea,\r\n                                      RectangleEdge edge);",
      "right" : "public abstract List refreshTicks(Graphics2D g2, \r\n                                      AxisState state,\r\n                                      Rectangle2D dataArea,\r\n                                      RectangleEdge edge);",
      "info" : "MethodDeclaration[31437-32048]:MethodDeclaration[31437-32048]"
    }, {
      "left" : "public void addChangeListener(AxisChangeListener listener)",
      "right" : "public void addChangeListener(AxisChangeListener listener)",
      "info" : "MethodDeclaration[32056-32412]:MethodDeclaration[32056-32412]"
    }, {
      "left" : "public void removeChangeListener(AxisChangeListener listener)",
      "right" : "public void removeChangeListener(AxisChangeListener listener)",
      "info" : "MethodDeclaration[32420-32770]:MethodDeclaration[32420-32770]"
    }, {
      "left" : "public boolean hasListener(EventListener listener)",
      "right" : "public boolean hasListener(EventListener listener)",
      "info" : "MethodDeclaration[32778-33272]:MethodDeclaration[32778-33272]"
    }, {
      "left" : "protected void notifyListeners(AxisChangeEvent event)",
      "right" : "protected void notifyListeners(AxisChangeEvent event)",
      "info" : "MethodDeclaration[33284-33869]:MethodDeclaration[33284-33869]"
    }, {
      "left" : "protected Rectangle2D getLabelEnclosure(Graphics2D g2, RectangleEdge edge)",
      "right" : "protected Rectangle2D getLabelEnclosure(Graphics2D g2, RectangleEdge edge)",
      "info" : "MethodDeclaration[33877-35286]:MethodDeclaration[33877-35286]"
    }, {
      "left" : "protected AxisState drawLabel(String label, Graphics2D g2, \r\n            Rectangle2D plotArea, Rectangle2D dataArea, RectangleEdge edge, \r\n            AxisState state, PlotRenderingInfo plotState)",
      "right" : "protected AxisState drawLabel(String label, Graphics2D g2, \r\n            Rectangle2D plotArea, Rectangle2D dataArea, RectangleEdge edge, \r\n            AxisState state, PlotRenderingInfo plotState)",
      "info" : "MethodDeclaration[35294-41316]:MethodDeclaration[35294-41365]"
    }, {
      "left" : "protected void drawAxisLine(Graphics2D g2, double cursor,\r\n            Rectangle2D dataArea, RectangleEdge edge)",
      "right" : "protected void drawAxisLine(Graphics2D g2, double cursor,\r\n            Rectangle2D dataArea, RectangleEdge edge)",
      "info" : "MethodDeclaration[41324-42575]:MethodDeclaration[41373-42624]"
    }, {
      "left" : "public Object clone() throws CloneNotSupportedException",
      "right" : "public Object clone() throws CloneNotSupportedException",
      "info" : "MethodDeclaration[42583-43101]:MethodDeclaration[42632-43150]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[43113-45896]:MethodDeclaration[43162-45945]"
    }, {
      "left" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "right" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "info" : "MethodDeclaration[45904-46584]:MethodDeclaration[45953-46633]"
    }, {
      "left" : "private void readObject(ObjectInputStream stream) \r\n        throws IOException, ClassNotFoundException",
      "right" : "private void readObject(ObjectInputStream stream) \r\n        throws IOException, ClassNotFoundException",
      "info" : "MethodDeclaration[46592-47429]:MethodDeclaration[46641-47478]"
    } ],
    "mappings" : [
 {
      "left" : "Cloneable",
      "right" : "Cloneable",
      "info" : "SimpleType[5675-5684]:SimpleType[5675-5684]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[5686-5698]:SimpleType[5686-5698]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[10412-10421]:Modifier[10412-10421]"
    }, {
      "left" : "Axis",
      "right" : "Axis",
      "info" : "SimpleName[10422-10426]:SimpleName[10422-10426]"
    }, {
      "left" : "String label",
      "right" : "String label",
      "info" : "SingleVariableDeclaration[10427-10439]:SingleVariableDeclaration[10427-10439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10441-11599]:Block[10441-11599]"
    }, {
      "left" : "this.label = label;",
      "right" : "this.label = label;",
      "info" : "ExpressionStatement[10454-10473]:ExpressionStatement[10454-10473]"
    }, {
      "left" : "this.visible = DEFAULT_AXIS_VISIBLE;",
      "right" : "this.visible = DEFAULT_AXIS_VISIBLE;",
      "info" : "ExpressionStatement[10483-10519]:ExpressionStatement[10483-10519]"
    }, {
      "left" : "this.labelFont = DEFAULT_AXIS_LABEL_FONT;",
      "right" : "this.labelFont = DEFAULT_AXIS_LABEL_FONT;",
      "info" : "ExpressionStatement[10529-10570]:ExpressionStatement[10529-10570]"
    }, {
      "left" : "this.labelPaint = DEFAULT_AXIS_LABEL_PAINT;",
      "right" : "this.labelPaint = DEFAULT_AXIS_LABEL_PAINT;",
      "info" : "ExpressionStatement[10580-10623]:ExpressionStatement[10580-10623]"
    }, {
      "left" : "this.labelInsets = DEFAULT_AXIS_LABEL_INSETS;",
      "right" : "this.labelInsets = DEFAULT_AXIS_LABEL_INSETS;",
      "info" : "ExpressionStatement[10633-10678]:ExpressionStatement[10633-10678]"
    }, {
      "left" : "this.labelAngle = 0.0;",
      "right" : "this.labelAngle = 0.0;",
      "info" : "ExpressionStatement[10688-10710]:ExpressionStatement[10688-10710]"
    }, {
      "left" : "this.labelToolTip = null;",
      "right" : "this.labelToolTip = null;",
      "info" : "ExpressionStatement[10720-10745]:ExpressionStatement[10720-10745]"
    }, {
      "left" : "this.labelURL = null;",
      "right" : "this.labelURL = null;",
      "info" : "ExpressionStatement[10755-10776]:ExpressionStatement[10755-10776]"
    }, {
      "left" : "this.axisLineVisible = true;",
      "right" : "this.axisLineVisible = true;",
      "info" : "ExpressionStatement[10796-10824]:ExpressionStatement[10796-10824]"
    }, {
      "left" : "this.axisLinePaint = DEFAULT_AXIS_LINE_PAINT;",
      "right" : "this.axisLinePaint = DEFAULT_AXIS_LINE_PAINT;",
      "info" : "ExpressionStatement[10834-10879]:ExpressionStatement[10834-10879]"
    }, {
      "left" : "this.axisLineStroke = DEFAULT_AXIS_LINE_STROKE;",
      "right" : "this.axisLineStroke = DEFAULT_AXIS_LINE_STROKE;",
      "info" : "ExpressionStatement[10889-10936]:ExpressionStatement[10889-10936]"
    }, {
      "left" : "this.tickLabelsVisible = DEFAULT_TICK_LABELS_VISIBLE;",
      "right" : "this.tickLabelsVisible = DEFAULT_TICK_LABELS_VISIBLE;",
      "info" : "ExpressionStatement[10956-11009]:ExpressionStatement[10956-11009]"
    }, {
      "left" : "this.tickLabelFont = DEFAULT_TICK_LABEL_FONT;",
      "right" : "this.tickLabelFont = DEFAULT_TICK_LABEL_FONT;",
      "info" : "ExpressionStatement[11019-11064]:ExpressionStatement[11019-11064]"
    }, {
      "left" : "this.tickLabelPaint = DEFAULT_TICK_LABEL_PAINT;",
      "right" : "this.tickLabelPaint = DEFAULT_TICK_LABEL_PAINT;",
      "info" : "ExpressionStatement[11074-11121]:ExpressionStatement[11074-11121]"
    }, {
      "left" : "this.tickLabelInsets = DEFAULT_TICK_LABEL_INSETS;",
      "right" : "this.tickLabelInsets = DEFAULT_TICK_LABEL_INSETS;",
      "info" : "ExpressionStatement[11131-11180]:ExpressionStatement[11131-11180]"
    }, {
      "left" : "this.tickMarksVisible = DEFAULT_TICK_MARKS_VISIBLE;",
      "right" : "this.tickMarksVisible = DEFAULT_TICK_MARKS_VISIBLE;",
      "info" : "ExpressionStatement[11200-11251]:ExpressionStatement[11200-11251]"
    }, {
      "left" : "this.tickMarkStroke = DEFAULT_TICK_MARK_STROKE;",
      "right" : "this.tickMarkStroke = DEFAULT_TICK_MARK_STROKE;",
      "info" : "ExpressionStatement[11261-11308]:ExpressionStatement[11261-11308]"
    }, {
      "left" : "this.tickMarkPaint = DEFAULT_TICK_MARK_PAINT;",
      "right" : "this.tickMarkPaint = DEFAULT_TICK_MARK_PAINT;",
      "info" : "ExpressionStatement[11318-11363]:ExpressionStatement[11318-11363]"
    }, {
      "left" : "this.tickMarkInsideLength = DEFAULT_TICK_MARK_INSIDE_LENGTH;",
      "right" : "this.tickMarkInsideLength = DEFAULT_TICK_MARK_INSIDE_LENGTH;",
      "info" : "ExpressionStatement[11373-11433]:ExpressionStatement[11373-11433]"
    }, {
      "left" : "this.tickMarkOutsideLength = DEFAULT_TICK_MARK_OUTSIDE_LENGTH;",
      "right" : "this.tickMarkOutsideLength = DEFAULT_TICK_MARK_OUTSIDE_LENGTH;",
      "info" : "ExpressionStatement[11443-11505]:ExpressionStatement[11443-11505]"
    }, {
      "left" : "this.plot = null;",
      "right" : "this.plot = null;",
      "info" : "ExpressionStatement[11517-11534]:ExpressionStatement[11517-11534]"
    }, {
      "left" : "this.listenerList = new EventListenerList();",
      "right" : "this.listenerList = new EventListenerList();",
      "info" : "ExpressionStatement[11546-11590]:ExpressionStatement[11546-11590]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11804-11810]:Modifier[11804-11810]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11811-11818]:PrimitiveType[11811-11818]"
    }, {
      "left" : "isVisible",
      "right" : "isVisible",
      "info" : "SimpleName[11819-11828]:SimpleName[11819-11828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11831-11869]:Block[11831-11869]"
    }, {
      "left" : "return this.visible;",
      "right" : "return this.visible;",
      "info" : "ReturnStatement[11842-11862]:ReturnStatement[11842-11862]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12113-12119]:Modifier[12113-12119]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12120-12124]:PrimitiveType[12120-12124]"
    }, {
      "left" : "setVisible",
      "right" : "setVisible",
      "info" : "SimpleName[12125-12135]:SimpleName[12125-12135]"
    }, {
      "left" : "boolean flag",
      "right" : "boolean flag",
      "info" : "SingleVariableDeclaration[12136-12148]:SingleVariableDeclaration[12136-12148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12150-12297]:Block[12150-12297]"
    }, {
      "left" : "if (flag != this.visible)",
      "right" : "if (flag != this.visible)",
      "info" : "IfStatement[12161-12290]:IfStatement[12161-12290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12187-12290]:Block[12187-12290]"
    }, {
      "left" : "this.visible = flag;",
      "right" : "this.visible = flag;",
      "info" : "ExpressionStatement[12202-12222]:ExpressionStatement[12202-12222]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[12236-12279]:ExpressionStatement[12236-12279]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12539-12545]:Modifier[12539-12545]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12546-12552]:SimpleType[12546-12552]"
    }, {
      "left" : "getLabel",
      "right" : "getLabel",
      "info" : "SimpleName[12553-12561]:SimpleName[12553-12561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12564-12600]:Block[12564-12600]"
    }, {
      "left" : "return this.label;",
      "right" : "return this.label;",
      "info" : "ReturnStatement[12575-12593]:ReturnStatement[12575-12593]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12914-12920]:Modifier[12914-12920]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12921-12925]:PrimitiveType[12921-12925]"
    }, {
      "left" : "setLabel",
      "right" : "setLabel",
      "info" : "SimpleName[12926-12934]:SimpleName[12926-12934]"
    }, {
      "left" : "String label",
      "right" : "String label",
      "info" : "SingleVariableDeclaration[12935-12947]:SingleVariableDeclaration[12935-12947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12949-13383]:Block[12949-13383]"
    }, {
      "left" : "String existing = this.label;",
      "right" : "String existing = this.label;",
      "info" : "VariableDeclarationStatement[12970-12999]:VariableDeclarationStatement[12970-12999]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[13009-13374]:IfStatement[13009-13374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13031-13200]:Block[13031-13200]"
    }, {
      "left" : "if (!existing.equals(label))",
      "right" : "if (!existing.equals(label))",
      "info" : "IfStatement[13046-13189]:IfStatement[13046-13189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13075-13189]:Block[13075-13189]"
    }, {
      "left" : "this.label = label;",
      "right" : "this.label = label;",
      "info" : "ExpressionStatement[13094-13113]:ExpressionStatement[13094-13113]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[13131-13174]:ExpressionStatement[13131-13174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13215-13374]:Block[13215-13374]"
    }, {
      "left" : "if (label != null)",
      "right" : "if (label != null)",
      "info" : "IfStatement[13230-13363]:IfStatement[13230-13363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13249-13363]:Block[13249-13363]"
    }, {
      "left" : "this.label = label;",
      "right" : "this.label = label;",
      "info" : "ExpressionStatement[13268-13287]:ExpressionStatement[13268-13287]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[13305-13348]:ExpressionStatement[13305-13348]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13556-13562]:Modifier[13556-13562]"
    }, {
      "left" : "Font",
      "right" : "Font",
      "info" : "SimpleType[13563-13567]:SimpleType[13563-13567]"
    }, {
      "left" : "getLabelFont",
      "right" : "getLabelFont",
      "info" : "SimpleName[13568-13580]:SimpleName[13568-13580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13583-13623]:Block[13583-13623]"
    }, {
      "left" : "return this.labelFont;",
      "right" : "return this.labelFont;",
      "info" : "ReturnStatement[13594-13616]:ReturnStatement[13594-13616]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13876-13882]:Modifier[13876-13882]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13883-13887]:PrimitiveType[13883-13887]"
    }, {
      "left" : "setLabelFont",
      "right" : "setLabelFont",
      "info" : "SimpleName[13888-13900]:SimpleName[13888-13900]"
    }, {
      "left" : "Font font",
      "right" : "Font font",
      "info" : "SingleVariableDeclaration[13901-13910]:SingleVariableDeclaration[13901-13910]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13912-14183]:Block[13912-14183]"
    }, {
      "left" : "if (font == null)",
      "right" : "if (font == null)",
      "info" : "IfStatement[13923-14027]:IfStatement[13923-14027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13941-14027]:Block[13941-14027]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'font' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'font' argument.\");",
      "info" : "ThrowStatement[13956-14016]:ThrowStatement[13956-14016]"
    }, {
      "left" : "if (!this.labelFont.equals(font))",
      "right" : "if (!this.labelFont.equals(font))",
      "info" : "IfStatement[14037-14176]:IfStatement[14037-14176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14071-14176]:Block[14071-14176]"
    }, {
      "left" : "this.labelFont = font;",
      "right" : "this.labelFont = font;",
      "info" : "ExpressionStatement[14086-14108]:ExpressionStatement[14086-14108]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[14122-14165]:ExpressionStatement[14122-14165]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14375-14381]:Modifier[14375-14381]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[14382-14387]:SimpleType[14382-14387]"
    }, {
      "left" : "getLabelPaint",
      "right" : "getLabelPaint",
      "info" : "SimpleName[14388-14401]:SimpleName[14388-14401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14404-14445]:Block[14404-14445]"
    }, {
      "left" : "return this.labelPaint;",
      "right" : "return this.labelPaint;",
      "info" : "ReturnStatement[14415-14438]:ReturnStatement[14415-14438]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14711-14717]:Modifier[14711-14717]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14718-14722]:PrimitiveType[14718-14722]"
    }, {
      "left" : "setLabelPaint",
      "right" : "setLabelPaint",
      "info" : "SimpleName[14723-14736]:SimpleName[14723-14736]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[14737-14748]:SingleVariableDeclaration[14737-14748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14750-14961]:Block[14750-14961]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[14761-14867]:IfStatement[14761-14867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14780-14867]:Block[14780-14867]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[14795-14856]:ThrowStatement[14795-14856]"
    }, {
      "left" : "this.labelPaint = paint;",
      "right" : "this.labelPaint = paint;",
      "info" : "ExpressionStatement[14877-14901]:ExpressionStatement[14877-14901]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[14911-14954]:ExpressionStatement[14911-14954]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15234-15240]:Modifier[15234-15240]"
    }, {
      "left" : "RectangleInsets",
      "right" : "RectangleInsets",
      "info" : "SimpleType[15241-15256]:SimpleType[15241-15256]"
    }, {
      "left" : "getLabelInsets",
      "right" : "getLabelInsets",
      "info" : "SimpleName[15257-15271]:SimpleName[15257-15271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15274-15316]:Block[15274-15316]"
    }, {
      "left" : "return this.labelInsets;",
      "right" : "return this.labelInsets;",
      "info" : "ReturnStatement[15285-15309]:ReturnStatement[15285-15309]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15577-15583]:Modifier[15577-15583]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15584-15588]:PrimitiveType[15584-15588]"
    }, {
      "left" : "setLabelInsets",
      "right" : "setLabelInsets",
      "info" : "SimpleName[15589-15603]:SimpleName[15589-15603]"
    }, {
      "left" : "RectangleInsets insets",
      "right" : "RectangleInsets insets",
      "info" : "SingleVariableDeclaration[15604-15626]:SingleVariableDeclaration[15604-15626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15628-15914]:Block[15628-15914]"
    }, {
      "left" : "if (insets == null)",
      "right" : "if (insets == null)",
      "info" : "IfStatement[15639-15750]:IfStatement[15639-15750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15659-15750]:Block[15659-15750]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'insets' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'insets' argument.\");",
      "info" : "ThrowStatement[15674-15736]:ThrowStatement[15674-15736]"
    }, {
      "left" : "if (!insets.equals(this.labelInsets))",
      "right" : "if (!insets.equals(this.labelInsets))",
      "info" : "IfStatement[15760-15907]:IfStatement[15760-15907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15798-15907]:Block[15798-15907]"
    }, {
      "left" : "this.labelInsets = insets;",
      "right" : "this.labelInsets = insets;",
      "info" : "ExpressionStatement[15813-15839]:ExpressionStatement[15813-15839]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[15853-15896]:ExpressionStatement[15853-15896]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16078-16084]:Modifier[16078-16084]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[16085-16091]:PrimitiveType[16085-16091]"
    }, {
      "left" : "getLabelAngle",
      "right" : "getLabelAngle",
      "info" : "SimpleName[16092-16105]:SimpleName[16092-16105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16108-16149]:Block[16108-16149]"
    }, {
      "left" : "return this.labelAngle;",
      "right" : "return this.labelAngle;",
      "info" : "ReturnStatement[16119-16142]:ReturnStatement[16119-16142]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16380-16386]:Modifier[16380-16386]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16387-16391]:PrimitiveType[16387-16391]"
    }, {
      "left" : "setLabelAngle",
      "right" : "setLabelAngle",
      "info" : "SimpleName[16392-16405]:SimpleName[16392-16405]"
    }, {
      "left" : "double angle",
      "right" : "double angle",
      "info" : "SingleVariableDeclaration[16406-16418]:SingleVariableDeclaration[16406-16418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16420-16515]:Block[16420-16515]"
    }, {
      "left" : "this.labelAngle = angle;",
      "right" : "this.labelAngle = angle;",
      "info" : "ExpressionStatement[16431-16455]:ExpressionStatement[16431-16455]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[16465-16508]:ExpressionStatement[16465-16508]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16745-16751]:Modifier[16745-16751]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[16752-16758]:SimpleType[16752-16758]"
    }, {
      "left" : "getLabelToolTip",
      "right" : "getLabelToolTip",
      "info" : "SimpleName[16759-16774]:SimpleName[16759-16774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16777-16820]:Block[16777-16820]"
    }, {
      "left" : "return this.labelToolTip;",
      "right" : "return this.labelToolTip;",
      "info" : "ReturnStatement[16788-16813]:ReturnStatement[16788-16813]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17125-17131]:Modifier[17125-17131]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17132-17136]:PrimitiveType[17132-17136]"
    }, {
      "left" : "setLabelToolTip",
      "right" : "setLabelToolTip",
      "info" : "SimpleName[17137-17152]:SimpleName[17137-17152]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[17153-17164]:SingleVariableDeclaration[17153-17164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17166-17262]:Block[17166-17262]"
    }, {
      "left" : "this.labelToolTip = text;",
      "right" : "this.labelToolTip = text;",
      "info" : "ExpressionStatement[17177-17202]:ExpressionStatement[17177-17202]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[17212-17255]:ExpressionStatement[17212-17255]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17477-17483]:Modifier[17477-17483]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[17484-17490]:SimpleType[17484-17490]"
    }, {
      "left" : "getLabelURL",
      "right" : "getLabelURL",
      "info" : "SimpleName[17491-17502]:SimpleName[17491-17502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17505-17544]:Block[17505-17544]"
    }, {
      "left" : "return this.labelURL;",
      "right" : "return this.labelURL;",
      "info" : "ReturnStatement[17516-17537]:ReturnStatement[17516-17537]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17823-17829]:Modifier[17823-17829]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17830-17834]:PrimitiveType[17830-17834]"
    }, {
      "left" : "setLabelURL",
      "right" : "setLabelURL",
      "info" : "SimpleName[17835-17846]:SimpleName[17835-17846]"
    }, {
      "left" : "String url",
      "right" : "String url",
      "info" : "SingleVariableDeclaration[17847-17857]:SingleVariableDeclaration[17847-17857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17859-17958]:Block[17859-17958]"
    }, {
      "left" : "this.labelURL = url;",
      "right" : "this.labelURL = url;",
      "info" : "ExpressionStatement[17870-17890]:ExpressionStatement[17870-17890]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[17900-17943]:ExpressionStatement[17900-17943]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18210-18216]:Modifier[18210-18216]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[18217-18224]:PrimitiveType[18217-18224]"
    }, {
      "left" : "isAxisLineVisible",
      "right" : "isAxisLineVisible",
      "info" : "SimpleName[18225-18242]:SimpleName[18225-18242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18245-18291]:Block[18245-18291]"
    }, {
      "left" : "return this.axisLineVisible;",
      "right" : "return this.axisLineVisible;",
      "info" : "ReturnStatement[18256-18284]:ReturnStatement[18256-18284]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18634-18640]:Modifier[18634-18640]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18641-18645]:PrimitiveType[18641-18645]"
    }, {
      "left" : "setAxisLineVisible",
      "right" : "setAxisLineVisible",
      "info" : "SimpleName[18646-18664]:SimpleName[18646-18664]"
    }, {
      "left" : "boolean visible",
      "right" : "boolean visible",
      "info" : "SingleVariableDeclaration[18665-18680]:SingleVariableDeclaration[18665-18680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18682-18784]:Block[18682-18784]"
    }, {
      "left" : "this.axisLineVisible = visible;",
      "right" : "this.axisLineVisible = visible;",
      "info" : "ExpressionStatement[18693-18724]:ExpressionStatement[18693-18724]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[18734-18777]:ExpressionStatement[18734-18777]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18977-18983]:Modifier[18977-18983]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[18984-18989]:SimpleType[18984-18989]"
    }, {
      "left" : "getAxisLinePaint",
      "right" : "getAxisLinePaint",
      "info" : "SimpleName[18990-19006]:SimpleName[18990-19006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19009-19053]:Block[19009-19053]"
    }, {
      "left" : "return this.axisLinePaint;",
      "right" : "return this.axisLinePaint;",
      "info" : "ReturnStatement[19020-19046]:ReturnStatement[19020-19046]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19326-19332]:Modifier[19326-19332]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19333-19337]:PrimitiveType[19333-19337]"
    }, {
      "left" : "setAxisLinePaint",
      "right" : "setAxisLinePaint",
      "info" : "SimpleName[19338-19354]:SimpleName[19338-19354]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[19355-19366]:SingleVariableDeclaration[19355-19366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19368-19585]:Block[19368-19585]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[19379-19488]:IfStatement[19379-19488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19398-19488]:Block[19398-19488]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[19413-19474]:ThrowStatement[19413-19474]"
    }, {
      "left" : "this.axisLinePaint = paint;",
      "right" : "this.axisLinePaint = paint;",
      "info" : "ExpressionStatement[19498-19525]:ExpressionStatement[19498-19525]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[19535-19578]:ExpressionStatement[19535-19578]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19782-19788]:Modifier[19782-19788]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[19789-19795]:SimpleType[19789-19795]"
    }, {
      "left" : "getAxisLineStroke",
      "right" : "getAxisLineStroke",
      "info" : "SimpleName[19796-19813]:SimpleName[19796-19813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19816-19861]:Block[19816-19861]"
    }, {
      "left" : "return this.axisLineStroke;",
      "right" : "return this.axisLineStroke;",
      "info" : "ReturnStatement[19827-19854]:ReturnStatement[19827-19854]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20138-20144]:Modifier[20138-20144]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20145-20149]:PrimitiveType[20145-20149]"
    }, {
      "left" : "setAxisLineStroke",
      "right" : "setAxisLineStroke",
      "info" : "SimpleName[20150-20167]:SimpleName[20150-20167]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[20168-20181]:SingleVariableDeclaration[20168-20181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20183-20404]:Block[20183-20404]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[20194-20305]:IfStatement[20194-20305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20214-20305]:Block[20214-20305]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[20229-20291]:ThrowStatement[20229-20291]"
    }, {
      "left" : "this.axisLineStroke = stroke;",
      "right" : "this.axisLineStroke = stroke;",
      "info" : "ExpressionStatement[20315-20344]:ExpressionStatement[20315-20344]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[20354-20397]:ExpressionStatement[20354-20397]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20666-20672]:Modifier[20666-20672]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[20673-20680]:PrimitiveType[20673-20680]"
    }, {
      "left" : "isTickLabelsVisible",
      "right" : "isTickLabelsVisible",
      "info" : "SimpleName[20681-20700]:SimpleName[20681-20700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20703-20751]:Block[20703-20751]"
    }, {
      "left" : "return this.tickLabelsVisible;",
      "right" : "return this.tickLabelsVisible;",
      "info" : "ReturnStatement[20714-20744]:ReturnStatement[20714-20744]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21102-21108]:Modifier[21102-21108]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21109-21113]:PrimitiveType[21109-21113]"
    }, {
      "left" : "setTickLabelsVisible",
      "right" : "setTickLabelsVisible",
      "info" : "SimpleName[21114-21134]:SimpleName[21114-21134]"
    }, {
      "left" : "boolean flag",
      "right" : "boolean flag",
      "info" : "SingleVariableDeclaration[21135-21147]:SingleVariableDeclaration[21135-21147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21149-21320]:Block[21149-21320]"
    }, {
      "left" : "if (flag != this.tickLabelsVisible)",
      "right" : "if (flag != this.tickLabelsVisible)",
      "info" : "IfStatement[21162-21311]:IfStatement[21162-21311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21198-21311]:Block[21198-21311]"
    }, {
      "left" : "this.tickLabelsVisible = flag;",
      "right" : "this.tickLabelsVisible = flag;",
      "info" : "ExpressionStatement[21213-21243]:ExpressionStatement[21213-21243]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[21257-21300]:ExpressionStatement[21257-21300]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21516-21522]:Modifier[21516-21522]"
    }, {
      "left" : "Font",
      "right" : "Font",
      "info" : "SimpleType[21523-21527]:SimpleType[21523-21527]"
    }, {
      "left" : "getTickLabelFont",
      "right" : "getTickLabelFont",
      "info" : "SimpleName[21528-21544]:SimpleName[21528-21544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21547-21591]:Block[21547-21591]"
    }, {
      "left" : "return this.tickLabelFont;",
      "right" : "return this.tickLabelFont;",
      "info" : "ReturnStatement[21558-21584]:ReturnStatement[21558-21584]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21847-21853]:Modifier[21847-21853]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21854-21858]:PrimitiveType[21854-21858]"
    }, {
      "left" : "setTickLabelFont",
      "right" : "setTickLabelFont",
      "info" : "SimpleName[21859-21875]:SimpleName[21859-21875]"
    }, {
      "left" : "Font font",
      "right" : "Font font",
      "info" : "SingleVariableDeclaration[21876-21885]:SingleVariableDeclaration[21876-21885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21887-22172]:Block[21887-22172]"
    }, {
      "left" : "if (font == null)",
      "right" : "if (font == null)",
      "info" : "IfStatement[21900-22004]:IfStatement[21900-22004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21918-22004]:Block[21918-22004]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'font' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'font' argument.\");",
      "info" : "ThrowStatement[21933-21993]:ThrowStatement[21933-21993]"
    }, {
      "left" : "if (!this.tickLabelFont.equals(font))",
      "right" : "if (!this.tickLabelFont.equals(font))",
      "info" : "IfStatement[22016-22163]:IfStatement[22016-22163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22054-22163]:Block[22054-22163]"
    }, {
      "left" : "this.tickLabelFont = font;",
      "right" : "this.tickLabelFont = font;",
      "info" : "ExpressionStatement[22069-22095]:ExpressionStatement[22069-22095]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[22109-22152]:ExpressionStatement[22109-22152]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22364-22370]:Modifier[22364-22370]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[22371-22376]:SimpleType[22371-22376]"
    }, {
      "left" : "getTickLabelPaint",
      "right" : "getTickLabelPaint",
      "info" : "SimpleName[22377-22394]:SimpleName[22377-22394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22397-22442]:Block[22397-22442]"
    }, {
      "left" : "return this.tickLabelPaint;",
      "right" : "return this.tickLabelPaint;",
      "info" : "ReturnStatement[22408-22435]:ReturnStatement[22408-22435]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22731-22737]:Modifier[22731-22737]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22738-22742]:PrimitiveType[22738-22742]"
    }, {
      "left" : "setTickLabelPaint",
      "right" : "setTickLabelPaint",
      "info" : "SimpleName[22743-22760]:SimpleName[22743-22760]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[22761-22772]:SingleVariableDeclaration[22761-22772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22774-22989]:Block[22774-22989]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[22785-22891]:IfStatement[22785-22891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22804-22891]:Block[22804-22891]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[22819-22880]:ThrowStatement[22819-22880]"
    }, {
      "left" : "this.tickLabelPaint = paint;",
      "right" : "this.tickLabelPaint = paint;",
      "info" : "ExpressionStatement[22901-22929]:ExpressionStatement[22901-22929]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[22939-22982]:ExpressionStatement[22939-22982]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23184-23190]:Modifier[23184-23190]"
    }, {
      "left" : "RectangleInsets",
      "right" : "RectangleInsets",
      "info" : "SimpleType[23191-23206]:SimpleType[23191-23206]"
    }, {
      "left" : "getTickLabelInsets",
      "right" : "getTickLabelInsets",
      "info" : "SimpleName[23207-23225]:SimpleName[23207-23225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23228-23274]:Block[23228-23274]"
    }, {
      "left" : "return this.tickLabelInsets;",
      "right" : "return this.tickLabelInsets;",
      "info" : "ReturnStatement[23239-23267]:ReturnStatement[23239-23267]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23539-23545]:Modifier[23539-23545]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23546-23550]:PrimitiveType[23546-23550]"
    }, {
      "left" : "setTickLabelInsets",
      "right" : "setTickLabelInsets",
      "info" : "SimpleName[23551-23569]:SimpleName[23551-23569]"
    }, {
      "left" : "RectangleInsets insets",
      "right" : "RectangleInsets insets",
      "info" : "SingleVariableDeclaration[23570-23592]:SingleVariableDeclaration[23570-23592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23594-23885]:Block[23594-23885]"
    }, {
      "left" : "if (insets == null)",
      "right" : "if (insets == null)",
      "info" : "IfStatement[23605-23713]:IfStatement[23605-23713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23625-23713]:Block[23625-23713]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'insets' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'insets' argument.\");",
      "info" : "ThrowStatement[23640-23702]:ThrowStatement[23640-23702]"
    }, {
      "left" : "if (!this.tickLabelInsets.equals(insets))",
      "right" : "if (!this.tickLabelInsets.equals(insets))",
      "info" : "IfStatement[23723-23878]:IfStatement[23723-23878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23765-23878]:Block[23765-23878]"
    }, {
      "left" : "this.tickLabelInsets = insets;",
      "right" : "this.tickLabelInsets = insets;",
      "info" : "ExpressionStatement[23780-23810]:ExpressionStatement[23780-23810]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[23824-23867]:ExpressionStatement[23824-23867]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24170-24176]:Modifier[24170-24176]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[24177-24184]:PrimitiveType[24177-24184]"
    }, {
      "left" : "isTickMarksVisible",
      "right" : "isTickMarksVisible",
      "info" : "SimpleName[24185-24203]:SimpleName[24185-24203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24206-24253]:Block[24206-24253]"
    }, {
      "left" : "return this.tickMarksVisible;",
      "right" : "return this.tickMarksVisible;",
      "info" : "ReturnStatement[24217-24246]:ReturnStatement[24217-24246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24515-24521]:Modifier[24515-24521]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24522-24526]:PrimitiveType[24522-24526]"
    }, {
      "left" : "setTickMarksVisible",
      "right" : "setTickMarksVisible",
      "info" : "SimpleName[24527-24546]:SimpleName[24527-24546]"
    }, {
      "left" : "boolean flag",
      "right" : "boolean flag",
      "info" : "SingleVariableDeclaration[24547-24559]:SingleVariableDeclaration[24547-24559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24561-24726]:Block[24561-24726]"
    }, {
      "left" : "if (flag != this.tickMarksVisible)",
      "right" : "if (flag != this.tickMarksVisible)",
      "info" : "IfStatement[24572-24719]:IfStatement[24572-24719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24607-24719]:Block[24607-24719]"
    }, {
      "left" : "this.tickMarksVisible = flag;",
      "right" : "this.tickMarksVisible = flag;",
      "info" : "ExpressionStatement[24622-24651]:ExpressionStatement[24622-24651]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[24665-24708]:ExpressionStatement[24665-24708]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24936-24942]:Modifier[24936-24942]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[24943-24948]:PrimitiveType[24943-24948]"
    }, {
      "left" : "getTickMarkInsideLength",
      "right" : "getTickMarkInsideLength",
      "info" : "SimpleName[24949-24972]:SimpleName[24949-24972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24975-25026]:Block[24975-25026]"
    }, {
      "left" : "return this.tickMarkInsideLength;",
      "right" : "return this.tickMarkInsideLength;",
      "info" : "ReturnStatement[24986-25019]:ReturnStatement[24986-25019]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25271-25277]:Modifier[25271-25277]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25278-25282]:PrimitiveType[25278-25282]"
    }, {
      "left" : "setTickMarkInsideLength",
      "right" : "setTickMarkInsideLength",
      "info" : "SimpleName[25283-25306]:SimpleName[25283-25306]"
    }, {
      "left" : "float length",
      "right" : "float length",
      "info" : "SingleVariableDeclaration[25307-25319]:SingleVariableDeclaration[25307-25319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25321-25427]:Block[25321-25427]"
    }, {
      "left" : "this.tickMarkInsideLength = length;",
      "right" : "this.tickMarkInsideLength = length;",
      "info" : "ExpressionStatement[25332-25367]:ExpressionStatement[25332-25367]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[25377-25420]:ExpressionStatement[25377-25420]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25638-25644]:Modifier[25638-25644]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[25645-25650]:PrimitiveType[25645-25650]"
    }, {
      "left" : "getTickMarkOutsideLength",
      "right" : "getTickMarkOutsideLength",
      "info" : "SimpleName[25651-25675]:SimpleName[25651-25675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25678-25730]:Block[25678-25730]"
    }, {
      "left" : "return this.tickMarkOutsideLength;",
      "right" : "return this.tickMarkOutsideLength;",
      "info" : "ReturnStatement[25689-25723]:ReturnStatement[25689-25723]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25976-25982]:Modifier[25976-25982]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25983-25987]:PrimitiveType[25983-25987]"
    }, {
      "left" : "setTickMarkOutsideLength",
      "right" : "setTickMarkOutsideLength",
      "info" : "SimpleName[25988-26012]:SimpleName[25988-26012]"
    }, {
      "left" : "float length",
      "right" : "float length",
      "info" : "SingleVariableDeclaration[26013-26025]:SingleVariableDeclaration[26013-26025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26027-26134]:Block[26027-26134]"
    }, {
      "left" : "this.tickMarkOutsideLength = length;",
      "right" : "this.tickMarkOutsideLength = length;",
      "info" : "ExpressionStatement[26038-26074]:ExpressionStatement[26038-26074]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[26084-26127]:ExpressionStatement[26084-26127]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26323-26329]:Modifier[26323-26329]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[26330-26336]:SimpleType[26330-26336]"
    }, {
      "left" : "getTickMarkStroke",
      "right" : "getTickMarkStroke",
      "info" : "SimpleName[26337-26354]:SimpleName[26337-26354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26357-26402]:Block[26357-26402]"
    }, {
      "left" : "return this.tickMarkStroke;",
      "right" : "return this.tickMarkStroke;",
      "info" : "ReturnStatement[26368-26395]:ReturnStatement[26368-26395]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26670-26676]:Modifier[26670-26676]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26677-26681]:PrimitiveType[26677-26681]"
    }, {
      "left" : "setTickMarkStroke",
      "right" : "setTickMarkStroke",
      "info" : "SimpleName[26682-26699]:SimpleName[26682-26699]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[26700-26713]:SingleVariableDeclaration[26700-26713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26715-27004]:Block[26715-27004]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[26726-26834]:IfStatement[26726-26834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26746-26834]:Block[26746-26834]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[26761-26823]:ThrowStatement[26761-26823]"
    }, {
      "left" : "if (!this.tickMarkStroke.equals(stroke))",
      "right" : "if (!this.tickMarkStroke.equals(stroke))",
      "info" : "IfStatement[26844-26997]:IfStatement[26844-26997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26885-26997]:Block[26885-26997]"
    }, {
      "left" : "this.tickMarkStroke = stroke;",
      "right" : "this.tickMarkStroke = stroke;",
      "info" : "ExpressionStatement[26900-26929]:ExpressionStatement[26900-26929]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[26943-26986]:ExpressionStatement[26943-26986]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27211-27217]:Modifier[27211-27217]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[27218-27223]:SimpleType[27218-27223]"
    }, {
      "left" : "getTickMarkPaint",
      "right" : "getTickMarkPaint",
      "info" : "SimpleName[27224-27240]:SimpleName[27224-27240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27243-27287]:Block[27243-27287]"
    }, {
      "left" : "return this.tickMarkPaint;",
      "right" : "return this.tickMarkPaint;",
      "info" : "ReturnStatement[27254-27280]:ReturnStatement[27254-27280]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27552-27558]:Modifier[27552-27558]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27559-27563]:PrimitiveType[27559-27563]"
    }, {
      "left" : "setTickMarkPaint",
      "right" : "setTickMarkPaint",
      "info" : "SimpleName[27564-27580]:SimpleName[27564-27580]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[27581-27592]:SingleVariableDeclaration[27581-27592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27594-27808]:Block[27594-27808]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[27605-27711]:IfStatement[27605-27711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27624-27711]:Block[27624-27711]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[27639-27700]:ThrowStatement[27639-27700]"
    }, {
      "left" : "this.tickMarkPaint = paint;",
      "right" : "this.tickMarkPaint = paint;",
      "info" : "ExpressionStatement[27721-27748]:ExpressionStatement[27721-27748]"
    }, {
      "left" : "notifyListeners(new AxisChangeEvent(this));",
      "right" : "notifyListeners(new AxisChangeEvent(this));",
      "info" : "ExpressionStatement[27758-27801]:ExpressionStatement[27758-27801]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28144-28150]:Modifier[28144-28150]"
    }, {
      "left" : "Plot",
      "right" : "Plot",
      "info" : "SimpleType[28151-28155]:SimpleType[28151-28155]"
    }, {
      "left" : "getPlot",
      "right" : "getPlot",
      "info" : "SimpleName[28156-28163]:SimpleName[28156-28163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28166-28201]:Block[28166-28201]"
    }, {
      "left" : "return this.plot;",
      "right" : "return this.plot;",
      "info" : "ReturnStatement[28177-28194]:ReturnStatement[28177-28194]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28458-28464]:Modifier[28458-28464]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28465-28469]:PrimitiveType[28465-28469]"
    }, {
      "left" : "setPlot",
      "right" : "setPlot",
      "info" : "SimpleName[28470-28477]:SimpleName[28470-28477]"
    }, {
      "left" : "Plot plot",
      "right" : "Plot plot",
      "info" : "SingleVariableDeclaration[28478-28487]:SingleVariableDeclaration[28478-28487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28489-28546]:Block[28489-28546]"
    }, {
      "left" : "this.plot = plot;",
      "right" : "this.plot = plot;",
      "info" : "ExpressionStatement[28500-28517]:ExpressionStatement[28500-28517]"
    }, {
      "left" : "configure();",
      "right" : "configure();",
      "info" : "ExpressionStatement[28527-28539]:ExpressionStatement[28527-28539]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28716-28722]:Modifier[28716-28722]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[28723-28729]:PrimitiveType[28723-28729]"
    }, {
      "left" : "getFixedDimension",
      "right" : "getFixedDimension",
      "info" : "SimpleName[28730-28747]:SimpleName[28730-28747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28750-28795]:Block[28750-28795]"
    }, {
      "left" : "return this.fixedDimension;",
      "right" : "return this.fixedDimension;",
      "info" : "ReturnStatement[28761-28788]:ReturnStatement[28761-28788]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29314-29320]:Modifier[29314-29320]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29321-29325]:PrimitiveType[29321-29325]"
    }, {
      "left" : "setFixedDimension",
      "right" : "setFixedDimension",
      "info" : "SimpleName[29326-29343]:SimpleName[29326-29343]"
    }, {
      "left" : "double dimension",
      "right" : "double dimension",
      "info" : "SingleVariableDeclaration[29344-29360]:SingleVariableDeclaration[29344-29360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29362-29412]:Block[29362-29412]"
    }, {
      "left" : "this.fixedDimension = dimension;",
      "right" : "this.fixedDimension = dimension;",
      "info" : "ExpressionStatement[29373-29405]:ExpressionStatement[29373-29405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29587-29593]:Modifier[29587-29593]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[29594-29602]:Modifier[29594-29602]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29603-29607]:PrimitiveType[29603-29607]"
    }, {
      "left" : "configure",
      "right" : "configure",
      "info" : "SimpleName[29608-29617]:SimpleName[29608-29617]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30134-30140]:Modifier[30134-30140]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[30141-30149]:Modifier[30141-30149]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[30150-30159]:SimpleType[30150-30159]"
    }, {
      "left" : "reserveSpace",
      "right" : "reserveSpace",
      "info" : "SimpleName[30160-30172]:SimpleName[30160-30172]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[30173-30186]:SingleVariableDeclaration[30173-30186]"
    }, {
      "left" : "Plot plot",
      "right" : "Plot plot",
      "info" : "SingleVariableDeclaration[30188-30197]:SingleVariableDeclaration[30188-30197]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[30244-30264]:SingleVariableDeclaration[30244-30264]"
    }, {
      "left" : "RectangleEdge edge",
      "right" : "RectangleEdge edge",
      "info" : "SingleVariableDeclaration[30311-30329]:SingleVariableDeclaration[30311-30329]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[30376-30391]:SingleVariableDeclaration[30376-30391]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31093-31099]:Modifier[31093-31099]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[31100-31108]:Modifier[31100-31108]"
    }, {
      "left" : "AxisState",
      "right" : "AxisState",
      "info" : "SimpleType[31109-31118]:SimpleType[31109-31118]"
    }, {
      "left" : "draw",
      "right" : "draw",
      "info" : "SimpleName[31119-31123]:SimpleName[31119-31123]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[31124-31137]:SingleVariableDeclaration[31124-31137]"
    }, {
      "left" : "double cursor",
      "right" : "double cursor",
      "info" : "SingleVariableDeclaration[31176-31189]:SingleVariableDeclaration[31176-31189]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[31227-31247]:SingleVariableDeclaration[31227-31247]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[31286-31306]:SingleVariableDeclaration[31286-31306]"
    }, {
      "left" : "RectangleEdge edge",
      "right" : "RectangleEdge edge",
      "info" : "SingleVariableDeclaration[31344-31362]:SingleVariableDeclaration[31344-31362]"
    }, {
      "left" : "PlotRenderingInfo plotState",
      "right" : "PlotRenderingInfo plotState",
      "info" : "SingleVariableDeclaration[31400-31427]:SingleVariableDeclaration[31400-31427]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31822-31828]:Modifier[31822-31828]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[31829-31837]:Modifier[31829-31837]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[31838-31842]:SimpleType[31838-31842]"
    }, {
      "left" : "refreshTicks",
      "right" : "refreshTicks",
      "info" : "SimpleName[31843-31855]:SimpleName[31843-31855]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[31856-31869]:SingleVariableDeclaration[31856-31869]"
    }, {
      "left" : "AxisState state",
      "right" : "AxisState state",
      "info" : "SingleVariableDeclaration[31911-31926]:SingleVariableDeclaration[31911-31926]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[31967-31987]:SingleVariableDeclaration[31967-31987]"
    }, {
      "left" : "RectangleEdge edge",
      "right" : "RectangleEdge edge",
      "info" : "SingleVariableDeclaration[32028-32046]:SingleVariableDeclaration[32028-32046]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32277-32283]:Modifier[32277-32283]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32284-32288]:PrimitiveType[32284-32288]"
    }, {
      "left" : "addChangeListener",
      "right" : "addChangeListener",
      "info" : "SimpleName[32289-32306]:SimpleName[32289-32306]"
    }, {
      "left" : "AxisChangeListener listener",
      "right" : "AxisChangeListener listener",
      "info" : "SingleVariableDeclaration[32307-32334]:SingleVariableDeclaration[32307-32334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32336-32412]:Block[32336-32412]"
    }, {
      "left" : "this.listenerList.add(AxisChangeListener.class, listener);",
      "right" : "this.listenerList.add(AxisChangeListener.class, listener);",
      "info" : "ExpressionStatement[32347-32405]:ExpressionStatement[32347-32405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32629-32635]:Modifier[32629-32635]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32636-32640]:PrimitiveType[32636-32640]"
    }, {
      "left" : "removeChangeListener",
      "right" : "removeChangeListener",
      "info" : "SimpleName[32641-32661]:SimpleName[32641-32661]"
    }, {
      "left" : "AxisChangeListener listener",
      "right" : "AxisChangeListener listener",
      "info" : "SingleVariableDeclaration[32662-32689]:SingleVariableDeclaration[32662-32689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32691-32770]:Block[32691-32770]"
    }, {
      "left" : "this.listenerList.remove(AxisChangeListener.class, listener);",
      "right" : "this.listenerList.remove(AxisChangeListener.class, listener);",
      "info" : "ExpressionStatement[32702-32763]:ExpressionStatement[32702-32763]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33099-33105]:Modifier[33099-33105]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[33106-33113]:PrimitiveType[33106-33113]"
    }, {
      "left" : "hasListener",
      "right" : "hasListener",
      "info" : "SimpleName[33114-33125]:SimpleName[33114-33125]"
    }, {
      "left" : "EventListener listener",
      "right" : "EventListener listener",
      "info" : "SingleVariableDeclaration[33126-33148]:SingleVariableDeclaration[33126-33148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33150-33272]:Block[33150-33272]"
    }, {
      "left" : "List list = Arrays.asList(this.listenerList.getListenerList());",
      "right" : "List list = Arrays.asList(this.listenerList.getListenerList());",
      "info" : "VariableDeclarationStatement[33161-33224]:VariableDeclarationStatement[33161-33224]"
    }, {
      "left" : "return list.contains(listener);",
      "right" : "return list.contains(listener);",
      "info" : "ReturnStatement[33234-33265]:ReturnStatement[33234-33265]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[33510-33519]:Modifier[33510-33519]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33520-33524]:PrimitiveType[33520-33524]"
    }, {
      "left" : "notifyListeners",
      "right" : "notifyListeners",
      "info" : "SimpleName[33525-33540]:SimpleName[33525-33540]"
    }, {
      "left" : "AxisChangeEvent event",
      "right" : "AxisChangeEvent event",
      "info" : "SingleVariableDeclaration[33541-33562]:SingleVariableDeclaration[33541-33562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33564-33869]:Block[33564-33869]"
    }, {
      "left" : "Object[] listeners = this.listenerList.getListenerList();",
      "right" : "Object[] listeners = this.listenerList.getListenerList();",
      "info" : "VariableDeclarationStatement[33577-33634]:VariableDeclarationStatement[33577-33634]"
    }, {
      "left" : "for (int i = listeners.length - 2; i >= 0; i -= 2)",
      "right" : "for (int i = listeners.length - 2; i >= 0; i -= 2)",
      "info" : "ForStatement[33644-33860]:ForStatement[33644-33860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33695-33860]:Block[33695-33860]"
    }, {
      "left" : "if (listeners[i] == AxisChangeListener.class)",
      "right" : "if (listeners[i] == AxisChangeListener.class)",
      "info" : "IfStatement[33710-33849]:IfStatement[33710-33849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33756-33849]:Block[33756-33849]"
    }, {
      "left" : "((AxisChangeListener) listeners[i + 1]).axisChanged(event);",
      "right" : "((AxisChangeListener) listeners[i + 1]).axisChanged(event);",
      "info" : "ExpressionStatement[33775-33834]:ExpressionStatement[33775-33834]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34233-34242]:Modifier[34233-34242]"
    }, {
      "left" : "Rectangle2D",
      "right" : "Rectangle2D",
      "info" : "SimpleType[34243-34254]:SimpleType[34243-34254]"
    }, {
      "left" : "getLabelEnclosure",
      "right" : "getLabelEnclosure",
      "info" : "SimpleName[34255-34272]:SimpleName[34255-34272]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[34273-34286]:SingleVariableDeclaration[34273-34286]"
    }, {
      "left" : "RectangleEdge edge",
      "right" : "RectangleEdge edge",
      "info" : "SingleVariableDeclaration[34288-34306]:SingleVariableDeclaration[34288-34306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34308-35286]:Block[34308-35286]"
    }, {
      "left" : "Rectangle2D result = new Rectangle2D.Double();",
      "right" : "Rectangle2D result = new Rectangle2D.Double();",
      "info" : "VariableDeclarationStatement[34321-34367]:VariableDeclarationStatement[34321-34367]"
    }, {
      "left" : "String axisLabel = getLabel();",
      "right" : "String axisLabel = getLabel();",
      "info" : "VariableDeclarationStatement[34377-34407]:VariableDeclarationStatement[34377-34407]"
    }, {
      "left" : "if (axisLabel != null && !axisLabel.equals(\"\"))",
      "right" : "if (axisLabel != null && !axisLabel.equals(\"\"))",
      "info" : "IfStatement[34417-35251]:IfStatement[34417-35251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34465-35251]:Block[34465-35251]"
    }, {
      "left" : "FontMetrics fm = g2.getFontMetrics(getLabelFont());",
      "right" : "FontMetrics fm = g2.getFontMetrics(getLabelFont());",
      "info" : "VariableDeclarationStatement[34480-34531]:VariableDeclarationStatement[34480-34531]"
    }, {
      "left" : "Rectangle2D bounds = TextUtilities.getTextBounds(axisLabel, g2, fm);",
      "right" : "Rectangle2D bounds = TextUtilities.getTextBounds(axisLabel, g2, fm);",
      "info" : "VariableDeclarationStatement[34545-34613]:VariableDeclarationStatement[34545-34613]"
    }, {
      "left" : "RectangleInsets insets = getLabelInsets();",
      "right" : "RectangleInsets insets = getLabelInsets();",
      "info" : "VariableDeclarationStatement[34627-34669]:VariableDeclarationStatement[34627-34669]"
    }, {
      "left" : "bounds = insets.createOutsetRectangle(bounds);",
      "right" : "bounds = insets.createOutsetRectangle(bounds);",
      "info" : "ExpressionStatement[34683-34729]:ExpressionStatement[34683-34729]"
    }, {
      "left" : "double angle = getLabelAngle();",
      "right" : "double angle = getLabelAngle();",
      "info" : "VariableDeclarationStatement[34743-34774]:VariableDeclarationStatement[34743-34774]"
    }, {
      "left" : "if (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT)",
      "right" : "if (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT)",
      "info" : "IfStatement[34788-34915]:IfStatement[34788-34915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34851-34915]:Block[34851-34915]"
    }, {
      "left" : "angle = angle - Math.PI / 2.0;",
      "right" : "angle = angle - Math.PI / 2.0;",
      "info" : "ExpressionStatement[34870-34900]:ExpressionStatement[34870-34900]"
    }, {
      "left" : "double x = bounds.getCenterX();",
      "right" : "double x = bounds.getCenterX();",
      "info" : "VariableDeclarationStatement[34929-34960]:VariableDeclarationStatement[34929-34960]"
    }, {
      "left" : "double y = bounds.getCenterY();",
      "right" : "double y = bounds.getCenterY();",
      "info" : "VariableDeclarationStatement[34974-35005]:VariableDeclarationStatement[34974-35005]"
    }, {
      "left" : "AffineTransform transformer \r\n                = AffineTransform.getRotateInstance(angle, x, y);",
      "right" : "AffineTransform transformer \r\n                = AffineTransform.getRotateInstance(angle, x, y);",
      "info" : "VariableDeclarationStatement[35019-35114]:VariableDeclarationStatement[35019-35114]"
    }, {
      "left" : "Shape labelBounds = transformer.createTransformedShape(bounds);",
      "right" : "Shape labelBounds = transformer.createTransformedShape(bounds);",
      "info" : "VariableDeclarationStatement[35128-35191]:VariableDeclarationStatement[35128-35191]"
    }, {
      "left" : "result = labelBounds.getBounds2D();",
      "right" : "result = labelBounds.getBounds2D();",
      "info" : "ExpressionStatement[35205-35240]:ExpressionStatement[35205-35240]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[35263-35277]:ReturnStatement[35263-35277]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[35762-35771]:Modifier[35762-35771]"
    }, {
      "left" : "AxisState",
      "right" : "AxisState",
      "info" : "SimpleType[35772-35781]:SimpleType[35772-35781]"
    }, {
      "left" : "drawLabel",
      "right" : "drawLabel",
      "info" : "SimpleName[35782-35791]:SimpleName[35782-35791]"
    }, {
      "left" : "String label",
      "right" : "String label",
      "info" : "SingleVariableDeclaration[35792-35804]:SingleVariableDeclaration[35792-35804]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[35806-35819]:SingleVariableDeclaration[35806-35819]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[35835-35855]:SingleVariableDeclaration[35835-35855]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[35857-35877]:SingleVariableDeclaration[35857-35877]"
    }, {
      "left" : "RectangleEdge edge",
      "right" : "RectangleEdge edge",
      "info" : "SingleVariableDeclaration[35879-35897]:SingleVariableDeclaration[35879-35897]"
    }, {
      "left" : "AxisState state",
      "right" : "AxisState state",
      "info" : "SingleVariableDeclaration[35913-35928]:SingleVariableDeclaration[35913-35928]"
    }, {
      "left" : "PlotRenderingInfo plotState",
      "right" : "PlotRenderingInfo plotState",
      "info" : "SingleVariableDeclaration[35930-35957]:SingleVariableDeclaration[35930-35957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35959-41316]:Block[35959-41365]"
    }, {
      "left" : "if (state == null)",
      "right" : "if (state == null)",
      "info" : "IfStatement[36046-36152]:IfStatement[36046-36152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36065-36152]:Block[36065-36152]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'state' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'state' argument.\");",
      "info" : "ThrowStatement[36080-36141]:ThrowStatement[36080-36141]"
    }, {
      "left" : "if ((label == null) || (label.equals(\"\")))",
      "right" : "if ((label == null) || (label.equals(\"\")))",
      "info" : "IfStatement[36172-36254]:IfStatement[36172-36254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36215-36254]:Block[36215-36254]"
    }, {
      "left" : "return state;",
      "right" : "return state;",
      "info" : "ReturnStatement[36230-36243]:ReturnStatement[36230-36243]"
    }, {
      "left" : "Font font = getLabelFont();",
      "right" : "Font font = getLabelFont();",
      "info" : "VariableDeclarationStatement[36266-36293]:VariableDeclarationStatement[36266-36293]"
    }, {
      "left" : "RectangleInsets insets = getLabelInsets();",
      "right" : "RectangleInsets insets = getLabelInsets();",
      "info" : "VariableDeclarationStatement[36303-36345]:VariableDeclarationStatement[36303-36345]"
    }, {
      "left" : "g2.setFont(font);",
      "right" : "g2.setFont(font);",
      "info" : "ExpressionStatement[36355-36372]:ExpressionStatement[36355-36372]"
    }, {
      "left" : "g2.setPaint(getLabelPaint());",
      "right" : "g2.setPaint(getLabelPaint());",
      "info" : "ExpressionStatement[36382-36411]:ExpressionStatement[36382-36411]"
    }, {
      "left" : "FontMetrics fm = g2.getFontMetrics();",
      "right" : "FontMetrics fm = g2.getFontMetrics();",
      "info" : "VariableDeclarationStatement[36421-36458]:VariableDeclarationStatement[36421-36458]"
    }, {
      "left" : "Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);",
      "right" : "Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);",
      "info" : "VariableDeclarationStatement[36468-36537]:VariableDeclarationStatement[36468-36537]"
    }, {
      "left" : "Shape hotspot = null;",
      "right" : "Shape hotspot = null;",
      "info" : "VariableDeclarationStatement[36547-36568]:VariableDeclarationStatement[36547-36568]"
    }, {
      "left" : "if (edge == RectangleEdge.TOP)",
      "right" : "if (edge == RectangleEdge.TOP)",
      "info" : "IfStatement[36588-40889]:IfStatement[36588-40889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36619-37609]:Block[36619-37609]"
    }, {
      "left" : "AffineTransform t = AffineTransform.getRotateInstance(\r\n                    getLabelAngle(), labelBounds.getCenterX(), \r\n                    labelBounds.getCenterY());",
      "right" : "AffineTransform t = AffineTransform.getRotateInstance(\r\n                    getLabelAngle(), labelBounds.getCenterX(), \r\n                    labelBounds.getCenterY());",
      "info" : "VariableDeclarationStatement[36634-36801]:VariableDeclarationStatement[36634-36801]"
    }, {
      "left" : "Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);",
      "right" : "Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);",
      "info" : "VariableDeclarationStatement[36815-36880]:VariableDeclarationStatement[36815-36880]"
    }, {
      "left" : "labelBounds = rotatedLabelBounds.getBounds2D();",
      "right" : "labelBounds = rotatedLabelBounds.getBounds2D();",
      "info" : "ExpressionStatement[36894-36941]:ExpressionStatement[36894-36941]"
    }, {
      "left" : "float w = (float) labelBounds.getWidth();",
      "right" : "float w = (float) labelBounds.getWidth();",
      "info" : "VariableDeclarationStatement[36955-36996]:VariableDeclarationStatement[36955-36996]"
    }, {
      "left" : "float h = (float) labelBounds.getHeight();",
      "right" : "float h = (float) labelBounds.getHeight();",
      "info" : "VariableDeclarationStatement[37010-37052]:VariableDeclarationStatement[37010-37052]"
    }, {
      "left" : "float labelx = (float) dataArea.getCenterX();",
      "right" : "float labelx = (float) dataArea.getCenterX();",
      "info" : "VariableDeclarationStatement[37066-37111]:VariableDeclarationStatement[37066-37111]"
    }, {
      "left" : "float labely = (float) (state.getCursor() - insets.getBottom() \r\n                    - h / 2.0);",
      "right" : "float labely = (float) (state.getCursor() - insets.getBottom() \r\n                    - h / 2.0);",
      "info" : "VariableDeclarationStatement[37125-37221]:VariableDeclarationStatement[37125-37221]"
    }, {
      "left" : "TextUtilities.drawRotatedString(label, g2, labelx, labely, \r\n                    TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);",
      "right" : "TextUtilities.drawRotatedString(label, g2, labelx, labely, \r\n                    TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);",
      "info" : "ExpressionStatement[37235-37371]:ExpressionStatement[37235-37371]"
    }, {
      "left" : "hotspot = new Rectangle2D.Float(labelx - w / 2.0f, \r\n                    labely - h / 2.0f, w, h);",
      "right" : "hotspot = new Rectangle2D.Float(labelx - w / 2.0f, \r\n                    labely - h / 2.0f, w, h);",
      "info" : "ExpressionStatement[37385-37483]:ExpressionStatement[37385-37483]"
    }, {
      "left" : "state.cursorUp(insets.getTop() + labelBounds.getHeight() \r\n                    + insets.getBottom());",
      "right" : "state.cursorUp(insets.getTop() + labelBounds.getHeight() \r\n                    + insets.getBottom());",
      "info" : "ExpressionStatement[37497-37598]:ExpressionStatement[37497-37598]"
    }, {
      "left" : "if (edge == RectangleEdge.BOTTOM)",
      "right" : "if (edge == RectangleEdge.BOTTOM)",
      "info" : "IfStatement[37624-40889]:IfStatement[37624-40889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37658-38647]:Block[37658-38647]"
    }, {
      "left" : "AffineTransform t = AffineTransform.getRotateInstance(\r\n                    getLabelAngle(), labelBounds.getCenterX(), \r\n                    labelBounds.getCenterY());",
      "right" : "AffineTransform t = AffineTransform.getRotateInstance(\r\n                    getLabelAngle(), labelBounds.getCenterX(), \r\n                    labelBounds.getCenterY());",
      "info" : "VariableDeclarationStatement[37673-37840]:VariableDeclarationStatement[37673-37840]"
    }, {
      "left" : "Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);",
      "right" : "Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);",
      "info" : "VariableDeclarationStatement[37854-37919]:VariableDeclarationStatement[37854-37919]"
    }, {
      "left" : "labelBounds = rotatedLabelBounds.getBounds2D();",
      "right" : "labelBounds = rotatedLabelBounds.getBounds2D();",
      "info" : "ExpressionStatement[37933-37980]:ExpressionStatement[37933-37980]"
    }, {
      "left" : "float w = (float) labelBounds.getWidth();",
      "right" : "float w = (float) labelBounds.getWidth();",
      "info" : "VariableDeclarationStatement[37994-38035]:VariableDeclarationStatement[37994-38035]"
    }, {
      "left" : "float h = (float) labelBounds.getHeight();",
      "right" : "float h = (float) labelBounds.getHeight();",
      "info" : "VariableDeclarationStatement[38049-38091]:VariableDeclarationStatement[38049-38091]"
    }, {
      "left" : "float labelx = (float) dataArea.getCenterX();",
      "right" : "float labelx = (float) dataArea.getCenterX();",
      "info" : "VariableDeclarationStatement[38105-38150]:VariableDeclarationStatement[38105-38150]"
    }, {
      "left" : "float labely = (float) (state.getCursor() + insets.getTop() \r\n                    + h / 2.0);",
      "right" : "float labely = (float) (state.getCursor() + insets.getTop() \r\n                    + h / 2.0);",
      "info" : "VariableDeclarationStatement[38164-38257]:VariableDeclarationStatement[38164-38257]"
    }, {
      "left" : "TextUtilities.drawRotatedString(label, g2, labelx, labely, \r\n                    TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);",
      "right" : "TextUtilities.drawRotatedString(label, g2, labelx, labely, \r\n                    TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);",
      "info" : "ExpressionStatement[38271-38407]:ExpressionStatement[38271-38407]"
    }, {
      "left" : "hotspot = new Rectangle2D.Float(labelx - w / 2.0f, \r\n                    labely - h / 2.0f, w, h);",
      "right" : "hotspot = new Rectangle2D.Float(labelx - w / 2.0f, \r\n                    labely - h / 2.0f, w, h);",
      "info" : "ExpressionStatement[38421-38519]:ExpressionStatement[38421-38519]"
    }, {
      "left" : "state.cursorDown(insets.getTop() + labelBounds.getHeight() \r\n                    + insets.getBottom());",
      "right" : "state.cursorDown(insets.getTop() + labelBounds.getHeight() \r\n                    + insets.getBottom());",
      "info" : "ExpressionStatement[38533-38636]:ExpressionStatement[38533-38636]"
    }, {
      "left" : "if (edge == RectangleEdge.LEFT)",
      "right" : "if (edge == RectangleEdge.LEFT)",
      "info" : "IfStatement[38662-40889]:IfStatement[38662-40889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38694-39738]:Block[38694-39738]"
    }, {
      "left" : "AffineTransform t = AffineTransform.getRotateInstance(\r\n                    getLabelAngle() - Math.PI / 2.0, labelBounds.getCenterX(), \r\n                    labelBounds.getCenterY());",
      "right" : "AffineTransform t = AffineTransform.getRotateInstance(\r\n                    getLabelAngle() - Math.PI / 2.0, labelBounds.getCenterX(), \r\n                    labelBounds.getCenterY());",
      "info" : "VariableDeclarationStatement[38709-38892]:VariableDeclarationStatement[38709-38892]"
    }, {
      "left" : "Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);",
      "right" : "Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);",
      "info" : "VariableDeclarationStatement[38906-38971]:VariableDeclarationStatement[38906-38971]"
    }, {
      "left" : "labelBounds = rotatedLabelBounds.getBounds2D();",
      "right" : "labelBounds = rotatedLabelBounds.getBounds2D();",
      "info" : "ExpressionStatement[38985-39032]:ExpressionStatement[38985-39032]"
    }, {
      "left" : "float w = (float) labelBounds.getWidth();",
      "right" : "float w = (float) labelBounds.getWidth();",
      "info" : "VariableDeclarationStatement[39046-39087]:VariableDeclarationStatement[39046-39087]"
    }, {
      "left" : "float h = (float) labelBounds.getHeight();",
      "right" : "float h = (float) labelBounds.getHeight();",
      "info" : "VariableDeclarationStatement[39101-39143]:VariableDeclarationStatement[39101-39143]"
    }, {
      "left" : "float labelx = (float) (state.getCursor() - insets.getRight() \r\n                    - w / 2.0);",
      "right" : "float labelx = (float) (state.getCursor() - insets.getRight() \r\n                    - w / 2.0);",
      "info" : "VariableDeclarationStatement[39157-39252]:VariableDeclarationStatement[39157-39252]"
    }, {
      "left" : "float labely = (float) dataArea.getCenterY();",
      "right" : "float labely = (float) dataArea.getCenterY();",
      "info" : "VariableDeclarationStatement[39266-39311]:VariableDeclarationStatement[39266-39311]"
    }, {
      "left" : "TextUtilities.drawRotatedString(label, g2, labelx, labely, \r\n                    TextAnchor.CENTER, getLabelAngle() - Math.PI / 2.0, \r\n                    TextAnchor.CENTER);",
      "right" : "TextUtilities.drawRotatedString(label, g2, labelx, labely, \r\n                    TextAnchor.CENTER, getLabelAngle() - Math.PI / 2.0, \r\n                    TextAnchor.CENTER);",
      "info" : "ExpressionStatement[39325-39499]:ExpressionStatement[39325-39499]"
    }, {
      "left" : "hotspot = new Rectangle2D.Float(labelx - w / 2.0f, \r\n                    labely - h / 2.0f, w, h);",
      "right" : "hotspot = new Rectangle2D.Float(labelx - w / 2.0f, \r\n                    labely - h / 2.0f, w, h);",
      "info" : "ExpressionStatement[39513-39611]:ExpressionStatement[39513-39611]"
    }, {
      "left" : "state.cursorLeft(insets.getLeft() + labelBounds.getWidth() \r\n                    + insets.getRight());",
      "right" : "state.cursorLeft(insets.getLeft() + labelBounds.getWidth() \r\n                    + insets.getRight());",
      "info" : "ExpressionStatement[39625-39727]:ExpressionStatement[39625-39727]"
    }, {
      "left" : "if (edge == RectangleEdge.RIGHT)",
      "right" : "if (edge == RectangleEdge.RIGHT)",
      "info" : "IfStatement[39753-40889]:IfStatement[39753-40889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39786-40889]:Block[39786-40889]"
    }, {
      "left" : "AffineTransform t = AffineTransform.getRotateInstance(\r\n                    getLabelAngle() + Math.PI / 2.0, \r\n                    labelBounds.getCenterX(), labelBounds.getCenterY());",
      "right" : "AffineTransform t = AffineTransform.getRotateInstance(\r\n                    getLabelAngle() + Math.PI / 2.0, \r\n                    labelBounds.getCenterX(), labelBounds.getCenterY());",
      "info" : "VariableDeclarationStatement[39803-39986]:VariableDeclarationStatement[39803-39986]"
    }, {
      "left" : "Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);",
      "right" : "Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);",
      "info" : "VariableDeclarationStatement[40000-40065]:VariableDeclarationStatement[40000-40065]"
    }, {
      "left" : "labelBounds = rotatedLabelBounds.getBounds2D();",
      "right" : "labelBounds = rotatedLabelBounds.getBounds2D();",
      "info" : "ExpressionStatement[40079-40126]:ExpressionStatement[40079-40126]"
    }, {
      "left" : "float w = (float) labelBounds.getWidth();",
      "right" : "float w = (float) labelBounds.getWidth();",
      "info" : "VariableDeclarationStatement[40140-40181]:VariableDeclarationStatement[40140-40181]"
    }, {
      "left" : "float h = (float) labelBounds.getHeight();",
      "right" : "float h = (float) labelBounds.getHeight();",
      "info" : "VariableDeclarationStatement[40195-40237]:VariableDeclarationStatement[40195-40237]"
    }, {
      "left" : "float labelx = (float) (state.getCursor() \r\n                            + insets.getLeft() + w / 2.0);",
      "right" : "float labelx = (float) (state.getCursor() \r\n                            + insets.getLeft() + w / 2.0);",
      "info" : "VariableDeclarationStatement[40251-40353]:VariableDeclarationStatement[40251-40353]"
    }, {
      "left" : "float labely = (float) (dataArea.getY() + dataArea.getHeight() \r\n                    / 2.0);",
      "right" : "float labely = (float) (dataArea.getY() + dataArea.getHeight() \r\n                    / 2.0);",
      "info" : "VariableDeclarationStatement[40367-40459]:VariableDeclarationStatement[40367-40459]"
    }, {
      "left" : "TextUtilities.drawRotatedString(label, g2, labelx, labely, \r\n                    TextAnchor.CENTER, getLabelAngle() + Math.PI / 2.0, \r\n                    TextAnchor.CENTER);",
      "right" : "TextUtilities.drawRotatedString(label, g2, labelx, labely, \r\n                    TextAnchor.CENTER, getLabelAngle() + Math.PI / 2.0, \r\n                    TextAnchor.CENTER);",
      "info" : "ExpressionStatement[40473-40647]:ExpressionStatement[40473-40647]"
    }, {
      "left" : "hotspot = new Rectangle2D.Float(labelx - w / 2.0f, \r\n                    labely - h / 2.0f, w, h);",
      "right" : "hotspot = new Rectangle2D.Float(labelx - w / 2.0f, \r\n                    labely - h / 2.0f, w, h);",
      "info" : "ExpressionStatement[40661-40759]:ExpressionStatement[40661-40759]"
    }, {
      "left" : "state.cursorRight(insets.getLeft() + labelBounds.getWidth() \r\n                    + insets.getRight());",
      "right" : "state.cursorRight(insets.getLeft() + labelBounds.getWidth() \r\n                    + insets.getRight());",
      "info" : "ExpressionStatement[40773-40876]:ExpressionStatement[40773-40876]"
    }, {
      "left" : "if (plotState != null && hotspot != null)",
      "right" : "if (plotState != null && hotspot != null)",
      "info" : "IfStatement[40899-41284]:IfStatement[40899-41333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40941-41284]:Block[40941-41333]"
    }, {
      "left" : "ChartRenderingInfo owner = plotState.getOwner();",
      "right" : "ChartRenderingInfo owner = plotState.getOwner();",
      "info" : "VariableDeclarationStatement[40956-41004]:VariableDeclarationStatement[40956-41004]"
    }, {
      "left" : "EntityCollection entities = owner.getEntityCollection();",
      "right" : "EntityCollection entities = owner.getEntityCollection();",
      "info" : "VariableDeclarationStatement[41022-41078]:VariableDeclarationStatement[41056-41112]"
    }, {
      "left" : "if (entities != null)",
      "right" : "if (entities != null)",
      "info" : "IfStatement[41096-41273]:IfStatement[41130-41307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41118-41273]:Block[41152-41307]"
    }, {
      "left" : "entities.add(new AxisLabelEntity(this, hotspot, \r\n                            this.labelToolTip, this.labelURL));",
      "right" : "entities.add(new AxisLabelEntity(this, hotspot, \r\n                            this.labelToolTip, this.labelURL));",
      "info" : "ExpressionStatement[41141-41254]:ExpressionStatement[41175-41288]"
    }, {
      "left" : "return state;",
      "right" : "return state;",
      "info" : "ReturnStatement[41294-41307]:ReturnStatement[41343-41356]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[41574-41583]:Modifier[41623-41632]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[41584-41588]:PrimitiveType[41633-41637]"
    }, {
      "left" : "drawAxisLine",
      "right" : "drawAxisLine",
      "info" : "SimpleName[41589-41601]:SimpleName[41638-41650]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[41602-41615]:SingleVariableDeclaration[41651-41664]"
    }, {
      "left" : "double cursor",
      "right" : "double cursor",
      "info" : "SingleVariableDeclaration[41617-41630]:SingleVariableDeclaration[41666-41679]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[41645-41665]:SingleVariableDeclaration[41694-41714]"
    }, {
      "left" : "RectangleEdge edge",
      "right" : "RectangleEdge edge",
      "info" : "SingleVariableDeclaration[41667-41685]:SingleVariableDeclaration[41716-41734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41687-42575]:Block[41736-42624]"
    }, {
      "left" : "Line2D axisLine = null;",
      "right" : "Line2D axisLine = null;",
      "info" : "VariableDeclarationStatement[41708-41731]:VariableDeclarationStatement[41757-41780]"
    }, {
      "left" : "if (edge == RectangleEdge.TOP)",
      "right" : "if (edge == RectangleEdge.TOP)",
      "info" : "IfStatement[41741-42444]:IfStatement[41790-42493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41772-41904]:Block[41821-41953]"
    }, {
      "left" : "axisLine = new Line2D.Double(dataArea.getX(), cursor, \r\n                    dataArea.getMaxX(), cursor);",
      "right" : "axisLine = new Line2D.Double(dataArea.getX(), cursor, \r\n                    dataArea.getMaxX(), cursor);",
      "info" : "ExpressionStatement[41787-41891]:ExpressionStatement[41836-41940]"
    }, {
      "left" : "if (edge == RectangleEdge.BOTTOM)",
      "right" : "if (edge == RectangleEdge.BOTTOM)",
      "info" : "IfStatement[41919-42444]:IfStatement[41968-42493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41953-42085]:Block[42002-42134]"
    }, {
      "left" : "axisLine = new Line2D.Double(dataArea.getX(), cursor, \r\n                    dataArea.getMaxX(), cursor);",
      "right" : "axisLine = new Line2D.Double(dataArea.getX(), cursor, \r\n                    dataArea.getMaxX(), cursor);",
      "info" : "ExpressionStatement[41968-42072]:ExpressionStatement[42017-42121]"
    }, {
      "left" : "if (edge == RectangleEdge.LEFT)",
      "right" : "if (edge == RectangleEdge.LEFT)",
      "info" : "IfStatement[42100-42444]:IfStatement[42149-42493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42132-42264]:Block[42181-42313]"
    }, {
      "left" : "axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, \r\n                    dataArea.getMaxY());",
      "right" : "axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, \r\n                    dataArea.getMaxY());",
      "info" : "ExpressionStatement[42147-42251]:ExpressionStatement[42196-42300]"
    }, {
      "left" : "if (edge == RectangleEdge.RIGHT)",
      "right" : "if (edge == RectangleEdge.RIGHT)",
      "info" : "IfStatement[42279-42444]:IfStatement[42328-42493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42312-42444]:Block[42361-42493]"
    }, {
      "left" : "axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, \r\n                    dataArea.getMaxY());",
      "right" : "axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, \r\n                    dataArea.getMaxY());",
      "info" : "ExpressionStatement[42327-42431]:ExpressionStatement[42376-42480]"
    }, {
      "left" : "g2.setPaint(this.axisLinePaint);",
      "right" : "g2.setPaint(this.axisLinePaint);",
      "info" : "ExpressionStatement[42454-42486]:ExpressionStatement[42503-42535]"
    }, {
      "left" : "g2.setStroke(this.axisLineStroke);",
      "right" : "g2.setStroke(this.axisLineStroke);",
      "info" : "ExpressionStatement[42496-42530]:ExpressionStatement[42545-42579]"
    }, {
      "left" : "g2.draw(axisLine);",
      "right" : "g2.draw(axisLine);",
      "info" : "ExpressionStatement[42540-42558]:ExpressionStatement[42589-42607]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42797-42803]:Modifier[42846-42852]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[42804-42810]:SimpleType[42853-42859]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[42811-42816]:SimpleName[42860-42865]"
    }, {
      "left" : "CloneNotSupportedException",
      "right" : "CloneNotSupportedException",
      "info" : "SimpleType[42826-42852]:SimpleType[42875-42901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42853-43101]:Block[42902-43150]"
    }, {
      "left" : "Axis clone = (Axis) super.clone();",
      "right" : "Axis clone = (Axis) super.clone();",
      "info" : "VariableDeclarationStatement[42864-42898]:VariableDeclarationStatement[42913-42947]"
    }, {
      "left" : "clone.plot = null;",
      "right" : "clone.plot = null;",
      "info" : "ExpressionStatement[42990-43008]:ExpressionStatement[43039-43057]"
    }, {
      "left" : "clone.listenerList = new EventListenerList();",
      "right" : "clone.listenerList = new EventListenerList();",
      "info" : "ExpressionStatement[43026-43071]:ExpressionStatement[43075-43120]"
    }, {
      "left" : "return clone;",
      "right" : "return clone;",
      "info" : "ReturnStatement[43081-43094]:ReturnStatement[43130-43143]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43324-43330]:Modifier[43373-43379]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[43331-43338]:PrimitiveType[43380-43387]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[43339-43345]:SimpleName[43388-43394]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[43346-43356]:SingleVariableDeclaration[43395-43405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43358-45896]:Block[43407-45945]"
    }, {
      "left" : "if (obj == this)",
      "right" : "if (obj == this)",
      "info" : "IfStatement[43369-43424]:IfStatement[43418-43473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43386-43424]:Block[43435-43473]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[43401-43413]:ReturnStatement[43450-43462]"
    }, {
      "left" : "if (!(obj instanceof Axis))",
      "right" : "if (!(obj instanceof Axis))",
      "info" : "IfStatement[43434-43501]:IfStatement[43483-43550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43462-43501]:Block[43511-43550]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43477-43490]:ReturnStatement[43526-43539]"
    }, {
      "left" : "Axis that = (Axis) obj;",
      "right" : "Axis that = (Axis) obj;",
      "info" : "VariableDeclarationStatement[43511-43534]:VariableDeclarationStatement[43560-43583]"
    }, {
      "left" : "if (this.visible != that.visible)",
      "right" : "if (this.visible != that.visible)",
      "info" : "IfStatement[43544-43617]:IfStatement[43593-43666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43578-43617]:Block[43627-43666]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43593-43606]:ReturnStatement[43642-43655]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.label, that.label))",
      "right" : "if (!ObjectUtilities.equal(this.label, that.label))",
      "info" : "IfStatement[43627-43718]:IfStatement[43676-43767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43679-43718]:Block[43728-43767]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43694-43707]:ReturnStatement[43743-43756]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.labelFont, that.labelFont))",
      "right" : "if (!ObjectUtilities.equal(this.labelFont, that.labelFont))",
      "info" : "IfStatement[43728-43827]:IfStatement[43777-43876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43788-43827]:Block[43837-43876]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43803-43816]:ReturnStatement[43852-43865]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.labelPaint, that.labelPaint))",
      "right" : "if (!PaintUtilities.equal(this.labelPaint, that.labelPaint))",
      "info" : "IfStatement[43837-43937]:IfStatement[43886-43986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43898-43937]:Block[43947-43986]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43913-43926]:ReturnStatement[43962-43975]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.labelInsets, that.labelInsets))",
      "right" : "if (!ObjectUtilities.equal(this.labelInsets, that.labelInsets))",
      "info" : "IfStatement[43947-44050]:IfStatement[43996-44099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44011-44050]:Block[44060-44099]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44026-44039]:ReturnStatement[44075-44088]"
    }, {
      "left" : "if (this.labelAngle != that.labelAngle)",
      "right" : "if (this.labelAngle != that.labelAngle)",
      "info" : "IfStatement[44060-44139]:IfStatement[44109-44188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44100-44139]:Block[44149-44188]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44115-44128]:ReturnStatement[44164-44177]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.labelToolTip, that.labelToolTip))",
      "right" : "if (!ObjectUtilities.equal(this.labelToolTip, that.labelToolTip))",
      "info" : "IfStatement[44149-44254]:IfStatement[44198-44303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44215-44254]:Block[44264-44303]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44230-44243]:ReturnStatement[44279-44292]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.labelURL, that.labelURL))",
      "right" : "if (!ObjectUtilities.equal(this.labelURL, that.labelURL))",
      "info" : "IfStatement[44264-44361]:IfStatement[44313-44410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44322-44361]:Block[44371-44410]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44337-44350]:ReturnStatement[44386-44399]"
    }, {
      "left" : "if (this.axisLineVisible != that.axisLineVisible)",
      "right" : "if (this.axisLineVisible != that.axisLineVisible)",
      "info" : "IfStatement[44371-44460]:IfStatement[44420-44509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44421-44460]:Block[44470-44509]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44436-44449]:ReturnStatement[44485-44498]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.axisLineStroke, that.axisLineStroke))",
      "right" : "if (!ObjectUtilities.equal(this.axisLineStroke, that.axisLineStroke))",
      "info" : "IfStatement[44470-44579]:IfStatement[44519-44628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44540-44579]:Block[44589-44628]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44555-44568]:ReturnStatement[44604-44617]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.axisLinePaint, that.axisLinePaint))",
      "right" : "if (!PaintUtilities.equal(this.axisLinePaint, that.axisLinePaint))",
      "info" : "IfStatement[44589-44695]:IfStatement[44638-44744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44656-44695]:Block[44705-44744]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44671-44684]:ReturnStatement[44720-44733]"
    }, {
      "left" : "if (this.tickLabelsVisible != that.tickLabelsVisible)",
      "right" : "if (this.tickLabelsVisible != that.tickLabelsVisible)",
      "info" : "IfStatement[44705-44798]:IfStatement[44754-44847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44759-44798]:Block[44808-44847]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44774-44787]:ReturnStatement[44823-44836]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.tickLabelFont, that.tickLabelFont))",
      "right" : "if (!ObjectUtilities.equal(this.tickLabelFont, that.tickLabelFont))",
      "info" : "IfStatement[44808-44915]:IfStatement[44857-44964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44876-44915]:Block[44925-44964]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44891-44904]:ReturnStatement[44940-44953]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint))",
      "right" : "if (!PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint))",
      "info" : "IfStatement[44925-45033]:IfStatement[44974-45082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44994-45033]:Block[45043-45082]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45009-45022]:ReturnStatement[45058-45071]"
    }, {
      "left" : "if (!ObjectUtilities.equal(\r\n            this.tickLabelInsets, that.tickLabelInsets\r\n        ))",
      "right" : "if (!ObjectUtilities.equal(\r\n            this.tickLabelInsets, that.tickLabelInsets\r\n        ))",
      "info" : "IfStatement[45043-45178]:IfStatement[45092-45227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45139-45178]:Block[45188-45227]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45154-45167]:ReturnStatement[45203-45216]"
    }, {
      "left" : "if (this.tickMarksVisible != that.tickMarksVisible)",
      "right" : "if (this.tickMarksVisible != that.tickMarksVisible)",
      "info" : "IfStatement[45188-45279]:IfStatement[45237-45328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45240-45279]:Block[45289-45328]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45255-45268]:ReturnStatement[45304-45317]"
    }, {
      "left" : "if (this.tickMarkInsideLength != that.tickMarkInsideLength)",
      "right" : "if (this.tickMarkInsideLength != that.tickMarkInsideLength)",
      "info" : "IfStatement[45289-45388]:IfStatement[45338-45437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45349-45388]:Block[45398-45437]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45364-45377]:ReturnStatement[45413-45426]"
    }, {
      "left" : "if (this.tickMarkOutsideLength != that.tickMarkOutsideLength)",
      "right" : "if (this.tickMarkOutsideLength != that.tickMarkOutsideLength)",
      "info" : "IfStatement[45416-45517]:IfStatement[45465-45566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45478-45517]:Block[45527-45566]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45493-45506]:ReturnStatement[45542-45555]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.tickMarkPaint, that.tickMarkPaint))",
      "right" : "if (!PaintUtilities.equal(this.tickMarkPaint, that.tickMarkPaint))",
      "info" : "IfStatement[45545-45651]:IfStatement[45594-45700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45612-45651]:Block[45661-45700]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45627-45640]:ReturnStatement[45676-45689]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.tickMarkStroke, that.tickMarkStroke))",
      "right" : "if (!ObjectUtilities.equal(this.tickMarkStroke, that.tickMarkStroke))",
      "info" : "IfStatement[45661-45770]:IfStatement[45710-45819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45731-45770]:Block[45780-45819]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45746-45759]:ReturnStatement[45795-45808]"
    }, {
      "left" : "if (this.fixedDimension != that.fixedDimension)",
      "right" : "if (this.fixedDimension != that.fixedDimension)",
      "info" : "IfStatement[45780-45867]:IfStatement[45829-45916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45828-45867]:Block[45877-45916]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45843-45856]:ReturnStatement[45892-45905]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[45877-45889]:ReturnStatement[45926-45938]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[46075-46082]:Modifier[46124-46131]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[46083-46087]:PrimitiveType[46132-46136]"
    }, {
      "left" : "writeObject",
      "right" : "writeObject",
      "info" : "SimpleName[46088-46099]:SimpleName[46137-46148]"
    }, {
      "left" : "ObjectOutputStream stream",
      "right" : "ObjectOutputStream stream",
      "info" : "SingleVariableDeclaration[46100-46125]:SingleVariableDeclaration[46149-46174]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[46134-46145]:SimpleType[46183-46194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46146-46584]:Block[46195-46633]"
    }, {
      "left" : "stream.defaultWriteObject();",
      "right" : "stream.defaultWriteObject();",
      "info" : "ExpressionStatement[46157-46185]:ExpressionStatement[46206-46234]"
    }, {
      "left" : "SerialUtilities.writePaint(this.labelPaint, stream);",
      "right" : "SerialUtilities.writePaint(this.labelPaint, stream);",
      "info" : "ExpressionStatement[46195-46247]:ExpressionStatement[46244-46296]"
    }, {
      "left" : "SerialUtilities.writePaint(this.tickLabelPaint, stream);",
      "right" : "SerialUtilities.writePaint(this.tickLabelPaint, stream);",
      "info" : "ExpressionStatement[46257-46313]:ExpressionStatement[46306-46362]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.axisLineStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.axisLineStroke, stream);",
      "info" : "ExpressionStatement[46323-46380]:ExpressionStatement[46372-46429]"
    }, {
      "left" : "SerialUtilities.writePaint(this.axisLinePaint, stream);",
      "right" : "SerialUtilities.writePaint(this.axisLinePaint, stream);",
      "info" : "ExpressionStatement[46390-46445]:ExpressionStatement[46439-46494]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.tickMarkStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.tickMarkStroke, stream);",
      "info" : "ExpressionStatement[46455-46512]:ExpressionStatement[46504-46561]"
    }, {
      "left" : "SerialUtilities.writePaint(this.tickMarkPaint, stream);",
      "right" : "SerialUtilities.writePaint(this.tickMarkPaint, stream);",
      "info" : "ExpressionStatement[46522-46577]:ExpressionStatement[46571-46626]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[46835-46842]:Modifier[46884-46891]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[46843-46847]:PrimitiveType[46892-46896]"
    }, {
      "left" : "readObject",
      "right" : "readObject",
      "info" : "SimpleName[46848-46858]:SimpleName[46897-46907]"
    }, {
      "left" : "ObjectInputStream stream",
      "right" : "ObjectInputStream stream",
      "info" : "SingleVariableDeclaration[46859-46883]:SingleVariableDeclaration[46908-46932]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[46902-46913]:SimpleType[46951-46962]"
    }, {
      "left" : "ClassNotFoundException",
      "right" : "ClassNotFoundException",
      "info" : "SimpleType[46915-46937]:SimpleType[46964-46986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46938-47429]:Block[46987-47478]"
    }, {
      "left" : "stream.defaultReadObject();",
      "right" : "stream.defaultReadObject();",
      "info" : "ExpressionStatement[46949-46976]:ExpressionStatement[46998-47025]"
    }, {
      "left" : "this.labelPaint = SerialUtilities.readPaint(stream);",
      "right" : "this.labelPaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[46986-47038]:ExpressionStatement[47035-47087]"
    }, {
      "left" : "this.tickLabelPaint = SerialUtilities.readPaint(stream);",
      "right" : "this.tickLabelPaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[47048-47104]:ExpressionStatement[47097-47153]"
    }, {
      "left" : "this.axisLineStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.axisLineStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[47114-47171]:ExpressionStatement[47163-47220]"
    }, {
      "left" : "this.axisLinePaint = SerialUtilities.readPaint(stream);",
      "right" : "this.axisLinePaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[47181-47236]:ExpressionStatement[47230-47285]"
    }, {
      "left" : "this.tickMarkStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.tickMarkStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[47246-47303]:ExpressionStatement[47295-47352]"
    }, {
      "left" : "this.tickMarkPaint = SerialUtilities.readPaint(stream);",
      "right" : "this.tickMarkPaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[47313-47368]:ExpressionStatement[47362-47417]"
    }, {
      "left" : "this.listenerList = new EventListenerList();",
      "right" : "this.listenerList = new EventListenerList();",
      "info" : "ExpressionStatement[47378-47422]:ExpressionStatement[47427-47471]"
    } ]
  },
  "interFileMappings" : { }
}