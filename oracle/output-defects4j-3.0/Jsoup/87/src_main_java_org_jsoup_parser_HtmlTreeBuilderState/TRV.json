{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private boolean anythingElse(Token t, TreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, TreeBuilder tb)",
      "info" : "MethodDeclaration[49787-50033]:MethodDeclaration[49935-50181]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[50067-52161]:MethodDeclaration[50215-52309]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[52597-52709]:MethodDeclaration[52770-52882]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[57068-57179]:MethodDeclaration[57243-57354]"
    }, {
      "left" : "private void closeCell(HtmlTreeBuilder tb)",
      "right" : "private void closeCell(HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[57189-57413]:MethodDeclaration[57364-57588]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[61470-61593]:MethodDeclaration[61661-61784]"
    }, {
      "left" : "private static String nullString = String.valueOf('\\u0000');",
      "right" : "private static String nullString = String.valueOf('\\u0000');",
      "info" : "FieldDeclaration[67696-67756]:FieldDeclaration[67901-67961]"
    }, {
      "left" : "abstract boolean process(Token t, HtmlTreeBuilder tb);",
      "right" : "abstract boolean process(Token t, HtmlTreeBuilder tb);",
      "info" : "MethodDeclaration[67762-67816]:MethodDeclaration[67967-68021]"
    }, {
      "left" : "private static boolean isWhitespace(Token t)",
      "right" : "private static boolean isWhitespace(Token t)",
      "info" : "MethodDeclaration[67822-68029]:MethodDeclaration[68027-68234]"
    }, {
      "left" : "private static boolean isWhitespace(String data)",
      "right" : "private static boolean isWhitespace(String data)",
      "info" : "MethodDeclaration[68035-68132]:MethodDeclaration[68240-68337]"
    }, {
      "left" : "private static void handleRcData(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "right" : "private static void handleRcData(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[68138-68369]:MethodDeclaration[68343-68574]"
    }, {
      "left" : "private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "right" : "private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[68375-68608]:MethodDeclaration[68580-68813]"
    }, {
      "left" : "Constants",
      "right" : "Constants",
      "info" : "TypeDeclaration[68900-71588]:TypeDeclaration[69105-71793]"
    }, {
      "left" : "static final String[] InBodyStartToHead = new String[]{\"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"};",
      "right" : "static final String[] InBodyStartToHead = new String[]{\"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"};",
      "info" : "FieldDeclaration[68939-69092]:FieldDeclaration[69144-69297]"
    }, {
      "left" : "static final String[] InBodyStartPClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\", \"dir\", \"div\", \"dl\",\n            \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"menu\", \"nav\", \"ol\",\n            \"p\", \"section\", \"summary\", \"ul\"};",
      "right" : "static final String[] InBodyStartPClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\", \"dir\", \"div\", \"dl\",\n            \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"menu\", \"nav\", \"ol\",\n            \"p\", \"section\", \"summary\", \"ul\"};",
      "info" : "FieldDeclaration[69101-69388]:FieldDeclaration[69306-69593]"
    }, {
      "left" : "static final String[] Headings = new String[]{\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"};",
      "right" : "static final String[] Headings = new String[]{\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"};",
      "info" : "FieldDeclaration[69397-69479]:FieldDeclaration[69602-69684]"
    }, {
      "left" : "static final String[] InBodyStartPreListing = new String[]{\"listing\", \"pre\"};",
      "right" : "static final String[] InBodyStartPreListing = new String[]{\"listing\", \"pre\"};",
      "info" : "FieldDeclaration[69488-69565]:FieldDeclaration[69693-69770]"
    }, {
      "left" : "static final String[] InBodyStartLiBreakers = new String[]{\"address\", \"div\", \"p\"};",
      "right" : "static final String[] InBodyStartLiBreakers = new String[]{\"address\", \"div\", \"p\"};",
      "info" : "FieldDeclaration[69574-69656]:FieldDeclaration[69779-69861]"
    }, {
      "left" : "static final String[] DdDt = new String[]{\"dd\", \"dt\"};",
      "right" : "static final String[] DdDt = new String[]{\"dd\", \"dt\"};",
      "info" : "FieldDeclaration[69665-69719]:FieldDeclaration[69870-69924]"
    }, {
      "left" : "static final String[] Formatters = new String[]{\"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "right" : "static final String[] Formatters = new String[]{\"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "info" : "FieldDeclaration[69728-69860]:FieldDeclaration[69933-70065]"
    }, {
      "left" : "static final String[] InBodyStartApplets = new String[]{\"applet\", \"marquee\", \"object\"};",
      "right" : "static final String[] InBodyStartApplets = new String[]{\"applet\", \"marquee\", \"object\"};",
      "info" : "FieldDeclaration[69869-69956]:FieldDeclaration[70074-70161]"
    }, {
      "left" : "static final String[] InBodyStartEmptyFormatters = new String[]{\"area\", \"br\", \"embed\", \"img\", \"keygen\", \"wbr\"};",
      "right" : "static final String[] InBodyStartEmptyFormatters = new String[]{\"area\", \"br\", \"embed\", \"img\", \"keygen\", \"wbr\"};",
      "info" : "FieldDeclaration[69965-70076]:FieldDeclaration[70170-70281]"
    }, {
      "left" : "static final String[] InBodyStartMedia = new String[]{\"param\", \"source\", \"track\"};",
      "right" : "static final String[] InBodyStartMedia = new String[]{\"param\", \"source\", \"track\"};",
      "info" : "FieldDeclaration[70085-70167]:FieldDeclaration[70290-70372]"
    }, {
      "left" : "static final String[] InBodyStartInputAttribs = new String[]{\"action\", \"name\", \"prompt\"};",
      "right" : "static final String[] InBodyStartInputAttribs = new String[]{\"action\", \"name\", \"prompt\"};",
      "info" : "FieldDeclaration[70176-70265]:FieldDeclaration[70381-70470]"
    }, {
      "left" : "static final String[] InBodyStartOptions = new String[]{\"optgroup\", \"option\"};",
      "right" : "static final String[] InBodyStartOptions = new String[]{\"optgroup\", \"option\"};",
      "info" : "FieldDeclaration[70274-70352]:FieldDeclaration[70479-70557]"
    }, {
      "left" : "static final String[] InBodyStartRuby = new String[]{\"rp\", \"rt\"};",
      "right" : "static final String[] InBodyStartRuby = new String[]{\"rp\", \"rt\"};",
      "info" : "FieldDeclaration[70361-70426]:FieldDeclaration[70566-70631]"
    }, {
      "left" : "static final String[] InBodyStartDrop = new String[]{\"caption\", \"col\", \"colgroup\", \"frame\", \"head\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};",
      "right" : "static final String[] InBodyStartDrop = new String[]{\"caption\", \"col\", \"colgroup\", \"frame\", \"head\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};",
      "info" : "FieldDeclaration[70435-70580]:FieldDeclaration[70640-70785]"
    }, {
      "left" : "static final String[] InBodyEndClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"button\", \"center\", \"details\", \"dir\", \"div\",\n            \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"listing\", \"menu\",\n            \"nav\", \"ol\", \"pre\", \"section\", \"summary\", \"ul\"};",
      "right" : "static final String[] InBodyEndClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"button\", \"center\", \"details\", \"dir\", \"div\",\n            \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"listing\", \"menu\",\n            \"nav\", \"ol\", \"pre\", \"section\", \"summary\", \"ul\"};",
      "info" : "FieldDeclaration[70589-70896]:FieldDeclaration[70794-71101]"
    }, {
      "left" : "static final String[] InBodyEndAdoptionFormatters = new String[]{\"a\", \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"nobr\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "right" : "static final String[] InBodyEndAdoptionFormatters = new String[]{\"a\", \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"nobr\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "info" : "FieldDeclaration[70905-71067]:FieldDeclaration[71110-71272]"
    }, {
      "left" : "static final String[] InBodyEndTableFosters = new String[]{\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};",
      "right" : "static final String[] InBodyEndTableFosters = new String[]{\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};",
      "info" : "FieldDeclaration[71076-71177]:FieldDeclaration[71281-71382]"
    }, {
      "left" : "static final String[] InCellNames = new String[]{\"td\", \"th\"};",
      "right" : "static final String[] InCellNames = new String[]{\"td\", \"th\"};",
      "info" : "FieldDeclaration[71186-71247]:FieldDeclaration[71391-71452]"
    }, {
      "left" : "static final String[] InCellBody = new String[]{\"body\", \"caption\", \"col\", \"colgroup\", \"html\"};",
      "right" : "static final String[] InCellBody = new String[]{\"body\", \"caption\", \"col\", \"colgroup\", \"html\"};",
      "info" : "FieldDeclaration[71256-71350]:FieldDeclaration[71461-71555]"
    }, {
      "left" : "static final String[] InCellTable = new String[]{ \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};",
      "right" : "static final String[] InCellTable = new String[]{ \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};",
      "info" : "FieldDeclaration[71359-71451]:FieldDeclaration[71564-71656]"
    }, {
      "left" : "static final String[] InCellCol = new String[]{\"caption\", \"col\", \"colgroup\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};",
      "right" : "static final String[] InCellCol = new String[]{\"caption\", \"col\", \"colgroup\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};",
      "info" : "FieldDeclaration[71460-71582]:FieldDeclaration[71665-71787]"
    } ],
    "mappings" : [
 {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[49787-49794]:Modifier[49935-49942]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[49795-49802]:PrimitiveType[49943-49950]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[49803-49815]:SimpleName[49951-49963]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[49816-49823]:SingleVariableDeclaration[49964-49971]"
    }, {
      "left" : "TreeBuilder tb",
      "right" : "TreeBuilder tb",
      "info" : "SingleVariableDeclaration[49825-49839]:SingleVariableDeclaration[49973-49987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49841-50033]:Block[49989-50181]"
    }, {
      "left" : "boolean processed = tb.processEndTag(\"colgroup\");",
      "right" : "boolean processed = tb.processEndTag(\"colgroup\");",
      "info" : "VariableDeclarationStatement[49855-49904]:VariableDeclarationStatement[50003-50052]"
    }, {
      "left" : "if (processed)",
      "right" : "if (processed)",
      "info" : "IfStatement[49917-49998]:IfStatement[50065-50146]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[49977-49998]:ReturnStatement[50125-50146]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[50011-50023]:ReturnStatement[50159-50171]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[50067-50074]:PrimitiveType[50215-50222]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[50075-50082]:SimpleName[50223-50230]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[50083-50090]:SingleVariableDeclaration[50231-50238]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[50092-50110]:SingleVariableDeclaration[50240-50258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50112-52161]:Block[50260-52309]"
    }, {
      "left" : "switch (t.type) {\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    String name = startTag.normalName();\n                    if (name.equals(\"template\")) {\n                        tb.insert(startTag);\n                    } else if (name.equals(\"tr\")) {\n                        tb.clearStackToTableBodyContext();\n                        tb.insert(startTag);\n                        tb.transition(InRow);\n                    } else if (StringUtil.in(name, \"th\", \"td\")) {\n                        tb.error(this);\n                        tb.processStartTag(\"tr\");\n                        return tb.process(startTag);\n                    } else if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\")) {\n                        return exitTableBody(t, tb);\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                case EndTag:\n                    Token.EndTag endTag = t.asEndTag();\n                    name = endTag.normalName();\n                    if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\")) {\n                        if (!tb.inTableScope(name)) {\n                            tb.error(this);\n                            return false;\n                        } else {\n                            tb.clearStackToTableBodyContext();\n                            tb.pop();\n                            tb.transition(InTable);\n                        }\n                    } else if (name.equals(\"table\")) {\n                        return exitTableBody(t, tb);\n                    } else if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\")) {\n                        tb.error(this);\n                        return false;\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "right" : "switch (t.type) {\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    String name = startTag.normalName();\n                    if (name.equals(\"template\")) {\n                        tb.insert(startTag);\n                    } else if (name.equals(\"tr\")) {\n                        tb.clearStackToTableBodyContext();\n                        tb.insert(startTag);\n                        tb.transition(InRow);\n                    } else if (StringUtil.in(name, \"th\", \"td\")) {\n                        tb.error(this);\n                        tb.processStartTag(\"tr\");\n                        return tb.process(startTag);\n                    } else if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\")) {\n                        return exitTableBody(t, tb);\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                case EndTag:\n                    Token.EndTag endTag = t.asEndTag();\n                    name = endTag.normalName();\n                    if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\")) {\n                        if (!tb.inTableScope(name)) {\n                            tb.error(this);\n                            return false;\n                        } else {\n                            tb.clearStackToTableBodyContext();\n                            tb.pop();\n                            tb.transition(InTable);\n                        }\n                    } else if (name.equals(\"table\")) {\n                        return exitTableBody(t, tb);\n                    } else if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\")) {\n                        tb.error(this);\n                        return false;\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "info" : "SwitchStatement[50126-52126]:SwitchStatement[50274-52274]"
    }, {
      "left" : "case StartTag:",
      "right" : "case StartTag:",
      "info" : "SwitchCase[50160-50174]:SwitchCase[50308-50322]"
    }, {
      "left" : "Token.StartTag startTag = t.asStartTag();",
      "right" : "Token.StartTag startTag = t.asStartTag();",
      "info" : "VariableDeclarationStatement[50195-50236]:VariableDeclarationStatement[50343-50384]"
    }, {
      "left" : "String name = startTag.normalName();",
      "right" : "String name = startTag.normalName();",
      "info" : "VariableDeclarationStatement[50257-50293]:VariableDeclarationStatement[50405-50441]"
    }, {
      "left" : "if (name.equals(\"template\"))",
      "right" : "if (name.equals(\"template\"))",
      "info" : "IfStatement[50314-51043]:IfStatement[50462-51191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50343-50411]:Block[50491-50559]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[50369-50389]:ExpressionStatement[50517-50537]"
    }, {
      "left" : "if (name.equals(\"tr\"))",
      "right" : "if (name.equals(\"tr\"))",
      "info" : "IfStatement[50417-51043]:IfStatement[50565-51191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50440-50613]:Block[50588-50761]"
    }, {
      "left" : "tb.clearStackToTableBodyContext();",
      "right" : "tb.clearStackToTableBodyContext();",
      "info" : "ExpressionStatement[50466-50500]:ExpressionStatement[50614-50648]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[50525-50545]:ExpressionStatement[50673-50693]"
    }, {
      "left" : "tb.transition(InRow);",
      "right" : "tb.transition(InRow);",
      "info" : "ExpressionStatement[50570-50591]:ExpressionStatement[50718-50739]"
    }, {
      "left" : "if (StringUtil.in(name, \"th\", \"td\"))",
      "right" : "if (StringUtil.in(name, \"th\", \"td\"))",
      "info" : "IfStatement[50619-51043]:IfStatement[50767-51191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50656-50822]:Block[50804-50970]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[50682-50697]:ExpressionStatement[50830-50845]"
    }, {
      "left" : "tb.processStartTag(\"tr\");",
      "right" : "tb.processStartTag(\"tr\");",
      "info" : "ExpressionStatement[50722-50747]:ExpressionStatement[50870-50895]"
    }, {
      "left" : "return tb.process(startTag);",
      "right" : "return tb.process(startTag);",
      "info" : "ReturnStatement[50772-50800]:ReturnStatement[50920-50948]"
    }, {
      "left" : "if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\"))",
      "right" : "if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\"))",
      "info" : "IfStatement[50828-51043]:IfStatement[50976-51191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50910-50986]:Block[51058-51134]"
    }, {
      "left" : "return exitTableBody(t, tb);",
      "right" : "return exitTableBody(t, tb);",
      "info" : "ReturnStatement[50936-50964]:ReturnStatement[51084-51112]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[51016-51043]:ReturnStatement[51164-51191]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[51064-51070]:BreakStatement[51212-51218]"
    }, {
      "left" : "case EndTag:",
      "right" : "case EndTag:",
      "info" : "SwitchCase[51087-51099]:SwitchCase[51235-51247]"
    }, {
      "left" : "Token.EndTag endTag = t.asEndTag();",
      "right" : "Token.EndTag endTag = t.asEndTag();",
      "info" : "VariableDeclarationStatement[51120-51155]:VariableDeclarationStatement[51268-51303]"
    }, {
      "left" : "name = endTag.normalName();",
      "right" : "name = endTag.normalName();",
      "info" : "ExpressionStatement[51176-51203]:ExpressionStatement[51324-51351]"
    }, {
      "left" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "right" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "info" : "IfStatement[51224-52012]:IfStatement[51372-52160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51276-51651]:Block[51424-51799]"
    }, {
      "left" : "if (!tb.inTableScope(name))",
      "right" : "if (!tb.inTableScope(name))",
      "info" : "IfStatement[51302-51629]:IfStatement[51450-51777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51330-51443]:Block[51478-51591]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[51360-51375]:ExpressionStatement[51508-51523]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[51404-51417]:ReturnStatement[51552-51565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51449-51629]:Block[51597-51777]"
    }, {
      "left" : "tb.clearStackToTableBodyContext();",
      "right" : "tb.clearStackToTableBodyContext();",
      "info" : "ExpressionStatement[51479-51513]:ExpressionStatement[51627-51661]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[51542-51551]:ExpressionStatement[51690-51699]"
    }, {
      "left" : "tb.transition(InTable);",
      "right" : "tb.transition(InTable);",
      "info" : "ExpressionStatement[51580-51603]:ExpressionStatement[51728-51751]"
    }, {
      "left" : "if (name.equals(\"table\"))",
      "right" : "if (name.equals(\"table\"))",
      "info" : "IfStatement[51657-52012]:IfStatement[51805-52160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51683-51759]:Block[51831-51907]"
    }, {
      "left" : "return exitTableBody(t, tb);",
      "right" : "return exitTableBody(t, tb);",
      "info" : "ReturnStatement[51709-51737]:ReturnStatement[51857-51885]"
    }, {
      "left" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\"))",
      "right" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\"))",
      "info" : "IfStatement[51765-52012]:IfStatement[51913-52160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51854-51955]:Block[52002-52103]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[51880-51895]:ExpressionStatement[52028-52043]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[51920-51933]:ReturnStatement[52068-52081]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[51985-52012]:ReturnStatement[52133-52160]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[52033-52039]:BreakStatement[52181-52187]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[52056-52064]:SwitchCase[52204-52212]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[52085-52112]:ReturnStatement[52233-52260]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52139-52151]:ReturnStatement[52287-52299]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[52597-52604]:Modifier[52770-52777]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[52605-52612]:PrimitiveType[52778-52785]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[52613-52625]:SimpleName[52786-52798]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[52626-52633]:SingleVariableDeclaration[52799-52806]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[52635-52653]:SingleVariableDeclaration[52808-52826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52655-52709]:Block[52828-52882]"
    }, {
      "left" : "return tb.process(t, InTable);",
      "right" : "return tb.process(t, InTable);",
      "info" : "ReturnStatement[52669-52699]:ReturnStatement[52842-52872]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57068-57075]:Modifier[57243-57250]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[57076-57083]:PrimitiveType[57251-57258]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[57084-57096]:SimpleName[57259-57271]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[57097-57104]:SingleVariableDeclaration[57272-57279]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[57106-57124]:SingleVariableDeclaration[57281-57299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57126-57179]:Block[57301-57354]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[57140-57169]:ReturnStatement[57315-57344]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57189-57196]:Modifier[57364-57371]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57197-57201]:PrimitiveType[57372-57376]"
    }, {
      "left" : "closeCell",
      "right" : "closeCell",
      "info" : "SimpleName[57202-57211]:SimpleName[57377-57386]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[57212-57230]:SingleVariableDeclaration[57387-57405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57232-57413]:Block[57407-57588]"
    }, {
      "left" : "if (tb.inTableScope(\"td\"))",
      "right" : "if (tb.inTableScope(\"td\"))",
      "info" : "IfStatement[57246-57369]:IfStatement[57421-57544]"
    }, {
      "left" : "tb.processEndTag(\"td\");",
      "right" : "tb.processEndTag(\"td\");",
      "info" : "ExpressionStatement[57289-57312]:ExpressionStatement[57464-57487]"
    }, {
      "left" : "tb.processEndTag(\"th\");",
      "right" : "tb.processEndTag(\"th\");",
      "info" : "ExpressionStatement[57346-57369]:ExpressionStatement[57521-57544]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[61470-61477]:Modifier[61661-61668]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[61478-61485]:PrimitiveType[61669-61676]"
    }, {
      "left" : "anythingElse",
      "right" : "anythingElse",
      "info" : "SimpleName[61486-61498]:SimpleName[61677-61689]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[61499-61506]:SingleVariableDeclaration[61690-61697]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[61508-61526]:SingleVariableDeclaration[61699-61717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61528-61593]:Block[61719-61784]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[61542-61557]:ExpressionStatement[61733-61748]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[61570-61583]:ReturnStatement[61761-61774]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[67762-67770]:Modifier[67967-67975]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[67771-67778]:PrimitiveType[67976-67983]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[67779-67786]:SimpleName[67984-67991]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[67787-67794]:SingleVariableDeclaration[67992-67999]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[67796-67814]:SingleVariableDeclaration[68001-68019]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[67822-67829]:Modifier[68027-68034]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[67830-67836]:Modifier[68035-68041]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[67837-67844]:PrimitiveType[68042-68049]"
    }, {
      "left" : "isWhitespace",
      "right" : "isWhitespace",
      "info" : "SimpleName[67845-67857]:SimpleName[68050-68062]"
    }, {
      "left" : "Token t",
      "right" : "Token t",
      "info" : "SingleVariableDeclaration[67858-67865]:SingleVariableDeclaration[68063-68070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67867-68029]:Block[68072-68234]"
    }, {
      "left" : "if (t.isCharacter())",
      "right" : "if (t.isCharacter())",
      "info" : "IfStatement[67877-68001]:IfStatement[68082-68206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67898-68001]:Block[68103-68206]"
    }, {
      "left" : "String data = t.asCharacter().getData();",
      "right" : "String data = t.asCharacter().getData();",
      "info" : "VariableDeclarationStatement[67912-67952]:VariableDeclarationStatement[68117-68157]"
    }, {
      "left" : "return isWhitespace(data);",
      "right" : "return isWhitespace(data);",
      "info" : "ReturnStatement[67965-67991]:ReturnStatement[68170-68196]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[68010-68023]:ReturnStatement[68215-68228]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[68035-68042]:Modifier[68240-68247]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[68043-68049]:Modifier[68248-68254]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[68050-68057]:PrimitiveType[68255-68262]"
    }, {
      "left" : "isWhitespace",
      "right" : "isWhitespace",
      "info" : "SimpleName[68058-68070]:SimpleName[68263-68275]"
    }, {
      "left" : "String data",
      "right" : "String data",
      "info" : "SingleVariableDeclaration[68071-68082]:SingleVariableDeclaration[68276-68287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68084-68132]:Block[68289-68337]"
    }, {
      "left" : "return StringUtil.isBlank(data);",
      "right" : "return StringUtil.isBlank(data);",
      "info" : "ReturnStatement[68094-68126]:ReturnStatement[68299-68331]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[68138-68145]:Modifier[68343-68350]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[68146-68152]:Modifier[68351-68357]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[68153-68157]:PrimitiveType[68358-68362]"
    }, {
      "left" : "handleRcData",
      "right" : "handleRcData",
      "info" : "SimpleName[68158-68170]:SimpleName[68363-68375]"
    }, {
      "left" : "Token.StartTag startTag",
      "right" : "Token.StartTag startTag",
      "info" : "SingleVariableDeclaration[68171-68194]:SingleVariableDeclaration[68376-68399]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[68196-68214]:SingleVariableDeclaration[68401-68419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68216-68369]:Block[68421-68574]"
    }, {
      "left" : "tb.tokeniser.transition(TokeniserState.Rcdata);",
      "right" : "tb.tokeniser.transition(TokeniserState.Rcdata);",
      "info" : "ExpressionStatement[68226-68273]:ExpressionStatement[68431-68478]"
    }, {
      "left" : "tb.markInsertionMode();",
      "right" : "tb.markInsertionMode();",
      "info" : "ExpressionStatement[68282-68305]:ExpressionStatement[68487-68510]"
    }, {
      "left" : "tb.transition(Text);",
      "right" : "tb.transition(Text);",
      "info" : "ExpressionStatement[68314-68334]:ExpressionStatement[68519-68539]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[68343-68363]:ExpressionStatement[68548-68568]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[68375-68382]:Modifier[68580-68587]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[68383-68389]:Modifier[68588-68594]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[68390-68394]:PrimitiveType[68595-68599]"
    }, {
      "left" : "handleRawtext",
      "right" : "handleRawtext",
      "info" : "SimpleName[68395-68408]:SimpleName[68600-68613]"
    }, {
      "left" : "Token.StartTag startTag",
      "right" : "Token.StartTag startTag",
      "info" : "SingleVariableDeclaration[68409-68432]:SingleVariableDeclaration[68614-68637]"
    }, {
      "left" : "HtmlTreeBuilder tb",
      "right" : "HtmlTreeBuilder tb",
      "info" : "SingleVariableDeclaration[68434-68452]:SingleVariableDeclaration[68639-68657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68454-68608]:Block[68659-68813]"
    }, {
      "left" : "tb.tokeniser.transition(TokeniserState.Rawtext);",
      "right" : "tb.tokeniser.transition(TokeniserState.Rawtext);",
      "info" : "ExpressionStatement[68464-68512]:ExpressionStatement[68669-68717]"
    }, {
      "left" : "tb.markInsertionMode();",
      "right" : "tb.markInsertionMode();",
      "info" : "ExpressionStatement[68521-68544]:ExpressionStatement[68726-68749]"
    }, {
      "left" : "tb.transition(Text);",
      "right" : "tb.transition(Text);",
      "info" : "ExpressionStatement[68553-68573]:ExpressionStatement[68758-68778]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[68582-68602]:ExpressionStatement[68787-68807]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[68900-68906]:Modifier[69105-69111]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[68907-68912]:Modifier[69112-69117]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[68913-68918]:TYPE_DECLARATION_KIND[69118-69123]"
    }, {
      "left" : "Constants",
      "right" : "Constants",
      "info" : "SimpleName[68919-68928]:SimpleName[69124-69133]"
    } ]
  },
  "interFileMappings" : { }
}