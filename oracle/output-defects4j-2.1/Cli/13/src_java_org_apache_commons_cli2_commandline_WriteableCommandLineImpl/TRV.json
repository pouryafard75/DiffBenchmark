{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final Properties properties = new Properties();",
      "right" : "private final Properties properties = new Properties();",
      "info" : "FieldDeclaration[1533-1588]:FieldDeclaration[1533-1588]"
    }, {
      "left" : "private final List options = new ArrayList();",
      "right" : "private final List options = new ArrayList();",
      "info" : "FieldDeclaration[1593-1638]:FieldDeclaration[1593-1638]"
    }, {
      "left" : "private final Map nameToOption = new HashMap();",
      "right" : "private final Map nameToOption = new HashMap();",
      "info" : "FieldDeclaration[1643-1690]:FieldDeclaration[1643-1690]"
    }, {
      "left" : "private final Map values = new HashMap();",
      "right" : "private final Map values = new HashMap();",
      "info" : "FieldDeclaration[1695-1736]:FieldDeclaration[1695-1736]"
    }, {
      "left" : "private final Map switches = new HashMap();",
      "right" : "private final Map switches = new HashMap();",
      "info" : "FieldDeclaration[1741-1784]:FieldDeclaration[1741-1784]"
    }, {
      "left" : "private final Map defaultValues = new HashMap();",
      "right" : "private final Map defaultValues = new HashMap();",
      "info" : "FieldDeclaration[1789-1837]:FieldDeclaration[1789-1837]"
    }, {
      "left" : "private final Map defaultSwitches = new HashMap();",
      "right" : "private final Map defaultSwitches = new HashMap();",
      "info" : "FieldDeclaration[1842-1892]:FieldDeclaration[1842-1892]"
    }, {
      "left" : "private final List normalised;",
      "right" : "private final List normalised;",
      "info" : "FieldDeclaration[1897-1927]:FieldDeclaration[1897-1927]"
    }, {
      "left" : "private final Set prefixes;",
      "right" : "private final Set prefixes;",
      "info" : "FieldDeclaration[1932-1959]:FieldDeclaration[1932-1959]"
    }, {
      "left" : "public WriteableCommandLineImpl(final Option rootOption,\n                                    final List arguments)",
      "right" : "public WriteableCommandLineImpl(final Option rootOption,\n                                    final List arguments)",
      "info" : "MethodDeclaration[1965-2433]:MethodDeclaration[1965-2433]"
    }, {
      "left" : "public void addOption(Option option)",
      "right" : "public void addOption(Option option)",
      "info" : "MethodDeclaration[2439-2707]:MethodDeclaration[2439-2707]"
    }, {
      "left" : "public void addValue(final Option option,\n                         final Object value)",
      "right" : "public void addValue(final Option option,\n                         final Object value)",
      "info" : "MethodDeclaration[2713-3102]:MethodDeclaration[2713-3102]"
    }, {
      "left" : "public void addSwitch(final Option option,\n                          final boolean value)",
      "right" : "public void addSwitch(final Option option,\n                          final boolean value)",
      "info" : "MethodDeclaration[3108-3506]:MethodDeclaration[3108-3506]"
    }, {
      "left" : "public boolean hasOption(final Option option)",
      "right" : "public boolean hasOption(final Option option)",
      "info" : "MethodDeclaration[3512-3648]:MethodDeclaration[3512-3648]"
    }, {
      "left" : "public Option getOption(final String trigger)",
      "right" : "public Option getOption(final String trigger)",
      "info" : "MethodDeclaration[3654-3758]:MethodDeclaration[3654-3758]"
    }, {
      "left" : "public List getValues(final Option option,\n                          final List defaultValues)",
      "right" : "public List getValues(final Option option,\n                          final List defaultValues)",
      "info" : "MethodDeclaration[3764-4471]:MethodDeclaration[3764-4471]"
    }, {
      "left" : "public Boolean getSwitch(final Option option,\n                             final Boolean defaultValue)",
      "right" : "public Boolean getSwitch(final Option option,\n                             final Boolean defaultValue)",
      "info" : "MethodDeclaration[4558-5076]:MethodDeclaration[4776-5294]"
    }, {
      "left" : "public void addProperty(final String property,\n                            final String value)",
      "right" : "public void addProperty(final String property,\n                            final String value)",
      "info" : "MethodDeclaration[5082-5233]:MethodDeclaration[5300-5451]"
    }, {
      "left" : "public String getProperty(final String property,\n                              final String defaultValue)",
      "right" : "public String getProperty(final String property,\n                              final String defaultValue)",
      "info" : "MethodDeclaration[5239-5415]:MethodDeclaration[5457-5633]"
    }, {
      "left" : "public Set getProperties()",
      "right" : "public Set getProperties()",
      "info" : "MethodDeclaration[5421-5520]:MethodDeclaration[5639-5738]"
    }, {
      "left" : "public boolean looksLikeOption(final String trigger)",
      "right" : "public boolean looksLikeOption(final String trigger)",
      "info" : "MethodDeclaration[5526-5831]:MethodDeclaration[5744-6049]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[5837-6385]:MethodDeclaration[6055-6603]"
    }, {
      "left" : "public List getOptions()",
      "right" : "public List getOptions()",
      "info" : "MethodDeclaration[6391-6477]:MethodDeclaration[6609-6695]"
    }, {
      "left" : "public Set getOptionTriggers()",
      "right" : "public Set getOptionTriggers()",
      "info" : "MethodDeclaration[6483-6588]:MethodDeclaration[6701-6806]"
    }, {
      "left" : "public void setDefaultValues(final Option option,\n                                 final List defaults)",
      "right" : "public void setDefaultValues(final Option option,\n                                 final List defaults)",
      "info" : "MethodDeclaration[6594-6855]:MethodDeclaration[6812-7073]"
    }, {
      "left" : "public void setDefaultSwitch(final Option option,\n                                 final Boolean defaultSwitch)",
      "right" : "public void setDefaultSwitch(final Option option,\n                                 final Boolean defaultSwitch)",
      "info" : "MethodDeclaration[6861-7144]:MethodDeclaration[7079-7362]"
    }, {
      "left" : "public List getNormalised()",
      "right" : "public List getNormalised()",
      "info" : "MethodDeclaration[7150-7242]:MethodDeclaration[7368-7460]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2339-2433]:Block[2339-2433]"
    }, {
      "left" : "this.prefixes = rootOption.getPrefixes();",
      "right" : "this.prefixes = rootOption.getPrefixes();",
      "info" : "ExpressionStatement[2349-2390]:ExpressionStatement[2349-2390]"
    }, {
      "left" : "this.normalised = arguments;",
      "right" : "this.normalised = arguments;",
      "info" : "ExpressionStatement[2399-2427]:ExpressionStatement[2399-2427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2476-2707]:Block[2476-2707]"
    }, {
      "left" : "options.add(option);",
      "right" : "options.add(option);",
      "info" : "ExpressionStatement[2486-2506]:ExpressionStatement[2486-2506]"
    }, {
      "left" : "nameToOption.put(option.getPreferredName(), option);",
      "right" : "nameToOption.put(option.getPreferredName(), option);",
      "info" : "ExpressionStatement[2515-2567]:ExpressionStatement[2515-2567]"
    }, {
      "left" : "for (Iterator i = option.getTriggers().iterator(); i.hasNext())",
      "right" : "for (Iterator i = option.getTriggers().iterator(); i.hasNext())",
      "info" : "ForStatement[2577-2701]:ForStatement[2577-2701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2642-2701]:Block[2642-2701]"
    }, {
      "left" : "nameToOption.put(i.next(), option);",
      "right" : "nameToOption.put(i.next(), option);",
      "info" : "ExpressionStatement[2656-2691]:ExpressionStatement[2656-2691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2800-3102]:Block[2800-3102]"
    }, {
      "left" : "if (option instanceof Argument)",
      "right" : "if (option instanceof Argument)",
      "info" : "IfStatement[2810-2884]:IfStatement[2810-2884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2842-2884]:Block[2842-2884]"
    }, {
      "left" : "addOption(option);",
      "right" : "addOption(option);",
      "info" : "ExpressionStatement[2856-2874]:ExpressionStatement[2856-2874]"
    }, {
      "left" : "List valueList = (List) values.get(option);",
      "right" : "List valueList = (List) values.get(option);",
      "info" : "VariableDeclarationStatement[2894-2937]:VariableDeclarationStatement[2894-2937]"
    }, {
      "left" : "if (valueList == null)",
      "right" : "if (valueList == null)",
      "info" : "IfStatement[2947-3065]:IfStatement[2947-3065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2970-3065]:Block[2970-3065]"
    }, {
      "left" : "valueList = new ArrayList();",
      "right" : "valueList = new ArrayList();",
      "info" : "ExpressionStatement[2984-3012]:ExpressionStatement[2984-3012]"
    }, {
      "left" : "values.put(option, valueList);",
      "right" : "values.put(option, valueList);",
      "info" : "ExpressionStatement[3025-3055]:ExpressionStatement[3025-3055]"
    }, {
      "left" : "valueList.add(value);",
      "right" : "valueList.add(value);",
      "info" : "ExpressionStatement[3075-3096]:ExpressionStatement[3075-3096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3198-3506]:Block[3198-3506]"
    }, {
      "left" : "addOption(option);",
      "right" : "addOption(option);",
      "info" : "ExpressionStatement[3208-3226]:ExpressionStatement[3208-3226]"
    }, {
      "left" : "if (switches.containsKey(option))",
      "right" : "if (switches.containsKey(option))",
      "info" : "IfStatement[3236-3500]:IfStatement[3236-3500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3270-3411]:Block[3270-3411]"
    }, {
      "left" : "throw new IllegalStateException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_ALREADY_SET));",
      "right" : "throw new IllegalStateException(ResourceHelper.getResourceHelper().getMessage(ResourceConstants.SWITCH_ALREADY_SET));",
      "info" : "ThrowStatement[3284-3401]:ThrowStatement[3284-3401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3417-3500]:Block[3417-3500]"
    }, {
      "left" : "switches.put(option, value ? Boolean.TRUE : Boolean.FALSE);",
      "right" : "switches.put(option, value ? Boolean.TRUE : Boolean.FALSE);",
      "info" : "ExpressionStatement[3431-3490]:ExpressionStatement[3431-3490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3558-3648]:Block[3558-3648]"
    }, {
      "left" : "final boolean present = options.contains(option);",
      "right" : "final boolean present = options.contains(option);",
      "info" : "VariableDeclarationStatement[3568-3617]:VariableDeclarationStatement[3568-3617]"
    }, {
      "left" : "return present;",
      "right" : "return present;",
      "info" : "ReturnStatement[3627-3642]:ReturnStatement[3627-3642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3700-3758]:Block[3700-3758]"
    }, {
      "left" : "return (Option) nameToOption.get(trigger);",
      "right" : "return (Option) nameToOption.get(trigger);",
      "info" : "ReturnStatement[3710-3752]:ReturnStatement[3710-3752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3859-4471]:Block[3859-4471]"
    }, {
      "left" : "List valueList = (List) values.get(option);",
      "right" : "List valueList = (List) values.get(option);",
      "info" : "VariableDeclarationStatement[3915-3958]:VariableDeclarationStatement[3915-3958]"
    }, {
      "left" : "if ((valueList == null) || valueList.isEmpty())",
      "right" : "if ((valueList == null) || valueList.isEmpty())",
      "info" : "IfStatement[4028-4126]:IfStatement[4028-4126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4076-4126]:Block[4076-4126]"
    }, {
      "left" : "valueList = defaultValues;",
      "right" : "valueList = defaultValues;",
      "info" : "ExpressionStatement[4090-4116]:ExpressionStatement[4090-4116]"
    }, {
      "left" : "if ((valueList == null) || valueList.isEmpty())",
      "right" : "if ((valueList == null) || valueList.isEmpty())",
      "info" : "IfStatement[4187-4309]:IfStatement[4187-4309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4235-4309]:Block[4235-4309]"
    }, {
      "left" : "valueList = (List) this.defaultValues.get(option);",
      "right" : "valueList = (List) this.defaultValues.get(option);",
      "info" : "ExpressionStatement[4249-4299]:ExpressionStatement[4249-4299]"
    }, {
      "left" : "if (valueList == null)",
      "right" : "if (valueList == null)",
      "info" : "IfStatement[4356-4438]:IfStatement[4356-4438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4379-4438]:Block[4379-4438]"
    }, {
      "left" : "valueList = Collections.EMPTY_LIST;",
      "right" : "valueList = Collections.EMPTY_LIST;",
      "info" : "ExpressionStatement[4393-4428]:ExpressionStatement[4393-4428]"
    }, {
      "left" : "return valueList;",
      "right" : "return valueList;",
      "info" : "ReturnStatement[4448-4465]:ReturnStatement[4448-4465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4661-5076]:Block[4879-5294]"
    }, {
      "left" : "Boolean bool = (Boolean) switches.get(option);",
      "right" : "Boolean bool = (Boolean) switches.get(option);",
      "info" : "VariableDeclarationStatement[4717-4763]:VariableDeclarationStatement[4935-4981]"
    }, {
      "left" : "if (bool == null)",
      "right" : "if (bool == null)",
      "info" : "IfStatement[4833-4895]:IfStatement[5051-5113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4851-4895]:Block[5069-5113]"
    }, {
      "left" : "bool = defaultValue;",
      "right" : "bool = defaultValue;",
      "info" : "ExpressionStatement[4865-4885]:ExpressionStatement[5083-5103]"
    }, {
      "left" : "if (bool == null)",
      "right" : "if (bool == null)",
      "info" : "IfStatement[4956-5048]:IfStatement[5174-5266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4974-5048]:Block[5192-5266]"
    }, {
      "left" : "bool = (Boolean) this.defaultSwitches.get(option);",
      "right" : "bool = (Boolean) this.defaultSwitches.get(option);",
      "info" : "ExpressionStatement[4988-5038]:ExpressionStatement[5206-5256]"
    }, {
      "left" : "return bool;",
      "right" : "return bool;",
      "info" : "ReturnStatement[5058-5070]:ReturnStatement[5276-5288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5177-5233]:Block[5395-5451]"
    }, {
      "left" : "properties.setProperty(property, value);",
      "right" : "properties.setProperty(property, value);",
      "info" : "ExpressionStatement[5187-5227]:ExpressionStatement[5405-5445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5345-5415]:Block[5563-5633]"
    }, {
      "left" : "return properties.getProperty(property, defaultValue);",
      "right" : "return properties.getProperty(property, defaultValue);",
      "info" : "ReturnStatement[5355-5409]:ReturnStatement[5573-5627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5448-5520]:Block[5666-5738]"
    }, {
      "left" : "return Collections.unmodifiableSet(properties.keySet());",
      "right" : "return Collections.unmodifiableSet(properties.keySet());",
      "info" : "ReturnStatement[5458-5514]:ReturnStatement[5676-5732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5579-5831]:Block[5797-6049]"
    }, {
      "left" : "for (final Iterator i = prefixes.iterator(); i.hasNext())",
      "right" : "for (final Iterator i = prefixes.iterator(); i.hasNext())",
      "info" : "ForStatement[5589-5802]:ForStatement[5807-6020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5648-5802]:Block[5866-6020]"
    }, {
      "left" : "final String prefix = (String) i.next();",
      "right" : "final String prefix = (String) i.next();",
      "info" : "VariableDeclarationStatement[5662-5702]:VariableDeclarationStatement[5880-5920]"
    }, {
      "left" : "if (trigger.startsWith(prefix))",
      "right" : "if (trigger.startsWith(prefix))",
      "info" : "IfStatement[5716-5792]:IfStatement[5934-6010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5748-5792]:Block[5966-6010]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5766-5778]:ReturnStatement[5984-5996]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5812-5825]:ReturnStatement[6030-6043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5862-6385]:Block[6080-6603]"
    }, {
      "left" : "final StringBuffer buffer = new StringBuffer();",
      "right" : "final StringBuffer buffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[5872-5919]:VariableDeclarationStatement[6090-6137]"
    }, {
      "left" : "for (final Iterator i = normalised.iterator(); i.hasNext())",
      "right" : "for (final Iterator i = normalised.iterator(); i.hasNext())",
      "info" : "ForStatement[5965-6344]:ForStatement[6183-6562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6026-6344]:Block[6244-6562]"
    }, {
      "left" : "final String arg = (String) i.next();",
      "right" : "final String arg = (String) i.next();",
      "info" : "VariableDeclarationStatement[6040-6077]:VariableDeclarationStatement[6258-6295]"
    }, {
      "left" : "if (arg.indexOf(' ') >= 0)",
      "right" : "if (arg.indexOf(' ') >= 0)",
      "info" : "IfStatement[6091-6252]:IfStatement[6309-6470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6118-6195]:Block[6336-6413]"
    }, {
      "left" : "buffer.append(\"\\\"\").append(arg).append(\"\\\"\");",
      "right" : "buffer.append(\"\\\"\").append(arg).append(\"\\\"\");",
      "info" : "ExpressionStatement[6136-6181]:ExpressionStatement[6354-6399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6201-6252]:Block[6419-6470]"
    }, {
      "left" : "buffer.append(arg);",
      "right" : "buffer.append(arg);",
      "info" : "ExpressionStatement[6219-6238]:ExpressionStatement[6437-6456]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[6266-6334]:IfStatement[6484-6552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6283-6334]:Block[6501-6552]"
    }, {
      "left" : "buffer.append(' ');",
      "right" : "buffer.append(' ');",
      "info" : "ExpressionStatement[6301-6320]:ExpressionStatement[6519-6538]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[6354-6379]:ReturnStatement[6572-6597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6416-6477]:Block[6634-6695]"
    }, {
      "left" : "return Collections.unmodifiableList(options);",
      "right" : "return Collections.unmodifiableList(options);",
      "info" : "ReturnStatement[6426-6471]:ReturnStatement[6644-6689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6514-6588]:Block[6732-6806]"
    }, {
      "left" : "return Collections.unmodifiableSet(nameToOption.keySet());",
      "right" : "return Collections.unmodifiableSet(nameToOption.keySet());",
      "info" : "ReturnStatement[6524-6582]:ReturnStatement[6742-6800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6698-6855]:Block[6916-7073]"
    }, {
      "left" : "if (defaults == null)",
      "right" : "if (defaults == null)",
      "info" : "IfStatement[6708-6849]:IfStatement[6926-7067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6730-6783]:Block[6948-7001]"
    }, {
      "left" : "defaultValues.remove(option);",
      "right" : "defaultValues.remove(option);",
      "info" : "ExpressionStatement[6744-6773]:ExpressionStatement[6962-6991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6789-6849]:Block[7007-7067]"
    }, {
      "left" : "defaultValues.put(option, defaults);",
      "right" : "defaultValues.put(option, defaults);",
      "info" : "ExpressionStatement[6803-6839]:ExpressionStatement[7021-7057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6973-7144]:Block[7191-7362]"
    }, {
      "left" : "if (defaultSwitch == null)",
      "right" : "if (defaultSwitch == null)",
      "info" : "IfStatement[6983-7138]:IfStatement[7201-7356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7010-7065]:Block[7228-7283]"
    }, {
      "left" : "defaultSwitches.remove(option);",
      "right" : "defaultSwitches.remove(option);",
      "info" : "ExpressionStatement[7024-7055]:ExpressionStatement[7242-7273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7071-7138]:Block[7289-7356]"
    }, {
      "left" : "defaultSwitches.put(option, defaultSwitch);",
      "right" : "defaultSwitches.put(option, defaultSwitch);",
      "info" : "ExpressionStatement[7085-7128]:ExpressionStatement[7303-7346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7178-7242]:Block[7396-7460]"
    }, {
      "left" : "return Collections.unmodifiableList(normalised);",
      "right" : "return Collections.unmodifiableList(normalised);",
      "info" : "ReturnStatement[7188-7236]:ReturnStatement[7406-7454]"
    } ]
  },
  "interFileMappings" : { }
}