{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "TypeDeclaration[5115-46314]:TypeDeclaration[5115-46380]"
    }, {
      "left" : "private static final long serialVersionUID = -5032960206869675528L;",
      "right" : "private static final long serialVersionUID = -5032960206869675528L;",
      "info" : "FieldDeclaration[5554-5652]:FieldDeclaration[5554-5652]"
    }, {
      "left" : "protected static final String DEFAULT_DOMAIN_DESCRIPTION = \"Time\";",
      "right" : "protected static final String DEFAULT_DOMAIN_DESCRIPTION = \"Time\";",
      "info" : "FieldDeclaration[5660-5780]:FieldDeclaration[5660-5780]"
    }, {
      "left" : "protected static final String DEFAULT_RANGE_DESCRIPTION = \"Value\";",
      "right" : "protected static final String DEFAULT_RANGE_DESCRIPTION = \"Value\";",
      "info" : "FieldDeclaration[5788-5907]:FieldDeclaration[5788-5907]"
    }, {
      "left" : "private String domain;",
      "right" : "private String domain;",
      "info" : "FieldDeclaration[5915-5978]:FieldDeclaration[5915-5978]"
    }, {
      "left" : "private String range;",
      "right" : "private String range;",
      "info" : "FieldDeclaration[5986-6047]:FieldDeclaration[5986-6047]"
    }, {
      "left" : "protected Class timePeriodClass;",
      "right" : "protected Class timePeriodClass;",
      "info" : "FieldDeclaration[6055-6132]:FieldDeclaration[6055-6132]"
    }, {
      "left" : "protected List data;",
      "right" : "protected List data;",
      "info" : "FieldDeclaration[6140-6210]:FieldDeclaration[6140-6210]"
    }, {
      "left" : "private int maximumItemCount;",
      "right" : "private int maximumItemCount;",
      "info" : "FieldDeclaration[6218-6303]:FieldDeclaration[6218-6303]"
    }, {
      "left" : "private long maximumItemAge;",
      "right" : "private long maximumItemAge;",
      "info" : "FieldDeclaration[6311-6453]:FieldDeclaration[6311-6453]"
    }, {
      "left" : "private double minY;",
      "right" : "private double minY;",
      "info" : "FieldDeclaration[6461-6572]:FieldDeclaration[6461-6572]"
    }, {
      "left" : "private double maxY;",
      "right" : "private double maxY;",
      "info" : "FieldDeclaration[6580-6691]:FieldDeclaration[6580-6691]"
    }, {
      "left" : "public TimeSeries(Comparable name)",
      "right" : "public TimeSeries(Comparable name)",
      "info" : "MethodDeclaration[6699-7095]:MethodDeclaration[6699-7095]"
    }, {
      "left" : "public TimeSeries(Comparable name, String domain, String range)",
      "right" : "public TimeSeries(Comparable name, String domain, String range)",
      "info" : "MethodDeclaration[7103-8094]:MethodDeclaration[7103-8094]"
    }, {
      "left" : "public String getDomainDescription()",
      "right" : "public String getDomainDescription()",
      "info" : "MethodDeclaration[8102-8362]:MethodDeclaration[8102-8362]"
    }, {
      "left" : "public void setDomainDescription(String description)",
      "right" : "public void setDomainDescription(String description)",
      "info" : "MethodDeclaration[8370-8892]:MethodDeclaration[8370-8892]"
    }, {
      "left" : "public String getRangeDescription()",
      "right" : "public String getRangeDescription()",
      "info" : "MethodDeclaration[8900-9155]:MethodDeclaration[8900-9155]"
    }, {
      "left" : "public void setRangeDescription(String description)",
      "right" : "public void setRangeDescription(String description)",
      "info" : "MethodDeclaration[9163-9654]:MethodDeclaration[9163-9654]"
    }, {
      "left" : "public int getItemCount()",
      "right" : "public int getItemCount()",
      "info" : "MethodDeclaration[9662-9839]:MethodDeclaration[9662-9839]"
    }, {
      "left" : "public List getItems()",
      "right" : "public List getItems()",
      "info" : "MethodDeclaration[9847-10196]:MethodDeclaration[9847-10196]"
    }, {
      "left" : "public int getMaximumItemCount()",
      "right" : "public int getMaximumItemCount()",
      "info" : "MethodDeclaration[10204-10539]:MethodDeclaration[10204-10539]"
    }, {
      "left" : "public void setMaximumItemCount(int maximum)",
      "right" : "public void setMaximumItemCount(int maximum)",
      "info" : "MethodDeclaration[10547-11341]:MethodDeclaration[10547-11341]"
    }, {
      "left" : "public long getMaximumItemAge()",
      "right" : "public long getMaximumItemAge()",
      "info" : "MethodDeclaration[11349-11607]:MethodDeclaration[11349-11607]"
    }, {
      "left" : "public void setMaximumItemAge(long periods)",
      "right" : "public void setMaximumItemAge(long periods)",
      "info" : "MethodDeclaration[11615-12448]:MethodDeclaration[11615-12448]"
    }, {
      "left" : "public double getMinY()",
      "right" : "public double getMinY()",
      "info" : "MethodDeclaration[12456-12855]:MethodDeclaration[12456-12855]"
    }, {
      "left" : "public double getMaxY()",
      "right" : "public double getMaxY()",
      "info" : "MethodDeclaration[12863-13250]:MethodDeclaration[12863-13250]"
    }, {
      "left" : "public Class getTimePeriodClass()",
      "right" : "public Class getTimePeriodClass()",
      "info" : "MethodDeclaration[13258-13782]:MethodDeclaration[13258-13782]"
    }, {
      "left" : "public TimeSeriesDataItem getDataItem(int index)",
      "right" : "public TimeSeriesDataItem getDataItem(int index)",
      "info" : "MethodDeclaration[13790-14319]:MethodDeclaration[13790-14319]"
    }, {
      "left" : "public TimeSeriesDataItem getDataItem(RegularTimePeriod period)",
      "right" : "public TimeSeriesDataItem getDataItem(RegularTimePeriod period)",
      "info" : "MethodDeclaration[14327-15036]:MethodDeclaration[14327-15036]"
    }, {
      "left" : "TimeSeriesDataItem getRawDataItem(int index)",
      "right" : "TimeSeriesDataItem getRawDataItem(int index)",
      "info" : "MethodDeclaration[15044-15568]:MethodDeclaration[15044-15568]"
    }, {
      "left" : "TimeSeriesDataItem getRawDataItem(RegularTimePeriod period)",
      "right" : "TimeSeriesDataItem getRawDataItem(RegularTimePeriod period)",
      "info" : "MethodDeclaration[15576-16264]:MethodDeclaration[15576-16264]"
    }, {
      "left" : "public RegularTimePeriod getTimePeriod(int index)",
      "right" : "public RegularTimePeriod getTimePeriod(int index)",
      "info" : "MethodDeclaration[16272-16554]:MethodDeclaration[16272-16554]"
    }, {
      "left" : "public RegularTimePeriod getNextTimePeriod()",
      "right" : "public RegularTimePeriod getNextTimePeriod()",
      "info" : "MethodDeclaration[16562-16881]:MethodDeclaration[16562-16881]"
    }, {
      "left" : "public Collection getTimePeriods()",
      "right" : "public Collection getTimePeriods()",
      "info" : "MethodDeclaration[16889-17271]:MethodDeclaration[16889-17271]"
    }, {
      "left" : "public Collection getTimePeriodsUniqueToOtherSeries(TimeSeries series)",
      "right" : "public Collection getTimePeriodsUniqueToOtherSeries(TimeSeries series)",
      "info" : "MethodDeclaration[17279-17982]:MethodDeclaration[17279-17982]"
    }, {
      "left" : "public int getIndex(RegularTimePeriod period)",
      "right" : "public int getIndex(RegularTimePeriod period)",
      "info" : "MethodDeclaration[17990-18551]:MethodDeclaration[17990-18551]"
    }, {
      "left" : "public Number getValue(int index)",
      "right" : "public Number getValue(int index)",
      "info" : "MethodDeclaration[18559-18831]:MethodDeclaration[18559-18831]"
    }, {
      "left" : "public Number getValue(RegularTimePeriod period)",
      "right" : "public Number getValue(RegularTimePeriod period)",
      "info" : "MethodDeclaration[18839-19372]:MethodDeclaration[18839-19372]"
    }, {
      "left" : "public void add(TimeSeriesDataItem item)",
      "right" : "public void add(TimeSeriesDataItem item)",
      "info" : "MethodDeclaration[19380-19701]:MethodDeclaration[19380-19701]"
    }, {
      "left" : "public void add(TimeSeriesDataItem item, boolean notify)",
      "right" : "public void add(TimeSeriesDataItem item, boolean notify)",
      "info" : "MethodDeclaration[19709-22852]:MethodDeclaration[19709-22852]"
    }, {
      "left" : "public void add(RegularTimePeriod period, double value)",
      "right" : "public void add(RegularTimePeriod period, double value)",
      "info" : "MethodDeclaration[22860-23249]:MethodDeclaration[22860-23249]"
    }, {
      "left" : "public void add(RegularTimePeriod period, double value, boolean notify)",
      "right" : "public void add(RegularTimePeriod period, double value, boolean notify)",
      "info" : "MethodDeclaration[23257-23770]:MethodDeclaration[23257-23770]"
    }, {
      "left" : "public void add(RegularTimePeriod period, Number value)",
      "right" : "public void add(RegularTimePeriod period, Number value)",
      "info" : "MethodDeclaration[23778-24228]:MethodDeclaration[23778-24228]"
    }, {
      "left" : "public void add(RegularTimePeriod period, Number value, boolean notify)",
      "right" : "public void add(RegularTimePeriod period, Number value, boolean notify)",
      "info" : "MethodDeclaration[24236-24779]:MethodDeclaration[24236-24779]"
    }, {
      "left" : "public void update(RegularTimePeriod period, Number value)",
      "right" : "public void update(RegularTimePeriod period, Number value)",
      "info" : "MethodDeclaration[24787-25469]:MethodDeclaration[24787-25469]"
    }, {
      "left" : "public void update(int index, Number value)",
      "right" : "public void update(int index, Number value)",
      "info" : "MethodDeclaration[25477-26422]:MethodDeclaration[25477-26422]"
    }, {
      "left" : "public TimeSeries addAndOrUpdate(TimeSeries series)",
      "right" : "public TimeSeries addAndOrUpdate(TimeSeries series)",
      "info" : "MethodDeclaration[26430-27258]:MethodDeclaration[26430-27258]"
    }, {
      "left" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period,\r\n                                          double value)",
      "right" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period,\r\n                                          double value)",
      "info" : "MethodDeclaration[27266-27878]:MethodDeclaration[27266-27878]"
    }, {
      "left" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period,\r\n                                          Number value)",
      "right" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period,\r\n                                          Number value)",
      "info" : "MethodDeclaration[27886-28540]:MethodDeclaration[27886-28540]"
    }, {
      "left" : "public TimeSeriesDataItem addOrUpdate(TimeSeriesDataItem item)",
      "right" : "public TimeSeriesDataItem addOrUpdate(TimeSeriesDataItem item)",
      "info" : "MethodDeclaration[28548-31496]:MethodDeclaration[28548-31496]"
    }, {
      "left" : "public void removeAgedItems(boolean notify)",
      "right" : "public void removeAgedItems(boolean notify)",
      "info" : "MethodDeclaration[31504-32592]:MethodDeclaration[31504-32592]"
    }, {
      "left" : "public void removeAgedItems(long latest, boolean notify)",
      "right" : "public void removeAgedItems(long latest, boolean notify)",
      "info" : "MethodDeclaration[32600-34592]:MethodDeclaration[32600-34592]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[34600-34998]:MethodDeclaration[34600-34998]"
    }, {
      "left" : "public void delete(RegularTimePeriod period)",
      "right" : "public void delete(RegularTimePeriod period)",
      "info" : "MethodDeclaration[35006-35783]:MethodDeclaration[35006-35783]"
    }, {
      "left" : "public void delete(int start, int end)",
      "right" : "public void delete(int start, int end)",
      "info" : "MethodDeclaration[35791-36087]:MethodDeclaration[35791-36087]"
    }, {
      "left" : "public void delete(int start, int end, boolean notify)",
      "right" : "public void delete(int start, int end, boolean notify)",
      "info" : "MethodDeclaration[36095-36849]:MethodDeclaration[36095-36849]"
    }, {
      "left" : "public Object clone() throws CloneNotSupportedException",
      "right" : "public Object clone() throws CloneNotSupportedException",
      "info" : "MethodDeclaration[36857-37550]:MethodDeclaration[36857-37550]"
    }, {
      "left" : "public TimeSeries createCopy(int start, int end)\r\n            throws CloneNotSupportedException",
      "right" : "public TimeSeries createCopy(int start, int end)\r\n            throws CloneNotSupportedException",
      "info" : "MethodDeclaration[37558-38953]:MethodDeclaration[37558-39019]"
    }, {
      "left" : "public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)\r\n        throws CloneNotSupportedException",
      "right" : "public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)\r\n        throws CloneNotSupportedException",
      "info" : "MethodDeclaration[38961-40947]:MethodDeclaration[39027-41013]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[40955-42285]:MethodDeclaration[41021-42351]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[42293-43530]:MethodDeclaration[42359-43596]"
    }, {
      "left" : "private void updateBoundsForAddedItem(TimeSeriesDataItem item)",
      "right" : "private void updateBoundsForAddedItem(TimeSeriesDataItem item)",
      "info" : "MethodDeclaration[43538-44048]:MethodDeclaration[43604-44114]"
    }, {
      "left" : "private void updateBoundsForRemovedItem(TimeSeriesDataItem item)",
      "right" : "private void updateBoundsForRemovedItem(TimeSeriesDataItem item)",
      "info" : "MethodDeclaration[44056-44690]:MethodDeclaration[44122-44756]"
    }, {
      "left" : "private void findBoundsByIteration()",
      "right" : "private void findBoundsByIteration()",
      "info" : "MethodDeclaration[44698-45191]:MethodDeclaration[44764-45257]"
    }, {
      "left" : "private double minIgnoreNaN(double a, double b)",
      "right" : "private double minIgnoreNaN(double a, double b)",
      "info" : "MethodDeclaration[45199-45751]:MethodDeclaration[45265-45817]"
    }, {
      "left" : "private double maxIgnoreNaN(double a, double b)",
      "right" : "private double maxIgnoreNaN(double a, double b)",
      "info" : "MethodDeclaration[45759-46311]:MethodDeclaration[45825-46377]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5471-5477]:Modifier[5471-5477]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[5478-5483]:TYPE_DECLARATION_KIND[5478-5483]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleName[5484-5494]:SimpleName[5484-5494]"
    }, {
      "left" : "Series",
      "right" : "Series",
      "info" : "SimpleType[5503-5509]:SimpleType[5503-5509]"
    }, {
      "left" : "Cloneable",
      "right" : "Cloneable",
      "info" : "SimpleType[5521-5530]:SimpleType[5521-5530]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[5532-5544]:SimpleType[5532-5544]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6976-6982]:Modifier[6976-6982]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleName[6983-6993]:SimpleName[6983-6993]"
    }, {
      "left" : "Comparable name",
      "right" : "Comparable name",
      "info" : "SingleVariableDeclaration[6994-7009]:SingleVariableDeclaration[6994-7009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7011-7095]:Block[7011-7095]"
    }, {
      "left" : "this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION);",
      "right" : "this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION);",
      "info" : "ConstructorInvocation[7022-7088]:ConstructorInvocation[7022-7088]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7689-7695]:Modifier[7689-7695]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleName[7696-7706]:SimpleName[7696-7706]"
    }, {
      "left" : "Comparable name",
      "right" : "Comparable name",
      "info" : "SingleVariableDeclaration[7707-7722]:SingleVariableDeclaration[7707-7722]"
    }, {
      "left" : "String domain",
      "right" : "String domain",
      "info" : "SingleVariableDeclaration[7724-7737]:SingleVariableDeclaration[7724-7737]"
    }, {
      "left" : "String range",
      "right" : "String range",
      "info" : "SingleVariableDeclaration[7739-7751]:SingleVariableDeclaration[7739-7751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7753-8094]:Block[7753-8094]"
    }, {
      "left" : "super(name);",
      "right" : "super(name);",
      "info" : "SuperConstructorInvocation[7764-7776]:SuperConstructorInvocation[7764-7776]"
    }, {
      "left" : "this.domain = domain;",
      "right" : "this.domain = domain;",
      "info" : "ExpressionStatement[7786-7807]:ExpressionStatement[7786-7807]"
    }, {
      "left" : "this.range = range;",
      "right" : "this.range = range;",
      "info" : "ExpressionStatement[7817-7836]:ExpressionStatement[7817-7836]"
    }, {
      "left" : "this.timePeriodClass = null;",
      "right" : "this.timePeriodClass = null;",
      "info" : "ExpressionStatement[7846-7874]:ExpressionStatement[7846-7874]"
    }, {
      "left" : "this.data = new java.util.ArrayList();",
      "right" : "this.data = new java.util.ArrayList();",
      "info" : "ExpressionStatement[7884-7922]:ExpressionStatement[7884-7922]"
    }, {
      "left" : "this.maximumItemCount = Integer.MAX_VALUE;",
      "right" : "this.maximumItemCount = Integer.MAX_VALUE;",
      "info" : "ExpressionStatement[7932-7974]:ExpressionStatement[7932-7974]"
    }, {
      "left" : "this.maximumItemAge = Long.MAX_VALUE;",
      "right" : "this.maximumItemAge = Long.MAX_VALUE;",
      "info" : "ExpressionStatement[7984-8021]:ExpressionStatement[7984-8021]"
    }, {
      "left" : "this.minY = Double.NaN;",
      "right" : "this.minY = Double.NaN;",
      "info" : "ExpressionStatement[8031-8054]:ExpressionStatement[8031-8054]"
    }, {
      "left" : "this.maxY = Double.NaN;",
      "right" : "this.maxY = Double.NaN;",
      "info" : "ExpressionStatement[8064-8087]:ExpressionStatement[8064-8087]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8288-8294]:Modifier[8288-8294]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8295-8301]:SimpleType[8295-8301]"
    }, {
      "left" : "getDomainDescription",
      "right" : "getDomainDescription",
      "info" : "SimpleName[8302-8322]:SimpleName[8302-8322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8325-8362]:Block[8325-8362]"
    }, {
      "left" : "return this.domain;",
      "right" : "return this.domain;",
      "info" : "ReturnStatement[8336-8355]:ReturnStatement[8336-8355]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8703-8709]:Modifier[8703-8709]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8710-8714]:PrimitiveType[8710-8714]"
    }, {
      "left" : "setDomainDescription",
      "right" : "setDomainDescription",
      "info" : "SimpleName[8715-8735]:SimpleName[8715-8735]"
    }, {
      "left" : "String description",
      "right" : "String description",
      "info" : "SingleVariableDeclaration[8736-8754]:SingleVariableDeclaration[8736-8754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8756-8892]:Block[8756-8892]"
    }, {
      "left" : "String old = this.domain;",
      "right" : "String old = this.domain;",
      "info" : "VariableDeclarationStatement[8767-8792]:VariableDeclarationStatement[8767-8792]"
    }, {
      "left" : "this.domain = description;",
      "right" : "this.domain = description;",
      "info" : "ExpressionStatement[8802-8828]:ExpressionStatement[8802-8828]"
    }, {
      "left" : "firePropertyChange(\"Domain\", old, description);",
      "right" : "firePropertyChange(\"Domain\", old, description);",
      "info" : "ExpressionStatement[8838-8885]:ExpressionStatement[8838-8885]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9083-9089]:Modifier[9083-9089]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[9090-9096]:SimpleType[9090-9096]"
    }, {
      "left" : "getRangeDescription",
      "right" : "getRangeDescription",
      "info" : "SimpleName[9097-9116]:SimpleName[9097-9116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9119-9155]:Block[9119-9155]"
    }, {
      "left" : "return this.range;",
      "right" : "return this.range;",
      "info" : "ReturnStatement[9130-9148]:ReturnStatement[9130-9148]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9469-9475]:Modifier[9469-9475]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9476-9480]:PrimitiveType[9476-9480]"
    }, {
      "left" : "setRangeDescription",
      "right" : "setRangeDescription",
      "info" : "SimpleName[9481-9500]:SimpleName[9481-9500]"
    }, {
      "left" : "String description",
      "right" : "String description",
      "info" : "SingleVariableDeclaration[9501-9519]:SingleVariableDeclaration[9501-9519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9521-9654]:Block[9521-9654]"
    }, {
      "left" : "String old = this.range;",
      "right" : "String old = this.range;",
      "info" : "VariableDeclarationStatement[9532-9556]:VariableDeclarationStatement[9532-9556]"
    }, {
      "left" : "this.range = description;",
      "right" : "this.range = description;",
      "info" : "ExpressionStatement[9566-9591]:ExpressionStatement[9566-9591]"
    }, {
      "left" : "firePropertyChange(\"Range\", old, description);",
      "right" : "firePropertyChange(\"Range\", old, description);",
      "info" : "ExpressionStatement[9601-9647]:ExpressionStatement[9601-9647]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9771-9777]:Modifier[9771-9777]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[9778-9781]:PrimitiveType[9778-9781]"
    }, {
      "left" : "getItemCount",
      "right" : "getItemCount",
      "info" : "SimpleName[9782-9794]:SimpleName[9782-9794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9797-9839]:Block[9797-9839]"
    }, {
      "left" : "return this.data.size();",
      "right" : "return this.data.size();",
      "info" : "ReturnStatement[9808-9832]:ReturnStatement[9808-9832]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10051-10057]:Modifier[10051-10057]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[10058-10062]:SimpleType[10058-10062]"
    }, {
      "left" : "getItems",
      "right" : "getItems",
      "info" : "SimpleName[10063-10071]:SimpleName[10063-10071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10074-10196]:Block[10074-10196]"
    }, {
      "left" : "return Collections.unmodifiableList(this.data);",
      "right" : "return Collections.unmodifiableList(this.data);",
      "info" : "ReturnStatement[10142-10189]:ReturnStatement[10142-10189]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10459-10465]:Modifier[10459-10465]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[10466-10469]:PrimitiveType[10466-10469]"
    }, {
      "left" : "getMaximumItemCount",
      "right" : "getMaximumItemCount",
      "info" : "SimpleName[10470-10489]:SimpleName[10470-10489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10492-10539]:Block[10492-10539]"
    }, {
      "left" : "return this.maximumItemCount;",
      "right" : "return this.maximumItemCount;",
      "info" : "ReturnStatement[10503-10532]:ReturnStatement[10503-10532]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10999-11005]:Modifier[10999-11005]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11006-11010]:PrimitiveType[11006-11010]"
    }, {
      "left" : "setMaximumItemCount",
      "right" : "setMaximumItemCount",
      "info" : "SimpleName[11011-11030]:SimpleName[11011-11030]"
    }, {
      "left" : "int maximum",
      "right" : "int maximum",
      "info" : "SingleVariableDeclaration[11031-11042]:SingleVariableDeclaration[11031-11042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11044-11341]:Block[11044-11341]"
    }, {
      "left" : "if (maximum < 0)",
      "right" : "if (maximum < 0)",
      "info" : "IfStatement[11055-11165]:IfStatement[11055-11165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11072-11165]:Block[11072-11165]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Negative 'maximum' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Negative 'maximum' argument.\");",
      "info" : "ThrowStatement[11087-11154]:ThrowStatement[11087-11154]"
    }, {
      "left" : "this.maximumItemCount = maximum;",
      "right" : "this.maximumItemCount = maximum;",
      "info" : "ExpressionStatement[11175-11207]:ExpressionStatement[11175-11207]"
    }, {
      "left" : "int count = this.data.size();",
      "right" : "int count = this.data.size();",
      "info" : "VariableDeclarationStatement[11217-11246]:VariableDeclarationStatement[11217-11246]"
    }, {
      "left" : "if (count > maximum)",
      "right" : "if (count > maximum)",
      "info" : "IfStatement[11256-11334]:IfStatement[11256-11334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11277-11334]:Block[11277-11334]"
    }, {
      "left" : "delete(0, count - maximum - 1);",
      "right" : "delete(0, count - maximum - 1);",
      "info" : "ExpressionStatement[11292-11323]:ExpressionStatement[11292-11323]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11530-11536]:Modifier[11530-11536]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[11537-11541]:PrimitiveType[11537-11541]"
    }, {
      "left" : "getMaximumItemAge",
      "right" : "getMaximumItemAge",
      "info" : "SimpleName[11542-11559]:SimpleName[11542-11559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11562-11607]:Block[11562-11607]"
    }, {
      "left" : "return this.maximumItemAge;",
      "right" : "return this.maximumItemAge;",
      "info" : "ReturnStatement[11573-11600]:ReturnStatement[11573-11600]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12159-12165]:Modifier[12159-12165]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12166-12170]:PrimitiveType[12166-12170]"
    }, {
      "left" : "setMaximumItemAge",
      "right" : "setMaximumItemAge",
      "info" : "SimpleName[12171-12188]:SimpleName[12171-12188]"
    }, {
      "left" : "long periods",
      "right" : "long periods",
      "info" : "SingleVariableDeclaration[12189-12201]:SingleVariableDeclaration[12189-12201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12203-12448]:Block[12203-12448]"
    }, {
      "left" : "if (periods < 0)",
      "right" : "if (periods < 0)",
      "info" : "IfStatement[12214-12324]:IfStatement[12214-12324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12231-12324]:Block[12231-12324]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Negative 'periods' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Negative 'periods' argument.\");",
      "info" : "ThrowStatement[12246-12313]:ThrowStatement[12246-12313]"
    }, {
      "left" : "this.maximumItemAge = periods;",
      "right" : "this.maximumItemAge = periods;",
      "info" : "ExpressionStatement[12334-12364]:ExpressionStatement[12334-12364]"
    }, {
      "left" : "removeAgedItems(true);",
      "right" : "removeAgedItems(true);",
      "info" : "ExpressionStatement[12374-12396]:ExpressionStatement[12374-12396]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12796-12802]:Modifier[12796-12802]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[12803-12809]:PrimitiveType[12803-12809]"
    }, {
      "left" : "getMinY",
      "right" : "getMinY",
      "info" : "SimpleName[12810-12817]:SimpleName[12810-12817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12820-12855]:Block[12820-12855]"
    }, {
      "left" : "return this.minY;",
      "right" : "return this.minY;",
      "info" : "ReturnStatement[12831-12848]:ReturnStatement[12831-12848]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13191-13197]:Modifier[13191-13197]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[13198-13204]:PrimitiveType[13198-13204]"
    }, {
      "left" : "getMaxY",
      "right" : "getMaxY",
      "info" : "SimpleName[13205-13212]:SimpleName[13205-13212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13215-13250]:Block[13215-13250]"
    }, {
      "left" : "return this.maxY;",
      "right" : "return this.maxY;",
      "info" : "ReturnStatement[13226-13243]:ReturnStatement[13226-13243]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13702-13708]:Modifier[13702-13708]"
    }, {
      "left" : "Class",
      "right" : "Class",
      "info" : "SimpleType[13709-13714]:SimpleType[13709-13714]"
    }, {
      "left" : "getTimePeriodClass",
      "right" : "getTimePeriodClass",
      "info" : "SimpleName[13715-13733]:SimpleName[13715-13733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13736-13782]:Block[13736-13782]"
    }, {
      "left" : "return this.timePeriodClass;",
      "right" : "return this.timePeriodClass;",
      "info" : "ReturnStatement[13747-13775]:ReturnStatement[13747-13775]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14133-14139]:Modifier[14133-14139]"
    }, {
      "left" : "TimeSeriesDataItem",
      "right" : "TimeSeriesDataItem",
      "info" : "SimpleType[14140-14158]:SimpleType[14140-14158]"
    }, {
      "left" : "getDataItem",
      "right" : "getDataItem",
      "info" : "SimpleName[14159-14170]:SimpleName[14159-14170]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[14171-14180]:SingleVariableDeclaration[14171-14180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14182-14319]:Block[14182-14319]"
    }, {
      "left" : "TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);",
      "right" : "TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);",
      "info" : "VariableDeclarationStatement[14193-14261]:VariableDeclarationStatement[14193-14261]"
    }, {
      "left" : "return (TimeSeriesDataItem) item.clone();",
      "right" : "return (TimeSeriesDataItem) item.clone();",
      "info" : "ReturnStatement[14271-14312]:ReturnStatement[14271-14312]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14794-14800]:Modifier[14794-14800]"
    }, {
      "left" : "TimeSeriesDataItem",
      "right" : "TimeSeriesDataItem",
      "info" : "SimpleType[14801-14819]:SimpleType[14801-14819]"
    }, {
      "left" : "getDataItem",
      "right" : "getDataItem",
      "info" : "SimpleName[14820-14831]:SimpleName[14820-14831]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[14832-14856]:SingleVariableDeclaration[14832-14856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14858-15036]:Block[14858-15036]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[14869-14898]:VariableDeclarationStatement[14869-14898]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[14908-15029]:IfStatement[14908-15029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14924-14976]:Block[14924-14976]"
    }, {
      "left" : "return getDataItem(index);",
      "right" : "return getDataItem(index);",
      "info" : "ReturnStatement[14939-14965]:ReturnStatement[14939-14965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14991-15029]:Block[14991-15029]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[15006-15018]:ReturnStatement[15006-15018]"
    }, {
      "left" : "TimeSeriesDataItem",
      "right" : "TimeSeriesDataItem",
      "info" : "SimpleType[15456-15474]:SimpleType[15456-15474]"
    }, {
      "left" : "getRawDataItem",
      "right" : "getRawDataItem",
      "info" : "SimpleName[15475-15489]:SimpleName[15475-15489]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[15490-15499]:SingleVariableDeclaration[15490-15499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15501-15568]:Block[15501-15568]"
    }, {
      "left" : "return (TimeSeriesDataItem) this.data.get(index);",
      "right" : "return (TimeSeriesDataItem) this.data.get(index);",
      "info" : "ReturnStatement[15512-15561]:ReturnStatement[15512-15561]"
    }, {
      "left" : "TimeSeriesDataItem",
      "right" : "TimeSeriesDataItem",
      "info" : "SimpleType[16003-16021]:SimpleType[16003-16021]"
    }, {
      "left" : "getRawDataItem",
      "right" : "getRawDataItem",
      "info" : "SimpleName[16022-16036]:SimpleName[16022-16036]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[16037-16061]:SingleVariableDeclaration[16037-16061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16063-16264]:Block[16063-16264]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[16074-16103]:VariableDeclarationStatement[16074-16103]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[16113-16257]:IfStatement[16113-16257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16129-16204]:Block[16129-16204]"
    }, {
      "left" : "return (TimeSeriesDataItem) this.data.get(index);",
      "right" : "return (TimeSeriesDataItem) this.data.get(index);",
      "info" : "ReturnStatement[16144-16193]:ReturnStatement[16144-16193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16219-16257]:Block[16219-16257]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16234-16246]:ReturnStatement[16234-16246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16445-16451]:Modifier[16445-16451]"
    }, {
      "left" : "RegularTimePeriod",
      "right" : "RegularTimePeriod",
      "info" : "SimpleType[16452-16469]:SimpleType[16452-16469]"
    }, {
      "left" : "getTimePeriod",
      "right" : "getTimePeriod",
      "info" : "SimpleName[16470-16483]:SimpleName[16470-16483]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[16484-16493]:SingleVariableDeclaration[16484-16493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16495-16554]:Block[16495-16554]"
    }, {
      "left" : "return getRawDataItem(index).getPeriod();",
      "right" : "return getRawDataItem(index).getPeriod();",
      "info" : "ReturnStatement[16506-16547]:ReturnStatement[16506-16547]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16730-16736]:Modifier[16730-16736]"
    }, {
      "left" : "RegularTimePeriod",
      "right" : "RegularTimePeriod",
      "info" : "SimpleType[16737-16754]:SimpleType[16737-16754]"
    }, {
      "left" : "getNextTimePeriod",
      "right" : "getNextTimePeriod",
      "info" : "SimpleName[16755-16772]:SimpleName[16755-16772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16775-16881]:Block[16775-16881]"
    }, {
      "left" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "right" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "info" : "VariableDeclarationStatement[16786-16845]:VariableDeclarationStatement[16786-16845]"
    }, {
      "left" : "return last.next();",
      "right" : "return last.next();",
      "info" : "ReturnStatement[16855-16874]:ReturnStatement[16855-16874]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17042-17048]:Modifier[17042-17048]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[17049-17059]:SimpleType[17049-17059]"
    }, {
      "left" : "getTimePeriods",
      "right" : "getTimePeriods",
      "info" : "SimpleName[17060-17074]:SimpleName[17060-17074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17077-17271]:Block[17077-17271]"
    }, {
      "left" : "Collection result = new java.util.ArrayList();",
      "right" : "Collection result = new java.util.ArrayList();",
      "info" : "VariableDeclarationStatement[17088-17134]:VariableDeclarationStatement[17088-17134]"
    }, {
      "left" : "for (int i = 0; i < getItemCount(); i++)",
      "right" : "for (int i = 0; i < getItemCount(); i++)",
      "info" : "ForStatement[17144-17240]:ForStatement[17144-17240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17185-17240]:Block[17185-17240]"
    }, {
      "left" : "result.add(getTimePeriod(i));",
      "right" : "result.add(getTimePeriod(i));",
      "info" : "ExpressionStatement[17200-17229]:ExpressionStatement[17200-17229]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[17250-17264]:ReturnStatement[17250-17264]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17563-17569]:Modifier[17563-17569]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[17570-17580]:SimpleType[17570-17580]"
    }, {
      "left" : "getTimePeriodsUniqueToOtherSeries",
      "right" : "getTimePeriodsUniqueToOtherSeries",
      "info" : "SimpleName[17581-17614]:SimpleName[17581-17614]"
    }, {
      "left" : "TimeSeries series",
      "right" : "TimeSeries series",
      "info" : "SingleVariableDeclaration[17615-17632]:SingleVariableDeclaration[17615-17632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17634-17982]:Block[17634-17982]"
    }, {
      "left" : "Collection result = new java.util.ArrayList();",
      "right" : "Collection result = new java.util.ArrayList();",
      "info" : "VariableDeclarationStatement[17645-17691]:VariableDeclarationStatement[17645-17691]"
    }, {
      "left" : "for (int i = 0; i < series.getItemCount(); i++)",
      "right" : "for (int i = 0; i < series.getItemCount(); i++)",
      "info" : "ForStatement[17701-17951]:ForStatement[17701-17951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17749-17951]:Block[17749-17951]"
    }, {
      "left" : "RegularTimePeriod period = series.getTimePeriod(i);",
      "right" : "RegularTimePeriod period = series.getTimePeriod(i);",
      "info" : "VariableDeclarationStatement[17764-17815]:VariableDeclarationStatement[17764-17815]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[17829-17858]:VariableDeclarationStatement[17829-17858]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[17872-17940]:IfStatement[17872-17940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17887-17940]:Block[17887-17940]"
    }, {
      "left" : "result.add(period);",
      "right" : "result.add(period);",
      "info" : "ExpressionStatement[17906-17925]:ExpressionStatement[17906-17925]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[17961-17975]:ReturnStatement[17961-17975]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18216-18222]:Modifier[18216-18222]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[18223-18226]:PrimitiveType[18223-18226]"
    }, {
      "left" : "getIndex",
      "right" : "getIndex",
      "info" : "SimpleName[18227-18235]:SimpleName[18227-18235]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[18236-18260]:SingleVariableDeclaration[18236-18260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18262-18551]:Block[18262-18551]"
    }, {
      "left" : "if (period == null)",
      "right" : "if (period == null)",
      "info" : "IfStatement[18273-18381]:IfStatement[18273-18381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18293-18381]:Block[18293-18381]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "info" : "ThrowStatement[18308-18370]:ThrowStatement[18308-18370]"
    }, {
      "left" : "TimeSeriesDataItem dummy = new TimeSeriesDataItem(\r\n              period, Integer.MIN_VALUE);",
      "right" : "TimeSeriesDataItem dummy = new TimeSeriesDataItem(\r\n              period, Integer.MIN_VALUE);",
      "info" : "VariableDeclarationStatement[18391-18484]:VariableDeclarationStatement[18391-18484]"
    }, {
      "left" : "return Collections.binarySearch(this.data, dummy);",
      "right" : "return Collections.binarySearch(this.data, dummy);",
      "info" : "ReturnStatement[18494-18544]:ReturnStatement[18494-18544]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18739-18745]:Modifier[18739-18745]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[18746-18752]:SimpleType[18746-18752]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[18753-18761]:SimpleName[18753-18761]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[18762-18771]:SingleVariableDeclaration[18762-18771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18773-18831]:Block[18773-18831]"
    }, {
      "left" : "return getRawDataItem(index).getValue();",
      "right" : "return getRawDataItem(index).getValue();",
      "info" : "ReturnStatement[18784-18824]:ReturnStatement[18784-18824]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19148-19154]:Modifier[19148-19154]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[19155-19161]:SimpleType[19155-19161]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[19162-19170]:SimpleName[19162-19170]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[19171-19195]:SingleVariableDeclaration[19171-19195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19197-19372]:Block[19197-19372]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[19208-19237]:VariableDeclarationStatement[19208-19237]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[19247-19365]:IfStatement[19247-19365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19263-19312]:Block[19263-19312]"
    }, {
      "left" : "return getValue(index);",
      "right" : "return getValue(index);",
      "info" : "ReturnStatement[19278-19301]:ReturnStatement[19278-19301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19327-19365]:Block[19327-19365]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19342-19354]:ReturnStatement[19342-19354]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19626-19632]:Modifier[19626-19632]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19633-19637]:PrimitiveType[19633-19637]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[19638-19641]:SimpleName[19638-19641]"
    }, {
      "left" : "TimeSeriesDataItem item",
      "right" : "TimeSeriesDataItem item",
      "info" : "SingleVariableDeclaration[19642-19665]:SingleVariableDeclaration[19642-19665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19667-19701]:Block[19667-19701]"
    }, {
      "left" : "add(item, true);",
      "right" : "add(item, true);",
      "info" : "ExpressionStatement[19678-19694]:ExpressionStatement[19678-19694]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19996-20002]:Modifier[19996-20002]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20003-20007]:PrimitiveType[20003-20007]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[20008-20011]:SimpleName[20008-20011]"
    }, {
      "left" : "TimeSeriesDataItem item",
      "right" : "TimeSeriesDataItem item",
      "info" : "SingleVariableDeclaration[20012-20035]:SingleVariableDeclaration[20012-20035]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[20037-20051]:SingleVariableDeclaration[20037-20051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20053-22852]:Block[20053-22852]"
    }, {
      "left" : "if (item == null)",
      "right" : "if (item == null)",
      "info" : "IfStatement[20064-20168]:IfStatement[20064-20168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20082-20168]:Block[20082-20168]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'item' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'item' argument.\");",
      "info" : "ThrowStatement[20097-20157]:ThrowStatement[20097-20157]"
    }, {
      "left" : "item = (TimeSeriesDataItem) item.clone();",
      "right" : "item = (TimeSeriesDataItem) item.clone();",
      "info" : "ExpressionStatement[20178-20219]:ExpressionStatement[20178-20219]"
    }, {
      "left" : "Class c = item.getPeriod().getClass();",
      "right" : "Class c = item.getPeriod().getClass();",
      "info" : "VariableDeclarationStatement[20229-20267]:VariableDeclarationStatement[20229-20267]"
    }, {
      "left" : "if (this.timePeriodClass == null)",
      "right" : "if (this.timePeriodClass == null)",
      "info" : "IfStatement[20277-20863]:IfStatement[20277-20863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20311-20362]:Block[20311-20362]"
    }, {
      "left" : "this.timePeriodClass = c;",
      "right" : "this.timePeriodClass = c;",
      "info" : "ExpressionStatement[20326-20351]:ExpressionStatement[20326-20351]"
    }, {
      "left" : "if (!this.timePeriodClass.equals(c))",
      "right" : "if (!this.timePeriodClass.equals(c))",
      "info" : "IfStatement[20377-20863]:IfStatement[20377-20863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20414-20863]:Block[20414-20863]"
    }, {
      "left" : "StringBuffer b = new StringBuffer();",
      "right" : "StringBuffer b = new StringBuffer();",
      "info" : "VariableDeclarationStatement[20429-20465]:VariableDeclarationStatement[20429-20465]"
    }, {
      "left" : "b.append(\"You are trying to add data where the time period class \");",
      "right" : "b.append(\"You are trying to add data where the time period class \");",
      "info" : "ExpressionStatement[20479-20547]:ExpressionStatement[20479-20547]"
    }, {
      "left" : "b.append(\"is \");",
      "right" : "b.append(\"is \");",
      "info" : "ExpressionStatement[20561-20577]:ExpressionStatement[20561-20577]"
    }, {
      "left" : "b.append(item.getPeriod().getClass().getName());",
      "right" : "b.append(item.getPeriod().getClass().getName());",
      "info" : "ExpressionStatement[20591-20639]:ExpressionStatement[20591-20639]"
    }, {
      "left" : "b.append(\", but the TimeSeries is expecting an instance of \");",
      "right" : "b.append(\", but the TimeSeries is expecting an instance of \");",
      "info" : "ExpressionStatement[20653-20715]:ExpressionStatement[20653-20715]"
    }, {
      "left" : "b.append(this.timePeriodClass.getName());",
      "right" : "b.append(this.timePeriodClass.getName());",
      "info" : "ExpressionStatement[20729-20770]:ExpressionStatement[20729-20770]"
    }, {
      "left" : "b.append(\".\");",
      "right" : "b.append(\".\");",
      "info" : "ExpressionStatement[20784-20798]:ExpressionStatement[20784-20798]"
    }, {
      "left" : "throw new SeriesException(b.toString());",
      "right" : "throw new SeriesException(b.toString());",
      "info" : "ThrowStatement[20812-20852]:ThrowStatement[20812-20852]"
    }, {
      "left" : "boolean added = false;",
      "right" : "boolean added = false;",
      "info" : "VariableDeclarationStatement[20944-20966]:VariableDeclarationStatement[20944-20966]"
    }, {
      "left" : "int count = getItemCount();",
      "right" : "int count = getItemCount();",
      "info" : "VariableDeclarationStatement[20976-21003]:VariableDeclarationStatement[20976-21003]"
    }, {
      "left" : "if (count == 0)",
      "right" : "if (count == 0)",
      "info" : "IfStatement[21013-22187]:IfStatement[21013-22187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21029-21102]:Block[21029-21102]"
    }, {
      "left" : "this.data.add(item);",
      "right" : "this.data.add(item);",
      "info" : "ExpressionStatement[21044-21064]:ExpressionStatement[21044-21064]"
    }, {
      "left" : "added = true;",
      "right" : "added = true;",
      "info" : "ExpressionStatement[21078-21091]:ExpressionStatement[21078-21091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21117-22187]:Block[21117-22187]"
    }, {
      "left" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "right" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "info" : "VariableDeclarationStatement[21132-21191]:VariableDeclarationStatement[21132-21191]"
    }, {
      "left" : "if (item.getPeriod().compareTo(last) > 0)",
      "right" : "if (item.getPeriod().compareTo(last) > 0)",
      "info" : "IfStatement[21205-22176]:IfStatement[21205-22176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21247-21332]:Block[21247-21332]"
    }, {
      "left" : "this.data.add(item);",
      "right" : "this.data.add(item);",
      "info" : "ExpressionStatement[21266-21286]:ExpressionStatement[21266-21286]"
    }, {
      "left" : "added = true;",
      "right" : "added = true;",
      "info" : "ExpressionStatement[21304-21317]:ExpressionStatement[21304-21317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21351-22176]:Block[21351-22176]"
    }, {
      "left" : "int index = Collections.binarySearch(this.data, item);",
      "right" : "int index = Collections.binarySearch(this.data, item);",
      "info" : "VariableDeclarationStatement[21370-21424]:VariableDeclarationStatement[21370-21424]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[21442-22161]:IfStatement[21442-22161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21457-21566]:Block[21457-21566]"
    }, {
      "left" : "this.data.add(-index - 1, item);",
      "right" : "this.data.add(-index - 1, item);",
      "info" : "ExpressionStatement[21480-21512]:ExpressionStatement[21480-21512]"
    }, {
      "left" : "added = true;",
      "right" : "added = true;",
      "info" : "ExpressionStatement[21534-21547]:ExpressionStatement[21534-21547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21589-22161]:Block[21589-22161]"
    }, {
      "left" : "StringBuffer b = new StringBuffer();",
      "right" : "StringBuffer b = new StringBuffer();",
      "info" : "VariableDeclarationStatement[21612-21648]:VariableDeclarationStatement[21612-21648]"
    }, {
      "left" : "b.append(\"You are attempting to add an observation for \");",
      "right" : "b.append(\"You are attempting to add an observation for \");",
      "info" : "ExpressionStatement[21670-21728]:ExpressionStatement[21670-21728]"
    }, {
      "left" : "b.append(\"the time period \");",
      "right" : "b.append(\"the time period \");",
      "info" : "ExpressionStatement[21750-21779]:ExpressionStatement[21750-21779]"
    }, {
      "left" : "b.append(item.getPeriod().toString());",
      "right" : "b.append(item.getPeriod().toString());",
      "info" : "ExpressionStatement[21801-21839]:ExpressionStatement[21801-21839]"
    }, {
      "left" : "b.append(\" but the series already contains an observation\");",
      "right" : "b.append(\" but the series already contains an observation\");",
      "info" : "ExpressionStatement[21861-21921]:ExpressionStatement[21861-21921]"
    }, {
      "left" : "b.append(\" for that time period. Duplicates are not \");",
      "right" : "b.append(\" for that time period. Duplicates are not \");",
      "info" : "ExpressionStatement[21943-21998]:ExpressionStatement[21943-21998]"
    }, {
      "left" : "b.append(\"permitted.  Try using the addOrUpdate() method.\");",
      "right" : "b.append(\"permitted.  Try using the addOrUpdate() method.\");",
      "info" : "ExpressionStatement[22020-22080]:ExpressionStatement[22020-22080]"
    }, {
      "left" : "throw new SeriesException(b.toString());",
      "right" : "throw new SeriesException(b.toString());",
      "info" : "ThrowStatement[22102-22142]:ThrowStatement[22102-22142]"
    }, {
      "left" : "if (added)",
      "right" : "if (added)",
      "info" : "IfStatement[22197-22843]:IfStatement[22197-22843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22208-22843]:Block[22208-22843]"
    }, {
      "left" : "updateBoundsForAddedItem(item);",
      "right" : "updateBoundsForAddedItem(item);",
      "info" : "ExpressionStatement[22223-22254]:ExpressionStatement[22223-22254]"
    }, {
      "left" : "if (getItemCount() > this.maximumItemCount)",
      "right" : "if (getItemCount() > this.maximumItemCount)",
      "info" : "IfStatement[22345-22535]:IfStatement[22345-22535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22389-22535]:Block[22389-22535]"
    }, {
      "left" : "TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0);",
      "right" : "TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0);",
      "info" : "VariableDeclarationStatement[22408-22472]:VariableDeclarationStatement[22408-22472]"
    }, {
      "left" : "updateBoundsForRemovedItem(d);",
      "right" : "updateBoundsForRemovedItem(d);",
      "info" : "ExpressionStatement[22490-22520]:ExpressionStatement[22490-22520]"
    }, {
      "left" : "removeAgedItems(false);",
      "right" : "removeAgedItems(false);",
      "info" : "ExpressionStatement[22551-22574]:ExpressionStatement[22551-22574]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[22766-22832]:IfStatement[22766-22832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22778-22832]:Block[22778-22832]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[22797-22817]:ExpressionStatement[22797-22817]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23111-23117]:Modifier[23111-23117]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23118-23122]:PrimitiveType[23118-23122]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[23123-23126]:SimpleName[23123-23126]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[23127-23151]:SingleVariableDeclaration[23127-23151]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[23153-23165]:SingleVariableDeclaration[23153-23165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23167-23249]:Block[23167-23249]"
    }, {
      "left" : "add(period, value, true);",
      "right" : "add(period, value, true);",
      "info" : "ExpressionStatement[23217-23242]:ExpressionStatement[23217-23242]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23549-23555]:Modifier[23549-23555]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23556-23560]:PrimitiveType[23556-23560]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[23561-23564]:SimpleName[23561-23564]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[23565-23589]:SingleVariableDeclaration[23565-23589]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[23591-23603]:SingleVariableDeclaration[23591-23603]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[23605-23619]:SingleVariableDeclaration[23605-23619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23621-23770]:Block[23621-23770]"
    }, {
      "left" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "right" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "info" : "VariableDeclarationStatement[23671-23735]:VariableDeclarationStatement[23671-23735]"
    }, {
      "left" : "add(item, notify);",
      "right" : "add(item, notify);",
      "info" : "ExpressionStatement[23745-23763]:ExpressionStatement[23745-23763]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24090-24096]:Modifier[24090-24096]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24097-24101]:PrimitiveType[24097-24101]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[24102-24105]:SimpleName[24102-24105]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[24106-24130]:SingleVariableDeclaration[24106-24130]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[24132-24144]:SingleVariableDeclaration[24132-24144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24146-24228]:Block[24146-24228]"
    }, {
      "left" : "add(period, value, true);",
      "right" : "add(period, value, true);",
      "info" : "ExpressionStatement[24196-24221]:ExpressionStatement[24196-24221]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24558-24564]:Modifier[24558-24564]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24565-24569]:PrimitiveType[24565-24569]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[24570-24573]:SimpleName[24570-24573]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[24574-24598]:SingleVariableDeclaration[24574-24598]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[24600-24612]:SingleVariableDeclaration[24600-24612]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[24614-24628]:SingleVariableDeclaration[24614-24628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24630-24779]:Block[24630-24779]"
    }, {
      "left" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "right" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "info" : "VariableDeclarationStatement[24680-24744]:VariableDeclarationStatement[24680-24744]"
    }, {
      "left" : "add(item, notify);",
      "right" : "add(item, notify);",
      "info" : "ExpressionStatement[24754-24772]:ExpressionStatement[24754-24772]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25072-25078]:Modifier[25072-25078]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25079-25083]:PrimitiveType[25079-25083]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[25084-25090]:SimpleName[25084-25090]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[25091-25115]:SingleVariableDeclaration[25091-25115]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[25117-25129]:SingleVariableDeclaration[25117-25129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25131-25469]:Block[25131-25469]"
    }, {
      "left" : "TimeSeriesDataItem temp = new TimeSeriesDataItem(period, value);",
      "right" : "TimeSeriesDataItem temp = new TimeSeriesDataItem(period, value);",
      "info" : "VariableDeclarationStatement[25142-25206]:VariableDeclarationStatement[25142-25206]"
    }, {
      "left" : "int index = Collections.binarySearch(this.data, temp);",
      "right" : "int index = Collections.binarySearch(this.data, temp);",
      "info" : "VariableDeclarationStatement[25216-25270]:VariableDeclarationStatement[25216-25270]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[25280-25431]:IfStatement[25280-25431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25295-25431]:Block[25295-25431]"
    }, {
      "left" : "throw new SeriesException(\"There is no existing value for the \"\r\n                    + \"specified 'period'.\");",
      "right" : "throw new SeriesException(\"There is no existing value for the \"\r\n                    + \"specified 'period'.\");",
      "info" : "ThrowStatement[25310-25420]:ThrowStatement[25310-25420]"
    }, {
      "left" : "update(index, value);",
      "right" : "update(index, value);",
      "info" : "ExpressionStatement[25441-25462]:ExpressionStatement[25441-25462]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25672-25678]:Modifier[25672-25678]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25679-25683]:PrimitiveType[25679-25683]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[25684-25690]:SimpleName[25684-25690]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[25691-25700]:SingleVariableDeclaration[25691-25700]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[25702-25714]:SingleVariableDeclaration[25702-25714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25716-26422]:Block[25716-26422]"
    }, {
      "left" : "TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);",
      "right" : "TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);",
      "info" : "VariableDeclarationStatement[25727-25795]:VariableDeclarationStatement[25727-25795]"
    }, {
      "left" : "boolean iterate = false;",
      "right" : "boolean iterate = false;",
      "info" : "VariableDeclarationStatement[25805-25829]:VariableDeclarationStatement[25805-25829]"
    }, {
      "left" : "Number oldYN = item.getValue();",
      "right" : "Number oldYN = item.getValue();",
      "info" : "VariableDeclarationStatement[25839-25870]:VariableDeclarationStatement[25839-25870]"
    }, {
      "left" : "if (oldYN != null)",
      "right" : "if (oldYN != null)",
      "info" : "IfStatement[25880-26081]:IfStatement[25880-26081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25899-26081]:Block[25899-26081]"
    }, {
      "left" : "double oldY = oldYN.doubleValue();",
      "right" : "double oldY = oldYN.doubleValue();",
      "info" : "VariableDeclarationStatement[25914-25948]:VariableDeclarationStatement[25914-25948]"
    }, {
      "left" : "if (!Double.isNaN(oldY))",
      "right" : "if (!Double.isNaN(oldY))",
      "info" : "IfStatement[25962-26070]:IfStatement[25962-26070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25987-26070]:Block[25987-26070]"
    }, {
      "left" : "iterate = oldY <= this.minY || oldY >= this.maxY;",
      "right" : "iterate = oldY <= this.minY || oldY >= this.maxY;",
      "info" : "ExpressionStatement[26006-26055]:ExpressionStatement[26006-26055]"
    }, {
      "left" : "item.setValue(value);",
      "right" : "item.setValue(value);",
      "info" : "ExpressionStatement[26091-26112]:ExpressionStatement[26091-26112]"
    }, {
      "left" : "if (iterate)",
      "right" : "if (iterate)",
      "info" : "IfStatement[26122-26385]:IfStatement[26122-26385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26135-26185]:Block[26135-26185]"
    }, {
      "left" : "findBoundsByIteration();",
      "right" : "findBoundsByIteration();",
      "info" : "ExpressionStatement[26150-26174]:ExpressionStatement[26150-26174]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[26200-26385]:IfStatement[26200-26385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26219-26385]:Block[26219-26385]"
    }, {
      "left" : "double yy = value.doubleValue();",
      "right" : "double yy = value.doubleValue();",
      "info" : "VariableDeclarationStatement[26234-26266]:VariableDeclarationStatement[26234-26266]"
    }, {
      "left" : "this.minY = minIgnoreNaN(this.minY, yy);",
      "right" : "this.minY = minIgnoreNaN(this.minY, yy);",
      "info" : "ExpressionStatement[26280-26320]:ExpressionStatement[26280-26320]"
    }, {
      "left" : "this.maxY = maxIgnoreNaN(this.maxY, yy);",
      "right" : "this.maxY = maxIgnoreNaN(this.maxY, yy);",
      "info" : "ExpressionStatement[26334-26374]:ExpressionStatement[26334-26374]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[26395-26415]:ExpressionStatement[26395-26415]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26722-26728]:Modifier[26722-26728]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleType[26729-26739]:SimpleType[26729-26739]"
    }, {
      "left" : "addAndOrUpdate",
      "right" : "addAndOrUpdate",
      "info" : "SimpleName[26740-26754]:SimpleName[26740-26754]"
    }, {
      "left" : "TimeSeries series",
      "right" : "TimeSeries series",
      "info" : "SingleVariableDeclaration[26755-26772]:SingleVariableDeclaration[26755-26772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26774-27258]:Block[26774-27258]"
    }, {
      "left" : "TimeSeries overwritten = new TimeSeries(\"Overwritten values from: \"\r\n                + getKey());",
      "right" : "TimeSeries overwritten = new TimeSeries(\"Overwritten values from: \"\r\n                + getKey());",
      "info" : "VariableDeclarationStatement[26785-26882]:VariableDeclarationStatement[26785-26882]"
    }, {
      "left" : "for (int i = 0; i < series.getItemCount(); i++)",
      "right" : "for (int i = 0; i < series.getItemCount(); i++)",
      "info" : "ForStatement[26892-27222]:ForStatement[26892-27222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26940-27222]:Block[26940-27222]"
    }, {
      "left" : "TimeSeriesDataItem item = series.getRawDataItem(i);",
      "right" : "TimeSeriesDataItem item = series.getRawDataItem(i);",
      "info" : "VariableDeclarationStatement[26955-27006]:VariableDeclarationStatement[26955-27006]"
    }, {
      "left" : "TimeSeriesDataItem oldItem = addOrUpdate(item.getPeriod(),\r\n                    item.getValue());",
      "right" : "TimeSeriesDataItem oldItem = addOrUpdate(item.getPeriod(),\r\n                    item.getValue());",
      "info" : "VariableDeclarationStatement[27020-27117]:VariableDeclarationStatement[27020-27117]"
    }, {
      "left" : "if (oldItem != null)",
      "right" : "if (oldItem != null)",
      "info" : "IfStatement[27131-27211]:IfStatement[27131-27211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27152-27211]:Block[27152-27211]"
    }, {
      "left" : "overwritten.add(oldItem);",
      "right" : "overwritten.add(oldItem);",
      "info" : "ExpressionStatement[27171-27196]:ExpressionStatement[27171-27196]"
    }, {
      "left" : "return overwritten;",
      "right" : "return overwritten;",
      "info" : "ReturnStatement[27232-27251]:ReturnStatement[27232-27251]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27693-27699]:Modifier[27693-27699]"
    }, {
      "left" : "TimeSeriesDataItem",
      "right" : "TimeSeriesDataItem",
      "info" : "SimpleType[27700-27718]:SimpleType[27700-27718]"
    }, {
      "left" : "addOrUpdate",
      "right" : "addOrUpdate",
      "info" : "SimpleName[27719-27730]:SimpleName[27719-27730]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[27731-27755]:SingleVariableDeclaration[27731-27755]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[27800-27812]:SingleVariableDeclaration[27800-27812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27814-27878]:Block[27814-27878]"
    }, {
      "left" : "return addOrUpdate(period, new Double(value));",
      "right" : "return addOrUpdate(period, new Double(value));",
      "info" : "ReturnStatement[27825-27871]:ReturnStatement[27825-27871]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28343-28349]:Modifier[28343-28349]"
    }, {
      "left" : "TimeSeriesDataItem",
      "right" : "TimeSeriesDataItem",
      "info" : "SimpleType[28350-28368]:SimpleType[28350-28368]"
    }, {
      "left" : "addOrUpdate",
      "right" : "addOrUpdate",
      "info" : "SimpleName[28369-28380]:SimpleName[28369-28380]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[28381-28405]:SingleVariableDeclaration[28381-28405]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[28450-28462]:SingleVariableDeclaration[28450-28462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28464-28540]:Block[28464-28540]"
    }, {
      "left" : "return addOrUpdate(new TimeSeriesDataItem(period, value));",
      "right" : "return addOrUpdate(new TimeSeriesDataItem(period, value));",
      "info" : "ReturnStatement[28475-28533]:ReturnStatement[28475-28533]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28927-28933]:Modifier[28927-28933]"
    }, {
      "left" : "TimeSeriesDataItem",
      "right" : "TimeSeriesDataItem",
      "info" : "SimpleType[28934-28952]:SimpleType[28934-28952]"
    }, {
      "left" : "addOrUpdate",
      "right" : "addOrUpdate",
      "info" : "SimpleName[28953-28964]:SimpleName[28953-28964]"
    }, {
      "left" : "TimeSeriesDataItem item",
      "right" : "TimeSeriesDataItem item",
      "info" : "SingleVariableDeclaration[28965-28988]:SingleVariableDeclaration[28965-28988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28990-31496]:Block[28990-31496]"
    }, {
      "left" : "if (item == null)",
      "right" : "if (item == null)",
      "info" : "IfStatement[29003-29109]:IfStatement[29003-29109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29021-29109]:Block[29021-29109]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "info" : "ThrowStatement[29036-29098]:ThrowStatement[29036-29098]"
    }, {
      "left" : "Class periodClass = item.getPeriod().getClass();",
      "right" : "Class periodClass = item.getPeriod().getClass();",
      "info" : "VariableDeclarationStatement[29119-29167]:VariableDeclarationStatement[29119-29167]"
    }, {
      "left" : "if (this.timePeriodClass == null)",
      "right" : "if (this.timePeriodClass == null)",
      "info" : "IfStatement[29177-29664]:IfStatement[29177-29664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29211-29272]:Block[29211-29272]"
    }, {
      "left" : "this.timePeriodClass = periodClass;",
      "right" : "this.timePeriodClass = periodClass;",
      "info" : "ExpressionStatement[29226-29261]:ExpressionStatement[29226-29261]"
    }, {
      "left" : "if (!this.timePeriodClass.equals(periodClass))",
      "right" : "if (!this.timePeriodClass.equals(periodClass))",
      "info" : "IfStatement[29287-29664]:IfStatement[29287-29664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29334-29664]:Block[29334-29664]"
    }, {
      "left" : "String msg = \"You are trying to add data where the time \"\r\n                    + \"period class is \" + periodClass.getName()\r\n                    + \", but the TimeSeries is expecting an instance of \"\r\n                    + this.timePeriodClass.getName() + \".\";",
      "right" : "String msg = \"You are trying to add data where the time \"\r\n                    + \"period class is \" + periodClass.getName()\r\n                    + \", but the TimeSeries is expecting an instance of \"\r\n                    + this.timePeriodClass.getName() + \".\";",
      "info" : "VariableDeclarationStatement[29349-29608]:VariableDeclarationStatement[29349-29608]"
    }, {
      "left" : "throw new SeriesException(msg);",
      "right" : "throw new SeriesException(msg);",
      "info" : "ThrowStatement[29622-29653]:ThrowStatement[29622-29653]"
    }, {
      "left" : "TimeSeriesDataItem overwritten = null;",
      "right" : "TimeSeriesDataItem overwritten = null;",
      "info" : "VariableDeclarationStatement[29674-29712]:VariableDeclarationStatement[29674-29712]"
    }, {
      "left" : "int index = Collections.binarySearch(this.data, item);",
      "right" : "int index = Collections.binarySearch(this.data, item);",
      "info" : "VariableDeclarationStatement[29722-29776]:VariableDeclarationStatement[29722-29776]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[29786-31225]:IfStatement[29786-31225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29802-30769]:Block[29802-30769]"
    }, {
      "left" : "TimeSeriesDataItem existing\r\n                    = (TimeSeriesDataItem) this.data.get(index);",
      "right" : "TimeSeriesDataItem existing\r\n                    = (TimeSeriesDataItem) this.data.get(index);",
      "info" : "VariableDeclarationStatement[29817-29910]:VariableDeclarationStatement[29817-29910]"
    }, {
      "left" : "overwritten = (TimeSeriesDataItem) existing.clone();",
      "right" : "overwritten = (TimeSeriesDataItem) existing.clone();",
      "info" : "ExpressionStatement[29924-29976]:ExpressionStatement[29924-29976]"
    }, {
      "left" : "boolean iterate = false;",
      "right" : "boolean iterate = false;",
      "info" : "VariableDeclarationStatement[30112-30136]:VariableDeclarationStatement[30112-30136]"
    }, {
      "left" : "Number oldYN = existing.getValue();",
      "right" : "Number oldYN = existing.getValue();",
      "info" : "VariableDeclarationStatement[30150-30185]:VariableDeclarationStatement[30150-30185]"
    }, {
      "left" : "double oldY = oldYN != null ? oldYN.doubleValue() : Double.NaN;",
      "right" : "double oldY = oldYN != null ? oldYN.doubleValue() : Double.NaN;",
      "info" : "VariableDeclarationStatement[30199-30262]:VariableDeclarationStatement[30199-30262]"
    }, {
      "left" : "if (!Double.isNaN(oldY))",
      "right" : "if (!Double.isNaN(oldY))",
      "info" : "IfStatement[30276-30384]:IfStatement[30276-30384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30301-30384]:Block[30301-30384]"
    }, {
      "left" : "iterate = oldY <= this.minY || oldY >= this.maxY;",
      "right" : "iterate = oldY <= this.minY || oldY >= this.maxY;",
      "info" : "ExpressionStatement[30320-30369]:ExpressionStatement[30320-30369]"
    }, {
      "left" : "existing.setValue(item.getValue());",
      "right" : "existing.setValue(item.getValue());",
      "info" : "ExpressionStatement[30398-30433]:ExpressionStatement[30398-30433]"
    }, {
      "left" : "if (iterate)",
      "right" : "if (iterate)",
      "info" : "IfStatement[30447-30758]:IfStatement[30447-30758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30460-30518]:Block[30460-30518]"
    }, {
      "left" : "findBoundsByIteration();",
      "right" : "findBoundsByIteration();",
      "info" : "ExpressionStatement[30479-30503]:ExpressionStatement[30479-30503]"
    }, {
      "left" : "if (item.getValue() != null)",
      "right" : "if (item.getValue() != null)",
      "info" : "IfStatement[30537-30758]:IfStatement[30537-30758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30566-30758]:Block[30566-30758]"
    }, {
      "left" : "double yy = item.getValue().doubleValue();",
      "right" : "double yy = item.getValue().doubleValue();",
      "info" : "VariableDeclarationStatement[30585-30627]:VariableDeclarationStatement[30585-30627]"
    }, {
      "left" : "this.minY = minIgnoreNaN(this.minY, yy);",
      "right" : "this.minY = minIgnoreNaN(this.minY, yy);",
      "info" : "ExpressionStatement[30645-30685]:ExpressionStatement[30645-30685]"
    }, {
      "left" : "this.maxY = minIgnoreNaN(this.maxY, yy);",
      "right" : "this.maxY = minIgnoreNaN(this.maxY, yy);",
      "info" : "ExpressionStatement[30703-30743]:ExpressionStatement[30703-30743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30784-31225]:Block[30784-31225]"
    }, {
      "left" : "item = (TimeSeriesDataItem) item.clone();",
      "right" : "item = (TimeSeriesDataItem) item.clone();",
      "info" : "ExpressionStatement[30799-30840]:ExpressionStatement[30799-30840]"
    }, {
      "left" : "this.data.add(-index - 1, item);",
      "right" : "this.data.add(-index - 1, item);",
      "info" : "ExpressionStatement[30854-30886]:ExpressionStatement[30854-30886]"
    }, {
      "left" : "updateBoundsForAddedItem(item);",
      "right" : "updateBoundsForAddedItem(item);",
      "info" : "ExpressionStatement[30900-30931]:ExpressionStatement[30900-30931]"
    }, {
      "left" : "if (getItemCount() > this.maximumItemCount)",
      "right" : "if (getItemCount() > this.maximumItemCount)",
      "info" : "IfStatement[31024-31214]:IfStatement[31024-31214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31068-31214]:Block[31068-31214]"
    }, {
      "left" : "TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0);",
      "right" : "TimeSeriesDataItem d = (TimeSeriesDataItem) this.data.remove(0);",
      "info" : "VariableDeclarationStatement[31087-31151]:VariableDeclarationStatement[31087-31151]"
    }, {
      "left" : "updateBoundsForRemovedItem(d);",
      "right" : "updateBoundsForRemovedItem(d);",
      "info" : "ExpressionStatement[31169-31199]:ExpressionStatement[31169-31199]"
    }, {
      "left" : "removeAgedItems(false);",
      "right" : "removeAgedItems(false);",
      "info" : "ExpressionStatement[31235-31258]:ExpressionStatement[31235-31258]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[31438-31458]:ExpressionStatement[31438-31458]"
    }, {
      "left" : "return overwritten;",
      "right" : "return overwritten;",
      "info" : "ReturnStatement[31468-31487]:ReturnStatement[31468-31487]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31902-31908]:Modifier[31902-31908]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31909-31913]:PrimitiveType[31909-31913]"
    }, {
      "left" : "removeAgedItems",
      "right" : "removeAgedItems",
      "info" : "SimpleName[31914-31929]:SimpleName[31914-31929]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[31930-31944]:SingleVariableDeclaration[31930-31944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31946-32592]:Block[31946-32592]"
    }, {
      "left" : "if (getItemCount() > 1)",
      "right" : "if (getItemCount() > 1)",
      "info" : "IfStatement[32058-32585]:IfStatement[32058-32585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32082-32585]:Block[32082-32585]"
    }, {
      "left" : "long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();",
      "right" : "long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();",
      "info" : "VariableDeclarationStatement[32097-32162]:VariableDeclarationStatement[32097-32162]"
    }, {
      "left" : "boolean removed = false;",
      "right" : "boolean removed = false;",
      "info" : "VariableDeclarationStatement[32176-32200]:VariableDeclarationStatement[32176-32200]"
    }, {
      "left" : "while ((latest - getTimePeriod(0).getSerialIndex())\r\n                    > this.maximumItemAge)",
      "right" : "while ((latest - getTimePeriod(0).getSerialIndex())\r\n                    > this.maximumItemAge)",
      "info" : "WhileStatement[32214-32397]:WhileStatement[32214-32397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32310-32397]:Block[32310-32397]"
    }, {
      "left" : "this.data.remove(0);",
      "right" : "this.data.remove(0);",
      "info" : "ExpressionStatement[32329-32349]:ExpressionStatement[32329-32349]"
    }, {
      "left" : "removed = true;",
      "right" : "removed = true;",
      "info" : "ExpressionStatement[32367-32382]:ExpressionStatement[32367-32382]"
    }, {
      "left" : "if (removed)",
      "right" : "if (removed)",
      "info" : "IfStatement[32411-32574]:IfStatement[32411-32574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32424-32574]:Block[32424-32574]"
    }, {
      "left" : "findBoundsByIteration();",
      "right" : "findBoundsByIteration();",
      "info" : "ExpressionStatement[32443-32467]:ExpressionStatement[32443-32467]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[32485-32559]:IfStatement[32485-32559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32497-32559]:Block[32497-32559]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[32520-32540]:ExpressionStatement[32520-32540]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33100-33106]:Modifier[33100-33106]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33107-33111]:PrimitiveType[33107-33111]"
    }, {
      "left" : "removeAgedItems",
      "right" : "removeAgedItems",
      "info" : "SimpleName[33112-33127]:SimpleName[33112-33127]"
    }, {
      "left" : "long latest",
      "right" : "long latest",
      "info" : "SingleVariableDeclaration[33128-33139]:SingleVariableDeclaration[33128-33139]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[33141-33155]:SingleVariableDeclaration[33141-33155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33157-34592]:Block[33157-34592]"
    }, {
      "left" : "if (this.data.isEmpty())",
      "right" : "if (this.data.isEmpty())",
      "info" : "IfStatement[33168-33244]:IfStatement[33168-33244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33193-33244]:Block[33193-33244]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[33208-33215]:ReturnStatement[33208-33215]"
    }, {
      "left" : "long index = Long.MAX_VALUE;",
      "right" : "long index = Long.MAX_VALUE;",
      "info" : "VariableDeclarationStatement[33324-33352]:VariableDeclarationStatement[33324-33352]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[33362-34097]:TryStatement[33362-34097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33366-33828]:Block[33366-33828]"
    }, {
      "left" : "Method m = RegularTimePeriod.class.getDeclaredMethod(\r\n                    \"createInstance\", new Class[] {Class.class, Date.class,\r\n                    TimeZone.class});",
      "right" : "Method m = RegularTimePeriod.class.getDeclaredMethod(\r\n                    \"createInstance\", new Class[] {Class.class, Date.class,\r\n                    TimeZone.class});",
      "info" : "VariableDeclarationStatement[33381-33550]:VariableDeclarationStatement[33381-33550]"
    }, {
      "left" : "RegularTimePeriod newest = (RegularTimePeriod) m.invoke(\r\n                    this.timePeriodClass, new Object[] {this.timePeriodClass,\r\n                            new Date(latest), TimeZone.getDefault()});",
      "right" : "RegularTimePeriod newest = (RegularTimePeriod) m.invoke(\r\n                    this.timePeriodClass, new Object[] {this.timePeriodClass,\r\n                            new Date(latest), TimeZone.getDefault()});",
      "info" : "VariableDeclarationStatement[33564-33771]:VariableDeclarationStatement[33564-33771]"
    }, {
      "left" : "index = newest.getSerialIndex();",
      "right" : "index = newest.getSerialIndex();",
      "info" : "ExpressionStatement[33785-33817]:ExpressionStatement[33785-33817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33870-33916]:Block[33870-33916]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[33885-33905]:ExpressionStatement[33885-33905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33959-34005]:Block[33959-34005]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[33974-33994]:ExpressionStatement[33974-33994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34051-34097]:Block[34051-34097]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[34066-34086]:ExpressionStatement[34066-34086]"
    }, {
      "left" : "boolean removed = false;",
      "right" : "boolean removed = false;",
      "info" : "VariableDeclarationStatement[34210-34234]:VariableDeclarationStatement[34210-34234]"
    }, {
      "left" : "while (getItemCount() > 0 && (index\r\n                - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge)",
      "right" : "while (getItemCount() > 0 && (index\r\n                - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge)",
      "info" : "WhileStatement[34244-34432]:WhileStatement[34244-34432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34357-34432]:Block[34357-34432]"
    }, {
      "left" : "this.data.remove(0);",
      "right" : "this.data.remove(0);",
      "info" : "ExpressionStatement[34372-34392]:ExpressionStatement[34372-34392]"
    }, {
      "left" : "removed = true;",
      "right" : "removed = true;",
      "info" : "ExpressionStatement[34406-34421]:ExpressionStatement[34406-34421]"
    }, {
      "left" : "if (removed)",
      "right" : "if (removed)",
      "info" : "IfStatement[34442-34585]:IfStatement[34442-34585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34455-34585]:Block[34455-34585]"
    }, {
      "left" : "findBoundsByIteration();",
      "right" : "findBoundsByIteration();",
      "info" : "ExpressionStatement[34470-34494]:ExpressionStatement[34470-34494]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[34508-34574]:IfStatement[34508-34574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34520-34574]:Block[34520-34574]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[34539-34559]:ExpressionStatement[34539-34559]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34740-34746]:Modifier[34740-34746]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34747-34751]:PrimitiveType[34747-34751]"
    }, {
      "left" : "clear",
      "right" : "clear",
      "info" : "SimpleName[34752-34757]:SimpleName[34752-34757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34760-34998]:Block[34760-34998]"
    }, {
      "left" : "if (this.data.size() > 0)",
      "right" : "if (this.data.size() > 0)",
      "info" : "IfStatement[34771-34991]:IfStatement[34771-34991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34797-34991]:Block[34797-34991]"
    }, {
      "left" : "this.data.clear();",
      "right" : "this.data.clear();",
      "info" : "ExpressionStatement[34812-34830]:ExpressionStatement[34812-34830]"
    }, {
      "left" : "this.timePeriodClass = null;",
      "right" : "this.timePeriodClass = null;",
      "info" : "ExpressionStatement[34844-34872]:ExpressionStatement[34844-34872]"
    }, {
      "left" : "this.minY = Double.NaN;",
      "right" : "this.minY = Double.NaN;",
      "info" : "ExpressionStatement[34886-34909]:ExpressionStatement[34886-34909]"
    }, {
      "left" : "this.maxY = Double.NaN;",
      "right" : "this.maxY = Double.NaN;",
      "info" : "ExpressionStatement[34923-34946]:ExpressionStatement[34923-34946]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[34960-34980]:ExpressionStatement[34960-34980]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35364-35370]:Modifier[35364-35370]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35371-35375]:PrimitiveType[35371-35375]"
    }, {
      "left" : "delete",
      "right" : "delete",
      "info" : "SimpleName[35376-35382]:SimpleName[35376-35382]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[35383-35407]:SingleVariableDeclaration[35383-35407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35409-35783]:Block[35409-35783]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[35420-35449]:VariableDeclarationStatement[35420-35449]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[35459-35776]:IfStatement[35459-35776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35475-35776]:Block[35475-35776]"
    }, {
      "left" : "TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.remove(\r\n                    index);",
      "right" : "TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.remove(\r\n                    index);",
      "info" : "VariableDeclarationStatement[35490-35583]:VariableDeclarationStatement[35490-35583]"
    }, {
      "left" : "updateBoundsForRemovedItem(item);",
      "right" : "updateBoundsForRemovedItem(item);",
      "info" : "ExpressionStatement[35597-35630]:ExpressionStatement[35597-35630]"
    }, {
      "left" : "if (this.data.isEmpty())",
      "right" : "if (this.data.isEmpty())",
      "info" : "IfStatement[35644-35731]:IfStatement[35644-35731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35669-35731]:Block[35669-35731]"
    }, {
      "left" : "this.timePeriodClass = null;",
      "right" : "this.timePeriodClass = null;",
      "info" : "ExpressionStatement[35688-35716]:ExpressionStatement[35688-35716]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[35745-35765]:ExpressionStatement[35745-35765]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36005-36011]:Modifier[36005-36011]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36012-36016]:PrimitiveType[36012-36016]"
    }, {
      "left" : "delete",
      "right" : "delete",
      "info" : "SimpleName[36017-36023]:SimpleName[36017-36023]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[36024-36033]:SingleVariableDeclaration[36024-36033]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[36035-36042]:SingleVariableDeclaration[36035-36042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36044-36087]:Block[36044-36087]"
    }, {
      "left" : "delete(start, end, true);",
      "right" : "delete(start, end, true);",
      "info" : "ExpressionStatement[36055-36080]:ExpressionStatement[36055-36080]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36380-36386]:Modifier[36380-36386]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36387-36391]:PrimitiveType[36387-36391]"
    }, {
      "left" : "delete",
      "right" : "delete",
      "info" : "SimpleName[36392-36398]:SimpleName[36392-36398]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[36399-36408]:SingleVariableDeclaration[36399-36408]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[36410-36417]:SingleVariableDeclaration[36410-36417]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[36419-36433]:SingleVariableDeclaration[36419-36433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36435-36849]:Block[36435-36849]"
    }, {
      "left" : "if (end < start)",
      "right" : "if (end < start)",
      "info" : "IfStatement[36446-36550]:IfStatement[36446-36550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36463-36550]:Block[36463-36550]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "right" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "info" : "ThrowStatement[36478-36539]:ThrowStatement[36478-36539]"
    }, {
      "left" : "for (int i = 0; i <= (end - start); i++)",
      "right" : "for (int i = 0; i <= (end - start); i++)",
      "info" : "ForStatement[36560-36651]:ForStatement[36560-36651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36601-36651]:Block[36601-36651]"
    }, {
      "left" : "this.data.remove(start);",
      "right" : "this.data.remove(start);",
      "info" : "ExpressionStatement[36616-36640]:ExpressionStatement[36616-36640]"
    }, {
      "left" : "findBoundsByIteration();",
      "right" : "findBoundsByIteration();",
      "info" : "ExpressionStatement[36661-36685]:ExpressionStatement[36661-36685]"
    }, {
      "left" : "if (this.data.isEmpty())",
      "right" : "if (this.data.isEmpty())",
      "info" : "IfStatement[36695-36774]:IfStatement[36695-36774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36720-36774]:Block[36720-36774]"
    }, {
      "left" : "this.timePeriodClass = null;",
      "right" : "this.timePeriodClass = null;",
      "info" : "ExpressionStatement[36735-36763]:ExpressionStatement[36735-36763]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[36784-36842]:IfStatement[36784-36842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36796-36842]:Block[36796-36842]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[36811-36831]:ExpressionStatement[36811-36831]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37340-37346]:Modifier[37340-37346]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[37347-37353]:SimpleType[37347-37353]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[37354-37359]:SimpleName[37354-37359]"
    }, {
      "left" : "CloneNotSupportedException",
      "right" : "CloneNotSupportedException",
      "info" : "SimpleType[37369-37395]:SimpleType[37369-37395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37396-37550]:Block[37396-37550]"
    }, {
      "left" : "TimeSeries clone = (TimeSeries) super.clone();",
      "right" : "TimeSeries clone = (TimeSeries) super.clone();",
      "info" : "VariableDeclarationStatement[37407-37453]:VariableDeclarationStatement[37407-37453]"
    }, {
      "left" : "clone.data = (List) ObjectUtilities.deepClone(this.data);",
      "right" : "clone.data = (List) ObjectUtilities.deepClone(this.data);",
      "info" : "ExpressionStatement[37463-37520]:ExpressionStatement[37463-37520]"
    }, {
      "left" : "return clone;",
      "right" : "return clone;",
      "info" : "ReturnStatement[37530-37543]:ReturnStatement[37530-37543]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37999-38005]:Modifier[37999-38005]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleType[38006-38016]:SimpleType[38006-38016]"
    }, {
      "left" : "createCopy",
      "right" : "createCopy",
      "info" : "SimpleName[38017-38027]:SimpleName[38017-38027]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[38028-38037]:SingleVariableDeclaration[38028-38037]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[38039-38046]:SingleVariableDeclaration[38039-38046]"
    }, {
      "left" : "CloneNotSupportedException",
      "right" : "CloneNotSupportedException",
      "info" : "SimpleType[38068-38094]:SimpleType[38068-38094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38095-38953]:Block[38095-39019]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[38106-38206]:IfStatement[38106-38206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38121-38206]:Block[38121-38206]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Requires start >= 0.\");",
      "right" : "throw new IllegalArgumentException(\"Requires start >= 0.\");",
      "info" : "ThrowStatement[38136-38195]:ThrowStatement[38136-38195]"
    }, {
      "left" : "if (end < start)",
      "right" : "if (end < start)",
      "info" : "IfStatement[38216-38320]:IfStatement[38216-38320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38233-38320]:Block[38233-38320]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "right" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "info" : "ThrowStatement[38248-38309]:ThrowStatement[38248-38309]"
    }, {
      "left" : "TimeSeries copy = (TimeSeries) super.clone();",
      "right" : "TimeSeries copy = (TimeSeries) super.clone();",
      "info" : "VariableDeclarationStatement[38330-38375]:VariableDeclarationStatement[38330-38375]"
    }, {
      "left" : "copy.data = new java.util.ArrayList();",
      "right" : "copy.data = new java.util.ArrayList();",
      "info" : "ExpressionStatement[38385-38423]:ExpressionStatement[38451-38489]"
    }, {
      "left" : "if (this.data.size() > 0)",
      "right" : "if (this.data.size() > 0)",
      "info" : "IfStatement[38433-38924]:IfStatement[38499-38990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38459-38924]:Block[38525-38990]"
    }, {
      "left" : "for (int index = start; index <= end; index++)",
      "right" : "for (int index = start; index <= end; index++)",
      "info" : "ForStatement[38474-38913]:ForStatement[38540-38979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38521-38913]:Block[38587-38979]"
    }, {
      "left" : "TimeSeriesDataItem item\r\n                        = (TimeSeriesDataItem) this.data.get(index);",
      "right" : "TimeSeriesDataItem item\r\n                        = (TimeSeriesDataItem) this.data.get(index);",
      "info" : "VariableDeclarationStatement[38540-38633]:VariableDeclarationStatement[38606-38699]"
    }, {
      "left" : "TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();",
      "right" : "TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();",
      "info" : "VariableDeclarationStatement[38651-38712]:VariableDeclarationStatement[38717-38778]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[38730-38898]:TryStatement[38796-38964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38734-38792]:Block[38800-38858]"
    }, {
      "left" : "copy.add(clone);",
      "right" : "copy.add(clone);",
      "info" : "ExpressionStatement[38757-38773]:ExpressionStatement[38823-38839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38836-38898]:Block[38902-38964]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[38859-38879]:ExpressionStatement[38925-38945]"
    }, {
      "left" : "return copy;",
      "right" : "return copy;",
      "info" : "ReturnStatement[38934-38946]:ReturnStatement[39000-39012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39480-39486]:Modifier[39546-39552]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleType[39487-39497]:SimpleType[39553-39563]"
    }, {
      "left" : "createCopy",
      "right" : "createCopy",
      "info" : "SimpleName[39498-39508]:SimpleName[39564-39574]"
    }, {
      "left" : "RegularTimePeriod start",
      "right" : "RegularTimePeriod start",
      "info" : "SingleVariableDeclaration[39509-39532]:SingleVariableDeclaration[39575-39598]"
    }, {
      "left" : "RegularTimePeriod end",
      "right" : "RegularTimePeriod end",
      "info" : "SingleVariableDeclaration[39534-39555]:SingleVariableDeclaration[39600-39621]"
    }, {
      "left" : "CloneNotSupportedException",
      "right" : "CloneNotSupportedException",
      "info" : "SimpleType[39573-39599]:SimpleType[39639-39665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39600-40947]:Block[39666-41013]"
    }, {
      "left" : "if (start == null)",
      "right" : "if (start == null)",
      "info" : "IfStatement[39613-39719]:IfStatement[39679-39785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39632-39719]:Block[39698-39785]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'start' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'start' argument.\");",
      "info" : "ThrowStatement[39647-39708]:ThrowStatement[39713-39774]"
    }, {
      "left" : "if (end == null)",
      "right" : "if (end == null)",
      "info" : "IfStatement[39729-39831]:IfStatement[39795-39897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39746-39831]:Block[39812-39897]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'end' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'end' argument.\");",
      "info" : "ThrowStatement[39761-39820]:ThrowStatement[39827-39886]"
    }, {
      "left" : "if (start.compareTo(end) > 0)",
      "right" : "if (start.compareTo(end) > 0)",
      "info" : "IfStatement[39841-39990]:IfStatement[39907-40056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39871-39990]:Block[39937-40056]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"Requires start on or before end.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"Requires start on or before end.\");",
      "info" : "ThrowStatement[39886-39979]:ThrowStatement[39952-40045]"
    }, {
      "left" : "boolean emptyRange = false;",
      "right" : "boolean emptyRange = false;",
      "info" : "VariableDeclarationStatement[40000-40027]:VariableDeclarationStatement[40066-40093]"
    }, {
      "left" : "int startIndex = getIndex(start);",
      "right" : "int startIndex = getIndex(start);",
      "info" : "VariableDeclarationStatement[40037-40070]:VariableDeclarationStatement[40103-40136]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[40080-40293]:IfStatement[40146-40359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40100-40293]:Block[40166-40359]"
    }, {
      "left" : "startIndex = -(startIndex + 1);",
      "right" : "startIndex = -(startIndex + 1);",
      "info" : "ExpressionStatement[40115-40146]:ExpressionStatement[40181-40212]"
    }, {
      "left" : "if (startIndex == this.data.size())",
      "right" : "if (startIndex == this.data.size())",
      "info" : "IfStatement[40160-40282]:IfStatement[40226-40348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40196-40282]:Block[40262-40348]"
    }, {
      "left" : "emptyRange = true;",
      "right" : "emptyRange = true;",
      "info" : "ExpressionStatement[40215-40233]:ExpressionStatement[40281-40299]"
    }, {
      "left" : "int endIndex = getIndex(end);",
      "right" : "int endIndex = getIndex(end);",
      "info" : "VariableDeclarationStatement[40303-40332]:VariableDeclarationStatement[40369-40398]"
    }, {
      "left" : "if (endIndex < 0)",
      "right" : "if (endIndex < 0)",
      "info" : "IfStatement[40342-40580]:IfStatement[40408-40646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40360-40580]:Block[40426-40646]"
    }, {
      "left" : "endIndex = -(endIndex + 1);",
      "right" : "endIndex = -(endIndex + 1);",
      "info" : "ExpressionStatement[40427-40454]:ExpressionStatement[40493-40520]"
    }, {
      "left" : "endIndex = endIndex - 1;",
      "right" : "endIndex = endIndex - 1;",
      "info" : "ExpressionStatement[40507-40531]:ExpressionStatement[40573-40597]"
    }, {
      "left" : "if ((endIndex < 0)  || (endIndex < startIndex))",
      "right" : "if ((endIndex < 0)  || (endIndex < startIndex))",
      "info" : "IfStatement[40590-40682]:IfStatement[40656-40748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40638-40682]:Block[40704-40748]"
    }, {
      "left" : "emptyRange = true;",
      "right" : "emptyRange = true;",
      "info" : "ExpressionStatement[40653-40671]:ExpressionStatement[40719-40737]"
    }, {
      "left" : "if (emptyRange)",
      "right" : "if (emptyRange)",
      "info" : "IfStatement[40692-40938]:IfStatement[40758-41004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40708-40857]:Block[40774-40923]"
    }, {
      "left" : "TimeSeries copy = (TimeSeries) super.clone();",
      "right" : "TimeSeries copy = (TimeSeries) super.clone();",
      "info" : "VariableDeclarationStatement[40723-40768]:VariableDeclarationStatement[40789-40834]"
    }, {
      "left" : "copy.data = new java.util.ArrayList();",
      "right" : "copy.data = new java.util.ArrayList();",
      "info" : "ExpressionStatement[40782-40820]:ExpressionStatement[40848-40886]"
    }, {
      "left" : "return copy;",
      "right" : "return copy;",
      "info" : "ReturnStatement[40834-40846]:ReturnStatement[40900-40912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40872-40938]:Block[40938-41004]"
    }, {
      "left" : "return createCopy(startIndex, endIndex);",
      "right" : "return createCopy(startIndex, endIndex);",
      "info" : "ReturnStatement[40887-40927]:ReturnStatement[40953-40993]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41158-41164]:Modifier[41224-41230]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[41165-41172]:PrimitiveType[41231-41238]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[41173-41179]:SimpleName[41239-41245]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[41180-41190]:SingleVariableDeclaration[41246-41256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41192-42285]:Block[41258-42351]"
    }, {
      "left" : "if (obj == this)",
      "right" : "if (obj == this)",
      "info" : "IfStatement[41203-41258]:IfStatement[41269-41324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41220-41258]:Block[41286-41324]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[41235-41247]:ReturnStatement[41301-41313]"
    }, {
      "left" : "if (!(obj instanceof TimeSeries))",
      "right" : "if (!(obj instanceof TimeSeries))",
      "info" : "IfStatement[41268-41341]:IfStatement[41334-41407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41302-41341]:Block[41368-41407]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[41317-41330]:ReturnStatement[41383-41396]"
    }, {
      "left" : "TimeSeries that = (TimeSeries) obj;",
      "right" : "TimeSeries that = (TimeSeries) obj;",
      "info" : "VariableDeclarationStatement[41351-41386]:VariableDeclarationStatement[41417-41452]"
    }, {
      "left" : "if (!ObjectUtilities.equal(getDomainDescription(),\r\n                that.getDomainDescription()))",
      "right" : "if (!ObjectUtilities.equal(getDomainDescription(),\r\n                that.getDomainDescription()))",
      "info" : "IfStatement[41396-41533]:IfStatement[41462-41599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41494-41533]:Block[41560-41599]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[41509-41522]:ReturnStatement[41575-41588]"
    }, {
      "left" : "if (!ObjectUtilities.equal(getRangeDescription(),\r\n                that.getRangeDescription()))",
      "right" : "if (!ObjectUtilities.equal(getRangeDescription(),\r\n                that.getRangeDescription()))",
      "info" : "IfStatement[41543-41678]:IfStatement[41609-41744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41639-41678]:Block[41705-41744]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[41654-41667]:ReturnStatement[41720-41733]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.timePeriodClass,\r\n                that.timePeriodClass))",
      "right" : "if (!ObjectUtilities.equal(this.timePeriodClass,\r\n                that.timePeriodClass))",
      "info" : "IfStatement[41688-41816]:IfStatement[41754-41882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41777-41816]:Block[41843-41882]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[41792-41805]:ReturnStatement[41858-41871]"
    }, {
      "left" : "if (getMaximumItemAge() != that.getMaximumItemAge())",
      "right" : "if (getMaximumItemAge() != that.getMaximumItemAge())",
      "info" : "IfStatement[41826-41918]:IfStatement[41892-41984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41879-41918]:Block[41945-41984]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[41894-41907]:ReturnStatement[41960-41973]"
    }, {
      "left" : "if (getMaximumItemCount() != that.getMaximumItemCount())",
      "right" : "if (getMaximumItemCount() != that.getMaximumItemCount())",
      "info" : "IfStatement[41928-42024]:IfStatement[41994-42090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41985-42024]:Block[42051-42090]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[42000-42013]:ReturnStatement[42066-42079]"
    }, {
      "left" : "int count = getItemCount();",
      "right" : "int count = getItemCount();",
      "info" : "VariableDeclarationStatement[42034-42061]:VariableDeclarationStatement[42100-42127]"
    }, {
      "left" : "if (count != that.getItemCount())",
      "right" : "if (count != that.getItemCount())",
      "info" : "IfStatement[42071-42144]:IfStatement[42137-42210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42105-42144]:Block[42171-42210]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[42120-42133]:ReturnStatement[42186-42199]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.data, that.data))",
      "right" : "if (!ObjectUtilities.equal(this.data, that.data))",
      "info" : "IfStatement[42154-42243]:IfStatement[42220-42309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42204-42243]:Block[42270-42309]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[42219-42232]:ReturnStatement[42285-42298]"
    }, {
      "left" : "return super.equals(obj);",
      "right" : "return super.equals(obj);",
      "info" : "ReturnStatement[42253-42278]:ReturnStatement[42319-42344]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42398-42404]:Modifier[42464-42470]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[42405-42408]:PrimitiveType[42471-42474]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[42409-42417]:SimpleName[42475-42483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42420-43530]:Block[42486-43596]"
    }, {
      "left" : "int result = super.hashCode();",
      "right" : "int result = super.hashCode();",
      "info" : "VariableDeclarationStatement[42431-42461]:VariableDeclarationStatement[42497-42527]"
    }, {
      "left" : "result = 29 * result + (this.domain != null ? this.domain.hashCode()\r\n                : 0);",
      "right" : "result = 29 * result + (this.domain != null ? this.domain.hashCode()\r\n                : 0);",
      "info" : "ExpressionStatement[42471-42562]:ExpressionStatement[42537-42628]"
    }, {
      "left" : "result = 29 * result + (this.range != null ? this.range.hashCode() : 0);",
      "right" : "result = 29 * result + (this.range != null ? this.range.hashCode() : 0);",
      "info" : "ExpressionStatement[42572-42644]:ExpressionStatement[42638-42710]"
    }, {
      "left" : "result = 29 * result + (this.timePeriodClass != null\r\n                ? this.timePeriodClass.hashCode() : 0);",
      "right" : "result = 29 * result + (this.timePeriodClass != null\r\n                ? this.timePeriodClass.hashCode() : 0);",
      "info" : "ExpressionStatement[42654-42763]:ExpressionStatement[42720-42829]"
    }, {
      "left" : "int count = getItemCount();",
      "right" : "int count = getItemCount();",
      "info" : "VariableDeclarationStatement[42898-42925]:VariableDeclarationStatement[42964-42991]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[42935-43073]:IfStatement[43001-43139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42950-43073]:Block[43016-43139]"
    }, {
      "left" : "TimeSeriesDataItem item = getRawDataItem(0);",
      "right" : "TimeSeriesDataItem item = getRawDataItem(0);",
      "info" : "VariableDeclarationStatement[42965-43009]:VariableDeclarationStatement[43031-43075]"
    }, {
      "left" : "result = 29 * result + item.hashCode();",
      "right" : "result = 29 * result + item.hashCode();",
      "info" : "ExpressionStatement[43023-43062]:ExpressionStatement[43089-43128]"
    }, {
      "left" : "if (count > 1)",
      "right" : "if (count > 1)",
      "info" : "IfStatement[43083-43229]:IfStatement[43149-43295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43098-43229]:Block[43164-43295]"
    }, {
      "left" : "TimeSeriesDataItem item = getRawDataItem(count - 1);",
      "right" : "TimeSeriesDataItem item = getRawDataItem(count - 1);",
      "info" : "VariableDeclarationStatement[43113-43165]:VariableDeclarationStatement[43179-43231]"
    }, {
      "left" : "result = 29 * result + item.hashCode();",
      "right" : "result = 29 * result + item.hashCode();",
      "info" : "ExpressionStatement[43179-43218]:ExpressionStatement[43245-43284]"
    }, {
      "left" : "if (count > 2)",
      "right" : "if (count > 2)",
      "info" : "IfStatement[43239-43385]:IfStatement[43305-43451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43254-43385]:Block[43320-43451]"
    }, {
      "left" : "TimeSeriesDataItem item = getRawDataItem(count / 2);",
      "right" : "TimeSeriesDataItem item = getRawDataItem(count / 2);",
      "info" : "VariableDeclarationStatement[43269-43321]:VariableDeclarationStatement[43335-43387]"
    }, {
      "left" : "result = 29 * result + item.hashCode();",
      "right" : "result = 29 * result + item.hashCode();",
      "info" : "ExpressionStatement[43335-43374]:ExpressionStatement[43401-43440]"
    }, {
      "left" : "result = 29 * result + this.maximumItemCount;",
      "right" : "result = 29 * result + this.maximumItemCount;",
      "info" : "ExpressionStatement[43395-43440]:ExpressionStatement[43461-43506]"
    }, {
      "left" : "result = 29 * result + (int) this.maximumItemAge;",
      "right" : "result = 29 * result + (int) this.maximumItemAge;",
      "info" : "ExpressionStatement[43450-43499]:ExpressionStatement[43516-43565]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[43509-43523]:ReturnStatement[43575-43589]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[43740-43747]:Modifier[43806-43813]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[43748-43752]:PrimitiveType[43814-43818]"
    }, {
      "left" : "updateBoundsForAddedItem",
      "right" : "updateBoundsForAddedItem",
      "info" : "SimpleName[43753-43777]:SimpleName[43819-43843]"
    }, {
      "left" : "TimeSeriesDataItem item",
      "right" : "TimeSeriesDataItem item",
      "info" : "SingleVariableDeclaration[43778-43801]:SingleVariableDeclaration[43844-43867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43803-44048]:Block[43869-44114]"
    }, {
      "left" : "Number yN = item.getValue();",
      "right" : "Number yN = item.getValue();",
      "info" : "VariableDeclarationStatement[43814-43842]:VariableDeclarationStatement[43880-43908]"
    }, {
      "left" : "if (item.getValue() != null)",
      "right" : "if (item.getValue() != null)",
      "info" : "IfStatement[43852-44041]:IfStatement[43918-44107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43881-44041]:Block[43947-44107]"
    }, {
      "left" : "double y = yN.doubleValue();",
      "right" : "double y = yN.doubleValue();",
      "info" : "VariableDeclarationStatement[43896-43924]:VariableDeclarationStatement[43962-43990]"
    }, {
      "left" : "this.minY = minIgnoreNaN(this.minY, y);",
      "right" : "this.minY = minIgnoreNaN(this.minY, y);",
      "info" : "ExpressionStatement[43938-43977]:ExpressionStatement[44004-44043]"
    }, {
      "left" : "this.maxY = maxIgnoreNaN(this.maxY, y);",
      "right" : "this.maxY = maxIgnoreNaN(this.maxY, y);",
      "info" : "ExpressionStatement[43991-44030]:ExpressionStatement[44057-44096]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[44325-44332]:Modifier[44391-44398]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[44333-44337]:PrimitiveType[44399-44403]"
    }, {
      "left" : "updateBoundsForRemovedItem",
      "right" : "updateBoundsForRemovedItem",
      "info" : "SimpleName[44338-44364]:SimpleName[44404-44430]"
    }, {
      "left" : "TimeSeriesDataItem item",
      "right" : "TimeSeriesDataItem item",
      "info" : "SingleVariableDeclaration[44365-44388]:SingleVariableDeclaration[44431-44454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44390-44690]:Block[44456-44756]"
    }, {
      "left" : "Number yN = item.getValue();",
      "right" : "Number yN = item.getValue();",
      "info" : "VariableDeclarationStatement[44401-44429]:VariableDeclarationStatement[44467-44495]"
    }, {
      "left" : "if (yN != null)",
      "right" : "if (yN != null)",
      "info" : "IfStatement[44439-44683]:IfStatement[44505-44749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44455-44683]:Block[44521-44749]"
    }, {
      "left" : "double y = yN.doubleValue();",
      "right" : "double y = yN.doubleValue();",
      "info" : "VariableDeclarationStatement[44470-44498]:VariableDeclarationStatement[44536-44564]"
    }, {
      "left" : "if (!Double.isNaN(y))",
      "right" : "if (!Double.isNaN(y))",
      "info" : "IfStatement[44512-44672]:IfStatement[44578-44738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44534-44672]:Block[44600-44738]"
    }, {
      "left" : "if (y <= this.minY || y >= this.maxY)",
      "right" : "if (y <= this.minY || y >= this.maxY)",
      "info" : "IfStatement[44553-44657]:IfStatement[44619-44723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44591-44657]:Block[44657-44723]"
    }, {
      "left" : "findBoundsByIteration();",
      "right" : "findBoundsByIteration();",
      "info" : "ExpressionStatement[44614-44638]:ExpressionStatement[44680-44704]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[44858-44865]:Modifier[44924-44931]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[44866-44870]:PrimitiveType[44932-44936]"
    }, {
      "left" : "findBoundsByIteration",
      "right" : "findBoundsByIteration",
      "info" : "SimpleName[44871-44892]:SimpleName[44937-44958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44895-45191]:Block[44961-45257]"
    }, {
      "left" : "this.minY = Double.NaN;",
      "right" : "this.minY = Double.NaN;",
      "info" : "ExpressionStatement[44906-44929]:ExpressionStatement[44972-44995]"
    }, {
      "left" : "this.maxY = Double.NaN;",
      "right" : "this.maxY = Double.NaN;",
      "info" : "ExpressionStatement[44939-44962]:ExpressionStatement[45005-45028]"
    }, {
      "left" : "Iterator iterator = this.data.iterator();",
      "right" : "Iterator iterator = this.data.iterator();",
      "info" : "VariableDeclarationStatement[44972-45013]:VariableDeclarationStatement[45038-45079]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[45023-45184]:WhileStatement[45089-45250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45050-45184]:Block[45116-45250]"
    }, {
      "left" : "TimeSeriesDataItem item = (TimeSeriesDataItem) iterator.next();",
      "right" : "TimeSeriesDataItem item = (TimeSeriesDataItem) iterator.next();",
      "info" : "VariableDeclarationStatement[45065-45128]:VariableDeclarationStatement[45131-45194]"
    }, {
      "left" : "updateBoundsForAddedItem(item);",
      "right" : "updateBoundsForAddedItem(item);",
      "info" : "ExpressionStatement[45142-45173]:ExpressionStatement[45208-45239]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[45449-45456]:Modifier[45515-45522]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[45457-45463]:PrimitiveType[45523-45529]"
    }, {
      "left" : "minIgnoreNaN",
      "right" : "minIgnoreNaN",
      "info" : "SimpleName[45464-45476]:SimpleName[45530-45542]"
    }, {
      "left" : "double a",
      "right" : "double a",
      "info" : "SingleVariableDeclaration[45477-45485]:SingleVariableDeclaration[45543-45551]"
    }, {
      "left" : "double b",
      "right" : "double b",
      "info" : "SingleVariableDeclaration[45487-45495]:SingleVariableDeclaration[45553-45561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45497-45751]:Block[45563-45817]"
    }, {
      "left" : "if (Double.isNaN(a))",
      "right" : "if (Double.isNaN(a))",
      "info" : "IfStatement[45508-45744]:IfStatement[45574-45810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45529-45564]:Block[45595-45630]"
    }, {
      "left" : "return b;",
      "right" : "return b;",
      "info" : "ReturnStatement[45544-45553]:ReturnStatement[45610-45619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45579-45744]:Block[45645-45810]"
    }, {
      "left" : "if (Double.isNaN(b))",
      "right" : "if (Double.isNaN(b))",
      "info" : "IfStatement[45594-45733]:IfStatement[45660-45799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45615-45658]:Block[45681-45724]"
    }, {
      "left" : "return a;",
      "right" : "return a;",
      "info" : "ReturnStatement[45634-45643]:ReturnStatement[45700-45709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45677-45733]:Block[45743-45799]"
    }, {
      "left" : "return Math.min(a, b);",
      "right" : "return Math.min(a, b);",
      "info" : "ReturnStatement[45696-45718]:ReturnStatement[45762-45784]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[46009-46016]:Modifier[46075-46082]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[46017-46023]:PrimitiveType[46083-46089]"
    }, {
      "left" : "maxIgnoreNaN",
      "right" : "maxIgnoreNaN",
      "info" : "SimpleName[46024-46036]:SimpleName[46090-46102]"
    }, {
      "left" : "double a",
      "right" : "double a",
      "info" : "SingleVariableDeclaration[46037-46045]:SingleVariableDeclaration[46103-46111]"
    }, {
      "left" : "double b",
      "right" : "double b",
      "info" : "SingleVariableDeclaration[46047-46055]:SingleVariableDeclaration[46113-46121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46057-46311]:Block[46123-46377]"
    }, {
      "left" : "if (Double.isNaN(a))",
      "right" : "if (Double.isNaN(a))",
      "info" : "IfStatement[46068-46304]:IfStatement[46134-46370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46089-46124]:Block[46155-46190]"
    }, {
      "left" : "return b;",
      "right" : "return b;",
      "info" : "ReturnStatement[46104-46113]:ReturnStatement[46170-46179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46139-46304]:Block[46205-46370]"
    }, {
      "left" : "if (Double.isNaN(b))",
      "right" : "if (Double.isNaN(b))",
      "info" : "IfStatement[46154-46293]:IfStatement[46220-46359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46175-46218]:Block[46241-46284]"
    }, {
      "left" : "return a;",
      "right" : "return a;",
      "info" : "ReturnStatement[46194-46203]:ReturnStatement[46260-46269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46237-46293]:Block[46303-46359]"
    }, {
      "left" : "return Math.max(a, b);",
      "right" : "return Math.max(a, b);",
      "info" : "ReturnStatement[46256-46278]:ReturnStatement[46322-46344]"
    } ]
  },
  "interFileMappings" : { }
}