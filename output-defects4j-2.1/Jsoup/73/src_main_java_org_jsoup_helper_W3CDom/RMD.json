{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "W3CDom",
      "right" : "W3CDom",
      "info" : "TypeDeclaration[711-6671]:TypeDeclaration[735-6980]"
    }, {
      "left" : "protected DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
      "right" : "protected DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
      "info" : "FieldDeclaration[920-1000]:FieldDeclaration[944-1024]"
    }, {
      "left" : "public Document fromJsoup(org.jsoup.nodes.Document in)",
      "right" : "public Document fromJsoup(org.jsoup.nodes.Document in)",
      "info" : "MethodDeclaration[1006-1618]:MethodDeclaration[1030-1642]"
    }, {
      "left" : "public void convert(org.jsoup.nodes.Document in, Document out)",
      "right" : "public void convert(org.jsoup.nodes.Document in, Document out)",
      "info" : "MethodDeclaration[1624-2216]:MethodDeclaration[1648-2240]"
    }, {
      "left" : "W3CBuilder",
      "right" : "W3CBuilder",
      "info" : "TypeDeclaration[2222-5993]:TypeDeclaration[2246-6302]"
    }, {
      "left" : "private static final String xmlnsKey = \"xmlns\";",
      "right" : "private static final String xmlnsKey = \"xmlns\";",
      "info" : "FieldDeclaration[2360-2407]:FieldDeclaration[2384-2431]"
    }, {
      "left" : "private static final String xmlnsPrefix = \"xmlns:\";",
      "right" : "private static final String xmlnsPrefix = \"xmlns:\";",
      "info" : "FieldDeclaration[2416-2467]:FieldDeclaration[2440-2491]"
    }, {
      "left" : "private final Document doc;",
      "right" : "private final Document doc;",
      "info" : "FieldDeclaration[2477-2504]:FieldDeclaration[2501-2528]"
    }, {
      "left" : "private Element dest;",
      "right" : "private Element dest;",
      "info" : "FieldDeclaration[2589-2610]:FieldDeclaration[2661-2682]"
    }, {
      "left" : "public W3CBuilder(Document doc)",
      "right" : "public W3CBuilder(Document doc)",
      "info" : "MethodDeclaration[2620-2691]:MethodDeclaration[2692-2833]"
    }, {
      "left" : "public void head(org.jsoup.nodes.Node source, int depth)",
      "right" : "public void head(org.jsoup.nodes.Node source, int depth)",
      "info" : "MethodDeclaration[2701-4272]:MethodDeclaration[2843-4534]"
    }, {
      "left" : "public void tail(org.jsoup.nodes.Node source, int depth)",
      "right" : "public void tail(org.jsoup.nodes.Node source, int depth)",
      "info" : "MethodDeclaration[4282-4548]:MethodDeclaration[4544-4845]"
    }, {
      "left" : "private void copyAttributes(org.jsoup.nodes.Node source, Element el)",
      "right" : "private void copyAttributes(org.jsoup.nodes.Node source, Element el)",
      "info" : "MethodDeclaration[4558-5002]:MethodDeclaration[4855-5299]"
    }, {
      "left" : "private String updateNamespaces(org.jsoup.nodes.Element el)",
      "right" : "private String updateNamespaces(org.jsoup.nodes.Element el)",
      "info" : "MethodDeclaration[5012-5986]:MethodDeclaration[5309-6295]"
    }, {
      "left" : "public String asString(Document doc)",
      "right" : "public String asString(Document doc)",
      "info" : "MethodDeclaration[5999-6669]:MethodDeclaration[6308-6978]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1178-1618]:Block[1202-1642]"
    }, {
      "left" : "Validate.notNull(in);",
      "right" : "Validate.notNull(in);",
      "info" : "ExpressionStatement[1188-1209]:ExpressionStatement[1212-1233]"
    }, {
      "left" : "DocumentBuilder builder;",
      "right" : "DocumentBuilder builder;",
      "info" : "VariableDeclarationStatement[1218-1242]:VariableDeclarationStatement[1242-1266]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[1251-1612]:TryStatement[1275-1636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1255-1513]:Block[1279-1537]"
    }, {
      "left" : "factory.setNamespaceAware(true);",
      "right" : "factory.setNamespaceAware(true);",
      "info" : "ExpressionStatement[1315-1347]:ExpressionStatement[1339-1371]"
    }, {
      "left" : "builder = factory.newDocumentBuilder();",
      "right" : "builder = factory.newDocumentBuilder();",
      "info" : "ExpressionStatement[1360-1399]:ExpressionStatement[1384-1423]"
    }, {
      "left" : "Document out = builder.newDocument();",
      "right" : "Document out = builder.newDocument();",
      "info" : "VariableDeclarationStatement[1412-1449]:VariableDeclarationStatement[1436-1473]"
    }, {
      "left" : "convert(in, out);",
      "right" : "convert(in, out);",
      "info" : "ExpressionStatement[1462-1479]:ExpressionStatement[1486-1503]"
    }, {
      "left" : "return out;",
      "right" : "return out;",
      "info" : "ReturnStatement[1492-1503]:ReturnStatement[1516-1527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1553-1612]:Block[1577-1636]"
    }, {
      "left" : "throw new IllegalStateException(e);",
      "right" : "throw new IllegalStateException(e);",
      "info" : "ThrowStatement[1567-1602]:ThrowStatement[1591-1626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1975-2216]:Block[1999-2240]"
    }, {
      "left" : "if (!StringUtil.isBlank(in.location()))",
      "right" : "if (!StringUtil.isBlank(in.location()))",
      "info" : "IfStatement[1985-2071]:IfStatement[2009-2095]"
    }, {
      "left" : "out.setDocumentURI(in.location());",
      "right" : "out.setDocumentURI(in.location());",
      "info" : "ExpressionStatement[2037-2071]:ExpressionStatement[2061-2095]"
    }, {
      "left" : "org.jsoup.nodes.Element rootEl = in.child(0);",
      "right" : "org.jsoup.nodes.Element rootEl = in.child(0);",
      "info" : "VariableDeclarationStatement[2081-2126]:VariableDeclarationStatement[2105-2150]"
    }, {
      "left" : "NodeTraversor.traverse(new W3CBuilder(out), rootEl);",
      "right" : "NodeTraversor.traverse(new W3CBuilder(out), rootEl);",
      "info" : "ExpressionStatement[2158-2210]:ExpressionStatement[2182-2234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2652-2691]:Block[2724-2833]"
    }, {
      "left" : "this.doc = doc;",
      "right" : "this.doc = doc;",
      "info" : "ExpressionStatement[2666-2681]:ExpressionStatement[2738-2753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2758-4272]:Block[2900-4534]"
    }, {
      "left" : "if (source instanceof org.jsoup.nodes.Element)",
      "right" : "if (source instanceof org.jsoup.nodes.Element)",
      "info" : "IfStatement[2772-4262]:IfStatement[3022-4524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2819-3387]:Block[3069-3649]"
    }, {
      "left" : "org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;",
      "right" : "org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;",
      "info" : "VariableDeclarationStatement[2837-2905]:VariableDeclarationStatement[3087-3155]"
    }, {
      "left" : "String prefix = updateNamespaces(sourceEl);",
      "right" : "String prefix = updateNamespaces(sourceEl);",
      "info" : "VariableDeclarationStatement[2923-2966]:VariableDeclarationStatement[3173-3216]"
    }, {
      "left" : "String namespace = namespaces.get(prefix);",
      "right" : "String namespace = namespacesStack.peek().get(prefix);",
      "info" : "VariableDeclarationStatement[2983-3025]:VariableDeclarationStatement[3233-3287]"
    }, {
      "left" : "Element el = doc.createElementNS(namespace, sourceEl.tagName());",
      "right" : "Element el = doc.createElementNS(namespace, sourceEl.tagName());",
      "info" : "VariableDeclarationStatement[3043-3107]:VariableDeclarationStatement[3305-3369]"
    }, {
      "left" : "copyAttributes(sourceEl, el);",
      "right" : "copyAttributes(sourceEl, el);",
      "info" : "ExpressionStatement[3124-3153]:ExpressionStatement[3386-3415]"
    }, {
      "left" : "if (dest == null)",
      "right" : "if (dest == null)",
      "info" : "IfStatement[3170-3335]:IfStatement[3432-3597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3188-3268]:Block[3450-3530]"
    }, {
      "left" : "doc.appendChild(el);",
      "right" : "doc.appendChild(el);",
      "info" : "ExpressionStatement[3230-3250]:ExpressionStatement[3492-3512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3274-3335]:Block[3536-3597]"
    }, {
      "left" : "dest.appendChild(el);",
      "right" : "dest.appendChild(el);",
      "info" : "ExpressionStatement[3296-3317]:ExpressionStatement[3558-3579]"
    }, {
      "left" : "dest = el;",
      "right" : "dest = el;",
      "info" : "ExpressionStatement[3352-3362]:ExpressionStatement[3614-3624]"
    }, {
      "left" : "if (source instanceof org.jsoup.nodes.TextNode)",
      "right" : "if (source instanceof org.jsoup.nodes.TextNode)",
      "info" : "IfStatement[3393-4262]:IfStatement[3655-4524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3441-3660]:Block[3703-3922]"
    }, {
      "left" : "org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;",
      "right" : "org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;",
      "info" : "VariableDeclarationStatement[3459-3531]:VariableDeclarationStatement[3721-3793]"
    }, {
      "left" : "Text text = doc.createTextNode(sourceText.getWholeText());",
      "right" : "Text text = doc.createTextNode(sourceText.getWholeText());",
      "info" : "VariableDeclarationStatement[3548-3606]:VariableDeclarationStatement[3810-3868]"
    }, {
      "left" : "dest.appendChild(text);",
      "right" : "dest.appendChild(text);",
      "info" : "ExpressionStatement[3623-3646]:ExpressionStatement[3885-3908]"
    }, {
      "left" : "if (source instanceof org.jsoup.nodes.Comment)",
      "right" : "if (source instanceof org.jsoup.nodes.Comment)",
      "info" : "IfStatement[3666-4262]:IfStatement[3928-4524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3713-3939]:Block[3975-4201]"
    }, {
      "left" : "org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;",
      "right" : "org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;",
      "info" : "VariableDeclarationStatement[3731-3804]:VariableDeclarationStatement[3993-4066]"
    }, {
      "left" : "Comment comment = doc.createComment(sourceComment.getData());",
      "right" : "Comment comment = doc.createComment(sourceComment.getData());",
      "info" : "VariableDeclarationStatement[3821-3882]:VariableDeclarationStatement[4083-4144]"
    }, {
      "left" : "dest.appendChild(comment);",
      "right" : "dest.appendChild(comment);",
      "info" : "ExpressionStatement[3899-3925]:ExpressionStatement[4161-4187]"
    }, {
      "left" : "if (source instanceof org.jsoup.nodes.DataNode)",
      "right" : "if (source instanceof org.jsoup.nodes.DataNode)",
      "info" : "IfStatement[3945-4262]:IfStatement[4207-4524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3993-4212]:Block[4255-4474]"
    }, {
      "left" : "org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;",
      "right" : "org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;",
      "info" : "VariableDeclarationStatement[4011-4083]:VariableDeclarationStatement[4273-4345]"
    }, {
      "left" : "Text node = doc.createTextNode(sourceData.getWholeData());",
      "right" : "Text node = doc.createTextNode(sourceData.getWholeData());",
      "info" : "VariableDeclarationStatement[4100-4158]:VariableDeclarationStatement[4362-4420]"
    }, {
      "left" : "dest.appendChild(node);",
      "right" : "dest.appendChild(node);",
      "info" : "ExpressionStatement[4175-4198]:ExpressionStatement[4437-4460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4218-4262]:Block[4480-4524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4339-4548]:Block[4601-4845]"
    }, {
      "left" : "if (source instanceof org.jsoup.nodes.Element && dest.getParentNode() instanceof Element)",
      "right" : "if (source instanceof org.jsoup.nodes.Element && dest.getParentNode() instanceof Element)",
      "info" : "IfStatement[4353-4538]:IfStatement[4615-4800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4443-4538]:Block[4705-4800]"
    }, {
      "left" : "dest = (Element) dest.getParentNode();",
      "right" : "dest = (Element) dest.getParentNode();",
      "info" : "ExpressionStatement[4461-4499]:ExpressionStatement[4723-4761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4627-5002]:Block[4924-5299]"
    }, {
      "left" : "for (Attribute attribute : source.attributes())",
      "right" : "for (Attribute attribute : source.attributes())",
      "info" : "EnhancedForStatement[4641-4992]:EnhancedForStatement[4938-5289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4689-4992]:Block[4986-5289]"
    }, {
      "left" : "String key = attribute.getKey().replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");",
      "right" : "String key = attribute.getKey().replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");",
      "info" : "VariableDeclarationStatement[4784-4851]:VariableDeclarationStatement[5081-5148]"
    }, {
      "left" : "if (key.matches(\"[a-zA-Z_:][-a-zA-Z0-9_:.]*\"))",
      "right" : "if (key.matches(\"[a-zA-Z_:][-a-zA-Z0-9_:.]*\"))",
      "info" : "IfStatement[4868-4978]:IfStatement[5165-5275]"
    }, {
      "left" : "el.setAttribute(key, attribute.getValue());",
      "right" : "el.setAttribute(key, attribute.getValue());",
      "info" : "ExpressionStatement[4935-4978]:ExpressionStatement[5232-5275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5177-5986]:Block[5474-6295]"
    }, {
      "left" : "Attributes attributes = el.attributes();",
      "right" : "Attributes attributes = el.attributes();",
      "info" : "VariableDeclarationStatement[5307-5347]:VariableDeclarationStatement[5604-5644]"
    }, {
      "left" : "for (Attribute attr : attributes)",
      "right" : "for (Attribute attr : attributes)",
      "info" : "EnhancedForStatement[5360-5815]:EnhancedForStatement[5657-6124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5394-5815]:Block[5691-6124]"
    }, {
      "left" : "String key = attr.getKey();",
      "right" : "String key = attr.getKey();",
      "info" : "VariableDeclarationStatement[5412-5439]:VariableDeclarationStatement[5709-5736]"
    }, {
      "left" : "String prefix;",
      "right" : "String prefix;",
      "info" : "VariableDeclarationStatement[5456-5470]:VariableDeclarationStatement[5753-5767]"
    }, {
      "left" : "if (key.equals(xmlnsKey))",
      "right" : "if (key.equals(xmlnsKey))",
      "info" : "IfStatement[5487-5744]:IfStatement[5784-6041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5513-5565]:Block[5810-5862]"
    }, {
      "left" : "prefix = \"\";",
      "right" : "prefix = \"\";",
      "info" : "ExpressionStatement[5535-5547]:ExpressionStatement[5832-5844]"
    }, {
      "left" : "if (key.startsWith(xmlnsPrefix))",
      "right" : "if (key.startsWith(xmlnsPrefix))",
      "info" : "IfStatement[5571-5744]:IfStatement[5868-6041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5604-5689]:Block[5901-5986]"
    }, {
      "left" : "prefix = key.substring(xmlnsPrefix.length());",
      "right" : "prefix = key.substring(xmlnsPrefix.length());",
      "info" : "ExpressionStatement[5626-5671]:ExpressionStatement[5923-5968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5695-5744]:Block[5992-6041]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[5717-5726]:ContinueStatement[6014-6023]"
    }, {
      "left" : "namespaces.put(prefix, attr.getValue());",
      "right" : "namespacesStack.peek().put(prefix, attr.getValue());",
      "info" : "ExpressionStatement[5761-5801]:ExpressionStatement[6058-6110]"
    }, {
      "left" : "int pos = el.tagName().indexOf(\":\");",
      "right" : "int pos = el.tagName().indexOf(\":\");",
      "info" : "VariableDeclarationStatement[5874-5910]:VariableDeclarationStatement[6183-6219]"
    }, {
      "left" : "return pos > 0 ? el.tagName().substring(0, pos) : \"\";",
      "right" : "return pos > 0 ? el.tagName().substring(0, pos) : \"\";",
      "info" : "ReturnStatement[5923-5976]:ReturnStatement[6232-6285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6158-6669]:Block[6467-6978]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6168-6663]:TryStatement[6477-6972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6172-6572]:Block[6481-6881]"
    }, {
      "left" : "DOMSource domSource = new DOMSource(doc);",
      "right" : "DOMSource domSource = new DOMSource(doc);",
      "info" : "VariableDeclarationStatement[6186-6227]:VariableDeclarationStatement[6495-6536]"
    }, {
      "left" : "StringWriter writer = new StringWriter();",
      "right" : "StringWriter writer = new StringWriter();",
      "info" : "VariableDeclarationStatement[6240-6281]:VariableDeclarationStatement[6549-6590]"
    }, {
      "left" : "StreamResult result = new StreamResult(writer);",
      "right" : "StreamResult result = new StreamResult(writer);",
      "info" : "VariableDeclarationStatement[6294-6341]:VariableDeclarationStatement[6603-6650]"
    }, {
      "left" : "TransformerFactory tf = TransformerFactory.newInstance();",
      "right" : "TransformerFactory tf = TransformerFactory.newInstance();",
      "info" : "VariableDeclarationStatement[6354-6411]:VariableDeclarationStatement[6663-6720]"
    }, {
      "left" : "Transformer transformer = tf.newTransformer();",
      "right" : "Transformer transformer = tf.newTransformer();",
      "info" : "VariableDeclarationStatement[6424-6470]:VariableDeclarationStatement[6733-6779]"
    }, {
      "left" : "transformer.transform(domSource, result);",
      "right" : "transformer.transform(domSource, result);",
      "info" : "ExpressionStatement[6483-6524]:ExpressionStatement[6792-6833]"
    }, {
      "left" : "return writer.toString();",
      "right" : "return writer.toString();",
      "info" : "ReturnStatement[6537-6562]:ReturnStatement[6846-6871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6604-6663]:Block[6913-6972]"
    }, {
      "left" : "throw new IllegalStateException(e);",
      "right" : "throw new IllegalStateException(e);",
      "info" : "ThrowStatement[6618-6653]:ThrowStatement[6927-6962]"
    } ]
  },
  "interFileMappings" : { }
}