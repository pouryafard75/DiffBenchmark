{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = -8516354193418641566L;",
      "right" : "private static final long serialVersionUID = -8516354193418641566L;",
      "info" : "FieldDeclaration[1230-1340]:FieldDeclaration[1230-1340]"
    }, {
      "left" : "private double numeratorDegreesOfFreedom;",
      "right" : "private double numeratorDegreesOfFreedom;",
      "info" : "FieldDeclaration[1346-1430]:FieldDeclaration[1346-1430]"
    }, {
      "left" : "private double denominatorDegreesOfFreedom;",
      "right" : "private double denominatorDegreesOfFreedom;",
      "info" : "FieldDeclaration[1436-1522]:FieldDeclaration[1436-1522]"
    }, {
      "left" : "public FDistributionImpl(double numeratorDegreesOfFreedom,\n            double denominatorDegreesOfFreedom)",
      "right" : "public FDistributionImpl(double numeratorDegreesOfFreedom,\n            double denominatorDegreesOfFreedom)",
      "info" : "MethodDeclaration[1532-2032]:MethodDeclaration[1532-2032]"
    }, {
      "left" : "public double cumulativeProbability(double x) throws MathException",
      "right" : "public double cumulativeProbability(double x) throws MathException",
      "info" : "MethodDeclaration[2042-3013]:MethodDeclaration[2042-3013]"
    }, {
      "left" : "public double inverseCumulativeProbability(final double p) \n        throws MathException",
      "right" : "public double inverseCumulativeProbability(final double p) \n        throws MathException",
      "info" : "MethodDeclaration[3023-3887]:MethodDeclaration[3023-3887]"
    }, {
      "left" : "protected double getDomainLowerBound(double p)",
      "right" : "protected double getDomainLowerBound(double p)",
      "info" : "MethodDeclaration[3901-4379]:MethodDeclaration[3901-4379]"
    }, {
      "left" : "protected double getDomainUpperBound(double p)",
      "right" : "protected double getDomainUpperBound(double p)",
      "info" : "MethodDeclaration[4385-4876]:MethodDeclaration[4385-4876]"
    }, {
      "left" : "public void setNumeratorDegreesOfFreedom(double degreesOfFreedom)",
      "right" : "public void setNumeratorDegreesOfFreedom(double degreesOfFreedom)",
      "info" : "MethodDeclaration[5418-5942]:MethodDeclaration[5457-5981]"
    }, {
      "left" : "public double getNumeratorDegreesOfFreedom()",
      "right" : "public double getNumeratorDegreesOfFreedom()",
      "info" : "MethodDeclaration[5952-6159]:MethodDeclaration[5991-6198]"
    }, {
      "left" : "public void setDenominatorDegreesOfFreedom(double degreesOfFreedom)",
      "right" : "public void setDenominatorDegreesOfFreedom(double degreesOfFreedom)",
      "info" : "MethodDeclaration[6169-6701]:MethodDeclaration[6208-6740]"
    }, {
      "left" : "public double getDenominatorDegreesOfFreedom()",
      "right" : "public double getDenominatorDegreesOfFreedom()",
      "info" : "MethodDeclaration[6711-6926]:MethodDeclaration[6750-6965]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1767-1773]:Modifier[1767-1773]"
    }, {
      "left" : "FDistributionImpl",
      "right" : "FDistributionImpl",
      "info" : "SimpleName[1774-1791]:SimpleName[1774-1791]"
    }, {
      "left" : "double numeratorDegreesOfFreedom",
      "right" : "double numeratorDegreesOfFreedom",
      "info" : "SingleVariableDeclaration[1792-1824]:SingleVariableDeclaration[1792-1824]"
    }, {
      "left" : "double denominatorDegreesOfFreedom",
      "right" : "double denominatorDegreesOfFreedom",
      "info" : "SingleVariableDeclaration[1838-1872]:SingleVariableDeclaration[1838-1872]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1874-2032]:Block[1874-2032]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[1884-1892]:SuperConstructorInvocation[1884-1892]"
    }, {
      "left" : "setNumeratorDegreesOfFreedom(numeratorDegreesOfFreedom);",
      "right" : "setNumeratorDegreesOfFreedom(numeratorDegreesOfFreedom);",
      "info" : "ExpressionStatement[1901-1957]:ExpressionStatement[1901-1957]"
    }, {
      "left" : "setDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);",
      "right" : "setDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);",
      "info" : "ExpressionStatement[1966-2026]:ExpressionStatement[1966-2026]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2587-2593]:Modifier[2587-2593]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[2594-2600]:PrimitiveType[2594-2600]"
    }, {
      "left" : "cumulativeProbability",
      "right" : "cumulativeProbability",
      "info" : "SimpleName[2601-2622]:SimpleName[2601-2622]"
    }, {
      "left" : "double x",
      "right" : "double x",
      "info" : "SingleVariableDeclaration[2623-2631]:SingleVariableDeclaration[2623-2631]"
    }, {
      "left" : "MathException",
      "right" : "MathException",
      "info" : "SimpleType[2640-2653]:SimpleType[2640-2653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2654-3013]:Block[2654-3013]"
    }, {
      "left" : "double ret;",
      "right" : "double ret;",
      "info" : "VariableDeclarationStatement[2664-2675]:VariableDeclarationStatement[2664-2675]"
    }, {
      "left" : "if (x <= 0.0)",
      "right" : "if (x <= 0.0)",
      "info" : "IfStatement[2684-2987]:IfStatement[2684-2987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2698-2732]:Block[2698-2732]"
    }, {
      "left" : "ret = 0.0;",
      "right" : "ret = 0.0;",
      "info" : "ExpressionStatement[2712-2722]:ExpressionStatement[2712-2722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2738-2987]:Block[2738-2987]"
    }, {
      "left" : "double n = getNumeratorDegreesOfFreedom();",
      "right" : "double n = getNumeratorDegreesOfFreedom();",
      "info" : "VariableDeclarationStatement[2752-2794]:VariableDeclarationStatement[2752-2794]"
    }, {
      "left" : "double m = getDenominatorDegreesOfFreedom();",
      "right" : "double m = getDenominatorDegreesOfFreedom();",
      "info" : "VariableDeclarationStatement[2807-2851]:VariableDeclarationStatement[2807-2851]"
    }, {
      "left" : "ret = Beta.regularizedBeta((n * x) / (m + n * x),\n                0.5 * n,\n                0.5 * m);",
      "right" : "ret = Beta.regularizedBeta((n * x) / (m + n * x),\n                0.5 * n,\n                0.5 * m);",
      "info" : "ExpressionStatement[2877-2977]:ExpressionStatement[2877-2977]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[2996-3007]:ReturnStatement[2996-3007]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3605-3611]:Modifier[3605-3611]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[3612-3618]:PrimitiveType[3612-3618]"
    }, {
      "left" : "inverseCumulativeProbability",
      "right" : "inverseCumulativeProbability",
      "info" : "SimpleName[3619-3647]:SimpleName[3619-3647]"
    }, {
      "left" : "final double p",
      "right" : "final double p",
      "info" : "SingleVariableDeclaration[3648-3662]:SingleVariableDeclaration[3648-3662]"
    }, {
      "left" : "MathException",
      "right" : "MathException",
      "info" : "SimpleType[3680-3693]:SimpleType[3680-3693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3694-3887]:Block[3694-3887]"
    }, {
      "left" : "if (p == 0)",
      "right" : "if (p == 0)",
      "info" : "IfStatement[3704-3750]:IfStatement[3704-3750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3716-3750]:Block[3716-3750]"
    }, {
      "left" : "return 0d;",
      "right" : "return 0d;",
      "info" : "ReturnStatement[3730-3740]:ReturnStatement[3730-3740]"
    }, {
      "left" : "if (p == 1)",
      "right" : "if (p == 1)",
      "info" : "IfStatement[3759-3827]:IfStatement[3759-3827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3771-3827]:Block[3771-3827]"
    }, {
      "left" : "return Double.POSITIVE_INFINITY;",
      "right" : "return Double.POSITIVE_INFINITY;",
      "info" : "ReturnStatement[3785-3817]:ReturnStatement[3785-3817]"
    }, {
      "left" : "return super.inverseCumulativeProbability(p);",
      "right" : "return super.inverseCumulativeProbability(p);",
      "info" : "ReturnStatement[3836-3881]:ReturnStatement[3836-3881]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4305-4314]:Modifier[4305-4314]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[4315-4321]:PrimitiveType[4315-4321]"
    }, {
      "left" : "getDomainLowerBound",
      "right" : "getDomainLowerBound",
      "info" : "SimpleName[4322-4341]:SimpleName[4322-4341]"
    }, {
      "left" : "double p",
      "right" : "double p",
      "info" : "SingleVariableDeclaration[4342-4350]:SingleVariableDeclaration[4342-4350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4352-4379]:Block[4352-4379]"
    }, {
      "left" : "return 0.0;",
      "right" : "return 0.0;",
      "info" : "ReturnStatement[4362-4373]:ReturnStatement[4362-4373]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4789-4798]:Modifier[4789-4798]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[4799-4805]:PrimitiveType[4799-4805]"
    }, {
      "left" : "getDomainUpperBound",
      "right" : "getDomainUpperBound",
      "info" : "SimpleName[4806-4825]:SimpleName[4806-4825]"
    }, {
      "left" : "double p",
      "right" : "double p",
      "info" : "SingleVariableDeclaration[4826-4834]:SingleVariableDeclaration[4826-4834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4836-4876]:Block[4836-4876]"
    }, {
      "left" : "return Double.MAX_VALUE;",
      "right" : "return Double.MAX_VALUE;",
      "info" : "ReturnStatement[4846-4870]:ReturnStatement[4846-4870]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5656-5662]:Modifier[5695-5701]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5663-5667]:PrimitiveType[5702-5706]"
    }, {
      "left" : "setNumeratorDegreesOfFreedom",
      "right" : "setNumeratorDegreesOfFreedom",
      "info" : "SimpleName[5668-5696]:SimpleName[5707-5735]"
    }, {
      "left" : "double degreesOfFreedom",
      "right" : "double degreesOfFreedom",
      "info" : "SingleVariableDeclaration[5697-5720]:SingleVariableDeclaration[5736-5759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5722-5942]:Block[5761-5981]"
    }, {
      "left" : "if (degreesOfFreedom <= 0.0)",
      "right" : "if (degreesOfFreedom <= 0.0)",
      "info" : "IfStatement[5732-5877]:IfStatement[5771-5916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5761-5877]:Block[5800-5916]"
    }, {
      "left" : "throw new IllegalArgumentException(\n                \"degrees of freedom must be positive.\");",
      "right" : "throw new IllegalArgumentException(\n                \"degrees of freedom must be positive.\");",
      "info" : "ThrowStatement[5775-5867]:ThrowStatement[5814-5906]"
    }, {
      "left" : "this.numeratorDegreesOfFreedom = degreesOfFreedom;",
      "right" : "this.numeratorDegreesOfFreedom = degreesOfFreedom;",
      "info" : "ExpressionStatement[5886-5936]:ExpressionStatement[5925-5975]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6065-6071]:Modifier[6104-6110]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6072-6078]:PrimitiveType[6111-6117]"
    }, {
      "left" : "getNumeratorDegreesOfFreedom",
      "right" : "getNumeratorDegreesOfFreedom",
      "info" : "SimpleName[6079-6107]:SimpleName[6118-6146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6110-6159]:Block[6149-6198]"
    }, {
      "left" : "return numeratorDegreesOfFreedom;",
      "right" : "return numeratorDegreesOfFreedom;",
      "info" : "ReturnStatement[6120-6153]:ReturnStatement[6159-6192]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6411-6417]:Modifier[6450-6456]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6418-6422]:PrimitiveType[6457-6461]"
    }, {
      "left" : "setDenominatorDegreesOfFreedom",
      "right" : "setDenominatorDegreesOfFreedom",
      "info" : "SimpleName[6423-6453]:SimpleName[6462-6492]"
    }, {
      "left" : "double degreesOfFreedom",
      "right" : "double degreesOfFreedom",
      "info" : "SingleVariableDeclaration[6454-6477]:SingleVariableDeclaration[6493-6516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6479-6701]:Block[6518-6740]"
    }, {
      "left" : "if (degreesOfFreedom <= 0.0)",
      "right" : "if (degreesOfFreedom <= 0.0)",
      "info" : "IfStatement[6489-6634]:IfStatement[6528-6673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6518-6634]:Block[6557-6673]"
    }, {
      "left" : "throw new IllegalArgumentException(\n                \"degrees of freedom must be positive.\");",
      "right" : "throw new IllegalArgumentException(\n                \"degrees of freedom must be positive.\");",
      "info" : "ThrowStatement[6532-6624]:ThrowStatement[6571-6663]"
    }, {
      "left" : "this.denominatorDegreesOfFreedom = degreesOfFreedom;",
      "right" : "this.denominatorDegreesOfFreedom = degreesOfFreedom;",
      "info" : "ExpressionStatement[6643-6695]:ExpressionStatement[6682-6734]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6828-6834]:Modifier[6867-6873]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6835-6841]:PrimitiveType[6874-6880]"
    }, {
      "left" : "getDenominatorDegreesOfFreedom",
      "right" : "getDenominatorDegreesOfFreedom",
      "info" : "SimpleName[6842-6872]:SimpleName[6881-6911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6875-6926]:Block[6914-6965]"
    }, {
      "left" : "return denominatorDegreesOfFreedom;",
      "right" : "return denominatorDegreesOfFreedom;",
      "info" : "ReturnStatement[6885-6920]:ReturnStatement[6924-6959]"
    } ]
  },
  "interFileMappings" : { }
}