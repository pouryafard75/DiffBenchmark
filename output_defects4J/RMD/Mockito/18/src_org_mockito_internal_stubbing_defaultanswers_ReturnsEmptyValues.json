{
  "matchedElements" : [
 {
    "left" : "class : ReturnsEmptyValues",
    "right" : "class : ReturnsEmptyValues",
    "info" : "TypeDeclaration[841-4678]:TypeDeclaration[841-4768]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[1626-1692]:FieldDeclaration[1626-1692]"
  }, {
    "left" : "methodsGuru",
    "right" : "methodsGuru",
    "info" : "FieldDeclaration[1697-1753]:FieldDeclaration[1697-1753]"
  }, {
    "left" : "mockUtil",
    "right" : "mockUtil",
    "info" : "FieldDeclaration[1758-1793]:FieldDeclaration[1758-1793]"
  }, {
    "left" : "public answer(invocation ) : ",
    "right" : "public answer(invocation ) : ",
    "info" : "MethodDeclaration[1916-2951]:MethodDeclaration[1916-2951]"
  }, {
    "left" : "package returnValueFor(type ) : ",
    "right" : "package returnValueFor(type ) : ",
    "info" : "MethodDeclaration[2961-4675]:MethodDeclaration[2961-4765]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1543-1549]:Modifier[1543-1549]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1550-1555]:TYPE_DECLARATION_KIND[1550-1555]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1916-1922]:Modifier[1916-1922]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[1923-1929]:SimpleType[1923-1929]"
  }, {
    "left" : "answer",
    "right" : "answer",
    "info" : "SimpleName[1930-1936]:SimpleName[1930-1936]"
  }, {
    "left" : "InvocationOnMock invocation",
    "right" : "InvocationOnMock invocation",
    "info" : "SingleVariableDeclaration[1937-1964]:SingleVariableDeclaration[1937-1964]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1966-2951]:Block[1966-2951]"
  }, {
    "left" : "if (methodsGuru.isToString(invocation.getMethod()))",
    "right" : "if (methodsGuru.isToString(invocation.getMethod()))",
    "info" : "IfStatement[1976-2823]:IfStatement[1976-2823]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2028-2390]:Block[2028-2390]"
  }, {
    "left" : "Object mock = invocation.getMock();",
    "right" : "Object mock = invocation.getMock();",
    "info" : "VariableDeclarationStatement[2042-2077]:VariableDeclarationStatement[2042-2077]"
  }, {
    "left" : "MockName name = mockUtil.getMockName(mock);",
    "right" : "MockName name = mockUtil.getMockName(mock);",
    "info" : "VariableDeclarationStatement[2090-2133]:VariableDeclarationStatement[2090-2133]"
  }, {
    "left" : "if (name.isDefault())",
    "right" : "if (name.isDefault())",
    "info" : "IfStatement[2146-2380]:IfStatement[2146-2380]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2168-2319]:Block[2168-2319]"
  }, {
    "left" : "return \"Mock for \" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + \", hashCode: \" + mock.hashCode();",
    "right" : "return \"Mock for \" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + \", hashCode: \" + mock.hashCode();",
    "info" : "ReturnStatement[2186-2305]:ReturnStatement[2186-2305]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2325-2380]:Block[2325-2380]"
  }, {
    "left" : "return name.toString();",
    "right" : "return name.toString();",
    "info" : "ReturnStatement[2343-2366]:ReturnStatement[2343-2366]"
  }, {
    "left" : "if (methodsGuru.isCompareToMethod(invocation.getMethod()))",
    "right" : "if (methodsGuru.isCompareToMethod(invocation.getMethod()))",
    "info" : "IfStatement[2396-2823]:IfStatement[2396-2823]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2455-2823]:Block[2455-2823]"
  }, {
    "left" : "return invocation.getMock() == invocation.getArguments()[0] ? 0 : 1;",
    "right" : "return invocation.getMock() == invocation.getArguments()[0] ? 0 : 1;",
    "info" : "ReturnStatement[2745-2813]:ReturnStatement[2745-2813]"
  }, {
    "left" : "Class<?> returnType = invocation.getMethod().getReturnType();",
    "right" : "Class<?> returnType = invocation.getMethod().getReturnType();",
    "info" : "VariableDeclarationStatement[2841-2902]:VariableDeclarationStatement[2841-2902]"
  }, {
    "left" : "return returnValueFor(returnType);",
    "right" : "return returnValueFor(returnType);",
    "info" : "ReturnStatement[2911-2945]:ReturnStatement[2911-2945]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[2961-2967]:SimpleType[2961-2967]"
  }, {
    "left" : "returnValueFor",
    "right" : "returnValueFor",
    "info" : "SimpleName[2968-2982]:SimpleName[2968-2982]"
  }, {
    "left" : "Class<?> type",
    "right" : "Class<?> type",
    "info" : "SingleVariableDeclaration[2983-2996]:SingleVariableDeclaration[2983-2996]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2998-4675]:Block[2998-4765]"
  }, {
    "left" : "if (Primitives.isPrimitiveOrWrapper(type))",
    "right" : "if (Primitives.isPrimitiveOrWrapper(type))",
    "info" : "IfStatement[3008-4592]:IfStatement[3008-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3051-3312]:Block[3051-3312]"
  }, {
    "left" : "return Primitives.defaultValueForPrimitiveOrWrapper(type);",
    "right" : "return Primitives.defaultValueForPrimitiveOrWrapper(type);",
    "info" : "ReturnStatement[3065-3123]:ReturnStatement[3065-3123]"
  }, {
    "left" : "if (type == Collection.class)",
    "right" : "if (type == Collection.class)",
    "info" : "IfStatement[3318-4592]:IfStatement[3408-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3348-3404]:Block[3438-3494]"
  }, {
    "left" : "return new LinkedList<Object>();",
    "right" : "return new LinkedList<Object>();",
    "info" : "ReturnStatement[3362-3394]:ReturnStatement[3452-3484]"
  }, {
    "left" : "if (type == Set.class)",
    "right" : "if (type == Set.class)",
    "info" : "IfStatement[3410-4592]:IfStatement[3500-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3433-3486]:Block[3523-3576]"
  }, {
    "left" : "return new HashSet<Object>();",
    "right" : "return new HashSet<Object>();",
    "info" : "ReturnStatement[3447-3476]:ReturnStatement[3537-3566]"
  }, {
    "left" : "if (type == HashSet.class)",
    "right" : "if (type == HashSet.class)",
    "info" : "IfStatement[3492-4592]:IfStatement[3582-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3519-3572]:Block[3609-3662]"
  }, {
    "left" : "return new HashSet<Object>();",
    "right" : "return new HashSet<Object>();",
    "info" : "ReturnStatement[3533-3562]:ReturnStatement[3623-3652]"
  }, {
    "left" : "if (type == SortedSet.class)",
    "right" : "if (type == SortedSet.class)",
    "info" : "IfStatement[3578-4592]:IfStatement[3668-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3607-3660]:Block[3697-3750]"
  }, {
    "left" : "return new TreeSet<Object>();",
    "right" : "return new TreeSet<Object>();",
    "info" : "ReturnStatement[3621-3650]:ReturnStatement[3711-3740]"
  }, {
    "left" : "if (type == TreeSet.class)",
    "right" : "if (type == TreeSet.class)",
    "info" : "IfStatement[3666-4592]:IfStatement[3756-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3693-3746]:Block[3783-3836]"
  }, {
    "left" : "return new TreeSet<Object>();",
    "right" : "return new TreeSet<Object>();",
    "info" : "ReturnStatement[3707-3736]:ReturnStatement[3797-3826]"
  }, {
    "left" : "if (type == LinkedHashSet.class)",
    "right" : "if (type == LinkedHashSet.class)",
    "info" : "IfStatement[3752-4592]:IfStatement[3842-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3785-3844]:Block[3875-3934]"
  }, {
    "left" : "return new LinkedHashSet<Object>();",
    "right" : "return new LinkedHashSet<Object>();",
    "info" : "ReturnStatement[3799-3834]:ReturnStatement[3889-3924]"
  }, {
    "left" : "if (type == List.class)",
    "right" : "if (type == List.class)",
    "info" : "IfStatement[3850-4592]:IfStatement[3940-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3874-3930]:Block[3964-4020]"
  }, {
    "left" : "return new LinkedList<Object>();",
    "right" : "return new LinkedList<Object>();",
    "info" : "ReturnStatement[3888-3920]:ReturnStatement[3978-4010]"
  }, {
    "left" : "if (type == LinkedList.class)",
    "right" : "if (type == LinkedList.class)",
    "info" : "IfStatement[3936-4592]:IfStatement[4026-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3966-4022]:Block[4056-4112]"
  }, {
    "left" : "return new LinkedList<Object>();",
    "right" : "return new LinkedList<Object>();",
    "info" : "ReturnStatement[3980-4012]:ReturnStatement[4070-4102]"
  }, {
    "left" : "if (type == ArrayList.class)",
    "right" : "if (type == ArrayList.class)",
    "info" : "IfStatement[4028-4592]:IfStatement[4118-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4057-4112]:Block[4147-4202]"
  }, {
    "left" : "return new ArrayList<Object>();",
    "right" : "return new ArrayList<Object>();",
    "info" : "ReturnStatement[4071-4102]:ReturnStatement[4161-4192]"
  }, {
    "left" : "if (type == Map.class)",
    "right" : "if (type == Map.class)",
    "info" : "IfStatement[4118-4592]:IfStatement[4208-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4141-4202]:Block[4231-4292]"
  }, {
    "left" : "return new HashMap<Object, Object>();",
    "right" : "return new HashMap<Object, Object>();",
    "info" : "ReturnStatement[4155-4192]:ReturnStatement[4245-4282]"
  }, {
    "left" : "if (type == HashMap.class)",
    "right" : "if (type == HashMap.class)",
    "info" : "IfStatement[4208-4592]:IfStatement[4298-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4235-4296]:Block[4325-4386]"
  }, {
    "left" : "return new HashMap<Object, Object>();",
    "right" : "return new HashMap<Object, Object>();",
    "info" : "ReturnStatement[4249-4286]:ReturnStatement[4339-4376]"
  }, {
    "left" : "if (type == SortedMap.class)",
    "right" : "if (type == SortedMap.class)",
    "info" : "IfStatement[4302-4592]:IfStatement[4392-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4331-4392]:Block[4421-4482]"
  }, {
    "left" : "return new TreeMap<Object, Object>();",
    "right" : "return new TreeMap<Object, Object>();",
    "info" : "ReturnStatement[4345-4382]:ReturnStatement[4435-4472]"
  }, {
    "left" : "if (type == TreeMap.class)",
    "right" : "if (type == TreeMap.class)",
    "info" : "IfStatement[4398-4592]:IfStatement[4488-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4425-4486]:Block[4515-4576]"
  }, {
    "left" : "return new TreeMap<Object, Object>();",
    "right" : "return new TreeMap<Object, Object>();",
    "info" : "ReturnStatement[4439-4476]:ReturnStatement[4529-4566]"
  }, {
    "left" : "if (type == LinkedHashMap.class)",
    "right" : "if (type == LinkedHashMap.class)",
    "info" : "IfStatement[4492-4592]:IfStatement[4582-4682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4525-4592]:Block[4615-4682]"
  }, {
    "left" : "return new LinkedHashMap<Object, Object>();",
    "right" : "return new LinkedHashMap<Object, Object>();",
    "info" : "ReturnStatement[4539-4582]:ReturnStatement[4629-4672]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[4657-4669]:ReturnStatement[4747-4759]"
  } ]
}