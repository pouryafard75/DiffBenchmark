{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "OAuthSignatureCalculator",
      "right" : "OAuthSignatureCalculator",
      "info" : "TypeDeclaration[1261-11721]:TypeDeclaration[1261-12184]"
    }, {
      "left" : "public final static String HEADER_AUTHORIZATION = \"Authorization\";",
      "right" : "public final static String HEADER_AUTHORIZATION = \"Authorization\";",
      "info" : "FieldDeclaration[1751-1817]:FieldDeclaration[1751-1817]"
    }, {
      "left" : "private static final String KEY_OAUTH_CONSUMER_KEY = \"oauth_consumer_key\";",
      "right" : "private static final String KEY_OAUTH_CONSUMER_KEY = \"oauth_consumer_key\";",
      "info" : "FieldDeclaration[1823-1897]:FieldDeclaration[1823-1897]"
    }, {
      "left" : "private static final String KEY_OAUTH_NONCE = \"oauth_nonce\";",
      "right" : "private static final String KEY_OAUTH_NONCE = \"oauth_nonce\";",
      "info" : "FieldDeclaration[1902-1962]:FieldDeclaration[1902-1962]"
    }, {
      "left" : "private static final String KEY_OAUTH_SIGNATURE = \"oauth_signature\";",
      "right" : "private static final String KEY_OAUTH_SIGNATURE = \"oauth_signature\";",
      "info" : "FieldDeclaration[1967-2035]:FieldDeclaration[1967-2035]"
    }, {
      "left" : "private static final String KEY_OAUTH_SIGNATURE_METHOD = \"oauth_signature_method\";",
      "right" : "private static final String KEY_OAUTH_SIGNATURE_METHOD = \"oauth_signature_method\";",
      "info" : "FieldDeclaration[2040-2122]:FieldDeclaration[2040-2122]"
    }, {
      "left" : "private static final String KEY_OAUTH_TIMESTAMP = \"oauth_timestamp\";",
      "right" : "private static final String KEY_OAUTH_TIMESTAMP = \"oauth_timestamp\";",
      "info" : "FieldDeclaration[2127-2195]:FieldDeclaration[2127-2195]"
    }, {
      "left" : "private static final String KEY_OAUTH_TOKEN = \"oauth_token\";",
      "right" : "private static final String KEY_OAUTH_TOKEN = \"oauth_token\";",
      "info" : "FieldDeclaration[2200-2260]:FieldDeclaration[2200-2260]"
    }, {
      "left" : "private static final String KEY_OAUTH_VERSION = \"oauth_version\";",
      "right" : "private static final String KEY_OAUTH_VERSION = \"oauth_version\";",
      "info" : "FieldDeclaration[2265-2329]:FieldDeclaration[2265-2329]"
    }, {
      "left" : "private static final String OAUTH_VERSION_1_0 = \"1.0\";",
      "right" : "private static final String OAUTH_VERSION_1_0 = \"1.0\";",
      "info" : "FieldDeclaration[2335-2389]:FieldDeclaration[2335-2389]"
    }, {
      "left" : "private static final String OAUTH_SIGNATURE_METHOD = \"HMAC-SHA1\";",
      "right" : "private static final String OAUTH_SIGNATURE_METHOD = \"HMAC-SHA1\";",
      "info" : "FieldDeclaration[2394-2459]:FieldDeclaration[2394-2459]"
    }, {
      "left" : "protected static final ThreadLocal<byte[]> NONCE_BUFFER = new ThreadLocal<byte[]>() {\n        protected byte[] initialValue() {\n            return new byte[16];\n        }\n    };",
      "right" : "protected static final ThreadLocal<byte[]> NONCE_BUFFER = new ThreadLocal<byte[]>() {\n        protected byte[] initialValue() {\n            return new byte[16];\n        }\n    };",
      "info" : "FieldDeclaration[2465-2642]:FieldDeclaration[2465-2642]"
    }, {
      "left" : "protected byte[] initialValue()",
      "right" : "protected byte[] initialValue()",
      "info" : "MethodDeclaration[2559-2635]:MethodDeclaration[2559-2635]"
    }, {
      "left" : "protected final ThreadSafeHMAC mac;",
      "right" : "protected final ThreadSafeHMAC mac;",
      "info" : "FieldDeclaration[2648-2683]:FieldDeclaration[2648-2683]"
    }, {
      "left" : "protected final ConsumerKey consumerAuth;",
      "right" : "protected final ConsumerKey consumerAuth;",
      "info" : "FieldDeclaration[2689-2730]:FieldDeclaration[2689-2730]"
    }, {
      "left" : "protected final RequestToken userAuth;",
      "right" : "protected final RequestToken userAuth;",
      "info" : "FieldDeclaration[2736-2774]:FieldDeclaration[2736-2774]"
    }, {
      "left" : "public OAuthSignatureCalculator(ConsumerKey consumerAuth, RequestToken userAuth)",
      "right" : "public OAuthSignatureCalculator(ConsumerKey consumerAuth, RequestToken userAuth)",
      "info" : "MethodDeclaration[2780-3172]:MethodDeclaration[2780-3172]"
    }, {
      "left" : "public void calculateAndAddSignature(Request request, RequestBuilderBase<?> requestBuilder)",
      "right" : "public void calculateAndAddSignature(Request request, RequestBuilderBase<?> requestBuilder)",
      "info" : "MethodDeclaration[3178-3680]:MethodDeclaration[3178-3680]"
    }, {
      "left" : "private String baseUrl(Uri uri)",
      "right" : "private String baseUrl(Uri uri)",
      "info" : "MethodDeclaration[3686-4445]:MethodDeclaration[3686-4445]"
    }, {
      "left" : "private String encodedParams(long oauthTimestamp, String nonce, List<Param> formParams, List<Param> queryParams)",
      "right" : "private String encodedParams(long oauthTimestamp, String nonce, List<Param> formParams, List<Param> queryParams)",
      "info" : "MethodDeclaration[4451-5939]:MethodDeclaration[4451-6181]"
    }, {
      "left" : "public String calculateSignature(String method, Uri uri, long oauthTimestamp, String nonce,\n                                     List<Param> formParams, List<Param> queryParams)",
      "right" : "StringBuilder signatureBaseString(String method, Uri uri, long oauthTimestamp, String nonce,\n                                     List<Param> formParams, List<Param> queryParams)",
      "info" : "MethodDeclaration[5945-7020]:MethodDeclaration[6187-6982]"
    }, {
      "left" : "private String constructAuthHeader(String signature, String nonce, long oauthTimestamp)",
      "right" : "private String constructAuthHeader(String signature, String nonce, long oauthTimestamp)",
      "info" : "MethodDeclaration[7026-8257]:MethodDeclaration[7601-8832]"
    }, {
      "left" : "protected synchronized String generateNonce()",
      "right" : "protected String generateNonce()",
      "info" : "MethodDeclaration[8263-8618]:MethodDeclaration[8937-9279]"
    }, {
      "left" : "protected long generateTimestamp()",
      "right" : "protected long generateTimestamp()",
      "info" : "MethodDeclaration[8624-8717]:MethodDeclaration[8838-8931]"
    }, {
      "left" : "OAuthParameterSet",
      "right" : "OAuthParameterSet",
      "info" : "TypeDeclaration[8723-10348]:TypeDeclaration[9285-10811]"
    }, {
      "left" : "private final ArrayList<Parameter> allParameters;",
      "right" : "private final ArrayList<Parameter> allParameters;",
      "info" : "FieldDeclaration[9253-9302]:FieldDeclaration[9815-9864]"
    }, {
      "left" : "public OAuthParameterSet(int size)",
      "right" : "public OAuthParameterSet(int size)",
      "info" : "MethodDeclaration[9312-9409]:MethodDeclaration[9874-9971]"
    }, {
      "left" : "public OAuthParameterSet add(String key, String value)",
      "right" : "public OAuthParameterSet add(String key, String value)",
      "info" : "MethodDeclaration[9419-9667]:MethodDeclaration[9981-10130]"
    }, {
      "left" : "public String sortAndConcat()",
      "right" : "public String sortAndConcat()",
      "info" : "MethodDeclaration[9677-10342]:MethodDeclaration[10140-10805]"
    }, {
      "left" : "Parameter",
      "right" : "Parameter",
      "info" : "TypeDeclaration[10354-11719]:TypeDeclaration[10817-12182]"
    }, {
      "left" : "private final String key, value;",
      "right" : "private final String key, value;",
      "info" : "FieldDeclaration[10513-10545]:FieldDeclaration[10976-11008]"
    }, {
      "left" : "public Parameter(String key, String value)",
      "right" : "public Parameter(String key, String value)",
      "info" : "MethodDeclaration[10555-10669]:MethodDeclaration[11018-11132]"
    }, {
      "left" : "public String key()",
      "right" : "public String key()",
      "info" : "MethodDeclaration[10679-10734]:MethodDeclaration[11142-11197]"
    }, {
      "left" : "public String value()",
      "right" : "public String value()",
      "info" : "MethodDeclaration[10744-10803]:MethodDeclaration[11207-11266]"
    }, {
      "left" : "public int compareTo(Parameter other)",
      "right" : "public int compareTo(Parameter other)",
      "info" : "MethodDeclaration[10813-11050]:MethodDeclaration[11276-11513]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[11060-11152]:MethodDeclaration[11523-11615]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[11162-11531]:MethodDeclaration[11625-11994]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[11541-11713]:MethodDeclaration[12004-12176]"
    } ],
    "mappings" : [
 {
      "left" : "SignatureCalculator",
      "right" : "SignatureCalculator",
      "info" : "SimpleType[1725-1744]:SimpleType[1725-1744]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2559-2568]:Modifier[2559-2568]"
    }, {
      "left" : "byte[]",
      "right" : "byte[]",
      "info" : "ArrayType[2569-2575]:ArrayType[2569-2575]"
    }, {
      "left" : "initialValue",
      "right" : "initialValue",
      "info" : "SimpleName[2576-2588]:SimpleName[2576-2588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2591-2635]:Block[2591-2635]"
    }, {
      "left" : "return new byte[16];",
      "right" : "return new byte[16];",
      "info" : "ReturnStatement[2605-2625]:ReturnStatement[2605-2625]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2950-2956]:Modifier[2950-2956]"
    }, {
      "left" : "OAuthSignatureCalculator",
      "right" : "OAuthSignatureCalculator",
      "info" : "SimpleName[2957-2981]:SimpleName[2957-2981]"
    }, {
      "left" : "ConsumerKey consumerAuth",
      "right" : "ConsumerKey consumerAuth",
      "info" : "SingleVariableDeclaration[2982-3006]:SingleVariableDeclaration[2982-3006]"
    }, {
      "left" : "RequestToken userAuth",
      "right" : "RequestToken userAuth",
      "info" : "SingleVariableDeclaration[3008-3029]:SingleVariableDeclaration[3008-3029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3031-3172]:Block[3031-3172]"
    }, {
      "left" : "mac = new ThreadSafeHMAC(consumerAuth, userAuth);",
      "right" : "mac = new ThreadSafeHMAC(consumerAuth, userAuth);",
      "info" : "ExpressionStatement[3041-3090]:ExpressionStatement[3041-3090]"
    }, {
      "left" : "this.consumerAuth = consumerAuth;",
      "right" : "this.consumerAuth = consumerAuth;",
      "info" : "ExpressionStatement[3099-3132]:ExpressionStatement[3099-3132]"
    }, {
      "left" : "this.userAuth = userAuth;",
      "right" : "this.userAuth = userAuth;",
      "info" : "ExpressionStatement[3141-3166]:ExpressionStatement[3141-3166]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3178-3187]:MarkerAnnotation[3178-3187]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3192-3198]:Modifier[3192-3198]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3199-3203]:PrimitiveType[3199-3203]"
    }, {
      "left" : "calculateAndAddSignature",
      "right" : "calculateAndAddSignature",
      "info" : "SimpleName[3204-3228]:SimpleName[3204-3228]"
    }, {
      "left" : "Request request",
      "right" : "Request request",
      "info" : "SingleVariableDeclaration[3229-3244]:SingleVariableDeclaration[3229-3244]"
    }, {
      "left" : "RequestBuilderBase<?> requestBuilder",
      "right" : "RequestBuilderBase<?> requestBuilder",
      "info" : "SingleVariableDeclaration[3246-3282]:SingleVariableDeclaration[3246-3282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3284-3680]:Block[3284-3680]"
    }, {
      "left" : "String nonce = generateNonce();",
      "right" : "String nonce = generateNonce();",
      "info" : "VariableDeclarationStatement[3294-3325]:VariableDeclarationStatement[3294-3325]"
    }, {
      "left" : "long timestamp = generateTimestamp();",
      "right" : "long timestamp = generateTimestamp();",
      "info" : "VariableDeclarationStatement[3334-3371]:VariableDeclarationStatement[3334-3371]"
    }, {
      "left" : "String signature = calculateSignature(request.getMethod(), request.getUri(), timestamp, nonce, request.getFormParams(), request.getQueryParams());",
      "right" : "String signature = calculateSignature(request.getMethod(), request.getUri(), timestamp, nonce, request.getFormParams(), request.getQueryParams());",
      "info" : "VariableDeclarationStatement[3380-3526]:VariableDeclarationStatement[3380-3526]"
    }, {
      "left" : "String headerValue = constructAuthHeader(signature, nonce, timestamp);",
      "right" : "String headerValue = constructAuthHeader(signature, nonce, timestamp);",
      "info" : "VariableDeclarationStatement[3535-3605]:VariableDeclarationStatement[3535-3605]"
    }, {
      "left" : "requestBuilder.setHeader(HEADER_AUTHORIZATION, headerValue);",
      "right" : "requestBuilder.setHeader(HEADER_AUTHORIZATION, headerValue);",
      "info" : "ExpressionStatement[3614-3674]:ExpressionStatement[3614-3674]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3686-3693]:Modifier[3686-3693]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3694-3700]:SimpleType[3694-3700]"
    }, {
      "left" : "baseUrl",
      "right" : "baseUrl",
      "info" : "SimpleName[3701-3708]:SimpleName[3701-3708]"
    }, {
      "left" : "Uri uri",
      "right" : "Uri uri",
      "info" : "SingleVariableDeclaration[3709-3716]:SingleVariableDeclaration[3709-3716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3718-4445]:Block[3718-4445]"
    }, {
      "left" : "String scheme = uri.getScheme();",
      "right" : "String scheme = uri.getScheme();",
      "info" : "VariableDeclarationStatement[3858-3890]:VariableDeclarationStatement[3858-3890]"
    }, {
      "left" : "StringBuilder sb = StringUtils.stringBuilder();",
      "right" : "StringBuilder sb = StringUtils.stringBuilder();",
      "info" : "VariableDeclarationStatement[3900-3947]:VariableDeclarationStatement[3900-3947]"
    }, {
      "left" : "sb.append(scheme).append(\"://\").append(uri.getHost());",
      "right" : "sb.append(scheme).append(\"://\").append(uri.getHost());",
      "info" : "ExpressionStatement[3956-4010]:ExpressionStatement[3956-4010]"
    }, {
      "left" : "int port = uri.getPort();",
      "right" : "int port = uri.getPort();",
      "info" : "VariableDeclarationStatement[4028-4053]:VariableDeclarationStatement[4028-4053]"
    }, {
      "left" : "if (scheme.equals(\"http\"))",
      "right" : "if (scheme.equals(\"http\"))",
      "info" : "IfStatement[4062-4256]:IfStatement[4062-4256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4089-4155]:Block[4089-4155]"
    }, {
      "left" : "if (port == 80)",
      "right" : "if (port == 80)",
      "info" : "IfStatement[4103-4145]:IfStatement[4103-4145]"
    }, {
      "left" : "port = -1;",
      "right" : "port = -1;",
      "info" : "ExpressionStatement[4135-4145]:ExpressionStatement[4135-4145]"
    }, {
      "left" : "if (scheme.equals(\"https\"))",
      "right" : "if (scheme.equals(\"https\"))",
      "info" : "IfStatement[4161-4256]:IfStatement[4161-4256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4189-4256]:Block[4189-4256]"
    }, {
      "left" : "if (port == 443)",
      "right" : "if (port == 443)",
      "info" : "IfStatement[4203-4246]:IfStatement[4203-4246]"
    }, {
      "left" : "port = -1;",
      "right" : "port = -1;",
      "info" : "ExpressionStatement[4236-4246]:ExpressionStatement[4236-4246]"
    }, {
      "left" : "if (port != -1)",
      "right" : "if (port != -1)",
      "info" : "IfStatement[4266-4322]:IfStatement[4266-4322]"
    }, {
      "left" : "sb.append(':').append(port);",
      "right" : "sb.append(':').append(port);",
      "info" : "ExpressionStatement[4294-4322]:ExpressionStatement[4294-4322]"
    }, {
      "left" : "if (isNonEmpty(uri.getPath()))",
      "right" : "if (isNonEmpty(uri.getPath()))",
      "info" : "IfStatement[4332-4400]:IfStatement[4332-4400]"
    }, {
      "left" : "sb.append(uri.getPath());",
      "right" : "sb.append(uri.getPath());",
      "info" : "ExpressionStatement[4375-4400]:ExpressionStatement[4375-4400]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[4418-4439]:ReturnStatement[4418-4439]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4451-4458]:Modifier[4451-4458]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4459-4465]:SimpleType[4459-4465]"
    }, {
      "left" : "encodedParams",
      "right" : "encodedParams",
      "info" : "SimpleName[4466-4479]:SimpleName[4466-4479]"
    }, {
      "left" : "long oauthTimestamp",
      "right" : "long oauthTimestamp",
      "info" : "SingleVariableDeclaration[4480-4499]:SingleVariableDeclaration[4480-4499]"
    }, {
      "left" : "String nonce",
      "right" : "String nonce",
      "info" : "SingleVariableDeclaration[4501-4513]:SingleVariableDeclaration[4501-4513]"
    }, {
      "left" : "List<Param> formParams",
      "right" : "List<Param> formParams",
      "info" : "SingleVariableDeclaration[4515-4537]:SingleVariableDeclaration[4515-4537]"
    }, {
      "left" : "List<Param> queryParams",
      "right" : "List<Param> queryParams",
      "info" : "SingleVariableDeclaration[4539-4562]:SingleVariableDeclaration[4539-4562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4564-5939]:Block[4564-6181]"
    }, {
      "left" : "int allParametersSize = 5\n                + (userAuth.getKey() != null ? 1 : 0)\n                + (formParams != null ? formParams.size() : 0)\n                + (queryParams != null ? queryParams.size() : 0);",
      "right" : "int allParametersSize = 5\n                + (userAuth.getKey() != null ? 1 : 0)\n                + (formParams != null ? formParams.size() : 0)\n                + (queryParams != null ? queryParams.size() : 0);",
      "info" : "VariableDeclarationStatement[4722-4930]:VariableDeclarationStatement[4722-4930]"
    }, {
      "left" : "OAuthParameterSet allParameters = new OAuthParameterSet(allParametersSize);",
      "right" : "OAuthParameterSet allParameters = new OAuthParameterSet(allParametersSize);",
      "info" : "VariableDeclarationStatement[4939-5014]:VariableDeclarationStatement[4939-5014]"
    }, {
      "left" : "allParameters.add(KEY_OAUTH_CONSUMER_KEY, consumerAuth.getKey());",
      "right" : "allParameters.add(KEY_OAUTH_CONSUMER_KEY, Utf8UrlEncoder.encodeQueryElement(consumerAuth.getKey()));",
      "info" : "ExpressionStatement[5080-5145]:ExpressionStatement[5080-5180]"
    }, {
      "left" : "KEY_OAUTH_CONSUMER_KEY",
      "right" : "KEY_OAUTH_CONSUMER_KEY",
      "info" : "SimpleName[5098-5120]:SimpleName[5098-5120]"
    }, {
      "left" : "KEY_OAUTH_CONSUMER_KEY, consumerAuth.getKey()",
      "right" : "consumerAuth.getKey()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[5098-5143]:METHOD_INVOCATION_ARGUMENTS[5156-5177]"
    }, {
      "left" : "allParameters.add(KEY_OAUTH_NONCE, nonce);",
      "right" : "allParameters.add(KEY_OAUTH_NONCE, nonce);",
      "info" : "ExpressionStatement[5154-5196]:ExpressionStatement[5189-5231]"
    }, {
      "left" : "allParameters.add(KEY_OAUTH_SIGNATURE_METHOD, OAUTH_SIGNATURE_METHOD);",
      "right" : "allParameters.add(KEY_OAUTH_SIGNATURE_METHOD, OAUTH_SIGNATURE_METHOD);",
      "info" : "ExpressionStatement[5205-5275]:ExpressionStatement[5240-5310]"
    }, {
      "left" : "allParameters.add(KEY_OAUTH_TIMESTAMP, String.valueOf(oauthTimestamp));",
      "right" : "allParameters.add(KEY_OAUTH_TIMESTAMP, String.valueOf(oauthTimestamp));",
      "info" : "ExpressionStatement[5284-5355]:ExpressionStatement[5319-5390]"
    }, {
      "left" : "if (userAuth.getKey() != null)",
      "right" : "if (userAuth.getKey() != null)",
      "info" : "IfStatement[5364-5473]:IfStatement[5399-5543]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5395-5473]:Block[5430-5543]"
    }, {
      "left" : "allParameters.add(KEY_OAUTH_TOKEN, userAuth.getKey());",
      "right" : "allParameters.add(KEY_OAUTH_TOKEN, Utf8UrlEncoder.encodeQueryElement(userAuth.getKey()));",
      "info" : "ExpressionStatement[5409-5463]:ExpressionStatement[5444-5533]"
    }, {
      "left" : "KEY_OAUTH_TOKEN",
      "right" : "KEY_OAUTH_TOKEN",
      "info" : "SimpleName[5427-5442]:SimpleName[5462-5477]"
    }, {
      "left" : "KEY_OAUTH_TOKEN, userAuth.getKey()",
      "right" : "userAuth.getKey()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[5427-5461]:METHOD_INVOCATION_ARGUMENTS[5513-5530]"
    }, {
      "left" : "allParameters.add(KEY_OAUTH_VERSION, OAUTH_VERSION_1_0);",
      "right" : "allParameters.add(KEY_OAUTH_VERSION, OAUTH_VERSION_1_0);",
      "info" : "ExpressionStatement[5482-5538]:ExpressionStatement[5552-5608]"
    }, {
      "left" : "if (formParams != null)",
      "right" : "if (formParams != null)",
      "info" : "IfStatement[5548-5712]:IfStatement[5618-5906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5572-5712]:Block[5642-5906]"
    }, {
      "left" : "for (Param param : formParams)",
      "right" : "for (Param param : formParams)",
      "info" : "EnhancedForStatement[5586-5702]:EnhancedForStatement[5656-5896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5617-5702]:Block[5687-5896]"
    }, {
      "left" : "allParameters.add(param.getName(), param.getValue());",
      "right" : "allParameters.add(Utf8UrlEncoder.encodeQueryElement(param.getName()), Utf8UrlEncoder.encodeQueryElement(param.getValue()));",
      "info" : "ExpressionStatement[5635-5688]:ExpressionStatement[5759-5882]"
    }, {
      "left" : "param.getName()",
      "right" : "param.getName()",
      "info" : "MethodInvocation[5653-5668]:MethodInvocation[5811-5826]"
    }, {
      "left" : "param.getValue()",
      "right" : "param.getValue()",
      "info" : "MethodInvocation[5670-5686]:MethodInvocation[5863-5879]"
    }, {
      "left" : "if (queryParams != null)",
      "right" : "if (queryParams != null)",
      "info" : "IfStatement[5721-5887]:IfStatement[5915-6129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5746-5887]:Block[5940-6129]"
    }, {
      "left" : "for (Param param : queryParams)",
      "right" : "for (Param param : queryParams)",
      "info" : "EnhancedForStatement[5760-5877]:EnhancedForStatement[5954-6119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5792-5877]:Block[5986-6119]"
    }, {
      "left" : "allParameters.add(param.getName(), param.getValue());",
      "right" : "allParameters.add(param.getName(), param.getValue());",
      "info" : "ExpressionStatement[5810-5863]:ExpressionStatement[6052-6105]"
    }, {
      "left" : "return allParameters.sortAndConcat();",
      "right" : "return allParameters.sortAndConcat();",
      "info" : "ReturnStatement[5896-5933]:ReturnStatement[6138-6175]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6039-6045]:SimpleType[7086-7092]"
    }, {
      "left" : "calculateSignature",
      "right" : "signatureBaseString",
      "info" : "SimpleName[6046-6064]:SimpleName[6201-6220]"
    }, {
      "left" : "String method",
      "right" : "String method",
      "info" : "SingleVariableDeclaration[6065-6078]:SingleVariableDeclaration[6221-6234]"
    }, {
      "left" : "Uri uri",
      "right" : "Uri uri",
      "info" : "SingleVariableDeclaration[6080-6087]:SingleVariableDeclaration[6236-6243]"
    }, {
      "left" : "long oauthTimestamp",
      "right" : "long oauthTimestamp",
      "info" : "SingleVariableDeclaration[6089-6108]:SingleVariableDeclaration[6245-6264]"
    }, {
      "left" : "String nonce",
      "right" : "String nonce",
      "info" : "SingleVariableDeclaration[6110-6122]:SingleVariableDeclaration[6266-6278]"
    }, {
      "left" : "List<Param> formParams",
      "right" : "List<Param> formParams",
      "info" : "SingleVariableDeclaration[6161-6183]:SingleVariableDeclaration[6317-6339]"
    }, {
      "left" : "List<Param> queryParams",
      "right" : "List<Param> queryParams",
      "info" : "SingleVariableDeclaration[6185-6208]:SingleVariableDeclaration[6341-6364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6210-7020]:Block[6366-6982]"
    }, {
      "left" : "String baseUrl = baseUrl(uri);",
      "right" : "String baseUrl = baseUrl(uri);",
      "info" : "VariableDeclarationStatement[6296-6326]:VariableDeclarationStatement[6460-6490]"
    }, {
      "left" : "String encodedParams = encodedParams(oauthTimestamp, nonce, formParams, queryParams);",
      "right" : "String encodedParams = encodedParams(oauthTimestamp, nonce, formParams, queryParams);",
      "info" : "VariableDeclarationStatement[6335-6420]:VariableDeclarationStatement[6499-6584]"
    }, {
      "left" : "StringBuilder sb = StringUtils.stringBuilder();",
      "right" : "StringBuilder sb = StringUtils.stringBuilder();",
      "info" : "VariableDeclarationStatement[6430-6477]:VariableDeclarationStatement[6594-6641]"
    }, {
      "left" : "sb.append(method);",
      "right" : "sb.append(method);",
      "info" : "ExpressionStatement[6486-6504]:ExpressionStatement[6650-6668]"
    }, {
      "left" : "sb.append('&');",
      "right" : "sb.append('&');",
      "info" : "ExpressionStatement[6555-6570]:ExpressionStatement[6871-6886]"
    }, {
      "left" : "Utf8UrlEncoder.encodeAndAppendQueryElement(sb, baseUrl);",
      "right" : "Utf8UrlEncoder.encodeAndAppendQueryElement(sb, baseUrl);",
      "info" : "ExpressionStatement[6579-6635]:ExpressionStatement[6743-6799]"
    }, {
      "left" : "sb.append('&');",
      "right" : "sb.append('&');",
      "info" : "ExpressionStatement[6707-6722]:ExpressionStatement[6719-6734]"
    }, {
      "left" : "Utf8UrlEncoder.encodeAndAppendQueryElement(sb, encodedParams);",
      "right" : "Utf8UrlEncoder.encodeAndAppendQueryElement(sb, encodedParams);",
      "info" : "ExpressionStatement[6731-6793]:ExpressionStatement[6895-6957]"
    }, {
      "left" : "ByteBuffer rawBase = StringUtils.charSequence2ByteBuffer(sb, UTF_8);",
      "right" : "ByteBuffer rawBase = StringUtils.charSequence2ByteBuffer(sb, UTF_8);",
      "info" : "VariableDeclarationStatement[6803-6871]:VariableDeclarationStatement[7378-7446]"
    }, {
      "left" : "byte[] rawSignature = mac.digest(rawBase);",
      "right" : "byte[] rawSignature = mac.digest(rawBase);",
      "info" : "VariableDeclarationStatement[6880-6922]:VariableDeclarationStatement[7455-7497]"
    }, {
      "left" : "return Base64.encode(rawSignature);",
      "right" : "return Base64.encode(rawSignature);",
      "info" : "ReturnStatement[6979-7014]:ReturnStatement[7554-7589]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[7078-7085]:Modifier[7653-7660]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[7086-7092]:SimpleType[7661-7667]"
    }, {
      "left" : "constructAuthHeader",
      "right" : "constructAuthHeader",
      "info" : "SimpleName[7093-7112]:SimpleName[7668-7687]"
    }, {
      "left" : "String signature",
      "right" : "String signature",
      "info" : "SingleVariableDeclaration[7113-7129]:SingleVariableDeclaration[7688-7704]"
    }, {
      "left" : "String nonce",
      "right" : "String nonce",
      "info" : "SingleVariableDeclaration[7131-7143]:SingleVariableDeclaration[7706-7718]"
    }, {
      "left" : "long oauthTimestamp",
      "right" : "long oauthTimestamp",
      "info" : "SingleVariableDeclaration[7145-7164]:SingleVariableDeclaration[7720-7739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7166-8257]:Block[7741-8832]"
    }, {
      "left" : "StringBuilder sb = StringUtils.stringBuilder();",
      "right" : "StringBuilder sb = StringUtils.stringBuilder();",
      "info" : "VariableDeclarationStatement[7176-7223]:VariableDeclarationStatement[7751-7798]"
    }, {
      "left" : "sb.append(\"OAuth \");",
      "right" : "sb.append(\"OAuth \");",
      "info" : "ExpressionStatement[7232-7252]:ExpressionStatement[7807-7827]"
    }, {
      "left" : "sb.append(KEY_OAUTH_CONSUMER_KEY).append(\"=\\\"\").append(consumerAuth.getKey()).append(\"\\\", \");",
      "right" : "sb.append(KEY_OAUTH_CONSUMER_KEY).append(\"=\\\"\").append(consumerAuth.getKey()).append(\"\\\", \");",
      "info" : "ExpressionStatement[7261-7354]:ExpressionStatement[7836-7929]"
    }, {
      "left" : "if (userAuth.getKey() != null)",
      "right" : "if (userAuth.getKey() != null)",
      "info" : "IfStatement[7363-7500]:IfStatement[7938-8075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7394-7500]:Block[7969-8075]"
    }, {
      "left" : "sb.append(KEY_OAUTH_TOKEN).append(\"=\\\"\").append(userAuth.getKey()).append(\"\\\", \");",
      "right" : "sb.append(KEY_OAUTH_TOKEN).append(\"=\\\"\").append(userAuth.getKey()).append(\"\\\", \");",
      "info" : "ExpressionStatement[7408-7490]:ExpressionStatement[7983-8065]"
    }, {
      "left" : "sb.append(KEY_OAUTH_SIGNATURE_METHOD).append(\"=\\\"\").append(OAUTH_SIGNATURE_METHOD).append(\"\\\", \");",
      "right" : "sb.append(KEY_OAUTH_SIGNATURE_METHOD).append(\"=\\\"\").append(OAUTH_SIGNATURE_METHOD).append(\"\\\", \");",
      "info" : "ExpressionStatement[7509-7607]:ExpressionStatement[8084-8182]"
    }, {
      "left" : "sb.append(KEY_OAUTH_SIGNATURE).append(\"=\\\"\");",
      "right" : "sb.append(KEY_OAUTH_SIGNATURE).append(\"=\\\"\");",
      "info" : "ExpressionStatement[7678-7723]:ExpressionStatement[8253-8298]"
    }, {
      "left" : "Utf8UrlEncoder.encodeAndAppendQueryElement(sb, signature).append(\"\\\", \");",
      "right" : "Utf8UrlEncoder.encodeAndAppendQueryElement(sb, signature).append(\"\\\", \");",
      "info" : "ExpressionStatement[7732-7805]:ExpressionStatement[8307-8380]"
    }, {
      "left" : "sb.append(KEY_OAUTH_TIMESTAMP).append(\"=\\\"\").append(oauthTimestamp).append(\"\\\", \");",
      "right" : "sb.append(KEY_OAUTH_TIMESTAMP).append(\"=\\\"\").append(oauthTimestamp).append(\"\\\", \");",
      "info" : "ExpressionStatement[7814-7897]:ExpressionStatement[8389-8472]"
    }, {
      "left" : "sb.append(KEY_OAUTH_NONCE).append(\"=\\\"\");",
      "right" : "sb.append(KEY_OAUTH_NONCE).append(\"=\\\"\");",
      "info" : "ExpressionStatement[7998-8039]:ExpressionStatement[8573-8614]"
    }, {
      "left" : "Utf8UrlEncoder.encodeAndAppendQueryElement(sb, nonce);",
      "right" : "Utf8UrlEncoder.encodeAndAppendQueryElement(sb, nonce);",
      "info" : "ExpressionStatement[8048-8102]:ExpressionStatement[8623-8677]"
    }, {
      "left" : "sb.append(\"\\\", \");",
      "right" : "sb.append(\"\\\", \");",
      "info" : "ExpressionStatement[8111-8129]:ExpressionStatement[8686-8704]"
    }, {
      "left" : "sb.append(KEY_OAUTH_VERSION).append(\"=\\\"\").append(OAUTH_VERSION_1_0).append(\"\\\"\");",
      "right" : "sb.append(KEY_OAUTH_VERSION).append(\"=\\\"\").append(OAUTH_VERSION_1_0).append(\"\\\"\");",
      "info" : "ExpressionStatement[8139-8221]:ExpressionStatement[8714-8796]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[8230-8251]:ReturnStatement[8805-8826]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8263-8272]:Modifier[8937-8946]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8286-8292]:SimpleType[8947-8953]"
    }, {
      "left" : "generateNonce",
      "right" : "generateNonce",
      "info" : "SimpleName[8293-8306]:SimpleName[8954-8967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8309-8618]:Block[8970-9279]"
    }, {
      "left" : "byte[] nonceBuffer = NONCE_BUFFER.get();",
      "right" : "byte[] nonceBuffer = NONCE_BUFFER.get();",
      "info" : "VariableDeclarationStatement[8319-8359]:VariableDeclarationStatement[8980-9020]"
    }, {
      "left" : "ThreadLocalRandom.current().nextBytes(nonceBuffer);",
      "right" : "ThreadLocalRandom.current().nextBytes(nonceBuffer);",
      "info" : "ExpressionStatement[8368-8419]:ExpressionStatement[9029-9080]"
    }, {
      "left" : "return Base64.encode(nonceBuffer);",
      "right" : "return Base64.encode(nonceBuffer);",
      "info" : "ReturnStatement[8518-8552]:ReturnStatement[9179-9213]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8624-8633]:Modifier[8838-8847]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[8634-8638]:PrimitiveType[8848-8852]"
    }, {
      "left" : "generateTimestamp",
      "right" : "generateTimestamp",
      "info" : "SimpleName[8639-8656]:SimpleName[8853-8870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8659-8717]:Block[8873-8931]"
    }, {
      "left" : "return System.currentTimeMillis() / 1000L;",
      "right" : "return System.currentTimeMillis() / 1000L;",
      "info" : "ReturnStatement[8669-8711]:ReturnStatement[8883-8925]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[9206-9211]:Modifier[9768-9773]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9212-9218]:Modifier[9774-9780]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[9219-9224]:TYPE_DECLARATION_KIND[9781-9786]"
    }, {
      "left" : "OAuthParameterSet",
      "right" : "OAuthParameterSet",
      "info" : "SimpleName[9225-9242]:SimpleName[9787-9804]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9312-9318]:Modifier[9874-9880]"
    }, {
      "left" : "OAuthParameterSet",
      "right" : "OAuthParameterSet",
      "info" : "SimpleName[9319-9336]:SimpleName[9881-9898]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[9337-9345]:SingleVariableDeclaration[9899-9907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9347-9409]:Block[9909-9971]"
    }, {
      "left" : "allParameters = new ArrayList<>(size);",
      "right" : "allParameters = new ArrayList<>(size);",
      "info" : "ExpressionStatement[9361-9399]:ExpressionStatement[9923-9961]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9419-9425]:Modifier[9981-9987]"
    }, {
      "left" : "OAuthParameterSet",
      "right" : "OAuthParameterSet",
      "info" : "SimpleType[9426-9443]:SimpleType[9988-10005]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[9444-9447]:SimpleName[10006-10009]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[9448-9458]:SingleVariableDeclaration[10010-10020]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[9460-9472]:SingleVariableDeclaration[10022-10034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9474-9667]:Block[10036-10130]"
    }, {
      "left" : "p",
      "right" : "add",
      "info" : "SimpleName[9498-9499]:SimpleName[10064-10067]"
    }, {
      "left" : "new Parameter(Utf8UrlEncoder.encodeQueryElement(key), Utf8UrlEncoder.encodeQueryElement(value))",
      "right" : "new Parameter(key, value)",
      "info" : "ClassInstanceCreation[9502-9597]:ClassInstanceCreation[10068-10093]"
    }, {
      "left" : "Utf8UrlEncoder",
      "right" : "Utf8UrlEncoder",
      "info" : "METHOD_INVOCATION_RECEIVER[9516-9530]:METHOD_INVOCATION_RECEIVER[5122-5136]"
    }, {
      "left" : "key",
      "right" : "key",
      "info" : "SimpleName[9550-9553]:SimpleName[10082-10085]"
    }, {
      "left" : "Utf8UrlEncoder",
      "right" : "Utf8UrlEncoder",
      "info" : "METHOD_INVOCATION_RECEIVER[9556-9570]:METHOD_INVOCATION_RECEIVER[5479-5493]"
    }, {
      "left" : "value",
      "right" : "value",
      "info" : "SimpleName[9590-9595]:SimpleName[10087-10092]"
    }, {
      "left" : "allParameters",
      "right" : "allParameters",
      "info" : "METHOD_INVOCATION_RECEIVER[9611-9624]:METHOD_INVOCATION_RECEIVER[10050-10063]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9645-9657]:ReturnStatement[10108-10120]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9677-9683]:Modifier[10140-10146]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[9684-9690]:SimpleType[10147-10153]"
    }, {
      "left" : "sortAndConcat",
      "right" : "sortAndConcat",
      "info" : "SimpleName[9691-9704]:SimpleName[10154-10167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9707-10342]:Block[10170-10805]"
    }, {
      "left" : "Parameter[] params = allParameters.toArray(new Parameter[allParameters.size()]);",
      "right" : "Parameter[] params = allParameters.toArray(new Parameter[allParameters.size()]);",
      "info" : "VariableDeclarationStatement[9779-9859]:VariableDeclarationStatement[10242-10322]"
    }, {
      "left" : "Arrays.sort(params);",
      "right" : "Arrays.sort(params);",
      "info" : "ExpressionStatement[9872-9892]:ExpressionStatement[10335-10355]"
    }, {
      "left" : "StringBuilder encodedParams = new StringBuilder(100);",
      "right" : "StringBuilder encodedParams = new StringBuilder(100);",
      "info" : "VariableDeclarationStatement[9975-10028]:VariableDeclarationStatement[10438-10491]"
    }, {
      "left" : "for (Parameter param : params)",
      "right" : "for (Parameter param : params)",
      "info" : "EnhancedForStatement[10041-10287]:EnhancedForStatement[10504-10750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10072-10287]:Block[10535-10750]"
    }, {
      "left" : "if (encodedParams.length() > 0)",
      "right" : "if (encodedParams.length() > 0)",
      "info" : "IfStatement[10090-10188]:IfStatement[10553-10651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10122-10188]:Block[10585-10651]"
    }, {
      "left" : "encodedParams.append('&');",
      "right" : "encodedParams.append('&');",
      "info" : "ExpressionStatement[10144-10170]:ExpressionStatement[10607-10633]"
    }, {
      "left" : "encodedParams.append(param.key()).append('=').append(param.value());",
      "right" : "encodedParams.append(param.key()).append('=').append(param.value());",
      "info" : "ExpressionStatement[10205-10273]:ExpressionStatement[10668-10736]"
    }, {
      "left" : "return encodedParams.toString();",
      "right" : "return encodedParams.toString();",
      "info" : "ReturnStatement[10300-10332]:ReturnStatement[10763-10795]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[10441-10446]:Modifier[10904-10909]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10447-10453]:Modifier[10910-10916]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[10454-10459]:TYPE_DECLARATION_KIND[10917-10922]"
    }, {
      "left" : "Parameter",
      "right" : "Parameter",
      "info" : "SimpleName[10460-10469]:SimpleName[10923-10932]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10555-10561]:Modifier[11018-11024]"
    }, {
      "left" : "Parameter",
      "right" : "Parameter",
      "info" : "SimpleName[10562-10571]:SimpleName[11025-11034]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[10572-10582]:SingleVariableDeclaration[11035-11045]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[10584-10596]:SingleVariableDeclaration[11047-11059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10598-10669]:Block[11061-11132]"
    }, {
      "left" : "this.key = key;",
      "right" : "this.key = key;",
      "info" : "ExpressionStatement[10612-10627]:ExpressionStatement[11075-11090]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[10640-10659]:ExpressionStatement[11103-11122]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10679-10685]:Modifier[11142-11148]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10686-10692]:SimpleType[11149-11155]"
    }, {
      "left" : "key",
      "right" : "key",
      "info" : "SimpleName[10693-10696]:SimpleName[11156-11159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10699-10734]:Block[11162-11197]"
    }, {
      "left" : "return key;",
      "right" : "return key;",
      "info" : "ReturnStatement[10713-10724]:ReturnStatement[11176-11187]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10744-10750]:Modifier[11207-11213]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10751-10757]:SimpleType[11214-11220]"
    }, {
      "left" : "value",
      "right" : "value",
      "info" : "SimpleName[10758-10763]:SimpleName[11221-11226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10766-10803]:Block[11229-11266]"
    }, {
      "left" : "return value;",
      "right" : "return value;",
      "info" : "ReturnStatement[10780-10793]:ReturnStatement[11243-11256]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10813-10822]:MarkerAnnotation[11276-11285]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10831-10837]:Modifier[11294-11300]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[10838-10841]:PrimitiveType[11301-11304]"
    }, {
      "left" : "compareTo",
      "right" : "compareTo",
      "info" : "SimpleName[10842-10851]:SimpleName[11305-11314]"
    }, {
      "left" : "Parameter other",
      "right" : "Parameter other",
      "info" : "SingleVariableDeclaration[10852-10867]:SingleVariableDeclaration[11315-11330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10869-11050]:Block[11332-11513]"
    }, {
      "left" : "int diff = key.compareTo(other.key);",
      "right" : "int diff = key.compareTo(other.key);",
      "info" : "VariableDeclarationStatement[10883-10919]:VariableDeclarationStatement[11346-11382]"
    }, {
      "left" : "if (diff == 0)",
      "right" : "if (diff == 0)",
      "info" : "IfStatement[10932-11015]:IfStatement[11395-11478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10947-11015]:Block[11410-11478]"
    }, {
      "left" : "diff = value.compareTo(other.value);",
      "right" : "diff = value.compareTo(other.value);",
      "info" : "ExpressionStatement[10965-11001]:ExpressionStatement[11428-11464]"
    }, {
      "left" : "return diff;",
      "right" : "return diff;",
      "info" : "ReturnStatement[11028-11040]:ReturnStatement[11491-11503]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11060-11069]:MarkerAnnotation[11523-11532]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11078-11084]:Modifier[11541-11547]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11085-11091]:SimpleType[11548-11554]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[11092-11100]:SimpleName[11555-11563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11103-11152]:Block[11566-11615]"
    }, {
      "left" : "return key + \"=\" + value;",
      "right" : "return key + \"=\" + value;",
      "info" : "ReturnStatement[11117-11142]:ReturnStatement[11580-11605]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11162-11171]:MarkerAnnotation[11625-11634]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11180-11186]:Modifier[11643-11649]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11187-11194]:PrimitiveType[11650-11657]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[11195-11201]:SimpleName[11658-11664]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[11202-11210]:SingleVariableDeclaration[11665-11673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11212-11531]:Block[11675-11994]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[11226-11253]:IfStatement[11689-11716]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11241-11253]:ReturnStatement[11704-11716]"
    }, {
      "left" : "if (o == null || getClass() != o.getClass())",
      "right" : "if (o == null || getClass() != o.getClass())",
      "info" : "IfStatement[11266-11324]:IfStatement[11729-11787]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11311-11324]:ReturnStatement[11774-11787]"
    }, {
      "left" : "Parameter parameter = (Parameter) o;",
      "right" : "Parameter parameter = (Parameter) o;",
      "info" : "VariableDeclarationStatement[11338-11374]:VariableDeclarationStatement[11801-11837]"
    }, {
      "left" : "if (!key.equals(parameter.key))",
      "right" : "if (!key.equals(parameter.key))",
      "info" : "IfStatement[11388-11433]:IfStatement[11851-11896]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11420-11433]:ReturnStatement[11883-11896]"
    }, {
      "left" : "if (!value.equals(parameter.value))",
      "right" : "if (!value.equals(parameter.value))",
      "info" : "IfStatement[11446-11495]:IfStatement[11909-11958]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11482-11495]:ReturnStatement[11945-11958]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11509-11521]:ReturnStatement[11972-11984]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11541-11550]:MarkerAnnotation[12004-12013]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11559-11565]:Modifier[12022-12028]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[11566-11569]:PrimitiveType[12029-12032]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[11570-11578]:SimpleName[12033-12041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11581-11713]:Block[12044-12176]"
    }, {
      "left" : "int result = key.hashCode();",
      "right" : "int result = key.hashCode();",
      "info" : "VariableDeclarationStatement[11595-11623]:VariableDeclarationStatement[12058-12086]"
    }, {
      "left" : "result = 31 * result + value.hashCode();",
      "right" : "result = 31 * result + value.hashCode();",
      "info" : "ExpressionStatement[11636-11676]:ExpressionStatement[12099-12139]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11689-11703]:ReturnStatement[12152-12166]"
    } ]
  },
  "interFileMappings" : { }
}