{
  "matchedElements" : [
 {
    "left" : "class : Partial",
    "right" : "class : Partial",
    "info" : "TypeDeclaration[1050-38975]:TypeDeclaration[1050-38975]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[2769-2863]:FieldDeclaration[2769-2863]"
  }, {
    "left" : "iChronology",
    "right" : "iChronology",
    "info" : "FieldDeclaration[2869-2940]:FieldDeclaration[2869-2940]"
  }, {
    "left" : "iTypes",
    "right" : "iTypes",
    "info" : "FieldDeclaration[2945-3021]:FieldDeclaration[2945-3021]"
  }, {
    "left" : "iValues",
    "right" : "iValues",
    "info" : "FieldDeclaration[3026-3107]:FieldDeclaration[3026-3107]"
  }, {
    "left" : "iFormatter",
    "right" : "iFormatter",
    "info" : "FieldDeclaration[3112-3249]:FieldDeclaration[3112-3249]"
  }, {
    "left" : "public Partial()",
    "right" : "public Partial()",
    "info" : "MethodDeclaration[3353-4005]:MethodDeclaration[3353-4005]"
  }, {
    "left" : "public Partial(chrono )",
    "right" : "public Partial(chrono )",
    "info" : "MethodDeclaration[4011-4805]:MethodDeclaration[4011-4805]"
  }, {
    "left" : "public Partial(type , value int)",
    "right" : "public Partial(type , value int)",
    "info" : "MethodDeclaration[4811-5241]:MethodDeclaration[4811-5241]"
  }, {
    "left" : "public Partial(type , value int, chronology )",
    "right" : "public Partial(type , value int, chronology )",
    "info" : "MethodDeclaration[5247-6096]:MethodDeclaration[5247-6096]"
  }, {
    "left" : "public Partial(types , values ...)",
    "right" : "public Partial(types , values ...)",
    "info" : "MethodDeclaration[6102-6620]:MethodDeclaration[6102-6620]"
  }, {
    "left" : "public Partial(types , values , chronology )",
    "right" : "public Partial(types , values , chronology )",
    "info" : "MethodDeclaration[6626-10347]:MethodDeclaration[6626-10347]"
  }, {
    "left" : "public Partial(partial )",
    "right" : "public Partial(partial )",
    "info" : "MethodDeclaration[10353-11073]:MethodDeclaration[10353-11073]"
  }, {
    "left" : "package Partial(partial , values ...)",
    "right" : "package Partial(partial , values ...)",
    "info" : "MethodDeclaration[11079-11543]:MethodDeclaration[11079-11543]"
  }, {
    "left" : "package Partial(chronology , types , values ...)",
    "right" : "package Partial(chronology , types , values ...)",
    "info" : "MethodDeclaration[11549-12107]:MethodDeclaration[11549-12107]"
  }, {
    "left" : "public size() : int",
    "right" : "public size() : int",
    "info" : "MethodDeclaration[12191-12351]:MethodDeclaration[12191-12351]"
  }, {
    "left" : "public getChronology() : ",
    "right" : "public getChronology() : ",
    "info" : "MethodDeclaration[12357-12734]:MethodDeclaration[12357-12734]"
  }, {
    "left" : "protected getField(index int, chrono ) : ",
    "right" : "protected getField(index int, chrono ) : ",
    "info" : "MethodDeclaration[12740-13130]:MethodDeclaration[12740-13130]"
  }, {
    "left" : "public getFieldType(index int) : ",
    "right" : "public getFieldType(index int) : ",
    "info" : "MethodDeclaration[13136-13452]:MethodDeclaration[13136-13452]"
  }, {
    "left" : "public getFieldTypes() : ",
    "right" : "public getFieldTypes() : ",
    "info" : "MethodDeclaration[13458-13813]:MethodDeclaration[13458-13813]"
  }, {
    "left" : "public getValue(index int) : int",
    "right" : "public getValue(index int) : int",
    "info" : "MethodDeclaration[13897-14169]:MethodDeclaration[13897-14169]"
  }, {
    "left" : "public getValues() : ",
    "right" : "public getValues() : ",
    "info" : "MethodDeclaration[14175-14588]:MethodDeclaration[14175-14588]"
  }, {
    "left" : "public withChronologyRetainFields(newChronology ) : ",
    "right" : "public withChronologyRetainFields(newChronology ) : ",
    "info" : "MethodDeclaration[14672-15764]:MethodDeclaration[14672-15764]"
  }, {
    "left" : "public with(fieldType , value int) : ",
    "right" : "public with(fieldType , value int) : ",
    "info" : "MethodDeclaration[15848-18934]:MethodDeclaration[15848-18934]"
  }, {
    "left" : "public without(fieldType ) : ",
    "right" : "public without(fieldType ) : ",
    "info" : "MethodDeclaration[18940-20006]:MethodDeclaration[18940-20006]"
  }, {
    "left" : "public withField(fieldType , value int) : ",
    "right" : "public withField(fieldType , value int) : ",
    "info" : "MethodDeclaration[20090-21083]:MethodDeclaration[20090-21083]"
  }, {
    "left" : "public withFieldAdded(fieldType , amount int) : ",
    "right" : "public withFieldAdded(fieldType , amount int) : ",
    "info" : "MethodDeclaration[21089-22152]:MethodDeclaration[21089-22152]"
  }, {
    "left" : "public withFieldAddWrapped(fieldType , amount int) : ",
    "right" : "public withFieldAddWrapped(fieldType , amount int) : ",
    "info" : "MethodDeclaration[22158-23223]:MethodDeclaration[22158-23223]"
  }, {
    "left" : "public withPeriodAdded(period , scalar int) : ",
    "right" : "public withPeriodAdded(period , scalar int) : ",
    "info" : "MethodDeclaration[23229-24575]:MethodDeclaration[23229-24575]"
  }, {
    "left" : "public plus(period ) : ",
    "right" : "public plus(period ) : ",
    "info" : "MethodDeclaration[24581-25069]:MethodDeclaration[24581-25069]"
  }, {
    "left" : "public minus(period ) : ",
    "right" : "public minus(period ) : ",
    "info" : "MethodDeclaration[25075-25562]:MethodDeclaration[25075-25562]"
  }, {
    "left" : "public property(type ) : ",
    "right" : "public property(type ) : ",
    "info" : "MethodDeclaration[25646-26179]:MethodDeclaration[25646-26179]"
  }, {
    "left" : "public isMatch(instant ) : boolean",
    "right" : "public isMatch(instant ) : boolean",
    "info" : "MethodDeclaration[26263-27051]:MethodDeclaration[26263-27051]"
  }, {
    "left" : "public isMatch(partial ) : boolean",
    "right" : "public isMatch(partial ) : boolean",
    "info" : "MethodDeclaration[27057-27967]:MethodDeclaration[27057-27967]"
  }, {
    "left" : "public getFormatter() : ",
    "right" : "public getFormatter() : ",
    "info" : "MethodDeclaration[28051-29176]:MethodDeclaration[28051-29176]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[29260-30000]:MethodDeclaration[29260-30000]"
  }, {
    "left" : "public toStringList() : ",
    "right" : "public toStringList() : ",
    "info" : "MethodDeclaration[30006-30823]:MethodDeclaration[30006-30823]"
  }, {
    "left" : "public toString(pattern ) : ",
    "right" : "public toString(pattern ) : ",
    "info" : "MethodDeclaration[30829-31296]:MethodDeclaration[30829-31296]"
  }, {
    "left" : "public toString(pattern , locale ) : ",
    "right" : "public toString(pattern , locale ) : ",
    "info" : "MethodDeclaration[31302-31859]:MethodDeclaration[31302-31859]"
  }, {
    "left" : "class : Property",
    "right" : "class : Property",
    "info" : "TypeDeclaration[31943-38972]:TypeDeclaration[31943-38972]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[32263-32361]:FieldDeclaration[32263-32361]"
  }, {
    "left" : "iPartial",
    "right" : "iPartial",
    "info" : "FieldDeclaration[32371-32429]:FieldDeclaration[32371-32429]"
  }, {
    "left" : "iFieldIndex",
    "right" : "iFieldIndex",
    "info" : "FieldDeclaration[32438-32499]:FieldDeclaration[32438-32499]"
  }, {
    "left" : "package Property(partial , fieldIndex int)",
    "right" : "package Property(partial , fieldIndex int)",
    "info" : "MethodDeclaration[32509-32826]:MethodDeclaration[32509-32826]"
  }, {
    "left" : "public getField() : ",
    "right" : "public getField() : ",
    "info" : "MethodDeclaration[32836-33046]:MethodDeclaration[32836-33046]"
  }, {
    "left" : "protected getReadablePartial() : ",
    "right" : "protected getReadablePartial() : ",
    "info" : "MethodDeclaration[33056-33269]:MethodDeclaration[33056-33269]"
  }, {
    "left" : "public getPartial() : ",
    "right" : "public getPartial() : ",
    "info" : "MethodDeclaration[33279-33473]:MethodDeclaration[33279-33473]"
  }, {
    "left" : "public get() : int",
    "right" : "public get() : int",
    "info" : "MethodDeclaration[33483-33674]:MethodDeclaration[33483-33674]"
  }, {
    "left" : "public addToCopy(valueToAdd int) : ",
    "right" : "public addToCopy(valueToAdd int) : ",
    "info" : "MethodDeclaration[33766-34817]:MethodDeclaration[33766-34817]"
  }, {
    "left" : "public addWrapFieldToCopy(valueToAdd int) : ",
    "right" : "public addWrapFieldToCopy(valueToAdd int) : ",
    "info" : "MethodDeclaration[34827-35952]:MethodDeclaration[34827-35952]"
  }, {
    "left" : "public setCopy(value int) : ",
    "right" : "public setCopy(value int) : ",
    "info" : "MethodDeclaration[36044-36709]:MethodDeclaration[36044-36709]"
  }, {
    "left" : "public setCopy(text , locale ) : ",
    "right" : "public setCopy(text , locale ) : ",
    "info" : "MethodDeclaration[36719-37492]:MethodDeclaration[36719-37492]"
  }, {
    "left" : "public setCopy(text ) : ",
    "right" : "public setCopy(text ) : ",
    "info" : "MethodDeclaration[37502-38030]:MethodDeclaration[37502-38030]"
  }, {
    "left" : "public withMaximumValue() : ",
    "right" : "public withMaximumValue() : ",
    "info" : "MethodDeclaration[38122-38539]:MethodDeclaration[38122-38539]"
  }, {
    "left" : "public withMinimumValue() : ",
    "right" : "public withMinimumValue() : ",
    "info" : "MethodDeclaration[38549-38966]:MethodDeclaration[38549-38966]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3948-3954]:Modifier[3948-3954]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleName[3955-3962]:SimpleName[3955-3962]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3965-4005]:Block[3965-4005]"
  }, {
    "left" : "this((Chronology) null);",
    "right" : "this((Chronology) null);",
    "info" : "ConstructorInvocation[3975-3999]:ConstructorInvocation[3975-3999]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4605-4611]:Modifier[4605-4611]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleName[4612-4619]:SimpleName[4612-4619]"
  }, {
    "left" : "Chronology chrono",
    "right" : "Chronology chrono",
    "info" : "SingleVariableDeclaration[4620-4637]:SingleVariableDeclaration[4620-4637]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4639-4805]:Block[4639-4805]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[4649-4657]:SuperConstructorInvocation[4649-4657]"
  }, {
    "left" : "iChronology = DateTimeUtils.getChronology(chrono).withUTC();",
    "right" : "iChronology = DateTimeUtils.getChronology(chrono).withUTC();",
    "info" : "ExpressionStatement[4666-4726]:ExpressionStatement[4666-4726]"
  }, {
    "left" : "iTypes = new DateTimeFieldType[0];",
    "right" : "iTypes = new DateTimeFieldType[0];",
    "info" : "ExpressionStatement[4735-4769]:ExpressionStatement[4735-4769]"
  }, {
    "left" : "iValues = new int[0];",
    "right" : "iValues = new int[0];",
    "info" : "ExpressionStatement[4778-4799]:ExpressionStatement[4778-4799]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5151-5157]:Modifier[5151-5157]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleName[5158-5165]:SimpleName[5158-5165]"
  }, {
    "left" : "DateTimeFieldType type",
    "right" : "DateTimeFieldType type",
    "info" : "SingleVariableDeclaration[5166-5188]:SingleVariableDeclaration[5166-5188]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[5190-5199]:SingleVariableDeclaration[5190-5199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5201-5241]:Block[5201-5241]"
  }, {
    "left" : "this(type, value, null);",
    "right" : "this(type, value, null);",
    "info" : "ConstructorInvocation[5211-5235]:ConstructorInvocation[5211-5235]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5642-5648]:Modifier[5642-5648]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleName[5649-5656]:SimpleName[5649-5656]"
  }, {
    "left" : "DateTimeFieldType type",
    "right" : "DateTimeFieldType type",
    "info" : "SingleVariableDeclaration[5657-5679]:SingleVariableDeclaration[5657-5679]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[5681-5690]:SingleVariableDeclaration[5681-5690]"
  }, {
    "left" : "Chronology chronology",
    "right" : "Chronology chronology",
    "info" : "SingleVariableDeclaration[5692-5713]:SingleVariableDeclaration[5692-5713]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5715-6096]:Block[5715-6096]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[5725-5733]:SuperConstructorInvocation[5725-5733]"
  }, {
    "left" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
    "right" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
    "info" : "ExpressionStatement[5742-5805]:ExpressionStatement[5742-5805]"
  }, {
    "left" : "iChronology = chronology;",
    "right" : "iChronology = chronology;",
    "info" : "ExpressionStatement[5814-5839]:ExpressionStatement[5814-5839]"
  }, {
    "left" : "if (type == null)",
    "right" : "if (type == null)",
    "info" : "IfStatement[5848-5960]:IfStatement[5848-5960]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5866-5960]:Block[5866-5960]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The field type must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The field type must not be null\");",
    "info" : "ThrowStatement[5880-5950]:ThrowStatement[5880-5950]"
  }, {
    "left" : "iTypes = new DateTimeFieldType[] {type};",
    "right" : "iTypes = new DateTimeFieldType[] {type};",
    "info" : "ExpressionStatement[5969-6009]:ExpressionStatement[5969-6009]"
  }, {
    "left" : "iValues = new int[] {value};",
    "right" : "iValues = new int[] {value};",
    "info" : "ExpressionStatement[6018-6046]:ExpressionStatement[6018-6046]"
  }, {
    "left" : "chronology.validate(this, iValues);",
    "right" : "chronology.validate(this, iValues);",
    "info" : "ExpressionStatement[6055-6090]:ExpressionStatement[6055-6090]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6522-6528]:Modifier[6522-6528]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleName[6529-6536]:SimpleName[6529-6536]"
  }, {
    "left" : "DateTimeFieldType[] types",
    "right" : "DateTimeFieldType[] types",
    "info" : "SingleVariableDeclaration[6537-6562]:SingleVariableDeclaration[6537-6562]"
  }, {
    "left" : "int[] values",
    "right" : "int[] values",
    "info" : "SingleVariableDeclaration[6564-6576]:SingleVariableDeclaration[6564-6576]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6578-6620]:Block[6578-6620]"
  }, {
    "left" : "this(types, values, null);",
    "right" : "this(types, values, null);",
    "info" : "ConstructorInvocation[6588-6614]:ConstructorInvocation[6588-6614]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7103-7109]:Modifier[7103-7109]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleName[7110-7117]:SimpleName[7110-7117]"
  }, {
    "left" : "DateTimeFieldType[] types",
    "right" : "DateTimeFieldType[] types",
    "info" : "SingleVariableDeclaration[7118-7143]:SingleVariableDeclaration[7118-7143]"
  }, {
    "left" : "int[] values",
    "right" : "int[] values",
    "info" : "SingleVariableDeclaration[7145-7157]:SingleVariableDeclaration[7145-7157]"
  }, {
    "left" : "Chronology chronology",
    "right" : "Chronology chronology",
    "info" : "SingleVariableDeclaration[7159-7180]:SingleVariableDeclaration[7159-7180]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7182-10347]:Block[7182-10347]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[7192-7200]:SuperConstructorInvocation[7192-7200]"
  }, {
    "left" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
    "right" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
    "info" : "ExpressionStatement[7209-7272]:ExpressionStatement[7209-7272]"
  }, {
    "left" : "iChronology = chronology;",
    "right" : "iChronology = chronology;",
    "info" : "ExpressionStatement[7281-7306]:ExpressionStatement[7281-7306]"
  }, {
    "left" : "if (types == null)",
    "right" : "if (types == null)",
    "info" : "IfStatement[7315-7425]:IfStatement[7315-7425]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7334-7425]:Block[7334-7425]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Types array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"Types array must not be null\");",
    "info" : "ThrowStatement[7348-7415]:ThrowStatement[7348-7415]"
  }, {
    "left" : "if (values == null)",
    "right" : "if (values == null)",
    "info" : "IfStatement[7434-7546]:IfStatement[7434-7546]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7454-7546]:Block[7454-7546]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Values array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"Values array must not be null\");",
    "info" : "ThrowStatement[7468-7536]:ThrowStatement[7468-7536]"
  }, {
    "left" : "if (values.length != types.length)",
    "right" : "if (values.length != types.length)",
    "info" : "IfStatement[7555-7708]:IfStatement[7555-7708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7590-7708]:Block[7590-7708]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Values array must be the same length as the types array\");",
    "right" : "throw new IllegalArgumentException(\"Values array must be the same length as the types array\");",
    "info" : "ThrowStatement[7604-7698]:ThrowStatement[7604-7698]"
  }, {
    "left" : "if (types.length == 0)",
    "right" : "if (types.length == 0)",
    "info" : "IfStatement[7717-7829]:IfStatement[7717-7829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7740-7829]:Block[7740-7829]"
  }, {
    "left" : "iTypes = types;",
    "right" : "iTypes = types;",
    "info" : "ExpressionStatement[7754-7769]:ExpressionStatement[7754-7769]"
  }, {
    "left" : "iValues = values;",
    "right" : "iValues = values;",
    "info" : "ExpressionStatement[7782-7799]:ExpressionStatement[7782-7799]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[7812-7819]:ReturnStatement[7812-7819]"
  }, {
    "left" : "for (int i = 0; i < types.length; i++)",
    "right" : "for (int i = 0; i < types.length; i++)",
    "info" : "ForStatement[7838-8039]:ForStatement[7838-8039]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7877-8039]:Block[7877-8039]"
  }, {
    "left" : "if (types[i] == null)",
    "right" : "if (types[i] == null)",
    "info" : "IfStatement[7891-8029]:IfStatement[7891-8029]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7913-8029]:Block[7913-8029]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Types array must not contain null: index \" + i);",
    "right" : "throw new IllegalArgumentException(\"Types array must not contain null: index \" + i);",
    "info" : "ThrowStatement[7931-8015]:ThrowStatement[7931-8015]"
  }, {
    "left" : "DurationField lastUnitField = null;",
    "right" : "DurationField lastUnitField = null;",
    "info" : "VariableDeclarationStatement[8048-8083]:VariableDeclarationStatement[8048-8083]"
  }, {
    "left" : "for (int i = 0; i < types.length; i++)",
    "right" : "for (int i = 0; i < types.length; i++)",
    "info" : "ForStatement[8092-10193]:ForStatement[8092-10193]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8131-10193]:Block[8131-10193]"
  }, {
    "left" : "DateTimeFieldType loopType = types[i];",
    "right" : "DateTimeFieldType loopType = types[i];",
    "info" : "VariableDeclarationStatement[8145-8183]:VariableDeclarationStatement[8145-8183]"
  }, {
    "left" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
    "right" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
    "info" : "VariableDeclarationStatement[8196-8275]:VariableDeclarationStatement[8196-8275]"
  }, {
    "left" : "if (i > 0)",
    "right" : "if (i > 0)",
    "info" : "IfStatement[8288-10140]:IfStatement[8288-10140]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8299-10140]:Block[8299-10140]"
  }, {
    "left" : "int compare = lastUnitField.compareTo(loopUnitField);",
    "right" : "int compare = lastUnitField.compareTo(loopUnitField);",
    "info" : "VariableDeclarationStatement[8317-8370]:VariableDeclarationStatement[8317-8370]"
  }, {
    "left" : "if (compare < 0 || (compare != 0 && loopUnitField.isSupported() == false))",
    "right" : "if (compare < 0 || (compare != 0 && loopUnitField.isSupported() == false))",
    "info" : "IfStatement[8387-10126]:IfStatement[8387-10126]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8462-8670]:Block[8462-8670]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                            types[i - 1].getName() + \" < \" + loopType.getName());",
    "right" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                            types[i - 1].getName() + \" < \" + loopType.getName());",
    "info" : "ThrowStatement[8484-8652]:ThrowStatement[8484-8652]"
  }, {
    "left" : "if (compare == 0)",
    "right" : "if (compare == 0)",
    "info" : "IfStatement[8676-10126]:IfStatement[8676-10126]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8694-10126]:Block[8694-10126]"
  }, {
    "left" : "if (types[i - 1].getRangeDurationType() == null)",
    "right" : "if (types[i - 1].getRangeDurationType() == null)",
    "info" : "IfStatement[8716-10108]:IfStatement[8716-10108]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8765-9014]:Block[8765-9014]"
  }, {
    "left" : "if (loopType.getRangeDurationType() == null)",
    "right" : "if (loopType.getRangeDurationType() == null)",
    "info" : "IfStatement[8791-8992]:IfStatement[8791-8992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8836-8992]:Block[8836-8992]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + loopType.getName());",
    "right" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + loopType.getName());",
    "info" : "ThrowStatement[8866-8966]:ThrowStatement[8866-8966]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9020-10108]:Block[9020-10108]"
  }, {
    "left" : "if (loopType.getRangeDurationType() == null)",
    "right" : "if (loopType.getRangeDurationType() == null)",
    "info" : "IfStatement[9046-9323]:IfStatement[9046-9323]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9091-9323]:Block[9091-9323]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
    "right" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
    "info" : "ThrowStatement[9121-9297]:ThrowStatement[9121-9297]"
  }, {
    "left" : "DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);",
    "right" : "DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);",
    "info" : "VariableDeclarationStatement[9348-9437]:VariableDeclarationStatement[9348-9437]"
  }, {
    "left" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
    "right" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
    "info" : "VariableDeclarationStatement[9462-9547]:VariableDeclarationStatement[9462-9547]"
  }, {
    "left" : "if (lastRangeField.compareTo(loopRangeField) < 0)",
    "right" : "if (lastRangeField.compareTo(loopRangeField) < 0)",
    "info" : "IfStatement[9572-9854]:IfStatement[9572-9854]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9622-9854]:Block[9622-9854]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
    "right" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
    "info" : "ThrowStatement[9652-9828]:ThrowStatement[9652-9828]"
  }, {
    "left" : "if (lastRangeField.compareTo(loopRangeField) == 0)",
    "right" : "if (lastRangeField.compareTo(loopRangeField) == 0)",
    "info" : "IfStatement[9879-10086]:IfStatement[9879-10086]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9930-10086]:Block[9930-10086]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + loopType.getName());",
    "right" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + loopType.getName());",
    "info" : "ThrowStatement[9960-10060]:ThrowStatement[9960-10060]"
  }, {
    "left" : "lastUnitField = loopUnitField;",
    "right" : "lastUnitField = loopUnitField;",
    "info" : "ExpressionStatement[10153-10183]:ExpressionStatement[10153-10183]"
  }, {
    "left" : "iTypes = (DateTimeFieldType[]) types.clone();",
    "right" : "iTypes = (DateTimeFieldType[]) types.clone();",
    "info" : "ExpressionStatement[10211-10256]:ExpressionStatement[10211-10256]"
  }, {
    "left" : "chronology.validate(this, values);",
    "right" : "chronology.validate(this, values);",
    "info" : "ExpressionStatement[10265-10299]:ExpressionStatement[10265-10299]"
  }, {
    "left" : "iValues = (int[]) values.clone();",
    "right" : "iValues = (int[]) values.clone();",
    "info" : "ExpressionStatement[10308-10341]:ExpressionStatement[10308-10341]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10547-10553]:Modifier[10547-10553]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleName[10554-10561]:SimpleName[10554-10561]"
  }, {
    "left" : "ReadablePartial partial",
    "right" : "ReadablePartial partial",
    "info" : "SingleVariableDeclaration[10562-10585]:SingleVariableDeclaration[10562-10585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10587-11073]:Block[10587-11073]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[10597-10605]:SuperConstructorInvocation[10597-10605]"
  }, {
    "left" : "if (partial == null)",
    "right" : "if (partial == null)",
    "info" : "IfStatement[10614-10726]:IfStatement[10614-10726]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10635-10726]:Block[10635-10726]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The partial must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The partial must not be null\");",
    "info" : "ThrowStatement[10649-10716]:ThrowStatement[10649-10716]"
  }, {
    "left" : "iChronology = DateTimeUtils.getChronology(partial.getChronology()).withUTC();",
    "right" : "iChronology = DateTimeUtils.getChronology(partial.getChronology()).withUTC();",
    "info" : "ExpressionStatement[10735-10812]:ExpressionStatement[10735-10812]"
  }, {
    "left" : "iTypes = new DateTimeFieldType[partial.size()];",
    "right" : "iTypes = new DateTimeFieldType[partial.size()];",
    "info" : "ExpressionStatement[10821-10868]:ExpressionStatement[10821-10868]"
  }, {
    "left" : "iValues = new int[partial.size()];",
    "right" : "iValues = new int[partial.size()];",
    "info" : "ExpressionStatement[10877-10911]:ExpressionStatement[10877-10911]"
  }, {
    "left" : "for (int i = 0; i < partial.size(); i++)",
    "right" : "for (int i = 0; i < partial.size(); i++)",
    "info" : "ForStatement[10920-11067]:ForStatement[10920-11067]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10961-11067]:Block[10961-11067]"
  }, {
    "left" : "iTypes[i] = partial.getFieldType(i);",
    "right" : "iTypes[i] = partial.getFieldType(i);",
    "info" : "ExpressionStatement[10975-11011]:ExpressionStatement[10975-11011]"
  }, {
    "left" : "iValues[i] = partial.getValue(i);",
    "right" : "iValues[i] = partial.getValue(i);",
    "info" : "ExpressionStatement[11024-11057]:ExpressionStatement[11024-11057]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleName[11378-11385]:SimpleName[11378-11385]"
  }, {
    "left" : "Partial partial",
    "right" : "Partial partial",
    "info" : "SingleVariableDeclaration[11386-11401]:SingleVariableDeclaration[11386-11401]"
  }, {
    "left" : "int[] values",
    "right" : "int[] values",
    "info" : "SingleVariableDeclaration[11403-11415]:SingleVariableDeclaration[11403-11415]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11417-11543]:Block[11417-11543]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[11427-11435]:SuperConstructorInvocation[11427-11435]"
  }, {
    "left" : "iChronology = partial.iChronology;",
    "right" : "iChronology = partial.iChronology;",
    "info" : "ExpressionStatement[11444-11478]:ExpressionStatement[11444-11478]"
  }, {
    "left" : "iTypes = partial.iTypes;",
    "right" : "iTypes = partial.iTypes;",
    "info" : "ExpressionStatement[11487-11511]:ExpressionStatement[11487-11511]"
  }, {
    "left" : "iValues = values;",
    "right" : "iValues = values;",
    "info" : "ExpressionStatement[11520-11537]:ExpressionStatement[11520-11537]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleName[11927-11934]:SimpleName[11927-11934]"
  }, {
    "left" : "Chronology chronology",
    "right" : "Chronology chronology",
    "info" : "SingleVariableDeclaration[11935-11956]:SingleVariableDeclaration[11935-11956]"
  }, {
    "left" : "DateTimeFieldType[] types",
    "right" : "DateTimeFieldType[] types",
    "info" : "SingleVariableDeclaration[11958-11983]:SingleVariableDeclaration[11958-11983]"
  }, {
    "left" : "int[] values",
    "right" : "int[] values",
    "info" : "SingleVariableDeclaration[11985-11997]:SingleVariableDeclaration[11985-11997]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11999-12107]:Block[11999-12107]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[12009-12017]:SuperConstructorInvocation[12009-12017]"
  }, {
    "left" : "iChronology = chronology;",
    "right" : "iChronology = chronology;",
    "info" : "ExpressionStatement[12026-12051]:ExpressionStatement[12026-12051]"
  }, {
    "left" : "iTypes = types;",
    "right" : "iTypes = types;",
    "info" : "ExpressionStatement[12060-12075]:ExpressionStatement[12060-12075]"
  }, {
    "left" : "iValues = values;",
    "right" : "iValues = values;",
    "info" : "ExpressionStatement[12084-12101]:ExpressionStatement[12084-12101]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12296-12302]:Modifier[12296-12302]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[12303-12306]:PrimitiveType[12303-12306]"
  }, {
    "left" : "size",
    "right" : "size",
    "info" : "SimpleName[12307-12311]:SimpleName[12307-12311]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12314-12351]:Block[12314-12351]"
  }, {
    "left" : "return iTypes.length;",
    "right" : "return iTypes.length;",
    "info" : "ReturnStatement[12324-12345]:ReturnStatement[12324-12345]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12665-12671]:Modifier[12665-12671]"
  }, {
    "left" : "Chronology",
    "right" : "Chronology",
    "info" : "SimpleType[12672-12682]:SimpleType[12672-12682]"
  }, {
    "left" : "getChronology",
    "right" : "getChronology",
    "info" : "SimpleName[12683-12696]:SimpleName[12683-12696]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12699-12734]:Block[12699-12734]"
  }, {
    "left" : "return iChronology;",
    "right" : "return iChronology;",
    "info" : "ReturnStatement[12709-12728]:ReturnStatement[12709-12728]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[13013-13022]:Modifier[13013-13022]"
  }, {
    "left" : "DateTimeField",
    "right" : "DateTimeField",
    "info" : "SimpleType[13023-13036]:SimpleType[13023-13036]"
  }, {
    "left" : "getField",
    "right" : "getField",
    "info" : "SimpleName[13037-13045]:SimpleName[13037-13045]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[13046-13055]:SingleVariableDeclaration[13046-13055]"
  }, {
    "left" : "Chronology chrono",
    "right" : "Chronology chrono",
    "info" : "SingleVariableDeclaration[13057-13074]:SingleVariableDeclaration[13057-13074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13076-13130]:Block[13076-13130]"
  }, {
    "left" : "return iTypes[index].getField(chrono);",
    "right" : "return iTypes[index].getField(chrono);",
    "info" : "ReturnStatement[13086-13124]:ReturnStatement[13086-13124]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13366-13372]:Modifier[13366-13372]"
  }, {
    "left" : "DateTimeFieldType",
    "right" : "DateTimeFieldType",
    "info" : "SimpleType[13373-13390]:SimpleType[13373-13390]"
  }, {
    "left" : "getFieldType",
    "right" : "getFieldType",
    "info" : "SimpleName[13391-13403]:SimpleName[13391-13403]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[13404-13413]:SingleVariableDeclaration[13404-13413]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13415-13452]:Block[13415-13452]"
  }, {
    "left" : "return iTypes[index];",
    "right" : "return iTypes[index];",
    "info" : "ReturnStatement[13425-13446]:ReturnStatement[13425-13446]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13710-13716]:Modifier[13710-13716]"
  }, {
    "left" : "DateTimeFieldType[]",
    "right" : "DateTimeFieldType[]",
    "info" : "ArrayType[13717-13736]:ArrayType[13717-13736]"
  }, {
    "left" : "getFieldTypes",
    "right" : "getFieldTypes",
    "info" : "SimpleName[13737-13750]:SimpleName[13737-13750]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13753-13813]:Block[13753-13813]"
  }, {
    "left" : "return (DateTimeFieldType[]) iTypes.clone();",
    "right" : "return (DateTimeFieldType[]) iTypes.clone();",
    "info" : "ReturnStatement[13763-13807]:ReturnStatement[13763-13807]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14100-14106]:Modifier[14100-14106]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[14107-14110]:PrimitiveType[14107-14110]"
  }, {
    "left" : "getValue",
    "right" : "getValue",
    "info" : "SimpleName[14111-14119]:SimpleName[14111-14119]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[14120-14129]:SingleVariableDeclaration[14120-14129]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14131-14169]:Block[14131-14169]"
  }, {
    "left" : "return iValues[index];",
    "right" : "return iValues[index];",
    "info" : "ReturnStatement[14141-14163]:ReturnStatement[14141-14163]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14516-14522]:Modifier[14516-14522]"
  }, {
    "left" : "int[]",
    "right" : "int[]",
    "info" : "ArrayType[14523-14528]:ArrayType[14523-14528]"
  }, {
    "left" : "getValues",
    "right" : "getValues",
    "info" : "SimpleName[14529-14538]:SimpleName[14529-14538]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14541-14588]:Block[14541-14588]"
  }, {
    "left" : "return (int[]) iValues.clone();",
    "right" : "return (int[]) iValues.clone();",
    "info" : "ReturnStatement[14551-14582]:ReturnStatement[14551-14582]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15306-15312]:Modifier[15306-15312]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[15313-15320]:SimpleType[15313-15320]"
  }, {
    "left" : "withChronologyRetainFields",
    "right" : "withChronologyRetainFields",
    "info" : "SimpleName[15321-15347]:SimpleName[15321-15347]"
  }, {
    "left" : "Chronology newChronology",
    "right" : "Chronology newChronology",
    "info" : "SingleVariableDeclaration[15348-15372]:SingleVariableDeclaration[15348-15372]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15374-15764]:Block[15374-15764]"
  }, {
    "left" : "newChronology = DateTimeUtils.getChronology(newChronology);",
    "right" : "newChronology = DateTimeUtils.getChronology(newChronology);",
    "info" : "ExpressionStatement[15384-15443]:ExpressionStatement[15384-15443]"
  }, {
    "left" : "newChronology = newChronology.withUTC();",
    "right" : "newChronology = newChronology.withUTC();",
    "info" : "ExpressionStatement[15452-15492]:ExpressionStatement[15452-15492]"
  }, {
    "left" : "if (newChronology == getChronology())",
    "right" : "if (newChronology == getChronology())",
    "info" : "IfStatement[15501-15758]:IfStatement[15501-15758]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15539-15575]:Block[15539-15575]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[15553-15565]:ReturnStatement[15553-15565]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15581-15758]:Block[15581-15758]"
  }, {
    "left" : "Partial newPartial = new Partial(newChronology, iTypes, iValues);",
    "right" : "Partial newPartial = new Partial(newChronology, iTypes, iValues);",
    "info" : "VariableDeclarationStatement[15595-15660]:VariableDeclarationStatement[15595-15660]"
  }, {
    "left" : "newChronology.validate(newPartial, iValues);",
    "right" : "newChronology.validate(newPartial, iValues);",
    "info" : "ExpressionStatement[15673-15717]:ExpressionStatement[15673-15717]"
  }, {
    "left" : "return newPartial;",
    "right" : "return newPartial;",
    "info" : "ReturnStatement[15730-15748]:ReturnStatement[15730-15748]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16488-16494]:Modifier[16488-16494]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[16495-16502]:SimpleType[16495-16502]"
  }, {
    "left" : "with",
    "right" : "with",
    "info" : "SimpleName[16503-16507]:SimpleName[16503-16507]"
  }, {
    "left" : "DateTimeFieldType fieldType",
    "right" : "DateTimeFieldType fieldType",
    "info" : "SingleVariableDeclaration[16508-16535]:SingleVariableDeclaration[16508-16535]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[16537-16546]:SingleVariableDeclaration[16537-16546]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16548-18934]:Block[16548-18934]"
  }, {
    "left" : "if (fieldType == null)",
    "right" : "if (fieldType == null)",
    "info" : "IfStatement[16558-16675]:IfStatement[16558-16675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16581-16675]:Block[16581-16675]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The field type must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The field type must not be null\");",
    "info" : "ThrowStatement[16595-16665]:ThrowStatement[16595-16665]"
  }, {
    "left" : "int index = indexOf(fieldType);",
    "right" : "int index = indexOf(fieldType);",
    "info" : "VariableDeclarationStatement[16684-16715]:VariableDeclarationStatement[16684-16715]"
  }, {
    "left" : "if (index == -1)",
    "right" : "if (index == -1)",
    "info" : "IfStatement[16724-18697]:IfStatement[16724-18697]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16741-18697]:Block[16741-18697]"
  }, {
    "left" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1];",
    "right" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1];",
    "info" : "VariableDeclarationStatement[16755-16827]:VariableDeclarationStatement[16755-16827]"
  }, {
    "left" : "int[] newValues = new int[newTypes.length];",
    "right" : "int[] newValues = new int[newTypes.length];",
    "info" : "VariableDeclarationStatement[16840-16883]:VariableDeclarationStatement[16840-16883]"
  }, {
    "left" : "int i = 0;",
    "right" : "int i = 0;",
    "info" : "VariableDeclarationStatement[16984-16994]:VariableDeclarationStatement[16984-16994]"
  }, {
    "left" : "DurationField unitField = fieldType.getDurationType().getField(iChronology);",
    "right" : "DurationField unitField = fieldType.getDurationType().getField(iChronology);",
    "info" : "VariableDeclarationStatement[17007-17083]:VariableDeclarationStatement[17007-17083]"
  }, {
    "left" : "if (unitField.isSupported())",
    "right" : "if (unitField.isSupported())",
    "info" : "IfStatement[17096-18043]:IfStatement[17096-18043]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17125-18043]:Block[17125-18043]"
  }, {
    "left" : "for (; i < iTypes.length; i++)",
    "right" : "for (; i < iTypes.length; i++)",
    "info" : "ForStatement[17143-18029]:ForStatement[17143-18029]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17174-18029]:Block[17174-18029]"
  }, {
    "left" : "DateTimeFieldType loopType = iTypes[i];",
    "right" : "DateTimeFieldType loopType = iTypes[i];",
    "info" : "VariableDeclarationStatement[17196-17235]:VariableDeclarationStatement[17196-17235]"
  }, {
    "left" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
    "right" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
    "info" : "VariableDeclarationStatement[17256-17335]:VariableDeclarationStatement[17256-17335]"
  }, {
    "left" : "if (loopUnitField.isSupported())",
    "right" : "if (loopUnitField.isSupported())",
    "info" : "IfStatement[17356-18011]:IfStatement[17356-18011]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17389-18011]:Block[17389-18011]"
  }, {
    "left" : "int compare = unitField.compareTo(loopUnitField);",
    "right" : "int compare = unitField.compareTo(loopUnitField);",
    "info" : "VariableDeclarationStatement[17415-17464]:VariableDeclarationStatement[17415-17464]"
  }, {
    "left" : "if (compare > 0)",
    "right" : "if (compare > 0)",
    "info" : "IfStatement[17489-17989]:IfStatement[17489-17989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17506-17568]:Block[17506-17568]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[17536-17542]:BreakStatement[17536-17542]"
  }, {
    "left" : "if (compare == 0)",
    "right" : "if (compare == 0)",
    "info" : "IfStatement[17574-17989]:IfStatement[17574-17989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17592-17989]:Block[17592-17989]"
  }, {
    "left" : "DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);",
    "right" : "DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);",
    "info" : "VariableDeclarationStatement[17622-17704]:VariableDeclarationStatement[17622-17704]"
  }, {
    "left" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
    "right" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
    "info" : "VariableDeclarationStatement[17733-17818]:VariableDeclarationStatement[17733-17818]"
  }, {
    "left" : "if (rangeField.compareTo(loopRangeField) > 0)",
    "right" : "if (rangeField.compareTo(loopRangeField) > 0)",
    "info" : "IfStatement[17847-17963]:IfStatement[17847-17963]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17893-17963]:Block[17893-17963]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[17927-17933]:BreakStatement[17927-17933]"
  }, {
    "left" : "System.arraycopy(iTypes, 0, newTypes, 0, i);",
    "right" : "System.arraycopy(iTypes, 0, newTypes, 0, i);",
    "info" : "ExpressionStatement[18056-18100]:ExpressionStatement[18056-18100]"
  }, {
    "left" : "System.arraycopy(iValues, 0, newValues, 0, i);",
    "right" : "System.arraycopy(iValues, 0, newValues, 0, i);",
    "info" : "ExpressionStatement[18113-18159]:ExpressionStatement[18113-18159]"
  }, {
    "left" : "newTypes[i] = fieldType;",
    "right" : "newTypes[i] = fieldType;",
    "info" : "ExpressionStatement[18172-18196]:ExpressionStatement[18172-18196]"
  }, {
    "left" : "newValues[i] = value;",
    "right" : "newValues[i] = value;",
    "info" : "ExpressionStatement[18209-18230]:ExpressionStatement[18209-18230]"
  }, {
    "left" : "System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1);",
    "right" : "System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1);",
    "info" : "ExpressionStatement[18243-18313]:ExpressionStatement[18243-18313]"
  }, {
    "left" : "System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);",
    "right" : "System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);",
    "info" : "ExpressionStatement[18326-18399]:ExpressionStatement[18326-18399]"
  }, {
    "left" : "Partial newPartial = new Partial(iChronology, newTypes, newValues);",
    "right" : "Partial newPartial = new Partial(newTypes, newValues, iChronology);",
    "info" : "VariableDeclarationStatement[18532-18599]:VariableDeclarationStatement[18532-18599]"
  }, {
    "left" : "iChronology.validate(newPartial, newValues);",
    "right" : "iChronology.validate(newPartial, newValues);",
    "info" : "ExpressionStatement[18612-18656]:ExpressionStatement[18612-18656]"
  }, {
    "left" : "return newPartial;",
    "right" : "return newPartial;",
    "info" : "ReturnStatement[18669-18687]:ReturnStatement[18669-18687]"
  }, {
    "left" : "if (value == getValue(index))",
    "right" : "if (value == getValue(index))",
    "info" : "IfStatement[18706-18772]:IfStatement[18706-18772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18736-18772]:Block[18736-18772]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[18750-18762]:ReturnStatement[18750-18762]"
  }, {
    "left" : "int[] newValues = getValues();",
    "right" : "int[] newValues = getValues();",
    "info" : "VariableDeclarationStatement[18781-18811]:VariableDeclarationStatement[18781-18811]"
  }, {
    "left" : "newValues = getField(index).set(this, index, newValues, value);",
    "right" : "newValues = getField(index).set(this, index, newValues, value);",
    "info" : "ExpressionStatement[18820-18883]:ExpressionStatement[18820-18883]"
  }, {
    "left" : "return new Partial(this, newValues);",
    "right" : "return new Partial(this, newValues);",
    "info" : "ReturnStatement[18892-18928]:ReturnStatement[18892-18928]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19243-19249]:Modifier[19243-19249]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[19250-19257]:SimpleType[19250-19257]"
  }, {
    "left" : "without",
    "right" : "without",
    "info" : "SimpleName[19258-19265]:SimpleName[19258-19265]"
  }, {
    "left" : "DateTimeFieldType fieldType",
    "right" : "DateTimeFieldType fieldType",
    "info" : "SingleVariableDeclaration[19266-19293]:SingleVariableDeclaration[19266-19293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19295-20006]:Block[19295-20006]"
  }, {
    "left" : "int index = indexOf(fieldType);",
    "right" : "int index = indexOf(fieldType);",
    "info" : "VariableDeclarationStatement[19305-19336]:VariableDeclarationStatement[19305-19336]"
  }, {
    "left" : "if (index != -1)",
    "right" : "if (index != -1)",
    "info" : "IfStatement[19345-19979]:IfStatement[19345-19979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19362-19979]:Block[19362-19979]"
  }, {
    "left" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[size() - 1];",
    "right" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[size() - 1];",
    "info" : "VariableDeclarationStatement[19376-19441]:VariableDeclarationStatement[19376-19441]"
  }, {
    "left" : "int[] newValues = new int[size() - 1];",
    "right" : "int[] newValues = new int[size() - 1];",
    "info" : "VariableDeclarationStatement[19454-19492]:VariableDeclarationStatement[19454-19492]"
  }, {
    "left" : "System.arraycopy(iTypes, 0, newTypes, 0, index);",
    "right" : "System.arraycopy(iTypes, 0, newTypes, 0, index);",
    "info" : "ExpressionStatement[19505-19553]:ExpressionStatement[19505-19553]"
  }, {
    "left" : "System.arraycopy(iTypes, index + 1, newTypes, index, newTypes.length - index);",
    "right" : "System.arraycopy(iTypes, index + 1, newTypes, index, newTypes.length - index);",
    "info" : "ExpressionStatement[19566-19644]:ExpressionStatement[19566-19644]"
  }, {
    "left" : "System.arraycopy(iValues, 0, newValues, 0, index);",
    "right" : "System.arraycopy(iValues, 0, newValues, 0, index);",
    "info" : "ExpressionStatement[19657-19707]:ExpressionStatement[19657-19707]"
  }, {
    "left" : "System.arraycopy(iValues, index + 1, newValues, index, newValues.length - index);",
    "right" : "System.arraycopy(iValues, index + 1, newValues, index, newValues.length - index);",
    "info" : "ExpressionStatement[19720-19801]:ExpressionStatement[19720-19801]"
  }, {
    "left" : "Partial newPartial = new Partial(iChronology, newTypes, newValues);",
    "right" : "Partial newPartial = new Partial(iChronology, newTypes, newValues);",
    "info" : "VariableDeclarationStatement[19814-19881]:VariableDeclarationStatement[19814-19881]"
  }, {
    "left" : "iChronology.validate(newPartial, newValues);",
    "right" : "iChronology.validate(newPartial, newValues);",
    "info" : "ExpressionStatement[19894-19938]:ExpressionStatement[19894-19938]"
  }, {
    "left" : "return newPartial;",
    "right" : "return newPartial;",
    "info" : "ReturnStatement[19951-19969]:ReturnStatement[19951-19969]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[19988-20000]:ReturnStatement[19988-20000]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20731-20737]:Modifier[20731-20737]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[20738-20745]:SimpleType[20738-20745]"
  }, {
    "left" : "withField",
    "right" : "withField",
    "info" : "SimpleName[20746-20755]:SimpleName[20746-20755]"
  }, {
    "left" : "DateTimeFieldType fieldType",
    "right" : "DateTimeFieldType fieldType",
    "info" : "SingleVariableDeclaration[20756-20783]:SingleVariableDeclaration[20756-20783]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[20785-20794]:SingleVariableDeclaration[20785-20794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20796-21083]:Block[20796-21083]"
  }, {
    "left" : "int index = indexOfSupported(fieldType);",
    "right" : "int index = indexOfSupported(fieldType);",
    "info" : "VariableDeclarationStatement[20806-20846]:VariableDeclarationStatement[20806-20846]"
  }, {
    "left" : "if (value == getValue(index))",
    "right" : "if (value == getValue(index))",
    "info" : "IfStatement[20855-20921]:IfStatement[20855-20921]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20885-20921]:Block[20885-20921]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[20899-20911]:ReturnStatement[20899-20911]"
  }, {
    "left" : "int[] newValues = getValues();",
    "right" : "int[] newValues = getValues();",
    "info" : "VariableDeclarationStatement[20930-20960]:VariableDeclarationStatement[20930-20960]"
  }, {
    "left" : "newValues = getField(index).set(this, index, newValues, value);",
    "right" : "newValues = getField(index).set(this, index, newValues, value);",
    "info" : "ExpressionStatement[20969-21032]:ExpressionStatement[20969-21032]"
  }, {
    "left" : "return new Partial(this, newValues);",
    "right" : "return new Partial(this, newValues);",
    "info" : "ReturnStatement[21041-21077]:ReturnStatement[21041-21077]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21806-21812]:Modifier[21806-21812]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[21813-21820]:SimpleType[21813-21820]"
  }, {
    "left" : "withFieldAdded",
    "right" : "withFieldAdded",
    "info" : "SimpleName[21821-21835]:SimpleName[21821-21835]"
  }, {
    "left" : "DurationFieldType fieldType",
    "right" : "DurationFieldType fieldType",
    "info" : "SingleVariableDeclaration[21836-21863]:SingleVariableDeclaration[21836-21863]"
  }, {
    "left" : "int amount",
    "right" : "int amount",
    "info" : "SingleVariableDeclaration[21865-21875]:SingleVariableDeclaration[21865-21875]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21877-22152]:Block[21877-22152]"
  }, {
    "left" : "int index = indexOfSupported(fieldType);",
    "right" : "int index = indexOfSupported(fieldType);",
    "info" : "VariableDeclarationStatement[21887-21927]:VariableDeclarationStatement[21887-21927]"
  }, {
    "left" : "if (amount == 0)",
    "right" : "if (amount == 0)",
    "info" : "IfStatement[21936-21989]:IfStatement[21936-21989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21953-21989]:Block[21953-21989]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[21967-21979]:ReturnStatement[21967-21979]"
  }, {
    "left" : "int[] newValues = getValues();",
    "right" : "int[] newValues = getValues();",
    "info" : "VariableDeclarationStatement[21998-22028]:VariableDeclarationStatement[21998-22028]"
  }, {
    "left" : "newValues = getField(index).add(this, index, newValues, amount);",
    "right" : "newValues = getField(index).add(this, index, newValues, amount);",
    "info" : "ExpressionStatement[22037-22101]:ExpressionStatement[22037-22101]"
  }, {
    "left" : "return new Partial(this, newValues);",
    "right" : "return new Partial(this, newValues);",
    "info" : "ReturnStatement[22110-22146]:ReturnStatement[22110-22146]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22861-22867]:Modifier[22861-22867]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[22868-22875]:SimpleType[22868-22875]"
  }, {
    "left" : "withFieldAddWrapped",
    "right" : "withFieldAddWrapped",
    "info" : "SimpleName[22876-22895]:SimpleName[22876-22895]"
  }, {
    "left" : "DurationFieldType fieldType",
    "right" : "DurationFieldType fieldType",
    "info" : "SingleVariableDeclaration[22896-22923]:SingleVariableDeclaration[22896-22923]"
  }, {
    "left" : "int amount",
    "right" : "int amount",
    "info" : "SingleVariableDeclaration[22925-22935]:SingleVariableDeclaration[22925-22935]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22937-23223]:Block[22937-23223]"
  }, {
    "left" : "int index = indexOfSupported(fieldType);",
    "right" : "int index = indexOfSupported(fieldType);",
    "info" : "VariableDeclarationStatement[22947-22987]:VariableDeclarationStatement[22947-22987]"
  }, {
    "left" : "if (amount == 0)",
    "right" : "if (amount == 0)",
    "info" : "IfStatement[22996-23049]:IfStatement[22996-23049]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23013-23049]:Block[23013-23049]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[23027-23039]:ReturnStatement[23027-23039]"
  }, {
    "left" : "int[] newValues = getValues();",
    "right" : "int[] newValues = getValues();",
    "info" : "VariableDeclarationStatement[23058-23088]:VariableDeclarationStatement[23058-23088]"
  }, {
    "left" : "newValues = getField(index).addWrapPartial(this, index, newValues, amount);",
    "right" : "newValues = getField(index).addWrapPartial(this, index, newValues, amount);",
    "info" : "ExpressionStatement[23097-23172]:ExpressionStatement[23097-23172]"
  }, {
    "left" : "return new Partial(this, newValues);",
    "right" : "return new Partial(this, newValues);",
    "info" : "ReturnStatement[23181-23217]:ReturnStatement[23181-23217]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23974-23980]:Modifier[23974-23980]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[23981-23988]:SimpleType[23981-23988]"
  }, {
    "left" : "withPeriodAdded",
    "right" : "withPeriodAdded",
    "info" : "SimpleName[23989-24004]:SimpleName[23989-24004]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[24005-24026]:SingleVariableDeclaration[24005-24026]"
  }, {
    "left" : "int scalar",
    "right" : "int scalar",
    "info" : "SingleVariableDeclaration[24028-24038]:SingleVariableDeclaration[24028-24038]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24040-24575]:Block[24040-24575]"
  }, {
    "left" : "if (period == null || scalar == 0)",
    "right" : "if (period == null || scalar == 0)",
    "info" : "IfStatement[24050-24121]:IfStatement[24050-24121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24085-24121]:Block[24085-24121]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[24099-24111]:ReturnStatement[24099-24111]"
  }, {
    "left" : "int[] newValues = getValues();",
    "right" : "int[] newValues = getValues();",
    "info" : "VariableDeclarationStatement[24130-24160]:VariableDeclarationStatement[24130-24160]"
  }, {
    "left" : "for (int i = 0; i < period.size(); i++)",
    "right" : "for (int i = 0; i < period.size(); i++)",
    "info" : "ForStatement[24169-24524]:ForStatement[24169-24524]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24209-24524]:Block[24209-24524]"
  }, {
    "left" : "DurationFieldType fieldType = period.getFieldType(i);",
    "right" : "DurationFieldType fieldType = period.getFieldType(i);",
    "info" : "VariableDeclarationStatement[24223-24276]:VariableDeclarationStatement[24223-24276]"
  }, {
    "left" : "int index = indexOf(fieldType);",
    "right" : "int index = indexOf(fieldType);",
    "info" : "VariableDeclarationStatement[24289-24320]:VariableDeclarationStatement[24289-24320]"
  }, {
    "left" : "if (index >= 0)",
    "right" : "if (index >= 0)",
    "info" : "IfStatement[24333-24514]:IfStatement[24333-24514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24349-24514]:Block[24349-24514]"
  }, {
    "left" : "newValues = getField(index).add(this, index, newValues,\n                        FieldUtils.safeMultiply(period.getValue(i), scalar));",
    "right" : "newValues = getField(index).add(this, index, newValues,\n                        FieldUtils.safeMultiply(period.getValue(i), scalar));",
    "info" : "ExpressionStatement[24367-24500]:ExpressionStatement[24367-24500]"
  }, {
    "left" : "return new Partial(this, newValues);",
    "right" : "return new Partial(this, newValues);",
    "info" : "ReturnStatement[24533-24569]:ReturnStatement[24533-24569]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24976-24982]:Modifier[24976-24982]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[24983-24990]:SimpleType[24983-24990]"
  }, {
    "left" : "plus",
    "right" : "plus",
    "info" : "SimpleName[24991-24995]:SimpleName[24991-24995]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[24996-25017]:SingleVariableDeclaration[24996-25017]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25019-25069]:Block[25019-25069]"
  }, {
    "left" : "return withPeriodAdded(period, 1);",
    "right" : "return withPeriodAdded(period, 1);",
    "info" : "ReturnStatement[25029-25063]:ReturnStatement[25029-25063]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25467-25473]:Modifier[25467-25473]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[25474-25481]:SimpleType[25474-25481]"
  }, {
    "left" : "minus",
    "right" : "minus",
    "info" : "SimpleName[25482-25487]:SimpleName[25482-25487]"
  }, {
    "left" : "ReadablePeriod period",
    "right" : "ReadablePeriod period",
    "info" : "SingleVariableDeclaration[25488-25509]:SingleVariableDeclaration[25488-25509]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25511-25562]:Block[25511-25562]"
  }, {
    "left" : "return withPeriodAdded(period, -1);",
    "right" : "return withPeriodAdded(period, -1);",
    "info" : "ReturnStatement[25521-25556]:ReturnStatement[25521-25556]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26064-26070]:Modifier[26064-26070]"
  }, {
    "left" : "Property",
    "right" : "Property",
    "info" : "SimpleType[26071-26079]:SimpleType[26071-26079]"
  }, {
    "left" : "property",
    "right" : "property",
    "info" : "SimpleName[26080-26088]:SimpleName[26080-26088]"
  }, {
    "left" : "DateTimeFieldType type",
    "right" : "DateTimeFieldType type",
    "info" : "SingleVariableDeclaration[26089-26111]:SingleVariableDeclaration[26089-26111]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26113-26179]:Block[26113-26179]"
  }, {
    "left" : "return new Property(this, indexOfSupported(type));",
    "right" : "return new Property(this, indexOfSupported(type));",
    "info" : "ReturnStatement[26123-26173]:ReturnStatement[26123-26173]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26632-26638]:Modifier[26632-26638]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[26639-26646]:PrimitiveType[26639-26646]"
  }, {
    "left" : "isMatch",
    "right" : "isMatch",
    "info" : "SimpleName[26647-26654]:SimpleName[26647-26654]"
  }, {
    "left" : "ReadableInstant instant",
    "right" : "ReadableInstant instant",
    "info" : "SingleVariableDeclaration[26655-26678]:SingleVariableDeclaration[26655-26678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26680-27051]:Block[26680-27051]"
  }, {
    "left" : "long millis = DateTimeUtils.getInstantMillis(instant);",
    "right" : "long millis = DateTimeUtils.getInstantMillis(instant);",
    "info" : "VariableDeclarationStatement[26690-26744]:VariableDeclarationStatement[26690-26744]"
  }, {
    "left" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
    "right" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
    "info" : "VariableDeclarationStatement[26753-26817]:VariableDeclarationStatement[26753-26817]"
  }, {
    "left" : "for (int i = 0; i < iTypes.length; i++)",
    "right" : "for (int i = 0; i < iTypes.length; i++)",
    "info" : "ForStatement[26826-27024]:ForStatement[26826-27024]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26866-27024]:Block[26866-27024]"
  }, {
    "left" : "int value = iTypes[i].getField(chrono).get(millis);",
    "right" : "int value = iTypes[i].getField(chrono).get(millis);",
    "info" : "VariableDeclarationStatement[26880-26931]:VariableDeclarationStatement[26880-26931]"
  }, {
    "left" : "if (value != iValues[i])",
    "right" : "if (value != iValues[i])",
    "info" : "IfStatement[26944-27014]:IfStatement[26944-27014]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26969-27014]:Block[26969-27014]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[26987-27000]:ReturnStatement[26987-27000]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[27033-27045]:ReturnStatement[27033-27045]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27579-27585]:Modifier[27579-27585]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[27586-27593]:PrimitiveType[27586-27593]"
  }, {
    "left" : "isMatch",
    "right" : "isMatch",
    "info" : "SimpleName[27594-27601]:SimpleName[27594-27601]"
  }, {
    "left" : "ReadablePartial partial",
    "right" : "ReadablePartial partial",
    "info" : "SingleVariableDeclaration[27602-27625]:SingleVariableDeclaration[27602-27625]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27627-27967]:Block[27627-27967]"
  }, {
    "left" : "if (partial == null)",
    "right" : "if (partial == null)",
    "info" : "IfStatement[27637-27749]:IfStatement[27637-27749]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27658-27749]:Block[27658-27749]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The partial must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The partial must not be null\");",
    "info" : "ThrowStatement[27672-27739]:ThrowStatement[27672-27739]"
  }, {
    "left" : "for (int i = 0; i < iTypes.length; i++)",
    "right" : "for (int i = 0; i < iTypes.length; i++)",
    "info" : "ForStatement[27758-27940]:ForStatement[27758-27940]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27798-27940]:Block[27798-27940]"
  }, {
    "left" : "int value = partial.get(iTypes[i]);",
    "right" : "int value = partial.get(iTypes[i]);",
    "info" : "VariableDeclarationStatement[27812-27847]:VariableDeclarationStatement[27812-27847]"
  }, {
    "left" : "if (value != iValues[i])",
    "right" : "if (value != iValues[i])",
    "info" : "IfStatement[27860-27930]:IfStatement[27860-27930]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27885-27930]:Block[27885-27930]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[27903-27916]:ReturnStatement[27903-27916]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[27949-27961]:ReturnStatement[27949-27961]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28509-28515]:Modifier[28509-28515]"
  }, {
    "left" : "DateTimeFormatter",
    "right" : "DateTimeFormatter",
    "info" : "SimpleType[28516-28533]:SimpleType[28516-28533]"
  }, {
    "left" : "getFormatter",
    "right" : "getFormatter",
    "info" : "SimpleName[28534-28546]:SimpleName[28534-28546]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28549-29176]:Block[28549-29176]"
  }, {
    "left" : "DateTimeFormatter[] f = iFormatter;",
    "right" : "DateTimeFormatter[] f = iFormatter;",
    "info" : "VariableDeclarationStatement[28559-28594]:VariableDeclarationStatement[28559-28594]"
  }, {
    "left" : "if (f == null)",
    "right" : "if (f == null)",
    "info" : "IfStatement[28603-29149]:IfStatement[28603-29149]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28618-29149]:Block[28618-29149]"
  }, {
    "left" : "if (size() == 0)",
    "right" : "if (size() == 0)",
    "info" : "IfStatement[28632-28693]:IfStatement[28632-28693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28649-28693]:Block[28649-28693]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[28667-28679]:ReturnStatement[28667-28679]"
  }, {
    "left" : "f = new DateTimeFormatter[2];",
    "right" : "f = new DateTimeFormatter[2];",
    "info" : "ExpressionStatement[28706-28735]:ExpressionStatement[28706-28735]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[28748-29111]:TryStatement[28748-29111]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28752-29033]:Block[28752-29033]"
  }, {
    "left" : "List<DateTimeFieldType> list = new ArrayList<DateTimeFieldType>(Arrays.asList(iTypes));",
    "right" : "List<DateTimeFieldType> list = new ArrayList<DateTimeFieldType>(Arrays.asList(iTypes));",
    "info" : "VariableDeclarationStatement[28770-28857]:VariableDeclarationStatement[28770-28857]"
  }, {
    "left" : "f[0] = ISODateTimeFormat.forFields(list, true, false);",
    "right" : "f[0] = ISODateTimeFormat.forFields(list, true, false);",
    "info" : "ExpressionStatement[28874-28928]:ExpressionStatement[28874-28928]"
  }, {
    "left" : "if (list.size() == 0)",
    "right" : "if (list.size() == 0)",
    "info" : "IfStatement[28945-29019]:IfStatement[28945-29019]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28967-29019]:Block[28967-29019]"
  }, {
    "left" : "f[1] = f[0];",
    "right" : "f[1] = f[0];",
    "info" : "ExpressionStatement[28989-29001]:ExpressionStatement[28989-29001]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29070-29111]:Block[29070-29111]"
  }, {
    "left" : "iFormatter = f;",
    "right" : "iFormatter = f;",
    "info" : "ExpressionStatement[29124-29139]:ExpressionStatement[29124-29139]"
  }, {
    "left" : "return f[0];",
    "right" : "return f[0];",
    "info" : "ReturnStatement[29158-29170]:ReturnStatement[29158-29170]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29612-29618]:Modifier[29612-29618]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[29619-29625]:SimpleType[29619-29625]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[29626-29634]:SimpleName[29626-29634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29637-30000]:Block[29637-30000]"
  }, {
    "left" : "DateTimeFormatter[] f = iFormatter;",
    "right" : "DateTimeFormatter[] f = iFormatter;",
    "info" : "VariableDeclarationStatement[29647-29682]:VariableDeclarationStatement[29647-29682]"
  }, {
    "left" : "if (f == null)",
    "right" : "if (f == null)",
    "info" : "IfStatement[29691-29855]:IfStatement[29691-29855]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29706-29855]:Block[29706-29855]"
  }, {
    "left" : "getFormatter();",
    "right" : "getFormatter();",
    "info" : "ExpressionStatement[29720-29735]:ExpressionStatement[29720-29735]"
  }, {
    "left" : "f = iFormatter;",
    "right" : "f = iFormatter;",
    "info" : "ExpressionStatement[29748-29763]:ExpressionStatement[29748-29763]"
  }, {
    "left" : "if (f == null)",
    "right" : "if (f == null)",
    "info" : "IfStatement[29776-29845]:IfStatement[29776-29845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29791-29845]:Block[29791-29845]"
  }, {
    "left" : "return toStringList();",
    "right" : "return toStringList();",
    "info" : "ReturnStatement[29809-29831]:ReturnStatement[29809-29831]"
  }, {
    "left" : "DateTimeFormatter f1 = f[1];",
    "right" : "DateTimeFormatter f1 = f[1];",
    "info" : "VariableDeclarationStatement[29864-29892]:VariableDeclarationStatement[29864-29892]"
  }, {
    "left" : "if (f1 == null)",
    "right" : "if (f1 == null)",
    "info" : "IfStatement[29901-29963]:IfStatement[29901-29963]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29917-29963]:Block[29917-29963]"
  }, {
    "left" : "return toStringList();",
    "right" : "return toStringList();",
    "info" : "ReturnStatement[29931-29953]:ReturnStatement[29931-29953]"
  }, {
    "left" : "return f1.print(this);",
    "right" : "return f1.print(this);",
    "info" : "ReturnStatement[29972-29994]:ReturnStatement[29972-29994]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30376-30382]:Modifier[30376-30382]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[30383-30389]:SimpleType[30383-30389]"
  }, {
    "left" : "toStringList",
    "right" : "toStringList",
    "info" : "SimpleName[30390-30402]:SimpleName[30390-30402]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30405-30823]:Block[30405-30823]"
  }, {
    "left" : "int size = size();",
    "right" : "int size = size();",
    "info" : "VariableDeclarationStatement[30415-30433]:VariableDeclarationStatement[30415-30433]"
  }, {
    "left" : "StringBuilder buf = new StringBuilder(20 * size);",
    "right" : "StringBuilder buf = new StringBuilder(20 * size);",
    "info" : "VariableDeclarationStatement[30442-30491]:VariableDeclarationStatement[30442-30491]"
  }, {
    "left" : "buf.append('[');",
    "right" : "buf.append('[');",
    "info" : "ExpressionStatement[30500-30516]:ExpressionStatement[30500-30516]"
  }, {
    "left" : "for (int i = 0; i < size; i++)",
    "right" : "for (int i = 0; i < size; i++)",
    "info" : "ForStatement[30525-30761]:ForStatement[30525-30761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30556-30761]:Block[30556-30761]"
  }, {
    "left" : "if (i > 0)",
    "right" : "if (i > 0)",
    "info" : "IfStatement[30570-30641]:IfStatement[30570-30641]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30581-30641]:Block[30581-30641]"
  }, {
    "left" : "buf.append(',').append(' ');",
    "right" : "buf.append(',').append(' ');",
    "info" : "ExpressionStatement[30599-30627]:ExpressionStatement[30599-30627]"
  }, {
    "left" : "buf.append(iTypes[i].getName());",
    "right" : "buf.append(iTypes[i].getName());",
    "info" : "ExpressionStatement[30654-30686]:ExpressionStatement[30654-30686]"
  }, {
    "left" : "buf.append('=');",
    "right" : "buf.append('=');",
    "info" : "ExpressionStatement[30699-30715]:ExpressionStatement[30699-30715]"
  }, {
    "left" : "buf.append(iValues[i]);",
    "right" : "buf.append(iValues[i]);",
    "info" : "ExpressionStatement[30728-30751]:ExpressionStatement[30728-30751]"
  }, {
    "left" : "buf.append(']');",
    "right" : "buf.append(']');",
    "info" : "ExpressionStatement[30770-30786]:ExpressionStatement[30770-30786]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[30795-30817]:ReturnStatement[30795-30817]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31115-31121]:Modifier[31115-31121]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[31122-31128]:SimpleType[31122-31128]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[31129-31137]:SimpleName[31129-31137]"
  }, {
    "left" : "String pattern",
    "right" : "String pattern",
    "info" : "SingleVariableDeclaration[31138-31152]:SingleVariableDeclaration[31138-31152]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31154-31296]:Block[31154-31296]"
  }, {
    "left" : "if (pattern == null)",
    "right" : "if (pattern == null)",
    "info" : "IfStatement[31164-31227]:IfStatement[31164-31227]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31185-31227]:Block[31185-31227]"
  }, {
    "left" : "return toString();",
    "right" : "return toString();",
    "info" : "ReturnStatement[31199-31217]:ReturnStatement[31199-31217]"
  }, {
    "left" : "return DateTimeFormat.forPattern(pattern).print(this);",
    "right" : "return DateTimeFormat.forPattern(pattern).print(this);",
    "info" : "ReturnStatement[31236-31290]:ReturnStatement[31236-31290]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31644-31650]:Modifier[31644-31650]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[31651-31657]:SimpleType[31651-31657]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[31658-31666]:SimpleName[31658-31666]"
  }, {
    "left" : "String pattern",
    "right" : "String pattern",
    "info" : "SingleVariableDeclaration[31667-31681]:SingleVariableDeclaration[31667-31681]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[31683-31696]:SingleVariableDeclaration[31683-31696]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31698-31859]:Block[31698-31859]"
  }, {
    "left" : "if (pattern == null)",
    "right" : "if (pattern == null)",
    "info" : "IfStatement[31708-31771]:IfStatement[31708-31771]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31729-31771]:Block[31729-31771]"
  }, {
    "left" : "return toString();",
    "right" : "return toString();",
    "info" : "ReturnStatement[31743-31761]:ReturnStatement[31743-31761]"
  }, {
    "left" : "return DateTimeFormat.forPattern(pattern).withLocale(locale).print(this);",
    "right" : "return DateTimeFormat.forPattern(pattern).withLocale(locale).print(this);",
    "info" : "ReturnStatement[31780-31853]:ReturnStatement[31780-31853]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32162-32168]:Modifier[32162-32168]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[32169-32175]:Modifier[32169-32175]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[32176-32181]:TYPE_DECLARATION_KIND[32176-32181]"
  }, {
    "left" : "Property",
    "right" : "Property",
    "info" : "SimpleName[32682-32690]:SimpleName[32682-32690]"
  }, {
    "left" : "Partial partial",
    "right" : "Partial partial",
    "info" : "SingleVariableDeclaration[32691-32706]:SingleVariableDeclaration[32691-32706]"
  }, {
    "left" : "int fieldIndex",
    "right" : "int fieldIndex",
    "info" : "SingleVariableDeclaration[32708-32722]:SingleVariableDeclaration[32708-32722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32724-32826]:Block[32724-32826]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[32738-32746]:SuperConstructorInvocation[32738-32746]"
  }, {
    "left" : "iPartial = partial;",
    "right" : "iPartial = partial;",
    "info" : "ExpressionStatement[32759-32778]:ExpressionStatement[32759-32778]"
  }, {
    "left" : "iFieldIndex = fieldIndex;",
    "right" : "iFieldIndex = fieldIndex;",
    "info" : "ExpressionStatement[32791-32816]:ExpressionStatement[32791-32816]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32952-32958]:Modifier[32952-32958]"
  }, {
    "left" : "DateTimeField",
    "right" : "DateTimeField",
    "info" : "SimpleType[32959-32972]:SimpleType[32959-32972]"
  }, {
    "left" : "getField",
    "right" : "getField",
    "info" : "SimpleName[32973-32981]:SimpleName[32973-32981]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32984-33046]:Block[32984-33046]"
  }, {
    "left" : "return iPartial.getField(iFieldIndex);",
    "right" : "return iPartial.getField(iFieldIndex);",
    "info" : "ReturnStatement[32998-33036]:ReturnStatement[32998-33036]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[33182-33191]:Modifier[33182-33191]"
  }, {
    "left" : "ReadablePartial",
    "right" : "ReadablePartial",
    "info" : "SimpleType[33192-33207]:SimpleType[33192-33207]"
  }, {
    "left" : "getReadablePartial",
    "right" : "getReadablePartial",
    "info" : "SimpleName[33208-33226]:SimpleName[33208-33226]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33229-33269]:Block[33229-33269]"
  }, {
    "left" : "return iPartial;",
    "right" : "return iPartial;",
    "info" : "ReturnStatement[33243-33259]:ReturnStatement[33243-33259]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33405-33411]:Modifier[33405-33411]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[33412-33419]:SimpleType[33412-33419]"
  }, {
    "left" : "getPartial",
    "right" : "getPartial",
    "info" : "SimpleName[33420-33430]:SimpleName[33420-33430]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33433-33473]:Block[33433-33473]"
  }, {
    "left" : "return iPartial;",
    "right" : "return iPartial;",
    "info" : "ReturnStatement[33447-33463]:ReturnStatement[33447-33463]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33595-33601]:Modifier[33595-33601]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[33602-33605]:PrimitiveType[33602-33605]"
  }, {
    "left" : "get",
    "right" : "get",
    "info" : "SimpleName[33606-33609]:SimpleName[33606-33609]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33612-33674]:Block[33612-33674]"
  }, {
    "left" : "return iPartial.getValue(iFieldIndex);",
    "right" : "return iPartial.getValue(iFieldIndex);",
    "info" : "ReturnStatement[33626-33664]:ReturnStatement[33626-33664]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34574-34580]:Modifier[34574-34580]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[34581-34588]:SimpleType[34581-34588]"
  }, {
    "left" : "addToCopy",
    "right" : "addToCopy",
    "info" : "SimpleName[34589-34598]:SimpleName[34589-34598]"
  }, {
    "left" : "int valueToAdd",
    "right" : "int valueToAdd",
    "info" : "SingleVariableDeclaration[34599-34613]:SingleVariableDeclaration[34599-34613]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34615-34817]:Block[34615-34817]"
  }, {
    "left" : "int[] newValues = iPartial.getValues();",
    "right" : "int[] newValues = iPartial.getValues();",
    "info" : "VariableDeclarationStatement[34629-34668]:VariableDeclarationStatement[34629-34668]"
  }, {
    "left" : "newValues = getField().add(iPartial, iFieldIndex, newValues, valueToAdd);",
    "right" : "newValues = getField().add(iPartial, iFieldIndex, newValues, valueToAdd);",
    "info" : "ExpressionStatement[34681-34754]:ExpressionStatement[34681-34754]"
  }, {
    "left" : "return new Partial(iPartial, newValues);",
    "right" : "return new Partial(iPartial, newValues);",
    "info" : "ReturnStatement[34767-34807]:ReturnStatement[34767-34807]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35691-35697]:Modifier[35691-35697]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[35698-35705]:SimpleType[35698-35705]"
  }, {
    "left" : "addWrapFieldToCopy",
    "right" : "addWrapFieldToCopy",
    "info" : "SimpleName[35706-35724]:SimpleName[35706-35724]"
  }, {
    "left" : "int valueToAdd",
    "right" : "int valueToAdd",
    "info" : "SingleVariableDeclaration[35725-35739]:SingleVariableDeclaration[35725-35739]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35741-35952]:Block[35741-35952]"
  }, {
    "left" : "int[] newValues = iPartial.getValues();",
    "right" : "int[] newValues = iPartial.getValues();",
    "info" : "VariableDeclarationStatement[35755-35794]:VariableDeclarationStatement[35755-35794]"
  }, {
    "left" : "newValues = getField().addWrapField(iPartial, iFieldIndex, newValues, valueToAdd);",
    "right" : "newValues = getField().addWrapField(iPartial, iFieldIndex, newValues, valueToAdd);",
    "info" : "ExpressionStatement[35807-35889]:ExpressionStatement[35807-35889]"
  }, {
    "left" : "return new Partial(iPartial, newValues);",
    "right" : "return new Partial(iPartial, newValues);",
    "info" : "ReturnStatement[35902-35942]:ReturnStatement[35902-35942]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36478-36484]:Modifier[36478-36484]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[36485-36492]:SimpleType[36485-36492]"
  }, {
    "left" : "setCopy",
    "right" : "setCopy",
    "info" : "SimpleName[36493-36500]:SimpleName[36493-36500]"
  }, {
    "left" : "int value",
    "right" : "int value",
    "info" : "SingleVariableDeclaration[36501-36510]:SingleVariableDeclaration[36501-36510]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36512-36709]:Block[36512-36709]"
  }, {
    "left" : "int[] newValues = iPartial.getValues();",
    "right" : "int[] newValues = iPartial.getValues();",
    "info" : "VariableDeclarationStatement[36526-36565]:VariableDeclarationStatement[36526-36565]"
  }, {
    "left" : "newValues = getField().set(iPartial, iFieldIndex, newValues, value);",
    "right" : "newValues = getField().set(iPartial, iFieldIndex, newValues, value);",
    "info" : "ExpressionStatement[36578-36646]:ExpressionStatement[36578-36646]"
  }, {
    "left" : "return new Partial(iPartial, newValues);",
    "right" : "return new Partial(iPartial, newValues);",
    "info" : "ReturnStatement[36659-36699]:ReturnStatement[36659-36699]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37237-37243]:Modifier[37237-37243]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[37244-37251]:SimpleType[37244-37251]"
  }, {
    "left" : "setCopy",
    "right" : "setCopy",
    "info" : "SimpleName[37252-37259]:SimpleName[37252-37259]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[37260-37271]:SingleVariableDeclaration[37260-37271]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[37273-37286]:SingleVariableDeclaration[37273-37286]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37288-37492]:Block[37288-37492]"
  }, {
    "left" : "int[] newValues = iPartial.getValues();",
    "right" : "int[] newValues = iPartial.getValues();",
    "info" : "VariableDeclarationStatement[37302-37341]:VariableDeclarationStatement[37302-37341]"
  }, {
    "left" : "newValues = getField().set(iPartial, iFieldIndex, newValues, text, locale);",
    "right" : "newValues = getField().set(iPartial, iFieldIndex, newValues, text, locale);",
    "info" : "ExpressionStatement[37354-37429]:ExpressionStatement[37354-37429]"
  }, {
    "left" : "return new Partial(iPartial, newValues);",
    "right" : "return new Partial(iPartial, newValues);",
    "info" : "ReturnStatement[37442-37482]:ReturnStatement[37442-37482]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37943-37949]:Modifier[37943-37949]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[37950-37957]:SimpleType[37950-37957]"
  }, {
    "left" : "setCopy",
    "right" : "setCopy",
    "info" : "SimpleName[37958-37965]:SimpleName[37958-37965]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[37966-37977]:SingleVariableDeclaration[37966-37977]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37979-38030]:Block[37979-38030]"
  }, {
    "left" : "return setCopy(text, null);",
    "right" : "return setCopy(text, null);",
    "info" : "ReturnStatement[37993-38020]:ReturnStatement[37993-38020]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38447-38453]:Modifier[38447-38453]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[38454-38461]:SimpleType[38454-38461]"
  }, {
    "left" : "withMaximumValue",
    "right" : "withMaximumValue",
    "info" : "SimpleName[38462-38478]:SimpleName[38462-38478]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38481-38539]:Block[38481-38539]"
  }, {
    "left" : "return setCopy(getMaximumValue());",
    "right" : "return setCopy(getMaximumValue());",
    "info" : "ReturnStatement[38495-38529]:ReturnStatement[38495-38529]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38874-38880]:Modifier[38874-38880]"
  }, {
    "left" : "Partial",
    "right" : "Partial",
    "info" : "SimpleType[38881-38888]:SimpleType[38881-38888]"
  }, {
    "left" : "withMinimumValue",
    "right" : "withMinimumValue",
    "info" : "SimpleName[38889-38905]:SimpleName[38889-38905]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38908-38966]:Block[38908-38966]"
  }, {
    "left" : "return setCopy(getMinimumValue());",
    "right" : "return setCopy(getMinimumValue());",
    "info" : "ReturnStatement[38922-38956]:ReturnStatement[38922-38956]"
  } ]
}