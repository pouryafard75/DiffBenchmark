{
  "matchedElements" : [
 {
    "left" : "class : FunctionRewriter",
    "right" : "class : FunctionRewriter",
    "info" : "TypeDeclaration[988-16224]:TypeDeclaration[988-16274]"
  }, {
    "left" : "compiler",
    "right" : "compiler",
    "info" : "FieldDeclaration[1455-1495]:FieldDeclaration[1455-1495]"
  }, {
    "left" : "SAVINGS_THRESHOLD",
    "right" : "SAVINGS_THRESHOLD",
    "info" : "FieldDeclaration[1598-1646]:FieldDeclaration[1598-1646]"
  }, {
    "left" : "package FunctionRewriter(compiler )",
    "right" : "package FunctionRewriter(compiler )",
    "info" : "MethodDeclaration[1650-1729]:MethodDeclaration[1650-1729]"
  }, {
    "left" : "public process(externs , root ) : void",
    "right" : "public process(externs , root ) : void",
    "info" : "MethodDeclaration[1733-3458]:MethodDeclaration[1733-3458]"
  }, {
    "left" : "public parseHelperCode(reducer ) : ",
    "right" : "public parseHelperCode(reducer ) : ",
    "info" : "MethodDeclaration[3462-3818]:MethodDeclaration[3462-3818]"
  }, {
    "left" : "private isReduceableFunctionExpression(n ) : boolean",
    "right" : "private isReduceableFunctionExpression(n ) : boolean",
    "info" : "MethodDeclaration[3822-3934]:MethodDeclaration[3822-3984]"
  }, {
    "left" : "class : Reduction",
    "right" : "class : Reduction",
    "info" : "TypeDeclaration[3938-4697]:TypeDeclaration[3988-4747]"
  }, {
    "left" : "parent",
    "right" : "parent",
    "info" : "FieldDeclaration[4026-4052]:FieldDeclaration[4076-4102]"
  }, {
    "left" : "oldChild",
    "right" : "oldChild",
    "info" : "FieldDeclaration[4057-4085]:FieldDeclaration[4107-4135]"
  }, {
    "left" : "newChild",
    "right" : "newChild",
    "info" : "FieldDeclaration[4090-4118]:FieldDeclaration[4140-4168]"
  }, {
    "left" : "package Reduction(parent , oldChild , newChild )",
    "right" : "package Reduction(parent , oldChild , newChild )",
    "info" : "MethodDeclaration[4124-4276]:MethodDeclaration[4174-4326]"
  }, {
    "left" : "package apply() : void",
    "right" : "package apply() : void",
    "info" : "MethodDeclaration[4282-4474]:MethodDeclaration[4332-4524]"
  }, {
    "left" : "package estimateSavings() : int",
    "right" : "package estimateSavings() : int",
    "info" : "MethodDeclaration[4480-4693]:MethodDeclaration[4530-4743]"
  }, {
    "left" : "class : ReductionGatherer",
    "right" : "class : ReductionGatherer",
    "info" : "TypeDeclaration[4701-5941]:TypeDeclaration[4751-5991]"
  }, {
    "left" : "reducers",
    "right" : "reducers",
    "info" : "FieldDeclaration[4932-4969]:FieldDeclaration[4982-5019]"
  }, {
    "left" : "reductions",
    "right" : "reductions",
    "info" : "FieldDeclaration[4974-5028]:FieldDeclaration[5024-5078]"
  }, {
    "left" : "package ReductionGatherer(reducers , reductions ...)",
    "right" : "package ReductionGatherer(reducers , reductions ...)",
    "info" : "MethodDeclaration[5034-5406]:MethodDeclaration[5084-5456]"
  }, {
    "left" : "public shouldTraverse(raversal , node , parent ) : boolean",
    "right" : "public shouldTraverse(raversal , node , parent ) : boolean",
    "info" : "MethodDeclaration[5412-5842]:MethodDeclaration[5462-5892]"
  }, {
    "left" : "public visit(traversal , node , parent ) : void",
    "right" : "public visit(traversal , node , parent ) : void",
    "info" : "MethodDeclaration[5849-5937]:MethodDeclaration[5899-5987]"
  }, {
    "left" : "class : Reducer",
    "right" : "class : Reducer",
    "info" : "TypeDeclaration[5945-7110]:TypeDeclaration[5995-7160]"
  }, {
    "left" : "public abstract getHelperSource() : ",
    "right" : "public abstract getHelperSource() : ",
    "info" : "MethodDeclaration[6064-6182]:MethodDeclaration[6114-6232]"
  }, {
    "left" : "public abstract reduce(node ) : ",
    "right" : "public abstract reduce(node ) : ",
    "info" : "MethodDeclaration[6188-6359]:MethodDeclaration[6238-6409]"
  }, {
    "left" : "protected buildCallNode(methodName , argumentNode , lineno int, charno int) : ",
    "right" : "protected buildCallNode(methodName , argumentNode , lineno int, charno int) : ",
    "info" : "MethodDeclaration[6365-7106]:MethodDeclaration[6415-7156]"
  }, {
    "left" : "class : EmptyFunctionReducer",
    "right" : "class : EmptyFunctionReducer",
    "info" : "TypeDeclaration[7114-7993]:TypeDeclaration[7164-8043]"
  }, {
    "left" : "FACTORY_METHOD_NAME",
    "right" : "FACTORY_METHOD_NAME",
    "info" : "FieldDeclaration[7421-7484]:FieldDeclaration[7471-7534]"
  }, {
    "left" : "HELPER_SOURCE",
    "right" : "HELPER_SOURCE",
    "info" : "FieldDeclaration[7489-7625]:FieldDeclaration[7539-7675]"
  }, {
    "left" : "public getHelperSource() : ",
    "right" : "public getHelperSource() : ",
    "info" : "MethodDeclaration[7631-7712]:MethodDeclaration[7681-7762]"
  }, {
    "left" : "public reduce(node ) : ",
    "right" : "public reduce(node ) : ",
    "info" : "MethodDeclaration[7718-7989]:MethodDeclaration[7768-8039]"
  }, {
    "left" : "class : SingleReturnStatementReducer",
    "right" : "class : SingleReturnStatementReducer",
    "info" : "TypeDeclaration[7997-8665]:TypeDeclaration[8047-8715]"
  }, {
    "left" : "protected maybeGetSingleReturnRValue(functionNode ) : ",
    "right" : "protected maybeGetSingleReturnRValue(functionNode ) : ",
    "info" : "MethodDeclaration[8178-8661]:MethodDeclaration[8228-8711]"
  }, {
    "left" : "class : IdentityReducer",
    "right" : "class : IdentityReducer",
    "info" : "TypeDeclaration[8669-10359]:TypeDeclaration[8719-10409]"
  }, {
    "left" : "FACTORY_METHOD_NAME",
    "right" : "FACTORY_METHOD_NAME",
    "info" : "FieldDeclaration[8973-9039]:FieldDeclaration[9023-9089]"
  }, {
    "left" : "HELPER_SOURCE",
    "right" : "HELPER_SOURCE",
    "info" : "FieldDeclaration[9044-9271]:FieldDeclaration[9094-9321]"
  }, {
    "left" : "public getHelperSource() : ",
    "right" : "public getHelperSource() : ",
    "info" : "MethodDeclaration[9277-9358]:MethodDeclaration[9327-9408]"
  }, {
    "left" : "public reduce(node ) : ",
    "right" : "public reduce(node ) : ",
    "info" : "MethodDeclaration[9364-9700]:MethodDeclaration[9414-9750]"
  }, {
    "left" : "private isIdentityFunction(functionNode ) : boolean",
    "right" : "private isIdentityFunction(functionNode ) : boolean",
    "info" : "MethodDeclaration[9706-10355]:MethodDeclaration[9756-10405]"
  }, {
    "left" : "class : ReturnConstantReducer",
    "right" : "class : ReturnConstantReducer",
    "info" : "TypeDeclaration[10363-11950]:TypeDeclaration[10413-12000]"
  }, {
    "left" : "FACTORY_METHOD_NAME",
    "right" : "FACTORY_METHOD_NAME",
    "info" : "FieldDeclaration[10713-10778]:FieldDeclaration[10763-10828]"
  }, {
    "left" : "HELPER_SOURCE",
    "right" : "HELPER_SOURCE",
    "info" : "FieldDeclaration[10783-11000]:FieldDeclaration[10833-11050]"
  }, {
    "left" : "public getHelperSource() : ",
    "right" : "public getHelperSource() : ",
    "info" : "MethodDeclaration[11006-11087]:MethodDeclaration[11056-11137]"
  }, {
    "left" : "public reduce(node ) : ",
    "right" : "public reduce(node ) : ",
    "info" : "MethodDeclaration[11093-11470]:MethodDeclaration[11143-11520]"
  }, {
    "left" : "private getValueNode(functionNode ) : ",
    "right" : "private getValueNode(functionNode ) : ",
    "info" : "MethodDeclaration[11476-11946]:MethodDeclaration[11526-11996]"
  }, {
    "left" : "class : GetterReducer",
    "right" : "class : GetterReducer",
    "info" : "TypeDeclaration[11954-13754]:TypeDeclaration[12004-13804]"
  }, {
    "left" : "FACTORY_METHOD_NAME",
    "right" : "FACTORY_METHOD_NAME",
    "info" : "FieldDeclaration[12264-12323]:FieldDeclaration[12314-12373]"
  }, {
    "left" : "HELPER_SOURCE",
    "right" : "HELPER_SOURCE",
    "info" : "FieldDeclaration[12328-12549]:FieldDeclaration[12378-12599]"
  }, {
    "left" : "public getHelperSource() : ",
    "right" : "public getHelperSource() : ",
    "info" : "MethodDeclaration[12555-12636]:MethodDeclaration[12605-12686]"
  }, {
    "left" : "public reduce(node ) : ",
    "right" : "public reduce(node ) : ",
    "info" : "MethodDeclaration[12642-13199]:MethodDeclaration[12692-13249]"
  }, {
    "left" : "private getGetPropertyName(functionNode ) : ",
    "right" : "private getGetPropertyName(functionNode ) : ",
    "info" : "MethodDeclaration[13205-13750]:MethodDeclaration[13255-13800]"
  }, {
    "left" : "class : SetterReducer",
    "right" : "class : SetterReducer",
    "info" : "TypeDeclaration[13758-16222]:TypeDeclaration[13808-16272]"
  }, {
    "left" : "FACTORY_METHOD_NAME",
    "right" : "FACTORY_METHOD_NAME",
    "info" : "FieldDeclaration[14056-14115]:FieldDeclaration[14106-14165]"
  }, {
    "left" : "HELPER_SOURCE",
    "right" : "HELPER_SOURCE",
    "info" : "FieldDeclaration[14120-14424]:FieldDeclaration[14170-14474]"
  }, {
    "left" : "public getHelperSource() : ",
    "right" : "public getHelperSource() : ",
    "info" : "MethodDeclaration[14430-14511]:MethodDeclaration[14480-14561]"
  }, {
    "left" : "public reduce(node ) : ",
    "right" : "public reduce(node ) : ",
    "info" : "MethodDeclaration[14517-15074]:MethodDeclaration[14567-15124]"
  }, {
    "left" : "private getSetPropertyName(functionNode ) : ",
    "right" : "private getSetPropertyName(functionNode ) : ",
    "info" : "MethodDeclaration[15080-16218]:MethodDeclaration[15130-16268]"
  } ],
  "mappings" : [
 {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1404-1409]:TYPE_DECLARATION_KIND[1404-1409]"
  }, {
    "left" : "FunctionRewriter",
    "right" : "FunctionRewriter",
    "info" : "SimpleName[1650-1666]:SimpleName[1650-1666]"
  }, {
    "left" : "AbstractCompiler compiler",
    "right" : "AbstractCompiler compiler",
    "info" : "SingleVariableDeclaration[1667-1692]:SingleVariableDeclaration[1667-1692]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1694-1729]:Block[1694-1729]"
  }, {
    "left" : "this.compiler = compiler;",
    "right" : "this.compiler = compiler;",
    "info" : "ExpressionStatement[1700-1725]:ExpressionStatement[1700-1725]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[1733-1742]:MarkerAnnotation[1733-1742]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1745-1751]:Modifier[1745-1751]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[1752-1756]:PrimitiveType[1752-1756]"
  }, {
    "left" : "process",
    "right" : "process",
    "info" : "SimpleName[1757-1764]:SimpleName[1757-1764]"
  }, {
    "left" : "Node externs",
    "right" : "Node externs",
    "info" : "SingleVariableDeclaration[1765-1777]:SingleVariableDeclaration[1765-1777]"
  }, {
    "left" : "Node root",
    "right" : "Node root",
    "info" : "SingleVariableDeclaration[1779-1788]:SingleVariableDeclaration[1779-1788]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1790-3458]:Block[1790-3458]"
  }, {
    "left" : "List<Reducer> reducers = ImmutableList.of(new ReturnConstantReducer(),\n                                              new GetterReducer(),\n                                              new SetterReducer(),\n                                              new EmptyFunctionReducer(),\n                                              new IdentityReducer());",
    "right" : "List<Reducer> reducers = ImmutableList.of(new ReturnConstantReducer(),\n                                              new GetterReducer(),\n                                              new SetterReducer(),\n                                              new EmptyFunctionReducer(),\n                                              new IdentityReducer());",
    "info" : "VariableDeclarationStatement[1796-2144]:VariableDeclarationStatement[1796-2144]"
  }, {
    "left" : "Multimap<Reducer, Reduction> reductionMap = HashMultimap.create();",
    "right" : "Multimap<Reducer, Reduction> reductionMap = HashMultimap.create();",
    "info" : "VariableDeclarationStatement[2150-2216]:VariableDeclarationStatement[2150-2216]"
  }, {
    "left" : "NodeTraversal.traverse(compiler, root,\n                           new ReductionGatherer(reducers, reductionMap));",
    "right" : "NodeTraversal.traverse(compiler, root,\n                           new ReductionGatherer(reducers, reductionMap));",
    "info" : "ExpressionStatement[2336-2449]:ExpressionStatement[2336-2449]"
  }, {
    "left" : "for (Reducer reducer : reducers)",
    "right" : "for (Reducer reducer : reducers)",
    "info" : "EnhancedForStatement[2515-3454]:EnhancedForStatement[2515-3454]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2548-3454]:Block[2548-3454]"
  }, {
    "left" : "Collection<Reduction> reductions = reductionMap.get(reducer);",
    "right" : "Collection<Reduction> reductions = reductionMap.get(reducer);",
    "info" : "VariableDeclarationStatement[2556-2617]:VariableDeclarationStatement[2556-2617]"
  }, {
    "left" : "if (reductions.isEmpty())",
    "right" : "if (reductions.isEmpty())",
    "info" : "IfStatement[2624-2677]:IfStatement[2624-2677]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2650-2677]:Block[2650-2677]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[2660-2669]:ContinueStatement[2660-2669]"
  }, {
    "left" : "Node helperCode = parseHelperCode(reducer);",
    "right" : "Node helperCode = parseHelperCode(reducer);",
    "info" : "VariableDeclarationStatement[2685-2728]:VariableDeclarationStatement[2685-2728]"
  }, {
    "left" : "if (helperCode == null)",
    "right" : "if (helperCode == null)",
    "info" : "IfStatement[2735-2786]:IfStatement[2735-2786]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2759-2786]:Block[2759-2786]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[2769-2778]:ContinueStatement[2769-2778]"
  }, {
    "left" : "int helperCodeCost = InlineCostEstimator.getCost(helperCode);",
    "right" : "int helperCodeCost = InlineCostEstimator.getCost(helperCode);",
    "info" : "VariableDeclarationStatement[2794-2855]:VariableDeclarationStatement[2794-2855]"
  }, {
    "left" : "int savings = 0;",
    "right" : "int savings = 0;",
    "info" : "VariableDeclarationStatement[2889-2905]:VariableDeclarationStatement[2889-2905]"
  }, {
    "left" : "for (Reduction reduction : reductions)",
    "right" : "for (Reduction reduction : reductions)",
    "info" : "EnhancedForStatement[2912-3008]:EnhancedForStatement[2912-3008]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2951-3008]:Block[2951-3008]"
  }, {
    "left" : "savings += reduction.estimateSavings();",
    "right" : "savings += reduction.estimateSavings();",
    "info" : "ExpressionStatement[2961-3000]:ExpressionStatement[2961-3000]"
  }, {
    "left" : "if (savings > (helperCodeCost + SAVINGS_THRESHOLD))",
    "right" : "if (savings > (helperCodeCost + SAVINGS_THRESHOLD))",
    "info" : "IfStatement[3144-3448]:IfStatement[3144-3448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3196-3448]:Block[3196-3448]"
  }, {
    "left" : "for (Reduction reduction : reductions)",
    "right" : "for (Reduction reduction : reductions)",
    "info" : "EnhancedForStatement[3206-3285]:EnhancedForStatement[3206-3285]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3245-3285]:Block[3245-3285]"
  }, {
    "left" : "reduction.apply();",
    "right" : "reduction.apply();",
    "info" : "ExpressionStatement[3257-3275]:ExpressionStatement[3257-3275]"
  }, {
    "left" : "Node addingRoot = compiler.getNodeForCodeInsertion(null);",
    "right" : "Node addingRoot = compiler.getNodeForCodeInsertion(null);",
    "info" : "VariableDeclarationStatement[3295-3352]:VariableDeclarationStatement[3295-3352]"
  }, {
    "left" : "addingRoot.addChildrenToFront(helperCode);",
    "right" : "addingRoot.addChildrenToFront(helperCode);",
    "info" : "ExpressionStatement[3361-3403]:ExpressionStatement[3361-3403]"
  }, {
    "left" : "compiler.reportCodeChange();",
    "right" : "compiler.reportCodeChange();",
    "info" : "ExpressionStatement[3412-3440]:ExpressionStatement[3412-3440]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3584-3590]:Modifier[3584-3590]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[3591-3595]:SimpleType[3591-3595]"
  }, {
    "left" : "parseHelperCode",
    "right" : "parseHelperCode",
    "info" : "SimpleName[3596-3611]:SimpleName[3596-3611]"
  }, {
    "left" : "Reducer reducer",
    "right" : "Reducer reducer",
    "info" : "SingleVariableDeclaration[3612-3627]:SingleVariableDeclaration[3612-3627]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3629-3818]:Block[3629-3818]"
  }, {
    "left" : "Node root = compiler.parseSyntheticCode(\n        reducer.getClass().toString() + \":helper\", reducer.getHelperSource());",
    "right" : "Node root = compiler.parseSyntheticCode(\n        reducer.getClass().toString() + \":helper\", reducer.getHelperSource());",
    "info" : "VariableDeclarationStatement[3635-3754]:VariableDeclarationStatement[3635-3754]"
  }, {
    "left" : "return (root != null) ? root.removeFirstChild() : null;",
    "right" : "return (root != null) ? root.removeFirstChild() : null;",
    "info" : "ReturnStatement[3759-3814]:ReturnStatement[3759-3814]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[3822-3829]:Modifier[3822-3829]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3830-3836]:Modifier[3830-3836]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[3837-3844]:PrimitiveType[3837-3844]"
  }, {
    "left" : "isReduceableFunctionExpression",
    "right" : "isReduceableFunctionExpression",
    "info" : "SimpleName[3845-3875]:SimpleName[3845-3875]"
  }, {
    "left" : "Node n",
    "right" : "Node n",
    "info" : "SingleVariableDeclaration[3876-3882]:SingleVariableDeclaration[3876-3882]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3884-3934]:Block[3884-3984]"
  }, {
    "left" : "return NodeUtil.isFunctionExpression(n);",
    "right" : "return NodeUtil.isFunctionExpression(n)\n        && !NodeUtil.isGetOrSetKey(n.getParent());",
    "info" : "ReturnStatement[3890-3930]:ReturnStatement[3890-3980]"
  }, {
    "left" : "NodeUtil.isFunctionExpression(n)",
    "right" : "NodeUtil.isFunctionExpression(n)",
    "info" : "MethodInvocation[3897-3929]:MethodInvocation[3897-3929]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[3996-4003]:Modifier[4046-4053]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[4004-4009]:TYPE_DECLARATION_KIND[4054-4059]"
  }, {
    "left" : "Reduction",
    "right" : "Reduction",
    "info" : "SimpleName[4124-4133]:SimpleName[4174-4183]"
  }, {
    "left" : "Node parent",
    "right" : "Node parent",
    "info" : "SingleVariableDeclaration[4134-4145]:SingleVariableDeclaration[4184-4195]"
  }, {
    "left" : "Node oldChild",
    "right" : "Node oldChild",
    "info" : "SingleVariableDeclaration[4147-4160]:SingleVariableDeclaration[4197-4210]"
  }, {
    "left" : "Node newChild",
    "right" : "Node newChild",
    "info" : "SingleVariableDeclaration[4162-4175]:SingleVariableDeclaration[4212-4225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4177-4276]:Block[4227-4326]"
  }, {
    "left" : "this.parent = parent;",
    "right" : "this.parent = parent;",
    "info" : "ExpressionStatement[4185-4206]:ExpressionStatement[4235-4256]"
  }, {
    "left" : "this.oldChild = oldChild;",
    "right" : "this.oldChild = oldChild;",
    "info" : "ExpressionStatement[4213-4238]:ExpressionStatement[4263-4288]"
  }, {
    "left" : "this.newChild = newChild;",
    "right" : "this.newChild = newChild;",
    "info" : "ExpressionStatement[4245-4270]:ExpressionStatement[4295-4320]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4372-4376]:PrimitiveType[4422-4426]"
  }, {
    "left" : "apply",
    "right" : "apply",
    "info" : "SimpleName[4377-4382]:SimpleName[4427-4432]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4385-4474]:Block[4435-4524]"
  }, {
    "left" : "parent.replaceChild(oldChild, newChild);",
    "right" : "parent.replaceChild(oldChild, newChild);",
    "info" : "ExpressionStatement[4393-4433]:ExpressionStatement[4443-4483]"
  }, {
    "left" : "compiler.reportCodeChange();",
    "right" : "compiler.reportCodeChange();",
    "info" : "ExpressionStatement[4440-4468]:ExpressionStatement[4490-4518]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[4562-4565]:PrimitiveType[4612-4615]"
  }, {
    "left" : "estimateSavings",
    "right" : "estimateSavings",
    "info" : "SimpleName[4566-4581]:SimpleName[4616-4631]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4584-4693]:Block[4634-4743]"
  }, {
    "left" : "return InlineCostEstimator.getCost(oldChild) -\n          InlineCostEstimator.getCost(newChild);",
    "right" : "return InlineCostEstimator.getCost(oldChild) -\n          InlineCostEstimator.getCost(newChild);",
    "info" : "ReturnStatement[4592-4687]:ReturnStatement[4642-4737]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[4874-4881]:Modifier[4924-4931]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[4882-4887]:TYPE_DECLARATION_KIND[4932-4937]"
  }, {
    "left" : "ReductionGatherer",
    "right" : "ReductionGatherer",
    "info" : "SimpleName[5226-5243]:SimpleName[5276-5293]"
  }, {
    "left" : "List<Reducer> reducers",
    "right" : "List<Reducer> reducers",
    "info" : "SingleVariableDeclaration[5244-5266]:SingleVariableDeclaration[5294-5316]"
  }, {
    "left" : "Multimap<Reducer, Reduction> reductions",
    "right" : "Multimap<Reducer, Reduction> reductions",
    "info" : "SingleVariableDeclaration[5290-5329]:SingleVariableDeclaration[5340-5379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5331-5406]:Block[5381-5456]"
  }, {
    "left" : "this.reducers = reducers;",
    "right" : "this.reducers = reducers;",
    "info" : "ExpressionStatement[5339-5364]:ExpressionStatement[5389-5414]"
  }, {
    "left" : "this.reductions = reductions;",
    "right" : "this.reductions = reductions;",
    "info" : "ExpressionStatement[5371-5400]:ExpressionStatement[5421-5450]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[5412-5421]:MarkerAnnotation[5462-5471]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5426-5432]:Modifier[5476-5482]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5433-5440]:PrimitiveType[5483-5490]"
  }, {
    "left" : "shouldTraverse",
    "right" : "shouldTraverse",
    "info" : "SimpleName[5441-5455]:SimpleName[5491-5505]"
  }, {
    "left" : "NodeTraversal raversal",
    "right" : "NodeTraversal raversal",
    "info" : "SingleVariableDeclaration[5456-5478]:SingleVariableDeclaration[5506-5528]"
  }, {
    "left" : "Node node",
    "right" : "Node node",
    "info" : "SingleVariableDeclaration[5514-5523]:SingleVariableDeclaration[5564-5573]"
  }, {
    "left" : "Node parent",
    "right" : "Node parent",
    "info" : "SingleVariableDeclaration[5559-5570]:SingleVariableDeclaration[5609-5620]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5572-5842]:Block[5622-5892]"
  }, {
    "left" : "for (Reducer reducer : reducers)",
    "right" : "for (Reducer reducer : reducers)",
    "info" : "EnhancedForStatement[5580-5817]:EnhancedForStatement[5630-5867]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5613-5817]:Block[5663-5867]"
  }, {
    "left" : "Node replacement = reducer.reduce(node);",
    "right" : "Node replacement = reducer.reduce(node);",
    "info" : "VariableDeclarationStatement[5623-5663]:VariableDeclarationStatement[5673-5713]"
  }, {
    "left" : "if (replacement != node)",
    "right" : "if (replacement != node)",
    "info" : "IfStatement[5672-5809]:IfStatement[5722-5859]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5697-5809]:Block[5747-5859]"
  }, {
    "left" : "reductions.put(reducer, new Reduction(parent, node, replacement));",
    "right" : "reductions.put(reducer, new Reduction(parent, node, replacement));",
    "info" : "ExpressionStatement[5709-5775]:ExpressionStatement[5759-5825]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[5786-5799]:ReturnStatement[5836-5849]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[5824-5836]:ReturnStatement[5874-5886]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[5849-5858]:MarkerAnnotation[5899-5908]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5863-5869]:Modifier[5913-5919]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5870-5874]:PrimitiveType[5920-5924]"
  }, {
    "left" : "visit",
    "right" : "visit",
    "info" : "SimpleName[5875-5880]:SimpleName[5925-5930]"
  }, {
    "left" : "NodeTraversal traversal",
    "right" : "NodeTraversal traversal",
    "info" : "SingleVariableDeclaration[5881-5904]:SingleVariableDeclaration[5931-5954]"
  }, {
    "left" : "Node node",
    "right" : "Node node",
    "info" : "SingleVariableDeclaration[5906-5915]:SingleVariableDeclaration[5956-5965]"
  }, {
    "left" : "Node parent",
    "right" : "Node parent",
    "info" : "SingleVariableDeclaration[5917-5928]:SingleVariableDeclaration[5967-5978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5930-5937]:Block[5980-5987]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[6028-6036]:Modifier[6078-6086]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6037-6043]:Modifier[6087-6093]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[6044-6049]:TYPE_DECLARATION_KIND[6094-6099]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[6148-6156]:Modifier[6198-6206]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[6157-6163]:SimpleType[6207-6213]"
  }, {
    "left" : "getHelperSource",
    "right" : "getHelperSource",
    "info" : "SimpleName[6164-6179]:SimpleName[6214-6229]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[6327-6335]:Modifier[6377-6385]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[6336-6340]:SimpleType[6386-6390]"
  }, {
    "left" : "reduce",
    "right" : "reduce",
    "info" : "SimpleName[6341-6347]:SimpleName[6391-6397]"
  }, {
    "left" : "Node node",
    "right" : "Node node",
    "info" : "SingleVariableDeclaration[6348-6357]:SingleVariableDeclaration[6398-6407]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[6675-6684]:Modifier[6725-6734]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[6685-6690]:Modifier[6735-6740]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[6691-6695]:SimpleType[6741-6745]"
  }, {
    "left" : "buildCallNode",
    "right" : "buildCallNode",
    "info" : "SimpleName[6696-6709]:SimpleName[6746-6759]"
  }, {
    "left" : "String methodName",
    "right" : "String methodName",
    "info" : "SingleVariableDeclaration[6710-6727]:SingleVariableDeclaration[6760-6777]"
  }, {
    "left" : "Node argumentNode",
    "right" : "Node argumentNode",
    "info" : "SingleVariableDeclaration[6729-6746]:SingleVariableDeclaration[6779-6796]"
  }, {
    "left" : "int lineno",
    "right" : "int lineno",
    "info" : "SingleVariableDeclaration[6787-6797]:SingleVariableDeclaration[6837-6847]"
  }, {
    "left" : "int charno",
    "right" : "int charno",
    "info" : "SingleVariableDeclaration[6799-6809]:SingleVariableDeclaration[6849-6859]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6811-7106]:Block[6861-7156]"
  }, {
    "left" : "Node call = new Node(Token.CALL, lineno, charno);",
    "right" : "Node call = new Node(Token.CALL, lineno, charno);",
    "info" : "VariableDeclarationStatement[6819-6868]:VariableDeclarationStatement[6869-6918]"
  }, {
    "left" : "call.putBooleanProp(Node.FREE_CALL, true);",
    "right" : "call.putBooleanProp(Node.FREE_CALL, true);",
    "info" : "ExpressionStatement[6875-6917]:ExpressionStatement[6925-6967]"
  }, {
    "left" : "call.addChildToBack(Node.newString(Token.NAME, methodName));",
    "right" : "call.addChildToBack(Node.newString(Token.NAME, methodName));",
    "info" : "ExpressionStatement[6924-6984]:ExpressionStatement[6974-7034]"
  }, {
    "left" : "if (argumentNode != null)",
    "right" : "if (argumentNode != null)",
    "info" : "IfStatement[6991-7081]:IfStatement[7041-7131]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7017-7081]:Block[7067-7131]"
  }, {
    "left" : "call.addChildToBack(argumentNode.cloneTree());",
    "right" : "call.addChildToBack(argumentNode.cloneTree());",
    "info" : "ExpressionStatement[7027-7073]:ExpressionStatement[7077-7123]"
  }, {
    "left" : "return call;",
    "right" : "return call;",
    "info" : "ReturnStatement[7088-7100]:ReturnStatement[7138-7150]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[7357-7364]:Modifier[7407-7414]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7365-7371]:Modifier[7415-7421]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[7372-7377]:TYPE_DECLARATION_KIND[7422-7427]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7631-7640]:MarkerAnnotation[7681-7690]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7645-7651]:Modifier[7695-7701]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[7652-7658]:SimpleType[7702-7708]"
  }, {
    "left" : "getHelperSource",
    "right" : "getHelperSource",
    "info" : "SimpleName[7659-7674]:SimpleName[7709-7724]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7677-7712]:Block[7727-7762]"
  }, {
    "left" : "return HELPER_SOURCE;",
    "right" : "return HELPER_SOURCE;",
    "info" : "ReturnStatement[7685-7706]:ReturnStatement[7735-7756]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7718-7727]:MarkerAnnotation[7768-7777]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7732-7738]:Modifier[7782-7788]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[7739-7743]:SimpleType[7789-7793]"
  }, {
    "left" : "reduce",
    "right" : "reduce",
    "info" : "SimpleName[7744-7750]:SimpleName[7794-7800]"
  }, {
    "left" : "Node node",
    "right" : "Node node",
    "info" : "SingleVariableDeclaration[7751-7760]:SingleVariableDeclaration[7801-7810]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7762-7989]:Block[7812-8039]"
  }, {
    "left" : "if (NodeUtil.isEmptyFunctionExpression(node))",
    "right" : "if (NodeUtil.isEmptyFunctionExpression(node))",
    "info" : "IfStatement[7770-7983]:IfStatement[7820-8033]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7816-7947]:Block[7866-7997]"
  }, {
    "left" : "return buildCallNode(FACTORY_METHOD_NAME, null,\n                             node.getLineno(), node.getCharno());",
    "right" : "return buildCallNode(FACTORY_METHOD_NAME, null,\n                             node.getLineno(), node.getCharno());",
    "info" : "ReturnStatement[7826-7939]:ReturnStatement[7876-7989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7953-7983]:Block[8003-8033]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[7963-7975]:ReturnStatement[8013-8025]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[8104-8112]:Modifier[8154-8162]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8113-8119]:Modifier[8163-8169]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[8120-8125]:TYPE_DECLARATION_KIND[8170-8175]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[8314-8323]:Modifier[8364-8373]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[8324-8329]:Modifier[8374-8379]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[8330-8334]:SimpleType[8380-8384]"
  }, {
    "left" : "maybeGetSingleReturnRValue",
    "right" : "maybeGetSingleReturnRValue",
    "info" : "SimpleName[8335-8361]:SimpleName[8385-8411]"
  }, {
    "left" : "Node functionNode",
    "right" : "Node functionNode",
    "info" : "SingleVariableDeclaration[8362-8379]:SingleVariableDeclaration[8412-8429]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8381-8661]:Block[8431-8711]"
  }, {
    "left" : "Node body = functionNode.getLastChild();",
    "right" : "Node body = functionNode.getLastChild();",
    "info" : "VariableDeclarationStatement[8389-8429]:VariableDeclarationStatement[8439-8479]"
  }, {
    "left" : "if (!body.hasOneChild())",
    "right" : "if (!body.hasOneChild())",
    "info" : "IfStatement[8436-8491]:IfStatement[8486-8541]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8461-8491]:Block[8511-8541]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[8471-8483]:ReturnStatement[8521-8533]"
  }, {
    "left" : "Node statement = body.getFirstChild();",
    "right" : "Node statement = body.getFirstChild();",
    "info" : "VariableDeclarationStatement[8499-8537]:VariableDeclarationStatement[8549-8587]"
  }, {
    "left" : "if (statement.getType() == Token.RETURN)",
    "right" : "if (statement.getType() == Token.RETURN)",
    "info" : "IfStatement[8544-8636]:IfStatement[8594-8686]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8585-8636]:Block[8635-8686]"
  }, {
    "left" : "return statement.getFirstChild();",
    "right" : "return statement.getFirstChild();",
    "info" : "ReturnStatement[8595-8628]:ReturnStatement[8645-8678]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[8643-8655]:ReturnStatement[8693-8705]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[8893-8900]:Modifier[8943-8950]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8901-8907]:Modifier[8951-8957]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[8908-8913]:TYPE_DECLARATION_KIND[8958-8963]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[9277-9286]:MarkerAnnotation[9327-9336]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9291-9297]:Modifier[9341-9347]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[9298-9304]:SimpleType[9348-9354]"
  }, {
    "left" : "getHelperSource",
    "right" : "getHelperSource",
    "info" : "SimpleName[9305-9320]:SimpleName[9355-9370]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9323-9358]:Block[9373-9408]"
  }, {
    "left" : "return HELPER_SOURCE;",
    "right" : "return HELPER_SOURCE;",
    "info" : "ReturnStatement[9331-9352]:ReturnStatement[9381-9402]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[9364-9373]:MarkerAnnotation[9414-9423]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9378-9384]:Modifier[9428-9434]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[9385-9389]:SimpleType[9435-9439]"
  }, {
    "left" : "reduce",
    "right" : "reduce",
    "info" : "SimpleName[9390-9396]:SimpleName[9440-9446]"
  }, {
    "left" : "Node node",
    "right" : "Node node",
    "info" : "SingleVariableDeclaration[9397-9406]:SingleVariableDeclaration[9447-9456]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9408-9700]:Block[9458-9750]"
  }, {
    "left" : "if (!isReduceableFunctionExpression(node))",
    "right" : "if (!isReduceableFunctionExpression(node))",
    "info" : "IfStatement[9416-9489]:IfStatement[9466-9539]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9459-9489]:Block[9509-9539]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[9469-9481]:ReturnStatement[9519-9531]"
  }, {
    "left" : "if (isIdentityFunction(node))",
    "right" : "if (isIdentityFunction(node))",
    "info" : "IfStatement[9497-9694]:IfStatement[9547-9744]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9527-9658]:Block[9577-9708]"
  }, {
    "left" : "return buildCallNode(FACTORY_METHOD_NAME, null,\n                             node.getLineno(), node.getCharno());",
    "right" : "return buildCallNode(FACTORY_METHOD_NAME, null,\n                             node.getLineno(), node.getCharno());",
    "info" : "ReturnStatement[9537-9650]:ReturnStatement[9587-9700]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9664-9694]:Block[9714-9744]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[9674-9686]:ReturnStatement[9724-9736]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[9889-9896]:Modifier[9939-9946]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[9897-9904]:PrimitiveType[9947-9954]"
  }, {
    "left" : "isIdentityFunction",
    "right" : "isIdentityFunction",
    "info" : "SimpleName[9905-9923]:SimpleName[9955-9973]"
  }, {
    "left" : "Node functionNode",
    "right" : "Node functionNode",
    "info" : "SingleVariableDeclaration[9924-9941]:SingleVariableDeclaration[9974-9991]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9943-10355]:Block[9993-10405]"
  }, {
    "left" : "Node argList = functionNode.getFirstChild().getNext();",
    "right" : "Node argList = functionNode.getFirstChild().getNext();",
    "info" : "VariableDeclarationStatement[9951-10005]:VariableDeclarationStatement[10001-10055]"
  }, {
    "left" : "Node paramNode = argList.getFirstChild();",
    "right" : "Node paramNode = argList.getFirstChild();",
    "info" : "VariableDeclarationStatement[10012-10053]:VariableDeclarationStatement[10062-10103]"
  }, {
    "left" : "if (paramNode == null)",
    "right" : "if (paramNode == null)",
    "info" : "IfStatement[10060-10114]:IfStatement[10110-10164]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10083-10114]:Block[10133-10164]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[10093-10106]:ReturnStatement[10143-10156]"
  }, {
    "left" : "Node value = maybeGetSingleReturnRValue(functionNode);",
    "right" : "Node value = maybeGetSingleReturnRValue(functionNode);",
    "info" : "VariableDeclarationStatement[10122-10176]:VariableDeclarationStatement[10172-10226]"
  }, {
    "left" : "if (value != null &&\n          NodeUtil.isName(value) &&\n          value.getString().equals(paramNode.getString()))",
    "right" : "if (value != null &&\n          NodeUtil.isName(value) &&\n          value.getString().equals(paramNode.getString()))",
    "info" : "IfStatement[10183-10329]:IfStatement[10233-10379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10299-10329]:Block[10349-10379]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[10309-10321]:ReturnStatement[10359-10371]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[10336-10349]:ReturnStatement[10386-10399]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[10621-10628]:Modifier[10671-10678]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10629-10635]:Modifier[10679-10685]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[10636-10641]:TYPE_DECLARATION_KIND[10686-10691]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[11006-11015]:MarkerAnnotation[11056-11065]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11020-11026]:Modifier[11070-11076]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[11027-11033]:SimpleType[11077-11083]"
  }, {
    "left" : "getHelperSource",
    "right" : "getHelperSource",
    "info" : "SimpleName[11034-11049]:SimpleName[11084-11099]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11052-11087]:Block[11102-11137]"
  }, {
    "left" : "return HELPER_SOURCE;",
    "right" : "return HELPER_SOURCE;",
    "info" : "ReturnStatement[11060-11081]:ReturnStatement[11110-11131]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[11093-11102]:MarkerAnnotation[11143-11152]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11107-11113]:Modifier[11157-11163]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[11114-11118]:SimpleType[11164-11168]"
  }, {
    "left" : "reduce",
    "right" : "reduce",
    "info" : "SimpleName[11119-11125]:SimpleName[11169-11175]"
  }, {
    "left" : "Node node",
    "right" : "Node node",
    "info" : "SingleVariableDeclaration[11126-11135]:SingleVariableDeclaration[11176-11185]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11137-11470]:Block[11187-11520]"
  }, {
    "left" : "if (!isReduceableFunctionExpression(node))",
    "right" : "if (!isReduceableFunctionExpression(node))",
    "info" : "IfStatement[11145-11218]:IfStatement[11195-11268]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11188-11218]:Block[11238-11268]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[11198-11210]:ReturnStatement[11248-11260]"
  }, {
    "left" : "Node valueNode = getValueNode(node);",
    "right" : "Node valueNode = getValueNode(node);",
    "info" : "VariableDeclarationStatement[11226-11262]:VariableDeclarationStatement[11276-11312]"
  }, {
    "left" : "if (valueNode != null)",
    "right" : "if (valueNode != null)",
    "info" : "IfStatement[11269-11464]:IfStatement[11319-11514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11292-11428]:Block[11342-11478]"
  }, {
    "left" : "return buildCallNode(FACTORY_METHOD_NAME, valueNode,\n                             node.getLineno(), node.getCharno());",
    "right" : "return buildCallNode(FACTORY_METHOD_NAME, valueNode,\n                             node.getLineno(), node.getCharno());",
    "info" : "ReturnStatement[11302-11420]:ReturnStatement[11352-11470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11434-11464]:Block[11484-11514]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[11444-11456]:ReturnStatement[11494-11506]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[11711-11718]:Modifier[11761-11768]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[11719-11723]:SimpleType[11769-11773]"
  }, {
    "left" : "getValueNode",
    "right" : "getValueNode",
    "info" : "SimpleName[11724-11736]:SimpleName[11774-11786]"
  }, {
    "left" : "Node functionNode",
    "right" : "Node functionNode",
    "info" : "SingleVariableDeclaration[11737-11754]:SingleVariableDeclaration[11787-11804]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11756-11946]:Block[11806-11996]"
  }, {
    "left" : "Node value = maybeGetSingleReturnRValue(functionNode);",
    "right" : "Node value = maybeGetSingleReturnRValue(functionNode);",
    "info" : "VariableDeclarationStatement[11764-11818]:VariableDeclarationStatement[11814-11868]"
  }, {
    "left" : "if (value != null &&\n          NodeUtil.isImmutableValue(value))",
    "right" : "if (value != null &&\n          NodeUtil.isImmutableValue(value))",
    "info" : "IfStatement[11825-11921]:IfStatement[11875-11971]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11890-11921]:Block[11940-11971]"
  }, {
    "left" : "return value;",
    "right" : "return value;",
    "info" : "ReturnStatement[11900-11913]:ReturnStatement[11950-11963]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[11928-11940]:ReturnStatement[11978-11990]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[12186-12193]:Modifier[12236-12243]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12194-12200]:Modifier[12244-12250]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[12201-12206]:TYPE_DECLARATION_KIND[12251-12256]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[12555-12564]:MarkerAnnotation[12605-12614]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12569-12575]:Modifier[12619-12625]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[12576-12582]:SimpleType[12626-12632]"
  }, {
    "left" : "getHelperSource",
    "right" : "getHelperSource",
    "info" : "SimpleName[12583-12598]:SimpleName[12633-12648]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12601-12636]:Block[12651-12686]"
  }, {
    "left" : "return HELPER_SOURCE;",
    "right" : "return HELPER_SOURCE;",
    "info" : "ReturnStatement[12609-12630]:ReturnStatement[12659-12680]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[12642-12651]:MarkerAnnotation[12692-12701]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12656-12662]:Modifier[12706-12712]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[12663-12667]:SimpleType[12713-12717]"
  }, {
    "left" : "reduce",
    "right" : "reduce",
    "info" : "SimpleName[12668-12674]:SimpleName[12718-12724]"
  }, {
    "left" : "Node node",
    "right" : "Node node",
    "info" : "SingleVariableDeclaration[12675-12684]:SingleVariableDeclaration[12725-12734]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12686-13199]:Block[12736-13249]"
  }, {
    "left" : "if (!isReduceableFunctionExpression(node))",
    "right" : "if (!isReduceableFunctionExpression(node))",
    "info" : "IfStatement[12694-12767]:IfStatement[12744-12817]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12737-12767]:Block[12787-12817]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[12747-12759]:ReturnStatement[12797-12809]"
  }, {
    "left" : "Node propName = getGetPropertyName(node);",
    "right" : "Node propName = getGetPropertyName(node);",
    "info" : "VariableDeclarationStatement[12775-12816]:VariableDeclarationStatement[12825-12866]"
  }, {
    "left" : "if (propName != null)",
    "right" : "if (propName != null)",
    "info" : "IfStatement[12823-13193]:IfStatement[12873-13243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12845-13157]:Block[12895-13207]"
  }, {
    "left" : "if (propName.getType() != Token.STRING)",
    "right" : "if (propName.getType() != Token.STRING)",
    "info" : "IfStatement[12855-13022]:IfStatement[12905-13072]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12895-13022]:Block[12945-13072]"
  }, {
    "left" : "throw new IllegalStateException(\n              \"Expected STRING, got \" + Token.name(propName.getType()));",
    "right" : "throw new IllegalStateException(\n              \"Expected STRING, got \" + Token.name(propName.getType()));",
    "info" : "ThrowStatement[12907-13012]:ThrowStatement[12957-13062]"
  }, {
    "left" : "return buildCallNode(FACTORY_METHOD_NAME, propName,\n                             node.getLineno(), node.getCharno());",
    "right" : "return buildCallNode(FACTORY_METHOD_NAME, propName,\n                             node.getLineno(), node.getCharno());",
    "info" : "ReturnStatement[13032-13149]:ReturnStatement[13082-13199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13163-13193]:Block[13213-13243]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[13173-13185]:ReturnStatement[13223-13235]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[13449-13456]:Modifier[13499-13506]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[13457-13461]:SimpleType[13507-13511]"
  }, {
    "left" : "getGetPropertyName",
    "right" : "getGetPropertyName",
    "info" : "SimpleName[13462-13480]:SimpleName[13512-13530]"
  }, {
    "left" : "Node functionNode",
    "right" : "Node functionNode",
    "info" : "SingleVariableDeclaration[13481-13498]:SingleVariableDeclaration[13531-13548]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13500-13750]:Block[13550-13800]"
  }, {
    "left" : "Node value = maybeGetSingleReturnRValue(functionNode);",
    "right" : "Node value = maybeGetSingleReturnRValue(functionNode);",
    "info" : "VariableDeclarationStatement[13508-13562]:VariableDeclarationStatement[13558-13612]"
  }, {
    "left" : "if (value != null &&\n          NodeUtil.isGetProp(value) &&\n          NodeUtil.isThis(value.getFirstChild()))",
    "right" : "if (value != null &&\n          NodeUtil.isGetProp(value) &&\n          NodeUtil.isThis(value.getFirstChild()))",
    "info" : "IfStatement[13569-13725]:IfStatement[13619-13775]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13679-13725]:Block[13729-13775]"
  }, {
    "left" : "return value.getLastChild();",
    "right" : "return value.getLastChild();",
    "info" : "ReturnStatement[13689-13717]:ReturnStatement[13739-13767]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[13732-13744]:ReturnStatement[13782-13794]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[13999-14006]:Modifier[14049-14056]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[14007-14013]:Modifier[14057-14063]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[14014-14019]:TYPE_DECLARATION_KIND[14064-14069]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[14430-14439]:MarkerAnnotation[14480-14489]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14444-14450]:Modifier[14494-14500]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[14451-14457]:SimpleType[14501-14507]"
  }, {
    "left" : "getHelperSource",
    "right" : "getHelperSource",
    "info" : "SimpleName[14458-14473]:SimpleName[14508-14523]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14476-14511]:Block[14526-14561]"
  }, {
    "left" : "return HELPER_SOURCE;",
    "right" : "return HELPER_SOURCE;",
    "info" : "ReturnStatement[14484-14505]:ReturnStatement[14534-14555]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[14517-14526]:MarkerAnnotation[14567-14576]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14531-14537]:Modifier[14581-14587]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[14538-14542]:SimpleType[14588-14592]"
  }, {
    "left" : "reduce",
    "right" : "reduce",
    "info" : "SimpleName[14543-14549]:SimpleName[14593-14599]"
  }, {
    "left" : "Node node",
    "right" : "Node node",
    "info" : "SingleVariableDeclaration[14550-14559]:SingleVariableDeclaration[14600-14609]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14561-15074]:Block[14611-15124]"
  }, {
    "left" : "if (!isReduceableFunctionExpression(node))",
    "right" : "if (!isReduceableFunctionExpression(node))",
    "info" : "IfStatement[14569-14642]:IfStatement[14619-14692]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14612-14642]:Block[14662-14692]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[14622-14634]:ReturnStatement[14672-14684]"
  }, {
    "left" : "Node propName = getSetPropertyName(node);",
    "right" : "Node propName = getSetPropertyName(node);",
    "info" : "VariableDeclarationStatement[14650-14691]:VariableDeclarationStatement[14700-14741]"
  }, {
    "left" : "if (propName != null)",
    "right" : "if (propName != null)",
    "info" : "IfStatement[14698-15068]:IfStatement[14748-15118]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14720-15032]:Block[14770-15082]"
  }, {
    "left" : "if (propName.getType() != Token.STRING)",
    "right" : "if (propName.getType() != Token.STRING)",
    "info" : "IfStatement[14730-14897]:IfStatement[14780-14947]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14770-14897]:Block[14820-14947]"
  }, {
    "left" : "throw new IllegalStateException(\n              \"Expected STRING, got \" + Token.name(propName.getType()));",
    "right" : "throw new IllegalStateException(\n              \"Expected STRING, got \" + Token.name(propName.getType()));",
    "info" : "ThrowStatement[14782-14887]:ThrowStatement[14832-14937]"
  }, {
    "left" : "return buildCallNode(FACTORY_METHOD_NAME, propName,\n                             node.getLineno(), node.getCharno());",
    "right" : "return buildCallNode(FACTORY_METHOD_NAME, propName,\n                             node.getLineno(), node.getCharno());",
    "info" : "ReturnStatement[14907-15024]:ReturnStatement[14957-15074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15038-15068]:Block[15088-15118]"
  }, {
    "left" : "return node;",
    "right" : "return node;",
    "info" : "ReturnStatement[15048-15060]:ReturnStatement[15098-15110]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[15336-15343]:Modifier[15386-15393]"
  }, {
    "left" : "Node",
    "right" : "Node",
    "info" : "SimpleType[15344-15348]:SimpleType[15394-15398]"
  }, {
    "left" : "getSetPropertyName",
    "right" : "getSetPropertyName",
    "info" : "SimpleName[15349-15367]:SimpleName[15399-15417]"
  }, {
    "left" : "Node functionNode",
    "right" : "Node functionNode",
    "info" : "SingleVariableDeclaration[15368-15385]:SingleVariableDeclaration[15418-15435]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15387-16218]:Block[15437-16268]"
  }, {
    "left" : "Node body = functionNode.getLastChild();",
    "right" : "Node body = functionNode.getLastChild();",
    "info" : "VariableDeclarationStatement[15395-15435]:VariableDeclarationStatement[15445-15485]"
  }, {
    "left" : "if (!body.hasOneChild())",
    "right" : "if (!body.hasOneChild())",
    "info" : "IfStatement[15442-15497]:IfStatement[15492-15547]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15467-15497]:Block[15517-15547]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[15477-15489]:ReturnStatement[15527-15539]"
  }, {
    "left" : "Node argList = functionNode.getFirstChild().getNext();",
    "right" : "Node argList = functionNode.getFirstChild().getNext();",
    "info" : "VariableDeclarationStatement[15505-15559]:VariableDeclarationStatement[15555-15609]"
  }, {
    "left" : "Node paramNode = argList.getFirstChild();",
    "right" : "Node paramNode = argList.getFirstChild();",
    "info" : "VariableDeclarationStatement[15566-15607]:VariableDeclarationStatement[15616-15657]"
  }, {
    "left" : "if (paramNode == null)",
    "right" : "if (paramNode == null)",
    "info" : "IfStatement[15614-15667]:IfStatement[15664-15717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15637-15667]:Block[15687-15717]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[15647-15659]:ReturnStatement[15697-15709]"
  }, {
    "left" : "Node statement = body.getFirstChild();",
    "right" : "Node statement = body.getFirstChild();",
    "info" : "VariableDeclarationStatement[15675-15713]:VariableDeclarationStatement[15725-15763]"
  }, {
    "left" : "if (!NodeUtil.isExprAssign(statement))",
    "right" : "if (!NodeUtil.isExprAssign(statement))",
    "info" : "IfStatement[15720-15789]:IfStatement[15770-15839]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15759-15789]:Block[15809-15839]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[15769-15781]:ReturnStatement[15819-15831]"
  }, {
    "left" : "Node assign = statement.getFirstChild();",
    "right" : "Node assign = statement.getFirstChild();",
    "info" : "VariableDeclarationStatement[15797-15837]:VariableDeclarationStatement[15847-15887]"
  }, {
    "left" : "Node lhs = assign.getFirstChild();",
    "right" : "Node lhs = assign.getFirstChild();",
    "info" : "VariableDeclarationStatement[15844-15878]:VariableDeclarationStatement[15894-15928]"
  }, {
    "left" : "if (NodeUtil.isGetProp(lhs) && NodeUtil.isThis(lhs.getFirstChild()))",
    "right" : "if (NodeUtil.isGetProp(lhs) && NodeUtil.isThis(lhs.getFirstChild()))",
    "info" : "IfStatement[15885-16193]:IfStatement[15935-16243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15954-16193]:Block[16004-16243]"
  }, {
    "left" : "Node rhs = assign.getLastChild();",
    "right" : "Node rhs = assign.getLastChild();",
    "info" : "VariableDeclarationStatement[15964-15997]:VariableDeclarationStatement[16014-16047]"
  }, {
    "left" : "if (NodeUtil.isName(rhs) &&\n            rhs.getString().equals(paramNode.getString()))",
    "right" : "if (NodeUtil.isName(rhs) &&\n            rhs.getString().equals(paramNode.getString()))",
    "info" : "IfStatement[16006-16185]:IfStatement[16056-16235]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16093-16185]:Block[16143-16235]"
  }, {
    "left" : "Node propertyName = lhs.getLastChild();",
    "right" : "Node propertyName = lhs.getLastChild();",
    "info" : "VariableDeclarationStatement[16105-16144]:VariableDeclarationStatement[16155-16194]"
  }, {
    "left" : "return propertyName;",
    "right" : "return propertyName;",
    "info" : "ReturnStatement[16155-16175]:ReturnStatement[16205-16225]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[16200-16212]:ReturnStatement[16250-16262]"
  } ]
}